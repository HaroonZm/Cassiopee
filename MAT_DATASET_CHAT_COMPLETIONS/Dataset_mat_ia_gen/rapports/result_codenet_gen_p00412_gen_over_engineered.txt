================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:27:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Car:
    def __init__(self, number: int):
        self.number = number

class Lane:
    def __init__(self, lane_id: int):
        self.lane_id = lane_id
        self.queue = []

    def add_car(self, car: Car):
        self.queue.append(car)

    def remove_front_car(self) -> Car:
        if self.queue:
            return self.queue.pop(0)
        raise IndexError("Trying to remove a car from an empty lane")

    def car_count(self) -> int:
        return len(self.queue)

    def front_car_number(self) -> int:
        if self.queue:
            return self.queue[0].number
        raise IndexError("No car at front")

class LaneSelectorStrategy:
    def select_lane(self, lanes: list[Lane]) -> Lane:
        raise NotImplementedError()

class MinLengthThenMinIdSelector(LaneSelectorStrategy):
    def select_lane(self, lanes: list[Lane]) -> Lane:
        # Select lane with fewest cars; if tie, smallest lane ID
        min_count = min(lane.car_count() for lane in lanes)
        candidate_lanes = [lane for lane in lanes if lane.car_count() == min_count]
        candidate_lanes.sort(key=lambda l: l.lane_id)
        return candidate_lanes[0]

class GasStation:
    def __init__(self, lane_count: int, selector: LaneSelectorStrategy):
        self.lanes = [Lane(i+1) for i in range(lane_count)]
        self.selector = selector
        self.car_to_lane = {}

    def car_enters(self, car_number: int):
        car = Car(car_number)
        lane = self.selector.select_lane(self.lanes)
        lane.add_car(car)
        self.car_to_lane[car_number] = lane.lane_id

    def fueling_finished(self, lane_id: int) -> int:
        lane = self.lanes[lane_id-1]
        car = lane.remove_front_car()
        return car.number

class InputParser:
    def __init__(self):
        self.N = 0
        self.M = 0
        self.commands = []

    def parse(self):
        import sys
        first_line = sys.stdin.readline()
        self.N, self.M = map(int, first_line.split())
        for _ in range(self.M):
            line = sys.stdin.readline()
            parts = line.split()
            cmd_type = int(parts[0])
            arg = int(parts[1])
            self.commands.append((cmd_type, arg))

class OutputHandler:
    def __init__(self):
        self.results = []

    def record(self, number: int):
        self.results.append(number)

    def flush(self):
        for number in self.results:
            print(number)

class GasStationApp:
    def __init__(self):
        self.parser = InputParser()
        self.output_handler = OutputHandler()
        self.gas_station = None

    def run(self):
        self.parser.parse()
        self.gas_station = GasStation(self.parser.N, MinLengthThenMinIdSelector())
        for cmd_type, arg in self.parser.commands:
            if cmd_type == 1:
                self.gas_station.car_enters(arg)
            elif cmd_type == 0:
                finished_car_number = self.gas_station.fueling_finished(arg)
                self.output_handler.record(finished_car_number)
        self.output_handler.flush()

if __name__ == "__main__":
    GasStationApp().run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Car' (ID: 4004)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.4743390083312988
    2. '```' → logprob: -1.5993390083312988
    3. '   ' → logprob: -2.099339008331299
    4. '\' → logprob: -2.224339008331299
    5. ' ' → logprob: -2.349339008331299
    6. ':' → logprob: -2.474339008331299
    7. '<|end|>' → logprob: -3.724339008331299
    8. '' → logprob: -4.099339008331299
    9. ' pass' → logprob: -4.224339008331299
    10. '    ' → logprob: -4.349339008331299

Token 4: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7105898857116699
    2. '    ' → logprob: -2.21058988571167
    3. '   ' → logprob: -2.58558988571167
    4. '```' → logprob: -2.71058988571167
    5. '_' → logprob: -2.83558988571167
    6. ' pass' → logprob: -3.21058988571167
    7. ' def' → logprob: -3.46058988571167
    8. 'pass' → logprob: -4.08558988571167
    9. ''' → logprob: -4.08558988571167
    10. '\' → logprob: -4.21058988571167

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08005192875862122
    2. ' __' → logprob: -2.705051898956299
    3. '_' → logprob: -5.705051898956299
    4. '__' → logprob: -5.955051898956299
    5. ' ' → logprob: -6.580051898956299
    6. '  ' → logprob: -7.705051898956299
    7. ' init' → logprob: -7.955051898956299
    8. ' _' → logprob: -8.455052375793457
    9. ' ___' → logprob: -8.455052375793457
    10. '    ' → logprob: -8.455052375793457

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.5094070477061905e-05
    2. ' init' → logprob: -11.250015258789062
    3. '_init' → logprob: -13.250015258789062
    4. '	init' → logprob: -16.750015258789062
    5. '_' → logprob: -17.000015258789062
    6. 'ini' → logprob: -17.125015258789062
    7. 'i' → logprob: -19.000015258789062
    8. 'inite' → logprob: -19.250015258789062
    9. 'innit' → logprob: -19.250015258789062
    10. 'int' → logprob: -19.500015258789062

Token 7: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6989564299583435
    2. '__(' → logprob: -0.6989564299583435
    3. '_' → logprob: -5.448956489562988
    4. '(' → logprob: -7.448956489562988
    5. '__(
' → logprob: -7.448956489562988
    6. '__((' → logprob: -8.573956489562988
    7. '__('' → logprob: -9.698956489562988
    8. '_(' → logprob: -10.573956489562988
    9. '__(*' → logprob: -11.198956489562988
    10. '___' → logprob: -11.323956489562988

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0032304716296494007
    2. ')' → logprob: -6.253230571746826
    3. ' self' → logprob: -7.003230571746826
    4. ' )' → logprob: -8.003230094909668
    5. 's' → logprob: -11.128230094909668
    6. ' ' → logprob: -11.378230094909668
    7. 'car' → logprob: -11.503230094909668
    8. '(self' → logprob: -12.378230094909668
    9. ' ' → logprob: -12.628230094909668
    10. 'space' → logprob: -12.878230094909668

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9600940942764282
    2. '(' → logprob: -1.0850940942764282
    3. ',' → logprob: -1.7100940942764282
    4. '.' → logprob: -3.3350939750671387
    5. '<|end|>' → logprob: -3.8350939750671387
    6. '_' → logprob: -4.335093975067139
    7. '):' → logprob: -4.585093975067139
    8. ' ' → logprob: -5.210093975067139
    9. ':' → logprob: -5.960093975067139
    10. ' (' → logprob: -6.210093975067139

Token 10: ' number' (ID: 2086)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.013937240466475487
    2. ')' → logprob: -4.888937473297119
    3. ' make' → logprob: -5.638937473297119
    4. ' ' → logprob: -6.888937473297119
    5. 'make' → logprob: -7.388937473297119
    6. 'c' → logprob: -7.888937473297119
    7. ' model' → logprob: -8.888936996459961
    8. 'model' → logprob: -9.138936996459961
    9. 'color' → logprob: -9.638936996459961
    10. ' )
' → logprob: -9.763936996459961

Token 11: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08448830246925354
    2. '_' → logprob: -2.5844883918762207
    3. '_)' → logprob: -6.209488391876221
    4. '=' → logprob: -6.959488391876221
    5. '):' → logprob: -7.084488391876221
    6. ',' → logprob: -7.334488391876221
    7. ')_' → logprob: -7.584488391876221
    8. ' )' → logprob: -8.459487915039062
    9. 's' → logprob: -8.584487915039062
    10. ' _' → logprob: -8.959487915039062

Token 12: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.363738477230072
    2. ' int' → logprob: -2.238738536834717
    3. ')' → logprob: -2.863738536834717
    4. ' )' → logprob: -2.863738536834717
    5. 's' → logprob: -3.363738536834717
    6. ' str' → logprob: -3.613738536834717
    7. 'int' → logprob: -4.488738536834717
    8. '  ' → logprob: -6.238738536834717
    9. '_' → logprob: -6.238738536834717
    10. ' car' → logprob: -6.363738536834717

Token 13: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45141440629959106
    2. '):' → logprob: -1.3264143466949463
    3. ',' → logprob: -2.3264143466949463
    4. ' ,' → logprob: -9.951414108276367
    5. ':' → logprob: -10.326414108276367
    6. '),' → logprob: -10.451414108276367
    7. ' ' → logprob: -10.826414108276367
    8. '   ' → logprob: -10.951414108276367
    9. ' )' → logprob: -11.576414108276367
    10. ' ):' → logprob: -11.951414108276367

Token 14: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9359985589981079
    2. '       ' → logprob: -1.560998558998108
    3. '    ' → logprob: -1.685998558998108
    4. ' 
' → logprob: -2.3109984397888184
    5. '\' → logprob: -3.8109984397888184
    6. '   ' → logprob: -3.9359984397888184
    7. '     
' → logprob: -4.185998439788818
    8. '_' → logprob: -4.310998439788818
    9. '<|end|>' → logprob: -4.685998439788818
    10. '        ' → logprob: -5.310998439788818

Token 15: ' self' (ID: 1051)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6874967813491821
    2. 'self' (adapté à ' self') → logprob: -1.5624967813491821
    3. ' self' → logprob: -2.1874966621398926
    4. '       ' → logprob: -2.5624966621398926
    5. 's' → logprob: -2.8124966621398926
    6. '_' → logprob: -4.687496662139893
    7. '   ' → logprob: -4.687496662139893
    8. '        ' → logprob: -4.937496662139893
    9. ' ' → logprob: -5.187496662139893
    10. '    ' → logprob: -5.937496662139893

Token 16: '.number' (ID: 25737)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.001089258585125208
    2. '.number' → logprob: -7.126089096069336
    3. '.car' → logprob: -8.751089096069336
    4. ' .' → logprob: -9.126089096069336
    5. ' number' → logprob: -12.501089096069336
    6. '.n' → logprob: -13.126089096069336
    7. ' ' → logprob: -13.251089096069336
    8. '._' → logprob: -13.376089096069336
    9. 'number' → logprob: -13.751089096069336
    10. '.color' → logprob: -14.001089096069336

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07458643615245819
    2. ' =' → logprob: -3.0745863914489746
    3. '.' → logprob: -3.9495863914489746
    4. '_' → logprob: -5.324586391448975
    5. ' ' → logprob: -6.699586391448975
    6. ')' → logprob: -8.949586868286133
    7. ',' → logprob: -9.699586868286133
    8. '<|end|>' → logprob: -10.449586868286133
    9. '.=' → logprob: -11.199586868286133
    10. 'space' → logprob: -11.324586868286133

Token 18: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.0486290380358696
    2. 'number' → logprob: -3.04862904548645
    3. ' ' → logprob: -10.173628807067871
    4. '[number' → logprob: -13.798628807067871
    5. '_number' → logprob: -14.173628807067871
    6. '	number' → logprob: -14.548628807067871
    7. '(number' → logprob: -14.673628807067871
    8. ' )' → logprob: -15.173628807067871
    9. ' numbers' → logprob: -15.798628807067871
    10. ' Number' → logprob: -16.173629760742188

Token 19: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3088396489620209
    2. '<|end|>' → logprob: -2.0588395595550537
    3. '
' → logprob: -2.9338395595550537
    4. '\n' → logprob: -3.4338395595550537
    5. '\' → logprob: -3.8088395595550537
    6. '' → logprob: -4.808839797973633
    7. '```' → logprob: -5.058839797973633
    8. ' ' → logprob: -5.933839797973633
    9. '.
' → logprob: -6.058839797973633
    10. 'newline' → logprob: -6.558839797973633

Token 20: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19642768800258636
    2. '.' → logprob: -3.071427583694458
    3. '\n' → logprob: -3.321427583694458
    4. '   ' → logprob: -3.571427583694458
    5. '<|end|>' → logprob: -4.196427822113037
    6. '\' → logprob: -4.571427822113037
    7. '    
' → logprob: -4.696427822113037
    8. ' 
' → logprob: -4.696427822113037
    9. '```' → logprob: -4.696427822113037
    10. '  
' → logprob: -5.821427822113037

Token 21: ' Lane' (ID: 39354)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0028589628636837006
    2. ' Car' → logprob: -6.127859115600586
    3. ' Space' → logprob: -8.502859115600586
    4. ' ' → logprob: -9.127859115600586
    5. ' space' → logprob: -9.752859115600586
    6. '<|end|>' → logprob: -10.127859115600586
    7. ' Motorcycle' → logprob: -10.377859115600586
    8. ' 空' → logprob: -10.627859115600586
    9. ' Automobile' → logprob: -11.002859115600586
    10. ' ‌' → logprob: -11.127859115600586

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002590873744338751
    2. '(' → logprob: -6.127590656280518
    3. ' :' → logprob: -8.252591133117676
    4. '():' → logprob: -9.877591133117676
    5. '.' → logprob: -10.252591133117676
    6. '):' → logprob: -11.127591133117676
    7. ':**' → logprob: -11.877591133117676
    8. '```' → logprob: -11.877591133117676
    9. '(:' → logprob: -12.127591133117676
    10. '<|end|>' → logprob: -12.377591133117676

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5355172753334045
    2. ' ' → logprob: -1.6605172157287598
    3. '    ' → logprob: -1.9105172157287598
    4. ' 
' → logprob: -3.4105172157287598
    5. '<|end|>' → logprob: -4.28551721572876
    6. '    
' → logprob: -4.41051721572876
    7. ' def' → logprob: -5.28551721572876
    8. '(' → logprob: -6.03551721572876
    9. '     
' → logprob: -6.16051721572876
    10. '_' → logprob: -6.53551721572876

Token 24: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.27623221278190613
    2. ' def' → logprob: -1.5262322425842285
    3. '   ' → logprob: -3.9012322425842285
    4. '    ' → logprob: -6.2762322425842285
    5. 'd' → logprob: -7.0262322425842285
    6. ' ' → logprob: -7.5262322425842285
    7. 'de' → logprob: -8.40123176574707
    8. ' de' → logprob: -9.02623176574707
    9. ' d' → logprob: -9.65123176574707
    10. '  ' → logprob: -11.15123176574707

Token 25: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46699315309524536
    2. ' __' → logprob: -1.0919930934906006
    3. ' ' → logprob: -4.34199333190918
    4. ' ‌' → logprob: -4.34199333190918
    5. ' ​' → logprob: -6.09199333190918
    6. ' ﻿' → logprob: -6.34199333190918
    7. ' add' → logprob: -6.59199333190918
    8. ' ```' → logprob: -6.59199333190918
    9. '  ' → logprob: -6.96699333190918
    10. '_' → logprob: -7.09199333190918

Token 26: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.023293538717553e-05
    2. 'ini' → logprob: -11.000030517578125
    3. 'i' → logprob: -11.500030517578125
    4. 'in' → logprob: -12.875030517578125
    5. 'nit' → logprob: -14.750030517578125
    6. 'def' → logprob: -15.625030517578125
    7. 'int' → logprob: -16.250030517578125
    8. '_init' → logprob: -17.125030517578125
    9. 'innit' → logprob: -17.750030517578125
    10. '```' → logprob: -18.375030517578125

Token 27: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.021786298602819443
    2. '__' → logprob: -4.021786212921143
    3. '(' → logprob: -6.271786212921143
    4. '__(
' → logprob: -7.146786212921143
    5. '__((' → logprob: -7.271786212921143
    6. '(self' → logprob: -9.2717866897583
    7. ' (' → logprob: -10.2717866897583
    8. '__('' → logprob: -10.6467866897583
    9. '__(*' → logprob: -10.6467866897583
    10. '<|end|>' → logprob: -10.6467866897583

Token 28: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004156875889748335
    2. ' self' → logprob: -5.504157066345215
    3. ')' → logprob: -9.504157066345215
    4. '0' → logprob: -14.129157066345215
    5. ' ' → logprob: -14.129157066345215
    6. ' )' → logprob: -14.254157066345215
    7. 'car' → logprob: -15.004157066345215
    8. '   ' → logprob: -15.629157066345215
    9. 'se' → logprob: -16.0041561126709
    10. ' car' → logprob: -16.0041561126709

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014737951569259167
    2. ' ,' → logprob: -6.626473903656006
    3. 'self' → logprob: -9.251473426818848
    4. ',self' → logprob: -10.751473426818848
    5. ')' → logprob: -11.001473426818848
    6. '<|end|>' → logprob: -11.876473426818848
    7. '(self' → logprob: -13.376473426818848
    8. ' ' → logprob: -13.501473426818848
    9. '‌,' → logprob: -14.126473426818848
    10. ' self' → logprob: -14.251473426818848

Token 30: ' lane' (ID: 39989)
  Prédit: ' cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cars' → logprob: -0.3110243082046509
    2. ' )' → logprob: -1.9360243082046509
    3. ')' → logprob: -3.1860241889953613
    4. ' car' → logprob: -3.6860241889953613
    5. ' capacity' → logprob: -3.9360241889953613
    6. ' space' → logprob: -4.811024188995361
    7. ' number' → logprob: -5.311024188995361
    8. 'cars' → logprob: -5.436024188995361
    9. ' self' → logprob: -5.686024188995361
    10. ' length' → logprob: -5.936024188995361

Token 31: '_id' (ID: 1537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4372740089893341
    2. '_size' → logprob: -1.6872739791870117
    3. '_number' → logprob: -2.4372739791870117
    4. '_name' → logprob: -3.9372739791870117
    5. '_type' → logprob: -3.9372739791870117
    6. '_length' → logprob: -4.187273979187012
    7. '_id' → logprob: -4.687273979187012
    8. 's' → logprob: -5.687273979187012
    9. ' _' → logprob: -5.937273979187012
    10. ':' → logprob: -5.937273979187012

Token 32: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03440086916089058
    2. '):' → logprob: -4.034400939941406
    3. ',' → logprob: -4.159400939941406
    4. ')' → logprob: -8.284400939941406
    5. ':int' → logprob: -8.784400939941406
    6. ' :' → logprob: -9.784400939941406
    7. ' ,' → logprob: -11.034400939941406
    8. ' ):' → logprob: -11.034400939941406
    9. '=' → logprob: -12.409400939941406
    10. ' )' → logprob: -13.909400939941406

Token 33: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.11308498680591583
    2. 'int' → logprob: -2.2380850315093994
    3. ' str' → logprob: -8.48808479309082
    4. ' ' → logprob: -10.48808479309082
    5. ':int' → logprob: -11.73808479309082
    6. ')' → logprob: -12.36308479309082
    7. ' in' → logprob: -12.73808479309082
    8. '=int' → logprob: -12.86308479309082
    9. ' )' → logprob: -12.98808479309082
    10. 'str' → logprob: -13.36308479309082

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5864003896713257
    2. ',' → logprob: -0.8364003896713257
    3. ')' → logprob: -4.586400508880615
    4. '):
' → logprob: -9.836400032043457
    5. '   ' → logprob: -9.961400032043457
    6. ' ,' → logprob: -9.961400032043457
    7. '       ' → logprob: -10.336400032043457
    8. '),' → logprob: -11.211400032043457
    9. ' ):' → logprob: -11.711400032043457
    10. ':' → logprob: -12.211400032043457

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13828358054161072
    2. ' ' → logprob: -2.2632834911346436
    3. '    ' → logprob: -4.513283729553223
    4. '   ' → logprob: -5.388283729553223
    5. ' )' → logprob: -5.763283729553223
    6. ')' → logprob: -6.138283729553223
    7. '        ' → logprob: -6.763283729553223
    8. '     ' → logprob: -7.513283729553223
    9. ' ' → logprob: -7.763283729553223
    10. '<|end|>' → logprob: -8.138283729553223

Token 36: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.38712409138679504
    2. ' self' → logprob: -1.1371240615844727
    3. '       ' → logprob: -8.387124061584473
    4. ' ' → logprob: -12.137124061584473
    5. ' ' → logprob: -12.137124061584473
    6. '        ' → logprob: -13.012124061584473
    7. '   ' → logprob: -13.137124061584473
    8. '	self' → logprob: -13.137124061584473
    9. ' super' → logprob: -13.512124061584473
    10. ')' → logprob: -13.762124061584473

Token 37: '.l' (ID: 1000)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03844777122139931
    2. ' .' → logprob: -3.538447856903076
    3. '.l' → logprob: -4.788447856903076
    4. '.number' → logprob: -9.038447380065918
    5. '.n' → logprob: -9.788447380065918
    6. '.car' → logprob: -10.288447380065918
    7. ' ' → logprob: -10.663447380065918
    8. '.is' → logprob: -10.913447380065918
    9. '._' → logprob: -11.663447380065918
    10. '.e' → logprob: -12.038447380065918

Token 38: 'ane' (ID: 1986)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20222516357898712
    2. 'ane' → logprob: -1.7022252082824707
    3. 'anes' → logprob: -8.077224731445312
    4. '   ' → logprob: -8.202224731445312
    5. 'lane' → logprob: -9.702224731445312
    6. '_a' → logprob: -10.327224731445312
    7. 'an' → logprob: -10.327224731445312
    8. 'i' → logprob: -10.577224731445312
    9. 'ine' → logprob: -10.827224731445312
    10. ' a' → logprob: -12.077224731445312

Token 39: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0009549325914122164
    2. '_' → logprob: -7.500955104827881
    3. '_ids' → logprob: -8.500954627990723
    4. ' _' → logprob: -9.875954627990723
    5. 's' → logprob: -10.125954627990723
    6. '_number' → logprob: -10.250954627990723
    7. '_items' → logprob: -11.125954627990723
    8. '_type' → logprob: -11.125954627990723
    9. '_name' → logprob: -11.875954627990723
    10. '_s' → logprob: -12.375954627990723

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005399646237492561
    2. '=' → logprob: -5.255399703979492
    3. ' ' → logprob: -9.005399703979492
    4. '<|end|>' → logprob: -10.630399703979492
    5. ' =
' → logprob: -11.380399703979492
    6. ' =)' → logprob: -12.880399703979492
    7. 'space' → logprob: -13.755399703979492
    8. ')' → logprob: -13.880399703979492
    9. '<|end|>' → logprob: -14.380399703979492
    10. '_' → logprob: -14.755399703979492

Token 41: ' lane' (ID: 39989)
  Prédit: ' lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lane' → logprob: -0.007614674977958202
    2. 'lane' → logprob: -4.882614612579346
    3. ' ' → logprob: -12.382615089416504
    4. '_lane' → logprob: -13.382615089416504
    5. 'lan' → logprob: -14.007615089416504
    6. ' lan' → logprob: -14.507615089416504
    7. '0' → logprob: -14.507615089416504
    8. ' l' → logprob: -15.507615089416504
    9. ' lanes' → logprob: -15.507615089416504
    10. ' ' → logprob: -16.257614135742188

Token 42: '_id' (ID: 1537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6986372470855713
    2. '_id' → logprob: -0.9486372470855713
    3. 'd' → logprob: -2.3236372470855713
    4. '_d' → logprob: -4.698637008666992
    5. '_
' → logprob: -5.323637008666992
    6. '_i' → logprob: -6.823637008666992
    7. ' _' → logprob: -7.323637008666992
    8. '_

' → logprob: -7.323637008666992
    9. '._' → logprob: -7.823637008666992
    10. '.' → logprob: -8.323637008666992

Token 43: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19040334224700928
    2. '<|end|>' → logprob: -1.8154033422470093
    3. '       ' → logprob: -4.690403461456299
    4. '<|end|>' → logprob: -7.815403461456299
    5. '   ' → logprob: -7.940403461456299
    6. '    
' → logprob: -9.19040298461914
    7. ' 
' → logprob: -9.19040298461914
    8. ' ' → logprob: -9.69040298461914
    9. '        
' → logprob: -9.94040298461914
    10. 'def' → logprob: -9.94040298461914

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.666319727897644
    2. '
' → logprob: -1.166319727897644
    3. '<|end|>' → logprob: -1.916319727897644
    4. '   ' → logprob: -4.041319847106934
    5. '    
' → logprob: -6.166319847106934
    6. ',' → logprob: -6.541319847106934
    7. '        
' → logprob: -6.666319847106934
    8. ' ' → logprob: -7.041319847106934
    9. '<|end|>' → logprob: -7.291319847106934
    10. '    ' → logprob: -7.416319847106934

Token 45: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1775745302438736
    2. '
' → logprob: -2.052574634552002
    3. 'self' (adapté à ' self') → logprob: -3.552574634552002
    4. '<|end|>' → logprob: -5.427574634552002
    5. ' self' → logprob: -7.052574634552002
    6. '```' → logprob: -8.677574157714844
    7. ',' → logprob: -10.302574157714844
    8. '	self' → logprob: -10.427574157714844
    9. 'def' → logprob: -10.677574157714844
    10. '<|end|>' → logprob: -10.802574157714844

Token 46: '.queue' (ID: 60866)
  Prédit: ' .'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' .' → logprob: -0.20042096078395844
    2. ' _' → logprob: -2.07542085647583
    3. '._' → logprob: -3.95042085647583
    4. '_' → logprob: -3.95042085647583
    5. '.' → logprob: -4.82542085647583
    6. ' cars' → logprob: -5.70042085647583
    7. '_c' → logprob: -5.95042085647583
    8. '_car' → logprob: -6.45042085647583
    9. ' ' → logprob: -7.32542085647583
    10. '.c' → logprob: -7.70042085647583

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002793707186356187
    2. '=' → logprob: -6.002793788909912
    3. '=[]' → logprob: -8.252793312072754
    4. '_' → logprob: -11.002793312072754
    5. '[:]' → logprob: -11.502793312072754
    6. '.append' → logprob: -11.627793312072754
    7. ':' → logprob: -11.752793312072754
    8. 's' → logprob: -12.127793312072754
    9. '.' → logprob: -13.002793312072754
    10. ' ' → logprob: -13.377793312072754

Token 48: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.0005541055579669774
    2. '[]' → logprob: -7.500554084777832
    3. ' ' → logprob: -14.625554084777832
    4. ' [' → logprob: -15.000554084777832
    5. ' []
' → logprob: -15.125554084777832
    6. ' [])' → logprob: -17.87555503845215
    7. ' []

' → logprob: -18.00055503845215
    8. ' []*' → logprob: -18.12555503845215
    9. ' [];' → logprob: -18.37555503845215
    10. 'deque' → logprob: -18.37555503845215

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006375936791300774
    2. 'def' → logprob: -5.256375789642334
    3. ' def' → logprob: -6.881375789642334
    4. '    
' → logprob: -9.881376266479492
    5. '
' → logprob: -10.631376266479492
    6. '	def' → logprob: -10.631376266479492
    7. '```' → logprob: -12.006376266479492
    8. '        
' → logprob: -12.131376266479492
    9. '       ' → logprob: -14.006376266479492
    10. ' 
' → logprob: -14.256376266479492

Token 50: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7122549414634705
    2. 'def' (adapté à ' def') → logprob: -0.9622549414634705
    3. ' def' → logprob: -2.0872550010681152
    4. 'd' → logprob: -6.462255001068115
    5. ' ' → logprob: -7.462255001068115
    6. '	def' → logprob: -7.462255001068115
    7. '    
' → logprob: -8.087254524230957
    8. ' 
' → logprob: -8.962254524230957
    9. '       ' → logprob: -9.837254524230957
    10. '        
' → logprob: -9.962254524230957

Token 51: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.16290394961833954
    2. ' enqueue' → logprob: -1.912903904914856
    3. ' ' → logprob: -7.287903785705566
    4. ' append' → logprob: -7.412903785705566
    5. 'enqueue' → logprob: -7.912903785705566
    6. ' enter' → logprob: -8.537903785705566
    7. ' en' → logprob: -8.787903785705566
    8. 'add' → logprob: -8.912903785705566
    9. ' a' → logprob: -9.037903785705566
    10. ' push' → logprob: -9.037903785705566

Token 52: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.1274232715368271
    2. '_' → logprob: -2.1274232864379883
    3. '_c' → logprob: -8.252423286437988
    4. '_vehicle' → logprob: -8.877423286437988
    5. '(' → logprob: -9.627423286437988
    6. '(car' → logprob: -11.877423286437988
    7. 'Car' → logprob: -12.627423286437988
    8. '_C' → logprob: -12.627423286437988
    9. '_queue' → logprob: -13.002423286437988
    10. '_(' → logprob: -13.377423286437988

Token 53: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010343351401388645
    2. '(self' → logprob: -4.635343551635742
    3. ' (' → logprob: -9.135343551635742
    4. '<|end|>' → logprob: -9.260343551635742
    5. '(car' → logprob: -9.385343551635742
    6. '(
' → logprob: -9.510343551635742
    7. '_car' → logprob: -9.510343551635742
    8. '_to' → logprob: -10.260343551635742
    9. '_' → logprob: -10.260343551635742
    10. '(s' → logprob: -11.010343551635742

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008193961111828685
    2. ')' → logprob: -7.625819206237793
    3. ' ,' → logprob: -8.625819206237793
    4. '<|end|>' → logprob: -9.000819206237793
    5. ' car' → logprob: -11.875819206237793
    6. '<|end|>' → logprob: -12.625819206237793
    7. '_car' → logprob: -12.875819206237793
    8. 's' → logprob: -13.000819206237793
    9. '(car' → logprob: -13.375819206237793
    10. '‌,' → logprob: -13.500819206237793

Token 55: ' car' (ID: 1669)
  Prédit: ' car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.005244072061032057
    2. 'car' → logprob: -5.255244255065918
    3. ' self' → logprob: -11.880244255065918
    4. 'self' → logprob: -13.005244255065918
    5. '	car' → logprob: -14.130244255065918
    6. ')' → logprob: -15.880244255065918
    7. '(car' → logprob: -16.3802433013916
    8. ' ' → logprob: -16.5052433013916
    9. ' Car' → logprob: -17.1302433013916
    10. '_car' → logprob: -17.1302433013916

Token 56: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07000467926263809
    2. ':' → logprob: -2.94500470161438
    3. ')' → logprob: -4.695004463195801
    4. ',' → logprob: -5.195004463195801
    5. ' ):' → logprob: -8.3200044631958
    6. '):
' → logprob: -10.3200044631958
    7. ' :' → logprob: -10.9450044631958
    8. ' ,' → logprob: -12.1950044631958
    9. ' )' → logprob: -12.4450044631958
    10. '<|end|>' → logprob: -12.5700044631958

Token 57: ' Car' (ID: 4004)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5215444564819336
    2. ' Car' → logprob: -1.5215444564819336
    3. ' )' → logprob: -1.8965444564819336
    4. 'Car' → logprob: -3.7715444564819336
    5. ' car' → logprob: -4.396544456481934
    6. ')' → logprob: -6.646544456481934
    7. ' ' → logprob: -6.771544456481934
    8. '_car' → logprob: -10.521544456481934
    9. ' ),' → logprob: -10.521544456481934
    10. 'car' → logprob: -10.646544456481934

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0549260638654232
    2. ')' → logprob: -2.9299261569976807
    3. ',' → logprob: -10.929925918579102
    4. ':' → logprob: -11.179925918579102
    5. '):
' → logprob: -11.929925918579102
    6. ' ):' → logprob: -12.554925918579102
    7. ' )' → logprob: -14.554925918579102
    8. '   ' → logprob: -14.929925918579102
    9. '),' → logprob: -14.929925918579102
    10. '       ' → logprob: -15.929925918579102

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006147435633465648
    2. ' 
' → logprob: -9.125615119934082
    3. '
' → logprob: -9.250615119934082
    4. '        
' → logprob: -9.500615119934082
    5. 'self' → logprob: -9.625615119934082
    6. ' self' → logprob: -9.750615119934082
    7. '\' → logprob: -10.000615119934082
    8. '<|end|>' → logprob: -10.000615119934082
    9. '    
' → logprob: -10.875615119934082
    10. '   ' → logprob: -11.000615119934082

Token 60: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31354010105133057
    2. 'self' (adapté à ' self') → logprob: -1.3135401010513306
    3. '       ' → logprob: -8.3135404586792
    4. ' ' → logprob: -10.4385404586792
    5. '        ' → logprob: -13.5635404586792
    6. '	self' → logprob: -14.1885404586792
    7. '```' → logprob: -14.3135404586792
    8. '   ' → logprob: -15.3135404586792
    9. 's' → logprob: -15.9385404586792
    10. '(self' → logprob: -16.313539505004883

Token 61: '.queue' (ID: 60866)
  Prédit: '.queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.queue' → logprob: -0.3134914040565491
    2. '.' → logprob: -1.3134913444519043
    3. ' .' → logprob: -8.438491821289062
    4. '.stack' → logprob: -13.188491821289062
    5. 'queue' → logprob: -13.438491821289062
    6. '.q' → logprob: -13.688491821289062
    7. '.enqueue' → logprob: -13.813491821289062
    8. '.user' → logprob: -13.938491821289062
    9. ').' → logprob: -14.438491821289062
    10. '.code' → logprob: -14.688491821289062

Token 62: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3868824541568756
    2. '.append' → logprob: -1.1368824243545532
    3. ' .' → logprob: -12.761882781982422
    4. '.app' → logprob: -13.261882781982422
    5. '.ap' → logprob: -13.261882781982422
    6. '.setdefault' → logprob: -13.761882781982422
    7. '.insert' → logprob: -13.886882781982422
    8. '.extend' → logprob: -14.011882781982422
    9. '.add' → logprob: -14.511882781982422
    10. '.Append' → logprob: -15.011882781982422

Token 63: '(car' (ID: 77006)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3132690191268921
    2. '(car' → logprob: -1.313269019126892
    3. '(c' → logprob: -12.688268661499023
    4. '(
' → logprob: -13.688268661499023
    5. '(Car' → logprob: -13.813268661499023
    6. ' (' → logprob: -14.188268661499023
    7. '(

' → logprob: -14.688268661499023
    8. '((' → logprob: -14.813268661499023
    9. '(C' → logprob: -16.688268661499023
    10. '(cart' → logprob: -16.688268661499023

Token 64: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.901345038088039e-05
    2. ')
' → logprob: -9.250099182128906
    3. ' )' → logprob: -13.000099182128906
    4. ')

' → logprob: -15.625099182128906
    5. ')
' → logprob: -16.375099182128906
    6. ')return' → logprob: -16.625099182128906
    7. '   ' → logprob: -16.750099182128906
    8. ')`' → logprob: -17.500099182128906
    9. '
' → logprob: -17.625099182128906
    10. '       ' → logprob: -17.875099182128906

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18873204290866852
    2. 'def' → logprob: -1.9387320280075073
    3. '
' → logprob: -4.813732147216797
    4. '<|end|>' → logprob: -4.813732147216797
    5. ' def' → logprob: -5.188732147216797
    6. '    
' → logprob: -5.688732147216797
    7. '<|end|>' → logprob: -7.063732147216797
    8. '	def' → logprob: -8.063732147216797
    9. '```' → logprob: -8.188732147216797
    10. ' ' → logprob: -8.313732147216797

Token 66: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.29973524808883667
    2. '   ' → logprob: -1.5497353076934814
    3. ' def' → logprob: -3.6747353076934814
    4. 'd' → logprob: -4.049735069274902
    5. ' ' → logprob: -6.049735069274902
    6. '	def' → logprob: -7.674735069274902
    7. '  ' → logprob: -8.049735069274902
    8. ' 
' → logprob: -8.924735069274902
    9. '    
' → logprob: -8.924735069274902
    10. '    ' → logprob: -9.299735069274902

Token 67: ' remove' (ID: 6234)
  Prédit: ' remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remove' → logprob: -0.33609145879745483
    2. ' pop' → logprob: -1.8360915184020996
    3. ' dequeue' → logprob: -2.3360915184020996
    4. ' get' → logprob: -4.3360915184021
    5. ' peek' → logprob: -5.2110915184021
    6. ' def' → logprob: -5.5860915184021
    7. ' ' → logprob: -5.8360915184021
    8. ' is' → logprob: -6.3360915184021
    9. ' process' → logprob: -7.8360915184021
    10. ' next' → logprob: -8.211091041564941

Token 68: '_front' (ID: 56078)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0017721657641232014
    2. '_' → logprob: -6.376772403717041
    3. '_first' → logprob: -9.876771926879883
    4. '_c' → logprob: -11.501771926879883
    5. ' _' → logprob: -13.126771926879883
    6. '_head' → logprob: -14.376771926879883
    7. '()' → logprob: -14.501771926879883
    8. '_card' → logprob: -14.626771926879883
    9. '_from' → logprob: -14.751771926879883
    10. 'car' → logprob: -14.751771926879883

Token 69: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.4813257157802582
    2. '_' → logprob: -1.6063257455825806
    3. '()' → logprob: -1.7313257455825806
    4. '(' → logprob: -5.731325626373291
    5. '```' → logprob: -7.981325626373291
    6. '_element' → logprob: -9.60632610321045
    7. ')' → logprob: -9.60632610321045
    8. '_parent' → logprob: -9.73132610321045
    9. 'car' → logprob: -9.85632610321045
    10. '_c' → logprob: -9.85632610321045

Token 70: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02726510353386402
    2. '(self' → logprob: -4.1522650718688965
    3. '()' → logprob: -4.5272650718688965
    4. '(
' → logprob: -8.152265548706055
    5. ' (' → logprob: -10.777265548706055
    6. '(s' → logprob: -11.152265548706055
    7. 'self' → logprob: -11.652265548706055
    8. '(

' → logprob: -11.777265548706055
    9. 's' → logprob: -12.777265548706055
    10. ')' → logprob: -12.902265548706055

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12744267284870148
    2. '):' → logprob: -2.1274425983428955
    3. ' )' → logprob: -7.752442836761475
    4. ' ):' → logprob: -9.877442359924316
    5. '):
' → logprob: -11.752442359924316
    6. ':' → logprob: -11.752442359924316
    7. ').' → logprob: -12.627442359924316
    8. ' ' → logprob: -13.002442359924316
    9. ',' → logprob: -13.127442359924316
    10. '.' → logprob: -13.252442359924316

Token 72: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08088324964046478
    2. '():' → logprob: -2.580883264541626
    3. '):' → logprob: -7.080883026123047
    4. '(' → logprob: -7.705883026123047
    5. '(self' → logprob: -7.705883026123047
    6. ' :' → logprob: -8.830883026123047
    7. ':self' → logprob: -10.705883026123047
    8. 'self' → logprob: -11.080883026123047
    9. ':
' → logprob: -11.205883026123047
    10. ':**' → logprob: -11.205883026123047

Token 73: ' Car' (ID: 4004)
  Prédit: ' Car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Car' → logprob: -0.20704157650470734
    2. ' None' → logprob: -2.0820415019989014
    3. 'Car' → logprob: -2.9570415019989014
    4. ' Optional' → logprob: -5.5820417404174805
    5. 'None' → logprob: -5.7070417404174805
    6. ' ' → logprob: -5.8320417404174805
    7. 'Optional' → logprob: -8.70704174041748
    8. ' ' → logprob: -10.08204174041748
    9. ' car' → logprob: -10.33204174041748
    10. ' int' → logprob: -10.45704174041748

Token 74: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11340102553367615
    2. ':' → logprob: -2.238400936126709
    3. '()' → logprob: -8.488401412963867
    4. '():
' → logprob: -8.613401412963867
    5. '(' → logprob: -9.488401412963867
    6. '):' → logprob: -9.488401412963867
    7. ':return' → logprob: -11.363401412963867
    8. ':
' → logprob: -11.488401412963867
    9. ' ():' → logprob: -11.863401412963867
    10. ' :' → logprob: -12.613401412963867

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005447435192763805
    2. '
' → logprob: -6.0054473876953125
    3. ' return' → logprob: -6.7554473876953125
    4. '   ' → logprob: -7.6304473876953125
    5. ' 
' → logprob: -7.7554473876953125
    6. 'return' → logprob: -8.380447387695312
    7. '    
' → logprob: -8.880447387695312
    8. ' ' → logprob: -9.505447387695312
    9. '    ' → logprob: -9.755447387695312
    10. '' → logprob: -9.755447387695312

Token 76: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06887197494506836
    2. '       ' → logprob: -3.0688719749450684
    3. 'return' → logprob: -3.9438719749450684
    4. ' if' → logprob: -7.818871974945068
    5. ' ' → logprob: -9.068872451782227
    6. ' 
' → logprob: -9.318872451782227
    7. ' ' → logprob: -10.943872451782227
    8. '```' → logprob: -11.193872451782227
    9. '	return' → logprob: -11.318872451782227
    10. '   ' → logprob: -11.443872451782227

Token 77: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.05304044112563133
    2. ' len' → logprob: -3.3030405044555664
    3. ' not' → logprob: -4.303040504455566
    4. ' ' → logprob: -6.803040504455566
    5. ' ' → logprob: -8.803040504455566
    6. 'self' → logprob: -9.303040504455566
    7. 'len' → logprob: -12.678040504455566
    8. '	self' → logprob: -13.178040504455566
    9. '  ' → logprob: -13.303040504455566
    10. ' sel' → logprob: -15.053040504455566

Token 78: '.queue' (ID: 60866)
  Prédit: '.queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.queue' → logprob: -0.0003464289184194058
    2. '.' → logprob: -8.000346183776855
    3. ' .' → logprob: -11.625346183776855
    4. 'queue' → logprob: -14.000346183776855
    5. '	queue' → logprob: -14.000346183776855
    6. ' queue' → logprob: -16.500347137451172
    7. '.q' → logprob: -16.500347137451172
    8. '.stack' → logprob: -16.750347137451172
    9. '..' → logprob: -17.250347137451172
    10. ').' → logprob: -18.125347137451172

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05843648314476013
    2. '<|end|>' → logprob: -2.933436393737793
    3. '<|end|>' → logprob: -6.058436393737793
    4. ' and' → logprob: -7.933436393737793
    5. '.' → logprob: -8.558436393737793
    6. 'and' → logprob: -9.308436393737793
    7. '```' → logprob: -9.308436393737793
    8. '[' → logprob: -9.433436393737793
    9. '.pop' → logprob: -9.433436393737793
    10. ' :' → logprob: -9.808436393737793

Token 80: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05789593607187271
    2. ' return' → logprob: -3.6828958988189697
    3. 'return' → logprob: -4.307896137237549
    4. '.pop' → logprob: -4.432896137237549
    5. ':' → logprob: -6.557896137237549
    6. ':
' → logprob: -6.932896137237549
    7. ':return' → logprob: -7.307896137237549
    8. '.' → logprob: -7.432896137237549
    9. '            ' → logprob: -7.682896137237549
    10. '            
' → logprob: -7.682896137237549

Token 81: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04074239730834961
    2. 'return' (adapté à ' return') → logprob: -3.2907423973083496
    3. '       ' → logprob: -6.04074239730835
    4. '           ' → logprob: -8.165742874145508
    5. '               ' → logprob: -10.915742874145508
    6. '	return' → logprob: -12.165742874145508
    7. '```' → logprob: -12.415742874145508
    8. '   ' → logprob: -13.540742874145508
    9. ':return' → logprob: -13.665742874145508
    10. '        ' → logprob: -14.665742874145508

Token 82: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.03804275393486023
    2. 'self' → logprob: -3.2880427837371826
    3. '	self' → logprob: -13.913043022155762
    4. ' ' → logprob: -15.788043022155762
    5. ' ' → logprob: -16.038042068481445
    6. '[self' → logprob: -17.663042068481445
    7. '       ' → logprob: -18.038042068481445
    8. '(self' → logprob: -18.288042068481445
    9. '   ' → logprob: -18.663042068481445
    10. '```' → logprob: -18.788042068481445

Token 83: '.queue' (ID: 60866)
  Prédit: '.queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.queue' → logprob: -0.004130999557673931
    2. '.' → logprob: -5.504130840301514
    3. '.stack' → logprob: -10.754131317138672
    4. ' .' → logprob: -11.254131317138672
    5. 'queue' → logprob: -12.129131317138672
    6. '.dequeue' → logprob: -12.254131317138672
    7. '.q' → logprob: -13.129131317138672
    8. '.qu' → logprob: -13.629131317138672
    9. '	queue' → logprob: -13.754131317138672
    10. '.chain' → logprob: -14.754131317138672

Token 84: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.000779965310357511
    2. '.' → logprob: -7.75078010559082
    3. 'pop' → logprob: -8.00078010559082
    4. '[' → logprob: -11.62578010559082
    5. '	pop' → logprob: -13.00078010559082
    6. ' pop' → logprob: -13.12578010559082
    7. ' .' → logprob: -14.50078010559082
    8. '.Pop' → logprob: -16.25078010559082
    9. '_pop' → logprob: -16.37578010559082
    10. '```' → logprob: -16.87578010559082

Token 85: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.7697225252486533e-06
    2. '()' → logprob: -12.500003814697266
    3. '(
' → logprob: -16.750003814697266
    4. '0' → logprob: -17.750003814697266
    5. ' (' → logprob: -19.625003814697266
    6. '(

' → logprob: -20.000003814697266
    7. '(-' → logprob: -20.125003814697266
    8. '()
' → logprob: -20.750003814697266
    9. '```' → logprob: -22.125003814697266
    10. '	' → logprob: -23.250003814697266

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3080716346157715e-05
    2. ' ' → logprob: -10.750022888183594
    3. ')' → logprob: -13.750022888183594
    4. '(' → logprob: -15.250022888183594
    5. '-' → logprob: -15.875022888183594
    6. '```' → logprob: -16.750022888183594
    7. '[' → logprob: -17.000022888183594
    8. ' )' → logprob: -18.437522888183594
    9. '	' → logprob: -18.500022888183594
    10. '   ' → logprob: -18.625022888183594

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014180023572407663
    2. ')
' → logprob: -8.875142097473145
    3. ' )' → logprob: -13.625142097473145
    4. ')return' → logprob: -15.125142097473145
    5. '       ' → logprob: -15.375142097473145
    6. ')
' → logprob: -16.625141143798828
    7. '<|end|>' → logprob: -16.750141143798828
    8. ')

' → logprob: -16.875141143798828
    9. '`)' → logprob: -17.625141143798828
    10. '()' → logprob: -18.125141143798828

Token 88: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2881723940372467
    2. '<|end|>' → logprob: -2.038172483444214
    3. '\n' → logprob: -2.913172483444214
    4. '       ' → logprob: -3.288172483444214
    5. '' → logprob: -4.663172245025635
    6. ' else' → logprob: -5.163172245025635
    7. '```' → logprob: -5.288172245025635
    8. 'else' → logprob: -6.038172245025635
    9. 'n' → logprob: -7.163172245025635
    10. '\' → logprob: -7.413172245025635

Token 89: ' raise' (ID: 9338)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.677347719669342
    2. 'else' → logprob: -1.5523476600646973
    3. '       ' → logprob: -1.9273476600646973
    4. 'None' → logprob: -2.5523476600646973
    5. ' None' → logprob: -3.9273476600646973
    6. 'return' → logprob: -4.302347660064697
    7. '
' → logprob: -5.177347660064697
    8. '<|end|>' → logprob: -5.677347660064697
    9. ' ' → logprob: -5.927347660064697
    10. ' 
' → logprob: -6.427347660064697

Token 90: ' Index' (ID: 14580)
  Prédit: ' Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Index' → logprob: -2.816093228830141e-06
    2. 'Index' → logprob: -13.50000286102295
    3. ' Ind' → logprob: -14.00000286102295
    4. ' Value' → logprob: -15.00000286102295
    5. ' Exception' → logprob: -15.75000286102295
    6. ' Inde' → logprob: -16.375001907348633
    7. '(Index' → logprob: -17.875001907348633
    8. ' I' → logprob: -18.125001907348633
    9. ' ' → logprob: -18.250001907348633
    10. ' In' → logprob: -18.875001907348633

Token 91: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.3856492842023727e-06
    2. 'Erro' → logprob: -14.000000953674316
    3. 'Er' → logprob: -14.750000953674316
    4. 'rror' → logprob: -17.625001907348633
    5. 'Out' → logprob: -18.125001907348633
    6. 'E' → logprob: -18.375001907348633
    7. 'Err' → logprob: -19.625001907348633
    8. '   ' → logprob: -20.625001907348633
    9. '	Error' → logprob: -20.750001907348633
    10. ' Error' → logprob: -21.250001907348633

Token 92: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3796810209751129
    2. '("' → logprob: -1.5046809911727905
    3. '()' → logprob: -2.37968111038208
    4. '(' → logprob: -7.12968111038208
    5. '("")' → logprob: -7.87968111038208
    6. ':' → logprob: -10.879680633544922
    7. '(
' → logprob: -11.504680633544922
    8. '("\' → logprob: -11.504680633544922
    9. ' ' → logprob: -11.754680633544922
    10. '()
' → logprob: -12.379680633544922

Token 93: 'Trying' (ID: 107151)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.20416562259197235
    2. 'pop' → logprob: -1.9541655778884888
    3. 'Cannot' → logprob: -4.079165458679199
    4. 'No' → logprob: -4.454165458679199
    5. 'Queue' → logprob: -4.829165458679199
    6. 'Pop' → logprob: -6.579165458679199
    7. 'de' → logprob: -6.704165458679199
    8. 'Can't' → logprob: -7.329165458679199
    9. 'queue' → logprob: -7.329165458679199
    10. ' remove' → logprob: -7.454165458679199

Token 94: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0008135587559081614
    2. 'to' → logprob: -7.1258134841918945
    3. '<|end|>' → logprob: -11.750813484191895
    4. ' ' → logprob: -14.250813484191895
    5. '	to' → logprob: -15.875813484191895
    6. ' ' → logprob: -16.12581443786621
    7. ')' → logprob: -16.87581443786621
    8. '<|end|>' → logprob: -16.87581443786621
    9. '_to' → logprob: -17.25081443786621
    10. 'To' → logprob: -17.25081443786621

Token 95: ' remove' (ID: 6234)
  Prédit: ' remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remove' → logprob: -0.013861292973160744
    2. 'remove' → logprob: -4.388861179351807
    3. ' pop' → logprob: -6.763861179351807
    4. '	remove' → logprob: -9.513861656188965
    5. ' dequeue' → logprob: -10.138861656188965
    6. ' remov' → logprob: -10.763861656188965
    7. 'pop' → logprob: -11.138861656188965
    8. ' ' → logprob: -11.388861656188965
    9. 'rem' → logprob: -11.513861656188965
    10. '_remove' → logprob: -11.763861656188965

Token 96: ' a' (ID: 261)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.016084929928183556
    2. ' car' → logprob: -4.266085147857666
    3. 'from' → logprob: -6.641085147857666
    4. ' a' → logprob: -8.016084671020508
    5. ' front' → logprob: -9.266084671020508
    6. ' fron' → logprob: -9.516084671020508
    7. ' ' → logprob: -9.766084671020508
    8. ' ' → logprob: -11.141084671020508
    9. 'car' → logprob: -11.391084671020508
    10. '	from' → logprob: -11.516084671020508

Token 97: ' car' (ID: 1669)
  Prédit: ' car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.20452992618083954
    2. 'n' → logprob: -1.704529881477356
    3. ' from' → logprob: -6.454529762268066
    4. 'car' → logprob: -7.079529762268066
    5. 'from' → logprob: -8.454529762268066
    6. ' n' → logprob: -8.829529762268066
    7. 'ny' → logprob: -9.454529762268066
    8. '
' → logprob: -9.829529762268066
    9. '_car' → logprob: -10.454529762268066
    10. ' front' → logprob: -10.579529762268066

Token 98: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.0069144065491855145
    2. 'from' → logprob: -5.0069146156311035
    3. ' when' → logprob: -9.381914138793945
    4. ' that' → logprob: -9.506914138793945
    5. '	from' → logprob: -10.381914138793945
    6. ' but' → logprob: -11.881914138793945
    7. ' ' → logprob: -14.006914138793945
    8. ' fron' → logprob: -14.631914138793945
    9. ' f' → logprob: -15.756914138793945
    10. ' fro' → logprob: -15.756914138793945

Token 99: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.0036203854251652956
    2. ' empty' → logprob: -5.628620147705078
    3. 'an' → logprob: -11.628620147705078
    4. 'empty' → logprob: -12.253620147705078
    5. ' ' → logprob: -13.003620147705078
    6. '	an' → logprob: -13.128620147705078
    7. ' a' → logprob: -13.753620147705078
    8. 'a' → logprob: -14.128620147705078
    9. ' the' → logprob: -15.628620147705078
    10. '_empty' → logprob: -16.503620147705078

Token 100: ' empty' (ID: 8213)
  Prédit: ' empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' empty' → logprob: -0.0019289902411401272
    2. 'empty' → logprob: -6.251928806304932
    3. '_empty' → logprob: -15.62692928314209
    4. 'Empty' → logprob: -16.251928329467773
    5. ' em' → logprob: -16.376928329467773
    6. '-empty' → logprob: -18.251928329467773
    7. 'em' → logprob: -18.376928329467773
    8. '_EMPTY' → logprob: -18.501928329467773
    9. '(empty' → logprob: -19.251928329467773
    10. 'empt' → logprob: -19.251928329467773

Token 101: ' lane' (ID: 39989)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.019313711673021317
    2. ' lane' → logprob: -4.019313812255859
    3. ' ' → logprob: -7.644313812255859
    4. 'queue' → logprob: -7.644313812255859
    5. ' Lane' → logprob: -9.76931381225586
    6. 'lane' → logprob: -10.26931381225586
    7. 'Lane' → logprob: -10.39431381225586
    8. '_lane' → logprob: -10.51931381225586
    9. ' list' → logprob: -10.89431381225586
    10. '   ' → logprob: -12.14431381225586

Token 102: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00016754455282352865
    2. '.")' → logprob: -9.125167846679688
    3. '")
' → logprob: -10.875167846679688
    4. ')' → logprob: -10.875167846679688
    5. ')")' → logprob: -11.500167846679688
    6. '}")' → logprob: -12.875167846679688
    7. ' ")' → logprob: -13.000167846679688
    8. '!")' → logprob: -13.125167846679688
    9. '")
' → logprob: -13.750167846679688
    10. '"' → logprob: -13.750167846679688

Token 103: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0441448800265789
    2. 'class' → logprob: -3.794144868850708
    3. '

' → logprob: -4.544145107269287
    4. '<|end|>' → logprob: -5.794145107269287
    5. '```' → logprob: -5.794145107269287
    6. '   ' → logprob: -6.669145107269287
    7. ' class' → logprob: -7.294145107269287
    8. 'def' → logprob: -7.669145107269287
    9. '


' → logprob: -8.669144630432129
    10. ' 
' → logprob: -8.794144630432129

Token 104: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38540834188461304
    2. 'def' (adapté à ' def') → logprob: -1.7604084014892578
    3. 'class' → logprob: -2.510408401489258
    4. '
' → logprob: -2.885408401489258
    5. '    
' → logprob: -5.760408401489258
    6. '```' → logprob: -6.260408401489258
    7. '

' → logprob: -6.635408401489258
    8. 'd' → logprob: -6.885408401489258
    9. ' 
' → logprob: -7.385408401489258
    10. ' class' → logprob: -7.385408401489258

Token 105: ' car' (ID: 1669)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.47232434153556824
    2. 'is' → logprob: -2.0973243713378906
    3. ' get' → logprob: -2.0973243713378906
    4. ' length' → logprob: -2.5973243713378906
    5. 'get' → logprob: -4.722324371337891
    6. ' peek' → logprob: -4.972324371337891
    7. ' queue' → logprob: -4.972324371337891
    8. 'length' → logprob: -5.222324371337891
    9. ' has' → logprob: -5.347324371337891
    10. '__' → logprob: -5.722324371337891

Token 106: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04771329089999199
    2. '_count' → logprob: -3.172713279724121
    3. '_s' → logprob: -6.422713279724121
    4. '_in' → logprob: -6.797713279724121
    5. '_present' → logprob: -7.172713279724121
    6. '_queue' → logprob: -7.797713279724121
    7. '_' → logprob: -7.922713279724121
    8. '_at' → logprob: -8.172713279724121
    9. '_exists' → logprob: -10.047713279724121
    10. '_is' → logprob: -10.547713279724121

Token 107: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.22586172819137573
    2. '(' → logprob: -1.6008617877960205
    3. '()' → logprob: -9.100861549377441
    4. 's' → logprob: -9.350861549377441
    5. '(
' → logprob: -9.600861549377441
    6. '(s' → logprob: -9.725861549377441
    7. ' (' → logprob: -9.850861549377441
    8. 'self' → logprob: -10.475861549377441
    9. '<|end|>' → logprob: -10.975861549377441
    10. ' ' → logprob: -11.600861549377441

Token 108: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00040540905320085585
    2. '):' → logprob: -8.500405311584473
    3. ' )' → logprob: -8.625405311584473
    4. '):
' → logprob: -11.625405311584473
    5. '()' → logprob: -13.000405311584473
    6. ' ' → logprob: -13.000405311584473
    7. ')
' → logprob: -13.125405311584473
    8. '())' → logprob: -13.500405311584473
    9. '):

' → logprob: -13.625405311584473
    10. ')>' → logprob: -13.625405311584473

Token 109: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5728570222854614
    2. ':' → logprob: -1.5728570222854614
    3. '():' → logprob: -1.6978570222854614
    4. ' ->' → logprob: -3.697856903076172
    5. '(' → logprob: -4.447856903076172
    6. '()' → logprob: -5.697856903076172
    7. '():
' → logprob: -6.447856903076172
    8. '   ' → logprob: -6.822856903076172
    9. '->' → logprob: -7.072856903076172
    10. ')' → logprob: -7.572856903076172

Token 110: ' int' (ID: 677)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.09278763830661774
    2. ' ' → logprob: -2.467787742614746
    3. 'len' → logprob: -6.092787742614746
    4. '<|end|>' → logprob: -7.467787742614746
    5. ' ' → logprob: -7.967787742614746
    6. ' ()' → logprob: -8.467787742614746
    7. '()' → logprob: -9.342787742614746
    8. ' int' → logprob: -9.342787742614746
    9. '=len' → logprob: -9.717787742614746
    10. '(len' → logprob: -9.842787742614746

Token 111: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006231890991330147
    2. ':' → logprob: -5.381231784820557
    3. '():
' → logprob: -7.256231784820557
    4. '(self' → logprob: -7.881231784820557
    5. '()' → logprob: -7.881231784820557
    6. '(' → logprob: -9.006232261657715
    7. '):' → logprob: -11.256232261657715
    8. '(
' → logprob: -12.631232261657715
    9. '       ' → logprob: -12.631232261657715
    10. ':
' → logprob: -13.131232261657715

Token 112: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.40334081649780273
    2. '       ' → logprob: -1.1533408164978027
    3. 'return' → logprob: -4.153340816497803
    4. '   ' → logprob: -8.278341293334961
    5. ' 
' → logprob: -8.528341293334961
    6. ' ' → logprob: -9.653341293334961
    7. '	return' → logprob: -10.278341293334961
    8. '    ' → logprob: -10.778341293334961
    9. ' ' → logprob: -11.153341293334961
    10. '        
' → logprob: -12.028341293334961

Token 113: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6951916813850403
    2. 'return' (adapté à ' return') → logprob: -0.6951916813850403
    3. '       ' → logprob: -6.195191860198975
    4. '   ' → logprob: -13.820191383361816
    5. '	return' → logprob: -13.820191383361816
    6. ' ' → logprob: -14.570191383361816
    7. 'len' → logprob: -15.445191383361816
    8. ' ' → logprob: -15.570191383361816
    9. '{return' → logprob: -16.695192337036133
    10. '```' → logprob: -16.695192337036133

Token 114: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.00033558503491804004
    2. 'len' → logprob: -8.000335693359375
    3. ' ' → logprob: -17.000335693359375
    4. '	len' → logprob: -17.750335693359375
    5. '(len' → logprob: -18.625335693359375
    6. ' self' → logprob: -19.125335693359375
    7. '=len' → logprob: -20.000335693359375
    8. ' ' → logprob: -20.375335693359375
    9. '[len' → logprob: -20.875335693359375
    10. '```' → logprob: -23.125335693359375

Token 115: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0297523383051157
    2. '(' → logprob: -3.529752254486084
    3. '(this' → logprob: -13.654752731323242
    4. '(
' → logprob: -14.529752731323242
    5. '(s' → logprob: -16.404752731323242
    6. '(

' → logprob: -16.654752731323242
    7. 'self' → logprob: -17.404752731323242
    8. ' (' → logprob: -17.779752731323242
    9. '(sel' → logprob: -18.404752731323242
    10. '()' → logprob: -18.404752731323242

Token 116: '.queue' (ID: 60866)
  Prédit: '.queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.queue' → logprob: -0.018169142305850983
    2. '.' → logprob: -4.018168926239014
    3. ' .' → logprob: -10.893169403076172
    4. 'queue' → logprob: -15.643169403076172
    5. '.q' → logprob: -15.643169403076172
    6. '	queue' → logprob: -15.768169403076172
    7. '.qu' → logprob: -16.393169403076172
    8. '.Queue' → logprob: -17.268169403076172
    9. ').' → logprob: -17.393169403076172
    10. '.query' → logprob: -17.518169403076172

Token 117: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4021237802808173e-05
    2. ')
' → logprob: -11.375014305114746
    3. ' )' → logprob: -13.000014305114746
    4. '()' → logprob: -16.75001335144043
    5. ')return' → logprob: -16.87501335144043
    6. '<|end|>' → logprob: -17.00001335144043
    7. '   ' → logprob: -17.50001335144043
    8. ')

' → logprob: -17.62501335144043
    9. '}' → logprob: -18.00001335144043
    10. '())' → logprob: -18.12501335144043

Token 118: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029161682352423668
    2. 'class' → logprob: -4.15416145324707
    3. '   ' → logprob: -4.52916145324707
    4. '

' → logprob: -7.15416145324707
    5. 'def' → logprob: -7.52916145324707
    6. '    
' → logprob: -8.40416145324707
    7. ' 
' → logprob: -8.77916145324707
    8. '<|end|>' → logprob: -8.90416145324707
    9. ' class' → logprob: -9.02916145324707
    10. '```' → logprob: -9.27916145324707

Token 119: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.09194180369377136
    2. 'class' → logprob: -2.4669418334960938
    3. '   ' → logprob: -5.966941833496094
    4. ' def' → logprob: -7.841941833496094
    5. 'from' → logprob: -11.216941833496094
    6. 'import' → logprob: -11.341941833496094
    7. ' class' → logprob: -11.841941833496094
    8. '
' → logprob: -12.841941833496094
    9. '```' → logprob: -13.091941833496094
    10. '	def' → logprob: -13.341941833496094

Token 120: ' front' (ID: 5567)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.41530391573905945
    2. ' peek' → logprob: -2.415303945541382
    3. ' has' → logprob: -3.040303945541382
    4. 'is' → logprob: -3.040303945541382
    5. '__' → logprob: -3.415303945541382
    6. ' get' → logprob: -3.665303945541382
    7. 'peek' → logprob: -3.790303945541382
    8. ' clear' → logprob: -3.790303945541382
    9. ' __' → logprob: -3.915303945541382
    10. ' front' → logprob: -4.790303707122803

Token 121: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.003191970521584153
    2. '_' → logprob: -5.753191947937012
    3. '_c' → logprob: -11.878191947937012
    4. '()' → logprob: -12.628191947937012
    5. ' _' → logprob: -13.378191947937012
    6. '```' → logprob: -15.003191947937012
    7. '_queue' → logprob: -15.253191947937012
    8. '_view' → logprob: -15.753191947937012
    9. '_name' → logprob: -15.878191947937012
    10. 'Car' → logprob: -16.003192901611328

Token 122: '_number' (ID: 11733)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003438276704400778
    2. '(self' → logprob: -5.878438472747803
    3. '(' → logprob: -8.753437995910645
    4. '<|end|>' → logprob: -9.003437995910645
    5. '()`' → logprob: -10.128437995910645
    6. '_' → logprob: -10.128437995910645
    7. ' ()' → logprob: -10.378437995910645
    8. ']()' → logprob: -10.628437995910645
    9. '_car' → logprob: -10.753437995910645
    10. '():' → logprob: -10.753437995910645

Token 123: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01567475125193596
    2. '(' → logprob: -4.640674591064453
    3. '()' → logprob: -5.140674591064453
    4. ' (' → logprob: -10.515674591064453
    5. '(
' → logprob: -11.265674591064453
    6. 'self' → logprob: -12.515674591064453
    7. '():' → logprob: -13.765674591064453
    8. '   ' → logprob: -14.015674591064453
    9. '(

' → logprob: -15.015674591064453
    10. ')' → logprob: -15.140674591064453

Token 124: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014121544547379017
    2. '):' → logprob: -4.3891215324401855
    3. ' )' → logprob: -6.5141215324401855
    4. '()' → logprob: -10.014122009277344
    5. '):
' → logprob: -10.264122009277344
    6. ' ):' → logprob: -10.639122009277344
    7. '())' → logprob: -11.389122009277344
    8. '():' → logprob: -12.514122009277344
    9. '(self' → logprob: -13.014122009277344
    10. ' ' → logprob: -13.389122009277344

Token 125: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.056272562593221664
    2. '():' → logprob: -3.056272506713867
    3. '()' → logprob: -5.431272506713867
    4. ')' → logprob: -6.556272506713867
    5. '):' → logprob: -7.556272506713867
    6. ' ->' → logprob: -7.806272506713867
    7. ':return' → logprob: -8.306272506713867
    8. '():
' → logprob: -9.056272506713867
    9. '   ' → logprob: -9.181272506713867
    10. '->' → logprob: -9.431272506713867

Token 126: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6112743616104126
    2. ' None' → logprob: -1.7362743616104126
    3. ' self' → logprob: -1.8612743616104126
    4. 'int' → logprob: -2.611274242401123
    5. 'self' → logprob: -3.361274242401123
    6. 'None' → logprob: -4.236274242401123
    7. ' (' → logprob: -6.611274242401123
    8. '()' → logprob: -7.111274242401123
    9. '(int' → logprob: -8.611274719238281
    10. '(self' → logprob: -8.611274719238281

Token 127: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0927806869149208
    2. '()' → logprob: -2.842780590057373
    3. ':' → logprob: -3.592780590057373
    4. '():
' → logprob: -5.967780590057373
    5. '(' → logprob: -8.592781066894531
    6. ':
' → logprob: -10.592781066894531
    7. '   ' → logprob: -11.342781066894531
    8. '       ' → logprob: -11.592781066894531
    9. '):' → logprob: -12.092781066894531
    10. ')' → logprob: -12.467781066894531

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014369006967172027
    2. ' if' → logprob: -7.001436710357666
    3. ' return' → logprob: -7.876436710357666
    4. '
' → logprob: -9.626437187194824
    5. 'return' → logprob: -10.251437187194824
    6. 'if' → logprob: -10.376437187194824
    7. '   ' → logprob: -11.876437187194824
    8. '0' → logprob: -13.001437187194824
    9. '        
' → logprob: -13.876437187194824
    10. ' 
' → logprob: -14.251437187194824

Token 129: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03370056673884392
    2. 'return' → logprob: -3.783700466156006
    3. ' self' → logprob: -4.783700466156006
    4. '       ' → logprob: -7.158700466156006
    5. 'if' (adapté à ' if') → logprob: -7.408700466156006
    6. ' return' → logprob: -7.408700466156006
    7. ' if' → logprob: -10.658700942993164
    8. '   ' → logprob: -10.783700942993164
    9. '0' → logprob: -15.283700942993164
    10. '
' → logprob: -15.408700942993164

Token 130: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0007537625497207046
    2. 'self' → logprob: -7.375753879547119
    3. ' not' → logprob: -9.000753402709961
    4. '	self' → logprob: -13.375753402709961
    5. ' ' → logprob: -13.750753402709961
    6. ' ' → logprob: -14.375753402709961
    7. ' len' → logprob: -14.750753402709961
    8. '   ' → logprob: -16.00075340270996
    9. 'not' → logprob: -17.12575340270996
    10. '  ' → logprob: -17.25075340270996

Token 131: '.queue' (ID: 60866)
  Prédit: '.queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.queue' → logprob: -6.015305552864447e-05
    2. '.' → logprob: -10.000060081481934
    3. ' .' → logprob: -12.000060081481934
    4. 'queue' → logprob: -12.125060081481934
    5. ' queue' → logprob: -13.000060081481934
    6. '	queue' → logprob: -14.375060081481934
    7. '(queue' → logprob: -16.12506103515625
    8. '.front' → logprob: -16.62506103515625
    9. '.car' → logprob: -17.75006103515625
    10. ':' → logprob: -17.87506103515625

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002055927412584424
    2. '[' → logprob: -6.752056121826172
    3. ':
' → logprob: -7.252056121826172
    4. '>' → logprob: -9.252056121826172
    5. ' >' → logprob: -10.377056121826172
    6. ' :' → logprob: -10.877056121826172
    7. ' and' → logprob: -11.877056121826172
    8. '):' → logprob: -12.377056121826172
    9. ')' → logprob: -12.627056121826172
    10. '==' → logprob: -13.002056121826172

Token 133: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08904000371694565
    2. ':
' → logprob: -3.2140400409698486
    3. '           ' → logprob: -3.5890400409698486
    4. '[' → logprob: -5.2140398025512695
    5. '       ' → logprob: -5.2140398025512695
    6. ' ==' → logprob: -6.7140398025512695
    7. '>' → logprob: -6.7140398025512695
    8. ' >' → logprob: -6.7140398025512695
    9. ':return' → logprob: -7.0890398025512695
    10. '==' → logprob: -7.0890398025512695

Token 134: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5775896906852722
    2. ' return' → logprob: -0.8275896906852722
    3. '           ' → logprob: -6.577589511871338
    4. '       ' → logprob: -8.327589988708496
    5. '   ' → logprob: -12.077589988708496
    6. '	return' → logprob: -12.327589988708496
    7. '               ' → logprob: -12.702589988708496
    8. '```' → logprob: -13.702589988708496
    9. ' ' → logprob: -14.202589988708496
    10. ':return' → logprob: -15.827589988708496

Token 135: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.313263863325119
    2. 'self' → logprob: -1.3132638931274414
    3. '	self' → logprob: -13.438263893127441
    4. ' ' → logprob: -14.313263893127441
    5. '(self' → logprob: -17.438262939453125
    6. '       ' → logprob: -17.813262939453125
    7. ' ' → logprob: -17.938262939453125
    8. '   ' → logprob: -18.063262939453125
    9. '[self' → logprob: -18.063262939453125
    10. '```' → logprob: -18.063262939453125

Token 136: '.queue' (ID: 60866)
  Prédit: '.queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.queue' → logprob: -0.00041506090201437473
    2. '.' → logprob: -7.875414848327637
    3. ' .' → logprob: -10.875414848327637
    4. 'queue' → logprob: -11.125414848327637
    5. '.front' → logprob: -15.000414848327637
    6. '	queue' → logprob: -15.000414848327637
    7. '[' → logprob: -15.500414848327637
    8. '.q' → logprob: -15.500414848327637
    9. '.query' → logprob: -16.875415802001953
    10. ' queue' → logprob: -17.000415802001953

Token 137: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.75
    3. '```' → logprob: -15.875
    4. '[
' → logprob: -17.125
    5. '0' → logprob: -17.75
    6. '
' → logprob: -18.125
    7. '[-' → logprob: -18.75
    8. '.' → logprob: -19.125
    9. ' ' → logprob: -20.625
    10. '   ' → logprob: -20.625

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.750021934509277
    3. '
' → logprob: -16.000022888183594
    4. '   ' → logprob: -16.687522888183594
    5. '```' → logprob: -16.687522888183594
    6. '[' → logprob: -17.000022888183594
    7. '-' → logprob: -17.125022888183594
    8. '00' → logprob: -17.500022888183594
    9. '  ' → logprob: -17.625022888183594
    10. '۰' → logprob: -18.000022888183594

Token 139: '].' (ID: 1651)
  Prédit: '.number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.05462689325213432
    2. '.' → logprob: -3.054626941680908
    3. ').' → logprob: -5.554626941680908
    4. ' .' → logprob: -6.304626941680908
    5. '].' → logprob: -8.67962646484375
    6. '.code' → logprob: -9.67962646484375
    7. '.num' → logprob: -11.17962646484375
    8. '.user' → logprob: -11.80462646484375
    9. '.name' → logprob: -11.92962646484375
    10. '.token' → logprob: -12.05462646484375

Token 140: 'number' (ID: 8096)
  Prédit: 'number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -3.128163257315464e-07
    2. ' number' → logprob: -15.375
    3. 'num' → logprob: -19.0
    4. '.number' → logprob: -19.875
    5. '	number' → logprob: -20.125
    6. 'nummer' → logprob: -20.5
    7. '_number' → logprob: -20.625
    8. 'umber' → logprob: -20.625
    9. ' ' → logprob: -22.375
    10. 'n' → logprob: -22.75

Token 141: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00444471649825573
    2. '<|end|>' → logprob: -6.379444599151611
    3. '
' → logprob: -6.629444599151611
    4. 'return' → logprob: -7.254444599151611
    5. 'else' → logprob: -7.754444599151611
    6. ' else' → logprob: -9.00444507598877
    7. '        ' → logprob: -10.37944507598877
    8. ' return' → logprob: -10.50444507598877
    9. '	' → logprob: -10.62944507598877
    10. '   ' → logprob: -11.87944507598877

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007374596782028675
    2. '
' → logprob: -5.3823747634887695
    3. ' else' → logprob: -6.7573747634887695
    4. 'else' → logprob: -7.5073747634887695
    5. '<|end|>' → logprob: -7.7573747634887695
    6. '	' → logprob: -8.00737476348877
    7. 'return' → logprob: -9.00737476348877
    8. ' return' → logprob: -10.00737476348877
    9. '	else' → logprob: -10.88237476348877
    10. '	return' → logprob: -11.13237476348877

Token 143: ' raise' (ID: 9338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.32625913619995117
    2. 'None' → logprob: -1.3262591361999512
    3. 'raise' (adapté à ' raise') → logprob: -4.826259136199951
    4. '       ' → logprob: -5.576259136199951
    5. ' None' → logprob: -7.451259136199951
    6. ' return' → logprob: -7.951259136199951
    7. 'else' → logprob: -9.07625961303711
    8. ' raise' → logprob: -10.32625961303711
    9. '   ' → logprob: -10.57625961303711
    10. '           ' → logprob: -13.82625961303711

Token 144: ' Index' (ID: 14580)
  Prédit: ' Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Index' → logprob: -0.0009755438077263534
    2. 'Index' → logprob: -7.000975608825684
    3. ' Value' → logprob: -9.750975608825684
    4. ' Lookup' → logprob: -12.250975608825684
    5. '(Index' → logprob: -14.875975608825684
    6. ' ' → logprob: -15.500975608825684
    7. 'Value' → logprob: -15.875975608825684
    8. '[Index' → logprob: -16.500974655151367
    9. '_Index' → logprob: -16.625974655151367
    10. ' index' → logprob: -17.125974655151367

Token 145: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9361264946837764e-07
    2. 'Erro' → logprob: -16.375
    3. 'rror' → logprob: -17.5
    4. 'Index' → logprob: -17.75
    5. 'Er' → logprob: -19.375
    6. 'Errors' → logprob: -20.875
    7. 'ERROR' → logprob: -21.625
    8. ' Error' → logprob: -21.75
    9. '	Error' → logprob: -21.75
    10. 'E' → logprob: -21.875

Token 146: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -8.756989700486884e-05
    2. '(' → logprob: -9.37508773803711
    3. '()' → logprob: -13.50008773803711
    4. '("")' → logprob: -14.25008773803711
    5. '('' → logprob: -15.00008773803711
    6. '(
' → logprob: -16.25008773803711
    7. '("'' → logprob: -17.75008773803711
    8. '("("' → logprob: -18.62508773803711
    9. '"' → logprob: -19.12508773803711
    10. '("(' → logprob: -19.37508773803711

Token 147: 'No' (ID: 3160)
  Prédit: 'Trying'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Trying' → logprob: -0.6694713234901428
    2. 'No' → logprob: -0.7944713234901428
    3. ' No' → logprob: -4.669471263885498
    4. ' Trying' → logprob: -4.794471263885498
    5. 'Lane' → logprob: -4.919471263885498
    6. ' Lane' → logprob: -5.919471263885498
    7. 'There' → logprob: -6.044471263885498
    8. 'Queue' → logprob: -6.419471263885498
    9. 'Empty' → logprob: -6.669471263885498
    10. 'Cannot' → logprob: -6.919471263885498

Token 148: ' car' (ID: 1669)
  Prédit: ' cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cars' → logprob: -0.45166948437690735
    2. ' car' → logprob: -1.076669454574585
    3. ' front' → logprob: -3.951669454574585
    4. ' ' → logprob: -6.076669692993164
    5. ' more' → logprob: -7.076669692993164
    6. 'cars' → logprob: -9.326669692993164
    7. 'car' → logprob: -10.076669692993164
    8. 's' → logprob: -10.201669692993164
    9. 'front' → logprob: -10.576669692993164
    10. 'more' → logprob: -11.014169692993164

Token 149: ' at' (ID: 540)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06993131339550018
    2. 's' → logprob: -2.9449312686920166
    3. ' at' → logprob: -4.819931507110596
    4. 'in' → logprob: -5.069931507110596
    5. ' s' → logprob: -8.694931030273438
    6. ' is' → logprob: -8.819931030273438
    7. ' to' → logprob: -9.444931030273438
    8. ' ' → logprob: -10.069931030273438
    9. 'at' → logprob: -10.069931030273438
    10. ' available' → logprob: -10.444931030273438

Token 150: ' front' (ID: 5567)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.23900280892848969
    2. ' front' → logprob: -1.6140028238296509
    3. 'front' → logprob: -4.864002704620361
    4. 'the' → logprob: -5.364002704620361
    5. ' ' → logprob: -6.864002704620361
    6. ' ' → logprob: -11.98900318145752
    7. ' this' → logprob: -12.23900318145752
    8. '  ' → logprob: -12.23900318145752
    9. '   ' → logprob: -12.23900318145752
    10. '_front' → logprob: -12.23900318145752

Token 151: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.48408371210098267
    2. ' of' → logprob: -1.109083652496338
    3. 'of' → logprob: -2.984083652496338
    4. ')' → logprob: -5.984083652496338
    5. ' to' → logprob: -8.109084129333496
    6. ')")' → logprob: -8.609084129333496
    7. ' ")' → logprob: -9.484084129333496
    8. ' in' → logprob: -9.859084129333496
    9. 'to' → logprob: -9.984084129333496
    10. 'car' → logprob: -10.234084129333496

Token 152: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06411117315292358
    2. '

' → logprob: -2.9391112327575684
    3. 'class' → logprob: -5.189111232757568
    4. '<|end|>' → logprob: -6.564111232757568
    5. '```' → logprob: -7.939111232757568
    6. '
' → logprob: -7.939111232757568
    7. '


' → logprob: -8.18911075592041
    8. '[' → logprob: -8.81411075592041
    9. '' → logprob: -8.81411075592041
    10. 'def' → logprob: -8.93911075592041

Token 153: ' Lane' (ID: 39354)
  Prédit: ' Traffic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Traffic' → logprob: -0.08991005271673203
    2. ' Intersection' → logprob: -3.2149100303649902
    3. 'Traffic' → logprob: -3.7149100303649902
    4. ' Road' → logprob: -4.46491003036499
    5. 'Intersection' → logprob: -5.83991003036499
    6. ' Car' → logprob: -5.83991003036499
    7. ' Lane' → logprob: -6.58991003036499
    8. ' ' → logprob: -7.71491003036499
    9. ' Junction' → logprob: -7.71491003036499
    10. ' Parking' → logprob: -7.96491003036499

Token 154: 'Selector' (ID: 8011)
  Prédit: 'Manager'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Manager' → logprob: -0.14167091250419617
    2. 'Controller' → logprob: -3.5166709423065186
    3. 'Switcher' → logprob: -3.5166709423065186
    4. 'System' → logprob: -4.1416707038879395
    5. 'Traffic' → logprob: -4.5166707038879395
    6. 'Selector' → logprob: -4.7666707038879395
    7. ':' → logprob: -5.2666707038879395
    8. 's' → logprob: -5.3916707038879395
    9. 'Change' → logprob: -5.7666707038879395
    10. 'Group' → logprob: -5.8916707038879395

Token 155: 'Strategy' (ID: 21488)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0046495418064296246
    2. ':
' → logprob: -5.379649639129639
    3. ' :' → logprob: -10.62964916229248
    4. '(' → logprob: -13.62964916229248
    5. ' :
' → logprob: -13.75464916229248
    6. '():' → logprob: -13.87964916229248
    7. ':def' → logprob: -14.25464916229248
    8. ':

' → logprob: -14.37964916229248
    9. '):' → logprob: -15.75464916229248
    10. '(object' → logprob: -15.87964916229248

Token 156: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001549089647596702
    2. ':
' → logprob: -8.875154495239258
    3. ' :' → logprob: -11.875154495239258
    4. '(' → logprob: -11.875154495239258
    5. ':

' → logprob: -14.625154495239258
    6. '():' → logprob: -15.250154495239258
    7. ':def' → logprob: -15.625154495239258
    8. '(object' → logprob: -15.875154495239258
    9. '(Abstract' → logprob: -17.000154495239258
    10. ',' → logprob: -17.500154495239258

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20373883843421936
    2. ' def' → logprob: -1.953738808631897
    3. ' 
' → logprob: -3.4537389278411865
    4. '    
' → logprob: -5.328738689422607
    5. '    ' → logprob: -6.078738689422607
    6. '
' → logprob: -6.328738689422607
    7. ' ' → logprob: -6.453738689422607
    8. '     
' → logprob: -9.703739166259766
    9. 'def' → logprob: -9.828739166259766
    10. '	def' → logprob: -9.828739166259766

Token 158: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0036109976936131716
    2. 'def' (adapté à ' def') → logprob: -5.628611087799072
    3. '   ' → logprob: -12.128610610961914
    4. ' ' → logprob: -13.628610610961914
    5. '    ' → logprob: -14.003610610961914
    6. 'from' → logprob: -14.253610610961914
    7. 'class' → logprob: -14.378610610961914
    8. ' import' → logprob: -14.628610610961914
    9. ' class' → logprob: -14.628610610961914
    10. ' from' → logprob: -15.003610610961914

Token 159: ' select' (ID: 4736)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08768197149038315
    2. ' select' → logprob: -2.712682008743286
    3. ' _' → logprob: -5.337681770324707
    4. ' t' → logprob: -5.962681770324707
    5. '  ' → logprob: -6.087681770324707
    6. ' def' → logprob: -6.212681770324707
    7. ' choose' → logprob: -6.587681770324707
    8. 'n' → logprob: -6.962681770324707
    9. 't' → logprob: -7.087681770324707
    10. 'itialize' → logprob: -7.837681770324707

Token 160: '_lane' (ID: 160228)
  Prédit: '_lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lane' → logprob: -0.008135675452649593
    2. '(self' → logprob: -5.008135795593262
    3. '_' → logprob: -7.508135795593262
    4. '(' → logprob: -7.633135795593262
    5. '_l' → logprob: -8.758135795593262
    6. '_car' → logprob: -9.008135795593262
    7. '_(' → logprob: -9.758135795593262
    8. '_next' → logprob: -10.508135795593262
    9. '_self' → logprob: -11.883135795593262
    10. '(_' → logprob: -13.133135795593262

Token 161: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00048167374916374683
    2. '(' → logprob: -7.750481605529785
    3. ' (' → logprob: -10.000481605529785
    4. '(s' → logprob: -13.000481605529785
    5. '(l' → logprob: -13.500481605529785
    6. 'self' → logprob: -14.125481605529785
    7. '(
' → logprob: -14.250481605529785
    8. '(sel' → logprob: -15.375481605529785
    9. ' self' → logprob: -16.5004825592041
    10. '(Self' → logprob: -17.1254825592041

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018623570213094354
    2. ' ,' → logprob: -6.376862525939941
    3. ')' → logprob: -9.001862525939941
    4. '):' → logprob: -10.751862525939941
    5. 'self' → logprob: -12.001862525939941
    6. ',self' → logprob: -13.001862525939941
    7. ' )' → logprob: -13.626862525939941
    8. 's' → logprob: -14.251862525939941
    9. ')->' → logprob: -14.376862525939941
    10. ' ' → logprob: -14.501862525939941

Token 163: ' lanes' (ID: 72055)
  Prédit: ' lanes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lanes' → logprob: -0.04596833512187004
    2. ' cars' → logprob: -4.420968532562256
    3. 'lan' → logprob: -4.545968532562256
    4. ' car' → logprob: -5.170968532562256
    5. 'self' → logprob: -5.545968532562256
    6. ' self' → logprob: -5.795968532562256
    7. 'car' → logprob: -5.920968532562256
    8. ' lane' → logprob: -6.545968532562256
    9. 'cars' → logprob: -6.670968532562256
    10. ' queues' → logprob: -6.670968532562256

Token 164: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3606736361980438
    2. ':' → logprob: -1.4856736660003662
    3. ')' → logprob: -3.360673666000366
    4. ' ):' → logprob: -3.610673666000366
    5. ',' → logprob: -5.235673427581787
    6. '):
' → logprob: -5.360673427581787
    7. ' )' → logprob: -5.860673427581787
    8. ':list' → logprob: -7.360673427581787
    9. ' :' → logprob: -7.485673427581787
    10. ' ):
' → logprob: -8.610673904418945

Token 165: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3243677318096161
    2. 'list' → logprob: -1.3243677616119385
    3. ')' → logprob: -5.449367523193359
    4. 'List' → logprob: -5.574367523193359
    5. '[list' → logprob: -7.074367523193359
    6. ' ' → logprob: -7.574367523193359
    7. '[' → logprob: -7.699367523193359
    8. ' [' → logprob: -7.949367523193359
    9. ' )' → logprob: -8.82436752319336
    10. '   ' → logprob: -9.19936752319336

Token 166: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10016967356204987
    2. '[L' → logprob: -3.1001696586608887
    3. ')' → logprob: -3.3501696586608887
    4. '):' → logprob: -4.350169658660889
    5. '):
' → logprob: -6.475169658660889
    6. ' )' → logprob: -8.100170135498047
    7. '[int' → logprob: -8.850170135498047
    8. ' ):' → logprob: -9.475170135498047
    9. ')->' → logprob: -9.725170135498047
    10. ' ' → logprob: -10.225170135498047

Token 167: 'Lane' (ID: 96626)
  Prédit: 'Lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lane' → logprob: -0.004122803919017315
    2. ' Lane' → logprob: -5.504122734069824
    3. 'Lan' → logprob: -10.754122734069824
    4. '[' → logprob: -11.504122734069824
    5. '
' → logprob: -12.379122734069824
    6. ' ' → logprob: -13.379122734069824
    7. ']' → logprob: -13.629122734069824
    8. 'int' → logprob: -13.754122734069824
    9. ')' → logprob: -14.129122734069824
    10. '_lane' → logprob: -14.129122734069824

Token 168: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00026968008023686707
    2. ')' → logprob: -9.250269889831543
    3. '],' → logprob: -9.625269889831543
    4. ']' → logprob: -9.750269889831543
    5. ']):' → logprob: -10.500269889831543
    6. ' ])' → logprob: -11.125269889831543
    7. ']):
' → logprob: -13.000269889831543
    8. ']])' → logprob: -13.500269889831543
    9. ']
' → logprob: -14.375269889831543
    10. ' ' → logprob: -14.750269889831543

Token 169: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12338850647211075
    2. ' ->' → logprob: -2.2483885288238525
    3. '->' → logprob: -4.873388290405273
    4. ':
' → logprob: -7.248388290405273
    5. ')->' → logprob: -7.248388290405273
    6. '   ' → logprob: -7.498388290405273
    7. ':return' → logprob: -7.998388290405273
    8. ')' → logprob: -8.373388290405273
    9. '):' → logprob: -9.373388290405273
    10. ' :' → logprob: -9.498388290405273

Token 170: ' Lane' (ID: 39354)
  Prédit: ' Lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Lane' → logprob: -0.7352507710456848
    2. 'int' → logprob: -1.23525071144104
    3. ' int' → logprob: -1.73525071144104
    4. 'Lane' → logprob: -2.98525071144104
    5. ' None' → logprob: -6.110250949859619
    6. 'None' → logprob: -7.735250949859619
    7. ' ' → logprob: -9.360250473022461
    8. ' Optional' → logprob: -9.985250473022461
    9. 'Optional' → logprob: -10.360250473022461
    10. '   ' → logprob: -10.485250473022461

Token 171: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04866844415664673
    2. ':
' → logprob: -3.048668384552002
    3. '   ' → logprob: -10.17366886138916
    4. ':return' → logprob: -10.79866886138916
    5. '<|end|>' → logprob: -11.67366886138916
    6. '       ' → logprob: -13.04866886138916
    7. '():' → logprob: -13.29866886138916
    8. ':def' → logprob: -13.29866886138916
    9. ' :' → logprob: -13.79866886138916
    10. '):' → logprob: -14.04866886138916

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026579394470900297
    2. ' raise' → logprob: -6.002657890319824
    3. 'raise' → logprob: -10.127657890319824
    4. '
' → logprob: -10.502657890319824
    5. '   ' → logprob: -10.752657890319824
    6. '<|end|>' → logprob: -11.002657890319824
    7. '        
' → logprob: -11.127657890319824
    8. '    ' → logprob: -11.627657890319824
    9. ' 
' → logprob: -11.877657890319824
    10. '	raise' → logprob: -12.002657890319824

Token 173: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.5044946670532227
    2. '       ' → logprob: -1.6294946670532227
    3. 'raise' (adapté à ' raise') → logprob: -1.8794946670532227
    4. 'pass' → logprob: -3.6294946670532227
    5. ' pass' → logprob: -3.8794946670532227
    6. '        ' → logprob: -8.754494667053223
    7. '#' → logprob: -9.504494667053223
    8. ' #' → logprob: -10.379494667053223
    9. '	raise' → logprob: -12.004494667053223
    10. 'return' → logprob: -12.504494667053223

Token 174: ' Not' (ID: 4037)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -0.20142541825771332
    2. ' Not' → logprob: -1.7014254331588745
    3. 'N' → logprob: -11.701425552368164
    4. '_Not' → logprob: -13.201425552368164
    5. 'No' → logprob: -13.826425552368164
    6. '@Not' → logprob: -14.826425552368164
    7. '(Not' → logprob: -14.951425552368164
    8. ' ' → logprob: -15.826425552368164
    9. '```' → logprob: -16.701425552368164
    10. '\Not' → logprob: -16.826425552368164

Token 175: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -1.7120533811976202e-05
    2. 'Impl' → logprob: -11.375017166137695
    3. 'Im' → logprob: -12.750017166137695
    4. 'Imp' → logprob: -13.625017166137695
    5. 'Implement' → logprob: -14.000017166137695
    6. 'implemented' → logprob: -14.625017166137695
    7. 'plement' → logprob: -15.625017166137695
    8. '```' → logprob: -16.500017166137695
    9. '

' → logprob: -17.875017166137695
    10. 'e' → logprob: -18.500017166137695

Token 176: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -6.392202976712724e-06
    2. 'rror' → logprob: -12.125006675720215
    3. 'Method' → logprob: -14.500006675720215
    4. 'error' → logprob: -16.0000057220459
    5. 'Warning' → logprob: -16.2500057220459
    6. '

' → logprob: -16.8750057220459
    7. '```' → logprob: -17.1250057220459
    8. 'Operation' → logprob: -17.3750057220459
    9. 'Erro' → logprob: -17.3750057220459
    10. 'Option' → logprob: -18.1250057220459

Token 177: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12573112547397614
    2. 'class' → logprob: -2.5007312297821045
    3. '<|end|>' → logprob: -3.6257312297821045
    4. '

' → logprob: -5.000730991363525
    5. '   ' → logprob: -6.625730991363525
    6. ' 
' → logprob: -7.250730991363525
    7. '<|end|>' → logprob: -9.000731468200684
    8. ' ' → logprob: -9.125731468200684
    9. '  
' → logprob: -9.250731468200684
    10. '    
' → logprob: -9.750731468200684

Token 178: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5252041816711426
    2. '
' → logprob: -0.9002041816711426
    3. '

' → logprob: -6.775204181671143
    4. ' 
' → logprob: -7.775204181671143
    5. '   ' → logprob: -8.775203704833984
    6. '    
' → logprob: -9.525203704833984
    7. '' → logprob: -9.650203704833984
    8. '
' → logprob: -9.900203704833984
    9. ' class' → logprob: -9.900203704833984
    10. '  
' → logprob: -10.150203704833984

Token 179: ' Min' (ID: 4438)
  Prédit: ' Short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Short' → logprob: -0.6995148658752441
    2. ' Least' → logprob: -1.8245148658752441
    3. 'Shortest' → logprob: -2.449514865875244
    4. ' Car' → logprob: -2.824514865875244
    5. ' Min' → logprob: -3.824514865875244
    6. ' Lane' → logprob: -3.824514865875244
    7. ' Minimal' → logprob: -3.949514865875244
    8. ' ' → logprob: -3.949514865875244
    9. ' Most' → logprob: -4.074514865875244
    10. ' Queue' → logprob: -4.199514865875244

Token 180: 'Length' (ID: 6563)
  Prédit: 'Queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Queue' → logprob: -0.08182352781295776
    2. 'Car' → logprob: -2.8318235874176025
    3. 'Lane' → logprob: -4.456823348999023
    4. 'Length' → logprob: -5.206823348999023
    5. 'Cars' → logprob: -6.831823348999023
    6. 'imum' → logprob: -7.206823348999023
    7. 'imal' → logprob: -8.331823348999023
    8. 'Traffic' → logprob: -9.331823348999023
    9. 'Load' → logprob: -9.456823348999023
    10. 'queue' → logprob: -9.831823348999023

Token 181: 'Then' (ID: 19371)
  Prédit: 'Lane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Lane' → logprob: -0.4536343514919281
    2. 'Selector' → logprob: -1.7036343812942505
    3. 'Strategy' → logprob: -1.7036343812942505
    4. 'Selection' → logprob: -8.078634262084961
    5. 'Select' → logprob: -8.703634262084961
    6. 'Selecting' → logprob: -10.703634262084961
    7. 'Lan' → logprob: -11.078634262084961
    8. 'Queue' → logprob: -11.328634262084961
    9. 'Length' → logprob: -11.453634262084961
    10. 'Chooser' → logprob: -11.453634262084961

Token 182: 'Min' (ID: 6712)
  Prédit: 'Front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Front' → logprob: -0.8782253265380859
    2. 'Car' → logprob: -1.503225326538086
    3. 'Number' → logprob: -1.878225326538086
    4. 'Lane' → logprob: -2.628225326538086
    5. 'Min' → logprob: -3.503225326538086
    6. 'First' → logprob: -3.503225326538086
    7. 'Max' → logprob: -4.128225326538086
    8. 'Id' → logprob: -4.253225326538086
    9. 'Lex' → logprob: -4.503225326538086
    10. 'Priority' → logprob: -5.128225326538086

Token 183: 'Id' (ID: 906)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.16529212892055511
    2. 'Car' → logprob: -2.4152920246124268
    3. 'Front' → logprob: -3.7902920246124268
    4. 'Index' → logprob: -4.040292263031006
    5. 'Lane' → logprob: -4.790292263031006
    6. 'Id' → logprob: -5.290292263031006
    7. 'Queue' → logprob: -5.540292263031006
    8. 'ID' → logprob: -5.915292263031006
    9. 'Value' → logprob: -6.915292263031006
    10. 'Num' → logprob: -7.540292263031006

Token 184: 'Selector' (ID: 8011)
  Prédit: 'Selector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selector' → logprob: -0.8388515710830688
    2. 'Strategy' → logprob: -0.9638515710830688
    3. 'Lane' → logprob: -1.7138515710830688
    4. ':' → logprob: -5.588851451873779
    5. '(L' → logprob: -7.213851451873779
    6. 'Selection' → logprob: -7.963851451873779
    7. 'Select' → logprob: -7.963851451873779
    8. 'selector' → logprob: -8.838851928710938
    9. ':
' → logprob: -9.463851928710938
    10. 'Class' → logprob: -9.713851928710938

Token 185: '(L' (ID: 11075)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1849869340658188
    2. '(L' → logprob: -1.80998694896698
    3. ':
' → logprob: -5.5599870681762695
    4. '(' → logprob: -6.8099870681762695
    5. 'Strategy' → logprob: -9.43498706817627
    6. '():' → logprob: -9.43498706817627
    7. ' :' → logprob: -9.80998706817627
    8. '(
' → logprob: -10.55998706817627
    9. ':L' → logprob: -11.43498706817627
    10. '   ' → logprob: -12.18498706817627

Token 186: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -0.0020386797841638327
    2. 'a' → logprob: -7.127038478851318
    3. 'ength' → logprob: -7.377038478851318
    4. 'an' → logprob: -8.752038955688477
    5. 'en' → logprob: -8.877038955688477
    6. 'e' → logprob: -9.252038955688477
    7. 'anes' → logprob: -10.752038955688477
    8. ' ane' → logprob: -10.877038955688477
    9. 'ine' → logprob: -11.127038955688477
    10. 'ist' → logprob: -11.252038955688477

Token 187: 'Selector' (ID: 8011)
  Prédit: 'Selector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selector' → logprob: -0.005199366714805365
    2. '):' → logprob: -5.505199432373047
    3. ')' → logprob: -8.005199432373047
    4. 'Strategy' → logprob: -8.005199432373047
    5. '):
' → logprob: -8.255199432373047
    6. '   ' → logprob: -10.130199432373047
    7. '_selector' → logprob: -10.380199432373047
    8. ':' → logprob: -10.505199432373047
    9. '_SELECTOR' → logprob: -11.255199432373047
    10. 'Sele' → logprob: -11.380199432373047

Token 188: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.0009107483783736825
    2. '):' → logprob: -7.375910758972168
    3. ')' → logprob: -8.500910758972168
    4. '_strategy' → logprob: -10.500910758972168
    5. 'Strateg' → logprob: -11.000910758972168
    6. '):
' → logprob: -11.250910758972168
    7. '   ' → logprob: -12.250910758972168
    8. 'Stra' → logprob: -12.250910758972168
    9. ' Strategy' → logprob: -12.875910758972168
    10. ' strategy' → logprob: -13.125910758972168

Token 189: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4742121994495392
    2. '):' → logprob: -0.9742121696472168
    3. ')' → logprob: -10.349212646484375
    4. '):
' → logprob: -10.599212646484375
    5. ':' → logprob: -10.724212646484375
    6. ' ):' → logprob: -10.974212646484375
    7. '   ' → logprob: -11.349212646484375
    8. ' ):
' → logprob: -11.349212646484375
    9. '):

' → logprob: -11.599212646484375
    10. ':
' → logprob: -12.224212646484375

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47065475583076477
    2. '
' → logprob: -1.7206547260284424
    3. ':' → logprob: -1.8456547260284424
    4. ':
' → logprob: -3.7206547260284424
    5. ' def' → logprob: -4.7206549644470215
    6. 'def' → logprob: -6.0956549644470215
    7. '    
' → logprob: -6.5956549644470215
    8. ':def' → logprob: -7.3456549644470215
    9. '	def' → logprob: -7.7206549644470215
    10. '```' → logprob: -8.970654487609863

Token 191: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.07532324641942978
    2. '   ' → logprob: -3.2003233432769775
    3. 'def' (adapté à ' def') → logprob: -3.4503233432769775
    4. '
' → logprob: -9.575323104858398
    5. '	def' → logprob: -13.450323104858398
    6. '    
' → logprob: -14.825323104858398
    7. ' ' → logprob: -15.200323104858398
    8. '    ' → logprob: -16.2003231048584
    9. '  ' → logprob: -16.2003231048584
    10. ' 
' → logprob: -16.3253231048584

Token 192: ' select' (ID: 4736)
  Prédit: ' select'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' select' → logprob: -0.0006917051505297422
    2. 'select' → logprob: -7.500691890716553
    3. ' def' → logprob: -9.125691413879395
    4. ' ' → logprob: -10.875691413879395
    5. ' ' → logprob: -12.625691413879395
    6. ' sele' → logprob: -12.875691413879395
    7. '_select' → logprob: -13.500691413879395
    8. ' _' → logprob: -14.125691413879395
    9. 'def' → logprob: -14.375691413879395
    10. ' sel' → logprob: -14.500691413879395

Token 193: '_lane' (ID: 160228)
  Prédit: '_lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lane' → logprob: -0.00028612653841264546
    2. '_' → logprob: -8.250286102294922
    3. '_l' → logprob: -10.875286102294922
    4. ' _' → logprob: -12.625286102294922
    5. '_
' → logprob: -14.000286102294922
    6. '
' → logprob: -14.875286102294922
    7. '_line' → logprob: -15.125286102294922
    8. '```' → logprob: -15.250286102294922
    9. '_le' → logprob: -15.875286102294922
    10. '_la' → logprob: -15.875286102294922

Token 194: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.719917630311102e-05
    2. '(' → logprob: -9.500077247619629
    3. ' (' → logprob: -13.625077247619629
    4. '   ' → logprob: -14.625077247619629
    5. '(
' → logprob: -15.375077247619629
    6. '(s' → logprob: -15.500077247619629
    7. 'self' → logprob: -16.125076293945312
    8. '(sel' → logprob: -16.625076293945312
    9. '       ' → logprob: -17.000076293945312
    10. '(se' → logprob: -17.625076293945312

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028514713048934937
    2. ' ,' → logprob: -5.877851486206055
    3. '       ' → logprob: -10.627851486206055
    4. ',self' → logprob: -12.377851486206055
    5. 'self' → logprob: -12.502851486206055
    6. '   ' → logprob: -12.752851486206055
    7. ',
' → logprob: -12.752851486206055
    8. '(self' → logprob: -13.127851486206055
    9. ')' → logprob: -13.377851486206055
    10. ' self' → logprob: -13.752851486206055

Token 196: ' lanes' (ID: 72055)
  Prédit: ' lanes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lanes' → logprob: -0.1446457952260971
    2. 'lan' → logprob: -2.0196456909179688
    3. ' self' → logprob: -6.894645690917969
    4. 'self' → logprob: -7.019645690917969
    5. ' lan' → logprob: -10.894645690917969
    6. '       ' → logprob: -11.519645690917969
    7. '   ' → logprob: -11.894645690917969
    8. 'l' → logprob: -12.144645690917969
    9. ' ' → logprob: -12.644645690917969
    10. ' lane' → logprob: -13.019645690917969

Token 197: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009265927597880363
    2. '):' → logprob: -4.759265899658203
    3. '):
' → logprob: -8.009265899658203
    4. ')' → logprob: -8.634265899658203
    5. ' :' → logprob: -9.384265899658203
    6. ' ):' → logprob: -10.009265899658203
    7. ' )' → logprob: -12.884265899658203
    8. '[' → logprob: -13.259265899658203
    9. ' ):
' → logprob: -13.259265899658203
    10. '   ' → logprob: -13.384265899658203

Token 198: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.10030274093151093
    2. 'list' → logprob: -2.3503026962280273
    3. 'List' → logprob: -10.225302696228027
    4. ')' → logprob: -10.600302696228027
    5. 'self' → logprob: -11.475302696228027
    6. ' self' → logprob: -11.725302696228027
    7. ' List' → logprob: -11.975302696228027
    8. '   ' → logprob: -13.350302696228027
    9. '[list' → logprob: -13.600302696228027
    10. ' [' → logprob: -13.850302696228027

Token 199: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.416665640543215e-05
    2. '[L' → logprob: -10.87503433227539
    3. ')' → logprob: -12.00003433227539
    4. '[
' → logprob: -12.12503433227539
    5. '):
' → logprob: -13.75003433227539
    6. '
' → logprob: -14.00003433227539
    7. '):' → logprob: -14.00003433227539
    8. ')[' → logprob: -16.12503433227539
    9. '```' → logprob: -16.12503433227539
    10. '[int' → logprob: -16.37503433227539

Token 200: 'Lane' (ID: 96626)
  Prédit: 'Lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lane' → logprob: -5.133198283147067e-05
    2. ' Lane' → logprob: -10.000051498413086
    3. ')' → logprob: -12.625051498413086
    4. 'Lan' → logprob: -14.125051498413086
    5. '   ' → logprob: -14.875051498413086
    6. '_lane' → logprob: -14.875051498413086
    7. '
' → logprob: -15.000051498413086
    8. 'lane' → logprob: -15.125051498413086
    9. 'LAN' → logprob: -15.500051498413086
    10. ' ' → logprob: -16.125051498413086

Token 201: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008193019777536392
    2. '):' → logprob: -4.883193016052246
    3. '):
' → logprob: -7.883193016052246
    4. ' )' → logprob: -9.133193016052246
    5. '   ' → logprob: -9.633193016052246
    6. '       ' → logprob: -11.508193016052246
    7. '])' → logprob: -11.883193016052246
    8. '):
' → logprob: -12.008193016052246
    9. ' ):' → logprob: -12.258193016052246
    10. ')->' → logprob: -13.133193016052246

Token 202: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0156704094260931
    2. ' ->' → logprob: -4.765670299530029
    3. '):' → logprob: -6.140670299530029
    4. ')' → logprob: -6.390670299530029
    5. ' :' → logprob: -6.390670299530029
    6. '->' → logprob: -7.140670299530029
    7. ':
' → logprob: -8.390670776367188
    8. '       ' → logprob: -8.515670776367188
    9. ')->' → logprob: -8.640670776367188
    10. '   ' → logprob: -10.515670776367188

Token 203: ' Lane' (ID: 39354)
  Prédit: ' Lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Lane' → logprob: -0.17988763749599457
    2. 'Lane' → logprob: -1.8048876523971558
    3. ' list' → logprob: -9.179887771606445
    4. 'list' → logprob: -10.554887771606445
    5. ' ' → logprob: -12.179887771606445
    6. 'List' → logprob: -13.429887771606445
    7. '_lane' → logprob: -13.554887771606445
    8. '[' → logprob: -13.804887771606445
    9. ' None' → logprob: -14.179887771606445
    10. ' [' → logprob: -14.304887771606445

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006889065727591515
    2. ':
' → logprob: -5.2568888664245605
    3. '       ' → logprob: -6.5068888664245605
    4. '):' → logprob: -9.506889343261719
    5. '():' → logprob: -10.756889343261719
    6. '):
' → logprob: -11.006889343261719
    7. '(self' → logprob: -11.006889343261719
    8. ' :' → logprob: -11.506889343261719
    9. '():
' → logprob: -12.256889343261719
    10. ':self' → logprob: -12.631889343261719

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012439649435691535
    2. '        
' → logprob: -10.000123977661133
    3. '
' → logprob: -10.250123977661133
    4. '   ' → logprob: -11.375123977661133
    5. '[' → logprob: -12.375123977661133
    6. '' → logprob: -12.875123977661133
    7. ' sorted' → logprob: -12.875123977661133
    8. '      ' → logprob: -13.125123977661133
    9. ' ' → logprob: -13.250123977661133
    10. '           ' → logprob: -13.250123977661133

Token 206: ' #' (ID: 1069)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.3672782778739929
    2. 'min' → logprob: -1.2422783374786377
    3. '       ' → logprob: -4.367278099060059
    4. 'return' → logprob: -6.492278099060059
    5. ' return' → logprob: -6.492278099060059
    6. 'sorted' → logprob: -6.992278099060059
    7. ' lanes' → logprob: -7.367278099060059
    8. ' sorted' → logprob: -7.492278099060059
    9. ' if' → logprob: -8.367278099060059
    10. 'lan' → logprob: -8.742278099060059

Token 207: ' Select' (ID: 13482)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.1434403359889984
    2. 'min' → logprob: -2.1434402465820312
    3. '       ' → logprob: -4.768440246582031
    4. ' if' → logprob: -5.268440246582031
    5. 'if' → logprob: -7.643440246582031
    6. ' sorted' → logprob: -7.643440246582031
    7. 'sorted' → logprob: -8.143440246582031
    8. 'length' → logprob: -8.643440246582031
    9. ' minimal' → logprob: -8.768440246582031
    10. ' lengths' → logprob: -8.893440246582031

Token 208: ' lane' (ID: 39989)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.48808205127716064
    2. ' lane' → logprob: -1.4880820512771606
    3. ' lanes' → logprob: -2.863081932067871
    4. 'min' → logprob: -3.113081932067871
    5. 'lan' → logprob: -3.363081932067871
    6. '       ' → logprob: -4.363081932067871
    7. 'lane' → logprob: -4.863081932067871
    8. ' the' → logprob: -6.613081932067871
    9. ' l' → logprob: -7.613081932067871
    10. ' lan' → logprob: -7.988081932067871

Token 209: ' with' (ID: 483)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.9244851469993591
    2. ' with' → logprob: -2.049485206604004
    3. '       ' → logprob: -2.174485206604004
    4. 'min' → logprob: -2.424485206604004
    5. ' sorted' → logprob: -2.424485206604004
    6. ' =' → logprob: -2.924485206604004
    7. ' by' → logprob: -3.299485206604004
    8. 's' → logprob: -3.674485206604004
    9. 'with' → logprob: -3.924485206604004
    10. '=' → logprob: -4.174485206604004

Token 210: ' few' (ID: 3120)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07413682341575623
    2. 'the' → logprob: -3.699136734008789
    3. 'minimum' → logprob: -4.074136734008789
    4. ' the' → logprob: -4.199136734008789
    5. ' min' → logprob: -4.449136734008789
    6. ' minimum' → logprob: -6.199136734008789
    7. 'minimal' → logprob: -7.449136734008789
    8. '(min' → logprob: -8.574136734008789
    9. ' minimal' → logprob: -8.824136734008789
    10. 'few' → logprob: -10.824136734008789

Token 211: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.030094444751739502
    2. 'er' → logprob: -3.5300943851470947
    3. '       ' → logprob: -8.280094146728516
    4. '   ' → logprob: -10.405094146728516
    5. 'erst' → logprob: -11.530094146728516
    6. '
' → logprob: -11.905094146728516
    7. '[' → logprob: -12.405094146728516
    8. '_er' → logprob: -12.405094146728516
    9. '```' → logprob: -12.655094146728516
    10. '_est' → logprob: -12.780094146728516

Token 212: ' cars' (ID: 13653)
  Prédit: ' cars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cars' → logprob: -0.02331174910068512
    2. 'cars' → logprob: -3.8983118534088135
    3. ' queue' → logprob: -6.398311614990234
    4. '   ' → logprob: -8.523311614990234
    5. '(queue' → logprob: -9.148311614990234
    6. 'queue' → logprob: -9.148311614990234
    7. '       ' → logprob: -9.273311614990234
    8. ' ' → logprob: -9.648311614990234
    9. ' .' → logprob: -9.648311614990234
    10. '().' → logprob: -9.773311614990234

Token 213: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014976135455071926
    2. ',' → logprob: -5.1399760246276855
    3. '        
' → logprob: -6.0149760246276855
    4. '
' → logprob: -6.5149760246276855
    5. 'min' → logprob: -6.8899760246276855
    6. ' min' → logprob: -7.6399760246276855
    7. '        ' → logprob: -7.6399760246276855
    8. ':' → logprob: -7.8899760246276855
    9. ' and' → logprob: -7.8899760246276855
    10. 'return' → logprob: -8.139976501464844

Token 214: ' if' (ID: 538)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5214405655860901
    2. 'min' → logprob: -1.0214405059814453
    3. '       ' → logprob: -3.3964405059814453
    4. '#' → logprob: -5.896440505981445
    5. ' lanes' → logprob: -5.896440505981445
    6. ' selected' → logprob: -6.396440505981445
    7. 'lan' → logprob: -7.021440505981445
    8. 'selected' → logprob: -7.146440505981445
    9. ' return' → logprob: -7.521440505981445
    10. 'return' → logprob: -7.646440505981445

Token 215: ' tie' (ID: 22244)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.45524677634239197
    2. 'len' → logprob: -2.205246686935425
    3. 'not' → logprob: -3.080246686935425
    4. ' multiple' → logprob: -3.080246686935425
    5. ' self' → logprob: -3.205246686935425
    6. 'self' → logprob: -3.455246686935425
    7. ' len' → logprob: -3.705246686935425
    8. 'multiple' → logprob: -4.330246925354004
    9. ' lanes' → logprob: -4.580246925354004
    10. ' there' → logprob: -4.830246925354004

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006419647950679064
    2. ' ,' → logprob: -5.631419658660889
    3. ':' → logprob: -6.006419658660889
    4. ' then' → logprob: -8.25641918182373
    5. ',
' → logprob: -10.25641918182373
    6. '   ' → logprob: -11.63141918182373
    7. ':
' → logprob: -11.88141918182373
    8. '       ' → logprob: -12.13141918182373
    9. 'then' → logprob: -12.38141918182373
    10. '           ' → logprob: -12.75641918182373

Token 217: ' smallest' (ID: 42173)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8864496946334839
    2. ' select' → logprob: -1.2614496946334839
    3. ' choose' → logprob: -1.3864496946334839
    4. 'return' → logprob: -3.7614498138427734
    5. 'choose' → logprob: -4.136449813842773
    6. 'select' → logprob: -4.886449813842773
    7. ' pick' → logprob: -5.886449813842773
    8. ' sort' → logprob: -6.261449813842773
    9. '       ' → logprob: -6.886449813842773
    10. '        ' → logprob: -7.011449813842773

Token 218: ' lane' (ID: 39989)
  Prédit: ' lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lane' → logprob: -0.04914670065045357
    2. 'lane' → logprob: -3.0491466522216797
    3. '_lane' → logprob: -7.79914665222168
    4. 'lan' → logprob: -10.04914665222168
    5. ' id' → logprob: -10.92414665222168
    6. '.l' → logprob: -11.29914665222168
    7. ' .' → logprob: -11.42414665222168
    8. 'l' → logprob: -11.54914665222168
    9. '```' → logprob: -11.67414665222168
    10. 'id' → logprob: -11.67414665222168

Token 219: ' ID' (ID: 4170)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.002584816189482808
    2. ' _' → logprob: -6.002584934234619
    3. '._' → logprob: -10.127584457397461
    4. '   ' → logprob: -10.502584457397461
    5. ' id' → logprob: -10.627584457397461
    6. '_' → logprob: -12.627584457397461
    7. '       ' → logprob: -13.127584457397461
    8. 'id' → logprob: -13.127584457397461
    9. '_number' → logprob: -13.627584457397461
    10. ' ' → logprob: -13.627584457397461

Token 220: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010997360572218895
    2. '
' → logprob: -5.135997295379639
    3. ' =' → logprob: -6.010997295379639
    4. ':' → logprob: -7.135997295379639
    5. '=' → logprob: -7.260997295379639
    6. '        
' → logprob: -7.635997295379639
    7. ',' → logprob: -9.010997772216797
    8. '        ' → logprob: -9.385997772216797
    9. '<|end|>' → logprob: -9.760997772216797
    10. ':
' → logprob: -10.010997772216797

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010007746750488877
    2. '
' → logprob: -7.126000881195068
    3. '        
' → logprob: -9.12600040435791
    4. ':' → logprob: -10.75100040435791
    5. 'return' → logprob: -10.87600040435791
    6. '        ' → logprob: -11.87600040435791
    7. ' 
' → logprob: -12.37600040435791
    8. ' return' → logprob: -12.37600040435791
    9. '  
' → logprob: -12.50100040435791
    10. '      ' → logprob: -12.62600040435791

Token 222: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.42426854372024536
    2. ' min' → logprob: -1.1742684841156006
    3. '       ' → logprob: -3.7992684841156006
    4. 'return' → logprob: -4.54926872253418
    5. ' return' → logprob: -6.29926872253418
    6. 'sorted' → logprob: -6.79926872253418
    7. 'lan' → logprob: -8.54926872253418
    8. 'best' → logprob: -8.67426872253418
    9. ' sorted' → logprob: -9.17426872253418
    10. ' lanes' → logprob: -9.67426872253418

Token 223: '_count' (ID: 7536)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.051149096339941025
    2. '_len' → logprob: -3.3011491298675537
    3. '_count' → logprob: -4.551148891448975
    4. '_lane' → logprob: -6.551148891448975
    5. '_' → logprob: -7.176148891448975
    6. '_queue' → logprob: -8.926149368286133
    7. '_l' → logprob: -9.051149368286133
    8. '_car' → logprob: -11.926149368286133
    9. '_num' → logprob: -12.426149368286133
    10. '_c' → logprob: -12.426149368286133

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022447004448622465
    2. '=' → logprob: -6.127244472503662
    3. ',' → logprob: -10.00224494934082
    4. '_' → logprob: -11.87724494934082
    5. '_lane' → logprob: -12.37724494934082
    6. ' ' → logprob: -13.75224494934082
    7. '   ' → logprob: -13.87724494934082
    8. ' ,' → logprob: -14.62724494934082
    9. '       ' → logprob: -15.50224494934082
    10. ' =
' → logprob: -15.50224494934082

Token 225: ' min' (ID: 1349)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5417345762252808
    2. 'min' → logprob: -1.0417345762252808
    3. ' min' → logprob: -3.0417346954345703
    4. ' float' → logprob: -4.04173469543457
    5. 'None' → logprob: -9.79173469543457
    6. ' None' → logprob: -10.54173469543457
    7. '   ' → logprob: -11.54173469543457
    8. 'len' → logprob: -12.04173469543457
    9. '
' → logprob: -14.41673469543457
    10. 'max' → logprob: -14.79173469543457

Token 226: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.017496513202786446
    2. '(' → logprob: -4.517496585845947
    3. '([' → logprob: -5.392496585845947
    4. '(len' → logprob: -6.392496585845947
    5. '((' → logprob: -8.892496109008789
    6. '(
' → logprob: -10.642496109008789
    7. 'lane' → logprob: -10.892496109008789
    8. '(self' → logprob: -11.267496109008789
    9. '(line' → logprob: -12.892496109008789
    10. '[l' → logprob: -13.267496109008789

Token 227: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -0.013614841736853123
    2. 'lane' → logprob: -5.013614654541016
    3. '[' → logprob: -5.513614654541016
    4. 'e' → logprob: -6.388614654541016
    5. '[e' → logprob: -8.513614654541016
    6. 'anes' → logprob: -8.763614654541016
    7. 'an' → logprob: -9.138614654541016
    8. '[
' → logprob: -9.513614654541016
    9. 'en' → logprob: -9.513614654541016
    10. '[l' → logprob: -9.888614654541016

Token 228: '.car' (ID: 49278)
  Prédit: '.car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -0.0006066487403586507
    2. '   ' → logprob: -8.500606536865234
    3. ' .' → logprob: -9.125606536865234
    4. ' car' → logprob: -9.375606536865234
    5. '(car' → logprob: -9.625606536865234
    6. '.key' → logprob: -9.625606536865234
    7. '.' → logprob: -10.625606536865234
    8. '       ' → logprob: -11.125606536865234
    9. 'car' → logprob: -11.750606536865234
    10. ',' → logprob: -12.250606536865234

Token 229: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.500000953674316
    3. ' _' → logprob: -15.625000953674316
    4. '_length' → logprob: -15.875000953674316
    5. '_counts' → logprob: -16.625
    6. 'count' → logprob: -16.75
    7. '_c' → logprob: -16.75
    8. '   ' → logprob: -17.0
    9. ')_' → logprob: -17.75
    10. '_
' → logprob: -18.125

Token 230: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012691522017121315
    2. ' for' → logprob: -4.887691497802734
    3. 'for' → logprob: -5.637691497802734
    4. '())' → logprob: -7.012691497802734
    5. ')' → logprob: -7.762691497802734
    6. '(),' → logprob: -10.012691497802734
    7. ' ()' → logprob: -10.137691497802734
    8. '   ' → logprob: -10.262691497802734
    9. '()
' → logprob: -11.137691497802734
    10. '       ' → logprob: -11.262691497802734

Token 231: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2288493812084198
    2. ')' → logprob: -2.228849411010742
    3. 'for' → logprob: -2.353849411010742
    4. '()' → logprob: -6.978849411010742
    5. ' )' → logprob: -7.228849411010742
    6. ')
' → logprob: -8.978849411010742
    7. '   ' → logprob: -10.478849411010742
    8. ' ' → logprob: -10.853849411010742
    9. '       ' → logprob: -10.978849411010742
    10. '())' → logprob: -11.103849411010742

Token 232: ' lane' (ID: 39989)
  Prédit: ' lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lane' → logprob: -0.47442883253097534
    2. 'lane' → logprob: -0.9744288325309753
    3. 'lan' → logprob: -8.4744291305542
    4. ' lanes' → logprob: -9.8494291305542
    5. ' ' → logprob: -10.4744291305542
    6. '_lane' → logprob: -11.0994291305542
    7. 'l' → logprob: -11.2244291305542
    8. '
' → logprob: -11.9744291305542
    9. ' lan' → logprob: -12.0994291305542
    10. '   ' → logprob: -13.0369291305542

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15421222150325775
    2. ' lanes' → logprob: -2.404212236404419
    3. 'lan' → logprob: -3.654212236404419
    4. 'in' → logprob: -3.654212236404419
    5. ' ' → logprob: -8.02921199798584
    6. 'lane' → logprob: -8.40421199798584
    7. 's' → logprob: -9.52921199798584
    8. ' lane' → logprob: -9.77921199798584
    9. ' lan' → logprob: -10.27921199798584
    10. 'l' → logprob: -10.40421199798584

Token 234: ' lanes' (ID: 72055)
  Prédit: 'lan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lan' → logprob: -0.12723790109157562
    2. ' lanes' → logprob: -2.1272377967834473
    3. '   ' → logprob: -9.502238273620605
    4. 'l' → logprob: -10.439738273620605
    5. 'lane' → logprob: -10.502238273620605
    6. '
' → logprob: -11.002238273620605
    7. ' ' → logprob: -11.002238273620605
    8. 'layers' → logprob: -11.064738273620605
    9. ' lan' → logprob: -11.127238273620605
    10. '```' → logprob: -11.439738273620605

Token 235: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3149542808532715
    2. ')
' → logprob: -1.3149542808532715
    3. '       ' → logprob: -7.3149542808532715
    4. ' )
' → logprob: -7.3149542808532715
    5. ' )' → logprob: -7.9399542808532715
    6. ')
' → logprob: -13.31495475769043
    7. ')

' → logprob: -13.68995475769043
    8. '   ' → logprob: -15.31495475769043
    9. '
' → logprob: -15.56495475769043
    10. ' if' → logprob: -16.06495475769043

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017010733485221863
    2. '
' → logprob: -5.017010688781738
    3. ' candidates' → logprob: -5.767010688781738
    4. '        
' → logprob: -5.892010688781738
    5. ' min' → logprob: -6.267010688781738
    6. 'min' → logprob: -6.642010688781738
    7. ' candidate' → logprob: -8.392010688781738
    8. 'candidate' → logprob: -9.017010688781738
    9. ' lanes' → logprob: -9.517010688781738
    10. '_candidates' → logprob: -9.642010688781738

Token 237: ' candidate' (ID: 17098)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -1.0211820602416992
    2. 'c' → logprob: -1.1461820602416992
    3. ' min' → logprob: -1.3961820602416992
    4. 'min' → logprob: -3.146182060241699
    5. 'candidate' (adapté à ' candidate') → logprob: -4.521182060241699
    6. ' candidate' → logprob: -4.646182060241699
    7. '       ' → logprob: -4.771182060241699
    8. ' c' → logprob: -7.896182060241699
    9. ' eligible' → logprob: -7.896182060241699
    10. 'possible' → logprob: -8.1461820602417

Token 238: '_l' (ID: 1478)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01117797289043665
    2. '_l' → logprob: -4.511178016662598
    3. '_s' → logprob: -9.386178016662598
    4. 'lan' → logprob: -11.011178016662598
    5. ' =' → logprob: -11.136178016662598
    6. ' s' → logprob: -11.761178016662598
    7. '_lane' → logprob: -12.386178016662598
    8. '=' → logprob: -13.261178016662598
    9. '_' → logprob: -15.136178016662598
    10. '_le' → logprob: -15.636178016662598

Token 239: 'anes' (ID: 28047)
  Prédit: 'anes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anes' → logprob: -0.0034387463238090277
    2. 'lan' → logprob: -6.503438949584961
    3. 'ane' → logprob: -8.253438949584961
    4. '=' → logprob: -8.378438949584961
    5. ' lanes' → logprob: -8.503438949584961
    6. '[' → logprob: -8.878438949584961
    7. 'an' → logprob: -8.940938949584961
    8. '_' → logprob: -9.003438949584961
    9. 'ans' → logprob: -9.003438949584961
    10. '   ' → logprob: -9.378438949584961

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005541055579669774
    2. '=' → logprob: -7.500554084777832
    3. ' =[' → logprob: -13.875554084777832
    4. ' ' → logprob: -16.87555503845215
    5. ' =
' → logprob: -17.12555503845215
    6. '=[]' → logprob: -18.50055503845215
    7. ':' → logprob: -18.62555503845215
    8. 's' → logprob: -18.75055503845215
    9. '=[' → logprob: -19.12555503845215
    10. '[' → logprob: -19.50055503845215

Token 241: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.20266270637512207
    2. '[l' → logprob: -1.952662706375122
    3. '[' → logprob: -3.202662706375122
    4. '[line' → logprob: -7.952662467956543
    5. '[token' → logprob: -9.702662467956543
    6. '[i' → logprob: -9.952662467956543
    7. '[t' → logprob: -10.077662467956543
    8. '[min' → logprob: -10.077662467956543
    9. '[layer' → logprob: -10.077662467956543
    10. '[k' → logprob: -10.077662467956543

Token 242: 'lane' (ID: 68325)
  Prédit: 'lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lane' → logprob: -0.002209973521530628
    2. ' lane' → logprob: -6.1272101402282715
    3. 'lan' → logprob: -11.127209663391113
    4. 'l' → logprob: -12.127209663391113
    5. '   ' → logprob: -12.877209663391113
    6. '
' → logprob: -14.502209663391113
    7. '```' → logprob: -14.627209663391113
    8. 'layer' → logprob: -15.752209663391113
    9. 'land' → logprob: -15.877209663391113
    10. ' ' → logprob: -16.12721061706543

Token 243: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.038080278784036636
    2. 'for' → logprob: -3.2880802154541016
    3. '   ' → logprob: -10.663080215454102
    4. '       ' → logprob: -12.538080215454102
    5. '           ' → logprob: -12.538080215454102
    6. '        ' → logprob: -12.913080215454102
    7. '    ' → logprob: -13.038080215454102
    8. ' ' → logprob: -14.038080215454102
    9. '
' → logprob: -14.038080215454102
    10. ' if' → logprob: -14.538080215454102

Token 244: ' lane' (ID: 39989)
  Prédit: ' lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lane' → logprob: -0.2811885178089142
    2. 'lane' → logprob: -1.4061884880065918
    3. 'lan' → logprob: -10.90618896484375
    4. ' ' → logprob: -11.65618896484375
    5. '_lane' → logprob: -12.78118896484375
    6. 'l' → logprob: -13.15618896484375
    7. ' lanes' → logprob: -13.65618896484375
    8. '
' → logprob: -14.59368896484375
    9. ' in' → logprob: -14.65618896484375
    10. '```' → logprob: -14.78118896484375

Token 245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006745212245732546
    2. 'in' → logprob: -5.006745338439941
    3. ' ' → logprob: -11.381745338439941
    4. 'lane' → logprob: -11.881745338439941
    5. ' lane' → logprob: -12.506745338439941
    6. 'lan' → logprob: -13.256745338439941
    7. 'l' → logprob: -13.756745338439941
    8. 's' → logprob: -14.131745338439941
    9. '  ' → logprob: -14.381745338439941
    10. '   ' → logprob: -14.756745338439941

Token 246: ' lanes' (ID: 72055)
  Prédit: 'lan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lan' → logprob: -0.03805147483944893
    2. ' lanes' → logprob: -3.2880513668060303
    3. 'lane' → logprob: -12.53805160522461
    4. 'l' → logprob: -13.41305160522461
    5. '   ' → logprob: -13.66305160522461
    6. 'layers' → logprob: -13.66305160522461
    7. ' ' → logprob: -14.28805160522461
    8. 'lam' → logprob: -14.78805160522461
    9. '```' → logprob: -15.16305160522461
    10. 'lines' → logprob: -15.28805160522461

Token 247: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03816473111510277
    2. 'if' → logprob: -3.2881646156311035
    3. '       ' → logprob: -9.538165092468262
    4. '           ' → logprob: -10.788165092468262
    5. '        ' → logprob: -11.038165092468262
    6. '   ' → logprob: -11.788165092468262
    7. '    ' → logprob: -13.163165092468262
    8. ' in' → logprob: -13.288165092468262
    9. ' ' → logprob: -13.913165092468262
    10. '               ' → logprob: -14.788165092468262

Token 248: ' lane' (ID: 39989)
  Prédit: ' lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lane' → logprob: -0.14278212189674377
    2. 'lane' → logprob: -2.017782211303711
    3. 'lan' → logprob: -9.642782211303711
    4. '   ' → logprob: -11.267782211303711
    5. ' lan' → logprob: -11.767782211303711
    6. '    ' → logprob: -12.767782211303711
    7. '_lane' → logprob: -12.767782211303711
    8. ' ' → logprob: -12.767782211303711
    9. '
' → logprob: -13.017782211303711
    10. ' lanes' → logprob: -13.392782211303711

Token 249: '.car' (ID: 49278)
  Prédit: '.car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -1.9361264946837764e-07
    2. ' .' → logprob: -16.625
    3. '.' → logprob: -17.75
    4. '.Car' → logprob: -18.875
    5. '.c' → logprob: -19.25
    6. '.card' → logprob: -19.25
    7. '	car' → logprob: -20.0
    8. 'car' → logprob: -20.375
    9. '.carousel' → logprob: -20.625
    10. '.cat' → logprob: -20.75

Token 250: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.5776860184123507e-06
    2. 'count' → logprob: -13.62500286102295
    3. 'ount' → logprob: -14.12500286102295
    4. '_length' → logprob: -15.62500286102295
    5. '._' → logprob: -15.87500286102295
    6. 't' → logprob: -16.125001907348633
    7. ' _' → logprob: -17.000001907348633
    8. 'unt' → logprob: -17.250001907348633
    9. '_counts' → logprob: -17.250001907348633
    10. '_' → logprob: -17.375001907348633

Token 251: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007100477814674377
    2. '()==' → logprob: -7.2507100105285645
    3. '()
' → logprob: -16.125709533691406
    4. '()]' → logprob: -17.375709533691406
    5. '()<' → logprob: -18.250709533691406
    6. ' ()' → logprob: -18.500709533691406
    7. '(' → logprob: -19.125709533691406
    8. '==' → logprob: -19.375709533691406
    9. '()

' → logprob: -20.500709533691406
    10. '()<<' → logprob: -20.625709533691406

Token 252: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7057084441184998
    2. ' ==' → logprob: -0.7057084441184998
    3. '()==' → logprob: -4.7057085037231445
    4. '()' → logprob: -5.7057085037231445
    5. ']==' → logprob: -9.205708503723145
    6. ')==' → logprob: -11.580708503723145
    7. '==
' → logprob: -13.955708503723145
    8. ']' → logprob: -14.455708503723145
    9. ')' → logprob: -15.080708503723145
    10. '=' → logprob: -15.330708503723145

Token 253: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01416350994259119
    2. ' min' → logprob: -4.264163494110107
    3. '	min' → logprob: -18.514163970947266
    4. '_min' → logprob: -19.014163970947266
    5. '
' → logprob: -19.139163970947266
    6. ' ' → logprob: -19.639163970947266
    7. '(min' → logprob: -20.639163970947266
    8. '   ' → logprob: -21.139163970947266
    9. '[min' → logprob: -21.639163970947266
    10. '=min' → logprob: -21.639163970947266

Token 254: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -8.292095299111679e-05
    2. 'min' → logprob: -9.625082969665527
    3. '_min' → logprob: -11.625082969665527
    4. 'count' → logprob: -12.000082969665527
    5. '(min' → logprob: -13.875082969665527
    6. ' min' → logprob: -15.000082969665527
    7. 'ount' → logprob: -15.375082969665527
    8. '[min' → logprob: -15.875082969665527
    9. '_length' → logprob: -17.00008201599121
    10. ' count' → logprob: -17.62508201599121

Token 255: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027851566672325134
    2. ']
' → logprob: -3.6528515815734863
    3. ' and' → logprob: -6.902851581573486
    4. '       ' → logprob: -8.277851104736328
    5. 'and' → logprob: -9.027851104736328
    6. ' ]' → logprob: -9.152851104736328
    7. ']

' → logprob: -10.277851104736328
    8. ' ]
' → logprob: -11.152851104736328
    9. ']
' → logprob: -11.152851104736328
    10. '   ' → logprob: -14.152851104736328

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007967274636030197
    2. 'return' → logprob: -5.007967472076416
    3. ' return' → logprob: -7.132967472076416
    4. '
' → logprob: -8.257966995239258
    5. 'candidate' → logprob: -8.757966995239258
    6. ' candidate' → logprob: -11.007966995239258
    7. '        
' → logprob: -11.382966995239258
    8. 'sorted' → logprob: -12.632966995239258
    9. '```' → logprob: -13.132966995239258
    10. ' sorted' → logprob: -13.382966995239258

Token 257: ' candidate' (ID: 17098)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03870687633752823
    2. '       ' → logprob: -3.2887067794799805
    3. ' return' → logprob: -8.28870677947998
    4. 'candidate' (adapté à ' candidate') → logprob: -8.78870677947998
    5. 'min' → logprob: -8.91370677947998
    6. 'selected' → logprob: -9.16370677947998
    7. 'if' → logprob: -11.28870677947998
    8. 'sorted' → logprob: -12.28870677947998
    9. 'result' → logprob: -13.03870677947998
    10. 'best' → logprob: -14.16370677947998

Token 258: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -3.464347173576243e-05
    2. '_lane' → logprob: -10.50003433227539
    3. ' =' → logprob: -13.00003433227539
    4. '=' → logprob: -13.62503433227539
    5. '_sorted' → logprob: -14.37503433227539
    6. '_c' → logprob: -15.12503433227539
    7. '.l' → logprob: -15.12503433227539
    8. 'lan' → logprob: -15.25003433227539
    9. '_candidates' → logprob: -15.25003433227539
    10. 'candidate' → logprob: -15.37503433227539

Token 259: 'anes' (ID: 28047)
  Prédit: 'anes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anes' → logprob: -0.0008476253715343773
    2. 'lan' → logprob: -7.250847816467285
    3. 'ans' → logprob: -10.375847816467285
    4. 'ane' → logprob: -10.750847816467285
    5. '   ' → logprob: -11.000847816467285
    6. 'an' → logprob: -11.125847816467285
    7. ' lanes' → logprob: -11.625847816467285
    8. 'nes' → logprob: -11.750847816467285
    9. '[' → logprob: -12.250847816467285
    10. 'ines' → logprob: -12.250847816467285

Token 260: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -4.227250610711053e-05
    2. 'sort' → logprob: -10.625041961669922
    3. '=' → logprob: -11.125041961669922
    4. '.' → logprob: -13.625041961669922
    5. '_sorted' → logprob: -13.625041961669922
    6. 'sorted' → logprob: -14.500041961669922
    7. ' =' → logprob: -15.875041961669922
    8. ' sort' → logprob: -18.000041961669922
    9. '	sort' → logprob: -18.000041961669922
    10. '.sorted' → logprob: -18.750041961669922

Token 261: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -5.676981345459353e-06
    2. '()' → logprob: -12.500005722045898
    3. 'key' → logprob: -13.875005722045898
    4. '(reverse' → logprob: -14.875005722045898
    5. '(lambda' → logprob: -15.000005722045898
    6. '()
' → logprob: -15.875005722045898
    7. '(' → logprob: -16.1250057220459
    8. '(
' → logprob: -16.8750057220459
    9. ' (' → logprob: -17.6250057220459
    10. '   ' → logprob: -17.7500057220459

Token 262: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -5.872261317563243e-05
    2. '=' → logprob: -9.750059127807617
    3. '(lambda' → logprob: -15.500059127807617
    4. 'lambda' → logprob: -16.250059127807617
    5. '=
' → logprob: -17.250059127807617
    6. ' lambda' → logprob: -19.625059127807617
    7. '_lambda' → logprob: -20.125059127807617
    8. ' =' → logprob: -21.125059127807617
    9. '=\' → logprob: -21.125059127807617
    10. '=len' → logprob: -21.500059127807617

Token 263: ' l' (ID: 305)
  Prédit: ' lane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lane' → logprob: -0.002167509635910392
    2. 'lane' → logprob: -6.252167701721191
    3. ' l' → logprob: -8.502167701721191
    4. ' lan' → logprob: -11.002167701721191
    5. ' lambda' → logprob: -12.252167701721191
    6. '_lane' → logprob: -12.627167701721191
    7. ' x' → logprob: -12.752167701721191
    8. 'lan' → logprob: -13.127167701721191
    9. 'l' → logprob: -13.127167701721191
    10. ' ' → logprob: -14.377167701721191

Token 264: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001985021401196718
    2. ':l' → logprob: -6.2519850730896
    3. ' :' → logprob: -10.126984596252441
    4. 'l' → logprob: -11.751984596252441
    5. 'ane' → logprob: -12.376984596252441
    6. 'e' → logprob: -13.001984596252441
    7. '_:' → logprob: -13.376984596252441
    8. 'a' → logprob: -16.251985549926758
    9. ':
' → logprob: -16.376985549926758
    10. ' l' → logprob: -16.626985549926758

Token 265: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.12692883610725403
    2. ' l' → logprob: -2.1269288063049316
    3. '	l' → logprob: -14.87692928314209
    4. '   ' → logprob: -16.501928329467773
    5. ' ' → logprob: -16.501928329467773
    6. ' л' → logprob: -17.126928329467773
    7. 'lan' → logprob: -17.751928329467773
    8. ' ' → logprob: -17.751928329467773
    9. '(l' → logprob: -17.751928329467773
    10. '.l' → logprob: -17.876928329467773

Token 266: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -6.0033853515051305e-05
    2. '.' → logprob: -9.750060081481934
    3. ' .' → logprob: -14.875060081481934
    4. '.id' → logprob: -15.375060081481934
    5. ':' → logprob: -15.750060081481934
    6. 'lane' → logprob: -15.875060081481934
    7. 'ane' → logprob: -16.125059127807617
    8. ':l' → logprob: -16.500059127807617
    9. '.i' → logprob: -16.750059127807617
    10. '.a' → logprob: -16.875059127807617

Token 267: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -0.025395456701517105
    2. 'lane' → logprob: -3.900395393371582
    3. '.l' → logprob: -6.275395393371582
    4. 'l' → logprob: -6.650395393371582
    5. '_lane' → logprob: -7.275395393371582
    6. '_id' → logprob: -8.400395393371582
    7. '.' → logprob: -8.650395393371582
    8. '_l' → logprob: -9.400395393371582
    9. '   ' → logprob: -9.525395393371582
    10. ' lane' → logprob: -9.650395393371582

Token 268: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -7.896309739408025e-07
    2. 'id' → logprob: -14.625000953674316
    3. '_' → logprob: -16.0
    4. 'd' → logprob: -16.5
    5. '._' → logprob: -17.0
    6. '   ' → logprob: -17.25
    7. '_i' → logprob: -18.125
    8. '_ids' → logprob: -18.125
    9. '_l' → logprob: -18.25
    10. '_.' → logprob: -18.5

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006042646709829569
    2. ')
' → logprob: -7.625604152679443
    3. ' )' → logprob: -9.125604629516602
    4. ')return' → logprob: -12.500604629516602
    5. '[' → logprob: -13.500604629516602
    6. '))' → logprob: -14.500604629516602
    7. ' )
' → logprob: -14.625604629516602
    8. ')
' → logprob: -15.375604629516602
    9. ')#' → logprob: -15.375604629516602
    10. ',' → logprob: -15.500604629516602

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008323781192302704
    2. 'return' → logprob: -4.883323669433594
    3. ' return' → logprob: -7.258323669433594
    4. '
' → logprob: -11.758323669433594
    5. '	return' → logprob: -13.508323669433594
    6. '```' → logprob: -13.758323669433594
    7. '{return' → logprob: -14.258323669433594
    8. '[' → logprob: -14.508323669433594
    9. '   ' → logprob: -14.633323669433594
    10. '        
' → logprob: -14.758323669433594

Token 271: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004786345642060041
    2. '       ' → logprob: -5.504786491394043
    3. ' return' → logprob: -7.254786491394043
    4. '
' → logprob: -14.379786491394043
    5. '	return' → logprob: -15.379786491394043
    6. '```' → logprob: -17.379785537719727
    7. '{return' → logprob: -17.754785537719727
    8. '   ' → logprob: -17.879785537719727
    9. ':return' → logprob: -17.879785537719727
    10. '        
' → logprob: -18.254785537719727

Token 272: ' candidate' (ID: 17098)
  Prédit: ' candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidate' → logprob: -0.1269282102584839
    2. 'candidate' → logprob: -2.1269283294677734
    3. '(candidate' → logprob: -16.126928329467773
    4. ' candidat' → logprob: -18.001928329467773
    5. 'c' → logprob: -20.001928329467773
    6. '_candidate' → logprob: -20.376928329467773
    7. '候' → logprob: -20.626928329467773
    8. ' candidato' → logprob: -21.376928329467773
    9. ' ' → logprob: -21.751928329467773
    10. 'Candidate' → logprob: -22.251928329467773

Token 273: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -4.008129963040119e-06
    2. 'candidate' → logprob: -12.750003814697266
    3. 'L' → logprob: -14.875003814697266
    4. 'lan' → logprob: -15.500003814697266
    5. '_candidate' → logprob: -16.125003814697266
    6. 'l' → logprob: -16.375003814697266
    7. '_' → logprob: -16.875003814697266
    8. '```' → logprob: -17.125003814697266
    9. '_lane' → logprob: -17.375003814697266
    10. '\' → logprob: -17.750003814697266

Token 274: 'anes' (ID: 28047)
  Prédit: 'ane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -0.20272238552570343
    2. 'anes' → logprob: -1.702722430229187
    3. 'candidate' → logprob: -7.452722549438477
    4. '   ' → logprob: -8.827722549438477
    5. 'ne' → logprob: -8.952722549438477
    6. 'e' → logprob: -9.202722549438477
    7. 'a' → logprob: -9.327722549438477
    8. 'ine' → logprob: -9.702722549438477
    9. 'es' → logprob: -10.077722549438477
    10. 'nes' → logprob: -10.452722549438477

Token 275: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.3438327843905427e-05
    2. '0' → logprob: -10.75002384185791
    3. ' [' → logprob: -14.12502384185791
    4. '
' → logprob: -14.75002384185791
    5. '[
' → logprob: -14.75002384185791
    6. '```' → logprob: -15.12502384185791
    7. 's' → logprob: -17.125022888183594
    8. '   ' → logprob: -17.625022888183594
    9. '[-' → logprob: -17.625022888183594
    10. ' ' → logprob: -18.125022888183594

Token 276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.625000953674316
    3. '[' → logprob: -15.500000953674316
    4. '۰' → logprob: -18.125
    5. '
' → logprob: -18.75
    6. '   ' → logprob: -19.125
    7. '1' → logprob: -19.375
    8. '０' → logprob: -19.375
    9. '```' → logprob: -19.5
    10. '00' → logprob: -20.375

Token 277: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000363590574124828
    2. '<|end|>' → logprob: -8.50036334991455
    3. ']' → logprob: -9.37536334991455
    4. ' )' → logprob: -10.25036334991455
    5. '}' → logprob: -10.62536334991455
    6. ')
' → logprob: -11.25036334991455
    7. '）' → logprob: -14.37536334991455
    8. ')return' → logprob: -14.75036334991455
    9. '<|end|>' → logprob: -14.75036334991455
    10. ')}' → logprob: -15.37536334991455

Token 278: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.003121268004179001
    2. '
' → logprob: -6.128121376037598
    3. '<|end|>' → logprob: -7.253121376037598
    4. ' class' → logprob: -8.628121376037598
    5. '```' → logprob: -11.503121376037598
    6. '

' → logprob: -11.878121376037598
    7. '<|end|>' → logprob: -12.128121376037598
    8. '#' → logprob: -12.378121376037598
    9. '<class' → logprob: -12.378121376037598
    10. '  
' → logprob: -13.128121376037598

Token 279: ' Gas' (ID: 22154)
  Prédit: 'Max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Max' → logprob: -0.7923062443733215
    2. ' Max' → logprob: -0.9173062443733215
    3. 'Round' → logprob: -3.1673061847686768
    4. ' Round' → logprob: -3.9173061847686768
    5. 'Random' → logprob: -4.167306423187256
    6. 'Equal' → logprob: -4.292306423187256
    7. ' Car' → logprob: -4.792306423187256
    8. ' Random' → logprob: -4.792306423187256
    9. 'Min' → logprob: -5.167306423187256
    10. ' Min' → logprob: -5.167306423187256

Token 280: 'Station' (ID: 23191)
  Prédit: 'Station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Station' → logprob: -0.2470405399799347
    2. 'oline' → logprob: -1.6220405101776123
    3. 'olin' → logprob: -4.872040748596191
    4. 'Pump' → logprob: -5.622040748596191
    5. 'Ped' → logprob: -5.997040748596191
    6. 'Tank' → logprob: -6.622040748596191
    7. 'Stations' → logprob: -6.872040748596191
    8. 'P' → logprob: -6.872040748596191
    9. 'Queue' → logprob: -7.872040748596191
    10. 'olina' → logprob: -8.372040748596191

Token 281: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0060219415463507175
    2. ':
' → logprob: -5.506021976470947
    3. 'Manager' → logprob: -7.381021976470947
    4. 'Queue' → logprob: -7.631021976470947
    5. 'Selector' → logprob: -8.381021499633789
    6. 'Pump' → logprob: -8.881021499633789
    7. 'Lane' → logprob: -8.881021499633789
    8. 'Stop' → logprob: -9.381021499633789
    9. '():' → logprob: -9.631021499633789
    10. 'Station' → logprob: -10.756021499633789

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018255965551361442
    2. ':' → logprob: -6.87682580947876
    3. ':
' → logprob: -7.37682580947876
    4. 'def' → logprob: -9.876825332641602
    5. '```' → logprob: -9.876825332641602
    6. ' def' → logprob: -10.251825332641602
    7. 'class' → logprob: -11.751825332641602
    8. '    
' → logprob: -11.751825332641602
    9. '<|end|>' → logprob: -12.501825332641602
    10. ':def' → logprob: -13.251825332641602

Token 283: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7135269641876221
    2. ' def' → logprob: -0.7135269641876221
    3. 'def' (adapté à ' def') → logprob: -3.963526964187622
    4. 'class' → logprob: -6.838526725769043
    5. ' class' → logprob: -9.588526725769043
    6. '```' → logprob: -10.963526725769043
    7. '    ' → logprob: -11.963526725769043
    8. '	def' → logprob: -12.463526725769043
    9. '  ' → logprob: -12.963526725769043
    10. ':' → logprob: -12.963526725769043

Token 284: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16055342555046082
    2. '__' → logprob: -1.9105534553527832
    3. 'init' → logprob: -8.535552978515625
    4. 'def' → logprob: -9.910552978515625
    5. '_init' → logprob: -10.285552978515625
    6. ' def' → logprob: -10.660552978515625
    7. '```' → logprob: -11.410552978515625
    8. ' ' → logprob: -12.410552978515625
    9. '.__' → logprob: -12.660552978515625
    10. '___' → logprob: -12.910552978515625

Token 285: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0002477502857800573
    2. ' init' → logprob: -8.375247955322266
    3. '   ' → logprob: -11.375247955322266
    4. '_init' → logprob: -12.500247955322266
    5. ' __' → logprob: -14.750247955322266
    6. '  ' → logprob: -14.875247955322266
    7. '```' → logprob: -14.875247955322266
    8. '	init' → logprob: -15.125247955322266
    9. '__' → logprob: -15.375247955322266
    10. ' ' → logprob: -16.000247955322266

Token 286: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0003346314188092947
    2. '(self' → logprob: -8.125334739685059
    3. '__(
' → logprob: -10.875334739685059
    4. '__' → logprob: -11.250334739685059
    5. '_(' → logprob: -12.000334739685059
    6. '(' → logprob: -16.000333786010742
    7. 'self' → logprob: -16.125333786010742
    8. ' (' → logprob: -16.250333786010742
    9. '```' → logprob: -16.625333786010742
    10. '
' → logprob: -17.125333786010742

Token 287: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.429896944202483e-05
    2. ' self' → logprob: -10.125043869018555
    3. '
' → logprob: -13.375043869018555
    4. '   ' → logprob: -13.500043869018555
    5. '       ' → logprob: -13.875043869018555
    6. ',' → logprob: -15.625043869018555
    7. '0' → logprob: -16.875043869018555
    8. ')' → logprob: -17.000043869018555
    9. '(self' → logprob: -17.000043869018555
    10. '```' → logprob: -18.125043869018555

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14620499312877655
    2. 'self' → logprob: -2.146204948425293
    3. '(self' → logprob: -4.146204948425293
    4. ' self' → logprob: -6.521204948425293
    5. ' (' → logprob: -6.771204948425293
    6. '       ' → logprob: -8.271204948425293
    7. ' ,' → logprob: -8.271204948425293
    8. '   ' → logprob: -9.771204948425293
    9. ',self' → logprob: -10.396204948425293
    10. ')' → logprob: -11.146204948425293

Token 289: ' lane' (ID: 39989)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7553673386573792
    2. 'lan' → logprob: -1.0053672790527344
    3. ' lanes' → logprob: -2.5053672790527344
    4. ' self' → logprob: -3.2553672790527344
    5. 'num' → logprob: -3.3803672790527344
    6. ' num' → logprob: -5.505367279052734
    7. 'lane' → logprob: -5.505367279052734
    8. '   ' → logprob: -7.380367279052734
    9. ' lane' → logprob: -7.505367279052734
    10. '       ' → logprob: -8.630367279052734

Token 290: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.020930945873260498
    2. '_count' → logprob: -3.8959310054779053
    3. '_ids' → logprob: -8.520931243896484
    4. '_s' → logprob: -9.020931243896484
    5. '_id' → logprob: -10.020931243896484
    6. '_num' → logprob: -11.395931243896484
    7. '_number' → logprob: -11.895931243896484
    8. 'count' → logprob: -13.770931243896484
    9. '_length' → logprob: -13.895931243896484
    10. 'es' → logprob: -14.145931243896484

Token 291: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001259398995898664
    2. '):' → logprob: -7.2512593269348145
    3. ':int' → logprob: -8.376259803771973
    4. ' :' → logprob: -9.001259803771973
    5. ',' → logprob: -9.126259803771973
    6. '(self' → logprob: -10.376259803771973
    7. '):
' → logprob: -10.751259803771973
    8. ' ):' → logprob: -11.751259803771973
    9. '=' → logprob: -11.876259803771973
    10. '   ' → logprob: -12.126259803771973

Token 292: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6412466168403625
    2. 'int' → logprob: -0.7662466168403625
    3. ' ' → logprob: -5.891246795654297
    4. '4' → logprob: -6.266246795654297
    5. '5' → logprob: -6.266246795654297
    6. '3' → logprob: -6.516246795654297
    7. ':int' → logprob: -8.766246795654297
    8. '10' → logprob: -9.516246795654297
    9. '8' → logprob: -9.891246795654297
    10. '2' → logprob: -9.891246795654297

Token 293: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3412873148918152
    2. ',' → logprob: -1.59128737449646
    3. '):
' → logprob: -2.46628737449646
    4. '       ' → logprob: -7.841287136077881
    5. '   ' → logprob: -9.091287612915039
    6. '):
' → logprob: -9.966287612915039
    7. ' ,' → logprob: -11.466287612915039
    8. ' ):' → logprob: -11.841287612915039
    9. ':' → logprob: -12.466287612915039
    10. ')' → logprob: -12.716287612915039

Token 294: ' selector' (ID: 19970)
  Prédit: 'selector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selector' → logprob: -0.1871536523103714
    2. ' selector' → logprob: -2.0621535778045654
    3. 'lane' → logprob: -4.0621538162231445
    4. 'strategy' → logprob: -4.1871538162231445
    5. ' lane' → logprob: -5.5621538162231445
    6. ' strategy' → logprob: -5.6871538162231445
    7. 'selection' → logprob: -6.5621538162231445
    8. ' lanes' → logprob: -7.3121538162231445
    9. 'select' → logprob: -7.6871538162231445
    10. 'lan' → logprob: -8.312153816223145

Token 295: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034310102462768555
    2. '):' → logprob: -3.5343101024627686
    3. '_strategy' → logprob: -5.534310340881348
    4. ' :' → logprob: -8.409310340881348
    5. ')' → logprob: -9.034310340881348
    6. '):
' → logprob: -9.409310340881348
    7. '=None' → logprob: -9.784310340881348
    8. 'strategy' → logprob: -10.534310340881348
    9. ' ):' → logprob: -10.659310340881348
    10. 'Strategy' → logprob: -11.034310340881348

Token 296: ' Lane' (ID: 39354)
  Prédit: 'Lane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lane' → logprob: -0.1602330505847931
    2. ' Lane' → logprob: -1.9102330207824707
    3. 'Min' → logprob: -12.660233497619629
    4. 'Lan' → logprob: -12.785233497619629
    5. ' ' → logprob: -13.785233497619629
    6. '   ' → logprob: -15.285233497619629
    7. ' Lan' → logprob: -15.535233497619629
    8. '_lane' → logprob: -15.535233497619629
    9. 'LAN' → logprob: -15.660233497619629
    10. ' lane' → logprob: -15.660233497619629

Token 297: 'Selector' (ID: 8011)
  Prédit: 'Selector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selector' → logprob: -0.00013417120499070734
    2. '_selector' → logprob: -9.250134468078613
    3. '):' → logprob: -11.000134468078613
    4. 'selector' → logprob: -11.875134468078613
    5. '   ' → logprob: -12.125134468078613
    6. '):
' → logprob: -12.375134468078613
    7. ':' → logprob: -13.250134468078613
    8. 'Strategy' → logprob: -14.125134468078613
    9. '_SELECTOR' → logprob: -14.625134468078613
    10. ' Selector' → logprob: -14.875134468078613

Token 298: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.0006039070431143045
    2. '):' → logprob: -7.500603675842285
    3. '):
' → logprob: -10.375603675842285
    4. '_strategy' → logprob: -11.875603675842285
    5. ')' → logprob: -12.500603675842285
    6. ' Strategy' → logprob: -12.750603675842285
    7. ' strategy' → logprob: -13.000603675842285
    8. 'strategy' → logprob: -13.250603675842285
    9. '   ' → logprob: -14.500603675842285
    10. 'Strateg' → logprob: -15.125603675842285

Token 299: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006734438240528107
    2. '):
' → logprob: -5.006734371185303
    3. '   ' → logprob: -11.756734848022461
    4. ')' → logprob: -12.381734848022461
    5. '):
' → logprob: -12.756734848022461
    6. '       ' → logprob: -13.256734848022461
    7. ' ):' → logprob: -13.506734848022461
    8. ',' → logprob: -14.506734848022461
    9. ':' → logprob: -14.756734848022461
    10. ' ' → logprob: -16.88173484802246

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.180879816180095e-05
    2. '<|end|>' → logprob: -11.250051498413086
    3. 'self' → logprob: -11.500051498413086
    4. '   ' → logprob: -11.500051498413086
    5. ' self' → logprob: -12.000051498413086
    6. ':' → logprob: -12.875051498413086
    7. '        
' → logprob: -13.250051498413086
    8. '	' → logprob: -13.375051498413086
    9. '```' → logprob: -13.750051498413086
    10. ',' → logprob: -13.750051498413086

Token 301: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.013804626651108265
    2. ' self' → logprob: -4.7638044357299805
    3. '       ' → logprob: -5.2638044357299805
    4. '	self' → logprob: -14.38880443572998
    5. '   ' → logprob: -15.01380443572998
    6. 'super' → logprob: -16.763805389404297
    7. 'class' → logprob: -17.138805389404297
    8. '(self' → logprob: -17.513805389404297
    9. 'import' → logprob: -17.763805389404297
    10. 'def' → logprob: -17.763805389404297

Token 302: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.0006665678229182959
    2. '.' → logprob: -7.500666618347168
    3. ' .' → logprob: -9.125666618347168
    4. '._' → logprob: -14.500666618347168
    5. '.s' → logprob: -14.625666618347168
    6. ' lanes' → logprob: -14.625666618347168
    7. '.L' → logprob: -14.875666618347168
    8. '.le' → logprob: -15.000666618347168
    9. '.car' → logprob: -15.250666618347168
    10. '.n' → logprob: -15.375666618347168

Token 303: 'anes' (ID: 28047)
  Prédit: 'ane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -0.0007732972735539079
    2. 'anes' → logprob: -7.5007734298706055
    3. 'a' → logprob: -9.500773429870605
    4. 'an' → logprob: -9.625773429870605
    5. '   ' → logprob: -9.875773429870605
    6. 'ine' → logprob: -11.875773429870605
    7. 'anel' → logprob: -12.000773429870605
    8. 'lane' → logprob: -13.125773429870605
    9. '_' → logprob: -13.250773429870605
    10. ' ane' → logprob: -13.375773429870605

Token 304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519367039203644
    2. '=' → logprob: -1.501936674118042
    3. ':' → logprob: -11.876936912536621
    4. '=[]' → logprob: -15.501936912536621
    5. '[' → logprob: -15.626936912536621
    6. ' =[' → logprob: -16.251935958862305
    7. '   ' → logprob: -16.876935958862305
    8. '[:]' → logprob: -17.001935958862305
    9. '=[]
' → logprob: -17.251935958862305
    10. ' ' → logprob: -17.501935958862305

Token 305: ' [' (ID: 723)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.13215480744838715
    2. '[' → logprob: -2.382154703140259
    3. ' [' → logprob: -3.882154703140259
    4. '[L' → logprob: -4.632154941558838
    5. '[list' → logprob: -7.882154941558838
    6. '[line' → logprob: -8.63215446472168
    7. '[class' → logprob: -9.00715446472168
    8. '[layer' → logprob: -9.50715446472168
    9. '[List' → logprob: -10.13215446472168
    10. '[int' → logprob: -10.38215446472168

Token 306: 'Lane' (ID: 96626)
  Prédit: 'Lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lane' → logprob: -0.0011705794604495168
    2. ' Lane' → logprob: -6.751170635223389
    3. 'Lan' → logprob: -15.12617015838623
    4. 'LAN' → logprob: -16.876171112060547
    5. '   ' → logprob: -18.376171112060547
    6. 'L' → logprob: -18.501171112060547
    7. '_lane' → logprob: -18.501171112060547
    8. 'Land' → logprob: -18.626171112060547
    9. '
' → logprob: -19.126171112060547
    10. 'lane' → logprob: -19.751171112060547

Token 307: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.7432603272027336e-06
    2. '(l' → logprob: -14.250001907348633
    3. '(' → logprob: -14.375001907348633
    4. '(_' → logprob: -14.875001907348633
    5. '(id' → logprob: -16.750001907348633
    6. 'i' → logprob: -16.875001907348633
    7. '(_)' → logprob: -17.000001907348633
    8. '(idx' → logprob: -19.125001907348633
    9. '(k' → logprob: -19.250001907348633
    10. '((' → logprob: -19.625001907348633

Token 308: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051401183009147644
    2. ' for' → logprob: -3.051401138305664
    3. 'for' → logprob: -6.676401138305664
    4. ' )' → logprob: -7.551401138305664
    5. '(i' → logprob: -7.926401138305664
    6. '        ' → logprob: -8.926401138305664
    7. '       ' → logprob: -9.051401138305664
    8. '(' → logprob: -9.301401138305664
    9. ' i' → logprob: -9.426401138305664
    10. '   ' → logprob: -10.301401138305664

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016436419682577252
    2. ' ' → logprob: -6.501643657684326
    3. '0' → logprob: -8.876643180847168
    4. '
' → logprob: -13.876643180847168
    5. '   ' → logprob: -14.626643180847168
    6. ')' → logprob: -16.251644134521484
    7. '```' → logprob: -16.876644134521484
    8. '=' → logprob: -17.001644134521484
    9. ' 
' → logprob: -18.001644134521484
    10. '  ' → logprob: -18.314144134521484

Token 310: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00040993880247697234
    2. ' )' → logprob: -7.875410079956055
    3. ',' → logprob: -10.750410079956055
    4. ' for' → logprob: -12.375410079956055
    5. ')]' → logprob: -13.000410079956055
    6. ']' → logprob: -14.875410079956055
    7. 'for' → logprob: -15.000410079956055
    8. ' ' → logprob: -15.125410079956055
    9. '),' → logprob: -15.750410079956055
    10. '   ' → logprob: -16.000410079956055

Token 311: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0170716755092144
    2. 'for' → logprob: -4.142071723937988
    3. ')' → logprob: -6.892071723937988
    4. ' ' → logprob: -11.892071723937988
    5. ' )' → logprob: -12.142071723937988
    6. ',' → logprob: -13.017071723937988
    7. '	for' → logprob: -13.142071723937988
    8. ']' → logprob: -13.767071723937988
    9. '       ' → logprob: -14.142071723937988
    10. '        ' → logprob: -14.517071723937988

Token 312: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25193077325820923
    2. 'range' → logprob: -1.5019307136535645
    3. '	range' → logprob: -14.126931190490723
    4. '_range' → logprob: -14.501931190490723
    5. '(range' → logprob: -15.126931190490723
    6. '_' → logprob: -16.626930236816406
    7. ' ' → logprob: -17.126930236816406
    8. ' _' → logprob: -17.626930236816406
    9. ' i' → logprob: -18.251930236816406
    10. ' xrange' → logprob: -18.376930236816406

Token 313: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4682917892932892
    2. 'range' → logprob: -1.3432917594909668
    3. ' in' → logprob: -2.218291759490967
    4. 'in' → logprob: -6.218291759490967
    5. '(range' → logprob: -6.593291759490967
    6. ' ' → logprob: -7.593291759490967
    7. '	range' → logprob: -8.593292236328125
    8. '   ' → logprob: -10.093292236328125
    9. '  ' → logprob: -10.843292236328125
    10. '    ' → logprob: -11.593292236328125

Token 314: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750604182481766
    2. ' range' → logprob: -3.5297505855560303
    3. '	range' → logprob: -16.77975082397461
    4. '(range' → logprob: -18.77975082397461
    5. 'rang' → logprob: -19.15475082397461
    6. ' ' → logprob: -19.40475082397461
    7. '_range' → logprob: -20.15475082397461
    8. 'ran' → logprob: -21.02975082397461
    9. '   ' → logprob: -21.27975082397461
    10. ' xrange' → logprob: -21.27975082397461

Token 315: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -8.566264295950532e-05
    2. '(' → logprob: -9.375085830688477
    3. ' (' → logprob: -14.750085830688477
    4. ' lane' → logprob: -16.375085830688477
    5. '	l' → logprob: -17.250085830688477
    6. '(len' → logprob: -18.250085830688477
    7. '(n' → logprob: -18.250085830688477
    8. '(
' → logprob: -18.250085830688477
    9. 'lane' → logprob: -18.375085830688477
    10. ',l' → logprob: -18.750085830688477

Token 316: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -0.00010437761375214905
    2. '   ' → logprob: -9.625103950500488
    3. 'an' → logprob: -11.500103950500488
    4. ' ane' → logprob: -11.750103950500488
    5. 'ine' → logprob: -12.500103950500488
    6. 'e' → logprob: -12.500103950500488
    7. 'lane' → logprob: -12.625103950500488
    8. 'ne' → logprob: -12.625103950500488
    9. 'a' → logprob: -13.000103950500488
    10. '       ' → logprob: -14.500103950500488

Token 317: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.034592388459714e-06
    2. 'count' → logprob: -12.250005722045898
    3. 's' → logprob: -14.375005722045898
    4. '_COUNT' → logprob: -15.000005722045898
    5. 'ount' → logprob: -15.625005722045898
    6. '_cnt' → logprob: -16.6250057220459
    7. 'Count' → logprob: -16.7500057220459
    8. '   ' → logprob: -17.1250057220459
    9. 'unt' → logprob: -17.3750057220459
    10. 't' → logprob: -17.5000057220459

Token 318: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.280175097752362e-05
    2. ')' → logprob: -9.625082969665527
    3. ']' → logprob: -11.500082969665527
    4. ' )' → logprob: -12.250082969665527
    5. ' ]' → logprob: -13.875082969665527
    6. '       ' → logprob: -14.750082969665527
    7. ')]
' → logprob: -15.375082969665527
    8. ')],' → logprob: -16.87508201599121
    9. '),' → logprob: -17.37508201599121
    10. ')}' → logprob: -17.75008201599121

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.008129963040119e-06
    2. 'self' → logprob: -13.500003814697266
    3. ' self' → logprob: -13.500003814697266
    4. '   ' → logprob: -13.625003814697266
    5. '	self' → logprob: -17.125003814697266
    6. '           ' → logprob: -17.250003814697266
    7. '```' → logprob: -17.750003814697266
    8. ' ' → logprob: -18.125003814697266
    9. '<|end|>' → logprob: -18.250003814697266
    10. '
' → logprob: -18.625003814697266

Token 320: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0025183463003486395
    2. '       ' → logprob: -6.002518177032471
    3. ' self' → logprob: -10.127518653869629
    4. '   ' → logprob: -12.877518653869629
    5. '	self' → logprob: -16.127517700195312
    6. '        
' → logprob: -16.752517700195312
    7. '
' → logprob: -17.877517700195312
    8. '           ' → logprob: -17.877517700195312
    9. ' ' → logprob: -18.877517700195312
    10. '      ' → logprob: -19.127517700195312

Token 321: '.selector' (ID: 110833)
  Prédit: '.selector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.selector' → logprob: -0.0003051917883567512
    2. '.selected' → logprob: -9.25030517578125
    3. '.select' → logprob: -10.00030517578125
    4. '.selection' → logprob: -10.37530517578125
    5. '.sel' → logprob: -10.50030517578125
    6. '.strategy' → logprob: -10.75030517578125
    7. 'selector' → logprob: -10.87530517578125
    8. '.' → logprob: -11.00030517578125
    9. ' .' → logprob: -11.37530517578125
    10. '.queue' → logprob: -11.50030517578125

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132617771625519
    2. '=' → logprob: -1.3132617473602295
    3. ' ' → logprob: -17.938261032104492
    4. '.' → logprob: -18.563261032104492
    5. '=s' → logprob: -18.938261032104492
    6. ' =
' → logprob: -19.188261032104492
    7. '=create' → logprob: -19.438261032104492
    8. '=self' → logprob: -19.938261032104492
    9. '=line' → logprob: -20.063261032104492
    10. '=status' → logprob: -20.063261032104492

Token 323: ' selector' (ID: 19970)
  Prédit: 'selector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selector' → logprob: -0.03804344683885574
    2. ' selector' → logprob: -3.28804349899292
    3. 'select' → logprob: -13.413043022155762
    4. '(selector' → logprob: -15.163043022155762
    5. 'selection' → logprob: -16.913043975830078
    6. 'sel' → logprob: -17.038043975830078
    7. '.selector' → logprob: -17.288043975830078
    8. '_selector' → logprob: -17.788043975830078
    9. ' ' → logprob: -17.913043975830078
    10. '   ' → logprob: -18.163043975830078

Token 324: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10402137786149979
    2. '
' → logprob: -2.9790213108062744
    3. '    
' → logprob: -3.4790213108062744
    4. 'def' → logprob: -4.2290215492248535
    5. '<|end|>' → logprob: -6.4790215492248535
    6. ' def' → logprob: -7.7290215492248535
    7. '        
' → logprob: -8.604021072387695
    8. '	def' → logprob: -9.354021072387695
    9. '<|end|>' → logprob: -9.479021072387695
    10. '  
' → logprob: -9.729021072387695

Token 325: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1376037746667862
    2. '
' → logprob: -2.262603759765625
    3. '    
' → logprob: -3.887603759765625
    4. 'def' → logprob: -5.887603759765625
    5. '<|end|>' → logprob: -7.387603759765625
    6. '        
' → logprob: -8.262603759765625
    7. '```' → logprob: -8.887603759765625
    8. ' def' → logprob: -9.887603759765625
    9. '  
' → logprob: -10.012603759765625
    10. '<|end|>' → logprob: -10.262603759765625

Token 326: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18321014940738678
    2. '
' → logprob: -1.8082101345062256
    3. '   ' → logprob: -6.558210372924805
    4. 'self' (adapté à ' self') → logprob: -6.683210372924805
    5. ' def' → logprob: -8.058210372924805
    6. '

' → logprob: -8.808210372924805
    7. '        
' → logprob: -8.933210372924805
    8. '    
' → logprob: -9.183210372924805
    9. '       ' → logprob: -9.683210372924805
    10. '	def' → logprob: -11.933210372924805

Token 327: '.car' (ID: 49278)
  Prédit: '.queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.queue' → logprob: -1.6174380779266357
    2. '.c' → logprob: -1.9924380779266357
    3. '._' → logprob: -2.1174380779266357
    4. '.current' → logprob: -2.2424380779266357
    5. '.wait' → logprob: -2.2424380779266357
    6. '.' → logprob: -2.4924380779266357
    7. '.car' → logprob: -2.6174380779266357
    8. '.process' → logprob: -3.3674380779266357
    9. '.history' → logprob: -3.7424380779266357
    10. '.next' → logprob: -3.7424380779266357

Token 328: '_to' (ID: 5089)
  Prédit: '_counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.69890296459198
    2. '_number' → logprob: -1.07390296459198
    3. '_queue' → logprob: -2.6989030838012695
    4. '_id' → logprob: -3.3239030838012695
    5. '_count' → logprob: -3.6989030838012695
    6. '_sequence' → logprob: -4.3239030838012695
    7. 's' → logprob: -4.4489030838012695
    8. '_wait' → logprob: -6.4489030838012695
    9. '_log' → logprob: -6.5739030838012695
    10. '_index' → logprob: -6.8239030838012695

Token 329: '_lane' (ID: 160228)
  Prédit: 'lane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lane' → logprob: -0.6334809064865112
    2. '_lane' → logprob: -0.7584809064865112
    3. 'queue' → logprob: -8.5084810256958
    4. '_queue' → logprob: -9.0084810256958
    5. 'lan' → logprob: -9.2584810256958
    6. 'car' → logprob: -9.5084810256958
    7. '_car' → logprob: -9.6334810256958
    8. 'remove' → logprob: -9.8834810256958
    9. ' lane' → logprob: -9.8834810256958
    10. '_' → logprob: -10.1334810256958

Token 330: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1271052211523056
    2. '=' → logprob: -2.127105236053467
    3. '_map' → logprob: -9.002104759216309
    4. '_id' → logprob: -11.002104759216309
    5. '={}' → logprob: -11.002104759216309
    6. ' ' → logprob: -12.002104759216309
    7. 's' → logprob: -12.377104759216309
    8. '_' → logprob: -12.752104759216309
    9. '_mapping' → logprob: -13.002104759216309
    10. ':' → logprob: -13.252104759216309

Token 331: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0003373694489710033
    2. ' {}' → logprob: -8.000337600708008
    3. 'dict' → logprob: -13.375337600708008
    4. ' dict' → logprob: -15.125337600708008
    5. '{}
' → logprob: -17.375337600708008
    6. '{}\' → logprob: -18.250337600708008
    7. '{' → logprob: -18.625337600708008
    8. '{}

' → logprob: -19.250337600708008
    9. '={}' → logprob: -19.250337600708008
    10. '{},' → logprob: -19.750337600708008

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010279403068125248
    2. '
' → logprob: -5.010279178619385
    3. '    
' → logprob: -5.885279178619385
    4. 'def' → logprob: -7.510279178619385
    5. '```' → logprob: -9.385279655456543
    6. '<|end|>' → logprob: -10.260279655456543
    7. '        
' → logprob: -10.385279655456543
    8. ' def' → logprob: -10.635279655456543
    9. '	def' → logprob: -10.635279655456543
    10. '  
' → logprob: -11.135279655456543

Token 333: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.025066731497645378
    2. ' def' → logprob: -4.27506685256958
    3. '   ' → logprob: -4.52506685256958
    4. '	def' → logprob: -11.650066375732422
    5. ' ' → logprob: -14.525066375732422
    6. '```' → logprob: -14.900066375732422
    7. '
' → logprob: -15.400066375732422
    8. '  ' → logprob: -15.775066375732422
    9. '    
' → logprob: -15.900066375732422
    10. 'de' → logprob: -17.900066375732422

Token 334: ' car' (ID: 1669)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.18648482859134674
    2. 'arr' → logprob: -2.0614848136901855
    3. ' add' → logprob: -3.4364848136901855
    4. 'assign' → logprob: -5.3114848136901855
    5. 'enter' → logprob: -6.5614848136901855
    6. ' arrive' → logprob: -6.9364848136901855
    7. 'car' → logprob: -7.6864848136901855
    8. 'process' → logprob: -7.6864848136901855
    9. 'enqueue' → logprob: -7.9364848136901855
    10. 'accept' → logprob: -8.061485290527344

Token 335: '_ent' (ID: 66249)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.02277342602610588
    2. '_to' → logprob: -4.397773265838623
    3. '_enqueue' → logprob: -6.022773265838623
    4. '_add' → logprob: -6.272773265838623
    5. '_enter' → logprob: -6.272773265838623
    6. '_ent' → logprob: -6.772773265838623
    7. '_queue' → logprob: -7.022773265838623
    8. '_' → logprob: -7.647773265838623
    9. '_in' → logprob: -8.147773742675781
    10. 's' → logprob: -8.272773742675781

Token 336: 'ers' (ID: 409)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0017384823877364397
    2. 'ers' → logprob: -6.376738548278809
    3. 'ered' → logprob: -11.251738548278809
    4. '   ' → logprob: -12.001738548278809
    5. 'ering' → logprob: -12.376738548278809
    6. 'r' → logprob: -12.376738548278809
    7. 'ry' → logprob: -13.126738548278809
    8. 'ery' → logprob: -13.501738548278809
    9. 'rance' → logprob: -14.001738548278809
    10. '```' → logprob: -14.376738548278809

Token 337: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010282796574756503
    2. '(' → logprob: -9.250102996826172
    3. 'self' → logprob: -12.000102996826172
    4. ' (' → logprob: -16.125102996826172
    5. '   ' → logprob: -16.250102996826172
    6. 'car' → logprob: -16.500102996826172
    7. '(
' → logprob: -16.625102996826172
    8. ' self' → logprob: -17.000102996826172
    9. '(car' → logprob: -17.000102996826172
    10. '	self' → logprob: -17.750102996826172

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005667345132678747
    2. 'self' → logprob: -5.380667209625244
    3. ' ,' → logprob: -7.130667209625244
    4. ')' → logprob: -9.255667686462402
    5. '_car' → logprob: -9.755667686462402
    6. '(self' → logprob: -10.505667686462402
    7. '_,' → logprob: -10.630667686462402
    8. ',self' → logprob: -11.255667686462402
    9. '_' → logprob: -11.630667686462402
    10. 'car' → logprob: -12.380667686462402

Token 339: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.025015922263264656
    2. ' car' → logprob: -3.9000158309936523
    3. 'self' → logprob: -5.525015830993652
    4. ' self' → logprob: -7.900015830993652
    5. 'number' → logprob: -9.525015830993652
    6. '   ' → logprob: -10.775015830993652
    7. ' number' → logprob: -12.525015830993652
    8. '	car' → logprob: -12.525015830993652
    9. 'Car' → logprob: -13.025015830993652
    10. '_car' → logprob: -13.775015830993652

Token 340: '_number' (ID: 11733)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5779470205307007
    2. ':' → logprob: -0.8279470205307007
    3. ' :' → logprob: -7.07794713973999
    4. ' ,' → logprob: -7.32794713973999
    5. '):' → logprob: -7.82794713973999
    6. ')' → logprob: -9.827946662902832
    7. '   ' → logprob: -11.077946662902832
    8. 'self' → logprob: -11.827946662902832
    9. ' ):' → logprob: -11.827946662902832
    10. ' )' → logprob: -12.952946662902832

Token 341: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011321206111460924
    2. ':int' → logprob: -7.501132011413574
    3. ',' → logprob: -8.126132011413574
    4. '):' → logprob: -8.501132011413574
    5. ' :' → logprob: -9.501132011413574
    6. ')' → logprob: -13.376132011413574
    7. '   ' → logprob: -13.751132011413574
    8. ' ):' → logprob: -14.376132011413574
    9. ' ,' → logprob: -14.501132011413574
    10. 'int' → logprob: -14.751132011413574

Token 342: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07322479039430618
    2. ' int' → logprob: -2.6982247829437256
    3. 'self' → logprob: -6.448225021362305
    4. ' car' → logprob: -7.198225021362305
    5. ' self' → logprob: -8.073225021362305
    6. ')' → logprob: -8.573225021362305
    7. 'car' → logprob: -8.948225021362305
    8. 'number' → logprob: -9.198225021362305
    9. ':int' → logprob: -9.573225021362305
    10. 'Car' → logprob: -10.448225021362305

Token 343: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08005545288324356
    2. ')' → logprob: -3.0800554752349854
    3. '):
' → logprob: -3.5800554752349854
    4. ',' → logprob: -6.330055236816406
    5. '):
' → logprob: -6.830055236816406
    6. ' ):' → logprob: -8.580055236816406
    7. '   ' → logprob: -10.705055236816406
    8. ' )' → logprob: -11.330055236816406
    9. '):

' → logprob: -12.205055236816406
    10. ' ):
' → logprob: -12.455055236816406

Token 344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02523447759449482
    2. 'car' → logprob: -4.275234699249268
    3. ' car' → logprob: -4.525234699249268
    4. '        
' → logprob: -10.15023422241211
    5. '
' → logprob: -10.77523422241211
    6. ' lane' → logprob: -10.90023422241211
    7. ',' → logprob: -10.90023422241211
    8. '   ' → logprob: -11.02523422241211
    9. '	car' → logprob: -11.15023422241211
    10. 'lane' → logprob: -11.77523422241211

Token 345: ' car' (ID: 1669)
  Prédit: ' car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.5780368447303772
    2. 'car' (adapté à ' car') → logprob: -0.8280368447303772
    3. '       ' → logprob: -6.953036785125732
    4. ' lane' → logprob: -7.203036785125732
    5. 'lane' → logprob: -8.82803726196289
    6. ' selected' → logprob: -8.95303726196289
    7. 'selected' → logprob: -9.57803726196289
    8. '
' → logprob: -11.32803726196289
    9. '```' → logprob: -11.70303726196289
    10. '	car' → logprob: -12.32803726196289

Token 346: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -8.602024900028482e-05
    2. '=' → logprob: -9.375085830688477
    3. ' ' → logprob: -13.750085830688477
    4. ' =
' → logprob: -17.500085830688477
    5. '_car' → logprob: -17.625085830688477
    6. '_' → logprob: -17.750085830688477
    7. '	' → logprob: -18.250085830688477
    8. ')' → logprob: -18.625085830688477
    9. ' ' → logprob: -18.875085830688477
    10. '   ' → logprob: -19.000085830688477

Token 347: ' Car' (ID: 4004)
  Prédit: 'Car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Car' → logprob: -0.3868710398674011
    2. ' Car' → logprob: -1.136871099472046
    3. '<Car' → logprob: -18.011871337890625
    4. 'car' → logprob: -19.011871337890625
    5. '_car' → logprob: -20.136871337890625
    6. ' ' → logprob: -20.136871337890625
    7. ' car' → logprob: -20.386871337890625
    8. '-Car' → logprob: -20.511871337890625
    9. '(Car' → logprob: -20.511871337890625
    10. '.Car' → logprob: -20.511871337890625

Token 348: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.00020425561524461955
    2. '(' → logprob: -8.500204086303711
    3. 'car' → logprob: -14.750204086303711
    4. ' (' → logprob: -16.00020408630371
    5. '(number' → logprob: -16.87520408630371
    6. '(c' → logprob: -16.87520408630371
    7. '(Car' → logprob: -17.25020408630371
    8. ' car' → logprob: -17.37520408630371
    9. '	car' → logprob: -18.50020408630371
    10. '(
' → logprob: -18.62520408630371

Token 349: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0004251931968610734
    2. 'number' → logprob: -7.875425338745117
    3. 'Number' → logprob: -10.125425338745117
    4. 'umber' → logprob: -13.375425338745117
    5. ')' → logprob: -13.875425338745117
    6. ' number' → logprob: -14.250425338745117
    7. '_NUMBER' → logprob: -14.500425338745117
    8. '_' → logprob: -15.000425338745117
    9. '(number' → logprob: -15.000425338745117
    10. '       ' → logprob: -15.375425338745117

Token 350: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.0629870858974755e-05
    2. ')
' → logprob: -9.75006103515625
    3. ' )' → logprob: -13.37506103515625
    4. ')
' → logprob: -14.87506103515625
    5. '       ' → logprob: -15.25006103515625
    6. ')

' → logprob: -15.87506103515625
    7. '   ' → logprob: -18.62506103515625
    8. ')`' → logprob: -19.12506103515625
    9. ' ' → logprob: -19.50006103515625
    10. '),' → logprob: -19.62506103515625

Token 351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005406403914093971
    2. ' lane' → logprob: -5.380406379699707
    3. '
' → logprob: -7.630406379699707
    4. '        
' → logprob: -8.880406379699707
    5. 'lane' → logprob: -9.380406379699707
    6. ' selected' → logprob: -10.380406379699707
    7. 'selected' → logprob: -11.005406379699707
    8. '_lane' → logprob: -12.005406379699707
    9. 'lan' → logprob: -12.130406379699707
    10. '<|end|>' → logprob: -13.380406379699707

Token 352: ' lane' (ID: 39989)
  Prédit: ' lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lane' → logprob: -0.18922574818134308
    2. 'lane' (adapté à ' lane') → logprob: -2.564225673675537
    3. ' selected' → logprob: -2.814225673675537
    4. 'selected' → logprob: -3.564225673675537
    5. '       ' → logprob: -5.314225673675537
    6. ' chosen' → logprob: -6.439225673675537
    7. 'chosen' → logprob: -7.689225673675537
    8. 'lan' → logprob: -9.814226150512695
    9. 'best' → logprob: -11.064226150512695
    10. ' target' → logprob: -11.189226150512695

Token 353: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015047440538182855
    2. '=' → logprob: -6.501504898071289
    3. '_to' → logprob: -13.876504898071289
    4. '.' → logprob: -14.376504898071289
    5. '_selected' → logprob: -14.501504898071289
    6. ' ' → logprob: -15.501504898071289
    7. '_id' → logprob: -16.37650489807129
    8. ' =
' → logprob: -17.37650489807129
    9. '_' → logprob: -17.62650489807129
    10. ')' → logprob: -17.75150489807129

Token 354: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.474077969789505
    2. 'self' → logprob: -0.9740779399871826
    3. '	self' → logprob: -14.849078178405762
    4. '=self' → logprob: -15.349078178405762
    5. '(self' → logprob: -15.724078178405762
    6. '       ' → logprob: -16.224077224731445
    7. '[self' → logprob: -16.849077224731445
    8. '
' → logprob: -17.224077224731445
    9. ' ' → logprob: -17.849077224731445
    10. '_self' → logprob: -18.224077224731445

Token 355: '.selector' (ID: 110833)
  Prédit: '.selector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.selector' → logprob: -0.00011009939044015482
    2. 'selector' → logprob: -9.125109672546387
    3. ' .' → logprob: -14.625109672546387
    4. '.' → logprob: -14.750109672546387
    5. '.select' → logprob: -16.375110626220703
    6. '
' → logprob: -16.875110626220703
    7. '(selector' → logprob: -17.375110626220703
    8. '_selector' → logprob: -17.500110626220703
    9. '.sel' → logprob: -17.500110626220703
    10. '.selection' → logprob: -17.875110626220703

Token 356: '.select' (ID: 14997)
  Prédit: '.select'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.select' → logprob: -2.4272752852994017e-05
    2. '.' → logprob: -10.75002384185791
    3. 'select' → logprob: -12.87502384185791
    4. ' .' → logprob: -16.500024795532227
    5. '<select' → logprob: -17.375024795532227
    6. '.choose' → logprob: -17.750024795532227
    7. '.Select' → logprob: -18.500024795532227
    8. '.sel' → logprob: -18.625024795532227
    9. '	select' → logprob: -19.125024795532227
    10. '
' → logprob: -19.250024795532227

Token 357: '_lane' (ID: 160228)
  Prédit: '_lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lane' → logprob: -5.676981345459353e-06
    2. '_' → logprob: -12.750005722045898
    3. '_l' → logprob: -13.250005722045898
    4. 'lane' → logprob: -14.875005722045898
    5. '_la' → logprob: -16.0000057220459
    6. ' _' → logprob: -16.0000057220459
    7. '_
' → logprob: -17.0000057220459
    8. '```' → logprob: -17.2500057220459
    9. '_line' → logprob: -17.5000057220459
    10. ' lane' → logprob: -17.6250057220459

Token 358: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -16.625003814697266
    4. ' self' → logprob: -19.500003814697266
    5. 'self' → logprob: -20.250003814697266
    6. '(this' → logprob: -21.000003814697266
    7. '(
' → logprob: -21.125003814697266
    8. '(s' → logprob: -21.375003814697266
    9. ',self' → logprob: -21.375003814697266
    10. '(sel' → logprob: -22.250003814697266

Token 359: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -1.8789383830153383e-05
    2. '.' → logprob: -11.125019073486328
    3. ' .' → logprob: -12.625019073486328
    4. ').' → logprob: -14.500019073486328
    5. '.s' → logprob: -16.000019073486328
    6. ')' → logprob: -17.875019073486328
    7. ',' → logprob: -18.250019073486328
    8. 's' → logprob: -18.375019073486328
    9. '.L' → logprob: -18.625019073486328
    10. 'self' → logprob: -18.625019073486328

Token 360: 'anes' (ID: 28047)
  Prédit: 'anes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anes' → logprob: -0.0002920830447692424
    2. 'ane' → logprob: -9.25029182434082
    3. 'ines' → logprob: -9.87529182434082
    4. 'an' → logprob: -10.25029182434082
    5. 'a' → logprob: -10.87529182434082
    6. 'nes' → logprob: -11.12529182434082
    7. '   ' → logprob: -11.12529182434082
    8. 'lan' → logprob: -12.00029182434082
    9. '[' → logprob: -12.37529182434082
    10. '``' → logprob: -12.50029182434082

Token 361: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00988074392080307
    2. ')
' → logprob: -4.634880542755127
    3. ' )' → logprob: -9.134881019592285
    4. ' )
' → logprob: -11.259881019592285
    5. ')
' → logprob: -12.759881019592285
    6. ')

' → logprob: -14.384881019592285
    7. ').' → logprob: -15.509881019592285
    8. ' ' → logprob: -16.50988006591797
    9. '       ' → logprob: -16.50988006591797
    10. '   ' → logprob: -16.75988006591797

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015753143816255033
    2. 'self' → logprob: -9.625157356262207
    3. ' lane' → logprob: -10.125157356262207
    4. ' self' → logprob: -10.500157356262207
    5. '   ' → logprob: -11.500157356262207
    6. 'lane' → logprob: -12.000157356262207
    7. '        
' → logprob: -12.875157356262207
    8. '
' → logprob: -13.250157356262207
    9. '_lane' → logprob: -14.250157356262207
    10. '```' → logprob: -14.250157356262207

Token 363: ' lane' (ID: 39989)
  Prédit: 'lane'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lane' (adapté à ' lane') → logprob: -0.6363430619239807
    2. ' lane' → logprob: -0.7613430619239807
    3. 'self' → logprob: -6.136343002319336
    4. '       ' → logprob: -6.636343002319336
    5. ' self' → logprob: -8.511343002319336
    6. 'lan' → logprob: -10.886343002319336
    7. '
' → logprob: -11.511343002319336
    8. '```' → logprob: -11.761343002319336
    9. '        
' → logprob: -12.011343002319336
    10. 'car' → logprob: -12.636343002319336

Token 364: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00026336227892898023
    2. '.' → logprob: -8.250263214111328
    3. '.append' → logprob: -13.500263214111328
    4. ' .' → logprob: -14.500263214111328
    5. 'add' → logprob: -17.125263214111328
    6. '.enqueue' → logprob: -17.125263214111328
    7. '.Add' → logprob: -17.375263214111328
    8. '`.' → logprob: -18.000263214111328
    9. '​.' → logprob: -18.000263214111328
    10. '```' → logprob: -18.125263214111328

Token 365: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.000000953674316
    3. 'car' → logprob: -15.750000953674316
    4. '(car' → logprob: -16.125
    5. '_c' → logprob: -16.875
    6. '_ca' → logprob: -18.375
    7. '```' → logprob: -19.0
    8. 'Car' → logprob: -19.125
    9. ' car' → logprob: -19.5
    10. '<Car' → logprob: -19.875

Token 366: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -4.56102097814437e-05
    2. '(' → logprob: -10.000045776367188
    3. '(c' → logprob: -16.625045776367188
    4. '(Car' → logprob: -17.125045776367188
    5. ' (' → logprob: -17.500045776367188
    6. ' car' → logprob: -19.250045776367188
    7. 'car' → logprob: -19.375045776367188
    8. '(
' → logprob: -19.500045776367188
    9. '	car' → logprob: -20.000045776367188
    10. '(vehicle' → logprob: -20.125045776367188

Token 367: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.038130998611450195
    2. ')' → logprob: -3.28813099861145
    3. ')
' → logprob: -9.788130760192871
    4. '       ' → logprob: -10.538130760192871
    5. ' )
' → logprob: -12.038130760192871
    6. ')

' → logprob: -14.163130760192871
    7. ' )' → logprob: -15.788130760192871
    8. '   ' → logprob: -16.163131713867188
    9. '
' → logprob: -17.413131713867188
    10. ')c' → logprob: -18.913131713867188

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008357244543731213
    2. 'self' → logprob: -4.883357048034668
    3. ' self' → logprob: -7.258357048034668
    4. '
' → logprob: -10.258357048034668
    5. '	self' → logprob: -12.008357048034668
    6. '   ' → logprob: -13.133357048034668
    7. '```' → logprob: -13.258357048034668
    8. '<|end|>' → logprob: -14.633357048034668
    9. ' ' → logprob: -15.258357048034668
    10. '[self' → logprob: -15.383357048034668

Token 369: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05168073996901512
    2. ' self' → logprob: -3.30168080329895
    3. '       ' → logprob: -4.301680564880371
    4. '	self' → logprob: -14.676680564880371
    5. '
' → logprob: -14.926680564880371
    6. '   ' → logprob: -16.676681518554688
    7. '```' → logprob: -16.676681518554688
    8. ' ' → logprob: -17.301681518554688
    9. '[self' → logprob: -18.926681518554688
    10. '_self' → logprob: -18.926681518554688

Token 370: '.car' (ID: 49278)
  Prédit: '.car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -3.8889261304575484e-06
    2. '.' → logprob: -13.125003814697266
    3. ' .' → logprob: -14.000003814697266
    4. 'car' → logprob: -14.500003814697266
    5. '.Car' → logprob: -15.875003814697266
    6. '	car' → logprob: -16.375003814697266
    7. '`.' → logprob: -16.750003814697266
    8. '_car' → logprob: -17.625003814697266
    9. '.user' → logprob: -18.000003814697266
    10. ' car' → logprob: -18.250003814697266

Token 371: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. '_for' → logprob: -20.25
    3. '_' → logprob: -21.125
    4. '_TO' → logprob: -21.25
    5. '_that' → logprob: -22.125
    6. '##_' → logprob: -22.25
    7. '_number' → logprob: -22.5
    8. '_from' → logprob: -22.5
    9. ' _' → logprob: -22.625
    10. '_t' → logprob: -22.75

Token 372: '_lane' (ID: 160228)
  Prédit: '_lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lane' → logprob: -0.07891181856393814
    2. 'lane' → logprob: -2.578911781311035
    3. 'lan' → logprob: -11.578911781311035
    4. ' lane' → logprob: -12.078911781311035
    5. 'car' → logprob: -12.578911781311035
    6. '_car' → logprob: -13.828911781311035
    7. '_l' → logprob: -14.578911781311035
    8. 'Lane' → logprob: -14.578911781311035
    9. '_layer' → logprob: -14.953911781311035
    10. 'l' → logprob: -15.328911781311035

Token 373: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. '[c' → logprob: -13.37500286102295
    3. '[number' → logprob: -14.37500286102295
    4. '[self' → logprob: -14.87500286102295
    5. '\[' → logprob: -16.375003814697266
    6. '[cell' → logprob: -16.500003814697266
    7. ' [' → logprob: -16.750003814697266
    8. '[l' → logprob: -18.125003814697266
    9. '```' → logprob: -18.375003814697266
    10. '[f' → logprob: -18.375003814697266

Token 374: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -12.250005722045898
    3. ' car' → logprob: -14.375005722045898
    4. 'number' → logprob: -15.000005722045898
    5. '	car' → logprob: -16.7500057220459
    6. '(car' → logprob: -17.5000057220459
    7. 'c' → logprob: -17.7500057220459
    8. '
' → logprob: -18.3750057220459
    9. 'cars' → logprob: -18.3750057220459
    10. '```' → logprob: -18.6250057220459

Token 375: '_number' (ID: 11733)
  Prédit: '.number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.0019712194334715605
    2. '_number' → logprob: -6.876971244812012
    3. 'number' → logprob: -7.376971244812012
    4. ']' → logprob: -8.626971244812012
    5. '.' → logprob: -9.251971244812012
    6. ')' → logprob: -11.376971244812012
    7. ' number' → logprob: -12.126971244812012
    8. '.num' → logprob: -12.376971244812012
    9. '.n' → logprob: -12.876971244812012
    10. '```' → logprob: -13.626971244812012

Token 376: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12810811400413513
    2. ' ]' → logprob: -2.128108024597168
    3. ' =' → logprob: -7.378108024597168
    4. ']=' → logprob: -7.753108024597168
    5. '=' → logprob: -9.003108024597168
    6. ')' → logprob: -13.753108024597168
    7. ' )' → logprob: -14.253108024597168
    8. '[' → logprob: -15.378108024597168
    9. ' ' → logprob: -15.878108024597168
    10. '`]' → logprob: -17.503108978271484

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859020933508873
    2. '=' → logprob: -3.0485901832580566
    3. ']' → logprob: -13.423590660095215
    4. ' ' → logprob: -14.798590660095215
    5. ' =
' → logprob: -15.173590660095215
    6. ']=' → logprob: -15.423590660095215
    7. ')' → logprob: -15.923590660095215
    8. ' =[' → logprob: -16.0485897064209
    9. ' ]' → logprob: -16.2985897064209
    10. '=line' → logprob: -16.6735897064209

Token 378: ' lane' (ID: 39989)
  Prédit: 'lane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lane' → logprob: -0.04860111325979233
    2. ' lane' → logprob: -3.0486011505126953
    3. 'lan' → logprob: -11.548601150512695
    4. 'l' → logprob: -13.048601150512695
    5. 'len' → logprob: -15.048601150512695
    6. '   ' → logprob: -15.048601150512695
    7. ' ' → logprob: -15.048601150512695
    8. ' ' → logprob: -15.548601150512695
    9. 'car' → logprob: -15.548601150512695
    10. '_lane' → logprob: -15.798601150512695

Token 379: '.l' (ID: 1000)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -0.00019710339256562293
    2. 'ine' → logprob: -8.750197410583496
    3. 'anes' → logprob: -10.500197410583496
    4. '   ' → logprob: -12.625197410583496
    5. 'a' → logprob: -12.750197410583496
    6. 'an' → logprob: -13.375197410583496
    7. 'anel' → logprob: -14.250197410583496
    8. 'e' → logprob: -14.625197410583496
    9. 'lane' → logprob: -14.875197410583496
    10. 'ne' → logprob: -15.000197410583496

Token 381: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: 0.0
    2. '_' → logprob: -17.625
    3. '_i' → logprob: -17.875
    4. ' _' → logprob: -18.0
    5. 'id' → logprob: -18.75
    6. '_ids' → logprob: -20.5
    7. '._' → logprob: -20.625
    8. '   ' → logprob: -20.75
    9. '_.' → logprob: -21.0
    10. 'd' → logprob: -21.125

Token 382: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 383: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 384: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008067798800766468
    2. '   ' → logprob: -5.008067607879639
    3. ' def' → logprob: -6.633067607879639
    4. '```' → logprob: -11.133068084716797
    5. '	def' → logprob: -11.508068084716797
    6. ' ' → logprob: -12.383068084716797
    7. '
' → logprob: -12.508068084716797
    8. '<|end|>' → logprob: -13.508068084716797
    9. '  ' → logprob: -14.758068084716797
    10. '    
' → logprob: -15.008068084716797

Token 385: ' fueling' (ID: 194438)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.1960952877998352
    2. ' car' → logprob: -1.8210952281951904
    3. 'def' → logprob: -5.3210954666137695
    4. 'get' → logprob: -6.1960954666137695
    5. 'remove' → logprob: -6.3210954666137695
    6. ' get' → logprob: -6.3210954666137695
    7. ' def' → logprob: -6.4460954666137695
    8. ' remove' → logprob: -6.6960954666137695
    9. 'process' → logprob: -7.5710954666137695
    10. '   ' → logprob: -8.57109546661377

Token 386: '_finished' (ID: 143523)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8951622247695923
    2. '_complete' → logprob: -1.1451622247695923
    3. '_completed' → logprob: -2.1451621055603027
    4. '_done' → logprob: -2.2701621055603027
    5. '_car' → logprob: -4.145162105560303
    6. '_finished' → logprob: -4.270162105560303
    7. '_completion' → logprob: -5.145162105560303
    8. '_st' → logprob: -5.270162105560303
    9. '_com' → logprob: -5.770162105560303
    10. '_station' → logprob: -6.395162105560303

Token 387: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00043710620957426727
    2. '(' → logprob: -7.750437259674072
    3. ' (' → logprob: -12.000436782836914
    4. '(car' → logprob: -15.875436782836914
    5. '   ' → logprob: -16.500436782836914
    6. 'self' → logprob: -16.625436782836914
    7. '       ' → logprob: -18.250436782836914
    8. '()' → logprob: -18.375436782836914
    9. '(Self' → logprob: -19.000436782836914
    10. ' ' → logprob: -19.125436782836914

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5400313138961792
    2. '(self' → logprob: -0.9150313138961792
    3. 'self' → logprob: -4.290031433105469
    4. ')(' → logprob: -6.665031433105469
    5. ')' → logprob: -7.290031433105469
    6. ',self' → logprob: -7.915031433105469
    7. ' ,' → logprob: -8.415031433105469
    8. ' (' → logprob: -8.540031433105469
    9. '(' → logprob: -9.040031433105469
    10. '       ' → logprob: -9.415031433105469

Token 389: ' lane' (ID: 39989)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.12828963994979858
    2. ' car' → logprob: -2.3782896995544434
    3. 'self' → logprob: -3.7532896995544434
    4. ' self' → logprob: -5.503289699554443
    5. '       ' → logprob: -9.753289222717285
    6. '   ' → logprob: -9.878289222717285
    7. ')' → logprob: -10.753289222717285
    8. '	car' → logprob: -11.253289222717285
    9. ' ' → logprob: -11.628289222717285
    10. '           ' → logprob: -12.128289222717285

Token 390: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -4.668304245569743e-05
    2. '_lane' → logprob: -11.125046730041504
    3. ':' → logprob: -11.375046730041504
    4. '_number' → logprob: -12.125046730041504
    5. ')' → logprob: -12.125046730041504
    6. '_index' → logprob: -13.250046730041504
    7. '   ' → logprob: -13.375046730041504
    8. '_l' → logprob: -13.750046730041504
    9. '):' → logprob: -13.875046730041504
    10. 'id' → logprob: -14.125046730041504

Token 391: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021895822137594223
    2. '):' → logprob: -4.021895885467529
    3. ')' → logprob: -6.646895885467529
    4. ',' → logprob: -6.896895885467529
    5. '):
' → logprob: -7.521895885467529
    6. ':int' → logprob: -8.146895408630371
    7. '   ' → logprob: -8.521895408630371
    8. 'self' → logprob: -8.771895408630371
    9. ' :' → logprob: -8.896895408630371
    10. ' ):' → logprob: -9.646895408630371

Token 392: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005235887598246336
    2. ' int' → logprob: -5.25523567199707
    3. '   ' → logprob: -13.88023567199707
    4. ')' → logprob: -14.13023567199707
    5. ':int' → logprob: -15.13023567199707
    6. ' ' → logprob: -17.25523567199707
    7. '       ' → logprob: -17.38023567199707
    8. '	int' → logprob: -17.75523567199707
    9. '  ' → logprob: -17.88023567199707
    10. '(int' → logprob: -18.00523567199707

Token 393: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38749945163726807
    2. '):
' → logprob: -1.137499451637268
    3. ')' → logprob: -8.012499809265137
    4. '):
' → logprob: -8.387499809265137
    5. '   ' → logprob: -10.512499809265137
    6. ',' → logprob: -11.137499809265137
    7. ' ):' → logprob: -11.637499809265137
    8. ':' → logprob: -11.762499809265137
    9. ' ):
' → logprob: -12.262499809265137
    10. '):

' → logprob: -12.387499809265137

Token 394: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011639509350061417
    2. '       ' → logprob: -5.636639595031738
    3. ':
' → logprob: -5.636639595031738
    4. ':' → logprob: -6.011639595031738
    5. '(' → logprob: -7.261639595031738
    6. 'self' → logprob: -7.511639595031738
    7. '   ' → logprob: -8.011639595031738
    8. ' self' → logprob: -9.136639595031738
    9. '):
' → logprob: -9.136639595031738
    10. '(l' → logprob: -9.386639595031738

Token 395: ' int' (ID: 677)
  Prédit: 'Car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Car' → logprob: -0.2903589904308319
    2. 'int' → logprob: -1.9153590202331543
    3. ' Car' → logprob: -2.7903590202331543
    4. 'None' → logprob: -3.6653590202331543
    5. 'Lane' → logprob: -4.790359020233154
    6. ' int' → logprob: -5.290359020233154
    7. ' None' → logprob: -5.790359020233154
    8. ' Lane' → logprob: -7.040359020233154
    9. 'self' → logprob: -8.915358543395996
    10. '   ' → logprob: -9.290358543395996

Token 396: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04703989624977112
    2. ':
' → logprob: -3.7970399856567383
    3. '       ' → logprob: -3.9220399856567383
    4. '(self' → logprob: -6.922039985656738
    5. '   ' → logprob: -7.047039985656738
    6. '(' → logprob: -7.422039985656738
    7. '):' → logprob: -8.172039985656738
    8. ',' → logprob: -8.297039985656738
    9. '():' → logprob: -8.547039985656738
    10. '):
' → logprob: -8.797039985656738

Token 397: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005482641514390707
    2. 'car' → logprob: -5.2554826736450195
    3. ' car' → logprob: -8.75548267364502
    4. 'if' → logprob: -10.88048267364502
    5. 'lane' → logprob: -10.88048267364502
    6. ' lane' → logprob: -11.13048267364502
    7. ' if' → logprob: -11.13048267364502
    8. 'front' → logprob: -12.38048267364502
    9. '   ' → logprob: -12.50548267364502
    10. '```' → logprob: -12.50548267364502

Token 398: ' lane' (ID: 39989)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.02240384742617607
    2. 'lane' (adapté à ' lane') → logprob: -4.522403717041016
    3. '       ' → logprob: -4.647403717041016
    4. ' car' → logprob: -6.772403717041016
    5. 'front' → logprob: -8.647403717041016
    6. 'removed' → logprob: -8.772403717041016
    7. ' lane' → logprob: -9.147403717041016
    8. 'lan' → logprob: -10.397403717041016
    9. 'finished' → logprob: -10.522403717041016
    10. 'if' → logprob: -11.147403717041016

Token 399: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031746312975883484
    2. '=' → logprob: -3.5317463874816895
    3. '.' → logprob: -6.7817463874816895
    4. '.remove' → logprob: -7.2817463874816895
    5. '   ' → logprob: -9.031745910644531
    6. '       ' → logprob: -10.531745910644531
    7. ':' → logprob: -11.906745910644531
    8. ' .' → logprob: -12.031745910644531
    9. '    ' → logprob: -13.156745910644531
    10. ' ' → logprob: -13.406745910644531

Token 400: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06813918054103851
    2. ' self' → logprob: -2.81813907623291
    3. ' next' → logprob: -5.56813907623291
    4. 'next' → logprob: -6.06813907623291
    5. '[self' → logprob: -11.56813907623291
    6. ' [' → logprob: -12.19313907623291
    7. '   ' → logprob: -13.19313907623291
    8. '       ' → logprob: -13.31813907623291
    9. '[' → logprob: -14.56813907623291
    10. '	self' → logprob: -15.69313907623291

Token 401: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.001185703556984663
    2. 'self' → logprob: -6.751185894012451
    3. '.' → logprob: -12.001185417175293
    4. ' .' → logprob: -13.501185417175293
    5. '   ' → logprob: -13.626185417175293
    6. '[self' → logprob: -13.626185417175293
    7. '.self' → logprob: -14.126185417175293
    8. '.next' → logprob: -14.126185417175293
    9. '       ' → logprob: -14.251185417175293
    10. '[' → logprob: -14.376185417175293

Token 402: 'anes' (ID: 28047)
  Prédit: 'anes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anes' → logprob: -0.0003876550472341478
    2. 'ane' → logprob: -8.625387191772461
    3. 'lan' → logprob: -10.000387191772461
    4. 'an' → logprob: -10.375387191772461
    5. '   ' → logprob: -10.500387191772461
    6. 'a' → logprob: -10.875387191772461
    7. '[' → logprob: -11.125387191772461
    8. 'nes' → logprob: -11.375387191772461
    9. 'ines' → logprob: -11.375387191772461
    10. 'es' → logprob: -11.625387191772461

Token 403: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.375000953674316
    3. '   ' → logprob: -16.625
    4. '[line' → logprob: -17.125
    5. '	l' → logprob: -17.625
    6. '[layer' → logprob: -18.25
    7. '[
' → logprob: -19.25
    8. '       ' → logprob: -19.375
    9. '           ' → logprob: -20.25
    10. 'l' → logprob: -20.5

Token 404: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -5.676981345459353e-06
    2. 'lane' → logprob: -13.250005722045898
    3. '   ' → logprob: -14.000005722045898
    4. '[' → logprob: -14.125005722045898
    5. 'a' → logprob: -14.125005722045898
    6. 'an' → logprob: -14.625005722045898
    7. '-' → logprob: -15.000005722045898
    8. 'ine' → logprob: -16.1250057220459
    9. 'anel' → logprob: -16.2500057220459
    10. '1' → logprob: -16.2500057220459

Token 405: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0012809454929083586
    2. '-' → logprob: -7.501280784606934
    3. 'id' → logprob: -8.376280784606934
    4. 'lane' → logprob: -8.501280784606934
    5. '[' → logprob: -8.626280784606934
    6. '[id' → logprob: -10.376280784606934
    7. ' -' → logprob: -11.751280784606934
    8. 's' → logprob: -11.876280784606934
    9. 'lan' → logprob: -11.876280784606934
    10. '[line' → logprob: -12.126280784606934

Token 406: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759432315826416
    2. '-' → logprob: -0.8259432315826416
    3. ' ' → logprob: -12.700942993164062
    4. '   ' → logprob: -15.075942993164062
    5. ' ' → logprob: -15.450942993164062
    6. '	' → logprob: -16.200942993164062
    7. '1' → logprob: -16.325942993164062
    8. '
' → logprob: -17.200942993164062
    9. '  ' → logprob: -17.325942993164062
    10. ')' → logprob: -17.825942993164062

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -18.750001907348633
    4. ']' → logprob: -19.000001907348633
    5. ')' → logprob: -19.500001907348633
    6. '   ' → logprob: -19.625001907348633
    7. '```' → logprob: -20.000001907348633
    8. '0' → logprob: -20.250001907348633
    9. '`' → logprob: -20.687501907348633
    10. ':' → logprob: -20.875001907348633

Token 408: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.0254253149032593
    2. '.remove' → logprob: -1.2754253149032593
    3. ')' → logprob: -1.7754253149032593
    4. ').' → logprob: -2.025425434112549
    5. '       ' → logprob: -2.900425434112549
    6. ']
' → logprob: -6.650425434112549
    7. '].' → logprob: -7.150425434112549
    8. ')
' → logprob: -7.150425434112549
    9. ']' → logprob: -7.275425434112549
    10. '.' → logprob: -7.525425434112549

Token 409: '       ' (ID: 309)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5195861458778381
    2. '       ' → logprob: -1.0195860862731934
    3. ' car' → logprob: -3.1445860862731934
    4. ' removed' → logprob: -7.269586086273193
    5. 'removed' → logprob: -7.519586086273193
    6. '```' → logprob: -10.269586563110352
    7. 'return' → logprob: -10.519586563110352
    8. 'front' → logprob: -10.769586563110352
    9. '   ' → logprob: -10.769586563110352
    10. '	car' → logprob: -11.019586563110352

Token 410: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' (adapté à ' car') → logprob: -0.0023865913972258568
    2. 'front' → logprob: -6.877386569976807
    3. ' car' → logprob: -7.127386569976807
    4. 'removed' → logprob: -7.877386569976807
    5. '       ' → logprob: -9.002387046813965
    6. 'finished' → logprob: -10.627387046813965
    7. ' front' → logprob: -11.627387046813965
    8. ' removed' → logprob: -11.752387046813965
    9. 'ex' → logprob: -12.627387046813965
    10. 'rem' → logprob: -14.627387046813965

Token 411: ' =' (ID: 314)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.4854239821434021
    2. ' =' → logprob: -0.9854239821434021
    3. '_num' → logprob: -4.985424041748047
    4. '=' → logprob: -5.485424041748047
    5. '_car' → logprob: -8.860424041748047
    6. '_' → logprob: -9.235424041748047
    7. '   ' → logprob: -10.735424041748047
    8. 'number' → logprob: -11.235424041748047
    9. 'num' → logprob: -12.110424041748047
    10. '_n' → logprob: -12.485424041748047

Token 412: ' lane' (ID: 39989)
  Prédit: ' lane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lane' → logprob: -0.061972394585609436
    2. 'lane' → logprob: -2.8119723796844482
    3. 'lan' → logprob: -12.936972618103027
    4. ' ' → logprob: -14.686972618103027
    5. '   ' → logprob: -14.811972618103027
    6. ' lan' → logprob: -15.061972618103027
    7. '_lane' → logprob: -15.311972618103027
    8. '	l' → logprob: -15.561972618103027
    9. ' ' → logprob: -15.686972618103027
    10. 'l' → logprob: -16.06197166442871

Token 413: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -5.9153885558771435e-06
    2. '.' → logprob: -12.250005722045898
    3. 'remove' → logprob: -14.250005722045898
    4. '.pop' → logprob: -15.000005722045898
    5. ' .' → logprob: -16.8750057220459
    6. '.dequeue' → logprob: -19.1250057220459
    7. '	remove' → logprob: -19.7500057220459
    8. '.Remove' → logprob: -20.0000057220459
    9. ' remove' → logprob: -20.6250057220459
    10. '   ' → logprob: -20.6250057220459

Token 414: '_front' (ID: 56078)
  Prédit: '_front'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_front' → logprob: -1.1279553291387856e-05
    2. '_' → logprob: -11.750011444091797
    3. ' _' → logprob: -13.750011444091797
    4. '```' → logprob: -13.750011444091797
    5. '_car' → logprob: -15.750011444091797
    6. '`' → logprob: -16.125011444091797
    7. ')_' → logprob: -16.375011444091797
    8. '_
' → logprob: -16.375011444091797
    9. '
' → logprob: -16.375011444091797
    10. '_FRONT' → logprob: -16.375011444091797

Token 415: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -4.127333340875339e-06
    2. '_' → logprob: -12.750003814697266
    3. 'car' → logprob: -14.625003814697266
    4. '()' → logprob: -14.750003814697266
    5. '_c' → logprob: -15.875003814697266
    6. 'Car' → logprob: -17.375003814697266
    7. '```' → logprob: -18.000003814697266
    8. '_C' → logprob: -18.750003814697266
    9. ' _' → logprob: -18.875003814697266
    10. '_card' → logprob: -19.250003814697266

Token 416: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.048727139830589294
    2. '()' → logprob: -3.048727035522461
    3. '       ' → logprob: -9.298727035522461
    4. '()
' → logprob: -10.048727035522461
    5. '()

' → logprob: -13.173727035522461
    6. 'return' → logprob: -14.048727035522461
    7. '
' → logprob: -14.048727035522461
    8. '()\' → logprob: -14.173727035522461
    9. '().' → logprob: -15.173727035522461
    10. '        
' → logprob: -16.92372703552246

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004918023478239775
    2. 'return' → logprob: -5.629918098449707
    3. 'del' → logprob: -6.754918098449707
    4. ' del' → logprob: -9.004918098449707
    5. ' return' → logprob: -10.879918098449707
    6. 'self' → logprob: -12.254918098449707
    7. '   ' → logprob: -13.004918098449707
    8. '	del' → logprob: -13.754918098449707
    9. 'delete' → logprob: -14.879918098449707
    10. '```' → logprob: -14.879918098449707

Token 418: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.24320140480995178
    2. 'del' → logprob: -1.6182013750076294
    3. '       ' → logprob: -4.11820125579834
    4. 'self' → logprob: -7.11820125579834
    5. 'car' → logprob: -7.99320125579834
    6. ' del' → logprob: -8.74320125579834
    7. ' return' → logprob: -10.24320125579834
    8. '   ' → logprob: -12.86820125579834
    9. '```' → logprob: -13.49320125579834
    10. 'd' → logprob: -13.61820125579834

Token 419: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.00317783304490149
    2. ' car' → logprob: -5.753177642822266
    3. '	car' → logprob: -16.503177642822266
    4. '(car' → logprob: -17.753177642822266
    5. 'c' → logprob: -20.128177642822266
    6. '_car' → logprob: -20.503177642822266
    7. '.car' → logprob: -22.003177642822266
    8. 'card' → logprob: -22.378177642822266
    9. 'Car' → logprob: -22.378177642822266
    10. '
' → logprob: -22.378177642822266

Token 420: '.number' (ID: 25737)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6933665871620178
    2. '.number' → logprob: -0.6933665871620178
    3. 'number' → logprob: -9.193367004394531
    4. '<|end|>' → logprob: -10.318367004394531
    5. '.
' → logprob: -10.943367004394531
    6. '.num' → logprob: -11.068367004394531
    7. '_number' → logprob: -11.568367004394531
    8. ' .' → logprob: -11.943367004394531
    9. ' number' → logprob: -12.318367004394531
    10. '.car' → logprob: -12.693367004394531

Token 421: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 423: ' Input' (ID: 10090)
  Prédit: 'Gas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Gas' → logprob: -0.4918839633464813
    2. ' Gas' → logprob: -2.6168839931488037
    3. 'Car' → logprob: -2.7418839931488037
    4. 'Test' → logprob: -2.8668839931488037
    5. 'Simulation' → logprob: -2.9918839931488037
    6. 'Queue' → logprob: -3.2418839931488037
    7. 'Traffic' → logprob: -4.116883754730225
    8. 'Simulator' → logprob: -4.116883754730225
    9. 'Fuel' → logprob: -4.616883754730225
    10. ' Car' → logprob: -4.991883754730225

Token 424: 'Parser' (ID: 9231)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.3711341917514801
    2. 'Reader' → logprob: -1.7461341619491577
    3. 'Processor' → logprob: -2.2461342811584473
    4. 'Parser' → logprob: -3.7461342811584473
    5. 'Manager' → logprob: -6.371134281158447
    6. 'Provider' → logprob: -6.621134281158447
    7. 'Data' → logprob: -6.621134281158447
    8. 'Simulator' → logprob: -7.496134281158447
    9. 'Output' → logprob: -8.121133804321289
    10. 'Helper' → logprob: -8.496133804321289

Token 425: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000249061529757455
    2. ':
' → logprob: -8.375248908996582
    3. ' :' → logprob: -11.250248908996582
    4. ':def' → logprob: -13.250248908996582
    5. '<|end|>' → logprob: -14.000248908996582
    6. '():' → logprob: -14.125248908996582
    7. '):' → logprob: -14.625248908996582
    8. '(object' → logprob: -14.625248908996582
    9. '(' → logprob: -14.750248908996582
    10. ':

' → logprob: -15.375248908996582

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03434787690639496
    2. ' def' → logprob: -3.4093477725982666
    3. 'def' → logprob: -7.409348011016846
    4. 'import' → logprob: -10.034347534179688
    5. '	def' → logprob: -11.534347534179688
    6. ' import' → logprob: -11.659347534179688
    7. '```' → logprob: -11.659347534179688
    8. '<|end|>' → logprob: -11.784347534179688
    9. ' class' → logprob: -12.159347534179688
    10. 'class' → logprob: -12.784347534179688

Token 427: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.16340652108192444
    2. 'def' (adapté à ' def') → logprob: -1.913406491279602
    3. '   ' → logprob: -5.7884063720703125
    4. '@' → logprob: -9.913406372070312
    5. ' @' → logprob: -9.913406372070312
    6. 'import' → logprob: -12.163406372070312
    7. 'class' → logprob: -12.288406372070312
    8. 'from' → logprob: -12.663406372070312
    9. '	def' → logprob: -14.163406372070312
    10. ' class' → logprob: -14.663406372070312

Token 428: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.03075564280152321
    2. ' __' → logprob: -3.5307557582855225
    3. 'def' → logprob: -7.030755519866943
    4. '__' → logprob: -9.905755996704102
    5. ' init' → logprob: -10.155755996704102
    6. ' parse' → logprob: -11.655755996704102
    7. 'staticmethod' → logprob: -12.030755996704102
    8. ' _' → logprob: -12.905755996704102
    9. 'init' → logprob: -13.030755996704102
    10. ' ' → logprob: -13.155755996704102

Token 429: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -8.061054359131958e-06
    2. 'nit' → logprob: -12.250007629394531
    3. '   ' → logprob: -14.250007629394531
    4. ' init' → logprob: -14.375007629394531
    5. 'def' → logprob: -14.875007629394531
    6. '_init' → logprob: -14.875007629394531
    7. '__' → logprob: -14.875007629394531
    8. 'int' → logprob: -15.000007629394531
    9. '```' → logprob: -15.625007629394531
    10. '	init' → logprob: -16.12500762939453

Token 430: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.636726438999176
    2. '(self' → logprob: -0.761726438999176
    3. ' (' → logprob: -6.136726379394531
    4. '(' → logprob: -6.761726379394531
    5. '_(' → logprob: -7.761726379394531
    6. '__(
' → logprob: -8.386726379394531
    7. 'self' → logprob: -9.886726379394531
    8. '__' → logprob: -10.261726379394531
    9. '(
' → logprob: -11.261726379394531
    10. '   ' → logprob: -11.261726379394531

Token 431: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001217813478433527
    2. ')' → logprob: -9.3751220703125
    3. ' self' → logprob: -10.7501220703125
    4. '
' → logprob: -12.0001220703125
    5. '):
' → logprob: -12.3751220703125
    6. '   ' → logprob: -12.8751220703125
    7. '(self' → logprob: -13.3751220703125
    8. '       ' → logprob: -14.6251220703125
    9. '	self' → logprob: -15.3751220703125
    10. ')(' → logprob: -16.7501220703125

Token 432: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010707970708608627
    2. '):
' → logprob: -5.010707855224609
    3. '):' → logprob: -6.135707855224609
    4. 'self' → logprob: -6.510707855224609
    5. '(self' → logprob: -9.01070785522461
    6. ',self' → logprob: -9.88570785522461
    7. '   ' → logprob: -10.13570785522461
    8. ')' → logprob: -10.26070785522461
    9. '<|end|>' → logprob: -10.63570785522461
    10. '
' → logprob: -11.13570785522461

Token 433: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013869047397747636
    2. '       ' → logprob: -6.626387119293213
    3. ' self' → logprob: -10.626386642456055
    4. '   ' → logprob: -10.751386642456055
    5. '	self' → logprob: -11.626386642456055
    6. '
' → logprob: -12.501386642456055
    7. 'def' → logprob: -13.376386642456055
    8. '(self' → logprob: -14.001386642456055
    9. '```' → logprob: -16.876386642456055
    10. ' ' → logprob: -16.876386642456055

Token 434: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.22799767553806305
    2. 'pass' → logprob: -1.9779976606369019
    3. '       ' → logprob: -2.7279977798461914
    4. ' self' → logprob: -9.227997779846191
    5. ' pass' → logprob: -9.852997779846191
    6. '   ' → logprob: -10.977997779846191
    7. '	pass' → logprob: -12.727997779846191
    8. '	self' → logprob: -12.977997779846191
    9. '
' → logprob: -13.977997779846191
    10. 'import' → logprob: -14.227997779846191

Token 435: '.N' (ID: 4439)
  Prédit: '.l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.5611889958381653
    2. '.buffer' → logprob: -1.8111889362335205
    3. '.lines' → logprob: -2.1861889362335205
    4. '.input' → logprob: -2.9361889362335205
    5. '.commands' → logprob: -4.1861891746521
    6. '.data' → logprob: -4.5611891746521
    7. '.strategy' → logprob: -4.8111891746521
    8. '.' → logprob: -4.9361891746521
    9. '.selector' → logprob: -5.1861891746521
    10. '.handlers' → logprob: -5.4361891746521

Token 436: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3124946653842926
    2. ' =' → logprob: -1.4374946355819702
    3. '=' → logprob: -3.6874947547912598
    4. ' ,' → logprob: -5.43749475479126
    5. '<|end|>' → logprob: -6.81249475479126
    6. ' ' → logprob: -9.562494277954102
    7. '  ' → logprob: -9.562494277954102
    8. '<|end|>' → logprob: -9.812494277954102
    9. '   ' → logprob: -10.062494277954102
    10. ',self' → logprob: -10.437494277954102

Token 437: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03988593816757202
    2. ' ' → logprob: -3.789885997772217
    3. ' None' → logprob: -4.414885997772217
    4. 'None' → logprob: -5.539885997772217
    5. 'int' → logprob: -7.914885997772217
    6. ' int' → logprob: -9.164885520935059
    7. '10' → logprob: -12.539885520935059
    8. '1' → logprob: -12.914885520935059
    9. '<|end|>' → logprob: -14.164885520935059
    10. '100' → logprob: -14.539885520935059

Token 438: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034990523010492325
    2. 'None' → logprob: -3.6599905490875244
    3. 'int' → logprob: -4.784990310668945
    4. ' None' → logprob: -8.784990310668945
    5. ' ' → logprob: -9.159990310668945
    6. '10' → logprob: -11.409990310668945
    7. ' int' → logprob: -11.534990310668945
    8. '100' → logprob: -12.284990310668945
    9. '1' → logprob: -12.409990310668945
    10. '5' → logprob: -13.409990310668945

Token 439: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5313594937324524
    2. '<|end|>' → logprob: -0.9063594937324524
    3. '   ' → logprob: -5.906359672546387
    4. 'self' → logprob: -6.406359672546387
    5. '	self' → logprob: -6.781359672546387
    6. '<|end|>' → logprob: -6.906359672546387
    7. '
' → logprob: -7.281359672546387
    8. ' self' → logprob: -7.656359672546387
    9. ' ' → logprob: -8.656359672546387
    10. 'def' → logprob: -9.406359672546387

Token 441: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003719199914485216
    2. ' self' → logprob: -6.003719329833984
    3. '       ' → logprob: -6.753719329833984
    4. 's' → logprob: -10.878719329833984
    5. '
' → logprob: -11.253719329833984
    6. '	self' → logprob: -11.878719329833984
    7. '0' → logprob: -12.003719329833984
    8. ' ' → logprob: -12.378719329833984
    9. '<|end|>' → logprob: -12.503719329833984
    10. '   ' → logprob: -12.503719329833984

Token 442: '.M' (ID: 2015)
  Prédit: '.M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -0.2803926169872284
    2. '.Q' → logprob: -1.6553926467895508
    3. '.K' → logprob: -3.655392646789551
    4. '.L' → logprob: -4.905392646789551
    5. '.selector' → logprob: -5.405392646789551
    6. 'Q' → logprob: -5.655392646789551
    7. '.S' → logprob: -5.655392646789551
    8. '.T' → logprob: -6.155392646789551
    9. 'M' → logprob: -6.155392646789551
    10. '.l' → logprob: -7.030392646789551

Token 443: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029303742572665215
    2. '=' → logprob: -3.654303789138794
    3. '<|end|>' → logprob: -6.779303550720215
    4. ' ' → logprob: -7.029303550720215
    5. ',' → logprob: -7.279303550720215
    6. '<|end|>' → logprob: -8.404303550720215
    7. '   ' → logprob: -11.154303550720215
    8. '  ' → logprob: -11.404303550720215
    9. ' ,' → logprob: -11.904303550720215
    10. '	' → logprob: -12.279303550720215

Token 444: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804447129368782
    2. ' ' → logprob: -3.2880444526672363
    3. '  ' → logprob: -13.913044929504395
    4. '   ' → logprob: -14.038044929504395
    5. '[]' → logprob: -14.725544929504395
    6. ' []' → logprob: -16.350543975830078
    7. '00' → logprob: -16.413043975830078
    8. '=' → logprob: -16.538043975830078
    9. '<|end|>' → logprob: -16.600543975830078
    10. ' ' → logprob: -16.725543975830078

Token 445: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019710339256562293
    2. ' ' → logprob: -9.000197410583496
    3. '[]' → logprob: -9.625197410583496
    4. ' []' → logprob: -13.375197410583496
    5. '[]
' → logprob: -13.750197410583496
    6. 'None' → logprob: -14.062697410583496
    7. '1' → logprob: -14.312697410583496
    8. '[' → logprob: -14.500197410583496
    9. '100' → logprob: -14.687697410583496
    10. 'int' → logprob: -14.750197410583496

Token 446: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8156193494796753
    2. '<|end|>' → logprob: -1.3156193494796753
    3. '
' → logprob: -1.6906193494796753
    4. '       ' → logprob: -2.690619468688965
    5. 'def' → logprob: -4.065619468688965
    6. '	def' → logprob: -4.315619468688965
    7. '<|end|>' → logprob: -5.940619468688965
    8. ' def' → logprob: -6.440619468688965
    9. '    
' → logprob: -6.815619468688965
    10. '	self' → logprob: -7.940619468688965

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18264734745025635
    2. '<|end|>' → logprob: -2.432647228240967
    3. '   ' → logprob: -2.807647228240967
    4. 'def' → logprob: -4.557647228240967
    5. 'self' → logprob: -6.182647228240967
    6. '<|end|>' → logprob: -6.432647228240967
    7. ' def' → logprob: -6.682647228240967
    8. ' self' → logprob: -6.932647228240967
    9. '	self' → logprob: -7.057647228240967
    10. '	def' → logprob: -7.182647228240967

Token 448: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00426110764965415
    2. '       ' → logprob: -6.004261016845703
    3. 'def' → logprob: -6.379261016845703
    4. ' self' → logprob: -9.504261016845703
    5. '	self' → logprob: -12.379261016845703
    6. '   ' → logprob: -12.504261016845703
    7. '
' → logprob: -12.879261016845703
    8. '        
' → logprob: -14.004261016845703
    9. '```' → logprob: -14.754261016845703
    10. '<|end|>' → logprob: -15.504261016845703

Token 449: '.commands' (ID: 61085)
  Prédit: '.selector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.selector' → logprob: -0.057816967368125916
    2. 'selector' → logprob: -3.307816982269287
    3. '.strategy' → logprob: -4.557816982269287
    4. '.commands' → logprob: -6.432816982269287
    5. '_selector' → logprob: -6.557816982269287
    6. '.l' → logprob: -6.557816982269287
    7. '.operations' → logprob: -6.932816982269287
    8. '.actions' → logprob: -7.057816982269287
    9. '.' → logprob: -7.557816982269287
    10. '.events' → logprob: -7.682816982269287

Token 450: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07004358619451523
    2. '=' → logprob: -2.6950435638427734
    3. '=[]' → logprob: -9.945043563842773
    4. ':' → logprob: -10.070043563842773
    5. '<|end|>' → logprob: -12.195043563842773
    6. '  ' → logprob: -12.445043563842773
    7. ' ' → logprob: -12.820043563842773
    8. '   ' → logprob: -13.570043563842773
    9. '[]' → logprob: -14.195043563842773
    10. '	' → logprob: -14.695043563842773

Token 451: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.2200749754119897e-06
    2. ' []' → logprob: -13.500001907348633
    3. '[]
' → logprob: -14.625001907348633
    4. '[]}' → logprob: -16.125001907348633
    5. '[' → logprob: -16.750001907348633
    6. '[]

' → logprob: -17.125001907348633
    7. '[]"' → logprob: -18.625001907348633
    8. '[])' → logprob: -19.000001907348633
    9. '[],' → logprob: -19.125001907348633
    10. 'list' → logprob: -19.375001907348633

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07429277151823044
    2. 'def' → logprob: -3.0742926597595215
    3. ' def' → logprob: -3.6992926597595215
    4. '<|end|>' → logprob: -8.19929313659668
    5. '
' → logprob: -8.44929313659668
    6. '	def' → logprob: -9.19929313659668
    7. '    
' → logprob: -10.82429313659668
    8. '```' → logprob: -11.44929313659668
    9. '<|end|>' → logprob: -11.44929313659668
    10. ' ' → logprob: -13.69929313659668

Token 453: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0053161741234362125
    2. ' def' → logprob: -5.255316257476807
    3. '   ' → logprob: -9.630315780639648
    4. '	def' → logprob: -11.005315780639648
    5. '
' → logprob: -17.63031578063965
    6. ' ' → logprob: -18.38031578063965
    7. '<|end|>' → logprob: -18.63031578063965
    8. '```' → logprob: -19.38031578063965
    9. '  ' → logprob: -19.50531578063965
    10. 'import' → logprob: -19.50531578063965

Token 454: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.004237481392920017
    2. ' parse' → logprob: -5.504237651824951
    3. 'read' → logprob: -8.754237174987793
    4. ' read' → logprob: -14.379237174987793
    5. 'load' → logprob: -14.754237174987793
    6. 'def' → logprob: -15.629237174987793
    7. 'process' → logprob: -17.00423812866211
    8. 'add' → logprob: -17.50423812866211
    9. '	parse' → logprob: -18.25423812866211
    10. 'decode' → logprob: -18.87923812866211

Token 455: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0910310372710228
    2. '(' → logprob: -2.841031074523926
    3. '_line' → logprob: -3.591031074523926
    4. 'self' → logprob: -7.591031074523926
    5. '_input' → logprob: -8.466031074523926
    6. '(
' → logprob: -8.841031074523926
    7. '_' → logprob: -9.466031074523926
    8. 'line' → logprob: -9.716031074523926
    9. '_command' → logprob: -10.716031074523926
    10. ' (' → logprob: -11.091031074523926

Token 456: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20480439066886902
    2. '_line' → logprob: -1.9548044204711914
    3. 'self' → logprob: -3.7048044204711914
    4. '_input' → logprob: -4.829804420471191
    5. '(self' → logprob: -5.204804420471191
    6. ',self' → logprob: -6.079804420471191
    7. '_lines' → logprob: -6.454804420471191
    8. '_self' → logprob: -7.704804420471191
    9. ',line' → logprob: -8.079804420471191
    10. '_,' → logprob: -8.329804420471191

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11643654853105545
    2. 'import' → logprob: -2.49143648147583
    3. ' while' → logprob: -4.36643648147583
    4. ' import' → logprob: -4.61643648147583
    5. 'while' → logprob: -5.49143648147583
    6. '   ' → logprob: -9.241436958312988
    7. 'try' → logprob: -9.241436958312988
    8. ' for' → logprob: -9.616436958312988
    9. 'n' → logprob: -9.991436958312988
    10. ' with' → logprob: -10.741436958312988

Token 458: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.7880524396896362
    2. ' import' → logprob: -1.0380524396896362
    3. ' self' → logprob: -2.038052558898926
    4. '       ' → logprob: -3.788052558898926
    5. 'self' → logprob: -4.038052558898926
    6. ' n' → logprob: -4.288052558898926
    7. 'n' → logprob: -5.163052558898926
    8. '```' → logprob: -7.663052558898926
    9. ' while' → logprob: -8.538052558898926
    10. ' for' → logprob: -8.538052558898926

Token 459: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00020354038861114532
    2. ' sys' → logprob: -8.500203132629395
    3. '=sys' → logprob: -18.37520408630371
    4. '	sys' → logprob: -19.25020408630371
    5. '_sys' → logprob: -21.37520408630371
    6. 'stdin' → logprob: -21.37520408630371
    7. '(sys' → logprob: -22.37520408630371
    8. 'io' → logprob: -22.50020408630371
    9. '.sys' → logprob: -23.00020408630371
    10. 'built' → logprob: -24.12520408630371

Token 460: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006264181574806571
    2. '        
' → logprob: -8.875626564025879
    3. '
' → logprob: -9.000626564025879
    4. ' lines' → logprob: -9.500626564025879
    5. 'n' → logprob: -9.750626564025879
    6. 'input' → logprob: -10.000626564025879
    7. 'for' → logprob: -10.250626564025879
    8. ' line' → logprob: -10.375626564025879
    9. 'line' → logprob: -10.500626564025879
    10. 'self' → logprob: -11.125626564025879

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043007321073673666
    2. ' lines' → logprob: -8.8754301071167
    3. 'for' → logprob: -9.6254301071167
    4. 'line' → logprob: -10.0004301071167
    5. '
' → logprob: -10.3754301071167
    6. ' line' → logprob: -10.5004301071167
    7. '        
' → logprob: -10.7504301071167
    8. ' for' → logprob: -10.8754301071167
    9. 'data' → logprob: -11.0004301071167
    10. 'n' → logprob: -11.1254301071167

Token 462: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010603824630379677
    2. ' lines' → logprob: -4.885603904724121
    3. 'lines' → logprob: -7.010603904724121
    4. 'for' → logprob: -7.135603904724121
    5. 'line' → logprob: -7.635603904724121
    6. 'data' → logprob: -7.885603904724121
    7. 'input' → logprob: -8.260603904724121
    8. ' for' → logprob: -9.760603904724121
    9. ' line' → logprob: -10.010603904724121
    10. 'n' → logprob: -10.510603904724121

Token 463: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.008717515505850315
    2. 'line' → logprob: -5.6337175369262695
    3. '()' → logprob: -5.7587175369262695
    4. '_' → logprob: -7.0087175369262695
    5. '=' → logprob: -7.5087175369262695
    6. ' =' → logprob: -8.00871753692627
    7. '().' → logprob: -10.13371753692627
    8. '_=' → logprob: -10.50871753692627
    9. '_input' → logprob: -10.63371753692627
    10. '_token' → logprob: -10.88371753692627

Token 464: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018152983859181404
    2. '=' → logprob: -4.018153190612793
    3. '=line' → logprob: -13.018153190612793
    4. ' =
' → logprob: -15.393153190612793
    5. ' ' → logprob: -15.393153190612793
    6. '=sys' → logprob: -15.768153190612793
    7. '   ' → logprob: -16.393152236938477
    8. 'line' → logprob: -17.018152236938477
    9. '       ' → logprob: -17.393152236938477
    10. '    ' → logprob: -17.518152236938477

Token 465: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.38687241077423096
    2. 'sys' → logprob: -1.136872410774231
    3. 'input' → logprob: -14.511872291564941
    4. '       ' → logprob: -14.886872291564941
    5. ' input' → logprob: -15.636872291564941
    6. '=sys' → logprob: -15.886872291564941
    7. '	sys' → logprob: -16.011873245239258
    8. '(sys' → logprob: -16.511873245239258
    9. ' ' → logprob: -19.886873245239258
    10. '_sys' → logprob: -19.886873245239258

Token 466: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.945094355614856e-05
    2. '.' → logprob: -9.625069618225098
    3. 'stdin' → logprob: -13.500069618225098
    4. '.argv' → logprob: -14.125069618225098
    5. '.stdout' → logprob: -14.375069618225098
    6. '.std' → logprob: -14.500069618225098
    7. '.readline' → logprob: -16.25006866455078
    8. '.st' → logprob: -18.00006866455078
    9. ' .' → logprob: -18.25006866455078
    10. ' stdin' → logprob: -18.50006866455078

Token 467: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -7.896309739408025e-07
    2. '.' → logprob: -14.625000953674316
    3. ' readline' → logprob: -15.500000953674316
    4. '.readlines' → logprob: -17.0
    5. '.read' → logprob: -18.125
    6. 'read' → logprob: -18.75
    7. '.stdin' → logprob: -20.75
    8. ' .' → logprob: -22.25
    9. '().' → logprob: -22.375
    10. '_read' → logprob: -22.875

Token 468: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0635753646492958
    2. '()' → logprob: -2.813575267791748
    3. '()
' → logprob: -6.438575267791748
    4. '()
' → logprob: -12.813575744628906
    5. '()

' → logprob: -13.313575744628906
    6. '.strip' → logprob: -13.813575744628906
    7. '()\' → logprob: -13.813575744628906
    8. '.rstrip' → logprob: -14.438575744628906
    9. '       ' → logprob: -15.313575744628906
    10. '().
' → logprob: -15.563575744628906

Token 469: '       ' (ID: 309)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.15836948156356812
    2. '.strip' → logprob: -2.408369541168213
    3. '       ' → logprob: -3.158369541168213
    4. '.rstrip' → logprob: -4.783369541168213
    5. '.split' → logprob: -5.658369541168213
    6. '()' → logprob: -7.033369541168213
    7. '()
' → logprob: -7.158369541168213
    8. '.' → logprob: -8.283369064331055
    9. 'rstrip' → logprob: -9.783369064331055
    10. 'strip' → logprob: -9.783369064331055

Token 470: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3662489652633667
    2. 'self' (adapté à ' self') → logprob: -1.4912489652633667
    3. ' self' → logprob: -2.6162490844726562
    4. ' parts' → logprob: -5.741249084472656
    5. ' if' → logprob: -6.491249084472656
    6. 'parts' → logprob: -6.616249084472656
    7. 'if' → logprob: -6.741249084472656
    8. 'tokens' → logprob: -7.741249084472656
    9. '        
' → logprob: -8.116249084472656
    10. 'n' → logprob: -8.991249084472656

Token 471: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.00011641718447208405
    2. '.' → logprob: -9.375116348266602
    3. 'N' → logprob: -10.625116348266602
    4. ' .' → logprob: -12.750116348266602
    5. '	N' → logprob: -14.125116348266602
    6. '
' → logprob: -14.375116348266602
    7. '```' → logprob: -14.375116348266602
    8. '`.' → logprob: -14.625116348266602
    9. '.
' → logprob: -15.125116348266602
    10. '.M' → logprob: -15.625116348266602

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013320252764970064
    2. ' ,' → logprob: -6.626331806182861
    3. ',self' → logprob: -13.00133228302002
    4. ' =' → logprob: -14.12633228302002
    5. ',int' → logprob: -14.12633228302002
    6. '=' → logprob: -14.37633228302002
    7. '_,' → logprob: -14.62633228302002
    8. ',
' → logprob: -14.75133228302002
    9. ',N' → logprob: -15.62633228302002
    10. ',input' → logprob: -16.376331329345703

Token 473: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20315523445606232
    2. ' self' → logprob: -1.703155279159546
    3. ' ' → logprob: -6.828155040740967
    4. '<|end|>' → logprob: -7.453155040740967
    5. '=self' → logprob: -10.453155517578125
    6. ' 
' → logprob: -11.078155517578125
    7. '=' → logprob: -11.828155517578125
    8. ' ' → logprob: -12.328155517578125
    9. ' =' → logprob: -12.453155517578125
    10. '  ' → logprob: -12.703155517578125

Token 474: '.M' (ID: 2015)
  Prédit: '.M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -0.12186408042907715
    2. ',' → logprob: -2.371864080429077
    3. ',M' → logprob: -4.121864318847656
    4. '=' → logprob: -5.746864318847656
    5. 'M' → logprob: -6.746864318847656
    6. '.' → logprob: -7.996864318847656
    7. ' ,' → logprob: -8.371864318847656
    8. ' =' → logprob: -9.246864318847656
    9. '=M' → logprob: -9.746864318847656
    10. '	M' → logprob: -10.496864318847656

Token 475: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740865230560303
    2. '=' → logprob: -0.9740865230560303
    3. ',' → logprob: -11.97408676147461
    4. ' ' → logprob: -13.84908676147461
    5. '=line' → logprob: -14.22408676147461
    6. '=int' → logprob: -14.84908676147461
    7. '＝' → logprob: -15.72408676147461
    8. ' =
' → logprob: -15.72408676147461
    9. ' ,' → logprob: -15.84908676147461
    10. ' ' → logprob: -16.09908676147461

Token 476: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.575941264629364
    2. ' map' → logprob: -0.825941264629364
    3. '(map' → logprob: -13.95094108581543
    4. '[' → logprob: -14.07594108581543
    5. '	map' → logprob: -16.20094108581543
    6. 'first' → logprob: -16.70094108581543
    7. '   ' → logprob: -17.07594108581543
    8. '
' → logprob: -17.82594108581543
    9. ' first' → logprob: -18.45094108581543
    10. ' [' → logprob: -18.57594108581543

Token 477: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -11.750009536743164
    3. '(str' → logprob: -14.000009536743164
    4. 'int' → logprob: -15.250009536743164
    5. '(lambda' → logprob: -16.375009536743164
    6. '<int' → logprob: -17.875009536743164
    7. '[int' → logprob: -18.125009536743164
    8. '=int' → logprob: -18.125009536743164
    9. ' (' → logprob: -18.875009536743164
    10. '(tuple' → logprob: -19.000009536743164

Token 478: ',' (ID: 11)
  Prédit: '(first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.0018954371334984899
    2. 'first' → logprob: -6.376895427703857
    3. ',' → logprob: -9.001895904541016
    4. ' first' → logprob: -10.376895904541016
    5. '(' → logprob: -10.501895904541016
    6. ')' → logprob: -11.876895904541016
    7. '[first' → logprob: -13.501895904541016
    8. ' (' → logprob: -13.626895904541016
    9. ':first' → logprob: -14.251895904541016
    10. '	first' → logprob: -14.501895904541016

Token 479: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.004078401252627373
    2. ' first' → logprob: -5.504078388214111
    3. '(first' → logprob: -17.754077911376953
    4. '	first' → logprob: -18.254077911376953
    5. '[first' → logprob: -19.754077911376953
    6. '
' → logprob: -20.629077911376953
    7. ')' → logprob: -21.879077911376953
    8. '_first' → logprob: -22.129077911376953
    9. 'First' → logprob: -22.254077911376953
    10. ':first' → logprob: -22.754077911376953

Token 480: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -3.547789674485102e-05
    2. 'line' → logprob: -10.250035285949707
    3. '_LINE' → logprob: -16.500036239624023
    4. 'Line' → logprob: -17.000036239624023
    5. '-line' → logprob: -18.375036239624023
    6. 'lin' → logprob: -18.500036239624023
    7. '.readline' → logprob: -18.625036239624023
    8. '_' → logprob: -18.875036239624023
    9. ')' → logprob: -18.875036239624023
    10. ' line' → logprob: -19.000036239624023

Token 481: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018348470330238342
    2. '.strip' → logprob: -4.018348693847656
    3. '.split' → logprob: -8.643348693847656
    4. ' .' → logprob: -11.893348693847656
    5. '.rstrip' → logprob: -12.268348693847656
    6. '.readline' → logprob: -12.393348693847656
    7. '()' → logprob: -12.518348693847656
    8. '.' → logprob: -13.268348693847656
    9. 'strip' → logprob: -13.768348693847656
    10. ' ().' → logprob: -16.268348693847656

Token 482: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00868205912411213
    2. '()' → logprob: -4.7586822509765625
    3. '())
' → logprob: -10.133682250976562
    4. '('' → logprob: -11.258682250976562
    5. ')' → logprob: -12.133682250976562
    6. '(' → logprob: -12.883682250976562
    7. ' ())' → logprob: -12.883682250976562
    8. '()]' → logprob: -13.883682250976562
    9. '())

' → logprob: -13.883682250976562
    10. '()
' → logprob: -14.008682250976562

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004142626188695431
    2. 'for' → logprob: -5.629142761230469
    3. ' for' → logprob: -8.004142761230469
    4. '   ' → logprob: -9.254142761230469
    5. '
' → logprob: -9.754142761230469
    6. '```' → logprob: -11.129142761230469
    7. '	for' → logprob: -11.254142761230469
    8. '	' → logprob: -11.629142761230469
    9. 'while' → logprob: -12.004142761230469
    10. '	   ' → logprob: -12.379142761230469

Token 484: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00037347347824834287
    2. '       ' → logprob: -8.000373840332031
    3. 'self' → logprob: -10.500373840332031
    4. ' for' → logprob: -11.500373840332031
    5. '	for' → logprob: -15.875373840332031
    6. 'while' → logprob: -16.37537384033203
    7. '```' → logprob: -16.75037384033203
    8. '
' → logprob: -16.87537384033203
    9. '   ' → logprob: -18.75037384033203
    10. '        
' → logprob: -19.25037384033203

Token 485: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00029959288076497614
    2. '_i' → logprob: -8.500299453735352
    3. '_line' → logprob: -10.250299453735352
    4. ' _' → logprob: -10.375299453735352
    5. ' in' → logprob: -11.750299453735352
    6. '_in' → logprob: -12.000299453735352
    7. '_m' → logprob: -13.625299453735352
    8. '_command' → logprob: -13.875299453735352
    9. '_lineno' → logprob: -13.875299453735352
    10. '_lines' → logprob: -14.250299453735352

Token 486: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.27042356133461
    2. 'range' → logprob: -1.7704235315322876
    3. 'in' → logprob: -2.770423650741577
    4. ' range' → logprob: -5.520423412322998
    5. '_' → logprob: -10.270423889160156
    6. ' ' → logprob: -12.645423889160156
    7. '   ' → logprob: -13.520423889160156
    8. '  ' → logprob: -13.895423889160156
    9. 'i' → logprob: -14.395423889160156
    10. '	range' → logprob: -14.520423889160156

Token 487: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005550591740757227
    2. ' range' → logprob: -7.500555038452148
    3. '   ' → logprob: -14.000555038452148
    4. '(range' → logprob: -14.625555038452148
    5. '	range' → logprob: -15.375555038452148
    6. ' ' → logprob: -15.500555038452148
    7. '  ' → logprob: -15.625555038452148
    8. '    ' → logprob: -16.12555503845215
    9. 'rang' → logprob: -17.62555503845215
    10. '[' → logprob: -18.25055503845215

Token 488: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.375000953674316
    3. 'self' → logprob: -14.750000953674316
    4. '(
' → logprob: -18.875001907348633
    5. '       ' → logprob: -19.500001907348633
    6. '[self' → logprob: -19.750001907348633
    7. ':self' → logprob: -20.375001907348633
    8. ' self' → logprob: -20.500001907348633
    9. '   ' → logprob: -20.500001907348633
    10. ' (' → logprob: -20.625001907348633

Token 489: '.M' (ID: 2015)
  Prédit: '.M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -2.069664333248511e-05
    2. '.' → logprob: -11.000020980834961
    3. ' .' → logprob: -13.000020980834961
    4. 'M' → logprob: -14.125020980834961
    5. '.N' → logprob: -14.750020980834961
    6. 'self' → logprob: -15.000020980834961
    7. '.
' → logprob: -16.25002098083496
    8. '.М' → logprob: -17.12502098083496
    9. '	M' → logprob: -17.62502098083496
    10. '   ' → logprob: -18.12502098083496

Token 490: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.35488268733024597
    2. ':' → logprob: -1.6048827171325684
    3. '):' → logprob: -3.1048827171325684
    4. ':
' → logprob: -3.1048827171325684
    5. '():
' → logprob: -5.729882717132568
    6. ' ):
' → logprob: -6.479882717132568
    7. ' :' → logprob: -6.729882717132568
    8. '       ' → logprob: -7.229882717132568
    9. '):
' → logprob: -7.604882717132568
    10. ' :
' → logprob: -7.854882717132568

Token 491: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010568885772954673
    2. '	       ' → logprob: -9.875105857849121
    3. ' line' → logprob: -11.375105857849121
    4. '```' → logprob: -12.125105857849121
    5. '    	   ' → logprob: -12.375105857849121
    6. 'line' → logprob: -12.375105857849121
    7. '		' → logprob: -12.750105857849121
    8. '<|end|>' → logprob: -12.875105857849121
    9. 'self' → logprob: -13.000105857849121
    10. '<|end|>' → logprob: -13.125105857849121

Token 492: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.04795966297388077
    2. ' line' → logprob: -3.797959566116333
    3. 'cmd' → logprob: -4.297959804534912
    4. 'command' → logprob: -5.172959804534912
    5. '           ' → logprob: -5.422959804534912
    6. 'self' → logprob: -7.422959804534912
    7. ' cmd' → logprob: -9.922959327697754
    8. '               ' → logprob: -10.047959327697754
    9. ' command' → logprob: -10.922959327697754
    10. '	line' → logprob: -11.547959327697754

Token 493: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03008495643734932
    2. '=' → logprob: -3.5300848484039307
    3. '=line' → logprob: -8.030084609985352
    4. '           ' → logprob: -12.155084609985352
    5. '       ' → logprob: -13.905084609985352
    6. '   ' → logprob: -14.405084609985352
    7. '		' → logprob: -14.905084609985352
    8. 'line' → logprob: -15.030084609985352
    9. ' =
' → logprob: -15.530084609985352
    10. '        ' → logprob: -15.780084609985352

Token 494: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7719181180000305
    2. 'input' → logprob: -0.8969181180000305
    3. 'sys' → logprob: -2.5219180583953857
    4. ' sys' → logprob: -3.0219180583953857
    5. 'import' → logprob: -7.521918296813965
    6. ' ' → logprob: -9.521918296813965
    7. '_input' → logprob: -9.834418296813965
    8. '=input' → logprob: -10.396918296813965
    9. '=sys' → logprob: -10.459418296813965
    10. '	sys' → logprob: -10.584418296813965

Token 495: '.stdin' (ID: 93480)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5836712718009949
    2. '.readline' → logprob: -1.0836713314056396
    3. 'sys' → logprob: -3.0836713314056396
    4. 'w' → logprob: -4.3336710929870605
    5. 't' → logprob: -4.5836710929870605
    6. 'line' → logprob: -5.2086710929870605
    7. 'in' → logprob: -5.4586710929870605
    8. '.stdin' → logprob: -5.7086710929870605
    9. 'ed' → logprob: -6.0836710929870605
    10. 'stdin' → logprob: -6.2086710929870605

Token 496: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008615635335445404
    2. 'read' → logprob: -4.758615493774414
    3. ' readline' → logprob: -13.883615493774414
    4. 'line' → logprob: -16.508615493774414
    5. '_read' → logprob: -17.258615493774414
    6. '.' → logprob: -18.008615493774414
    7. '.read' → logprob: -18.258615493774414
    8. '
' → logprob: -18.383615493774414
    9. 'getline' → logprob: -19.008615493774414
    10. 'reader' → logprob: -19.383615493774414

Token 497: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027295611798763275
    2. '().' → logprob: -3.9022955894470215
    3. '.strip' → logprob: -6.0272955894470215
    4. '.rstrip' → logprob: -6.0272955894470215
    5. ' =' → logprob: -7.5272955894470215
    6. '()' → logprob: -8.27729606628418
    7. '.split' → logprob: -8.40229606628418
    8. 'self' → logprob: -8.52729606628418
    9. '(line' → logprob: -9.02729606628418
    10. '.' → logprob: -9.52729606628418

Token 498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.983476436696947e-05
    2. '       ' → logprob: -10.875089645385742
    3. ' =' → logprob: -11.125089645385742
    4. ',' → logprob: -11.500089645385742
    5. '.strip' → logprob: -11.500089645385742
    6. 'self' → logprob: -12.125089645385742
    7. '().' → logprob: -12.125089645385742
    8. '.rstrip' → logprob: -12.625089645385742
    9. '	       ' → logprob: -12.750089645385742
    10. '.' → logprob: -12.875089645385742

Token 499: ' parts' (ID: 7881)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10896304249763489
    2. '           ' → logprob: -2.3589630126953125
    3. ' self' → logprob: -4.9839630126953125
    4. 'tokens' → logprob: -7.1089630126953125
    5. 'parts' (adapté à ' parts') → logprob: -7.4839630126953125
    6. 'command' → logprob: -8.733963012695312
    7. 'line' → logprob: -8.983963012695312
    8. '       ' → logprob: -9.733963012695312
    9. '               ' → logprob: -10.108963012695312
    10. ' parts' → logprob: -10.233963012695312

Token 500: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520699203014374
    2. '=' → logprob: -1.5020699501037598
    3. '=line' → logprob: -8.877069473266602
    4. '＝' → logprob: -14.627069473266602
    5. ' =
' → logprob: -16.2520694732666
    6. '=
' → logprob: -16.3770694732666
    7. '<|end|>' → logprob: -16.5020694732666
    8. '.=' → logprob: -16.6270694732666
    9. 'tokens' → logprob: -16.6270694732666
    10. '.append' → logprob: -16.7520694732666

Token 501: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0019286326132714748
    2. ' line' → logprob: -6.251928806304932
    3. 'list' → logprob: -17.876928329467773
    4. '[line' → logprob: -18.001928329467773
    5. '(line' → logprob: -19.501928329467773
    6. '	line' → logprob: -20.376928329467773
    7. '=line' → logprob: -21.876928329467773
    8. '#line' → logprob: -22.501928329467773
    9. '   ' → logprob: -23.251928329467773
    10. '[' → logprob: -23.626928329467773

Token 502: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.008919687941670418
    2. '.split' → logprob: -5.383919715881348
    3. '().' → logprob: -5.883919715881348
    4. '.rstrip' → logprob: -6.883919715881348
    5. '.' → logprob: -7.758919715881348
    6. ' .' → logprob: -10.508919715881348
    7. 'strip' → logprob: -10.883919715881348
    8. '           ' → logprob: -12.883919715881348
    9. 'split' → logprob: -13.633919715881348
    10. '[:-' → logprob: -13.758919715881348

Token 503: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004368290305137634
    2. '()
' → logprob: -5.504368305206299
    3. '<|end|>' → logprob: -9.00436782836914
    4. '()\' → logprob: -9.62936782836914
    5. '(' → logprob: -10.62936782836914
    6. '<|end|>' → logprob: -10.62936782836914
    7. '()[' → logprob: -11.50436782836914
    8. '()

' → logprob: -11.62936782836914
    9. '();' → logprob: -12.25436782836914
    10. '()]' → logprob: -12.25436782836914

Token 504: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00036168331280350685
    2. 'self' → logprob: -8.250361442565918
    3. '       ' → logprob: -9.375361442565918
    4. '   ' → logprob: -11.625361442565918
    5. ' self' → logprob: -13.125361442565918
    6. '		' → logprob: -13.250361442565918
    7. '               ' → logprob: -14.125361442565918
    8. '            
' → logprob: -14.125361442565918
    9. '```' → logprob: -15.125361442565918
    10. '[' → logprob: -15.500361442565918

Token 505: ' cmd' (ID: 11704)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15699134767055511
    2. '           ' → logprob: -2.2819912433624268
    3. '       ' → logprob: -3.7819912433624268
    4. 'if' → logprob: -3.9069912433624268
    5. ' self' → logprob: -8.156991004943848
    6. ' if' → logprob: -11.031991004943848
    7. '   ' → logprob: -11.781991004943848
    8. '	self' → logprob: -12.031991004943848
    9. 'command' → logprob: -12.156991004943848
    10. '[self' → logprob: -12.906991004943848

Token 506: '_type' (ID: 3804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07206869125366211
    2. '=' → logprob: -2.947068691253662
    3. 's' → logprob: -4.197068691253662
    4. ',' → logprob: -6.697068691253662
    5. '_type' → logprob: -8.44706916809082
    6. '_name' → logprob: -9.94706916809082
    7. '_' → logprob: -10.07206916809082
    8. ' ' → logprob: -10.07206916809082
    9. 'type' → logprob: -10.07206916809082
    10. '[]' → logprob: -10.07206916809082

Token 507: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024251282215118
    2. '=' → logprob: -1.9102425575256348
    3. ',' → logprob: -11.535242080688477
    4. ' =
' → logprob: -12.660242080688477
    5. ' ' → logprob: -12.910242080688477
    6. '=int' → logprob: -14.660242080688477
    7. '=
' → logprob: -14.660242080688477
    8. '<|end|>' → logprob: -14.660242080688477
    9. '  ' → logprob: -15.410242080688477
    10. 's' → logprob: -15.660242080688477

Token 508: ' int' (ID: 677)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.02362336404621601
    2. ' parts' → logprob: -4.148623466491699
    3. 'int' → logprob: -4.898623466491699
    4. ' int' → logprob: -9.2736234664917
    5. '(parts' → logprob: -12.3986234664917
    6. '   ' → logprob: -13.6486234664917
    7. 'part' → logprob: -13.8986234664917
    8. 'ints' → logprob: -13.8986234664917
    9. '           ' → logprob: -14.5236234664917
    10. ' ' → logprob: -14.7736234664917

Token 509: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -9.088346359931165e-07
    2. 'parts' → logprob: -14.000000953674316
    3. '(' → logprob: -17.5
    4. ' parts' → logprob: -20.125
    5. '(part' → logprob: -20.125
    6. 'Parts' → logprob: -21.25
    7. '(
' → logprob: -22.25
    8. '_parts' → logprob: -22.625
    9. '(points' → logprob: -22.75
    10. ' (' → logprob: -23.5

Token 510: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.000017166137695
    3. '0' → logprob: -14.875017166137695
    4. '[
' → logprob: -16.375017166137695
    5. '()[' → logprob: -16.500017166137695
    6. ' [' → logprob: -17.125017166137695
    7. ')' → logprob: -17.250017166137695
    8. '   ' → logprob: -18.125017166137695
    9. ' ' → logprob: -19.375017166137695
    10. '	' → logprob: -19.625017166137695

Token 511: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2352385965641588e-05
    2. '[' → logprob: -11.375012397766113
    3. ' ' → logprob: -14.000012397766113
    4. '   ' → logprob: -17.625011444091797
    5. '
' → logprob: -19.750011444091797
    6. '```' → logprob: -20.375011444091797
    7. ')' → logprob: -20.625011444091797
    8. '	' → logprob: -20.625011444091797
    9. '00' → logprob: -21.375011444091797
    10. '  ' → logprob: -21.500011444091797

Token 512: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001375710591673851
    2. ')
' → logprob: -6.876375675201416
    3. '])' → logprob: -8.126376152038574
    4. ']' → logprob: -10.501376152038574
    5. ')]' → logprob: -11.626376152038574
    6. ' )' → logprob: -12.126376152038574
    7. '])
' → logprob: -13.751376152038574
    8. ')])' → logprob: -13.876376152038574
    9. ')
' → logprob: -14.501376152038574
    10. '       ' → logprob: -14.626376152038574

Token 513: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005319139454513788
    2. 'if' → logprob: -5.255319118499756
    3. ' if' → logprob: -10.005319595336914
    4. '       ' → logprob: -10.255319595336914
    5. 'self' → logprob: -13.630319595336914
    6. '          ' → logprob: -14.130319595336914
    7. '		' → logprob: -14.255319595336914
    8. '   ' → logprob: -14.255319595336914
    9. 'params' → logprob: -15.130319595336914
    10. 'tokens' → logprob: -15.380319595336914

Token 514: ' arg' (ID: 2341)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3689449727535248
    2. 'args' → logprob: -1.3689450025558472
    3. '           ' → logprob: -3.6189448833465576
    4. 'params' → logprob: -3.6189448833465576
    5. 'self' → logprob: -8.493945121765137
    6. 'arguments' → logprob: -9.243945121765137
    7. ' if' → logprob: -9.368945121765137
    8. 'cmd' → logprob: -9.993945121765137
    9. 'data' → logprob: -10.118945121765137
    10. ' args' → logprob: -11.243945121765137

Token 515: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28593581914901733
    2. 's' → logprob: -2.035935878753662
    3. '=' → logprob: -2.160935878753662
    4. 'ument' → logprob: -6.285935878753662
    5. 'uments' → logprob: -6.910935878753662
    6. '1' → logprob: -11.035935401916504
    7. '=None' → logprob: -11.535935401916504
    8. '=int' → logprob: -12.160935401916504
    9. '=s' → logprob: -12.285935401916504
    10. '_' → logprob: -12.910935401916504

Token 516: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47466525435447693
    2. ' int' → logprob: -0.9746652841567993
    3. ' None' → logprob: -7.72466516494751
    4. 'None' → logprob: -8.849665641784668
    5. '(int' → logprob: -13.724665641784668
    6. ' parts' → logprob: -13.974665641784668
    7. '0' → logprob: -15.099665641784668
    8. 'parts' → logprob: -15.599665641784668
    9. '   ' → logprob: -16.22466468811035
    10. ' ' → logprob: -16.47466468811035

Token 517: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -3.531315314830863e-06
    2. 'parts' → logprob: -13.125003814697266
    3. '(' → logprob: -13.625003814697266
    4. ' (' → logprob: -15.500003814697266
    5. ' parts' → logprob: -16.625003814697266
    6. '(part' → logprob: -18.500003814697266
    7. '(
' → logprob: -19.250003814697266
    8. '(points' → logprob: -19.750003814697266
    9. '
' → logprob: -19.750003814697266
    10. '()' → logprob: -21.125003814697266

Token 518: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001573663903400302
    2. '1' → logprob: -7.12657356262207
    3. '(' → logprob: -7.25157356262207
    4. '[-' → logprob: -10.25157356262207
    5. '   ' → logprob: -11.50157356262207
    6. ' ' → logprob: -12.00157356262207
    7. ')' → logprob: -13.00157356262207
    8. '
' → logprob: -13.37657356262207
    9. '       ' → logprob: -14.25157356262207
    10. '()[' → logprob: -14.37657356262207

Token 519: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -15.875
    4. '[' → logprob: -17.75
    5. '
' → logprob: -18.25
    6. '-' → logprob: -19.5
    7. ')' → logprob: -19.625
    8. '```' → logprob: -20.125
    9. '0' → logprob: -20.375
    10. 'parts' → logprob: -20.5

Token 520: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022267408203333616
    2. ')
' → logprob: -6.627226829528809
    3. '])' → logprob: -7.127226829528809
    4. ' )' → logprob: -10.002226829528809
    5. '       ' → logprob: -10.502226829528809
    6. '})' → logprob: -12.752226829528809
    7. ')]' → logprob: -12.877226829528809
    8. '   ' → logprob: -12.877226829528809
    9. ']' → logprob: -13.127226829528809
    10. '           ' → logprob: -13.252226829528809

Token 521: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.514650183613412e-05
    2. '       ' → logprob: -11.375055313110352
    3. '		' → logprob: -11.625055313110352
    4. 'self' → logprob: -11.875055313110352
    5. '<|end|>' → logprob: -11.875055313110352
    6. '	       ' → logprob: -12.000055313110352
    7. '   ' → logprob: -12.375055313110352
    8. ',' → logprob: -12.750055313110352
    9. '            
' → logprob: -13.500055313110352
    10. '          ' → logprob: -13.750055313110352

Token 522: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023457203060388565
    2. 'self' (adapté à ' self') → logprob: -3.7734572887420654
    3. ' self' → logprob: -8.773457527160645
    4. '       ' → logprob: -10.023457527160645
    5. '   ' → logprob: -11.523457527160645
    6. '		' → logprob: -13.898457527160645
    7. '	self' → logprob: -14.023457527160645
    8. '            
' → logprob: -15.273457527160645
    9. '	       ' → logprob: -15.773457527160645
    10. '
' → logprob: -16.148456573486328

Token 523: '.commands' (ID: 61085)
  Prédit: '.commands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.commands' → logprob: -8.613945101387799e-05
    2. 'commands' → logprob: -9.875085830688477
    3. '.' → logprob: -11.000085830688477
    4. ' .' → logprob: -11.125085830688477
    5. '.command' → logprob: -13.750085830688477
    6. '.append' → logprob: -14.500085830688477
    7. '.cmd' → logprob: -14.625085830688477
    8. '.requests' → logprob: -15.250085830688477
    9. ' commands' → logprob: -15.625085830688477
    10. '.Commands' → logprob: -15.750085830688477

Token 524: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005021584220230579
    2. '.' → logprob: -7.625502109527588
    3. ' .' → logprob: -12.250502586364746
    4. '.app' → logprob: -12.375502586364746
    5. '.ap' → logprob: -12.500502586364746
    6. '.push' → logprob: -14.750502586364746
    7. '.add' → logprob: -15.250502586364746
    8. '       ' → logprob: -15.250502586364746
    9. '.py' → logprob: -15.750502586364746
    10. ').' → logprob: -16.50050163269043

Token 525: '((' (ID: 2054)
  Prédit: '(cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cmd' → logprob: -0.1928720474243164
    2. '((' → logprob: -1.9428720474243164
    3. '(' → logprob: -3.4428720474243164
    4. ' (' → logprob: -9.067872047424316
    5. '(command' → logprob: -10.817872047424316
    6. '   ' → logprob: -12.567872047424316
    7. '(tuple' → logprob: -12.817872047424316
    8. '(cls' → logprob: -13.692872047424316
    9. '(evt' → logprob: -14.192872047424316
    10. '(commands' → logprob: -14.317872047424316

Token 526: 'cmd' (ID: 18804)
  Prédit: 'cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -1.5048530030981055e-06
    2. ' cmd' → logprob: -13.500001907348633
    3. '	cmd' → logprob: -20.125001907348633
    4. '(cmd' → logprob: -20.500001907348633
    5. 'cm' → logprob: -22.000001907348633
    6. '.cmd' → logprob: -22.500001907348633
    7. '   ' → logprob: -23.375001907348633
    8. 'command' → logprob: -23.625001907348633
    9. '_cmd' → logprob: -23.625001907348633
    10. 'ctrl' → logprob: -23.750001907348633

Token 527: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: 0.0
    2. '_' → logprob: -17.0
    3. '_ty' → logprob: -17.875
    4. 'type' → logprob: -18.875
    5. '_TYPE' → logprob: -19.375
    6. '__' → logprob: -19.875
    7. ')_' → logprob: -20.0
    8. '_typ' → logprob: -20.75
    9. 'ype' → logprob: -20.875
    10. ' _' → logprob: -21.125

Token 528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010153028415516019
    2. ',arg' → logprob: -7.0010151863098145
    3. ' ,' → logprob: -9.251015663146973
    4. ',
' → logprob: -11.876015663146973
    5. ',args' → logprob: -14.501015663146973
    6. '<|end|>' → logprob: -15.626015663146973
    7. '‌,' → logprob: -16.251014709472656
    8. ',

' → logprob: -17.376014709472656
    9. ',int' → logprob: -17.626014709472656
    10. ',\
' → logprob: -17.876014709472656

Token 529: ' arg' (ID: 2341)
  Prédit: ' arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arg' → logprob: -0.12693388760089874
    2. 'arg' → logprob: -2.1269338130950928
    3. ')arg' → logprob: -12.876934051513672
    4. '[arg' → logprob: -13.251934051513672
    5. ',arg' → logprob: -14.126934051513672
    6. '(arg' → logprob: -14.626934051513672
    7. '	arg' → logprob: -15.626934051513672
    8. 'argon' → logprob: -16.126934051513672
    9. 'argin' → logprob: -17.751934051513672
    10. 'Arg' → logprob: -18.501934051513672

Token 530: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10021831095218658
    2. ')' → logprob: -2.3502182960510254
    3. '))
' → logprob: -11.850218772888184
    4. ' ))' → logprob: -12.975218772888184
    5. ')
' → logprob: -14.225218772888184
    6. ' )' → logprob: -14.600218772888184
    7. '),' → logprob: -15.100218772888184
    8. ')))' → logprob: -15.725218772888184
    9. ')}' → logprob: -16.100217819213867
    10. '));' → logprob: -16.350217819213867

Token 531: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3746812045574188
    2. '<|end|>' → logprob: -1.8746812343597412
    3. 'class' → logprob: -1.9996812343597412
    4. '```' → logprob: -4.124680995941162
    5. '<|end|>' → logprob: -5.749680995941162
    6. '   ' → logprob: -5.874680995941162
    7. '#' → logprob: -7.124680995941162
    8. '
' → logprob: -8.62468147277832
    9. 'from' → logprob: -8.74968147277832
    10. ' def' → logprob: -9.37468147277832

Token 532: ' Output' (ID: 18315)
  Prédit: 'Gas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Gas' → logprob: -0.39922618865966797
    2. 'Simulator' → logprob: -1.524226188659668
    3. 'Simulation' → logprob: -2.899226188659668
    4. 'Command' → logprob: -3.524226188659668
    5. 'Runner' → logprob: -5.149226188659668
    6. 'Executor' → logprob: -5.399226188659668
    7. ' Gas' → logprob: -5.399226188659668
    8. ' Simulator' → logprob: -5.524226188659668
    9. 'Main' → logprob: -5.774226188659668
    10. 'Processor' → logprob: -6.149226188659668

Token 533: 'Handler' (ID: 4139)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.13869263231754303
    2. 'Handler' → logprob: -2.263692617416382
    3. 'Printer' → logprob: -4.138692855834961
    4. 'ter' → logprob: -5.138692855834961
    5. 'Generator' → logprob: -6.638692855834961
    6. 'Manager' → logprob: -7.013692855834961
    7. 'Builder' → logprob: -7.263692855834961
    8. 'Formatter' → logprob: -8.263692855834961
    9. 'Processor' → logprob: -8.638692855834961
    10. 'Collector' → logprob: -8.763692855834961

Token 534: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17976751923561096
    2. ':
' → logprob: -1.8047674894332886
    3. ':

' → logprob: -11.554767608642578
    4. '<|end|>' → logprob: -12.804767608642578
    5. ':def' → logprob: -13.304767608642578
    6. 'class' → logprob: -13.554767608642578
    7. ':
' → logprob: -13.804767608642578
    8. '():
' → logprob: -13.804767608642578
    9. '(object' → logprob: -13.804767608642578
    10. '<class' → logprob: -14.304767608642578

Token 535: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016760177677497268
    2. 'def' → logprob: -6.751676082611084
    3. 'class' → logprob: -8.126675605773926
    4. ' def' → logprob: -8.501675605773926
    5. ' class' → logprob: -12.376675605773926
    6. '	def' → logprob: -14.501675605773926
    7. '<|end|>' → logprob: -14.501675605773926
    8. '```' → logprob: -14.751675605773926
    9. '    
' → logprob: -15.626675605773926
    10. ' ' → logprob: -15.626675605773926

Token 536: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008689859881997108
    2. ' def' → logprob: -5.008689880371094
    3. '   ' → logprob: -6.258689880371094
    4. 'class' → logprob: -9.758689880371094
    5. '	def' → logprob: -14.133689880371094
    6. '```' → logprob: -15.508689880371094
    7. '@' → logprob: -16.633689880371094
    8. 'import' → logprob: -17.383689880371094
    9. ' ' → logprob: -18.258689880371094
    10. ' class' → logprob: -18.758689880371094

Token 537: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012999395839869976
    2. ' def' → logprob: -4.512999534606934
    3. 'staticmethod' → logprob: -7.012999534606934
    4. 'init' → logprob: -7.262999534606934
    5. 'classmethod' → logprob: -9.387999534606934
    6. '   ' → logprob: -9.387999534606934
    7. '__' → logprob: -9.762999534606934
    8. 'write' → logprob: -10.387999534606934
    9. ' __' → logprob: -10.637999534606934
    10. 'class' → logprob: -11.137999534606934

Token 538: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00022117885237094015
    2. 'def' → logprob: -9.000221252441406
    3. '__' → logprob: -9.625221252441406
    4. 'write' → logprob: -10.500221252441406
    5. '```' → logprob: -13.625221252441406
    6. ' __' → logprob: -14.250221252441406
    7. '   ' → logprob: -14.625221252441406
    8. 'print' → logprob: -15.000221252441406
    9. ' init' → logprob: -15.125221252441406
    10. 'iter' → logprob: -15.250221252441406

Token 539: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.25293415784835815
    2. '__(' → logprob: -1.502934217453003
    3. '__' → logprob: -7.252933979034424
    4. '(' → logprob: -9.002934455871582
    5. ' (' → logprob: -9.877934455871582
    6. '   ' → logprob: -10.002934455871582
    7. '__(
' → logprob: -10.627934455871582
    8. '()' → logprob: -11.252934455871582
    9. 'self' → logprob: -11.252934455871582
    10. '_(' → logprob: -11.377934455871582

Token 540: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005732863210141659
    2. ')' → logprob: -7.62557315826416
    3. '):
' → logprob: -9.87557315826416
    4. '   ' → logprob: -10.62557315826416
    5. ' self' → logprob: -12.50057315826416
    6. '
' → logprob: -13.12557315826416
    7. '):' → logprob: -13.25057315826416
    8. '       ' → logprob: -14.37557315826416
    9. '  ' → logprob: -14.50057315826416
    10. '):

' → logprob: -15.12557315826416

Token 541: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05529216304421425
    2. '):
' → logprob: -2.9302921295166016
    3. ')' → logprob: -8.555292129516602
    4. 'self' → logprob: -9.305292129516602
    5. ',' → logprob: -9.555292129516602
    6. '   ' → logprob: -10.305292129516602
    7. ':' → logprob: -11.805292129516602
    8. '):
' → logprob: -11.930292129516602
    9. '):

' → logprob: -13.055292129516602
    10. ' ):' → logprob: -13.930292129516602

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03520598262548447
    2. 'self' → logprob: -3.9102060794830322
    3. '   ' → logprob: -4.535205841064453
    4. '<|end|>' → logprob: -6.660205841064453
    5. 'def' → logprob: -6.910205841064453
    6. '
' → logprob: -7.160205841064453
    7. ')' → logprob: -7.785205841064453
    8. '):
' → logprob: -9.785205841064453
    9. ' self' → logprob: -9.910205841064453
    10. '[]' → logprob: -9.910205841064453

Token 543: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34556177258491516
    2. 'import' → logprob: -1.8455617427825928
    3. 'self' (adapté à ' self') → logprob: -2.0955617427825928
    4. 'pass' → logprob: -4.845561981201172
    5. ' self' → logprob: -6.470561981201172
    6. '   ' → logprob: -6.720561981201172
    7. ' pass' → logprob: -8.095561981201172
    8. 'def' → logprob: -8.970561981201172
    9. 'from' → logprob: -9.095561981201172
    10. ' import' → logprob: -10.345561981201172

Token 544: '.results' (ID: 53203)
  Prédit: '.outputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.outputs' → logprob: -0.09376334398984909
    2. '.results' → logprob: -2.8437633514404297
    3. '.output' → logprob: -3.9687633514404297
    4. '.lines' → logprob: -5.09376335144043
    5. 'outputs' → logprob: -5.96876335144043
    6. ' outputs' → logprob: -6.71876335144043
    7. '.responses' → logprob: -6.96876335144043
    8. '   ' → logprob: -7.84376335144043
    9. '.logs' → logprob: -7.84376335144043
    10. '.buffer' → logprob: -8.84376335144043

Token 545: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4311119616031647
    2. ' =' → logprob: -1.0561119318008423
    3. '=[]' → logprob: -6.056111812591553
    4. ':' → logprob: -10.806112289428711
    5. '<|end|>' → logprob: -10.806112289428711
    6. '=[]
' → logprob: -11.431112289428711
    7. '   ' → logprob: -12.556112289428711
    8. '[]' → logprob: -13.306112289428711
    9. ' ' → logprob: -13.556112289428711
    10. ')' → logprob: -13.681112289428711

Token 546: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -7.465036105713807e-06
    2. '[]
' → logprob: -12.000007629394531
    3. '[]

' → logprob: -13.875007629394531
    4. '[]}' → logprob: -16.00000762939453
    5. '[]"' → logprob: -16.62500762939453
    6. ' []' → logprob: -16.75000762939453
    7. '[' → logprob: -17.25000762939453
    8. '[]>' → logprob: -19.12500762939453
    9. '[])' → logprob: -19.12500762939453
    10. 'list' → logprob: -19.37500762939453

Token 547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1278548240661621
    2. 'def' → logprob: -2.127854824066162
    3. ' def' → logprob: -7.002854824066162
    4. '<|end|>' → logprob: -11.37785530090332
    5. '	def' → logprob: -13.12785530090332
    6. '
' → logprob: -13.50285530090332
    7. '  ' → logprob: -14.12785530090332
    8. '<|end|>' → logprob: -14.62785530090332
    9. ' ' → logprob: -14.87785530090332
    10. '    
' → logprob: -15.00285530090332

Token 548: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.265633419388905e-05
    2. '   ' → logprob: -10.000062942504883
    3. ' def' → logprob: -11.000062942504883
    4. '	def' → logprob: -14.625062942504883
    5. 'de' → logprob: -19.250062942504883
    6. '```' → logprob: -20.750062942504883
    7. '
' → logprob: -20.875062942504883
    8. 'class' → logprob: -21.125062942504883
    9. 'Def' → logprob: -21.625062942504883
    10. ' ' → logprob: -21.625062942504883

Token 549: ' record' (ID: 3704)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7008742690086365
    2. 'append' → logprob: -1.2008743286132812
    3. 'add' → logprob: -2.2008743286132812
    4. 'write' → logprob: -2.5758743286132812
    5. 'output' → logprob: -5.325874328613281
    6. 'store' → logprob: -5.825874328613281
    7. 'handle' → logprob: -5.950874328613281
    8. ' print' → logprob: -6.075874328613281
    9. ' append' → logprob: -6.950874328613281
    10. 'record' → logprob: -6.950874328613281

Token 550: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08958326280117035
    2. '(' → logprob: -2.464583158493042
    3. '(lambda' → logprob: -8.339583396911621
    4. '_result' → logprob: -8.964583396911621
    5. '<|end|>' → logprob: -9.964583396911621
    6. '_output' → logprob: -9.964583396911621
    7. '(result' → logprob: -10.964583396911621
    8. '(output' → logprob: -11.089583396911621
    9. '(
' → logprob: -11.089583396911621
    10. 'self' → logprob: -11.089583396911621

Token 551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10712604224681854
    2. ',result' → logprob: -2.357125997543335
    3. ' ,' → logprob: -6.107126235961914
    4. ',value' → logprob: -7.232126235961914
    5. ',response' → logprob: -7.232126235961914
    6. '(self' → logprob: -7.607126235961914
    7. ',(' → logprob: -7.607126235961914
    8. ',line' → logprob: -7.732126235961914
    9. '(result' → logprob: -7.982126235961914
    10. ',self' → logprob: -8.357126235961914

Token 552: ' number' (ID: 2086)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.7071391940116882
    2. 'result' → logprob: -1.082139253616333
    3. 'number' → logprob: -1.957139253616333
    4. 'output' → logprob: -4.082139015197754
    5. 'res' → logprob: -5.957139015197754
    6. 'x' → logprob: -6.207139015197754
    7. ' value' → logprob: -6.332139015197754
    8. 'car' → logprob: -7.207139015197754
    9. 'num' → logprob: -7.332139015197754
    10. ' result' → logprob: -7.457139015197754

Token 553: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010032298043370247
    2. ':int' → logprob: -5.2600321769714355
    3. '):' → logprob: -5.3850321769714355
    4. '):
' → logprob: -8.635032653808594
    5. ' :' → logprob: -11.385032653808594
    6. ':number' → logprob: -11.760032653808594
    7. ')' → logprob: -13.635032653808594
    8. 'int' → logprob: -13.885032653808594
    9. ':
' → logprob: -14.135032653808594
    10. ' ):' → logprob: -14.885032653808594

Token 554: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033832306507974863
    2. ')' → logprob: -8.625338554382324
    3. ' int' → logprob: -8.875338554382324
    4. '[int' → logprob: -11.125338554382324
    5. ':int' → logprob: -13.125338554382324
    6. '):
' → logprob: -14.500338554382324
    7. '(int' → logprob: -14.500338554382324
    8. '=int' → logprob: -14.625338554382324
    9. '<int' → logprob: -15.250338554382324
    10. '<|end|>' → logprob: -15.375338554382324

Token 555: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4755743145942688
    2. '):' → logprob: -0.9755743145942688
    3. ')' → logprob: -6.600574493408203
    4. '):
' → logprob: -8.975574493408203
    5. '):

' → logprob: -12.600574493408203
    6. ':' → logprob: -12.725574493408203
    7. '   ' → logprob: -13.475574493408203
    8. ')->' → logprob: -14.725574493408203
    9. ' ):
' → logprob: -14.850574493408203
    10. ':
' → logprob: -15.100574493408203

Token 556: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007669831975363195
    2. 'self' → logprob: -7.500766754150391
    3. ' self' → logprob: -8.50076675415039
    4. '   ' → logprob: -11.62576675415039
    5. '      ' → logprob: -15.12576675415039
    6. '```' → logprob: -15.37576675415039
    7. ',' → logprob: -15.50076675415039
    8. '	' → logprob: -15.62576675415039
    9. '	self' → logprob: -15.75076675415039
    10. '
' → logprob: -15.87576675415039

Token 557: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02078874595463276
    2. ' self' → logprob: -4.270788669586182
    3. '       ' → logprob: -5.020788669586182
    4. '	self' → logprob: -12.89578914642334
    5. '   ' → logprob: -13.52078914642334
    6. '           ' → logprob: -16.395788192749023
    7. '	' → logprob: -16.645788192749023
    8. '```' → logprob: -17.270788192749023
    9. '(self' → logprob: -18.520788192749023
    10. '               ' → logprob: -18.520788192749023

Token 558: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -8.458980300929397e-05
    2. 'results' → logprob: -9.75008487701416
    3. '.' → logprob: -10.75008487701416
    4. ' .' → logprob: -13.00008487701416
    5. '
' → logprob: -13.25008487701416
    6. '.result' → logprob: -15.25008487701416
    7. ' results' → logprob: -15.37508487701416
    8. '	results' → logprob: -15.75008487701416
    9. '.res' → logprob: -16.875083923339844
    10. '.
' → logprob: -17.000083923339844

Token 559: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00026217024424113333
    2. '.' → logprob: -8.250262260437012
    3. ' .' → logprob: -14.750262260437012
    4. '.extend' → logprob: -14.875262260437012
    5. 'append' → logprob: -16.375261306762695
    6. '.app' → logprob: -17.500261306762695
    7. '.push' → logprob: -18.250261306762695
    8. '.add' → logprob: -19.000261306762695
    9. '.ap' → logprob: -19.500261306762695
    10. '       ' → logprob: -19.500261306762695

Token 560: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.21519573032855988
    2. '(str' → logprob: -1.7151957750320435
    3. '(f' → logprob: -4.465195655822754
    4. 'number' → logprob: -6.215195655822754
    5. '(' → logprob: -9.215195655822754
    6. 'str' → logprob: -9.840195655822754
    7. 'f' → logprob: -10.465195655822754
    8. '((' → logprob: -13.715195655822754
    9. '(int' → logprob: -14.090195655822754
    10. '(
' → logprob: -14.340195655822754

Token 561: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.6550729419104755e-05
    2. ')
' → logprob: -10.625036239624023
    3. '   ' → logprob: -11.875036239624023
    4. '<|end|>' → logprob: -12.625036239624023
    5. ' )' → logprob: -14.750036239624023
    6. '       ' → logprob: -14.875036239624023
    7. ')

' → logprob: -15.000036239624023
    8. '
' → logprob: -15.375036239624023
    9. '`)' → logprob: -15.875036239624023
    10. ')return' → logprob: -16.250036239624023

Token 562: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012713064439594746
    2. '   ' → logprob: -4.3877129554748535
    3. ' def' → logprob: -8.637713432312012
    4. '	def' → logprob: -11.012713432312012
    5. '```' → logprob: -12.637713432312012
    6. ' ' → logprob: -13.012713432312012
    7. '<|end|>' → logprob: -13.387713432312012
    8. '
' → logprob: -13.887713432312012
    9. 'class' → logprob: -14.387713432312012
    10. '  ' → logprob: -14.887713432312012

Token 563: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0006634721648879349
    2. '   ' → logprob: -7.7506632804870605
    3. ' def' → logprob: -8.375663757324219
    4. '
' → logprob: -13.375663757324219
    5. '	def' → logprob: -14.750663757324219
    6. 'class' → logprob: -15.125663757324219
    7. ' ' → logprob: -16.37566375732422
    8. '```' → logprob: -17.12566375732422
    9. 'import' → logprob: -17.25066375732422
    10. '    
' → logprob: -19.12566375732422

Token 564: ' flush' (ID: 37790)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016550399363040924
    2. 'flush' → logprob: -4.516550540924072
    3. 'output' → logprob: -6.016550540924072
    4. ' print' → logprob: -6.016550540924072
    5. 'write' → logprob: -8.266550064086914
    6. ' output' → logprob: -8.766550064086914
    7. ' flush' → logprob: -9.016550064086914
    8. 'display' → logprob: -9.516550064086914
    9. 'dump' → logprob: -13.266550064086914
    10. 'show' → logprob: -14.516550064086914

Token 565: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003999092150479555
    2. '()' → logprob: -5.87899923324585
    3. '(' → logprob: -6.75399923324585
    4. '   ' → logprob: -12.128998756408691
    5. '():
' → logprob: -12.378998756408691
    6. '(
' → logprob: -12.378998756408691
    7. 'self' → logprob: -12.378998756408691
    8. '():' → logprob: -12.753998756408691
    9. ' (' → logprob: -14.003998756408691
    10. '       ' → logprob: -14.253998756408691

Token 566: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14505183696746826
    2. '):
' → logprob: -2.020051956176758
    3. 'self' → logprob: -7.020051956176758
    4. ')' → logprob: -7.270051956176758
    5. '   ' → logprob: -7.770051956176758
    6. '(self' → logprob: -8.895051956176758
    7. '       ' → logprob: -9.145051956176758
    8. ',' → logprob: -10.270051956176758
    9. '):
' → logprob: -10.895051956176758
    10. ' ):' → logprob: -11.020051956176758

Token 567: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4417368769645691
    2. '       ' → logprob: -1.1917369365692139
    3. 'for' → logprob: -2.941736936569214
    4. '   ' → logprob: -7.691736698150635
    5. 'import' → logprob: -8.941737174987793
    6. '	for' → logprob: -11.066737174987793
    7. ' import' → logprob: -12.316737174987793
    8. ' ' → logprob: -12.816737174987793
    9. '	' → logprob: -13.191737174987793
    10. '```' → logprob: -14.191737174987793

Token 568: ' for' (ID: 395)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.694500744342804
    2. 'for' (adapté à ' for') → logprob: -0.694500744342804
    3. ' for' → logprob: -6.694500923156738
    4. '       ' → logprob: -9.444500923156738
    5. ' import' → logprob: -10.319500923156738
    6. 'print' → logprob: -13.569500923156738
    7. '   ' → logprob: -14.069500923156738
    8. '	for' → logprob: -14.444500923156738
    9. '	import' → logprob: -15.444500923156738
    10. '```' → logprob: -16.569499969482422

Token 569: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.37833064794540405
    2. 'result' → logprob: -1.8783307075500488
    3. 'res' → logprob: -2.128330707550049
    4. 'num' → logprob: -3.378330707550049
    5. 'r' → logprob: -5.128330707550049
    6. ' number' → logprob: -5.878330707550049
    7. ' res' → logprob: -8.87833023071289
    8. ' result' → logprob: -9.25333023071289
    9. ' num' → logprob: -10.87833023071289
    10. ' r' → logprob: -11.25333023071289

Token 570: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00976470671594143
    2. 'in' → logprob: -4.634764671325684
    3. '       ' → logprob: -12.259764671325684
    4. '   ' → logprob: -13.259764671325684
    5. '	in' → logprob: -13.509764671325684
    6. ' ' → logprob: -15.384764671325684
    7. 'n' → logprob: -15.884764671325684
    8. ',' → logprob: -16.259765625
    9. '           ' → logprob: -16.759765625
    10. '  ' → logprob: -16.759765625

Token 571: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015920029545668513
    2. ' self' → logprob: -8.75015926361084
    3. '(self' → logprob: -15.00015926361084
    4. '
' → logprob: -15.25015926361084
    5. '   ' → logprob: -15.87515926361084
    6. '	self' → logprob: -17.375158309936523
    7. '[self' → logprob: -18.250158309936523
    8. '       ' → logprob: -19.750158309936523
    9. '=self' → logprob: -20.250158309936523
    10. '```' → logprob: -20.375158309936523

Token 572: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.004085758700966835
    2. 'results' → logprob: -5.504085540771484
    3. '	results' → logprob: -13.004085540771484
    4. ' results' → logprob: -13.379085540771484
    5. '   ' → logprob: -14.004085540771484
    6. '
' → logprob: -14.254085540771484
    7. '.' → logprob: -14.504085540771484
    8. '(results' → logprob: -14.754085540771484
    9. '.
' → logprob: -15.004085540771484
    10. ' .' → logprob: -15.379085540771484

Token 573: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4914769232273102
    2. ':' → logprob: -1.1164768934249878
    3. '       ' → logprob: -3.3664770126342773
    4. '           ' → logprob: -4.366477012634277
    5. 'print' → logprob: -4.991477012634277
    6. '<|end|>' → logprob: -6.741477012634277
    7. '.' → logprob: -6.991477012634277
    8. '   ' → logprob: -7.366477012634277
    9. '):
' → logprob: -7.491477012634277
    10. '
' → logprob: -7.616477012634277

Token 574: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2944297790527344
    2. '       ' → logprob: -1.5444297790527344
    3. '           ' → logprob: -3.2944297790527344
    4. ' print' → logprob: -5.794429779052734
    5. '
' → logprob: -6.794429779052734
    6. '```' → logprob: -8.544429779052734
    7. '	print' → logprob: -10.169429779052734
    8. '        
' → logprob: -10.669429779052734
    9. '   ' → logprob: -11.044429779052734
    10. '.print' → logprob: -11.294429779052734

Token 575: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.596781946020201e-05
    2. ' print' → logprob: -10.000045776367188
    3. '           ' → logprob: -14.750045776367188
    4. '```' → logprob: -17.250045776367188
    5. '	print' → logprob: -17.625045776367188
    6. '   ' → logprob: -19.125045776367188
    7. '       ' → logprob: -20.250045776367188
    8. 'import' → logprob: -20.750045776367188
    9. '#print' → logprob: -21.750045776367188
    10. '.print' → logprob: -21.875045776367188

Token 576: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.0001238004770129919
    2. 'number' → logprob: -9.000123977661133
    3. '(' → logprob: -15.375123977661133
    4. '(f' → logprob: -15.750123977661133
    5. '[number' → logprob: -20.000123977661133
    6. ' number' → logprob: -20.375123977661133
    7. '(numbers' → logprob: -20.500123977661133
    8. '(
' → logprob: -20.750123977661133
    9. '	number' → logprob: -21.125123977661133
    10. '(numero' → logprob: -22.000123977661133

Token 577: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -12.500004768371582
    3. '())' → logprob: -15.375004768371582
    4. '<|end|>' → logprob: -15.500004768371582
    5. ' )' → logprob: -15.875004768371582
    6. '()' → logprob: -16.125003814697266
    7. '       ' → logprob: -18.250003814697266
    8. ')#' → logprob: -18.250003814697266
    9. ')

' → logprob: -18.500003814697266
    10. '   ' → logprob: -18.750003814697266

Token 578: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14426250755786896
    2. 'if' → logprob: -2.3942625522613525
    3. 'class' → logprob: -3.1442625522613525
    4. '```' → logprob: -14.644262313842773
    5. ' if' → logprob: -15.394262313842773
    6. 'import' → logprob: -15.894262313842773
    7. ' def' → logprob: -16.769262313842773
    8. ' class' → logprob: -17.144262313842773
    9. '
' → logprob: -17.519262313842773
    10. '<|end|>' → logprob: -18.144262313842773

Token 579: ' Gas' (ID: 22154)
  Prédit: 'Simulator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Simulator' → logprob: -0.8170700073242188
    2. 'Simulation' → logprob: -1.0670700073242188
    3. 'Gas' → logprob: -2.1920700073242188
    4. 'Main' → logprob: -2.8170700073242188
    5. 'Solution' → logprob: -4.067070007324219
    6. 'Runner' → logprob: -4.567070007324219
    7. 'Controller' → logprob: -5.567070007324219
    8. 'Application' → logprob: -6.192070007324219
    9. 'Manager' → logprob: -6.192070007324219
    10. ' Simulator' → logprob: -6.317070007324219

Token 580: 'Station' (ID: 23191)
  Prédit: 'Station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Station' → logprob: -6.392202976712724e-06
    2. '_station' → logprob: -12.500006675720215
    3. 'Sta' → logprob: -14.375006675720215
    4. ' Station' → logprob: -14.750006675720215
    5. '   ' → logprob: -14.875006675720215
    6. 'station' → logprob: -15.375006675720215
    7. '
' → logprob: -15.500006675720215
    8. 'Gas' → logprob: -16.0000057220459
    9. 'oline' → logprob: -16.1250057220459
    10. '```' → logprob: -16.2500057220459

Token 581: 'App' (ID: 2563)
  Prédit: 'Manager'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Manager' → logprob: -0.4165728688240051
    2. 'Simulator' → logprob: -1.7915728092193604
    3. 'Simulation' → logprob: -3.0415728092193604
    4. ':' → logprob: -3.2915728092193604
    5. ':
' → logprob: -3.2915728092193604
    6. 'Runner' → logprob: -3.9165728092193604
    7. 'Handler' → logprob: -4.4165730476379395
    8. 'Controller' → logprob: -4.4165730476379395
    9. 'Processor' → logprob: -6.0415730476379395
    10. 'Service' → logprob: -6.2915730476379395

Token 582: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007183883571997285
    2. ':
' → logprob: -7.375718593597412
    3. ' :' → logprob: -9.875718116760254
    4. '():' → logprob: -11.125718116760254
    5. '<|end|>' → logprob: -11.625718116760254
    6. '(' → logprob: -12.125718116760254
    7. '(object' → logprob: -12.750718116760254
    8. '):' → logprob: -13.750718116760254
    9. ':def' → logprob: -13.750718116760254
    10. '：' → logprob: -14.000718116760254

Token 583: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001923352392623201
    2. ' def' → logprob: -9.375192642211914
    3. 'def' → logprob: -9.500192642211914
    4. ':' → logprob: -11.000192642211914
    5. 'class' → logprob: -11.750192642211914
    6. ':
' → logprob: -12.750192642211914
    7. '	def' → logprob: -13.625192642211914
    8. '<|end|>' → logprob: -14.000192642211914
    9. ' class' → logprob: -14.375192642211914
    10. '
' → logprob: -14.625192642211914

Token 584: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.15318144857883453
    2. ' def' → logprob: -2.153181552886963
    3. '   ' → logprob: -3.653181552886963
    4. ' ' → logprob: -13.653181076049805
    5. '	def' → logprob: -13.903181076049805
    6. '  ' → logprob: -15.403181076049805
    7. 'staticmethod' → logprob: -15.528181076049805
    8. '    ' → logprob: -15.528181076049805
    9. ':def' → logprob: -15.653181076049805
    10. 'class' → logprob: -15.778181076049805

Token 585: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16436105966567993
    2. ' def' → logprob: -2.289361000061035
    3. '__' → logprob: -3.539361000061035
    4. 'def' → logprob: -3.914361000061035
    5. 'init' → logprob: -7.164361000061035
    6. '_init' → logprob: -8.039361000061035
    7. '_' → logprob: -9.914361000061035
    8. ' init' → logprob: -10.539361000061035
    9. '___' → logprob: -11.414361000061035
    10. '_def' → logprob: -12.039361000061035

Token 586: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0011879685334861279
    2. '__' → logprob: -6.876187801361084
    3. 'def' → logprob: -9.376188278198242
    4. '```' → logprob: -10.626188278198242
    5. '_init' → logprob: -11.001188278198242
    6. ' init' → logprob: -11.126188278198242
    7. ' __' → logprob: -11.876188278198242
    8. '   ' → logprob: -12.876188278198242
    9. 'int' → logprob: -13.126188278198242
    10. '(init' → logprob: -13.626188278198242

Token 587: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00011808603449026123
    2. '__' → logprob: -9.125118255615234
    3. '__(
' → logprob: -12.250118255615234
    4. '(self' → logprob: -13.000118255615234
    5. '_(' → logprob: -13.125118255615234
    6. '__((' → logprob: -16.875118255615234
    7. '__('' → logprob: -17.250118255615234
    8. '__("' → logprob: -18.125118255615234
    9. '_' → logprob: -18.750118255615234
    10. '___' → logprob: -19.000118255615234

Token 588: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0564331205387134e-05
    2. ' self' → logprob: -12.37501049041748
    3. ')' → logprob: -12.87501049041748
    4. '   ' → logprob: -13.25001049041748
    5. '
' → logprob: -13.50001049041748
    6. '):
' → logprob: -15.37501049041748
    7. '       ' → logprob: -16.625011444091797
    8. '(self' → logprob: -16.875011444091797
    9. '  ' → logprob: -17.000011444091797
    10. ',' → logprob: -17.125011444091797

Token 589: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49681395292282104
    2. 'self' → logprob: -1.1218140125274658
    3. '(self' → logprob: -2.871814012527466
    4. '__(' → logprob: -5.121813774108887
    5. ' (' → logprob: -6.246813774108887
    6. '   ' → logprob: -7.746813774108887
    7. ' self' → logprob: -8.246813774108887
    8. ',self' → logprob: -8.746813774108887
    9. '(' → logprob: -8.996813774108887
    10. ')' → logprob: -9.496813774108887

Token 590: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.0126840758603066e-05
    2. '       ' → logprob: -10.375040054321289
    3. ' self' → logprob: -11.875040054321289
    4. '   ' → logprob: -13.250040054321289
    5. '
' → logprob: -15.750040054321289
    6. '(self' → logprob: -16.87504005432129
    7. '	self' → logprob: -18.50004005432129
    8. '```' → logprob: -18.50004005432129
    9. '        
' → logprob: -19.00004005432129
    10. '    ' → logprob: -19.25004005432129

Token 591: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.39361652731895447
    2. '       ' → logprob: -1.1436165571212769
    3. ' self' → logprob: -5.018616676330566
    4. '   ' → logprob: -9.268616676330566
    5. 'def' → logprob: -12.518616676330566
    6. '	self' → logprob: -12.893616676330566
    7. 'pass' → logprob: -12.893616676330566
    8. ' ' → logprob: -13.268616676330566
    9. 'import' → logprob: -13.768616676330566
    10. 'from' → logprob: -14.018616676330566

Token 592: '.parser' (ID: 50244)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0268845558166504
    2. '.input' → logprob: -1.2768845558166504
    3. 'parser' → logprob: -1.6518845558166504
    4. '.parser' → logprob: -2.0268845558166504
    5. '.g' → logprob: -4.77688455581665
    6. ' input' → logprob: -4.90188455581665
    7. ' parser' → logprob: -5.02688455581665
    8. '   ' → logprob: -5.52688455581665
    9. 'gas' → logprob: -5.90188455581665
    10. ' gas' → logprob: -6.52688455581665

Token 593: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1426972597837448
    2. '=' → logprob: -2.017697334289551
    3. '()' → logprob: -11.64269733428955
    4. '   ' → logprob: -12.51769733428955
    5. ' =
' → logprob: -13.39269733428955
    6. '=parse' → logprob: -13.51769733428955
    7. ' ' → logprob: -13.89269733428955
    8. 'Parser' → logprob: -14.14269733428955
    9. '       ' → logprob: -14.51769733428955
    10. ',' → logprob: -14.51769733428955

Token 594: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0007099286303855479
    2. ' Input' → logprob: -7.2507100105285645
    3. '	Input' → logprob: -20.500709533691406
    4. '_Input' → logprob: -22.500709533691406
    5. '_input' → logprob: -22.875709533691406
    6. 'input' → logprob: -23.250709533691406
    7. '<Input' → logprob: -23.750709533691406
    8. ' ' → logprob: -24.375709533691406
    9. ' input' → logprob: -24.500709533691406
    10. '\Input' → logprob: -24.500709533691406

Token 595: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'Handler' → logprob: -18.75
    3. '_parser' → logprob: -19.125
    4. '.Parser' → logprob: -19.25
    5. '(Parser' → logprob: -19.875
    6. 'parser' → logprob: -20.0
    7. ' Parser' → logprob: -20.375
    8. 'Parse' → logprob: -20.375
    9. 'Parsed' → logprob: -20.75
    10. 'Processor' → logprob: -21.375

Token 596: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07242412865161896
    2. '
' → logprob: -2.6974241733551025
    3. 'self' → logprob: -6.572423934936523
    4. '<|end|>' → logprob: -7.197423934936523
    5. '()
' → logprob: -9.322423934936523
    6. '   ' → logprob: -9.572423934936523
    7. '(self' → logprob: -9.822423934936523
    8. ' self' → logprob: -10.197423934936523
    9. '()' → logprob: -10.947423934936523
    10. ' ' → logprob: -10.947423934936523

Token 597: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035075340420007706
    2. '   ' → logprob: -6.253507614135742
    3. 'self' → logprob: -6.878507614135742
    4. ' self' → logprob: -8.003507614135742
    5. '
' → logprob: -9.128507614135742
    6. 'def' → logprob: -9.628507614135742
    7. '<|end|>' → logprob: -11.253507614135742
    8. '           ' → logprob: -12.378507614135742
    9. ' def' → logprob: -12.753507614135742
    10. '    ' → logprob: -12.753507614135742

Token 598: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0015539054293185472
    2. ' self' → logprob: -6.751554012298584
    3. 'def' → logprob: -8.376553535461426
    4. '       ' → logprob: -9.001553535461426
    5. '
' → logprob: -10.626553535461426
    6. '   ' → logprob: -13.251553535461426
    7. '        
' → logprob: -13.876553535461426
    8. 'from' → logprob: -14.501553535461426
    9. '	self' → logprob: -14.876553535461426
    10. ' 
' → logprob: -15.251553535461426

Token 599: '.output' (ID: 27521)
  Prédit: '.selector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.selector' → logprob: -0.7412173748016357
    2. '.handler' → logprob: -1.6162173748016357
    3. '.parser' → logprob: -2.3662173748016357
    4. 'def' → logprob: -2.7412173748016357
    5. '.output' → logprob: -2.9912173748016357
    6. 'selector' → logprob: -2.9912173748016357
    7. 'handler' → logprob: -4.241217613220215
    8. 'output' → logprob: -4.366217613220215
    9. 'parser' → logprob: -4.866217613220215
    10. '.' → logprob: -5.366217613220215

Token 600: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.4015900492668152
    2. '=' → logprob: -1.65159010887146
    3. ' =' → logprob: -2.15159010887146
    4. 'Handler' → logprob: -3.90159010887146
    5. 'handler' → logprob: -6.026589870452881
    6. '_Handler' → logprob: -11.026590347290039
    7. '   ' → logprob: -11.151590347290039
    8. '=_' → logprob: -11.276590347290039
    9. '_HANDLER' → logprob: -11.776590347290039
    10. 'andler' → logprob: -12.526590347290039

Token 601: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759503841400146
    2. ' =' → logprob: -0.8259503841400146
    3. ',' → logprob: -12.950950622558594
    4. ' ' → logprob: -13.325950622558594
    5. '=
' → logprob: -13.825950622558594
    6. ' =
' → logprob: -13.950950622558594
    7. '<|end|>' → logprob: -13.950950622558594
    8. '       ' → logprob: -13.950950622558594
    9. '=None' → logprob: -14.200950622558594
    10. ':' → logprob: -14.825950622558594

Token 602: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.00861456897109747
    2. ' Output' → logprob: -4.758614540100098
    3. '	Output' → logprob: -18.008615493774414
    4. '_Output' → logprob: -21.133615493774414
    5. ' output' → logprob: -21.633615493774414
    6. 'output' → logprob: -22.258615493774414
    7. '_output' → logprob: -22.508615493774414
    8. '(Output' → logprob: -22.508615493774414
    9. 'Input' → logprob: -22.758615493774414
    10. '
' → logprob: -23.008615493774414

Token 603: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -1.8624639324116288e-06
    2. '_Handler' → logprob: -14.125001907348633
    3. 'handler' → logprob: -14.500001907348633
    4. '_handler' → logprob: -15.625001907348633
    5. ' Handler' → logprob: -16.500001907348633
    6. '   ' → logprob: -16.875001907348633
    7. '_HANDLER' → logprob: -17.375001907348633
    8. 'Output' → logprob: -17.750001907348633
    9. 'andler' → logprob: -17.875001907348633
    10. 'Handle' → logprob: -18.000001907348633

Token 604: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6359444856643677
    2. '
' → logprob: -0.7609444856643677
    3. '   ' → logprob: -6.385944366455078
    4. '<|end|>' → logprob: -7.260944366455078
    5. 'def' → logprob: -7.385944366455078
    6. 'self' → logprob: -9.135944366455078
    7. ' self' → logprob: -10.010944366455078
    8. ' def' → logprob: -10.260944366455078
    9. '
' → logprob: -10.385944366455078
    10. '        
' → logprob: -11.010944366455078

Token 605: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6250906586647034
    2. '       ' → logprob: -1.5000905990600586
    3. 'def' → logprob: -1.7500905990600586
    4. 'self' → logprob: -3.5000905990600586
    5. ' def' → logprob: -3.7500905990600586
    6. ' self' → logprob: -4.750090599060059
    7. '
' → logprob: -5.250090599060059
    8. ' ' → logprob: -9.000090599060059
    9. '<|end|>' → logprob: -10.250090599060059
    10. '```' → logprob: -10.375090599060059

Token 606: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007149741053581238
    2. 'def' → logprob: -5.382149696350098
    3. ' self' → logprob: -6.632149696350098
    4. '       ' → logprob: -6.757149696350098
    5. '   ' → logprob: -10.882149696350098
    6. 'from' → logprob: -11.382149696350098
    7. '
' → logprob: -11.757149696350098
    8. ' def' → logprob: -12.757149696350098
    9. 'class' → logprob: -13.132149696350098
    10. '	self' → logprob: -14.257149696350098

Token 607: '.g' (ID: 1940)
  Prédit: '.selector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.selector' → logprob: -0.08925896137952805
    2. '.g' → logprob: -2.714258909225464
    3. 'selector' → logprob: -4.714259147644043
    4. ' .' → logprob: -5.464259147644043
    5. '.strategy' → logprob: -5.589259147644043
    6. 'gas' → logprob: -7.339259147644043
    7. '.station' → logprob: -7.839259147644043
    8. ' gas' → logprob: -7.964259147644043
    9. '.' → logprob: -9.089259147644043
    10. '.car' → logprob: -9.214259147644043

Token 608: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.0048341574147343636
    2. 'station' → logprob: -5.379834175109863
    3. 'gas' → logprob: -9.754834175109863
    4. 'ass' → logprob: -10.629834175109863
    5. 's' → logprob: -10.754834175109863
    6. '_station' → logprob: -11.254834175109863
    7. ' station' → logprob: -11.504834175109863
    8. '       ' → logprob: -11.629834175109863
    9. ' gas' → logprob: -11.629834175109863
    10. '           ' → logprob: -11.629834175109863

Token 609: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -0.18450045585632324
    2. 'Station' → logprob: -1.8095004558563232
    3. 'station' → logprob: -5.684500694274902
    4. '       ' → logprob: -7.059500694274902
    5. '   ' → logprob: -8.184500694274902
    6. '=' → logprob: -9.434500694274902
    7. '_st' → logprob: -10.434500694274902
    8. '_selector' → logprob: -11.184500694274902
    9. '
' → logprob: -11.309500694274902
    10. ' station' → logprob: -11.434500694274902

Token 610: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023002564907074
    2. '=' → logprob: -1.910230040550232
    3. ' ' → logprob: -12.785229682922363
    4. ' =
' → logprob: -13.660229682922363
    5. '_' → logprob: -14.285229682922363
    6. '=
' → logprob: -14.785229682922363
    7. '=None' → logprob: -15.285229682922363
    8. '_strategy' → logprob: -15.785229682922363
    9. '   ' → logprob: -16.16023063659668
    10. '<|end|>' → logprob: -16.66023063659668

Token 611: ' None' (ID: 4662)
  Prédit: 'Gas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Gas' → logprob: -0.5774453282356262
    2. ' Gas' → logprob: -0.8274453282356262
    3. 'None' → logprob: -6.7024455070495605
    4. ' None' → logprob: -8.202445030212402
    5. ' ' → logprob: -13.827445030212402
    6. ' gas' → logprob: -14.452445030212402
    7. 'G' → logprob: -15.327445030212402
    8. '   ' → logprob: -15.452445030212402
    9. '	G' → logprob: -15.952445030212402
    10. '       ' → logprob: -15.952445030212402

Token 612: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25528836250305176
    2. '   ' → logprob: -1.5052883625030518
    3. 'def' → logprob: -6.380288124084473
    4. ' def' → logprob: -7.255288124084473
    5. '

' → logprob: -7.880288124084473
    6. '    
' → logprob: -8.505288124084473
    7. '<|end|>' → logprob: -8.505288124084473
    8. '	def' → logprob: -9.380288124084473
    9. '<|end|>' → logprob: -10.880288124084473
    10. '
' → logprob: -10.880288124084473

Token 613: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5554903149604797
    2. '
' → logprob: -0.9304903149604797
    3. 'def' → logprob: -3.805490255355835
    4. ' def' → logprob: -4.680490493774414
    5. '<|end|>' → logprob: -9.055490493774414
    6. '	def' → logprob: -9.430490493774414
    7. '

' → logprob: -10.305490493774414
    8. ' ' → logprob: -10.555490493774414
    9. '```' → logprob: -10.680490493774414
    10. '    
' → logprob: -11.055490493774414

Token 614: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00016074994346126914
    2. ' def' → logprob: -8.750161170959473
    3. '   ' → logprob: -13.000161170959473
    4. '	def' → logprob: -18.250160217285156
    5. '
' → logprob: -19.875160217285156
    6. ' ' → logprob: -21.875160217285156
    7. 'Def' → logprob: -22.375160217285156
    8. 'class' → logprob: -22.875160217285156
    9. '```' → logprob: -23.500160217285156
    10. 'de' → logprob: -23.875160217285156

Token 615: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.31332263350486755
    2. ' run' → logprob: -1.31332266330719
    3. 'setup' → logprob: -10.688323020935059
    4. 'main' → logprob: -10.813323020935059
    5. ' main' → logprob: -12.063323020935059
    6. '_run' → logprob: -12.438323020935059
    7. 'initialize' → logprob: -12.688323020935059
    8. ' initialize' → logprob: -13.938323020935059
    9. 'process' → logprob: -14.063323020935059
    10. ' setup' → logprob: -14.063323020935059

Token 616: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013553560711443424
    2. '(' → logprob: -6.626355171203613
    3. '(
' → logprob: -10.751355171203613
    4. 'self' → logprob: -12.376355171203613
    5. '   ' → logprob: -13.376355171203613
    6. '       ' → logprob: -13.626355171203613
    7. '()' → logprob: -14.751355171203613
    8. ' (' → logprob: -15.626355171203613
    9. '(s' → logprob: -15.626355171203613
    10. '(sel' → logprob: -16.25135612487793

Token 617: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026101022958755493
    2. '):
' → logprob: -4.276101112365723
    3. ',' → logprob: -4.651101112365723
    4. 'self' → logprob: -6.151101112365723
    5. ')' → logprob: -9.401101112365723
    6. '():' → logprob: -10.651101112365723
    7. ' ):' → logprob: -10.651101112365723
    8. '(self' → logprob: -11.151101112365723
    9. '   ' → logprob: -11.276101112365723
    10. '):
' → logprob: -11.651101112365723

Token 618: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048778798431158066
    2. 'self' → logprob: -3.048778772354126
    3. ' self' → logprob: -8.798778533935547
    4. '   ' → logprob: -10.173778533935547
    5. '	self' → logprob: -14.423778533935547
    6. '           ' → logprob: -14.923778533935547
    7. '```' → logprob: -14.923778533935547
    8. '
' → logprob: -15.048778533935547
    9. '      ' → logprob: -15.798778533935547
    10. 'import' → logprob: -15.798778533935547

Token 619: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.033261336386203766
    2. ' self' → logprob: -3.533261299133301
    3. '       ' → logprob: -5.658261299133301
    4. '   ' → logprob: -11.4082612991333
    5. ' ' → logprob: -13.0332612991333
    6. '	self' → logprob: -13.2832612991333
    7. '
' → logprob: -14.7832612991333
    8. '(self' → logprob: -15.7832612991333
    9. 'class' → logprob: -16.283262252807617
    10. 'import' → logprob: -16.283262252807617

Token 620: '.parser' (ID: 50244)
  Prédit: '.parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -1.8789383830153383e-05
    2. 'parser' → logprob: -11.750019073486328
    3. '.' → logprob: -12.000019073486328
    4. ' .' → logprob: -13.250019073486328
    5. '	parser' → logprob: -13.250019073486328
    6. '   ' → logprob: -14.750019073486328
    7. '
' → logprob: -15.375019073486328
    8. '.parse' → logprob: -15.750019073486328
    9. '.par' → logprob: -16.250019073486328
    10. '.processor' → logprob: -16.250019073486328

Token 621: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -3.5120287066092715e-05
    2. '.' → logprob: -10.375035285949707
    3. ' .' → logprob: -12.500035285949707
    4. 'parse' → logprob: -16.87503433227539
    5. '.process' → logprob: -17.75003433227539
    6. '=parse' → logprob: -17.75003433227539
    7. '.Parse' → logprob: -18.87503433227539
    8. '.parser' → logprob: -19.12503433227539
    9. '.decode' → logprob: -19.25003433227539
    10. '.import' → logprob: -19.87503433227539

Token 622: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009259906597435474
    2. '
' → logprob: -5.3842597007751465
    3. 'self' → logprob: -5.3842597007751465
    4. ' self' → logprob: -10.384260177612305
    5. '   ' → logprob: -13.259260177612305
    6. '        
' → logprob: -13.259260177612305
    7. ',' → logprob: -13.759260177612305
    8. '```' → logprob: -14.009260177612305
    9. '
' → logprob: -14.259260177612305
    10. 'if' → logprob: -14.384260177612305

Token 623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011746286181733012
    2. 'self' → logprob: -7.376174449920654
    3. 'selector' → logprob: -8.251174926757812
    4. '
' → logprob: -9.001174926757812
    5. ' self' → logprob: -9.001174926757812
    6. ' selector' → logprob: -10.376174926757812
    7. '```' → logprob: -13.251174926757812
    8. '   ' → logprob: -13.751174926757812
    9. '    ' → logprob: -14.001174926757812
    10. '        
' → logprob: -14.001174926757812

Token 624: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.025769857689738274
    2. 'selector' → logprob: -3.7757699489593506
    3. '       ' → logprob: -6.6507697105407715
    4. ' self' → logprob: -6.7757697105407715
    5. 'strategy' → logprob: -9.65077018737793
    6. ' selector' → logprob: -10.77577018737793
    7. '```' → logprob: -14.65077018737793
    8. '        
' → logprob: -14.90077018737793
    9. ' strategy' → logprob: -15.52577018737793
    10. 'selection' → logprob: -16.02577018737793

Token 625: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.0006714478367939591
    2. '.' → logprob: -7.37567138671875
    3. ' .' → logprob: -10.50067138671875
    4. 'g' → logprob: -13.12567138671875
    5. '.selector' → logprob: -13.12567138671875
    6. 'gas' → logprob: -13.50067138671875
    7. '.n' → logprob: -13.50067138671875
    8. '=' → logprob: -13.62567138671875
    9. '```' → logprob: -14.12567138671875
    10. 'N' → logprob: -14.12567138671875

Token 626: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -1.9385402993066236e-05
    2. 'ass' → logprob: -11.750019073486328
    3. 'gas' → logprob: -12.750019073486328
    4. 'self' → logprob: -13.375019073486328
    5. '   ' → logprob: -14.125019073486328
    6. '       ' → logprob: -14.125019073486328
    7. 's' → logprob: -14.375019073486328
    8. '#' → logprob: -14.500019073486328
    9. 'enerator' → logprob: -14.625019073486328
    10. ' gas' → logprob: -14.875019073486328

Token 627: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -1.981667537620524e-06
    2. 'station' → logprob: -13.375001907348633
    3. '       ' → logprob: -15.250001907348633
    4. '           ' → logprob: -16.750001907348633
    5. 'Station' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.875001907348633
    7. ' station' → logprob: -18.000001907348633
    8. '_' → logprob: -18.875001907348633
    9. '_sta' → logprob: -19.750001907348633
    10. '
' → logprob: -19.750001907348633

Token 628: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474077433347702
    2. '=' → logprob: -0.9740774631500244
    3. '=
' → logprob: -15.099077224731445
    4. '=self' → logprob: -17.224077224731445
    5. ' =
' → logprob: -17.349077224731445
    6. ' ' → logprob: -17.349077224731445
    7. '＝' → logprob: -17.849077224731445
    8. '=create' → logprob: -17.974077224731445
    9. '=

' → logprob: -18.099077224731445
    10. '   ' → logprob: -18.849077224731445

Token 629: ' Gas' (ID: 22154)
  Prédit: 'Gas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Gas' → logprob: -0.005234594456851482
    2. ' Gas' → logprob: -5.255234718322754
    3. '   ' → logprob: -14.755234718322754
    4. '       ' → logprob: -14.880234718322754
    5. 'Gaz' → logprob: -17.755233764648438
    6. 'G' → logprob: -18.005233764648438
    7. '
' → logprob: -18.630233764648438
    8. ' ' → logprob: -18.755233764648438
    9. '           ' → logprob: -18.755233764648438
    10. '	G' → logprob: -19.005233764648438

Token 630: 'Station' (ID: 23191)
  Prédit: 'Station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Station' → logprob: -2.935296834039036e-06
    2. 'station' → logprob: -13.00000286102295
    3. '_station' → logprob: -14.87500286102295
    4. ' Station' → logprob: -15.87500286102295
    5. 'Gas' → logprob: -16.375003814697266
    6. 'Sta' → logprob: -16.875003814697266
    7. '
' → logprob: -18.000003814697266
    8. '   ' → logprob: -18.250003814697266
    9. '_' → logprob: -18.250003814697266
    10. '       ' → logprob: -18.750003814697266

Token 631: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08697245270013809
    2. '(' → logprob: -2.58697247505188
    3. '(len' → logprob: -5.086972236633301
    4. '(
' → logprob: -6.336972236633301
    5. '(l' → logprob: -9.5869722366333
    6. 'self' → logprob: -11.0869722366333
    7. '((' → logprob: -11.5869722366333
    8. '(N' → logprob: -12.8369722366333
    9. '(L' → logprob: -13.2119722366333
    10. '(n' → logprob: -13.2119722366333

Token 632: '.parser' (ID: 50244)
  Prédit: '.parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -0.0013389317318797112
    2. 'parser' → logprob: -6.626338958740234
    3. 'self' → logprob: -11.751338958740234
    4. '	parser' → logprob: -13.626338958740234
    5. 'N' → logprob: -13.751338958740234
    6. ' parser' → logprob: -14.251338958740234
    7. ' .' → logprob: -14.376338958740234
    8. '(parser' → logprob: -14.626338958740234
    9. '.N' → logprob: -14.751338958740234
    10. '.' → logprob: -15.126338958740234

Token 633: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -7.822646693966817e-06
    2. 'N' → logprob: -12.250007629394531
    3. '.' → logprob: -12.875007629394531
    4. ' .' → logprob: -15.250007629394531
    5. '
' → logprob: -16.12500762939453
    6. '.
' → logprob: -17.50000762939453
    7. ' N' → logprob: -17.75000762939453
    8. ').' → logprob: -17.87500762939453
    9. 'self' → logprob: -18.12500762939453
    10. '	N' → logprob: -18.50000762939453

Token 634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3544423381972592e-05
    2. 'Min' → logprob: -12.00001335144043
    3. ' ,' → logprob: -12.12501335144043
    4. ',
' → logprob: -14.62501335144043
    5. '   ' → logprob: -15.00001335144043
    6. '       ' → logprob: -15.50001335144043
    7. 'min' → logprob: -15.50001335144043
    8. ' Min' → logprob: -15.87501335144043
    9. '
' → logprob: -16.00001335144043
    10. ')' → logprob: -16.00001335144043

Token 635: ' Min' (ID: 4438)
  Prédit: 'Min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Min' → logprob: -3.531315314830863e-06
    2. ' Min' → logprob: -12.625003814697266
    3. 'selector' → logprob: -16.500003814697266
    4. '_Min' → logprob: -17.750003814697266
    5. '
' → logprob: -18.375003814697266
    6. 'Minimal' → logprob: -18.500003814697266
    7. 'M' → logprob: -19.000003814697266
    8. 'Mi' → logprob: -19.250003814697266
    9. '
' → logprob: -19.375003814697266
    10. '   ' → logprob: -19.375003814697266

Token 636: 'Length' (ID: 6563)
  Prédit: 'Length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Length' → logprob: -3.8889261304575484e-06
    2. 'Leng' → logprob: -12.875003814697266
    3. 'ength' → logprob: -14.250003814697266
    4. 'Len' → logprob: -14.875003814697266
    5. 'L' → logprob: -15.875003814697266
    6. 'Le' → logprob: -16.250003814697266
    7. 'Min' → logprob: -17.625003814697266
    8. 'length' → logprob: -18.125003814697266
    9. ' Length' → logprob: -18.250003814697266
    10. '_length' → logprob: -18.500003814697266

Token 637: 'Then' (ID: 19371)
  Prédit: 'Then'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Then' → logprob: -1.9361264946837764e-07
    2. 'Than' → logprob: -16.75
    3. '_then' → logprob: -16.875
    4. 'then' → logprob: -17.375
    5. 'The' → logprob: -18.25
    6. '```' → logprob: -18.75
    7. ' Then' → logprob: -18.875
    8. 'T' → logprob: -19.625
    9. '.Then' → logprob: -20.25
    10. '然后' → logprob: -20.5

Token 638: 'Min' (ID: 6712)
  Prédit: 'Min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Min' → logprob: -6.630610641877865e-06
    2. 'Then' → logprob: -12.875006675720215
    3. 'Max' → logprob: -13.125006675720215
    4. ' Min' → logprob: -13.875006675720215
    5. 'min' → logprob: -14.875006675720215
    6. '```' → logprob: -15.500006675720215
    7. 'M' → logprob: -15.625006675720215
    8. 'Mini' → logprob: -16.8750057220459
    9. 'Mi' → logprob: -17.0000057220459
    10. 'Id' → logprob: -17.2500057220459

Token 639: 'Id' (ID: 906)
  Prédit: 'Id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Id' → logprob: -7.107425062713446e-06
    2. 'I' → logprob: -13.000006675720215
    3. 'Min' → logprob: -13.000006675720215
    4. 'Then' → logprob: -13.625006675720215
    5. 'Length' → logprob: -14.250006675720215
    6. 'id' → logprob: -16.12500762939453
    7. '```' → logprob: -16.12500762939453
    8. 'then' → logprob: -16.37500762939453
    9. '
' → logprob: -16.75000762939453
    10. ' Id' → logprob: -17.00000762939453

Token 640: 'Selector' (ID: 8011)
  Prédit: 'Selector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selector' → logprob: -6.704273118884885e-07
    2. 'selector' → logprob: -14.500000953674316
    3. 'Select' → logprob: -17.0
    4. ' Selector' → logprob: -17.375
    5. 'Sele' → logprob: -17.625
    6. '_selector' → logprob: -19.5
    7. 'Sel' → logprob: -19.625
    8. ')' → logprob: -19.625
    9. '
' → logprob: -20.375
    10. '_SELECTOR' → logprob: -20.5

Token 641: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0008146316395141184
    2. '()' → logprob: -7.250814437866211
    3. '())
' → logprob: -9.375814437866211
    4. ')' → logprob: -11.000814437866211
    5. '()
' → logprob: -13.500814437866211
    6. ' ())' → logprob: -14.000814437866211
    7. '())

' → logprob: -14.250814437866211
    8. '())
' → logprob: -15.000814437866211
    9. '()))' → logprob: -17.25081443786621
    10. '(' → logprob: -17.50081443786621

Token 642: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7153944373130798
    2. 'for' → logprob: -0.7153944373130798
    3. ' for' → logprob: -3.8403944969177246
    4. '   ' → logprob: -8.340394020080566
    5. '	for' → logprob: -8.465394020080566
    6. '```' → logprob: -9.965394020080566
    7. '	' → logprob: -11.590394020080566
    8. '
' → logprob: -12.340394020080566
    9. '        
' → logprob: -13.340394020080566
    10. ' ' → logprob: -13.465394020080566

Token 643: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.015305552864447e-05
    2. ' for' → logprob: -9.750060081481934
    3. '       ' → logprob: -13.250060081481934
    4. '
' → logprob: -17.25006103515625
    5. '	for' → logprob: -17.75006103515625
    6. '```' → logprob: -18.62506103515625
    7. '        
' → logprob: -19.87506103515625
    8. '   ' → logprob: -21.87506103515625
    9. '``' → logprob: -21.87506103515625
    10. '_for' → logprob: -22.25006103515625

Token 644: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.000919200771022588
    2. ' cmd' → logprob: -7.000919342041016
    3. 'command' → logprob: -12.500919342041016
    4. '(cmd' → logprob: -12.875919342041016
    5. '   ' → logprob: -13.750919342041016
    6. '(' → logprob: -15.875919342041016
    7. '	cmd' → logprob: -16.375919342041016
    8. ' (' → logprob: -16.625919342041016
    9. '       ' → logprob: -17.000919342041016
    10. '_cmd' → logprob: -17.500919342041016

Token 645: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.0012878556735813618
    2. '_' → logprob: -6.751287937164307
    3. '_,' → logprob: -10.126287460327148
    4. ' in' → logprob: -10.251287460327148
    5. ',' → logprob: -10.876287460327148
    6. 'type' → logprob: -10.876287460327148
    7. '   ' → logprob: -13.751287460327148
    8. ',_' → logprob: -14.126287460327148
    9. '_ty' → logprob: -14.751287460327148
    10. 'Type' → logprob: -15.001287460327148

Token 646: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000627610192168504
    2. ',arg' → logprob: -7.375627517700195
    3. ',args' → logprob: -14.625627517700195
    4. ' ,' → logprob: -14.875627517700195
    5. ',self' → logprob: -16.000627517700195
    6. ',param' → logprob: -17.250627517700195
    7. ' in' → logprob: -17.375627517700195
    8. ',input' → logprob: -17.875627517700195
    9. ',
' → logprob: -17.875627517700195
    10. ',line' → logprob: -18.000627517700195

Token 647: ' arg' (ID: 2341)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.011048408225178719
    2. ' arg' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.136048316955566
    4. '	arg' → logprob: -15.511048316955566
    5. 'argin' → logprob: -17.261049270629883
    6. '       ' → logprob: -17.636049270629883
    7. 'cmd' → logprob: -17.761049270629883
    8. '    ' → logprob: -17.886049270629883
    9. ' ' → logprob: -17.886049270629883
    10. 'param' → logprob: -18.261049270629883

Token 648: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16023163497447968
    2. 'in' → logprob: -1.910231590270996
    3. '	in' → logprob: -12.535231590270996
    4. '   ' → logprob: -13.910231590270996
    5. ' ' → logprob: -14.160231590270996
    6. '    ' → logprob: -14.410231590270996
    7. '  ' → logprob: -14.785231590270996
    8. ',' → logprob: -14.910231590270996
    9. '_in' → logprob: -15.535231590270996
    10. 'i' → logprob: -15.535231590270996

Token 649: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931474208831787
    2. 'self' → logprob: -0.6931474208831787
    3. '(self' → logprob: -15.318147659301758
    4. '	self' → logprob: -17.193147659301758
    5. '
' → logprob: -18.193147659301758
    6. '[self' → logprob: -18.568147659301758
    7. '=self' → logprob: -19.443147659301758
    8. ' ' → logprob: -19.568147659301758
    9. 's' → logprob: -19.693147659301758
    10. '_self' → logprob: -19.818147659301758

Token 650: '.parser' (ID: 50244)
  Prédit: '.parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -0.15821826457977295
    2. ' in' → logprob: -2.5332183837890625
    3. 'parser' → logprob: -3.5332183837890625
    4. '.' → logprob: -4.1582183837890625
    5. '.commands' → logprob: -4.6582183837890625
    6. 'in' → logprob: -5.4082183837890625
    7. ' parser' → logprob: -5.5332183837890625
    8. '_parser' → logprob: -7.1582183837890625
    9. ' .' → logprob: -7.6582183837890625
    10. 'self' → logprob: -7.6582183837890625

Token 651: '.commands' (ID: 61085)
  Prédit: '.commands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.commands' → logprob: -0.0007927165133878589
    2. 'commands' → logprob: -7.500792503356934
    3. '.' → logprob: -9.750792503356934
    4. ':' → logprob: -9.875792503356934
    5. ':
' → logprob: -10.250792503356934
    6. '   ' → logprob: -10.625792503356934
    7. ' .' → logprob: -11.125792503356934
    8. '.
' → logprob: -11.500792503356934
    9. '(commands' → logprob: -12.125792503356934
    10. '       ' → logprob: -12.375792503356934

Token 652: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4746866226196289
    2. ':
' → logprob: -0.9746866226196289
    3. '       ' → logprob: -7.974686622619629
    4. '):
' → logprob: -8.849686622619629
    5. '():
' → logprob: -10.224686622619629
    6. '<|end|>' → logprob: -10.849686622619629
    7. ',' → logprob: -11.224686622619629
    8. ':

' → logprob: -11.474686622619629
    9. '<|end|>' → logprob: -11.599686622619629
    10. ':
' → logprob: -11.599686622619629

Token 653: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32010820508003235
    2. '           ' → logprob: -1.32010817527771
    3. '	       ' → logprob: -5.820108413696289
    4. ' if' → logprob: -7.070108413696289
    5. '```' → logprob: -7.070108413696289
    6. '<|end|>' → logprob: -7.320108413696289
    7. 'if' → logprob: -7.695108413696289
    8. '   ' → logprob: -8.195108413696289
    9. '        ' → logprob: -9.070108413696289
    10. '        
' → logprob: -9.070108413696289

Token 654: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6382309198379517
    2. ' if' → logprob: -1.1382309198379517
    3. '           ' → logprob: -1.8882309198379517
    4. '       ' → logprob: -10.88823127746582
    5. '	if' → logprob: -11.63823127746582
    6. '   ' → logprob: -11.63823127746582
    7. '               ' → logprob: -12.13823127746582
    8. '		' → logprob: -13.26323127746582
    9. '	       ' → logprob: -13.76323127746582
    10. '
' → logprob: -13.88823127746582

Token 655: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.12693282961845398
    2. 'cmd' → logprob: -2.1269328594207764
    3. '	cmd' → logprob: -12.501933097839355
    4. '(cmd' → logprob: -14.126933097839355
    5. '.cmd' → logprob: -15.501933097839355
    6. '_cmd' → logprob: -17.50193214416504
    7. '            ' → logprob: -18.37693214416504
    8. ' command' → logprob: -18.87693214416504
    9. '           ' → logprob: -20.12693214416504
    10. ' cmds' → logprob: -20.12693214416504

Token 656: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -13.125004768371582
    3. ' _' → logprob: -13.875004768371582
    4. '_typ' → logprob: -14.750004768371582
    5. 'type' → logprob: -14.875004768371582
    6. 'ype' → logprob: -15.000004768371582
    7. '_ty' → logprob: -15.250004768371582
    8. '           ' → logprob: -15.875004768371582
    9. '_TYPE' → logprob: -16.625003814697266
    10. '_code' → logprob: -17.375003814697266

Token 657: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06202907860279083
    2. '==' → logprob: -2.8120291233062744
    3. '=' → logprob: -10.187028884887695
    4. ' =' → logprob: -12.187028884887695
    5. ' ' → logprob: -12.437028884887695
    6. '	' → logprob: -12.937028884887695
    7. '1' → logprob: -12.937028884887695
    8. ' ' → logprob: -13.062028884887695
    9. ' ===' → logprob: -13.562028884887695
    10. '[' → logprob: -13.812028884887695

Token 658: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00977804884314537
    2. ' ' → logprob: -4.634778022766113
    3. '0' → logprob: -11.259778022766113
    4. '   ' → logprob: -11.884778022766113
    5. '2' → logprob: -13.759778022766113
    6. '       ' → logprob: -15.384778022766113
    7. '    ' → logprob: -15.509778022766113
    8. '  ' → logprob: -15.634778022766113
    9. '100' → logprob: -15.634778022766113
    10. '           ' → logprob: -15.822278022766113

Token 659: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020628897473216057
    2. '0' → logprob: -3.8956289291381836
    3. '2' → logprob: -10.145628929138184
    4. ' ' → logprob: -10.395628929138184
    5. '200' → logprob: -12.520628929138184
    6. '100' → logprob: -12.645628929138184
    7. '   ' → logprob: -13.270628929138184
    8. '```' → logprob: -13.270628929138184
    9. '3' → logprob: -13.645628929138184
    10. '`' → logprob: -14.395628929138184

Token 660: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47413748502731323
    2. ':
' → logprob: -0.9741374850273132
    3. ' :
' → logprob: -11.474137306213379
    4. '):
' → logprob: -11.724137306213379
    5. '               ' → logprob: -11.724137306213379
    6. '           ' → logprob: -11.724137306213379
    7. ' :' → logprob: -11.974137306213379
    8. ':
' → logprob: -11.974137306213379
    9. ',' → logprob: -12.349137306213379
    10. ':

' → logprob: -12.724137306213379

Token 661: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011425737291574478
    2. 'self' → logprob: -4.761425971984863
    3. ' self' → logprob: -6.136425971984863
    4. '           ' → logprob: -7.636425971984863
    5. '   ' → logprob: -9.886425971984863
    6. '       ' → logprob: -10.511425971984863
    7. '                
' → logprob: -10.511425971984863
    8. ' ' → logprob: -11.136425971984863
    9. '```' → logprob: -11.886425971984863
    10. ':' → logprob: -12.261425971984863

Token 662: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.22911646962165833
    2. ' self' → logprob: -1.729116439819336
    3. '               ' → logprob: -3.604116439819336
    4. '           ' → logprob: -9.354116439819336
    5. '   ' → logprob: -11.479116439819336
    6. '	self' → logprob: -12.229116439819336
    7. '                   ' → logprob: -12.479116439819336
    8. ' ' → logprob: -12.854116439819336
    9. ' ' → logprob: -13.854116439819336
    10. '(self' → logprob: -14.729116439819336

Token 663: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.005337993614375591
    2. '.car' → logprob: -5.255338191986084
    3. ' .' → logprob: -9.880337715148926
    4. '.' → logprob: -10.380337715148926
    5. '   ' → logprob: -11.755337715148926
    6. 'car' → logprob: -12.005337715148926
    7. '       ' → logprob: -12.880337715148926
    8. '           ' → logprob: -14.380337715148926
    9. '>.' → logprob: -14.755337715148926
    10. '.c' → logprob: -14.755337715148926

Token 664: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.00010008628305513412
    2. 'a' → logprob: -10.500100135803223
    3. '.as' → logprob: -10.875100135803223
    4. '           ' → logprob: -11.250100135803223
    5. '   ' → logprob: -11.625100135803223
    6. ' as' → logprob: -12.000100135803223
    7. 's' → logprob: -12.125100135803223
    8. '       ' → logprob: -12.250100135803223
    9. 'gas' → logprob: -12.750100135803223
    10. ' gas' → logprob: -13.875100135803223

Token 665: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -1.9361264946837764e-07
    2. 'station' → logprob: -16.25
    3. '_st' → logprob: -18.375
    4. '_sta' → logprob: -18.875
    5. '_' → logprob: -19.25
    6. ' station' → logprob: -20.125
    7. 'Station' → logprob: -20.25
    8. '_s' → logprob: -22.25
    9. '_g' → logprob: -22.375
    10. '_vehicle' → logprob: -22.625

Token 666: '.car' (ID: 49278)
  Prédit: '.car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -0.011056429706513882
    2. 'car' → logprob: -4.511056423187256
    3. '_car' → logprob: -12.261056900024414
    4. ' car' → logprob: -13.261056900024414
    5. '	car' → logprob: -13.511056900024414
    6. '.' → logprob: -15.011056900024414
    7. ' .' → logprob: -15.511056900024414
    8. '   ' → logprob: -16.136056900024414
    9. '.Car' → logprob: -17.261056900024414
    10. '(car' → logprob: -17.636056900024414

Token 667: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.0002036595979006961
    2. 'ent' → logprob: -8.500204086303711
    3. '_' → logprob: -16.25020408630371
    4. '	ent' → logprob: -17.00020408630371
    5. '_ENT' → logprob: -17.50020408630371
    6. '_entries' → logprob: -18.37520408630371
    7. '.ent' → logprob: -18.75020408630371
    8. '_in' → logprob: -18.87520408630371
    9. '(ent' → logprob: -19.00020408630371
    10. '_en' → logprob: -19.00020408630371

Token 668: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.0001801801408873871
    2. 'ters' → logprob: -8.6251802444458
    3. '```' → logprob: -16.000179290771484
    4. 'er' → logprob: -16.125179290771484
    5. 'ent' → logprob: -16.500179290771484
    6. '_' → logprob: -16.625179290771484
    7. 'eters' → logprob: -17.125179290771484
    8. '``' → logprob: -17.500179290771484
    9. '   ' → logprob: -17.875179290771484
    10. ' ers' → logprob: -18.125179290771484

Token 669: '(arg' (ID: 19030)
  Prédit: '(arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arg' → logprob: -1.0280383548888494e-06
    2. 'arg' → logprob: -14.000000953674316
    3. '(' → logprob: -15.625000953674316
    4. ' (' → logprob: -17.625001907348633
    5. '(
' → logprob: -17.750001907348633
    6. ' arg' → logprob: -18.000001907348633
    7. '[arg' → logprob: -18.875001907348633
    8. ',arg' → logprob: -19.000001907348633
    9. ')arg' → logprob: -19.125001907348633
    10. '(argument' → logprob: -19.250001907348633

Token 670: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06592047959566116
    2. ')' → logprob: -3.06592059135437
    3. '           ' → logprob: -4.065920352935791
    4. '               ' → logprob: -10.94092082977295
    5. ')
' → logprob: -11.31592082977295
    6. '       ' → logprob: -12.69092082977295
    7. ')

' → logprob: -13.06592082977295
    8. '
' → logprob: -14.69092082977295
    9. 'elif' → logprob: -15.06592082977295
    10. ' )
' → logprob: -15.56592082977295

Token 671: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017922651022672653
    2. 'elif' → logprob: -8.875179290771484
    3. '
' → logprob: -11.125179290771484
    4. ' elif' → logprob: -12.125179290771484
    5. '<|end|>' → logprob: -12.250179290771484
    6. '```' → logprob: -12.375179290771484
    7. '            
' → logprob: -12.625179290771484
    8. '		' → logprob: -13.250179290771484
    9. '       ' → logprob: -13.750179290771484
    10. '          ' → logprob: -14.000179290771484

Token 672: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4762916564941406
    2. 'elif' (adapté à ' elif') → logprob: -0.9762916564941406
    3. ' elif' → logprob: -6.226291656494141
    4. '       ' → logprob: -8.72629165649414
    5. 'else' → logprob: -9.97629165649414
    6. '	elif' → logprob: -10.85129165649414
    7. '		' → logprob: -13.22629165649414
    8. '	       ' → logprob: -13.60129165649414
    9. '   ' → logprob: -13.72629165649414
    10. '```' → logprob: -13.85129165649414

Token 673: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.25193750858306885
    2. ' cmd' → logprob: -1.5019375085830688
    3. '(cmd' → logprob: -12.626937866210938
    4. '	cmd' → logprob: -12.626937866210938
    5. '.cmd' → logprob: -14.251937866210938
    6. '2' → logprob: -15.376937866210938
    7. 'command' → logprob: -15.751937866210938
    8. '           ' → logprob: -16.001937866210938
    9. ' ' → logprob: -16.001937866210938
    10. 'c' → logprob: -16.626937866210938

Token 674: '_type' (ID: 3804)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4130200743675232
    2. ' ==' → logprob: -1.413020133972168
    3. '_type' → logprob: -2.413020133972168
    4. 'type' → logprob: -6.038020133972168
    5. '_' → logprob: -6.913020133972168
    6. 'ype' → logprob: -7.038020133972168
    7. 'Type' → logprob: -7.913020133972168
    8. '=' → logprob: -8.038020133972168
    9. '<|end|>' → logprob: -10.038020133972168
    10. '_code' → logprob: -10.038020133972168

Token 675: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02975141443312168
    2. '==' → logprob: -3.5297513008117676
    3. ' ' → logprob: -14.779751777648926
    4. '=' → logprob: -15.404751777648926
    5. ' =' → logprob: -16.40475082397461
    6. ']==' → logprob: -16.65475082397461
    7. ')==' → logprob: -17.27975082397461
    8. '===' → logprob: -17.27975082397461
    9. ' ' → logprob: -17.27975082397461
    10. ' ===' → logprob: -17.52975082397461

Token 676: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028084407094866037
    2. ' ' → logprob: -5.877808570861816
    3. '3' → logprob: -13.752808570861816
    4. '   ' → logprob: -13.877808570861816
    5. '  ' → logprob: -14.627808570861816
    6. '0' → logprob: -15.002808570861816
    7. '    ' → logprob: -15.752808570861816
    8. '20' → logprob: -16.0653076171875
    9. '```' → logprob: -16.0653076171875
    10. '22' → logprob: -16.5028076171875

Token 677: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002334568416699767
    2. ' ' → logprob: -8.37523365020752
    3. '3' → logprob: -13.25023365020752
    4. '0' → logprob: -14.37523365020752
    5. '   ' → logprob: -15.50023365020752
    6. '```' → logprob: -16.750232696533203
    7. '20' → logprob: -16.812732696533203
    8. '200' → logprob: -17.062732696533203
    9. '２' → logprob: -17.062732696533203
    10. '  ' → logprob: -17.437732696533203

Token 678: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20147687196731567
    2. ':
' → logprob: -1.701476812362671
    3. ' and' → logprob: -11.07647705078125
    4. '       ' → logprob: -11.20147705078125
    5. 'and' → logprob: -12.07647705078125
    6. ':
' → logprob: -12.32647705078125
    7. '           ' → logprob: -12.32647705078125
    8. ' :' → logprob: -12.70147705078125
    9. ':

' → logprob: -12.82647705078125
    10. ':self' → logprob: -13.32647705078125

Token 679: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0052877152338624
    2. 'self' → logprob: -5.8802876472473145
    3. ' self' → logprob: -6.7552876472473145
    4. 'number' → logprob: -7.0052876472473145
    5. ' number' → logprob: -8.255288124084473
    6. '           ' → logprob: -10.005288124084473
    7. 'result' → logprob: -11.005288124084473
    8. 'num' → logprob: -11.380288124084473
    9. ' car' → logprob: -11.505288124084473
    10. '              ' → logprob: -11.630288124084473

Token 680: ' finished' (ID: 11684)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.708921492099762
    2. 'car' → logprob: -1.0839214324951172
    3. 'self' → logprob: -3.333921432495117
    4. ' car' → logprob: -3.333921432495117
    5. ' number' → logprob: -3.333921432495117
    6. 'num' → logprob: -3.958921432495117
    7. '               ' → logprob: -4.583921432495117
    8. 'finished' (adapté à ' finished') → logprob: -4.583921432495117
    9. ' self' → logprob: -4.958921432495117
    10. 'result' → logprob: -5.083921432495117

Token 681: '_car' (ID: 62991)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.023115726187825203
    2. '_car' → logprob: -3.898115634918213
    3. '_num' → logprob: -6.023115634918213
    4. ' =' → logprob: -9.148116111755371
    5. '_lane' → logprob: -11.273116111755371
    6. '=' → logprob: -11.398116111755371
    7. 'number' → logprob: -11.648116111755371
    8. '_no' → logprob: -13.273116111755371
    9. 'car' → logprob: -13.648116111755371
    10. '   ' → logprob: -14.148116111755371

Token 682: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.001130571006797254
    2. ' =' → logprob: -7.0011305809021
    3. '_num' → logprob: -8.626130104064941
    4. '=' → logprob: -10.376130104064941
    5. 'number' → logprob: -11.751130104064941
    6. 'Number' → logprob: -15.626130104064941
    7. 'num' → logprob: -15.751130104064941
    8. ' number' → logprob: -16.001131057739258
    9. '_no' → logprob: -16.001131057739258
    10. '   ' → logprob: -17.751131057739258

Token 683: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750604182481766
    2. '=' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.77975082397461
    4. '=self' → logprob: -17.02975082397461
    5. '	' → logprob: -18.15475082397461
    6. ' =
' → logprob: -18.40475082397461
    7. ' ' → logprob: -18.90475082397461
    8. '   ' → logprob: -19.65475082397461
    9. '_number' → logprob: -19.90475082397461
    10. ')' → logprob: -20.15475082397461

Token 684: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011745095252990723
    2. ' self' → logprob: -6.751174449920654
    3. '               ' → logprob: -12.376174926757812
    4. '(self' → logprob: -16.626174926757812
    5. '	self' → logprob: -18.001174926757812
    6. '=self' → logprob: -18.126174926757812
    7. '                   ' → logprob: -18.251174926757812
    8. '           ' → logprob: -19.376174926757812
    9. '[self' → logprob: -19.501174926757812
    10. 'Self' → logprob: -20.376174926757812

Token 685: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -4.961759259458631e-06
    2. '.' → logprob: -13.125004768371582
    3. '_g' → logprob: -13.750004768371582
    4. 'g' → logprob: -14.125004768371582
    5. '.output' → logprob: -15.000004768371582
    6. 'gas' → logprob: -15.000004768371582
    7. ' .' → logprob: -16.3750057220459
    8. 'output' → logprob: -16.6250057220459
    9. '	g' → logprob: -16.8750057220459
    10. '   ' → logprob: -17.1250057220459

Token 686: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.00014406509581021965
    2. 's' → logprob: -10.375144004821777
    3. 'gas' → logprob: -10.750144004821777
    4. 'station' → logprob: -11.000144004821777
    5. '_station' → logprob: -11.250144004821777
    6. 'ass' → logprob: -11.875144004821777
    7. '           ' → logprob: -12.125144004821777
    8. 'a' → logprob: -12.125144004821777
    9. ' as' → logprob: -12.375144004821777
    10. 'self' → logprob: -12.375144004821777

Token 687: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -1.3902033970225602e-05
    2. 'station' → logprob: -11.875014305114746
    3. '_st' → logprob: -12.875014305114746
    4. 'Station' → logprob: -13.625014305114746
    5. '_sta' → logprob: -14.000014305114746
    6. 'g' → logprob: -14.125014305114746
    7. '_g' → logprob: -14.625014305114746
    8. '.station' → logprob: -15.000014305114746
    9. 's' → logprob: -15.625014305114746
    10. '_' → logprob: -16.25001335144043

Token 688: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -1.7835754988482222e-05
    2. 'fuel' → logprob: -11.000018119812012
    3. '.' → logprob: -13.875018119812012
    4. ' .' → logprob: -16.125017166137695
    5. '
' → logprob: -18.625017166137695
    6. 'Fuel' → logprob: -18.750017166137695
    7. '.ful' → logprob: -19.000017166137695
    8. 'f' → logprob: -19.375017166137695
    9. '.ref' → logprob: -19.375017166137695
    10. '   ' → logprob: -19.375017166137695

Token 689: 'ueling' (ID: 136891)
  Prédit: 'ueling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueling' → logprob: -0.018513944000005722
    2. 'eling' → logprob: -4.018514156341553
    3. 'uel' → logprob: -8.393513679504395
    4. 'el' → logprob: -9.393513679504395
    5. 'e' → logprob: -10.393513679504395
    6. 'u' → logprob: -11.518513679504395
    7. 'elding' → logprob: -13.018513679504395
    8. 'elting' → logprob: -13.143513679504395
    9. 'fuel' → logprob: -13.393513679504395
    10. 'elf' → logprob: -13.518513679504395

Token 690: '_finished' (ID: 143523)
  Prédit: '_finished'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_finished' → logprob: -4.56102097814437e-05
    2. 'finished' → logprob: -10.000045776367188
    3. 'Finished' → logprob: -17.375045776367188
    4. '_finish' → logprob: -17.500045776367188
    5. ' finished' → logprob: -18.250045776367188
    6. '.finished' → logprob: -18.875045776367188
    7. 'inished' → logprob: -19.250045776367188
    8. '_f' → logprob: -19.750045776367188
    9. '_fin' → logprob: -20.000045776367188
    10. '_started' → logprob: -20.250045776367188

Token 691: '(arg' (ID: 19030)
  Prédit: '(arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arg' → logprob: 0.0
    2. '[arg' → logprob: -20.125
    3. 'arg' → logprob: -20.625
    4. '(ar' → logprob: -21.0
    5. ')arg' → logprob: -21.125
    6. '(' → logprob: -21.25
    7. ',arg' → logprob: -21.625
    8. '(param' → logprob: -22.0
    9. '(argument' → logprob: -22.0
    10. '(args' → logprob: -22.5

Token 692: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47450122237205505
    2. ')
' → logprob: -0.9745012521743774
    3. ')
' → logprob: -7.849501132965088
    4. '               ' → logprob: -10.974501609802246
    5. '           ' → logprob: -11.724501609802246
    6. ')arg' → logprob: -12.474501609802246
    7. ' )
' → logprob: -13.724501609802246
    8. ')`
' → logprob: -13.849501609802246
    9. '()
' → logprob: -14.724501609802246
    10. '())
' → logprob: -14.849501609802246

Token 693: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002820736262947321
    2. 'self' → logprob: -8.625282287597656
    3. '           ' → logprob: -9.375282287597656
    4. '                   ' → logprob: -12.375282287597656
    5. '                
' → logprob: -12.375282287597656
    6. ' self' → logprob: -13.000282287597656
    7. '              ' → logprob: -13.375282287597656
    8. '
' → logprob: -13.375282287597656
    9. '       ' → logprob: -14.125282287597656
    10. '<|end|>' → logprob: -14.375282287597656

Token 694: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003022867953404784
    2. '               ' → logprob: -6.50302267074585
    3. ' self' → logprob: -6.50302267074585
    4. '                   ' → logprob: -10.878023147583008
    5. '           ' → logprob: -14.253023147583008
    6. '	self' → logprob: -15.003023147583008
    7. '   ' → logprob: -15.128023147583008
    8. '                       ' → logprob: -15.878023147583008
    9. '(self' → logprob: -16.628023147583008
    10. '```' → logprob: -16.753023147583008

Token 695: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -5.2524021157296374e-05
    2. 'output' → logprob: -9.875052452087402
    3. '.' → logprob: -14.375052452087402
    4. ' .' → logprob: -15.500052452087402
    5. '_output' → logprob: -16.12505340576172
    6. '	output' → logprob: -16.62505340576172
    7. '$output' → logprob: -18.12505340576172
    8. '
' → logprob: -18.50005340576172
    9. ' output' → logprob: -18.62505340576172
    10. '   ' → logprob: -18.62505340576172

Token 696: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -3.128163257315464e-07
    2. 'handler' → logprob: -15.75
    3. '_handle' → logprob: -16.25
    4. 'Handler' → logprob: -17.125
    5. '_HANDLER' → logprob: -17.125
    6. '_Handler' → logprob: -17.25
    7. '_writer' → logprob: -17.375
    8. 'andler' → logprob: -18.5
    9. '_controller' → logprob: -19.25
    10. '_manager' → logprob: -19.75

Token 697: '.record' (ID: 47010)
  Prédit: '.record'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.record' → logprob: -3.4121114822482923e-06
    2. '.' → logprob: -12.625003814697266
    3. ' .' → logprob: -16.750003814697266
    4. '.Record' → logprob: -17.500003814697266
    5. 'record' → logprob: -17.750003814697266
    6. '.report' → logprob: -18.750003814697266
    7. '.records' → logprob: -19.125003814697266
    8. '.rec' → logprob: -19.750003814697266
    9. '.write' → logprob: -19.875003814697266
    10. '	record' → logprob: -19.875003814697266

Token 698: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -2.856408536899835e-05
    2. '(' → logprob: -10.750028610229492
    3. '(fin' → logprob: -12.375028610229492
    4. 'finished' → logprob: -13.000028610229492
    5. '(
' → logprob: -15.125028610229492
    6. ' finished' → logprob: -15.250028610229492
    7. ' (' → logprob: -16.875028610229492
    8. '(final' → logprob: -17.250028610229492
    9. 'Finished' → logprob: -18.000028610229492
    10. '	f' → logprob: -18.750028610229492

Token 699: 'inished' (ID: 67941)
  Prédit: 'inished'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inished' → logprob: -2.1008713702030946e-06
    2. 'ished' → logprob: -13.250001907348633
    3. 'inish' → logprob: -16.000001907348633
    4. 'inis' → logprob: -16.375001907348633
    5. 'in' → logprob: -17.750001907348633
    6. 'finished' → logprob: -17.875001907348633
    7. 'n' → logprob: -19.000001907348633
    8. 'ins' → logprob: -19.500001907348633
    9. 'insi' → logprob: -20.375001907348633
    10. 'Finished' → logprob: -21.375001907348633

Token 700: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -1.0280383548888494e-06
    2. 'car' → logprob: -14.000000953674316
    3. '_' → logprob: -17.125001907348633
    4. '
' → logprob: -17.625001907348633
    5. ' car' → logprob: -18.125001907348633
    6. 'Car' → logprob: -18.375001907348633
    7. '	car' → logprob: -18.625001907348633
    8. '_c' → logprob: -18.750001907348633
    9. '(car' → logprob: -19.125001907348633
    10. '`' → logprob: -19.250001907348633

Token 701: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0004155377100687474
    2. 'number' → logprob: -8.375415802001953
    3. 'umber' → logprob: -8.750415802001953
    4. '_car' → logprob: -10.750415802001953
    5. ')' → logprob: -13.375415802001953
    6. '_' → logprob: -14.125415802001953
    7. '_NUMBER' → logprob: -14.500415802001953
    8. ' _' → logprob: -14.500415802001953
    9. '_num' → logprob: -15.000415802001953
    10. '_numbers' → logprob: -15.000415802001953

Token 702: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04732384905219078
    2. '()' → logprob: -3.4223239421844482
    3. ')
' → logprob: -5.547323703765869
    4. '<|end|>' → logprob: -5.547323703765869
    5. '()
' → logprob: -6.047323703765869
    6. '())' → logprob: -6.297323703765869
    7. '       ' → logprob: -6.922323703765869
    8. '
' → logprob: -8.297324180603027
    9. '               ' → logprob: -9.047324180603027
    10. '```' → logprob: -10.547324180603027

Token 703: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001547479536384344
    2. ' self' → logprob: -7.126547336578369
    3. 'self' → logprob: -7.376547336578369
    4. '   ' → logprob: -9.376547813415527
    5. '
' → logprob: -10.751547813415527
    6. '	' → logprob: -11.876547813415527
    7. ' ' → logprob: -13.501547813415527
    8. '           ' → logprob: -14.501547813415527
    9. '```' → logprob: -14.501547813415527
    10. '      ' → logprob: -14.626547813415527

Token 704: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04298434779047966
    2. '       ' → logprob: -3.2929842472076416
    3. '
' → logprob: -5.542984485626221
    4. ' self' → logprob: -6.917984485626221
    5. '   ' → logprob: -10.917984008789062
    6. '	self' → logprob: -12.542984008789062
    7. '        
' → logprob: -13.542984008789062
    8. '           ' → logprob: -14.417984008789062
    9. '  ' → logprob: -14.667984008789062
    10. ' ' → logprob: -14.792984008789062

Token 705: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -1.2948405128554441e-05
    2. '.' → logprob: -11.50001335144043
    3. 'output' → logprob: -13.12501335144043
    4. ' .' → logprob: -14.50001335144043
    5. '
' → logprob: -15.87501335144043
    6. '.out' → logprob: -16.87501335144043
    7. '.outputs' → logprob: -17.50001335144043
    8. '	output' → logprob: -18.37501335144043
    9. '.stdout' → logprob: -19.00001335144043
    10. '.
' → logprob: -19.00001335144043

Token 706: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -1.9361264946837764e-07
    2. '_handle' → logprob: -16.75
    3. 'handler' → logprob: -17.0
    4. '_hand' → logprob: -19.125
    5. 'Handler' → logprob: -20.5
    6. '_' → logprob: -20.625
    7. '_HANDLER' → logprob: -21.75
    8. '_Handler' → logprob: -21.875
    9. '_h' → logprob: -22.0
    10. '_writer' → logprob: -22.375

Token 707: '.flush' (ID: 42867)
  Prédit: '.flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flush' → logprob: -1.981667537620524e-06
    2. '.' → logprob: -13.250001907348633
    3. ' .' → logprob: -16.625001907348633
    4. '.fl' → logprob: -18.125001907348633
    5. 'flush' → logprob: -19.500001907348633
    6. '.flip' → logprob: -20.000001907348633
    7. '.Flush' → logprob: -20.625001907348633
    8. '.flash' → logprob: -20.875001907348633
    9. '.
' → logprob: -21.250001907348633
    10. ' flush' → logprob: -21.750001907348633

Token 708: '()

' (ID: 5874)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06182761490345001
    2. 'app' → logprob: -3.1868276596069336
    3. '
' → logprob: -4.311827659606934
    4. '<|end|>' → logprob: -5.936827659606934
    5. '```' → logprob: -6.436827659606934
    6. 'Gas' → logprob: -8.311827659606934
    7. 'a' → logprob: -8.561827659606934
    8. ' if' → logprob: -9.061827659606934
    9. '  
' → logprob: -9.186827659606934
    10. '

' → logprob: -9.936827659606934

Token 709: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.547789674485102e-05
    2. 'app' → logprob: -10.500035285949707
    3. ' if' → logprob: -12.750035285949707
    4. 'def' → logprob: -12.875035285949707
    5. 'Gas' → logprob: -13.500035285949707
    6. '```' → logprob: -14.000035285949707
    7. '
' → logprob: -15.750035285949707
    8. 'If' → logprob: -17.500036239624023
    9. 'gas' → logprob: -17.500036239624023
    10. '<|end|>' → logprob: -18.000036239624023

Token 710: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07890664041042328
    2. '__' → logprob: -2.578906536102295
    3. '_' → logprob: -11.203907012939453
    4. 'name' → logprob: -13.203907012939453
    5. '_name' → logprob: -13.953907012939453
    6. '___' → logprob: -15.078907012939453
    7. ' ' → logprob: -16.078907012939453
    8. 'Name' → logprob: -16.328907012939453
    9. ' ' → logprob: -16.703907012939453
    10. ' _' → logprob: -17.453907012939453

Token 711: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.026210537180304527
    2. ' __' → logprob: -3.7762105464935303
    3. ' ==' → logprob: -6.526210308074951
    4. '.__' → logprob: -7.026210308074951
    5. 'name' → logprob: -8.65121078491211
    6. '__.__' → logprob: -9.02621078491211
    7. 'if' → logprob: -9.15121078491211
    8. '==' → logprob: -9.52621078491211
    9. '__.' → logprob: -10.02621078491211
    10. ' if' → logprob: -11.40121078491211

Token 712: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.008129963040119e-06
    2. '__.__' → logprob: -12.500003814697266
    3. '____' → logprob: -16.875003814697266
    4. '==' → logprob: -17.125003814697266
    5. '__.' → logprob: -17.250003814697266
    6. '__('' → logprob: -17.500003814697266
    7. ' __' → logprob: -17.875003814697266
    8. '__
' → logprob: -18.000003814697266
    9. '_' → logprob: -18.125003814697266
    10. '___' → logprob: -18.750003814697266

Token 713: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008759809657931328
    2. '==' → logprob: -5.00875997543335
    3. ' ==' → logprob: -6.38375997543335
    4. '=="' → logprob: -8.008759498596191
    5. '_' → logprob: -11.758759498596191
    6. '__.__' → logprob: -12.383759498596191
    7. '=='' → logprob: -12.633759498596191
    8. '___' → logprob: -13.008759498596191
    9. '=' → logprob: -14.133759498596191
    10. '==
' → logprob: -14.758759498596191

Token 714: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0032644576858729124
    2. ''' → logprob: -5.753264427185059
    3. ' "__' → logprob: -9.378264427185059
    4. '__' → logprob: -13.128264427185059
    5. ' '__' → logprob: -15.503264427185059
    6. ' "' → logprob: -17.253265380859375
    7. '"name' → logprob: -17.253265380859375
    8. '"user' → logprob: -17.253265380859375
    9. ''"' → logprob: -18.503265380859375
    10. '("__' → logprob: -18.628265380859375

Token 715: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0006314247148111463
    2. '__' → logprob: -7.375631332397461
    3. '"' → logprob: -13.000631332397461
    4. 'name' → logprob: -13.250631332397461
    5. 'built' → logprob: -14.875631332397461
    6. ' main' → logprob: -15.500631332397461
    7. 'python' → logprob: -16.62563133239746
    8. 'app' → logprob: -16.62563133239746
    9. '_main' → logprob: -16.75063133239746
    10. '主' → logprob: -17.37563133239746

Token 716: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.018261505290865898
    2. '__' → logprob: -4.018261432647705
    3. '__':
' → logprob: -9.143261909484863
    4. '__:' → logprob: -12.518261909484863
    5. '__.' → logprob: -14.268261909484863
    6. '__["' → logprob: -16.143260955810547
    7. '__
' → logprob: -16.893260955810547
    8. '__.__' → logprob: -17.268260955810547
    9. '__("' → logprob: -17.268260955810547
    10. '_' → logprob: -18.143260955810547

Token 717: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2555651068687439
    2. 'Gas' → logprob: -1.7555651664733887
    3. ' Gas' → logprob: -3.0055651664733887
    4. '	App' → logprob: -7.380565166473389
    5. '	G' → logprob: -7.630565166473389
    6. '	app' → logprob: -8.00556468963623
    7. 'app' → logprob: -8.13056468963623
    8. '    
' → logprob: -8.50556468963623
    9. '```' → logprob: -8.50556468963623
    10. '   ' → logprob: -8.63056468963623

Token 718: ' Gas' (ID: 22154)
  Prédit: 'Gas'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Gas' (adapté à ' Gas') → logprob: -0.06321419030427933
    2. 'app' → logprob: -2.8132143020629883
    3. ' Gas' → logprob: -7.063214302062988
    4. ' app' → logprob: -8.313214302062988
    5. 'Car' → logprob: -9.563214302062988
    6. 'import' → logprob: -9.688214302062988
    7. '   ' → logprob: -12.063214302062988
    8. 'App' → logprob: -12.688214302062988
    9. 'gas' → logprob: -13.438214302062988
    10. ' gas' → logprob: -14.313214302062988

Token 719: 'Station' (ID: 23191)
  Prédit: 'Station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Station' → logprob: -3.292907877039397e-06
    2. '_station' → logprob: -12.87500286102295
    3. ' Station' → logprob: -14.37500286102295
    4. 'station' → logprob: -16.750003814697266
    5. 'Sta' → logprob: -18.125003814697266
    6. 'Vehicle' → logprob: -19.125003814697266
    7. '
' → logprob: -19.750003814697266
    8. 'Car' → logprob: -19.750003814697266
    9. 'Gas' → logprob: -19.875003814697266
    10. 'Server' → logprob: -20.000003814697266

Token 720: 'App' (ID: 2563)
  Prédit: 'App'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'App' → logprob: -1.9361264946837764e-07
    2. 'Ap' → logprob: -16.75
    3. 'app' → logprob: -17.5
    4. 'A' → logprob: -17.75
    5. '	App' → logprob: -17.75
    6. '_app' → logprob: -18.75
    7. ' App' → logprob: -18.875
    8. '_App' → logprob: -19.125
    9. '<App' → logprob: -19.5
    10. '.App' → logprob: -20.5

Token 721: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.029820965602993965
    2. '()' → logprob: -3.5298209190368652
    3. '().__' → logprob: -9.654821395874023
    4. ' ()' → logprob: -13.529821395874023
    5. '().'' → logprob: -14.154821395874023
    6. '(' → logprob: -14.154821395874023
    7. ' ().' → logprob: -14.279821395874023
    8. '()(' → logprob: -14.904821395874023
    9. '.run' → logprob: -15.029821395874023
    10. '();' → logprob: -15.029821395874023

Token 722: 'run' (ID: 12935)
  Prédit: 'run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: 0.0
    2. ' run' → logprob: -19.0
    3. '	run' → logprob: -22.75
    4. '.run' → logprob: -23.25
    5. '(run' → logprob: -24.5
    6. '_run' → logprob: -24.625
    7. '-run' → logprob: -25.625
    8. 'Run' → logprob: -26.0
    9. 'running' → logprob: -28.625
    10. '/run' → logprob: -29.625

Token 723: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 721
Tokens correctement prédits (1ère position, stricte): 387
Tokens correctement prédits (1ère position, avec adaptation): 427
Tokens correctement prédits (top 10): 654
Précision stricte (1ère position): 53.68%
Précision adaptée (1ère position): 59.22%
Précision (top 10): 90.71%
================================================================================
