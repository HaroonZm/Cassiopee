================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:00:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    import sys
    # For n=1, max carbons is 1 (only one carbon)
    # For n >= 2, the formula is 2 * n (longest chain plus twice the branches on each internal carbon)
    # This corresponds to the largest compound with the longest chain n
    
    for line in sys.stdin:
        line=line.strip()
        if not line:
            continue
        n = int(line)
        if n == 1:
            print(1)
        else:
            print(2 * n)  # largest compound has 2*n carbons for longest chain length n


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.35815900564193726
    2. '(' → logprob: -1.858159065246582
    3. '   ' → logprob: -3.108159065246582
    4. '\n' → logprob: -3.108159065246582
    5. ''' → logprob: -4.608159065246582
    6. ' 
' → logprob: -4.733159065246582
    7. ' ' → logprob: -4.733159065246582
    8. '    
' → logprob: -4.983159065246582
    9. '```' → logprob: -5.483159065246582
    10. ' return' → logprob: -6.358159065246582

Token 4: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8913612365722656
    2. '   ' → logprob: -1.0163612365722656
    3. 'pass' → logprob: -1.7663612365722656
    4. 'return' → logprob: -3.2663612365722656
    5. '```' → logprob: -5.141361236572266
    6. '#' → logprob: -6.016361236572266
    7. ' pass' → logprob: -6.016361236572266
    8. '    ' → logprob: -6.266361236572266
    9. '\' → logprob: -6.516361236572266
    10. '    
' → logprob: -7.016361236572266

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.05252670496702194
    2. ' sys' → logprob: -3.1775267124176025
    3. ' math' → logprob: -5.427526473999023
    4. ' ' → logprob: -6.177526473999023
    5. ' numpy' → logprob: -6.302526473999023
    6. ' json' → logprob: -7.427526473999023
    7. ' random' → logprob: -8.552526473999023
    8. ' pandas' → logprob: -9.677526473999023
    9. ' tensorflow' → logprob: -9.802526473999023
    10. ' csv' → logprob: -10.052526473999023

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.7115226984024048
    2. 'newline' → logprob: -1.7115226984024048
    3. '\n' → logprob: -1.9615226984024048
    4. '   ' → logprob: -2.0865225791931152
    5. '.readline' → logprob: -2.5865225791931152
    6. 'import' → logprob: -2.8365225791931152
    7. '<|end|>' → logprob: -2.8365225791931152
    8. '\' → logprob: -3.3365225791931152
    9. 'print' → logprob: -3.4615225791931152
    10. '<|end|>' → logprob: -4.086522579193115

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5024410486221313
    2. '.' → logprob: -1.6274410486221313
    3. '    ' → logprob: -3.377440929412842
    4. '.readline' → logprob: -3.752440929412842
    5. 'newline' → logprob: -3.752440929412842
    6. '.stdout' → logprob: -4.377440929412842
    7. ' ' → logprob: -4.377440929412842
    8. 'import' → logprob: -4.502440929412842
    9. '    
' → logprob: -4.502440929412842
    10. '```' → logprob: -4.752440929412842

Token 8: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6833507418632507
    2. '.' → logprob: -1.1833508014678955
    3. '[' → logprob: -3.0583508014678955
    4. ' ' → logprob: -3.1833508014678955
    5. '    ' → logprob: -3.5583508014678955
    6. 'print' → logprob: -3.8083508014678955
    7. 'import' → logprob: -4.933350563049316
    8. '.readline' → logprob: -5.058350563049316
    9. '.argv' → logprob: -5.558350563049316
    10. '  ' → logprob: -5.558350563049316

Token 9: ' For' (ID: 2214)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.055337730795145035
    2. ' argv' → logprob: -3.68033766746521
    3. 'argv' → logprob: -5.305337905883789
    4. '    ' → logprob: -5.555337905883789
    5. '  ' → logprob: -5.680337905883789
    6. ' ' → logprob: -6.180337905883789
    7. '   ' → logprob: -6.305337905883789
    8. ' input' → logprob: -6.430337905883789
    9. ' import' → logprob: -6.680337905883789
    10. ' readline' → logprob: -6.805337905883789

Token 10: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5363170504570007
    2. ' ' → logprob: -1.0363171100616455
    3. ' arg' → logprob: -3.5363171100616455
    4. ' i' → logprob: -3.9113171100616455
    5. ' token' → logprob: -6.036316871643066
    6. '  ' → logprob: -6.411316871643066
    7. ' argv' → logprob: -6.786316871643066
    8. ' sys' → logprob: -7.161316871643066
    9. '_' → logprob: -7.286316871643066
    10. ' _' → logprob: -7.411316871643066

Token 11: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7358721494674683
    2. ' =' → logprob: -0.8608721494674683
    3. ' in' → logprob: -3.610872268676758
    4. 'umbers' → logprob: -3.985872268676758
    5. 'umber' → logprob: -4.110872268676758
    6. ',' → logprob: -4.735872268676758
    7. ' ' → logprob: -4.985872268676758
    8. '   ' → logprob: -5.360872268676758
    9. '=int' → logprob: -5.610872268676758
    10. 'ext' → logprob: -6.235872268676758

Token 12: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06020515412092209
    2. ' i' → logprob: -3.6852052211761475
    3. '1' → logprob: -5.310204982757568
    4. 'i' → logprob: -5.560204982757568
    5. '  ' → logprob: -5.560204982757568
    6. ' s' → logprob: -6.185204982757568
    7. '   ' → logprob: -6.435204982757568
    8. '_' → logprob: -6.560204982757568
    9. '0' → logprob: -6.560204982757568
    10. 's' → logprob: -6.685204982757568

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9966023564338684
    2. '   ' → logprob: -2.1216022968292236
    3. '    ' → logprob: -2.3716022968292236
    4. '     
' → logprob: -2.7466022968292236
    5. ' ' → logprob: -2.9966022968292236
    6. ':' → logprob: -2.9966022968292236
    7. '\' → logprob: -3.1216022968292236
    8. '    
' → logprob: -3.4966022968292236
    9. '\n' → logprob: -3.7466022968292236
    10. '```' → logprob: -3.9966022968292236

Token 14: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06097559630870819
    2. '    ' → logprob: -3.5609755516052246
    3. '   ' → logprob: -4.935975551605225
    4. ' n' → logprob: -4.935975551605225
    5. 'n' → logprob: -5.810975551605225
    6. ',' → logprob: -6.935975551605225
    7. ' a' → logprob: -6.935975551605225
    8. ' return' → logprob: -7.185975551605225
    9. ' ,' → logprob: -7.310975551605225
    10. ' space' → logprob: -7.560975551605225

Token 15: ' carb' (ID: 41933)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12546364963054657
    2. ' =' → logprob: -2.3754637241363525
    3. ' _' → logprob: -4.625463485717773
    4. '(' → logprob: -5.375463485717773
    5. '=' → logprob: -5.750463485717773
    6. '_n' → logprob: -6.875463485717773
    7. '_space' → logprob: -6.875463485717773
    8. '_length' → logprob: -7.000463485717773
    9. 'imum' → logprob: -7.125463485717773
    10. ' ' → logprob: -7.250463485717773

Token 16: 'ons' (ID: 1808)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30219727754592896
    2. 'o' → logprob: -2.427197217941284
    3. '=' → logprob: -2.802197217941284
    4. ' =' → logprob: -3.302197217941284
    5. 's' → logprob: -3.677197217941284
    6. ',' → logprob: -5.052197456359863
    7. ')' → logprob: -5.177197456359863
    8. ' _' → logprob: -5.302197456359863
    9. '_max' → logprob: -5.427197456359863
    10. 'e' → logprob: -5.552197456359863

Token 17: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.739724338054657
    2. '=' → logprob: -1.3647243976593018
    3. '_' → logprob: -1.6147243976593018
    4. ',' → logprob: -3.4897243976593018
    5. ':' → logprob: -4.239724159240723
    6. ' ' → logprob: -5.239724159240723
    7. 's' → logprob: -5.614724159240723
    8. '[' → logprob: -5.864724159240723
    9. '   ' → logprob: -6.489724159240723
    10. '_max' → logprob: -6.989724159240723

Token 18: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.057885587215423584
    2. '1' → logprob: -3.8078856468200684
    3. '3' → logprob: -4.432885646820068
    4. '2' → logprob: -5.057885646820068
    5. '4' → logprob: -5.307885646820068
    6. '6' → logprob: -6.182885646820068
    7. '5' → logprob: -6.182885646820068
    8. '7' → logprob: -6.557885646820068
    9. '0' → logprob: -6.557885646820068
    10. '12' → logprob: -6.807885646820068

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43387237191200256
    2. ' ' → logprob: -2.0588724613189697
    3. '4' → logprob: -2.6838724613189697
    4. '3' → logprob: -2.8088724613189697
    5. '0' → logprob: -3.5588724613189697
    6. '2' → logprob: -3.6838724613189697
    7. '5' → logprob: -4.433872222900391
    8. '7' → logprob: -4.808872222900391
    9. '9' → logprob: -4.933872222900391
    10. '6' → logprob: -5.308872222900391

Token 20: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.017059326171875
    2. '   ' → logprob: -1.767059326171875
    3. ',' → logprob: -2.017059326171875
    4. '    
' → logprob: -2.767059326171875
    5. '0' → logprob: -3.017059326171875
    6. 'n' → logprob: -3.142059326171875
    7. ' 
' → logprob: -3.267059326171875
    8. '\n' → logprob: -3.892059326171875
    9. '.' → logprob: -4.517059326171875
    10. '2' → logprob: -4.517059326171875

Token 21: 'only' (ID: 7393)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10252803564071655
    2. ' )' → logprob: -3.3525280952453613
    3. ',' → logprob: -4.602528095245361
    4. '')' → logprob: -4.852528095245361
    5. '),' → logprob: -5.102528095245361
    6. '0' → logprob: -5.227528095245361
    7. ' and' → logprob: -5.602528095245361
    8. ')
' → logprob: -5.852528095245361
    9. ' ' → logprob: -6.227528095245361
    10. '2' → logprob: -6.540028095245361

Token 22: ' one' (ID: 1001)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.7358000874519348
    2. ' methane' → logprob: -2.36080002784729
    3. ' one' → logprob: -2.86080002784729
    4. ')' → logprob: -2.98580002784729
    5. ' meth' → logprob: -3.23580002784729
    6. ' carbon' → logprob: -3.48580002784729
    7. ' ' → logprob: -3.48580002784729
    8. ' a' → logprob: -3.67330002784729
    9. ' )
' → logprob: -3.67330002784729
    10. ' the' → logprob: -3.92330002784729

Token 23: ' carbon' (ID: 15883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5579062700271606
    2. ' )' → logprob: -0.9329062700271606
    3. ' carbon' → logprob: -4.182906150817871
    4. ' atom' → logprob: -5.932906150817871
    5. ' ' → logprob: -6.057906150817871
    6. 'carbon' → logprob: -6.370406150817871
    7. '-' → logprob: -6.932906150817871
    8. ' space' → logprob: -7.057906150817871
    9. ',' → logprob: -7.120406150817871
    10. ' -' → logprob: -7.932906150817871

Token 24: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002353168558329344
    2. ' )' → logprob: -6.627353191375732
    3. ',' → logprob: -7.502353191375732
    4. '),' → logprob: -8.627352714538574
    5. ')
' → logprob: -9.377352714538574
    6. ').' → logprob: -10.252352714538574
    7. ')n' → logprob: -10.752352714538574
    8. '#' → logprob: -11.002352714538574
    9. 's' → logprob: -11.252352714538574
    10. ';' → logprob: -11.377352714538574

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3251553475856781
    2. '
' → logprob: -2.450155258178711
    3. 'n' → logprob: -2.575155258178711
    4. '    
' → logprob: -3.075155258178711
    5. ',' → logprob: -4.200155258178711
    6. '```' → logprob: -4.700155258178711
    7. '<|end|>' → logprob: -4.950155258178711
    8. '\n' → logprob: -5.075155258178711
    9. ')' → logprob: -5.200155258178711
    10. '    ' → logprob: -5.325155258178711

Token 26: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7370217442512512
    2. '
' → logprob: -1.4870216846466064
    3. 'n' → logprob: -2.4870216846466064
    4. '\n' → logprob: -2.7370216846466064
    5. ',' → logprob: -3.3620216846466064
    6. '    
' → logprob: -3.3620216846466064
    7. '<|end|>' → logprob: -4.4870219230651855
    8. ' 
' → logprob: -4.7370219230651855
    9. ')' → logprob: -4.7370219230651855
    10. '_' → logprob: -5.1120219230651855

Token 27: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4826362431049347
    2. 'n' → logprob: -1.3576362133026123
    3. ' n' → logprob: -2.6076362133026123
    4. '    ' → logprob: -3.7326362133026123
    5. ' ' → logprob: -4.482636451721191
    6. ' 
' → logprob: -5.732636451721191
    7. '    
' → logprob: -6.357636451721191
    8. ' max' → logprob: -6.482636451721191
    9. '_' → logprob: -6.732636451721191
    10. '     
' → logprob: -6.857636451721191

Token 28: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.006196941714733839
    2. 'n' → logprob: -5.131196975708008
    3. ' ' → logprob: -9.006196975708008
    4. ' the' → logprob: -11.131196975708008
    5. ' ' → logprob: -11.131196975708008
    6. ' a' → logprob: -11.568696975708008
    7. ' larger' → logprob: -11.693696975708008
    8. '```' → logprob: -11.756196975708008
    9. '   ' → logprob: -12.006196975708008
    10. '    ' → logprob: -12.381196975708008

Token 29: ' >=' (ID: 5064)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934000849723816
    2. ' =' → logprob: -0.6934000849723816
    3. ' >' → logprob: -8.943400382995605
    4. ' ==' → logprob: -9.818400382995605
    5. ' >=' → logprob: -10.693400382995605
    6. '>' → logprob: -11.318400382995605
    7. ' ' → logprob: -11.318400382995605
    8. '==' → logprob: -12.068400382995605
    9. ' <=' → logprob: -12.693400382995605
    10. '>=' → logprob: -13.193400382995605

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5766234993934631
    2. '2' → logprob: -0.8266234993934631
    3. '1' → logprob: -7.701623439788818
    4. '3' → logprob: -8.701623916625977
    5. '4' → logprob: -10.951623916625977
    6. '0' → logprob: -10.951623916625977
    7. '6' → logprob: -11.826623916625977
    8. '  ' → logprob: -12.201623916625977
    9. '5' → logprob: -12.326623916625977
    10. '7' → logprob: -12.764123916625977

Token 31: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014353068545460701
    2. ' ' → logprob: -4.514353275299072
    3. '1' → logprob: -5.764353275299072
    4. '3' → logprob: -9.889352798461914
    5. '0' → logprob: -10.951852798461914
    6. '

' → logprob: -11.451852798461914
    7. '4' → logprob: -11.639352798461914
    8. '  ' → logprob: -11.764352798461914
    9. '```' → logprob: -11.826852798461914
    10. '=' → logprob: -11.826852798461914

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4392707943916321
    2. ':' → logprob: -1.1892707347869873
    3. ' ,' → logprob: -3.5642707347869873
    4. ' :' → logprob: -4.064270973205566
    5. '   ' → logprob: -5.314270973205566
    6. '    ' → logprob: -8.564270973205566
    7. '       ' → logprob: -9.689270973205566
    8. '```' → logprob: -9.939270973205566
    9. ' ' → logprob: -10.189270973205566
    10. ',:' → logprob: -10.314270973205566

Token 33: ' the' (ID: 290)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.16848450899124146
    2. ' the' → logprob: -2.7934844493865967
    3. '   ' → logprob: -4.043484687805176
    4. ' we' → logprob: -4.168484687805176
    5. ' there' → logprob: -4.668484687805176
    6. ' maximum' → logprob: -5.043484687805176
    7. ' n' → logprob: -5.293484687805176
    8. ' you' → logprob: -5.543484687805176
    9. ' possible' → logprob: -5.543484687805176
    10. '    ' → logprob: -5.543484687805176

Token 34: ' formula' (ID: 20690)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5674171447753906
    2. ' maximum' → logprob: -1.0674171447753906
    3. 'max' → logprob: -4.067417144775391
    4. ' maximal' → logprob: -4.192417144775391
    5. 're' → logprob: -4.567417144775391
    6. ' code' → logprob: -4.692417144775391
    7. ' number' → logprob: -5.067417144775391
    8. ' n' → logprob: -5.067417144775391
    9. ' rest' → logprob: -5.692417144775391
    10. 'n' → logprob: -6.067417144775391

Token 35: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6695281267166138
    2. ' =' → logprob: -0.7945281267166138
    3. ':' → logprob: -3.794528007507324
    4. ' for' → logprob: -4.794528007507324
    5. ' to' → logprob: -6.794528007507324
    6. '=' → logprob: -7.044528007507324
    7. ' :' → logprob: -7.044528007507324
    8. ' ' → logprob: -7.169528007507324
    9. ' #' → logprob: -8.294528007507324
    10. 'is' → logprob: -8.294528007507324

Token 36: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9886045455932617
    2. ' n' → logprob: -1.2386045455932617
    3. ' ' → logprob: -1.6136045455932617
    4. ' max' → logprob: -2.9886045455932617
    5. '2' → logprob: -3.4886045455932617
    6. '   ' → logprob: -4.613604545593262
    7. 'n' → logprob: -5.113604545593262
    8. '    ' → logprob: -5.488604545593262
    9. '(' → logprob: -5.613604545593262
    10. '1' → logprob: -5.613604545593262

Token 37: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.017392635345459
    2. ' (' → logprob: -1.767392635345459
    3. ' n' → logprob: -1.892392635345459
    4. ' ' → logprob: -2.017392635345459
    5. '(' → logprob: -3.017392635345459
    6. 'n' → logprob: -3.392392635345459
    7. '(n' → logprob: -3.892392635345459
    8. ' f' → logprob: -4.267392635345459
    9. ' max' → logprob: -4.267392635345459
    10. '   ' → logprob: -4.517392635345459

Token 38: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11930632591247559
    2. '*' → logprob: -2.3693063259124756
    3. ' **' → logprob: -4.994306564331055
    4. 'n' → logprob: -5.619306564331055
    5. '*n' → logprob: -6.119306564331055
    6. '**' → logprob: -6.369306564331055
    7. ' ' → logprob: -7.244306564331055
    8. '-' → logprob: -7.244306564331055
    9. '(n' → logprob: -7.744306564331055
    10. '*(' → logprob: -7.744306564331055

Token 39: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3142729699611664
    2. ' n' → logprob: -1.3142729997634888
    3. '(n' → logprob: -7.564272880554199
    4. ' (' → logprob: -8.1892728805542
    5. '*n' → logprob: -9.8142728805542
    6. ' ' → logprob: -9.9392728805542
    7. '(' → logprob: -10.3142728805542
    8. ' *' → logprob: -10.5642728805542
    9. '2' → logprob: -11.1892728805542
    10. ' +' → logprob: -11.5642728805542

Token 40: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0313721895217896
    2. '_' → logprob: -2.1563720703125
    3. ' ' → logprob: -2.1563720703125
    4. '
' → logprob: -2.5313720703125
    5. '    
' → logprob: -2.6563720703125
    6. '[' → logprob: -2.7813720703125
    7. 'n' → logprob: -3.2813720703125
    8. '  
' → logprob: -3.9063720703125
    9. '\n' → logprob: -4.1563720703125
    10. ' 
' → logprob: -4.1563720703125

Token 41: 'long' (ID: 8431)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.372661828994751
    2. ')' → logprob: -1.372661828994751
    3. ' )' → logprob: -3.122661828994751
    4. '-' → logprob: -4.372661590576172
    5. '<|end|>' → logprob: -8.247661590576172
    6. ' ' → logprob: -8.622661590576172
    7. ')-' → logprob: -9.747661590576172
    8. ' +' → logprob: -9.872661590576172
    9. ' carbon' → logprob: -10.310161590576172
    10. ' ' → logprob: -10.372661590576172

Token 42: 'est' (ID: 376)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.1746041774749756
    2. ' -' → logprob: -1.1746041774749756
    3. 'est' → logprob: -2.2996041774749756
    4. ')' → logprob: -2.6746041774749756
    5. '-' → logprob: -3.0496041774749756
    6. ' *' → logprob: -3.7996041774749756
    7. '_' → logprob: -3.9246041774749756
    8. ' _' → logprob: -4.174604415893555
    9. ' n' → logprob: -4.174604415893555
    10. ' chain' → logprob: -4.799604415893555

Token 43: ' chain' (ID: 13464)
  Prédit: ' chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.7307257652282715
    2. '_' → logprob: -2.1057257652282715
    3. 's' → logprob: -2.1057257652282715
    4. ')' → logprob: -2.3557257652282715
    5. ' carbon' → logprob: -2.8557257652282715
    6. ' _' → logprob: -3.6057257652282715
    7. ' -' → logprob: -4.2307257652282715
    8. ' )' → logprob: -4.3557257652282715
    9. '_chain' → logprob: -4.4807257652282715
    10. 'chain' → logprob: -4.6057257652282715

Token 44: ' plus' (ID: 2932)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3083789348602295
    2. ' -' → logprob: -1.5583789348602295
    3. ' )' → logprob: -3.6833789348602295
    4. '-' → logprob: -3.6833789348602295
    5. ' +' → logprob: -6.433379173278809
    6. '+' → logprob: -7.308379173278809
    7. ')-' → logprob: -7.683379173278809
    8. ' ' → logprob: -7.933379173278809
    9. '   ' → logprob: -8.058379173278809
    10. '```' → logprob: -8.308379173278809

Token 45: ' twice' (ID: 18370)
  Prédit: ' branches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' branches' → logprob: -1.5868678092956543
    2. ' ' → logprob: -1.7118678092956543
    3. ' branching' → logprob: -1.9618678092956543
    4. '2' → logprob: -2.3368678092956543
    5. '1' → logprob: -2.7118678092956543
    6. ' terminal' → logprob: -2.9618678092956543
    7. ' side' → logprob: -2.9618678092956543
    8. ' one' → logprob: -3.2118678092956543
    9. ' branch' → logprob: -3.4618678092956543
    10. ' double' → logprob: -3.4618678092956543

Token 46: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.02945561334490776
    2. ' n' → logprob: -4.404455661773682
    3. 'the' → logprob: -4.404455661773682
    4. 'n' → logprob: -6.904455661773682
    5. ' branches' → logprob: -6.904455661773682
    6. ' branching' → logprob: -7.029455661773682
    7. ' number' → logprob: -7.404455661773682
    8. ' (' → logprob: -8.904455184936523
    9. ')' → logprob: -9.029455184936523
    10. 'branches' → logprob: -9.279455184936523

Token 47: ' branches' (ID: 34625)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.7912217378616333
    2. ' branching' → logprob: -1.0412217378616333
    3. ' n' → logprob: -3.0412216186523438
    4. ' branches' → logprob: -3.2912216186523438
    5. 'branch' → logprob: -3.7912216186523438
    6. ' branch' → logprob: -3.7912216186523438
    7. 'number' → logprob: -4.666221618652344
    8. 'branches' → logprob: -4.666221618652344
    9. ' adjacent' → logprob: -4.916221618652344
    10. 'n' → logprob: -5.041221618652344

Token 48: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021045419271104038
    2. '*' → logprob: -10.000210762023926
    3. '```' → logprob: -10.000210762023926
    4. '**' → logprob: -10.875210762023926
    5. ' )' → logprob: -10.875210762023926
    6. ')n' → logprob: -11.500210762023926
    7. ':' → logprob: -11.750210762023926
    8. '#' → logprob: -12.000210762023926
    9. '')' → logprob: -12.500210762023926
    10. '2' → logprob: -12.625210762023926

Token 49: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.36023351550102234
    2. ' the' → logprob: -1.3602335453033447
    3. 'each' → logprob: -4.360233306884766
    4. ' either' → logprob: -4.860233306884766
    5. 'the' → logprob: -4.985233306884766
    6. ' both' → logprob: -5.360233306884766
    7. ' carb' → logprob: -6.235233306884766
    8. ' a' → logprob: -6.360233306884766
    9. ' every' → logprob: -6.985233306884766
    10. ' one' → logprob: -6.985233306884766

Token 50: ' internal' (ID: 8812)
  Prédit: ' side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.2676563262939453
    2. ' carbon' → logprob: -2.0176563262939453
    3. ')' → logprob: -3.1426563262939453
    4. ' chain' → logprob: -3.6426563262939453
    5. ' )' → logprob: -4.142656326293945
    6. ' line' → logprob: -5.017656326293945
    7. 'carbon' → logprob: -5.392656326293945
    8. ' branch' → logprob: -6.267656326293945
    9. ' end' → logprob: -6.892656326293945
    10. ' ' → logprob: -7.142656326293945

Token 51: ' carbon' (ID: 15883)
  Prédit: ' carbon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carbon' → logprob: -0.9401777982711792
    2. ')' → logprob: -1.5651777982711792
    3. ' )' → logprob: -1.5651777982711792
    4. '_' → logprob: -2.3151779174804688
    5. ' _' → logprob: -3.1901779174804688
    6. 'carbon' → logprob: -3.9401779174804688
    7. ' atom' → logprob: -4.315177917480469
    8. ' node' → logprob: -5.065177917480469
    9. ' ' → logprob: -5.690177917480469
    10. ' chain' → logprob: -5.690177917480469

Token 52: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002683688362594694
    2. ':' → logprob: -9.50026798248291
    3. ')
' → logprob: -10.12526798248291
    4. '*' → logprob: -10.25026798248291
    5. '#' → logprob: -10.50026798248291
    6. '_' → logprob: -11.37526798248291
    7. '=' → logprob: -11.62526798248291
    8. '   ' → logprob: -11.75026798248291
    9. 's' → logprob: -11.87526798248291
    10. '}' → logprob: -12.00026798248291

Token 53: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.321532130241394
    2. ':' → logprob: -1.446532130241394
    3. '.' → logprob: -2.3215322494506836
    4. '_' → logprob: -2.5715322494506836
    5. '
' → logprob: -2.5715322494506836
    6. ',' → logprob: -3.0715322494506836
    7. '   ' → logprob: -3.1965322494506836
    8. 'n' → logprob: -3.4465322494506836
    9. '```' → logprob: -3.5715322494506836
    10. '\n' → logprob: -3.9465322494506836

Token 54: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.175493523478508
    2. 'n' → logprob: -2.8004934787750244
    3. '    
' → logprob: -3.6754934787750244
    4. '\n' → logprob: -3.8004934787750244
    5. '
' → logprob: -3.9254934787750244
    6. ' ' → logprob: -4.6754937171936035
    7. ' 
' → logprob: -5.1754937171936035
    8. '_' → logprob: -5.5504937171936035
    9. '\' → logprob: -5.8004937171936035
    10. '  
' → logprob: -5.9254937171936035

Token 55: ' This' (ID: 1328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1149044781923294
    2. 'n' → logprob: -2.7399044036865234
    3. ' 
' → logprob: -4.364904403686523
    4. '    
' → logprob: -4.739904403686523
    5. ' ' → logprob: -4.989904403686523
    6. '
' → logprob: -5.614904403686523
    7. '    ' → logprob: -6.239904403686523
    8. ' n' → logprob: -6.239904403686523
    9. '\n' → logprob: -6.364904403686523
    10. '_' → logprob: -6.989904403686523

Token 56: ' corresponds' (ID: 66938)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0820063352584839
    2. ' function' → logprob: -1.4570063352584839
    3. ' code' → logprob: -1.5820063352584839
    4. ' def' → logprob: -2.7070064544677734
    5. ' formula' → logprob: -3.2070064544677734
    6. ' logic' → logprob: -3.4570064544677734
    7. ' means' → logprob: -4.207006454467773
    8. ' can' → logprob: -4.832006454467773
    9. 'def' → logprob: -4.832006454467773
    10. ' continues' → logprob: -5.082006454467773

Token 57: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03976301848888397
    2. '<|end|>' → logprob: -3.4147629737854004
    3. 'to' → logprob: -5.2897629737854
    4. '<|end|>' → logprob: -7.0397629737854
    5. 'def' → logprob: -10.289763450622559
    6. '_to' → logprob: -10.289763450622559
    7. ' ' → logprob: -10.414763450622559
    8. ' the' → logprob: -11.789763450622559
    9. '  ' → logprob: -11.789763450622559
    10. ' =' → logprob: -12.164763450622559

Token 58: ' the' (ID: 290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6321834325790405
    2. ' max' → logprob: -1.7571834325790405
    3. '2' → logprob: -2.25718355178833
    4. ' the' → logprob: -2.38218355178833
    5. ' a' → logprob: -3.88218355178833
    6. ' n' → logprob: -4.13218355178833
    7. ' "' → logprob: -4.50718355178833
    8. '"' → logprob: -4.63218355178833
    9. 'max' → logprob: -5.25718355178833
    10. ' maximum' → logprob: -5.38218355178833

Token 59: ' largest' (ID: 10574)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.6898238658905029
    2. ' max' → logprob: -1.939823865890503
    3. ' formula' → logprob: -2.314823865890503
    4. ' longest' → logprob: -2.439823865890503
    5. ' number' → logprob: -3.564823865890503
    6. 'maximum' → logprob: -3.564823865890503
    7. ' maximal' → logprob: -3.689823865890503
    8. ' alk' → logprob: -4.502324104309082
    9. 'max' → logprob: -4.502324104309082
    10. ' length' → logprob: -4.877324104309082

Token 60: ' compound' (ID: 36762)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.7177732586860657
    2. ' possible' → logprob: -1.467773199081421
    3. ' chain' → logprob: -2.092773199081421
    4. ' alk' → logprob: -2.592773199081421
    5. 'number' → logprob: -4.5927734375
    6. 'alk' → logprob: -4.5927734375
    7. ' branch' → logprob: -5.4677734375
    8. ' length' → logprob: -5.4677734375
    9. ' carbon' → logprob: -5.4677734375
    10. 'possible' → logprob: -5.4677734375

Token 61: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6812685132026672
    2. '<|end|>' → logprob: -1.9312684535980225
    3. '    ' → logprob: -2.6812684535980225
    4. '
' → logprob: -2.9312684535980225
    5. ' ' → logprob: -2.9312684535980225
    6. '\' → logprob: -3.0562684535980225
    7. ':' → logprob: -3.6812684535980225
    8. '_' → logprob: -3.8062684535980225
    9. '    
' → logprob: -3.9312684535980225
    10. '<|end|>' → logprob: -4.056268692016602

Token 62: ' the' (ID: 290)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.30064764618873596
    2. 'n' → logprob: -2.800647735595703
    3. ' all' → logprob: -2.800647735595703
    4. ' no' → logprob: -3.300647735595703
    5. ' ' → logprob: -3.425647735595703
    6. ' a' → logprob: -4.300647735595703
    7. ' linear' → logprob: -4.300647735595703
    8. ' the' → logprob: -4.925647735595703
    9. ' an' → logprob: -5.425647735595703
    10. ' straight' → logprob: -5.925647735595703

Token 63: ' longest' (ID: 37511)
  Prédit: ' formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -1.4294112920761108
    2. ' given' → logprob: -1.5544112920761108
    3. ' maximum' → logprob: -1.5544112920761108
    4. ' longest' → logprob: -2.6794114112854004
    5. 'maximum' → logprob: -2.9294114112854004
    6. ' number' → logprob: -3.3044114112854004
    7. ' most' → logprob: -3.5544114112854004
    8. ' few' → logprob: -3.6794114112854004
    9. 'formula' → logprob: -3.6794114112854004
    10. ' chain' → logprob: -4.5544114112854

Token 64: ' chain' (ID: 13464)
  Prédit: ' chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.11385591328144073
    2. ' possible' → logprob: -3.2388558387756348
    3. 'chain' → logprob: -3.6138558387756348
    4. ' continuous' → logprob: -4.988855838775635
    5. ' carbon' → logprob: -5.113855838775635
    6. '_chain' → logprob: -5.238855838775635
    7. 'possible' → logprob: -5.488855838775635
    8. ' straight' → logprob: -5.738855838775635
    9. '_' → logprob: -5.863855838775635
    10. ' alk' → logprob: -6.113855838775635

Token 65: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.710529625415802
    2. '   ' → logprob: -1.0855295658111572
    3. ' ' → logprob: -3.3355295658111572
    4. '<|end|>' → logprob: -3.4605295658111572
    5. '_' → logprob: -4.460529804229736
    6. ',' → logprob: -4.585529804229736
    7. '\' → logprob: -4.710529804229736
    8. '    
' → logprob: -4.710529804229736
    9. '
' → logprob: -4.710529804229736
    10. '    ' → logprob: -4.835529804229736

Token 66: '
    
' (ID: 15698)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03159560263156891
    2. '   ' → logprob: -4.531595706939697
    3. ' ' → logprob: -5.656595706939697
    4. ')' → logprob: -5.656595706939697
    5. '):' → logprob: -5.906595706939697
    6. ',' → logprob: -6.031595706939697
    7. ':
' → logprob: -6.031595706939697
    8. ' :' → logprob: -6.656595706939697
    9. '
' → logprob: -6.781595706939697
    10. 'n' → logprob: -7.531595706939697

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029150448739528656
    2. 'n' → logprob: -3.6541504859924316
    3. 'def' → logprob: -7.154150485992432
    4. ' n' → logprob: -7.654150485992432
    5. 'max' → logprob: -7.904150485992432
    6. '    
' → logprob: -7.904150485992432
    7. '    ' → logprob: -8.029150009155273
    8. 'length' → logprob: -9.279150009155273
    9. '
' → logprob: -9.779150009155273
    10. ' ' → logprob: -10.029150009155273

Token 68: ' for' (ID: 395)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6629898548126221
    2. '   ' → logprob: -0.9129898548126221
    3. 'max' → logprob: -3.162989854812622
    4. ' n' → logprob: -4.162989616394043
    5. ' max' → logprob: -4.287989616394043
    6. 'return' → logprob: -6.037989616394043
    7. ' return' → logprob: -6.412989616394043
    8. ' length' → logprob: -6.537989616394043
    9. 'length' → logprob: -6.537989616394043
    10. ' if' → logprob: -7.162989616394043

Token 69: ' line' (ID: 2543)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5779371857643127
    2. ' i' → logprob: -1.077937126159668
    3. ' ' → logprob: -2.327937126159668
    4. ' _' → logprob: -7.577937126159668
    5. 'n' → logprob: -8.827937126159668
    6. ' carbon' → logprob: -9.327937126159668
    7. ' space' → logprob: -9.327937126159668
    8. ' I' → logprob: -9.827937126159668
    9. ' in' → logprob: -10.077937126159668
    10. '_' → logprob: -10.327937126159668

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015927036292850971
    2. 'in' → logprob: -6.501592636108398
    3. ' ' → logprob: -9.501592636108398
    4. 's' → logprob: -12.376592636108398
    5. '	in' → logprob: -13.126592636108398
    6. '<|end|>' → logprob: -13.251592636108398
    7. ' =' → logprob: -13.501592636108398
    8. '  ' → logprob: -13.751592636108398
    9. '_' → logprob: -13.876592636108398
    10. 'import' → logprob: -14.376592636108398

Token 71: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5759945511817932
    2. ' sys' → logprob: -0.8259945511817932
    3. '=sys' → logprob: -10.075994491577148
    4. '(sys' → logprob: -11.950994491577148
    5. '	sys' → logprob: -12.200994491577148
    6. 'stdin' → logprob: -14.325994491577148
    7. '```' → logprob: -15.325994491577148
    8. 's' → logprob: -15.700994491577148
    9. ' iter' → logprob: -15.700994491577148
    10. 'input' → logprob: -16.20099449157715

Token 72: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.029163535684347153
    2. 'stdin' → logprob: -3.6541635990142822
    3. '.' → logprob: -6.529163360595703
    4. 'in' → logprob: -7.654163360595703
    5. '.readline' → logprob: -8.029163360595703
    6. '.argv' → logprob: -8.654163360595703
    7. '.stdout' → logprob: -8.904163360595703
    8. '(stdin' → logprob: -9.154163360595703
    9. '.readlines' → logprob: -9.904163360595703
    10. ' stdin' → logprob: -10.529163360595703

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4259965717792511
    2. ' in' → logprob: -1.9259965419769287
    3. '.readline' → logprob: -1.9259965419769287
    4. 'in' → logprob: -3.3009965419769287
    5. '.' → logprob: -4.425996780395508
    6. '.readlines' → logprob: -5.300996780395508
    7. '.strip' → logprob: -8.175996780395508
    8. '<|end|>' → logprob: -8.300996780395508
    9. ' readline' → logprob: -8.675996780395508
    10. 's' → logprob: -8.675996780395508

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05233462527394295
    2. ':' → logprob: -3.0523345470428467
    3. '   ' → logprob: -5.927334785461426
    4. '        
' → logprob: -8.302334785461426
    5. '    ' → logprob: -8.677334785461426
    6. '<|end|>' → logprob: -8.802334785461426
    7. '    
' → logprob: -9.552334785461426
    8. ',' → logprob: -9.927334785461426
    9. '<|end|>' → logprob: -9.927334785461426
    10. ':
' → logprob: -9.927334785461426

Token 75: ' line' (ID: 2543)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04347924143075943
    2. 'n' → logprob: -4.2934794425964355
    3. ' line' → logprob: -4.4184794425964355
    4. '       ' → logprob: -4.5434794425964355
    5. '   ' → logprob: -5.4184794425964355
    6. ' if' → logprob: -7.6684794425964355
    7. ' s' → logprob: -7.7934794425964355
    8. 'line' (adapté à ' line') → logprob: -8.668478965759277
    9. ' tokens' → logprob: -9.043478965759277
    10. ' value' → logprob: -9.168478965759277

Token 76: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1672733575105667
    2. ' =' → logprob: -1.9172734022140503
    3. '.strip' → logprob: -5.04227352142334
    4. '_strip' → logprob: -8.41727352142334
    5. 'strip' → logprob: -8.66727352142334
    6. 's' → logprob: -9.66727352142334
    7. '=line' → logprob: -10.29227352142334
    8. '.' → logprob: -10.66727352142334
    9. '.rstrip' → logprob: -10.79227352142334
    10. '_tokens' → logprob: -12.29227352142334

Token 77: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.030190786346793175
    2. '.' → logprob: -3.5301907062530518
    3. '.rstrip' → logprob: -7.905190944671631
    4. '.split' → logprob: -10.655190467834473
    5. '().' → logprob: -10.780190467834473
    6. 'strip' → logprob: -11.655190467834473
    7. ' .' → logprob: -12.030190467834473
    8. '.replace' → logprob: -12.405190467834473
    9. '.lower' → logprob: -12.655190467834473
    10. '.trim' → logprob: -13.030190467834473

Token 78: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01424883771687746
    2. '(' → logprob: -4.264248847961426
    3. '('' → logprob: -10.514248847961426
    4. '().' → logprob: -11.514248847961426
    5. '()='' → logprob: -12.139248847961426
    6. '()
' → logprob: -12.264248847961426
    7. '()==' → logprob: -12.264248847961426
    8. '()

' → logprob: -12.639248847961426
    9. '()>' → logprob: -12.639248847961426
    10. ' ()' → logprob: -12.764248847961426

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025164498016238213
    2. '<|end|>' → logprob: -3.9001646041870117
    3. ' if' → logprob: -6.275164604187012
    4. '<|end|>' → logprob: -6.900164604187012
    5. '   ' → logprob: -7.400164604187012
    6. ',' → logprob: -7.775164604187012
    7. '        
' → logprob: -8.525164604187012
    8. ' ' → logprob: -8.900164604187012
    9. 'if' → logprob: -9.275164604187012
    10. ' =' → logprob: -10.150164604187012

Token 80: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005046964157372713
    2. ' if' → logprob: -5.880046844482422
    3. 'n' → logprob: -6.130046844482422
    4. 'i' → logprob: -10.505046844482422
    5. '   ' → logprob: -10.755046844482422
    6. 'try' → logprob: -12.130046844482422
    7. '```' → logprob: -12.255046844482422
    8. '       ' → logprob: -13.005046844482422
    9. ' n' → logprob: -13.880046844482422
    10. 'If' → logprob: -15.380046844482422

Token 81: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01689927838742733
    2. ' line' → logprob: -4.266899108886719
    3. 'not' → logprob: -6.141899108886719
    4. ' ' → logprob: -7.766899108886719
    5. 'line' → logprob: -9.391899108886719
    6. ' len' → logprob: -9.891899108886719
    7. ' n' → logprob: -11.266899108886719
    8. 'n' → logprob: -12.016899108886719
    9. 'len' → logprob: -13.391899108886719
    10. ' ' → logprob: -13.766899108886719

Token 82: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.06196802109479904
    2. 'line' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.061967849731445
    4. '	line' → logprob: -16.186967849731445
    5. '<|end|>' → logprob: -17.061967849731445
    6. '(line' → logprob: -17.936967849731445
    7. '#line' → logprob: -17.936967849731445
    8. '[line' → logprob: -19.186967849731445
    9. '=line' → logprob: -19.311967849731445
    10. ' lijn' → logprob: -20.686967849731445

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003970116376876831
    2. ':
' → logprob: -6.253970146179199
    3. ' or' → logprob: -6.628970146179199
    4. ' :' → logprob: -7.253970146179199
    5. ':return' → logprob: -12.6289701461792
    6. '):' → logprob: -13.1289701461792
    7. ' :
' → logprob: -13.3789701461792
    8. ':

' → logprob: -13.8789701461792
    9. '<|end|>' → logprob: -14.1289701461792
    10. '.' → logprob: -14.7539701461792

Token 84: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004235243541188538
    2. ' continue' → logprob: -9.125423431396484
    3. '<|end|>' → logprob: -9.375423431396484
    4. '       ' → logprob: -9.500423431396484
    5. ':' → logprob: -10.000423431396484
    6. '	       ' → logprob: -11.000423431396484
    7. '<|end|>' → logprob: -11.000423431396484
    8. ' break' → logprob: -11.125423431396484
    9. 'continue' → logprob: -11.125423431396484
    10. '   ' → logprob: -11.625423431396484

Token 85: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.11012986302375793
    2. 'break' → logprob: -2.8601298332214355
    3. ' continue' → logprob: -3.2351298332214355
    4. 'continue' (adapté à ' continue') → logprob: -4.9851298332214355
    5. '           ' → logprob: -7.8601298332214355
    6. '       ' → logprob: -8.110130310058594
    7. '   ' → logprob: -9.485130310058594
    8. '	break' → logprob: -10.110130310058594
    9. '```' → logprob: -12.360130310058594
    10. ' return' → logprob: -12.485130310058594

Token 86: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2985709309577942
    2. '<|end|>' → logprob: -1.6735708713531494
    3. '
' → logprob: -2.9235708713531494
    4. '        
' → logprob: -4.4235711097717285
    5. '<|end|>' → logprob: -5.4235711097717285
    6. ',' → logprob: -9.29857063293457
    7. '            
' → logprob: -9.92357063293457
    8. '    
' → logprob: -10.42357063293457
    9. '  
' → logprob: -10.54857063293457
    10. '```' → logprob: -10.54857063293457

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004463112447410822
    2. '        
' → logprob: -5.879463195800781
    3. '<|end|>' → logprob: -6.754463195800781
    4. '   ' → logprob: -8.879463195800781
    5. '<|end|>' → logprob: -9.754463195800781
    6. ',' → logprob: -9.754463195800781
    7. 'n' → logprob: -9.879463195800781
    8. '
' → logprob: -10.004463195800781
    9. '    
' → logprob: -10.129463195800781
    10. '```' → logprob: -11.004463195800781

Token 88: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.04966079816222191
    2. ' n' → logprob: -3.0496606826782227
    3. '       ' → logprob: -7.049660682678223
    4. 'try' → logprob: -8.924660682678223
    5. ' try' → logprob: -10.424660682678223
    6. ' parts' → logprob: -11.174660682678223
    7. '   ' → logprob: -11.299660682678223
    8. 'parts' → logprob: -11.549660682678223
    9. '```' → logprob: -13.424660682678223
    10. '	n' → logprob: -14.174660682678223

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012531078420579433
    2. '=' → logprob: -4.387531280517578
    3. '=int' → logprob: -11.387531280517578
    4. ' =
' → logprob: -12.637531280517578
    5. ')' → logprob: -13.387531280517578
    6. ',' → logprob: -13.512531280517578
    7. 's' → logprob: -13.762531280517578
    8. ' ' → logprob: -13.762531280517578
    9. '_' → logprob: -15.012531280517578
    10. ' =)' → logprob: -15.387531280517578

Token 90: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005530327325686812
    2. ' int' → logprob: -7.500553131103516
    3. '=int' → logprob: -20.000553131103516
    4. '[int' → logprob: -20.500553131103516
    5. '(int' → logprob: -21.125553131103516
    6. '   ' → logprob: -22.125553131103516
    7. '	int' → logprob: -22.125553131103516
    8. '  ' → logprob: -22.875553131103516
    9. '<int' → logprob: -23.250553131103516
    10. '```' → logprob: -23.500553131103516

Token 91: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.2519477903842926
    2. '(' → logprob: -1.5019477605819702
    3. '(n' → logprob: -11.001947402954102
    4. '(
' → logprob: -13.751947402954102
    5. '(l' → logprob: -15.501947402954102
    6. '(lines' → logprob: -15.751947402954102
    7. '(

' → logprob: -15.876947402954102
    8. '(li' → logprob: -16.1269474029541
    9. '('' → logprob: -16.6269474029541
    10. '[line' → logprob: -16.7519474029541

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -13.625003814697266
    3. '))' → logprob: -14.250003814697266
    4. ' )' → logprob: -14.500003814697266
    5. '[' → logprob: -15.125003814697266
    6. '`)' → logprob: -15.875003814697266
    7. '   ' → logprob: -16.250003814697266
    8. ']' → logprob: -17.000003814697266
    9. ')))' → logprob: -17.000003814697266
    10. ')n' → logprob: -17.000003814697266

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.170070081949234
    2. ':' → logprob: -2.045070171356201
    3. '<|end|>' → logprob: -4.170070171356201
    4. '   ' → logprob: -5.545070171356201
    5. '        
' → logprob: -6.045070171356201
    6. ':
' → logprob: -6.920070171356201
    7. '<|end|>' → logprob: -6.920070171356201
    8. '
' → logprob: -7.045070171356201
    9. ')' → logprob: -7.670070171356201
    10. ',' → logprob: -7.795070171356201

Token 94: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19819064438343048
    2. ' max' → logprob: -2.198190689086914
    3. 'if' (adapté à ' if') → logprob: -3.323190689086914
    4. '   ' → logprob: -4.448190689086914
    5. 'max' → logprob: -4.698190689086914
    6. ' print' → logprob: -5.573190689086914
    7. ' result' → logprob: -6.198190689086914
    8. '    ' → logprob: -6.698190689086914
    9. 'print' → logprob: -6.948190689086914
    10. '       ' → logprob: -7.448190689086914

Token 95: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.001327499165199697
    2. 'n' → logprob: -6.6263275146484375
    3. ' ' → logprob: -13.501327514648438
    4. ' ' → logprob: -15.626327514648438
    5. '	n' → logprob: -17.501327514648438
    6. ' not' → logprob: -18.126327514648438
    7. '<|end|>' → logprob: -18.501327514648438
    8. ' (' → logprob: -19.626327514648438
    9. '  ' → logprob: -19.751327514648438
    10. '(n' → logprob: -20.126327514648438

Token 96: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04009187966585159
    2. ' <' → logprob: -3.6650919914245605
    3. '==' → logprob: -4.4150919914245605
    4. ' <=' → logprob: -7.0400919914245605
    5. ' >=' → logprob: -7.7900919914245605
    6. ' ' → logprob: -8.665091514587402
    7. '<' → logprob: -9.665091514587402
    8. ' >' → logprob: -10.415091514587402
    9. '1' → logprob: -11.290091514587402
    10. '=' → logprob: -12.040091514587402

Token 97: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03858484327793121
    2. '1' → logprob: -3.2885849475860596
    3. '0' → logprob: -7.5385847091674805
    4. '<|end|>' → logprob: -11.53858470916748
    5. '=' → logprob: -14.66358470916748
    6. ' ' → logprob: -15.28858470916748
    7. '  ' → logprob: -15.66358470916748
    8. '<|end|>' → logprob: -16.038585662841797
    9. '```' → logprob: -16.476085662841797
    10. '2' → logprob: -16.476085662841797

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003513476112857461
    2. '0' → logprob: -5.878513336181641
    3. ' ' → logprob: -7.253513336181641
    4. '```' → logprob: -15.12851333618164
    5. '2' → logprob: -16.37851333618164
    6. '-' → logprob: -16.62851333618164
    7. '  ' → logprob: -16.69101333618164
    8. '   ' → logprob: -16.87851333618164
    9. '' → logprob: -17.62851333618164
    10. '=' → logprob: -17.69101333618164

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003410647332202643
    2. ':
' → logprob: -8.000341415405273
    3. ':return' → logprob: -12.500341415405273
    4. '):' → logprob: -13.625341415405273
    5. ' :' → logprob: -14.625341415405273
    6. ':

' → logprob: -16.500341415405273
    7. ')' → logprob: -16.750341415405273
    8. ':**' → logprob: -16.875341415405273
    9. '<|end|>' → logprob: -17.125341415405273
    10. ',' → logprob: -17.250341415405273

Token 100: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.047024086117744446
    2. '           ' → logprob: -3.5470240116119385
    3. '       ' → logprob: -4.422024250030518
    4. ':
' → logprob: -5.422024250030518
    5. 'print' → logprob: -8.42202377319336
    6. ',' → logprob: -8.79702377319336
    7. ' print' → logprob: -9.42202377319336
    8. '<|end|>' → logprob: -9.54702377319336
    9. '):' → logprob: -9.92202377319336
    10. '.' → logprob: -10.29702377319336

Token 101: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.26770466566085815
    2. '       ' → logprob: -2.142704725265503
    3. 'print' (adapté à ' print') → logprob: -2.142704725265503
    4. '
' → logprob: -9.767704963684082
    5. '           ' → logprob: -10.017704963684082
    6. '        ' → logprob: -10.017704963684082
    7. '```' → logprob: -11.392704963684082
    8. '   ' → logprob: -11.767704963684082
    9. '	print' → logprob: -11.767704963684082
    10. '        
' → logprob: -12.142704963684082

Token 102: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004260276327840984
    2. '("' → logprob: -8.000426292419434
    3. '('' → logprob: -9.500426292419434
    4. '1' → logprob: -11.375426292419434
    5. ' (' → logprob: -12.625426292419434
    6. '(
' → logprob: -14.750426292419434
    7. '()' → logprob: -16.125425338745117
    8. '("(' → logprob: -16.500425338745117
    9. '("("' → logprob: -16.500425338745117
    10. '("""' → logprob: -17.125425338745117

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020187153131701052
    2. '"' → logprob: -8.625202178955078
    3. ' ' → logprob: -11.375202178955078
    4. ''' → logprob: -11.500202178955078
    5. '(' → logprob: -15.500202178955078
    6. '`' → logprob: -15.625202178955078
    7. '   ' → logprob: -15.875202178955078
    8. ')' → logprob: -16.500202178955078
    9. ' "' → logprob: -17.375202178955078
    10. '```' → logprob: -17.687702178955078

Token 104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003758575767278671
    2. ')
' → logprob: -8.000375747680664
    3. '       ' → logprob: -10.250375747680664
    4. '   ' → logprob: -12.875375747680664
    5. '`)' → logprob: -14.375375747680664
    6. ' )' → logprob: -15.000375747680664
    7. ')`' → logprob: -15.125375747680664
    8. '))' → logprob: -15.250375747680664
    9. '```' → logprob: -15.750375747680664
    10. '")' → logprob: -16.125375747680664

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00346310599707067
    2. 'else' → logprob: -6.003463268280029
    3. 'elif' → logprob: -7.378463268280029
    4. ' else' → logprob: -8.503462791442871
    5. '<|end|>' → logprob: -9.128462791442871
    6. '           ' → logprob: -10.878462791442871
    7. '   ' → logprob: -11.628462791442871
    8. ' elif' → logprob: -11.628462791442871
    9. '```' → logprob: -12.628462791442871
    10. ')' → logprob: -12.878462791442871

Token 106: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36786872148513794
    2. 'else' (adapté à ' else') → logprob: -1.9928686618804932
    3. ' else' → logprob: -2.117868661880493
    4. 'elif' → logprob: -3.117868661880493
    5. ' elif' → logprob: -4.992868900299072
    6. '	elif' → logprob: -9.867868423461914
    7. '<|end|>' → logprob: -10.367868423461914
    8. '	else' → logprob: -10.742868423461914
    9. '   ' → logprob: -11.117868423461914
    10. '      ' → logprob: -11.617868423461914

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006888708099722862
    2. '           ' → logprob: -5.1318888664245605
    3. ':
' → logprob: -7.0068888664245605
    4. '       ' → logprob: -10.256888389587402
    5. ' :' → logprob: -12.006888389587402
    6. '            ' → logprob: -13.006888389587402
    7. '          ' → logprob: -13.131888389587402
    8. '               ' → logprob: -13.631888389587402
    9. '        ' → logprob: -13.631888389587402
    10. '   ' → logprob: -13.631888389587402

Token 108: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050045717507600784
    2. 'print' → logprob: -3.1750457286834717
    3. ' print' → logprob: -5.175045490264893
    4. '       ' → logprob: -6.800045490264893
    5. ' ' → logprob: -10.17504596710205
    6. '   ' → logprob: -10.42504596710205
    7. '	       ' → logprob: -10.55004596710205
    8. '```' → logprob: -10.55004596710205
    9. '        ' → logprob: -10.80004596710205
    10. '            
' → logprob: -10.92504596710205

Token 109: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10052765905857086
    2. ' print' → logprob: -2.350527763366699
    3. '           ' → logprob: -8.2255277633667
    4. '       ' → logprob: -10.3505277633667
    5. '```' → logprob: -11.7255277633667
    6. '               ' → logprob: -11.8505277633667
    7. '   ' → logprob: -12.4755277633667
    8. '          ' → logprob: -14.9755277633667
    9. ' ' → logprob: -15.1005277633667
    10. '    ' → logprob: -15.2255277633667

Token 110: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.4060561776859686e-05
    2. '((' → logprob: -10.750043869018555
    3. '2' → logprob: -11.125043869018555
    4. ' (' → logprob: -12.000043869018555
    5. '(n' → logprob: -14.625043869018555
    6. '('' → logprob: -14.750043869018555
    7. '()' → logprob: -15.500043869018555
    8. ' ' → logprob: -15.625043869018555
    9. '("' → logprob: -15.625043869018555
    10. '(int' → logprob: -16.000043869018555

Token 111: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -11.25001335144043
    3. '(' → logprob: -14.37501335144043
    4. '   ' → logprob: -16.37501335144043
    5. ')' → logprob: -17.50001335144043
    6. 'n' → logprob: -17.75001335144043
    7. '           ' → logprob: -17.87501335144043
    8. '```' → logprob: -18.62501335144043
    9. '       ' → logprob: -18.75001335144043
    10. '`' → logprob: -18.75001335144043

Token 112: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.17390860617160797
    2. '*' → logprob: -1.9239085912704468
    3. '*n' → logprob: -4.298908710479736
    4. ' ' → logprob: -12.298908233642578
    5. ' ' → logprob: -13.923908233642578
    6. '**' → logprob: -14.173908233642578
    7. ')' → logprob: -15.173908233642578
    8. ' **' → logprob: -15.298908233642578
    9. '*object' → logprob: -16.298908233642578
    10. '*N' → logprob: -16.298908233642578

Token 113: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0015023599844425917
    2. ' n' → logprob: -6.501502513885498
    3. ')n' → logprob: -17.501502990722656
    4. '	n' → logprob: -18.626502990722656
    5. '(n' → logprob: -20.251502990722656
    6. ' ' → logprob: -21.001502990722656
    7. '*n' → logprob: -21.126502990722656
    8. '   ' → logprob: -21.626502990722656
    9. ')' → logprob: -21.751502990722656
    10. '$n' → logprob: -22.376502990722656

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. ')
' → logprob: -12.000011444091797
    3. ' )' → logprob: -13.000011444091797
    4. '))' → logprob: -13.500011444091797
    5. ')`' → logprob: -14.750011444091797
    6. '<|end|>' → logprob: -15.250011444091797
    7. '())' → logprob: -16.000011444091797
    8. '`)' → logprob: -16.000011444091797
    9. '   ' → logprob: -16.250011444091797
    10. '```' → logprob: -16.250011444091797

Token 115: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: ' largest' (ID: 10574)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' compound' (ID: 36762)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' has' (ID: 853)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: ' ' (ID: 220)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6380972862243652
    2. ' a' → logprob: -1.6380972862243652
    3. ' longest' → logprob: -2.1380972862243652
    4. 'the' → logprob: -3.1380972862243652
    5. 'a' → logprob: -3.5130972862243652
    6. '2' → logprob: -3.5130972862243652
    7. ' ' → logprob: -4.638097286224365
    8. '<|end|>' → logprob: -4.763097286224365
    9. 'long' → logprob: -4.888097286224365
    10. ' twice' → logprob: -4.888097286224365

Token 121: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.27425867319107056
    2. 'n' → logprob: -2.524258613586426
    3. 'long' → logprob: -2.649258613586426
    4. 'the' → logprob: -3.774258613586426
    5. '(' → logprob: -4.399258613586426
    6. 'max' → logprob: -4.524258613586426
    7. ' n' → logprob: -4.774258613586426
    8. 'a' → logprob: -5.024258613586426
    9. ')' → logprob: -5.024258613586426
    10. ' ' → logprob: -5.649258613586426

Token 122: '*n' (ID: 58470)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25428861379623413
    2. '*' → logprob: -1.504288673400879
    3. '*n' → logprob: -6.129288673400879
    4. ' times' → logprob: -9.254288673400879
    5. 'times' → logprob: -10.754288673400879
    6. 'n' → logprob: -11.754288673400879
    7. '<|end|>' → logprob: -11.754288673400879
    8. ' ' → logprob: -11.879288673400879
    9. 'tokens' → logprob: -12.129288673400879
    10. ' tokens' → logprob: -12.629288673400879

Token 123: ' carb' (ID: 41933)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.001958371140062809
    2. 'on' → logprob: -6.25195837020874
    3. 'o' → logprob: -11.251958847045898
    4. ')' → logprob: -12.876958847045898
    5. 'onds' → logprob: -13.126958847045898
    6. ' ons' → logprob: -13.251958847045898
    7. '```' → logprob: -13.501958847045898
    8. 's' → logprob: -13.876958847045898
    9. '   ' → logprob: -14.251958847045898
    10. '#' → logprob: -14.376958847045898

Token 125: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: ' longest' (ID: 37511)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2321290522813797
    2. 'the' → logprob: -2.6071290969848633
    3. ' n' → logprob: -2.7321290969848633
    4. 'long' → logprob: -3.3571290969848633
    5. ' the' → logprob: -4.482129096984863
    6. 'chain' → logprob: -4.732129096984863
    7. ' longest' → logprob: -5.732129096984863
    8. 'a' → logprob: -6.482129096984863
    9. 'linear' → logprob: -6.482129096984863
    10. ' chain' → logprob: -6.607129096984863

Token 127: ' chain' (ID: 13464)
  Prédit: ' chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.25255268812179565
    2. 'chain' → logprob: -1.8775527477264404
    3. '_chain' → logprob: -2.7525527477264404
    4. '_' → logprob: -5.502552509307861
    5. ' _' → logprob: -6.627552509307861
    6. '<|end|>' → logprob: -7.127552509307861
    7. '-chain' → logprob: -9.75255298614502
    8. '   ' → logprob: -10.50255298614502
    9. '.chain' → logprob: -10.50255298614502
    10. ')' → logprob: -10.87755298614502

Token 128: ' length' (ID: 5517)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: ' n' (ID: 297)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.076631784439087
    2. '<|end|>' → logprob: -1.076631784439087
    3. 'if' → logprob: -1.201631784439087
    4. '\n' → logprob: -4.701631546020508
    5. '```' → logprob: -5.576631546020508
    6. 'main' → logprob: -6.326631546020508
    7. '#' → logprob: -6.826631546020508
    8. ' if' → logprob: -7.326631546020508
    9. '<|end|>' → logprob: -7.826631546020508
    10. '\' → logprob: -8.576631546020508

Token 132: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.47429224848747253
    2. '__' → logprob: -0.9742922782897949
    3. 'name' → logprob: -9.474291801452637
    4. ' ' → logprob: -9.724291801452637
    5. '_name' → logprob: -9.849291801452637
    6. '_' → logprob: -11.599291801452637
    7. 'Name' → logprob: -12.474291801452637
    8. ' ' → logprob: -12.974291801452637
    9. '___' → logprob: -13.224291801452637
    10. 'main' → logprob: -13.474291801452637

Token 133: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.007261700928211212
    2. ' ==' → logprob: -5.882261753082275
    3. '==' → logprob: -6.132261753082275
    4. ' __' → logprob: -6.632261753082275
    5. '__.__' → logprob: -8.382261276245117
    6. '<|end|>' → logprob: -8.507261276245117
    7. 'name' → logprob: -9.382261276245117
    8. '.__' → logprob: -10.007261276245117
    9. '__*/' → logprob: -10.132261276245117
    10. '()==' → logprob: -10.257261276245117

Token 134: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.723973582556937e-05
    2. '__.__' → logprob: -11.500017166137695
    3. '==' → logprob: -12.000017166137695
    4. '____' → logprob: -15.500017166137695
    5. '___' → logprob: -15.625017166137695
    6. '=="' → logprob: -16.000017166137695
    7. '__.' → logprob: -16.250017166137695
    8. '__["' → logprob: -16.750017166137695
    9. '__

' → logprob: -16.875017166137695
    10. '__('' → logprob: -17.125017166137695

Token 135: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22981178760528564
    2. '==' → logprob: -1.7298117876052856
    3. '__' → logprob: -3.729811668395996
    4. '=="' → logprob: -5.604811668395996
    5. '=='' → logprob: -8.104811668395996
    6. '=' → logprob: -12.479811668395996
    7. ' =="' → logprob: -12.729811668395996
    8. '_' → logprob: -13.229811668395996
    9. '[' → logprob: -13.229811668395996
    10. '"' → logprob: -13.479811668395996

Token 136: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02983240596950054
    2. ''' → logprob: -3.529832363128662
    3. ' "__' → logprob: -9.52983283996582
    4. '__' → logprob: -12.02983283996582
    5. '"user' → logprob: -13.40483283996582
    6. ' '__' → logprob: -13.90483283996582
    7. '"name' → logprob: -15.77983283996582
    8. ''"' → logprob: -15.90483283996582
    9. '"class' → logprob: -16.40483283996582
    10. '"log' → logprob: -17.15483283996582

Token 137: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0003955224819947034
    2. '__' → logprob: -7.87539529800415
    3. 'name' → logprob: -11.250395774841309
    4. '_main' → logprob: -14.000395774841309
    5. ' main' → logprob: -14.500395774841309
    6. '```' → logprob: -15.250395774841309
    7. 'built' → logprob: -15.750395774841309
    8. 'python' → logprob: -15.750395774841309
    9. '__":
' → logprob: -15.875395774841309
    10. 'm' → logprob: -15.875395774841309

Token 138: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16031470894813538
    2. '__' → logprob: -1.910314679145813
    3. '_' → logprob: -9.785314559936523
    4. '__':
' → logprob: -10.410314559936523
    5. '__.' → logprob: -13.660314559936523
    6. '__:' → logprob: -13.660314559936523
    7. '__["' → logprob: -14.160314559936523
    8. '___' → logprob: -14.910314559936523
    9. '__
' → logprob: -15.035314559936523
    10. '"' → logprob: -16.035314559936523

Token 139: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06091122329235077
    2. 'main' → logprob: -2.935911178588867
    3. '   ' → logprob: -6.185911178588867
    4. '	main' → logprob: -6.185911178588867
    5. '"' → logprob: -6.685911178588867
    6. ' ' → logprob: -8.935911178588867
    7. ''' → logprob: -9.310911178588867
    8. '_main' → logprob: -9.435911178588867
    9. '(main' → logprob: -9.435911178588867
    10. ' ' → logprob: -9.935911178588867

Token 140: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0001584850688232109
    2. ' main' → logprob: -8.750158309936523
    3. '	main' → logprob: -18.375158309936523
    4. '   ' → logprob: -20.250158309936523
    5. '.main' → logprob: -22.375158309936523
    6. '_main' → logprob: -22.375158309936523
    7. '(main' → logprob: -23.000158309936523
    8. 'Main' → logprob: -23.125158309936523
    9. 'mainwindow' → logprob: -24.375158309936523
    10. ' ' → logprob: -24.875158309936523

Token 141: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 139
Tokens correctement prédits (1ère position, stricte): 54
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 97
Précision stricte (1ère position): 38.85%
Précision adaptée (1ère position): 41.73%
Précision (top 10): 69.78%
================================================================================
