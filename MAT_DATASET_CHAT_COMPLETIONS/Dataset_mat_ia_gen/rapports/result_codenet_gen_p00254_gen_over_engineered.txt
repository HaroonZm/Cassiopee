================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:21:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Kaprekar6174Process:
    TARGET = 6174
    
    def __init__(self, number: str):
        self.original_number = self._normalize(number)
        self.current_number = self.original_number
    
    @staticmethod
    def _normalize(number: str) -> str:
        return number.zfill(4)
    
    @staticmethod
    def _all_digits_same(number: str) -> bool:
        return all(d == number[0] for d in number)
    
    def _digits_to_int_list(self, number: str) -> list[int]:
        return [int(d) for d in number]
    
    def _int_list_to_number(self, digits: list[int]) -> int:
        return int("".join(str(d) for d in digits))
    
    def _step(self) -> None:
        digits = self._digits_to_int_list(self.current_number)
        digits_sorted_asc = sorted(digits)
        digits_sorted_desc = digits_sorted_asc[::-1]
        L = self._int_list_to_number(digits_sorted_desc)
        S = self._int_list_to_number(digits_sorted_asc)
        next_number = L - S
        self.current_number = self._normalize(str(next_number))
    
    def execute_until_target_or_invalid(self) -> str | int:
        if self._all_digits_same(self.current_number):
            return "NA"
        if self.current_number == self._normalize(str(self.TARGET)):
            return 0
        
        step_count = 0
        while self.current_number != self._normalize(str(self.TARGET)):
            self._step()
            step_count += 1
            # In theory the loop should always end except all digits same case
            # Avoid infinite loop just in case
            if step_count > 10000:
                return "NA"
        return step_count

class InputOutputProcessor:
    def __init__(self, processor_cls):
        self.processor_cls = processor_cls
        
    def process_input(self, lines: list[str]) -> list[str]:
        results = []
        for line in lines:
            number = line.strip()
            if number == "0000":
                break
            processor = self.processor_cls(number)
            result = processor.execute_until_target_or_invalid()
            results.append(str(result))
        return results

def main():
    import sys
    input_lines = sys.stdin.read().strip().split('\n')
    io_processor = InputOutputProcessor(Kaprekar6174Process)
    results = io_processor.process_input(input_lines)
    print('\n'.join(results))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Kap' (ID: 24651)
  → Token d'amorce (pas de prédiction)

Token 2: 're' (ID: 264)
  → Token d'amorce (pas de prédiction)

Token 3: 'kar' (ID: 10428)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7333633899688721
    2. ':' → logprob: -0.9833633899688721
    3. '{' → logprob: -2.108363389968872
    4. ' {' → logprob: -3.983363389968872
    5. '```' → logprob: -6.608363151550293
    6. '.' → logprob: -6.733363151550293
    7. 's' → logprob: -6.983363151550293
    8. ' :' → logprob: -7.233363151550293
    9. ' ' → logprob: -8.358363151550293
    10. '[' → logprob: -8.608363151550293

Token 4: '617' (ID: 40657)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7477284073829651
    2. ' {' → logprob: -1.1227283477783203
    3. '(' → logprob: -2.6227283477783203
    4. ':' → logprob: -2.7477283477783203
    5. ' ' → logprob: -2.8727283477783203
    6. '.' → logprob: -5.49772834777832
    7. '```' → logprob: -6.12272834777832
    8. ' (' → logprob: -7.37272834777832
    9. ' :' → logprob: -8.12272834777832
    10. '  ' → logprob: -9.49772834777832

Token 5: '4' (ID: 19)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.08360844105482101
    2. ' {' → logprob: -2.833608388900757
    3. '(' → logprob: -4.458608627319336
    4. ':' → logprob: -4.708608627319336
    5. ' ' → logprob: -7.958608627319336
    6. '```' → logprob: -8.333608627319336
    7. ' (' → logprob: -9.458608627319336
    8. '.' → logprob: -9.708608627319336
    9. '()' → logprob: -11.458608627319336
    10. ' :' → logprob: -11.458608627319336

Token 6: 'Process' (ID: 7212)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.27486515045166016
    2. ' {' → logprob: -1.6498651504516602
    3. '(' → logprob: -3.64986515045166
    4. ':' → logprob: -4.14986515045166
    5. ' ' → logprob: -5.39986515045166
    6. '```' → logprob: -7.27486515045166
    7. '.' → logprob: -7.39986515045166
    8. ' (' → logprob: -8.14986515045166
    9. '()' → logprob: -10.14986515045166
    10. '  ' → logprob: -10.14986515045166

Token 7: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7131122946739197
    2. '(' → logprob: -1.0881123542785645
    3. ':' → logprob: -1.8381123542785645
    4. '.' → logprob: -4.8381123542785645
    5. ' {' → logprob: -5.4631123542785645
    6. '```' → logprob: -6.7131123542785645
    7. ' ' → logprob: -9.338111877441406
    8. '(:' → logprob: -9.713111877441406
    9. ' (' → logprob: -10.088111877441406
    10. ' :' → logprob: -10.213111877441406

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012423237785696983
    2. '   ' → logprob: -5.262423038482666
    3. '(' → logprob: -5.387423038482666
    4. '```' → logprob: -6.262423038482666
    5. ':
' → logprob: -7.762423038482666
    6. '.' → logprob: -9.887423515319824
    7. '():' → logprob: -9.887423515319824
    8. '(
' → logprob: -10.012423515319824
    9. '{' → logprob: -11.387423515319824
    10. ''' → logprob: -11.887423515319824

Token 9: ' TARGET' (ID: 93707)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3535003066062927
    2. '    ' → logprob: -2.4785003662109375
    3. '   ' → logprob: -2.7285003662109375
    4. ' def' → logprob: -2.9785003662109375
    5. '_' → logprob: -3.6035003662109375
    6. '```' → logprob: -3.7285003662109375
    7. ' 
' → logprob: -4.1035003662109375
    8. '     
' → logprob: -5.1035003662109375
    9. ' ```' → logprob: -5.1035003662109375
    10. '`' → logprob: -6.2285003662109375

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09784946590662003
    2. '=' → logprob: -2.4728493690490723
    3. '_' → logprob: -4.847849369049072
    4. '_VALUE' → logprob: -7.847849369049072
    5. '_NUMBER' → logprob: -8.22284984588623
    6. '   ' → logprob: -9.34784984588623
    7. ' _' → logprob: -9.59784984588623
    8. '_NUM' → logprob: -9.97284984588623
    9. ' ' → logprob: -10.09784984588623
    10. '_SPACE' → logprob: -10.84784984588623

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20751315355300903
    2. '617' → logprob: -1.7075130939483643
    3. '"' → logprob: -5.957513332366943
    4. '   ' → logprob: -6.457513332366943
    5. ''' → logprob: -6.582513332366943
    6. '4' → logprob: -7.957513332366943
    7. ' "' → logprob: -9.457512855529785
    8. '  ' → logprob: -10.832512855529785
    9. ' '' → logprob: -10.832512855529785
    10. '417' → logprob: -11.207512855529785

Token 12: '617' (ID: 40657)
  Prédit: '617'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '617' → logprob: -0.001894841087050736
    2. ' ' → logprob: -6.501894950866699
    3. '"' → logprob: -8.2518949508667
    4. ''' → logprob: -9.3768949508667
    5. '   ' → logprob: -10.6268949508667
    6. '4' → logprob: -12.2518949508667
    7. 'int' → logprob: -12.5018949508667
    8. '614' → logprob: -12.7518949508667
    9. '647' → logprob: -13.1268949508667
    10. '6' → logprob: -13.6268949508667

Token 13: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.7954958821064793e-05
    2. ' ' → logprob: -11.000018119812012
    3. '٤' → logprob: -14.875018119812012
    4. '.' → logprob: -16.312517166137695
    5. '   ' → logprob: -16.375017166137695
    6. '۴' → logprob: -16.687517166137695
    7. '' → logprob: -16.812517166137695
    8. ''' → logprob: -16.875017166137695
    9. '৪' → logprob: -16.875017166137695
    10. '464' → logprob: -17.062517166137695

Token 14: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24409861862659454
    2. ':' → logprob: -2.244098663330078
    3. '    
' → logprob: -3.369098663330078
    4. '```' → logprob: -3.869098663330078
    5. '\n' → logprob: -3.869098663330078
    6. ':
' → logprob: -4.994098663330078
    7. '  
' → logprob: -5.244098663330078
    8. '

' → logprob: -5.244098663330078
    9. '   ' → logprob: -5.619098663330078
    10. '' → logprob: -6.119098663330078

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2594875991344452
    2. ' def' → logprob: -1.7594876289367676
    3. 'def' → logprob: -3.0094876289367676
    4. '    
' → logprob: -5.634487628936768
    5. '
' → logprob: -6.384487628936768
    6. '```' → logprob: -6.634487628936768
    7. '    ' → logprob: -8.63448715209961
    8. ' 
' → logprob: -9.50948715209961
    9. ' ' → logprob: -9.63448715209961
    10. ':' → logprob: -10.13448715209961

Token 16: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6208940744400024
    2. 'def' (adapté à ' def') → logprob: -0.9958940744400024
    3. '   ' → logprob: -2.620893955230713
    4. '```' → logprob: -4.120893955230713
    5. 'd' → logprob: -6.495893955230713
    6. ' ```' → logprob: -6.745893955230713
    7. '    ' → logprob: -7.245893955230713
    8. ' ' → logprob: -8.245894432067871
    9. ' d' → logprob: -8.370894432067871
    10. 'de' → logprob: -9.245894432067871

Token 17: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33941650390625
    2. ' process' → logprob: -1.96441650390625
    3. ' calculate' → logprob: -2.71441650390625
    4. '_' → logprob: -2.71441650390625
    5. '_process' → logprob: -5.71441650390625
    6. '__' → logprob: -6.83941650390625
    7. ' def' → logprob: -6.96441650390625
    8. ' complete' → logprob: -6.96441650390625
    9. ' ' → logprob: -7.33941650390625
    10. ' get' → logprob: -7.46441650390625

Token 18: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.778209353797138e-05
    2. ' init' → logprob: -9.750067710876465
    3. 'i' → logprob: -11.875067710876465
    4. 'ini' → logprob: -13.750067710876465
    5. 'in' → logprob: -14.500067710876465
    6. '_init' → logprob: -14.625067710876465
    7. '_' → logprob: -15.875067710876465
    8. ' i' → logprob: -16.25006866455078
    9. '	init' → logprob: -16.62506866455078
    10. '  ' → logprob: -17.50006866455078

Token 19: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3393958806991577
    2. '(' → logprob: -1.9643958806991577
    3. '(self' → logprob: -2.0893959999084473
    4. '__' → logprob: -5.214395999908447
    5. '<|end|>' → logprob: -5.714395999908447
    6. '__(
' → logprob: -6.089395999908447
    7. '_(' → logprob: -6.089395999908447
    8. ' (' → logprob: -6.339395999908447
    9. '```' → logprob: -6.464395999908447
    10. 'self' → logprob: -6.589395999908447

Token 20: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011050770990550518
    2. ' self' → logprob: -4.511050701141357
    3. ')' → logprob: -13.011051177978516
    4. ' )' → logprob: -15.886051177978516
    5. '	self' → logprob: -16.011051177978516
    6. ' ' → logprob: -16.136051177978516
    7. '   ' → logprob: -16.386051177978516
    8. ' ' → logprob: -16.386051177978516
    9. '       ' → logprob: -16.636051177978516
    10. '(self' → logprob: -16.761051177978516

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029500173404812813
    2. 'self' → logprob: -4.0295000076293945
    3. ' ,' → logprob: -4.7795000076293945
    4. '):' → logprob: -6.7795000076293945
    5. ' self' → logprob: -7.2795000076293945
    6. ',self' → logprob: -7.7795000076293945
    7. ')' → logprob: -7.7795000076293945
    8. ' )' → logprob: -9.654500007629395
    9. ' ):' → logprob: -10.279500007629395
    10. ' ' → logprob: -10.654500007629395

Token 22: ' number' (ID: 2086)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.40353837609291077
    2. 'self' → logprob: -1.6535383462905884
    3. ' number' → logprob: -3.028538465499878
    4. ' n' → logprob: -3.403538465499878
    5. ' num' → logprob: -3.778538465499878
    6. 'n' → logprob: -4.028538227081299
    7. 'num' → logprob: -4.778538227081299
    8. 'number' → logprob: -4.778538227081299
    9. ' value' → logprob: -7.528538227081299
    10. ' numbers' → logprob: -8.028538703918457

Token 23: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027399698738008738
    2. '):
' → logprob: -6.752739906311035
    3. ')' → logprob: -7.377739906311035
    4. '=' → logprob: -7.627739906311035
    5. ' ):' → logprob: -8.752739906311035
    6. ':' → logprob: -9.127739906311035
    7. '   ' → logprob: -9.502739906311035
    8. ',' → logprob: -9.502739906311035
    9. '_' → logprob: -11.752739906311035
    10. '       ' → logprob: -11.877739906311035

Token 24: ' str' (ID: 989)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10025380551815033
    2. 'int' → logprob: -2.3502538204193115
    3. ' ' → logprob: -10.97525405883789
    4. ' str' → logprob: -11.35025405883789
    5. ')' → logprob: -11.47525405883789
    6. ':int' → logprob: -13.35025405883789
    7. '	int' → logprob: -13.72525405883789
    8. ' )' → logprob: -13.85025405883789
    9. '=int' → logprob: -14.10025405883789
    10. ' ' → logprob: -14.22525405883789

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013194587081670761
    2. ')' → logprob: -4.388194561004639
    3. '):
' → logprob: -7.513194561004639
    4. '   ' → logprob: -9.388195037841797
    5. ':' → logprob: -11.138195037841797
    6. '       ' → logprob: -11.388195037841797
    7. ',' → logprob: -11.513195037841797
    8. ' ):' → logprob: -11.763195037841797
    9. '):
' → logprob: -13.013195037841797
    10. '):

' → logprob: -13.763195037841797

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014009649865329266
    2. ' ' → logprob: -4.889009475708008
    3. '    ' → logprob: -5.514009475708008
    4. '   ' → logprob: -6.889009475708008
    5. '<|end|>' → logprob: -7.514009475708008
    6. '        ' → logprob: -7.639009475708008
    7. '     ' → logprob: -9.639009475708008
    8. ' )' → logprob: -10.139009475708008
    9. '      ' → logprob: -10.514009475708008
    10. ' self' → logprob: -10.639009475708008

Token 27: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1431296169757843
    2. 'self' (adapté à ' self') → logprob: -2.518129587173462
    3. ' self' → logprob: -3.018129587173462
    4. ' ' → logprob: -6.393129825592041
    5. ' ' → logprob: -7.268129825592041
    6. '   ' → logprob: -7.393129825592041
    7. '        ' → logprob: -7.893129825592041
    8. '    ' → logprob: -8.643129348754883
    9. 's' → logprob: -10.268129348754883
    10. '     ' → logprob: -10.518129348754883

Token 28: '.original' (ID: 65193)
  Prédit: '.number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.18149103224277496
    2. '.' → logprob: -1.8064910173416138
    3. ' .' → logprob: -7.431490898132324
    4. '.n' → logprob: -8.056490898132324
    5. 'number' → logprob: -8.556490898132324
    6. '.value' → logprob: -8.556490898132324
    7. '.code' → logprob: -8.806490898132324
    8. '.input' → logprob: -9.556490898132324
    9. '._' → logprob: -9.681490898132324
    10. '.current' → logprob: -10.431490898132324

Token 29: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.058116644620895386
    2. '=' → logprob: -3.0581166744232178
    3. 'number' → logprob: -5.558116436004639
    4. ' =' → logprob: -5.558116436004639
    5. '_' → logprob: -6.683116436004639
    6. '_value' → logprob: -8.683116912841797
    7. ' number' → logprob: -9.308116912841797
    8. '_input' → logprob: -9.433116912841797
    9. ')' → logprob: -10.308116912841797
    10. 'Number' → logprob: -10.433116912841797

Token 30: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22541870176792145
    2. ' =' → logprob: -1.6004186868667603
    3. ')' → logprob: -13.100419044494629
    4. '<|end|>' → logprob: -14.225419044494629
    5. ',' → logprob: -14.725419044494629
    6. ' ' → logprob: -14.850419044494629
    7. ' =)' → logprob: -14.975419044494629
    8. ' =
' → logprob: -14.975419044494629
    9. '=

' → logprob: -15.225419044494629
    10. '_' → logprob: -15.350419044494629

Token 31: ' self' (ID: 1051)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.06995310634374619
    2. 'number' → logprob: -2.694953203201294
    3. ' ' → logprob: -11.444952964782715
    4. '	number' → logprob: -13.069952964782715
    5. '(number' → logprob: -13.319952964782715
    6. ' int' → logprob: -13.819952964782715
    7. ''' → logprob: -15.194952964782715
    8. 'int' → logprob: -15.319952964782715
    9. '_number' → logprob: -16.06995391845703
    10. '"' → logprob: -16.06995391845703

Token 32: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5366216897964478
    2. '.number' → logprob: -1.1616216897964478
    3. 'number' → logprob: -2.536621570587158
    4. '.original' → logprob: -3.911621570587158
    5. 'original' → logprob: -6.536621570587158
    6. ' .' → logprob: -8.161622047424316
    7. ' number' → logprob: -8.161622047424316
    8. '_number' → logprob: -8.411622047424316
    9. ' ' → logprob: -9.161622047424316
    10. '._' → logprob: -9.411622047424316

Token 33: 'normalize' (ID: 62699)
  Prédit: 'normalize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.6565380096435547
    2. 'validate' → logprob: -1.0315380096435547
    3. 'sanitize' → logprob: -3.1565380096435547
    4. 'pad' → logprob: -3.1565380096435547
    5. 'format' → logprob: -4.281538009643555
    6. 'clean' → logprob: -4.906538009643555
    7. 'process' → logprob: -5.531538009643555
    8. 'zero' → logprob: -6.031538009643555
    9. 'standard' → logprob: -6.406538009643555
    10. 'fill' → logprob: -6.656538009643555

Token 34: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.0708714947104454
    2. '(' → logprob: -2.695871591567993
    3. 'number' → logprob: -7.320871353149414
    4. '_number' → logprob: -8.445871353149414
    5. '(user' → logprob: -10.820871353149414
    6. '(Number' → logprob: -12.320871353149414
    7. '(
' → logprob: -12.445871353149414
    8. '	number' → logprob: -12.570871353149414
    9. 'Number' → logprob: -12.820871353149414
    10. '(n' → logprob: -13.070871353149414

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.195421494543552e-05
    2. '       ' → logprob: -9.87507152557373
    3. '   ' → logprob: -11.62507152557373
    4. ')
' → logprob: -12.25007152557373
    5. ' )' → logprob: -12.75007152557373
    6. '')' → logprob: -14.37507152557373
    7. ',' → logprob: -14.75007152557373
    8. ' ' → logprob: -15.12507152557373
    9. '```' → logprob: -15.12507152557373
    10. ')`' → logprob: -15.50007152557373

Token 36: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1387009620666504
    2. '<|end|>' → logprob: -1.5137009620666504
    3. '
' → logprob: -2.1387009620666504
    4. '   ' → logprob: -2.3887009620666504
    5. '    
' → logprob: -2.5137009620666504
    6. '\' → logprob: -3.2637009620666504
    7. ' 
' → logprob: -3.2637009620666504
    8. '```' → logprob: -3.3887009620666504
    9. '       ' → logprob: -4.38870096206665
    10. 'newline' → logprob: -4.63870096206665

Token 37: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: '.current' (ID: 8357)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7679768800735474
    2. '.current' → logprob: -1.2679768800735474
    3. '.process' → logprob: -2.892976760864258
    4. '._' → logprob: -3.392976760864258
    5. '_process' → logprob: -3.517976760864258
    6. '_current' → logprob: -3.892976760864258
    7. '.number' → logprob: -4.017976760864258
    8. '_steps' → logprob: -4.142976760864258
    9. '_number' → logprob: -4.142976760864258
    10. '.target' → logprob: -4.517976760864258

Token 39: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.20154772698879242
    2. '_' → logprob: -1.8265477418899536
    3. ' =' → logprob: -4.326547622680664
    4. '=' → logprob: -6.076547622680664
    5. '_num' → logprob: -6.576547622680664
    6. '_process' → logprob: -6.951547622680664
    7. ' _' → logprob: -7.201547622680664
    8. '_space' → logprob: -7.451547622680664
    9. '_step' → logprob: -7.576547622680664
    10. '_code' → logprob: -7.576547622680664

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018151817843317986
    2. '=' → logprob: -4.018151760101318
    3. ' ' → logprob: -13.518152236938477
    4. '<|end|>' → logprob: -15.268152236938477
    5. ' =
' → logprob: -16.143152236938477
    6. ',' → logprob: -16.268152236938477
    7. ')' → logprob: -16.393152236938477
    8. ' =)' → logprob: -17.393152236938477
    9. '_' → logprob: -17.643152236938477
    10. '<|end|>' → logprob: -17.643152236938477

Token 41: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11285840719938278
    2. 'self' → logprob: -2.237858295440674
    3. ' ' → logprob: -11.112858772277832
    4. ' ' → logprob: -11.237858772277832
    5. '	self' → logprob: -12.987858772277832
    6. '<|end|>' → logprob: -13.737858772277832
    7. '<|end|>' → logprob: -13.737858772277832
    8. ' the' → logprob: -14.112858772277832
    9. 'Self' → logprob: -14.862858772277832
    10. '_self' → logprob: -15.112858772277832

Token 42: '.original' (ID: 65193)
  Prédit: '.original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.original' → logprob: -0.01843448355793953
    2. '.' → logprob: -4.143434524536133
    3. '.current' → logprob: -6.268434524536133
    4. 'original' → logprob: -8.268434524536133
    5. '._' → logprob: -8.893434524536133
    6. ' .' → logprob: -9.768434524536133
    7. '_original' → logprob: -11.768434524536133
    8. '.normal' → logprob: -12.143434524536133
    9. '.target' → logprob: -12.143434524536133
    10. '.origin' → logprob: -12.768434524536133

Token 43: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.007650638464838266
    2. '_' → logprob: -4.882650852203369
    3. 'number' → logprob: -11.632650375366211
    4. ' _' → logprob: -11.632650375366211
    5. 'Number' → logprob: -12.382650375366211
    6. '_n' → logprob: -12.507650375366211
    7. 'umber' → logprob: -12.757650375366211
    8. '_NUMBER' → logprob: -13.007650375366211
    9. '_token' → logprob: -13.257650375366211
    10. '__' → logprob: -13.507650375366211

Token 44: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.4561256766319275
    2. '   ' → logprob: -1.4561257362365723
    3. '<|end|>' → logprob: -3.2061257362365723
    4. '\n' → logprob: -3.8311257362365723
    5. ' 
' → logprob: -3.9561257362365723
    6. '  
' → logprob: -4.331125736236572
    7. '       ' → logprob: -4.706125736236572
    8. '        
' → logprob: -5.206125736236572
    9. 'def' → logprob: -5.581125736236572
    10. '```' → logprob: -5.706125736236572

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7948737740516663
    2. '<|end|>' → logprob: -0.9198737740516663
    3. '    
' → logprob: -2.1698737144470215
    4. '
' → logprob: -4.0448737144470215
    5. '<|end|>' → logprob: -4.5448737144470215
    6. 'def' → logprob: -5.5448737144470215
    7. '  
' → logprob: -7.0448737144470215
    8. ' 
' → logprob: -7.2948737144470215
    9. '\n' → logprob: -7.4198737144470215
    10. '```' → logprob: -7.4198737144470215

Token 46: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4478823244571686
    2. 'def' → logprob: -1.5728822946548462
    3. '    
' → logprob: -2.0728824138641357
    4. '
' → logprob: -4.447882175445557
    5. ' def' → logprob: -4.447882175445557
    6. '```' → logprob: -7.072882175445557
    7. ' 
' → logprob: -7.322882175445557
    8. '  
' → logprob: -7.322882175445557
    9. '\n' → logprob: -7.447882175445557
    10. '        
' → logprob: -7.822882175445557

Token 47: 'staticmethod' (ID: 53164)
  Prédit: 'property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.0751582682132721
    2. 'staticmethod' → logprob: -2.7001583576202393
    3. 'classmethod' → logprob: -5.32515811920166
    4. 'dat' → logprob: -8.45015811920166
    5. 'pro' → logprob: -9.82515811920166
    6. 'proper' → logprob: -9.95015811920166
    7. 'p' → logprob: -12.07515811920166
    8. 'pr' → logprob: -12.20015811920166
    9. 'prop' → logprob: -12.32515811920166
    10. ' property' → logprob: -12.45015811920166

Token 48: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9295524954795837
    2. '
' → logprob: -1.0545525550842285
    3. ' def' → logprob: -1.4295525550842285
    4. '   ' → logprob: -4.8045525550842285
    5. '    
' → logprob: -5.0545525550842285
    6. '_def' → logprob: -7.3045525550842285
    7. '  
' → logprob: -7.6795525550842285
    8. '<|end|>' → logprob: -7.9295525550842285
    9. '	def' → logprob: -8.05455207824707
    10. '        
' → logprob: -8.67955207824707

Token 49: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4011075794696808
    2. 'def' → logprob: -1.1511075496673584
    3. ' def' → logprob: -4.2761077880859375
    4. '    
' → logprob: -9.151107788085938
    5. '   ' → logprob: -9.651107788085938
    6. '  
' → logprob: -10.401107788085938
    7. '\' → logprob: -11.526107788085938
    8. ' 
' → logprob: -12.151107788085938
    9. '```' → logprob: -12.151107788085938
    10. '
' → logprob: -12.276107788085938

Token 50: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000868944451212883
    2. ' def' → logprob: -7.125868797302246
    3. '_normal' → logprob: -10.375868797302246
    4. '_def' → logprob: -10.625868797302246
    5. '
' → logprob: -12.250868797302246
    6. 'normalize' → logprob: -12.750868797302246
    7. '_' → logprob: -15.375868797302246
    8. '   ' → logprob: -15.500868797302246
    9. '```' → logprob: -15.500868797302246
    10. '	def' → logprob: -15.625868797302246

Token 51: ' _' (ID: 1175)
  Prédit: '_normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_normal' → logprob: -0.0001029471677611582
    2. ' _' → logprob: -9.625102996826172
    3. '_' → logprob: -11.000102996826172
    4. '_norm' → logprob: -11.250102996826172
    5. '_Normal' → logprob: -13.500102996826172
    6. 'def' → logprob: -14.000102996826172
    7. '_generate' → logprob: -14.500102996826172
    8. '_def' → logprob: -14.625102996826172
    9. '_validate' → logprob: -14.750102996826172
    10. '_define' → logprob: -14.750102996826172

Token 52: 'normalize' (ID: 62699)
  Prédit: 'normalize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -1.9361264946837764e-07
    2. ' normalize' → logprob: -16.625
    3. '.normalize' → logprob: -17.625
    4. 'norm' → logprob: -18.5
    5. 'normal' → logprob: -19.375
    6. 'staticmethod' → logprob: -19.5
    7. 'n' → logprob: -19.5
    8. 'normalized' → logprob: -19.625
    9. 'sanitize' → logprob: -19.875
    10. '_normal' → logprob: -20.0

Token 53: '(number' (ID: 32955)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05872507765889168
    2. '(number' → logprob: -3.183725118637085
    3. '(self' → logprob: -4.308724880218506
    4. ' (' → logprob: -6.308724880218506
    5. '(token' → logprob: -9.558725357055664
    6. '(code' → logprob: -10.183725357055664
    7. '(string' → logprob: -10.183725357055664
    8. '(user' → logprob: -10.558725357055664
    9. '(
' → logprob: -11.183725357055664
    10. '(num' → logprob: -11.308725357055664

Token 54: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2870798707008362
    2. ':' → logprob: -1.4120798110961914
    3. '):
' → logprob: -5.662079811096191
    4. ')' → logprob: -6.787079811096191
    5. ':str' → logprob: -7.162079811096191
    6. ' ):' → logprob: -8.662079811096191
    7. ' :' → logprob: -8.787079811096191
    8. '   ' → logprob: -9.287079811096191
    9. '):

' → logprob: -10.912079811096191
    10. 'self' → logprob: -11.037079811096191

Token 55: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.5766111016273499
    2. 'str' → logprob: -0.8266111016273499
    3. ')' → logprob: -7.701611042022705
    4. 's' → logprob: -9.451611518859863
    5. ':str' → logprob: -9.826611518859863
    6. '_str' → logprob: -10.451611518859863
    7. ' ' → logprob: -11.201611518859863
    8. 'int' → logprob: -11.576611518859863
    9. ' )' → logprob: -11.701611518859863
    10. 'self' → logprob: -12.201611518859863

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20286865532398224
    2. '):' → logprob: -1.7028687000274658
    3. '):
' → logprob: -7.077868461608887
    4. '   ' → logprob: -7.702868461608887
    5. ')->' → logprob: -9.577868461608887
    6. ':' → logprob: -10.452868461608887
    7. ' )' → logprob: -10.577868461608887
    8. '       ' → logprob: -11.077868461608887
    9. ' ):' → logprob: -12.202868461608887
    10. '):
' → logprob: -12.452868461608887

Token 57: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004759410861879587
    2. '):' → logprob: -6.254759311676025
    3. ':return' → logprob: -7.004759311676025
    4. '       ' → logprob: -7.504759311676025
    5. ' :' → logprob: -8.004759788513184
    6. '():' → logprob: -8.379759788513184
    7. ':
' → logprob: -8.754759788513184
    8. ' ->' → logprob: -8.879759788513184
    9. '   ' → logprob: -8.879759788513184
    10. ':str' → logprob: -9.004759788513184

Token 58: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6932017803192139
    2. ' str' → logprob: -0.6932017803192139
    3. 'int' → logprob: -10.318202018737793
    4. '[str' → logprob: -11.818202018737793
    5. '	str' → logprob: -11.818202018737793
    6. ' int' → logprob: -12.818202018737793
    7. '(str' → logprob: -13.568202018737793
    8. ':str' → logprob: -14.068202018737793
    9. 's' → logprob: -14.443202018737793
    10. '```' → logprob: -14.818202018737793

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012774143368005753
    2. '       ' → logprob: -4.6377739906311035
    3. ':
' → logprob: -6.0127739906311035
    4. '):' → logprob: -8.637774467468262
    5. ' :' → logprob: -8.887774467468262
    6. ',' → logprob: -9.637774467468262
    7. '   ' → logprob: -9.762774467468262
    8. ':return' → logprob: -9.887774467468262
    9. '):
' → logprob: -11.012774467468262
    10. '():' → logprob: -12.012774467468262

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028222134336829185
    2. ':' → logprob: -4.40322208404541
    3. '    ' → logprob: -4.77822208404541
    4. '        ' → logprob: -6.65322208404541
    5. ' number' → logprob: -6.90322208404541
    6. '        
' → logprob: -7.40322208404541
    7. '   ' → logprob: -7.40322208404541
    8. '#' → logprob: -7.52822208404541
    9. ' return' → logprob: -7.65322208404541
    10. ',' → logprob: -8.27822208404541

Token 61: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2967931628227234
    2. ' return' → logprob: -1.4217932224273682
    3. 'number' → logprob: -4.796792984008789
    4. ' number' → logprob: -5.046792984008789
    5. '       ' → logprob: -7.296792984008789
    6. '        
' → logprob: -10.046792984008789
    7. '```' → logprob: -10.671792984008789
    8. 'num' → logprob: -11.171792984008789
    9. '"""' → logprob: -11.171792984008789
    10. '    ' → logprob: -11.546792984008789

Token 62: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.22677965462207794
    2. ' number' → logprob: -1.6017796993255615
    3. 'f' → logprob: -7.226779460906982
    4. ' f' → logprob: -7.476779460906982
    5. 'str' → logprob: -10.10177993774414
    6. ' str' → logprob: -11.72677993774414
    7. ''' → logprob: -12.22677993774414
    8. '"' → logprob: -12.35177993774414
    9. '"{' → logprob: -12.47677993774414
    10. ''{' → logprob: -12.60177993774414

Token 63: '.z' (ID: 9161)
  Prédit: '.z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.z' → logprob: -3.225939872208983e-05
    2. '.r' → logprob: -10.750032424926758
    3. '.' → logprob: -12.000032424926758
    4. 'z' → logprob: -12.375032424926758
    5. '.l' → logprob: -16.000032424926758
    6. ' z' → logprob: -16.250032424926758
    7. 'r' → logprob: -16.375032424926758
    8. '[::-' → logprob: -18.125032424926758
    9. ' .' → logprob: -19.125032424926758
    10. '[' → logprob: -19.625032424926758

Token 64: 'fill' (ID: 12413)
  Prédit: 'fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -2.8444881536415778e-05
    2. 'f' → logprob: -10.500028610229492
    3. 'filled' → logprob: -15.250028610229492
    4. 'l' → logprob: -15.375028610229492
    5. '_fill' → logprob: -15.375028610229492
    6. 'fi' → logprob: -16.625028610229492
    7. '-fill' → logprob: -17.125028610229492
    8. 'z' → logprob: -17.250028610229492
    9. '填' → logprob: -17.375028610229492
    10. 'fills' → logprob: -17.500028610229492

Token 65: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(
' → logprob: -19.0
    3. ' (' → logprob: -19.875
    4. '4' → logprob: -20.375
    5. '('' → logprob: -20.75
    6. '```' → logprob: -21.125
    7. '((' → logprob: -21.5
    8. '(

' → logprob: -22.125
    9. '<|end|>' → logprob: -22.125
    10. '()' → logprob: -22.875

Token 66: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -19.5
    4. '```' → logprob: -20.375
    5. '٤' → logprob: -20.375
    6. '۴' → logprob: -20.625
    7. '44' → logprob: -20.875
    8. '"' → logprob: -21.625
    9. '{' → logprob: -21.8125
    10. '৪' → logprob: -21.875

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -13.75000286102295
    3. '())' → logprob: -14.25000286102295
    4. '()' → logprob: -14.37500286102295
    5. '')' → logprob: -15.25000286102295
    6. '))' → logprob: -15.62500286102295
    7. ')
' → logprob: -15.75000286102295
    8. '")' → logprob: -17.000003814697266
    9. ')}}' → logprob: -17.000003814697266
    10. ')))' → logprob: -17.375003814697266

Token 68: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2049766778945923
    2. '    
' → logprob: -1.2049766778945923
    3. '<|end|>' → logprob: -1.3299766778945923
    4. '
' → logprob: -2.7049765586853027
    5. '  
' → logprob: -4.329976558685303
    6. '\n' → logprob: -4.329976558685303
    7. ' 
' → logprob: -4.329976558685303
    8. '```' → logprob: -4.829976558685303
    9. '<|end|>' → logprob: -5.079976558685303
    10. 'def' → logprob: -5.579976558685303

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20223958790302277
    2. '    
' → logprob: -2.077239513397217
    3. 'def' → logprob: -3.077239513397217
    4. '
' → logprob: -5.827239513397217
    5. '  
' → logprob: -6.202239513397217
    6. '<|end|>' → logprob: -6.202239513397217
    7. ' def' → logprob: -6.577239513397217
    8. ' 
' → logprob: -6.702239513397217
    9. '```' → logprob: -7.202239513397217
    10. ' ' → logprob: -8.327239990234375

Token 70: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0096540916711092
    2. ' def' → logprob: -5.1346540451049805
    3. '   ' → logprob: -5.6346540451049805
    4. '    
' → logprob: -9.38465404510498
    5. ' ' → logprob: -9.88465404510498
    6. '	def' → logprob: -12.63465404510498
    7. '    ' → logprob: -13.38465404510498
    8. '        
' → logprob: -13.38465404510498
    9. ' 
' → logprob: -13.38465404510498
    10. '```' → logprob: -14.00965404510498

Token 71: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.041137054562568665
    2. 'property' → logprob: -3.2911369800567627
    3. 'classmethod' → logprob: -5.791137218475342
    4. 'dat' → logprob: -10.541136741638184
    5. 'static' → logprob: -11.791136741638184
    6. 'st' → logprob: -13.416136741638184
    7. 'Property' → logprob: -15.416136741638184
    8. 'stat' → logprob: -16.1661376953125
    9. 's' → logprob: -16.2911376953125
    10. ' property' → logprob: -16.9161376953125

Token 72: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09388294816017151
    2. '
' → logprob: -2.5938830375671387
    3. ' def' → logprob: -4.343883037567139
    4. '(' → logprob: -7.218883037567139
    5. '    
' → logprob: -7.718883037567139
    6. '   ' → logprob: -8.71888256072998
    7. '_def' → logprob: -9.71888256072998
    8. '<|end|>' → logprob: -9.71888256072998
    9. '\' → logprob: -9.84388256072998
    10. '('' → logprob: -9.96888256072998

Token 73: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017779255285859108
    2. ' def' → logprob: -4.392779350280762
    3. '
' → logprob: -5.267779350280762
    4. '_def' → logprob: -10.392779350280762
    5. '    
' → logprob: -10.642779350280762
    6. '(' → logprob: -11.642779350280762
    7. '(def' → logprob: -11.892779350280762
    8. '('' → logprob: -12.017779350280762
    9. '   ' → logprob: -12.142779350280762
    10. '  
' → logprob: -12.517779350280762

Token 74: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009725636919029057
    2. ' def' → logprob: -7.250972747802734
    3. '
' → logprob: -8.250972747802734
    4. '_def' → logprob: -14.000972747802734
    5. '    
' → logprob: -15.250972747802734
    6. '  
' → logprob: -15.750972747802734
    7. '   ' → logprob: -16.250972747802734
    8. '_' → logprob: -17.375972747802734
    9. ' 
' → logprob: -17.375972747802734
    10. ' ' → logprob: -17.500972747802734

Token 75: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6134640574455261
    2. ' _' → logprob: -1.613464117050171
    3. ' def' → logprob: -1.738464117050171
    4. 'def' → logprob: -2.863464117050171
    5. '_def' → logprob: -5.488463878631592
    6. '_to' → logprob: -5.863463878631592
    7. '_digits' → logprob: -6.238463878631592
    8. '_sort' → logprob: -6.488463878631592
    9. '_next' → logprob: -6.488463878631592
    10. ' sort' → logprob: -6.738463878631592

Token 76: 'all' (ID: 586)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.29924604296684265
    2. 'digits' → logprob: -2.799246072769165
    3. 'sort' → logprob: -2.924246072769165
    4. 'desc' → logprob: -2.924246072769165
    5. 'descending' → logprob: -3.174246072769165
    6. 'get' → logprob: -4.299245834350586
    7. 'split' → logprob: -4.799245834350586
    8. 'asc' → logprob: -4.924245834350586
    9. 'arr' → logprob: -5.049245834350586
    10. 'int' → logprob: -5.049245834350586

Token 77: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.2029450684785843
    2. '_equal' → logprob: -1.8279451131820679
    3. '_same' → logprob: -4.327945232391357
    4. 'digits' → logprob: -5.202945232391357
    5. '_' → logprob: -6.202945232391357
    6. '_d' → logprob: -7.452945232391357
    7. '_chars' → logprob: -8.7029447555542
    8. '_unique' → logprob: -8.7029447555542
    9. 'equal' → logprob: -8.8279447555542
    10. 'Digits' → logprob: -8.8279447555542

Token 78: '_same' (ID: 83787)
  Prédit: '_equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.5428244471549988
    2. '_same' → logprob: -1.2928245067596436
    3. '_ident' → logprob: -2.6678245067596436
    4. '_are' → logprob: -3.0428245067596436
    5. '_' → logprob: -3.6678245067596436
    6. '_unique' → logprob: -7.2928242683410645
    7. '_the' → logprob: -7.6678242683410645
    8. '<|end|>' → logprob: -9.792824745178223
    9. '_equals' → logprob: -9.792824745178223
    10. 'same' → logprob: -9.917824745178223

Token 79: '(number' (ID: 32955)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08908265084028244
    2. '(number' → logprob: -2.464082717895508
    3. ' (' → logprob: -9.714082717895508
    4. '(num' → logprob: -10.839082717895508
    5. '("("' → logprob: -11.214082717895508
    6. '(numbers' → logprob: -11.339082717895508
    7. '(n' → logprob: -12.464082717895508
    8. '(token' → logprob: -12.589082717895508
    9. '(numero' → logprob: -12.714082717895508
    10. '(s' → logprob: -13.089082717895508

Token 80: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008446848951280117
    2. '(' → logprob: -5.88344669342041
    3. ')(' → logprob: -6.00844669342041
    4. '<|end|>' → logprob: -6.75844669342041
    5. ')==' → logprob: -8.13344669342041
    6. '):' → logprob: -8.13344669342041
    7. ')>' → logprob: -8.13344669342041
    8. ')(
' → logprob: -8.50844669342041
    9. '<|end|>' → logprob: -8.63344669342041
    10. ':' → logprob: -9.13344669342041

Token 81: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.2168414443731308
    2. 'str' → logprob: -1.716841459274292
    3. ')' → logprob: -4.716841220855713
    4. ' ' → logprob: -5.966841220855713
    5. ':str' → logprob: -6.466841220855713
    6. 's' → logprob: -6.716841220855713
    7. ' )' → logprob: -8.591841697692871
    8. ' s' → logprob: -8.591841697692871
    9. '  ' → logprob: -8.841841697692871
    10. ' ' → logprob: -9.466841697692871

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1433333307504654
    2. '):' → logprob: -2.0183334350585938
    3. ' )' → logprob: -8.018333435058594
    4. ' ):' → logprob: -8.143333435058594
    5. '   ' → logprob: -10.893333435058594
    6. '):
' → logprob: -11.518333435058594
    7. '():' → logprob: -12.893333435058594
    8. ':' → logprob: -13.768333435058594
    9. ')=' → logprob: -14.018333435058594
    10. ')>' → logprob: -14.143333435058594

Token 83: ' ->' (ID: 2747)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3582487404346466
    2. ':' → logprob: -1.2332487106323242
    3. '():' → logprob: -5.108248710632324
    4. ' :' → logprob: -6.983248710632324
    5. '(
' → logprob: -7.733248710632324
    6. ' ->' → logprob: -7.733248710632324
    7. ':return' → logprob: -8.108248710632324
    8. ')' → logprob: -8.233248710632324
    9. ' (' → logprob: -8.233248710632324
    10. '):' → logprob: -8.233248710632324

Token 84: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.386595219373703
    2. ' ' → logprob: -1.3865952491760254
    3. 'bool' → logprob: -3.1365952491760254
    4. ' True' → logprob: -4.136595249176025
    5. 'True' → logprob: -5.511595249176025
    6. '<|end|>' → logprob: -6.511595249176025
    7. ' ->' → logprob: -7.261595249176025
    8. ' (' → logprob: -7.261595249176025
    9. ' str' → logprob: -7.511595249176025
    10. '  ' → logprob: -7.511595249176025

Token 85: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002371012233197689
    2. ':' → logprob: -6.127370834350586
    3. '(
' → logprob: -9.252370834350586
    4. '(self' → logprob: -10.252370834350586
    5. '():' → logprob: -10.877370834350586
    6. '   ' → logprob: -11.752370834350586
    7. '(s' → logprob: -12.252370834350586
    8. '):' → logprob: -12.502370834350586
    9. '(number' → logprob: -12.877370834350586
    10. '<|end|>' → logprob: -12.877370834350586

Token 86: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5794404745101929
    2. ' return' → logprob: -1.0794404745101929
    3. ' number' → logprob: -3.2044405937194824
    4. 'return' → logprob: -3.7044405937194824
    5. 'number' → logprob: -4.079440593719482
    6. '(' → logprob: -5.454440593719482
    7. '    ' → logprob: -5.579440593719482
    8. '(number' → logprob: -5.954440593719482
    9. ' (' → logprob: -6.204440593719482
    10. '       ' → logprob: -6.579440593719482

Token 87: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5997693538665771
    2. ' return' → logprob: -0.8497693538665771
    3. 'len' → logprob: -4.599769592285156
    4. '   ' → logprob: -5.099769592285156
    5. 'number' → logprob: -5.099769592285156
    6. ' number' → logprob: -7.224769592285156
    7. ' len' → logprob: -7.599769592285156
    8. ' all' → logprob: -10.224769592285156
    9. 'all' → logprob: -11.849769592285156
    10. '       ' → logprob: -12.099769592285156

Token 88: ' all' (ID: 722)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.26954764127731323
    2. 'len' → logprob: -2.144547700881958
    3. ' number' → logprob: -2.644547700881958
    4. 'number' → logprob: -3.519547700881958
    5. ' all' → logprob: -4.019547462463379
    6. 'all' → logprob: -7.644547462463379
    7. ' ' → logprob: -9.769547462463379
    8. '   ' → logprob: -13.269547462463379
    9. '	len' → logprob: -13.769547462463379
    10. '	number' → logprob: -13.894547462463379

Token 89: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.000636308453977108
    2. '(c' → logprob: -7.750636100769043
    3. '(' → logprob: -9.250636100769043
    4. '(ch' → logprob: -10.000636100769043
    5. '(x' → logprob: -10.375636100769043
    6. '(number' → logprob: -10.375636100769043
    7. '(char' → logprob: -14.250636100769043
    8. '(n' → logprob: -14.750636100769043
    9. '(num' → logprob: -15.250636100769043
    10. 'digit' → logprob: -15.750636100769043

Token 90: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06307776272296906
    2. '==' → logprob: -2.813077688217163
    3. 'igit' → logprob: -6.813077926635742
    4. 'ig' → logprob: -12.938077926635742
    5. '[' → logprob: -13.063077926635742
    6. ' ' → logprob: -13.188077926635742
    7. ' ==
' → logprob: -14.063077926635742
    8. 'igits' → logprob: -14.688077926635742
    9. '==(' → logprob: -14.813077926635742
    10. '==
' → logprob: -14.938077926635742

Token 91: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.3868772089481354
    2. ' number' → logprob: -1.136877179145813
    3. ' ' → logprob: -12.886877059936523
    4. '	number' → logprob: -13.261877059936523
    5. '[number' → logprob: -14.136877059936523
    6. 'n' → logprob: -14.511877059936523
    7. '(number' → logprob: -15.511877059936523
    8. '   ' → logprob: -16.386877059936523
    9. 'num' → logprob: -16.636877059936523
    10. '_number' → logprob: -16.761877059936523

Token 92: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[
' → logprob: -17.625
    3. ' [' → logprob: -17.875
    4. '0' → logprob: -19.25
    5. 's' → logprob: -19.875
    6. '[-' → logprob: -20.25
    7. '[i' → logprob: -20.375
    8. '```' → logprob: -20.375
    9. '1' → logprob: -20.875
    10. '   ' → logprob: -21.0

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.000007629394531
    3. '[' → logprob: -15.250007629394531
    4. '-' → logprob: -15.750007629394531
    5. '   ' → logprob: -15.937507629394531
    6. '
' → logprob: -16.06250762939453
    7. '۰' → logprob: -16.31250762939453
    8. '1' → logprob: -16.50000762939453
    9. 'o' → logprob: -16.93750762939453
    10. ')' → logprob: -17.50000762939453

Token 94: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08311928063631058
    2. ' for' → logprob: -3.2081193923950195
    3. ')' → logprob: -3.3331193923950195
    4. ' ]' → logprob: -6.4581193923950195
    5. 'for' → logprob: -6.7081193923950195
    6. '}' → logprob: -8.08311939239502
    7. '])' → logprob: -8.08311939239502
    8. ' )' → logprob: -9.45811939239502
    9. ' ' → logprob: -9.70811939239502
    10. '   ' → logprob: -10.08311939239502

Token 95: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.016542542725801468
    2. ')' → logprob: -4.641542434692383
    3. 'for' → logprob: -5.016542434692383
    4. ' )' → logprob: -10.016542434692383
    5. ' ' → logprob: -10.266542434692383
    6. '   ' → logprob: -10.766542434692383
    7. '    ' → logprob: -11.016542434692383
    8. '	for' → logprob: -11.891542434692383
    9. '       ' → logprob: -12.016542434692383
    10. '        ' → logprob: -13.391542434692383

Token 96: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.003642238210886717
    2. 'd' → logprob: -5.6286420822143555
    3. ' ' → logprob: -10.253642082214355
    4. '	d' → logprob: -12.378642082214355
    5. '<|end|>' → logprob: -13.878642082214355
    6. '_d' → logprob: -14.503642082214355
    7. '_' → logprob: -14.503642082214355
    8. '  ' → logprob: -14.753642082214355
    9. '<|end|>' → logprob: -16.003643035888672
    10. ' ' → logprob: -16.003643035888672

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008366934955120087
    2. 'in' → logprob: -5.00836706161499
    3. ' ' → logprob: -6.63336706161499
    4. 'd' → logprob: -8.508366584777832
    5. '<|end|>' → logprob: -10.133366584777832
    6. 'number' → logprob: -10.633366584777832
    7. ' d' → logprob: -11.008366584777832
    8. '  ' → logprob: -11.508366584777832
    9. ')' → logprob: -11.508366584777832
    10. '<|end|>' → logprob: -12.133366584777832

Token 98: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.20141558349132538
    2. ' number' → logprob: -1.7014155387878418
    3. ' ' → logprob: -13.826416015625
    4. '	number' → logprob: -14.076416015625
    5. '[number' → logprob: -15.451416015625
    6. '_number' → logprob: -16.076416015625
    7. '<|end|>' → logprob: -16.576416015625
    8. '(number' → logprob: -16.826416015625
    9. 'Number' → logprob: -16.951416015625
    10. '<|end|>' → logprob: -17.451416015625

Token 99: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. ' )' → logprob: -11.75001049041748
    3. ')
' → logprob: -13.87501049041748
    4. '   ' → logprob: -14.37501049041748
    5. '       ' → logprob: -15.00001049041748
    6. '<|end|>' → logprob: -15.50001049041748
    7. '))' → logprob: -16.625009536743164
    8. ')return' → logprob: -16.750009536743164
    9. ')

' → logprob: -16.750009536743164
    10. ')}' → logprob: -17.250009536743164

Token 100: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.19471749663352966
    2. '   ' → logprob: -2.0697174072265625
    3. '<|end|>' → logprob: -3.4447174072265625
    4. ' 
' → logprob: -4.6947174072265625
    5. '
' → logprob: -4.9447174072265625
    6. '  
' → logprob: -6.4447174072265625
    7. '<|end|>' → logprob: -8.069717407226562
    8. '   
' → logprob: -8.694717407226562
    9. '        
' → logprob: -8.694717407226562
    10. '    
    
' → logprob: -9.694717407226562

Token 101: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.7812905311584473
    2. '   ' → logprob: -0.9062905311584473
    3. '
' → logprob: -2.0312905311584473
    4. '  
' → logprob: -5.656290531158447
    5. ' 
' → logprob: -6.281290531158447
    6. '   
' → logprob: -7.656290531158447
    7. '        
' → logprob: -7.781290531158447
    8. '<|end|>' → logprob: -8.406290054321289
    9. '```' → logprob: -9.406290054321289
    10. ' ' → logprob: -9.406290054321289

Token 102: ' def' (ID: 1056)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.6121474504470825
    2. 'def' (adapté à ' def') → logprob: -1.3621474504470825
    3. '   ' → logprob: -1.6121474504470825
    4. '
' → logprob: -6.737147331237793
    5. ' def' → logprob: -7.612147331237793
    6. '  
' → logprob: -8.112147331237793
    7. '        
' → logprob: -9.612147331237793
    8. '<|end|>' → logprob: -9.612147331237793
    9. '   
' → logprob: -9.862147331237793
    10. ' 
' → logprob: -9.862147331237793

Token 103: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.13909851014614105
    2. '_' → logprob: -2.5140984058380127
    3. '_process' → logprob: -3.1390984058380127
    4. '_step' → logprob: -6.264098644256592
    5. '_continue' → logprob: -7.264098644256592
    6. ' process' → logprob: -7.514098644256592
    7. '_next' → logprob: -8.264098167419434
    8. '_run' → logprob: -8.264098167419434
    9. ' ' → logprob: -8.389098167419434
    10. '_generate' → logprob: -8.639098167419434

Token 104: 'digits' (ID: 135574)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.6853784918785095
    2. 'next' → logprob: -1.1853785514831543
    3. 'kap' → logprob: -2.4353785514831543
    4. 'get' → logprob: -3.9353785514831543
    5. 'perform' → logprob: -3.9353785514831543
    6. 'is' → logprob: -4.310378551483154
    7. 'calculate' → logprob: -4.435378551483154
    8. 'generate' → logprob: -4.685378551483154
    9. 'compute' → logprob: -4.685378551483154
    10. 'iterate' → logprob: -4.935378551483154

Token 105: '_to' (ID: 5089)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.03131651505827904
    2. '_lists' → logprob: -4.65631628036499
    3. '_counts' → logprob: -5.03131628036499
    4. '_sorted' → logprob: -5.15631628036499
    5. '_split' → logprob: -6.40631628036499
    6. '_array' → logprob: -6.65631628036499
    7. '_' → logprob: -6.78131628036499
    8. '_arr' → logprob: -7.28131628036499
    9. '_sequence' → logprob: -7.53131628036499
    10. '(self' → logprob: -7.90631628036499

Token 106: '_int' (ID: 12285)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.002933960175141692
    2. '_int' → logprob: -6.627933979034424
    3. '_sorted' → logprob: -7.002933979034424
    4. 'list' → logprob: -8.127933502197266
    5. '_lists' → logprob: -8.627933502197266
    6. '_numbers' → logprob: -9.877933502197266
    7. '_array' → logprob: -10.252933502197266
    8. '_digits' → logprob: -10.252933502197266
    9. '_str' → logprob: -10.502933502197266
    10. '_set' → logprob: -10.877933502197266

Token 107: '_list' (ID: 4162)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0038010270800441504
    2. 's' → logprob: -6.253800868988037
    3. '(s' → logprob: -7.128800868988037
    4. '_list' → logprob: -7.628800868988037
    5. '(' → logprob: -8.128801345825195
    6. 'self' → logprob: -9.003801345825195
    7. ' (' → logprob: -9.503801345825195
    8. 'list' → logprob: -9.878801345825195
    9. '[self' → logprob: -12.003801345825195
    10. 'List' → logprob: -12.128801345825195

Token 108: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008488174062222242
    2. '(' → logprob: -7.125848770141602
    3. ' (' → logprob: -10.375848770141602
    4. '(s' → logprob: -11.375848770141602
    5. 'self' → logprob: -14.375848770141602
    6. '(Self' → logprob: -14.375848770141602
    7. '(
' → logprob: -15.250848770141602
    8. '(number' → logprob: -16.0008487701416
    9. '   ' → logprob: -16.1258487701416
    10. '(sel' → logprob: -16.8758487701416

Token 109: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05312195047736168
    2. ')' → logprob: -3.303122043609619
    3. ',' → logprob: -5.178122043609619
    4. ' ):' → logprob: -5.428122043609619
    5. '):
' → logprob: -5.678122043609619
    6. 'self' → logprob: -7.053122043609619
    7. ' )' → logprob: -8.428121566772461
    8. '(self' → logprob: -8.678121566772461
    9. '   ' → logprob: -9.553121566772461
    10. '       ' → logprob: -9.803121566772461

Token 110: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.1080950498580933
    2. 'number' → logprob: -1.1080950498580933
    3. 'self' → logprob: -1.4830950498580933
    4. ' self' → logprob: -2.233095169067383
    5. ' s' → logprob: -6.483095169067383
    6. ' digits' → logprob: -6.733095169067383
    7. 'digits' → logprob: -6.733095169067383
    8. 's' → logprob: -6.983095169067383
    9. '   ' → logprob: -7.983095169067383
    10. '       ' → logprob: -9.483095169067383

Token 111: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6696260571479797
    2. ':' → logprob: -0.7946260571479797
    3. ')' → logprob: -3.669625997543335
    4. '   ' → logprob: -5.419626235961914
    5. '):
' → logprob: -6.044626235961914
    6. '(self' → logprob: -6.294626235961914
    7. '       ' → logprob: -7.169626235961914
    8. ' ' → logprob: -7.794626235961914
    9. '(' → logprob: -8.294626235961914
    10. 'self' → logprob: -8.669626235961914

Token 112: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.2839535176753998
    2. 'str' → logprob: -1.4089535474777222
    3. ')' → logprob: -6.533953666687012
    4. ':str' → logprob: -7.408953666687012
    5. ' ' → logprob: -8.408953666687012
    6. '   ' → logprob: -8.533953666687012
    7. '[str' → logprob: -8.908953666687012
    8. ':' → logprob: -10.283953666687012
    9. 's' → logprob: -10.658953666687012
    10. ' )' → logprob: -10.783953666687012

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4754795432090759
    2. '):' → logprob: -0.9754795432090759
    3. '):
' → logprob: -6.975479602813721
    4. '   ' → logprob: -8.975479125976562
    5. ' ):' → logprob: -8.975479125976562
    6. ' )' → logprob: -9.100479125976562
    7. ':' → logprob: -9.475479125976562
    8. ')->' → logprob: -11.100479125976562
    9. '):
' → logprob: -12.100479125976562
    10. '       ' → logprob: -13.350479125976562

Token 114: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009282566024921834
    2. ' :' → logprob: -7.3759284019470215
    3. ' ->' → logprob: -9.125927925109863
    4. '):' → logprob: -9.875927925109863
    5. '->' → logprob: -10.250927925109863
    6. ':return' → logprob: -10.375927925109863
    7. '   ' → logprob: -10.750927925109863
    8. '():' → logprob: -11.000927925109863
    9. '       ' → logprob: -11.000927925109863
    10. ':
' → logprob: -12.000927925109863

Token 115: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.2596278488636017
    2. '[' → logprob: -2.2596278190612793
    3. ' list' → logprob: -2.6346278190612793
    4. '[list' → logprob: -3.3846278190612793
    5. '[int' → logprob: -4.634627819061279
    6. '[List' → logprob: -5.009627819061279
    7. 'list' → logprob: -6.384627819061279
    8. '[str' → logprob: -8.134628295898438
    9. 'List' → logprob: -10.384628295898438
    10. ' [
' → logprob: -10.634628295898438

Token 116: '[int' (ID: 40124)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21191149950027466
    2. '[' → logprob: -2.08691143989563
    3. '[int' → logprob: -2.83691143989563
    4. '(' → logprob: -6.211911678314209
    5. '   ' → logprob: -6.461911678314209
    6. ':
' → logprob: -6.586911678314209
    7. '[str' → logprob: -6.836911678314209
    8. '       ' → logprob: -7.336911678314209
    9. '(int' → logprob: -7.336911678314209
    10. '):' → logprob: -8.08691120147705

Token 117: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.000573763158172369
    2. ']:
' → logprob: -8.375574111938477
    3. ']' → logprob: -8.625574111938477
    4. '):' → logprob: -8.750574111938477
    5. ']:
' → logprob: -13.375574111938477
    6. '>:' → logprob: -14.000574111938477
    7. ' ]' → logprob: -14.125574111938477
    8. ':' → logprob: -14.500574111938477
    9. ']>' → logprob: -14.625574111938477
    10. ']):' → logprob: -15.000574111938477

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011327129323035479
    2. '   ' → logprob: -7.876132488250732
    3. '<|end|>' → logprob: -8.00113296508789
    4. '[' → logprob: -8.37613296508789
    5. ' return' → logprob: -9.62613296508789
    6. '[]' → logprob: -10.87613296508789
    7. 'return' → logprob: -11.12613296508789
    8. '	' → logprob: -11.25113296508789
    9. '    ' → logprob: -11.37613296508789
    10. '      ' → logprob: -11.87613296508789

Token 119: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6367490887641907
    2. 'return' (adapté à ' return') → logprob: -0.8867490887641907
    3. ' return' → logprob: -2.886749029159546
    4. '   ' → logprob: -5.761749267578125
    5. '[' → logprob: -9.511749267578125
    6. '[]' → logprob: -12.386749267578125
    7. '	return' → logprob: -12.386749267578125
    8. '```' → logprob: -12.636749267578125
    9. '    ' → logprob: -13.511749267578125
    10. ' [' → logprob: -13.636749267578125

Token 120: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.13918708264827728
    2. '[list' → logprob: -2.1391870975494385
    3. '[int' → logprob: -4.639186859130859
    4. '[' → logprob: -6.139186859130859
    5. ' list' → logprob: -8.26418685913086
    6. '[List' → logprob: -9.76418685913086
    7. 'list' → logprob: -10.51418685913086
    8. '[Int' → logprob: -12.63918685913086
    9. '[str' → logprob: -12.63918685913086
    10. '[m' → logprob: -13.01418685913086

Token 121: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.700132997939363e-05
    2. ' int' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.500017166137695
    4. '(int' → logprob: -17.500017166137695
    5. '[int' → logprob: -18.000017166137695
    6. '  ' → logprob: -18.250017166137695
    7. '	int' → logprob: -18.250017166137695
    8. ':int' → logprob: -18.375017166137695
    9. '<int' → logprob: -18.375017166137695
    10. ' ' → logprob: -18.500017166137695

Token 122: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.001626502489671111
    2. '(' → logprob: -6.501626491546631
    3. '(c' → logprob: -9.876626968383789
    4. '(ch' → logprob: -10.126626968383789
    5. 'd' → logprob: -10.876626968383789
    6. '(char' → logprob: -11.876626968383789
    7. 'digit' → logprob: -13.376626968383789
    8. ']' → logprob: -13.626626968383789
    9. ' (' → logprob: -14.001626968383789
    10. '(n' → logprob: -14.126626968383789

Token 123: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3319124011322856e-05
    2. ' )' → logprob: -10.750022888183594
    3. ' for' → logprob: -13.875022888183594
    4. ')d' → logprob: -15.375022888183594
    5. 'for' → logprob: -15.625022888183594
    6. 'igit' → logprob: -16.375022888183594
    7. ')
' → logprob: -16.750022888183594
    8. '   ' → logprob: -16.750022888183594
    9. ' ' → logprob: -16.875022888183594
    10. 'd' → logprob: -17.000022888183594

Token 124: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.033813171088695526
    2. 'for' → logprob: -3.408813238143921
    3. ')' → logprob: -9.1588134765625
    4. ' in' → logprob: -9.9088134765625
    5. ' ' → logprob: -11.7838134765625
    6. '	for' → logprob: -13.5338134765625
    7. 'in' → logprob: -13.9088134765625
    8. 'd' → logprob: -14.2838134765625
    9. '   ' → logprob: -14.4088134765625
    10. ']' → logprob: -14.6588134765625

Token 125: ' d' (ID: 272)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.004475339315831661
    2. 'number' → logprob: -5.629475116729736
    3. ' d' → logprob: -7.129475116729736
    4. 'd' → logprob: -9.879475593566895
    5. ' ' → logprob: -11.004475593566895
    6. '	number' → logprob: -12.504475593566895
    7. '_number' → logprob: -14.504475593566895
    8. '<|end|>' → logprob: -15.129475593566895
    9. '(number' → logprob: -15.254475593566895
    10. '  ' → logprob: -15.379475593566895

Token 126: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8096309304237366
    2. ' d' → logprob: -1.4346308708190918
    3. 'd' → logprob: -1.5596308708190918
    4. ' number' → logprob: -2.684630870819092
    5. 'number' → logprob: -3.309630870819092
    6. 'in' → logprob: -6.809630870819092
    7. ' ' → logprob: -7.559630870819092
    8. '<|end|>' → logprob: -9.80963134765625
    9. '<|end|>' → logprob: -11.18463134765625
    10. '_d' → logprob: -11.30963134765625

Token 127: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.5759397745132446
    2. ' number' → logprob: -0.8259397745132446
    3. ' ' → logprob: -15.450940132141113
    4. '	number' → logprob: -15.700940132141113
    5. '(number' → logprob: -17.825939178466797
    6. '[number' → logprob: -18.450939178466797
    7. 'umber' → logprob: -18.575939178466797
    8. 'str' → logprob: -18.575939178466797
    9. '_number' → logprob: -19.200939178466797
    10. '   ' → logprob: -19.575939178466797

Token 128: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019305398454889655
    2. ' ]' → logprob: -6.2519307136535645
    3. ']
' → logprob: -14.126930236816406
    4. ')]' → logprob: -15.001930236816406
    5. '()]' → logprob: -15.126930236816406
    6. '       ' → logprob: -15.376930236816406
    7. '   ' → logprob: -15.376930236816406
    8. ' if' → logprob: -16.876930236816406
    9. ']

' → logprob: -17.251930236816406
    10. '}' → logprob: -17.501930236816406

Token 129: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.43026503920555115
    2. '<|end|>' → logprob: -2.180264949798584
    3. ' 
' → logprob: -2.305264949798584
    4. '   ' → logprob: -2.555264949798584
    5. '  
' → logprob: -3.680264949798584
    6. '
' → logprob: -3.680264949798584
    7. ' ' → logprob: -5.555264949798584
    8. '<|end|>' → logprob: -6.180264949798584
    9. '   
' → logprob: -6.930264949798584
    10. '```' → logprob: -8.305265426635742

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5838704705238342
    2. '    
' → logprob: -0.8338704705238342
    3. 'def' → logprob: -5.5838704109191895
    4. ' def' → logprob: -6.3338704109191895
    5. '
' → logprob: -6.4588704109191895
    6. ' 
' → logprob: -7.8338704109191895
    7. '        
' → logprob: -9.208870887756348
    8. '<|end|>' → logprob: -9.208870887756348
    9. '  
' → logprob: -9.333870887756348
    10. '```' → logprob: -10.458870887756348

Token 131: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0011852304451167583
    2. ' def' → logprob: -7.001185417175293
    3. '    
' → logprob: -8.876185417175293
    4. '   ' → logprob: -9.501185417175293
    5. ' 
' → logprob: -10.251185417175293
    6. ' ' → logprob: -11.626185417175293
    7. '
' → logprob: -11.751185417175293
    8. '  
' → logprob: -12.626185417175293
    9. '	def' → logprob: -13.501185417175293
    10. '        
' → logprob: -13.751185417175293

Token 132: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5169439911842346
    2. ' def' → logprob: -1.2669439315795898
    3. '_' → logprob: -2.14194393157959
    4. ' process' → logprob: -6.76694393157959
    5. '_process' → logprob: -6.76694393157959
    6. ' ' → logprob: -7.26694393157959
    7. 'def' → logprob: -7.26694393157959
    8. ' calculate' → logprob: -9.01694393157959
    9. '_step' → logprob: -9.26694393157959
    10. ' get' → logprob: -9.51694393157959

Token 133: 'int' (ID: 491)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.7575249671936035
    2. 'to' → logprob: -1.6325249671936035
    3. 'digits' → logprob: -1.6325249671936035
    4. 'int' → logprob: -2.8825249671936035
    5. 'get' → logprob: -4.2575249671936035
    6. 'sorted' → logprob: -4.6325249671936035
    7. 'step' → logprob: -4.8825249671936035
    8. 'kap' → logprob: -5.0075249671936035
    9. 'descending' → logprob: -5.0075249671936035
    10. 'number' → logprob: -5.2575249671936035

Token 134: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.03281787410378456
    2. '<|end|>' → logprob: -4.157817840576172
    3. '_to' → logprob: -4.907817840576172
    4. '_' → logprob: -5.782817840576172
    5. '_lists' → logprob: -5.782817840576172
    6. 's' → logprob: -6.157817840576172
    7. '[]' → logprob: -9.032817840576172
    8. '<|end|>' → logprob: -9.032817840576172
    9. ' _' → logprob: -9.157817840576172
    10. 'list' → logprob: -9.532817840576172

Token 135: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.002249580342322588
    2. '(self' → logprob: -7.377249717712402
    3. 'to' → logprob: -7.627249717712402
    4. '_' → logprob: -8.127249717712402
    5. '_sort' → logprob: -8.752249717712402
    6. 'To' → logprob: -8.877249717712402
    7. '_sorted' → logprob: -8.877249717712402
    8. '_from' → logprob: -9.752249717712402
    9. ' to' → logprob: -9.877249717712402
    10. 'self' → logprob: -10.002249717712402

Token 136: '_number' (ID: 11733)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0004510493890848011
    2. '_string' → logprob: -8.12545108795166
    3. '_' → logprob: -9.50045108795166
    4. 'str' → logprob: -9.62545108795166
    5. '_number' → logprob: -11.37545108795166
    6. '_list' → logprob: -14.25045108795166
    7. '```' → logprob: -14.75045108795166
    8. '_s' → logprob: -15.00045108795166
    9. 's' → logprob: -15.25045108795166
    10. ' ' → logprob: -15.75045108795166

Token 137: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016551809676457196
    2. '(' → logprob: -9.000165939331055
    3. 'self' → logprob: -10.375165939331055
    4. '(
' → logprob: -12.000165939331055
    5. '_string' → logprob: -13.750165939331055
    6. ' (' → logprob: -13.875165939331055
    7. '[self' → logprob: -14.750165939331055
    8. '(s' → logprob: -14.875165939331055
    9. '<|end|>' → logprob: -15.125165939331055
    10. 'string' → logprob: -15.125165939331055

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1846664845943451
    2. 'self' → logprob: -1.8096665143966675
    3. ')' → logprob: -6.059666633605957
    4. '(self' → logprob: -6.559666633605957
    5. '   ' → logprob: -8.309666633605957
    6. ')(' → logprob: -8.559666633605957
    7. '       ' → logprob: -8.809666633605957
    8. ' ,' → logprob: -9.059666633605957
    9. ' self' → logprob: -9.184666633605957
    10. ',self' → logprob: -9.809666633605957

Token 139: ' digits' (ID: 37806)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8708305358886719
    2. ' digits' → logprob: -1.6208305358886719
    3. 'digits' → logprob: -1.6208305358886719
    4. ' self' → logprob: -2.120830535888672
    5. 'numbers' → logprob: -3.995830535888672
    6. 'number' → logprob: -3.995830535888672
    7. ' numbers' → logprob: -4.995830535888672
    8. 'ints' → logprob: -5.120830535888672
    9. ' number' → logprob: -5.495830535888672
    10. 'nums' → logprob: -5.495830535888672

Token 140: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002264090348035097
    2. '):' → logprob: -6.127264022827148
    3. ' :' → logprob: -10.627264022827148
    4. ')' → logprob: -11.002264022827148
    5. '):
' → logprob: -11.252264022827148
    6. ':list' → logprob: -11.377264022827148
    7. '_:' → logprob: -12.752264022827148
    8. '   ' → logprob: -13.127264022827148
    9. ':str' → logprob: -13.252264022827148
    10. ']:' → logprob: -13.627264022827148

Token 141: ' list' (ID: 1562)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4847971796989441
    2. ' str' → logprob: -1.4847972393035889
    3. 'list' → logprob: -2.234797239303589
    4. ' list' → logprob: -3.234797239303589
    5. 'int' → logprob: -5.35979700088501
    6. 'List' → logprob: -5.35979700088501
    7. '[str' → logprob: -7.85979700088501
    8. ' ' → logprob: -7.98479700088501
    9. ' int' → logprob: -8.359797477722168
    10. '   ' → logprob: -8.359797477722168

Token 142: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.7729658540920354e-05
    2. '<int' → logprob: -11.500027656555176
    3. ']int' → logprob: -11.875027656555176
    4. ':int' → logprob: -12.625027656555176
    5. 'int' → logprob: -13.125027656555176
    6. ':' → logprob: -13.250027656555176
    7. '[' → logprob: -14.125027656555176
    8. ')' → logprob: -14.125027656555176
    9. '):' → logprob: -14.875027656555176
    10. '[
' → logprob: -15.000027656555176

Token 143: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0013697614194825292
    2. ')' → logprob: -6.626369953155518
    3. ' ])' → logprob: -10.25136947631836
    4. ']' → logprob: -13.12636947631836
    5. ']):' → logprob: -13.62636947631836
    6. ''])' → logprob: -13.87636947631836
    7. ']])' → logprob: -14.12636947631836
    8. ' ' → logprob: -14.50136947631836
    9. '])->' → logprob: -14.62636947631836
    10. '[int' → logprob: -14.87636947631836

Token 144: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.27016589045524597
    2. '->' → logprob: -1.6451659202575684
    3. ':' → logprob: -3.1451659202575684
    4. ')' → logprob: -7.395165920257568
    5. ')->' → logprob: -10.39516544342041
    6. '   ' → logprob: -10.64516544342041
    7. ':
' → logprob: -11.89516544342041
    8. ':str' → logprob: -12.02016544342041
    9. '->[' → logprob: -12.39516544342041
    10. '[str' → logprob: -12.39516544342041

Token 145: ' int' (ID: 677)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5760669112205505
    2. ' str' → logprob: -0.8260669112205505
    3. 'int' → logprob: -9.951066970825195
    4. '	str' → logprob: -10.826066970825195
    5. ' int' → logprob: -11.201066970825195
    6. '_str' → logprob: -11.201066970825195
    7. ' ' → logprob: -12.326066970825195
    8. 's' → logprob: -12.451066970825195
    9. '[str' → logprob: -12.451066970825195
    10. '```' → logprob: -12.576066970825195

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013041645288467407
    2. ':
' → logprob: -6.7513041496276855
    3. '):' → logprob: -9.626304626464844
    4. ':return' → logprob: -10.501304626464844
    5. '<|end|>' → logprob: -11.376304626464844
    6. ',' → logprob: -11.626304626464844
    7. ' :' → logprob: -11.751304626464844
    8. ':**' → logprob: -12.751304626464844
    9. '):
' → logprob: -12.751304626464844
    10. ')' → logprob: -13.876304626464844

Token 147: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17397573590278625
    2. ' return' → logprob: -2.173975706100464
    3. '        ' → logprob: -3.673975706100464
    4. '    ' → logprob: -4.923975944519043
    5. 'return' → logprob: -5.173975944519043
    6. ' ' → logprob: -5.423975944519043
    7. ' int' → logprob: -6.798975944519043
    8. 'int' → logprob: -7.298975944519043
    9. '   ' → logprob: -7.298975944519043
    10. '      ' → logprob: -8.548975944519043

Token 148: ' return' (ID: 622)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.017445435747504234
    2. ' int' → logprob: -4.2674455642700195
    3. 'return' (adapté à ' return') → logprob: -5.7674455642700195
    4. ' return' → logprob: -9.51744556427002
    5. '   ' → logprob: -9.64244556427002
    6. '       ' → logprob: -11.76744556427002
    7. '[int' → logprob: -13.76744556427002
    8. '(int' → logprob: -14.76744556427002
    9. '	int' → logprob: -14.76744556427002
    10. '    ' → logprob: -15.26744556427002

Token 149: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1602320373058319
    2. 'int' → logprob: -1.9102320671081543
    3. ' digits' → logprob: -13.160231590270996
    4. '	int' → logprob: -13.410231590270996
    5. '   ' → logprob: -13.660231590270996
    6. 'digits' → logprob: -13.785231590270996
    7. '(int' → logprob: -14.410231590270996
    8. ' ' → logprob: -14.535231590270996
    9. '<int' → logprob: -14.910231590270996
    10. 'sum' → logprob: -15.160231590270996

Token 150: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.12941515445709229
    2. '("' → logprob: -2.1294150352478027
    3. '(' → logprob: -6.004415035247803
    4. '''.' → logprob: -11.379415512084961
    5. '('').' → logprob: -13.004415512084961
    6. '"' → logprob: -14.254415512084961
    7. '(
' → logprob: -14.379415512084961
    8. '(""' → logprob: -15.129415512084961
    9. '(('' → logprob: -15.504415512084961
    10. '("").' → logprob: -15.629415512084961

Token 151: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.09203704446554184
    2. '"' → logprob: -2.5920369625091553
    3. '''.' → logprob: -4.342037200927734
    4. '""' → logprob: -10.717037200927734
    5. '").' → logprob: -11.342037200927734
    6. ' "".' → logprob: -12.092037200927734
    7. ''.' → logprob: -12.217037200927734
    8. '```' → logprob: -13.467037200927734
    9. '")' → logprob: -13.842037200927734
    10. '{}.' → logprob: -14.092037200927734

Token 152: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -8.65707261255011e-06
    2. ' join' → logprob: -11.750008583068848
    3. ' ' → logprob: -15.750008583068848
    4. '''.' → logprob: -15.750008583068848
    5. '.' → logprob: -16.000009536743164
    6. '.join' → logprob: -16.250009536743164
    7. 'jo' → logprob: -17.375009536743164
    8. 'j' → logprob: -17.500009536743164
    9. '(join' → logprob: -17.625009536743164
    10. '```' → logprob: -17.750009536743164

Token 153: '(str' (ID: 7946)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.20625624060630798
    2. '[str' → logprob: -2.206256151199341
    3. '(str' → logprob: -2.706256151199341
    4. ' str' → logprob: -5.20625638961792
    5. 'map' → logprob: -5.70625638961792
    6. '(map' → logprob: -7.45625638961792
    7. ' map' → logprob: -9.456255912780762
    8. '	str' → logprob: -11.956255912780762
    9. '[' → logprob: -12.581255912780762
    10. '[d' → logprob: -12.956255912780762

Token 154: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00033760786755010486
    2. 'd' → logprob: -8.000337600708008
    3. 'digit' → logprob: -14.125337600708008
    4. ' d' → logprob: -14.500337600708008
    5. '(' → logprob: -14.625337600708008
    6. ')d' → logprob: -15.125337600708008
    7. '	d' → logprob: -15.875337600708008
    8. '[d' → logprob: -17.000337600708008
    9. '(
' → logprob: -17.375337600708008
    10. '(x' → logprob: -17.750337600708008

Token 155: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06203513219952583
    2. 'igit' → logprob: -2.812035083770752
    3. ')d' → logprob: -10.81203556060791
    4. 'ig' → logprob: -10.93703556060791
    5. 'igits' → logprob: -11.56203556060791
    6. 'i' → logprob: -11.68703556060791
    7. ' )' → logprob: -13.06203556060791
    8. ')i' → logprob: -13.43703556060791
    9. 'ight' → logprob: -13.93703556060791
    10. '))' → logprob: -13.93703556060791

Token 156: ' for' (ID: 395)
  Prédit: 'igit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.4750414490699768
    2. ')' → logprob: -1.350041389465332
    3. ' for' → logprob: -2.350041389465332
    4. 'igits' → logprob: -4.350041389465332
    5. 'for' → logprob: -5.725041389465332
    6. ' d' → logprob: -5.975041389465332
    7. 'it' → logprob: -6.600041389465332
    8. 'd' → logprob: -6.600041389465332
    9. ')d' → logprob: -7.600041389465332
    10. 'digit' → logprob: -7.725041389465332

Token 157: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0009118211455643177
    2. 'd' → logprob: -7.000911712646484
    3. '	d' → logprob: -15.750911712646484
    4. '_d' → logprob: -15.875911712646484
    5. ' ' → logprob: -16.625911712646484
    6. '<|end|>' → logprob: -17.000911712646484
    7. ')d' → logprob: -18.625911712646484
    8. ' digits' → logprob: -18.625911712646484
    9. '  ' → logprob: -18.750911712646484
    10. ' in' → logprob: -18.875911712646484

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.315676748752594
    2. 'igits' → logprob: -1.3156766891479492
    3. 'in' → logprob: -6.940676689147949
    4. 'igit' → logprob: -7.565676689147949
    5. 's' → logprob: -7.940676689147949
    6. ' digits' → logprob: -8.44067668914795
    7. 'digits' → logprob: -8.81567668914795
    8. ' ' → logprob: -9.56567668914795
    9. 'igital' → logprob: -9.69067668914795
    10. ' d' → logprob: -11.44067668914795

Token 159: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.10022414475679398
    2. 'digits' → logprob: -2.350224256515503
    3. 'igits' → logprob: -11.350224494934082
    4. ' ' → logprob: -12.725224494934082
    5. '_digits' → logprob: -13.725224494934082
    6. 'd' → logprob: -13.975224494934082
    7. 'Digits' → logprob: -14.725224494934082
    8. '  ' → logprob: -16.475223541259766
    9. '   ' → logprob: -16.600223541259766
    10. '	d' → logprob: -16.725223541259766

Token 160: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00010235115041723475
    2. ' ))' → logprob: -9.875102043151855
    3. '))
' → logprob: -10.500102043151855
    4. ')))' → logprob: -10.875102043151855
    5. '()))' → logprob: -13.875102043151855
    6. ')' → logprob: -14.000102043151855
    7. '));' → logprob: -14.250102043151855
    8. '   ' → logprob: -14.250102043151855
    9. '       ' → logprob: -15.500102043151855
    10. '))

' → logprob: -15.625102043151855

Token 161: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.012427115812897682
    2. '   ' → logprob: -4.76242733001709
    3. '  
' → logprob: -6.88742733001709
    4. '
' → logprob: -6.88742733001709
    5. ' 
' → logprob: -7.01242733001709
    6. '   
' → logprob: -7.63742733001709
    7. '<|end|>' → logprob: -8.63742733001709
    8. '     
' → logprob: -9.76242733001709
    9. '        
' → logprob: -9.88742733001709
    10. 'def' → logprob: -11.13742733001709

Token 162: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.11911342293024063
    2. '   ' → logprob: -2.2441134452819824
    3. '  
' → logprob: -6.119113445281982
    4. ' 
' → logprob: -6.244113445281982
    5. 'def' → logprob: -7.119113445281982
    6. '
' → logprob: -7.494113445281982
    7. '   
' → logprob: -7.869113445281982
    8. ' def' → logprob: -8.994112968444824
    9. ' ' → logprob: -9.369112968444824
    10. '        
' → logprob: -9.994112968444824

Token 163: ' def' (ID: 1056)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.38224855065345764
    2. 'def' (adapté à ' def') → logprob: -1.5072485208511353
    3. '   ' → logprob: -2.382248640060425
    4. '
' → logprob: -6.132248401641846
    5. ' def' → logprob: -6.632248401641846
    6. ' 
' → logprob: -9.132248878479004
    7. '  
' → logprob: -9.257248878479004
    8. '   
' → logprob: -9.507248878479004
    9. '        
' → logprob: -11.007248878479004
    10. ' ' → logprob: -11.882248878479004

Token 164: ' _' (ID: 1175)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.14994654059410095
    2. ' process' → logprob: -2.899946451187134
    3. ' _' → logprob: -3.024946451187134
    4. '_' → logprob: -3.774946451187134
    5. ' step' → logprob: -5.524946689605713
    6. ' calculate' → logprob: -5.649946689605713
    7. '_process' → logprob: -6.399946689605713
    8. ' run' → logprob: -7.149946689605713
    9. ' iterate' → logprob: -7.649946689605713
    10. 'def' → logprob: -8.024946212768555

Token 165: 'step' (ID: 17509)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.4987304210662842
    2. 'kap' → logprob: -1.6237304210662842
    3. 'sort' → logprob: -1.7487304210662842
    4. 'to' → logprob: -1.9987304210662842
    5. 'step' → logprob: -2.373730421066284
    6. 'digits' → logprob: -3.123730421066284
    7. 'next' → logprob: -3.248730421066284
    8. 'sorted' → logprob: -3.623730421066284
    9. 'perform' → logprob: -4.748730659484863
    10. 'apply' → logprob: -4.748730659484863

Token 166: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07970359176397324
    2. '(' → logprob: -2.5797035694122314
    3. '()' → logprob: -7.7047038078308105
    4. '(
' → logprob: -9.329703330993652
    5. '(s' → logprob: -9.579703330993652
    6. ' (' → logprob: -9.954703330993652
    7. '_(' → logprob: -10.204703330993652
    8. '()(' → logprob: -10.204703330993652
    9. '_' → logprob: -11.079703330993652
    10. 'self' → logprob: -11.704703330993652

Token 167: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004003365058451891
    2. '):' → logprob: -5.629003524780273
    3. ' ,' → logprob: -8.754003524780273
    4. 'self' → logprob: -9.254003524780273
    5. ')' → logprob: -9.379003524780273
    6. '):
' → logprob: -11.879003524780273
    7. '   ' → logprob: -11.879003524780273
    8. ',_' → logprob: -12.004003524780273
    9. ')(' → logprob: -12.379003524780273
    10. '_,' → logprob: -12.379003524780273

Token 168: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1728293001651764
    2. '(self' → logprob: -1.922829270362854
    3. '   ' → logprob: -5.9228291511535645
    4. '       ' → logprob: -5.9228291511535645
    5. ' ->' → logprob: -6.2978291511535645
    6. ':
' → logprob: -6.5478291511535645
    7. '->' → logprob: -7.0478291511535645
    8. 'self' → logprob: -7.2978291511535645
    9. '):' → logprob: -7.7978291511535645
    10. ':self' → logprob: -7.9228291511535645

Token 169: ' None' (ID: 4662)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3213055431842804
    2. ' int' → logprob: -2.071305513381958
    3. ' None' → logprob: -2.696305513381958
    4. 'None' → logprob: -2.946305513381958
    5. ' str' → logprob: -4.321305751800537
    6. 'str' → logprob: -4.571305751800537
    7. '   ' → logprob: -5.696305751800537
    8. ' Optional' → logprob: -7.321305751800537
    9. 'Optional' → logprob: -7.571305751800537
    10. 'list' → logprob: -8.571305274963379

Token 170: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006040188949555159
    2. ':
' → logprob: -5.131040096282959
    3. '       ' → logprob: -9.756040573120117
    4. '):' → logprob: -10.881040573120117
    5. '():' → logprob: -11.131040573120117
    6. '):
' → logprob: -11.631040573120117
    7. '   ' → logprob: -12.631040573120117
    8. ',' → logprob: -13.006040573120117
    9. '():
' → logprob: -13.131040573120117
    10. ':

' → logprob: -14.131040573120117

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024779161904007196
    2. 'digits' → logprob: -6.127478122711182
    3. ' digits' → logprob: -9.002477645874023
    4. 'd' → logprob: -9.127477645874023
    5. 'number' → logprob: -10.502477645874023
    6. ' if' → logprob: -11.877477645874023
    7. '      ' → logprob: -12.377477645874023
    8. 'num' → logprob: -12.377477645874023
    9. 'numbers' → logprob: -12.627477645874023
    10. ' number' → logprob: -12.627477645874023

Token 172: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' (adapté à ' digits') → logprob: -0.024941395968198776
    2. '       ' → logprob: -4.024941444396973
    3. 'if' → logprob: -5.024941444396973
    4. ' digits' → logprob: -9.274941444396973
    5. ' if' → logprob: -10.274941444396973
    6. 'd' → logprob: -10.399941444396973
    7. '   ' → logprob: -11.524941444396973
    8. 'nums' → logprob: -12.274941444396973
    9. 'sorted' → logprob: -12.399941444396973
    10. '#' → logprob: -12.399941444396973

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693829834461212
    2. '=' → logprob: -2.1269383430480957
    3. ':' → logprob: -12.251937866210938
    4. '_list' → logprob: -13.001937866210938
    5. '<|end|>' → logprob: -14.501937866210938
    6. 's' → logprob: -14.626937866210938
    7. '   ' → logprob: -14.626937866210938
    8. '_' → logprob: -14.876937866210938
    9. '_lists' → logprob: -15.751937866210938
    10. '	' → logprob: -15.876937866210938

Token 174: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003929029684513807
    2. 'sorted' → logprob: -5.878929138183594
    3. ' self' → logprob: -6.878929138183594
    4. '[self' → logprob: -10.128929138183594
    5. '   ' → logprob: -10.253929138183594
    6. ' sorted' → logprob: -11.253929138183594
    7. '       ' → logprob: -13.003929138183594
    8. '(self' → logprob: -13.628929138183594
    9. '	self' → logprob: -14.128929138183594
    10. '[' → logprob: -14.503929138183594

Token 175: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -9.186122770188376e-05
    2. '_current' → logprob: -10.000091552734375
    3. '.current' → logprob: -10.500091552734375
    4. '_digits' → logprob: -11.375091552734375
    5. '.' → logprob: -12.375091552734375
    6. 'current' → logprob: -14.375091552734375
    7. ' .' → logprob: -14.375091552734375
    8. '   ' → logprob: -14.500091552734375
    9. '.d' → logprob: -14.750091552734375
    10. ' ' → logprob: -15.500091552734375

Token 176: 'digits' (ID: 135574)
  Prédit: 'digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -3.7697225252486533e-06
    2. '_digits' → logprob: -13.375003814697266
    3. ' digits' → logprob: -13.500003814697266
    4. 'int' → logprob: -14.750003814697266
    5. 'normalize' → logprob: -15.500003814697266
    6. 'step' → logprob: -17.250003814697266
    7. 'digit' → logprob: -17.625003814697266
    8. 'd' → logprob: -17.750003814697266
    9. 'Digits' → logprob: -17.875003814697266
    10. 'dig' → logprob: -17.875003814697266

Token 177: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.7968066206085496e-05
    2. 'to' → logprob: -10.625027656555176
    3. 'To' → logprob: -12.875027656555176
    4. '<|end|>' → logprob: -15.000027656555176
    5. '_TO' → logprob: -15.500027656555176
    6. ' to' → logprob: -15.625027656555176
    7. '-to' → logprob: -15.625027656555176
    8. 'tolist' → logprob: -17.500028610229492
    9. '[' → logprob: -17.750028610229492
    10. '<|end|>' → logprob: -18.250028610229492

Token 178: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.005970269441604614
    2. 'int' → logprob: -5.130970478057861
    3. '_list' → logprob: -11.505970001220703
    4. 'self' → logprob: -11.505970001220703
    5. 'number' → logprob: -12.130970001220703
    6. 'list' → logprob: -12.380970001220703
    7. ' int' → logprob: -12.630970001220703
    8. '_number' → logprob: -13.255970001220703
    9. '_str' → logprob: -13.380970001220703
    10. 'current' → logprob: -13.880970001220703

Token 179: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.320199877838604e-07
    2. 'list' → logprob: -15.5
    3. '_lists' → logprob: -16.875
    4. '_' → logprob: -17.375
    5. 'List' → logprob: -17.5
    6. '_LIST' → logprob: -18.0
    7. '[' → logprob: -18.875
    8. ' _' → logprob: -19.625
    9. ' list' → logprob: -20.0
    10. '_List' → logprob: -20.375

Token 180: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0067266179248690605
    2. '(' → logprob: -5.0067267417907715
    3. '(
' → logprob: -11.756726264953613
    4. '(s' → logprob: -13.506726264953613
    5. '(this' → logprob: -13.756726264953613
    6. ' (' → logprob: -14.631726264953613
    7. '()' → logprob: -15.631726264953613
    8. 'self' → logprob: -15.881726264953613
    9. '(

' → logprob: -16.38172721862793
    10. '((' → logprob: -16.75672721862793

Token 181: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.0019771684892475605
    2. 'current' → logprob: -6.25197696685791
    3. '.' → logprob: -11.12697696685791
    4. ' .' → logprob: -11.62697696685791
    5. '_current' → logprob: -12.12697696685791
    6. ' current' → logprob: -12.37697696685791
    7. 'urrent' → logprob: -12.50197696685791
    8. '	current' → logprob: -13.00197696685791
    9. ' ' → logprob: -13.25197696685791
    10. '   ' → logprob: -13.50197696685791

Token 182: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -13.625004768371582
    3. ' _' → logprob: -13.625004768371582
    4. ')' → logprob: -14.250004768371582
    5. 'number' → logprob: -14.250004768371582
    6. '_num' → logprob: -15.125004768371582
    7. '_n' → logprob: -15.375004768371582
    8. '_numbers' → logprob: -15.625004768371582
    9. ')_' → logprob: -15.875004768371582
    10. '_NUMBER' → logprob: -16.0000057220459

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133116364479065
    2. ')
' → logprob: -1.3133115768432617
    3. '       ' → logprob: -10.563311576843262
    4. ' )
' → logprob: -12.063311576843262
    5. ' )' → logprob: -12.438311576843262
    6. ')

' → logprob: -12.438311576843262
    7. '[::-' → logprob: -12.438311576843262
    8. '.sort' → logprob: -13.063311576843262
    9. 'sorted' → logprob: -13.563311576843262
    10. ')
' → logprob: -13.688311576843262

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017264433205127716
    2. 'digits' → logprob: -4.642264366149902
    3. 'sorted' → logprob: -6.017264366149902
    4. '        
' → logprob: -6.642264366149902
    5. '        ' → logprob: -6.767264366149902
    6. ' digits' → logprob: -7.142264366149902
    7. ' sorted' → logprob: -8.017264366149902
    8. '_sorted' → logprob: -8.142264366149902
    9. ',' → logprob: -8.517264366149902
    10. 'd' → logprob: -8.892264366149902

Token 185: ' digits' (ID: 37806)
  Prédit: 'asc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -0.5551426410675049
    2. 'digits' (adapté à ' digits') → logprob: -1.0551426410675049
    3. 'ascending' → logprob: -2.680142641067505
    4. 'desc' → logprob: -5.680142402648926
    5. 'descending' → logprob: -5.930142402648926
    6. 'sorted' → logprob: -6.430142402648926
    7. '   ' → logprob: -7.305142402648926
    8. ' asc' → logprob: -7.930142402648926
    9. ' digits' → logprob: -8.555142402648926
    10. '       ' → logprob: -9.180142402648926

Token 186: '_sorted' (ID: 104993)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.601039469242096
    2. '_sorted' → logprob: -0.851039469242096
    3. '=' → logprob: -4.101039409637451
    4. '_' → logprob: -5.726039409637451
    5. '.' → logprob: -6.851039409637451
    6. '_desc' → logprob: -6.976039409637451
    7. '_sort' → logprob: -7.101039409637451
    8. 'sorted' → logprob: -7.476039409637451
    9. ' =' → logprob: -7.726039409637451
    10. '_up' → logprob: -7.976039409637451

Token 187: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06047976762056351
    2. '_desc' → logprob: -3.5604798793792725
    3. ' =' → logprob: -4.185479640960693
    4. '=' → logprob: -4.310479640960693
    5. '_up' → logprob: -7.185479640960693
    6. '_=' → logprob: -8.185480117797852
    7. '_high' → logprob: -8.810480117797852
    8. 'asc' → logprob: -9.310480117797852
    9. '_sorted' → logprob: -9.560480117797852
    10. '(' → logprob: -10.185480117797852

Token 188: 'asc' (ID: 7400)
  Prédit: 'asc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -0.002782173454761505
    2. '=' → logprob: -6.252782344818115
    3. 'desc' → logprob: -7.127782344818115
    4. 'ascending' → logprob: -10.627781867980957
    5. ' =' → logprob: -10.877781867980957
    6. 'descending' → logprob: -13.002781867980957
    7. '_desc' → logprob: -13.127781867980957
    8. '_' → logprob: -14.127781867980957
    9. ' asc' → logprob: -14.627781867980957
    10. 'up' → logprob: -14.752781867980957

Token 189: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001513196504674852
    2. ' =' → logprob: -6.5015130043029785
    3. ' ' → logprob: -12.751513481140137
    4. '=[]' → logprob: -12.876513481140137
    5. 'end' → logprob: -13.126513481140137
    6. 'ending' → logprob: -13.876513481140137
    7. '=
' → logprob: -14.126513481140137
    8. '=end' → logprob: -14.251513481140137
    9. ',' → logprob: -15.501513481140137
    10. '   ' → logprob: -15.626513481140137

Token 190: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.6931549310684204
    2. 'sorted' → logprob: -0.6931549310684204
    3. '   ' → logprob: -12.818155288696289
    4. '(sorted' → logprob: -12.818155288696289
    5. ' ' → logprob: -13.693155288696289
    6. '.sorted' → logprob: -15.068155288696289
    7. 'sort' → logprob: -15.193155288696289
    8. '  ' → logprob: -15.568155288696289
    9. 's' → logprob: -15.568155288696289
    10. ' ' → logprob: -16.44315528869629

Token 191: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.9795445849886164e-05
    2. '(' → logprob: -9.875060081481934
    3. 'digits' → logprob: -12.000060081481934
    4. ' (' → logprob: -13.250060081481934
    5. ' digits' → logprob: -15.875060081481934
    6. '(
' → logprob: -16.625059127807617
    7. 'd' → logprob: -18.875059127807617
    8. ')' → logprob: -18.875059127807617
    9. '_digits' → logprob: -19.000059127807617
    10. ' ' → logprob: -19.000059127807617

Token 192: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0002557369298301637
    2. 'digits' → logprob: -8.875255584716797
    3. '(d' → logprob: -9.875255584716797
    4. 'igts' → logprob: -10.250255584716797
    5. '(' → logprob: -11.625255584716797
    6. ')' → logprob: -12.250255584716797
    7. 'ig' → logprob: -12.375255584716797
    8. ' digits' → logprob: -12.875255584716797
    9. '[' → logprob: -13.125255584716797
    10. 'its' → logprob: -13.250255584716797

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008298126980662346
    2. ')
' → logprob: -4.883297920227051
    3. ' )' → logprob: -7.383297920227051
    4. ' )
' → logprob: -9.63329792022705
    5. ')
' → logprob: -13.25829792022705
    6. ')

' → logprob: -13.88329792022705
    7. ' ' → logprob: -14.88329792022705
    8. ',' → logprob: -15.00829792022705
    9. '       ' → logprob: -15.00829792022705
    10. '   ' → logprob: -15.13329792022705

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29855260252952576
    2. ')' → logprob: -2.5485525131225586
    3. '
' → logprob: -2.5485525131225586
    4. 'digits' → logprob: -3.1735525131225586
    5. '<|end|>' → logprob: -3.2985525131225586
    6. '        
' → logprob: -4.548552513122559
    7. '  
' → logprob: -6.298552513122559
    8. ' digits' → logprob: -6.298552513122559
    9. ')
' → logprob: -6.673552513122559
    10. ',' → logprob: -6.923552513122559

Token 195: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' (adapté à ' digits') → logprob: -0.014350948855280876
    2. '       ' → logprob: -4.639350891113281
    3. ' digits' → logprob: -5.389350891113281
    4. '   ' → logprob: -12.014350891113281
    5. '        
' → logprob: -12.639350891113281
    6. '_digits' → logprob: -13.264350891113281
    7. ' ' → logprob: -13.389350891113281
    8. '
' → logprob: -13.764350891113281
    9. '      ' → logprob: -13.889350891113281
    10. 'd' → logprob: -14.014350891113281

Token 196: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -2.1888679839321412e-05
    2. 'sorted' → logprob: -11.000021934509277
    3. '_' → logprob: -12.750021934509277
    4. '_s' → logprob: -14.125021934509277
    5. 'Sorted' → logprob: -14.375021934509277
    6. 's' → logprob: -14.750021934509277
    7. '_desc' → logprob: -16.00002098083496
    8. '=' → logprob: -16.62502098083496
    9. '_scaled' → logprob: -16.75002098083496
    10. '```' → logprob: -17.12502098083496

Token 197: '_desc' (ID: 26683)
  Prédit: '_desc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_desc' → logprob: -0.007021780125796795
    2. '_' → logprob: -5.382021903991699
    3. '_des' → logprob: -6.382021903991699
    4. '_sorted' → logprob: -8.3820219039917
    5. '_dec' → logprob: -8.5070219039917
    6. 'desc' → logprob: -8.6320219039917
    7. '_d' → logprob: -10.7570219039917
    8. '_DESC' → logprob: -11.2570219039917
    9. ' =' → logprob: -11.6320219039917
    10. '(desc' → logprob: -12.0070219039917

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868718445301056
    2. '=' → logprob: -1.1368718147277832
    3. ' ' → logprob: -14.886872291564941
    4. '   ' → logprob: -15.761872291564941
    5. '       ' → logprob: -16.386871337890625
    6. '    ' → logprob: -16.386871337890625
    7. ')' → logprob: -16.761871337890625
    8. ' =
' → logprob: -16.886871337890625
    9. '        ' → logprob: -17.386871337890625
    10. '=
' → logprob: -17.386871337890625

Token 199: ' digits' (ID: 37806)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.20158515870571136
    2. ' sorted' → logprob: -1.7015851736068726
    3. 'list' → logprob: -9.076584815979004
    4. ' list' → logprob: -10.076584815979004
    5. 'digits' → logprob: -11.951584815979004
    6. '(sorted' → logprob: -12.451584815979004
    7. ' digits' → logprob: -12.826584815979004
    8. '   ' → logprob: -13.826584815979004
    9. ' ' → logprob: -14.201584815979004
    10. '.sorted' → logprob: -15.201584815979004

Token 200: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.46283671259880066
    2. 'sorted' → logprob: -1.087836742401123
    3. '[::-' → logprob: -3.587836742401123
    4. 'Sorted' → logprob: -6.212836742401123
    5. '=' → logprob: -6.337836742401123
    6. ')' → logprob: -7.962836742401123
    7. '   ' → logprob: -8.087836265563965
    8. 'orted' → logprob: -8.337836265563965
    9. ':' → logprob: -8.462836265563965
    10. '[' → logprob: -8.462836265563965

Token 201: '_' (ID: 62)
  Prédit: '_desc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_desc' → logprob: -0.5257279872894287
    2. 'desc' → logprob: -1.0257279872894287
    3. '[::-' → logprob: -4.025728225708008
    4. 'sorted' → logprob: -4.150728225708008
    5. '_' → logprob: -5.025728225708008
    6. '(desc' → logprob: -5.275728225708008
    7. 'asc' → logprob: -6.525728225708008
    8. '[' → logprob: -7.400728225708008
    9. '(sorted' → logprob: -7.900728225708008
    10. '(' → logprob: -7.900728225708008

Token 202: 'asc' (ID: 7400)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.00042567000491544604
    2. 'desc' → logprob: -8.500425338745117
    3. 'digits' → logprob: -8.750425338745117
    4. 'd' → logprob: -11.375425338745117
    5. '(sorted' → logprob: -11.375425338745117
    6. 'orted' → logprob: -11.875425338745117
    7. 'reverse' → logprob: -11.875425338745117
    8. 'sort' → logprob: -12.000425338745117
    9. ' sorted' → logprob: -12.250425338745117
    10. 'list' → logprob: -12.500425338745117

Token 203: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -12.250004768371582
    3. ' [' → logprob: -16.3750057220459
    4. '[:' → logprob: -18.2500057220459
    5. '   ' → logprob: -18.5000057220459
    6. '[-' → logprob: -19.1250057220459
    7. '[:]' → logprob: -19.2500057220459
    8. '[
' → logprob: -19.3750057220459
    9. '[:-' → logprob: -19.8750057220459
    10. '[:,' → logprob: -19.8750057220459

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01085940096527338
    2. '[' → logprob: -5.510859489440918
    3. 'copy' → logprob: -6.135859489440918
    4. ')' → logprob: -7.385859489440918
    5. ' ' → logprob: -8.010859489440918
    6. ']' → logprob: -8.135859489440918
    7. 's' → logprob: -8.135859489440918
    8. '])' → logprob: -8.260859489440918
    9. '[::-' → logprob: -8.260859489440918
    10. ')
' → logprob: -8.260859489440918

Token 205: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02282271347939968
    2. '       ' → logprob: -4.647822856903076
    3. '<|end|>' → logprob: -4.647822856903076
    4. ')
' → logprob: -6.397822856903076
    5. '
' → logprob: -7.022822856903076
    6. ']' → logprob: -7.522822856903076
    7. '<|end|>' → logprob: -8.772822380065918
    8. ' )' → logprob: -10.272822380065918
    9. ',' → logprob: -10.772822380065918
    10. '        
' → logprob: -11.147822380065918

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0338689424097538
    2. '
' → logprob: -3.6588690280914307
    3. '        
' → logprob: -5.533868789672852
    4. '-' → logprob: -7.033868789672852
    5. 'number' → logprob: -8.158868789672852
    6. ',' → logprob: -8.283868789672852
    7. '  
' → logprob: -8.658868789672852
    8. '#' → logprob: -8.658868789672852
    9. '+' → logprob: -8.908868789672852
    10. '    
' → logprob: -9.033868789672852

Token 207: ' L' (ID: 451)
  Prédit: 'asc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'asc' → logprob: -0.6916935443878174
    2. 'desc' → logprob: -1.4416935443878174
    3. 'big' → logprob: -2.5666935443878174
    4. 'large' → logprob: -2.9416935443878174
    5. 'high' → logprob: -3.0666935443878174
    6. '       ' → logprob: -3.4416935443878174
    7. 'max' → logprob: -4.191693305969238
    8. 'larg' → logprob: -4.191693305969238
    9. 'small' → logprob: -4.941693305969238
    10. 'num' → logprob: -5.066693305969238

Token 208: ' =' (ID: 314)
  Prédit: 'arge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arge' → logprob: -1.2182996273040771
    2. '       ' → logprob: -1.7182996273040771
    3. '   ' → logprob: -2.093299627304077
    4. 'argest' → logprob: -2.843299627304077
    5. 'arger' → logprob: -2.968299627304077
    6. 'ow' → logprob: -3.093299627304077
    7. ' =' → logprob: -3.093299627304077
    8. 'ower' → logprob: -3.343299627304077
    9. '           ' → logprob: -3.593299627304077
    10. '=' → logprob: -3.718299627304077

Token 209: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011096165515482426
    2. ' self' → logprob: -4.511096000671387
    3. 'int' → logprob: -10.761096000671387
    4. '[self' → logprob: -11.636096000671387
    5. 'digits' → logprob: -11.886096000671387
    6. '   ' → logprob: -12.261096000671387
    7. '	self' → logprob: -13.136096000671387
    8. '       ' → logprob: -13.511096000671387
    9. ' ' → logprob: -14.136096000671387
    10. 'elf' → logprob: -14.261096000671387

Token 210: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.2020991056924686e-05
    2. '_int' → logprob: -11.500032424926758
    3. '.' → logprob: -11.625032424926758
    4. 'int' → logprob: -12.500032424926758
    5. '.int' → logprob: -13.375032424926758
    6. ' _' → logprob: -13.750032424926758
    7. '_target' → logprob: -13.875032424926758
    8. '[int' → logprob: -14.000032424926758
    9. '_current' → logprob: -14.250032424926758
    10. ' .' → logprob: -14.250032424926758

Token 211: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.127333340875339e-06
    2. 'step' → logprob: -12.625003814697266
    3. 'digits' → logprob: -14.875003814697266
    4. ' int' → logprob: -15.875003814697266
    5. '_int' → logprob: -16.250003814697266
    6. '
' → logprob: -16.875003814697266
    7. '(int' → logprob: -17.500003814697266
    8. 'Int' → logprob: -17.875003814697266
    9. '[int' → logprob: -18.125003814697266
    10. '   ' → logprob: -18.250003814697266

Token 212: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.392202976712724e-06
    2. '_' → logprob: -12.250006675720215
    3. ' _' → logprob: -13.875006675720215
    4. '_lists' → logprob: -16.6250057220459
    5. '_lst' → logprob: -16.6250057220459
    6. 'list' → logprob: -16.7500057220459
    7. 'List' → logprob: -16.8750057220459
    8. '[' → logprob: -17.0000057220459
    9. '[_' → logprob: -17.1250057220459
    10. '_List' → logprob: -17.1250057220459

Token 213: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -7.896309739408025e-07
    2. 'To' → logprob: -14.125000953674316
    3. 'to' → logprob: -17.125
    4. '_t' → logprob: -19.375
    5. '_TO' → logprob: -19.75
    6. '_from' → logprob: -20.0
    7. ')_' → logprob: -20.5
    8. ' _' → logprob: -20.5
    9. '```' → logprob: -20.5
    10. '_' → logprob: -20.75

Token 214: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0003832445072475821
    2. 'number' → logprob: -7.875383377075195
    3. 'umber' → logprob: -13.125383377075195
    4. 'int' → logprob: -14.250383377075195
    5. ' number' → logprob: -16.000383377075195
    6. '_int' → logprob: -16.000383377075195
    7. 'Number' → logprob: -17.250383377075195
    8. '_' → logprob: -17.625383377075195
    9. '_NUMBER' → logprob: -18.125383377075195
    10. '_numbers' → logprob: -18.250383377075195

Token 215: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00011224505578866228
    2. '(' → logprob: -9.250112533569336
    3. '<|end|>' → logprob: -12.000112533569336
    4. 'digits' → logprob: -12.500112533569336
    5. ' (' → logprob: -13.000112533569336
    6. '(div' → logprob: -14.875112533569336
    7. '(dtype' → logprob: -14.875112533569336
    8. ' digits' → logprob: -15.250112533569336
    9. '(dict' → logprob: -15.375112533569336
    10. '([' → logprob: -15.375112533569336

Token 216: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.00013274075172375888
    2. 'ig' → logprob: -9.25013256072998
    3. 'igts' → logprob: -11.25013256072998
    4. 'digits' → logprob: -11.37513256072998
    5. 'its' → logprob: -11.87513256072998
    6. '[' → logprob: -12.37513256072998
    7. 'igit' → logprob: -15.12513256072998
    8. 'g' → logprob: -16.000133514404297
    9. 'i' → logprob: -16.125133514404297
    10. 'd' → logprob: -17.000133514404297

Token 217: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -1.5094070477061905e-05
    2. 'sorted' → logprob: -11.125015258789062
    3. 'Sorted' → logprob: -15.500015258789062
    4. ')' → logprob: -16.875015258789062
    5. '[' → logprob: -17.375015258789062
    6. '(sorted' → logprob: -18.875015258789062
    7. '_' → logprob: -18.875015258789062
    8. '
' → logprob: -18.875015258789062
    9. '```' → logprob: -18.875015258789062
    10. 's' → logprob: -19.125015258789062

Token 218: '_desc' (ID: 26683)
  Prédit: '_desc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_desc' → logprob: -0.06204655393958092
    2. 'desc' → logprob: -2.812046527862549
    3. '_' → logprob: -9.937047004699707
    4. 'Desc' → logprob: -12.062047004699707
    5. '
' → logprob: -12.187047004699707
    6. ')' → logprob: -12.687047004699707
    7. '	desc' → logprob: -12.937047004699707
    8. 'asc' → logprob: -13.187047004699707
    9. ' desc' → logprob: -13.437047004699707
    10. 'd' → logprob: -13.812047004699707

Token 219: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001287140417844057
    2. ')
' → logprob: -6.75128698348999
    3. '       ' → logprob: -9.376287460327148
    4. ' )' → logprob: -10.626287460327148
    5. '-' → logprob: -13.001287460327148
    6. '   ' → logprob: -13.626287460327148
    7. '
' → logprob: -14.001287460327148
    8. ' -' → logprob: -14.251287460327148
    9. ')
' → logprob: -14.251287460327148
    10. '        ' → logprob: -14.376287460327148

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1375550478696823
    2. '-' → logprob: -2.2625551223754883
    3. '
' → logprob: -4.387555122375488
    4. ' -' → logprob: -5.137555122375488
    5. '+' → logprob: -6.637555122375488
    6. 'subtract' → logprob: -6.887555122375488
    7. ')' → logprob: -7.262555122375488
    8. '-
' → logprob: -7.637555122375488
    9. '        ' → logprob: -8.012555122375488
    10. ' +' → logprob: -8.387555122375488

Token 221: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.0021350327879190445
    2. 'R' → logprob: -7.002134799957275
    3. ' S' → logprob: -7.127134799957275
    4. '       ' → logprob: -8.252135276794434
    5. '   ' → logprob: -9.002135276794434
    6. 'M' → logprob: -11.002135276794434
    7. 's' → logprob: -12.002135276794434
    8. 'G' → logprob: -13.002135276794434
    9. '    ' → logprob: -13.002135276794434
    10. ' R' → logprob: -13.377135276794434

Token 222: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687264919281006
    2. ' =' → logprob: -1.13687264919281
    3. ' ' → logprob: -14.011872291564941
    4. '_' → logprob: -14.886872291564941
    5. ')' → logprob: -15.261872291564941
    6. '	' → logprob: -16.136873245239258
    7. '   ' → logprob: -17.511873245239258
    8. ' ' → logprob: -17.636873245239258
    9. '=self' → logprob: -17.886873245239258
    10. '=}' → logprob: -18.011873245239258

Token 223: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12692894041538239
    2. 'self' → logprob: -2.1269290447235107
    3. '	self' → logprob: -15.37692928314209
    4. 'elf' → logprob: -15.37692928314209
    5. ' ' → logprob: -15.75192928314209
    6. '(self' → logprob: -15.87692928314209
    7. '_self' → logprob: -17.751928329467773
    8. '0' → logprob: -17.751928329467773
    9. '[self' → logprob: -17.876928329467773
    10. '=self' → logprob: -17.876928329467773

Token 224: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.09665048122406006
    2. '_int' → logprob: -2.7216506004333496
    3. ' _' → logprob: -3.8466506004333496
    4. '_' → logprob: -5.34665060043335
    5. '.int' → logprob: -9.596650123596191
    6. '.' → logprob: -9.846650123596191
    7. ' ' → logprob: -10.846650123596191
    8. ' .' → logprob: -11.096650123596191
    9. 'int' → logprob: -11.096650123596191
    10. '_INT' → logprob: -11.596650123596191

Token 225: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003820524725597352
    2. '_int' → logprob: -7.875381946563721
    3. ' int' → logprob: -14.000382423400879
    4. 'step' → logprob: -14.125382423400879
    5. '.int' → logprob: -16.000381469726562
    6. '_step' → logprob: -16.250381469726562
    7. '<int' → logprob: -17.125381469726562
    8. '[int' → logprob: -17.750381469726562
    9. 'ints' → logprob: -18.000381469726562
    10. '(int' → logprob: -18.250381469726562

Token 226: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.749814019713085e-06
    2. 'List' → logprob: -12.125006675720215
    3. 'list' → logprob: -13.625006675720215
    4. '[' → logprob: -17.75000762939453
    5. '_lists' → logprob: -17.75000762939453
    6. '[_' → logprob: -18.37500762939453
    7. '_LIST' → logprob: -18.37500762939453
    8. '_to' → logprob: -18.87500762939453
    9. '```' → logprob: -19.37500762939453
    10. 'self' → logprob: -19.62500762939453

Token 227: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.03521392197581e-05
    2. 'To' → logprob: -10.500030517578125
    3. 'to' → logprob: -13.000030517578125
    4. 'tolist' → logprob: -15.750030517578125
    5. 'digits' → logprob: -16.375030517578125
    6. '_TO' → logprob: -16.875030517578125
    7. '(d' → logprob: -16.875030517578125
    8. '_digits' → logprob: -17.000030517578125
    9. '_list' → logprob: -17.000030517578125
    10. 'd' → logprob: -17.750030517578125

Token 228: '_number' (ID: 11733)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.044558022171258926
    2. '_number' → logprob: -3.294558048248291
    3. 'Number' → logprob: -5.294558048248291
    4. 'umber' → logprob: -6.544558048248291
    5. 'digits' → logprob: -11.169557571411133
    6. 'int' → logprob: -11.294557571411133
    7. ' number' → logprob: -11.794557571411133
    8. '(d' → logprob: -14.044557571411133
    9. '(number' → logprob: -14.169557571411133
    10. 'numbers' → logprob: -14.169557571411133

Token 229: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.300083648762666e-05
    2. '(' → logprob: -9.875053405761719
    3. ' (' → logprob: -13.750053405761719
    4. 'digits' → logprob: -15.125053405761719
    5. '(
' → logprob: -17.37505340576172
    6. '(s' → logprob: -17.37505340576172
    7. '(sorted' → logprob: -17.87505340576172
    8. '(numbers' → logprob: -18.00005340576172
    9. ' digits' → logprob: -18.75005340576172
    10. ')' → logprob: -18.75005340576172

Token 230: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.001063536386936903
    2. 'digits' → logprob: -6.876063346862793
    3. 'its' → logprob: -10.876063346862793
    4. 'igts' → logprob: -11.751063346862793
    5. 'ig' → logprob: -13.001063346862793
    6. '_digits' → logprob: -14.376063346862793
    7. ' digits' → logprob: -14.376063346862793
    8. '(d' → logprob: -15.876063346862793
    9. 'igit' → logprob: -16.37606430053711
    10. 'igs' → logprob: -17.25106430053711

Token 231: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.00011248346709180623
    2. 'sorted' → logprob: -9.125112533569336
    3. 'Sorted' → logprob: -12.625112533569336
    4. '[' → logprob: -16.500112533569336
    5. 's' → logprob: -16.750112533569336
    6. '_s' → logprob: -17.250112533569336
    7. '(sorted' → logprob: -17.500112533569336
    8. ')' → logprob: -17.500112533569336
    9. '.sorted' → logprob: -18.000112533569336
    10. '_' → logprob: -18.250112533569336

Token 232: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10022187232971191
    2. 'asc' → logprob: -2.350221872329712
    3. '_sorted' → logprob: -12.350221633911133
    4. 'Asc' → logprob: -12.850221633911133
    5. ' asc' → logprob: -12.850221633911133
    6. '.asc' → logprob: -13.725221633911133
    7. '(' → logprob: -14.100221633911133
    8. '[' → logprob: -14.350221633911133
    9. 'sorted' → logprob: -14.725221633911133
    10. '_as' → logprob: -14.725221633911133

Token 233: 'asc' (ID: 7400)
  Prédit: 'asc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -6.749814019713085e-06
    2. '_' → logprob: -12.000006675720215
    3. 'asp' → logprob: -15.250006675720215
    4. ' asc' → logprob: -15.625006675720215
    5. '.asc' → logprob: -17.12500762939453
    6. '-' → logprob: -18.12500762939453
    7. 'asm' → logprob: -19.00000762939453
    8. 'esc' → logprob: -19.12500762939453
    9. 'acs' → logprob: -19.25000762939453
    10. 'Asc' → logprob: -19.25000762939453

Token 234: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005550591740757227
    2. ')
' → logprob: -7.500555038452148
    3. '))' → logprob: -13.875555038452148
    4. '       ' → logprob: -14.250555038452148
    5. ' )' → logprob: -15.500555038452148
    6. ')
' → logprob: -15.875555038452148
    7. '   ' → logprob: -16.75055503845215
    8. ')

' → logprob: -16.75055503845215
    9. '())' → logprob: -17.62555503845215
    10. ')`' → logprob: -17.87555503845215

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5733075141906738
    2. '
' → logprob: -1.0733075141906738
    3. 'self' → logprob: -2.573307514190674
    4. 'result' → logprob: -4.448307514190674
    5. ' self' → logprob: -5.573307514190674
    6. 'diff' → logprob: -7.448307514190674
    7. '        
' → logprob: -7.698307514190674
    8. 'n' → logprob: -7.698307514190674
    9. '
' → logprob: -8.323307037353516
    10. ' result' → logprob: -8.698307037353516

Token 236: ' next' (ID: 2613)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.33419767022132874
    2. 'result' → logprob: -1.8341976404190063
    3. '       ' → logprob: -2.584197759628296
    4. ' self' → logprob: -4.084197521209717
    5. 'n' → logprob: -4.209197521209717
    6. 'next' (adapté à ' next') → logprob: -5.334197521209717
    7. '
' → logprob: -5.459197521209717
    8. ' result' → logprob: -5.584197521209717
    9. 'R' → logprob: -6.209197521209717
    10. ' R' → logprob: -7.834197521209717

Token 237: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.1631089448928833
    2. '_value' → logprob: -1.9131089448928833
    3. '_' → logprob: -6.538108825683594
    4. ' =' → logprob: -7.663108825683594
    5. '_result' → logprob: -7.788108825683594
    6. '_num' → logprob: -8.413108825683594
    7. '_val' → logprob: -9.538108825683594
    8. '_current' → logprob: -9.663108825683594
    9. 'number' → logprob: -9.788108825683594
    10. '       ' → logprob: -10.038108825683594

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196824833750725
    2. '=' → logprob: -2.8119683265686035
    3. ' ' → logprob: -15.561967849731445
    4. '_' → logprob: -15.686967849731445
    5. ':' → logprob: -16.561967849731445
    6. '	' → logprob: -16.811967849731445
    7. ' ' → logprob: -16.811967849731445
    8. ' =
' → logprob: -17.436967849731445
    9. '    ' → logprob: -18.061967849731445
    10. ')' → logprob: -18.311967849731445

Token 239: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0158027745783329
    2. 'str' → logprob: -4.39080286026001
    3. ' L' → logprob: -5.76580286026001
    4. ' str' → logprob: -9.015802383422852
    5. '   ' → logprob: -10.515802383422852
    6. 'self' → logprob: -12.765802383422852
    7. ' ' → logprob: -13.765802383422852
    8. '  ' → logprob: -14.515802383422852
    9. 'f' → logprob: -15.140802383422852
    10. '	L' → logprob: -15.265802383422852

Token 240: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14268361032009125
    2. '-' → logprob: -2.017683506011963
    3. ' ' → logprob: -12.642683982849121
    4. '-S' → logprob: -13.267683982849121
    5. '   ' → logprob: -14.142683982849121
    6. ')' → logprob: -14.767683982849121
    7. ' S' → logprob: -14.892683982849121
    8. '=' → logprob: -15.517683982849121
    9. '
' → logprob: -15.517683982849121
    10. ' minus' → logprob: -15.642683982849121

Token 241: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.001170225441455841
    2. ' S' → logprob: -6.7511701583862305
    3. '       ' → logprob: -18.126171112060547
    4. '   ' → logprob: -18.626171112060547
    5. ' ' → logprob: -19.126171112060547
    6. 's' → logprob: -20.251171112060547
    7. '    ' → logprob: -20.376171112060547
    8. '  ' → logprob: -20.501171112060547
    9. '           ' → logprob: -21.501171112060547
    10. '	S' → logprob: -21.501171112060547

Token 242: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1483013778924942
    2. '       ' → logprob: -2.023301362991333
    3. 'self' → logprob: -5.648301601409912
    4. ' self' → logprob: -7.398301601409912
    5. '<|end|>' → logprob: -7.398301601409912
    6. '        
' → logprob: -8.523301124572754
    7. ' if' → logprob: -9.023301124572754
    8. '    
' → logprob: -9.148301124572754
    9. '  
' → logprob: -9.773301124572754
    10. ' 
' → logprob: -10.023301124572754

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05894266813993454
    2. '
' → logprob: -2.9339425563812256
    3. 'self' → logprob: -5.933942794799805
    4. '        
' → logprob: -8.058942794799805
    5. ' self' → logprob: -8.183942794799805
    6. '<|end|>' → logprob: -8.433942794799805
    7. '  
' → logprob: -9.183942794799805
    8. '    
' → logprob: -9.683942794799805
    9. ',' → logprob: -9.808942794799805
    10. '#' → logprob: -10.058942794799805

Token 244: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04116794094443321
    2. '       ' → logprob: -3.916167974472046
    3. ' self' → logprob: -3.916167974472046
    4. 'if' → logprob: -7.791167736053467
    5. '
' → logprob: -10.041168212890625
    6. ' if' → logprob: -10.541168212890625
    7. '        
' → logprob: -11.916168212890625
    8. '\' → logprob: -13.166168212890625
    9. '	self' → logprob: -13.666168212890625
    10. '(self' → logprob: -13.916168212890625

Token 245: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.00016516048344783485
    2. '.' → logprob: -8.750164985656738
    3. '.next' → logprob: -12.625164985656738
    4. 'current' → logprob: -12.750164985656738
    5. ' .' → logprob: -15.750164985656738
    6. '._' → logprob: -16.125165939331055
    7. '_current' → logprob: -17.125165939331055
    8. '	current' → logprob: -17.250165939331055
    9. '.previous' → logprob: -17.375165939331055
    10. '$current' → logprob: -17.500165939331055

Token 246: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -13.12500286102295
    3. '_num' → logprob: -15.25000286102295
    4. 'number' → logprob: -15.62500286102295
    5. '_current' → logprob: -15.87500286102295
    6. '_numbers' → logprob: -15.87500286102295
    7. '=' → logprob: -16.000003814697266
    8. '_code' → logprob: -16.250003814697266
    9. '_NUMBER' → logprob: -16.250003814697266
    10. ' _' → logprob: -16.500003814697266

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759396553039551
    2. ' =' → logprob: -0.8259396553039551
    3. ' ' → logprob: -16.575939178466797
    4. '=str' → logprob: -16.825939178466797
    5. 'str' → logprob: -17.575939178466797
    6. 's' → logprob: -18.450939178466797
    7. '_' → logprob: -18.450939178466797
    8. '.=' → logprob: -18.700939178466797
    9. '_=' → logprob: -18.825939178466797
    10. '＝' → logprob: -18.950939178466797

Token 248: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20322461426258087
    2. 'str' → logprob: -1.7032246589660645
    3. 'f' → logprob: -6.3282246589660645
    4. ' self' → logprob: -10.953224182128906
    5. ' str' → logprob: -12.578224182128906
    6. '"{' → logprob: -13.453224182128906
    7. 'format' → logprob: -13.828224182128906
    8. '(self' → logprob: -15.328224182128906
    9. ' f' → logprob: -15.453224182128906
    10. '   ' → logprob: -15.703224182128906

Token 249: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.3544423381972592e-05
    2. '_' → logprob: -11.87501335144043
    3. '.' → logprob: -13.25001335144043
    4. '_current' → logprob: -13.50001335144043
    5. '.current' → logprob: -13.62501335144043
    6. '.__' → logprob: -14.87501335144043
    7. 'current' → logprob: -15.62501335144043
    8. '0' → logprob: -15.62501335144043
    9. '.normalize' → logprob: -15.62501335144043
    10. '_.' → logprob: -15.87501335144043

Token 250: 'normalize' (ID: 62699)
  Prédit: 'normalize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -1.2664456789934775e-06
    2. '.normalize' → logprob: -14.250000953674316
    3. ' normalize' → logprob: -14.875000953674316
    4. 'Normalize' → logprob: -16.500001907348633
    5. 'format' → logprob: -16.750001907348633
    6. 'normalized' → logprob: -16.750001907348633
    7. '
' → logprob: -17.750001907348633
    8. '_normal' → logprob: -18.625001907348633
    9. 'norm' → logprob: -18.625001907348633
    10. '```' → logprob: -19.125001907348633

Token 251: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00022117885237094015
    2. 'str' → logprob: -9.000221252441406
    3. '(next' → logprob: -9.375221252441406
    4. '(f' → logprob: -11.375221252441406
    5. '(' → logprob: -13.750221252441406
    6. '[str' → logprob: -16.250221252441406
    7. 'f' → logprob: -16.500221252441406
    8. '(int' → logprob: -16.875221252441406
    9. 'next' → logprob: -17.000221252441406
    10. ' str' → logprob: -17.375221252441406

Token 252: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -1.306760805164231e-05
    2. 'next' → logprob: -11.25001335144043
    3. '[next' → logprob: -17.37501335144043
    4. '(' → logprob: -17.75001335144043
    5. ' next' → logprob: -18.00001335144043
    6. '	next' → logprob: -19.25001335144043
    7. ',next' → logprob: -19.62501335144043
    8. '(abs' → logprob: -21.62501335144043
    9. '(n' → logprob: -22.37501335144043
    10. ')' → logprob: -23.00001335144043

Token 253: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -2.236549335066229e-05
    2. 'number' → logprob: -10.750021934509277
    3. 'next' → logprob: -14.750021934509277
    4. '(next' → logprob: -15.625021934509277
    5. 'Number' → logprob: -15.750021934509277
    6. '_NUMBER' → logprob: -16.750022888183594
    7. '\' → logprob: -17.125022888183594
    8. '_' → logprob: -17.875022888183594
    9. ')' → logprob: -18.125022888183594
    10. 's' → logprob: -18.250022888183594

Token 254: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0020345149096101522
    2. ')' → logprob: -6.252034664154053
    3. '       ' → logprob: -9.502034187316895
    4. ')))' → logprob: -10.877034187316895
    5. '))
' → logprob: -11.627034187316895
    6. '   ' → logprob: -13.002034187316895
    7. ' ))' → logprob: -14.252034187316895
    8. ')
' → logprob: -15.377034187316895
    9. '           ' → logprob: -16.50203514099121
    10. '()))' → logprob: -17.62703514099121

Token 255: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.5215213894844055
    2. '<|end|>' → logprob: -1.5215213298797607
    3. '
' → logprob: -2.1465213298797607
    4. '   ' → logprob: -2.7715213298797607
    5. '  
' → logprob: -5.64652156829834
    6. '<|end|>' → logprob: -6.64652156829834
    7. ' 
' → logprob: -7.02152156829834
    8. '   
' → logprob: -7.27152156829834
    9. '        
' → logprob: -7.77152156829834
    10. '	
' → logprob: -8.27152156829834

Token 256: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000972921319771558
    2. '   ' → logprob: -7.000972747802734
    3. ' def' → logprob: -9.750972747802734
    4. '    
' → logprob: -13.250972747802734
    5. '	def' → logprob: -14.000972747802734
    6. '<|end|>' → logprob: -15.000972747802734
    7. ' ' → logprob: -16.375972747802734
    8. '```' → logprob: -17.000972747802734
    9. '@property' → logprob: -17.250972747802734
    10. '  ' → logprob: -17.375972747802734

Token 257: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00037681119283661246
    2. ' def' → logprob: -8.25037670135498
    3. '    
' → logprob: -9.37537670135498
    4. '   ' → logprob: -10.50037670135498
    5. '
' → logprob: -13.75037670135498
    6. '        
' → logprob: -14.37537670135498
    7. '	def' → logprob: -14.62537670135498
    8. ' ' → logprob: -14.75037670135498
    9. '  
' → logprob: -15.00037670135498
    10. '   
' → logprob: -16.375377655029297

Token 258: ' execute' (ID: 15792)
  Prédit: ' run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.06317558884620667
    2. ' def' → logprob: -3.813175678253174
    3. ' iterate' → logprob: -4.313175678253174
    4. ' process' → logprob: -4.563175678253174
    5. ' calculate' → logprob: -5.063175678253174
    6. ' get' → logprob: -6.188175678253174
    7. 'run' → logprob: -6.188175678253174
    8. ' iter' → logprob: -6.813175678253174
    9. ' solve' → logprob: -6.938175678253174
    10. ' step' → logprob: -7.313175678253174

Token 259: '_until' (ID: 115218)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02258475124835968
    2. '(' → logprob: -4.272584915161133
    3. '()' → logprob: -5.022584915161133
    4. '_step' → logprob: -6.897584915161133
    5. '_steps' → logprob: -7.397584915161133
    6. 'self' → logprob: -9.772584915161133
    7. '(step' → logprob: -10.397584915161133
    8. ' (' → logprob: -10.897584915161133
    9. '_self' → logprob: -11.522584915161133
    10. '()(' → logprob: -12.022584915161133

Token 260: '_target' (ID: 24705)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.551253616809845
    2. '_' → logprob: -1.5512535572052002
    3. 'self' → logprob: -2.5512535572052
    4. '(' → logprob: -2.5512535572052
    5. '(lambda' → logprob: -3.8012535572052
    6. '_target' → logprob: -3.9262535572052
    7. '_self' → logprob: -6.176253795623779
    8. '('_' → logprob: -6.301253795623779
    9. '_(' → logprob: -6.426253795623779
    10. '(_' → logprob: -6.676253795623779

Token 261: '_or' (ID: 15400)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008259449969045818
    2. '(' → logprob: -7.125825881958008
    3. ' (' → logprob: -10.875825881958008
    4. '()' → logprob: -14.000825881958008
    5. 'self' → logprob: -14.000825881958008
    6. '   ' → logprob: -15.375825881958008
    7. '_(' → logprob: -15.375825881958008
    8. '(
' → logprob: -16.500825881958008
    9. '       ' → logprob: -16.625825881958008
    10. '(s' → logprob: -17.000825881958008

Token 262: '_invalid' (ID: 71389)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.3866521120071411
    2. 'max' → logprob: -1.3866521120071411
    3. '_max' → logprob: -2.3866519927978516
    4. '_same' → logprob: -2.3866519927978516
    5. 'repeat' → logprob: -2.3866519927978516
    6. '_equal' → logprob: -3.2616519927978516
    7. '_all' → logprob: -3.2616519927978516
    8. '_repeat' → logprob: -3.5116519927978516
    9. 'same' → logprob: -3.7616519927978516
    10. '_' → logprob: -3.8866519927978516

Token 263: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009843561798334122
    2. '(' → logprob: -4.634843349456787
    3. '_(' → logprob: -10.384843826293945
    4. 'self' → logprob: -10.634843826293945
    5. ' (' → logprob: -11.134843826293945
    6. '_number' → logprob: -11.759843826293945
    7. '_' → logprob: -12.509843826293945
    8. 'number' → logprob: -13.259843826293945
    9. '(number' → logprob: -13.759843826293945
    10. '   ' → logprob: -14.134843826293945

Token 264: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.550411151489243e-05
    2. '(' → logprob: -10.500055313110352
    3. 'self' → logprob: -11.125055313110352
    4. ' (' → logprob: -11.375055313110352
    5. '   ' → logprob: -14.125055313110352
    6. '(
' → logprob: -15.500055313110352
    7. '       ' → logprob: -15.625055313110352
    8. 'def' → logprob: -15.750055313110352
    9. ')(' → logprob: -16.00005531311035
    10. '):
' → logprob: -16.12505531311035

Token 265: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.010046582669019699
    2. '(' → logprob: -4.635046482086182
    3. ' (' → logprob: -8.88504695892334
    4. 'self' → logprob: -9.76004695892334
    5. '(
' → logprob: -10.13504695892334
    6. '   ' → logprob: -10.76004695892334
    7. ':' → logprob: -11.38504695892334
    8. '       ' → logprob: -11.63504695892334
    9. '(Self' → logprob: -12.26004695892334
    10. ' self' → logprob: -12.76004695892334

Token 266: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.8329329490661621
    2. 'int' → logprob: -1.207932949066162
    3. 'None' → logprob: -1.582932949066162
    4. ' str' → logprob: -3.582932949066162
    5. ' None' → logprob: -4.082932949066162
    6. 'list' → logprob: -4.832932949066162
    7. ' int' → logprob: -5.082932949066162
    8. ' list' → logprob: -6.957932949066162
    9. 'Optional' → logprob: -7.332932949066162
    10. '   ' → logprob: -9.08293342590332

Token 267: ' |' (ID: 1022)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03722267597913742
    2. '(' → logprob: -4.287222862243652
    3. '       ' → logprob: -4.287222862243652
    4. '   ' → logprob: -5.412222862243652
    5. '(
' → logprob: -5.787222862243652
    6. ':' → logprob: -6.787222862243652
    7. ':
' → logprob: -8.287222862243652
    8. 'self' → logprob: -9.162222862243652
    9. '(Self' → logprob: -11.787222862243652
    10. '	self' → logprob: -12.037222862243652

Token 268: ' int' (ID: 677)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0005580356228165329
    2. ' None' → logprob: -7.500557899475098
    3. 'int' → logprob: -12.250557899475098
    4. '   ' → logprob: -15.750557899475098
    5. 'bool' → logprob: -16.000558853149414
    6. ' ' → logprob: -17.250558853149414
    7. '  ' → logprob: -18.500558853149414
    8. 'type' → logprob: -19.000558853149414
    9. 'none' → logprob: -19.500558853149414
    10. 'Exception' → logprob: -19.625558853149414

Token 269: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04913989081978798
    2. '(' → logprob: -3.299139976501465
    3. '(
' → logprob: -4.674139976501465
    4. '   ' → logprob: -6.674139976501465
    5. 'self' → logprob: -8.424139976501465
    6. ':' → logprob: -9.299139976501465
    7. ':
' → logprob: -9.799139976501465
    8. '       ' → logprob: -9.924139976501465
    9. ' (' → logprob: -11.424139976501465
    10. 'def' → logprob: -12.799139976501465

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023846338444855064
    2. '        
' → logprob: -9.375238418579102
    3. 'if' → logprob: -9.750238418579102
    4. ' if' → logprob: -10.125238418579102
    5. '
' → logprob: -10.750238418579102
    6. '   ' → logprob: -12.500238418579102
    7. '    
' → logprob: -12.500238418579102
    8. '```' → logprob: -12.625238418579102
    9. ':' → logprob: -12.750238418579102
    10. '	' → logprob: -13.000238418579102

Token 271: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07076532393693924
    2. '       ' → logprob: -3.070765256881714
    3. ' if' → logprob: -4.570765495300293
    4. 'visited' → logprob: -4.695765495300293
    5. 'seen' → logprob: -6.570765495300293
    6. 'number' → logprob: -7.445765495300293
    7. 'current' → logprob: -8.945765495300293
    8. ' visited' → logprob: -9.070765495300293
    9. 'num' → logprob: -10.070765495300293
    10. 'count' → logprob: -10.070765495300293

Token 272: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22541899979114532
    2. ' self' → logprob: -1.600419044494629
    3. ' not' → logprob: -13.225419044494629
    4. '   ' → logprob: -13.600419044494629
    5. '	self' → logprob: -13.975419044494629
    6. '(self' → logprob: -14.475419044494629
    7. 'not' → logprob: -14.600419044494629
    8. '       ' → logprob: -15.475419044494629
    9. 'Self' → logprob: -15.600419044494629
    10. '    ' → logprob: -15.850419044494629

Token 273: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00037859921576455235
    2. '_original' → logprob: -8.000378608703613
    3. '_current' → logprob: -10.500378608703613
    4. '.original' → logprob: -12.125378608703613
    5. '.current' → logprob: -12.375378608703613
    6. 'original' → logprob: -13.500378608703613
    7. '.' → logprob: -13.875378608703613
    8. 'current' → logprob: -13.875378608703613
    9. '.__' → logprob: -14.750378608703613
    10. '_orig' → logprob: -15.125378608703613

Token 274: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.0280383548888494e-06
    2. '_all' → logprob: -15.125000953674316
    3. ' all' → logprob: -15.750000953674316
    4. 'normalize' → logprob: -16.375001907348633
    5. 'original' → logprob: -16.750001907348633
    6. '
' → logprob: -17.125001907348633
    7. 'any' → logprob: -17.500001907348633
    8. '   ' → logprob: -17.500001907348633
    9. '	all' → logprob: -17.562501907348633
    10. ' ' → logprob: -17.625001907348633

Token 275: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -7.386147626675665e-05
    2. 'digits' → logprob: -10.250073432922363
    3. '(d' → logprob: -10.500073432922363
    4. '(' → logprob: -12.625073432922363
    5. '('_' → logprob: -13.500073432922363
    6. '(_' → logprob: -13.500073432922363
    7. 'Digits' → logprob: -13.875073432922363
    8. '_' → logprob: -14.000073432922363
    9. '_d' → logprob: -14.125073432922363
    10. '("_' → logprob: -14.500073432922363

Token 276: '_same' (ID: 83787)
  Prédit: '_same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_same' → logprob: -0.005396680440753698
    2. '(self' → logprob: -5.255396842956543
    3. '_self' → logprob: -9.130396842956543
    4. 'self' → logprob: -10.255396842956543
    5. 'same' → logprob: -11.005396842956543
    6. '(' → logprob: -13.505396842956543
    7. '_s' → logprob: -14.255396842956543
    8. '_safe' → logprob: -15.755396842956543
    9. 'Same' → logprob: -16.255395889282227
    10. '[self' → logprob: -16.505395889282227

Token 277: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -11.875007629394531
    3. ' (' → logprob: -14.250007629394531
    4. '(this' → logprob: -18.12500762939453
    5. '(
' → logprob: -18.25000762939453
    6. '(s' → logprob: -19.00000762939453
    7. 'self' → logprob: -20.00000762939453
    8. '((' → logprob: -20.12500762939453
    9. '()' → logprob: -21.87500762939453
    10. '(current' → logprob: -21.87500762939453

Token 278: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.0832282230257988
    2. '.original' → logprob: -2.58322811126709
    3. 'current' → logprob: -5.95822811126709
    4. '.' → logprob: -6.70822811126709
    5. 'original' → logprob: -7.83322811126709
    6. ' .' → logprob: -9.33322811126709
    7. ').' → logprob: -11.58322811126709
    8. ')' → logprob: -11.70822811126709
    9. '   ' → logprob: -12.58322811126709
    10. ' current' → logprob: -12.70822811126709

Token 279: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -4.36574100604048e-06
    2. 'number' → logprob: -12.875004768371582
    3. ')_' → logprob: -15.000004768371582
    4. ')' → logprob: -15.375004768371582
    5. '_string' → logprob: -15.375004768371582
    6. '_code' → logprob: -15.500004768371582
    7. '_' → logprob: -15.625004768371582
    8. '._' → logprob: -15.625004768371582
    9. ' _' → logprob: -16.125003814697266
    10. 'Number' → logprob: -16.250003814697266

Token 280: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12710249423980713
    2. '):
' → logprob: -2.1271023750305176
    3. ')' → logprob: -8.752102851867676
    4. ' ):' → logprob: -11.877102851867676
    5. '       ' → logprob: -12.377102851867676
    6. '):
' → logprob: -13.377102851867676
    7. '   ' → logprob: -13.502102851867676
    8. ' ):
' → logprob: -14.002102851867676
    9. ':' → logprob: -14.502102851867676
    10. '):

' → logprob: -14.502102851867676

Token 281: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20676252245903015
    2. ':
' → logprob: -2.8317625522613525
    3. ' return' → logprob: -2.8317625522613525
    4. '       ' → logprob: -3.2067625522613525
    5. 'return' → logprob: -4.331762313842773
    6. ':' → logprob: -4.456762313842773
    7. ':return' → logprob: -6.081762313842773
    8. '
' → logprob: -7.706762313842773
    9. ' :' → logprob: -8.456762313842773
    10. '   ' → logprob: -8.456762313842773

Token 282: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.031187226995825768
    2. '           ' → logprob: -3.7811872959136963
    3. ' return' → logprob: -5.031187057495117
    4. '       ' → logprob: -6.781187057495117
    5. 'raise' → logprob: -8.781187057495117
    6. '
' → logprob: -10.781187057495117
    7. ':return' → logprob: -10.781187057495117
    8. '               ' → logprob: -11.281187057495117
    9. '   ' → logprob: -11.281187057495117
    10. '{return' → logprob: -12.406187057495117

Token 283: ' "' (ID: 392)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07601366192102432
    2. '"' → logprob: -2.7010135650634766
    3. 'self' → logprob: -5.576013565063477
    4. ' -' → logprob: -6.951013565063477
    5. ''' → logprob: -8.201013565063477
    6. '-self' → logprob: -8.326013565063477
    7. '0' → logprob: -8.451013565063477
    8. '"value' → logprob: -8.951013565063477
    9. 'int' → logprob: -9.201013565063477
    10. 'None' → logprob: -9.701013565063477

Token 284: 'NA' (ID: 9555)
  Prédit: 'Invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.08472184836864471
    2. 'invalid' → logprob: -2.834721803665161
    3. 'All' → logprob: -4.33472204208374
    4. 'Error' → logprob: -6.08472204208374
    5. 'INVALID' → logprob: -6.08472204208374
    6. '"' → logprob: -6.33472204208374
    7. 'error' → logprob: -6.83472204208374
    8. 'all' → logprob: -7.20972204208374
    9. 'No' → logprob: -7.58472204208374
    10. '-' → logprob: -8.334721565246582

Token 285: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01016046293079853
    2. '"
' → logprob: -4.635160446166992
    3. 'I' → logprob: -9.135160446166992
    4. 'L' → logprob: -9.385160446166992
    5. 'M' → logprob: -9.510160446166992
    6. '")' → logprob: -10.260160446166992
    7. '"
' → logprob: -10.635160446166992
    8. '"

' → logprob: -10.885160446166992
    9. 'N' → logprob: -11.635160446166992
    10. ' ' → logprob: -11.885160446166992

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10180477797985077
    2. '        
' → logprob: -2.976804733276367
    3. '
' → logprob: -3.351804733276367
    4. '    
' → logprob: -4.851804733276367
    5. '   ' → logprob: -6.851804733276367
    6. ' while' → logprob: -7.601804733276367
    7. '  
' → logprob: -7.601804733276367
    8. 'while' → logprob: -8.226804733276367
    9. '```' → logprob: -8.601804733276367
    10. '       
' → logprob: -8.726804733276367

Token 287: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.028318550437688828
    2. 'steps' → logprob: -4.278318405151367
    3. 'count' → logprob: -5.028318405151367
    4. '       ' → logprob: -5.653318405151367
    5. 'result' → logprob: -6.403318405151367
    6. 'seen' → logprob: -7.028318405151367
    7. 'step' → logprob: -7.778318405151367
    8. 'for' → logprob: -8.028318405151367
    9. 'visited' → logprob: -8.153318405151367
    10. 'counter' → logprob: -8.403318405151367

Token 288: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007611005567014217
    2. ' self' → logprob: -4.88261079788208
    3. 'not' → logprob: -12.757611274719238
    4. ' not' → logprob: -15.132611274719238
    5. '(self' → logprob: -15.382611274719238
    6. ' isinstance' → logprob: -15.382611274719238
    7. '	self' → logprob: -15.382611274719238
    8. 'elf' → logprob: -15.507611274719238
    9. '__' → logprob: -15.507611274719238
    10. 'type' → logprob: -15.757611274719238

Token 289: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.013460304588079453
    2. 'current' → logprob: -4.888460159301758
    3. '.' → logprob: -5.638460159301758
    4. 'self' → logprob: -7.013460159301758
    5. ' current' → logprob: -7.263460159301758
    6. ' self' → logprob: -8.513460159301758
    7. ' ==' → logprob: -8.763460159301758
    8. ' .' → logprob: -9.263460159301758
    9. '==' → logprob: -9.888460159301758
    10. '   ' → logprob: -10.013460159301758

Token 290: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.259079363080673e-05
    2. 'number' → logprob: -11.875012397766113
    3. 'Number' → logprob: -13.375012397766113
    4. '_token' → logprob: -13.750012397766113
    5. '_' → logprob: -13.875012397766113
    6. 'umber' → logprob: -14.625012397766113
    7. '_user' → logprob: -14.750012397766113
    8. '==' → logprob: -15.000012397766113
    9. '_NUMBER' → logprob: -15.500012397766113
    10. '_code' → logprob: -15.750012397766113

Token 291: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18032322824001312
    2. '==' → logprob: -1.8053232431411743
    3. ' !=' → logprob: -7.680323123931885
    4. '!=' → logprob: -9.305323600769043
    5. ' ' → logprob: -11.430323600769043
    6. '=' → logprob: -11.930323600769043
    7. ' in' → logprob: -12.930323600769043
    8. ')' → logprob: -13.555323600769043
    9. '=="' → logprob: -14.180323600769043
    10. '   ' → logprob: -14.305323600769043

Token 292: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09789195656776428
    2. ' self' → logprob: -2.4728920459747314
    3. 'str' → logprob: -4.847891807556152
    4. ' str' → logprob: -6.972891807556152
    5. '"' → logprob: -9.847891807556152
    6. '   ' → logprob: -10.222891807556152
    7. 'Kap' → logprob: -10.597891807556152
    8. ' Kap' → logprob: -11.847891807556152
    9. '(self' → logprob: -13.472891807556152
    10. '	self' → logprob: -13.597891807556152

Token 293: '._' (ID: 2697)
  Prédit: '.T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.T' → logprob: -4.1557283111615106e-05
    2. 'TARGET' → logprob: -10.375041961669922
    3. '.' → logprob: -12.625041961669922
    4. ' .' → logprob: -12.625041961669922
    5. '.Target' → logprob: -13.125041961669922
    6. '	T' → logprob: -14.375041961669922
    7. '.target' → logprob: -14.875041961669922
    8. ' TARGET' → logprob: -15.875041961669922
    9. '.OR' → logprob: -15.875041961669922
    10. '.__' → logprob: -16.000041961669922

Token 294: 'normalize' (ID: 62699)
  Prédit: 'normalize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.00043496055877767503
    2. 'TARGET' → logprob: -8.125434875488281
    3. '.normalize' → logprob: -10.000434875488281
    4. 'target' → logprob: -10.375434875488281
    5. 'str' → logprob: -10.750434875488281
    6. 'NORMAL' → logprob: -10.875434875488281
    7. '
' → logprob: -12.750434875488281
    8. 'Normalize' → logprob: -12.875434875488281
    9. 'format' → logprob: -13.000434875488281
    10. ' normalize' → logprob: -13.125434875488281

Token 295: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00040767391328699887
    2. '(self' → logprob: -8.000407218933105
    3. '("' → logprob: -10.125407218933105
    4. '(' → logprob: -10.750407218933105
    5. '(K' → logprob: -12.375407218933105
    6. 'str' → logprob: -12.750407218933105
    7. '(f' → logprob: -13.500407218933105
    8. '(
' → logprob: -13.625407218933105
    9. '('' → logprob: -14.125407218933105
    10. '[str' → logprob: -16.625408172607422

Token 296: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00022213248303160071
    2. '(K' → logprob: -8.875222206115723
    3. 'self' → logprob: -10.125222206115723
    4. '(' → logprob: -10.250222206115723
    5. '(
' → logprob: -12.375222206115723
    6. '
' → logprob: -13.875222206115723
    7. 'K' → logprob: -14.250222206115723
    8. '(k' → logprob: -15.375222206115723
    9. '[self' → logprob: -16.000221252441406
    10. ' self' → logprob: -16.250221252441406

Token 297: '.T' (ID: 2600)
  Prédit: '.T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.T' → logprob: -0.00011307948443572968
    2. 'TARGET' → logprob: -9.125113487243652
    3. '.' → logprob: -13.125113487243652
    4. '.Target' → logprob: -14.000113487243652
    5. '	T' → logprob: -15.000113487243652
    6. '
' → logprob: -15.500113487243652
    7. 'self' → logprob: -15.750113487243652
    8. ' .' → logprob: -16.000112533569336
    9. '.NUM' → logprob: -16.125112533569336
    10. 'T' → logprob: -16.625112533569336

Token 298: 'ARGET' (ID: 35935)
  Prédit: 'ARGET'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARGET' → logprob: -2.1054253011243418e-05
    2. 'A' → logprob: -11.875020980834961
    3. 'ARGE' → logprob: -11.875020980834961
    4. 'arget' → logprob: -12.875020980834961
    5. 'TARGET' → logprob: -13.000020980834961
    6. 'AR' → logprob: -13.500020980834961
    7. 'ARG' → logprob: -14.125020980834961
    8. 'R' → logprob: -17.87502098083496
    9. '   ' → logprob: -18.00002098083496
    10. '4' → logprob: -18.37502098083496

Token 299: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.4815889596939087
    2. ')):
' → logprob: -0.9815889596939087
    3. '))' → logprob: -4.981588840484619
    4. ')):
' → logprob: -7.731588840484619
    5. '       ' → logprob: -9.106589317321777
    6. '   ' → logprob: -10.481589317321777
    7. ':' → logprob: -10.606589317321777
    8. ')' → logprob: -12.356589317321777
    9. ':
' → logprob: -12.856589317321777
    10. '')):
' → logprob: -13.106589317321777

Token 300: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3599735498428345
    2. ':
' → logprob: -1.6099735498428345
    3. '           ' → logprob: -2.484973430633545
    4. ':' → logprob: -4.109973430633545
    5. 'return' → logprob: -6.859973430633545
    6. ':return' → logprob: -7.109973430633545
    7. ' return' → logprob: -7.984973430633545
    8. '```' → logprob: -8.984973907470703
    9. '):
' → logprob: -9.484973907470703
    10. '   ' → logprob: -9.984973907470703

Token 301: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05985467508435249
    2. 'self' → logprob: -3.059854745864868
    3. '           ' → logprob: -4.934854507446289
    4. ' return' → logprob: -5.559854507446289
    5. ' self' → logprob: -9.184854507446289
    6. '0' → logprob: -10.309854507446289
    7. '       ' → logprob: -10.809854507446289
    8. '               ' → logprob: -13.559854507446289
    9. '
' → logprob: -13.934854507446289
    10. '   ' → logprob: -14.059854507446289

Token 302: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0018332034815102816
    2. '617' → logprob: -6.751833438873291
    3. ' self' → logprob: -7.376833438873291
    4. '"' → logprob: -10.876832962036133
    5. '0' → logprob: -11.876832962036133
    6. 'int' → logprob: -12.626832962036133
    7. 'str' → logprob: -12.751832962036133
    8. ' ' → logprob: -12.751832962036133
    9. '   ' → logprob: -14.126832962036133
    10. '	self' → logprob: -15.126832962036133

Token 303: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00041637211688794196
    2. '617' → logprob: -8.25041675567627
    3. '"' → logprob: -8.87541675567627
    4. ' self' → logprob: -11.37541675567627
    5. 'str' → logprob: -13.37541675567627
    6. '0' → logprob: -14.62541675567627
    7. '   ' → logprob: -14.87541675567627
    8. ''' → logprob: -15.37541675567627
    9. ' ' → logprob: -15.50041675567627
    10. '	self' → logprob: -15.87541675567627

Token 304: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7801047563552856
    2. '
' → logprob: -0.9051047563552856
    3. '        
' → logprob: -2.530104637145996
    4. '    
' → logprob: -2.905104637145996
    5. '   ' → logprob: -6.530104637145996
    6. '  
' → logprob: -8.030104637145996
    7. '
' → logprob: -8.905104637145996
    8. '\n' → logprob: -9.405104637145996
    9. '		
' → logprob: -9.405104637145996
    10. 'while' → logprob: -9.530104637145996

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11832349747419357
    2. 'count' → logprob: -2.618323564529419
    3. '   ' → logprob: -3.868323564529419
    4. 'steps' → logprob: -4.74332332611084
    5. 'step' → logprob: -5.36832332611084
    6. '
' → logprob: -5.86832332611084
    7. '        
' → logprob: -7.36832332611084
    8. 'counter' → logprob: -7.86832332611084
    9. ' count' → logprob: -8.99332332611084
    10. ' step' → logprob: -9.24332332611084

Token 306: ' step' (ID: 5983)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.39976873993873596
    2. 'steps' → logprob: -1.1497687101364136
    3. 'counter' → logprob: -5.024768829345703
    4. 'step' (adapté à ' step') → logprob: -5.399768829345703
    5. '       ' → logprob: -6.524768829345703
    6. 'iterations' → logprob: -8.649768829345703
    7. ' count' → logprob: -10.274768829345703
    8. '        
' → logprob: -11.399768829345703
    9. 'result' → logprob: -11.774768829345703
    10. 'iteration' → logprob: -11.899768829345703

Token 307: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.037546172738075256
    2. 's' → logprob: -3.412546157836914
    3. 'count' → logprob: -6.162546157836914
    4. ' =' → logprob: -7.037546157836914
    5. '()' → logprob: -8.037546157836914
    6. '_number' → logprob: -8.537546157836914
    7. '_' → logprob: -8.662546157836914
    8. '_counter' → logprob: -9.162546157836914
    9. '=' → logprob: -9.662546157836914
    10. '_result' → logprob: -11.287546157836914

Token 308: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01816023886203766
    2. '=' → logprob: -4.018160343170166
    3. ' +=' → logprob: -11.768159866333008
    4. '   ' → logprob: -13.643159866333008
    5. ' ' → logprob: -13.768159866333008
    6. ':' → logprob: -16.143159866333008
    7. '    ' → logprob: -16.768159866333008
    8. '+=' → logprob: -16.893159866333008
    9. ' =
' → logprob: -17.143159866333008
    10. ',' → logprob: -17.268159866333008

Token 309: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0076645975932478905
    2. ' ' → logprob: -5.507664680480957
    3. '1' → logprob: -5.632664680480957
    4. '   ' → logprob: -14.382664680480957
    5. '       ' → logprob: -16.00766372680664
    6. '  ' → logprob: -18.25766372680664
    7. '     ' → logprob: -18.50766372680664
    8. '    ' → logprob: -18.75766372680664
    9. '           ' → logprob: -18.88266372680664
    10. '```' → logprob: -19.13266372680664

Token 310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00103352265432477
    2. '1' → logprob: -6.876033306121826
    3. ' ' → logprob: -14.126033782958984
    4. '   ' → logprob: -20.126033782958984
    5. 'self' → logprob: -21.501033782958984
    6. '```' → logprob: -21.626033782958984
    7. '۰' → logprob: -22.501033782958984
    8. 'int' → logprob: -22.563533782958984
    9. '=' → logprob: -22.563533782958984
    10. 'None' → logprob: -23.626033782958984

Token 311: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05748927593231201
    2. '       ' → logprob: -2.9324893951416016
    3. ' while' → logprob: -6.682489395141602
    4. '<|end|>' → logprob: -7.682489395141602
    5. '    
' → logprob: -8.432489395141602
    6. '        
' → logprob: -8.557489395141602
    7. 'while' → logprob: -8.682489395141602
    8. '   ' → logprob: -9.057489395141602
    9. '  
' → logprob: -9.432489395141602
    10. '
' → logprob: -10.432489395141602

Token 312: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6433369517326355
    2. '       ' → logprob: -0.7683369517326355
    3. ' while' → logprob: -5.018336772918701
    4. 'while' → logprob: -6.143336772918701
    5. '   ' → logprob: -7.268336772918701
    6. '        
' → logprob: -7.768336772918701
    7. '    
' → logprob: -7.768336772918701
    8. '	while' → logprob: -9.14333724975586
    9. '<|end|>' → logprob: -9.51833724975586
    10. '  
' → logprob: -9.89333724975586

Token 313: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0004996551433578134
    2. '       ' → logprob: -7.750499725341797
    3. ' while' → logprob: -9.625499725341797
    4. 'max' → logprob: -14.250499725341797
    5. 'seen' → logprob: -14.375499725341797
    6. '        
' → logprob: -14.500499725341797
    7. 'previous' → logprob: -15.000499725341797
    8. 'prev' → logprob: -15.500499725341797
    9. '	while' → logprob: -15.750499725341797
    10. 'current' → logprob: -15.750499725341797

Token 314: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03805985301733017
    2. ' self' → logprob: -3.288059949874878
    3. 'True' → logprob: -11.913060188293457
    4. 'not' → logprob: -12.663060188293457
    5. ' True' → logprob: -12.788060188293457
    6. '       ' → logprob: -13.288060188293457
    7. ' not' → logprob: -13.413060188293457
    8. '(self' → logprob: -13.788060188293457
    9. '           ' → logprob: -14.038060188293457
    10. 'step' → logprob: -15.038060188293457

Token 315: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.000719818810466677
    2. 'current' → logprob: -7.250720024108887
    3. ' current' → logprob: -12.250720024108887
    4. '.' → logprob: -12.375720024108887
    5. ' !=' → logprob: -15.000720024108887
    6. ' .' → logprob: -15.500720024108887
    7. 'self' → logprob: -15.750720024108887
    8. '_current' → logprob: -16.25071907043457
    9. 'urrent' → logprob: -16.62571907043457
    10. '	current' → logprob: -17.25071907043457

Token 316: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.3782830137643032e-05
    2. 'number' → logprob: -11.50001335144043
    3. '_user' → logprob: -13.75001335144043
    4. 'Number' → logprob: -13.87501335144043
    5. 'umber' → logprob: -14.50001335144043
    6. '_' → logprob: -15.25001335144043
    7. '_NUMBER' → logprob: -15.62501335144043
    8. 'self' → logprob: -16.25001335144043
    9. '.number' → logprob: -17.00001335144043
    10. '<' → logprob: -17.00001335144043

Token 317: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0006283254479058087
    2. ' !=' → logprob: -7.375628471374512
    3. '()!=' → logprob: -14.125628471374512
    4. ')!=' → logprob: -14.625628471374512
    5. '!="' → logprob: -15.625628471374512
    6. '!==' → logprob: -15.625628471374512
    7. '!='' → logprob: -16.000627517700195
    8. '!=(' → logprob: -16.500627517700195
    9. ']!=' → logprob: -16.625627517700195
    10. 'and' → logprob: -17.000627517700195

Token 318: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010387639049440622
    2. ' self' → logprob: -6.876038551330566
    3. 'str' → logprob: -12.751038551330566
    4. '   ' → logprob: -13.626038551330566
    5. '       ' → logprob: -13.876038551330566
    6. '"' → logprob: -15.001038551330566
    7. '
' → logprob: -15.251038551330566
    8. '(self' → logprob: -15.876038551330566
    9. '=self' → logprob: -16.751039505004883
    10. ' ' → logprob: -16.876039505004883

Token 319: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.16027358174324036
    2. '.T' → logprob: -1.910273551940918
    3. '.' → logprob: -11.035273551940918
    4. '.NORMAL' → logprob: -11.160273551940918
    5. ' .' → logprob: -11.910273551940918
    6. '.normalize' → logprob: -12.660273551940918
    7. 'TARGET' → logprob: -12.660273551940918
    8. '.Target' → logprob: -13.410273551940918
    9. '_TARGET' → logprob: -13.785273551940918
    10. '.target' → logprob: -13.785273551940918

Token 320: 'normalize' (ID: 62699)
  Prédit: 'normalize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -1.0802738870552275e-05
    2. 'TARGET' → logprob: -12.00001049041748
    3. 'target' → logprob: -13.25001049041748
    4. '.normalize' → logprob: -13.50001049041748
    5. 'format' → logprob: -15.12501049041748
    6. 'normalized' → logprob: -15.25001049041748
    7. ' normalize' → logprob: -15.75001049041748
    8. 'NORMAL' → logprob: -15.75001049041748
    9. '(normal' → logprob: -16.875011444091797
    10. 'norm' → logprob: -16.875011444091797

Token 321: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -1.7120533811976202e-05
    2. 'str' → logprob: -11.000017166137695
    3. '(' → logprob: -15.500017166137695
    4. '(
' → logprob: -16.500017166137695
    5. '[str' → logprob: -17.500017166137695
    6. '=str' → logprob: -18.250017166137695
    7. '("' → logprob: -19.125017166137695
    8. ' str' → logprob: -19.250017166137695
    9. '('' → logprob: -19.750017166137695
    10. '
' → logprob: -20.750017166137695

Token 322: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.747814349073451e-05
    2. 'self' → logprob: -11.000017166137695
    3. '(' → logprob: -14.500017166137695
    4. '(
' → logprob: -16.375017166137695
    5. '(K' → logprob: -16.500017166137695
    6. '[self' → logprob: -17.000017166137695
    7. ' self' → logprob: -18.125017166137695
    8. '	self' → logprob: -19.125017166137695
    9. '=self' → logprob: -19.250017166137695
    10. 'K' → logprob: -19.250017166137695

Token 323: '.T' (ID: 2600)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.31359541416168213
    2. 'self' → logprob: -1.3135954141616821
    3. ' self' → logprob: -8.43859577178955
    4. '[self' → logprob: -10.31359577178955
    5. '(' → logprob: -11.18859577178955
    6. 'K' → logprob: -11.43859577178955
    7. '
' → logprob: -11.68859577178955
    8. '	self' → logprob: -11.68859577178955
    9. '(T' → logprob: -12.06359577178955
    10. '.self' → logprob: -12.06359577178955

Token 324: 'ARGET' (ID: 35935)
  Prédit: 'ARGET'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARGET' → logprob: -0.0002406090497970581
    2. 'TARGET' → logprob: -8.750240325927734
    3. 'arget' → logprob: -9.625240325927734
    4. 'ARG' → logprob: -12.375240325927734
    5. 'GET' → logprob: -12.500240325927734
    6. 'ARGE' → logprob: -12.625240325927734
    7. 'AR' → logprob: -13.000240325927734
    8. 'A' → logprob: -14.750240325927734
    9. 'ARE' → logprob: -15.000240325927734
    10. 'self' → logprob: -15.375240325927734

Token 325: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.3742026388645172
    2. ')):' → logprob: -1.9992026090621948
    3. '))' → logprob: -2.4992027282714844
    4. '):
' → logprob: -3.1242027282714844
    5. ')' → logprob: -3.2492027282714844
    6. '):' → logprob: -4.749202728271484
    7. '       ' → logprob: -5.999202728271484
    8. ')):
' → logprob: -8.499202728271484
    9. ' and' → logprob: -9.249202728271484
    10. '   ' → logprob: -9.499202728271484

Token 326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002630588598549366
    2. '
' → logprob: -6.127630710601807
    3. '       ' → logprob: -9.002630233764648
    4. '            
' → logprob: -9.127630233764648
    5. '):
' → logprob: -10.627630233764648
    6. ':' → logprob: -10.627630233764648
    7. '```' → logprob: -10.627630233764648
    8. 'self' → logprob: -10.752630233764648
    9. '<|end|>' → logprob: -10.877630233764648
    10. ',' → logprob: -11.252630233764648

Token 327: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.19180984795093536
    2. '       ' → logprob: -2.316809892654419
    3. '           ' → logprob: -2.691809892654419
    4. ' self' → logprob: -4.81680965423584
    5. '   ' → logprob: -9.81680965423584
    6. 'if' → logprob: -11.44180965423584
    7. 'step' → logprob: -11.44180965423584
    8. '               ' → logprob: -11.56680965423584
    9. '	self' → logprob: -13.06680965423584
    10. ' if' → logprob: -13.31680965423584

Token 328: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.060365608893335e-05
    2. '   ' → logprob: -10.875041007995605
    3. '_step' → logprob: -10.875041007995605
    4. '       ' → logprob: -14.000041007995605
    5. '.step' → logprob: -14.500041007995605
    6. '_current' → logprob: -14.500041007995605
    7. '     ' → logprob: -15.500041007995605
    8. '.current' → logprob: -16.00004005432129
    9. '    ' → logprob: -16.50004005432129
    10. '           ' → logprob: -16.62504005432129

Token 329: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -1.1472419600977446e-06
    2. '_step' → logprob: -13.750000953674316
    3. ' step' → logprob: -17.875001907348633
    4. 'tep' → logprob: -18.000001907348633
    5. 'Step' → logprob: -18.750001907348633
    6. '.step' → logprob: -19.750001907348633
    7. '(step' → logprob: -19.750001907348633
    8. 'stop' → logprob: -20.000001907348633
    9. '	step' → logprob: -20.625001907348633
    10. '_' → logprob: -21.000001907348633

Token 330: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.048599522560834885
    2. '()' → logprob: -3.0485994815826416
    3. '()
' → logprob: -11.423599243164062
    4. '           ' → logprob: -13.923599243164062
    5. '()

' → logprob: -14.798599243164062
    6. '
' → logprob: -17.548599243164062
    7. '()\' → logprob: -17.923599243164062
    8. '       ' → logprob: -18.923599243164062
    9. '();' → logprob: -19.173599243164062
    10. 'step' → logprob: -19.298599243164062

Token 331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03807913884520531
    2. 'step' → logprob: -4.038079261779785
    3. '
' → logprob: -4.288079261779785
    4. '       ' → logprob: -5.288079261779785
    5. ' step' → logprob: -7.413079261779785
    6. '   ' → logprob: -8.538079261779785
    7. '            
' → logprob: -10.038079261779785
    8. '        
' → logprob: -10.413079261779785
    9. '```' → logprob: -11.163079261779785
    10. '	step' → logprob: -11.288079261779785

Token 332: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' (adapté à ' step') → logprob: -0.0021044600289314985
    2. '           ' → logprob: -6.50210428237915
    3. ' step' → logprob: -8.002104759216309
    4. '       ' → logprob: -8.252104759216309
    5. '   ' → logprob: -12.502104759216309
    6. '
' → logprob: -13.127104759216309
    7. '	step' → logprob: -14.502104759216309
    8. '(step' → logprob: -16.377103805541992
    9. '.step' → logprob: -16.627103805541992
    10. 'Step' → logprob: -17.627103805541992

Token 333: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9361264946837764e-07
    2. 'count' → logprob: -16.125
    3. '_counter' → logprob: -17.875
    4. '_counts' → logprob: -18.0
    5. '_' → logprob: -19.75
    6. '_COUNT' → logprob: -20.75
    7. '_cnt' → logprob: -21.125
    8. 's' → logprob: -21.625
    9. '_c' → logprob: -21.75
    10. ' count' → logprob: -21.75

Token 334: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2519298195838928
    2. ' +=' → logprob: -1.501929759979248
    3. '=' → logprob: -15.001930236816406
    4. ']+=' → logprob: -15.126930236816406
    5. '+' → logprob: -16.251930236816406
    6. '   ' → logprob: -18.376930236816406
    7. '    ' → logprob: -18.876930236816406
    8. '```' → logprob: -19.251930236816406
    9. '       ' → logprob: -19.876930236816406
    10. '        ' → logprob: -20.001930236816406

Token 335: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -19.87603187561035
    4. '           ' → logprob: -20.62603187561035
    5. ' ' → logprob: -20.87603187561035
    6. '```' → logprob: -21.12603187561035
    7. '
' → logprob: -21.50103187561035
    8. '۱' → logprob: -22.62603187561035
    9. '１' → logprob: -23.06353187561035
    10. '  ' → logprob: -23.25103187561035

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -20.625
    4. '```' → logprob: -21.625
    5. '
' → logprob: -22.75
    6. '۱' → logprob: -23.625
    7. '           ' → logprob: -24.0
    8. '１' → logprob: -24.125
    9. 'step' → logprob: -24.125
    10. '       ' → logprob: -24.25

Token 337: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004094073548913002
    2. '       ' → logprob: -5.754094123840332
    3. 'if' → logprob: -7.754094123840332
    4. 'return' → logprob: -7.754094123840332
    5. ' if' → logprob: -10.129094123840332
    6. '
' → logprob: -11.754094123840332
    7. '```' → logprob: -12.504094123840332
    8. '   ' → logprob: -12.629094123840332
    9. ' return' → logprob: -13.754094123840332
    10. ' ' → logprob: -13.879094123840332

Token 338: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0896497294306755
    2. '       ' → logprob: -2.5896496772766113
    3. 'return' → logprob: -5.089649677276611
    4. 'if' → logprob: -5.589649677276611
    5. ' if' → logprob: -7.214649677276611
    6. ' return' → logprob: -10.46465015411377
    7. '   ' → logprob: -10.71465015411377
    8. '```' → logprob: -11.58965015411377
    9. ' ' → logprob: -12.46465015411377
    10. '
' → logprob: -12.46465015411377

Token 339: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00018649426056072116
    2. '           ' → logprob: -8.750186920166016
    3. ' if' → logprob: -10.500186920166016
    4. '       ' → logprob: -15.125186920166016
    5. '
' → logprob: -16.125186920166016
    6. '#' (adapté à ' #') → logprob: -17.000186920166016
    7. '   ' → logprob: -17.750186920166016
    8. '            
' → logprob: -18.875186920166016
    9. '```' → logprob: -19.750186920166016
    10. 'If' → logprob: -20.250186920166016

Token 340: ' In' (ID: 730)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004154141526669264
    2. ' if' → logprob: -5.504154205322266
    3. '           ' → logprob: -9.504154205322266
    4. '       ' → logprob: -13.879154205322266
    5. '```' → logprob: -16.004154205322266
    6. '#' → logprob: -16.504154205322266
    7. '   ' → logprob: -16.879154205322266
    8. 'If' → logprob: -17.629154205322266
    9. ' ' → logprob: -18.379154205322266
    10. '
' → logprob: -18.754154205322266

Token 341: ' theory' (ID: 17346)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5196893215179443
    2. 'case' → logprob: -1.5196893215179443
    3. ' case' → logprob: -1.8946893215179443
    4. ' self' → logprob: -3.5196893215179443
    5. ' rare' → logprob: -6.644689559936523
    6. 'step' → logprob: -6.894689559936523
    7. 'if' → logprob: -7.019689559936523
    8. ' the' → logprob: -7.269689559936523
    9. ' step' → logprob: -7.644689559936523
    10. '#' → logprob: -7.769689559936523

Token 342: ' the' (ID: 290)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9422248005867004
    2. 'if' → logprob: -1.1922247409820557
    3. ' if' → logprob: -1.1922247409820557
    4. ',' → logprob: -6.067224979400635
    5. '       ' → logprob: -7.442224979400635
    6. '
' → logprob: -8.692224502563477
    7. ' the' → logprob: -11.442224502563477
    8. '            
' → logprob: -12.192224502563477
    9. '   ' → logprob: -12.317224502563477
    10. '          ' → logprob: -12.317224502563477

Token 343: ' loop' (ID: 11453)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.4577081203460693
    2. 'while' → logprob: -1.4577081203460693
    3. ' current' → logprob: -1.8327081203460693
    4. 'if' → logprob: -1.9577081203460693
    5. 'number' → logprob: -2.7077081203460693
    6. ' code' → logprob: -3.3327081203460693
    7. ' while' → logprob: -3.3327081203460693
    8. ' number' → logprob: -3.7077081203460693
    9. ' if' → logprob: -3.7077081203460693
    10. 'code' → logprob: -4.707708358764648

Token 344: ' should' (ID: 1757)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.4736589789390564
    2. ' should' → logprob: -1.8486590385437012
    3. 'cannot' → logprob: -2.348659038543701
    4. ' can' → logprob: -3.723659038543701
    5. ' will' → logprob: -3.848659038543701
    6. ' cannot' → logprob: -4.098659038543701
    7. ' could' → logprob: -4.223659038543701
    8. 'will' → logprob: -4.223659038543701
    9. 'could' → logprob: -4.223659038543701
    10. 'can' → logprob: -4.848659038543701

Token 345: ' always' (ID: 3324)
  Prédit: ' never'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' never' → logprob: -0.3900238573551178
    2. ' not' → logprob: -2.015023946762085
    3. 'never' → logprob: -2.140023946762085
    4. 'not' → logprob: -2.640023946762085
    5. 'terminate' → logprob: -8.265024185180664
    6. ' break' → logprob: -9.265024185180664
    7. ' terminate' → logprob: -9.265024185180664
    8. 'break' → logprob: -9.640024185180664
    9. ' always' → logprob: -9.765024185180664
    10. 'always' → logprob: -10.515024185180664

Token 346: ' end' (ID: 1268)
  Prédit: 'terminate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terminate' → logprob: -0.7460274696350098
    2. ' terminate' → logprob: -0.9960274696350098
    3. ' break' → logprob: -2.3710274696350098
    4. 'break' → logprob: -3.2460274696350098
    5. ' converge' → logprob: -4.74602746963501
    6. ' reach' → logprob: -5.37102746963501
    7. ' eventually' → logprob: -5.74602746963501
    8. ' end' → logprob: -5.74602746963501
    9. 'return' → logprob: -7.12102746963501
    10. 'con' → logprob: -7.24602746963501

Token 347: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022261450067162514
    2. ',' → logprob: -7.00222635269165
    3. ' if' → logprob: -7.75222635269165
    4. ' at' → logprob: -8.127225875854492
    5. ' here' → logprob: -8.252225875854492
    6. '       ' → logprob: -9.002225875854492
    7. ' but' → logprob: -9.627225875854492
    8. ' with' → logprob: -11.002225875854492
    9. '          ' → logprob: -11.127225875854492
    10. '		' → logprob: -11.252225875854492

Token 348: ' all' (ID: 722)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.703863263130188
    2. ' in' → logprob: -1.328863263130188
    3. ' for' → logprob: -1.828863263130188
    4. 'if' → logprob: -2.9538631439208984
    5. 'for' → logprob: -4.078863143920898
    6. 'in' → logprob: -5.203863143920898
    7. ' when' → logprob: -5.453863143920898
    8. ' possibly' → logprob: -7.703863143920898
    9. '   ' → logprob: -8.328863143920898
    10. ' ' → logprob: -8.828863143920898

Token 349: ' digits' (ID: 37806)
  Prédit: '_digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.7011824250221252
    2. 'digits' → logprob: -1.3261823654174805
    3. ' digits' → logprob: -1.4511823654174805
    4. 'Digits' → logprob: -7.2011823654174805
    5. '_tokens' → logprob: -7.7011823654174805
    6. '           ' → logprob: -7.8261823654174805
    7. '       ' → logprob: -7.9511823654174805
    8. '
' → logprob: -7.9511823654174805
    9. ' tokens' → logprob: -8.20118236541748
    10. '   ' → logprob: -8.32618236541748

Token 350: ' same' (ID: 2684)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.32590481638908386
    2. 'same' → logprob: -2.3259048461914062
    3. 'are' → logprob: -2.7009048461914062
    4. ' same' → logprob: -2.9509048461914062
    5. '_same' → logprob: -3.2009048461914062
    6. '           ' → logprob: -4.450904846191406
    7. '       ' → logprob: -6.450904846191406
    8. ' being' → logprob: -6.700904846191406
    9. '```' → logprob: -6.825904846191406
    10. '<|end|>' → logprob: -6.950904846191406

Token 351: ' case' (ID: 1890)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009876023046672344
    2. ' if' → logprob: -5.134876251220703
    3. ' or' → logprob: -6.009876251220703
    4. ',' → logprob: -7.134876251220703
    5. '       ' → logprob: -8.009876251220703
    6. ' and' → logprob: -9.134876251220703
    7. ' at' → logprob: -9.634876251220703
    8. 'if' → logprob: -9.884876251220703
    9. ' in' → logprob: -11.134876251220703
    10. '   ' → logprob: -11.134876251220703

Token 352: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016301940195262432
    2. '       ' → logprob: -6.6266303062438965
    3. ' if' → logprob: -8.876629829406738
    4. 'return' → logprob: -9.376629829406738
    5. 'if' → logprob: -10.376629829406738
    6. ' return' → logprob: -11.001629829406738
    7. '
' → logprob: -11.626629829406738
    8. '   ' → logprob: -11.876629829406738
    9. ',' → logprob: -12.001629829406738
    10. ' ' → logprob: -12.751629829406738

Token 353: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009963677730411291
    2. '       ' → logprob: -7.0009965896606445
    3. '
' → logprob: -10.750996589660645
    4. ',' → logprob: -10.875996589660645
    5. ' if' → logprob: -10.875996589660645
    6. ' return' → logprob: -11.250996589660645
    7. 'return' → logprob: -12.250996589660645
    8. '   ' → logprob: -12.625996589660645
    9. '```' → logprob: -13.750996589660645
    10. ' ' → logprob: -14.125996589660645

Token 354: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4130859375
    2. '           ' → logprob: -1.1630859375
    3. ' if' → logprob: -3.6630859375
    4. '       ' → logprob: -8.7880859375
    5. 'return' → logprob: -10.0380859375
    6. '```' → logprob: -11.5380859375
    7. '   ' → logprob: -11.7880859375
    8. 'If' → logprob: -13.2880859375
    9. ' ' → logprob: -13.6630859375
    10. '          ' → logprob: -13.7880859375

Token 355: ' Avoid' (ID: 46613)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6979727745056152
    2. ' if' → logprob: -1.3229727745056152
    3. 'if' → logprob: -1.4479727745056152
    4. '       ' → logprob: -7.197972774505615
    5. '   ' → logprob: -8.697973251342773
    6. '
' → logprob: -10.572973251342773
    7. 'If' → logprob: -10.572973251342773
    8. ' ' → logprob: -10.697973251342773
    9. '          ' → logprob: -11.697973251342773
    10. '```' → logprob: -12.322973251342773

Token 356: ' infinite' (ID: 48413)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.037323057651519775
    2. 'step' → logprob: -3.787322998046875
    3. ' self' → logprob: -4.912322998046875
    4. '           ' → logprob: -5.787322998046875
    5. ' infinite' → logprob: -6.537322998046875
    6. 'self' → logprob: -6.787322998046875
    7. '       ' → logprob: -8.037322998046875
    8. '(step' → logprob: -9.162322998046875
    9. ' loop' → logprob: -9.412322998046875
    10. ' an' → logprob: -9.412322998046875

Token 357: ' loop' (ID: 11453)
  Prédit: ' loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loop' → logprob: -0.28867074847221375
    2. ' loops' → logprob: -1.5386707782745361
    3. 'loop' → logprob: -3.538670778274536
    4. 'loops' → logprob: -5.538670539855957
    5. '           ' → logprob: -6.538670539855957
    6. '_loop' → logprob: -6.788670539855957
    7. '       ' → logprob: -7.663670539855957
    8. '   ' → logprob: -10.413670539855957
    9. ' looping' → logprob: -11.538670539855957
    10. 'while' → logprob: -13.288670539855957

Token 358: ' just' (ID: 1327)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.061676347395405e-05
    2. '
' → logprob: -10.75005054473877
    3. ' if' → logprob: -11.12505054473877
    4. '       ' → logprob: -11.50005054473877
    5. ',' → logprob: -13.62505054473877
    6. '```' → logprob: -14.12505054473877
    7. '            
' → logprob: -14.12505054473877
    8. '               ' → logprob: -15.12505054473877
    9. '<|end|>' → logprob: -15.25005054473877
    10. 'if' → logprob: -15.37505054473877

Token 359: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.01581333391368389
    2. ' in' → logprob: -4.26581335067749
    3. '           ' → logprob: -6.64081335067749
    4. '       ' → logprob: -8.515812873840332
    5. '   ' → logprob: -9.640812873840332
    6. 'to' → logprob: -10.015812873840332
    7. 'return' → logprob: -11.765812873840332
    8. 'break' → logprob: -12.265812873840332
    9. '     ' → logprob: -12.640812873840332
    10. ' ' → logprob: -12.640812873840332

Token 360: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.03814924880862236
    2. ' case' → logprob: -3.288149356842041
    3. '   ' → logprob: -9.163148880004883
    4. '       ' → logprob: -13.663148880004883
    5. '           ' → logprob: -14.038148880004883
    6. '    ' → logprob: -14.788148880004883
    7. '  ' → logprob: -15.913148880004883
    8. '     ' → logprob: -16.038148880004883
    9. 'cases' → logprob: -16.038148880004883
    10. ' ' → logprob: -16.163148880004883

Token 361: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.7610454708337784e-05
    2. '
' → logprob: -10.875027656555176
    3. '       ' → logprob: -12.250027656555176
    4. ' if' → logprob: -13.000027656555176
    5. '```' → logprob: -14.625027656555176
    6. 'if' → logprob: -14.875027656555176
    7. '            
' → logprob: -15.250027656555176
    8. '               ' → logprob: -15.750027656555176
    9. '          ' → logprob: -16.00002670288086
    10. ',' → logprob: -16.12502670288086

Token 362: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010962257510982454
    2. ' if' → logprob: -9.375109672546387
    3. 'if' → logprob: -10.875109672546387
    4. '       ' → logprob: -13.250109672546387
    5. '
' → logprob: -13.375109672546387
    6. '```' → logprob: -13.500109672546387
    7. '            
' → logprob: -15.000109672546387
    8. '		' → logprob: -15.625109672546387
    9. '               ' → logprob: -15.875109672546387
    10. '          ' → logprob: -16.00010871887207

Token 363: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3351156413555145
    2. 'if' (adapté à ' if') → logprob: -1.335115671157837
    3. ' if' → logprob: -3.835115671157837
    4. '       ' → logprob: -11.085115432739258
    5. '   ' → logprob: -13.585115432739258
    6. '```' → logprob: -14.710115432739258
    7. '          ' → logprob: -15.210115432739258
    8. ' ' → logprob: -15.585115432739258
    9. '            
' → logprob: -15.960115432739258
    10. '               ' → logprob: -15.960115432739258

Token 364: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.20141558349132538
    2. ' step' → logprob: -1.7014155387878418
    3. '(step' → logprob: -13.826416015625
    4. '	step' → logprob: -14.326416015625
    5. 'self' → logprob: -14.951416015625
    6. ' ' → logprob: -15.701416015625
    7. '  ' → logprob: -16.076416015625
    8. '   ' → logprob: -16.326416015625
    9. ' self' → logprob: -16.951416015625
    10. 'steps' → logprob: -18.701416015625

Token 365: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.465036105713807e-06
    2. 'count' → logprob: -12.000007629394531
    3. '>' → logprob: -13.875007629394531
    4. '_' → logprob: -16.00000762939453
    5. ' _' → logprob: -16.12500762939453
    6. '_c' → logprob: -17.00000762939453
    7. '   ' → logprob: -17.37500762939453
    8. ' count' → logprob: -17.50000762939453
    9. ' ' → logprob: -18.12500762939453
    10. '_co' → logprob: -18.50000762939453

Token 366: ' >' (ID: 1424)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6125154495239258
    2. ' >' → logprob: -0.8625154495239258
    3. '>' → logprob: -3.612515449523926
    4. '>=' → logprob: -4.737515449523926
    5. ' ' → logprob: -9.487515449523926
    6. ' ==' → logprob: -9.862515449523926
    7. '   ' → logprob: -10.987515449523926
    8. '<|end|>' → logprob: -12.112515449523926
    9. '    ' → logprob: -12.612515449523926
    10. '==' → logprob: -12.737515449523926

Token 367: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0008342855726368725
    2. ' ' → logprob: -8.125834465026855
    3. '50' → logprob: -8.375834465026855
    4. '20' → logprob: -8.375834465026855
    5. '10' → logprob: -10.125834465026855
    6. '999' → logprob: -10.750834465026855
    7. '1' → logprob: -12.500834465026855
    8. '30' → logprob: -12.625834465026855
    9. '500' → logprob: -13.125834465026855
    10. '   ' → logprob: -13.375834465026855

Token 368: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0018886608304455876
    2. '10' → logprob: -6.876888751983643
    3. '20' → logprob: -7.126888751983643
    4. '50' → logprob: -10.001888275146484
    5. '1' → logprob: -12.751888275146484
    6. '999' → logprob: -13.251888275146484
    7. '15' → logprob: -14.126888275146484
    8. '30' → logprob: -14.251888275146484
    9. ' ' → logprob: -15.001888275146484
    10. '
' → logprob: -15.376888275146484

Token 369: '00' (ID: 504)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5862773060798645
    2. ':' → logprob: -0.8362773060798645
    3. '           ' → logprob: -4.836277484893799
    4. '0' → logprob: -6.711277484893799
    5. '               ' → logprob: -7.586277484893799
    6. ':return' → logprob: -8.21127700805664
    7. '       ' → logprob: -8.33627700805664
    8. '   ' → logprob: -10.83627700805664
    9. ' :
' → logprob: -11.08627700805664
    10. '):
' → logprob: -11.21127700805664

Token 370: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3154921531677246
    2. ':
' → logprob: -1.3154921531677246
    3. '           ' → logprob: -6.315492153167725
    4. ':return' → logprob: -8.315492630004883
    5. '               ' → logprob: -9.190492630004883
    6. ' :
' → logprob: -10.690492630004883
    7. '       ' → logprob: -11.065492630004883
    8. ' :' → logprob: -11.440492630004883
    9. ':
' → logprob: -11.565492630004883
    10. ' or' → logprob: -12.440492630004883

Token 371: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013227994553744793
    2. 'return' → logprob: -4.513227939605713
    3. ' return' → logprob: -6.263227939605713
    4. '
' → logprob: -9.138228416442871
    5. 'raise' → logprob: -9.138228416442871
    6. ' raise' → logprob: -10.763228416442871
    7. '           ' → logprob: -11.013228416442871
    8. 'break' → logprob: -11.513228416442871
    9. ' break' → logprob: -12.513228416442871
    10. '                
' → logprob: -12.763228416442871

Token 372: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004935794277116656
    2. ' return' → logprob: -7.75049352645874
    3. '               ' → logprob: -9.750494003295898
    4. 'break' → logprob: -13.125494003295898
    5. 'raise' → logprob: -13.250494003295898
    6. '           ' → logprob: -14.750494003295898
    7. '	return' → logprob: -15.500494003295898
    8. '
' → logprob: -16.5004940032959
    9. '                   ' → logprob: -17.8754940032959
    10. ':return' → logprob: -18.5004940032959

Token 373: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5775836110115051
    2. '-' → logprob: -0.8275836110115051
    3. 'None' → logprob: -6.4525837898254395
    4. ' -' → logprob: -10.202583312988281
    5. ''' → logprob: -10.702583312988281
    6. ' None' → logprob: -13.452583312988281
    7. '"N' → logprob: -13.952583312988281
    8. '"AT' → logprob: -14.077583312988281
    9. ' "' → logprob: -14.452583312988281
    10. '
' → logprob: -14.577583312988281

Token 374: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.007196485530585051
    2. '"' → logprob: -5.007196426391602
    3. ''' → logprob: -8.632196426391602
    4. 'IN' → logprob: -8.882196426391602
    5. '-' → logprob: -10.757196426391602
    6. 'Loop' → logprob: -10.882196426391602
    7. 'INF' → logprob: -11.007196426391602
    8. 'Timeout' → logprob: -11.132196426391602
    9. 'None' → logprob: -11.632196426391602
    10. 'Infinite' → logprob: -11.632196426391602

Token 375: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4433611333370209
    2. '           ' → logprob: -1.3183611631393433
    3. ')' → logprob: -3.1933610439300537
    4. '       ' → logprob: -3.9433610439300537
    5. '<|end|>' → logprob: -4.068361282348633
    6. '"
' → logprob: -5.318361282348633
    7. '
' → logprob: -5.568361282348633
    8. '")' → logprob: -6.443361282348633
    9. '<|end|>' → logprob: -7.443361282348633
    10. ')
' → logprob: -7.818361282348633

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02072826400399208
    2. '
' → logprob: -4.02072811126709
    3. 'return' → logprob: -7.02072811126709
    4. '        
' → logprob: -7.02072811126709
    5. ' return' → logprob: -7.77072811126709
    6. '           ' → logprob: -9.02072811126709
    7. '<|end|>' → logprob: -9.64572811126709
    8. '    
' → logprob: -9.89572811126709
    9. '```' → logprob: -10.02072811126709
    10. '   ' → logprob: -10.39572811126709

Token 377: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08133316040039062
    2. 'return' (adapté à ' return') → logprob: -2.5813331604003906
    3. '
' → logprob: -6.331333160400391
    4. ' return' → logprob: -7.456333160400391
    5. '   ' → logprob: -9.83133316040039
    6. '        
' → logprob: -11.33133316040039
    7. '	return' → logprob: -11.70633316040039
    8. '           ' → logprob: -12.33133316040039
    9. '```' → logprob: -13.20633316040039
    10. '    
' → logprob: -13.58133316040039

Token 378: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.029750484973192215
    2. ' step' → logprob: -3.5297505855560303
    3. '	step' → logprob: -18.02975082397461
    4. '(step' → logprob: -18.52975082397461
    5. 'steps' → logprob: -20.65475082397461
    6. 'Step' → logprob: -21.40475082397461
    7. '.step' → logprob: -22.02975082397461
    8. '_step' → logprob: -22.27975082397461
    9. '   ' → logprob: -22.65475082397461
    10. 'self' → logprob: -23.40475082397461

Token 379: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.2200749754119897e-06
    2. 'count' → logprob: -14.250001907348633
    3. ' _' → logprob: -14.500001907348633
    4. '_' → logprob: -14.750001907348633
    5. '_cnt' → logprob: -16.125001907348633
    6. 't' → logprob: -16.250001907348633
    7. '_c' → logprob: -16.375001907348633
    8. '_counter' → logprob: -16.875001907348633
    9. '_counts' → logprob: -16.875001907348633
    10. '_code' → logprob: -17.000001907348633

Token 380: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 382: ' Input' (ID: 10090)
  Prédit: ' Kap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Kap' → logprob: -0.020514797419309616
    2. 'Kap' → logprob: -4.645514965057373
    3. ' ' → logprob: -4.895514965057373
    4. ' Solution' → logprob: -7.770514965057373
    5. ' Kar' → logprob: -8.145514488220215
    6. ' User' → logprob: -8.520514488220215
    7. ' ' → logprob: -8.645514488220215
    8. ' Kan' → logprob: -9.083014488220215
    9. '  ' → logprob: -9.270514488220215
    10. 'Solution' → logprob: -9.458014488220215

Token 383: 'Output' (ID: 6310)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.49867239594459534
    2. 'Processor' → logprob: -1.123672366142273
    3. 'Reader' → logprob: -3.3736724853515625
    4. ':' → logprob: -4.3736724853515625
    5. 'Parser' → logprob: -5.2486724853515625
    6. 'Manager' → logprob: -5.9986724853515625
    7. 'Data' → logprob: -6.1236724853515625
    8. '():' → logprob: -6.2486724853515625
    9. 'Output' → logprob: -6.2486724853515625
    10. 'Provider' → logprob: -6.4986724853515625

Token 384: 'Processor' (ID: 22334)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.44179055094718933
    2. ':' → logprob: -1.4417905807495117
    3. 'Processor' → logprob: -3.3167905807495117
    4. ':
' → logprob: -3.6917905807495117
    5. 'Helper' → logprob: -3.9417905807495117
    6. 'Manager' → logprob: -4.066790580749512
    7. '():' → logprob: -4.566790580749512
    8. 'Example' → logprob: -4.816790580749512
    9. 'Pair' → logprob: -7.191790580749512
    10. 'Wrapper' → logprob: -7.566790580749512

Token 385: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006329743773676455
    2. ':
' → logprob: -7.3756327629089355
    3. ':def' → logprob: -13.125633239746094
    4. ':

' → logprob: -13.375633239746094
    5. '():' → logprob: -13.500633239746094
    6. '(' → logprob: -15.250633239746094
    7. ' :' → logprob: -15.375633239746094
    8. '<|end|>' → logprob: -15.625633239746094
    9. '):' → logprob: -15.750633239746094
    10. ':**' → logprob: -16.375633239746094

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3290013074874878
    2. '    
' → logprob: -1.3290013074874878
    3. ' def' → logprob: -4.329001426696777
    4. '
' → logprob: -7.079001426696777
    5. 'def' → logprob: -7.079001426696777
    6. '<|end|>' → logprob: -8.079001426696777
    7. ' 
' → logprob: -8.579001426696777
    8. '```' → logprob: -9.954001426696777
    9. '        
' → logprob: -10.329001426696777
    10. '<|end|>' → logprob: -10.579001426696777

Token 387: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4194989800453186
    2. ' def' → logprob: -1.1694989204406738
    3. '@' → logprob: -3.544498920440674
    4. ' @' → logprob: -5.794498920440674
    5. '   ' → logprob: -8.794499397277832
    6. 'import' → logprob: -11.794499397277832
    7. '```' → logprob: -12.044499397277832
    8. 'class' → logprob: -12.794499397277832
    9. '	def' → logprob: -13.544499397277832
    10. 'staticmethod' → logprob: -13.919499397277832

Token 388: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.08484341204166412
    2. 'staticmethod' → logprob: -3.334843397140503
    3. ' static' → logprob: -3.459843397140503
    4. ' process' → logprob: -4.959843635559082
    5. ' def' → logprob: -5.584843635559082
    6. '__' → logprob: -6.209843635559082
    7. 'process' → logprob: -7.834843635559082
    8. 'def' → logprob: -8.084843635559082
    9. 'static' → logprob: -8.084843635559082
    10. '_' → logprob: -9.209843635559082

Token 389: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.000122608442325145
    2. 'staticmethod' → logprob: -9.875123023986816
    3. 'nit' → logprob: -10.000123023986816
    4. 'new' → logprob: -10.875123023986816
    5. 'next' → logprob: -13.250123023986816
    6. ' init' → logprob: -13.375123023986816
    7. 'int' → logprob: -13.750123023986816
    8. 'inite' → logprob: -14.375123023986816
    9. 'ini' → logprob: -15.125123023986816
    10. 'in' → logprob: -15.250123023986816

Token 390: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.11594336479902267
    2. '(self' → logprob: -2.240943431854248
    3. '__' → logprob: -6.115943431854248
    4. '(' → logprob: -7.490943431854248
    5. '__(
' → logprob: -8.49094295501709
    6. ' (' → logprob: -8.99094295501709
    7. 'self' → logprob: -11.99094295501709
    8. '__((' → logprob: -12.49094295501709
    9. '   ' → logprob: -13.36594295501709
    10. '_(' → logprob: -13.49094295501709

Token 391: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007928957231342793
    2. ')' → logprob: -5.007928848266602
    3. '):
' → logprob: -6.882928848266602
    4. '):' → logprob: -9.132928848266602
    5. ' self' → logprob: -10.257928848266602
    6. '
' → logprob: -10.882928848266602
    7. '   ' → logprob: -11.257928848266602
    8. '):

' → logprob: -12.507928848266602
    9. '(self' → logprob: -13.132928848266602
    10. '	self' → logprob: -13.257928848266602

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5865808129310608
    2. '):' → logprob: -0.8365808129310608
    3. '):
' → logprob: -5.211580753326416
    4. 'self' → logprob: -5.461580753326416
    5. ',input' → logprob: -7.461580753326416
    6. ')' → logprob: -8.586581230163574
    7. '   ' → logprob: -10.211581230163574
    8. ',self' → logprob: -10.336581230163574
    9. '(self' → logprob: -11.711581230163574
    10. ',file' → logprob: -12.211581230163574

Token 393: ' processor' (ID: 29539)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2312360554933548
    2. 'inputs' → logprob: -2.606235980987549
    3. '):
' → logprob: -2.981235980987549
    4. '):' → logprob: -3.856235980987549
    5. ' input' → logprob: -3.981235980987549
    6. ')' → logprob: -3.981235980987549
    7. 'lines' → logprob: -4.731235980987549
    8. ' lines' → logprob: -4.981235980987549
    9. ' inputs' → logprob: -5.856235980987549
    10. 'file' → logprob: -6.606235980987549

Token 394: '_cls' (ID: 93166)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04731474816799164
    2. ':' → logprob: -3.1723146438598633
    3. ')' → logprob: -6.047314643859863
    4. '):
' → logprob: -6.547314643859863
    5. '_func' → logprob: -9.172314643859863
    6. '=None' → logprob: -9.547314643859863
    7. '_processor' → logprob: -9.922314643859863
    8. '_method' → logprob: -10.047314643859863
    9. '_function' → logprob: -10.047314643859863
    10. '=' → logprob: -10.297314643859863

Token 395: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09155527502298355
    2. '):' → logprob: -2.46655535697937
    3. ':' → logprob: -6.716555118560791
    4. '):
' → logprob: -6.966555118560791
    5. ')' → logprob: -7.841555118560791
    6. ' ,' → logprob: -9.96655559539795
    7. ' ):' → logprob: -11.34155559539795
    8. '   ' → logprob: -12.96655559539795
    9. ',
' → logprob: -14.09155559539795
    10. '):
' → logprob: -14.46655559539795

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016663072630763054
    2. 'self' → logprob: -4.266663074493408
    3. ',' → logprob: -7.016663074493408
    4. ':' → logprob: -7.141663074493408
    5. ' self' → logprob: -7.766663074493408
    6. '   ' → logprob: -9.14166259765625
    7. '(self' → logprob: -9.14166259765625
    8. ')' → logprob: -10.01666259765625
    9. 'processor' → logprob: -10.14166259765625
    10. '):' → logprob: -10.76666259765625

Token 397: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08384218066930771
    2. '       ' → logprob: -2.8338422775268555
    3. ' self' → logprob: -3.8338422775268555
    4. '	self' → logprob: -11.708842277526855
    5. '   ' → logprob: -13.208842277526855
    6. '	' → logprob: -15.708842277526855
    7. ' ' → logprob: -16.20884132385254
    8. 'def' → logprob: -16.83384132385254
    9. '	   ' → logprob: -16.83384132385254
    10. '           ' → logprob: -16.95884132385254

Token 398: '.processor' (ID: 152556)
  Prédit: '.processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.processor' → logprob: -0.001979072345420718
    2. '.' → logprob: -6.251978874206543
    3. ' .' → logprob: -10.251978874206543
    4. '.process' → logprob: -12.251978874206543
    5. '._' → logprob: -12.376978874206543
    6. 'processor' → logprob: -12.376978874206543
    7. '.proc' → logprob: -14.626978874206543
    8. '.handler' → logprob: -15.376978874206543
    9. '   ' → logprob: -15.376978874206543
    10. '.processing' → logprob: -15.876978874206543

Token 399: '_cls' (ID: 93166)
  Prédit: '_cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cls' → logprob: -0.0007089786231517792
    2. '_class' → logprob: -7.750709056854248
    3. ' =' → logprob: -8.62570858001709
    4. '=' → logprob: -10.00070858001709
    5. '_' → logprob: -10.37570858001709
    6. '_processor' → logprob: -11.50070858001709
    7. '_cl' → logprob: -11.87570858001709
    8. '=_' → logprob: -12.87570858001709
    9. '_ctor' → logprob: -14.62570858001709
    10. '_instance' → logprob: -14.87570858001709

Token 400: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31331226229667664
    2. ' =' → logprob: -1.313312292098999
    3. '   ' → logprob: -10.313312530517578
    4. '_processor' → logprob: -11.938312530517578
    5. ' ' → logprob: -12.438312530517578
    6. 'processor' → logprob: -13.688312530517578
    7. '=self' → logprob: -13.813312530517578
    8. '=
' → logprob: -14.188312530517578
    9. 'self' → logprob: -14.813312530517578
    10. ' processor' → logprob: -15.063312530517578

Token 401: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.014163628220558167
    2. ' processor' → logprob: -4.264163494110107
    3. 'process' → logprob: -16.014163970947266
    4. '.processor' → logprob: -17.014163970947266
    5. 'processors' → logprob: -18.389163970947266
    6. '
' → logprob: -18.764163970947266
    7. 'proces' → logprob: -19.264163970947266
    8. 'proc' → logprob: -19.639163970947266
    9. '   ' → logprob: -19.639163970947266
    10. ' ' → logprob: -19.889163970947266

Token 402: '_cls' (ID: 93166)
  Prédit: '_cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cls' → logprob: -0.00012082771718269214
    2. 'Cls' → logprob: -9.125121116638184
    3. 'cls' → logprob: -11.500121116638184
    4. '_cl' → logprob: -14.375121116638184
    5. 'processor' → logprob: -14.625121116638184
    6. 'er' → logprob: -16.000120162963867
    7. '__' → logprob: -16.375120162963867
    8. 'or' → logprob: -16.500120162963867
    9. 's' → logprob: -16.500120162963867
    10. '   ' → logprob: -17.125120162963867

Token 403: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5130156874656677
    2. '   ' → logprob: -1.2630157470703125
    3. '    
' → logprob: -2.1380157470703125
    4. 'def' → logprob: -8.388015747070312
    5. '<|end|>' → logprob: -8.888015747070312
    6. '        
' → logprob: -9.263015747070312
    7. '  
' → logprob: -9.513015747070312
    8. '<|end|>' → logprob: -10.513015747070312
    9. '

' → logprob: -11.138015747070312
    10. ' def' → logprob: -11.388015747070312

Token 404: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038308508694171906
    2. 'def' → logprob: -3.288308620452881
    3. ' def' → logprob: -8.538308143615723
    4. '
' → logprob: -10.163308143615723
    5. '    
' → logprob: -10.413308143615723
    6. '        
' → logprob: -13.413308143615723
    7. '	def' → logprob: -14.288308143615723
    8. '<|end|>' → logprob: -15.913308143615723
    9. '       ' → logprob: -16.28830909729004
    10. '<|end|>' → logprob: -16.53830909729004

Token 405: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00014096579980105162
    2. ' def' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.000141143798828
    4. 'class' → logprob: -16.375141143798828
    5. '	def' → logprob: -16.625141143798828
    6. '
' → logprob: -17.000141143798828
    7. ')' → logprob: -17.875141143798828
    8. 'de' → logprob: -18.250141143798828
    9. ' ' → logprob: -18.375141143798828
    10. 'from' → logprob: -18.750141143798828

Token 406: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.013991545885801315
    2. ' process' → logprob: -4.888991355895996
    3. 'run' → logprob: -5.138991355895996
    4. 'read' → logprob: -8.263991355895996
    5. ' run' → logprob: -9.263991355895996
    6. 'execute' → logprob: -9.513991355895996
    7. '_process' → logprob: -10.888991355895996
    8. 'from' → logprob: -11.138991355895996
    9. 'parse' → logprob: -11.388991355895996
    10. 'handle' → logprob: -11.763991355895996

Token 407: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008068625815212727
    2. '_line' → logprob: -5.008068561553955
    3. '(' → logprob: -6.883068561553955
    4. '_input' → logprob: -8.258069038391113
    5. '(input' → logprob: -10.383069038391113
    6. '(line' → logprob: -10.383069038391113
    7. ' (' → logprob: -13.508069038391113
    8. '(
' → logprob: -13.508069038391113
    9. 'self' → logprob: -14.383069038391113
    10. '_(' → logprob: -14.383069038391113

Token 408: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004110577050596476
    2. '(' → logprob: -5.504110813140869
    3. 'self' → logprob: -10.879110336303711
    4. '_line' → logprob: -11.754110336303711
    5. ' (' → logprob: -12.754110336303711
    6. 'line' → logprob: -13.504110336303711
    7. '(line' → logprob: -14.504110336303711
    8. '(
' → logprob: -14.754110336303711
    9. 's' → logprob: -16.50411033630371
    10. ' line' → logprob: -16.62911033630371

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.269565634895116e-05
    2. ',input' → logprob: -9.750092506408691
    3. ',line' → logprob: -11.125092506408691
    4. 'self' → logprob: -11.500092506408691
    5. ' ,' → logprob: -12.000092506408691
    6. 's' → logprob: -14.000092506408691
    7. '):' → logprob: -14.250092506408691
    8. '):
' → logprob: -14.500092506408691
    9. ',self' → logprob: -14.625092506408691
    10. ',s' → logprob: -15.875092506408691

Token 410: ' lines' (ID: 8698)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11764678359031677
    2. 'line' → logprob: -2.6176466941833496
    3. ' input' → logprob: -3.7426466941833496
    4. 'self' → logprob: -4.74264669418335
    5. ' line' → logprob: -5.99264669418335
    6. 'raw' → logprob: -6.86764669418335
    7. 'number' → logprob: -7.49264669418335
    8. ' self' → logprob: -7.99264669418335
    9. 'user' → logprob: -8.117647171020508
    10. 'lines' → logprob: -8.117647171020508

Token 411: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16140903532505035
    2. '):' → logprob: -2.0364091396331787
    3. '):
' → logprob: -4.1614089012146
    4. ')' → logprob: -6.0364089012146
    5. '   ' → logprob: -8.411409378051758
    6. ':list' → logprob: -8.411409378051758
    7. 'self' → logprob: -9.911409378051758
    8. '=' → logprob: -10.911409378051758
    9. '       ' → logprob: -11.411409378051758
    10. ':str' → logprob: -11.536409378051758

Token 412: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0021756007336080074
    2. ')' → logprob: -6.752175807952881
    3. 'iter' → logprob: -7.377175807952881
    4. ' list' → logprob: -8.502175331115723
    5. '[list' → logprob: -9.627175331115723
    6. 'str' → logprob: -10.002175331115723
    7. '[str' → logprob: -10.627175331115723
    8. '):
' → logprob: -10.752175331115723
    9. 'lines' → logprob: -11.127175331115723
    10. 'List' → logprob: -13.752175331115723

Token 413: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: 0.0
    2. ')' → logprob: -17.75
    3. 'str' → logprob: -17.75
    4. '[' → logprob: -19.25
    5. '):
' → logprob: -19.5
    6. ':str' → logprob: -19.875
    7. '   ' → logprob: -20.0
    8. '):' → logprob: -20.125
    9. '(str' → logprob: -20.5
    10. '	str' → logprob: -20.75

Token 414: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004093835595995188
    2. ')' → logprob: -5.504093647003174
    3. ']):
' → logprob: -12.129094123840332
    4. ']' → logprob: -13.004094123840332
    5. ' ])' → logprob: -13.129094123840332
    6. ']):' → logprob: -13.254094123840332
    7. '   ' → logprob: -13.379094123840332
    8. ''])' → logprob: -14.254094123840332
    9. '])->' → logprob: -15.129094123840332
    10. '）' → logprob: -15.129094123840332

Token 415: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.3832997977733612
    2. '->' → logprob: -1.2582998275756836
    3. ':' → logprob: -3.6332998275756836
    4. '   ' → logprob: -5.758299827575684
    5. ')' → logprob: -6.258299827575684
    6. '       ' → logprob: -6.633299827575684
    7. ':
' → logprob: -6.883299827575684
    8. ')->' → logprob: -8.133299827575684
    9. '->[' → logprob: -9.758299827575684
    10. ':return' → logprob: -11.508299827575684

Token 416: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0006995689473114908
    2. ' list' → logprob: -8.000699996948242
    3. '[list' → logprob: -8.750699996948242
    4. 'str' → logprob: -8.875699996948242
    5. 'int' → logprob: -10.125699996948242
    6. 'Kap' → logprob: -11.750699996948242
    7. 'None' → logprob: -12.000699996948242
    8. '[str' → logprob: -12.000699996948242
    9. '[int' → logprob: -13.625699996948242
    10. '(list' → logprob: -14.000699996948242

Token 417: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.10021228343248367
    2. '[int' → logprob: -2.350212335586548
    3. '   ' → logprob: -13.350212097167969
    4. ':' → logprob: -13.850212097167969
    5. 'str' → logprob: -14.100212097167969
    6. '[' → logprob: -14.225212097167969
    7. 'int' → logprob: -14.225212097167969
    8. ':
' → logprob: -14.475212097167969
    9. '       ' → logprob: -15.600212097167969
    10. '[
' → logprob: -16.47521209716797

Token 418: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5393752455711365
    2. ']' → logprob: -1.0393753051757812
    3. ']:' → logprob: -2.7893753051757812
    4. '   ' → logprob: -7.039375305175781
    5. ']:
' → logprob: -7.914375305175781
    6. '):
' → logprob: -8.164375305175781
    7. '       ' → logprob: -8.789375305175781
    8. ']:

' → logprob: -10.664375305175781
    9. ']
' → logprob: -11.664375305175781
    10. '):' → logprob: -11.789375305175781

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006919435109011829
    2. 'result' → logprob: -7.500691890716553
    3. 'outputs' → logprob: -10.000692367553711
    4. 'output' → logprob: -10.250692367553711
    5. 'results' → logprob: -10.375692367553711
    6. ' result' → logprob: -11.375692367553711
    7. 'tokens' → logprob: -12.250692367553711
    8. 'processed' → logprob: -13.000692367553711
    9. ' results' → logprob: -13.250692367553711
    10. ' output' → logprob: -14.125692367553711

Token 420: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.007894543930888176
    2. 'result' → logprob: -5.257894515991211
    3. ' results' → logprob: -6.257894515991211
    4. '       ' → logprob: -7.257894515991211
    5. 'output' → logprob: -10.757894515991211
    6. ' result' → logprob: -11.757894515991211
    7. 'outputs' → logprob: -11.757894515991211
    8. 'return' → logprob: -15.507894515991211
    9. ' output' → logprob: -17.25789451599121
    10. '	results' → logprob: -17.50789451599121

Token 421: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16034668684005737
    2. '=' → logprob: -1.9103467464447021
    3. '=[]' → logprob: -9.035346984863281
    4. '   ' → logprob: -13.410346984863281
    5. '=[]
' → logprob: -14.160346984863281
    6. '[]' → logprob: -14.535346984863281
    7. ':' → logprob: -15.160346984863281
    8. ' ' → logprob: -15.910346984863281
    9. ']' → logprob: -16.41034698486328
    10. ',' → logprob: -16.66034698486328

Token 422: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.001007919549010694
    2. '[]
' → logprob: -7.001008033752441
    3. ' []' → logprob: -9.251008033752441
    4. '[' → logprob: -15.876008033752441
    5. ' []
' → logprob: -15.876008033752441
    6. '[]

' → logprob: -16.501007080078125
    7. '[]}' → logprob: -17.501007080078125
    8. '[]>' → logprob: -18.501007080078125
    9. '[]"' → logprob: -18.501007080078125
    10. '   ' → logprob: -19.626007080078125

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9504606825648807e-05
    2. ' for' → logprob: -11.125019073486328
    3. 'for' → logprob: -12.375019073486328
    4. '   ' → logprob: -14.625019073486328
    5. '	' → logprob: -17.000019073486328
    6. '           ' → logprob: -18.500019073486328
    7. ',' → logprob: -18.500019073486328
    8. '	   ' → logprob: -18.625019073486328
    9. '```' → logprob: -18.875019073486328
    10. '        
' → logprob: -18.875019073486328

Token 424: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.017701132223010063
    2. '       ' → logprob: -4.517701148986816
    3. ' for' → logprob: -5.017701148986816
    4. '   ' → logprob: -11.642701148986816
    5. '	for' → logprob: -12.767701148986816
    6. '
' → logprob: -17.5177001953125
    7. '	' → logprob: -17.6427001953125
    8. ' ' → logprob: -18.7677001953125
    9. '```' → logprob: -19.5177001953125
    10. '           ' → logprob: -20.1427001953125

Token 425: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.005581995006650686
    2. ' line' → logprob: -5.505581855773926
    3. 'number' → logprob: -6.505581855773926
    4. ' number' → logprob: -12.005581855773926
    5. 'num' → logprob: -13.880581855773926
    6. 'input' → logprob: -16.630582809448242
    7. 'lines' → logprob: -16.880582809448242
    8. '	line' → logprob: -17.005582809448242
    9. 'raw' → logprob: -17.130582809448242
    10. '(line' → logprob: -19.505582809448242

Token 426: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00012368128227535635
    2. 'in' → logprob: -9.000123977661133
    3. '       ' → logprob: -16.375123977661133
    4. ' ' → logprob: -17.500123977661133
    5. '        ' → logprob: -18.125123977661133
    6. '	in' → logprob: -18.250123977661133
    7. 'line' → logprob: -18.375123977661133
    8. '_in' → logprob: -18.375123977661133
    9. ' i' → logprob: -18.625123977661133
    10. '   ' → logprob: -18.750123977661133

Token 427: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0008065330912359059
    2. ' lines' → logprob: -7.1258063316345215
    3. '(lines' → logprob: -13.75080680847168
    4. 'line' → logprob: -14.50080680847168
    5. '	lines' → logprob: -15.12580680847168
    6. '   ' → logprob: -16.50080680847168
    7. '.lines' → logprob: -17.25080680847168
    8. ' ' → logprob: -17.87580680847168
    9. 'lin' → logprob: -18.25080680847168
    10. 'self' → logprob: -18.87580680847168

Token 428: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6351913809776306
    2. ':' → logprob: -0.7601913809776306
    3. '.strip' → logprob: -6.760191440582275
    4. '           ' → logprob: -6.885191440582275
    5. '       ' → logprob: -8.135190963745117
    6. '):
' → logprob: -10.135190963745117
    7. ',' → logprob: -10.260190963745117
    8. '.rstrip' → logprob: -11.260190963745117
    9. ':

' → logprob: -12.260190963745117
    10. ':
' → logprob: -12.385190963745117

Token 429: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.214019307051785e-05
    2. ' line' → logprob: -11.000032424926758
    3. ' if' → logprob: -12.000032424926758
    4. '            
' → logprob: -12.250032424926758
    5. 'line' → logprob: -14.250032424926758
    6. ' self' → logprob: -14.375032424926758
    7. 'self' → logprob: -14.750032424926758
    8. ' stripped' → logprob: -14.750032424926758
    9. '          ' → logprob: -15.375032424926758
    10. '            ' → logprob: -15.500032424926758

Token 430: ' number' (ID: 2086)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5214070677757263
    2. 'processor' → logprob: -1.521407127380371
    3. ' processor' → logprob: -2.521407127380371
    4. ' line' → logprob: -2.646407127380371
    5. 'line' → logprob: -3.646407127380371
    6. ' if' → logprob: -5.521407127380371
    7. 'number' (adapté à ' number') → logprob: -6.146407127380371
    8. ' number' → logprob: -7.021407127380371
    9. 'proc' → logprob: -7.021407127380371
    10. 'if' → logprob: -7.396407127380371

Token 431: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692968547344208
    2. '=' → logprob: -2.126929759979248
    3. ')' → logprob: -14.50192928314209
    4. '    ' → logprob: -15.50192928314209
    5. '   ' → logprob: -15.62692928314209
    6. '=line' → logprob: -15.62692928314209
    7. ' ' → logprob: -16.001930236816406
    8. '_str' → logprob: -16.126930236816406
    9. ',' → logprob: -16.376930236816406
    10. '_' → logprob: -16.501930236816406

Token 432: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00020354038861114532
    2. ' line' → logprob: -8.500203132629395
    3. '	line' → logprob: -19.25020408630371
    4. '=line' → logprob: -19.37520408630371
    5. '   ' → logprob: -20.37520408630371
    6. '(line' → logprob: -20.62520408630371
    7. '#line' → logprob: -20.75020408630371
    8. 'lin' → logprob: -21.62520408630371
    9. ' ' → logprob: -21.62520408630371
    10. 'li' → logprob: -22.00020408630371

Token 433: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -2.4272752852994017e-05
    2. '.' → logprob: -10.75002384185791
    3. '.rstrip' → logprob: -13.25002384185791
    4. 'strip' → logprob: -13.87502384185791
    5. '
' → logprob: -16.750024795532227
    6. '.trim' → logprob: -18.500024795532227
    7. ' strip' → logprob: -18.625024795532227
    8. '            
' → logprob: -19.000024795532227
    9. '.split' → logprob: -19.250024795532227
    10. '.
' → logprob: -19.250024795532227

Token 434: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18763096630573273
    2. ')
' → logprob: -2.4376308917999268
    3. '           ' → logprob: -2.9376308917999268
    4. '()' → logprob: -3.9376308917999268
    5. '()
' → logprob: -4.562631130218506
    6. '
' → logprob: -7.937631130218506
    7. '())' → logprob: -9.312630653381348
    8. 'if' → logprob: -9.312630653381348
    9. '               ' → logprob: -10.062630653381348
    10. '())
' → logprob: -10.437630653381348

Token 435: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.574251918005757e-05
    2. 'processor' → logprob: -11.125055313110352
    3. ' if' → logprob: -11.250055313110352
    4. ' processor' → logprob: -11.625055313110352
    5. '            
' → logprob: -12.000055313110352
    6. '       ' → logprob: -12.000055313110352
    7. 'if' → logprob: -13.000055313110352
    8. 'process' → logprob: -14.000055313110352
    9. 'token' → logprob: -14.500055313110352
    10. '               ' → logprob: -14.500055313110352

Token 436: ' if' (ID: 538)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.0182020366191864
    2. ' processor' → logprob: -4.26820182800293
    3. 'if' (adapté à ' if') → logprob: -6.51820182800293
    4. 'process' → logprob: -6.89320182800293
    5. '           ' → logprob: -7.14320182800293
    6. 'proc' → logprob: -7.89320182800293
    7. ' if' → logprob: -8.39320182800293
    8. 'result' → logprob: -9.76820182800293
    9. 'instance' → logprob: -10.26820182800293
    10. 'p' → logprob: -10.76820182800293

Token 437: ' number' (ID: 2086)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3190282881259918
    2. 'not' → logprob: -1.3190282583236694
    3. 'number' → logprob: -5.319028377532959
    4. ' number' → logprob: -7.069028377532959
    5. '	not' → logprob: -14.6940279006958
    6. 'len' → logprob: -15.1940279006958
    7. 'no' → logprob: -15.8190279006958
    8. 'n' → logprob: -15.9440279006958
    9. ' len' → logprob: -16.319028854370117
    10. ' ' → logprob: -16.444028854370117

Token 438: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.027372632175683975
    2. ':' → logprob: -3.9023725986480713
    3. ' ==' → logprob: -5.02737283706665
    4. '=' → logprob: -8.652372360229492
    5. '!=' → logprob: -10.027372360229492
    6. '===' → logprob: -11.652372360229492
    7. ']==' → logprob: -12.277372360229492
    8. ')==' → logprob: -12.402372360229492
    9. '=="' → logprob: -12.527372360229492
    10. '):' → logprob: -12.652372360229492

Token 439: ' "' (ID: 392)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.1804669350385666
    2. '''' → logprob: -1.930466890335083
    3. '"":' → logprob: -3.930466890335083
    4. '"' → logprob: -8.180466651916504
    5. ''' → logprob: -9.055466651916504
    6. ' ""' → logprob: -11.930466651916504
    7. ' "":
' → logprob: -14.430466651916504
    8. ' "' → logprob: -14.805466651916504
    9. ' ''' → logprob: -15.305466651916504
    10. ' '':
' → logprob: -16.43046760559082

Token 440: '000' (ID: 1302)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.022171614691615105
    2. 'END' → logprob: -4.272171497344971
    3. '"' → logprob: -5.397171497344971
    4. '"":' → logprob: -6.522171497344971
    5. '":
' → logprob: -7.022171497344971
    6. 'STOP' → logprob: -7.772171497344971
    7. '""' → logprob: -8.022171974182129
    8. 'DONE' → logprob: -9.272171974182129
    9. 'EXIT' → logprob: -9.647171974182129
    10. 'QUIT' → logprob: -10.772171974182129

Token 441: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.843177233240567e-05
    2. '00' → logprob: -11.125018119812012
    3. '000' → logprob: -13.375018119812012
    4. '"' → logprob: -13.875018119812012
    5. '":' → logprob: -14.250018119812012
    6. '":
' → logprob: -15.875018119812012
    7. '
' → logprob: -16.625019073486328
    8. '"):
' → logprob: -17.250019073486328
    9. '```' → logprob: -17.375019073486328
    10. ' ' → logprob: -17.500019073486328

Token 442: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.02650487795472145
    2. '":' → logprob: -3.6515049934387207
    3. '":
' → logprob: -9.276504516601562
    4. '"' → logprob: -9.526504516601562
    5. '"):
' → logprob: -11.151504516601562
    6. '):
' → logprob: -11.651504516601562
    7. ':
' → logprob: -11.651504516601562
    8. ':' → logprob: -13.276504516601562
    9. '__":
' → logprob: -13.526504516601562
    10. '":

' → logprob: -13.526504516601562

Token 443: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001463299704482779
    2. 'break' → logprob: -9.00014591217041
    3. ' break' → logprob: -11.75014591217041
    4. '	           ' → logprob: -12.25014591217041
    5. '                   ' → logprob: -12.37514591217041
    6. '           ' → logprob: -13.25014591217041
    7. '
' → logprob: -14.00014591217041
    8. '              ' → logprob: -14.12514591217041
    9. '			' → logprob: -14.25014591217041
    10. '	break' → logprob: -14.37514591217041

Token 444: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.07733016461133957
    2. ' break' → logprob: -3.0773301124572754
    3. '               ' → logprob: -3.5773301124572754
    4. '	break' → logprob: -8.202330589294434
    5. '                   ' → logprob: -9.452330589294434
    6. '           ' → logprob: -10.827330589294434
    7. '	           ' → logprob: -12.202330589294434
    8. '_break' → logprob: -13.452330589294434
    9. 'continue' → logprob: -13.702330589294434
    10. '			' → logprob: -13.702330589294434

Token 445: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01670481264591217
    2. '
' → logprob: -4.39170503616333
    3. '            
' → logprob: -5.51670503616333
    4. '    
' → logprob: -9.641704559326172
    5. '               ' → logprob: -10.516704559326172
    6. '<|end|>' → logprob: -11.141704559326172
    7. '                
' → logprob: -11.391704559326172
    8. '        
' → logprob: -11.391704559326172
    9. ',' → logprob: -11.516704559326172
    10. '  
' → logprob: -11.766704559326172

Token 446: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010425841173855588
    2. '            
' → logprob: -9.625103950500488
    3. '
' → logprob: -10.375103950500488
    4. '    
' → logprob: -13.125103950500488
    5. '        
' → logprob: -13.250103950500488
    6. '<|end|>' → logprob: -13.750103950500488
    7. '          ' → logprob: -14.500103950500488
    8. '       ' → logprob: -14.750103950500488
    9. '               ' → logprob: -14.875103950500488
    10. '  
' → logprob: -15.125103950500488

Token 447: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.6358818411827087
    2. '           ' → logprob: -1.0108819007873535
    3. ' processor' → logprob: -2.2608819007873535
    4. 'process' → logprob: -6.3858819007873535
    5. 'proc' → logprob: -8.635881423950195
    6. '            
' → logprob: -8.760881423950195
    7. ' process' → logprob: -9.260881423950195
    8. 'instance' → logprob: -9.385881423950195
    9. '       ' → logprob: -10.135881423950195
    10. 'result' → logprob: -10.260881423950195

Token 448: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37165606021881104
    2. '_instance' → logprob: -1.371656060218811
    3. '=' → logprob: -2.8716559410095215
    4. 'instance' → logprob: -9.74665641784668
    5. '   ' → logprob: -10.87165641784668
    6. '_obj' → logprob: -11.37165641784668
    7. '_' → logprob: -11.74665641784668
    8. '_process' → logprob: -11.87165641784668
    9. '_object' → logprob: -12.74665641784668
    10. '_processor' → logprob: -12.87165641784668

Token 449: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3132617771625519
    2. ' self' → logprob: -1.3132617473602295
    3. '(self' → logprob: -17.438261032104492
    4. '           ' → logprob: -18.188261032104492
    5. '	self' → logprob: -19.313261032104492
    6. '=self' → logprob: -19.938261032104492
    7. 'Self' → logprob: -20.563261032104492
    8. '[self' → logprob: -20.938261032104492
    9. '            ' → logprob: -21.813261032104492
    10. '
' → logprob: -22.688261032104492

Token 450: '.processor' (ID: 152556)
  Prédit: '.processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.processor' → logprob: -7.696077227592468e-05
    2. 'processor' → logprob: -9.500077247619629
    3. '.' → logprob: -13.250077247619629
    4. '.process' → logprob: -15.125077247619629
    5. ' .' → logprob: -16.875076293945312
    6. '.processing' → logprob: -17.125076293945312
    7. '.proc' → logprob: -17.750076293945312
    8. '.provider' → logprob: -17.875076293945312
    9. ' processor' → logprob: -18.250076293945312
    10. '.user' → logprob: -18.375076293945312

Token 451: '_cls' (ID: 93166)
  Prédit: '_cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cls' → logprob: -7.600714161526412e-05
    2. 'Cls' → logprob: -9.625076293945312
    3. 'cls' → logprob: -11.750076293945312
    4. '.cls' → logprob: -14.500076293945312
    5. '617' → logprob: -14.625076293945312
    6. 'self' → logprob: -15.000076293945312
    7. '_cl' → logprob: -16.125076293945312
    8. '_' → logprob: -16.375076293945312
    9. 'Clazz' → logprob: -16.750076293945312
    10. '613' → logprob: -17.000076293945312

Token 452: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -9.253090865968261e-06
    2. 'number' → logprob: -11.875009536743164
    3. '(' → logprob: -13.375009536743164
    4. '[number' → logprob: -14.500009536743164
    5. '(line' → logprob: -16.375009536743164
    6. '(numbers' → logprob: -16.875009536743164
    7. '(n' → logprob: -17.625009536743164
    8. '(
' → logprob: -17.875009536743164
    9. '(Number' → logprob: -17.875009536743164
    10. '(process' → logprob: -17.875009536743164

Token 453: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6936450004577637
    2. ')
' → logprob: -0.6936450004577637
    3. '           ' → logprob: -7.818645000457764
    4. ')
' → logprob: -9.318645477294922
    5. '       ' → logprob: -13.068645477294922
    6. '               ' → logprob: -14.068645477294922
    7. ')

' → logprob: -14.193645477294922
    8. ').' → logprob: -14.693645477294922
    9. ' )
' → logprob: -14.693645477294922
    10. '          ' → logprob: -15.318645477294922

Token 454: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0211477167904377
    2. 'result' → logprob: -4.396147727966309
    3. 'results' → logprob: -4.771147727966309
    4. ' results' → logprob: -9.396147727966309
    5. ' result' → logprob: -10.146147727966309
    6. '       ' → logprob: -12.896147727966309
    7. 'output' → logprob: -13.146147727966309
    8. '
' → logprob: -14.396147727966309
    9. '```' → logprob: -14.521147727966309
    10. '            
' → logprob: -14.896147727966309

Token 455: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.002608237089589238
    2. ' result' → logprob: -6.002608299255371
    3. 'results' → logprob: -9.002608299255371
    4. '           ' → logprob: -11.752608299255371
    5. 'steps' → logprob: -14.252608299255371
    6. ' results' → logprob: -14.877608299255371
    7. 'res' → logprob: -15.877608299255371
    8. 'output' → logprob: -16.377607345581055
    9. '	result' → logprob: -16.377607345581055
    10. 'step' → logprob: -16.877607345581055

Token 456: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619683600962162
    2. '=' → logprob: -2.8119683265686035
    3. 's' → logprob: -15.936968803405762
    4. ' ' → logprob: -16.061967849731445
    5. '_value' → logprob: -16.061967849731445
    6. '_str' → logprob: -16.686967849731445
    7. ')' → logprob: -16.686967849731445
    8. '=result' → logprob: -16.686967849731445
    9. '_result' → logprob: -16.811967849731445
    10. '.' → logprob: -16.811967849731445

Token 457: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.006186875980347395
    2. ' processor' → logprob: -5.2561869621276855
    3. 'str' → logprob: -7.0061869621276855
    4. ' str' → logprob: -10.006186485290527
    5. '.processor' → logprob: -15.131186485290527
    6. '   ' → logprob: -15.381186485290527
    7. 'processors' → logprob: -15.381186485290527
    8. '           ' → logprob: -15.631186485290527
    9. 'process' → logprob: -15.881186485290527
    10. '`' → logprob: -17.506187438964844

Token 458: '.execute' (ID: 13242)
  Prédit: '.execute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.execute' → logprob: -2.935296834039036e-06
    2. '.' → logprob: -13.12500286102295
    3. '.process' → logprob: -14.62500286102295
    4. ' .' → logprob: -15.12500286102295
    5. '.evaluate' → logprob: -16.125003814697266
    6. 'execute' → logprob: -16.750003814697266
    7. '.fetchall' → logprob: -17.625003814697266
    8. '.enqueue' → logprob: -17.750003814697266
    9. '.Execute' → logprob: -18.250003814697266
    10. '.mainloop' → logprob: -18.750003814697266

Token 459: '_until' (ID: 115218)
  Prédit: '_until'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_until' → logprob: 0.0
    2. 'until' → logprob: -17.625
    3. '_without' → logprob: -17.625
    4. '_once' → logprob: -17.875
    5. '_
' → logprob: -19.5
    6. '_' → logprob: -20.375
    7. '_to' → logprob: -20.375
    8. '_except' → logprob: -20.5
    9. 'Until' → logprob: -20.625
    10. '_before' → logprob: -20.625

Token 460: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -5.836499985889532e-05
    2. 'target' → logprob: -9.7500581741333
    3. '
' → logprob: -17.375059127807617
    4. 'arget' → logprob: -18.000059127807617
    5. '(target' → logprob: -18.750059127807617
    6. 'TARGET' → logprob: -19.000059127807617
    7. '_' → logprob: -19.250059127807617
    8. '```' → logprob: -19.375059127807617
    9. '__' → logprob: -19.750059127807617
    10. '_targets' → logprob: -19.750059127807617

Token 461: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: 0.0
    2. 'or' → logprob: -19.125
    3. '_' → logprob: -19.875
    4. '_OR' → logprob: -20.125
    5. '```' → logprob: -20.5
    6. '_at' → logprob: -21.0
    7. '-or' → logprob: -21.25
    8. '_once' → logprob: -21.25
    9. '_o' → logprob: -21.25
    10. '_target' → logprob: -21.5

Token 462: '_invalid' (ID: 71389)
  Prédit: '_invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_invalid' → logprob: -0.38695061206817627
    2. 'invalid' → logprob: -1.1369506120681763
    3. 'target' → logprob: -10.261950492858887
    4. '_target' → logprob: -10.511950492858887
    5. '_valid' → logprob: -12.011950492858887
    6. ' invalid' → logprob: -12.886950492858887
    7. '
' → logprob: -13.011950492858887
    8. 'valid' → logprob: -13.136950492858887
    9. 'Invalid' → logprob: -13.511950492858887
    10. '```' → logprob: -14.011950492858887

Token 463: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02975812554359436
    2. '()
' → logprob: -3.5297582149505615
    3. '()
' → logprob: -12.15475845336914
    4. ' ()' → logprob: -14.02975845336914
    5. '()

' → logprob: -14.27975845336914
    6. '()`' → logprob: -14.52975845336914
    7. '()"' → logprob: -15.15475845336914
    8. '())' → logprob: -15.77975845336914
    9. ' ()
' → logprob: -17.52975845336914
    10. '()\' → logprob: -17.77975845336914

Token 464: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022061895579099655
    2. '
' → logprob: -4.647061824798584
    3. ' results' → logprob: -5.022061824798584
    4. 'results' → logprob: -5.272061824798584
    5. '<|end|>' → logprob: -8.647062301635742
    6. '(results' → logprob: -9.022062301635742
    7. 'result' → logprob: -9.522062301635742
    8. '            
' → logprob: -9.897062301635742
    9. '<|end|>' → logprob: -10.772062301635742
    10. '	results' → logprob: -11.022062301635742

Token 465: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.010914593003690243
    2. ' results' → logprob: -4.7609148025512695
    3. '           ' → logprob: -6.2609148025512695
    4. 'if' → logprob: -8.26091480255127
    5. '
' → logprob: -9.01091480255127
    6. ' if' → logprob: -12.38591480255127
    7. '	results' → logprob: -13.26091480255127
    8. '            
' → logprob: -13.76091480255127
    9. 'result' → logprob: -15.76091480255127
    10. '       ' → logprob: -16.510913848876953

Token 466: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.4021237802808173e-05
    2. '.' → logprob: -11.250014305114746
    3. 'append' → logprob: -14.375014305114746
    4. '.extend' → logprob: -15.000014305114746
    5. '_append' → logprob: -16.12501335144043
    6. '.Append' → logprob: -18.50001335144043
    7. '.app' → logprob: -18.75001335144043
    8. '.ap' → logprob: -19.37501335144043
    9. ' append' → logprob: -19.62501335144043
    10. 'Append' → logprob: -19.87501335144043

Token 467: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.750001907348633
    3. 'str' → logprob: -14.125001907348633
    4. '(f' → logprob: -19.625001907348633
    5. '	str' → logprob: -19.750001907348633
    6. '(
' → logprob: -20.000001907348633
    7. '[str' → logprob: -20.500001907348633
    8. '=str' → logprob: -20.625001907348633
    9. ' str' → logprob: -20.750001907348633
    10. '(""' → logprob: -21.750001907348633

Token 468: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -1.0325924449716695e-05
    2. 'result' → logprob: -11.50001049041748
    3. '(' → logprob: -17.000009536743164
    4. '=result' → logprob: -18.000009536743164
    5. '[result' → logprob: -18.750009536743164
    6. ' result' → logprob: -19.375009536743164
    7. ',result' → logprob: -20.500009536743164
    8. '	result' → logprob: -21.000009536743164
    9. ')' → logprob: -21.625009536743164
    10. '(results' → logprob: -21.750009536743164

Token 469: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.038045283406972885
    2. ')' → logprob: -3.2880451679229736
    3. '))
' → logprob: -13.038044929504395
    4. ')))' → logprob: -13.913044929504395
    5. ')
' → logprob: -15.038044929504395
    6. '()))' → logprob: -15.413044929504395
    7. ' ))' → logprob: -15.663044929504395
    8. '   ' → logprob: -16.78804588317871
    9. '       ' → logprob: -16.91304588317871
    10. '())' → logprob: -18.16304588317871

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011772842844948173
    2. 'return' → logprob: -9.375117301940918
    3. ' return' → logprob: -10.625117301940918
    4. '
' → logprob: -12.500117301940918
    5. '   ' → logprob: -12.750117301940918
    6. '	' → logprob: -13.875117301940918
    7. '	return' → logprob: -15.250117301940918
    8. '      ' → logprob: -15.625117301940918
    9. '<|end|>' → logprob: -16.000118255615234
    10. '```' → logprob: -16.500118255615234

Token 471: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10214924067258835
    2. '       ' → logprob: -2.352149248123169
    3. ' return' → logprob: -6.72714900970459
    4. '
' → logprob: -7.85214900970459
    5. '   ' → logprob: -7.97714900970459
    6. '	return' → logprob: -11.60214900970459
    7. '```' → logprob: -14.47714900970459
    8. '        
' → logprob: -15.47714900970459
    9. '	' → logprob: -15.47714900970459
    10. ':return' → logprob: -15.97714900970459

Token 472: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -4.56102097814437e-05
    2. ' results' → logprob: -10.000045776367188
    3. '(results' → logprob: -16.250045776367188
    4. '	results' → logprob: -19.875045776367188
    5. 'result' → logprob: -20.750045776367188
    6. '
' → logprob: -22.250045776367188
    7. '.results' → logprob: -23.750045776367188
    8. '[' → logprob: -25.000045776367188
    9. 'Results' → logprob: -25.125045776367188
    10. 'list' → logprob: -25.625045776367188

Token 473: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4899727702140808
    2. '
' → logprob: -1.1149728298187256
    3. '    
' → logprob: -3.3649728298187256
    4. '<|end|>' → logprob: -3.8649728298187256
    5. 'def' → logprob: -5.7399725914001465
    6. '        
' → logprob: -8.239973068237305
    7. '<|end|>' → logprob: -8.864973068237305
    8. '  
' → logprob: -9.239973068237305
    9. '[
' → logprob: -10.239973068237305
    10. '```' → logprob: -10.614973068237305

Token 474: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0842457264661789
    2. 'def' → logprob: -2.7092456817626953
    3. 'import' → logprob: -5.209245681762695
    4. '#' → logprob: -5.334245681762695
    5. 'processor' → logprob: -6.084245681762695
    6. '```' → logprob: -6.959245681762695
    7. 'input' → logprob: -7.584245681762695
    8. ' if' → logprob: -10.084245681762695
    9. '
' → logprob: -10.584245681762695
    10. 'class' → logprob: -10.709245681762695

Token 475: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10029228776693344
    2. ' main' → logprob: -2.350292205810547
    3. 'run' → logprob: -9.600292205810547
    4. ' run' → logprob: -11.725292205810547
    5. 'process' → logprob: -11.725292205810547
    6. 'read' → logprob: -13.975292205810547
    7. 'solve' → logprob: -14.850292205810547
    8. ' process' → logprob: -15.350292205810547
    9. '	main' → logprob: -15.725292205810547
    10. ' solve' → logprob: -16.100292205810547

Token 476: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.759734732331708e-05
    2. '():
' → logprob: -11.125017166137695
    3. ' ():' → logprob: -13.000017166137695
    4. '()' → logprob: -14.625017166137695
    5. '():
' → logprob: -18.250017166137695
    6. '(' → logprob: -18.500017166137695
    7. '():

' → logprob: -19.000017166137695
    8. '()>' → logprob: -19.625017166137695
    9. '_' → logprob: -19.625017166137695
    10. ':' → logprob: -19.625017166137695

Token 477: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4621715545654297
    2. ' import' → logprob: -1.0871715545654297
    3. '   ' → logprob: -3.4621715545654297
    4. 'io' → logprob: -7.58717155456543
    5. ' lines' → logprob: -7.83717155456543
    6. ' io' → logprob: -8.58717155456543
    7. ' input' → logprob: -8.96217155456543
    8. 'input' → logprob: -9.08717155456543
    9. 'processor' → logprob: -9.83717155456543
    10. 'ioc' → logprob: -9.96217155456543

Token 478: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.14441533386707306
    2. ' import' → logprob: -2.0194153785705566
    3. '   ' → logprob: -6.769415378570557
    4. 'io' → logprob: -8.019414901733398
    5. ' lines' → logprob: -9.644414901733398
    6. 'input' → logprob: -9.769414901733398
    7. 'processor' → logprob: -10.394414901733398
    8. 'ioc' → logprob: -10.519414901733398
    9. 'ios' → logprob: -10.894414901733398
    10. 'lines' → logprob: -10.894414901733398

Token 479: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5759414434432983
    2. ' sys' → logprob: -0.8259414434432983
    3. '=sys' → logprob: -13.82594108581543
    4. '	sys' → logprob: -13.95094108581543
    5. '(sys' → logprob: -16.70094108581543
    6. '.sys' → logprob: -16.82594108581543
    7. '_sys' → logprob: -18.07594108581543
    8. '/sys' → logprob: -20.70094108581543
    9. 'file' → logprob: -20.95094108581543
    10. 'os' → logprob: -21.20094108581543

Token 480: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0054160114377737045
    2. '
' → logprob: -5.630415916442871
    3. '    
' → logprob: -7.130415916442871
    4. ' lines' → logprob: -7.755415916442871
    5. '	lines' → logprob: -8.130415916442871
    6. 'input' → logprob: -8.755415916442871
    7. 'lines' → logprob: -9.380415916442871
    8. '_lines' → logprob: -10.880415916442871
    9. '(lines' → logprob: -12.130415916442871
    10. 'for' → logprob: -12.755415916442871

Token 481: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043409161269664764
    2. ' lines' → logprob: -3.1684091091156006
    3. 'lines' → logprob: -8.41840934753418
    4. ' input' → logprob: -9.29340934753418
    5. 'input' → logprob: -9.91840934753418
    6. '	lines' → logprob: -10.54340934753418
    7. '    
' → logprob: -11.66840934753418
    8. ' for' → logprob: -12.29340934753418
    9. 'for' → logprob: -13.16840934753418
    10. '(lines' → logprob: -13.41840934753418

Token 482: ' input' (ID: 3422)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.2544896602630615
    2. '   ' → logprob: -2.0044896602630615
    3. 'lines' → logprob: -2.7544896602630615
    4. 'input' (adapté à ' input') → logprob: -4.504489898681641
    5. ' input' → logprob: -4.504489898681641
    6. ' for' → logprob: -6.004489898681641
    7. 'for' → logprob: -6.504489898681641
    8. '	lines' → logprob: -9.25448989868164
    9. 'inputs' → logprob: -9.62948989868164
    10. ' inputs' → logprob: -10.50448989868164

Token 483: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0012124951463192701
    2. '_data' → logprob: -7.1262125968933105
    3. ' =' → logprob: -8.626212120056152
    4. '_' → logprob: -8.876212120056152
    5. '=' → logprob: -10.001212120056152
    6. 'lines' → logprob: -11.001212120056152
    7. '()' → logprob: -11.251212120056152
    8. 'data' → logprob: -12.751212120056152
    9. '_list' → logprob: -13.126212120056152
    10. '_numbers' → logprob: -13.376212120056152

Token 484: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6986879110336304
    2. ' =' → logprob: -0.6986879110336304
    3. '=sys' → logprob: -5.19868803024292
    4. '＝' → logprob: -13.698687553405762
    5. '(sys' → logprob: -16.323688507080078
    6. '=[]' → logprob: -16.698688507080078
    7. ' ' → logprob: -17.073688507080078
    8. '=subprocess' → logprob: -17.073688507080078
    9. '=line' → logprob: -17.323688507080078
    10. 'sys' → logprob: -17.323688507080078

Token 485: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3139684200286865
    2. ' sys' → logprob: -1.3139684200286865
    3. '[' → logprob: -7.438968658447266
    4. ' [' → logprob: -9.063968658447266
    5. '(sys' → logprob: -13.563968658447266
    6. '	sys' → logprob: -14.063968658447266
    7. '=sys' → logprob: -14.938968658447266
    8. 'list' → logprob: -15.563968658447266
    9. ' list' → logprob: -16.438968658447266
    10. '   ' → logprob: -16.688968658447266

Token 486: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.5107177862082608e-05
    2. 'stdin' → logprob: -10.750024795532227
    3. '.argv' → logprob: -13.625024795532227
    4. '.stdout' → logprob: -14.250024795532227
    5. 'in' → logprob: -14.375024795532227
    6. '   ' → logprob: -15.125024795532227
    7. '.' → logprob: -15.750024795532227
    8. '(stdin' → logprob: -15.875024795532227
    9. '.__' → logprob: -16.000024795532227
    10. ' stdin' → logprob: -16.125024795532227

Token 487: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.004085524007678032
    2. '.read' → logprob: -5.754085540771484
    3. '.readline' → logprob: -7.129085540771484
    4. 'read' → logprob: -9.504085540771484
    5. '.' → logprob: -10.379085540771484
    6. ' .' → logprob: -16.254085540771484
    7. 'lines' → logprob: -16.879085540771484
    8. '```' → logprob: -17.254085540771484
    9. '().' → logprob: -17.504085540771484
    10. '   ' → logprob: -17.879085540771484

Token 488: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020902375399600714
    2. '()' → logprob: -8.500208854675293
    3. 'lines' → logprob: -12.500208854675293
    4. '_lines' → logprob: -13.750208854675293
    5. ' ().' → logprob: -15.000208854675293
    6. '(' → logprob: -15.750208854675293
    7. '()
' → logprob: -16.00020980834961
    8. '.split' → logprob: -16.25020980834961
    9. ' lines' → logprob: -17.62520980834961
    10. 'split' → logprob: -17.75020980834961

Token 489: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2528320550918579
    2. 'strip' → logprob: -1.502832055091858
    3. 'read' → logprob: -7.877831935882568
    4. 'decode' → logprob: -8.002832412719727
    5. 'lines' → logprob: -8.627832412719727
    6. 'rstrip' → logprob: -11.627832412719727
    7. ' split' → logprob: -15.377832412719727
    8. '(split' → logprob: -15.502832412719727
    9. '_lines' → logprob: -15.877832412719727
    10. '```' → logprob: -15.877832412719727

Token 490: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006716436706483364
    2. '()' → logprob: -5.006716251373291
    3. '()
' → logprob: -14.38171672821045
    4. '()\' → logprob: -15.25671672821045
    5. ' ().' → logprob: -16.006715774536133
    6. '(' → logprob: -16.006715774536133
    7. '('\' → logprob: -17.381715774536133
    8. '()

' → logprob: -17.381715774536133
    9. 'split' → logprob: -18.256715774536133
    10. '(),' → logprob: -18.381715774536133

Token 491: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -19.625
    3. 'spl' → logprob: -20.625
    4. '(split' → logprob: -21.375
    5. '.split' → logprob: -24.25
    6. '```' → logprob: -25.625
    7. '_split' → logprob: -25.75
    8. 'plit' → logprob: -26.75
    9. 'rstrip' → logprob: -26.75
    10. 'Split' → logprob: -26.75

Token 492: '('\' (ID: 24345)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.40721970796585083
    2. '('\' → logprob: -1.157219648361206
    3. '()' → logprob: -4.157219886779785
    4. '("\' → logprob: -5.407219886779785
    5. '()\' → logprob: -12.782219886779785
    6. '()
' → logprob: -12.907219886779785
    7. '(' → logprob: -13.032219886779785
    8. '('' → logprob: -16.03221893310547
    9. '()[' → logprob: -16.53221893310547
    10. ' lines' → logprob: -16.65721893310547

Token 493: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. '\n' → logprob: -15.625
    3. 'ndef' → logprob: -21.75
    4. '	n' → logprob: -21.75
    5. ' n' → logprob: -21.875
    6. '
' → logprob: -22.375
    7. '\' → logprob: -22.75
    8. 'newline' → logprob: -23.625
    9. '```' → logprob: -24.125
    10. '012' → logprob: -24.625

Token 494: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006737865507602692
    2. '')' → logprob: -5.00673770904541
    3. '")' → logprob: -11.63173770904541
    4. '   ' → logprob: -11.75673770904541
    5. ')
' → logprob: -12.63173770904541
    6. ']' → logprob: -13.50673770904541
    7. ' )' → logprob: -14.38173770904541
    8. '）' → logprob: -15.25673770904541
    9. '')
' → logprob: -16.256738662719727
    10. '`)' → logprob: -16.756738662719727

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35494863986968994
    2. 'processor' → logprob: -1.35494863986969
    3. ' processor' → logprob: -3.9799485206604004
    4. 'io' → logprob: -4.4799485206604
    5. 'output' → logprob: -4.8549485206604
    6. ' output' → logprob: -6.9799485206604
    7. ' io' → logprob: -7.1049485206604
    8. 'outputs' → logprob: -7.6049485206604
    9. 'results' → logprob: -8.479948997497559
    10. ' results' → logprob: -8.854948997497559

Token 496: ' io' (ID: 9818)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.005449682008475065
    2. 'io' (adapté à ' io') → logprob: -5.2554497718811035
    3. '   ' → logprob: -8.755449295043945
    4. ' processor' → logprob: -10.005449295043945
    5. 'output' → logprob: -12.005449295043945
    6. 'proc' → logprob: -12.880449295043945
    7. 'i' → logprob: -13.880449295043945
    8. 'ioc' → logprob: -14.255449295043945
    9. 'p' → logprob: -14.380449295043945
    10. 'printer' → logprob: -15.255449295043945

Token 497: '_processor' (ID: 129611)
  Prédit: '_processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_processor' → logprob: -0.012593353167176247
    2. 'p' → logprob: -4.8875932693481445
    3. ' =' → logprob: -5.5125932693481445
    4. 'processor' → logprob: -7.1375932693481445
    5. '.processor' → logprob: -10.262593269348145
    6. '=' → logprob: -10.262593269348145
    7. '.process' → logprob: -10.512593269348145
    8. 'Processor' → logprob: -10.762593269348145
    9. '_process' → logprob: -11.887593269348145
    10. '   ' → logprob: -12.012593269348145

Token 498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408369183540344
    2. ' =' → logprob: -0.974083662033081
    3. '.process' → logprob: -12.84908390045166
    4. 'process' → logprob: -13.97408390045166
    5. '(process' → logprob: -14.09908390045166
    6. 'processor' → logprob: -14.34908390045166
    7. '   ' → logprob: -14.34908390045166
    8. '_processor' → logprob: -14.72408390045166
    9. '＝' → logprob: -15.97408390045166
    10. ' ' → logprob: -16.099082946777344

Token 499: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.3132617771625519
    2. ' Input' → logprob: -1.3132617473602295
    3. ' input' → logprob: -18.438261032104492
    4. '	Input' → logprob: -19.813261032104492
    5. 'input' → logprob: -20.938261032104492
    6. '_input' → logprob: -21.063261032104492
    7. '_Input' → logprob: -21.438261032104492
    8. '   ' → logprob: -22.688261032104492
    9. '(Input' → logprob: -23.813261032104492
    10. 'INPUT' → logprob: -24.063261032104492

Token 500: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -5.512236498361744e-07
    2. 'output' → logprob: -15.250000953674316
    3. 'O' → logprob: -15.875000953674316
    4. '	Output' → logprob: -16.5
    5. 'Input' → logprob: -17.25
    6. '_output' → logprob: -18.0
    7. 'OUTPUT' → logprob: -19.0
    8. ' Output' → logprob: -19.125
    9. '-output' → logprob: -19.375
    10. '.Output' → logprob: -19.375

Token 501: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: 0.0
    2. 'Process' → logprob: -16.75
    3. 'processor' → logprob: -18.0
    4. '_processor' → logprob: -21.0
    5. ' Processor' → logprob: -21.625
    6. 'Processors' → logprob: -21.875
    7. ' processor' → logprob: -22.25
    8. 'Processed' → logprob: -23.375
    9. 'Proces' → logprob: -23.375
    10. 'Processing' → logprob: -23.625

Token 502: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -9.088346359931165e-07
    2. 'K' → logprob: -14.625000953674316
    3. '(Input' → logprob: -15.375000953674316
    4. 'Kap' → logprob: -16.625
    5. '(I' → logprob: -17.125
    6. '(C' → logprob: -17.25
    7. '   ' → logprob: -17.375
    8. '(' → logprob: -18.125
    9. '(
' → logprob: -18.375
    10. 'Input' → logprob: -19.0

Token 503: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -4.842555426876061e-06
    2. 'apte' → logprob: -13.250004768371582
    3. ' apre' → logprob: -13.875004768371582
    4. 'apro' → logprob: -14.375004768371582
    5. 'pre' → logprob: -14.500004768371582
    6. 'a' → logprob: -14.875004768371582
    7. '	ap' → logprob: -15.750004768371582
    8. 'ап' → logprob: -16.0000057220459
    9. 'apr' → logprob: -16.7500057220459
    10. '<' → logprob: -17.5000057220459

Token 504: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -5.200166469876422e-06
    2. 'pre' → logprob: -12.375004768371582
    3. ' re' → logprob: -15.125004768371582
    4. 'rek' → logprob: -15.375004768371582
    5. 'are' → logprob: -16.1250057220459
    6. 'reak' → logprob: -16.5000057220459
    7. 'rep' → logprob: -16.7500057220459
    8. '	re' → logprob: -16.7500057220459
    9. 'pe' → logprob: -16.8750057220459
    10. 'per' → logprob: -17.2500057220459

Token 505: 'kar' (ID: 10428)
  Prédit: 'kar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kar' → logprob: -6.749814019713085e-06
    2. 'Kar' → logprob: -12.250006675720215
    3. 'kap' → logprob: -14.500006675720215
    4. 'ker' → logprob: -15.000006675720215
    5. 'skar' → logprob: -15.250006675720215
    6. 'kal' → logprob: -15.750006675720215
    7. 'ka' → logprob: -16.50000762939453
    8. 'akar' → logprob: -16.75000762939453
    9. 'klar' → logprob: -16.75000762939453
    10. 'k' → logprob: -16.87500762939453

Token 506: '617' (ID: 40657)
  Prédit: '617'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '617' → logprob: -1.5048530030981055e-06
    2. '6' → logprob: -14.125001907348633
    3. ' ' → logprob: -15.500001907348633
    4. ')' → logprob: -15.875001907348633
    5. '
' → logprob: -16.750001907348633
    6. '647' → logprob: -16.875001907348633
    7. '61' → logprob: -17.375001907348633
    8. '`' → logprob: -17.625001907348633
    9. '```' → logprob: -17.625001907348633
    10. '417' → logprob: -18.125001907348633

Token 507: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.320199877838604e-07
    2. 'Process' → logprob: -16.125
    3. ' ' → logprob: -16.625
    4. 'process' → logprob: -17.25
    5. '34' → logprob: -17.375
    6. '414' → logprob: -17.5
    7. '14' → logprob: -17.625
    8. '416' → logprob: -18.125
    9. '   ' → logprob: -18.25
    10. '24' → logprob: -18.75

Token 508: 'Process' (ID: 7212)
  Prédit: 'Process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Process' → logprob: -1.8789383830153383e-05
    2. ')' → logprob: -11.000019073486328
    3. 'process' → logprob: -14.250019073486328
    4. ' Process' → logprob: -14.750019073486328
    5. '617' → logprob: -15.000019073486328
    6. 'Processor' → logprob: -15.375019073486328
    7. '	Process' → logprob: -15.500019073486328
    8. 'Proces' → logprob: -16.750019073486328
    9. '_Process' → logprob: -16.750019073486328
    10. '.Process' → logprob: -17.375019073486328

Token 509: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. ')
' → logprob: -12.000007629394531
    3. ' )' → logprob: -14.250007629394531
    4. '   ' → logprob: -14.625007629394531
    5. '())' → logprob: -16.37500762939453
    6. '))' → logprob: -16.50000762939453
    7. ')
' → logprob: -18.00000762939453
    8. ')

' → logprob: -18.00000762939453
    9. ')`' → logprob: -18.00000762939453
    10. '()' → logprob: -18.25000762939453

Token 510: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8131083846092224
    2. 'results' → logprob: -1.3131084442138672
    3. ' results' → logprob: -1.3131084442138672
    4. 'output' → logprob: -4.563108444213867
    5. ' output' → logprob: -5.188108444213867
    6. 'outputs' → logprob: -6.313108444213867
    7. 'result' → logprob: -7.938108444213867
    8. ' outputs' → logprob: -8.188108444213867
    9. ' result' → logprob: -10.063108444213867
    10. '	results' → logprob: -10.688108444213867

Token 511: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.09009004384279251
    2. 'output' → logprob: -2.840090036392212
    3. 'outputs' → logprob: -3.590090036392212
    4. ' results' → logprob: -9.090089797973633
    5. 'for' → logprob: -11.840089797973633
    6. 'result' → logprob: -11.965089797973633
    7. ' output' → logprob: -12.340089797973633
    8. ' outputs' → logprob: -12.840089797973633
    9. '   ' → logprob: -13.590089797973633
    10. 'out' → logprob: -17.090089797973633

Token 512: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020849853754044
    2. '=' → logprob: -2.3502085208892822
    3. '.extend' → logprob: -13.725208282470703
    4. ' +=' → logprob: -16.225208282470703
    5. ' =
' → logprob: -16.225208282470703
    6. ' ' → logprob: -16.600208282470703
    7. '＝' → logprob: -16.725208282470703
    8. '.=' → logprob: -16.850208282470703
    9. ' =)' → logprob: -16.850208282470703
    10. '+=' → logprob: -17.475208282470703

Token 513: ' io' (ID: 9818)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' → logprob: -0.0002614550176076591
    2. ' io' → logprob: -8.250261306762695
    3. '(io' → logprob: -17.125261306762695
    4. '	io' → logprob: -17.500261306762695
    5. '   ' → logprob: -19.500261306762695
    6. '_io' → logprob: -20.375261306762695
    7. '/io' → logprob: -20.500261306762695
    8. 'IO' → logprob: -20.750261306762695
    9. '"io' → logprob: -21.000261306762695
    10. '.io' → logprob: -21.000261306762695

Token 514: '_processor' (ID: 129611)
  Prédit: '_processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_processor' → logprob: -1.981667537620524e-06
    2. 'processor' → logprob: -13.250001907348633
    3. '_processors' → logprob: -16.000001907348633
    4. 'Processor' → logprob: -17.250001907348633
    5. '.processor' → logprob: -19.500001907348633
    6. '_processed' → logprob: -20.375001907348633
    7. '_processing' → logprob: -20.500001907348633
    8. 'o' → logprob: -20.875001907348633
    9. '_process' → logprob: -20.875001907348633
    10. ' processor' → logprob: -21.125001907348633

Token 515: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -1.0280383548888494e-06
    2. 'process' → logprob: -14.000000953674316
    3. '.' → logprob: -16.500001907348633
    4. ' .' → logprob: -20.000001907348633
    5. '(process' → logprob: -22.125001907348633
    6. '.processor' → logprob: -22.500001907348633
    7. '	process' → logprob: -22.625001907348633
    8. ' process' → logprob: -22.875001907348633
    9. '.Process' → logprob: -23.250001907348633
    10. '.perform' → logprob: -23.250001907348633

Token 516: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: 0.0
    2. 'input' → logprob: -17.25
    3. '(input' → logprob: -17.625
    4. '_output' → logprob: -19.0
    5. '_inputs' → logprob: -19.25
    6. 'Input' → logprob: -20.75
    7. '_INPUT' → logprob: -21.0
    8. '```' → logprob: -21.125
    9. '<Input' → logprob: -21.25
    10. 's' → logprob: -21.5

Token 517: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -4.320199877838604e-07
    2. 'input' → logprob: -15.25
    3. '(lines' → logprob: -16.5
    4. '[input' → logprob: -17.0
    5. ' (' → logprob: -18.5
    6. '(' → logprob: -18.5
    7. '(inputs' → logprob: -18.875
    8. '=input' → logprob: -19.125
    9. '(
' → logprob: -19.25
    10. '```' → logprob: -20.125

Token 518: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -4.320199877838604e-07
    2. 'lines' → logprob: -14.875
    3. '_LINES' → logprob: -18.125
    4. '(lines' → logprob: -18.375
    5. '=' → logprob: -18.5
    6. '_' → logprob: -18.625
    7. '```' → logprob: -19.0
    8. ')' → logprob: -19.375
    9. '	lines' → logprob: -19.875
    10. 'Lines' → logprob: -20.25

Token 519: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3132708668708801
    2. ')' → logprob: -1.3132708072662354
    3. ')
' → logprob: -11.938270568847656
    4. '   ' → logprob: -13.313270568847656
    5. ' )
' → logprob: -14.563270568847656
    6. ')

' → logprob: -15.438270568847656
    7. '())
' → logprob: -15.938270568847656
    8. ' )' → logprob: -16.438270568847656
    9. ' ' → logprob: -17.063270568847656
    10. '()' → logprob: -17.188270568847656

Token 520: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004176102578639984
    2. 'for' → logprob: -5.504176139831543
    3. ' for' → logprob: -9.254176139831543
    4. '	for' → logprob: -13.754176139831543
    5. 'print' → logprob: -14.254176139831543
    6. '
' → logprob: -16.129175186157227
    7. '    
' → logprob: -16.254175186157227
    8. '```' → logprob: -17.004175186157227
    9. '   ' → logprob: -17.629175186157227
    10. 'import' → logprob: -18.004175186157227

Token 521: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014293497428297997
    2. 'print' (adapté à ' print') → logprob: -4.264293670654297
    3. '   ' → logprob: -9.014293670654297
    4. ' for' → logprob: -11.764293670654297
    5. '
' → logprob: -14.764293670654297
    6. '	for' → logprob: -15.764293670654297
    7. ' print' → logprob: -17.639293670654297
    8. '    
' → logprob: -18.264293670654297
    9. '```' → logprob: -19.389293670654297
    10. '	print' → logprob: -20.639293670654297

Token 522: '('\' (ID: 24345)
  Prédit: '("\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("\' → logprob: -0.1602628231048584
    2. '('\' → logprob: -1.9102628231048584
    3. '(*' → logprob: -10.285263061523438
    4. '(' → logprob: -12.535263061523438
    5. '"\' → logprob: -14.285263061523438
    6. ''\' → logprob: -15.910263061523438
    7. ' ("\' → logprob: -16.785263061523438
    8. '()' → logprob: -17.285263061523438
    9. '(*(' → logprob: -18.660263061523438
    10. '(\' → logprob: -18.785263061523438

Token 523: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019301822176203132
    2. '\n' → logprob: -6.251930236816406
    3. '
' → logprob: -13.501930236816406
    4. ''\' → logprob: -15.876930236816406
    5. '"\' → logprob: -17.626930236816406
    6. 'join' → logprob: -18.251930236816406
    7. '``' → logprob: -19.501930236816406
    8. '```' → logprob: -19.626930236816406
    9. '\
' → logprob: -20.001930236816406
    10. ' n' → logprob: -20.126930236816406

Token 524: ''.' (ID: 6120)
  Prédit: '.join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.5564678311347961
    2. ''.' → logprob: -0.9314678311347961
    3. '.' → logprob: -3.9314677715301514
    4. 'join' → logprob: -4.6814680099487305
    5. '".' → logprob: -6.3064680099487305
    6. ').' → logprob: -6.4314680099487305
    7. 'print' → logprob: -8.43146800994873
    8. ' .' → logprob: -9.43146800994873
    9. '''.' → logprob: -9.43146800994873
    10. ')' → logprob: -11.05646800994873

Token 525: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.292907877039397e-06
    2. 'print' → logprob: -12.87500286102295
    3. ' join' → logprob: -14.25000286102295
    4. 'jo' → logprob: -18.125003814697266
    5. ')' → logprob: -18.250003814697266
    6. ' ' → logprob: -19.375003814697266
    7. '```' → logprob: -19.375003814697266
    8. ').' → logprob: -19.500003814697266
    9. '.join' → logprob: -19.625003814697266
    10. 'j' → logprob: -19.875003814697266

Token 526: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -5.860340752406046e-05
    2. 'results' → logprob: -9.7500581741333
    3. ' results' → logprob: -15.8750581741333
    4. '	results' → logprob: -17.000059127807617
    5. ')' → logprob: -17.625059127807617
    6. '(' → logprob: -18.500059127807617
    7. '(result' → logprob: -19.250059127807617
    8. '(str' → logprob: -19.500059127807617
    9. '/results' → logprob: -20.125059127807617
    10. 'Results' → logprob: -20.250059127807617

Token 527: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00121607119217515
    2. '))' → logprob: -6.751215934753418
    3. '())' → logprob: -10.001215934753418
    4. ')))' → logprob: -15.876215934753418
    5. '})' → logprob: -16.376216888427734
    6. ' )' → logprob: -16.751216888427734
    7. '   ' → logprob: -16.751216888427734
    8. ')`' → logprob: -17.126216888427734
    9. ')}' → logprob: -17.251216888427734
    10. '()' → logprob: -17.501216888427734

Token 528: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.13388703338569e-06
    2. ' if' → logprob: -11.875009536743164
    3. '```' → logprob: -13.875009536743164
    4. '#' → logprob: -14.375009536743164
    5. '
' → logprob: -14.750009536743164
    6. '<|end|>' → logprob: -16.250009536743164
    7. '	if' → logprob: -18.250009536743164
    8. '#if' → logprob: -18.250009536743164
    9. '__' → logprob: -19.125009536743164
    10. '@if' → logprob: -19.250009536743164

Token 529: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04859861359000206
    2. '__' → logprob: -3.048598527908325
    3. '_name' → logprob: -11.923598289489746
    4. '_' → logprob: -12.798598289489746
    5. 'name' → logprob: -14.298598289489746
    6. '___' → logprob: -14.673598289489746
    7. ' ' → logprob: -15.548598289489746
    8. '/__' → logprob: -15.923598289489746
    9. ' _' → logprob: -16.048599243164062
    10. ' name' → logprob: -16.173599243164062

Token 530: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.020543988794088364
    2. '==' → logprob: -4.270544052124023
    3. ' ==' → logprob: -5.145544052124023
    4. ' __' → logprob: -7.770544052124023
    5. '=="' → logprob: -9.645544052124023
    6. '=='' → logprob: -11.020544052124023
    7. 'name' → logprob: -11.770544052124023
    8. '__.__' → logprob: -12.645544052124023
    9. '.__' → logprob: -13.020544052124023
    10. '_name' → logprob: -13.145544052124023

Token 531: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.723352049040841e-06
    2. '==' → logprob: -12.625004768371582
    3. '__.__' → logprob: -13.750004768371582
    4. ' ==' → logprob: -16.250003814697266
    5. '_' → logprob: -16.750003814697266
    6. '___' → logprob: -17.250003814697266
    7. '=="' → logprob: -17.750003814697266
    8. '____' → logprob: -17.875003814697266
    9. '__.' → logprob: -18.500003814697266
    10. ' __' → logprob: -18.500003814697266

Token 532: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4822176992893219
    2. '__' → logprob: -0.9822176694869995
    3. ' ==' → logprob: -5.107217788696289
    4. '=="' → logprob: -6.232217788696289
    5. '=='' → logprob: -9.482217788696289
    6. '=' → logprob: -11.982217788696289
    7. '===' → logprob: -12.607217788696289
    8. '_' → logprob: -13.732217788696289
    9. '==
' → logprob: -14.232217788696289
    10. '___' → logprob: -14.357217788696289

Token 533: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023254211992025375
    2. ''' → logprob: -3.773254156112671
    3. '__' → logprob: -12.14825439453125
    4. ' "__' → logprob: -12.64825439453125
    5. ''"' → logprob: -15.89825439453125
    6. ' '__' → logprob: -16.52325439453125
    7. '"name' → logprob: -17.02325439453125
    8. '"'' → logprob: -17.89825439453125
    9. '"class' → logprob: -17.89825439453125
    10. '   ' → logprob: -18.02325439453125

Token 534: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0002644351334311068
    2. '__' → logprob: -8.250264167785645
    3. 'name' → logprob: -13.375264167785645
    4. '_main' → logprob: -13.750264167785645
    5. ' main' → logprob: -14.750264167785645
    6. '"' → logprob: -16.25026512145996
    7. '-main' → logprob: -17.12526512145996
    8. '_MAIN' → logprob: -18.62526512145996
    9. '主' → logprob: -19.00026512145996
    10. '	main' → logprob: -19.00026512145996

Token 535: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.01844431832432747
    2. '__' → logprob: -4.018444538116455
    3. '__':
' → logprob: -8.143444061279297
    4. '__.' → logprob: -13.018444061279297
    5. '__.__' → logprob: -14.018444061279297
    6. '__["' → logprob: -14.893444061279297
    7. '__
' → logprob: -15.893444061279297
    8. '__
' → logprob: -16.893444061279297
    9. '__[' → logprob: -17.143444061279297
    10. '_' → logprob: -17.268444061279297

Token 536: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.49922096729278564
    2. '__' → logprob: -0.9992209672927856
    3. '"' → logprob: -3.749220848083496
    4. ''' → logprob: -7.124220848083496
    5. ' main' → logprob: -8.124220848083496
    6. '   ' → logprob: -8.999220848083496
    7. '_main' → logprob: -10.499220848083496
    8. ' "__' → logprob: -11.249220848083496
    9. ' __' → logprob: -11.499220848083496
    10. '___' → logprob: -12.499220848083496

Token 537: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -19.5
    4. '   ' → logprob: -20.75
    5. '_main' → logprob: -23.875
    6. '.main' → logprob: -24.5
    7. 'import' → logprob: -24.625
    8. '(main' → logprob: -25.375
    9. 'Main' → logprob: -27.25
    10. '
' → logprob: -28.125

Token 538: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 536
Tokens correctement prédits (1ère position, stricte): 267
Tokens correctement prédits (1ère position, avec adaptation): 297
Tokens correctement prédits (top 10): 480
Précision stricte (1ère position): 49.81%
Précision adaptée (1ère position): 55.41%
Précision (top 10): 89.55%
================================================================================
