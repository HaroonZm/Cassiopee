================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

N = int(input())
problems = [tuple(map(int, input().split())) for _ in range(N)]
problems.sort(key=lambda x: x[1])

time = 0
count = 0
for A, B in problems:
    time += A
    if time <= B:
        count += 1

print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002731290180236101
    2. '.' → logprob: -6.0027313232421875
    3. '(
' → logprob: -8.752731323242188
    4. ' (' → logprob: -11.002731323242188
    5. '('' → logprob: -11.502731323242188
    6. '(

' → logprob: -11.627731323242188
    7. ')' → logprob: -11.627731323242188
    8. ''' → logprob: -11.627731323242188
    9. '()' → logprob: -11.752731323242188
    10. '=' → logprob: -12.252731323242188

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014413704164326191
    2. 'sys' → logprob: -4.264413833618164
    3. ' input' → logprob: -8.514413833618164
    4. 'input' → logprob: -10.389413833618164
    5. ' ' → logprob: -12.014413833618164
    6. '=sys' → logprob: -12.139413833618164
    7. '	sys' → logprob: -12.389413833618164
    8. '(sys' → logprob: -12.889413833618164
    9. ' system' → logprob: -14.514413833618164
    10. ' lambda' → logprob: -16.514413833618164

Token 6: '.stdin' (ID: 93480)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.2949504554271698
    2. '.' → logprob: -1.4199504852294922
    3. '.read' → logprob: -4.294950485229492
    4. '.readlines' → logprob: -10.544950485229492
    5. '```' → logprob: -11.544950485229492
    6. '.Read' → logprob: -11.669950485229492
    7. 'read' → logprob: -12.044950485229492
    8. ' .' → logprob: -12.794950485229492
    9. '.write' → logprob: -13.294950485229492
    10. '.get' → logprob: -13.919950485229492

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1419765055179596
    2. '(' → logprob: -2.2669765949249268
    3. '()
' → logprob: -4.266976356506348
    4. '(
' → logprob: -4.766976356506348
    5. '().' → logprob: -6.516976356506348
    6. '
' → logprob: -6.516976356506348
    7. '()\' → logprob: -7.016976356506348
    8. '()

' → logprob: -7.391976356506348
    9. '\' → logprob: -7.516976356506348
    10. '\n' → logprob: -7.641976356506348

Token 9: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18130169808864594
    2. '(' → logprob: -1.8063017129898071
    3. '().' → logprob: -6.806301593780518
    4. '()
' → logprob: -8.806302070617676
    5. '(
' → logprob: -10.056302070617676
    6. '()

' → logprob: -10.306302070617676
    7. ')' → logprob: -10.431302070617676
    8. '#' → logprob: -10.431302070617676
    9. 'def' → logprob: -10.681302070617676
    10. 'a' → logprob: -10.681302070617676

Token 10: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6123024821281433
    2. ' =' → logprob: -1.362302541732788
    3. ')' → logprob: -2.237302541732788
    4. '=' → logprob: -2.737302541732788
    5. ' )' → logprob: -4.862302303314209
    6. '.' → logprob: -5.612302303314209
    7. '<|end|>' → logprob: -5.737302303314209
    8. '[' → logprob: -5.862302303314209
    9. '>' → logprob: -6.112302303314209
    10. '  ' → logprob: -6.112302303314209

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04860372841358185
    2. 'int' → logprob: -3.0486037731170654
    3. ' ' → logprob: -11.298604011535645
    4. '=int' → logprob: -13.548604011535645
    5. '(int' → logprob: -13.923604011535645
    6. ' input' → logprob: -14.423604011535645
    7. '10' → logprob: -14.548604011535645
    8. '<int' → logprob: -15.298604011535645
    9. 'input' → logprob: -15.923604011535645
    10. '0' → logprob: -16.548603057861328

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015610468108206987
    2. '(input' → logprob: -6.751561164855957
    3. '(N' → logprob: -8.626561164855957
    4. '('' → logprob: -9.251561164855957
    5. ' (' → logprob: -9.876561164855957
    6. '()' → logprob: -10.001561164855957
    7. '(`' → logprob: -12.501561164855957
    8. '(sys' → logprob: -12.751561164855957
    9. '(
' → logprob: -13.001561164855957
    10. '("("' → logprob: -13.876561164855957

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4129841923713684
    2. ')' → logprob: -1.1629841327667236
    3. '()' → logprob: -3.6629841327667236
    4. '(' → logprob: -9.662983894348145
    5. '))' → logprob: -11.037983894348145
    6. '())
' → logprob: -11.537983894348145
    7. ' ())' → logprob: -12.162983894348145
    8. '`)' → logprob: -12.287983894348145
    9. '()))' → logprob: -12.412983894348145
    10. '().' → logprob: -12.787983894348145

Token 14: 'pro' (ID: 823)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.9355887174606323
    2. 'for' → logprob: -0.9355887174606323
    3. 'a' → logprob: -3.560588836669922
    4. 'result' → logprob: -3.685588836669922
    5. '\n' → logprob: -3.685588836669922
    6. 'arr' → logprob: -4.060588836669922
    7. ')' → logprob: -4.060588836669922
    8. 'if' → logprob: -4.310588836669922
    9. 'array' → logprob: -4.435588836669922
    10. '\' → logprob: -4.810588836669922

Token 15: 'blems' (ID: 50594)
  Prédit: 'blem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blem' → logprob: -1.2722407579421997
    2. 'cess' → logprob: -1.5222407579421997
    3. 'gram' → logprob: -1.5222407579421997
    4. 'blems' → logprob: -2.02224063873291
    5. 'duct' → logprob: -2.27224063873291
    6. 'grams' → logprob: -3.64724063873291
    7. 'b' → logprob: -5.39724063873291
    8. 'fit' → logprob: -5.64724063873291
    9. 'ject' → logprob: -5.64724063873291
    10. 'm' → logprob: -5.77224063873291

Token 16: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24408946931362152
    2. ' =' → logprob: -2.619089365005493
    3. '.' → logprob: -2.994089365005493
    4. '[:]' → logprob: -3.244089365005493
    5. '[]' → logprob: -4.494089603424072
    6. '_count' → logprob: -4.494089603424072
    7. 's' → logprob: -4.619089603424072
    8. '_' → logprob: -5.119089603424072
    9. '=' → logprob: -5.244089603424072
    10. ')' → logprob: -6.619089603424072

Token 17: ' [' (ID: 723)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 18: 'tuple' (ID: 52834)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.41835176944732666
    2. 'int' → logprob: -1.1683517694473267
    3. '0' → logprob: -4.168351650238037
    4. '[]' → logprob: -4.918351650238037
    5. 'tuple' → logprob: -5.418351650238037
    6. ']' → logprob: -6.168351650238037
    7. ' list' → logprob: -7.293351650238037
    8. 'input' → logprob: -8.043352127075195
    9. '()]' → logprob: -9.043352127075195
    10. '[int' → logprob: -9.043352127075195

Token 19: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0055406163446605206
    2. '(input' → logprob: -5.38054084777832
    3. '(int' → logprob: -7.25554084777832
    4. '(' → logprob: -8.50554084777832
    5. 'map' → logprob: -11.88054084777832
    6. '()' → logprob: -13.13054084777832
    7. 'input' → logprob: -14.13054084777832
    8. ' map' → logprob: -15.00554084777832
    9. '(list' → logprob: -15.38054084777832
    10. '(i' → logprob: -15.50554084777832

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014445222914218903
    2. '(' → logprob: -7.251444339752197
    3. '(str' → logprob: -7.501444339752197
    4. 'int' → logprob: -9.876444816589355
    5. ',int' → logprob: -10.751444816589355
    6. '<|end|>' → logprob: -10.751444816589355
    7. ')' → logprob: -11.126444816589355
    8. '<int' → logprob: -11.126444816589355
    9. '=int' → logprob: -11.376444816589355
    10. '(
' → logprob: -11.501444816589355

Token 21: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.035122886300086975
    2. ',input' → logprob: -3.785122871398926
    3. '(' → logprob: -4.785122871398926
    4. ')' → logprob: -6.660122871398926
    5. ',' → logprob: -6.785122871398926
    6. 'input' → logprob: -7.160122871398926
    7. '=input' → logprob: -10.035122871398926
    8. ' (' → logprob: -10.410122871398926
    9. ' input' → logprob: -10.410122871398926
    10. ' ,' → logprob: -10.410122871398926

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0036023214925080538
    2. ' input' → logprob: -5.628602504730225
    3. ')' → logprob: -14.003602027893066
    4. '(input' → logprob: -14.128602027893066
    5. ',input' → logprob: -15.253602027893066
    6. '=input' → logprob: -15.753602027893066
    7. '))' → logprob: -16.128602981567383
    8. ' ' → logprob: -16.628602981567383
    9. '<input' → logprob: -16.878602981567383
    10. '	input' → logprob: -16.878602981567383

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.088346359931165e-07
    2. '()' → logprob: -14.250000953674316
    3. '()))' → logprob: -15.625000953674316
    4. '.readline' → logprob: -17.125
    5. ' ().' → logprob: -17.875
    6. '.split' → logprob: -19.0
    7. '(' → logprob: -19.0
    8. 'split' → logprob: -19.375
    9. '())' → logprob: -19.625
    10. '()
' → logprob: -19.625

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.07528863847255707
    2. 'strip' → logprob: -2.8252885341644287
    3. 'rstrip' → logprob: -4.325288772583008
    4. ' split' → logprob: -13.200288772583008
    5. 'read' → logprob: -14.575288772583008
    6. '(split' → logprob: -15.200288772583008
    7. 'rs' → logprob: -15.575288772583008
    8. ' strip' → logprob: -16.075288772583008
    9. 'spl' → logprob: -17.450288772583008
    10. 'str' → logprob: -17.450288772583008

Token 25: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.14420761168003082
    2. '()))' → logprob: -2.019207715988159
    3. ')' → logprob: -7.51920747756958
    4. '())' → logprob: -7.76920747756958
    5. '(' → logprob: -8.019207954406738
    6. '()' → logprob: -8.769207954406738
    7. '()))
' → logprob: -10.394207954406738
    8. ')))' → logprob: -11.019207954406738
    9. '))
' → logprob: -11.144207954406738
    10. ' ))' → logprob: -12.269207954406738

Token 26: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10764352232217789
    2. ' for' → logprob: -2.9826436042785645
    3. 'for' → logprob: -3.8576436042785645
    4. ')]' → logprob: -3.9826436042785645
    5. ']' → logprob: -4.4826436042785645
    6. ',' → logprob: -9.357643127441406
    7. '),' → logprob: -9.857643127441406
    8. '()' → logprob: -10.107643127441406
    9. ' )' → logprob: -10.357643127441406
    10. ')])' → logprob: -10.357643127441406

Token 27: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14618881046772003
    2. '_' → logprob: -2.021188735961914
    3. 'range' → logprob: -5.896188735961914
    4. ' _' → logprob: -7.646188735961914
    5. '_range' → logprob: -8.896188735961914
    6. ' in' → logprob: -9.646188735961914
    7. '(range' → logprob: -10.521188735961914
    8. ' i' → logprob: -10.771188735961914
    9. ' ' → logprob: -10.896188735961914
    10. '	range' → logprob: -11.896188735961914

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011508172610774636
    2. ' i' → logprob: -7.876150608062744
    3. ' range' → logprob: -8.251151084899902
    4. ' ' → logprob: -8.501151084899902
    5. ' _' → logprob: -9.001151084899902
    6. 'in' → logprob: -9.251151084899902
    7. 'range' → logprob: -10.126151084899902
    8. '_' → logprob: -10.251151084899902
    9. 'i' → logprob: -12.751151084899902
    10. '  ' → logprob: -12.876151084899902

Token 29: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031781906727701426
    2. ' range' → logprob: -5.753178119659424
    3. '	range' → logprob: -15.378178596496582
    4. '(range' → logprob: -16.503177642822266
    5. 'rang' → logprob: -16.753177642822266
    6. '```' → logprob: -18.753177642822266
    7. ')' → logprob: -18.753177642822266
    8. 'ran' → logprob: -18.878177642822266
    9. ' ' → logprob: -18.878177642822266
    10. '.range' → logprob: -19.003177642822266

Token 30: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0024819616228342056
    2. '(' → logprob: -6.002481937408447
    3. 'N' → logprob: -12.252482414245605
    4. '(n' → logprob: -13.752482414245605
    5. '(
' → logprob: -15.252482414245605
    6. ')' → logprob: -15.502482414245605
    7. '()' → logprob: -17.62748146057129
    8. ' (' → logprob: -18.37748146057129
    9. '(I' → logprob: -18.62748146057129
    10. '(int' → logprob: -18.75248146057129

Token 31: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0032134840730577707
    2. ')' → logprob: -5.753213405609131
    3. ']' → logprob: -10.378213882446289
    4. ')])' → logprob: -13.628213882446289
    5. ')]
' → logprob: -13.753213882446289
    6. ')
' → logprob: -14.253213882446289
    7. '))' → logprob: -14.628213882446289
    8. ' )' → logprob: -15.128213882446289
    9. ')}' → logprob: -15.628213882446289
    10. '])]' → logprob: -15.753213882446289

Token 32: 'pro' (ID: 823)
  Prédit: 'pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.04535098746418953
    2. 'sorted' → logprob: -4.045351028442383
    3. 'dp' → logprob: -5.420351028442383
    4. '\' → logprob: -5.420351028442383
    5. '
' → logprob: -5.545351028442383
    6. 'results' → logprob: -5.920351028442383
    7. 'answers' → logprob: -6.295351028442383
    8. 'time' → logprob: -6.420351028442383
    9. 'result' → logprob: -6.545351028442383
    10. 's' → logprob: -6.920351028442383

Token 33: 'blems' (ID: 50594)
  Prédit: 'blems'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blems' → logprob: -0.00037895687273703516
    2. 'bs' → logprob: -8.500378608703613
    3. 'ble' → logprob: -9.625378608703613
    4. 'blem' → logprob: -9.750378608703613
    5. 'lems' → logprob: -10.875378608703613
    6. 'bles' → logprob: -11.250378608703613
    7. 'bl' → logprob: -11.375378608703613
    8. '```' → logprob: -12.500378608703613
    9. 'b' → logprob: -13.000378608703613
    10. 'grams' → logprob: -14.750378608703613

Token 34: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4821332097053528
    2. '(' → logprob: -0.9821332097053528
    3. '(key' → logprob: -5.232133388519287
    4. '(()' → logprob: -6.607133388519287
    5. '(reverse' → logprob: -7.482133388519287
    6. '((' → logprob: -7.607133388519287
    7. '(lambda' → logprob: -9.607132911682129
    8. '()(' → logprob: -11.107132911682129
    9. '(sort' → logprob: -11.107132911682129
    10. '(keys' → logprob: -11.357132911682129

Token 36: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.023252932354807854
    2. '=' → logprob: -3.7732529640197754
    3. 'lambda' → logprob: -12.648252487182617
    4. '=(' → logprob: -13.148252487182617
    5. '(lambda' → logprob: -13.648252487182617
    6. ')=' → logprob: -15.398252487182617
    7. '=len' → logprob: -15.773252487182617
    8. '=

' → logprob: -16.148252487182617
    9. ' =' → logprob: -16.273252487182617
    10. '(' → logprob: -16.398252487182617

Token 37: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.05536062270402908
    2. 'x' → logprob: -2.9303605556488037
    3. ' p' → logprob: -7.805360794067383
    4. ' problem' → logprob: -10.305360794067383
    5. 'problem' → logprob: -10.930360794067383
    6. 'pro' → logprob: -11.805360794067383
    7. 'p' → logprob: -12.305360794067383
    8. ' pro' → logprob: -12.680360794067383
    9. '<|end|>' → logprob: -14.180360794067383
    10. ' ' → logprob: -14.430360794067383

Token 38: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004939254838973284
    2. ':x' → logprob: -5.379939079284668
    3. ' :' → logprob: -8.129939079284668
    4. '[' → logprob: -11.254939079284668
    5. 'x' → logprob: -12.379939079284668
    6. ':
' → logprob: -13.629939079284668
    7. ':int' → logprob: -14.129939079284668
    8. ':item' → logprob: -14.254939079284668
    9. ':index' → logprob: -14.379939079284668
    10. ':return' → logprob: -14.879939079284668

Token 39: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.026990018784999847
    2. ' x' → logprob: -3.6519899368286133
    3. ' (' → logprob: -8.026989936828613
    4. '(' → logprob: -8.526989936828613
    5. '(x' → logprob: -8.901989936828613
    6. '-' → logprob: -11.401989936828613
    7. '-x' → logprob: -12.276989936828613
    8. ' -' → logprob: -12.651989936828613
    9. '(-' → logprob: -12.901989936828613
    10. '(lambda' → logprob: -13.151989936828613

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012409444898366928
    2. ':' → logprob: -6.7512407302856445
    3. ')' → logprob: -11.001240730285645
    4. '.' → logprob: -11.251240730285645
    5. '[:' → logprob: -11.501240730285645
    6. ' [' → logprob: -12.126240730285645
    7. '[
' → logprob: -12.126240730285645
    8. '0' → logprob: -12.876240730285645
    9. '[-' → logprob: -13.001240730285645
    10. ':[' → logprob: -13.126240730285645

Token 41: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5763700604438782
    2. '1' → logprob: -0.8263700604438782
    3. ' ' → logprob: -7.9513702392578125
    4. '-' → logprob: -9.576370239257812
    5. '[' → logprob: -13.138870239257812
    6. ' -' → logprob: -13.638870239257812
    7. ':' → logprob: -13.951370239257812
    8. ']' → logprob: -14.201370239257812
    9. '2' → logprob: -14.388870239257812
    10. '' → logprob: -15.138870239257812

Token 42: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031303055584430695
    2. '))' → logprob: -6.6281304359436035
    3. ',' → logprob: -6.7531304359436035
    4. '),' → logprob: -8.128129959106445
    5. ' )' → logprob: -8.503129959106445
    6. ',)' → logprob: -9.878129959106445
    7. '])' → logprob: -10.003129959106445
    8. ')]' → logprob: -12.253129959106445
    9. ')+' → logprob: -12.378129959106445
    10. ')])' → logprob: -12.378129959106445

Token 43: 'time' (ID: 4580)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6604654788970947
    2. 'time' → logprob: -1.2854654788970947
    3. 'answer' → logprob: -3.0354654788970947
    4. 'max' → logprob: -3.2854654788970947
    5. 'dp' → logprob: -3.2854654788970947
    6. 'count' → logprob: -3.6604654788970947
    7. 'start' → logprob: -3.9104654788970947
    8. 'result' → logprob: -4.785465240478516
    9. 'total' → logprob: -5.035465240478516
    10. 'curr' → logprob: -5.660465240478516

Token 44: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02546948939561844
    2. ' =' → logprob: -3.9004695415496826
    3. '=' → logprob: -5.6504693031311035
    4. ' _' → logprob: -7.7754693031311035
    5. ' +=' → logprob: -8.025469779968262
    6. ' ' → logprob: -8.400469779968262
    7. '_space' → logprob: -9.400469779968262
    8. '_taken' → logprob: -9.525469779968262
    9. '_=' → logprob: -9.650469779968262
    10. '+' → logprob: -10.275469779968262

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009757150895893574
    2. ' ' → logprob: -4.634757041931152
    3. 'pro' → logprob: -14.009757041931152
    4. ' ' → logprob: -15.759757041931152
    5. '1' → logprob: -17.13475799560547
    6. '-' → logprob: -17.44725799560547
    7. '[' → logprob: -18.13475799560547
    8. '`' → logprob: -18.19725799560547
    9. ' problems' → logprob: -18.25975799560547
    10. '  ' → logprob: -18.44725799560547

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.875021934509277
    3. '-' → logprob: -13.375021934509277
    4. 'pro' → logprob: -13.875021934509277
    5. '1' → logprob: -15.375021934509277
    6. '[' → logprob: -16.500022888183594
    7. '-pro' → logprob: -17.187522888183594
    8. ' -' → logprob: -17.875022888183594
    9. '000' → logprob: -18.375022888183594
    10. '```' → logprob: -18.375022888183594

Token 47: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6102634072303772
    2. ' for' → logprob: -1.4852633476257324
    3. 'max' → logprob: -2.1102633476257324
    4. ' ' → logprob: -3.1102633476257324
    5. '\n' → logprob: -3.7352633476257324
    6. '\' → logprob: -3.9852633476257324
    7. ' max' → logprob: -5.110263347625732
    8. '
' → logprob: -5.610263347625732
    9. ' 
' → logprob: -5.610263347625732
    10. 'result' → logprob: -6.735263347625732

Token 48: 'count' (ID: 5420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1039975881576538
    2. 'count' → logprob: -1.6039975881576538
    3. 'answer' → logprob: -2.1039977073669434
    4. 'result' → logprob: -2.1039977073669434
    5. 'max' → logprob: -2.4789977073669434
    6. 'ans' → logprob: -2.6039977073669434
    7. 'cnt' → logprob: -3.7289977073669434
    8. ' for' → logprob: -4.103997707366943
    9. 'score' → logprob: -5.478997707366943
    10. 'possible' → logprob: -5.603997707366943

Token 49: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8462859392166138
    2. ' =' → logprob: -0.8462859392166138
    3. ' +=' → logprob: -2.096285820007324
    4. ' ' → logprob: -4.596285820007324
    5. '+' → logprob: -5.221285820007324
    6. '+=' → logprob: -5.846285820007324
    7. ')' → logprob: -8.471285820007324
    8. '<|end|>' → logprob: -8.471285820007324
    9. '_' → logprob: -9.471285820007324
    10. ' +' → logprob: -9.596285820007324

Token 50: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014138251543045
    2. ' ' → logprob: -1.701413869857788
    3. '1' → logprob: -14.951414108276367
    4. ' ' → logprob: -15.826414108276367
    5. '<|end|>' → logprob: -16.076414108276367
    6. ' 
' → logprob: -18.263914108276367
    7. ' ' → logprob: -19.013914108276367
    8. '۰' → logprob: -19.138914108276367
    9. '  ' → logprob: -19.388914108276367
    10. '2' → logprob: -19.388914108276367

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '1' → logprob: -17.000024795532227
    4. '۰' → logprob: -18.687524795532227
    5. '```' → logprob: -19.000024795532227
    6. ' ' → logprob: -19.750024795532227
    7. '000' → logprob: -20.437524795532227
    8. '=' → logprob: -20.437524795532227
    9. '   ' → logprob: -20.562524795532227
    10. '০' → logprob: -20.687524795532227

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1695331186056137
    2. 'for' → logprob: -2.1695330142974854
    3. ' for' → logprob: -3.6695330142974854
    4. '\n' → logprob: -4.1695332527160645
    5. ' 
' → logprob: -7.6695332527160645
    6. '
' → logprob: -9.294532775878906
    7. '  
' → logprob: -9.919532775878906
    8. '\' → logprob: -10.169532775878906
    9. '' → logprob: -10.169532775878906
    10. '

' → logprob: -10.294532775878906

Token 53: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014239625306800008
    2. '
' → logprob: -9.250142097473145
    3. ' for' → logprob: -10.125142097473145
    4. '\n' → logprob: -12.625142097473145
    5. '```' → logprob: -12.875142097473145
    6. '\' → logprob: -16.25014305114746
    7. '	for' → logprob: -16.37514305114746
    8. '' → logprob: -17.25014305114746
    9. '``' → logprob: -17.75014305114746
    10. ' 
' → logprob: -17.87514305114746

Token 54: ' A' (ID: 355)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.6464659571647644
    2. ' p' → logprob: -0.7714659571647644
    3. 'problem' → logprob: -4.64646577835083
    4. ' ' → logprob: -6.52146577835083
    5. 'p' → logprob: -7.39646577835083
    6. ' prob' → logprob: -7.77146577835083
    7. '(problem' → logprob: -7.77146577835083
    8. ' _' → logprob: -8.396466255187988
    9. 'Problem' → logprob: -8.646466255187988
    10. ' probl' → logprob: -8.771466255187988

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009532477706670761
    2. ' in' → logprob: -5.259532451629639
    3. ' ,' → logprob: -5.509532451629639
    4. ',_' → logprob: -9.634532928466797
    5. ' ' → logprob: -9.884532928466797
    6. 'in' → logprob: -10.509532928466797
    7. 'i' → logprob: -11.009532928466797
    8. '_' → logprob: -11.384532928466797
    9. 'a' → logprob: -11.509532928466797
    10. ',a' → logprob: -11.759532928466797

Token 56: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03158058598637581
    2. 'T' → logprob: -3.656580686569214
    3. ' B' → logprob: -5.406580448150635
    4. 'D' → logprob: -7.781580448150635
    5. ' T' → logprob: -8.781580924987793
    6. 'C' → logprob: -9.031580924987793
    7. 'L' → logprob: -10.156580924987793
    8. 'S' → logprob: -11.156580924987793
    9. 't' → logprob: -11.906580924987793
    10. 'b' → logprob: -12.031580924987793

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004246504511684179
    2. 'in' → logprob: -5.504246711730957
    3. ' ' → logprob: -9.629246711730957
    4. ',' → logprob: -9.754246711730957
    5. ' i' → logprob: -10.379246711730957
    6. ' :' → logprob: -12.754246711730957
    7. ':' → logprob: -12.879246711730957
    8. '  ' → logprob: -13.004246711730957
    9. '	in' → logprob: -13.379246711730957
    10. ' ' → logprob: -13.754246711730957

Token 58: ' problems' (ID: 6840)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.006718452088534832
    2. ' problems' → logprob: -5.006718635559082
    3. ' pro' → logprob: -13.131718635559082
    4. 'prob' → logprob: -14.506718635559082
    5. 'problem' → logprob: -15.631718635559082
    6. '	pro' → logprob: -15.756718635559082
    7. '(pro' → logprob: -16.006717681884766
    8. '_pro' → logprob: -16.381717681884766
    9. 'proble' → logprob: -16.381717681884766
    10. '/problems' → logprob: -17.381717681884766

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.794061770662665e-05
    2. ':
' → logprob: -9.25009822845459
    3. ':**' → logprob: -14.75009822845459
    4. ' :' → logprob: -15.12509822845459
    5. '):' → logprob: -15.50009822845459
    6. ',' → logprob: -15.75009822845459
    7. '   ' → logprob: -15.87509822845459
    8. ' if' → logprob: -16.250097274780273
    9. 'if' → logprob: -16.375097274780273
    10. '<|end|>' → logprob: -16.500097274780273

Token 60: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' time' (ID: 1058)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5281752943992615
    2. 'if' → logprob: -1.9031753540039062
    3. ' ' → logprob: -2.1531753540039062
    4. '   ' → logprob: -2.6531753540039062
    5. '    ' → logprob: -3.4031753540039062
    6. 'time' (adapté à ' time') → logprob: -3.9031753540039062
    7. ' time' → logprob: -4.028175354003906
    8. '  ' → logprob: -7.028175354003906
    9. ' 
' → logprob: -7.278175354003906
    10. 't' → logprob: -7.903175354003906

Token 62: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.27199608087539673
    2. '+' → logprob: -1.771996021270752
    3. ' +' → logprob: -2.771996021270752
    4. '+=' → logprob: -5.396996021270752
    5. ' <=' → logprob: -6.896996021270752
    6. '<|end|>' → logprob: -11.14699649810791
    7. '<=' → logprob: -11.39699649810791
    8. ' ' → logprob: -12.02199649810791
    9. ' ' → logprob: -12.27199649810791
    10. '+='' → logprob: -12.52199649810791

Token 63: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0040785204619169235
    2. ' A' → logprob: -5.504078388214111
    3. '	A' → logprob: -17.004077911376953
    4. ' ' → logprob: -19.504077911376953
    5. '>A' → logprob: -20.004077911376953
    6. '+A' → logprob: -20.004077911376953
    7. '*A' → logprob: -20.629077911376953
    8. '1' → logprob: -20.629077911376953
    9. '   ' → logprob: -21.129077911376953
    10. 'Ａ' → logprob: -21.629077911376953

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4959661066532135
    2. '   ' → logprob: -1.6209660768508911
    3. '<|end|>' → logprob: -2.4959661960601807
    4. ' if' → logprob: -3.2459661960601807
    5. '    
' → logprob: -3.8709661960601807
    6. ' 
' → logprob: -4.245965957641602
    7. 'if' → logprob: -4.370965957641602
    8. ' <=' → logprob: -4.995965957641602
    9. '<|end|>' → logprob: -5.120965957641602
    10. '  
' → logprob: -5.370965957641602

Token 65: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2784358263015747
    2. '
' → logprob: -1.9034358263015747
    3. ' 
' → logprob: -2.903435707092285
    4. 'if' → logprob: -3.653435707092285
    5. '    
' → logprob: -5.528435707092285
    6. '\n' → logprob: -5.903435707092285
    7. '<|end|>' → logprob: -5.903435707092285
    8. '   ' → logprob: -6.903435707092285
    9. '  
' → logprob: -7.028435707092285
    10. ' ' → logprob: -7.528435707092285

Token 66: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.021365366876125336
    2. ' if' → logprob: -3.8963654041290283
    3. '   ' → logprob: -7.146365165710449
    4. '```' → logprob: -10.77136516571045
    5. ' ' → logprob: -12.52136516571045
    6. '
' → logprob: -12.77136516571045
    7. '    
' → logprob: -13.27136516571045
    8. '	if' → logprob: -13.52136516571045
    9. ' 
' → logprob: -14.02136516571045
    10. '  ' → logprob: -14.02136516571045

Token 67: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.023246407508850098
    2. 'time' → logprob: -3.7732462882995605
    3. '(time' → logprob: -14.523246765136719
    4. '	time' → logprob: -15.648246765136719
    5. ' ' → logprob: -16.39824676513672
    6. ' ' → logprob: -16.89824676513672
    7. 'ime' → logprob: -17.14824676513672
    8. 'Time' → logprob: -17.64824676513672
    9. '>' → logprob: -17.77324676513672
    10. '"time' → logprob: -17.89824676513672

Token 68: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03969382494688034
    2. '<=' → logprob: -3.289693832397461
    3. ' >' → logprob: -6.539693832397461
    4. '>' → logprob: -8.539693832397461
    5. '<' → logprob: -12.039693832397461
    6. ' <' → logprob: -13.539693832397461
    7. ' ' → logprob: -13.539693832397461
    8. ' ' → logprob: -14.789693832397461
    9. '<|end|>' → logprob: -15.039693832397461
    10. ')<=' → logprob: -15.539693832397461

Token 69: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4740806519985199
    2. ' B' → logprob: -0.9740806818008423
    3. ' ' → logprob: -12.724081039428711
    4. ' ' → logprob: -15.099081039428711
    5. '	B' → logprob: -15.349081039428711
    6. 'b' → logprob: -16.34908103942871
    7. '   ' → logprob: -16.84908103942871
    8. '  ' → logprob: -17.34908103942871
    9. 'Ｂ' → logprob: -18.34908103942871
    10. '>B' → logprob: -18.78658103942871

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006289214943535626
    2. ':
' → logprob: -7.37562894821167
    3. '):' → logprob: -14.375628471374512
    4. ' :' → logprob: -14.500628471374512
    5. ':\' → logprob: -15.375628471374512
    6. '   ' → logprob: -15.625628471374512
    7. ':
' → logprob: -15.625628471374512
    8. ':**' → logprob: -15.875628471374512
    9. ':

' → logprob: -16.000629425048828
    10. '.' → logprob: -16.000629425048828

Token 71: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3239968717098236
    2. '       ' → logprob: -1.698996901512146
    3. '
' → logprob: -2.6989967823028564
    4. ' count' → logprob: -4.1989970207214355
    5. 'count' → logprob: -4.6989970207214355
    6. '    
' → logprob: -6.9489970207214355
    7. '	count' → logprob: -7.4489970207214355
    8. ' 
' → logprob: -7.8239970207214355
    9. '\n' → logprob: -8.448996543884277
    10. '    ' → logprob: -9.948996543884277

Token 72: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -3.5954712075181305e-05
    2. ' count' → logprob: -10.250036239624023
    3. '
' → logprob: -15.250036239624023
    4. '   ' → logprob: -15.500036239624023
    5. '	count' → logprob: -16.500036239624023
    6. '1' → logprob: -17.875036239624023
    7. '_count' → logprob: -18.250036239624023
    8. '    
' → logprob: -18.875036239624023
    9. '$count' → logprob: -19.000036239624023
    10. '<count' → logprob: -19.000036239624023

Token 73: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.9441826343536377
    2. ' +=' → logprob: -1.0691826343536377
    3. '+' → logprob: -1.3191826343536377
    4. ' +' → logprob: -8.569182395935059
    5. '<|end|>' → logprob: -9.069182395935059
    6. '+="' → logprob: -11.319182395935059
    7. ' ' → logprob: -11.319182395935059
    8. ']+=' → logprob: -11.819182395935059
    9. '+='' → logprob: -11.819182395935059
    10. ' ' → logprob: -12.444182395935059

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -20.875709533691406
    4. ' ' → logprob: -21.125709533691406
    5. '<|end|>' → logprob: -21.125709533691406
    6. '１' → logprob: -21.625709533691406
    7. '  ' → logprob: -22.750709533691406
    8. '۱' → logprob: -22.875709533691406
    9. '```' → logprob: -23.250709533691406
    10. '+' → logprob: -23.938209533691406

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '１' → logprob: -21.125001907348633
    4. '```' → logprob: -22.125001907348633
    5. '   ' → logprob: -22.250001907348633
    6. '<|end|>' → logprob: -22.500001907348633
    7. '۱' → logprob: -23.000001907348633
    8. '+' → logprob: -23.250001907348633
    9. '' → logprob: -23.625001907348633
    10. '.' → logprob: -23.750001907348633

Token 76: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3145069181919098
    2. 'print' → logprob: -1.3145068883895874
    3. '\n' → logprob: -7.564507007598877
    4. '<|end|>' → logprob: -8.564506530761719
    5. ' 
' → logprob: -8.689506530761719
    6. ' print' → logprob: -9.064506530761719
    7. '
' → logprob: -9.189506530761719
    8. '' → logprob: -9.814506530761719
    9. '  
' → logprob: -10.564506530761719
    10. '

' → logprob: -10.689506530761719

Token 77: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004372254479676485
    2. '
' → logprob: -7.750437259674072
    3. ' print' → logprob: -12.125436782836914
    4. ')' → logprob: -15.250436782836914
    5. '
' → logprob: -15.625436782836914
    6. '```' → logprob: -15.625436782836914
    7. '\n' → logprob: -15.875436782836914
    8. ' 
' → logprob: -16.125436782836914
    9. '(print' → logprob: -16.625436782836914
    10. '  
' → logprob: -16.625436782836914

Token 78: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06197608634829521
    2. '(count' → logprob: -2.811976194381714
    3. '()' → logprob: -12.936976432800293
    4. '(`' → logprob: -13.686976432800293
    5. '((' → logprob: -14.186976432800293
    6. ' (' → logprob: -14.311976432800293
    7. '(cnt' → logprob: -14.311976432800293
    8. '("("' → logprob: -14.686976432800293
    9. '(c' → logprob: -14.811976432800293
    10. '(

' → logprob: -14.936976432800293

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -16.375
    4. '()' → logprob: -18.375
    5. ')`' → logprob: -18.5
    6. '))' → logprob: -18.875
    7. '`)' → logprob: -19.75
    8. ')#' → logprob: -20.0
    9. '')' → logprob: -20.25
    10. '）' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 77
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 36.36%
Précision adaptée (1ère position): 38.96%
Précision (top 10): 85.71%
================================================================================
