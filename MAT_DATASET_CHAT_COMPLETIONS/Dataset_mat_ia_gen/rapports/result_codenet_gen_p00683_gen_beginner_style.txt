================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
for _ in range(n):
    text = input()
    M = int(input())
    cursor = 0  # cursor position: between characters; 0 means before first character
    for __ in range(M):
        cmd = input()
        if cmd == "forward char":
            if cursor < len(text):
                cursor += 1
        elif cmd == "backward char":
            if cursor > 0:
                cursor -= 1
        elif cmd == "forward word":
            # move cursor to end of leftmost word in the right
            # words delimited also by cursor and blanks
            right = text[cursor:]
            if not right:
                continue
            i = 0
            n_right = len(right)
            # skip blanks first
            while i < n_right and right[i] == ' ':
                i += 1
            if i == n_right:
                cursor = len(text)
                continue
            # now i is at start of first right word
            # move i to end of word (until blank or end)
            while i < n_right and right[i] != ' ':
                i += 1
            cursor += i
        elif cmd == "backward word":
            # move cursor to beginning of rightmost word in the left
            left = text[:cursor]
            if not left:
                continue
            i = len(left) - 1
            # skip blanks backward
            while i >= 0 and left[i] == ' ':
                i -= 1
            if i < 0:
                cursor = 0
                continue
            # now i at last char of word before cursor
            # move i backward to beginning of word
            while i >= 0 and left[i] != ' ':
                i -= 1
            cursor = i + 1
        elif cmd.startswith("insert "):
            # extract text in quotes
            idx1 = cmd.find('"')
            idx2 = cmd.rfind('"')
            ins_text = cmd[idx1+1:idx2]
            text = text[:cursor] + ins_text + text[cursor:]
            cursor += len(ins_text)
        elif cmd == "delete char":
            # delete char right next to cursor if exists
            if cursor < len(text):
                text = text[:cursor] + text[cursor+1:]
        elif cmd == "delete word":
            # delete leftmost word in the right of the cursor plus blanks just after cursor
            right = text[cursor:]
            if not right:
                continue
            # count blanks after cursor
            i = 0
            while i < len(right) and right[i] == ' ':
                i += 1
            if i == len(right):
                # only blanks to right, delete them all
                text = text[:cursor]
                continue
            # now at start of first word
            j = i
            while j < len(right) and right[j] != ' ':
                j += 1
            # delete from cursor to cursor + j
            text = text[:cursor] + right[j:]
        else:
            # unknown command, ignore
            pass

    # print text with cursor as ^
    print(text[:cursor] + '^' + text[cursor:])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00048763392260298133
    2. ''' → logprob: -8.750487327575684
    3. '('' → logprob: -9.250487327575684
    4. '(n' → logprob: -9.500487327575684
    5. '`' → logprob: -10.250487327575684
    6. '```' → logprob: -10.500487327575684
    7. '("("' → logprob: -10.750487327575684
    8. '(
' → logprob: -10.750487327575684
    9. '(input' → logprob: -11.000487327575684
    10. ')' → logprob: -12.125487327575684

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11814047396183014
    2. ')' → logprob: -2.243140459060669
    3. '()' → logprob: -5.493140697479248
    4. '())' → logprob: -7.493140697479248
    5. '(
' → logprob: -8.24314022064209
    6. '```' → logprob: -9.99314022064209
    7. '(

' → logprob: -10.36814022064209
    8. '('' → logprob: -10.49314022064209
    9. ''' → logprob: -10.74314022064209
    10. '(n' → logprob: -10.86814022064209

Token 5: 'for' (ID: 1938)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8081278204917908
    2. 'if' → logprob: -1.4331278800964355
    3. 'for' → logprob: -1.9331278800964355
    4. 's' → logprob: -2.3081278800964355
    5. 'f' → logprob: -4.0581278800964355
    6. 'x' → logprob: -4.4331278800964355
    7. 'a' → logprob: -5.0581278800964355
    8. ' ' → logprob: -5.3081278800964355
    9. '\n' → logprob: -5.6831278800964355
    10. '`' → logprob: -5.6831278800964355

Token 6: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020098581910133362
    2. ' i' → logprob: -4.145098686218262
    3. '  ' → logprob: -5.645098686218262
    4. ' n' → logprob: -7.645098686218262
    5. ' ' → logprob: -11.520098686218262
    6. ' ‌' → logprob: -11.895098686218262
    7. 'i' → logprob: -12.020098686218262
    8. ' for' → logprob: -13.395098686218262
    9. ' )' → logprob: -13.520098686218262
    10. ' a' → logprob: -13.520098686218262

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003277056384831667
    2. 'in' → logprob: -6.253276824951172
    3. ' ' → logprob: -6.628276824951172
    4. '  ' → logprob: -11.753276824951172
    5. ' i' → logprob: -12.128276824951172
    6. 'n' → logprob: -12.628276824951172
    7. ' n' → logprob: -12.878276824951172
    8. '_' → logprob: -13.753276824951172
    9. ',' → logprob: -14.378276824951172
    10. 'space' → logprob: -14.503276824951172

Token 8: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141607522964478
    2. ' range' → logprob: -1.701416015625
    3. '	range' → logprob: -13.576416015625
    4. 'n' → logprob: -14.701416015625
    5. '(range' → logprob: -15.201416015625
    6. ' ' → logprob: -15.201416015625
    7. '_' → logprob: -15.451416015625
    8. '_range' → logprob: -15.451416015625
    9. 'in' → logprob: -16.576416015625
    10. 'rang' → logprob: -16.826416015625

Token 9: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0453958660364151
    2. '(n' → logprob: -3.170395851135254
    3. ' (' → logprob: -6.045395851135254
    4. '(range' → logprob: -11.170395851135254
    5. '(len' → logprob: -12.045395851135254
    6. '((' → logprob: -14.170395851135254
    7. '(
' → logprob: -14.545395851135254
    8. '```' → logprob: -14.670395851135254
    9. ' n' → logprob: -14.795395851135254
    10. '(int' → logprob: -15.045395851135254

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10560493171215057
    2. ')' → logprob: -2.355604887008667
    3. ':' → logprob: -5.230605125427246
    4. ':)' → logprob: -11.855605125427246
    5. ' ):' → logprob: -12.355605125427246
    6. '):
' → logprob: -12.355605125427246
    7. '+' → logprob: -12.355605125427246
    8. ''):' → logprob: -13.105605125427246
    9. ' )' → logprob: -13.855605125427246
    10. '```' → logprob: -13.980605125427246

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015611659036949277
    2. '    
' → logprob: -6.501561164855957
    3. '```' → logprob: -11.251561164855957
    4. 'input' → logprob: -11.626561164855957
    5. 'print' → logprob: -11.751561164855957
    6. ' input' → logprob: -12.251561164855957
    7. '   ' → logprob: -12.626561164855957
    8. '    ' → logprob: -12.751561164855957
    9. ' ' → logprob: -13.251561164855957
    10. '"' → logprob: -13.251561164855957

Token 12: ' text' (ID: 2201)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25684353709220886
    2. 'print' → logprob: -2.0068435668945312
    3. 'x' → logprob: -3.3818435668945312
    4. 'a' → logprob: -4.006843566894531
    5. 'name' → logprob: -4.381843566894531
    6. 'input' → logprob: -4.881843566894531
    7. 'user' → logprob: -5.881843566894531
    8. 'i' → logprob: -6.006843566894531
    9. ' print' → logprob: -6.256843566894531
    10. 'line' → logprob: -6.256843566894531

Token 13: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.895256757736206
    2. ' =' → logprob: -1.395256757736206
    3. '_' → logprob: -1.645256757736206
    4. '.' → logprob: -2.395256757736206
    5. '()' → logprob: -4.020256996154785
    6. '[' → logprob: -4.395256996154785
    7. ')' → logprob: -4.895256996154785
    8. '[:]' → logprob: -5.145256996154785
    9. '(' → logprob: -5.395256996154785
    10. '   ' → logprob: -5.645256996154785

Token 14: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.023249439895153046
    2. 'input' → logprob: -3.773249387741089
    3. '=input' → logprob: -13.398249626159668
    4. '(input' → logprob: -14.273249626159668
    5. ' ' → logprob: -14.773249626159668
    6. ' int' → logprob: -14.898249626159668
    7. '   ' → logprob: -15.148249626159668
    8. ' str' → logprob: -16.02324867248535
    9. 'int' → logprob: -16.02324867248535
    10. '	input' → logprob: -16.14824867248535

Token 15: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023463726043701172
    2. '()' → logprob: -4.648463726043701
    3. '('' → logprob: -5.148463726043701
    4. ''' → logprob: -5.523463726043701
    5. '"' → logprob: -6.523463726043701
    6. ')' → logprob: -6.898463726043701
    7. '("("' → logprob: -7.648463726043701
    8. '`' → logprob: -8.52346420288086
    9. '```' → logprob: -8.52346420288086
    10. '   ' → logprob: -9.27346420288086

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003882738295942545
    2. 'print' → logprob: -7.003882884979248
    3. ' if' → logprob: -7.128882884979248
    4. '    
' → logprob: -7.253882884979248
    5. 'if' → logprob: -7.503882884979248
    6. '```' → logprob: -7.878882884979248
    7. ''' → logprob: -9.12888240814209
    8. ')' → logprob: -9.25388240814209
    9. '    ' → logprob: -9.37888240814209
    10. '[' → logprob: -10.62888240814209

Token 17: ' M' (ID: 391)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28237006068229675
    2. 'if' → logprob: -2.532370090484619
    3. 'words' → logprob: -2.782370090484619
    4. 'print' → logprob: -3.282370090484619
    5. ' if' → logprob: -3.532370090484619
    6. 'count' → logprob: -4.657370090484619
    7. 'word' → logprob: -5.532370090484619
    8. 'for' → logprob: -5.657370090484619
    9. ' words' → logprob: -5.657370090484619
    10. 'result' → logprob: -5.782370090484619

Token 18: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9466707706451416
    2. ' =' → logprob: -1.0716707706451416
    3. 'a' → logprob: -2.0716707706451416
    4. 'ax' → logprob: -2.6966707706451416
    5. '.append' → logprob: -4.1966705322265625
    6. '=' → logprob: -4.4466705322265625
    7. 'A' → logprob: -4.5716705322265625
    8. '[' → logprob: -5.3216705322265625
    9. '.a' → logprob: -5.5716705322265625
    10. 'y' → logprob: -5.8216705322265625

Token 19: ' int' (ID: 677)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.6611400246620178
    2. ' {}' → logprob: -1.536139965057373
    3. 'len' → logprob: -2.161139965057373
    4. ' max' → logprob: -2.786139965057373
    5. '{}' → logprob: -2.911139965057373
    6. 'max' → logprob: -4.411139965057373
    7. ' defaultdict' → logprob: -5.286139965057373
    8. ' []' → logprob: -5.286139965057373
    9. ' text' → logprob: -5.786139965057373
    10. ' ' → logprob: -5.911139965057373

Token 20: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07427185773849487
    2. '(text' → logprob: -2.8242719173431396
    3. '(input' → logprob: -4.4492716789245605
    4. ' (' → logprob: -8.824272155761719
    5. '(len' → logprob: -9.574272155761719
    6. '(M' → logprob: -9.699272155761719
    7. '()' → logprob: -9.699272155761719
    8. '('' → logprob: -10.199272155761719
    9. '(max' → logprob: -10.199272155761719
    10. 'text' → logprob: -10.824272155761719

Token 21: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6494784951210022
    2. '())' → logprob: -0.8994784951210022
    3. '()' → logprob: -2.6494784355163574
    4. '())
' → logprob: -10.024478912353516
    5. '))' → logprob: -10.274478912353516
    6. '(' → logprob: -10.274478912353516
    7. '`)' → logprob: -10.774478912353516
    8. '()
' → logprob: -10.899478912353516
    9. '")' → logprob: -11.274478912353516
    10. ')
' → logprob: -11.524478912353516

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2681888937950134
    2. ')' → logprob: -1.8931889533996582
    3. '<|end|>' → logprob: -3.268188953399658
    4. 'for' → logprob: -4.393188953399658
    5. '[' → logprob: -4.643188953399658
    6. ' for' → logprob: -5.393188953399658
    7. '```' → logprob: -5.393188953399658
    8. '    ' → logprob: -5.518188953399658
    9. ' ' → logprob: -6.018188953399658
    10. '[]' → logprob: -6.518188953399658

Token 23: ' cursor' (ID: 14944)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2097673416137695
    2. 'for' → logprob: -1.4597673416137695
    3. '   ' → logprob: -1.5847673416137695
    4. '[' → logprob: -1.9597673416137695
    5. ' for' → logprob: -3.5847673416137695
    6. '```' → logprob: -3.8347673416137695
    7. '    ' → logprob: -4.2097673416137695
    8. '[]' → logprob: -5.2097673416137695
    9. 's' → logprob: -5.3347673416137695
    10. '    
' → logprob: -5.4597673416137695

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5771899819374084
    2. '_' → logprob: -1.3271899223327637
    3. ' ' → logprob: -2.3271899223327637
    4. '_pos' → logprob: -2.9521899223327637
    5. '=' → logprob: -4.827189922332764
    6. '_position' → logprob: -4.827189922332764
    7. '_space' → logprob: -5.952189922332764
    8. ' +=' → logprob: -6.452189922332764
    9. ' _' → logprob: -7.077189922332764
    10. '_positions' → logprob: -7.452189922332764

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11919153481721878
    2. ' ' → logprob: -2.6191916465759277
    3. ' len' → logprob: -3.6191916465759277
    4. 'len' → logprob: -4.369191646575928
    5. ' -' → logprob: -11.24419116973877
    6. '-' → logprob: -11.99419116973877
    7. '(len' → logprob: -12.80669116973877
    8. '1' → logprob: -13.36919116973877
    9. '<len' → logprob: -13.36919116973877
    10. '=len' → logprob: -13.61919116973877

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25234857201576233
    2. 'len' → logprob: -1.50234854221344
    3. '-' → logprob: -8.002348899841309
    4. ' len' → logprob: -9.877348899841309
    5. ' ' → logprob: -11.252348899841309
    6. '(len' → logprob: -12.002348899841309
    7. '-l' → logprob: -13.002348899841309
    8. '[len' → logprob: -13.502348899841309
    9. '<len' → logprob: -13.502348899841309
    10. 'end' → logprob: -13.752348899841309

Token 27: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04645572602748871
    2. '<|end|>' → logprob: -4.0464558601379395
    3. ' for' → logprob: -4.1714558601379395
    4. 'for' → logprob: -4.5464558601379395
    5. '	for' → logprob: -7.9214558601379395
    6. ' ' → logprob: -8.171455383300781
    7. '<|end|>' → logprob: -8.546455383300781
    8. '
' → logprob: -8.546455383300781
    9. '\n' → logprob: -9.046455383300781
    10. '    ' → logprob: -9.171455383300781

Token 28: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.322541207075119
    2. '   ' → logprob: -1.5725412368774414
    3. ' for' → logprob: -2.8225412368774414
    4. '<|end|>' → logprob: -4.947541236877441
    5. '	for' → logprob: -7.822541236877441
    6. ' ' → logprob: -8.072541236877441
    7. '  ' → logprob: -8.322541236877441
    8. ')' → logprob: -9.072541236877441
    9. '<|end|>' → logprob: -9.572541236877441
    10. '[' → logprob: -9.572541236877441

Token 29: ' cursor' (ID: 14944)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009919465519487858
    2. '<|end|>' → logprob: -5.0099196434021
    3. ' #' → logprob: -6.1349196434021
    4. '#' → logprob: -7.7599196434021
    5. ' )' → logprob: -8.884919166564941
    6. ')' → logprob: -9.759919166564941
    7. '<|end|>' → logprob: -10.134919166564941
    8. '  ' → logprob: -10.259919166564941
    9. ' ,' → logprob: -10.634919166564941
    10. ' for' → logprob: -10.634919166564941

Token 30: ' position' (ID: 4010)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3099027872085571
    2. '_' → logprob: -1.6849027872085571
    3. ' =' → logprob: -1.8099027872085571
    4. '<|end|>' → logprob: -2.0599026679992676
    5. 'position' → logprob: -2.6849026679992676
    6. ' position' → logprob: -2.9349026679992676
    7. '=' → logprob: -3.9349026679992676
    8. '_position' → logprob: -4.059902667999268
    9. ' +=' → logprob: -4.309902667999268
    10. ' )' → logprob: -4.684902667999268

Token 31: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' between' (ID: 2870)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08127052336931229
    2. '<|end|>' → logprob: -2.831270456314087
    3. '0' → logprob: -4.581270694732666
    4. ' )' → logprob: -6.331270694732666
    5. '<|end|>' → logprob: -6.956270694732666
    6. ')' → logprob: -6.956270694732666
    7. ' len' → logprob: -7.081270694732666
    8. ' #' → logprob: -7.206270694732666
    9. ' for' → logprob: -7.331270694732666
    10. 'len' → logprob: -7.456270694732666

Token 33: ' characters' (ID: 9862)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.437473863363266
    2. 'text' → logprob: -1.5624738931655884
    3. 'cursor' → logprob: -2.687473773956299
    4. 'characters' → logprob: -3.687473773956299
    5. ' ' → logprob: -4.312473773956299
    6. 's' → logprob: -4.812473773956299
    7. 'tokens' → logprob: -5.062473773956299
    8. 'the' → logprob: -5.187473773956299
    9. 'chars' → logprob: -5.937473773956299
    10. 'words' → logprob: -5.937473773956299

Token 34: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5150818228721619
    2. '<|end|>' → logprob: -1.1400818824768066
    3. ' ' → logprob: -3.2650818824768066
    4. 'for' → logprob: -3.8900818824768066
    5. ' for' → logprob: -4.640081882476807
    6. '<|end|>' → logprob: -5.640081882476807
    7. '  ' → logprob: -5.890081882476807
    8. ')' → logprob: -6.640081882476807
    9. '    ' → logprob: -6.640081882476807
    10. '[' → logprob: -6.640081882476807

Token 35: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4441077411174774
    2. 'for' → logprob: -1.9441077709197998
    3. '<|end|>' → logprob: -2.1941077709198
    4. ' ' → logprob: -2.5691077709198
    5. 's' → logprob: -5.319107532501221
    6. ' commands' → logprob: -5.569107532501221
    7. 'commands' → logprob: -5.694107532501221
    8. '   ' → logprob: -5.819107532501221
    9. '<|end|>' → logprob: -6.569107532501221
    10. ')' → logprob: -6.694107532501221

Token 36: '0' (ID: 15)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06805699318647385
    2. 'commands' → logprob: -3.943057060241699
    3. 'text' → logprob: -4.193057060241699
    4. '#' → logprob: -4.818057060241699
    5. ' for' → logprob: -5.318057060241699
    6. 'f' → logprob: -6.318057060241699
    7. ' ' → logprob: -6.443057060241699
    8. '0' → logprob: -6.568057060241699
    9. 's' → logprob: -6.693057060241699
    10. 'result' → logprob: -6.818057060241699

Token 37: ' means' (ID: 4748)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' before' (ID: 2254)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.09666910022497177
    2. 'at' → logprob: -2.9716691970825195
    3. 'the' → logprob: -4.0966691970825195
    4. ' before' → logprob: -4.4716691970825195
    5. 'cursor' → logprob: -4.8466691970825195
    6. ' at' → logprob: -5.8466691970825195
    7. 'begin' → logprob: -7.3466691970825195
    8. ' the' → logprob: -7.9716691970825195
    9. '0' → logprob: -8.22166919708252
    10. 'start' → logprob: -8.34666919708252

Token 39: ' first' (ID: 1577)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.2622850835323334
    2. 'the' → logprob: -2.262284994125366
    3. ' the' → logprob: -3.137284994125366
    4. ' text' → logprob: -3.762284994125366
    5. 't' → logprob: -3.887284994125366
    6. '0' → logprob: -4.637285232543945
    7. ' ' → logprob: -4.887285232543945
    8. '<|end|>' → logprob: -5.512285232543945
    9. '_' → logprob: -5.762285232543945
    10. ' first' → logprob: -6.012285232543945

Token 40: ' character' (ID: 5855)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8010177612304688
    2. '<|end|>' → logprob: -0.8010177612304688
    3. ' for' → logprob: -3.0510177612304688
    4. '<|end|>' → logprob: -4.551017761230469
    5. 'token' → logprob: -4.926017761230469
    6. '   ' → logprob: -5.051017761230469
    7. 'for' → logprob: -5.551017761230469
    8. ' 
' → logprob: -5.676017761230469
    9. '```' → logprob: -6.176017761230469
    10. ' token' → logprob: -6.301017761230469

Token 41: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40205758810043335
    2. '<|end|>' → logprob: -1.4020576477050781
    3. 'for' → logprob: -3.527057647705078
    4. ' for' → logprob: -4.402057647705078
    5. ' ' → logprob: -5.027057647705078
    6. ')' → logprob: -5.027057647705078
    7. '<|end|>' → logprob: -5.152057647705078
    8. 's' → logprob: -5.527057647705078
    9. '```' → logprob: -5.652057647705078
    10. '
' → logprob: -5.777057647705078

Token 42: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28175732493400574
    2. '   ' → logprob: -2.156757354736328
    3. '<|end|>' → logprob: -2.781757354736328
    4. ' for' → logprob: -3.156757354736328
    5. 'commands' → logprob: -5.406757354736328
    6. 'operations' → logprob: -5.906757354736328
    7. 'tokens' → logprob: -6.156757354736328
    8. 'text' → logprob: -6.156757354736328
    9. 's' → logprob: -6.531757354736328
    10. 'actions' → logprob: -6.531757354736328

Token 43: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11239805817604065
    2. 'commands' → logprob: -2.862398147583008
    3. ' for' → logprob: -4.237398147583008
    4. '   ' → logprob: -4.862398147583008
    5. 'result' → logprob: -4.987398147583008
    6. 'text' → logprob: -5.237398147583008
    7. ' commands' → logprob: -5.862398147583008
    8. 'operations' → logprob: -6.362398147583008
    9. 'stack' → logprob: -6.862398147583008
    10. 'command' → logprob: -6.862398147583008

Token 44: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5870954394340515
    2. ' i' → logprob: -1.4620954990386963
    3. ' _' → logprob: -1.8370954990386963
    4. ' M' → logprob: -4.087095260620117
    5. '  ' → logprob: -4.462095260620117
    6. '_' → logprob: -4.712095260620117
    7. ' m' → logprob: -4.712095260620117
    8. ' in' → logprob: -6.337095260620117
    9. ' range' → logprob: -6.462095260620117
    10. ' j' → logprob: -6.837095260620117

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01517950277775526
    2. 'in' → logprob: -4.265179634094238
    3. ' ' → logprob: -7.015179634094238
    4. '_' → logprob: -9.765179634094238
    5. ' _' → logprob: -11.015179634094238
    6. '  ' → logprob: -11.140179634094238
    7. ' i' → logprob: -11.390179634094238
    8. '    ' → logprob: -12.390179634094238
    9. 'range' → logprob: -12.765179634094238
    10. '   ' → logprob: -13.265179634094238

Token 46: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931484341621399
    2. 'range' → logprob: -0.6931484341621399
    3. '(range' → logprob: -15.068148612976074
    4. '	range' → logprob: -15.318148612976074
    5. ' M' → logprob: -15.818148612976074
    6. ' ' → logprob: -15.818148612976074
    7. '_range' → logprob: -16.693147659301758
    8. 'in' → logprob: -16.818147659301758
    9. ' xrange' → logprob: -16.943147659301758
    10. 'input' → logprob: -17.193147659301758

Token 47: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.11023771017789841
    2. '(' → logprob: -2.3602375984191895
    3. ' (' → logprob: -4.6102375984191895
    4. '(m' → logprob: -11.110238075256348
    5. ' M' → logprob: -11.985238075256348
    6. ' ' → logprob: -12.610238075256348
    7. '(range' → logprob: -12.985238075256348
    8. '(
' → logprob: -13.485238075256348
    9. ')' → logprob: -14.360238075256348
    10. 'range' → logprob: -14.485238075256348

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012005656026303768
    2. ')' → logprob: -4.512005805969238
    3. ' ):' → logprob: -7.262005805969238
    4. ':' → logprob: -9.137005805969238
    5. '   ' → logprob: -9.637005805969238
    6. '):
' → logprob: -9.762005805969238
    7. ' )' → logprob: -11.012005805969238
    8. '+' → logprob: -13.637005805969238
    9. '():' → logprob: -13.762005805969238
    10. ''):' → logprob: -13.762005805969238

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4676419198513031
    2. '   ' → logprob: -1.8426419496536255
    3. '    ' → logprob: -2.342641830444336
    4. ' ' → logprob: -2.342641830444336
    5. '<|end|>' → logprob: -4.592641830444336
    6. '  ' → logprob: -6.342641830444336
    7. 'input' → logprob: -6.717641830444336
    8. ' s' → logprob: -6.717641830444336
    9. '        ' → logprob: -6.842641830444336
    10. 's' → logprob: -6.967641830444336

Token 50: ' cmd' (ID: 11704)
  Prédit: ' command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' command' → logprob: -0.4572945833206177
    2. ' cmd' → logprob: -1.8322945833206177
    3. 'command' → logprob: -2.332294464111328
    4. 'cmd' (adapté à ' cmd') → logprob: -3.082294464111328
    5. ' line' → logprob: -3.332294464111328
    6. ' op' → logprob: -4.707294464111328
    7. 'line' → logprob: -5.707294464111328
    8. '   ' → logprob: -5.832294464111328
    9. ' operation' → logprob: -5.957294464111328
    10. ' s' → logprob: -5.957294464111328

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011543233878910542
    2. '=' → logprob: -5.011543273925781
    3. ',' → logprob: -5.636543273925781
    4. ' ,' → logprob: -7.636543273925781
    5. 's' → logprob: -7.761543273925781
    6. '[' → logprob: -9.011543273925781
    7. '_' → logprob: -9.386543273925781
    8. '   ' → logprob: -10.261543273925781
    9. ' ' → logprob: -10.386543273925781
    10. '  ' → logprob: -10.386543273925781

Token 52: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06996322423219681
    2. 'input' → logprob: -2.694963216781616
    3. '=input' → logprob: -11.319963455200195
    4. ' ' → logprob: -12.569963455200195
    5. '(input' → logprob: -13.194963455200195
    6. ' list' → logprob: -13.569963455200195
    7. '	input' → logprob: -13.694963455200195
    8. ' int' → logprob: -13.819963455200195
    9. 'list' → logprob: -14.069963455200195
    10. 'int' → logprob: -14.632463455200195

Token 53: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0022501726634800434
    2. '(' → logprob: -7.0022501945495605
    3. '().' → logprob: -7.0022501945495605
    4. '())' → logprob: -8.252249717712402
    5. '()
' → logprob: -9.627249717712402
    6. '('' → logprob: -10.502249717712402
    7. ')' → logprob: -11.377249717712402
    8. '("' → logprob: -11.502249717712402
    9. '   ' → logprob: -11.502249717712402
    10. ' ()' → logprob: -11.877249717712402

Token 54: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9289383888244629
    2. ' ' → logprob: -1.053938388824463
    3. '       ' → logprob: -2.553938388824463
    4. '    ' → logprob: -3.053938388824463
    5. ' if' → logprob: -3.303938388824463
    6. '<|end|>' → logprob: -3.553938388824463
    7. '[' → logprob: -3.803938388824463
    8. '  ' → logprob: -4.803938388824463
    9. ''' → logprob: -5.053938388824463
    10. 'if' → logprob: -5.178938388824463

Token 55: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23281444609165192
    2. 'if' (adapté à ' if') → logprob: -2.3578145503997803
    3. ' i' → logprob: -3.1078145503997803
    4. ' ' → logprob: -3.4828145503997803
    5. 'i' → logprob: -4.482814311981201
    6. '       ' → logprob: -4.857814311981201
    7. 's' → logprob: -4.857814311981201
    8. '   ' → logprob: -5.607814311981201
    9. '    ' → logprob: -6.232814311981201
    10. '[' → logprob: -6.982814311981201

Token 56: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.05559621378779411
    2. ' ' → logprob: -3.055596113204956
    3. 'cmd' → logprob: -5.430596351623535
    4. ' len' → logprob: -6.805596351623535
    5. ' '' → logprob: -7.180596351623535
    6. ''' → logprob: -7.930596351623535
    7. '"' → logprob: -9.055596351623535
    8. ' cursor' → logprob: -9.430596351623535
    9. ' cmds' → logprob: -9.555596351623535
    10. ' "' → logprob: -10.555596351623535

Token 57: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.48131272196769714
    2. '.startswith' → logprob: -1.2313127517700195
    3. '[' → logprob: -2.7313127517700195
    4. '.' → logprob: -4.2313127517700195
    5. '==' → logprob: -5.4813127517700195
    6. ' .' → logprob: -5.8563127517700195
    7. '[:' → logprob: -6.6063127517700195
    8. '[:]' → logprob: -7.4813127517700195
    9. ' ' → logprob: -7.6063127517700195
    10. '.split' → logprob: -8.48131275177002

Token 58: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4383716285228729
    2. '"' → logprob: -1.0633716583251953
    3. ' '' → logprob: -4.938371658325195
    4. ' "' → logprob: -6.063371658325195
    5. ''s' → logprob: -10.063371658325195
    6. ' ' → logprob: -11.063371658325195
    7. ')' → logprob: -11.313371658325195
    8. ''m' → logprob: -11.563371658325195
    9. '('' → logprob: -12.688371658325195
    10. ''a' → logprob: -12.813371658325195

Token 59: 'forward' (ID: 20233)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.8757336735725403
    2. ''' → logprob: -1.1257336139678955
    3. ''L' → logprob: -1.7507336139678955
    4. '"L' → logprob: -3.2507336139678955
    5. '"' → logprob: -3.7507336139678955
    6. 'P' → logprob: -5.000733852386475
    7. ''I' → logprob: -5.750733852386475
    8. ''D' → logprob: -6.125733852386475
    9. '"P' → logprob: -6.375733852386475
    10. ''M' → logprob: -6.500733852386475

Token 60: ' char' (ID: 1826)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5345184803009033
    2. '()' → logprob: -1.6595184803009033
    3. '":' → logprob: -2.0345184803009033
    4. ' "' → logprob: -3.4095184803009033
    5. '":
' → logprob: -4.284518241882324
    6. '_cursor' → logprob: -4.409518241882324
    7. '()"' → logprob: -4.659518241882324
    8. ' cursor' → logprob: -5.034518241882324
    9. ' ":' → logprob: -5.659518241882324
    10. ' ' → logprob: -5.909518241882324

Token 61: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.7092175483703613
    2. 'acter' → logprob: -1.4592175483703613
    3. '":' → logprob: -2.3342175483703613
    4. 'acters' → logprob: -2.4592175483703613
    5. 's' → logprob: -2.8342175483703613
    6. '"' → logprob: -3.5842175483703613
    7. '":
' → logprob: -5.334217548370361
    8. 'act' → logprob: -6.834217548370361
    9. '":

' → logprob: -9.084217071533203
    10. 'actor' → logprob: -9.209217071533203

Token 62: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41036027669906616
    2. '           ' → logprob: -1.910360336303711
    3. ' and' → logprob: -2.160360336303711
    4. ':' → logprob: -2.660360336303711
    5. ' :' → logprob: -6.785360336303711
    6. ' or' → logprob: -7.410360336303711
    7. '   ' → logprob: -8.160360336303711
    8. '        ' → logprob: -8.285360336303711
    9. ' if' → logprob: -8.660360336303711
    10. 'and' → logprob: -8.785360336303711

Token 63: ' if' (ID: 538)
  Prédit: ' cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.6386198997497559
    2. ' if' → logprob: -1.2636198997497559
    3. '       ' → logprob: -2.138619899749756
    4. '           ' → logprob: -3.638619899749756
    5. 'if' (adapté à ' if') → logprob: -3.888619899749756
    6. '   ' → logprob: -4.763619899749756
    7. 'cursor' → logprob: -5.013619899749756
    8. '    ' → logprob: -5.388619899749756
    9. '        ' → logprob: -7.513619899749756
    10. ' ' → logprob: -7.513619899749756

Token 64: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.0009305141866207123
    2. 'cursor' → logprob: -7.000930309295654
    3. ' ' → logprob: -11.750930786132812
    4. '(cursor' → logprob: -12.500930786132812
    5. '	cursor' → logprob: -12.750930786132812
    6. ' curs' → logprob: -13.125930786132812
    7. ' ' → logprob: -13.750930786132812
    8. '_cursor' → logprob: -14.250930786132812
    9. '.cursor' → logprob: -16.000930786132812
    10. 'Cursor' → logprob: -16.500930786132812

Token 65: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.004659384489059448
    2. '<' → logprob: -5.379659175872803
    3. '<len' → logprob: -11.004659652709961
    4. '<n' → logprob: -11.754659652709961
    5. '+' → logprob: -12.254659652709961
    6. ' ' → logprob: -12.504659652709961
    7. ' +' → logprob: -12.879659652709961
    8. '<size' → logprob: -13.504659652709961
    9. '<int' → logprob: -14.254659652709961
    10. '<num' → logprob: -15.629659652709961

Token 66: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.014174087904393673
    2. 'len' → logprob: -4.264173984527588
    3. ' ' → logprob: -11.889174461364746
    4. '=len' → logprob: -13.264174461364746
    5. '(len' → logprob: -13.889174461364746
    6. '	len' → logprob: -14.889174461364746
    7. '<len' → logprob: -15.139174461364746
    8. '1' → logprob: -15.889174461364746
    9. '[len' → logprob: -16.13917350769043
    10. ' length' → logprob: -16.88917350769043

Token 67: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.005059537012130022
    2. 'text' → logprob: -5.505059719085693
    3. ' text' → logprob: -7.380059719085693
    4. '(' → logprob: -8.005059242248535
    5. ' (' → logprob: -10.880059242248535
    6. '{text' → logprob: -13.130059242248535
    7. '	text' → logprob: -14.755059242248535
    8. ')' → logprob: -15.005059242248535
    9. '=text' → logprob: -15.380059242248535
    10. '(t' → logprob: -15.380059242248535

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03315812721848488
    2. '):
' → logprob: -4.033158302307129
    3. ')' → logprob: -4.408158302307129
    4. ' ):' → logprob: -6.158158302307129
    5. '   ' → logprob: -8.783158302307129
    6. '       ' → logprob: -9.158158302307129
    7. '):
' → logprob: -9.908158302307129
    8. ':' → logprob: -9.908158302307129
    9. ' ):
' → logprob: -10.033158302307129
    10. ')-' → logprob: -10.033158302307129

Token 69: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19832195341587067
    2. ' cursor' → logprob: -2.073322057723999
    3. 'cursor' → logprob: -3.573322057723999
    4. '           ' → logprob: -3.823322057723999
    5. ' 
' → logprob: -6.82332181930542
    6. '                
' → logprob: -7.82332181930542
    7. '.cursor' → logprob: -7.82332181930542
    8. '(cursor' → logprob: -8.073322296142578
    9. '
' → logprob: -8.198322296142578
    10. '            
' → logprob: -8.448322296142578

Token 70: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.026851588860154152
    2. 'cursor' (adapté à ' cursor') → logprob: -3.6518516540527344
    3. '               ' → logprob: -8.276851654052734
    4. '                   ' → logprob: -8.901851654052734
    5. '	cursor' → logprob: -9.526851654052734
    6. ' 
' → logprob: -10.276851654052734
    7. '.cursor' → logprob: -11.026851654052734
    8. '                ' → logprob: -12.151851654052734
    9. '_cursor' → logprob: -12.151851654052734
    10. '(cursor' → logprob: -12.276851654052734

Token 71: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20186477899551392
    2. '+=' → logprob: -1.7018647193908691
    3. '+' → logprob: -7.951864719390869
    4. '=' → logprob: -9.451865196228027
    5. ' =' → logprob: -11.076865196228027
    6. ' +' → logprob: -12.451865196228027
    7. ']+=' → logprob: -15.076865196228027
    8. '+='' → logprob: -15.076865196228027
    9. '1' → logprob: -15.451865196228027
    10. ' ' → logprob: -15.826865196228027

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005928678438067436
    2. ' ' → logprob: -5.1309285163879395
    3. '   ' → logprob: -16.50592803955078
    4. '```' → logprob: -16.63092803955078
    5. ' ' → logprob: -18.69342803955078
    6. '１' → logprob: -19.19342803955078
    7. '0' → logprob: -19.19342803955078
    8. '  ' → logprob: -19.31842803955078
    9. '2' → logprob: -19.75592803955078
    10. '۱' → logprob: -20.00592803955078

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -17.625001907348633
    4. '   ' → logprob: -19.250001907348633
    5. '１' → logprob: -21.250001907348633
    6. '2' → logprob: -21.375001907348633
    7. '0' → logprob: -21.437501907348633
    8. '۱' → logprob: -21.500001907348633
    9. '
' → logprob: -21.750001907348633
    10. '`' → logprob: -21.812501907348633

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2876300811767578
    2. '\n' → logprob: -1.9126300811767578
    3. '<|end|>' → logprob: -2.537630081176758
    4. 'elif' → logprob: -4.662630081176758
    5. '       ' → logprob: -4.912630081176758
    6. ' elif' → logprob: -5.912630081176758
    7. '<|end|>' → logprob: -6.787630081176758
    8. '
' → logprob: -7.662630081176758
    9. '	elif' → logprob: -8.037630081176758
    10. '    
' → logprob: -8.162630081176758

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12421786785125732
    2. '
' → logprob: -2.499217987060547
    3. 'elif' → logprob: -3.999217987060547
    4. '\n' → logprob: -4.624217987060547
    5. ' elif' → logprob: -5.499217987060547
    6. '   ' → logprob: -7.499217987060547
    7. '<|end|>' → logprob: -7.749217987060547
    8. '        
' → logprob: -8.374217987060547
    9. '	elif' → logprob: -8.624217987060547
    10. '           ' → logprob: -8.749217987060547

Token 76: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.5420949459075928
    2. 'elif' (adapté à ' elif') → logprob: -0.9170949459075928
    3. '       ' → logprob: -4.167095184326172
    4. ' else' → logprob: -6.292095184326172
    5. '   ' → logprob: -7.292095184326172
    6. '	elif' → logprob: -7.792095184326172
    7. 'else' → logprob: -8.542095184326172
    8. '```' → logprob: -10.042095184326172
    9. '    ' → logprob: -10.417095184326172
    10. ' ' → logprob: -10.917095184326172

Token 77: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.023058060556650162
    2. '"' → logprob: -4.64805793762207
    3. ' cursor' → logprob: -5.14805793762207
    4. ' ' → logprob: -5.64805793762207
    5. 'cmd' → logprob: -5.77305793762207
    6. ' command' → logprob: -8.64805793762207
    7. ' text' → logprob: -8.89805793762207
    8. ' ' → logprob: -9.27305793762207
    9. '(cmd' → logprob: -9.77305793762207
    10. ' code' → logprob: -10.02305793762207

Token 78: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.010470294393599033
    2. '==' → logprob: -4.760470390319824
    3. ' ' → logprob: -6.760470390319824
    4. '.startswith' → logprob: -8.010470390319824
    5. ' =' → logprob: -8.385470390319824
    6. '[' → logprob: -9.260470390319824
    7. '=' → logprob: -11.510470390319824
    8. ' =="' → logprob: -12.135470390319824
    9. ' ===' → logprob: -12.385470390319824
    10. ' ' → logprob: -12.635470390319824

Token 79: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.000331055314745754
    2. ' "' → logprob: -8.375330924987793
    3. ''' → logprob: -9.250330924987793
    4. '`' → logprob: -13.625330924987793
    5. '```' → logprob: -14.625330924987793
    6. '"""' → logprob: -14.750330924987793
    7. ')' → logprob: -15.125330924987793
    8. ' ' → logprob: -15.125330924987793
    9. '>' → logprob: -15.250330924987793
    10. ' ' → logprob: -15.250330924987793

Token 80: 'back' (ID: 2205)
  Prédit: 'back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.29188740253448486
    2. '"' → logprob: -1.4168874025344849
    3. ' backward' → logprob: -5.166887283325195
    4. 'b' → logprob: -6.541887283325195
    5. ''' → logprob: -6.666887283325195
    6. ' back' → logprob: -7.291887283325195
    7. ' "' → logprob: -7.541887283325195
    8. ''b' → logprob: -8.041887283325195
    9. 'reverse' → logprob: -8.291887283325195
    10. ' ' → logprob: -9.166887283325195

Token 81: 'ward' (ID: 2076)
  Prédit: 'ward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ward' → logprob: -0.04412959888577461
    2. 'space' → logprob: -3.5441296100616455
    3. 'word' → logprob: -4.419129371643066
    4. 'w' → logprob: -6.919129371643066
    5. 'wards' → logprob: -7.669129371643066
    6. 'char' → logprob: -7.794129371643066
    7. ' ' → logprob: -8.669129371643066
    8. 'war' → logprob: -9.919129371643066
    9. 'wa' → logprob: -10.419129371643066
    10. 's' → logprob: -10.669129371643066

Token 82: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.0017702584154903889
    2. ' ' → logprob: -7.001770496368408
    3. 'char' → logprob: -7.251770496368408
    4. '<char' → logprob: -10.25177001953125
    5. '_char' → logprob: -10.62677001953125
    6. ' ' → logprob: -10.75177001953125
    7. ' space' → logprob: -11.00177001953125
    8. '_' → logprob: -11.25177001953125
    9. '.char' → logprob: -12.25177001953125
    10. ',char' → logprob: -12.25177001953125

Token 83: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -1.010975956916809
    2. '           ' → logprob: -1.260975956916809
    3. '":' → logprob: -1.385975956916809
    4. ':' → logprob: -2.6359758377075195
    5. ':
' → logprob: -3.6359758377075195
    6. '"' → logprob: -6.3859758377075195
    7. '"):
' → logprob: -7.1359758377075195
    8. '```' → logprob: -7.2609758377075195
    9. '):
' → logprob: -8.01097583770752
    10. '       ' → logprob: -8.01097583770752

Token 84: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00041065402911044657
    2. ':
' → logprob: -8.875411033630371
    3. ':' → logprob: -9.250411033630371
    4. ' if' → logprob: -9.625411033630371
    5. '               ' → logprob: -10.375411033630371
    6. '
' → logprob: -11.250411033630371
    7. '       ' → logprob: -11.625411033630371
    8. ' ' → logprob: -11.625411033630371
    9. '            
' → logprob: -11.875411033630371
    10. '```' → logprob: -11.875411033630371

Token 85: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1866874098777771
    2. '           ' → logprob: -1.8116874694824219
    3. '               ' → logprob: -5.561687469482422
    4. 'if' (adapté à ' if') → logprob: -6.186687469482422
    5. '       ' → logprob: -7.561687469482422
    6. ' ' → logprob: -8.936687469482422
    7. ' 
' → logprob: -9.311687469482422
    8. '```' → logprob: -9.561687469482422
    9. '        ' → logprob: -9.811687469482422
    10. '   ' → logprob: -10.186687469482422

Token 86: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.0003361774142831564
    2. 'cursor' → logprob: -8.000336647033691
    3. '(cursor' → logprob: -15.500336647033691
    4. '	cursor' → logprob: -15.875336647033691
    5. ' curs' → logprob: -16.125335693359375
    6. ' ' → logprob: -16.125335693359375
    7. '0' → logprob: -16.125335693359375
    8. '.cursor' → logprob: -18.125335693359375
    9. ' ' → logprob: -18.375335693359375
    10. '_cursor' → logprob: -18.500335693359375

Token 87: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03804241120815277
    2. '>' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.538042068481445
    4. ' ' → logprob: -14.913042068481445
    5. '<|end|>' → logprob: -16.038042068481445
    6. '0' → logprob: -17.038042068481445
    7. '```' → logprob: -17.788042068481445
    8. '1' → logprob: -18.288042068481445
    9. '   ' → logprob: -18.288042068481445
    10. '">' → logprob: -18.663042068481445

Token 88: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1602245420217514
    2. ' ' → logprob: -1.9102245569229126
    3. '>' → logprob: -15.660224914550781
    4. '<|end|>' → logprob: -16.66022491455078
    5. ' ' → logprob: -17.16022491455078
    6. '=' → logprob: -17.16022491455078
    7. '  ' → logprob: -17.41022491455078
    8. '```' → logprob: -17.53522491455078
    9. '   ' → logprob: -17.78522491455078
    10. '1' → logprob: -17.78522491455078

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -18.500085830688477
    4. '  ' → logprob: -19.500085830688477
    5. '```' → logprob: -19.750085830688477
    6. '=' → logprob: -19.875085830688477
    7. '>' → logprob: -20.000085830688477
    8. '۰' → logprob: -20.375085830688477
    9. '1' → logprob: -20.625085830688477
    10. '`' → logprob: -20.875085830688477

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.626970648765564
    2. ':
' → logprob: -1.126970648765564
    3. '               ' → logprob: -2.0019707679748535
    4. '           ' → logprob: -5.1269707679748535
    5. '       ' → logprob: -8.876970291137695
    6. '<|end|>' → logprob: -8.876970291137695
    7. ',' → logprob: -9.251970291137695
    8. '```' → logprob: -9.501970291137695
    9. '):
' → logprob: -9.626970291137695
    10. '                   ' → logprob: -10.001970291137695

Token 91: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11954561620950699
    2. ' cursor' → logprob: -2.6195456981658936
    3. 'cursor' → logprob: -3.2445456981658936
    4. '           ' → logprob: -7.2445454597473145
    5. '```' → logprob: -10.244545936584473
    6. '	cursor' → logprob: -10.369545936584473
    7. '                   ' → logprob: -11.119545936584473
    8. '   ' → logprob: -11.369545936584473
    9. '              ' → logprob: -11.744545936584473
    10. '(cursor' → logprob: -11.744545936584473

Token 92: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.02381591498851776
    2. 'cursor' (adapté à ' cursor') → logprob: -3.773815870285034
    3. '               ' → logprob: -7.648816108703613
    4. '                   ' → logprob: -9.398816108703613
    5. '	cursor' → logprob: -12.773816108703613
    6. '           ' → logprob: -12.898816108703613
    7. '                ' → logprob: -13.773816108703613
    8. ' ' → logprob: -13.898816108703613
    9. '```' → logprob: -14.023816108703613
    10. '   ' → logprob: -14.023816108703613

Token 93: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.08047911524772644
    2. '-=' → logprob: -2.580479145050049
    3. '-' → logprob: -6.455479145050049
    4. ' -' → logprob: -12.08047866821289
    5. '=' → logprob: -12.33047866821289
    6. '               ' → logprob: -13.45547866821289
    7. ' +=' → logprob: -13.58047866821289
    8. '+=' → logprob: -14.45547866821289
    9. '                ' → logprob: -14.58047866821289
    10. ' ' → logprob: -14.70547866821289

Token 94: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326029300689697
    2. '1' → logprob: -0.7576029300689697
    3. '```' → logprob: -13.38260269165039
    4. ' ' → logprob: -14.38260269165039
    5. '0' → logprob: -14.63260269165039
    6. '           ' → logprob: -14.94510269165039
    7. '               ' → logprob: -15.13260269165039
    8. '   ' → logprob: -15.75760269165039
    9. '    ' → logprob: -16.63260269165039
    10. '            ' → logprob: -16.69510269165039

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -17.000015258789062
    4. '   ' → logprob: -17.125015258789062
    5. '  ' → logprob: -18.812515258789062
    6. '<|end|>' → logprob: -19.875015258789062
    7. '       ' → logprob: -20.000015258789062
    8. '           ' → logprob: -20.062515258789062
    9. '１' → logprob: -20.062515258789062
    10. '۱' → logprob: -20.250015258789062

Token 96: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1817423403263092
    2. '<|end|>' → logprob: -2.1817424297332764
    3. 'elif' → logprob: -3.8067424297332764
    4. ' elif' → logprob: -4.181742191314697
    5. '
' → logprob: -5.056742191314697
    6. '   ' → logprob: -6.056742191314697
    7. '	elif' → logprob: -6.181742191314697
    8. '\n' → logprob: -6.806742191314697
    9. ' else' → logprob: -6.806742191314697
    10. '<|end|>' → logprob: -6.931742191314697

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016559191048145294
    2. 'elif' → logprob: -4.89155912399292
    3. ' elif' → logprob: -5.39155912399292
    4. '<|end|>' → logprob: -5.76655912399292
    5. ' else' → logprob: -7.89155912399292
    6. '   ' → logprob: -8.391559600830078
    7. 'else' → logprob: -8.766559600830078
    8. '	elif' → logprob: -8.891559600830078
    9. '```' → logprob: -9.266559600830078
    10. '    ' → logprob: -10.391559600830078

Token 98: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.3734833896160126
    2. 'elif' (adapté à ' elif') → logprob: -1.373483419418335
    3. ' else' → logprob: -3.248483419418335
    4. '       ' → logprob: -4.373483180999756
    5. 'else' → logprob: -5.123483180999756
    6. '   ' → logprob: -7.623483180999756
    7. '	elif' → logprob: -8.373483657836914
    8. ' 
' → logprob: -9.498483657836914
    9. '    ' → logprob: -9.748483657836914
    10. ' ' → logprob: -9.998483657836914

Token 99: ' cmd' (ID: 11704)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5336095690727234
    2. ' cmd' → logprob: -1.0336096286773682
    3. ' "' → logprob: -2.908609628677368
    4. 'cmd' → logprob: -6.033609390258789
    5. ' ' → logprob: -8.033609390258789
    6. ''' → logprob: -8.658609390258789
    7. ' ' → logprob: -9.033609390258789
    8. ' '' → logprob: -9.783609390258789
    9. ' text' → logprob: -10.408609390258789
    10. ' cursor' → logprob: -10.533609390258789

Token 100: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05005592852830887
    2. '.startswith' → logprob: -3.425055980682373
    3. '==' → logprob: -4.675055980682373
    4. ' .' → logprob: -5.675055980682373
    5. '[' → logprob: -6.425055980682373
    6. ' ' → logprob: -7.050055980682373
    7. '.' → logprob: -8.675055503845215
    8. '.split' → logprob: -8.800055503845215
    9. 'startswith' → logprob: -8.800055503845215
    10. ' "' → logprob: -8.925055503845215

Token 101: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018250027671456337
    2. ' "' → logprob: -4.018249988555908
    3. ''' → logprob: -9.518250465393066
    4. '"text' → logprob: -11.393250465393066
    5. '"user' → logprob: -11.893250465393066
    6. ' ' → logprob: -13.768250465393066
    7. '("' → logprob: -13.893250465393066
    8. '"""' → logprob: -14.018250465393066
    9. '"value' → logprob: -14.268250465393066
    10. ' '' → logprob: -14.643250465393066

Token 102: 'forward' (ID: 20233)
  Prédit: 'forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.3594241142272949
    2. 'insert' → logprob: -1.484424114227295
    3. 'back' → logprob: -3.484424114227295
    4. 'delete' → logprob: -3.609424114227295
    5. ' forward' → logprob: -6.234424114227295
    6. '"' → logprob: -6.234424114227295
    7. 'home' → logprob: -6.359424114227295
    8. 'replace' → logprob: -6.734424114227295
    9. 'print' → logprob: -6.859424114227295
    10. 'remove' → logprob: -7.109424114227295

Token 103: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.22557958960533142
    2. 'word' → logprob: -1.6005796194076538
    3. ' ' → logprob: -9.350579261779785
    4. '_word' → logprob: -10.225579261779785
    5. ' line' → logprob: -11.975579261779785
    6. 'line' → logprob: -11.975579261779785
    7. '-word' → logprob: -12.225579261779785
    8. '```' → logprob: -12.225579261779785
    9. 'w' → logprob: -12.600579261779785
    10. '	word' → logprob: -12.725579261779785

Token 104: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.14395339787006378
    2. '":' → logprob: -2.018953323364258
    3. '":
' → logprob: -7.268953323364258
    4. '():
' → logprob: -8.518953323364258
    5. '"' → logprob: -8.768953323364258
    6. '"):
' → logprob: -9.643953323364258
    7. '```' → logprob: -10.268953323364258
    8. ':
' → logprob: -10.518953323364258
    9. '":

' → logprob: -10.643953323364258
    10. '__":
' → logprob: -11.018953323364258

Token 105: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1509452611207962
    2. ':' → logprob: -2.0259451866149902
    3. ':
' → logprob: -5.15094518661499
    4. '       ' → logprob: -6.90094518661499
    5. '<|end|>' → logprob: -7.52594518661499
    6. ' and' → logprob: -8.775945663452148
    7. '<|end|>' → logprob: -9.150945663452148
    8. ' :' → logprob: -9.400945663452148
    9. '          ' → logprob: -9.525945663452148
    10. ' =' → logprob: -9.775945663452148

Token 106: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3098418712615967
    2. '       ' → logprob: -1.5598418712615967
    3. ' i' → logprob: -1.8098418712615967
    4. ' while' → logprob: -1.8098418712615967
    5. '           ' → logprob: -2.1848418712615967
    6. 'while' → logprob: -3.5598418712615967
    7. 'if' → logprob: -4.059842109680176
    8. ' pos' → logprob: -5.059842109680176
    9. ' cursor' → logprob: -5.434842109680176
    10. '```' → logprob: -5.809842109680176

Token 107: ' move' (ID: 5275)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.511063814163208
    2. 'while' → logprob: -2.011063814163208
    3. ' if' → logprob: -2.261063814163208
    4. '           ' → logprob: -3.511063814163208
    5. ' i' → logprob: -3.511063814163208
    6. 'pos' → logprob: -3.636063814163208
    7. ' pos' → logprob: -3.886063814163208
    8. 'if' → logprob: -3.886063814163208
    9. ' #' → logprob: -5.261063575744629
    10. ' pass' → logprob: -5.261063575744629

Token 108: ' cursor' (ID: 14944)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8482609391212463
    2. 'while' → logprob: -0.8482609391212463
    3. 'cursor' → logprob: -2.3482608795166016
    4. ' cursor' → logprob: -3.3482608795166016
    5. ' to' → logprob: -5.973260879516602
    6. 'to' → logprob: -6.098260879516602
    7. 'import' → logprob: -6.473260879516602
    8. '           ' → logprob: -6.848260879516602
    9. 'if' → logprob: -6.973260879516602
    10. ' if' → logprob: -7.223260879516602

Token 109: ' to' (ID: 316)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2161015272140503
    2. '+=' → logprob: -1.8411015272140503
    3. 'while' → logprob: -4.34110164642334
    4. '           ' → logprob: -4.96610164642334
    5. ' =' → logprob: -5.09110164642334
    6. ' while' → logprob: -5.34110164642334
    7. '               ' → logprob: -5.96610164642334
    8. '=' → logprob: -7.34110164642334
    9. 'to' → logprob: -7.59110164642334
    10. 'import' → logprob: -7.96610164642334

Token 110: ' end' (ID: 1268)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2637713849544525
    2. ' next' → logprob: -2.0137712955474854
    3. 'the' → logprob: -3.2637712955474854
    4. 'len' → logprob: -3.7637712955474854
    5. ' len' → logprob: -3.8887712955474854
    6. 'next' → logprob: -4.3887715339660645
    7. ' a' → logprob: -5.7637715339660645
    8. 'a' → logprob: -9.013771057128906
    9. ' while' → logprob: -9.013771057128906
    10. ' at' → logprob: -9.263771057128906

Token 111: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.110272616147995
    2. '<|end|>' → logprob: -3.1102726459503174
    3. 'of' → logprob: -3.4852726459503174
    4. '           ' → logprob: -4.235272407531738
    5. '       ' → logprob: -5.235272407531738
    6. ' while' → logprob: -6.360272407531738
    7. 'while' → logprob: -6.610272407531738
    8. ' ' → logprob: -6.735272407531738
    9. ' or' → logprob: -6.985272407531738
    10. '<|end|>' → logprob: -7.360272407531738

Token 112: ' left' (ID: 3561)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0444130897521973
    2. 'text' → logprob: -1.5444130897521973
    3. ' current' → logprob: -2.1694130897521973
    4. 'the' → logprob: -2.2944130897521973
    5. 'word' → logprob: -2.7944130897521973
    6. ' text' → logprob: -2.7944130897521973
    7. ' word' → logprob: -3.2944130897521973
    8. 'current' → logprob: -3.2944130897521973
    9. ' next' → logprob: -4.669413089752197
    10. 'line' → logprob: -5.669413089752197

Token 113: 'most' (ID: 5309)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -1.330027461051941
    2. ' text' → logprob: -1.705027461051941
    3. 'word' → logprob: -2.2050275802612305
    4. ' ' → logprob: -2.8300275802612305
    5. ')' → logprob: -3.2050275802612305
    6. ' of' → logprob: -3.3300275802612305
    7. ' or' → logprob: -3.4550275802612305
    8. 'most' → logprob: -3.7050275802612305
    9. 'over' → logprob: -3.8300275802612305
    10. ',' → logprob: -4.2050275802612305

Token 114: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.5841019749641418
    2. 'word' → logprob: -1.334101915359497
    3. ' text' → logprob: -2.459101915359497
    4. ' ' → logprob: -3.459101915359497
    5. 'text' → logprob: -3.459101915359497
    6. '"' → logprob: -5.584102153778076
    7. ' "' → logprob: -5.959102153778076
    8. ' of' → logprob: -6.209102153778076
    9. '<|end|>' → logprob: -6.334102153778076
    10. ' '' → logprob: -6.459102153778076

Token 115: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9367635846138
    2. ' if' → logprob: -1.4367635250091553
    3. ')' → logprob: -2.9367635250091553
    4. '<|end|>' → logprob: -3.0617635250091553
    5. ' or' → logprob: -3.1867635250091553
    6. '+' → logprob: -3.1867635250091553
    7. ' +' → logprob: -3.6867635250091553
    8. '               ' → logprob: -3.8117635250091553
    9. '       ' → logprob: -3.9367635250091553
    10. 's' → logprob: -4.311763763427734

Token 116: ' the' (ID: 290)
  Prédit: ' text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.03822888433933258
    2. 'text' → logprob: -3.288228988647461
    3. ' the' → logprob: -8.913228988647461
    4. ' range' → logprob: -10.538228988647461
    5. 'the' → logprob: -12.163228988647461
    6. ' ' → logprob: -12.788228988647461
    7. '	text' → logprob: -12.913228988647461
    8. '   ' → logprob: -13.038228988647461
    9. '"text' → logprob: -13.288228988647461
    10. 'range' → logprob: -13.413228988647461

Token 117: ' right' (ID: 1849)
  Prédit: ' text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.3136582374572754
    2. ' remaining' → logprob: -2.0636582374572754
    3. 'text' → logprob: -2.1886582374572754
    4. ' remainder' → logprob: -4.688658237457275
    5. 'remaining' → logprob: -4.938658237457275
    6. ' right' → logprob: -5.063658237457275
    7. 'right' → logprob: -5.313658237457275
    8. ' rest' → logprob: -7.188658237457275
    9. ' ' → logprob: -8.063657760620117
    10. 'rest' → logprob: -8.438657760620117

Token 118: '
' (ID: 198)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.15669980645179749
    2. ' text' → logprob: -2.1566998958587646
    3. ' part' → logprob: -4.9066996574401855
    4. ' of' → logprob: -5.9066996574401855
    5. '   ' → logprob: -6.1566996574401855
    6. ')' → logprob: -6.2816996574401855
    7. ' ' → logprob: -6.2816996574401855
    8. 'side' → logprob: -6.5316996574401855
    9. ' side' → logprob: -6.6566996574401855
    10. 'of' → logprob: -6.7816996574401855

Token 119: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5293424129486084
    2. '<|end|>' → logprob: -1.5293424129486084
    3. '       ' → logprob: -1.9043424129486084
    4. '               ' → logprob: -4.2793426513671875
    5. '<|end|>' → logprob: -4.6543426513671875
    6. '        ' → logprob: -5.7793426513671875
    7. ' if' → logprob: -5.9043426513671875
    8. ' while' → logprob: -6.0293426513671875
    9. '        
' → logprob: -6.2793426513671875
    10. '
' → logprob: -6.9043426513671875

Token 120: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08508431166410446
    2. ' while' → logprob: -3.9600841999053955
    3. 'while' → logprob: -4.335084438323975
    4. '       ' → logprob: -4.460084438323975
    5. ' i' → logprob: -4.710084438323975
    6. 'pos' → logprob: -4.835084438323975
    7. ' if' → logprob: -5.210084438323975
    8. 'i' → logprob: -6.210084438323975
    9. ' pos' → logprob: -6.335084438323975
    10. '               ' → logprob: -6.460084438323975

Token 121: ' words' (ID: 6391)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.2532539367675781
    2. ' i' → logprob: -1.8782539367675781
    3. 'while' → logprob: -2.253253936767578
    4. 'i' → logprob: -2.378253936767578
    5. ' while' → logprob: -2.378253936767578
    6. ' if' → logprob: -3.003253936767578
    7. ' pos' → logprob: -3.128253936767578
    8. '           ' → logprob: -3.128253936767578
    9. 'if' → logprob: -3.503253936767578
    10. ' pass' → logprob: -3.753253936767578

Token 122: ' del' (ID: 1083)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6925166845321655
    2. ' ' → logprob: -1.9425166845321655
    3. '       ' → logprob: -1.9425166845321655
    4. ')' → logprob: -2.692516803741455
    5. '   ' → logprob: -2.692516803741455
    6. '<|end|>' → logprob: -2.942516803741455
    7. ' if' → logprob: -3.067516803741455
    8. 'import' → logprob: -3.317516803741455
    9. '           ' → logprob: -3.317516803741455
    10. '[' → logprob: -3.317516803741455

Token 123: 'imited' (ID: 74176)
  Prédit: 'imiter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imiter' → logprob: -0.6692551970481873
    2. 'imit' → logprob: -1.919255256652832
    3. 'imited' → logprob: -2.169255256652832
    4. ' =' → logprob: -2.919255256652832
    5. 'ete' → logprob: -2.919255256652832
    6. 'et' → logprob: -3.419255256652832
    7. 'im' → logprob: -3.544255256652832
    8. 'eter' → logprob: -4.169255256652832
    9. 'eted' → logprob: -4.169255256652832
    10. 'IMITER' → logprob: -5.794255256652832

Token 124: ' also' (ID: 1217)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.3143952190876007
    2. 'by' → logprob: -1.3143951892852783
    3. ' ' → logprob: -7.189395427703857
    4. ' =' → logprob: -8.8143949508667
    5. '=' → logprob: -9.5643949508667
    6. 'b' → logprob: -10.5643949508667
    7. ',' → logprob: -10.6893949508667
    8. '  ' → logprob: -11.3143949508667
    9. ' in' → logprob: -11.4393949508667
    10. 'import' → logprob: -11.9393949508667

Token 125: ' by' (ID: 656)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42294633388519287
    2. ' by' → logprob: -1.2979463338851929
    3. ' in' → logprob: -4.047946453094482
    4. ' if' → logprob: -4.422946453094482
    5. '<|end|>' → logprob: -5.172946453094482
    6. 'import' → logprob: -5.297946453094482
    7. ' or' → logprob: -5.422946453094482
    8. ' of' → logprob: -5.672946453094482
    9. 'by' → logprob: -5.672946453094482
    10. ' with' → logprob: -6.297946453094482

Token 126: ' cursor' (ID: 14944)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.9911596775054932
    2. ''' → logprob: -1.4911596775054932
    3. ' ' → logprob: -1.7411596775054932
    4. '"' → logprob: -1.7411596775054932
    5. ' "' → logprob: -2.991159677505493
    6. '  ' → logprob: -7.741159439086914
    7. ''s' → logprob: -7.741159439086914
    8. ' ['' → logprob: -7.866159439086914
    9. ' ,' → logprob: -8.616159439086914
    10. ' {'' → logprob: -8.616159439086914

Token 127: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0055111646652222
    2. '<|end|>' → logprob: -1.0055111646652222
    3. '           ' → logprob: -2.2555112838745117
    4. ' ' → logprob: -3.6305112838745117
    5. '<|end|>' → logprob: -3.6305112838745117
    6. '               ' → logprob: -3.7555112838745117
    7. ' if' → logprob: -4.255511283874512
    8. ' 
' → logprob: -4.380511283874512
    9. ')' → logprob: -4.505511283874512
    10. '   ' → logprob: -4.755511283874512

Token 128: ' blanks' (ID: 160898)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.266225129365921
    2. '"' → logprob: -1.6412250995635986
    3. ' '' → logprob: -4.391225337982178
    4. ' ' → logprob: -4.516225337982178
    5. ' text' → logprob: -5.141225337982178
    6. ''s' → logprob: -5.766225337982178
    7. ' spaces' → logprob: -6.016225337982178
    8. ' space' → logprob: -6.641225337982178
    9. ' "' → logprob: -7.016225337982178
    10. 'text' → logprob: -7.141225337982178

Token 129: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8906140327453613
    2. '<|end|>' → logprob: -1.2656140327453613
    3. '           ' → logprob: -1.6406140327453613
    4. '<|end|>' → logprob: -3.5156140327453613
    5. '        ' → logprob: -3.8906140327453613
    6. '        
' → logprob: -4.390614032745361
    7. ' 
' → logprob: -4.890614032745361
    8. '               ' → logprob: -4.890614032745361
    9. ' while' → logprob: -5.515614032745361
    10. ' ' → logprob: -5.640614032745361

Token 130: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9212432503700256
    2. '       ' → logprob: -1.4212431907653809
    3. '           ' → logprob: -1.5462431907653809
    4. '<|end|>' → logprob: -2.421243190765381
    5. '<|end|>' → logprob: -4.546243190765381
    6. '               ' → logprob: -4.671243190765381
    7. ' 
' → logprob: -4.796243190765381
    8. '        
' → logprob: -5.296243190765381
    9. ' while' → logprob: -5.796243190765381
    10. '  
' → logprob: -5.921243190765381

Token 131: ' right' (ID: 1849)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2266995906829834
    2. ' while' → logprob: -1.4766995906829834
    3. 'while' → logprob: -1.7266995906829834
    4. 'pos' → logprob: -2.7266995906829834
    5. ' i' → logprob: -2.9766995906829834
    6. '       ' → logprob: -2.9766995906829834
    7. ' if' → logprob: -3.6016995906829834
    8. ' pass' → logprob: -3.9766995906829834
    9. ' pos' → logprob: -4.4766998291015625
    10. '               ' → logprob: -4.7266998291015625

Token 132: ' =' (ID: 314)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.9775296449661255
    2. ' =' → logprob: -1.3525296449661255
    3. '_text' → logprob: -1.9775296449661255
    4. '_idx' → logprob: -2.227529525756836
    5. '_' → logprob: -3.102529525756836
    6. '_index' → logprob: -3.602529525756836
    7. '_part' → logprob: -3.852529525756836
    8. '=' → logprob: -4.602529525756836
    9. '_len' → logprob: -5.477529525756836
    10. 'pos' → logprob: -6.227529525756836

Token 133: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.12693136930465698
    2. ' text' → logprob: -2.1269314289093018
    3. '"text' → logprob: -13.126931190490723
    4. ' ' → logprob: -15.251931190490723
    5. '{text' → logprob: -15.376931190490723
    6. '	text' → logprob: -15.751931190490723
    7. '   ' → logprob: -15.876931190490723
    8. '=text' → logprob: -16.25193214416504
    9. '(text' → logprob: -16.25193214416504
    10. 'txt' → logprob: -16.87693214416504

Token 134: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.250001907348633
    3. '[cur' → logprob: -16.000001907348633
    4. ' [' → logprob: -16.500001907348633
    5. '[cell' → logprob: -16.625001907348633
    6. '[
' → logprob: -17.250001907348633
    7. '[curr' → logprob: -18.250001907348633
    8. '[counter' → logprob: -18.625001907348633
    9. '(cursor' → logprob: -18.750001907348633
    10. 'cursor' → logprob: -18.750001907348633

Token 135: 'ursor' (ID: 6519)
  Prédit: 'ursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursor' → logprob: -5.598092684522271e-05
    2. 'URSOR' → logprob: -10.125056266784668
    3. 'cursor' → logprob: -11.625056266784668
    4. 'urs' → logprob: -13.125056266784668
    5. 'ursors' → logprob: -13.625056266784668
    6. ' ' → logprob: -13.875056266784668
    7. 'ur' → logprob: -14.000056266784668
    8. '   ' → logprob: -14.625056266784668
    9. 'urso' → logprob: -14.875056266784668
    10. '[' → logprob: -15.250056266784668

Token 136: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.2522505819797516
    2. ':].' → logprob: -1.5022505521774292
    3. ':' → logprob: -8.877250671386719
    4. ' :]' → logprob: -9.002250671386719
    5. ':]
' → logprob: -10.002250671386719
    6. ']' → logprob: -12.252250671386719
    7. ':]

' → logprob: -12.627250671386719
    8. '].' → logprob: -13.877250671386719
    9. ':],' → logprob: -13.877250671386719
    10. '+' → logprob: -14.127250671386719

Token 137: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.602853536605835
    2. 'pos' → logprob: -1.102853536605835
    3. 'i' → logprob: -2.852853536605835
    4. 'idx' → logprob: -3.352853536605835
    5. 'import' → logprob: -4.602853775024414
    6. 'index' → logprob: -5.227853775024414
    7. ' i' → logprob: -6.102853775024414
    8. '+' → logprob: -6.352853775024414
    9. '            
' → logprob: -6.852853775024414
    10. 'while' → logprob: -6.977853775024414

Token 138: ' if' (ID: 538)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6708751916885376
    2. 'pos' → logprob: -1.1708751916885376
    3. 'i' → logprob: -2.545875072479248
    4. 'idx' → logprob: -3.170875072479248
    5. 'if' (adapté à ' if') → logprob: -3.795875072479248
    6. ' import' → logprob: -4.045875072479248
    7. 'index' → logprob: -5.170875072479248
    8. 'next' → logprob: -5.545875072479248
    9. 'words' → logprob: -6.045875072479248
    10. ' i' → logprob: -6.795875072479248

Token 139: ' not' (ID: 625)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.2843829393386841
    2. 'right' → logprob: -1.659382939338684
    3. ' not' → logprob: -3.0343828201293945
    4. 'len' → logprob: -5.6593828201293945
    5. ' len' → logprob: -5.9093828201293945
    6. ' cursor' → logprob: -6.7843828201293945
    7. 'not' → logprob: -6.7843828201293945
    8. 'cursor' → logprob: -7.9093828201293945
    9. ' any' → logprob: -9.284382820129395
    10. ''' → logprob: -9.284382820129395

Token 140: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.12697356939315796
    2. 'right' → logprob: -2.1269736289978027
    3. ' any' → logprob: -10.126973152160645
    4. ' ' → logprob: -13.251973152160645
    5. 'any' → logprob: -13.376973152160645
    6. ''' → logprob: -13.876973152160645
    7. ' cursor' → logprob: -15.376973152160645
    8. '	right' → logprob: -15.376973152160645
    9. '[right' → logprob: -16.00197410583496
    10. ' all' → logprob: -16.12697410583496

Token 141: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.42527303099632263
    2. ' or' → logprob: -1.175273060798645
    3. '.' → logprob: -3.3002729415893555
    4. '.startswith' → logprob: -8.425272941589355
    5. ' .' → logprob: -9.175272941589355
    6. '[' → logprob: -9.425272941589355
    7. '   ' → logprob: -9.425272941589355
    8. 'or' → logprob: -9.675272941589355
    9. 'strip' → logprob: -9.800272941589355
    10. ':' → logprob: -9.925272941589355

Token 142: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23378539085388184
    2. ' continue' → logprob: -1.6087853908538818
    3. '           ' → logprob: -5.858785629272461
    4. ' continues' → logprob: -5.983785629272461
    5. 'continue' → logprob: -6.358785629272461
    6. ':
' → logprob: -7.608785629272461
    7. ':' → logprob: -8.733785629272461
    8. '\n' → logprob: -9.108785629272461
    9. '   ' → logprob: -9.233785629272461
    10. ' continued' → logprob: -9.733785629272461

Token 143: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4518856108188629
    2. 'continue' (adapté à ' continue') → logprob: -1.0768855810165405
    3. '                   ' → logprob: -3.82688570022583
    4. '               ' → logprob: -7.07688570022583
    5. '   ' → logprob: -8.951885223388672
    6. '           ' → logprob: -9.201885223388672
    7. '```' → logprob: -11.326885223388672
    8. ' pass' → logprob: -11.451885223388672
    9. '	continue' → logprob: -11.451885223388672
    10. '                       ' → logprob: -11.701885223388672

Token 144: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6549460291862488
    2. '
' → logprob: -1.5299460887908936
    3. ' 
' → logprob: -2.4049460887908936
    4. '            
' → logprob: -2.6549460887908936
    5. '       ' → logprob: -3.4049460887908936
    6. 'word' → logprob: -5.1549458503723145
    7. ' word' → logprob: -5.1549458503723145
    8. '        
' → logprob: -5.2799458503723145
    9. '  
' → logprob: -5.2799458503723145
    10. 'n' → logprob: -5.4049458503723145

Token 145: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07039763033390045
    2. '            
' → logprob: -3.3203976154327393
    3. '       ' → logprob: -4.820397853851318
    4. 'word' → logprob: -6.070397853851318
    5. 'pos' → logprob: -6.195397853851318
    6. 'tokens' → logprob: -6.195397853851318
    7. ' for' → logprob: -6.445397853851318
    8. ' next' → logprob: -6.570397853851318
    9. 'next' → logprob: -6.695397853851318
    10. ' 
' → logprob: -6.695397853851318

Token 146: ' i' (ID: 575)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8518526554107666
    2. 'i' (adapté à ' i') → logprob: -1.4768526554107666
    3. 'idx' → logprob: -1.6018526554107666
    4. 'import' → logprob: -2.2268526554107666
    5. 'index' → logprob: -4.7268524169921875
    6. ' i' → logprob: -5.2268524169921875
    7. ' import' → logprob: -5.3518524169921875
    8. 'next' → logprob: -6.1018524169921875
    9. ' idx' → logprob: -6.1018524169921875
    10. ' pos' → logprob: -6.4768524169921875

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5295462608337402
    2. '=' → logprob: -0.9045462608337402
    3. 'f' → logprob: -5.15454626083374
    4. 'nd' → logprob: -7.65454626083374
    5. 'n' → logprob: -9.029546737670898
    6. 'nt' → logprob: -11.529546737670898
    7. 'x' → logprob: -11.529546737670898
    8. 'dx' → logprob: -13.029546737670898
    9. '+=' → logprob: -13.279546737670898
    10. ',' → logprob: -13.404546737670898

Token 148: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014671222306787968
    2. '1' → logprob: -5.014671325683594
    3. 'cursor' → logprob: -5.264671325683594
    4. ' ' → logprob: -6.014671325683594
    5. ' cursor' → logprob: -8.139671325683594
    6. 'len' → logprob: -12.139671325683594
    7. 'next' → logprob: -13.014671325683594
    8. '(cursor' → logprob: -13.077171325683594
    9. '-' → logprob: -13.264671325683594
    10. '```' → logprob: -13.889671325683594

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04146329313516617
    2. '1' → logprob: -3.4164633750915527
    3. 'cursor' → logprob: -4.916463375091553
    4. ' ' → logprob: -7.916463375091553
    5. ' cursor' → logprob: -9.666462898254395
    6. 'len' → logprob: -11.166462898254395
    7. 'next' → logprob: -12.041462898254395
    8. '```' → logprob: -12.853962898254395
    9. '-' → logprob: -12.978962898254395
    10. '(cursor' → logprob: -13.666462898254395

Token 150: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.46719762682914734
    2. 'while' → logprob: -1.0921976566314697
    3. '<|end|>' → logprob: -3.8421976566314697
    4. '	while' → logprob: -4.467197418212891
    5. '+' → logprob: -6.467197418212891
    6. '
' → logprob: -6.592197418212891
    7. '           ' → logprob: -7.842197418212891
    8. '<|end|>' → logprob: -7.967197418212891
    9. '   ' → logprob: -8.09219741821289
    10. '       ' → logprob: -8.09219741821289

Token 151: '           ' (ID: 352)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.12868204712867737
    2. 'while' → logprob: -3.1286821365356445
    3. '<|end|>' → logprob: -3.3786821365356445
    4. '	while' → logprob: -3.8786821365356445
    5. '       ' → logprob: -4.2536821365356445
    6. '           ' → logprob: -5.3786821365356445
    7. '<|end|>' → logprob: -6.8786821365356445
    8. '   ' → logprob: -7.6286821365356445
    9. '
' → logprob: -7.7536821365356445
    10. ' 
' → logprob: -8.503682136535645

Token 152: ' n' (ID: 297)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0070052058435976505
    2. ' while' → logprob: -5.382005214691162
    3. 'if' → logprob: -6.507005214691162
    4. '#' → logprob: -7.382005214691162
    5. 'n' (adapté à ' n') → logprob: -8.632004737854004
    6. 'length' → logprob: -10.257004737854004
    7. 'l' → logprob: -11.257004737854004
    8. ' #' → logprob: -11.632004737854004
    9. 'len' → logprob: -11.632004737854004
    10. '           ' → logprob: -11.632004737854004

Token 153: '_right' (ID: 24402)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2923694849014282
    2. ' =' → logprob: -1.4173694849014282
    3. '=len' → logprob: -4.917369365692139
    4. 'while' → logprob: -5.917369365692139
    5. ' while' → logprob: -8.167369842529297
    6. ' ' → logprob: -8.917369842529297
    7. '<len' → logprob: -8.917369842529297
    8. ',' → logprob: -9.542369842529297
    9. 'ext' → logprob: -9.542369842529297
    10. '+=' → logprob: -9.792369842529297

Token 154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38759055733680725
    2. ' =' → logprob: -1.1375905275344849
    3. '=len' → logprob: -7.762590408325195
    4. '<|end|>' → logprob: -8.887590408325195
    5. ' ' → logprob: -9.762590408325195
    6. '-' → logprob: -10.762590408325195
    7. ',' → logprob: -11.137590408325195
    8. ')' → logprob: -11.637590408325195
    9. 's' → logprob: -11.637590408325195
    10. '=size' → logprob: -12.387590408325195

Token 155: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25193077325820923
    2. ' len' → logprob: -1.5019307136535645
    3. '(len' → logprob: -13.876931190490723
    4. '=len' → logprob: -14.626931190490723
    5. '[len' → logprob: -16.501930236816406
    6. '	len' → logprob: -16.626930236816406
    7. ',len' → logprob: -17.376930236816406
    8. '<len' → logprob: -18.001930236816406
    9. ' ' → logprob: -20.501930236816406
    10. '0' → logprob: -21.251930236816406

Token 156: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -9.138441237155348e-05
    2. 'right' → logprob: -9.625091552734375
    3. '(' → logprob: -10.625091552734375
    4. ' right' → logprob: -15.125091552734375
    5. '[right' → logprob: -15.250091552734375
    6. '(left' → logprob: -15.625091552734375
    7. '	right' → logprob: -16.625091552734375
    8. ' (' → logprob: -16.750091552734375
    9. ',right' → logprob: -16.875091552734375
    10. '(
' → logprob: -17.125091552734375

Token 157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04015291482210159
    2. ')
' → logprob: -3.2901530265808105
    3. ' )' → logprob: -6.2901530265808105
    4. ' )
' → logprob: -8.790152549743652
    5. '):
' → logprob: -10.915152549743652
    6. '   ' → logprob: -11.415152549743652
    7. ')
' → logprob: -11.540152549743652
    8. '
' → logprob: -12.165152549743652
    9. '           ' → logprob: -12.165152549743652
    10. ')i' → logprob: -12.165152549743652

Token 158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.927471399307251
    2. '
' → logprob: -1.302471399307251
    3. ' while' → logprob: -1.677471399307251
    4. 'while' → logprob: -2.302471399307251
    5. ' 
' → logprob: -4.427471160888672
    6. '            
' → logprob: -4.552471160888672
    7. '<|end|>' → logprob: -4.552471160888672
    8. '       ' → logprob: -5.177471160888672
    9. '        
' → logprob: -6.302471160888672
    10. '  
' → logprob: -6.427471160888672

Token 159: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06809819489717484
    2. ' while' → logprob: -2.818098306655884
    3. '#' (adapté à ' #') → logprob: -5.318098068237305
    4. '           ' → logprob: -7.068098068237305
    5. ' #' → logprob: -8.693098068237305
    6. '
' → logprob: -9.943098068237305
    7. '            
' → logprob: -10.193098068237305
    8. '       ' → logprob: -10.693098068237305
    9. ' 
' → logprob: -10.693098068237305
    10. 'if' → logprob: -11.068098068237305

Token 160: ' skip' (ID: 16677)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.028271852061152458
    2. '#' → logprob: -3.7782719135284424
    3. ' while' → logprob: -5.403271675109863
    4. '           ' → logprob: -8.528271675109863
    5. ' #' → logprob: -8.528271675109863
    6. '
' → logprob: -10.153271675109863
    7. 'While' → logprob: -10.153271675109863
    8. 'if' → logprob: -11.153271675109863
    9. '```' → logprob: -12.278271675109863
    10. '            
' → logprob: -12.403271675109863

Token 161: ' blanks' (ID: 160898)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.26648086309432983
    2. ' spaces' → logprob: -2.2664809226989746
    3. 'while' → logprob: -2.2664809226989746
    4. ' blanks' → logprob: -4.391480922698975
    5. 'spaces' → logprob: -5.266480922698975
    6. ' whitespace' → logprob: -5.766480922698975
    7. ' if' → logprob: -5.891480922698975
    8. ' leading' → logprob: -7.391480922698975
    9. ' whites' → logprob: -7.516480922698975
    10. ' until' → logprob: -7.891480922698975

Token 162: ' first' (ID: 1577)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.335218220949173
    2. ' while' → logprob: -1.3352181911468506
    3. '           ' → logprob: -3.8352181911468506
    4. '	while' → logprob: -9.83521842956543
    5. '            
' → logprob: -10.83521842956543
    6. '       ' → logprob: -10.96021842956543
    7. '<|end|>' → logprob: -11.71021842956543
    8. 'While' → logprob: -11.83521842956543
    9. '               ' → logprob: -12.58521842956543
    10. ' 
' → logprob: -12.83521842956543

Token 163: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5276714563369751
    2. ' while' → logprob: -1.402671456336975
    3. 'while' → logprob: -2.1526713371276855
    4. '            
' → logprob: -3.5276713371276855
    5. ' 
' → logprob: -4.6526713371276855
    6. '<|end|>' → logprob: -5.4026713371276855
    7. '
' → logprob: -7.2776713371276855
    8. '  
' → logprob: -7.4026713371276855
    9. '               ' → logprob: -7.4026713371276855
    10. '            ' → logprob: -7.7776713371276855

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13675259053707123
    2. ' while' → logprob: -2.6367526054382324
    3. 'while' → logprob: -2.8867526054382324
    4. '            
' → logprob: -8.136752128601074
    5. '       ' → logprob: -9.511752128601074
    6. '	while' → logprob: -11.011752128601074
    7. '
' → logprob: -11.011752128601074
    8. '<|end|>' → logprob: -11.261752128601074
    9. ' 
' → logprob: -11.386752128601074
    10. '   ' → logprob: -11.511752128601074

Token 165: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.352509081363678
    2. '           ' → logprob: -1.6025090217590332
    3. 'while' (adapté à ' while') → logprob: -2.352509021759033
    4. '            
' → logprob: -8.727509498596191
    5. '	while' → logprob: -8.727509498596191
    6. '       ' → logprob: -9.352509498596191
    7. ' 
' → logprob: -9.727509498596191
    8. '               ' → logprob: -10.602509498596191
    9. '            ' → logprob: -11.227509498596191
    10. '	       ' → logprob: -11.602509498596191

Token 166: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4288676679134369
    2. 'i' → logprob: -1.0538676977157593
    3. ' right' → logprob: -9.67886734008789
    4. '(i' → logprob: -10.42886734008789
    5. 'right' → logprob: -10.42886734008789
    6. ' ' → logprob: -10.67886734008789
    7. '	i' → logprob: -11.67886734008789
    8. '   ' → logprob: -12.42886734008789
    9. ' (' → logprob: -13.05386734008789
    10. '(' → logprob: -13.67886734008789

Token 167: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04331590235233307
    2. '<' → logprob: -3.293315887451172
    3. ' ' → logprob: -5.418315887451172
    4. '<len' → logprob: -7.668315887451172
    5. '<|end|>' → logprob: -9.168315887451172
    6. '[' → logprob: -10.043315887451172
    7. '<n' → logprob: -10.043315887451172
    8. '  ' → logprob: -10.168315887451172
    9. ' <=' → logprob: -10.543315887451172
    10. 'i' → logprob: -10.668315887451172

Token 168: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931907534599304
    2. ' n' → logprob: -0.6931907534599304
    3. 'len' → logprob: -10.443190574645996
    4. ' len' → logprob: -12.193190574645996
    5. ' ' → logprob: -12.568190574645996
    6. '	n' → logprob: -12.693190574645996
    7. ')n' → logprob: -14.443190574645996
    8. '(n' → logprob: -14.568190574645996
    9. '   ' → logprob: -15.193190574645996
    10. '
' → logprob: -15.443190574645996

Token 169: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00011534435179783031
    2. 'right' → logprob: -9.375115394592285
    3. '[right' → logprob: -11.125115394592285
    4. '(right' → logprob: -12.875115394592285
    5. ' _' → logprob: -13.375115394592285
    6. ' right' → logprob: -13.375115394592285
    7. ')' → logprob: -13.500115394592285
    8. '	right' → logprob: -13.500115394592285
    9. '_' → logprob: -13.625115394592285
    10. '   ' → logprob: -14.125115394592285

Token 170: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12692904472351074
    2. 'and' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.62692928314209
    4. '	and' → logprob: -15.62692928314209
    5. '   ' → logprob: -15.75192928314209
    6. ' и' → logprob: -16.501928329467773
    7. ' ' → logprob: -17.376928329467773
    8. '           ' → logprob: -17.501928329467773
    9. '    ' → logprob: -17.751928329467773
    10. 'a' → logprob: -17.751928329467773

Token 171: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.14268247783184052
    2. 'right' → logprob: -2.0176825523376465
    3. '(right' → logprob: -12.642682075500488
    4. '	right' → logprob: -12.892682075500488
    5. ' rights' → logprob: -15.142682075500488
    6. ' ' → logprob: -15.267682075500488
    7. '[right' → logprob: -15.267682075500488
    8. ' not' → logprob: -15.392682075500488
    9. 'rightness' → logprob: -15.517682075500488
    10. 'rights' → logprob: -16.267683029174805

Token 172: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0802738870552275e-05
    2. '[' → logprob: -12.12501049041748
    3. ' [' → logprob: -12.62501049041748
    4. '[
' → logprob: -14.12501049041748
    5. 'i' → logprob: -14.62501049041748
    6. '```' → logprob: -15.25001049041748
    7. '[I' → logprob: -15.37501049041748
    8. ' ' → logprob: -16.375011444091797
    9. ' i' → logprob: -16.875011444091797
    10. ' and' → logprob: -16.875011444091797

Token 173: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020080240443348885
    2. ' =='' → logprob: -4.395080089569092
    3. '==' → logprob: -5.395080089569092
    4. '=='' → logprob: -6.145080089569092
    5. ' ' → logprob: -7.395080089569092
    6. ' '' → logprob: -9.27008056640625
    7. ''' → logprob: -9.77008056640625
    8. ' =="' → logprob: -10.39508056640625
    9. '=="' → logprob: -11.27008056640625
    10. ']=='' → logprob: -11.64508056640625

Token 174: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11579813063144684
    2. ' =='' → logprob: -2.865798234939575
    3. '==' → logprob: -3.990798234939575
    4. '=='' → logprob: -3.990798234939575
    5. ' ' → logprob: -4.365797996520996
    6. ''' → logprob: -6.615797996520996
    7. ' '' → logprob: -6.865797996520996
    8. '=="' → logprob: -9.115797996520996
    9. ' =="' → logprob: -9.490797996520996
    10. 'iss' → logprob: -10.115797996520996

Token 175: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0030355898197740316
    2. ' '' → logprob: -6.378035545349121
    3. '"' → logprob: -6.628035545349121
    4. ' ' → logprob: -12.003035545349121
    5. ' "' → logprob: -12.878035545349121
    6. '`' → logprob: -15.628035545349121
    7. '32' → logprob: -15.628035545349121
    8. ''s' → logprob: -16.003036499023438
    9. ''a' → logprob: -16.253036499023438
    10. '  ' → logprob: -16.503036499023438

Token 176: ' '' (ID: 461)
  Prédit: ' ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ':' → logprob: -0.22609110176563263
    2. ' '' → logprob: -1.6010911464691162
    3. '':' → logprob: -8.226091384887695
    4. ''' → logprob: -8.476091384887695
    5. ' '>' → logprob: -8.601091384887695
    6. ' ':'' → logprob: -12.226091384887695
    7. ' ')' → logprob: -12.476091384887695
    8. ' ',' → logprob: -13.226091384887695
    9. ' ']' → logprob: -13.601091384887695
    10. ' ":' → logprob: -13.726091384887695

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43221262097358704
    2. ':
' → logprob: -1.0572125911712646
    3. ' and' → logprob: -6.182212829589844
    4. '):
' → logprob: -7.807212829589844
    5. '<|end|>' → logprob: -8.932212829589844
    6. '               ' → logprob: -9.057212829589844
    7. '):' → logprob: -9.057212829589844
    8. '           ' → logprob: -9.182212829589844
    9. '   ' → logprob: -9.182212829589844
    10. ' :
' → logprob: -9.557212829589844

Token 178: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07223572582006454
    2. ' i' → logprob: -3.4472358226776123
    3. 'i' → logprob: -3.6972358226776123
    4. '           ' → logprob: -4.822235584259033
    5. '   ' → logprob: -5.572235584259033
    6. '                   ' → logprob: -7.822235584259033
    7. '       ' → logprob: -8.072236061096191
    8. ' ' → logprob: -9.072236061096191
    9. '                
' → logprob: -9.322236061096191
    10. ' 
' → logprob: -9.572236061096191

Token 179: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0024781543761491776
    2. ' i' → logprob: -6.002478122711182
    3. '               ' → logprob: -13.50247859954834
    4. '                   ' → logprob: -14.00247859954834
    5. '   ' → logprob: -15.87747859954834
    6. '	i' → logprob: -16.752477645874023
    7. '           ' → logprob: -16.877477645874023
    8. ' ' → logprob: -17.002477645874023
    9. '
' → logprob: -17.877477645874023
    10. ' 
' → logprob: -18.752477645874023

Token 180: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05007225275039673
    2. ' +=' → logprob: -3.050072193145752
    3. '+' → logprob: -6.550072193145752
    4. '=' → logprob: -10.05007266998291
    5. ']+=' → logprob: -12.55007266998291
    6. '+='' → logprob: -13.55007266998291
    7. 'i' → logprob: -13.67507266998291
    8. ' ' → logprob: -13.80007266998291
    9. ')' → logprob: -14.05007266998291
    10. '<|end|>' → logprob: -14.42507266998291

Token 181: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013260759878903627
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -17.126325607299805
    4. '<|end|>' → logprob: -18.188825607299805
    5. '```' → logprob: -18.688825607299805
    6. '۱' → logprob: -18.751325607299805
    7. '１' → logprob: -18.938825607299805
    8. '  ' → logprob: -19.251325607299805
    9. 'i' → logprob: -19.626325607299805
    10. ' ' → logprob: -19.626325607299805

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -19.250059127807617
    4. '```' → logprob: -19.375059127807617
    5. '۱' → logprob: -20.437559127807617
    6. '  ' → logprob: -20.562559127807617
    7. '１' → logprob: -21.125059127807617
    8. '0' → logprob: -21.437559127807617
    9. '
' → logprob: -21.625059127807617
    10. '१' → logprob: -21.687559127807617

Token 183: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4601536691188812
    2. '           ' → logprob: -1.8351536989212036
    3. '<|end|>' → logprob: -2.085153579711914
    4. ' 
' → logprob: -2.710153579711914
    5. ' ' → logprob: -5.210153579711914
    6. '            
' → logprob: -6.085153579711914
    7. '\n' → logprob: -6.210153579711914
    8. '  
' → logprob: -6.335153579711914
    9. '       ' → logprob: -6.460153579711914
    10. '<|end|>' → logprob: -6.585153579711914

Token 184: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1422656625509262
    2. 'while' → logprob: -2.392265558242798
    3. ' while' → logprob: -3.267265558242798
    4. '<|end|>' → logprob: -7.392265796661377
    5. 'i' → logprob: -7.642265796661377
    6. '
' → logprob: -7.892265796661377
    7. '#' → logprob: -8.392265319824219
    8. '               ' → logprob: -8.517265319824219
    9. '            
' → logprob: -8.642265319824219
    10. '       ' → logprob: -8.642265319824219

Token 185: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0506032258272171
    2. '           ' → logprob: -3.550603151321411
    3. 'if' (adapté à ' if') → logprob: -4.17560338973999
    4. ' while' → logprob: -5.30060338973999
    5. 'i' → logprob: -9.175602912902832
    6. '#' → logprob: -10.175602912902832
    7. ' if' → logprob: -10.300602912902832
    8. '       ' → logprob: -10.675602912902832
    9. '```' → logprob: -10.925602912902832
    10. 'While' → logprob: -11.175602912902832

Token 186: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11286383122205734
    2. 'i' → logprob: -2.237863779067993
    3. ' ' → logprob: -11.737863540649414
    4. ' not' → logprob: -11.862863540649414
    5. ' right' → logprob: -11.987863540649414
    6. ' cursor' → logprob: -12.237863540649414
    7. 'cursor' → logprob: -12.362863540649414
    8. 'right' → logprob: -13.112863540649414
    9. 'not' → logprob: -13.487863540649414
    10. '	i' → logprob: -13.550363540649414

Token 187: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7895722985267639
    2. ' ==' → logprob: -0.7895722985267639
    3. ' <' → logprob: -3.164572238922119
    4. '>=' → logprob: -4.039572238922119
    5. ' >=' → logprob: -4.039572238922119
    6. '<' → logprob: -4.539572238922119
    7. '<n' → logprob: -5.914572238922119
    8. '=' → logprob: -7.664572238922119
    9. '<len' → logprob: -8.414572715759277
    10. ' ' → logprob: -8.539572715759277

Token 188: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28553682565689087
    2. ' n' → logprob: -1.410536766052246
    3. '0' → logprob: -5.535536766052246
    4. ' ' → logprob: -7.910536766052246
    5. 'len' → logprob: -10.410536766052246
    6. '	n' → logprob: -11.410536766052246
    7. '   ' → logprob: -11.660536766052246
    8. '    ' → logprob: -12.535536766052246
    9. ' len' → logprob: -12.660536766052246
    10. '  ' → logprob: -13.160536766052246

Token 189: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0004007600946351886
    2. 'ight' → logprob: -8.00040054321289
    3. 'right' → logprob: -10.75040054321289
    4. '_RIGHT' → logprob: -11.00040054321289
    5. '_left' → logprob: -12.50040054321289
    6. '_' → logprob: -12.62540054321289
    7. '   ' → logprob: -12.75040054321289
    8. ')' → logprob: -13.00040054321289
    9. '	right' → logprob: -13.00040054321289
    10. '           ' → logprob: -13.62540054321289

Token 190: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6109045743942261
    2. ':
' → logprob: -0.8609045743942261
    3. '               ' → logprob: -3.8609046936035156
    4. '           ' → logprob: -4.860904693603516
    5. '       ' → logprob: -6.110904693603516
    6. ' or' → logprob: -6.235904693603516
    7. '   ' → logprob: -7.110904693603516
    8. ':return' → logprob: -7.860904693603516
    9. '                   ' → logprob: -9.985904693603516
    10. 'continue' → logprob: -10.360904693603516

Token 191: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24655462801456451
    2. ' continue' → logprob: -2.1215546131134033
    3. 'continue' → logprob: -2.3715546131134033
    4. '           ' → logprob: -5.246554851531982
    5. '```' → logprob: -10.621554374694824
    6. '   ' → logprob: -11.871554374694824
    7. '                   ' → logprob: -11.871554374694824
    8. '       ' → logprob: -12.121554374694824
    9. '	continue' → logprob: -12.371554374694824
    10. '_continue' → logprob: -12.871554374694824

Token 192: ' cursor' (ID: 14944)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5911946296691895
    2. ' continue' → logprob: -0.8411946296691895
    3. '               ' → logprob: -4.2161946296691895
    4. '                   ' → logprob: -8.966194152832031
    5. 'cursor' (adapté à ' cursor') → logprob: -9.466194152832031
    6. '   ' → logprob: -9.591194152832031
    7. ' cursor' → logprob: -10.216194152832031
    8. '           ' → logprob: -10.341194152832031
    9. ' ' → logprob: -10.841194152832031
    10. '	continue' → logprob: -12.216194152832031

Token 193: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10994276404380798
    2. '+=' → logprob: -2.859942674636841
    3. ' =' → logprob: -3.859942674636841
    4. '=' → logprob: -3.859942674636841
    5. ' continue' → logprob: -5.73494291305542
    6. 'continue' → logprob: -7.23494291305542
    7. ' break' → logprob: -8.359942436218262
    8. '+' → logprob: -8.859942436218262
    9. ' -=' → logprob: -9.484942436218262
    10. ')' → logprob: -9.609942436218262

Token 194: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005023968406021595
    2. ' len' → logprob: -7.875502586364746
    3. 'cursor' → logprob: -9.625502586364746
    4. 'n' → logprob: -9.875502586364746
    5. '(len' → logprob: -13.875502586364746
    6. '=len' → logprob: -14.125502586364746
    7. '<len' → logprob: -14.250502586364746
    8. '[len' → logprob: -14.500502586364746
    9. 'length' → logprob: -14.500502586364746
    10. '0' → logprob: -14.625502586364746

Token 195: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.003227979177609086
    2. 'text' → logprob: -5.753228187561035
    3. ' text' → logprob: -10.378228187561035
    4. '(' → logprob: -11.253228187561035
    5. '(right' → logprob: -13.128228187561035
    6. 'right' → logprob: -13.378228187561035
    7. ' (' → logprob: -13.628228187561035
    8. '{text' → logprob: -14.628228187561035
    9. '_text' → logprob: -15.628228187561035
    10. '(cursor' → logprob: -15.878228187561035

Token 196: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20152218639850616
    2. ')
' → logprob: -1.7015222311019897
    3. ' )' → logprob: -10.076521873474121
    4. ' )
' → logprob: -10.326521873474121
    5. ')
' → logprob: -11.326521873474121
    6. ')

' → logprob: -11.451521873474121
    7. ')+' → logprob: -13.451521873474121
    8. '           ' → logprob: -13.826521873474121
    9. '')' → logprob: -14.076521873474121
    10. '   ' → logprob: -14.076521873474121

Token 197: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34923964738845825
    2. '               ' → logprob: -1.2242395877838135
    3. 'else' → logprob: -8.099239349365234
    4. ' else' → logprob: -8.599239349365234
    5. ' continue' → logprob: -8.849239349365234
    6. 'continue' → logprob: -9.349239349365234
    7. '       ' → logprob: -9.849239349365234
    8. '```' → logprob: -12.474239349365234
    9. ' continues' → logprob: -12.599239349365234
    10. '                   ' → logprob: -12.724239349365234

Token 198: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5241129994392395
    2. '               ' → logprob: -1.3991129398345947
    3. 'continue' (adapté à ' continue') → logprob: -1.8991129398345947
    4. '           ' → logprob: -4.524113178253174
    5. '       ' → logprob: -7.649113178253174
    6. ' else' → logprob: -11.149112701416016
    7. 'else' → logprob: -11.399112701416016
    8. '	continue' → logprob: -11.524112701416016
    9. '   ' → logprob: -11.774112701416016
    10. ' ' → logprob: -12.024112701416016

Token 199: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.057656507939100266
    2. 'while' → logprob: -3.0576565265655518
    3. ' while' → logprob: -4.932656288146973
    4. '            
' → logprob: -7.307656288146973
    5. '
' → logprob: -7.682656288146973
    6. 'i' → logprob: -8.182656288146973
    7. '#' → logprob: -9.432656288146973
    8. ' i' → logprob: -9.932656288146973
    9. '          ' → logprob: -10.307656288146973
    10. '               ' → logprob: -10.432656288146973

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17659784853458405
    2. 'while' → logprob: -1.9265978336334229
    3. ' while' → logprob: -4.301598072052002
    4. '            
' → logprob: -6.551598072052002
    5. '#' → logprob: -8.551597595214844
    6. 'i' → logprob: -8.926597595214844
    7. '
' → logprob: -9.176597595214844
    8. '               ' → logprob: -9.426597595214844
    9. 'else' → logprob: -9.551597595214844
    10. 'if' → logprob: -9.676597595214844

Token 201: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.025450777262449265
    2. '           ' → logprob: -4.400450706481934
    3. 'j' → logprob: -5.275450706481934
    4. 'start' → logprob: -5.650450706481934
    5. 'if' → logprob: -6.400450706481934
    6. ' while' → logprob: -7.025450706481934
    7. 'end' → logprob: -7.275450706481934
    8. '#' (adapté à ' #') → logprob: -7.400450706481934
    9. 'word' → logprob: -9.150450706481934
    10. 'idx' → logprob: -10.025450706481934

Token 202: ' now' (ID: 1954)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06004531681537628
    2. 'j' → logprob: -3.5600452423095703
    3. '#' → logprob: -4.31004524230957
    4. 'start' → logprob: -4.68504524230957
    5. 'if' → logprob: -5.43504524230957
    6. ' while' → logprob: -6.56004524230957
    7. 'end' → logprob: -8.18504524230957
    8. 'i' → logprob: -8.18504524230957
    9. 'word' → logprob: -8.81004524230957
    10. 'pos' → logprob: -9.31004524230957

Token 203: ' i' (ID: 575)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.19278132915496826
    2. '           ' → logprob: -2.442781448364258
    3. ' while' → logprob: -3.567781448364258
    4. '#' → logprob: -3.942781448364258
    5. 'if' → logprob: -4.692781448364258
    6. 'i' → logprob: -4.942781448364258
    7. 'start' → logprob: -5.067781448364258
    8. 'move' → logprob: -5.192781448364258
    9. ' move' → logprob: -6.067781448364258
    10. 'find' → logprob: -6.817781448364258

Token 204: ' is' (ID: 382)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5353204011917114
    2. '=' → logprob: -1.5353204011917114
    3. ' +=' → logprob: -1.6603204011917114
    4. ' =' → logprob: -5.410320281982422
    5. ' is' → logprob: -6.785320281982422
    6. 'is' → logprob: -7.160320281982422
    7. '<|end|>' → logprob: -7.785320281982422
    8. ']+=' → logprob: -8.535320281982422
    9. 'while' → logprob: -8.660320281982422
    10. ')' → logprob: -8.660320281982422

Token 205: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.1624569594860077
    2. 'at' → logprob: -2.03745698928833
    3. ' the' → logprob: -4.78745698928833
    4. ' pointing' → logprob: -5.66245698928833
    5. 'the' → logprob: -5.91245698928833
    6. '0' → logprob: -7.03745698928833
    7. ' first' → logprob: -7.16245698928833
    8. ' ' → logprob: -7.28745698928833
    9. ' a' → logprob: -7.78745698928833
    10. 'start' → logprob: -8.037456512451172

Token 206: ' start' (ID: 1604)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6400944590568542
    2. ' the' → logprob: -1.390094518661499
    3. 'a' → logprob: -2.015094518661499
    4. 'the' → logprob: -3.265094518661499
    5. 'i' → logprob: -4.64009428024292
    6. ' first' → logprob: -4.89009428024292
    7. ' non' → logprob: -5.26509428024292
    8. ' next' → logprob: -5.26509428024292
    9. ' i' → logprob: -5.51509428024292
    10. '0' → logprob: -5.64009428024292

Token 207: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1156853586435318
    2. 'of' → logprob: -2.24068546295166
    3. '           ' → logprob: -5.99068546295166
    4. '<|end|>' → logprob: -8.86568546295166
    5. '               ' → logprob: -9.99068546295166
    6. ' ' → logprob: -10.24068546295166
    7. '+' → logprob: -10.61568546295166
    8. 'token' → logprob: -10.74068546295166
    9. '            ' → logprob: -11.24068546295166
    10. '            
' → logprob: -11.86568546295166

Token 208: ' first' (ID: 1577)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.5492537021636963
    2. 'a' → logprob: -1.0492537021636963
    3. ' a' → logprob: -3.2992537021636963
    4. ' word' → logprob: -3.6742537021636963
    5. 'right' → logprob: -5.549253463745117
    6. 'the' → logprob: -6.049253463745117
    7. 'next' → logprob: -6.424253463745117
    8. ' next' → logprob: -7.549253463745117
    9. 'first' → logprob: -7.674253463745117
    10. 'non' → logprob: -7.799253463745117

Token 209: ' right' (ID: 1849)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.15964314341545105
    2. ' word' → logprob: -2.1596431732177734
    3. 'non' → logprob: -4.034643173217773
    4. 'right' → logprob: -4.909643173217773
    5. ' non' → logprob: -5.534643173217773
    6. 'character' → logprob: -6.784643173217773
    7. 'letter' → logprob: -6.909643173217773
    8. ' right' → logprob: -7.909643173217773
    9. ' character' → logprob: -8.159643173217773
    10. 'w' → logprob: -9.534643173217773

Token 210: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.005534812342375517
    2. ' word' → logprob: -5.380534648895264
    3. 'non' → logprob: -8.130535125732422
    4. 'token' → logprob: -8.380535125732422
    5. 'most' → logprob: -8.380535125732422
    6. 'right' → logprob: -10.755535125732422
    7. '   ' → logprob: -11.005535125732422
    8. ' ' → logprob: -11.380535125732422
    9. 'character' → logprob: -11.380535125732422
    10. '           ' → logprob: -11.630535125732422

Token 211: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024880003184080124
    2. 'while' → logprob: -4.1498799324035645
    3. ' while' → logprob: -4.8998799324035645
    4. ',' → logprob: -7.6498799324035645
    5. '            
' → logprob: -8.024880409240723
    6. 'i' → logprob: -9.274880409240723
    7. '               ' → logprob: -9.524880409240723
    8. '```' → logprob: -9.524880409240723
    9. '       ' → logprob: -9.899880409240723
    10. '<|end|>' → logprob: -10.149880409240723

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02061592973768711
    2. ' while' → logprob: -4.520616054534912
    3. 'while' → logprob: -4.770616054534912
    4. ',' → logprob: -8.270615577697754
    5. '            
' → logprob: -8.270615577697754
    6. '```' → logprob: -8.270615577697754
    7. 'i' → logprob: -10.145615577697754
    8. '               ' → logprob: -10.145615577697754
    9. ' i' → logprob: -10.520615577697754
    10. '   ' → logprob: -10.645615577697754

Token 213: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03665134310722351
    2. '           ' → logprob: -3.536651372909546
    3. ' while' → logprob: -5.036651134490967
    4. 'i' → logprob: -8.161651611328125
    5. 'j' → logprob: -10.161651611328125
    6. '       ' → logprob: -12.036651611328125
    7. '```' → logprob: -12.036651611328125
    8. '               ' → logprob: -12.161651611328125
    9. '            
' → logprob: -12.161651611328125
    10. '   ' → logprob: -12.286651611328125

Token 214: ' move' (ID: 5275)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.009003570303320885
    2. ' while' → logprob: -5.259003639221191
    3. '           ' → logprob: -5.634003639221191
    4. 'j' → logprob: -9.384003639221191
    5. 'i' → logprob: -10.009003639221191
    6. 'end' → logprob: -10.509003639221191
    7. 'start' → logprob: -11.759003639221191
    8. 'if' → logprob: -12.759003639221191
    9. '```' → logprob: -13.009003639221191
    10. '   ' → logprob: -13.134003639221191

Token 215: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9873166084289551
    2. '           ' → logprob: -1.612316608428955
    3. ' i' → logprob: -1.612316608428955
    4. 'while' → logprob: -2.237316608428955
    5. ' while' → logprob: -2.987316608428955
    6. ' cursor' → logprob: -3.237316608428955
    7. 'cursor' → logprob: -3.862316608428955
    8. '               ' → logprob: -4.862316608428955
    9. '            ' → logprob: -7.112316608428955
    10. '   ' → logprob: -7.737316608428955

Token 216: ' to' (ID: 316)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.19464989006519318
    2. ' +=' → logprob: -1.8196499347686768
    3. 'while' → logprob: -4.319649696350098
    4. '=' → logprob: -7.694649696350098
    5. '           ' → logprob: -7.694649696350098
    6. ' while' → logprob: -8.319649696350098
    7. 'to' → logprob: -9.444649696350098
    8. ' =' → logprob: -9.819649696350098
    9. '+' → logprob: -10.069649696350098
    10. '               ' → logprob: -10.569649696350098

Token 217: ' end' (ID: 1268)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7761346101760864
    2. ' end' → logprob: -1.1511346101760864
    3. 'end' → logprob: -2.401134490966797
    4. ' next' → logprob: -2.776134490966797
    5. 'i' → logprob: -4.276134490966797
    6. 'the' → logprob: -4.276134490966797
    7. 'n' → logprob: -4.276134490966797
    8. ' n' → logprob: -4.526134490966797
    9. 'len' → logprob: -5.276134490966797
    10. ' i' → logprob: -5.401134490966797

Token 218: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.21737326681613922
    2. '           ' → logprob: -2.4673733711242676
    3. 'while' → logprob: -2.9673733711242676
    4. 'i' → logprob: -4.092373371124268
    5. 'of' → logprob: -4.217373371124268
    6. ' while' → logprob: -4.717373371124268
    7. ' i' → logprob: -5.592373371124268
    8. '+' → logprob: -5.717373371124268
    9. '               ' → logprob: -5.717373371124268
    10. '<|end|>' → logprob: -5.842373371124268

Token 219: ' word' (ID: 2195)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.48451757431030273
    2. 'first' → logprob: -2.1095175743103027
    3. 'word' → logprob: -2.6095175743103027
    4. 'the' → logprob: -2.6095175743103027
    5. ' right' → logprob: -3.4845175743103027
    6. 'that' → logprob: -3.7345175743103027
    7. ' that' → logprob: -3.9845175743103027
    8. ' first' → logprob: -4.109517574310303
    9. ' the' → logprob: -4.234517574310303
    10. ' word' → logprob: -5.109517574310303

Token 220: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0066917999647557735
    2. ' while' → logprob: -5.506691932678223
    3. 'while' → logprob: -6.256691932678223
    4. '<|end|>' → logprob: -8.631691932678223
    5. '       ' → logprob: -8.881691932678223
    6. '               ' → logprob: -9.256691932678223
    7. '   ' → logprob: -9.756691932678223
    8. '<|end|>' → logprob: -10.131691932678223
    9. '	       ' → logprob: -10.631691932678223
    10. ',' → logprob: -10.756691932678223

Token 221: 'until' (ID: 75961)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5417801737785339
    2. ' while' → logprob: -1.2917802333831787
    3. 'i' → logprob: -2.5417802333831787
    4. '           ' → logprob: -3.1667802333831787
    5. ')' → logprob: -4.4167799949646
    6. ' i' → logprob: -4.9167799949646
    7. ' not' → logprob: -7.2917799949646
    8. 'not' → logprob: -7.5417799949646
    9. ' )' → logprob: -7.7917799949646
    10. ')
' → logprob: -8.166780471801758

Token 222: ' blank' (ID: 16953)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1516214907169342
    2. 'i' → logprob: -2.1516215801239014
    3. ' not' → logprob: -3.7766215801239014
    4. 'not' → logprob: -7.151621341705322
    5. ' right' → logprob: -8.27662181854248
    6. '(i' → logprob: -8.65162181854248
    7. ' space' → logprob: -9.77662181854248
    8. 'right' → logprob: -10.15162181854248
    9. 'space' → logprob: -10.15162181854248
    10. ' (' → logprob: -10.15162181854248

Token 223: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0010160179808735847
    2. '           ' → logprob: -8.001015663146973
    3. 'or' → logprob: -8.376015663146973
    4. ')' → logprob: -8.751015663146973
    5. ' and' → logprob: -8.751015663146973
    6. '               ' → logprob: -9.626015663146973
    7. ' ' → logprob: -10.751015663146973
    8. '            ' → logprob: -11.876015663146973
    9. 's' → logprob: -12.126015663146973
    10. ',' → logprob: -12.251015663146973

Token 224: ' end' (ID: 1268)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.43989816308021545
    2. ' space' → logprob: -1.314898133277893
    3. ''' → logprob: -2.9398982524871826
    4. ' i' → logprob: -4.4398980140686035
    5. 'i' → logprob: -5.1898980140686035
    6. ' not' → logprob: -5.1898980140686035
    7. ' ' → logprob: -6.0648980140686035
    8. ' cursor' → logprob: -6.4398980140686035
    9. 'cursor' → logprob: -6.5648980140686035
    10. 'newline' → logprob: -6.5648980140686035

Token 225: ')
' (ID: 446)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1862994283437729
    2. 'of' → logprob: -1.811299443244934
    3. '           ' → logprob: -5.8112993240356445
    4. ' or' → logprob: -6.5612993240356445
    5. '               ' → logprob: -6.8112993240356445
    6. ')' → logprob: -7.3112993240356445
    7. 'or' → logprob: -8.936299324035645
    8. '            ' → logprob: -9.811299324035645
    9. 'i' → logprob: -10.561299324035645
    10. '+' → logprob: -10.811299324035645

Token 226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005505294539034367
    2. 'while' → logprob: -8.125550270080566
    3. ' while' → logprob: -9.250550270080566
    4. '               ' → logprob: -10.125550270080566
    5. '            
' → logprob: -10.625550270080566
    6. 'i' → logprob: -10.875550270080566
    7. '+' → logprob: -11.125550270080566
    8. '```' → logprob: -11.500550270080566
    9. '       ' → logprob: -11.875550270080566
    10. ' i' → logprob: -12.000550270080566

Token 227: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8299536108970642
    2. 'while' (adapté à ' while') → logprob: -1.204953670501709
    3. ' while' → logprob: -1.454953670501709
    4. 'i' → logprob: -3.704953670501709
    5. ' i' → logprob: -5.204953670501709
    6. '               ' → logprob: -8.57995319366455
    7. '   ' → logprob: -8.95495319366455
    8. '       ' → logprob: -9.70495319366455
    9. ' 
' → logprob: -9.70495319366455
    10. '            
' → logprob: -9.95495319366455

Token 228: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06999368220567703
    2. 'i' → logprob: -2.694993734359741
    3. ' right' → logprob: -11.31999397277832
    4. ' ' → logprob: -11.44499397277832
    5. '   ' → logprob: -11.81999397277832
    6. '(i' → logprob: -11.81999397277832
    7. 'right' → logprob: -11.94499397277832
    8. ' not' → logprob: -12.81999397277832
    9. '	i' → logprob: -12.94499397277832
    10. ' (' → logprob: -13.31999397277832

Token 229: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3492284417152405
    2. '<' → logprob: -1.2242283821105957
    3. '<len' → logprob: -7.599228382110596
    4. '+' → logprob: -8.724228858947754
    5. '<n' → logprob: -9.724228858947754
    6. ' ' → logprob: -10.474228858947754
    7. ' +' → logprob: -11.724228858947754
    8. '<|end|>' → logprob: -11.974228858947754
    9. '[' → logprob: -12.224228858947754
    10. '<size' → logprob: -12.849228858947754

Token 230: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.523152768611908
    2. ' n' → logprob: -0.898152768611908
    3. 'len' → logprob: -10.773152351379395
    4. ' ' → logprob: -13.148152351379395
    5. 'i' → logprob: -13.648152351379395
    6. ' len' → logprob: -13.898152351379395
    7. '	n' → logprob: -14.148152351379395
    8. '_n' → logprob: -14.398152351379395
    9. ')n' → logprob: -14.398152351379395
    10. '<|end|>' → logprob: -14.523152351379395

Token 231: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0003700165543705225
    2. '_RIGHT' → logprob: -9.250370025634766
    3. '_' → logprob: -9.500370025634766
    4. 'right' → logprob: -9.750370025634766
    5. '_len' → logprob: -10.750370025634766
    6. 'Right' → logprob: -11.000370025634766
    7. '   ' → logprob: -11.375370025634766
    8. ' _' → logprob: -11.625370025634766
    9. '_n' → logprob: -12.000370025634766
    10. ' right' → logprob: -12.000370025634766

Token 232: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029757777228951454
    2. 'and' → logprob: -3.5297577381134033
    3. '           ' → logprob: -12.654757499694824
    4. ' ' → logprob: -14.029757499694824
    5. '          ' → logprob: -14.029757499694824
    6. '       ' → logprob: -14.529757499694824
    7. '   ' → logprob: -14.654757499694824
    8. '        ' → logprob: -15.154757499694824
    9. '+' → logprob: -15.279757499694824
    10. '            ' → logprob: -15.529757499694824

Token 233: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2519495487213135
    2. ' right' → logprob: -1.5019495487213135
    3. 'not' → logprob: -11.751949310302734
    4. ' not' → logprob: -12.126949310302734
    5. ' ' → logprob: -12.501949310302734
    6. '	right' → logprob: -13.501949310302734
    7. '(right' → logprob: -13.876949310302734
    8. '[right' → logprob: -15.001949310302734
    9. '   ' → logprob: -15.376949310302734
    10. 'rightness' → logprob: -16.501949310302734

Token 234: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. 'i' → logprob: -14.125000953674316
    3. '[' → logprob: -15.250000953674316
    4. '```' → logprob: -16.125001907348633
    5. '[
' → logprob: -16.625001907348633
    6. '
' → logprob: -16.750001907348633
    7. ' [' → logprob: -17.125001907348633
    8. '[I' → logprob: -17.250001907348633
    9. '   ' → logprob: -17.750001907348633
    10. ' ' → logprob: -18.000001907348633

Token 235: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.21303367614746094
    2. ' !=' → logprob: -1.713033676147461
    3. 'is' → logprob: -5.713033676147461
    4. '!='' → logprob: -5.838033676147461
    5. ' not' → logprob: -5.963033676147461
    6. '[' → logprob: -7.213033676147461
    7. ']' → logprob: -7.213033676147461
    8. 'not' → logprob: -7.463033676147461
    9. ']!=' → logprob: -8.463033676147461
    10. 'isal' → logprob: -8.588033676147461

Token 236: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.009419935755431652
    2. ' !=' → logprob: -5.259419918060303
    3. '!='' → logprob: -5.884419918060303
    4. 'is' → logprob: -6.884419918060303
    5. 'not' → logprob: -9.134420394897461
    6. '[' → logprob: -9.384420394897461
    7. ' not' → logprob: -9.634420394897461
    8. '!' → logprob: -10.134420394897461
    9. 'isal' → logprob: -10.509420394897461
    10. '<' → logprob: -11.259420394897461

Token 237: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007772959768772125
    2. ' '' → logprob: -4.882772922515869
    3. '"' → logprob: -8.757773399353027
    4. ' ' → logprob: -12.007773399353027
    5. ''s' → logprob: -14.132773399353027
    6. '('' → logprob: -14.132773399353027
    7. '  ' → logprob: -15.132773399353027
    8. ')' → logprob: -15.382773399353027
    9. 'space' → logprob: -15.507773399353027
    10. '`' → logprob: -15.507773399353027

Token 238: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.04186680540442467
    2. ' ':' → logprob: -3.2918667793273926
    3. ''' → logprob: -5.916866779327393
    4. ' '>' → logprob: -6.916866779327393
    5. '':' → logprob: -10.29186725616455
    6. ' ':'' → logprob: -10.54186725616455
    7. ' ' → logprob: -10.79186725616455
    8. ' ',' → logprob: -11.54186725616455
    9. ''>' → logprob: -11.66686725616455
    10. ' ']' → logprob: -11.91686725616455

Token 239: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1811123490333557
    2. ':' → logprob: -2.056112289428711
    3. '               ' → logprob: -3.681112289428711
    4. '           ' → logprob: -4.681112289428711
    5. '):
' → logprob: -6.681112289428711
    6. '       ' → logprob: -7.056112289428711
    7. ' and' → logprob: -7.306112289428711
    8. '   ' → logprob: -8.931112289428711
    9. '):' → logprob: -10.056112289428711
    10. '                   ' → logprob: -10.181112289428711

Token 240: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008826577104628086
    2. '           ' → logprob: -5.133826732635498
    3. ':
' → logprob: -6.008826732635498
    4. '       ' → logprob: -9.25882625579834
    5. ':' → logprob: -9.38382625579834
    6. '   ' → logprob: -9.38382625579834
    7. '                   ' → logprob: -9.75882625579834
    8. 'i' → logprob: -10.50882625579834
    9. '{
' → logprob: -10.88382625579834
    10. '
' → logprob: -10.88382625579834

Token 241: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.2018229067325592
    2. ' i' → logprob: -1.7018228769302368
    3. '               ' → logprob: -8.076823234558105
    4. '                   ' → logprob: -9.451823234558105
    5. '           ' → logprob: -11.326823234558105
    6. '   ' → logprob: -12.701823234558105
    7. ' ' → logprob: -13.076823234558105
    8. '                       ' → logprob: -14.701823234558105
    9. '	i' → logprob: -14.826823234558105
    10. '1' → logprob: -14.951823234558105

Token 242: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5233268141746521
    2. ' +=' → logprob: -0.8983268141746521
    3. '<|end|>' → logprob: -9.398326873779297
    4. '=' → logprob: -10.148326873779297
    5. '+' → logprob: -10.523326873779297
    6. ']+=' → logprob: -10.773326873779297
    7. '++' → logprob: -11.273326873779297
    8. '           ' → logprob: -12.398326873779297
    9. '<|end|>' → logprob: -12.398326873779297
    10. '   ' → logprob: -13.023326873779297

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0788913294672966
    2. ' ' → logprob: -2.5788912773132324
    3. '```' → logprob: -14.45389175415039
    4. '   ' → logprob: -14.57889175415039
    5. ')' → logprob: -16.39139175415039
    6. '<|end|>' → logprob: -16.45389175415039
    7. '           ' → logprob: -16.76639175415039
    8. '0' → logprob: -17.01639175415039
    9. ' ' → logprob: -17.20389175415039
    10. '
' → logprob: -17.39139175415039

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -18.250003814697266
    4. '   ' → logprob: -19.250003814697266
    5. '0' → logprob: -20.500003814697266
    6. '<|end|>' → logprob: -20.750003814697266
    7. ')' → logprob: -21.000003814697266
    8. '１' → logprob: -21.687503814697266
    9. '۱' → logprob: -21.750003814697266
    10. '...' → logprob: -22.062503814697266

Token 245: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43741706013679504
    2. '           ' → logprob: -1.0624170303344727
    3. '<|end|>' → logprob: -4.937417030334473
    4. '               ' → logprob: -7.187417030334473
    5. '<|end|>' → logprob: -8.937417030334473
    6. '
' → logprob: -8.937417030334473
    7. '            
' → logprob: -9.312417030334473
    8. ',
' → logprob: -9.562417030334473
    9. '  
' → logprob: -9.562417030334473
    10. ' 
' → logprob: -9.937417030334473

Token 246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04080499708652496
    2. '
' → logprob: -3.5408051013946533
    3. '               ' → logprob: -5.165804862976074
    4. ' cursor' → logprob: -6.040804862976074
    5. 'cursor' → logprob: -6.415804862976074
    6. '<|end|>' → logprob: -7.915804862976074
    7. '       ' → logprob: -8.415804862976074
    8. '(cursor' → logprob: -9.540804862976074
    9. '```' → logprob: -9.540804862976074
    10. '            
' → logprob: -9.790804862976074

Token 247: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.05248213931918144
    2. '           ' → logprob: -3.5524821281433105
    3. 'cursor' (adapté à ' cursor') → logprob: -4.0524821281433105
    4. '       ' → logprob: -5.5524821281433105
    5. '	cursor' → logprob: -7.6774821281433105
    6. '               ' → logprob: -8.052482604980469
    7. '   ' → logprob: -8.552482604980469
    8. '
' → logprob: -8.927482604980469
    9. '(cursor' → logprob: -10.552482604980469
    10. '.cursor' → logprob: -10.927482604980469

Token 248: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.062255147844552994
    2. '+=' → logprob: -2.8122551441192627
    3. ' =' → logprob: -8.687254905700684
    4. '=' → logprob: -9.062254905700684
    5. '+' → logprob: -12.937254905700684
    6. ' +' → logprob: -15.562254905700684
    7. ']+=' → logprob: -16.437255859375
    8. '```' → logprob: -17.187255859375
    9. ' ' → logprob: -17.312255859375
    10. '+=(' → logprob: -18.062255859375

Token 249: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031777136027812958
    2. ' i' → logprob: -5.753177642822266
    3. '	i' → logprob: -18.378177642822266
    4. '   ' → logprob: -22.003177642822266
    5. '(i' → logprob: -22.628177642822266
    6. '```' → logprob: -22.628177642822266
    7. ' ' → logprob: -22.753177642822266
    8. '
' → logprob: -23.253177642822266
    9. '{i' → logprob: -23.378177642822266
    10. '[i' → logprob: -23.503177642822266

Token 250: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3608403205871582
    2. '       ' → logprob: -1.6108403205871582
    3. '<|end|>' → logprob: -2.610840320587158
    4. '\n' → logprob: -3.735840320587158
    5. 'elif' → logprob: -6.110840320587158
    6. '<|end|>' → logprob: -7.360840320587158
    7. ' elif' → logprob: -7.735840320587158
    8. '  
' → logprob: -7.735840320587158
    9. '        
' → logprob: -7.735840320587158
    10. '   ' → logprob: -8.23583984375

Token 251: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013859412632882595
    2. 'elif' (adapté à ' elif') → logprob: -4.638859272003174
    3. ' elif' → logprob: -5.513859272003174
    4. '	elif' → logprob: -10.763859748840332
    5. '<|end|>' → logprob: -11.388859748840332
    6. '   ' → logprob: -11.888859748840332
    7. '
' → logprob: -12.138859748840332
    8. 'else' → logprob: -12.388859748840332
    9. ' else' → logprob: -12.388859748840332
    10. '```' → logprob: -13.513859748840332

Token 253: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.012960091233253479
    2. 'cmd' → logprob: -4.637959957122803
    3. '"' → logprob: -5.887959957122803
    4. ' "' → logprob: -8.137960433959961
    5. '(cmd' → logprob: -9.387960433959961
    6. '	cmd' → logprob: -10.762960433959961
    7. ' command' → logprob: -11.012960433959961
    8. ' ' → logprob: -12.637960433959961
    9. ' cmds' → logprob: -12.762960433959961
    10. ' code' → logprob: -13.387960433959961

Token 254: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0012602333445101976
    2. '==' → logprob: -6.751260280609131
    3. ' =' → logprob: -9.501259803771973
    4. '.startswith' → logprob: -12.501259803771973
    5. ' ' → logprob: -12.626259803771973
    6. '[' → logprob: -12.751259803771973
    7. ' =="' → logprob: -13.001259803771973
    8. ' ===' → logprob: -13.876259803771973
    9. '=' → logprob: -14.251259803771973
    10. ' ' → logprob: -15.001259803771973

Token 255: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.012610428966581821
    2. ' "' → logprob: -4.38761043548584
    3. ''' → logprob: -9.26261043548584
    4. '("' → logprob: -13.38761043548584
    5. ')' → logprob: -14.13761043548584
    6. ' ' → logprob: -14.13761043548584
    7. ' '' → logprob: -14.38761043548584
    8. '_' → logprob: -14.63761043548584
    9. '(' → logprob: -15.01261043548584
    10. ' ("' → logprob: -15.51261043548584

Token 256: 'back' (ID: 2205)
  Prédit: 'back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.0008897830848582089
    2. 'forward' → logprob: -7.125889778137207
    3. ' backward' → logprob: -10.125889778137207
    4. '.backward' → logprob: -12.000889778137207
    5. 'end' → logprob: -12.125889778137207
    6. '"' → logprob: -12.125889778137207
    7. 'reverse' → logprob: -13.000889778137207
    8. 'skip' → logprob: -13.000889778137207
    9. 'insert' → logprob: -13.000889778137207
    10. ' ' → logprob: -13.250889778137207

Token 257: 'ward' (ID: 2076)
  Prédit: 'ward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ward' → logprob: -0.000672043883241713
    2. 'word' → logprob: -7.500671863555908
    3. 'space' → logprob: -9.625672340393066
    4. ' ward' → logprob: -11.125672340393066
    5. 'WARD' → logprob: -12.125672340393066
    6. '_' → logprob: -12.375672340393066
    7. 'wards' → logprob: -12.375672340393066
    8. 'w' → logprob: -12.375672340393066
    9. ' _' → logprob: -12.625672340393066
    10. 'ard' → logprob: -12.625672340393066

Token 258: ' word' (ID: 2195)
  Prédit: ' char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.33159583806991577
    2. ' word' → logprob: -1.4565958976745605
    3. ' ' → logprob: -3.7065958976745605
    4. '_' → logprob: -4.5815958976745605
    5. ' space' → logprob: -5.0815958976745605
    6. 'char' → logprob: -5.4565958976745605
    7. '_word' → logprob: -6.4565958976745605
    8. '_char' → logprob: -7.3315958976745605
    9. ' _' → logprob: -7.4565958976745605
    10. ' ' → logprob: -7.8315958976745605

Token 259: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.038006141781806946
    2. '":' → logprob: -4.03800630569458
    3. '           ' → logprob: -4.16300630569458
    4. ':
' → logprob: -5.66300630569458
    5. ':' → logprob: -8.538005828857422
    6. '"' → logprob: -8.788005828857422
    7. '":
' → logprob: -9.663005828857422
    8. '```' → logprob: -9.663005828857422
    9. '"):
' → logprob: -10.538005828857422
    10. '       ' → logprob: -10.663005828857422

Token 260: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010103991371579468
    2. '       ' → logprob: -10.000101089477539
    3. '#' → logprob: -11.125101089477539
    4. ':' → logprob: -11.625101089477539
    5. ':
' → logprob: -11.625101089477539
    6. '
' → logprob: -12.250101089477539
    7. '```' → logprob: -12.375101089477539
    8. ' #' → logprob: -12.750101089477539
    9. '               ' → logprob: -12.750101089477539
    10. '	       ' → logprob: -13.500101089477539

Token 261: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3880808651447296
    2. '#' (adapté à ' #') → logprob: -1.7630808353424072
    3. 'left' → logprob: -2.2630808353424072
    4. 'if' → logprob: -3.7630808353424072
    5. ' #' → logprob: -4.638081073760986
    6. 'right' → logprob: -5.013081073760986
    7. ' left' → logprob: -6.013081073760986
    8. ' if' → logprob: -6.763081073760986
    9. 'i' → logprob: -6.888081073760986
    10. 'pos' → logprob: -7.763081073760986

Token 262: ' move' (ID: 5275)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2552204728126526
    2. 'if' → logprob: -2.130220413208008
    3. '#' → logprob: -2.630220413208008
    4. ' left' → logprob: -4.255220413208008
    5. 'right' → logprob: -5.255220413208008
    6. 'i' → logprob: -5.755220413208008
    7. ' #' → logprob: -6.005220413208008
    8. 'pos' → logprob: -6.505220413208008
    9. ' if' → logprob: -6.505220413208008
    10. 'j' → logprob: -6.505220413208008

Token 263: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.22948092222213745
    2. 'cursor' → logprob: -2.1044809818267822
    3. 'i' → logprob: -3.4794809818267822
    4. ' i' → logprob: -4.604480743408203
    5. '           ' → logprob: -4.979480743408203
    6. ' left' → logprob: -5.104480743408203
    7. 'j' → logprob: -5.354480743408203
    8. 'left' → logprob: -5.479480743408203
    9. 'idx' → logprob: -5.729480743408203
    10. ' #' → logprob: -6.229480743408203

Token 264: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44854575395584106
    2. ' to' → logprob: -1.5735456943511963
    3. 'to' → logprob: -2.1985456943511963
    4. '=' → logprob: -3.8235456943511963
    5. '           ' → logprob: -4.948545932769775
    6. ' +=' → logprob: -5.698545932769775
    7. ' backward' → logprob: -6.198545932769775
    8. ' -=' → logprob: -6.323545932769775
    9. '_to' → logprob: -6.823545932769775
    10. ' left' → logprob: -7.073545932769775

Token 265: ' beginning' (ID: 10526)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14349961280822754
    2. ' ' → logprob: -2.5184996128082275
    3. ' text' → logprob: -3.7684996128082275
    4. 'text' → logprob: -4.143499374389648
    5. ' cursor' → logprob: -5.643499374389648
    6. '           ' → logprob: -5.768499374389648
    7. 'cursor' → logprob: -6.018499374389648
    8. ' the' → logprob: -6.268499374389648
    9. ' max' → logprob: -6.768499374389648
    10. 'max' → logprob: -7.268499374389648

Token 266: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.39786097407341003
    2. '           ' → logprob: -1.1478610038757324
    3. 'of' → logprob: -4.647861003875732
    4. '            ' → logprob: -8.147860527038574
    5. '          ' → logprob: -8.522860527038574
    6. ' ' → logprob: -8.522860527038574
    7. '               ' → logprob: -9.147860527038574
    8. '=' → logprob: -9.272860527038574
    9. '   ' → logprob: -9.897860527038574
    10. '  ' → logprob: -9.897860527038574

Token 267: ' right' (ID: 1849)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.20137259364128113
    2. ' text' → logprob: -1.8263726234436035
    3. 'word' → logprob: -4.5763726234436035
    4. ' word' → logprob: -5.3263726234436035
    5. 'left' → logprob: -6.0763726234436035
    6. 'right' → logprob: -6.4513726234436035
    7. ' the' → logprob: -7.3263726234436035
    8. 'the' → logprob: -8.076372146606445
    9. ' right' → logprob: -8.576372146606445
    10. 'current' → logprob: -8.701372146606445

Token 268: 'most' (ID: 5309)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.17519380152225494
    2. 'most' → logprob: -2.5501937866210938
    3. ' text' → logprob: -2.6751937866210938
    4. 'word' → logprob: -5.550193786621094
    5. '-' → logprob: -6.050193786621094
    6. ' ' → logprob: -6.425193786621094
    7. '   ' → logprob: -6.675193786621094
    8. 'of' → logprob: -7.050193786621094
    9. ' of' → logprob: -7.175193786621094
    10. 'left' → logprob: -7.300193786621094

Token 269: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.036301009356975555
    2. ' text' → logprob: -3.9113008975982666
    3. 'word' → logprob: -4.786301136016846
    4. 'text' → logprob: -5.911301136016846
    5. '_word' → logprob: -6.286301136016846
    6. '_' → logprob: -6.786301136016846
    7. ' ' → logprob: -6.786301136016846
    8. ' _' → logprob: -8.661300659179688
    9. '_text' → logprob: -9.161300659179688
    10. '(word' → logprob: -9.911300659179688

Token 270: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4507720470428467
    2. ' in' → logprob: -1.0757720470428467
    3. '            ' → logprob: -4.950772285461426
    4. '          ' → logprob: -5.950772285461426
    5. '_' → logprob: -6.075772285461426
    6. '            
' → logprob: -6.075772285461426
    7. '<|end|>' → logprob: -6.700772285461426
    8. 'in' → logprob: -7.200772285461426
    9. '_in' → logprob: -7.575772285461426
    10. '           
' → logprob: -7.700772285461426

Token 271: ' the' (ID: 290)
  Prédit: ' text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.3871082365512848
    2. 'text' → logprob: -1.1371082067489624
    3. ' ' → logprob: -9.387107849121094
    4. ' range' → logprob: -9.887107849121094
    5. 'range' → logprob: -10.512107849121094
    6. ' the' → logprob: -10.762107849121094
    7. 'left' → logprob: -11.137107849121094
    8. '   ' → logprob: -11.512107849121094
    9. ' left' → logprob: -12.512107849121094
    10. 'the' → logprob: -12.637107849121094

Token 272: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.3811829388141632
    2. 'left' → logprob: -1.3811829090118408
    3. ' text' → logprob: -3.006182909011841
    4. 'text' → logprob: -4.13118314743042
    5. ' ' → logprob: -9.506182670593262
    6. '_left' → logprob: -10.631182670593262
    7. 'right' → logprob: -12.381182670593262
    8. ' lef' → logprob: -13.381182670593262
    9. ' current' → logprob: -13.631182670593262
    10. '   ' → logprob: -13.631182670593262

Token 273: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2367488145828247
    2. 'text' → logprob: -1.8617488145828247
    3. ' text' → logprob: -3.736748695373535
    4. ':
' → logprob: -4.361748695373535
    5. '               ' → logprob: -5.486748695373535
    6. ':' → logprob: -5.736748695373535
    7. '            
' → logprob: -5.736748695373535
    8. '_' → logprob: -5.986748695373535
    9. '       ' → logprob: -7.236748695373535
    10. '
' → logprob: -7.361748695373535

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00027849749312736094
    2. '               ' → logprob: -9.37527847290039
    3. ':
' → logprob: -9.50027847290039
    4. ':' → logprob: -9.50027847290039
    5. '       ' → logprob: -11.25027847290039
    6. '          ' → logprob: -11.87527847290039
    7. '
' → logprob: -12.00027847290039
    8. '            
' → logprob: -12.50027847290039
    9. '```' → logprob: -12.75027847290039
    10. ',' → logprob: -13.00027847290039

Token 275: ' left' (ID: 3561)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00609089620411396
    2. ' left' → logprob: -5.506091117858887
    3. 'left' (adapté à ' left') → logprob: -7.256091117858887
    4. ' if' → logprob: -7.256091117858887
    5. ' right' → logprob: -8.756091117858887
    6. 'if' → logprob: -9.381091117858887
    7. '               ' → logprob: -9.881091117858887
    8. '
' → logprob: -10.256091117858887
    9. 'right' → logprob: -10.256091117858887
    10. '            ' → logprob: -10.381091117858887

Token 276: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3195483982563019
    2. '=' → logprob: -1.3195483684539795
    3. '_' → logprob: -5.319548606872559
    4. '           ' → logprob: -7.319548606872559
    5. '_text' → logprob: -8.819548606872559
    6. 'text' → logprob: -9.319548606872559
    7. '            ' → logprob: -9.444548606872559
    8. '_=' → logprob: -9.694548606872559
    9. '_len' → logprob: -10.069548606872559
    10. ' ' → logprob: -10.319548606872559

Token 277: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.3132970929145813
    2. 'text' → logprob: -1.3132970333099365
    3. '   ' → logprob: -11.563297271728516
    4. ' ' → logprob: -12.188297271728516
    5. '	text' → logprob: -12.563297271728516
    6. '"text' → logprob: -12.688297271728516
    7. '```' → logprob: -13.063297271728516
    8. ' code' → logprob: -13.188297271728516
    9. '{text' → logprob: -13.188297271728516
    10. '_text' → logprob: -13.938297271728516

Token 278: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0002900565741583705
    2. '[' → logprob: -8.500289916992188
    3. '=' → logprob: -11.125289916992188
    4. '[::-' → logprob: -11.125289916992188
    5. '   ' → logprob: -11.375289916992188
    6. '       ' → logprob: -11.625289916992188
    7. ':' → logprob: -11.875289916992188
    8. '][:' → logprob: -12.000289916992188
    9. '[
' → logprob: -12.125289916992188
    10. '[:]' → logprob: -12.375289916992188

Token 279: 'cursor' (ID: 34222)
  Prédit: 'cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -3.726595241460018e-05
    2. ' cursor' → logprob: -10.25003719329834
    3. '           ' → logprob: -14.37503719329834
    4. '   ' → logprob: -14.75003719329834
    5. '(cursor' → logprob: -15.25003719329834
    6. '	cursor' → logprob: -15.37503719329834
    7. '       ' → logprob: -15.87503719329834
    8. '.cursor' → logprob: -16.500038146972656
    9. ' ' → logprob: -16.625038146972656
    10. '               ' → logprob: -17.375038146972656

Token 280: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.04271356388926506
    2. ']' → logprob: -3.2927136421203613
    3. '           ' → logprob: -5.667713642120361
    4. '[::-' → logprob: -7.667713642120361
    5. ']
' → logprob: -8.042713165283203
    6. '].' → logprob: -8.292713165283203
    7. '][' → logprob: -9.667713165283203
    8. 'r' → logprob: -10.417713165283203
    9. ']

' → logprob: -11.167713165283203
    10. '       ' → logprob: -11.417713165283203

Token 281: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023323555942624807
    2. 'i' → logprob: -6.2523322105407715
    3. ' i' → logprob: -8.37733268737793
    4. '
' → logprob: -9.62733268737793
    5. '            
' → logprob: -10.87733268737793
    6. ' if' → logprob: -11.25233268737793
    7. '```' → logprob: -11.25233268737793
    8. '       ' → logprob: -11.37733268737793
    9. '   ' → logprob: -11.75233268737793
    10. '          ' → logprob: -11.75233268737793

Token 282: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20851390063762665
    2. 'if' (adapté à ' if') → logprob: -2.5835139751434326
    3. '           ' → logprob: -3.0835139751434326
    4. 'l' → logprob: -3.5835139751434326
    5. ' i' → logprob: -3.7085139751434326
    6. 'pos' → logprob: -5.4585137367248535
    7. ' if' → logprob: -5.7085137367248535
    8. 'j' → logprob: -5.9585137367248535
    9. 'idx' → logprob: -5.9585137367248535
    10. ' l' → logprob: -8.208514213562012

Token 283: ' not' (ID: 625)
  Prédit: ' cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.17764277756214142
    2. ' not' → logprob: -2.427642822265625
    3. 'cursor' → logprob: -2.677642822265625
    4. 'not' → logprob: -5.177642822265625
    5. ' left' → logprob: -10.052642822265625
    6. ' len' → logprob: -10.177642822265625
    7. '   ' → logprob: -11.177642822265625
    8. 'left' → logprob: -11.177642822265625
    9. '(cursor' → logprob: -11.677642822265625
    10. 'len' → logprob: -11.802642822265625

Token 284: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.2524641454219818
    2. 'left' → logprob: -1.5024641752243042
    3. ' cursor' → logprob: -7.752464294433594
    4. 'cursor' → logprob: -9.252464294433594
    5. ' len' → logprob: -13.127464294433594
    6. ' ' → logprob: -13.252464294433594
    7. 'len' → logprob: -13.627464294433594
    8. ' text' → logprob: -13.752464294433594
    9. ' lef' → logprob: -13.877464294433594
    10. 'text' → logprob: -14.377464294433594

Token 285: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4297719895839691
    2. ':
' → logprob: -1.0547720193862915
    3. '           ' → logprob: -7.304771900177002
    4. '       ' → logprob: -9.17977237701416
    5. '               ' → logprob: -9.17977237701416
    6. ':

' → logprob: -10.05477237701416
    7. '<|end|>' → logprob: -10.30477237701416
    8. '):
' → logprob: -10.92977237701416
    9. '   ' → logprob: -11.05477237701416
    10. 'continue' → logprob: -11.42977237701416

Token 286: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00141440040897578
    2. ' continue' → logprob: -6.8764142990112305
    3. '           ' → logprob: -8.62641429901123
    4. ':
' → logprob: -9.37641429901123
    5. ' continues' → logprob: -10.37641429901123
    6. 'continue' → logprob: -10.37641429901123
    7. '
' → logprob: -10.75141429901123
    8. '                
' → logprob: -11.87641429901123
    9. '```' → logprob: -11.87641429901123
    10. '<|end|>' → logprob: -12.75141429901123

Token 287: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.33414867520332336
    2. 'continue' (adapté à ' continue') → logprob: -1.334148645401001
    3. '               ' → logprob: -3.959148645401001
    4. '           ' → logprob: -6.58414888381958
    5. '       ' → logprob: -9.084148406982422
    6. '	continue' → logprob: -10.209148406982422
    7. '   ' → logprob: -10.459148406982422
    8. ' ' → logprob: -11.709148406982422
    9. '```' → logprob: -11.834148406982422
    10. '                   ' → logprob: -12.334148406982422

Token 288: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006629953859373927
    2. '            
' → logprob: -8.375662803649902
    3. '
' → logprob: -8.625662803649902
    4. '       ' → logprob: -9.375662803649902
    5. '               ' → logprob: -10.000662803649902
    6. 'i' → logprob: -10.125662803649902
    7. '```' → logprob: -10.625662803649902
    8. '          ' → logprob: -11.625662803649902
    9. '   ' → logprob: -11.750662803649902
    10. '  
' → logprob: -11.875662803649902

Token 289: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02591402642428875
    2. 'i' → logprob: -3.775913953781128
    3. ' i' → logprob: -6.150914192199707
    4. '
' → logprob: -8.150914192199707
    5. '          ' → logprob: -9.900914192199707
    6. '       ' → logprob: -10.025914192199707
    7. '            
' → logprob: -10.025914192199707
    8. '```' → logprob: -10.025914192199707
    9. '               ' → logprob: -11.150914192199707
    10. '   ' → logprob: -11.400914192199707

Token 290: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.020006278529763222
    2. '           ' → logprob: -4.02000617980957
    3. 'j' → logprob: -7.02000617980957
    4. ' i' → logprob: -7.14500617980957
    5. '```' → logprob: -9.27000617980957
    6. 'end' → logprob: -10.77000617980957
    7. '       ' → logprob: -11.02000617980957
    8. 'idx' → logprob: -11.39500617980957
    9. '   ' → logprob: -11.89500617980957
    10. '``' → logprob: -12.64500617980957

Token 291: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197384372353554
    2. '=' → logprob: -2.811973810195923
    3. ' ' → logprob: -12.436973571777344
    4. '=len' → logprob: -13.936973571777344
    5. ' -=' → logprob: -15.061973571777344
    6. ' +=' → logprob: -15.811973571777344
    7. '   ' → logprob: -16.186973571777344
    8. ' cursor' → logprob: -16.436973571777344
    9. '=c' → logprob: -16.686973571777344
    10. '=cut' → logprob: -16.936973571777344

Token 292: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2066899836063385
    2. 'cursor' → logprob: -1.8316899538040161
    3. ' len' → logprob: -4.206689834594727
    4. ' cursor' → logprob: -4.456689834594727
    5. ' ' → logprob: -11.081689834594727
    6. '   ' → logprob: -11.206689834594727
    7. '	cursor' → logprob: -11.456689834594727
    8. '(len' → logprob: -11.581689834594727
    9. '	len' → logprob: -11.706689834594727
    10. '(cursor' → logprob: -11.956689834594727

Token 293: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0076353782787919044
    2. 'left' → logprob: -4.882635593414307
    3. ' left' → logprob: -11.757635116577148
    4. '(' → logprob: -12.007635116577148
    5. '[left' → logprob: -12.507635116577148
    6. '(cursor' → logprob: -12.757635116577148
    7. '(
' → logprob: -13.132635116577148
    8. '	left' → logprob: -13.132635116577148
    9. ',left' → logprob: -13.382635116577148
    10. '```' → logprob: -13.757635116577148

Token 294: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05828253924846649
    2. '-' → logprob: -2.9332826137542725
    3. ')' → logprob: -6.183282375335693
    4. ')-' → logprob: -6.683282375335693
    5. '           ' → logprob: -10.433282852172852
    6. '()-' → logprob: -10.808282852172852
    7. '   ' → logprob: -12.058282852172852
    8. '          ' → logprob: -12.058282852172852
    9. ' ' → logprob: -12.558282852172852
    10. '<|end|>' → logprob: -12.933282852172852

Token 295: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11284934729337692
    2. ' -' → logprob: -2.237849235534668
    3. '           ' → logprob: -11.362849235534668
    4. 'while' → logprob: -12.237849235534668
    5. '   ' → logprob: -12.612849235534668
    6. '
' → logprob: -13.612849235534668
    7. '1' → logprob: -13.987849235534668
    8. ' ' → logprob: -14.112849235534668
    9. ' -=' → logprob: -14.362849235534668
    10. '()-' → logprob: -14.362849235534668

Token 296: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000573167169932276
    2. ' ' → logprob: -7.62557315826416
    3. '2' → logprob: -9.37557315826416
    4. '
' → logprob: -16.500574111938477
    5. '   ' → logprob: -17.063074111938477
    6. '0' → logprob: -17.250574111938477
    7. '```' → logprob: -17.313074111938477
    8. '           ' → logprob: -17.438074111938477
    9. ',' → logprob: -18.063074111938477
    10. '(' → logprob: -18.250574111938477

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. '2' → logprob: -11.62501049041748
    3. ' ' → logprob: -13.75001049041748
    4. '```' → logprob: -16.250009536743164
    5. '
' → logprob: -16.750009536743164
    6. '   ' → logprob: -17.000009536743164
    7. '

' → logprob: -18.375009536743164
    8. '-' → logprob: -18.687509536743164
    9. '``' → logprob: -18.750009536743164
    10. '0' → logprob: -19.000009536743164

Token 298: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012822874821722507
    2. ' while' → logprob: -5.137823104858398
    3. 'while' → logprob: -5.387823104858398
    4. '
' → logprob: -6.762823104858398
    5. '            
' → logprob: -7.387823104858398
    6. '       ' → logprob: -8.887823104858398
    7. '          ' → logprob: -9.387823104858398
    8. '               ' → logprob: -9.512823104858398
    9. '```' → logprob: -9.887823104858398
    10. '            ' → logprob: -10.762823104858398

Token 299: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012516834773123264
    2. 'while' → logprob: -4.637516975402832
    3. ' while' → logprob: -6.387516975402832
    4. '            
' → logprob: -7.262516975402832
    5. '
' → logprob: -8.637516975402832
    6. '```' → logprob: -9.637516975402832
    7. '       ' → logprob: -9.887516975402832
    8. '               ' → logprob: -10.887516975402832
    9. '            ' → logprob: -11.137516975402832
    10. '          ' → logprob: -11.262516975402832

Token 300: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12959496676921844
    2. '           ' → logprob: -2.5045950412750244
    3. '#' (adapté à ' #') → logprob: -3.5045950412750244
    4. ' while' → logprob: -4.754594802856445
    5. '```' → logprob: -7.129594802856445
    6. ' #' → logprob: -8.754594802856445
    7. '       ' → logprob: -9.629594802856445
    8. '            
' → logprob: -9.629594802856445
    9. '``' → logprob: -10.629594802856445
    10. '   ' → logprob: -11.004594802856445

Token 301: ' skip' (ID: 16677)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.002528575947508216
    2. '#' → logprob: -6.002528667449951
    3. '           ' → logprob: -10.002528190612793
    4. ' while' → logprob: -12.002528190612793
    5. 'While' → logprob: -14.377528190612793
    6. '            
' → logprob: -14.752528190612793
    7. '       ' → logprob: -14.877528190612793
    8. '```' → logprob: -16.75252914428711
    9. '   ' → logprob: -17.00252914428711
    10. ' #' → logprob: -17.50252914428711

Token 302: ' blanks' (ID: 160898)
  Prédit: ' blanks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blanks' → logprob: -0.06254690140485764
    2. ' while' → logprob: -3.687546968460083
    3. 'while' → logprob: -3.812546968460083
    4. ' spaces' → logprob: -4.937546730041504
    5. 'bl' → logprob: -5.437546730041504
    6. 'spaces' → logprob: -6.812546730041504
    7. 'blank' → logprob: -8.187546730041504
    8. ' blank' → logprob: -8.437546730041504
    9. ' i' → logprob: -9.187546730041504
    10. 'if' → logprob: -9.562546730041504

Token 303: ' backward' (ID: 58986)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5299335718154907
    2. ' while' → logprob: -0.9049335718154907
    3. '           ' → logprob: -5.029933452606201
    4. '	while' → logprob: -9.15493392944336
    5. '            
' → logprob: -10.02993392944336
    6. '               ' → logprob: -10.77993392944336
    7. '            ' → logprob: -11.15493392944336
    8. '       ' → logprob: -11.15493392944336
    9. '```' → logprob: -11.52993392944336
    10. '   ' → logprob: -11.90493392944336

Token 304: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17055991291999817
    2. ' while' → logprob: -2.420559883117676
    3. 'while' → logprob: -2.795559883117676
    4. '<|end|>' → logprob: -5.920559883117676
    5. '            
' → logprob: -6.170559883117676
    6. '       ' → logprob: -6.795559883117676
    7. '```' → logprob: -8.295559883117676
    8. '               ' → logprob: -8.670559883117676
    9. '            ' → logprob: -9.170559883117676
    10. '	while' → logprob: -9.420559883117676

Token 305: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2483414113521576
    2. ' while' → logprob: -1.74834144115448
    3. 'while' → logprob: -3.1233413219451904
    4. '<|end|>' → logprob: -7.1233415603637695
    5. '            
' → logprob: -7.9983415603637695
    6. '       ' → logprob: -8.12334156036377
    7. '```' → logprob: -8.99834156036377
    8. '	while' → logprob: -9.62334156036377
    9. 'While' → logprob: -9.99834156036377
    10. '               ' → logprob: -10.37334156036377

Token 306: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.040431953966617584
    2. ' while' → logprob: -3.2904319763183594
    3. '           ' → logprob: -6.040431976318359
    4. '	while' → logprob: -12.66543197631836
    5. '       ' → logprob: -13.41543197631836
    6. '```' → logprob: -13.66543197631836
    7. 'While' → logprob: -14.04043197631836
    8. '   ' → logprob: -15.66543197631836
    9. '            
' → logprob: -16.04043197631836
    10. ' ' → logprob: -17.29043197631836

Token 307: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759445428848267
    2. 'i' → logprob: -0.8259445428848267
    3. '	i' → logprob: -12.825944900512695
    4. ' ' → logprob: -13.950944900512695
    5. '(i' → logprob: -14.700944900512695
    6. 'left' → logprob: -15.075944900512695
    7. '   ' → logprob: -15.575944900512695
    8. ' left' → logprob: -15.950944900512695
    9. 'text' → logprob: -16.950944900512695
    10. '_i' → logprob: -16.950944900512695

Token 308: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.28216278553009033
    2. '>=' → logprob: -1.4071627855300903
    3. ' >' → logprob: -7.532162666320801
    4. '>' → logprob: -7.657162666320801
    5. ' ' → logprob: -13.4071626663208
    6. ')>=' → logprob: -14.4071626663208
    7. '≥' → logprob: -14.9071626663208
    8. '[' → logprob: -15.1571626663208
    9. ']>=' → logprob: -15.4071626663208
    10. ' ≥' → logprob: -15.7821626663208

Token 309: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. '           ' → logprob: -17.880233764648438
    4. '1' → logprob: -18.755233764648438
    5. '
' → logprob: -19.005233764648438
    6. '<|end|>' → logprob: -19.130233764648438
    7. '۰' → logprob: -19.505233764648438
    8. '   ' → logprob: -19.880233764648438
    9. ',' → logprob: -19.880233764648438
    10. ' and' → logprob: -19.880233764648438

Token 310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '<|end|>' → logprob: -17.625045776367188
    4. '۰' → logprob: -19.375045776367188
    5. '1' → logprob: -20.000045776367188
    6. ')' → logprob: -20.000045776367188
    7. '   ' → logprob: -20.375045776367188
    8. 'len' → logprob: -20.625045776367188
    9. ',' → logprob: -20.625045776367188
    10. '
' → logprob: -20.812545776367188

Token 311: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005929274018853903
    2. 'and' → logprob: -5.130929470062256
    3. '           ' → logprob: -15.505928993225098
    4. '	and' → logprob: -15.755928993225098
    5. '   ' → logprob: -16.255929946899414
    6. '       ' → logprob: -16.755929946899414
    7. ' ' → logprob: -16.880929946899414
    8. '```' → logprob: -17.255929946899414
    9. '    ' → logprob: -17.380929946899414
    10. ' и' → logprob: -18.130929946899414

Token 312: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.47408348321914673
    2. 'left' → logprob: -0.9740834832191467
    3. '	left' → logprob: -13.09908390045166
    4. '(left' → logprob: -13.72408390045166
    5. ' lef' → logprob: -13.97408390045166
    6. '[left' → logprob: -14.09908390045166
    7. '   ' → logprob: -14.34908390045166
    8. ' ' → logprob: -14.47408390045166
    9. '           ' → logprob: -16.224082946777344
    10. '.left' → logprob: -16.474082946777344

Token 313: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.000001907348633
    3. '```' → logprob: -14.625001907348633
    4. '[
' → logprob: -16.125001907348633
    5. 'i' → logprob: -16.125001907348633
    6. ' [' → logprob: -16.250001907348633
    7. '
' → logprob: -18.000001907348633
    8. '[I' → logprob: -19.125001907348633
    9. '[int' → logprob: -19.500001907348633
    10. '``' → logprob: -19.625001907348633

Token 314: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.030031858012080193
    2. '==' → logprob: -3.53003191947937
    3. ' ' → logprob: -8.90503215789795
    4. '=='' → logprob: -9.65503215789795
    5. ' =='' → logprob: -9.65503215789795
    6. '=' → logprob: -12.03003215789795
    7. ']==' → logprob: -12.78003215789795
    8. ' =' → logprob: -12.78003215789795
    9. '```' → logprob: -13.53003215789795
    10. ')' → logprob: -14.03003215789795

Token 315: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06259191781282425
    2. '==' → logprob: -2.812592029571533
    3. ' ' → logprob: -7.812592029571533
    4. ' =='' → logprob: -9.437591552734375
    5. '=='' → logprob: -9.937591552734375
    6. ''' → logprob: -10.187591552734375
    7. '=' → logprob: -10.812591552734375
    8. ' =' → logprob: -11.437591552734375
    9. '```' → logprob: -11.937591552734375
    10. '[' → logprob: -12.562591552734375

Token 316: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0006358316168189049
    2. ' '' → logprob: -7.375635623931885
    3. '"' → logprob: -11.625636100769043
    4. ' ' → logprob: -15.625636100769043
    5. ''s' → logprob: -16.125635147094727
    6. '`' → logprob: -17.000635147094727
    7. ''end' → logprob: -17.625635147094727
    8. ' 
' → logprob: -17.750635147094727
    9. ''a' → logprob: -17.750635147094727
    10. ''user' → logprob: -18.250635147094727

Token 317: ' '' (ID: 461)
  Prédit: ' ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ':' → logprob: -0.5771695971488953
    2. ' '' → logprob: -0.8271695971488953
    3. ''' → logprob: -6.952169418334961
    4. ' '>' → logprob: -8.577169418334961
    5. '':' → logprob: -10.202169418334961
    6. ' ' → logprob: -11.077169418334961
    7. ' ':'' → logprob: -11.452169418334961
    8. ' ')' → logprob: -11.577169418334961
    9. ' ',' → logprob: -12.827169418334961
    10. ' ']' → logprob: -12.827169418334961

Token 318: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.055205076932907104
    2. ':' → logprob: -3.4302051067352295
    3. '           ' → logprob: -4.68020486831665
    4. '               ' → logprob: -5.05520486831665
    5. '       ' → logprob: -6.18020486831665
    6. '):
' → logprob: -6.55520486831665
    7. 'i' → logprob: -7.05520486831665
    8. '   ' → logprob: -7.43020486831665
    9. '{
' → logprob: -9.180205345153809
    10. ' i' → logprob: -9.180205345153809

Token 319: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1436888873577118
    2. 'i' → logprob: -2.518688917160034
    3. ' i' → logprob: -3.018688917160034
    4. '```' → logprob: -5.768688678741455
    5. '           ' → logprob: -6.893688678741455
    6. '   ' → logprob: -9.518689155578613
    7. '``' → logprob: -9.643689155578613
    8. '                   ' → logprob: -10.143689155578613
    9. ' ' → logprob: -10.643689155578613
    10. '              ' → logprob: -11.518689155578613

Token 320: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.006808211095631123
    2. ' i' → logprob: -5.006808280944824
    3. '               ' → logprob: -9.881808280944824
    4. '                   ' → logprob: -10.256808280944824
    5. '           ' → logprob: -12.006808280944824
    6. '	i' → logprob: -15.256808280944824
    7. '   ' → logprob: -15.881808280944824
    8. '```' → logprob: -16.131807327270508
    9. ' ' → logprob: -17.756807327270508
    10. '[i' → logprob: -18.006807327270508

Token 321: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.10118839144706726
    2. '-=' → logprob: -2.3511884212493896
    3. '-' → logprob: -7.2261881828308105
    4. '                   ' → logprob: -8.601188659667969
    5. '               ' → logprob: -10.101188659667969
    6. '                ' → logprob: -11.726188659667969
    7. '                    ' → logprob: -12.351188659667969
    8. '```' → logprob: -12.726188659667969
    9. '           ' → logprob: -12.976188659667969
    10. '>' → logprob: -13.351188659667969

Token 322: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620241466909647
    2. ' ' → logprob: -5.37962007522583
    3. 'i' → logprob: -17.754619598388672
    4. '```' → logprob: -17.754619598388672
    5. '   ' → logprob: -18.254619598388672
    6. '-' → logprob: -18.879619598388672
    7. '0' → logprob: -18.879619598388672
    8. '
' → logprob: -19.129619598388672
    9. ')' → logprob: -19.317119598388672
    10. '2' → logprob: -19.629619598388672

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '0' → logprob: -15.750006675720215
    4. '```' → logprob: -18.3750057220459
    5. '
' → logprob: -19.3750057220459
    6. '-' → logprob: -19.5000057220459
    7. '   ' → logprob: -19.8750057220459
    8. '<|end|>' → logprob: -20.0000057220459
    9. '2' → logprob: -20.6250057220459
    10. 'i' → logprob: -21.0625057220459

Token 324: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12545745074748993
    2. '<|end|>' → logprob: -2.625457525253296
    3. '
' → logprob: -3.375457525253296
    4. '```' → logprob: -5.500457286834717
    5. '<|end|>' → logprob: -6.250457286834717
    6. '            
' → logprob: -6.625457286834717
    7. '               ' → logprob: -7.250457286834717
    8. 'i' → logprob: -7.500457286834717
    9. ' i' → logprob: -8.000457763671875
    10. '  
' → logprob: -8.375457763671875

Token 325: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07160738855600357
    2. 'while' → logprob: -3.5716073513031006
    3. '```' → logprob: -3.8216073513031006
    4. ' while' → logprob: -4.44660758972168
    5. 'i' → logprob: -5.82160758972168
    6. '<|end|>' → logprob: -6.44660758972168
    7. '       ' → logprob: -6.69660758972168
    8. '               ' → logprob: -7.57160758972168
    9. ' i' → logprob: -8.19660758972168
    10. '          ' → logprob: -8.57160758972168

Token 326: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12674129009246826
    2. '           ' → logprob: -2.501741409301758
    3. ' while' → logprob: -3.501741409301758
    4. '```' → logprob: -5.126741409301758
    5. 'if' (adapté à ' if') → logprob: -7.876741409301758
    6. 'i' → logprob: -7.876741409301758
    7. '``' → logprob: -10.001741409301758
    8. '            
' → logprob: -10.126741409301758
    9. '            ' → logprob: -10.501741409301758
    10. '       ' → logprob: -10.626741409301758

Token 327: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47408220171928406
    2. ' i' → logprob: -0.9740822315216064
    3. '   ' → logprob: -12.599081993103027
    4. ' ' → logprob: -14.099081993103027
    5. ' ' → logprob: -15.599081993103027
    6. '	i' → logprob: -15.599081993103027
    7. '  ' → logprob: -15.724081993103027
    8. '    ' → logprob: -16.224082946777344
    9. '(i' → logprob: -16.349082946777344
    10. '     ' → logprob: -16.849082946777344

Token 328: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.615803599357605
    2. ' <' → logprob: -0.990803599357605
    3. '<' → logprob: -2.4908037185668945
    4. '==' → logprob: -5.2408037185668945
    5. ' ' → logprob: -8.490803718566895
    6. '==-' → logprob: -8.990803718566895
    7. '=' → logprob: -11.490803718566895
    8. ' ' → logprob: -11.490803718566895
    9. '<|end|>' → logprob: -11.740803718566895
    10. ' =' → logprob: -12.615803718566895

Token 329: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009757505729794502
    2. ' ' → logprob: -4.6347575187683105
    3. '=' → logprob: -13.509757041931152
    4. '   ' → logprob: -16.63475799560547
    5. '1' → logprob: -17.50975799560547
    6. '```' → logprob: -17.88475799560547
    7. ' =' → logprob: -18.13475799560547
    8. '  ' → logprob: -18.13475799560547
    9. '۰' → logprob: -18.88475799560547
    10. '       ' → logprob: -18.88475799560547

Token 330: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.1557283111615106e-05
    2. ' ' → logprob: -10.125041961669922
    3. '=' → logprob: -13.500041961669922
    4. '
' → logprob: -17.500041961669922
    5. '۰' → logprob: -17.750041961669922
    6. '```' → logprob: -17.750041961669922
    7. '   ' → logprob: -18.312541961669922
    8. ' =' → logprob: -18.562541961669922
    9. '  ' → logprob: -19.062541961669922
    10. '1' → logprob: -19.125041961669922

Token 331: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.566370964050293
    2. '               ' → logprob: -1.191370964050293
    3. ':' → logprob: -2.066370964050293
    4. '           ' → logprob: -6.316370964050293
    5. ':return' → logprob: -10.316370964050293
    6. '       ' → logprob: -10.441370964050293
    7. 'continue' → logprob: -10.566370964050293
    8. ' continue' → logprob: -10.941370964050293
    9. '                   ' → logprob: -11.566370964050293
    10. ':

' → logprob: -11.816370964050293

Token 332: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008798216469585896
    2. 'continue' → logprob: -5.133798122406006
    3. ' continue' → logprob: -6.133798122406006
    4. '           ' → logprob: -7.758798122406006
    5. 'cursor' → logprob: -8.508798599243164
    6. ' cursor' → logprob: -10.008798599243164
    7. '   ' → logprob: -12.383798599243164
    8. '       ' → logprob: -12.383798599243164
    9. '```' → logprob: -12.383798599243164
    10. '                   ' → logprob: -12.508798599243164

Token 333: ' cursor' (ID: 14944)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.17813093960285187
    2. '               ' → logprob: -2.178130865097046
    3. ' continue' → logprob: -3.178130865097046
    4. 'cursor' (adapté à ' cursor') → logprob: -4.928131103515625
    5. '                   ' → logprob: -7.678131103515625
    6. ' cursor' → logprob: -8.303131103515625
    7. '           ' → logprob: -9.053131103515625
    8. '   ' → logprob: -9.678131103515625
    9. '       ' → logprob: -9.928131103515625
    10. '```' → logprob: -11.178131103515625

Token 334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20469947159290314
    2. ' =' → logprob: -1.7046995162963867
    3. ' -=' → logprob: -5.954699516296387
    4. '-=' → logprob: -7.454699516296387
    5. ' +=' → logprob: -9.954699516296387
    6. '+=' → logprob: -10.329699516296387
    7. 'continue' → logprob: -11.079699516296387
    8. ' ' → logprob: -12.204699516296387
    9. ' continue' → logprob: -12.954699516296387
    10. '               ' → logprob: -13.079699516296387

Token 335: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016279291594401002
    2. ' ' → logprob: -6.5016279220581055
    3. 'len' → logprob: -9.001627922058105
    4. ' len' → logprob: -13.751627922058105
    5. '   ' → logprob: -14.626627922058105
    6. 'cursor' → logprob: -15.251627922058105
    7. 'i' → logprob: -15.751627922058105
    8. '  ' → logprob: -16.689128875732422
    9. '00' → logprob: -16.876628875732422
    10. '1' → logprob: -17.064128875732422

Token 336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002158146962756291
    2. ' ' → logprob: -8.875215530395508
    3. 'len' → logprob: -9.500215530395508
    4. 'cursor' → logprob: -14.625215530395508
    5. ' len' → logprob: -15.250215530395508
    6. '   ' → logprob: -16.187715530395508
    7. 'n' → logprob: -16.750215530395508
    8. 'i' → logprob: -16.812715530395508
    9. '00' → logprob: -16.937715530395508
    10. '  ' → logprob: -17.375215530395508

Token 337: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005478725302964449
    2. '           ' → logprob: -5.255478858947754
    3. 'continue' → logprob: -9.630478858947754
    4. ' continue' → logprob: -10.130478858947754
    5. '```' → logprob: -10.130478858947754
    6. '<|end|>' → logprob: -10.630478858947754
    7. '                   ' → logprob: -11.130478858947754
    8. '
' → logprob: -11.255478858947754
    9. '       ' → logprob: -11.255478858947754
    10. '              ' → logprob: -12.005478858947754

Token 338: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01124198455363512
    2. '           ' → logprob: -4.511241912841797
    3. 'continue' → logprob: -8.886241912841797
    4. ' continue' → logprob: -10.261241912841797
    5. '       ' → logprob: -11.761241912841797
    6. '```' → logprob: -12.261241912841797
    7. '              ' → logprob: -13.261241912841797
    8. 'else' → logprob: -13.761241912841797
    9. '                   ' → logprob: -14.011241912841797
    10. '   ' → logprob: -14.511241912841797

Token 339: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.06828995048999786
    2. ' continue' → logprob: -2.8182899951934814
    3. '               ' → logprob: -5.068289756774902
    4. '	continue' → logprob: -12.193289756774902
    5. '           ' → logprob: -13.068289756774902
    6. ' ' → logprob: -14.193289756774902
    7. '                   ' → logprob: -14.693289756774902
    8. '   ' → logprob: -15.193289756774902
    9. '       ' → logprob: -15.693289756774902
    10. 'contin' → logprob: -16.06829071044922

Token 340: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005171970464289188
    2. 'while' → logprob: -5.505171775817871
    3. '```' → logprob: -7.380171775817871
    4. ' while' → logprob: -9.005171775817871
    5. '
' → logprob: -9.130171775817871
    6. '            
' → logprob: -9.630171775817871
    7. 'i' → logprob: -9.755171775817871
    8. '#' → logprob: -9.880171775817871
    9. '          ' → logprob: -11.255171775817871
    10. '       ' → logprob: -11.755171775817871

Token 341: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015264262445271015
    2. '```' → logprob: -4.26526403427124
    3. 'while' → logprob: -7.26526403427124
    4. '          ' → logprob: -8.640264511108398
    5. 'i' → logprob: -9.640264511108398
    6. ' while' → logprob: -10.140264511108398
    7. '``' → logprob: -10.515264511108398
    8. '            
' → logprob: -10.890264511108398
    9. '       ' → logprob: -11.015264511108398
    10. '   ' → logprob: -11.390264511108398

Token 342: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2916816473007202
    2. '           ' → logprob: -1.4166816473007202
    3. '#' (adapté à ' #') → logprob: -5.16668176651001
    4. '```' → logprob: -6.04168176651001
    5. 'i' → logprob: -6.54168176651001
    6. ' while' → logprob: -7.91668176651001
    7. 'j' → logprob: -8.291681289672852
    8. '``' → logprob: -8.791681289672852
    9. '            
' → logprob: -10.041681289672852
    10. '       ' → logprob: -10.166681289672852

Token 343: ' now' (ID: 1954)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.503571629524231
    2. 'while' → logprob: -1.003571629524231
    3. '           ' → logprob: -3.7535715103149414
    4. 'j' → logprob: -5.378571510314941
    5. 'start' → logprob: -7.378571510314941
    6. 'end' → logprob: -8.253571510314941
    7. '       ' → logprob: -10.628571510314941
    8. ' #' → logprob: -10.628571510314941
    9. '```' → logprob: -10.878571510314941
    10. ' while' → logprob: -11.003571510314941

Token 344: ' i' (ID: 575)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6052530407905579
    2. ' while' → logprob: -1.480252981185913
    3. 'j' → logprob: -1.980252981185913
    4. ' j' → logprob: -3.230252981185913
    5. '#' → logprob: -3.355252981185913
    6. ' #' → logprob: -5.105253219604492
    7. 'i' → logprob: -5.730253219604492
    8. '           ' → logprob: -6.355253219604492
    9. ' i' → logprob: -6.605253219604492
    10. ' ' → logprob: -8.230253219604492

Token 345: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8931971788406372
    2. '>=' → logprob: -1.2681971788406372
    3. ' is' → logprob: -2.1431970596313477
    4. 'is' → logprob: -2.5181970596313477
    5. ' =' → logprob: -2.6431970596313477
    6. ' >=' → logprob: -4.518197059631348
    7. '-=' → logprob: -4.768197059631348
    8. ' -=' → logprob: -4.768197059631348
    9. ' points' → logprob: -6.018197059631348
    10. ' marks' → logprob: -6.893197059631348

Token 346: ' last' (ID: 2174)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -1.041702151298523
    2. ' end' → logprob: -1.666702151298523
    3. 'i' → logprob: -1.916702151298523
    4. ' the' → logprob: -2.0417022705078125
    5. 'the' → logprob: -2.5417022705078125
    6. 'start' → logprob: -2.6667022705078125
    7. ' start' → logprob: -4.7917022705078125
    8. 'begin' → logprob: -5.1667022705078125
    9. ' i' → logprob: -5.2917022705078125
    10. ' beginning' → logprob: -5.5417022705078125

Token 347: ' char' (ID: 1826)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.21814168989658356
    2. ' non' → logprob: -1.7181416749954224
    3. 'character' → logprob: -5.218141555786133
    4. ' character' → logprob: -5.468141555786133
    5. 'i' → logprob: -5.718141555786133
    6. 'word' → logprob: -6.593141555786133
    7. ' word' → logprob: -7.343141555786133
    8. '_non' → logprob: -7.468141555786133
    9. 'index' → logprob: -7.718141555786133
    10. ' i' → logprob: -8.468141555786133

Token 348: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6555761694908142
    2. ' of' → logprob: -0.7805761694908142
    3. 'of' → logprob: -4.780576229095459
    4. ' =' → logprob: -5.405576229095459
    5. ' not' → logprob: -6.405576229095459
    6. '               ' → logprob: -6.405576229095459
    7. '=' → logprob: -6.655576229095459
    8. 'while' → logprob: -7.155576229095459
    9. '       ' → logprob: -7.280576229095459
    10. 'not' → logprob: -7.530576229095459

Token 349: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.46495023369789124
    2. 'a' → logprob: -1.3399502038955688
    3. 'left' → logprob: -2.7149503231048584
    4. ' a' → logprob: -3.9649503231048584
    5. ' word' → logprob: -4.339950084686279
    6. 'right' → logprob: -5.089950084686279
    7. 'the' → logprob: -6.089950084686279
    8. ' left' → logprob: -6.214950084686279
    9. 'last' → logprob: -7.839950084686279
    10. ' right' → logprob: -7.839950084686279

Token 350: ' before' (ID: 2254)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030661222990602255
    2. 'while' → logprob: -6.128066062927246
    3. ' while' → logprob: -8.128066062927246
    4. ',' → logprob: -8.128066062927246
    5. '            
' → logprob: -8.878066062927246
    6. 'i' → logprob: -9.878066062927246
    7. '```' → logprob: -10.628066062927246
    8. '               ' → logprob: -11.253066062927246
    9. '.' → logprob: -11.378066062927246
    10. '       ' → logprob: -11.878066062927246

Token 351: ' cursor' (ID: 14944)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4126177728176117
    2. 'cursor' → logprob: -1.662617802619934
    3. 'left' → logprob: -2.4126176834106445
    4. 'the' → logprob: -4.1626176834106445
    5. ' i' → logprob: -4.1626176834106445
    6. ' cursor' → logprob: -4.6626176834106445
    7. ' the' → logprob: -4.9126176834106445
    8. ' left' → logprob: -5.4126176834106445
    9. ' that' → logprob: -6.6626176834106445
    10. 'text' → logprob: -6.7876176834106445

Token 352: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014750638045370579
    2. '
' → logprob: -5.2647504806518555
    3. 'while' → logprob: -5.6397504806518555
    4. ',' → logprob: -6.5147504806518555
    5. '            
' → logprob: -6.5147504806518555
    6. 'i' → logprob: -6.8897504806518555
    7. ' while' → logprob: -7.5147504806518555
    8. '```' → logprob: -7.5147504806518555
    9. '<|end|>' → logprob: -9.264750480651855
    10. ' i' → logprob: -9.264750480651855

Token 353: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022699423134326935
    2. 'while' → logprob: -4.147699356079102
    3. '```' → logprob: -6.022699356079102
    4. 'i' → logprob: -6.272699356079102
    5. ' while' → logprob: -6.397699356079102
    6. '            
' → logprob: -8.522699356079102
    7. ' i' → logprob: -8.897699356079102
    8. '``' → logprob: -9.022699356079102
    9. '       ' → logprob: -10.147699356079102
    10. '               ' → logprob: -10.522699356079102

Token 354: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07443297654390335
    2. '           ' → logprob: -2.6994330883026123
    3. ' while' → logprob: -5.574432849884033
    4. 'i' → logprob: -7.574432849884033
    5. '   ' → logprob: -10.074433326721191
    6. '       ' → logprob: -10.324433326721191
    7. '```' → logprob: -10.324433326721191
    8. '            
' → logprob: -10.949433326721191
    9. 'j' → logprob: -11.324433326721191
    10. '#' (adapté à ' #') → logprob: -11.574433326721191

Token 355: ' move' (ID: 5275)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00013464801304508
    2. '           ' → logprob: -9.125134468078613
    3. 'j' → logprob: -11.375134468078613
    4. ' while' → logprob: -11.500134468078613
    5. 'i' → logprob: -13.500134468078613
    6. '```' → logprob: -13.875134468078613
    7. '            
' → logprob: -14.375134468078613
    8. '               ' → logprob: -15.125134468078613
    9. 'start' → logprob: -15.375134468078613
    10. '#' → logprob: -15.625134468078613

Token 356: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.019587166607379913
    2. ' i' → logprob: -4.01958703994751
    3. 'while' → logprob: -7.26958703994751
    4. '           ' → logprob: -8.269587516784668
    5. ' while' → logprob: -9.019587516784668
    6. ' backward' → logprob: -9.144587516784668
    7. 'j' → logprob: -9.394587516784668
    8. '               ' → logprob: -9.644587516784668
    9. 'back' → logprob: -10.519587516784668
    10. ' cursor' → logprob: -11.144587516784668

Token 357: ' backward' (ID: 58986)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.6433447003364563
    2. ' -=' → logprob: -0.7683447003364563
    3. 'while' → logprob: -5.393344879150391
    4. ' backward' → logprob: -6.018344879150391
    5. '=' → logprob: -6.268344879150391
    6. '           ' → logprob: -7.893344879150391
    7. '               ' → logprob: -8.01834487915039
    8. ' backwards' → logprob: -8.26834487915039
    9. ' =' → logprob: -8.51834487915039
    10. ' while' → logprob: -9.01834487915039

Token 358: ' to' (ID: 316)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.36533889174461365
    2. '           ' → logprob: -1.365338921546936
    3. ' while' → logprob: -3.3653388023376465
    4. '               ' → logprob: -4.4903388023376465
    5. ' -=' → logprob: -6.4903388023376465
    6. '```' → logprob: -6.6153388023376465
    7. '-=' → logprob: -7.9903388023376465
    8. '       ' → logprob: -8.115339279174805
    9. '	while' → logprob: -8.240339279174805
    10. '   ' → logprob: -8.740339279174805

Token 359: ' beginning' (ID: 10526)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.49739408493042
    2. ' find' → logprob: -1.62239408493042
    3. ' while' → logprob: -2.12239408493042
    4. ' i' → logprob: -2.12239408493042
    5. 'while' → logprob: -2.37239408493042
    6. ' the' → logprob: -2.74739408493042
    7. 'i' → logprob: -2.74739408493042
    8. ' start' → logprob: -3.12239408493042
    9. ' ' → logprob: -3.12239408493042
    10. 'start' → logprob: -4.87239408493042

Token 360: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15999813377857208
    2. 'while' → logprob: -2.6599981784820557
    3. ' of' → logprob: -2.9099981784820557
    4. '               ' → logprob: -4.659997940063477
    5. ' while' → logprob: -4.909997940063477
    6. 'of' → logprob: -5.784997940063477
    7. '```' → logprob: -6.659997940063477
    8. 'i' → logprob: -7.034997940063477
    9. ' i' → logprob: -7.034997940063477
    10. '``' → logprob: -9.534997940063477

Token 361: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.2553829252719879
    2. ' word' → logprob: -2.005383014678955
    3. 'the' → logprob: -3.005383014678955
    4. ' the' → logprob: -3.880383014678955
    5. 'left' → logprob: -4.755383014678955
    6. ' that' → logprob: -5.255383014678955
    7. 'that' → logprob: -5.880383014678955
    8. ' left' → logprob: -6.005383014678955
    9. 'right' → logprob: -6.880383014678955
    10. ' right' → logprob: -8.005382537841797

Token 362: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016939718276262283
    2. '               ' → logprob: -5.016939640045166
    3. 'while' → logprob: -5.141939640045166
    4. ' while' → logprob: -6.141939640045166
    5. '```' → logprob: -6.266939640045166
    6. '            
' → logprob: -9.391940116882324
    7. '
' → logprob: -10.516940116882324
    8. ',' → logprob: -10.641940116882324
    9. '       ' → logprob: -10.766940116882324
    10. '``' → logprob: -11.141940116882324

Token 363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003744263667613268
    2. 'while' → logprob: -5.628744125366211
    3. ' while' → logprob: -9.003744125366211
    4. '```' → logprob: -11.253744125366211
    5. '               ' → logprob: -12.878744125366211
    6. '       ' → logprob: -13.378744125366211
    7. '            
' → logprob: -13.628744125366211
    8. '          ' → logprob: -14.003744125366211
    9. '   ' → logprob: -14.253744125366211
    10. '
' → logprob: -14.378744125366211

Token 364: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2871766686439514
    2. 'while' (adapté à ' while') → logprob: -1.9121766090393066
    3. ' while' → logprob: -2.2871766090393066
    4. '```' → logprob: -9.162177085876465
    5. '               ' → logprob: -9.662177085876465
    6. '   ' → logprob: -10.037177085876465
    7. '       ' → logprob: -10.537177085876465
    8. ' ' → logprob: -11.037177085876465
    9. '	while' → logprob: -11.287177085876465
    10. '``' → logprob: -11.912177085876465

Token 365: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.048589076846838
    2. 'i' → logprob: -3.048588991165161
    3. 'left' → logprob: -14.298588752746582
    4. ' left' → logprob: -14.923588752746582
    5. '   ' → logprob: -15.423588752746582
    6. '	i' → logprob: -15.548588752746582
    7. ' ' → logprob: -15.673588752746582
    8. '(i' → logprob: -17.2985897064209
    9. '    ' → logprob: -17.4235897064209
    10. 'text' → logprob: -17.7985897064209

Token 366: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.1270485371351242
    2. '>=' → logprob: -2.1270484924316406
    3. ' >' → logprob: -9.50204849243164
    4. '>' → logprob: -10.25204849243164
    5. ' ' → logprob: -11.87704849243164
    6. '[' → logprob: -13.37704849243164
    7. '   ' → logprob: -13.87704849243164
    8. '  ' → logprob: -15.25204849243164
    9. '[i' → logprob: -15.50204849243164
    10. ')>=' → logprob: -16.12704849243164

Token 367: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889870554208755
    2. ' ' → logprob: -2.5788986682891846
    3. '1' → logprob: -11.703898429870605
    4. '   ' → logprob: -14.828898429870605
    5. '```' → logprob: -16.203899383544922
    6. '  ' → logprob: -17.328899383544922
    7. ' ' → logprob: -17.453899383544922
    8. '
' → logprob: -17.766399383544922
    9. '           ' → logprob: -17.828899383544922
    10. '       ' → logprob: -17.828899383544922

Token 368: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010334034450352192
    2. ' ' → logprob: -6.876033306121826
    3. '1' → logprob: -14.251033782958984
    4. '   ' → logprob: -17.251033782958984
    5. '```' → logprob: -18.251033782958984
    6. '
' → logprob: -19.251033782958984
    7. '  ' → logprob: -19.438533782958984
    8. '۰' → logprob: -19.688533782958984
    9. ')' → logprob: -20.251033782958984
    10. '00' → logprob: -20.251033782958984

Token 369: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06197844073176384
    2. 'and' → logprob: -2.811978340148926
    3. '           ' → logprob: -11.686978340148926
    4. '               ' → logprob: -13.811978340148926
    5. '       ' → logprob: -15.311978340148926
    6. '   ' → logprob: -15.561978340148926
    7. '```' → logprob: -15.561978340148926
    8. '            ' → logprob: -15.686978340148926
    9. '          ' → logprob: -15.811978340148926
    10. '	and' → logprob: -15.811978340148926

Token 370: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.38695070147514343
    2. ' left' → logprob: -1.1369507312774658
    3. '           ' → logprob: -10.761950492858887
    4. ' not' → logprob: -11.261950492858887
    5. ' lef' → logprob: -11.386950492858887
    6. '   ' → logprob: -11.511950492858887
    7. 'not' → logprob: -11.761950492858887
    8. '	left' → logprob: -12.511950492858887
    9. '    ' → logprob: -13.011950492858887
    10. '            ' → logprob: -13.011950492858887

Token 371: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.688212614681106e-05
    2. '[' → logprob: -11.250017166137695
    3. 'i' → logprob: -13.000017166137695
    4. '[
' → logprob: -14.000017166137695
    5. ' [' → logprob: -14.750017166137695
    6. '
' → logprob: -15.625017166137695
    7. '```' → logprob: -16.375017166137695
    8. '   ' → logprob: -16.500017166137695
    9. ' ' → logprob: -17.250017166137695
    10. 'a' → logprob: -18.500017166137695

Token 372: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3263480067253113
    2. ' !=' → logprob: -1.326348066329956
    3. ']' → logprob: -4.576347827911377
    4. '!='' → logprob: -6.326347827911377
    5. ']!=' → logprob: -7.076347827911377
    6. ' ]' → logprob: -10.701348304748535
    7. ']!='' → logprob: -10.826348304748535
    8. 'is' → logprob: -12.201348304748535
    9. ' not' → logprob: -12.826348304748535
    10. '[' → logprob: -13.076348304748535

Token 373: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.22806788980960846
    2. ' !=' → logprob: -1.6030678749084473
    3. '!='' → logprob: -5.978067874908447
    4. ' not' → logprob: -10.353068351745605
    5. '==' → logprob: -10.603068351745605
    6. 'not' → logprob: -11.353068351745605
    7. 'is' → logprob: -11.603068351745605
    8. '```' → logprob: -11.728068351745605
    9. '[' → logprob: -11.978068351745605
    10. '!="' → logprob: -12.353068351745605

Token 374: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00017827287956606597
    2. ' '' → logprob: -8.750178337097168
    3. '"' → logprob: -10.875178337097168
    4. ''s' → logprob: -14.875178337097168
    5. ' ' → logprob: -15.250178337097168
    6. '`' → logprob: -16.75017738342285
    7. '```' → logprob: -16.75017738342285
    8. '('' → logprob: -16.87517738342285
    9. ''a' → logprob: -17.00017738342285
    10. ')' → logprob: -17.00017738342285

Token 375: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07054360955953598
    2. ' '' → logprob: -2.6955435276031494
    3. ' ' → logprob: -7.4455437660217285
    4. '"' → logprob: -11.82054328918457
    5. ''s' → logprob: -12.19554328918457
    6. ' ')' → logprob: -12.44554328918457
    7. ' "' → logprob: -13.32054328918457
    8. 'space' → logprob: -13.82054328918457
    9. ' ']' → logprob: -14.07054328918457
    10. ' ' → logprob: -14.32054328918457

Token 376: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32618069648742676
    2. '               ' → logprob: -1.5761806964874268
    3. ':' → logprob: -2.7011806964874268
    4. '           ' → logprob: -6.451180458068848
    5. ' and' → logprob: -7.451180458068848
    6. '       ' → logprob: -7.451180458068848
    7. '):
' → logprob: -7.701180458068848
    8. '{
' → logprob: -7.701180458068848
    9. '   ' → logprob: -7.951180458068848
    10. 'i' → logprob: -8.701180458068848

Token 377: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01950077712535858
    2. '           ' → logprob: -4.894500732421875
    3. 'i' → logprob: -5.394500732421875
    4. ' i' → logprob: -5.519500732421875
    5. '       ' → logprob: -6.019500732421875
    6. '   ' → logprob: -7.144500732421875
    7. '```' → logprob: -10.644500732421875
    8. ' ' → logprob: -11.394500732421875
    9. '                   ' → logprob: -11.644500732421875
    10. '	       ' → logprob: -13.144500732421875

Token 378: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.48039907217025757
    2. ' i' → logprob: -0.9803990721702576
    3. '           ' → logprob: -5.355399131774902
    4. '               ' → logprob: -6.605399131774902
    5. '   ' → logprob: -9.105399131774902
    6. '                   ' → logprob: -10.105399131774902
    7. ' ' → logprob: -10.480399131774902
    8. '       ' → logprob: -11.105399131774902
    9. '```' → logprob: -11.355399131774902
    10. ' cursor' → logprob: -11.980399131774902

Token 379: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.011124570854008198
    2. ' -=' → logprob: -4.511124610900879
    3. '-' → logprob: -9.886124610900879
    4. '               ' → logprob: -11.761124610900879
    5. '                   ' → logprob: -11.886124610900879
    6. '>' → logprob: -11.886124610900879
    7. '>=' → logprob: -13.386124610900879
    8. '```' → logprob: -14.011124610900879
    9. '=' → logprob: -14.511124610900879
    10. '   ' → logprob: -14.636124610900879

Token 380: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14268052577972412
    2. ' ' → logprob: -2.0176806449890137
    3. '   ' → logprob: -13.392680168151855
    4. 'i' → logprob: -13.642680168151855
    5. '```' → logprob: -13.767680168151855
    6. '-' → logprob: -14.142680168151855
    7. ' i' → logprob: -15.142680168151855
    8. ')' → logprob: -16.267681121826172
    9. '0' → logprob: -16.580181121826172
    10. '       ' → logprob: -16.705181121826172

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013270224444568157
    2. ' ' → logprob: -6.626327037811279
    3. '0' → logprob: -14.626326560974121
    4. '-' → logprob: -14.751326560974121
    5. '   ' → logprob: -16.126327514648438
    6. 'i' → logprob: -16.501327514648438
    7. '```' → logprob: -17.376327514648438
    8. ')' → logprob: -17.501327514648438
    9. ' -' → logprob: -17.876327514648438
    10. '  ' → logprob: -18.501327514648438

Token 382: '
' (ID: 198)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -1.1664255857467651
    2. '               ' → logprob: -1.2914255857467651
    3. ' cursor' → logprob: -1.4164255857467651
    4. '           ' → logprob: -2.5414257049560547
    5. '
' → logprob: -2.6664257049560547
    6. '```' → logprob: -4.416425704956055
    7. '       ' → logprob: -5.291425704956055
    8. '	cursor' → logprob: -6.666425704956055
    9. '``' → logprob: -7.166425704956055
    10. '(cursor' → logprob: -7.291425704956055

Token 383: '           ' (ID: 352)
  Prédit: ' cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.311706006526947
    2. 'cursor' → logprob: -2.061706066131592
    3. '       ' → logprob: -2.436706066131592
    4. '           ' → logprob: -3.436706066131592
    5. '               ' → logprob: -4.186706066131592
    6. '```' → logprob: -5.936706066131592
    7. '   ' → logprob: -6.436706066131592
    8. '
' → logprob: -7.811706066131592
    9. '	cursor' → logprob: -7.811706066131592
    10. '(cursor' → logprob: -8.936705589294434

Token 384: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' (adapté à ' cursor') → logprob: -0.4180172085762024
    2. ' cursor' → logprob: -1.1680171489715576
    3. '           ' → logprob: -3.7930171489715576
    4. '       ' → logprob: -5.293017387390137
    5. '   ' → logprob: -6.293017387390137
    6. '               ' → logprob: -7.793017387390137
    7. '	cursor' → logprob: -7.793017387390137
    8. '```' → logprob: -8.043017387390137
    9. ' ' → logprob: -10.043017387390137
    10. '
' → logprob: -11.293017387390137

Token 385: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692853808403015
    2. ' =' → logprob: -2.1269285678863525
    3. '+=' → logprob: -15.126928329467773
    4. ' +=' → logprob: -16.251928329467773
    5. '＝' → logprob: -16.501928329467773
    6. '.=' → logprob: -17.501928329467773
    7. '=
' → logprob: -18.001928329467773
    8. ' -=' → logprob: -19.001928329467773
    9. '-=' → logprob: -19.001928329467773
    10. ' =
' → logprob: -19.626928329467773

Token 386: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023245595395565033
    2. ' i' → logprob: -3.7732455730438232
    3. ' ' → logprob: -16.648244857788086
    4. '	i' → logprob: -17.148244857788086
    5. '   ' → logprob: -19.773244857788086
    6. '(i' → logprob: -20.148244857788086
    7. '  ' → logprob: -20.273244857788086
    8. '0' → logprob: -20.773244857788086
    9. ' max' → logprob: -20.773244857788086
    10. 'max' → logprob: -20.898244857788086

Token 387: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519322335720062
    2. '+' → logprob: -1.5019322633743286
    3. ' plus' → logprob: -13.751932144165039
    4. ' ' → logprob: -14.251932144165039
    5. '```' → logprob: -14.376932144165039
    6. '1' → logprob: -15.126932144165039
    7. '＋' → logprob: -15.751932144165039
    8. ' +=' → logprob: -16.25193214416504
    9. ' +
' → logprob: -16.50193214416504
    10. '0' → logprob: -16.87693214416504

Token 388: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -17.375
    4. '<|end|>' → logprob: -20.0
    5. '   ' → logprob: -22.0
    6. '0' → logprob: -22.25
    7. '`' → logprob: -22.5
    8. '۱' → logprob: -22.75
    9. '2' → logprob: -23.3125
    10. '``' → logprob: -23.5625

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -16.625
    4. '<|end|>' → logprob: -20.125
    5. '0' → logprob: -20.75
    6. '2' → logprob: -21.125
    7. '۱' → logprob: -21.1875
    8. '   ' → logprob: -21.25
    9. '`' → logprob: -21.6875
    10. '``' → logprob: -22.0625

Token 390: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0469300746917725
    2. '   ' → logprob: -1.1719300746917725
    3. '<|end|>' → logprob: -1.9219300746917725
    4. 'elif' → logprob: -2.4219300746917725
    5. 'else' → logprob: -3.4219300746917725
    6. ' elif' → logprob: -3.4219300746917725
    7. ' else' → logprob: -3.7969300746917725
    8. 'print' → logprob: -4.921930313110352
    9. '.' → logprob: -6.296930313110352
    10. 'insert' → logprob: -6.546930313110352

Token 392: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2905842959880829
    2. '   ' → logprob: -1.7905843257904053
    3. ' elif' → logprob: -3.0405843257904053
    4. 'elif' (adapté à ' elif') → logprob: -3.5405843257904053
    5. ' else' → logprob: -5.165584087371826
    6. 'else' → logprob: -6.540584087371826
    7. '	elif' → logprob: -7.790584087371826
    8. '<|end|>' → logprob: -7.790584087371826
    9. 'print' → logprob: -8.915584564208984
    10. '    ' → logprob: -9.540584564208984

Token 393: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.07650715857744217
    2. 'cmd' → logprob: -2.826507091522217
    3. '"' → logprob: -4.451507091522217
    4. ' "' → logprob: -6.076507091522217
    5. '(cmd' → logprob: -8.576507568359375
    6. ' command' → logprob: -9.701507568359375
    7. ' text' → logprob: -9.951507568359375
    8. ' '' → logprob: -10.576507568359375
    9. ''' → logprob: -10.701507568359375
    10. ' input' → logprob: -10.826507568359375

Token 394: '.startswith' (ID: 64340)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029573088511824608
    2. '.startswith' → logprob: -3.6545732021331787
    3. '==' → logprob: -6.5295729637146
    4. '[' → logprob: -7.0295729637146
    5. ' =' → logprob: -7.4045729637146
    6. '[:' → logprob: -9.279573440551758
    7. ' .' → logprob: -10.029573440551758
    8. 'startswith' → logprob: -10.404573440551758
    9. ' [:' → logprob: -10.779573440551758
    10. ' =="' → logprob: -10.779573440551758

Token 395: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.532651424407959
    2. '("' → logprob: -1.157651424407959
    3. '(' → logprob: -2.657651424407959
    4. '"' → logprob: -4.282651424407959
    5. ' ("' → logprob: -4.907651424407959
    6. ''' → logprob: -5.407651424407959
    7. ' ('' → logprob: -6.532651424407959
    8. ' (' → logprob: -6.657651424407959
    9. '(
' → logprob: -9.657651901245117
    10. ' "' → logprob: -9.907651901245117

Token 396: 'insert' (ID: 14813)
  Prédit: 'insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.08523265272378922
    2. 'delete' → logprob: -2.960232734680176
    3. 'replace' → logprob: -4.085232734680176
    4. '"' → logprob: -5.960232734680176
    5. 'jump' → logprob: -6.210232734680176
    6. 'add' → logprob: -6.460232734680176
    7. 'move' → logprob: -6.960232734680176
    8. 'paste' → logprob: -7.085232734680176
    9. 'remove' → logprob: -7.335232734680176
    10. 'back' → logprob: -7.710232734680176

Token 397: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.002312503522261977
    2. ' '' → logprob: -6.502312660217285
    3. ' ")' → logprob: -8.252312660217285
    4. '"' → logprob: -8.877312660217285
    5. ' text' → logprob: -9.002312660217285
    6. '"):
' → logprob: -9.752312660217285
    7. '("' → logprob: -9.877312660217285
    8. ''' → logprob: -10.002312660217285
    9. '"):' → logprob: -10.252312660217285
    10. 'text' → logprob: -11.377312660217285

Token 398: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9548178315162659
    2. ' "' → logprob: -1.954817771911621
    3. ':
' → logprob: -2.079817771911621
    4. 'text' → logprob: -2.329817771911621
    5. ' text' → logprob: -2.454817771911621
    6. '"' → logprob: -2.704817771911621
    7. ':' → logprob: -3.829817771911621
    8. '"):
' → logprob: -4.079817771911621
    9. '           ' → logprob: -4.204817771911621
    10. '       ' → logprob: -4.579817771911621

Token 399: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5164465308189392
    2. ' text' → logprob: -1.016446590423584
    3. 'text' → logprob: -3.391446590423584
    4. ' 
' → logprob: -6.641446590423584
    5. ' s' → logprob: -7.016446590423584
    6. ' insert' → logprob: -7.641446590423584
    7. ' data' → logprob: -7.766446590423584
    8. ' content' → logprob: -7.766446590423584
    9. '        ' → logprob: -7.891446590423584
    10. ' new' → logprob: -7.891446590423584

Token 400: ' #' (ID: 1069)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.9869530200958252
    2. 's' → logprob: -1.8619530200958252
    3. 'ch' → logprob: -1.9869530200958252
    4. 'insert' → logprob: -2.111953020095825
    5. 'char' → logprob: -3.111953020095825
    6. 'c' → logprob: -3.111953020095825
    7. ' text' → logprob: -3.361953020095825
    8. ' s' → logprob: -3.611953020095825
    9. ' c' → logprob: -3.861953020095825
    10. '           ' → logprob: -4.361952781677246

Token 401: ' extract' (ID: 13424)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.5564164519309998
    2. 's' → logprob: -2.4314165115356445
    3. 'text' → logprob: -2.6814165115356445
    4. 'to' → logprob: -2.6814165115356445
    5. 'word' → logprob: -2.9314165115356445
    6. 'ins' → logprob: -3.1814165115356445
    7. ' insert' → logprob: -3.9314165115356445
    8. ' s' → logprob: -4.0564165115356445
    9. 'content' → logprob: -4.3064165115356445
    10. 'pos' → logprob: -4.8064165115356445

Token 402: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.597133994102478
    2. 'cmd' → logprob: -0.972133994102478
    3. ' text' → logprob: -2.9721341133117676
    4. ' cmd' → logprob: -3.9721341133117676
    5. 'insert' → logprob: -8.34713363647461
    6. 'char' → logprob: -8.59713363647461
    7. 's' → logprob: -9.09713363647461
    8. 'txt' → logprob: -9.09713363647461
    9. 'word' → logprob: -9.34713363647461
    10. ' s' → logprob: -9.84713363647461

Token 403: ' in' (ID: 306)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.03053794428706169
    2. '_' → logprob: -4.530538082122803
    3. '_text' → logprob: -5.155538082122803
    4. '_insert' → logprob: -5.530538082122803
    5. ' =' → logprob: -5.655538082122803
    6. 'to' → logprob: -5.905538082122803
    7. 'insert' → logprob: -6.530538082122803
    8. '=' → logprob: -7.405538082122803
    9. '_=' → logprob: -8.405537605285645
    10. 'text' → logprob: -8.780537605285645

Token 404: ' quotes' (ID: 22661)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.00872117094695568
    2. ' cmd' → logprob: -4.758721351623535
    3. '(cmd' → logprob: -9.383721351623535
    4. 'text' → logprob: -11.633721351623535
    5. '_cmd' → logprob: -12.383721351623535
    6. 'insert' → logprob: -13.258721351623535
    7. '"' → logprob: -13.633721351623535
    8. ' =' → logprob: -13.883721351623535
    9. '[' → logprob: -14.008721351623535
    10. '=' → logprob: -14.133721351623535

Token 405: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0238826274871826
    2. ' "' → logprob: -1.3988826274871826
    3. '"' → logprob: -1.5238826274871826
    4. '[' → logprob: -2.7738826274871826
    5. '           ' → logprob: -3.3988826274871826
    6. ' text' → logprob: -4.898882865905762
    7. ',' → logprob: -4.898882865905762
    8. '=' → logprob: -5.023882865905762
    9. 'text' → logprob: -5.023882865905762
    10. '("' → logprob: -5.148882865905762

Token 406: '           ' (ID: 352)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16548925638198853
    2. ' "' → logprob: -2.7904891967773438
    3. ' text' → logprob: -3.4154891967773438
    4. 'text' → logprob: -3.6654891967773438
    5. ' =' → logprob: -4.165489196777344
    6. ''' → logprob: -5.290489196777344
    7. '           ' → logprob: -5.790489196777344
    8. ' s' → logprob: -6.915489196777344
    9. '[' → logprob: -6.915489196777344
    10. ''"' → logprob: -6.915489196777344

Token 407: ' idx' (ID: 14016)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.477881669998169
    2. ' s' → logprob: -1.477881669998169
    3. 'quote' → logprob: -1.852881669998169
    4. 'pos' → logprob: -2.477881669998169
    5. 'insert' → logprob: -2.477881669998169
    6. '"' → logprob: -3.102881669998169
    7. 'text' → logprob: -3.352881669998169
    8. 'start' → logprob: -4.10288143157959
    9. ' pos' → logprob: -4.10288143157959
    10. ' quote' → logprob: -4.10288143157959

Token 408: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01442733034491539
    2. '=' → logprob: -4.264427185058594
    3. '_space' → logprob: -9.014427185058594
    4. '_start' → logprob: -10.139427185058594
    5. '_' → logprob: -10.639427185058594
    6. 'space' → logprob: -10.639427185058594
    7. '1' → logprob: -10.889427185058594
    8. ' ' → logprob: -11.639427185058594
    9. '0' → logprob: -11.764427185058594
    10. '_cmd' → logprob: -12.014427185058594

Token 409: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007607458624988794
    2. '=' → logprob: -4.882607460021973
    3. ' ' → logprob: -14.257607460021973
    4. ' =
' → logprob: -15.882607460021973
    5. ',' → logprob: -16.382606506347656
    6. 'cmd' → logprob: -16.507606506347656
    7. 's' → logprob: -17.007606506347656
    8. '=index' → logprob: -17.632606506347656
    9. 'token' → logprob: -17.757606506347656
    10. '=int' → logprob: -17.882606506347656

Token 410: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.029769696295261383
    2. ' cmd' → logprob: -3.5297696590423584
    3. 'len' → logprob: -11.529769897460938
    4. '7' → logprob: -12.279769897460938
    5. '6' → logprob: -13.154769897460938
    6. '9' → logprob: -14.154769897460938
    7. '(cmd' → logprob: -14.404769897460938
    8. '5' → logprob: -15.279769897460938
    9. '	cmd' → logprob: -15.279769897460938
    10. ' len' → logprob: -15.404769897460938

Token 411: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.2023085355758667
    2. '.index' → logprob: -1.7023085355758667
    3. '.' → logprob: -7.327308654785156
    4. ' .' → logprob: -8.577308654785156
    5. 'index' → logprob: -10.702308654785156
    6. 'find' → logprob: -11.702308654785156
    7. '.findall' → logprob: -12.077308654785156
    8. 's' → logprob: -12.702308654785156
    9. ' =' → logprob: -13.202308654785156
    10. '.Index' → logprob: -13.452308654785156

Token 412: '('"' (ID: 79218)
  Prédit: '('"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('"' → logprob: -0.0033325375989079475
    2. '("\"' → logprob: -6.378332614898682
    3. ''"' → logprob: -7.003332614898682
    4. '(' → logprob: -7.878332614898682
    5. '("'' → logprob: -8.503332138061523
    6. '('' → logprob: -9.628332138061523
    7. '"' → logprob: -10.003332138061523
    8. '("' → logprob: -10.628332138061523
    9. '("'"' → logprob: -13.503332138061523
    10. '("""' → logprob: -14.753332138061523

Token 413: '')
' (ID: 2515)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.8177530169487
    2. '"' → logprob: -0.9427530169487
    3. '1' → logprob: -1.9427530765533447
    4. ')' → logprob: -4.067752838134766
    5. '')' → logprob: -4.942752838134766
    6. '")+' → logprob: -7.192752838134766
    7. '0' → logprob: -7.942752838134766
    8. '+' → logprob: -9.442752838134766
    9. '2' → logprob: -9.817752838134766
    10. ''' → logprob: -9.942752838134766

Token 414: '           ' (ID: 352)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5585122108459473
    2. '+' → logprob: -0.9335122108459473
    3. '<|end|>' → logprob: -3.8085122108459473
    4. ' idx' → logprob: -5.308512210845947
    5. 'idx' → logprob: -5.808512210845947
    6. '1' → logprob: -7.058512210845947
    7. '<|end|>' → logprob: -7.308512210845947
    8. '           ' → logprob: -7.558512210845947
    9. '
' → logprob: -7.683512210845947
    10. ')' → logprob: -7.808512210845947

Token 415: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0067345574498176575
    2. ' idx' → logprob: -5.006734371185303
    3. 'if' → logprob: -11.131734848022461
    4. '	idx' → logprob: -12.756734848022461
    5. ' if' → logprob: -14.756734848022461
    6. '_idx' → logprob: -15.006734848022461
    7. '(idx' → logprob: -15.381734848022461
    8. 'i' → logprob: -15.631734848022461
    9. '           ' → logprob: -15.631734848022461
    10. '[idx' → logprob: -16.13173484802246

Token 416: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008749663829803467
    2. '1' → logprob: -4.883749485015869
    3. '0' → logprob: -7.758749485015869
    4. '=' → logprob: -8.133749961853027
    5. ' =' → logprob: -8.883749961853027
    6. 'cmd' → logprob: -9.133749961853027
    7. '(cmd' → logprob: -10.633749961853027
    8. ' ' → logprob: -10.633749961853027
    9. '"' → logprob: -10.883749961853027
    10. '```' → logprob: -11.008749961853027

Token 417: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324547804892063
    2. '=' → logprob: -3.7732455730438232
    3. ' ' → logprob: -18.648244857788086
    4. ' =
' → logprob: -19.273244857788086
    5. ')' → logprob: -19.648244857788086
    6. '=index' → logprob: -21.398244857788086
    7. '=
' → logprob: -21.398244857788086
    8. 'idx' → logprob: -21.523244857788086
    9. ',' → logprob: -21.773244857788086
    10. 'x' → logprob: -22.023244857788086

Token 418: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.004621422383934259
    2. ' cmd' → logprob: -5.379621505737305
    3. 'idx' → logprob: -14.629621505737305
    4. '(cmd' → logprob: -15.129621505737305
    5. '	cmd' → logprob: -15.629621505737305
    6. '.cmd' → logprob: -16.129621505737305
    7. 'len' → logprob: -16.254621505737305
    8. ' ' → logprob: -17.004621505737305
    9. '   ' → logprob: -17.879621505737305
    10. '_cmd' → logprob: -17.879621505737305

Token 419: '.r' (ID: 2951)
  Prédit: '.find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.06867299973964691
    2. '.' → logprob: -3.6936728954315186
    3. 'cmd' → logprob: -3.9436728954315186
    4. 'find' → logprob: -4.443673133850098
    5. 'idx' → logprob: -5.568673133850098
    6. '.r' → logprob: -5.818673133850098
    7. ' .' → logprob: -6.818673133850098
    8. '(cmd' → logprob: -7.318673133850098
    9. 'r' → logprob: -7.693673133850098
    10. '.cmd' → logprob: -7.818673133850098

Token 420: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0655733197927475
    2. 'index' → logprob: -2.815573215484619
    3. 'idx' → logprob: -6.065573215484619
    4. 'ind' → logprob: -6.690573215484619
    5. 'indx' → logprob: -11.565573692321777
    6. 'ex' → logprob: -12.190573692321777
    7. 'ound' → logprob: -12.940573692321777
    8. 'un' → logprob: -13.065573692321777
    9. '```' → logprob: -13.190573692321777
    10. 'inde' → logprob: -13.315573692321777

Token 421: '('"' (ID: 79218)
  Prédit: '('"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('"' → logprob: -0.00014656837447546422
    2. ''"' → logprob: -9.000146865844727
    3. '(' → logprob: -10.750146865844727
    4. '("\"' → logprob: -13.750146865844727
    5. '"' → logprob: -15.625146865844727
    6. '('' → logprob: -15.750146865844727
    7. '(
' → logprob: -16.625146865844727
    8. '("' → logprob: -17.125146865844727
    9. '+'"' → logprob: -17.125146865844727
    10. ' '"' → logprob: -17.375146865844727

Token 422: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7190390229225159
    2. '")' → logprob: -0.7190390229225159
    3. ')
' → logprob: -3.969038963317871
    4. '")
' → logprob: -5.844038963317871
    5. '')' → logprob: -6.344038963317871
    6. '"' → logprob: -6.344038963317871
    7. '')
' → logprob: -8.719038963317871
    8. ')+' → logprob: -10.469038963317871
    9. '">' → logprob: -11.594038963317871
    10. ' ")' → logprob: -11.594038963317871

Token 423: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06891670823097229
    2. ' text' → logprob: -3.6939167976379395
    3. ' if' → logprob: -4.3189167976379395
    4. 'insert' → logprob: -4.9439167976379395
    5. ' new' → logprob: -5.1939167976379395
    6. ' insert' → logprob: -5.3189167976379395
    7. 'text' → logprob: -5.9439167976379395
    8. ' inserted' → logprob: -6.1939167976379395
    9. '+' → logprob: -6.9439167976379395
    10. ' 
' → logprob: -7.0689167976379395

Token 424: ' ins' (ID: 2215)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.3999551832675934
    2. ' insert' → logprob: -2.3999552726745605
    3. ' inserted' → logprob: -2.5249552726745605
    4. '           ' → logprob: -3.0249552726745605
    5. ' new' → logprob: -3.5249552726745605
    6. 'text' → logprob: -3.7749552726745605
    7. 'new' → logprob: -3.7749552726745605
    8. ' text' → logprob: -3.8999552726745605
    9. ' to' → logprob: -5.7749552726745605
    10. 'ins' (adapté à ' ins') → logprob: -5.7749552726745605

Token 425: '_text' (ID: 9118)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.003771577961742878
    2. '_text' → logprob: -5.753771781921387
    3. ' =' → logprob: -8.628771781921387
    4. 'text' → logprob: -8.753771781921387
    5. 't' → logprob: -9.253771781921387
    6. '_' → logprob: -9.878771781921387
    7. 'e' → logprob: -10.378771781921387
    8. '=' → logprob: -11.003771781921387
    9. 'er' → logprob: -11.003771781921387
    10. ' ert' → logprob: -11.253771781921387

Token 426: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967797577381134
    2. ' =' → logprob: -2.8119678497314453
    3. '=
' → logprob: -16.936967849731445
    4. '=

' → logprob: -17.061967849731445
    5. '   ' → logprob: -17.436967849731445
    6. ' ' → logprob: -17.436967849731445
    7. 's' → logprob: -17.686967849731445
    8. ' =
' → logprob: -18.186967849731445
    9. '.=' → logprob: -18.686967849731445
    10. '＝' → logprob: -18.686967849731445

Token 427: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.038042064756155014
    2. ' cmd' → logprob: -3.2880420684814453
    3. '(cmd' → logprob: -14.913042068481445
    4. '	cmd' → logprob: -15.413042068481445
    5. '.cmd' → logprob: -16.788042068481445
    6. '_cmd' → logprob: -18.788042068481445
    7. 'command' → logprob: -18.913042068481445
    8. ' ' → logprob: -19.163042068481445
    9. '```' → logprob: -20.288042068481445
    10. '   ' → logprob: -20.913042068481445

Token 428: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.861651490908116e-05
    2. '[' → logprob: -9.875068664550781
    3. 'idx' → logprob: -11.375068664550781
    4. '[
' → logprob: -12.375068664550781
    5. '[(' → logprob: -15.250068664550781
    6. '(idx' → logprob: -15.250068664550781
    7. ' idx' → logprob: -15.500068664550781
    8. ' [' → logprob: -15.625068664550781
    9. '   ' → logprob: -15.625068664550781
    10. '[int' → logprob: -15.875068664550781

Token 429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030042731668800116
    2. '2' → logprob: -8.250300407409668
    3. '(idx' → logprob: -11.125300407409668
    4. '+' → logprob: -11.750300407409668
    5. '[idx' → logprob: -12.000300407409668
    6. ' ' → logprob: -12.250300407409668
    7. 'idx' → logprob: -13.375300407409668
    8. '```' → logprob: -14.000300407409668
    9. '(' → logprob: -14.125300407409668
    10. ' +' → logprob: -15.500300407409668

Token 430: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009171743295155466
    2. ' +' → logprob: -7.000916957855225
    3. '+"' → logprob: -12.625917434692383
    4. '1' → logprob: -13.750917434692383
    5. '"' → logprob: -14.875917434692383
    6. '+'"' → logprob: -15.000917434692383
    7. '+"]' → logprob: -15.500917434692383
    8. '"+' → logprob: -15.750917434692383
    9. '+
' → logprob: -16.375917434692383
    10. ']+' → logprob: -16.625917434692383

Token 431: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '0' → logprob: -16.625
    4. '```' → logprob: -19.5
    5. '   ' → logprob: -20.125
    6. '2' → logprob: -21.0
    7. 'len' → logprob: -21.0
    8. '
' → logprob: -21.25
    9. '+' → logprob: -22.125
    10. '-' → logprob: -22.25

Token 432: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.6656825866666622e-05
    2. 'idx' → logprob: -10.62502670288086
    3. ' :' → logprob: -13.12502670288086
    4. ' idx' → logprob: -15.25002670288086
    5. ':i' → logprob: -17.00002670288086
    6. ',' → logprob: -17.00002670288086
    7. ':-' → logprob: -17.50002670288086
    8. '	idx' → logprob: -17.62502670288086
    9. ':]' → logprob: -18.00002670288086
    10. '[idx' → logprob: -18.12502670288086

Token 433: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -4.842555426876061e-06
    2. ' idx' → logprob: -12.250004768371582
    3. '	idx' → logprob: -19.5000057220459
    4. '
' → logprob: -20.1250057220459
    5. '   ' → logprob: -20.3750057220459
    6. '(idx' → logprob: -20.6250057220459
    7. ' ' → logprob: -21.7500057220459
    8. '[idx' → logprob: -21.8750057220459
    9. '_idx' → logprob: -22.7500057220459
    10. ']' → logprob: -23.0000057220459

Token 434: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '۲' → logprob: -17.875
    3. '```' → logprob: -18.75
    4. ' ' → logprob: -18.75
    5. 'x' → logprob: -18.875
    6. '
' → logprob: -19.25
    7. '२' → logprob: -19.5
    8. 'ex' → logprob: -19.5625
    9. '-' → logprob: -19.875
    10. '₂' → logprob: -19.875

Token 435: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029810426756739616
    2. ']
' → logprob: -3.5298104286193848
    3. ' ]' → logprob: -10.279809951782227
    4. ']
' → logprob: -11.404809951782227
    5. ']+' → logprob: -12.029809951782227
    6. ']

' → logprob: -12.529809951782227
    7. '           ' → logprob: -13.779809951782227
    8. ' ]
' → logprob: -13.779809951782227
    9. '+' → logprob: -13.904809951782227
    10. '"]' → logprob: -14.904809951782227

Token 436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019941316917538643
    2. ' text' → logprob: -4.644941329956055
    3. 'text' → logprob: -5.019941329956055
    4. '   ' → logprob: -6.269941329956055
    5. '       ' → logprob: -6.894941329956055
    6. '            
' → logprob: -8.769941329956055
    7. '<|end|>' → logprob: -9.144941329956055
    8. ',' → logprob: -9.644941329956055
    9. '	       ' → logprob: -10.269941329956055
    10. '
' → logprob: -10.394941329956055

Token 437: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' (adapté à ' text') → logprob: -0.00014418430509977043
    2. 'left' → logprob: -9.625144004821777
    3. ' text' → logprob: -9.750144004821777
    4. '           ' → logprob: -11.000144004821777
    5. 'before' → logprob: -12.875144004821777
    6. 'new' → logprob: -14.750144004821777
    7. '   ' → logprob: -16.250144958496094
    8. 'txt' → logprob: -17.500144958496094
    9. '       ' → logprob: -17.625144958496094
    10. 'right' → logprob: -17.750144958496094

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196869537234306
    2. ' =' → logprob: -2.8119688034057617
    3. '=text' → logprob: -14.311968803405762
    4. 'before' → logprob: -16.061967849731445
    5. '=cut' → logprob: -16.561967849731445
    6. '＝' → logprob: -16.811967849731445
    7. '_before' → logprob: -17.061967849731445
    8. '[:' → logprob: -17.436967849731445
    9. 'Before' → logprob: -17.686967849731445
    10. '```' → logprob: -18.061967849731445

Token 439: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.2519325315952301
    2. ' text' → logprob: -1.5019325017929077
    3. '   ' → logprob: -13.001932144165039
    4. ' ' → logprob: -14.876932144165039
    5. '	text' → logprob: -14.876932144165039
    6. '(text' → logprob: -15.751932144165039
    7. '{text' → logprob: -15.876932144165039
    8. '"text' → logprob: -17.00193214416504
    9. '  ' → logprob: -17.25193214416504
    10. 'te' → logprob: -18.00193214416504

Token 440: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.25
    3. ' [:' → logprob: -17.375
    4. '[
' → logprob: -18.75
    5. '[:]' → logprob: -18.75
    6. '
' → logprob: -20.125
    7. '   ' → logprob: -21.0
    8. '=' → logprob: -21.0
    9. ':' → logprob: -21.125
    10. ' ' → logprob: -21.125

Token 441: 'cursor' (ID: 34222)
  Prédit: 'cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -1.2664456789934775e-06
    2. ' cursor' → logprob: -13.625000953674316
    3. '	cursor' → logprob: -18.875001907348633
    4. '(cursor' → logprob: -19.250001907348633
    5. '.cursor' → logprob: -19.875001907348633
    6. '
' → logprob: -20.625001907348633
    7. '_cursor' → logprob: -20.875001907348633
    8. '   ' → logprob: -21.125001907348633
    9. '```' → logprob: -21.375001907348633
    10. 'ursor' → logprob: -21.500001907348633

Token 442: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7357458472251892
    2. ']' → logprob: -0.7357458472251892
    3. ' +' → logprob: -3.235745906829834
    4. ']+' → logprob: -6.110745906829834
    5. ' ]' → logprob: -8.860745429992676
    6. ')' → logprob: -12.235745429992676
    7. '+]' → logprob: -12.610745429992676
    8. '>' → logprob: -13.735745429992676
    9. '}' → logprob: -14.360745429992676
    10. ' ' → logprob: -14.860745429992676

Token 443: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022422909736633
    2. ' +' → logprob: -1.910224199295044
    3. '＋' → logprob: -18.28522491455078
    4. '   ' → logprob: -18.41022491455078
    5. ' ' → logprob: -18.41022491455078
    6. '+"' → logprob: -18.66022491455078
    7. '```' → logprob: -18.66022491455078
    8. '+i' → logprob: -18.91022491455078
    9. '+\' → logprob: -19.03522491455078
    10. '+t' → logprob: -19.03522491455078

Token 444: ' ins' (ID: 2215)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.008615042082965374
    2. ' ins' → logprob: -4.758615016937256
    3. '(ins' → logprob: -14.883615493774414
    4. 'insert' → logprob: -16.883615493774414
    5. ' ' → logprob: -17.633615493774414
    6. ''ins' → logprob: -17.758615493774414
    7. '
' → logprob: -18.133615493774414
    8. 'inst' → logprob: -18.383615493774414
    9. '_ins' → logprob: -18.633615493774414
    10. 'Ins' → logprob: -18.883615493774414

Token 445: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -2.093505099765025e-05
    2. 'ert' → logprob: -10.875020980834961
    3. 'text' → logprob: -13.500020980834961
    4. 'sert' → logprob: -15.250020980834961
    5. 's' → logprob: -16.37502098083496
    6. '_TEXT' → logprob: -16.37502098083496
    7. '_txt' → logprob: -17.00002098083496
    8. '_Text' → logprob: -17.87502098083496
    9. '_' → logprob: -18.25002098083496
    10. 'ent' → logprob: -18.62502098083496

Token 446: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.474077969789505
    2. ' +' → logprob: -0.9740779399871826
    3. 'cursor' → logprob: -14.974078178405762
    4. '+c' → logprob: -15.224078178405762
    5. 'text' → logprob: -15.849078178405762
    6. '(cursor' → logprob: -17.099077224731445
    7. '[' → logprob: -17.224077224731445
    8. '+\' → logprob: -17.349077224731445
    9. ' cursor' → logprob: -17.349077224731445
    10. '```' → logprob: -17.349077224731445

Token 447: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.12692810595035553
    2. ' text' → logprob: -2.1269280910491943
    3. ' ' → logprob: -17.876928329467773
    4. '	text' → logprob: -18.251928329467773
    5. '"text' → logprob: -18.751928329467773
    6. '   ' → logprob: -18.876928329467773
    7. '.text' → logprob: -19.501928329467773
    8. '(text' → logprob: -19.751928329467773
    9. '_text' → logprob: -20.126928329467773
    10. '{text' → logprob: -20.251928329467773

Token 448: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: 0.0
    2. 'cursor' → logprob: -16.75
    3. '```' → logprob: -17.75
    4. '   ' → logprob: -17.875
    5. ' [' → logprob: -18.375
    6. '[:' → logprob: -18.5
    7. '[' → logprob: -19.0
    8. '[cur' → logprob: -19.0
    9. '[
' → logprob: -19.75
    10. ' ' → logprob: -19.75

Token 449: 'ursor' (ID: 6519)
  Prédit: 'ursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursor' → logprob: -3.047134305234067e-05
    2. 'cursor' → logprob: -11.375030517578125
    3. 'URSOR' → logprob: -11.750030517578125
    4. 'urs' → logprob: -11.875030517578125
    5. 'ursors' → logprob: -13.000030517578125
    6. 'ur' → logprob: -14.625030517578125
    7. 'urso' → logprob: -15.000030517578125
    8. 'rs' → logprob: -15.250030517578125
    9. '```' → logprob: -16.125030517578125
    10. 'urse' → logprob: -16.375030517578125

Token 450: ':]
' (ID: 61598)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02660401724278927
    2. ':]' → logprob: -3.776603937149048
    3. ']
' → logprob: -5.901604175567627
    4. ':]
' → logprob: -7.526604175567627
    5. ' ]' → logprob: -10.651603698730469
    6. ']+' → logprob: -11.026603698730469
    7. ':' → logprob: -11.526603698730469
    8. 'cursor' → logprob: -12.026603698730469
    9. '+]' → logprob: -12.151603698730469
    10. ' :]' → logprob: -12.276603698730469

Token 451: '           ' (ID: 352)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.3428119719028473
    2. ' cursor' → logprob: -1.342811942100525
    3. '           ' → logprob: -3.5928120613098145
    4. '   ' → logprob: -6.8428120613098145
    5. '	cursor' → logprob: -7.9678120613098145
    6. '       ' → logprob: -9.592811584472656
    7. '(cursor' → logprob: -9.967811584472656
    8. '```' → logprob: -10.342811584472656
    9. '               ' → logprob: -10.967811584472656
    10. '.cursor' → logprob: -12.092811584472656

Token 452: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' (adapté à ' cursor') → logprob: -0.023286353796720505
    2. ' cursor' → logprob: -3.7732863426208496
    3. '           ' → logprob: -10.148286819458008
    4. '	cursor' → logprob: -13.773286819458008
    5. '   ' → logprob: -14.648286819458008
    6. '       ' → logprob: -16.148286819458008
    7. '(cursor' → logprob: -16.898286819458008
    8. '               ' → logprob: -17.023286819458008
    9. '.cursor' → logprob: -17.398286819458008
    10. '```' → logprob: -17.648286819458008

Token 453: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03804516792297363
    2. ' +=' → logprob: -3.2880451679229736
    3. ']+=' → logprob: -13.788044929504395
    4. '+=(' → logprob: -13.788044929504395
    5. '=' → logprob: -14.163044929504395
    6. '+' → logprob: -14.288044929504395
    7. '+='' → logprob: -16.03804588317871
    8. '```' → logprob: -16.28804588317871
    9. '   ' → logprob: -16.53804588317871
    10. '+="' → logprob: -17.03804588317871

Token 454: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0002613358374219388
    2. ' len' → logprob: -8.250261306762695
    3. '(len' → logprob: -16.500261306762695
    4. '	len' → logprob: -21.500261306762695
    5. '[len' → logprob: -21.625261306762695
    6. '=len' → logprob: -23.000261306762695
    7. 'ins' → logprob: -23.500261306762695
    8. ',len' → logprob: -24.625261306762695
    9. '   ' → logprob: -25.125261306762695
    10. '<len' → logprob: -25.500261306762695

Token 455: '(ins' (ID: 125327)
  Prédit: '(ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ins' → logprob: -1.8624639324116288e-06
    2. 'ins' → logprob: -13.250001907348633
    3. '(' → logprob: -16.750001907348633
    4. '(inst' → logprob: -19.625001907348633
    5. '_ins' → logprob: -20.750001907348633
    6. ' ins' → logprob: -20.750001907348633
    7. ' (' → logprob: -21.125001907348633
    8. '(inv' → logprob: -21.375001907348633
    9. '(ans' → logprob: -21.500001907348633
    10. '(insert' → logprob: -22.000001907348633

Token 456: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -7.822646693966817e-06
    2. 's' → logprob: -12.250007629394531
    3. 'text' → logprob: -13.625007629394531
    4. 'sert' → logprob: -14.000007629394531
    5. '_txt' → logprob: -14.625007629394531
    6. 'st' → logprob: -15.750007629394531
    7. 'Text' → logprob: -16.00000762939453
    8. '_TEXT' → logprob: -16.00000762939453
    9. 'txt' → logprob: -16.87500762939453
    10. 't' → logprob: -17.12500762939453

Token 457: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009072950924746692
    2. '<|end|>' → logprob: -7.2509074211120605
    3. ' )' → logprob: -8.750906944274902
    4. ')
' → logprob: -10.375906944274902
    5. '<|end|>' → logprob: -13.125906944274902
    6. '}' → logprob: -13.375906944274902
    7. '       ' → logprob: -13.875906944274902
    8. '```' → logprob: -14.500906944274902
    9. '   ' → logprob: -14.750906944274902
    10. ')}' → logprob: -15.250906944274902

Token 458: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.19403298199176788
    2. '<|end|>' → logprob: -2.319032907485962
    3. ' elif' → logprob: -2.694032907485962
    4. '       ' → logprob: -5.194033145904541
    5. 'else' → logprob: -6.694033145904541
    6. '	elif' → logprob: -6.819033145904541
    7. '   ' → logprob: -7.069033145904541
    8. '...' → logprob: -7.944033145904541
    9. '```' → logprob: -7.944033145904541
    10. '<|end|>' → logprob: -7.944033145904541

Token 460: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.3132691979408264
    2. ' cmd' → logprob: -1.3132691383361816
    3. '(cmd' → logprob: -12.68826961517334
    4. '	cmd' → logprob: -12.81326961517334
    5. '"' → logprob: -13.81326961517334
    6. '.cmd' → logprob: -15.43826961517334
    7. ' ' → logprob: -15.81326961517334
    8. 'command' → logprob: -16.813268661499023
    9. ' cmds' → logprob: -17.063268661499023
    10. '_cmd' → logprob: -17.188268661499023

Token 461: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020058168098330498
    2. '==' → logprob: -4.2700581550598145
    3. '.startswith' → logprob: -5.1450581550598145
    4. 'startswith' → logprob: -10.520058631896973
    5. '[' → logprob: -11.645058631896973
    6. ' ' → logprob: -12.645058631896973
    7. ' =' → logprob: -13.145058631896973
    8. '=' → logprob: -13.145058631896973
    9. '.endswith' → logprob: -13.270058631896973
    10. '=="' → logprob: -14.270058631896973

Token 462: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0014690342359244823
    2. ' "' → logprob: -6.626469135284424
    3. ''' → logprob: -10.251468658447266
    4. '"text' → logprob: -10.501468658447266
    5. '"user' → logprob: -10.501468658447266
    6. '"display' → logprob: -11.501468658447266
    7. ' ' → logprob: -12.001468658447266
    8. '"time' → logprob: -12.251468658447266
    9. '"value' → logprob: -12.376468658447266
    10. '"log' → logprob: -12.876468658447266

Token 463: 'delete' (ID: 8509)
  Prédit: 'delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.017383353784680367
    2. 'print' → logprob: -4.767383575439453
    3. 'back' → logprob: -5.517383575439453
    4. 'undo' → logprob: -6.767383575439453
    5. 'forward' → logprob: -7.017383575439453
    6. 'cut' → logprob: -7.142383575439453
    7. 'del' → logprob: -7.392383575439453
    8. 'copy' → logprob: -7.767383575439453
    9. 'erase' → logprob: -8.392383575439453
    10. 'output' → logprob: -9.017383575439453

Token 464: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.013658703304827213
    2. 'char' → logprob: -4.51365852355957
    3. '_char' → logprob: -6.01365852355957
    4. ' ' → logprob: -10.63865852355957
    5. '"' → logprob: -10.88865852355957
    6. '	char' → logprob: -11.01365852355957
    7. '-char' → logprob: -11.13865852355957
    8. ' backward' → logprob: -11.26365852355957
    9. ' left' → logprob: -11.38865852355957
    10. ' forward' → logprob: -11.51365852355957

Token 465: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.004701157100498676
    2. '":' → logprob: -5.754701137542725
    3. '           ' → logprob: -6.629701137542725
    4. ':
' → logprob: -9.379701614379883
    5. '       ' → logprob: -10.129701614379883
    6. '":
' → logprob: -10.504701614379883
    7. '"' → logprob: -11.004701614379883
    8. ':' → logprob: -11.129701614379883
    9. '   ' → logprob: -12.129701614379883
    10. '__":
' → logprob: -12.254701614379883

Token 466: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11165373027324677
    2. '           ' → logprob: -2.6116538047790527
    3. 'if' → logprob: -3.4866538047790527
    4. ' if' → logprob: -6.486653804779053
    5. '   ' → logprob: -9.236653327941895
    6. '```' → logprob: -12.111653327941895
    7. '               ' → logprob: -14.361653327941895
    8. '	if' → logprob: -14.486653327941895
    9. '        
' → logprob: -15.236653327941895
    10. '         ' → logprob: -15.236653327941895

Token 467: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007226797170005739
    2. ' if' → logprob: -7.250722885131836
    3. '           ' → logprob: -11.750722885131836
    4. '       ' → logprob: -12.750722885131836
    5. '   ' → logprob: -13.250722885131836
    6. '	if' → logprob: -18.125722885131836
    7. 'If' → logprob: -19.500722885131836
    8. ' ' → logprob: -21.250722885131836
    9. '```' → logprob: -21.375722885131836
    10. '               ' → logprob: -21.500722885131836

Token 468: ' delete' (ID: 6168)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.700132997939363e-05
    2. ' if' → logprob: -11.000017166137695
    3. '           ' → logprob: -15.375017166137695
    4. '
' → logprob: -18.375017166137695
    5. '       ' → logprob: -19.375017166137695
    6. '   ' → logprob: -20.125017166137695
    7. '#' → logprob: -20.750017166137695
    8. '            
' → logprob: -22.750017166137695
    9. 'If' → logprob: -22.875017166137695
    10. '```' → logprob: -23.375017166137695

Token 469: ' char' (ID: 1826)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4743826687335968
    2. 'if' → logprob: -0.9743826389312744
    3. '           ' → logprob: -8.224382400512695
    4. ' text' → logprob: -11.474382400512695
    5. '   ' → logprob: -11.724382400512695
    6. '       ' → logprob: -11.849382400512695
    7. 'text' → logprob: -11.974382400512695
    8. ' ' → logprob: -13.849382400512695
    9. 's' → logprob: -13.974382400512695
    10. '```' → logprob: -14.349382400512695

Token 470: ' right' (ID: 1849)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07124856114387512
    2. 'if' → logprob: -3.6962485313415527
    3. '           ' → logprob: -3.8212485313415527
    4. ' at' → logprob: -3.8212485313415527
    5. '   ' → logprob: -9.821249008178711
    6. 'at' → logprob: -10.196249008178711
    7. '       ' → logprob: -10.821249008178711
    8. '               ' → logprob: -11.196249008178711
    9. '```' → logprob: -12.196249008178711
    10. '	if' → logprob: -12.446249008178711

Token 471: ' next' (ID: 2613)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9280261397361755
    2. ' after' → logprob: -1.1780261993408203
    3. 'after' → logprob: -1.8030261993408203
    4. 'of' → logprob: -2.4280261993408203
    5. ' at' → logprob: -3.4280261993408203
    6. 'at' → logprob: -5.67802619934082
    7. '   ' → logprob: -6.05302619934082
    8. 'if' → logprob: -6.30302619934082
    9. '[' → logprob: -7.05302619934082
    10. 'now' → logprob: -7.42802619934082

Token 472: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.07003124803304672
    2. ' to' → logprob: -2.69503116607666
    3. 't' → logprob: -9.82003116607666
    4. 'o' → logprob: -11.07003116607666
    5. 'cursor' → logprob: -11.69503116607666
    6. '_to' → logprob: -12.19503116607666
    7. 'or' → logprob: -12.69503116607666
    8. ' ' → logprob: -13.32003116607666
    9. 'tocol' → logprob: -13.69503116607666
    10. 'toc' → logprob: -14.07003116607666

Token 473: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.006018737331032753
    2. ' cursor' → logprob: -5.13101863861084
    3. 'text' → logprob: -9.50601863861084
    4. 'the' → logprob: -11.25601863861084
    5. '	cursor' → logprob: -14.00601863861084
    6. '(cursor' → logprob: -14.25601863861084
    7. ' text' → logprob: -15.00601863861084
    8. '_cursor' → logprob: -15.13101863861084
    9. ' the' → logprob: -15.75601863861084
    10. '.cursor' → logprob: -15.75601863861084

Token 474: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024417320266366005
    2. ' if' → logprob: -3.7744174003601074
    3. '       ' → logprob: -7.399417400360107
    4. 'if' → logprob: -7.774417400360107
    5. ':' → logprob: -9.89941692352295
    6. '   ' → logprob: -10.27441692352295
    7. ',' → logprob: -10.77441692352295
    8. ' and' → logprob: -11.39941692352295
    9. '               ' → logprob: -12.14941692352295
    10. ' at' → logprob: -12.27441692352295

Token 475: ' exists' (ID: 13031)
  Prédit: ' cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.6931514739990234
    2. 'cursor' → logprob: -0.6931514739990234
    3. '(cursor' → logprob: -12.943151473999023
    4. '	cursor' → logprob: -13.443151473999023
    5. '_cursor' → logprob: -15.693151473999023
    6. ' ' → logprob: -15.818151473999023
    7. '0' → logprob: -16.318151473999023
    8. '.cursor' → logprob: -17.318151473999023
    9. '```' → logprob: -17.443151473999023
    10. '   ' → logprob: -18.068151473999023

Token 476: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005344517063349485
    2. ' if' → logprob: -5.380344390869141
    3. '       ' → logprob: -7.755344390869141
    4. 'if' → logprob: -8.88034439086914
    5. ' and' → logprob: -9.75534439086914
    6. '<|end|>' → logprob: -10.25534439086914
    7. ':' → logprob: -10.88034439086914
    8. '               ' → logprob: -11.25534439086914
    9. ',' → logprob: -11.38034439086914
    10. '   ' → logprob: -12.50534439086914

Token 477: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14956465363502502
    2. ' if' → logprob: -2.024564743041992
    3. '       ' → logprob: -5.399564743041992
    4. 'if' → logprob: -6.149564743041992
    5. '   ' → logprob: -8.649564743041992
    6. '               ' → logprob: -10.899564743041992
    7. '	       ' → logprob: -12.524564743041992
    8. '	if' → logprob: -12.774564743041992
    9. '```' → logprob: -12.774564743041992
    10. '	   ' → logprob: -13.524564743041992

Token 478: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10248499363660812
    2. ' if' → logprob: -2.352484941482544
    3. '           ' → logprob: -6.102485179901123
    4. '       ' → logprob: -10.352484703063965
    5. '   ' → logprob: -12.102484703063965
    6. '	if' → logprob: -14.227484703063965
    7. 'If' → logprob: -16.10248565673828
    8. '```' → logprob: -16.47748565673828
    9. 'elif' → logprob: -17.10248565673828
    10. '               ' → logprob: -17.10248565673828

Token 479: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.4740777611732483
    2. ' cursor' → logprob: -0.9740777611732483
    3. '(cursor' → logprob: -14.974078178405762
    4. '	cursor' → logprob: -15.099078178405762
    5. '_cursor' → logprob: -16.724077224731445
    6. 'Cursor' → logprob: -17.349077224731445
    7. '   ' → logprob: -17.599077224731445
    8. '.cursor' → logprob: -17.849077224731445
    9. ' ' → logprob: -17.974077224731445
    10. 'c' → logprob: -18.224077224731445

Token 480: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0068000368773937225
    2. '<' → logprob: -5.006800174713135
    3. '<len' → logprob: -9.506799697875977
    4. '<|end|>' → logprob: -11.881799697875977
    5. '<size' → logprob: -13.381799697875977
    6. '<n' → logprob: -14.506799697875977
    7. ' ' → logprob: -14.631799697875977
    8. '<int' → logprob: -15.381799697875977
    9. ')' → logprob: -15.506799697875977
    10. ')<' → logprob: -16.506799697875977

Token 481: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.061968132853507996
    2. ' len' → logprob: -2.8119680881500244
    3. '(len' → logprob: -15.311967849731445
    4. '[len' → logprob: -16.561967849731445
    5. '=len' → logprob: -16.936967849731445
    6. '   ' → logprob: -17.436967849731445
    7. '	len' → logprob: -17.936967849731445
    8. '<len' → logprob: -18.311967849731445
    9. ',len' → logprob: -19.061967849731445
    10. 'length' → logprob: -20.061967849731445

Token 482: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.0004330532974563539
    2. 'text' → logprob: -7.750432968139648
    3. ' text' → logprob: -13.000432968139648
    4. '(' → logprob: -16.87543296813965
    5. '{text' → logprob: -17.87543296813965
    6. '=text' → logprob: -20.12543296813965
    7. '	text' → logprob: -20.25043296813965
    8. ',text' → logprob: -20.62543296813965
    9. '.text' → logprob: -20.75043296813965
    10. ' (' → logprob: -20.75043296813965

Token 483: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3134691119194031
    2. '):
' → logprob: -1.3134691715240479
    3. ')' → logprob: -8.688468933105469
    4. ' ):' → logprob: -11.313468933105469
    5. '):
' → logprob: -12.188468933105469
    6. '):

' → logprob: -12.313468933105469
    7. ' ):
' → logprob: -12.313468933105469
    8. ' and' → logprob: -12.563468933105469
    9. ':' → logprob: -12.563468933105469
    10. '   ' → logprob: -12.938468933105469

Token 484: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3815602660179138
    2. 'text' → logprob: -1.2565603256225586
    3. '       ' → logprob: -4.006560325622559
    4. ' text' → logprob: -4.881560325622559
    5. '           ' → logprob: -5.506560325622559
    6. '   ' → logprob: -6.006560325622559
    7. '{text' → logprob: -8.756560325622559
    8. '	text' → logprob: -9.756560325622559
    9. 'textfield' → logprob: -11.006560325622559
    10. '	       ' → logprob: -11.881560325622559

Token 485: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' (adapté à ' text') → logprob: -0.00010568885772954673
    2. ' text' → logprob: -9.250105857849121
    3. '                   ' → logprob: -12.375105857849121
    4. '               ' → logprob: -12.500105857849121
    5. '   ' → logprob: -13.625105857849121
    6. '           ' → logprob: -15.375105857849121
    7. '{text' → logprob: -16.500104904174805
    8. '	text' → logprob: -16.625104904174805
    9. '"text' → logprob: -17.875104904174805
    10. '.text' → logprob: -18.375104904174805

Token 486: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38691264390945435
    2. '=' → logprob: -1.1369125843048096
    3. '=text' → logprob: -10.13691234588623
    4. '=cut' → logprob: -13.88691234588623
    5. '=
' → logprob: -15.01191234588623
    6. '＝' → logprob: -15.51191234588623
    7. '=c' → logprob: -15.76191234588623
    8. 'text' → logprob: -15.88691234588623
    9. ' =
' → logprob: -16.136913299560547
    10. '           ' → logprob: -16.886913299560547

Token 487: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.12692810595035553
    2. ' text' → logprob: -2.1269280910491943
    3. '	text' → logprob: -18.876928329467773
    4. '{text' → logprob: -19.001928329467773
    5. '   ' → logprob: -19.126928329467773
    6. '"text' → logprob: -19.626928329467773
    7. '(text' → logprob: -19.876928329467773
    8. ' ' → logprob: -20.001928329467773
    9. '.text' → logprob: -21.501928329467773
    10. '_text' → logprob: -21.626928329467773

Token 488: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: 0.0
    2. '[' → logprob: -20.375
    3. ':' → logprob: -20.5
    4. '[:]' → logprob: -21.125
    5. ' [:' → logprob: -21.25
    6. '[:-' → logprob: -21.375
    7. 'text' → logprob: -21.5
    8. '][:' → logprob: -22.125
    9. '
' → logprob: -22.625
    10. 'before' → logprob: -22.875

Token 489: 'cursor' (ID: 34222)
  Prédit: 'cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -1.8624639324116288e-06
    2. ' cursor' → logprob: -13.250001907348633
    3. '	cursor' → logprob: -18.375001907348633
    4. '(cursor' → logprob: -18.500001907348633
    5. '   ' → logprob: -19.625001907348633
    6. '.cursor' → logprob: -20.000001907348633
    7. ' ' → logprob: -21.500001907348633
    8. '       ' → logprob: -22.000001907348633
    9. '_cursor' → logprob: -22.000001907348633
    10. '```' → logprob: -22.500001907348633

Token 490: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0669606551527977
    2. '+' → logprob: -2.816960573196411
    3. ']+' → logprob: -5.31696081161499
    4. ')' → logprob: -10.441960334777832
    5. '}' → logprob: -10.816960334777832
    6. ' +' → logprob: -11.191960334777832
    7. '>' → logprob: -12.566960334777832
    8. '```' → logprob: -12.941960334777832
    9. ' ]' → logprob: -13.816960334777832
    10. '   ' → logprob: -14.316960334777832

Token 491: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003178901970386505
    2. ' +' → logprob: -5.75317907333374
    3. '+
' → logprob: -13.753178596496582
    4. 'text' → logprob: -16.6281795501709
    5. '```' → logprob: -17.0031795501709
    6. ' +
' → logprob: -17.5031795501709
    7. '+c' → logprob: -18.2531795501709
    8. ')' → logprob: -18.6281795501709
    9. '＋' → logprob: -19.2531795501709
    10. '0' → logprob: -20.0031795501709

Token 492: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -2.7610454708337784e-05
    2. ' text' → logprob: -10.500027656555176
    3. '"text' → logprob: -26.75002670288086
    4. '	text' → logprob: -27.00002670288086
    5. '.text' → logprob: -27.50002670288086
    6. 'txt' → logprob: -27.75002670288086
    7. '   ' → logprob: -28.00002670288086
    8. '{text' → logprob: -28.37502670288086
    9. 'tex' → logprob: -28.62502670288086
    10. 'test' → logprob: -28.75002670288086

Token 493: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0007967620622366667
    2. 'text' → logprob: -8.0007963180542
    3. '[text' → logprob: -8.1257963180542
    4. '[' → logprob: -9.0007963180542
    5. 'cursor' → logprob: -11.1257963180542
    6. '```' → logprob: -12.1257963180542
    7. 'c' → logprob: -12.3757963180542
    8. ' text' → logprob: -12.5007963180542
    9. '.text' → logprob: -13.0007963180542
    10. '+' → logprob: -13.3757963180542

Token 494: 'ursor' (ID: 6519)
  Prédit: 'ursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursor' → logprob: -0.4303972125053406
    2. 'cursor' → logprob: -1.0553972721099854
    3. 'or' → logprob: -8.180397033691406
    4. '+' → logprob: -8.305397033691406
    5. '               ' → logprob: -8.305397033691406
    6. '(cursor' → logprob: -8.430397033691406
    7. '.cursor' → logprob: -8.680397033691406
    8. ' cursor' → logprob: -9.180397033691406
    9. 'ors' → logprob: -10.055397033691406
    10. '```' → logprob: -10.055397033691406

Token 495: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001505578518845141
    2. ' +' → logprob: -6.626505374908447
    3. '1' → logprob: -8.626505851745605
    4. '```' → logprob: -16.25150489807129
    5. '()+' → logprob: -17.25150489807129
    6. '[' → logprob: -17.37650489807129
    7. '+c' → logprob: -17.50150489807129
    8. ' ' → logprob: -17.50150489807129
    9. '   ' → logprob: -17.62650489807129
    10. '+
' → logprob: -17.62650489807129

Token 496: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -19.375
    4. '   ' → logprob: -20.625
    5. '+' → logprob: -21.5
    6. '۱' → logprob: -23.125
    7. '１' → logprob: -23.75
    8. '
' → logprob: -23.875
    9. '2' → logprob: -24.125
    10. '  ' → logprob: -24.375

Token 497: ':]
' (ID: 61598)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18150484561920166
    2. ':]' → logprob: -1.8065048456192017
    3. '()]' → logprob: -6.431504726409912
    4. '1' → logprob: -9.93150520324707
    5. ' :]' → logprob: -11.18150520324707
    6. '+]' → logprob: -11.30650520324707
    7. '`]' → logprob: -11.30650520324707
    8. ' ]' → logprob: -11.55650520324707
    9. ')]' → logprob: -11.55650520324707
    10. ':]
' → logprob: -11.80650520324707

Token 498: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 499: ' elif' (ID: 9497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.20141783356666565
    2. ' cmd' → logprob: -1.7014178037643433
    3. '	cmd' → logprob: -13.326417922973633
    4. '(cmd' → logprob: -13.701417922973633
    5. '"' → logprob: -14.201417922973633
    6. 'command' → logprob: -15.201417922973633
    7. ' ' → logprob: -15.201417922973633
    8. 'cursor' → logprob: -15.576417922973633
    9. '.cmd' → logprob: -15.951417922973633
    10. ' cursor' → logprob: -16.826417922973633

Token 501: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023298701271414757
    2. '==' → logprob: -3.773298740386963
    3. '.startswith' → logprob: -10.023298263549805
    4. '[' → logprob: -12.148298263549805
    5. 'startswith' → logprob: -13.773298263549805
    6. '.endswith' → logprob: -14.273298263549805
    7. '=' → logprob: -15.023298263549805
    8. ' ' → logprob: -15.023298263549805
    9. '=="' → logprob: -15.148298263549805
    10. ' =' → logprob: -15.523298263549805

Token 502: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0015106932260096073
    2. ' "' → logprob: -6.5015106201171875
    3. '"display' → logprob: -13.001510620117188
    4. ''' → logprob: -13.126510620117188
    5. ' ' → logprob: -13.626510620117188
    6. '"user' → logprob: -14.501510620117188
    7. '"text' → logprob: -14.501510620117188
    8. '("' → logprob: -14.751510620117188
    9. '"in' → logprob: -15.001510620117188
    10. '"default' → logprob: -15.376510620117188

Token 503: 'delete' (ID: 8509)
  Prédit: 'delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.29497629404067993
    2. 'back' → logprob: -1.9199762344360352
    3. 'print' → logprob: -3.294976234436035
    4. 'forward' → logprob: -3.794976234436035
    5. 'replace' → logprob: -4.294976234436035
    6. 'insert' → logprob: -4.544976234436035
    7. 'end' → logprob: -4.919976234436035
    8. 'move' → logprob: -5.419976234436035
    9. 'undo' → logprob: -6.044976234436035
    10. 'break' → logprob: -6.669976234436035

Token 504: ' word' (ID: 2195)
  Prédit: '_word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.27407923340797424
    2. ' word' → logprob: -1.7740792036056519
    3. '_' → logprob: -3.0240793228149414
    4. 'word' → logprob: -4.024079322814941
    5. ' _' → logprob: -6.149079322814941
    6. '_char' → logprob: -7.774079322814941
    7. 'char' → logprob: -7.899079322814941
    8. ' char' → logprob: -8.149079322814941
    9. ' ' → logprob: -8.649079322814941
    10. '_line' → logprob: -10.024079322814941

Token 505: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.16033197939395905
    2. '":' → logprob: -1.9103319644927979
    3. '":
' → logprob: -9.410331726074219
    4. '"' → logprob: -11.535331726074219
    5. ':
' → logprob: -11.910331726074219
    6. '":

' → logprob: -12.910331726074219
    7. ':' → logprob: -13.285331726074219
    8. '"):
' → logprob: -13.285331726074219
    9. '"]:
' → logprob: -13.785331726074219
    10. '():
' → logprob: -13.910331726074219

Token 506: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04112459346652031
    2. '       ' → logprob: -3.4161245822906494
    3. '#' → logprob: -5.0411248207092285
    4. '   ' → logprob: -7.5411248207092285
    5. ' #' → logprob: -8.91612434387207
    6. '```' → logprob: -8.91612434387207
    7. 'left' → logprob: -9.54112434387207
    8. '
' → logprob: -10.04112434387207
    9. '               ' → logprob: -11.16612434387207
    10. 'if' → logprob: -11.66612434387207

Token 507: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3554518222808838
    2. 'left' → logprob: -1.4804518222808838
    3. '           ' → logprob: -2.980451822280884
    4. 'right' → logprob: -3.980451822280884
    5. 'if' → logprob: -6.480451583862305
    6. '       ' → logprob: -8.230451583862305
    7. '   ' → logprob: -9.230451583862305
    8. ' #' → logprob: -9.230451583862305
    9. ' left' → logprob: -9.230451583862305
    10. '
' → logprob: -10.355451583862305

Token 508: ' delete' (ID: 6168)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5260428786277771
    2. 'left' → logprob: -1.1510429382324219
    3. '#' → logprob: -2.401042938232422
    4. 'if' → logprob: -6.526042938232422
    5. '           ' → logprob: -8.026042938232422
    6. ' right' → logprob: -9.401042938232422
    7. ' left' → logprob: -9.401042938232422
    8. '       ' → logprob: -10.151042938232422
    9. '
' → logprob: -10.276042938232422
    10. ' #' → logprob: -10.526042938232422

Token 509: ' left' (ID: 3561)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.46695953607559204
    2. 'right' → logprob: -1.0919594764709473
    3. '#' → logprob: -3.8419594764709473
    4. ' left' → logprob: -5.716959476470947
    5. 'left' → logprob: -5.716959476470947
    6. ' #' → logprob: -5.716959476470947
    7. '           ' → logprob: -6.216959476470947
    8. 'if' → logprob: -6.591959476470947
    9. '       ' → logprob: -7.091959476470947
    10. ' if' → logprob: -7.341959476470947

Token 510: 'most' (ID: 5309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7482099533081055
    2. '=' → logprob: -0.8732099533081055
    3. 'of' → logprob: -2.6232099533081055
    4. 'right' → logprob: -4.7482099533081055
    5. 'while' → logprob: -4.7482099533081055
    6. ' of' → logprob: -5.8732099533081055
    7. 'i' → logprob: -5.9982099533081055
    8. 'word' → logprob: -5.9982099533081055
    9. '           ' → logprob: -6.3732099533081055
    10. 'most' → logprob: -6.4982099533081055

Token 511: ' word' (ID: 2195)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.18671639263629913
    2. 'right' → logprob: -2.311716318130493
    3. ' word' → logprob: -2.686716318130493
    4. 'word' → logprob: -5.811716556549072
    5. '_right' → logprob: -9.686716079711914
    6. ' ' → logprob: -11.686716079711914
    7. '```' → logprob: -11.936716079711914
    8. ' #' → logprob: -12.061716079711914
    9. ' words' → logprob: -12.061716079711914
    10. ' in' → logprob: -12.061716079711914

Token 512: ' in' (ID: 306)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.31101393699645996
    2. ' in' → logprob: -1.93601393699646
    3. 'right' → logprob: -2.18601393699646
    4. '           ' → logprob: -5.311014175415039
    5. 'in' → logprob: -5.686014175415039
    6. ' left' → logprob: -7.686014175415039
    7. '            ' → logprob: -7.936014175415039
    8. ' if' → logprob: -7.936014175415039
    9. 'left' → logprob: -8.811014175415039
    10. '_right' → logprob: -8.936014175415039

Token 513: ' the' (ID: 290)
  Prédit: ' text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.5868082642555237
    2. 'text' → logprob: -0.8368082642555237
    3. 'right' → logprob: -4.586808204650879
    4. ' right' → logprob: -7.461808204650879
    5. 'the' → logprob: -10.086808204650879
    6. ' the' → logprob: -12.086808204650879
    7. '```' → logprob: -14.211808204650879
    8. '(text' → logprob: -14.586808204650879
    9. '   ' → logprob: -14.836808204650879
    10. ' ' → logprob: -15.586808204650879

Token 514: ' right' (ID: 1849)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.5739055871963501
    2. 'right' → logprob: -1.32390558719635
    3. ' text' → logprob: -1.94890558719635
    4. ' right' → logprob: -3.5739054679870605
    5. 'Right' → logprob: -10.823905944824219
    6. '```' → logprob: -10.948905944824219
    7. '`' → logprob: -11.448905944824219
    8. ' ' → logprob: -12.073905944824219
    9. ' code' → logprob: -12.448905944824219
    10. '   ' → logprob: -12.573905944824219

Token 515: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06647845357656479
    2. ' right' → logprob: -3.1914784908294678
    3. 'right' → logprob: -3.8164784908294678
    4. '               ' → logprob: -8.191478729248047
    5. ',' → logprob: -8.566478729248047
    6. '=' → logprob: -8.566478729248047
    7. '(right' → logprob: -9.066478729248047
    8. ',right' → logprob: -9.066478729248047
    9. ' side' → logprob: -10.191478729248047
    10. '   ' → logprob: -10.691478729248047

Token 516: ' the' (ID: 290)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.4329150319099426
    2. 'cursor' → logprob: -1.0579149723052979
    3. ' cursor' → logprob: -6.307915210723877
    4. ' text' → logprob: -6.682915210723877
    5. 'the' → logprob: -6.807915210723877
    6. ' the' → logprob: -11.182914733886719
    7. '```' → logprob: -12.557914733886719
    8. '`' → logprob: -13.182914733886719
    9. 'cur' → logprob: -13.807914733886719
    10. ' ' → logprob: -13.932914733886719

Token 517: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.11327330023050308
    2. ' cursor' → logprob: -2.2382733821868896
    3. 'text' → logprob: -7.8632731437683105
    4. ' text' → logprob: -9.863273620605469
    5. 'code' → logprob: -12.488273620605469
    6. ' ' → logprob: -13.613273620605469
    7. ' code' → logprob: -13.738273620605469
    8. 'cur' → logprob: -13.988273620605469
    9. 'right' → logprob: -13.988273620605469
    10. '	cursor' → logprob: -13.988273620605469

Token 518: ' plus' (ID: 2932)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016136066988110542
    2. 'right' → logprob: -4.391136169433594
    3. ' right' → logprob: -5.766136169433594
    4. '
' → logprob: -8.516136169433594
    5. ',' → logprob: -9.766136169433594
    6. '```' → logprob: -10.016136169433594
    7. ',right' → logprob: -10.266136169433594
    8. '          ' → logprob: -10.766136169433594
    9. '               ' → logprob: -11.016136169433594
    10. '	right' → logprob: -11.266136169433594

Token 519: ' blanks' (ID: 160898)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.25761425495147705
    2. ' the' → logprob: -2.7576141357421875
    3. 'any' → logprob: -2.8826141357421875
    4. 'the' → logprob: -3.1326141357421875
    5. ' spaces' → logprob: -4.0076141357421875
    6. '#' → logprob: -4.3826141357421875
    7. 'spaces' → logprob: -4.5076141357421875
    8. ' following' → logprob: -5.1326141357421875
    9. 'following' → logprob: -5.7576141357421875
    10. ' blanks' → logprob: -6.0076141357421875

Token 520: ' just' (ID: 1327)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011471468023955822
    2. 'right' → logprob: -5.011471271514893
    3. ' right' → logprob: -6.011471271514893
    4. '
' → logprob: -6.136471271514893
    5. '       ' → logprob: -11.13647174835205
    6. '```' → logprob: -11.13647174835205
    7. ',' → logprob: -11.26147174835205
    8. '   ' → logprob: -11.26147174835205
    9. '	right' → logprob: -11.38647174835205
    10. '               ' → logprob: -11.51147174835205

Token 521: ' after' (ID: 1934)
  Prédit: 'after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'after' → logprob: -0.004586653783917427
    2. ' after' → logprob: -6.004586696624756
    3. 'right' → logprob: -6.879586696624756
    4. 'to' → logprob: -6.879586696624756
    5. 'ahead' → logprob: -10.754586219787598
    6. 'following' → logprob: -11.629586219787598
    7. 'before' → logprob: -12.004586219787598
    8. ' to' → logprob: -12.504586219787598
    9. 'at' → logprob: -12.629586219787598
    10. 'past' → logprob: -13.129586219787598

Token 522: ' cursor' (ID: 14944)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020652834326028824
    2. 'right' → logprob: -4.520652770996094
    3. ' right' → logprob: -4.770652770996094
    4. '               ' → logprob: -7.895652770996094
    5. '   ' → logprob: -8.020652770996094
    6. '	right' → logprob: -9.645652770996094
    7. '       ' → logprob: -9.645652770996094
    8. '
' → logprob: -9.895652770996094
    9. '```' → logprob: -10.145652770996094
    10. ',right' → logprob: -10.270652770996094

Token 523: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006723183207213879
    2. 'right' → logprob: -5.131723403930664
    3. ' right' → logprob: -7.881723403930664
    4. '       ' → logprob: -8.506723403930664
    5. '
' → logprob: -9.006723403930664
    6. '          ' → logprob: -11.006723403930664
    7. ',' → logprob: -11.006723403930664
    8. '               ' → logprob: -11.256723403930664
    9. '            
' → logprob: -11.631723403930664
    10. '   ' → logprob: -11.631723403930664

Token 524: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1034584566950798
    2. 'right' → logprob: -2.3534584045410156
    3. ' right' → logprob: -5.853458404541016
    4. '
' → logprob: -8.728458404541016
    5. '               ' → logprob: -9.728458404541016
    6. '       ' → logprob: -9.853458404541016
    7. '```' → logprob: -10.478458404541016
    8. '          ' → logprob: -11.478458404541016
    9. '	right' → logprob: -11.603458404541016
    10. '   ' → logprob: -11.853458404541016

Token 525: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.5126314163208008
    2. ' right' → logprob: -1.2626314163208008
    3. '           ' → logprob: -2.137631416320801
    4. '#' → logprob: -10.0126314163208
    5. '       ' → logprob: -10.1376314163208
    6. '
' → logprob: -10.6376314163208
    7. '	right' → logprob: -10.6376314163208
    8. 'if' → logprob: -10.8876314163208
    9. '```' → logprob: -10.8876314163208
    10. '   ' → logprob: -11.0126314163208

Token 526: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014147937297821
    2. ' =' → logprob: -1.7014148235321045
    3. '_' → logprob: -14.326415061950684
    4. '_text' → logprob: -16.076414108276367
    5. '_=' → logprob: -16.201414108276367
    6. '[' → logprob: -16.451414108276367
    7. '=text' → logprob: -16.451414108276367
    8. '=
' → logprob: -16.576414108276367
    9. ',' → logprob: -16.701414108276367
    10. ')' → logprob: -16.826414108276367

Token 527: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.6931498050689697
    2. ' text' → logprob: -0.6931498050689697
    3. '   ' → logprob: -13.31814956665039
    4. ' ' → logprob: -15.19314956665039
    5. '	text' → logprob: -15.69314956665039
    6. '"text' → logprob: -16.19314956665039
    7. '{text' → logprob: -16.31814956665039
    8. '(text' → logprob: -16.31814956665039
    9. '=text' → logprob: -16.69314956665039
    10. '_text' → logprob: -17.31814956665039

Token 528: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -4.320199877838604e-07
    2. '[cur' → logprob: -16.625
    3. '[' → logprob: -17.0
    4. '       ' → logprob: -17.0
    5. '```' → logprob: -17.0
    6. '=c' → logprob: -17.5
    7. '[counter' → logprob: -17.625
    8. ' =' → logprob: -18.25
    9. ' [' → logprob: -18.25
    10. 'cursor' → logprob: -18.625

Token 529: 'ursor' (ID: 6519)
  Prédit: 'ursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursor' → logprob: -0.00035048185964114964
    2. '[c' → logprob: -8.625350952148438
    3. 'cursor' → logprob: -9.750350952148438
    4. '[' → logprob: -9.875350952148438
    5. 'URSOR' → logprob: -9.875350952148438
    6. 'ursors' → logprob: -12.375350952148438
    7. 'urs' → logprob: -13.500350952148438
    8. '(cursor' → logprob: -13.500350952148438
    9. 'ur' → logprob: -14.125350952148438
    10. ' cursor' → logprob: -15.125350952148438

Token 530: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.009474740363657475
    2. ']' → logprob: -5.259474754333496
    3. ':]
' → logprob: -5.509474754333496
    4. ' :]' → logprob: -9.384474754333496
    5. '[' → logprob: -10.384474754333496
    6. ':' → logprob: -10.634474754333496
    7. ':]

' → logprob: -11.259474754333496
    8. ':].' → logprob: -11.759474754333496
    9. '[c' → logprob: -12.009474754333496
    10. ']
' → logprob: -12.759474754333496

Token 531: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.035292863845825195
    2. 'i' → logprob: -3.410292863845825
    3. 'if' → logprob: -7.410292625427246
    4. '```' → logprob: -7.660292625427246
    5. ' i' → logprob: -8.285292625427246
    6. 'idx' → logprob: -9.285292625427246
    7. '       ' → logprob: -9.535292625427246
    8. 'n' → logprob: -10.035292625427246
    9. ' if' → logprob: -10.785292625427246
    10. '
' → logprob: -10.785292625427246

Token 532: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5979359149932861
    2. 'if' (adapté à ' if') → logprob: -0.8479359149932861
    3. '           ' → logprob: -3.972935914993286
    4. '#' → logprob: -6.972935676574707
    5. 'idx' → logprob: -6.972935676574707
    6. 'j' → logprob: -7.847935676574707
    7. ' if' → logprob: -8.347935676574707
    8. 'n' → logprob: -8.972935676574707
    9. '            
' → logprob: -8.972935676574707
    10. '```' → logprob: -9.722935676574707

Token 533: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.45969223976135254
    2. 'right' → logprob: -1.2096922397613525
    3. ' not' → logprob: -2.7096922397613525
    4. ' right' → logprob: -5.834692001342773
    5. 'len' → logprob: -7.334692001342773
    6. 'True' → logprob: -9.834692001342773
    7. ' len' → logprob: -11.209692001342773
    8. ' True' → logprob: -11.959692001342773
    9. '   ' → logprob: -12.209692001342773
    10. '```' → logprob: -12.709692001342773

Token 534: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00861456897109747
    2. ' right' → logprob: -4.758614540100098
    3. '	right' → logprob: -19.258615493774414
    4. '
' → logprob: -19.758615493774414
    5. '[right' → logprob: -19.883615493774414
    6. '(right' → logprob: -20.383615493774414
    7. 'left' → logprob: -20.758615493774414
    8. 'Right' → logprob: -20.758615493774414
    9. ' ' → logprob: -21.508615493774414
    10. ')' → logprob: -21.883615493774414

Token 535: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5776854753494263
    2. ':' → logprob: -0.8276854753494263
    3. '           ' → logprob: -6.952685356140137
    4. '               ' → logprob: -7.702685356140137
    5. '       ' → logprob: -9.577685356140137
    6. '):
' → logprob: -9.827685356140137
    7. ' :
' → logprob: -9.952685356140137
    8. '=' → logprob: -10.202685356140137
    9. ' :' → logprob: -10.702685356140137
    10. '   ' → logprob: -11.452685356140137

Token 536: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009024479426443577
    2. ' continue' → logprob: -5.134024620056152
    3. 'continue' → logprob: -6.009024620056152
    4. '           ' → logprob: -7.634024620056152
    5. '       ' → logprob: -9.384024620056152
    6. '   ' → logprob: -10.259024620056152
    7. '	continue' → logprob: -11.509024620056152
    8. '```' → logprob: -12.009024620056152
    9. '                   ' → logprob: -12.384024620056152
    10. '	       ' → logprob: -13.384024620056152

Token 537: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.4093557894229889
    2. ' continue' → logprob: -1.4093557596206665
    3. '               ' → logprob: -2.409355878829956
    4. '           ' → logprob: -6.909355640411377
    5. '                   ' → logprob: -7.784355640411377
    6. '   ' → logprob: -8.409356117248535
    7. '	continue' → logprob: -9.784356117248535
    8. '       ' → logprob: -10.034356117248535
    9. ' ' → logprob: -12.284356117248535
    10. '                       ' → logprob: -13.284356117248535

Token 538: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00378404650837183
    2. 'i' → logprob: -5.8787841796875
    3. '       ' → logprob: -7.8787841796875
    4. ' i' → logprob: -8.7537841796875
    5. '   ' → logprob: -8.8787841796875
    6. '          ' → logprob: -9.1287841796875
    7. '```' → logprob: -9.6287841796875
    8. '               ' → logprob: -10.6287841796875
    9. '            
' → logprob: -10.8787841796875
    10. '
' → logprob: -11.0037841796875

Token 539: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16910529136657715
    2. 'i' → logprob: -1.9191052913665771
    3. '```' → logprob: -5.669105529785156
    4. '       ' → logprob: -5.919105529785156
    5. ' i' → logprob: -6.044105529785156
    6. '   ' → logprob: -8.669105529785156
    7. '            
' → logprob: -10.419105529785156
    8. '               ' → logprob: -10.919105529785156
    9. '
' → logprob: -11.044105529785156
    10. '          ' → logprob: -11.169105529785156

Token 540: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00025776340044103563
    2. '           ' → logprob: -8.87525749206543
    3. '#' (adapté à ' #') → logprob: -9.50025749206543
    4. 'idx' → logprob: -10.62525749206543
    5. '```' → logprob: -11.37525749206543
    6. 'j' → logprob: -12.12525749206543
    7. '            
' → logprob: -14.12525749206543
    8. ' i' → logprob: -14.50025749206543
    9. 'import' → logprob: -15.75025749206543
    10. '   ' → logprob: -16.25025749206543

Token 541: ' count' (ID: 3605)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0034513415303081274
    2. '#' → logprob: -6.378451347351074
    3. 'j' → logprob: -6.503451347351074
    4. 'idx' → logprob: -8.628451347351074
    5. '           ' → logprob: -9.753451347351074
    6. '            
' → logprob: -12.128451347351074
    7. '```' → logprob: -13.628451347351074
    8. ' i' → logprob: -13.878451347351074
    9. '       ' → logprob: -14.503451347351074
    10. 'r' → logprob: -14.878451347351074

Token 542: ' blanks' (ID: 160898)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007483338005840778
    2. 'spaces' → logprob: -6.38248348236084
    3. 'j' → logprob: -6.50748348236084
    4. ' blanks' → logprob: -6.75748348236084
    5. ' i' → logprob: -6.88248348236084
    6. 'bl' → logprob: -7.50748348236084
    7. 'idx' → logprob: -7.63248348236084
    8. 'len' → logprob: -9.25748348236084
    9. 'blank' → logprob: -9.25748348236084
    10. 'pos' → logprob: -9.25748348236084

Token 543: ' after' (ID: 1934)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011510715819895267
    2. 'j' → logprob: -5.136510848999023
    3. 'b' → logprob: -5.886510848999023
    4. ' i' → logprob: -7.136510848999023
    5. 'cnt' → logprob: -7.511510848999023
    6. '           ' → logprob: -7.761510848999023
    7. 'bl' → logprob: -8.511510848999023
    8. 'count' → logprob: -8.511510848999023
    9. '```' → logprob: -9.011510848999023
    10. '=' → logprob: -9.136510848999023

Token 544: ' cursor' (ID: 14944)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1636127233505249
    2. ' i' → logprob: -2.6636128425598145
    3. 'cursor' → logprob: -2.7886128425598145
    4. ' cursor' → logprob: -4.9136128425598145
    5. 'len' → logprob: -5.4136128425598145
    6. '   ' → logprob: -6.6636128425598145
    7. 'count' → logprob: -6.9136128425598145
    8. ' ' → logprob: -7.1636128425598145
    9. '0' → logprob: -7.2886128425598145
    10. 'import' → logprob: -7.7886128425598145

Token 545: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010645940899848938
    2. '           ' → logprob: -5.260645866394043
    3. ' i' → logprob: -5.385645866394043
    4. '```' → logprob: -7.635645866394043
    5. 'j' → logprob: -8.385645866394043
    6. '   ' → logprob: -10.385645866394043
    7. '            
' → logprob: -10.635645866394043
    8. 'idx' → logprob: -11.385645866394043
    9. 'count' → logprob: -12.010645866394043
    10. '       ' → logprob: -12.260645866394043

Token 546: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25697270035743713
    2. '           ' → logprob: -1.5069726705551147
    3. ' i' → logprob: -5.381972789764404
    4. 'j' → logprob: -8.381972312927246
    5. '```' → logprob: -9.506972312927246
    6. 'idx' → logprob: -10.006972312927246
    7. '   ' → logprob: -10.131972312927246
    8. '       ' → logprob: -11.006972312927246
    9. '               ' → logprob: -11.506972312927246
    10. '	i' → logprob: -12.631972312927246

Token 547: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.10499154776334763
    2. 'j' → logprob: -3.4799914360046387
    3. ' i' → logprob: -3.4799914360046387
    4. 'b' → logprob: -4.354991436004639
    5. 'blank' → logprob: -4.604991436004639
    6. 'bl' → logprob: -5.354991436004639
    7. ' blanks' → logprob: -5.479991436004639
    8. ' blank' → logprob: -6.604991436004639
    9. 'bs' → logprob: -6.604991436004639
    10. ' j' → logprob: -7.104991436004639

Token 548: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022706031799316
    2. '=' → logprob: -1.9102270603179932
    3. ' ' → logprob: -13.285226821899414
    4. '0' → logprob: -14.160226821899414
    5. ',' → logprob: -15.535226821899414
    6. ' +=' → logprob: -16.035226821899414
    7. '  ' → logprob: -16.285226821899414
    8. '<|end|>' → logprob: -16.785226821899414
    9. '```' → logprob: -17.160226821899414
    10. '+=' → logprob: -18.160226821899414

Token 549: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033654000610113144
    2. ' ' → logprob: -3.408653974533081
    3. '1' → logprob: -12.40865421295166
    4. 'len' → logprob: -12.65865421295166
    5. ' len' → logprob: -15.40865421295166
    6. 'i' → logprob: -15.40865421295166
    7. 'cursor' → logprob: -15.53365421295166
    8. ' i' → logprob: -16.658653259277344
    9. '   ' → logprob: -17.158653259277344
    10. 's' → logprob: -17.408653259277344

Token 550: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003815756645053625
    2. ' ' → logprob: -7.8753814697265625
    3. 'i' → logprob: -14.500381469726562
    4. 'cursor' → logprob: -14.625381469726562
    5. 'len' → logprob: -14.750381469726562
    6. '1' → logprob: -16.125381469726562
    7. '   ' → logprob: -17.500381469726562
    8. '۰' → logprob: -18.312881469726562
    9. ' i' → logprob: -18.625381469726562
    10. 'c' → logprob: -18.687881469726562

Token 551: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1537826806306839
    2. ' while' → logprob: -2.403782606124878
    3. '           ' → logprob: -3.403782606124878
    4. '
' → logprob: -4.903782844543457
    5. '<|end|>' → logprob: -5.153782844543457
    6. '	while' → logprob: -6.028782844543457
    7. '       ' → logprob: -7.028782844543457
    8. '+' → logprob: -7.153782844543457
    9. '   ' → logprob: -7.653782844543457
    10. '```' → logprob: -8.403782844543457

Token 552: '           ' (ID: 352)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10593567788600922
    2. '           ' → logprob: -2.980935573577881
    3. ' while' → logprob: -3.105935573577881
    4. '   ' → logprob: -6.105935573577881
    5. '       ' → logprob: -6.355935573577881
    6. '	while' → logprob: -7.230935573577881
    7. '
' → logprob: -8.980936050415039
    8. '```' → logprob: -9.980936050415039
    9. '               ' → logprob: -10.855936050415039
    10. '<|end|>' → logprob: -10.980936050415039

Token 553: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.14318478107452393
    2. ' while' → logprob: -2.0181846618652344
    3. '<|end|>' → logprob: -8.018184661865234
    4. 'n' → logprob: -9.893184661865234
    5. '	while' → logprob: -10.518184661865234
    6. ' ' → logprob: -10.893184661865234
    7. ' n' → logprob: -11.018184661865234
    8. 'While' → logprob: -11.018184661865234
    9. 'len' → logprob: -11.268184661865234
    10. '           ' → logprob: -11.268184661865234

Token 554: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38688361644744873
    2. ' i' → logprob: -1.1368836164474487
    3. 'right' → logprob: -11.886883735656738
    4. ' right' → logprob: -12.261883735656738
    5. '	i' → logprob: -14.886883735656738
    6. ' ' → logprob: -15.386883735656738
    7. '(i' → logprob: -16.136882781982422
    8. ' ' → logprob: -16.511882781982422
    9. 'cmd' → logprob: -16.636882781982422
    10. '   ' → logprob: -16.761882781982422

Token 555: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.030670203268527985
    2. '<' → logprob: -3.530670166015625
    3. '<len' → logprob: -7.030670166015625
    4. '<n' → logprob: -10.280670166015625
    5. '<size' → logprob: -16.155670166015625
    6. ' ' → logprob: -16.530670166015625
    7. 'i' → logprob: -16.905670166015625
    8. 'len' → logprob: -17.030670166015625
    9. '<i' → logprob: -17.030670166015625
    10. '<m' → logprob: -17.530670166015625

Token 556: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.860340752406046e-05
    2. ' len' → logprob: -9.7500581741333
    3. 'right' → logprob: -15.1250581741333
    4. '(len' → logprob: -16.750059127807617
    5. 'i' → logprob: -18.375059127807617
    6. '=len' → logprob: -18.625059127807617
    7. '	len' → logprob: -18.875059127807617
    8. '[len' → logprob: -19.375059127807617
    9. '<len' → logprob: -19.375059127807617
    10. '   ' → logprob: -20.125059127807617

Token 557: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.06208498775959015
    2. 'right' → logprob: -2.812084913253784
    3. ' right' → logprob: -9.062085151672363
    4. '[right' → logprob: -13.937085151672363
    5. '	right' → logprob: -15.062085151672363
    6. ':right' → logprob: -16.187084197998047
    7. ',right' → logprob: -16.812084197998047
    8. '(' → logprob: -17.937084197998047
    9. '_right' → logprob: -18.062084197998047
    10. '.right' → logprob: -18.562084197998047

Token 558: ')' (ID: 8)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.11315588653087616
    2. ' and' → logprob: -2.2381558418273926
    3. ')' → logprob: -8.11315631866455
    4. ']' → logprob: -10.86315631866455
    5. '   ' → logprob: -11.98815631866455
    6. '()' → logprob: -12.86315631866455
    7. '	and' → logprob: -13.61315631866455
    8. ' ' → logprob: -13.86315631866455
    9. '>' → logprob: -14.11315631866455
    10. '```' → logprob: -14.61315631866455

Token 559: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.16022524237632751
    2. ' and' → logprob: -1.91022527217865
    3. '	and' → logprob: -14.035224914550781
    4. '```' → logprob: -15.910224914550781
    5. '   ' → logprob: -16.28522491455078
    6. ' ' → logprob: -16.91022491455078
    7. ' и' → logprob: -17.03522491455078
    8. '           ' → logprob: -17.66022491455078
    9. ' ' → logprob: -18.28522491455078
    10. '    ' → logprob: -18.78522491455078

Token 560: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.02055741846561432
    2. ' right' → logprob: -3.895557403564453
    3. '(right' → logprob: -11.145557403564453
    4. ' ' → logprob: -15.270557403564453
    5. '	right' → logprob: -15.395557403564453
    6. ' (' → logprob: -15.520557403564453
    7. '[right' → logprob: -15.645557403564453
    8. '   ' → logprob: -16.270557403564453
    9. 'not' → logprob: -17.145557403564453
    10. 'rightness' → logprob: -17.270557403564453

Token 561: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.12500286102295
    3. ' [' → logprob: -15.12500286102295
    4. 'i' → logprob: -15.37500286102295
    5. '[
' → logprob: -16.375001907348633
    6. '```' → logprob: -16.375001907348633
    7. '`' → logprob: -17.375001907348633
    8. '   ' → logprob: -17.500001907348633
    9. '
' → logprob: -17.500001907348633
    10. '(i' → logprob: -18.000001907348633

Token 562: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3528352677822113
    2. '==' → logprob: -1.6028352975845337
    3. ']' → logprob: -2.477835178375244
    4. ']==' → logprob: -4.477835178375244
    5. ' ]' → logprob: -7.977835178375244
    6. '=='' → logprob: -8.727835655212402
    7. ']=='' → logprob: -9.227835655212402
    8. ' =='' → logprob: -10.727835655212402
    9. '[' → logprob: -10.977835655212402
    10. ')' → logprob: -11.602835655212402

Token 563: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38768309354782104
    2. '==' → logprob: -1.1376831531524658
    3. '=='' → logprob: -7.387682914733887
    4. ' =='' → logprob: -8.637682914733887
    5. '=' → logprob: -12.137682914733887
    6. ' ' → logprob: -12.762682914733887
    7. '=="' → logprob: -12.887682914733887
    8. '==
' → logprob: -14.012682914733887
    9. '[' → logprob: -14.387682914733887
    10. ''' → logprob: -14.387682914733887

Token 564: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -7.660315895918757e-05
    2. ' '' → logprob: -9.500076293945312
    3. '"' → logprob: -13.375076293945312
    4. ' ' → logprob: -16.250076293945312
    5. ''end' → logprob: -17.500076293945312
    6. ''s' → logprob: -18.250076293945312
    7. ''user' → logprob: -18.625076293945312
    8. '`' → logprob: -18.625076293945312
    9. ''a' → logprob: -19.000076293945312
    10. '  ' → logprob: -19.625076293945312

Token 565: ' '' (ID: 461)
  Prédit: ' ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ':' → logprob: -0.1619640439748764
    2. ' '' → logprob: -1.9119640588760376
    3. ''' → logprob: -6.661963939666748
    4. '':' → logprob: -7.911963939666748
    5. ' '>' → logprob: -9.411964416503906
    6. ' ':'' → logprob: -12.286964416503906
    7. ''s' → logprob: -12.411964416503906
    8. ' ']' → logprob: -14.036964416503906
    9. ''>' → logprob: -14.286964416503906
    10. '':
' → logprob: -15.161964416503906

Token 566: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13479526340961456
    2. '               ' → logprob: -2.7597951889038086
    3. ':' → logprob: -3.1347951889038086
    4. '           ' → logprob: -4.134795188903809
    5. '       ' → logprob: -7.009795188903809
    6. '):
' → logprob: -7.134795188903809
    7. 'i' → logprob: -7.509795188903809
    8. '   ' → logprob: -8.009795188903809
    9. ' and' → logprob: -8.884795188903809
    10. ',' → logprob: -9.134795188903809

Token 567: '               ' (ID: 506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12127546221017838
    2. '               ' → logprob: -2.4962754249572754
    3. ' i' → logprob: -3.4962754249572754
    4. '           ' → logprob: -6.621275424957275
    5. '   ' → logprob: -9.371275901794434
    6. '```' → logprob: -10.246275901794434
    7. '                   ' → logprob: -11.121275901794434
    8. '       ' → logprob: -11.371275901794434
    9. ' ' → logprob: -11.871275901794434
    10. '
' → logprob: -12.496275901794434

Token 568: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00034583290107548237
    2. ' i' → logprob: -8.000346183776855
    3. '               ' → logprob: -12.375346183776855
    4. '1' → logprob: -12.375346183776855
    5. '           ' → logprob: -13.625346183776855
    6. '                   ' → logprob: -14.625346183776855
    7. '```' → logprob: -15.875346183776855
    8. '   ' → logprob: -16.12534523010254
    9. '	i' → logprob: -18.00034523010254
    10. '++' → logprob: -18.12534523010254

Token 569: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12694711983203888
    2. ' +=' → logprob: -2.1269471645355225
    3. '=' → logprob: -11.876947402954102
    4. '+' → logprob: -12.001947402954102
    5. ']+=' → logprob: -13.126947402954102
    6. 'i' → logprob: -13.626947402954102
    7. '   ' → logprob: -13.751947402954102
    8. '++' → logprob: -14.626947402954102
    9. '+='' → logprob: -15.626947402954102
    10. '    ' → logprob: -16.0019474029541

Token 570: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015137888258323073
    2. ' ' → logprob: -6.501513957977295
    3. 'i' → logprob: -11.501513481140137
    4. ' i' → logprob: -14.376513481140137
    5. '   ' → logprob: -14.876513481140137
    6. '(i' → logprob: -16.376514434814453
    7. '0' → logprob: -16.689014434814453
    8. '```' → logprob: -16.876514434814453
    9. '       ' → logprob: -18.001514434814453
    10. '           ' → logprob: -18.251514434814453

Token 571: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011212585377506912
    2. ' ' → logprob: -9.625112533569336
    3. 'i' → logprob: -10.000112533569336
    4. ' i' → logprob: -15.250112533569336
    5. '0' → logprob: -15.625112533569336
    6. '(i' → logprob: -16.125112533569336
    7. '   ' → logprob: -17.687612533569336
    8. 'len' → logprob: -17.875112533569336
    9. '```' → logprob: -18.000112533569336
    10. '2' → logprob: -18.437612533569336

Token 572: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015262868255376816
    2. 'j' → logprob: -8.00152587890625
    3. 'i' → logprob: -8.50152587890625
    4. 'n' → logprob: -8.75152587890625
    5. '#' → logprob: -8.87652587890625
    6. '            
' → logprob: -9.12652587890625
    7. '<|end|>' → logprob: -9.12652587890625
    8. '
' → logprob: -9.87652587890625
    9. 'while' → logprob: -10.00152587890625
    10. 'token' → logprob: -10.37652587890625

Token 573: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3507917821407318
    2. 'j' → logprob: -1.6007918119430542
    3. '#' → logprob: -2.8507916927337646
    4. 'while' → logprob: -3.6007916927337646
    5. 'if' → logprob: -5.600791931152344
    6. 'start' → logprob: -6.475791931152344
    7. 'i' → logprob: -6.975791931152344
    8. '```' → logprob: -7.225791931152344
    9. ' #' → logprob: -7.975791931152344
    10. '       ' → logprob: -7.975791931152344

Token 574: ' if' (ID: 538)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.15624698996543884
    2. 'if' (adapté à ' if') → logprob: -2.0312469005584717
    3. 'start' → logprob: -4.781247138977051
    4. '           ' → logprob: -5.906247138977051
    5. '#' → logprob: -7.406247138977051
    6. ' if' → logprob: -7.656247138977051
    7. 'while' → logprob: -8.03124713897705
    8. ' j' → logprob: -8.28124713897705
    9. 'word' → logprob: -8.65624713897705
    10. 'right' → logprob: -9.40624713897705

Token 575: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06994155049324036
    2. ' i' → logprob: -2.694941520690918
    3. '   ' → logprob: -12.944941520690918
    4. ' ' → logprob: -14.444941520690918
    5. '           ' → logprob: -15.194941520690918
    6. 'not' → logprob: -15.444941520690918
    7. '	i' → logprob: -15.694941520690918
    8. '       ' → logprob: -15.944941520690918
    9. 'len' → logprob: -16.069942474365234
    10. '(i' → logprob: -16.132442474365234

Token 576: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23076844215393066
    2. '==' → logprob: -1.6057684421539307
    3. ' >=' → logprob: -6.105768203735352
    4. ' <' → logprob: -6.105768203735352
    5. '>=' → logprob: -7.355768203735352
    6. '<' → logprob: -9.105768203735352
    7. '=' → logprob: -10.230768203735352
    8. '<len' → logprob: -10.355768203735352
    9. ' >' → logprob: -10.855768203735352
    10. '<|end|>' → logprob: -11.105768203735352

Token 577: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006155116483569145
    2. '0' → logprob: -5.381155014038086
    3. ' len' → logprob: -6.506155014038086
    4. ' ' → logprob: -10.381155014038086
    5. '   ' → logprob: -12.881155014038086
    6. '	len' → logprob: -13.381155014038086
    7. '1' → logprob: -13.881155014038086
    8. '(len' → logprob: -14.131155014038086
    9. 'i' → logprob: -14.256155014038086
    10. 'n' → logprob: -14.381155014038086

Token 578: '(right' (ID: 52104)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6933329105377197
    2. '(right' → logprob: -0.6933329105377197
    3. ' right' → logprob: -8.81833267211914
    4. '[right' → logprob: -10.56833267211914
    5. '	right' → logprob: -11.94333267211914
    6. ',right' → logprob: -13.69333267211914
    7. ':right' → logprob: -13.81833267211914
    8. '_right' → logprob: -14.19333267211914
    9. '(' → logprob: -14.44333267211914
    10. 'text' → logprob: -14.81833267211914

Token 579: '):
' (ID: 1883)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18918342888355255
    2. '):
' → logprob: -2.689183473587036
    3. ':
' → logprob: -2.814183473587036
    4. '           ' → logprob: -4.064183235168457
    5. ':' → logprob: -4.439183235168457
    6. '):' → logprob: -4.939183235168457
    7. ' or' → logprob: -5.314183235168457
    8. 'continue' → logprob: -7.064183235168457
    9. '       ' → logprob: -7.439183235168457
    10. ' continue' → logprob: -7.564183235168457

Token 580: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005116700194776058
    2. 'continue' → logprob: -6.1301164627075195
    3. ' continue' → logprob: -6.2551164627075195
    4. 'cursor' → logprob: -7.7551164627075195
    5. ' cursor' → logprob: -8.13011646270752
    6. '           ' → logprob: -8.50511646270752
    7. '       ' → logprob: -10.00511646270752
    8. '   ' → logprob: -10.75511646270752
    9. '```' → logprob: -12.00511646270752
    10. '                   ' → logprob: -12.50511646270752

Token 581: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0845450162887573
    2. 'continue' → logprob: -1.0845450162887573
    3. 'cursor' → logprob: -1.5845450162887573
    4. ' cursor' → logprob: -2.834545135498047
    5. ' continue' → logprob: -2.834545135498047
    6. '           ' → logprob: -7.709545135498047
    7. '   ' → logprob: -7.834545135498047
    8. '                   ' → logprob: -8.584545135498047
    9. '       ' → logprob: -9.334545135498047
    10. ' ' → logprob: -10.209545135498047

Token 582: ' only' (ID: 1606)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.04652877897024155
    2. 'continue' → logprob: -3.1715288162231445
    3. '               ' → logprob: -6.1715288162231445
    4. ' cursor' → logprob: -7.2965288162231445
    5. '                   ' → logprob: -8.296528816223145
    6. 'text' → logprob: -9.046528816223145
    7. '           ' → logprob: -9.296528816223145
    8. 'break' → logprob: -9.671528816223145
    9. '   ' → logprob: -9.671528816223145
    10. '#' → logprob: -9.921528816223145

Token 583: ' blanks' (ID: 160898)
  Prédit: 'spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spaces' → logprob: -0.9460043907165527
    2. 'bl' → logprob: -1.1960043907165527
    3. ' blanks' → logprob: -1.4460043907165527
    4. ' spaces' → logprob: -2.8210043907165527
    5. 'text' → logprob: -5.446004390716553
    6. '#' → logprob: -5.571004390716553
    7. 'cursor' → logprob: -6.821004390716553
    8. ' #' → logprob: -6.946004390716553
    9. ' text' → logprob: -7.321004390716553
    10. 'right' → logprob: -7.446004390716553

Token 584: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013211923651397228
    2. '           ' → logprob: -7.001321315765381
    3. ',' → logprob: -9.126320838928223
    4. ' continue' → logprob: -9.251320838928223
    5. '                   ' → logprob: -9.376320838928223
    6. ':
' → logprob: -10.001320838928223
    7. 'continue' → logprob: -10.251320838928223
    8. '   ' → logprob: -12.126320838928223
    9. ' cursor' → logprob: -12.501320838928223
    10. '       ' → logprob: -12.501320838928223

Token 585: ' right' (ID: 1849)
  Prédit: 'delete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.34661582112312317
    2. 'remove' → logprob: -2.096615791320801
    3. 'len' → logprob: -2.721615791320801
    4. 'cursor' → logprob: -3.096615791320801
    5. 'text' → logprob: -4.096615791320801
    6. 'skip' → logprob: -4.596615791320801
    7. 'i' → logprob: -4.971615791320801
    8. 'the' → logprob: -5.346615791320801
    9. 'end' → logprob: -5.346615791320801
    10. ' delete' → logprob: -5.596615791320801

Token 586: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004631503485143185
    2. '                   ' → logprob: -6.129631519317627
    3. '           ' → logprob: -6.629631519317627
    4. 'continue' → logprob: -7.129631519317627
    5. ':
' → logprob: -9.254631042480469
    6. 'cursor' → logprob: -9.504631042480469
    7. ',' → logprob: -10.004631042480469
    8. ':' → logprob: -10.129631042480469
    9. ' continue' → logprob: -10.129631042480469
    10. '   ' → logprob: -11.379631042480469

Token 587: ' delete' (ID: 6168)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.5746006369590759
    2. '               ' → logprob: -1.1996006965637207
    3. 'continue' → logprob: -2.8246006965637207
    4. ' cursor' → logprob: -2.8246006965637207
    5. ' continue' → logprob: -4.949600696563721
    6. 'text' → logprob: -5.199600696563721
    7. '                   ' → logprob: -5.949600696563721
    8. '   ' → logprob: -6.949600696563721
    9. ' text' → logprob: -7.449600696563721
    10. '           ' → logprob: -9.449600219726562

Token 588: ' them' (ID: 1373)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.6272371411323547
    2. ' text' → logprob: -0.8772371411323547
    3. 'right' → logprob: -3.75223708152771
    4. ' right' → logprob: -4.002237319946289
    5. '               ' → logprob: -5.502237319946289
    6. '           ' → logprob: -6.252237319946289
    7. '                   ' → logprob: -8.002237319946289
    8. ' i' → logprob: -8.127237319946289
    9. 'i' → logprob: -8.502237319946289
    10. ' spaces' → logprob: -8.752237319946289

Token 589: ' all' (ID: 722)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005703854374587536
    2. 'text' → logprob: -6.255703926086426
    3. ' text' → logprob: -6.630703926086426
    4. '           ' → logprob: -6.755703926086426
    5. ' and' → logprob: -7.130703926086426
    6. ',' → logprob: -8.005703926086426
    7. '                   ' → logprob: -10.880703926086426
    8. ' right' → logprob: -11.255703926086426
    9. ',text' → logprob: -11.255703926086426
    10. ':
' → logprob: -11.380703926086426

Token 590: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001676971442066133
    2. 'text' → logprob: -6.8766770362854
    3. ' text' → logprob: -7.6266770362854
    4. '           ' → logprob: -9.626676559448242
    5. ',' → logprob: -9.751676559448242
    6. ' and' → logprob: -11.626676559448242
    7. '                   ' → logprob: -11.751676559448242
    8. '{text' → logprob: -12.376676559448242
    9. ',text' → logprob: -13.001676559448242
    10. '```' → logprob: -13.001676559448242

Token 591: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007349154446274042
    2. '           ' → logprob: -5.257349014282227
    3. 'text' → logprob: -6.882349014282227
    4. ' text' → logprob: -7.007349014282227
    5. ',' → logprob: -10.007349014282227
    6. '{text' → logprob: -10.257349014282227
    7. '<|end|>' → logprob: -10.507349014282227
    8. '                   ' → logprob: -11.132349014282227
    9. 'cursor' → logprob: -11.257349014282227
    10. '```' → logprob: -11.882349014282227

Token 592: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' (adapté à ' text') → logprob: -0.2990775406360626
    2. ' text' → logprob: -2.2990775108337402
    3. '               ' → logprob: -2.5490775108337402
    4. 'cursor' → logprob: -2.6740775108337402
    5. ' cursor' → logprob: -4.54907751083374
    6. '   ' → logprob: -8.549077987670898
    7. 'right' → logprob: -9.424077987670898
    8. '           ' → logprob: -9.799077987670898
    9. '                   ' → logprob: -10.549077987670898
    10. '```' → logprob: -11.174077987670898

Token 593: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008615161292254925
    2. ' =' → logprob: -4.758615016937256
    3. '=
' → logprob: -15.008615493774414
    4. '=cut' → logprob: -15.508615493774414
    5. '[:' → logprob: -17.008615493774414
    6. '＝' → logprob: -17.383615493774414
    7. '=

' → logprob: -17.758615493774414
    8. '=c' → logprob: -18.133615493774414
    9. '=text' → logprob: -18.633615493774414
    10. ' ' → logprob: -18.758615493774414

Token 594: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.07889044284820557
    2. ' text' → logprob: -2.578890323638916
    3. '   ' → logprob: -14.828890800476074
    4. ' ' → logprob: -16.078889846801758
    5. '	text' → logprob: -16.453889846801758
    6. '(text' → logprob: -17.578889846801758
    7. 't' → logprob: -17.578889846801758
    8. 'txt' → logprob: -17.703889846801758
    9. '{text' → logprob: -17.828889846801758
    10. '"text' → logprob: -17.953889846801758

Token 595: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -3.128163257315464e-07
    2. '[:-' → logprob: -16.0
    3. '[:]' → logprob: -16.125
    4. '][:' → logprob: -17.5
    5. '[' → logprob: -17.625
    6. ':' → logprob: -17.625
    7. ' [:' → logprob: -18.625
    8. '
' → logprob: -18.75
    9. '[:,' → logprob: -19.625
    10. '   ' → logprob: -19.625

Token 596: 'cursor' (ID: 34222)
  Prédit: 'cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -4.246537173457909e-06
    2. ' cursor' → logprob: -12.375003814697266
    3. '(cursor' → logprob: -17.875003814697266
    4. '	cursor' → logprob: -18.125003814697266
    5. '.cursor' → logprob: -19.375003814697266
    6. '
' → logprob: -20.000003814697266
    7. '```' → logprob: -20.750003814697266
    8. '   ' → logprob: -21.000003814697266
    9. '_cursor' → logprob: -21.250003814697266
    10. 'ursor' → logprob: -21.375003814697266

Token 597: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015953781083226204
    2. '+' → logprob: -4.39095401763916
    3. ']+' → logprob: -5.76595401763916
    4. ' +' → logprob: -8.51595401763916
    5. '+i' → logprob: -10.14095401763916
    6. ' ]' → logprob: -10.14095401763916
    7. ']
' → logprob: -11.14095401763916
    8. '+]' → logprob: -12.51595401763916
    9. '           ' → logprob: -13.51595401763916
    10. '```' → logprob: -14.26595401763916

Token 598: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18283382058143616
    2. '           ' → logprob: -1.8078337907791138
    3. 'continue' → logprob: -6.057833671569824
    4. 'else' → logprob: -7.932833671569824
    5. '       ' → logprob: -8.307833671569824
    6. ' continue' → logprob: -9.557833671569824
    7. ' else' → logprob: -9.932833671569824
    8. '                   ' → logprob: -12.432833671569824
    9. '   ' → logprob: -12.557833671569824
    10. '              ' → logprob: -13.307833671569824

Token 599: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.06382088363170624
    2. ' continue' → logprob: -2.8138208389282227
    3. '               ' → logprob: -6.438820838928223
    4. '           ' → logprob: -8.438820838928223
    5. 'cursor' → logprob: -11.438820838928223
    6. '	continue' → logprob: -11.438820838928223
    7. '       ' → logprob: -11.938820838928223
    8. '```' → logprob: -13.063820838928223
    9. 'else' → logprob: -13.313820838928223
    10. '                   ' → logprob: -13.563820838928223

Token 600: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004329826217144728
    2. '#' → logprob: -6.004329681396484
    3. 'j' → logprob: -7.004329681396484
    4. 'i' → logprob: -7.629329681396484
    5. '
' → logprob: -8.504329681396484
    6. '            
' → logprob: -9.004329681396484
    7. '```' → logprob: -11.004329681396484
    8. '               ' → logprob: -11.254329681396484
    9. 'continue' → logprob: -11.379329681396484
    10. 'idx' → logprob: -11.504329681396484

Token 601: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1824386566877365
    2. '#' → logprob: -1.932438611984253
    3. 'j' → logprob: -3.932438611984253
    4. '```' → logprob: -6.557438850402832
    5. 'i' → logprob: -7.932438850402832
    6. 'while' → logprob: -9.057438850402832
    7. ' #' → logprob: -9.182438850402832
    8. '            
' → logprob: -9.432438850402832
    9. '       ' → logprob: -9.682438850402832
    10. '               ' → logprob: -9.807438850402832

Token 602: ' #' (ID: 1069)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.14739622175693512
    2. '#' (adapté à ' #') → logprob: -2.1473963260650635
    3. 'start' → logprob: -4.522396087646484
    4. '           ' → logprob: -4.772396087646484
    5. 'end' → logprob: -7.397396087646484
    6. '            
' → logprob: -9.272396087646484
    7. '   ' → logprob: -9.897396087646484
    8. ' #' → logprob: -10.147396087646484
    9. 'i' → logprob: -10.272396087646484
    10. 'word' → logprob: -10.397396087646484

Token 603: ' now' (ID: 1954)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.024438610300421715
    2. 'start' → logprob: -3.8994386196136475
    3. '#' → logprob: -5.649438381195068
    4. 'i' → logprob: -8.899438858032227
    5. ' j' → logprob: -9.024438858032227
    6. 'end' → logprob: -10.149438858032227
    7. 'word' → logprob: -10.649438858032227
    8. '   ' → logprob: -11.274438858032227
    9. ' #' → logprob: -11.899438858032227
    10. ' start' → logprob: -12.274438858032227

Token 604: ' at' (ID: 540)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12290282547473907
    2. ' j' → logprob: -2.3729028701782227
    3. 'start' → logprob: -4.747902870178223
    4. 'i' → logprob: -4.997902870178223
    5. '   ' → logprob: -5.872902870178223
    6. ' start' → logprob: -6.372902870178223
    7. ' i' → logprob: -6.872902870178223
    8. 'word' → logprob: -8.247902870178223
    9. 'end' → logprob: -8.372902870178223
    10. ' ' → logprob: -8.747902870178223

Token 605: ' start' (ID: 1604)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008659723214805126
    2. ' i' → logprob: -5.133659839630127
    3. 'cursor' → logprob: -6.883659839630127
    4. 'start' → logprob: -7.508659839630127
    5. 'first' → logprob: -7.883659839630127
    6. ' first' → logprob: -8.383659362792969
    7. 'end' → logprob: -8.758659362792969
    8. ' cursor' → logprob: -9.383659362792969
    9. ' end' → logprob: -9.758659362792969
    10. 'word' → logprob: -10.133659362792969

Token 606: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7326658368110657
    2. 'of' → logprob: -0.7326658368110657
    3. ' of' → logprob: -3.607665777206421
    4. 'j' → logprob: -4.857666015625
    5. 'i' → logprob: -6.232666015625
    6. '=' → logprob: -7.107666015625
    7. '               ' → logprob: -7.482666015625
    8. '       ' → logprob: -9.107666015625
    9. '   ' → logprob: -9.482666015625
    10. 'idx' → logprob: -9.982666015625

Token 607: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.7994681596755981
    2. 'word' → logprob: -0.9244681596755981
    3. 'right' → logprob: -1.9244681596755981
    4. ' first' → logprob: -5.549468040466309
    5. ' word' → logprob: -6.924468040466309
    6. 'a' → logprob: -7.049468040466309
    7. 'next' → logprob: -7.174468040466309
    8. ' right' → logprob: -7.674468040466309
    9. 'the' → logprob: -7.924468040466309
    10. 'left' → logprob: -8.299468040466309

Token 608: ' word' (ID: 2195)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5854145884513855
    2. 'word' → logprob: -0.9604145884513855
    3. ' right' → logprob: -3.3354146480560303
    4. ' word' → logprob: -3.7104146480560303
    5. 'i' → logprob: -8.46041488647461
    6. ' i' → logprob: -10.08541488647461
    7. ' ' → logprob: -11.46041488647461
    8. '_right' → logprob: -11.46041488647461
    9. 'left' → logprob: -11.83541488647461
    10. '_word' → logprob: -11.96041488647461

Token 609: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49699047207832336
    2. 'j' → logprob: -0.996990442276001
    3. 'i' → logprob: -3.996990442276001
    4. ' j' → logprob: -6.37199068069458
    5. 'while' → logprob: -6.37199068069458
    6. 'end' → logprob: -8.996990203857422
    7. '   ' → logprob: -9.121990203857422
    8. ' i' → logprob: -9.246990203857422
    9. 'start' → logprob: -9.371990203857422
    10. '```' → logprob: -9.371990203857422

Token 610: '           ' (ID: 352)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4020085334777832
    2. '           ' → logprob: -1.2770085334777832
    3. 'i' → logprob: -3.152008533477783
    4. ' j' → logprob: -5.027008533477783
    5. '```' → logprob: -7.152008533477783
    6. 'while' → logprob: -7.277008533477783
    7. ' i' → logprob: -7.902008533477783
    8. '   ' → logprob: -8.527008056640625
    9. '       ' → logprob: -8.777008056640625
    10. 'end' → logprob: -8.902008056640625

Token 611: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.02194550819694996
    2. 'while' → logprob: -3.8969454765319824
    3. 'start' → logprob: -7.146945476531982
    4. 'i' → logprob: -8.02194595336914
    5. '           ' → logprob: -9.27194595336914
    6. 'word' → logprob: -10.27194595336914
    7. ' j' → logprob: -10.27194595336914
    8. '   ' → logprob: -10.52194595336914
    9. 'end' → logprob: -10.52194595336914
    10. ' while' → logprob: -10.52194595336914

Token 612: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759992003440857
    2. '=' → logprob: -0.8259992003440857
    3. '=i' → logprob: -9.95099925994873
    4. 'i' → logprob: -11.82599925994873
    5. '=j' → logprob: -12.57599925994873
    6. '+=' → logprob: -15.07599925994873
    7. ' +=' → logprob: -15.45099925994873
    8. '   ' → logprob: -16.075998306274414
    9. '```' → logprob: -16.075998306274414
    10. ' ' → logprob: -16.325998306274414

Token 613: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00430323788896203
    2. ' i' → logprob: -5.504303455352783
    3. 'cursor' → logprob: -8.754302978515625
    4. '0' → logprob: -10.004302978515625
    5. ' cursor' → logprob: -11.379302978515625
    6. '   ' → logprob: -12.754302978515625
    7. ' ' → logprob: -12.879302978515625
    8. 'j' → logprob: -13.754302978515625
    9. 'idx' → logprob: -13.879302978515625
    10. '```' → logprob: -14.754302978515625

Token 614: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.019891291856765747
    2. ' +' → logprob: -4.144891262054443
    3. '           ' → logprob: -6.019891262054443
    4. 'while' → logprob: -7.144891262054443
    5. '
' → logprob: -8.519891738891602
    6. '+j' → logprob: -8.894891738891602
    7. '       ' → logprob: -9.644891738891602
    8. '   ' → logprob: -10.144891738891602
    9. '0' → logprob: -10.269891738891602
    10. '<|end|>' → logprob: -11.019891738891602

Token 615: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6483837366104126
    2. 'while' → logprob: -0.7733837366104126
    3. ' while' → logprob: -5.148383617401123
    4. '       ' → logprob: -5.148383617401123
    5. '+' → logprob: -6.023383617401123
    6. '   ' → logprob: -6.898383617401123
    7. '               ' → logprob: -8.023384094238281
    8. 'j' → logprob: -9.648384094238281
    9. '	while' → logprob: -9.648384094238281
    10. '```' → logprob: -10.523384094238281

Token 616: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -1.723973582556937e-05
    2. '           ' → logprob: -11.625017166137695
    3. ' while' → logprob: -11.750017166137695
    4. 'While' → logprob: -15.875017166137695
    5. '	while' → logprob: -16.500017166137695
    6. '       ' → logprob: -16.875017166137695
    7. '```' → logprob: -17.125017166137695
    8. '            
' → logprob: -18.750017166137695
    9. 'j' → logprob: -19.375017166137695
    10. '               ' → logprob: -19.625017166137695

Token 617: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2014961838722229
    2. ' j' → logprob: -1.7014961242675781
    3. 'right' → logprob: -9.826496124267578
    4. ' right' → logprob: -11.201496124267578
    5. '   ' → logprob: -11.951496124267578
    6. ' ' → logprob: -12.826496124267578
    7. '	j' → logprob: -13.451496124267578
    8. '    ' → logprob: -13.826496124267578
    9. '$j' → logprob: -14.201496124267578
    10. 'text' → logprob: -14.701496124267578

Token 618: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0037534094881266356
    2. '<' → logprob: -5.753753185272217
    3. '<len' → logprob: -7.503753185272217
    4. '<|end|>' → logprob: -11.378753662109375
    5. '<n' → logprob: -12.378753662109375
    6. '+' → logprob: -12.878753662109375
    7. 'j' → logprob: -13.253753662109375
    8. '<|end|>' → logprob: -14.128753662109375
    9. '<s' → logprob: -14.878753662109375
    10. ' +' → logprob: -14.878753662109375

Token 619: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0002625278721097857
    2. ' len' → logprob: -8.250262260437012
    3. 'j' → logprob: -14.625262260437012
    4. 'n' → logprob: -15.375262260437012
    5. '(len' → logprob: -15.500262260437012
    6. '   ' → logprob: -16.500263214111328
    7. 'i' → logprob: -16.625263214111328
    8. '=len' → logprob: -16.625263214111328
    9. '	len' → logprob: -16.875263214111328
    10. '[len' → logprob: -17.000263214111328

Token 620: '(right' (ID: 52104)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.08675727248191833
    2. '(right' → logprob: -2.836757183074951
    3. ' right' → logprob: -3.711757183074951
    4. '[right' → logprob: -10.58675765991211
    5. 'text' → logprob: -11.33675765991211
    6. '	right' → logprob: -12.33675765991211
    7. ',right' → logprob: -13.08675765991211
    8. ' (' → logprob: -13.58675765991211
    9. '(' → logprob: -13.83675765991211
    10. '(text' → logprob: -14.21175765991211

Token 621: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12720736861228943
    2. 'and' → logprob: -2.1272072792053223
    3. ')' → logprob: -8.25220775604248
    4. '[j' → logprob: -12.00220775604248
    5. 'j' → logprob: -12.12720775604248
    6. '           ' → logprob: -13.25220775604248
    7. ' ' → logprob: -13.87720775604248
    8. '	and' → logprob: -14.25220775604248
    9. '```' → logprob: -14.50220775604248
    10. ']' → logprob: -15.00220775604248

Token 622: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.25192946195602417
    2. ' and' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.75192928314209
    4. '           ' → logprob: -16.376930236816406
    5. '	and' → logprob: -16.501930236816406
    6. '+' → logprob: -16.876930236816406
    7. '<|end|>' → logprob: -18.251930236816406
    8. '          ' → logprob: -18.501930236816406
    9. '```' → logprob: -19.001930236816406
    10. '   ' → logprob: -19.251930236816406

Token 623: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.07889056205749512
    2. ' right' → logprob: -2.578890562057495
    3. '	right' → logprob: -14.703890800476074
    4. 'rightness' → logprob: -16.828889846801758
    5. '[right' → logprob: -16.953889846801758
    6. '(right' → logprob: -17.328889846801758
    7. ' ' → logprob: -17.578889846801758
    8. '   ' → logprob: -17.703889846801758
    9. '           ' → logprob: -17.703889846801758
    10. 'j' → logprob: -17.703889846801758

Token 624: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.750006675720215
    3. 'j' → logprob: -13.375006675720215
    4. '[
' → logprob: -14.625006675720215
    5. '[i' → logprob: -14.875006675720215
    6. '   ' → logprob: -14.875006675720215
    7. '][' → logprob: -15.500006675720215
    8. ' [' → logprob: -15.500006675720215
    9. ')[' → logprob: -15.875006675720215
    10. '```' → logprob: -16.12500762939453

Token 625: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007221927400678396
    2. ']!=' → logprob: -5.382221698760986
    3. ' !=' → logprob: -6.507221698760986
    4. '!=' → logprob: -7.007221698760986
    5. ']!='' → logprob: -9.757222175598145
    6. ' ]' → logprob: -9.882222175598145
    7. '[j' → logprob: -10.132222175598145
    8. '[' → logprob: -10.382222175598145
    9. 'j' → logprob: -12.632222175598145
    10. '']' → logprob: -12.882222175598145

Token 626: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5759705901145935
    2. ' !=' → logprob: -0.8259705901145935
    3. '!='' → logprob: -10.700970649719238
    4. ')!=' → logprob: -13.450970649719238
    5. ']!=' → logprob: -13.575970649719238
    6. '!=-' → logprob: -14.075970649719238
    7. '!="' → logprob: -14.325970649719238
    8. ' not' → logprob: -14.450970649719238
    9. '```' → logprob: -14.450970649719238
    10. '[' → logprob: -14.700970649719238

Token 627: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007230373448692262
    2. ' '' → logprob: -7.250722885131836
    3. '"' → logprob: -11.375722885131836
    4. ' ' → logprob: -14.375722885131836
    5. '`' → logprob: -14.625722885131836
    6. ''s' → logprob: -15.000722885131836
    7. '('' → logprob: -16.875722885131836
    8. '```' → logprob: -17.500722885131836
    9. 'space' → logprob: -17.750722885131836
    10. 's' → logprob: -18.125722885131836

Token 628: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.016288429498672485
    2. ' '' → logprob: -4.1412882804870605
    3. ''s' → logprob: -9.266288757324219
    4. ' ' → logprob: -9.266288757324219
    5. ''>' → logprob: -10.391288757324219
    6. '<|end|>' → logprob: -11.641288757324219
    7. 'space' → logprob: -12.141288757324219
    8. ' '>' → logprob: -12.266288757324219
    9. ' ')' → logprob: -13.016288757324219
    10. '"' → logprob: -13.141288757324219

Token 629: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5802931189537048
    2. ':' → logprob: -1.2052931785583496
    3. '               ' → logprob: -2.5802931785583496
    4. '           ' → logprob: -3.4552931785583496
    5. '+' → logprob: -4.83029317855835
    6. 'j' → logprob: -5.20529317855835
    7. ':j' → logprob: -5.20529317855835
    8. '       ' → logprob: -5.45529317855835
    9. ' and' → logprob: -6.33029317855835
    10. 'and' → logprob: -6.45529317855835

Token 630: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01166907325387001
    2. 'j' → logprob: -4.636669158935547
    3. '           ' → logprob: -6.636669158935547
    4. ' j' → logprob: -8.136669158935547
    5. ':j' → logprob: -9.136669158935547
    6. '```' → logprob: -9.886669158935547
    7. '       ' → logprob: -10.386669158935547
    8. '   ' → logprob: -10.511669158935547
    9. '[j' → logprob: -11.011669158935547
    10. ':' → logprob: -11.511669158935547

Token 631: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.023252932354807854
    2. ' j' → logprob: -3.7732529640197754
    3. '               ' → logprob: -12.523252487182617
    4. '	j' → logprob: -13.398252487182617
    5. '           ' → logprob: -14.023252487182617
    6. '                   ' → logprob: -14.148252487182617
    7. '   ' → logprob: -14.648252487182617
    8. '$j' → logprob: -16.398252487182617
    9. '```' → logprob: -16.773252487182617
    10. '       ' → logprob: -16.773252487182617

Token 632: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47431880235671997
    2. ' +=' → logprob: -0.97431880235672
    3. '+' → logprob: -8.474318504333496
    4. 'j' → logprob: -11.599318504333496
    5. ' +' → logprob: -11.974318504333496
    6. '+j' → logprob: -12.349318504333496
    7. ']+=' → logprob: -12.474318504333496
    8. '=' → logprob: -12.474318504333496
    9. ' j' → logprob: -13.724318504333496
    10. '++' → logprob: -14.224318504333496

Token 633: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.313294380903244
    2. ' ' → logprob: -1.3132944107055664
    3. ' j' → logprob: -10.813294410705566
    4. 'j' → logprob: -11.313294410705566
    5. '```' → logprob: -16.31329345703125
    6. '   ' → logprob: -16.56329345703125
    7. ')' → logprob: -16.68829345703125
    8. '0' → logprob: -17.81329345703125
    9. ' ' → logprob: -18.12579345703125
    10. '>' → logprob: -18.25079345703125

Token 634: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013834332639817148
    2. ' ' → logprob: -9.000138282775879
    3. 'j' → logprob: -11.125138282775879
    4. ' j' → logprob: -16.125139236450195
    5. '```' → logprob: -17.875139236450195
    6. '   ' → logprob: -18.125139236450195
    7. '$j' → logprob: -20.250139236450195
    8. ')' → logprob: -20.375139236450195
    9. '0' → logprob: -20.500139236450195
    10. '`' → logprob: -21.000139236450195

Token 635: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1868455708026886
    2. 'text' → logprob: -2.186845541000366
    3. ' text' → logprob: -3.436845541000366
    4. '
' → logprob: -4.186845779418945
    5. 'cursor' → logprob: -5.436845779418945
    6. '               ' → logprob: -5.936845779418945
    7. '            
' → logprob: -6.686845779418945
    8. ' cursor' → logprob: -6.936845779418945
    9. 'i' → logprob: -8.311845779418945
    10. '       ' → logprob: -8.561845779418945

Token 636: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.615174412727356
    2. 'text' → logprob: -1.365174412727356
    3. ' text' → logprob: -1.615174412727356
    4. '               ' → logprob: -5.990174293518066
    5. '
' → logprob: -6.990174293518066
    6. '            
' → logprob: -7.990174293518066
    7. 'remove' → logprob: -8.615174293518066
    8. '```' → logprob: -8.990174293518066
    9. 'delete' → logprob: -8.990174293518066
    10. ' delete' → logprob: -9.240174293518066

Token 637: ' #' (ID: 1069)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.0030547119677066803
    2. '           ' → logprob: -6.253054618835449
    3. 'del' → logprob: -8.00305461883545
    4. 'delete' → logprob: -8.75305461883545
    5. ' text' → logprob: -8.75305461883545
    6. 'right' → logprob: -8.75305461883545
    7. '               ' → logprob: -9.12805461883545
    8. 'end' → logprob: -9.50305461883545
    9. 'remove' → logprob: -9.62805461883545
    10. 'cut' → logprob: -11.25305461883545

Token 638: ' delete' (ID: 6168)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.005321396980434656
    2. 'right' → logprob: -6.755321502685547
    3. ' text' → logprob: -7.255321502685547
    4. 'to' → logprob: -7.255321502685547
    5. 'delete' → logprob: -7.380321502685547
    6. 'del' → logprob: -7.380321502685547
    7. 'end' → logprob: -7.755321502685547
    8. 'k' → logprob: -8.005321502685547
    9. 'remove' → logprob: -8.005321502685547
    10. 'cut' → logprob: -8.755321502685547

Token 639: ' from' (ID: 591)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.09724631905555725
    2. ' text' → logprob: -2.4722464084625244
    3. '           ' → logprob: -4.847246170043945
    4. '   ' → logprob: -8.222246170043945
    5. '       ' → logprob: -9.097246170043945
    6. '               ' → logprob: -10.847246170043945
    7. 'right' → logprob: -11.847246170043945
    8. 'cursor' → logprob: -12.597246170043945
    9. ' ' → logprob: -12.722246170043945
    10. ' right' → logprob: -13.722246170043945

Token 640: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.004169575870037079
    2. ' cursor' → logprob: -5.504169464111328
    3. '0' → logprob: -9.754169464111328
    4. '	cursor' → logprob: -11.754169464111328
    5. '   ' → logprob: -12.004169464111328
    6. '(cursor' → logprob: -12.379169464111328
    7. 'text' → logprob: -12.879169464111328
    8. '```' → logprob: -13.004169464111328
    9. ' ' → logprob: -13.254169464111328
    10. '
' → logprob: -13.504169464111328

Token 641: ' to' (ID: 316)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.13484662771224976
    2. 'text' → logprob: -3.0098466873168945
    3. ':' → logprob: -3.8848466873168945
    4. ' =' → logprob: -4.0098466873168945
    5. ' cursor' → logprob: -4.3848466873168945
    6. '=' → logprob: -5.1348466873168945
    7. ' :' → logprob: -5.5098466873168945
    8. ' to' → logprob: -6.1348466873168945
    9. '+' → logprob: -6.2598466873168945
    10. '           ' → logprob: -6.5098466873168945

Token 642: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.0232709851115942
    2. ' cursor' → logprob: -3.773271083831787
    3. 'j' → logprob: -10.773270606994629
    4. '	cursor' → logprob: -13.148270606994629
    5. '(cursor' → logprob: -13.773270606994629
    6. '
' → logprob: -14.773270606994629
    7. '   ' → logprob: -15.273270606994629
    8. 'c' → logprob: -15.398270606994629
    9. '.cursor' → logprob: -16.273271560668945
    10. ' j' → logprob: -16.273271560668945

Token 643: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5469508171081543
    2. '+j' → logprob: -1.2969508171081543
    3. '+' → logprob: -1.9219508171081543
    4. '+i' → logprob: -6.796950817108154
    5. '+c' → logprob: -8.296951293945312
    6. 'cursor' → logprob: -8.546951293945312
    7. ' cursor' → logprob: -11.046951293945312
    8. 'j' → logprob: -11.671951293945312
    9. '   ' → logprob: -12.546951293945312
    10. ' ' → logprob: -13.046951293945312

Token 644: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003643191885203123
    2. ' j' → logprob: -6.128643035888672
    3. 'cursor' → logprob: -7.003643035888672
    4. 'i' → logprob: -7.753643035888672
    5. '(j' → logprob: -9.628643035888672
    6. ' cursor' → logprob: -11.253643035888672
    7. ' (' → logprob: -11.503643035888672
    8. '   ' → logprob: -11.878643035888672
    9. ' i' → logprob: -12.128643035888672
    10. ' ' → logprob: -12.128643035888672

Token 645: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3515426814556122
    2. 'text' → logprob: -1.4765427112579346
    3. '+' → logprob: -3.3515427112579346
    4. '               ' → logprob: -4.4765424728393555
    5. ' +' → logprob: -4.7265424728393555
    6. '       ' → logprob: -5.1015424728393555
    7. 'cursor' → logprob: -6.4765424728393555
    8. ' text' → logprob: -6.7265424728393555
    9. '   ' → logprob: -6.9765424728393555
    10. '
' → logprob: -7.4765424728393555

Token 646: '           ' (ID: 352)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.062199704349040985
    2. '           ' → logprob: -2.937199592590332
    3. ' text' → logprob: -5.437199592590332
    4. '       ' → logprob: -6.437199592590332
    5. '   ' → logprob: -7.562199592590332
    6. '               ' → logprob: -7.687199592590332
    7. ' =' → logprob: -8.812199592590332
    8. '{text' → logprob: -9.937199592590332
    9. '
' → logprob: -10.187199592590332
    10. '                   ' → logprob: -10.562199592590332

Token 647: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' (adapté à ' text') → logprob: -0.050595972687006
    2. ' text' → logprob: -3.050595998764038
    3. '
' → logprob: -6.925595760345459
    4. '           ' → logprob: -7.300595760345459
    5. '   ' → logprob: -8.800596237182617
    6. '       ' → logprob: -9.550596237182617
    7. '               ' → logprob: -9.550596237182617
    8. '```' → logprob: -10.925596237182617
    9. '{text' → logprob: -11.425596237182617
    10. '            
' → logprob: -12.300596237182617

Token 648: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31425052881240845
    2. '=' → logprob: -1.3142504692077637
    3. '[:' → logprob: -6.939250469207764
    4. '=c' → logprob: -11.689250946044922
    5. '=cut' → logprob: -12.689250946044922
    6. '   ' → logprob: -13.314250946044922
    7. '[:]' → logprob: -13.314250946044922
    8. '       ' → logprob: -13.689250946044922
    9. '=
' → logprob: -14.064250946044922
    10. '           ' → logprob: -14.314250946044922

Token 649: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.16022524237632751
    2. 'text' → logprob: -1.91022527217865
    3. '{text' → logprob: -14.410224914550781
    4. '(text' → logprob: -16.03522491455078
    5. '	text' → logprob: -16.28522491455078
    6. '"text' → logprob: -16.41022491455078
    7. '.text' → logprob: -16.66022491455078
    8. '=text' → logprob: -16.91022491455078
    9. '```' → logprob: -17.28522491455078
    10. '[text' → logprob: -17.91022491455078

Token 650: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: 0.0
    2. '[:]' → logprob: -19.375
    3. ':' → logprob: -19.75
    4. ' [:' → logprob: -20.0
    5. '][:' → logprob: -20.125
    6. '[' → logprob: -20.125
    7. '[:-' → logprob: -20.375
    8. '```' → logprob: -21.125
    9. '   ' → logprob: -21.5
    10. '[:,' → logprob: -22.5

Token 651: 'cursor' (ID: 34222)
  Prédit: 'cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -1.688212614681106e-05
    2. ' cursor' → logprob: -11.000017166137695
    3. '(cursor' → logprob: -15.875017166137695
    4. '	cursor' → logprob: -18.000017166137695
    5. '   ' → logprob: -18.875017166137695
    6. '.cursor' → logprob: -19.500017166137695
    7. '```' → logprob: -20.375017166137695
    8. ' ' → logprob: -20.375017166137695
    9. '
' → logprob: -20.500017166137695
    10. '_cursor' → logprob: -20.500017166137695

Token 652: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04416906461119652
    2. ' +' → logprob: -3.4191689491271973
    3. '+j' → logprob: -5.044168949127197
    4. ']' → logprob: -5.544168949127197
    5. ']+' → logprob: -9.294169425964355
    6. '+]' → logprob: -11.669169425964355
    7. '+
' → logprob: -13.294169425964355
    8. ' ]' → logprob: -13.419169425964355
    9. '   ' → logprob: -13.419169425964355
    10. '+c' → logprob: -13.544169425964355

Token 653: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759486556053162
    2. ' +' → logprob: -0.8259486556053162
    3. '+j' → logprob: -11.700948715209961
    4. '   ' → logprob: -15.575948715209961
    5. '       ' → logprob: -15.950948715209961
    6. '+
' → logprob: -16.07594871520996
    7. ' ' → logprob: -16.07594871520996
    8. '```' → logprob: -16.07594871520996
    9. '           ' → logprob: -16.32594871520996
    10. 'text' → logprob: -16.82594871520996

Token 654: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.06689911335706711
    2. 'text' → logprob: -2.816899061203003
    3. ' right' → logprob: -5.566899299621582
    4. ' text' → logprob: -6.816899299621582
    5. '   ' → logprob: -13.941899299621582
    6. ' ' → logprob: -15.191899299621582
    7. '       ' → logprob: -15.816899299621582
    8. '[right' → logprob: -16.191898345947266
    9. '	right' → logprob: -16.316898345947266
    10. '    ' → logprob: -17.066898345947266

Token 655: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.5
    3. 'j' → logprob: -15.625
    4. '[:' → logprob: -18.375
    5. '```' → logprob: -18.5
    6. '   ' → logprob: -18.625
    7. '[i' → logprob: -18.625
    8. '
' → logprob: -18.75
    9. '[
' → logprob: -19.625
    10. ' [' → logprob: -20.75

Token 656: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.00027301779482513666
    2. ']' → logprob: -9.250272750854492
    3. ' :]' → logprob: -9.625272750854492
    4. ':' → logprob: -9.750272750854492
    5. ':],' → logprob: -10.375272750854492
    6. '...]' → logprob: -11.625272750854492
    7. ':].' → logprob: -12.000272750854492
    8. ':]
' → logprob: -12.875272750854492
    9. ':j' → logprob: -13.750272750854492
    10. '+]' → logprob: -14.375272750854492

Token 657: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 658: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 659: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006542235147207975
    2. ':
' → logprob: -5.131542205810547
    3. ' :' → logprob: -7.506542205810547
    4. '       ' → logprob: -10.631542205810547
    5. ' :
' → logprob: -11.631542205810547
    6. '   ' → logprob: -12.006542205810547
    7. '           ' → logprob: -12.006542205810547
    8. '[' → logprob: -12.631542205810547
    9. '=' → logprob: -12.756542205810547
    10. 'if' → logprob: -13.131542205810547

Token 660: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0279074907302856
    2. '           ' → logprob: -1.1529074907302856
    3. 'pass' → logprob: -1.7779074907302856
    4. ' pass' → logprob: -2.652907371520996
    5. '   ' → logprob: -2.652907371520996
    6. 'continue' → logprob: -4.527907371520996
    7. ' continue' → logprob: -5.277907371520996
    8. '	pass' → logprob: -8.277907371520996
    9. 'raise' → logprob: -8.527907371520996
    10. '#' → logprob: -9.277907371520996

Token 661: ' #' (ID: 1069)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.20519691705703735
    2. 'pass' → logprob: -1.7051968574523926
    3. ' continue' → logprob: -5.830196857452393
    4. 'continue' → logprob: -7.455196857452393
    5. '   ' → logprob: -8.33019733428955
    6. '#' (adapté à ' #') → logprob: -12.08019733428955
    7. ' #' → logprob: -12.20519733428955
    8. '	pass' → logprob: -12.70519733428955
    9. 'raise' → logprob: -13.33019733428955
    10. '       ' → logprob: -14.20519733428955

Token 662: ' unknown' (ID: 17927)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.0017502688569948077
    2. 'continue' → logprob: -7.251750469207764
    3. ' pass' → logprob: -7.501750469207764
    4. '#' → logprob: -7.751750469207764
    5. '   ' → logprob: -10.626749992370605
    6. 'raise' → logprob: -10.626749992370605
    7. 'break' → logprob: -12.501749992370605
    8. 'print' → logprob: -13.126749992370605
    9. '           ' → logprob: -13.626749992370605
    10. '       ' → logprob: -13.876749992370605

Token 663: ' command' (ID: 6348)
  Prédit: ' command'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' command' → logprob: -0.10038674622774124
    2. 'command' → logprob: -2.97538685798645
    3. '_command' → logprob: -3.35038685798645
    4. '<|end|>' → logprob: -5.850386619567871
    5. '       ' → logprob: -6.975386619567871
    6. '   ' → logprob: -7.100386619567871
    7. ' ' → logprob: -7.225386619567871
    8. ' cmd' → logprob: -7.475386619567871
    9. '	command' → logprob: -7.600386619567871
    10. 'cmd' → logprob: -7.975386619567871

Token 664: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012086097151041031
    2. ' continue' → logprob: -5.387085914611816
    3. ':' → logprob: -5.887085914611816
    4. '       ' → logprob: -6.262085914611816
    5. 'continue' → logprob: -7.012085914611816
    6. ' pass' → logprob: -7.387085914611816
    7. '   ' → logprob: -7.512085914611816
    8. ':
' → logprob: -8.387085914611816
    9. 'pass' → logprob: -8.637085914611816
    10. '	continue' → logprob: -10.137085914611816

Token 665: ' ignore' (ID: 17887)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9540104269981384
    2. '           ' → logprob: -1.3290104866027832
    3. ' pass' → logprob: -1.4540104866027832
    4. '       ' → logprob: -3.079010486602783
    5. 'continue' → logprob: -3.079010486602783
    6. 'pass' → logprob: -3.829010486602783
    7. '   ' → logprob: -5.954010486602783
    8. '               ' → logprob: -10.454010009765625
    9. '	pass' → logprob: -10.704010009765625
    10. '	continue' → logprob: -11.204010009765625

Token 666: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 667: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 668: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.6167568564414978
    2. 'continue' → logprob: -1.3667569160461426
    3. ' pass' → logprob: -2.1167569160461426
    4. '   ' → logprob: -2.8667569160461426
    5. ' continue' → logprob: -3.6167569160461426
    6. '       ' → logprob: -6.991756916046143
    7. '           ' → logprob: -8.241756439208984
    8. '	pass' → logprob: -11.741756439208984
    9. '```' → logprob: -12.616756439208984
    10. '	continue' → logprob: -12.616756439208984

Token 669: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 670: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0030223913490772247
    2. '   ' → logprob: -6.378022193908691
    3. '<|end|>' → logprob: -7.003022193908691
    4. ' print' → logprob: -8.753022193908691
    5. '
' → logprob: -9.253022193908691
    6. 'if' → logprob: -10.003022193908691
    7. '```' → logprob: -10.003022193908691
    8. 'for' → logprob: -10.878022193908691
    9. ')' → logprob: -11.253022193908691
    10. ' if' → logprob: -12.128022193908691

Token 671: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007119550718925893
    2. '   ' → logprob: -7.250711917877197
    3. ' print' → logprob: -13.625712394714355
    4. '```' → logprob: -14.375712394714355
    5. 'for' → logprob: -15.625712394714355
    6. '	print' → logprob: -17.87571144104004
    7. '#print' → logprob: -19.37571144104004
    8. '`' → logprob: -19.37571144104004
    9. '``' → logprob: -19.50071144104004
    10. '(print' → logprob: -20.37571144104004

Token 672: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.895480277715251e-06
    2. ' print' → logprob: -12.000008583068848
    3. '   ' → logprob: -12.875008583068848
    4. '```' → logprob: -17.875009536743164
    5. 'for' → logprob: -18.750009536743164
    6. '#print' → logprob: -19.875009536743164
    7. ' ' → logprob: -20.000009536743164
    8. '	print' → logprob: -20.125009536743164
    9. '    
' → logprob: -20.875009536743164
    10. 'prints' → logprob: -21.250009536743164

Token 673: ' text' (ID: 2201)
  Prédit: '(text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.00017803447553887963
    2. 'text' → logprob: -9.000178337097168
    3. '(' → logprob: -11.125178337097168
    4. '(len' → logprob: -11.375178337097168
    5. '(cursor' → logprob: -11.625178337097168
    6. '()' → logprob: -11.750178337097168
    7. '(f' → logprob: -12.125178337097168
    8. 'print' → logprob: -13.125178337097168
    9. '(print' → logprob: -13.500178337097168
    10. '((' → logprob: -14.375178337097168

Token 674: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010488852858543396
    2. 'print' → logprob: -6.876049041748047
    3. '```' → logprob: -11.751049041748047
    4. '    
' → logprob: -12.876049041748047
    5. '(' → logprob: -13.376049041748047
    6. '()' → logprob: -14.001049041748047
    7. '()
' → logprob: -14.251049041748047
    8. ' print' → logprob: -14.251049041748047
    9. '(print' → logprob: -14.626049041748047
    10. '       ' → logprob: -14.876049041748047

Token 675: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.1777237355709076
    2. ''' → logprob: -1.92772376537323
    3. '|' → logprob: -5.4277238845825195
    4. '"|' → logprob: -5.4277238845825195
    5. '"' → logprob: -5.6777238845825195
    6. 'caret' → logprob: -5.9277238845825195
    7. ' cursor' → logprob: -6.6777238845825195
    8. '_|' → logprob: -7.9277238845825195
    9. '_cursor' → logprob: -8.92772388458252
    10. 'the' → logprob: -9.55272388458252

Token 676: ' as' (ID: 472)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08387091010808945
    2. '   ' → logprob: -2.7088708877563477
    3. 'text' → logprob: -5.208870887756348
    4. '()
' → logprob: -5.583870887756348
    5. '
' → logprob: -5.708870887756348
    6. 'for' → logprob: -8.083870887756348
    7. '    
' → logprob: -8.458870887756348
    8. '  
' → logprob: -8.958870887756348
    9. ')
' → logprob: -9.333870887756348
    10. '(text' → logprob: -9.583870887756348

Token 677: ' ^
' (ID: 189324)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4910523295402527
    2. '|' → logprob: -0.9910523295402527
    3. '"' → logprob: -4.616052150726318
    4. 'text' → logprob: -5.241052150726318
    5. '"|' → logprob: -7.116052150726318
    6. ''^' → logprob: -8.491052627563477
    7. '`' → logprob: -8.866052627563477
    8. '_|' → logprob: -9.741052627563477
    9. '|`
' → logprob: -9.741052627563477
    10. ' "|"' → logprob: -10.116052627563477

Token 678: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002601937623694539
    2. 'output' → logprob: -7.0026021003723145
    3. '   ' → logprob: -7.1276021003723145
    4. 'pos' → logprob: -8.002601623535156
    5. '```' → logprob: -8.627601623535156
    6. 'cursor' → logprob: -9.377601623535156
    7. 'result' → logprob: -9.627601623535156
    8. 'position' → logprob: -9.752601623535156
    9. ' print' → logprob: -10.002601623535156
    10. 'left' → logprob: -10.377601623535156

Token 679: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010743727907538414
    2. 'output' → logprob: -7.501074314117432
    3. 'result' → logprob: -8.87607479095459
    4. 'out' → logprob: -8.87607479095459
    5. 'pos' → logprob: -9.75107479095459
    6. 'cursor' → logprob: -9.75107479095459
    7. 'before' → logprob: -10.62607479095459
    8. 'left' → logprob: -10.75107479095459
    9. 'res' → logprob: -10.87607479095459
    10. 'pr' → logprob: -11.50107479095459

Token 680: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.3157283663749695
    2. 'text' → logprob: -1.3157284259796143
    3. '(' → logprob: -6.065728187561035
    4. ' text' → logprob: -9.565728187561035
    5. '('' → logprob: -10.815728187561035
    6. '()' → logprob: -11.315728187561035
    7. '   ' → logprob: -11.565728187561035
    8. '"text' → logprob: -11.940728187561035
    9. '("' → logprob: -12.440728187561035
    10. '(f' → logprob: -12.815728187561035

Token 681: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -5.848420551046729e-05
    2. '[' → logprob: -10.2500581741333
    3. '   ' → logprob: -11.0000581741333
    4. '.replace' → logprob: -12.8750581741333
    5. ',' → logprob: -13.5000581741333
    6. ')' → logprob: -14.3750581741333
    7. ')
' → logprob: -14.5000581741333
    8. '.insert' → logprob: -15.1250581741333
    9. '+' → logprob: -15.5000581741333
    10. ' [:' → logprob: -15.5000581741333

Token 682: 'cursor' (ID: 34222)
  Prédit: 'cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -6.704273118884885e-07
    2. ' cursor' → logprob: -14.250000953674316
    3. '   ' → logprob: -18.875
    4. '	cursor' → logprob: -19.125
    5. '.cursor' → logprob: -19.375
    6. '(cursor' → logprob: -19.5
    7. 'ursor' → logprob: -19.75
    8. ' ' → logprob: -20.625
    9. '_cursor' → logprob: -20.75
    10. 'Cursor' → logprob: -22.0

Token 683: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012713411822915077
    2. ' +' → logprob: -4.387713432312012
    3. '+'' → logprob: -8.887713432312012
    4. ',' → logprob: -10.762713432312012
    5. ')' → logprob: -10.762713432312012
    6. '+"' → logprob: -11.262713432312012
    7. '+')' → logprob: -12.387713432312012
    8. '^' → logprob: -13.512713432312012
    9. '+")' → logprob: -13.512713432312012
    10. '   ' → logprob: -14.012713432312012

Token 684: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0037521019112318754
    2. ' +' → logprob: -5.6287522315979
    3. '+'' → logprob: -9.378751754760742
    4. '^' → logprob: -10.628751754760742
    5. ')' → logprob: -10.878751754760742
    6. ',' → logprob: -11.503751754760742
    7. '+"' → logprob: -12.003751754760742
    8. '+')' → logprob: -12.378751754760742
    9. '+")' → logprob: -13.753751754760742
    10. '+
' → logprob: -13.878751754760742

Token 685: ' '^' (ID: 117788)
  Prédit: ''^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''^' → logprob: -0.3166681230068207
    2. '"' → logprob: -1.316668152809143
    3. '^' → logprob: -5.6916680335998535
    4. ''' → logprob: -11.066668510437012
    5. '_^' → logprob: -13.066668510437012
    6. '^)' → logprob: -13.066668510437012
    7. '("^' → logprob: -13.316668510437012
    8. '`' → logprob: -13.316668510437012
    9. ' '^' → logprob: -13.691668510437012
    10. ' "^' → logprob: -14.066668510437012

Token 686: ''' (ID: 6)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05054440721869469
    2. ' +' → logprob: -3.425544500350952
    3. 'text' → logprob: -4.175544261932373
    4. ''' → logprob: -7.050544261932373
    5. ')' → logprob: -8.175544738769531
    6. ' text' → logprob: -9.300544738769531
    7. '')' → logprob: -9.425544738769531
    8. '<|end|>' → logprob: -10.925544738769531
    9. '{text' → logprob: -10.925544738769531
    10. '[text' → logprob: -11.675544738769531

Token 687: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0380435548722744
    2. ' +' → logprob: -3.28804349899292
    3. ')' → logprob: -13.288043975830078
    4. 'text' → logprob: -15.163043975830078
    5. '+)' → logprob: -16.913043975830078
    6. '+
' → logprob: -17.413043975830078
    7. '<|end|>' → logprob: -17.788043975830078
    8. ' ' → logprob: -18.288043975830078
    9. '+'' → logprob: -18.788043975830078
    10. '+c' → logprob: -19.038043975830078

Token 688: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -1.8624639324116288e-06
    2. ' text' → logprob: -13.250001907348633
    3. '(text' → logprob: -22.875001907348633
    4. '.text' → logprob: -23.625001907348633
    5. '{text' → logprob: -24.250001907348633
    6. '	text' → logprob: -25.625001907348633
    7. 'txt' → logprob: -25.625001907348633
    8. '$text' → logprob: -25.875001907348633
    9. '"text' → logprob: -26.375001907348633
    10. 'print' → logprob: -26.500001907348633

Token 689: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.3856492842023727e-06
    2. '[cur' → logprob: -14.125000953674316
    3. '```' → logprob: -15.000000953674316
    4. '[' → logprob: -15.875000953674316
    5. ')' → logprob: -16.750001907348633
    6. ')[' → logprob: -17.250001907348633
    7. '   ' → logprob: -17.375001907348633
    8. '[
' → logprob: -17.500001907348633
    9. '\[' → logprob: -17.500001907348633
    10. ' [' → logprob: -17.875001907348633

Token 690: 'ursor' (ID: 6519)
  Prédit: 'ursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursor' → logprob: -1.318681188422488e-05
    2. 'cursor' → logprob: -12.25001335144043
    3. 'URSOR' → logprob: -12.25001335144043
    4. 'ursors' → logprob: -12.87501335144043
    5. '[' → logprob: -14.50001335144043
    6. 'urs' → logprob: -15.37501335144043
    7. 'rs' → logprob: -16.00001335144043
    8. '.cursor' → logprob: -17.75001335144043
    9. 'ur' → logprob: -18.12501335144043
    10. '```' → logprob: -18.12501335144043

Token 691: ':' (ID: 25)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00868004746735096
    2. ']' → logprob: -4.7586798667907715
    3. ':' → logprob: -10.00868034362793
    4. ')' → logprob: -11.25868034362793
    5. ']+' → logprob: -12.38368034362793
    6. ''])' → logprob: -13.50868034362793
    7. '+' → logprob: -14.38368034362793
    8. ' ])' → logprob: -14.63368034362793
    9. ')]' → logprob: -15.38368034362793
    10. '"])' → logprob: -15.63368034362793

Token 692: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.10026782006025314
    2. ')' → logprob: -2.3502678871154785
    3. ']' → logprob: -10.35026741027832
    4. '})' → logprob: -11.22526741027832
    5. '))' → logprob: -11.60026741027832
    6. ''])' → logprob: -12.60026741027832
    7. '）' → logprob: -13.85026741027832
    8. '>)' → logprob: -14.22526741027832
    9. ')]' → logprob: -14.85026741027832
    10. ')])' → logprob: -14.85026741027832


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 690
Tokens correctement prédits (1ère position, stricte): 255
Tokens correctement prédits (1ère position, avec adaptation): 284
Tokens correctement prédits (top 10): 568
Précision stricte (1ère position): 36.96%
Précision adaptée (1ère position): 41.16%
Précision (top 10): 82.32%
================================================================================
