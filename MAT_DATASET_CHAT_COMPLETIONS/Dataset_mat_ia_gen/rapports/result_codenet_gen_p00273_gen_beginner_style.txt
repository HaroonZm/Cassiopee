================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:22:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
for _ in range(N):
    x, y, b, p = map(int, input().split())
    min_cost = 10**9
    # Acheter de 0 à 6 billets de bain (max 6 comme dans l'énoncé)
    for buy_b in range(7):
        # Acheter de 0 à 6 billets piscine
        for buy_p in range(7):
            # Vérifier qu'on a au moins besoin d'acheter les billets utilisés
            if buy_b < b or buy_p < p:
                continue
            total_tickets = buy_b + buy_p
            # Calcul prix sans remise
            cost = buy_b * x + buy_p * y
            # Vérifier si remise applicable
            if buy_b >= 5 and buy_p >= 2:
                cost = int(cost * 0.8)
            if cost < min_cost:
                min_cost = cost
    print(min_cost)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31470787525177
    2. 'if' → logprob: -2.1897077560424805
    3. 'i' → logprob: -3.3147077560424805
    4. 'a' → logprob: -3.6897077560424805
    5. 's' → logprob: -3.9397077560424805
    6. 'x' → logprob: -4.3147077560424805
    7. '*' → logprob: -4.8147077560424805
    8. 'f' → logprob: -4.9397077560424805
    9. '`' → logprob: -4.9397077560424805
    10. ')' → logprob: -4.9397077560424805

Token 6: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008458074182271957
    2. '  ' → logprob: -5.508458137512207
    3. ' i' → logprob: -5.508458137512207
    4. ' N' → logprob: -8.258458137512207
    5. ' n' → logprob: -11.008458137512207
    6. ' ' → logprob: -11.758458137512207
    7. 'i' → logprob: -12.383458137512207
    8. ' )' → logprob: -12.508458137512207
    9. '```' → logprob: -12.883458137512207
    10. ' ' → logprob: -13.133458137512207

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043124791234731674
    2. 'in' → logprob: -3.1681246757507324
    3. ' ' → logprob: -9.41812515258789
    4. 'n' → logprob: -11.29312515258789
    5. '_' → logprob: -12.04312515258789
    6. ' i' → logprob: -12.16812515258789
    7. '	in' → logprob: -12.41812515258789
    8. 'range' → logprob: -12.54312515258789
    9. ' N' → logprob: -13.54312515258789
    10. '  ' → logprob: -13.66812515258789

Token 8: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868768811225891
    2. ' range' → logprob: -1.1368768215179443
    3. '	range' → logprob: -12.761877059936523
    4. '(range' → logprob: -13.761877059936523
    5. ' ' → logprob: -14.386877059936523
    6. '_range' → logprob: -14.511877059936523
    7. 'rang' → logprob: -15.511877059936523
    8. '_' → logprob: -16.011877059936523
    9. '<|end|>' → logprob: -16.261877059936523
    10. ' xrange' → logprob: -16.511877059936523

Token 9: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002972472459077835
    2. ' (' → logprob: -5.877972602844238
    3. '(N' → logprob: -9.252972602844238
    4. '(n' → logprob: -10.377972602844238
    5. '(
' → logprob: -11.502972602844238
    6. '(range' → logprob: -11.502972602844238
    7. '```' → logprob: -11.752972602844238
    8. ' ' → logprob: -12.127972602844238
    9. '(len' → logprob: -13.127972602844238
    10. '`' → logprob: -13.752972602844238

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04312627390027046
    2. ')' → logprob: -3.418126344680786
    3. ':' → logprob: -4.668126106262207
    4. '):
' → logprob: -11.293126106262207
    5. ':)' → logprob: -11.418126106262207
    6. ' ):' → logprob: -11.668126106262207
    7. ' :' → logprob: -12.918126106262207
    8. '```' → logprob: -13.418126106262207
    9. ''):' → logprob: -13.543126106262207
    10. ' )' → logprob: -13.668126106262207

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004193913657218218
    2. '    
' → logprob: -5.7541937828063965
    3. ' input' → logprob: -7.8791937828063965
    4. '```' → logprob: -8.629194259643555
    5. ' print' → logprob: -8.754194259643555
    6. '    ' → logprob: -9.254194259643555
    7. ' 
' → logprob: -10.129194259643555
    8. 'input' → logprob: -10.504194259643555
    9. 'print' → logprob: -10.754194259643555
    10. ' a' → logprob: -11.129194259643555

Token 12: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22503861784934998
    2. 'print' → logprob: -2.850038528442383
    3. 'a' → logprob: -3.225038528442383
    4. 'x' (adapté à ' x') → logprob: -3.850038528442383
    5. 'name' → logprob: -3.975038528442383
    6. ' a' → logprob: -4.975038528442383
    7. ' print' → logprob: -4.975038528442383
    8. 'text' → logprob: -5.100038528442383
    9. 'line' → logprob: -5.225038528442383
    10. 'data' → logprob: -5.350038528442383

Token 13: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10495086759328842
    2. ',' → logprob: -2.9799509048461914
    3. '=' → logprob: -3.6049509048461914
    4. ' ' → logprob: -4.229950904846191
    5. '.' → logprob: -5.979950904846191
    6. ')' → logprob: -6.854950904846191
    7. ' ,' → logprob: -6.979950904846191
    8. ' +=' → logprob: -7.604950904846191
    9. '   ' → logprob: -7.854950904846191
    10. '[' → logprob: -8.354950904846191

Token 14: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5242465138435364
    2. 'y' → logprob: -0.8992465138435364
    3. ' ' → logprob: -7.399246692657471
    4. ' =' → logprob: -8.024246215820312
    5. '=' → logprob: -9.899246215820312
    6. '<|end|>' → logprob: -10.774246215820312
    7. 'space' → logprob: -10.899246215820312
    8. ''y' → logprob: -11.274246215820312
    9. 'input' → logprob: -11.899246215820312
    10. ',y' → logprob: -12.024246215820312

Token 15: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07207123935222626
    2. '=' → logprob: -2.6970713138580322
    3. ',' → logprob: -6.197071075439453
    4. ')' → logprob: -10.197071075439453
    5. '<|end|>' → logprob: -10.447071075439453
    6. ' ,' → logprob: -11.572071075439453
    7. ' ' → logprob: -12.447071075439453
    8. ' =
' → logprob: -12.697071075439453
    9. '=input' → logprob: -12.697071075439453
    10. ' =",' → logprob: -12.947071075439453

Token 16: ' b' (ID: 287)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21245819330215454
    2. ' ' → logprob: -2.2124581336975098
    3. ' z' → logprob: -2.9624581336975098
    4. '=' → logprob: -3.9624581336975098
    5. 'input' → logprob: -5.83745813369751
    6. ' input' → logprob: -5.83745813369751
    7. 'z' → logprob: -6.21245813369751
    8. ' x' → logprob: -6.71245813369751
    9. '=input' → logprob: -7.46245813369751
    10. 'x' → logprob: -7.96245813369751

Token 17: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6952905654907227
    2. ' =' → logprob: -0.6952905654907227
    3. ',' → logprob: -6.695290565490723
    4. ')' → logprob: -7.070290565490723
    5. '_' → logprob: -10.695290565490723
    6. ' ' → logprob: -11.945290565490723
    7. ' ,' → logprob: -12.945290565490723
    8. '   ' → logprob: -13.195290565490723
    9. ')=' → logprob: -13.195290565490723
    10. '```' → logprob: -13.195290565490723

Token 18: ' p' (ID: 275)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.3028150796890259
    2. 'z' → logprob: -1.4278150796890259
    3. 'w' → logprob: -2.1778149604797363
    4. ' z' → logprob: -2.5528149604797363
    5. ' =' → logprob: -2.5528149604797363
    6. ' w' → logprob: -3.1778149604797363
    7. ' c' → logprob: -3.4278149604797363
    8. 'r' → logprob: -3.9278149604797363
    9. 's' → logprob: -4.052814960479736
    10. 'a' → logprob: -4.177814960479736

Token 19: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14281539618968964
    2. ' =' → logprob: -2.017815351486206
    3. ',' → logprob: -9.267815589904785
    4. ')' → logprob: -10.517815589904785
    5. '=input' → logprob: -11.017815589904785
    6. ')=' → logprob: -14.392815589904785
    7. '_' → logprob: -15.142815589904785
    8. 'input' → logprob: -15.267815589904785
    9. '=line' → logprob: -16.01781463623047
    10. ' ' → logprob: -16.01781463623047

Token 20: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.17999468743801117
    2. 'map' → logprob: -1.8049947023391724
    3. ' input' → logprob: -9.304994583129883
    4. 'input' → logprob: -9.429994583129883
    5. '[' → logprob: -10.679994583129883
    6. ' [' → logprob: -10.679994583129883
    7. ' list' → logprob: -11.179994583129883
    8. '(map' → logprob: -12.179994583129883
    9. 'list' → logprob: -12.304994583129883
    10. '	map' → logprob: -12.679994583129883

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0025148969143629074
    2. '(' → logprob: -7.127514839172363
    3. '(input' → logprob: -7.377514839172363
    4. 'int' → logprob: -7.627514839172363
    5. '(str' → logprob: -7.752514839172363
    6. '(lambda' → logprob: -10.002514839172363
    7. '<int' → logprob: -10.252514839172363
    8. '<|end|>' → logprob: -10.752514839172363
    9. '```' → logprob: -10.877514839172363
    10. '[int' → logprob: -11.377514839172363

Token 22: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10318099707365036
    2. ',input' → logprob: -2.4781808853149414
    3. ',' → logprob: -5.103180885314941
    4. ')' → logprob: -5.603180885314941
    5. 'input' → logprob: -5.978180885314941
    6. '(' → logprob: -6.478180885314941
    7. ' input' → logprob: -8.728180885314941
    8. '=input' → logprob: -10.478180885314941
    9. '[input' → logprob: -10.603180885314941
    10. '<input' → logprob: -10.978180885314941

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006716913543641567
    2. ' input' → logprob: -5.006716728210449
    3. ')' → logprob: -13.63171672821045
    4. '(input' → logprob: -15.63171672821045
    5. '=input' → logprob: -17.006717681884766
    6. ',input' → logprob: -17.006717681884766
    7. '	input' → logprob: -17.756717681884766
    8. '[input' → logprob: -17.881717681884766
    9. '<input' → logprob: -18.006717681884766
    10. ' ' → logprob: -18.756717681884766

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.507972572464496e-05
    2. '()' → logprob: -9.75009536743164
    3. '())' → logprob: -10.50009536743164
    4. ')' → logprob: -11.62509536743164
    5. ' ().' → logprob: -16.00009536743164
    6. '()
' → logprob: -16.75009536743164
    7. '(' → logprob: -17.25009536743164
    8. '.split' → logprob: -18.12509536743164
    9. '());' → logprob: -18.25009536743164
    10. '()))' → logprob: -18.37509536743164

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002695608709473163
    2. 'strip' → logprob: -8.250269889831543
    3. 'rstrip' → logprob: -11.750269889831543
    4. ' split' → logprob: -15.125269889831543
    5. '(split' → logprob: -16.125268936157227
    6. 'spl' → logprob: -18.500268936157227
    7. 's' → logprob: -20.125268936157227
    8. 'read' → logprob: -20.250268936157227
    9. 'plit' → logprob: -20.625268936157227
    10. 'startswith' → logprob: -20.875268936157227

Token 26: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14784051477909088
    2. '())' → logprob: -2.5228404998779297
    3. '))' → logprob: -2.8978404998779297
    4. '()' → logprob: -6.64784049987793
    5. '()))' → logprob: -7.27284049987793
    6. ')`' → logprob: -11.52284049987793
    7. '(' → logprob: -11.77284049987793
    8. ')))' → logprob: -11.89784049987793
    9. '`)' → logprob: -11.89784049987793
    10. ')")' → logprob: -12.14784049987793

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1573089063167572
    2. ' if' → logprob: -3.15730881690979
    3. '
' → logprob: -3.65730881690979
    4. 'if' → logprob: -3.90730881690979
    5. ')' → logprob: -4.282309055328369
    6. 'n' → logprob: -5.157309055328369
    7. ' 
' → logprob: -5.282309055328369
    8. 'print' → logprob: -5.532309055328369
    9. '```' → logprob: -5.532309055328369
    10. '    
' → logprob: -5.657309055328369

Token 28: ' min' (ID: 1349)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6401097178459167
    2. 'if' → logprob: -1.6401097774505615
    3. '   ' → logprob: -2.0151097774505615
    4. '```' → logprob: -3.5151097774505615
    5. ' 
' → logprob: -3.8901097774505615
    6. 's' → logprob: -4.765109539031982
    7. '    ' → logprob: -4.765109539031982
    8. '    
' → logprob: -4.890109539031982
    9. '     
' → logprob: -5.015109539031982
    10. 'n' → logprob: -5.265109539031982

Token 29: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.6667301058769226
    2. '_' → logprob: -0.9167301058769226
    3. '_val' → logprob: -2.7917301654815674
    4. '_price' → logprob: -4.666729927062988
    5. '_x' → logprob: -6.416729927062988
    6. '_sum' → logprob: -6.541729927062988
    7. '(' → logprob: -6.541729927062988
    8. '_value' → logprob: -6.791729927062988
    9. '_b' → logprob: -6.916729927062988
    10. '_p' → logprob: -7.166729927062988

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.032676201313734055
    2. '=' → logprob: -3.6576762199401855
    3. '(' → logprob: -5.4076762199401855
    4. '_' → logprob: -6.7826762199401855
    5. ')' → logprob: -7.9076762199401855
    6. 's' → logprob: -9.657675743103027
    7. ',' → logprob: -9.782675743103027
    8. ' ' → logprob: -10.657675743103027
    9. '1' → logprob: -10.907675743103027
    10. '_a' → logprob: -11.032675743103027

Token 31: ' ' (ID: 220)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.1768949031829834
    2. ' min' → logprob: -1.4268949031829834
    3. ' float' → logprob: -1.8018949031829834
    4. 'x' → logprob: -2.9268949031829834
    5. ' b' → logprob: -3.0518949031829834
    6. 'b' → logprob: -3.0518949031829834
    7. '0' → logprob: -3.0518949031829834
    8. 'float' → logprob: -3.4268949031829834
    9. 'min' → logprob: -3.9268949031829834
    10. ' ' → logprob: -4.0518951416015625

Token 32: '10' (ID: 702)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5312370657920837
    2. 'x' → logprob: -1.4062371253967285
    3. 'b' → logprob: -2.1562371253967285
    4. 'float' → logprob: -3.6562371253967285
    5. ' min' → logprob: -4.9062371253967285
    6. 'p' → logprob: -5.1562371253967285
    7. 'y' → logprob: -5.4062371253967285
    8. '0' → logprob: -5.9062371253967285
    9. ' x' → logprob: -6.9062371253967285
    10. '(x' → logprob: -7.4062371253967285

Token 33: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.29809290170669556
    2. '7' → logprob: -1.7980928421020508
    3. '0' → logprob: -3.423092842102051
    4. '8' → logprob: -3.798092842102051
    5. '5' → logprob: -4.173092842102051
    6. '10' → logprob: -4.673092842102051
    7. '6' → logprob: -5.048092842102051
    8. '**' → logprob: -6.173092842102051
    9. '1' → logprob: -6.923092842102051
    10. '4' → logprob: -7.173092842102051

Token 34: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.043889936059713364
    2. '15' → logprob: -4.043889999389648
    3. '10' → logprob: -4.168889999389648
    4. '18' → logprob: -5.793889999389648
    5. '7' → logprob: -6.168889999389648
    6. '6' → logprob: -6.293889999389648
    7. '12' → logprob: -6.418889999389648
    8. '8' → logprob: -7.168889999389648
    9. '5' → logprob: -8.543889999389648
    10. '14' → logprob: -9.168889999389648

Token 35: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6971077919006348
    2. '<|end|>' → logprob: -1.3221077919006348
    3. ' ' → logprob: -2.3221077919006348
    4. ' 
' → logprob: -2.6971077919006348
    5. '    
' → logprob: -4.072107791900635
    6. '
' → logprob: -4.572107791900635
    7. '```' → logprob: -4.697107791900635
    8. '   
' → logprob: -5.072107791900635
    9. '    ' → logprob: -5.697107791900635
    10. '\' → logprob: -5.697107791900635

Token 37: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24980303645133972
    2. 'for' → logprob: -2.624803066253662
    3. ' for' → logprob: -2.749803066253662
    4. '   ' → logprob: -3.374803066253662
    5. ' 
' → logprob: -3.499803066253662
    6. '<|end|>' → logprob: -6.124803066253662
    7. '    ' → logprob: -6.499803066253662
    8. '  ' → logprob: -6.499803066253662
    9. '\n' → logprob: -6.624803066253662
    10. '\' → logprob: -6.624803066253662

Token 38: ' Acheter' (ID: 131310)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0950881838798523
    2. ' for' → logprob: -2.970088243484497
    3. 'for' → logprob: -3.845088243484497
    4. '    ' → logprob: -5.220088005065918
    5. '   ' → logprob: -5.345088005065918
    6. '<|end|>' → logprob: -5.470088005065918
    7. 'b' → logprob: -7.970088005065918
    8. ' if' → logprob: -8.345088005065918
    9. '  ' → logprob: -8.470088005065918
    10. ' 
' → logprob: -8.595088005065918

Token 39: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5645840764045715
    2. '_' → logprob: -1.8145840167999268
    3. 'b' → logprob: -2.4395840167999268
    4. 'a' → logprob: -2.9395840167999268
    5. '<|end|>' → logprob: -3.8145840167999268
    6. ' a' → logprob: -4.439584255218506
    7. 's' → logprob: -4.439584255218506
    8. ' =' → logprob: -4.689584255218506
    9. 'l' → logprob: -5.064584255218506
    10. ' b' → logprob: -5.314584255218506

Token 40: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.994687557220459
    2. 'b' → logprob: -2.494687557220459
    3. 'l' → logprob: -2.869687557220459
    4. 'r' → logprob: -3.119687557220459
    5. ' p' → logprob: -3.119687557220459
    6. ' b' → logprob: -3.119687557220459
    7. ' l' → logprob: -3.119687557220459
    8. 'p' → logprob: -3.244687557220459
    9. ' r' → logprob: -3.244687557220459
    10. ' ' → logprob: -3.807187557220459

Token 41: '0' (ID: 15)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47690480947494507
    2. 'p' → logprob: -1.7269048690795898
    3. 'a' → logprob: -3.10190486907959
    4. 'c' → logprob: -3.47690486907959
    5. 'l' → logprob: -3.85190486907959
    6. '1' → logprob: -4.47690486907959
    7. 's' → logprob: -4.60190486907959
    8. 'x' → logprob: -4.72690486907959
    9. 'r' → logprob: -5.10190486907959
    10. 'ch' → logprob: -5.28940486907959

Token 42: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7984679341316223
    2. ' a' → logprob: -1.0484678745269775
    3. ' ' → logprob: -2.0484678745269775
    4. ' to' → logprob: -3.2984678745269775
    5. ' b' → logprob: -4.548468112945557
    6. 'a' → logprob: -5.548468112945557
    7. ' x' → logprob: -5.548468112945557
    8. '0' → logprob: -6.298468112945557
    9. '  ' → logprob: -6.298468112945557
    10. ' p' → logprob: -6.673468112945557

Token 43: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0702364444732666
    2. 'x' → logprob: -1.9452364444732666
    3. ' b' → logprob: -2.1952364444732666
    4. 'p' → logprob: -2.3202364444732666
    5. ' p' → logprob: -2.5702364444732666
    6. ' ' → logprob: -2.8202364444732666
    7. ' x' → logprob: -3.0702364444732666
    8. 'y' → logprob: -3.4452364444732666
    9. ' y' → logprob: -3.4452364444732666
    10. 'min' → logprob: -3.8202364444732666

Token 44: '6' (ID: 21)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.006250262260437
    2. 'p' → logprob: -1.381250262260437
    3. 'b' → logprob: -1.506250262260437
    4. 'y' → logprob: -3.1312503814697266
    5. '2' → logprob: -3.2562503814697266
    6. 'min' → logprob: -3.6312503814697266
    7. '4' → logprob: -4.131250381469727
    8. 'a' → logprob: -4.381250381469727
    9. '1' → logprob: -4.881250381469727
    10. '100' → logprob: -5.756250381469727

Token 45: ' billets' (ID: 146301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34758374094963074
    2. '0' → logprob: -2.597583770751953
    3. ':' → logprob: -3.347583770751953
    4. ' for' → logprob: -3.972583770751953
    5. '    ' → logprob: -3.972583770751953
    6. '  ' → logprob: -4.222583770751953
    7. 'x' → logprob: -4.347583770751953
    8. '   ' → logprob: -4.347583770751953
    9. '_' → logprob: -4.472583770751953
    10. 'for' → logprob: -4.847583770751953

Token 46: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3442302346229553
    2. '<|end|>' → logprob: -1.5942301750183105
    3. ' for' → logprob: -3.4692301750183105
    4. 'for' → logprob: -4.5942301750183105
    5. '  ' → logprob: -4.8442301750183105
    6. ':' → logprob: -5.2192301750183105
    7. '   ' → logprob: -5.2192301750183105
    8. '<|end|>' → logprob: -5.3442301750183105
    9. '    ' → logprob: -5.4692301750183105
    10. ' :' → logprob: -5.8442301750183105

Token 47: ' bain' (ID: 45149)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7588219046592712
    2. 'bus' → logprob: -2.508821964263916
    3. ' ' → logprob: -2.508821964263916
    4. ' b' → logprob: -3.008821964263916
    5. 'p' → logprob: -3.133821964263916
    6. ' p' → logprob: -3.383821964263916
    7. ' bus' → logprob: -3.633821964263916
    8. 'train' → logprob: -3.633821964263916
    9. ' train' → logprob: -3.758821964263916
    10. '6' → logprob: -3.758821964263916

Token 48: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19717437028884888
    2. 'for' → logprob: -1.822174310684204
    3. ' ' → logprob: -4.697174549102783
    4. '   ' → logprob: -5.447174549102783
    5. '<|end|>' → logprob: -7.197174549102783
    6. '  ' → logprob: -7.322174549102783
    7. ' ,' → logprob: -7.572174549102783
    8. ',' → logprob: -7.947174549102783
    9. 's' → logprob: -7.947174549102783
    10. '    ' → logprob: -8.072174072265625

Token 49: 'max' (ID: 3228)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10084176063537598
    2. ' )' → logprob: -2.475841760635376
    3. '   ' → logprob: -4.725841522216797
    4. ' ' → logprob: -6.600841522216797
    5. ' for' → logprob: -7.600841522216797
    6. 'for' → logprob: -8.475841522216797
    7. '  ' → logprob: -8.850841522216797
    8. 'b' → logprob: -9.100841522216797
    9. '0' → logprob: -9.225841522216797
    10. 'range' → logprob: -9.600841522216797

Token 50: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0385214164853096
    2. '7' → logprob: -4.4135212898254395
    3. ' )' → logprob: -4.6635212898254395
    4. '6' → logprob: -5.0385212898254395
    5. ' ' → logprob: -5.5385212898254395
    6. 's' → logprob: -6.7885212898254395
    7. '   ' → logprob: -7.0385212898254395
    8. 'b' → logprob: -7.7885212898254395
    9. ',' → logprob: -7.7885212898254395
    10. '):' → logprob: -8.038521766662598

Token 51: '6' (ID: 21)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1906885802745819
    2. '7' → logprob: -2.4406886100769043
    3. '6' → logprob: -3.1906886100769043
    4. ' ' → logprob: -4.690688610076904
    5. 'b' → logprob: -4.690688610076904
    6. 'p' → logprob: -5.065688610076904
    7. '4' → logprob: -5.565688610076904
    8. '1' → logprob: -6.440688610076904
    9. '`)' → logprob: -6.815688610076904
    10. '')' → logprob: -7.065688610076904

Token 52: ' comme' (ID: 7971)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04550841450691223
    2. ' )' → logprob: -3.17050838470459
    3. '7' → logprob: -7.29550838470459
    4. '6' → logprob: -7.67050838470459
    5. '+' → logprob: -7.79550838470459
    6. '0' → logprob: -8.92050838470459
    7. 'b' → logprob: -9.04550838470459
    8. '1' → logprob: -9.17050838470459
    9. '):' → logprob: -9.17050838470459
    10. 's' → logprob: -9.54550838470459

Token 53: ' dans' (ID: 2671)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.1444940567016602
    2. 'b' → logprob: -2.14449405670166
    3. 'les' → logprob: -2.14449405670166
    4. ')' → logprob: -2.26949405670166
    5. 'c' → logprob: -2.51949405670166
    6. 'la' → logprob: -3.14449405670166
    7. 'l' → logprob: -3.76949405670166
    8. ' le' → logprob: -3.76949405670166
    9. 'p' → logprob: -3.89449405670166
    10. ' les' → logprob: -4.14449405670166

Token 54: ' l' (ID: 305)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9212543964385986
    2. ' la' → logprob: -1.2962543964385986
    3. 'la' → logprob: -2.0462543964385986
    4. ' le' → logprob: -2.4212543964385986
    5. 'l' → logprob: -3.7962543964385986
    6. ' ' → logprob: -4.0462541580200195
    7. ' les' → logprob: -4.4212541580200195
    8. 'les' → logprob: -4.5462541580200195
    9. ' l' → logprob: -4.7962541580200195
    10. ')' → logprob: -4.9212541580200195

Token 55: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.172432079911232
    2. 'e' → logprob: -2.2974321842193604
    3. ''ex' → logprob: -5.047431945800781
    4. '```' → logprob: -5.172431945800781
    5. ''' → logprob: -5.297431945800781
    6. 'es' → logprob: -5.422431945800781
    7. 'ex' → logprob: -5.422431945800781
    8. 'code' → logprob: -5.672431945800781
    9. '')' → logprob: -5.672431945800781
    10. ''achat' → logprob: -5.922431945800781

Token 56: 'én' (ID: 3289)
  Prédit: 'én'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.6112399697303772
    2. 'ex' → logprob: -1.8612399101257324
    3. 'a' → logprob: -2.9862399101257324
    4. 'input' → logprob: -3.1112399101257324
    5. 'é' → logprob: -3.2362399101257324
    6. 'en' → logprob: -3.8612399101257324
    7. 'e' → logprob: -4.111239910125732
    8. '```' → logprob: -4.361239910125732
    9. 'entrée' → logprob: -4.611239910125732
    10. ''' → logprob: -4.611239910125732

Token 57: 'oncé' (ID: 59071)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0062204599380493
    2. 'tr' → logprob: -1.6312204599380493
    3. 'um' → logprob: -2.6312203407287598
    4. 'ig' → logprob: -2.6312203407287598
    5. 'e' → logprob: -3.0062203407287598
    6. 'é' → logprob: -3.8187203407287598
    7. 'umer' → logprob: -4.19372034072876
    8. '#' → logprob: -4.31872034072876
    9. 't' → logprob: -4.69372034072876
    10. '>' → logprob: -4.69372034072876

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11555146425962448
    2. ' )' → logprob: -2.240551471710205
    3. '   ' → logprob: -6.865551471710205
    4. ' ' → logprob: -7.740551471710205
    5. '):' → logprob: -7.990551471710205
    6. 'for' → logprob: -8.490550994873047
    7. ' for' → logprob: -8.740550994873047
    8. 'range' → logprob: -9.115550994873047
    9. ',' → logprob: -9.365550994873047
    10. '  ' → logprob: -9.990550994873047

Token 59: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41160741448402405
    2. 'for' → logprob: -1.7866073846817017
    3. ' ' → logprob: -1.9116073846817017
    4. '   ' → logprob: -4.661607265472412
    5. '<|end|>' → logprob: -5.286607265472412
    6. '  ' → logprob: -6.536607265472412
    7. '\n' → logprob: -7.036607265472412
    8. '    ' → logprob: -7.536607265472412
    9. ' ,' → logprob: -7.536607265472412
    10. ' 
' → logprob: -7.661607265472412

Token 60: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5447662472724915
    2. 'for' (adapté à ' for') → logprob: -1.5447661876678467
    3. ' ' → logprob: -2.2947661876678467
    4. '<|end|>' → logprob: -2.7947661876678467
    5. '   ' → logprob: -3.6697661876678467
    6. '    ' → logprob: -4.919766426086426
    7. '  ' → logprob: -6.544766426086426
    8. ' 
' → logprob: -6.544766426086426
    9. 'range' → logprob: -6.669766426086426
    10. '<|end|>' → logprob: -6.669766426086426

Token 61: ' buy' (ID: 3877)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5208131670951843
    2. ' i' → logprob: -1.270813226699829
    3. ' bath' → logprob: -3.145813226699829
    4. ' j' → logprob: -3.895813226699829
    5. ' billets' → logprob: -4.52081298828125
    6. ' nb' → logprob: -4.89581298828125
    7. ' baths' → logprob: -4.89581298828125
    8. ' bains' → logprob: -4.89581298828125
    9. 'b' → logprob: -5.02081298828125
    10. ' ' → logprob: -5.52081298828125

Token 62: '_b' (ID: 1535)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2099679857492447
    2. '_' → logprob: -1.8349679708480835
    3. ' ' → logprob: -4.084968090057373
    4. 'in' → logprob: -4.959968090057373
    5. '_b' → logprob: -6.959968090057373
    6. '_i' → logprob: -7.084968090057373
    7. ' _' → logprob: -7.209968090057373
    8. 'ing' → logprob: -7.209968090057373
    9. '_in' → logprob: -7.209968090057373
    10. ' i' → logprob: -7.709968090057373

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16097557544708252
    2. 'in' → logprob: -1.9109755754470825
    3. ' ' → logprob: -7.535975456237793
    4. 'en' → logprob: -9.785975456237793
    5. 'i' → logprob: -10.535975456237793
    6. ' en' → logprob: -10.910975456237793
    7. 'from' → logprob: -11.035975456237793
    8. '   ' → logprob: -11.660975456237793
    9. '_in' → logprob: -11.910975456237793
    10. 'er' → logprob: -11.910975456237793

Token 64: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005238736979663372
    2. 'range' → logprob: -5.2552385330200195
    3. '	range' → logprob: -13.13023853302002
    4. '(range' → logprob: -13.63023853302002
    5. ' ' → logprob: -13.75523853302002
    6. ' xrange' → logprob: -14.88023853302002
    7. '   ' → logprob: -16.505239486694336
    8. ' ' → logprob: -16.880239486694336
    9. '  ' → logprob: -17.255239486694336
    10. '```' → logprob: -17.630239486694336

Token 65: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.696889623621246e-06
    2. ' (' → logprob: -13.37500286102295
    3. '7' → logprob: -14.87500286102295
    4. '6' → logprob: -15.37500286102295
    5. '((' → logprob: -15.75000286102295
    6. '(b' → logprob: -16.250001907348633
    7. ' ' → logprob: -16.375001907348633
    8. '(
' → logprob: -16.750001907348633
    9. '(min' → logprob: -18.000001907348633
    10. '(s' → logprob: -18.250001907348633

Token 66: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0010538881178945303
    2. '0' → logprob: -6.876053810119629
    3. ' ' → logprob: -10.876053810119629
    4. '(' → logprob: -14.376053810119629
    5. '```' → logprob: -14.751053810119629
    6. 'b' → logprob: -15.251053810119629
    7. '6' → logprob: -15.251053810119629
    8. ')' → logprob: -15.501053810119629
    9. 'min' → logprob: -15.626053810119629
    10. '   ' → logprob: -16.501054763793945

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024968255311250687
    2. '):
' → logprob: -6.127496719360352
    3. ')' → logprob: -9.002496719360352
    4. ' ):' → logprob: -9.502496719360352
    5. '+' → logprob: -9.627496719360352
    6. '):
' → logprob: -10.502496719360352
    7. '   ' → logprob: -11.127496719360352
    8. ':' → logprob: -12.752496719360352
    9. ' ' → logprob: -14.752496719360352
    10. ' ):
' → logprob: -14.752496719360352

Token 68: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021451834589242935
    2. ' :' → logprob: -4.271451950073242
    3. '):' → logprob: -5.271451950073242
    4. '   ' → logprob: -6.521451950073242
    5. ')' → logprob: -8.771451950073242
    6. '       ' → logprob: -8.896451950073242
    7. ' ' → logprob: -9.771451950073242
    8. '<|end|>' → logprob: -10.021451950073242
    9. ' ):' → logprob: -10.146451950073242
    10. ',' → logprob: -10.396451950073242

Token 69: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46766483783721924
    2. ' for' → logprob: -1.3426648378372192
    3. '   ' → logprob: -3.2176647186279297
    4. '    ' → logprob: -3.7176647186279297
    5. '       ' → logprob: -4.84266471862793
    6. 'for' → logprob: -4.84266471862793
    7. ':' → logprob: -5.34266471862793
    8. ' :' → logprob: -5.34266471862793
    9. '<|end|>' → logprob: -5.46766471862793
    10. '  ' → logprob: -5.71766471862793

Token 70: ' Acheter' (ID: 131310)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23981057107448578
    2. ' buy' → logprob: -2.8648104667663574
    3. 'for' → logprob: -3.3648104667663574
    4. ' b' → logprob: -3.8648104667663574
    5. ' y' → logprob: -4.239810466766357
    6. ' range' → logprob: -4.239810466766357
    7. ' cost' → logprob: -4.489810466766357
    8. 'b' → logprob: -4.739810466766357
    9. ' if' → logprob: -5.364810466766357
    10. ' p' → logprob: -5.364810466766357

Token 71: ' de' (ID: 334)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.1792999505996704
    2. ' b' → logprob: -1.3042999505996704
    3. ' ' → logprob: -1.9292999505996704
    4. 'b' → logprob: -1.9292999505996704
    5. ' p' → logprob: -2.429299831390381
    6. '_' → logprob: -4.179299831390381
    7. ' y' → logprob: -5.554299831390381
    8. '_p' → logprob: -5.554299831390381
    9. ' buy' → logprob: -5.929299831390381
    10. 'p' → logprob: -5.929299831390381

Token 72: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43542808294296265
    2. ' ' → logprob: -1.3104281425476074
    3. '7' → logprob: -2.9354281425476074
    4. ' buy' → logprob: -3.9354281425476074
    5. '6' → logprob: -5.185428142547607
    6. 'buy' → logprob: -5.935428142547607
    7. ' p' → logprob: -6.935428142547607
    8. 'b' → logprob: -7.935428142547607
    9. ' b' → logprob: -8.18542766571045
    10. 'p' → logprob: -8.18542766571045

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009508502669632435
    2. ' ' → logprob: -5.1345086097717285
    3. 'b' → logprob: -7.0095086097717285
    4. '7' → logprob: -7.1345086097717285
    5. 'buy' → logprob: -7.1345086097717285
    6. 'max' → logprob: -7.8845086097717285
    7. 'p' → logprob: -8.13450813293457
    8. '6' → logprob: -8.38450813293457
    9. ' buy' → logprob: -9.88450813293457
    10. 'y' → logprob: -10.25950813293457

Token 74: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.1162928342819214
    2. '7' → logprob: -1.4912928342819214
    3. ' p' → logprob: -1.7412928342819214
    4. 'p' → logprob: -2.116292953491211
    5. ' ' → logprob: -2.241292953491211
    6. ' b' → logprob: -4.491292953491211
    7. 'b' → logprob: -4.491292953491211
    8. ' min' → logprob: -4.991292953491211
    9. ' y' → logprob: -5.366292953491211
    10. 'y' → logprob: -6.241292953491211

Token 76: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.8384988903999329
    2. 'p' → logprob: -0.9634988903999329
    3. '7' → logprob: -1.838498830795288
    4. ' p' → logprob: -4.213499069213867
    5. ' ' → logprob: -5.088499069213867
    6. 'b' → logprob: -5.963499069213867
    7. 'min' → logprob: -7.213499069213867
    8. '4' → logprob: -8.213499069213867
    9. ' min' → logprob: -8.213499069213867
    10. 'max' → logprob: -8.463499069213867

Token 77: ' billets' (ID: 146301)
  Prédit: ' billets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' billets' → logprob: -0.006440026219934225
    2. ' bil' → logprob: -6.256440162658691
    3. ' tickets' → logprob: -6.881440162658691
    4. 'tickets' → logprob: -7.381440162658691
    5. 'bil' → logprob: -7.506440162658691
    6. '<|end|>' → logprob: -8.006440162658691
    7. 'b' → logprob: -8.006440162658691
    8. ' b' → logprob: -8.131440162658691
    9. ' ' → logprob: -8.131440162658691
    10. '```' → logprob: -8.756440162658691

Token 78: ' piscine' (ID: 65881)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.03981423377990723
    2. '_de' → logprob: -3.9148142337799072
    3. 'de' → logprob: -4.664813995361328
    4. '_b' → logprob: -5.289813995361328
    5. 'b' → logprob: -6.664813995361328
    6. '_' → logprob: -6.789813995361328
    7. '_p' → logprob: -7.664813995361328
    8. '<|end|>' → logprob: -8.539813995361328
    9. ' ' → logprob: -8.664813995361328
    10. '_s' → logprob: -8.789813995361328

Token 79: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7920637726783752
    2. '   ' → logprob: -1.7920637130737305
    3. '(range' → logprob: -2.0420637130737305
    4. ' in' → logprob: -2.6670637130737305
    5. '       ' → logprob: -2.7920637130737305
    6. ' (' → logprob: -3.5420637130737305
    7. '(' → logprob: -3.6670637130737305
    8. 'for' → logprob: -3.7920637130737305
    9. 'range' → logprob: -4.9170637130737305
    10. '<|end|>' → logprob: -4.9170637130737305

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06139475107192993
    2. ' for' → logprob: -3.186394691467285
    3. '   ' → logprob: -4.936394691467285
    4. '<|end|>' → logprob: -5.186394691467285
    5. ' (' → logprob: -6.311394691467285
    6. ' in' → logprob: -6.811394691467285
    7. 'for' → logprob: -7.311394691467285
    8. ',' → logprob: -7.561394691467285
    9. '(' → logprob: -8.561394691467285
    10. '        ' → logprob: -8.561394691467285

Token 81: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5549716353416443
    2. '       ' → logprob: -1.554971694946289
    3. 'for' (adapté à ' for') → logprob: -1.804971694946289
    4. ' range' → logprob: -3.554971694946289
    5. 'range' → logprob: -3.929971694946289
    6. '   ' → logprob: -6.929971694946289
    7. '7' → logprob: -7.804971694946289
    8. '           ' → logprob: -8.054971694946289
    9. '        ' → logprob: -9.304971694946289
    10. '6' → logprob: -9.929971694946289

Token 82: ' buy' (ID: 3877)
  Prédit: ' buy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buy' → logprob: -0.01422461960464716
    2. 'buy' → logprob: -4.264224529266357
    3. ' purchase' → logprob: -10.764225006103516
    4. ' ' → logprob: -11.514225006103516
    5. 'b' → logprob: -12.139225006103516
    6. '_buy' → logprob: -12.264225006103516
    7. ' b' → logprob: -12.514225006103516
    8. ' p' → logprob: -12.514225006103516
    9. ' range' → logprob: -12.639225006103516
    10. ' ' → logprob: -13.514225006103516

Token 83: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0024265521205961704
    2. '_' → logprob: -6.127426624298096
    3. 'p' → logprob: -9.502426147460938
    4. '_b' → logprob: -9.627426147460938
    5. ' _' → logprob: -10.502426147460938
    6. ' p' → logprob: -10.877426147460938
    7. '_s' → logprob: -11.002426147460938
    8. ' ' → logprob: -11.127426147460938
    9. '_i' → logprob: -12.127426147460938
    10. '   ' → logprob: -12.877426147460938

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00312554812990129
    2. 'in' → logprob: -5.8781256675720215
    3. ' ' → logprob: -8.128125190734863
    4. '<|end|>' → logprob: -12.253125190734863
    5. 'range' → logprob: -12.253125190734863
    6. 'n' → logprob: -13.003125190734863
    7. 'ine' → logprob: -13.128125190734863
    8. '  ' → logprob: -13.378125190734863
    9. ')' → logprob: -13.503125190734863
    10. '1' → logprob: -14.315625190734863

Token 85: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16025032103061676
    2. 'range' → logprob: -1.9102503061294556
    3. ' ' → logprob: -11.535250663757324
    4. '(range' → logprob: -11.660250663757324
    5. '	range' → logprob: -12.910250663757324
    6. '   ' → logprob: -13.785250663757324
    7. ' ' → logprob: -14.035250663757324
    8. '7' → logprob: -14.347750663757324
    9. '  ' → logprob: -14.472750663757324
    10. '    ' → logprob: -15.222750663757324

Token 86: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0280383548888494e-06
    2. ' (' → logprob: -15.125000953674316
    3. '<|end|>' → logprob: -15.125000953674316
    4. '6' → logprob: -15.500000953674316
    5. '7' → logprob: -15.750000953674316
    6. '(
' → logprob: -16.875001907348633
    7. ' ' → logprob: -17.750001907348633
    8. '((' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.750001907348633
    10. ')' → logprob: -19.750001907348633

Token 87: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.750003814697266
    3. '(' → logprob: -14.875003814697266
    4. ')' → logprob: -15.375003814697266
    5. '   ' → logprob: -15.750003814697266
    6. '6' → logprob: -16.875003814697266
    7. '```' → logprob: -17.312503814697266
    8. '    ' → logprob: -18.187503814697266
    9. '۷' → logprob: -18.187503814697266
    10. '৭' → logprob: -18.250003814697266

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00029875844484195113
    2. ':' → logprob: -9.000298500061035
    3. '+' → logprob: -9.500298500061035
    4. '):
' → logprob: -9.625298500061035
    5. ')' → logprob: -11.000298500061035
    6. '       ' → logprob: -12.125298500061035
    7. ' ):' → logprob: -12.500298500061035
    8. '   ' → logprob: -12.875298500061035
    9. '):
' → logprob: -14.125298500061035
    10. '7' → logprob: -14.125298500061035

Token 89: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05106708034873009
    2. ':' → logprob: -3.3010671138763428
    3. '       ' → logprob: -4.676066875457764
    4. '<|end|>' → logprob: -6.176066875457764
    5. ':
' → logprob: -7.551066875457764
    6. ',' → logprob: -8.551067352294922
    7. ' :' → logprob: -8.676067352294922
    8. '<|end|>' → logprob: -8.926067352294922
    9. '               ' → logprob: -9.051067352294922
    10. '```' → logprob: -9.426067352294922

Token 90: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4219678044319153
    2. '           ' → logprob: -1.1719677448272705
    3. ' if' → logprob: -4.67196798324585
    4. ' cost' → logprob: -4.79696798324585
    5. '       ' → logprob: -5.92196798324585
    6. '            ' → logprob: -5.92196798324585
    7. ' ' → logprob: -6.42196798324585
    8. 'if' → logprob: -6.67196798324585
    9. '<|end|>' → logprob: -6.79696798324585
    10. 'cost' → logprob: -7.17196798324585

Token 91: ' Vér' (ID: 159169)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -1.6068788766860962
    2. 'cost' → logprob: -1.8568788766860962
    3. ' if' → logprob: -2.2318787574768066
    4. ' #' → logprob: -2.3568787574768066
    5. '           ' → logprob: -2.4818787574768066
    6. ' total' → logprob: -2.6068787574768066
    7. '#' → logprob: -2.7318787574768066
    8. 'if' → logprob: -2.8568787574768066
    9. 'total' → logprob: -2.8568787574768066
    10. 'b' → logprob: -4.731878757476807

Token 92: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.013683637604117393
    2. 'if' → logprob: -4.638683795928955
    3. 'ifie' → logprob: -6.388683795928955
    4. '   ' → logprob: -7.263683795928955
    5. 'ifer' → logprob: -7.888683795928955
    6. 'ifiez' → logprob: -7.888683795928955
    7. 'ifi' → logprob: -8.513683319091797
    8. ' if' → logprob: -9.013683319091797
    9. 'ification' → logprob: -9.263683319091797
    10. 'IFIER' → logprob: -9.388683319091797

Token 93: ' qu' (ID: 474)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10218142718076706
    2. ' ' → logprob: -2.4771814346313477
    3. '<|end|>' → logprob: -5.352181434631348
    4. 'if' → logprob: -5.602181434631348
    5. ' si' → logprob: -6.227181434631348
    6. 's' → logprob: -7.602181434631348
    7. '   ' → logprob: -7.727181434631348
    8. '    ' → logprob: -8.227181434631348
    9. '       ' → logprob: -8.352181434631348
    10. '  ' → logprob: -8.477181434631348

Token 94: ''on' (ID: 25812)
  Prédit: ' buy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' buy' → logprob: -0.005304196383804083
    2. 'buy' → logprob: -5.630304336547852
    3. ' ' → logprob: -7.630304336547852
    4. ' l' → logprob: -8.505304336547852
    5. ' (' → logprob: -8.505304336547852
    6. ' on' → logprob: -9.255304336547852
    7. ' le' → logprob: -9.505304336547852
    8. ' bought' → logprob: -9.755304336547852
    9. ' la' → logprob: -9.755304336547852
    10. 'e' → logprob: -9.755304336547852

Token 95: ' a' (ID: 261)
  Prédit: 'ach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -1.1874195337295532
    2. ' peut' → logprob: -1.5624195337295532
    3. ' couvre' → logprob: -2.1874194145202637
    4. ' a' → logprob: -2.6874194145202637
    5. ' ach' → logprob: -2.8124194145202637
    6. ' buy' → logprob: -3.1874194145202637
    7. ' ache' → logprob: -3.4374194145202637
    8. ' n' → logprob: -4.062419414520264
    9. ' respecte' → logprob: -4.062419414520264
    10. 's' → logprob: -4.312419414520264

Token 96: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.4924648404121399
    2. ' assez' → logprob: -1.2424647808074951
    3. 's' → logprob: -3.367464780807495
    4. ' enough' → logprob: -3.992464780807495
    5. 'au' → logprob: -4.242465019226074
    6. ' suffisamment' → logprob: -4.242465019226074
    7. ' suff' → logprob: -5.117465019226074
    8. ' suffis' → logprob: -6.492465019226074
    9. ' acheté' → logprob: -6.492465019226074
    10. 'asse' → logprob: -6.742465019226074

Token 97: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.008427811786532402
    2. ' moins' → logprob: -5.508427619934082
    3. '   ' → logprob: -6.508427619934082
    4. 'mo' → logprob: -7.008427619934082
    5. 'm' → logprob: -7.633427619934082
    6. '```' → logprob: -8.008427619934082
    7. 'menos' → logprob: -8.008427619934082
    8. '  ' → logprob: -8.883427619934082
    9. 'minimum' → logprob: -9.258427619934082
    10. '    ' → logprob: -9.508427619934082

Token 98: ' besoin' (ID: 27703)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0342357158660889
    2. ' x' → logprob: -1.7842357158660889
    3. ' autant' → logprob: -1.7842357158660889
    4. ' as' → logprob: -2.784235715866089
    5. ' enough' → logprob: -2.909235715866089
    6. 'x' → logprob: -3.284235715866089
    7. ' y' → logprob: -3.534235715866089
    8. ' buy' → logprob: -3.784235715866089
    9. 's' → logprob: -4.534235954284668
    10. 'b' → logprob: -4.659235954284668

Token 99: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3141193985939026
    2. ' d' → logprob: -1.9391193389892578
    3. ' of' → logprob: -2.689119338989258
    4. 'de' → logprob: -3.939119338989258
    5. 'd' → logprob: -4.064119338989258
    6. ' des' → logprob: -4.939119338989258
    7. '   ' → logprob: -6.064119338989258
    8. ' ' → logprob: -6.314119338989258
    9. ' buy' → logprob: -6.314119338989258
    10. '           ' → logprob: -6.814119338989258

Token 100: ''' (ID: 6)
  Prédit: ' buy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' buy' → logprob: -0.7796071171760559
    2. ' acheter' → logprob: -1.7796070575714111
    3. 'acheter' → logprob: -2.529607057571411
    4. ' ' → logprob: -2.779607057571411
    5. 'e' → logprob: -2.904607057571411
    6. '   ' → logprob: -3.279607057571411
    7. 'buy' → logprob: -3.279607057571411
    8. ' a' → logprob: -3.779607057571411
    9. 'a' → logprob: -5.15460729598999
    10. ' ache' → logprob: -5.40460729598999

Token 101: 'acheter' (ID: 105787)
  Prédit: 'acheter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acheter' → logprob: -1.2123665809631348
    2. 'b' → logprob: -1.7123665809631348
    3. 'buy' → logprob: -1.7123665809631348
    4. 'x' → logprob: -2.4623665809631348
    5. ' buy' → logprob: -2.7123665809631348
    6. 'e' → logprob: -3.0873665809631348
    7. ' acheter' → logprob: -3.7123665809631348
    8. 'ach' → logprob: -3.7123665809631348
    9. 'a' → logprob: -3.9623665809631348
    10. 'eux' → logprob: -4.462366580963135

Token 102: ' les' (ID: 1341)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.625006377696991
    2. '   ' → logprob: -2.2500064373016357
    3. ' au' → logprob: -2.7500064373016357
    4. ' if' → logprob: -2.8750064373016357
    5. ' buy' → logprob: -2.8750064373016357
    6. 'de' → logprob: -3.0000064373016357
    7. '           ' → logprob: -3.1250064373016357
    8. ' enough' → logprob: -4.375006198883057
    9. 'if' → logprob: -4.500006198883057
    10. ' des' → logprob: -5.125006198883057

Token 103: ' billets' (ID: 146301)
  Prédit: ' billets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' billets' → logprob: -0.1353791058063507
    2. 'b' → logprob: -2.7603790760040283
    3. 'bil' → logprob: -3.3853790760040283
    4. ' ' → logprob: -5.260379314422607
    5. ' x' → logprob: -5.510379314422607
    6. ' b' → logprob: -5.635379314422607
    7. ' tickets' → logprob: -6.010379314422607
    8. 'x' → logprob: -6.010379314422607
    9. 'tickets' → logprob: -6.385379314422607
    10. ' bil' → logprob: -6.635379314422607

Token 104: ' utilisés' (ID: 94258)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16684818267822266
    2. ' if' → logprob: -3.0418481826782227
    3. '           ' → logprob: -3.0418481826782227
    4. ' for' → logprob: -3.5418481826782227
    5. '    ' → logprob: -4.416848182678223
    6. ' ' → logprob: -6.416848182678223
    7. ' to' → logprob: -6.541848182678223
    8. '       ' → logprob: -6.791848182678223
    9. 'for' → logprob: -6.791848182678223
    10. 'if' → logprob: -6.916848182678223

Token 105: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04250817373394966
    2. ' if' → logprob: -3.542508125305176
    3. '<|end|>' → logprob: -4.667508125305176
    4. ' and' → logprob: -7.042508125305176
    5. 'if' → logprob: -7.917508125305176
    6. ' (' → logprob: -7.917508125305176
    7. ',' → logprob: -8.292508125305176
    8. '```' → logprob: -8.542508125305176
    9. '            ' → logprob: -8.667508125305176
    10. '<|end|>' → logprob: -8.792508125305176

Token 106: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007339099422097206
    2. '<|end|>' → logprob: -5.257339000701904
    3. ' if' → logprob: -6.882339000701904
    4. '               ' → logprob: -8.382339477539062
    5. '       ' → logprob: -8.507339477539062
    6. ' and' → logprob: -9.007339477539062
    7. '```' → logprob: -9.007339477539062
    8. '   ' → logprob: -9.257339477539062
    9. '<|end|>' → logprob: -9.882339477539062
    10. '            ' → logprob: -10.007339477539062

Token 107: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032542020082473755
    2. ' if' → logprob: -3.5325419902801514
    3. 'if' (adapté à ' if') → logprob: -5.9075422286987305
    4. '<|end|>' → logprob: -10.78254222869873
    5. ' ' → logprob: -11.15754222869873
    6. '               ' → logprob: -11.40754222869873
    7. '   ' → logprob: -11.90754222869873
    8. '       ' → logprob: -12.03254222869873
    9. ' and' → logprob: -13.03254222869873
    10. '          ' → logprob: -13.53254222869873

Token 108: ' buy' (ID: 3877)
  Prédit: ' buy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buy' → logprob: -0.02671033889055252
    2. 'buy' → logprob: -3.651710271835327
    3. ' x' → logprob: -9.026710510253906
    4. '   ' → logprob: -9.276710510253906
    5. ' b' → logprob: -9.651710510253906
    6. 'b' → logprob: -9.651710510253906
    7. 'x' → logprob: -10.526710510253906
    8. '(b' → logprob: -11.151710510253906
    9. ' (' → logprob: -11.526710510253906
    10. ' ' → logprob: -12.026710510253906

Token 109: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -9.729906196298543e-06
    2. '_p' → logprob: -11.875009536743164
    3. 'b' → logprob: -13.125009536743164
    4. '_' → logprob: -15.375009536743164
    5. 's' → logprob: -15.500009536743164
    6. ' _' → logprob: -16.000009536743164
    7. 'p' → logprob: -16.250009536743164
    8. '_a' → logprob: -17.500009536743164
    9. '   ' → logprob: -17.750009536743164
    10. ' ' → logprob: -18.000009536743164

Token 110: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2813933789730072
    2. ' >=' → logprob: -1.4063934087753296
    3. '<' → logprob: -8.906393051147461
    4. ' <' → logprob: -10.031393051147461
    5. ' ' → logprob: -10.656393051147461
    6. '<=' → logprob: -11.031393051147461
    7. '>' → logprob: -11.531393051147461
    8. ']>=' → logprob: -12.406393051147461
    9. '   ' → logprob: -13.156393051147461
    10. ')>=' → logprob: -13.281393051147461

Token 111: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02055484801530838
    2. ' b' → logprob: -3.895554780960083
    3. ' ' → logprob: -11.770554542541504
    4. '   ' → logprob: -12.645554542541504
    5. 'max' → logprob: -14.395554542541504
    6. ' max' → logprob: -14.520554542541504
    7. 'x' → logprob: -15.270554542541504
    8. '    ' → logprob: -15.395554542541504
    9. '	b' → logprob: -15.770554542541504
    10. '  ' → logprob: -16.27055549621582

Token 112: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.009781353175640106
    2. 'or' → logprob: -4.634781360626221
    3. ':' → logprob: -11.384780883789062
    4. ' and' → logprob: -12.509780883789062
    5. 'and' → logprob: -12.634780883789062
    6. '           ' → logprob: -13.009780883789062
    7. '	or' → logprob: -13.634780883789062
    8. 'continue' → logprob: -13.759780883789062
    9. ' ' → logprob: -14.134780883789062
    10. '   ' → logprob: -14.384780883789062

Token 113: ' buy' (ID: 3877)
  Prédit: ' buy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buy' → logprob: -0.07889165729284286
    2. 'buy' → logprob: -2.5788917541503906
    3. '           ' → logprob: -14.20389175415039
    4. '.buy' → logprob: -15.07889175415039
    5. ' purchase' → logprob: -15.20389175415039
    6. 'purchase' → logprob: -16.32889175415039
    7. '_buy' → logprob: -16.45389175415039
    8. 'b' → logprob: -16.57889175415039
    9. '            ' → logprob: -16.57889175415039
    10. '買' → logprob: -16.95389175415039

Token 114: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.0325924449716695e-05
    2. '_b' → logprob: -11.75001049041748
    3. 'p' → logprob: -13.75001049041748
    4. ' _' → logprob: -15.00001049041748
    5. ' p' → logprob: -15.37501049041748
    6. '_' → logprob: -15.50001049041748
    7. 'b' → logprob: -15.87501049041748
    8. '_y' → logprob: -16.250009536743164
    9. '   ' → logprob: -16.625009536743164
    10. ' ' → logprob: -16.875009536743164

Token 115: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2270108312368393
    2. '<' → logprob: -1.6020108461380005
    3. '<p' → logprob: -6.602010726928711
    4. '<|end|>' → logprob: -8.602010726928711
    5. ' ' → logprob: -10.477010726928711
    6. ' ' → logprob: -11.977010726928711
    7. '<int' → logprob: -12.352010726928711
    8. ' p' → logprob: -12.727010726928711
    9. 'p' → logprob: -13.102010726928711
    10. ')<' → logprob: -13.977010726928711

Token 116: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0040838588029146194
    2. ' p' → logprob: -5.504083633422852
    3. '   ' → logprob: -12.254083633422852
    4. 'y' → logprob: -15.129083633422852
    5. '<p' → logprob: -16.62908363342285
    6. '           ' → logprob: -16.87908363342285
    7. ' ' → logprob: -17.12908363342285
    8. '	p' → logprob: -17.37908363342285
    9. ' y' → logprob: -17.62908363342285
    10. '  ' → logprob: -17.75408363342285

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48042455315589905
    2. ':
' → logprob: -0.9804245233535767
    3. '               ' → logprob: -5.980424404144287
    4. ' continue' → logprob: -6.480424404144287
    5. ' or' → logprob: -7.230424404144287
    6. 'continue' → logprob: -7.480424404144287
    7. '       ' → logprob: -7.730424404144287
    8. '           ' → logprob: -7.855424404144287
    9. ' continues' → logprob: -10.230424880981445
    10. '	continue' → logprob: -10.605424880981445

Token 118: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010182060301303864
    2. ' continue' → logprob: -4.885181903839111
    3. ':' → logprob: -6.760181903839111
    4. 'continue' → logprob: -6.885181903839111
    5. '           ' → logprob: -8.76018238067627
    6. ':
' → logprob: -9.26018238067627
    7. '       ' → logprob: -10.01018238067627
    8. '	continue' → logprob: -10.38518238067627
    9. ' continues' → logprob: -10.63518238067627
    10. '_continue' → logprob: -11.51018238067627

Token 119: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1424543559551239
    2. 'continue' (adapté à ' continue') → logprob: -2.5174543857574463
    3. ' continue' → logprob: -3.0174543857574463
    4. '           ' → logprob: -6.142454147338867
    5. '                   ' → logprob: -7.392454147338867
    6. '   ' → logprob: -8.267454147338867
    7. '       ' → logprob: -9.642454147338867
    8. '	continue' → logprob: -9.767454147338867
    9. '
' → logprob: -10.642454147338867
    10. '_continue' → logprob: -12.142454147338867

Token 120: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004420624580234289
    2. '            
' → logprob: -5.504420757293701
    3. '
' → logprob: -9.254420280456543
    4. 'cost' → logprob: -9.379420280456543
    5. 'total' → logprob: -10.004420280456543
    6. ' cost' → logprob: -10.254420280456543
    7. '```' → logprob: -11.004420280456543
    8. '          ' → logprob: -12.004420280456543
    9. '           
' → logprob: -12.129420280456543
    10. '            ' → logprob: -12.129420280456543

Token 121: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009332315064966679
    2. '            
' → logprob: -4.759332180023193
    3. '
' → logprob: -8.384332656860352
    4. 'cost' → logprob: -8.509332656860352
    5. ' cost' → logprob: -9.134332656860352
    6. 'total' → logprob: -9.634332656860352
    7. '```' → logprob: -11.384332656860352
    8. ' total' → logprob: -11.384332656860352
    9. '                
' → logprob: -11.634332656860352
    10. '           
' → logprob: -11.634332656860352

Token 122: ' total' (ID: 3609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.829799473285675
    2. 'cost' → logprob: -1.0797994136810303
    3. 'total' (adapté à ' total') → logprob: -2.5797994136810303
    4. '
' → logprob: -2.9547994136810303
    5. '            
' → logprob: -3.0797994136810303
    6. ' cost' → logprob: -3.8297994136810303
    7. '   ' → logprob: -4.704799652099609
    8. 'current' → logprob: -5.204799652099609
    9. ' total' → logprob: -5.579799652099609
    10. '#' → logprob: -6.079799652099609

Token 123: '_t' (ID: 838)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.03331979736685753
    2. ' =' → logprob: -3.6583197116851807
    3. '=' → logprob: -5.40831995010376
    4. '_' → logprob: -6.15831995010376
    5. 'cost' → logprob: -8.783319473266602
    6. '_price' → logprob: -8.908319473266602
    7. '_co' → logprob: -10.783319473266602
    8. '_c' → logprob: -11.408319473266602
    9. ' _' → logprob: -11.533319473266602
    10. '_total' → logprob: -11.783319473266602

Token 124: 'ickets' (ID: 11708)
  Prédit: 'otal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'otal' → logprob: -0.008621077984571457
    2. ' =' → logprob: -5.2586212158203125
    3. '=' → logprob: -6.7586212158203125
    4. 'ot' → logprob: -7.0086212158203125
    5. 'oken' → logprob: -8.008621215820312
    6. 'okens' → logprob: -8.883621215820312
    7. 'o' → logprob: -8.883621215820312
    8. 'r' → logprob: -9.258621215820312
    9. 'cost' → logprob: -9.383621215820312
    10. '_cost' → logprob: -9.633621215820312

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14271286129951477
    2. '=' → logprob: -2.0177128314971924
    3. '_cost' → logprob: -10.767712593078613
    4. 'cost' → logprob: -12.767712593078613
    5. ' ' → logprob: -12.892712593078613
    6. '   ' → logprob: -13.142712593078613
    7. '_' → logprob: -13.142712593078613
    8. ')' → logprob: -13.517712593078613
    9. '_needed' → logprob: -13.517712593078613
    10. 's' → logprob: -14.142712593078613

Token 126: ' buy' (ID: 3877)
  Prédit: ' buy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buy' → logprob: -0.3914235532283783
    2. 'buy' → logprob: -1.1414235830307007
    3. 'b' → logprob: -6.01642370223999
    4. ' max' → logprob: -7.26642370223999
    5. 'max' → logprob: -7.76642370223999
    6. ' b' → logprob: -7.89142370223999
    7. '(b' → logprob: -8.391423225402832
    8. ' x' → logprob: -9.391423225402832
    9. ' (' → logprob: -9.516423225402832
    10. ' ' → logprob: -9.891423225402832

Token 127: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -4.127333340875339e-06
    2. '_p' → logprob: -12.750003814697266
    3. '_' → logprob: -15.000003814697266
    4. 's' → logprob: -15.000003814697266
    5. 'b' → logprob: -16.000003814697266
    6. ' _' → logprob: -16.000003814697266
    7. '_a' → logprob: -16.000003814697266
    8. '_x' → logprob: -16.250003814697266
    9. '_s' → logprob: -16.500003814697266
    10. '_t' → logprob: -17.625003814697266

Token 128: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5290783047676086
    2. ' +' → logprob: -0.9040783047676086
    3. '*' → logprob: -5.654078483581543
    4. '+b' → logprob: -6.404078483581543
    5. ' *' → logprob: -8.154078483581543
    6. '-' → logprob: -8.654078483581543
    7. '+p' → logprob: -8.654078483581543
    8. ' -' → logprob: -9.654078483581543
    9. '+y' → logprob: -10.404078483581543
    10. '*p' → logprob: -11.529078483581543

Token 129: ' buy' (ID: 3877)
  Prédit: 'buy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buy' → logprob: -0.11389952152967453
    2. ' buy' → logprob: -2.2388994693756104
    3. 'x' → logprob: -7.7388997077941895
    4. ' x' → logprob: -8.238899230957031
    5. 'max' → logprob: -9.113899230957031
    6. 'b' → logprob: -9.238899230957031
    7. ' ' → logprob: -9.613899230957031
    8. ' max' → logprob: -10.988899230957031
    9. '   ' → logprob: -11.113899230957031
    10. '-buy' → logprob: -11.488899230957031

Token 130: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -4.36574100604048e-06
    2. 'p' → logprob: -13.000004768371582
    3. '_b' → logprob: -13.250004768371582
    4. '_' → logprob: -15.375004768371582
    5. '-p' → logprob: -18.875003814697266
    6. 'b' → logprob: -19.375003814697266
    7. ' _' → logprob: -19.500003814697266
    8. ')' → logprob: -20.250003814697266
    9. '```' → logprob: -20.250003814697266
    10. '_a' → logprob: -20.375003814697266

Token 131: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20144160091876984
    2. '           ' → logprob: -1.9514416456222534
    3. ' if' → logprob: -4.201441764831543
    4. 'if' → logprob: -4.576441764831543
    5. '            
' → logprob: -5.326441764831543
    6. ' 
' → logprob: -6.326441764831543
    7. '  
' → logprob: -6.576441764831543
    8. '<|end|>' → logprob: -6.576441764831543
    9. 'total' → logprob: -6.951441764831543
    10. '+' → logprob: -7.201441764831543

Token 132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10532839596271515
    2. '<|end|>' → logprob: -2.855328321456909
    3. ' if' → logprob: -3.480328321456909
    4. '<|end|>' → logprob: -5.980328559875488
    5. '
' → logprob: -6.105328559875488
    6. 'if' → logprob: -6.230328559875488
    7. '            
' → logprob: -6.480328559875488
    8. ' 
' → logprob: -7.230328559875488
    9. '   ' → logprob: -7.480328559875488
    10. '       ' → logprob: -7.980328559875488

Token 133: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31494349241256714
    2. ' if' → logprob: -1.689943552017212
    3. '           ' → logprob: -3.064943552017212
    4. 'cost' → logprob: -4.314943313598633
    5. ' cost' → logprob: -4.939943313598633
    6. 'total' → logprob: -5.189943313598633
    7. '#' (adapté à ' #') → logprob: -5.564943313598633
    8. ' total' → logprob: -6.064943313598633
    9. '   ' → logprob: -7.064943313598633
    10. 'for' → logprob: -7.314943313598633

Token 134: ' Calcul' (ID: 57243)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15074042975902557
    2. ' if' → logprob: -2.150740385055542
    3. 'cost' → logprob: -5.400740623474121
    4. 'total' → logprob: -5.650740623474121
    5. '           ' → logprob: -5.900740623474121
    6. ' cost' → logprob: -6.025740623474121
    7. 'min' → logprob: -6.025740623474121
    8. 'for' → logprob: -6.275740623474121
    9. '#' → logprob: -6.400740623474121
    10. ' min' → logprob: -6.900740623474121

Token 135: ' prix' (ID: 18771)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41909876465797424
    2. ' total' → logprob: -2.2940988540649414
    3. ' cost' → logprob: -2.4190988540649414
    4. 'er' → logprob: -2.6690988540649414
    5. ' if' → logprob: -3.6690988540649414
    6. 'total' → logprob: -4.044098854064941
    7. ' du' → logprob: -4.169098854064941
    8. 'cost' → logprob: -4.919098854064941
    9. 'if' → logprob: -5.669098854064941
    10. '               ' → logprob: -5.669098854064941

Token 136: ' sans' (ID: 9828)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2719365060329437
    2. '=' → logprob: -2.1469364166259766
    3. '           ' → logprob: -2.1469364166259766
    4. 'total' → logprob: -6.396936416625977
    5. ' total' → logprob: -7.646936416625977
    6. '   ' → logprob: -7.771936416625977
    7. 'price' → logprob: -8.146936416625977
    8. ' cost' → logprob: -8.396936416625977
    9. 'cost' → logprob: -8.646936416625977
    10. '            
' → logprob: -8.771936416625977

Token 137: ' remise' (ID: 96948)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.7127749919891357
    2. 're' → logprob: -1.7127749919891357
    3. 'acheter' → logprob: -3.0877749919891357
    4. 'sur' → logprob: -3.4627749919891357
    5. 'conversion' → logprob: -3.5877749919891357
    6. 'ré' → logprob: -3.7127749919891357
    7. 'promotion' → logprob: -3.9627749919891357
    8. 'convert' → logprob: -4.212775230407715
    9. 'x' → logprob: -4.212775230407715
    10. 'r' → logprob: -4.337775230407715

Token 138: '
' (ID: 198)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -1.5664035081863403
    2. 'total' → logprob: -1.6914035081863403
    3. ' cost' → logprob: -2.066403388977051
    4. ' =' → logprob: -2.191403388977051
    5. 'cost' → logprob: -2.441403388977051
    6. ' price' → logprob: -2.566403388977051
    7. '=' → logprob: -2.816403388977051
    8. ' total' → logprob: -3.066403388977051
    9. '           ' → logprob: -3.191403388977051
    10. '
' → logprob: -3.566403388977051

Token 139: '           ' (ID: 352)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.9043477177619934
    2. ' price' → logprob: -1.6543476581573486
    3. '           ' → logprob: -1.9043476581573486
    4. 'total' → logprob: -2.2793476581573486
    5. ' cost' → logprob: -2.6543476581573486
    6. 'cost' → logprob: -3.0293476581573486
    7. ' total' → logprob: -3.7793476581573486
    8. '            
' → logprob: -5.654347896575928
    9. 'current' → logprob: -6.029347896575928
    10. '=' → logprob: -6.904347896575928

Token 140: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.40141037106513977
    2. 'price' → logprob: -1.9014103412628174
    3. ' cost' → logprob: -2.1514103412628174
    4. ' price' → logprob: -3.5264103412628174
    5. 'current' → logprob: -4.1514105796813965
    6. 'total' → logprob: -4.4014105796813965
    7. ' current' → logprob: -5.7764105796813965
    8. '   ' → logprob: -6.2764105796813965
    9. ' total' → logprob: -6.6514105796813965
    10. 'prix' → logprob: -8.401410102844238

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12711530923843384
    2. '=' → logprob: -2.127115249633789
    3. '_' → logprob: -9.377115249633789
    4. ' ' → logprob: -10.752115249633789
    5. '_b' → logprob: -10.752115249633789
    6. '_without' → logprob: -11.252115249633789
    7. '_buy' → logprob: -11.752115249633789
    8. '_total' → logprob: -11.877115249633789
    9. 's' → logprob: -12.627115249633789
    10. '   ' → logprob: -12.877115249633789

Token 142: ' buy' (ID: 3877)
  Prédit: 'buy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buy' → logprob: -0.19691142439842224
    2. 'x' → logprob: -2.571911334991455
    3. ' buy' → logprob: -2.696911334991455
    4. '(b' → logprob: -4.696911334991455
    5. '(x' → logprob: -4.821911334991455
    6. 'b' → logprob: -4.821911334991455
    7. 'cost' → logprob: -5.446911334991455
    8. ' x' → logprob: -6.196911334991455
    9. 'total' → logprob: -6.696911334991455
    10. '   ' → logprob: -7.446911334991455

Token 143: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00033713103039190173
    2. '_x' → logprob: -8.625337600708008
    3. '_p' → logprob: -8.875337600708008
    4. 'b' → logprob: -11.750337600708008
    5. '_s' → logprob: -13.250337600708008
    6. 'x' → logprob: -13.250337600708008
    7. '_' → logprob: -13.500337600708008
    8. '*' → logprob: -14.375337600708008
    9. '_t' → logprob: -14.375337600708008
    10. '*_' → logprob: -14.750337600708008

Token 144: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4758468270301819
    2. ' *' → logprob: -0.9758468270301819
    3. '*x' → logprob: -6.350846767425537
    4. '*y' → logprob: -11.725847244262695
    5. '   ' → logprob: -12.225847244262695
    6. '*b' → logprob: -12.350847244262695
    7. ' ' → logprob: -13.225847244262695
    8. ' ' → logprob: -13.475847244262695
    9. '*p' → logprob: -14.600847244262695
    10. '**' → logprob: -15.225847244262695

Token 145: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00010688089241739362
    2. 'y' → logprob: -9.500106811523438
    3. ' x' → logprob: -10.375106811523438
    4. '   ' → logprob: -15.000106811523438
    5. 'b' → logprob: -15.500106811523438
    6. ' ' → logprob: -16.625106811523438
    7. '(x' → logprob: -16.875106811523438
    8. ' y' → logprob: -17.000106811523438
    9. '10' → logprob: -17.250106811523438
    10. '100' → logprob: -17.750106811523438

Token 146: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25195223093032837
    2. '+' → logprob: -1.5019521713256836
    3. ' ' → logprob: -12.001952171325684
    4. '+b' → logprob: -12.126952171325684
    5. '+y' → logprob: -12.876952171325684
    6. '<|end|>' → logprob: -13.001952171325684
    7. '+p' → logprob: -13.251952171325684
    8. ' plus' → logprob: -13.751952171325684
    9. '*' → logprob: -13.751952171325684
    10. '+x' → logprob: -14.376952171325684

Token 147: ' buy' (ID: 3877)
  Prédit: ' buy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buy' → logprob: -0.632610559463501
    2. 'buy' → logprob: -0.757610559463501
    3. ' ' → logprob: -12.382610321044922
    4. '.buy' → logprob: -13.132610321044922
    5. '_buy' → logprob: -14.132610321044922
    6. '<|end|>' → logprob: -14.257610321044922
    7. ' purchase' → logprob: -14.382610321044922
    8. '  ' → logprob: -14.507610321044922
    9. 'b' → logprob: -14.632610321044922
    10. '   ' → logprob: -14.757610321044922

Token 148: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -5.796184723294573e-06
    2. 'p' → logprob: -12.125005722045898
    3. ' _' → logprob: -16.5000057220459
    4. '*' → logprob: -16.6250057220459
    5. '_' → logprob: -17.1250057220459
    6. 'a' → logprob: -17.1250057220459
    7. '*_' → logprob: -17.6250057220459
    8. '```' → logprob: -17.8750057220459
    9. '
' → logprob: -18.0000057220459
    10. '*p' → logprob: -18.1250057220459

Token 149: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01815216802060604
    2. '*' → logprob: -4.018152236938477
    3. ' ' → logprob: -13.893152236938477
    4. '*p' → logprob: -14.018152236938477
    5. '*y' → logprob: -14.893152236938477
    6. '*x' → logprob: -16.018152236938477
    7. ' ' → logprob: -16.768152236938477
    8. '*object' → logprob: -17.268152236938477
    9. '**' → logprob: -17.893152236938477
    10. '*b' → logprob: -18.643152236938477

Token 150: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10020817816257477
    2. ' y' → logprob: -2.350208282470703
    3. ' ' → logprob: -14.100208282470703
    4. '*y' → logprob: -15.350208282470703
    5. '	y' → logprob: -15.350208282470703
    6. '  ' → logprob: -16.100208282470703
    7. ''y' → logprob: -16.225208282470703
    8. '<|end|>' → logprob: -16.600208282470703
    9. '‘y' → logprob: -17.475208282470703
    10. '(y' → logprob: -17.475208282470703

Token 151: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028441263362765312
    2. '
' → logprob: -4.153441429138184
    3. 'if' → logprob: -4.903441429138184
    4. ' if' → logprob: -5.403441429138184
    5. '            
' → logprob: -8.778441429138184
    6. '   ' → logprob: -10.028441429138184
    7. '
' → logprob: -10.153441429138184
    8. '          ' → logprob: -10.153441429138184
    9. '+' → logprob: -10.403441429138184
    10. '       ' → logprob: -10.653441429138184

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0536438450217247
    2. '
' → logprob: -3.1786439418792725
    3. 'if' → logprob: -5.303643703460693
    4. ' if' → logprob: -5.553643703460693
    5. '            
' → logprob: -6.553643703460693
    6. '   ' → logprob: -9.178644180297852
    7. '  
' → logprob: -10.678644180297852
    8. '    
' → logprob: -10.678644180297852
    9. 'total' → logprob: -10.678644180297852
    10. '
' → logprob: -10.803644180297852

Token 153: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.9007934927940369
    2. '           ' → logprob: -1.5257935523986816
    3. 'if' → logprob: -1.6507935523986816
    4. '
' → logprob: -2.2757935523986816
    5. '   ' → logprob: -3.5257935523986816
    6. ' if' → logprob: -3.7757935523986816
    7. ' #' → logprob: -4.650793552398682
    8. 'min' → logprob: -4.775793552398682
    9. '            
' → logprob: -5.275793552398682
    10. ' min' → logprob: -6.275793552398682

Token 154: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37270262837409973
    2. '#' → logprob: -1.7477025985717773
    3. 'cost' → logprob: -2.8727025985717773
    4. 'min' → logprob: -3.1227025985717773
    5. 'for' → logprob: -4.497702598571777
    6. ' if' → logprob: -4.747702598571777
    7. ' cost' → logprob: -5.247702598571777
    8. ' min' → logprob: -6.122702598571777
    9. 'total' → logprob: -6.247702598571777
    10. '
' → logprob: -6.872702598571777

Token 155: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.0010089923162013292
    2. 'if' → logprob: -7.376008987426758
    3. 'ifiez' → logprob: -9.501008987426758
    4. 'IFIER' → logprob: -9.626008987426758
    5. 'ifer' → logprob: -9.626008987426758
    6. '```' → logprob: -9.751008987426758
    7. ' if' → logprob: -10.126008987426758
    8. 'ifie' → logprob: -10.876008987426758
    9. '#' → logprob: -11.751008987426758
    10. '   ' → logprob: -11.876008987426758

Token 156: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3508412539958954
    2. ' if' → logprob: -1.2258412837982178
    3. 'cost' → logprob: -6.725841045379639
    4. ' cost' → logprob: -7.725841045379639
    5. ' buy' → logprob: -8.225841522216797
    6. 'total' → logprob: -8.475841522216797
    7. ' total' → logprob: -9.225841522216797
    8. '   ' → logprob: -9.725841522216797
    9. ' ' → logprob: -10.350841522216797
    10. 'buy' → logprob: -10.475841522216797

Token 157: ' remise' (ID: 96948)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.48778194189071655
    2. ' total' → logprob: -1.9877820014953613
    3. 'cost' → logprob: -2.4877820014953613
    4. ' buy' → logprob: -3.1127820014953613
    5. 'b' → logprob: -3.2377820014953613
    6. 'buy' → logprob: -3.3627820014953613
    7. ' cost' → logprob: -3.3627820014953613
    8. ' b' → logprob: -4.987782001495361
    9. 'x' → logprob: -6.112782001495361
    10. ' p' → logprob: -6.862782001495361

Token 158: ' applicable' (ID: 12781)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7863426804542542
    2. ' if' → logprob: -1.2863426208496094
    3. 'if' → logprob: -2.0363426208496094
    4. 'and' → logprob: -3.6613426208496094
    5. ' ==' → logprob: -3.6613426208496094
    6. ' >' → logprob: -3.6613426208496094
    7. ' <=' → logprob: -3.7863426208496094
    8. ' >=' → logprob: -4.911342620849609
    9. '==' → logprob: -5.286342620849609
    10. ' =' → logprob: -5.536342620849609

Token 159: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3498294949531555
    2. ' and' → logprob: -1.9748294353485107
    3. ' if' → logprob: -2.5998294353485107
    4. 'and' → logprob: -3.4748294353485107
    5. 'if' → logprob: -3.8498294353485107
    6. '<|end|>' → logprob: -4.22482967376709
    7. '<|end|>' → logprob: -5.97482967376709
    8. '       ' → logprob: -6.22482967376709
    9. '   ' → logprob: -6.34982967376709
    10. ',' → logprob: -6.59982967376709

Token 160: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0680638998746872
    2. ' if' → logprob: -3.568063974380493
    3. ' and' → logprob: -4.068063735961914
    4. 'if' → logprob: -4.568063735961914
    5. 'and' → logprob: -4.818063735961914
    6. '<|end|>' → logprob: -7.568063735961914
    7. '       ' → logprob: -8.318063735961914
    8. '   ' → logprob: -8.568063735961914
    9. '          ' → logprob: -8.943063735961914
    10. ' ' → logprob: -9.068063735961914

Token 161: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2753158509731293
    2. ' if' → logprob: -1.5253158807754517
    3. '           ' → logprob: -3.775315761566162
    4. ' and' → logprob: -9.90031623840332
    5. 'total' → logprob: -10.15031623840332
    6. 'and' → logprob: -10.40031623840332
    7. '```' → logprob: -10.65031623840332
    8. '
' → logprob: -11.77531623840332
    9. '   ' → logprob: -11.77531623840332
    10. ' total' → logprob: -12.40031623840332

Token 162: ' buy' (ID: 3877)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6167616248130798
    2. ' total' → logprob: -0.9917616248130798
    3. ' buy' → logprob: -2.9917616844177246
    4. 'buy' → logprob: -3.4917616844177246
    5. 'b' → logprob: -5.366761684417725
    6. ' b' → logprob: -6.366761684417725
    7. 'cost' → logprob: -7.616761684417725
    8. ' cost' → logprob: -7.991761684417725
    9. '(total' → logprob: -8.241761207580566
    10. '(b' → logprob: -8.241761207580566

Token 163: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0012310652527958155
    2. '_p' → logprob: -6.7512311935424805
    3. 'b' → logprob: -10.25123119354248
    4. 'p' → logprob: -11.37623119354248
    5. '_' → logprob: -11.50123119354248
    6. '_t' → logprob: -13.50123119354248
    7. ' _' → logprob: -15.00123119354248
    8. '==' → logprob: -15.18873119354248
    9. '_x' → logprob: -15.56373119354248
    10. '_a' → logprob: -15.62623119354248

Token 164: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.5550600290298462
    2. ' >' → logprob: -1.6800600290298462
    3. '>=' → logprob: -1.8050600290298462
    4. ' >=' → logprob: -2.0550599098205566
    5. ' +' → logprob: -2.4300599098205566
    6. '==' → logprob: -2.8050599098205566
    7. ' ==' → logprob: -3.0550599098205566
    8. '+' → logprob: -3.1800599098205566
    9. 'and' → logprob: -3.6800599098205566
    10. ' and' → logprob: -3.8050599098205566

Token 165: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8089128136634827
    2. '6' → logprob: -1.183912754058838
    3. '1' → logprob: -2.558912754058838
    4. 'b' → logprob: -2.808912754058838
    5. '2' → logprob: -3.058912754058838
    6. '5' → logprob: -3.308912754058838
    7. '4' → logprob: -3.808912754058838
    8. '7' → logprob: -6.058912754058838
    9. 'x' → logprob: -6.808912754058838
    10. 'p' → logprob: -7.183912754058838

Token 166: '5' (ID: 20)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.6589294672012329
    2. '3' → logprob: -1.783929467201233
    3. 'b' → logprob: -1.908929467201233
    4. '2' → logprob: -2.7839293479919434
    5. '1' → logprob: -3.0339293479919434
    6. '5' → logprob: -3.7839293479919434
    7. '4' → logprob: -3.9089293479919434
    8. '7' → logprob: -5.158929347991943
    9. 'buy' → logprob: -5.408929347991943
    10. 'p' → logprob: -6.033929347991943

Token 167: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25279149413108826
    2. 'and' → logprob: -1.5027915239334106
    3. ' or' → logprob: -7.127791404724121
    4. ' ' → logprob: -10.877791404724121
    5. 'or' → logprob: -11.127791404724121
    6. '   ' → logprob: -11.252791404724121
    7. '           ' → logprob: -12.627791404724121
    8. '	and' → logprob: -12.752791404724121
    9. '               ' → logprob: -13.627791404724121
    10. '  ' → logprob: -13.627791404724121

Token 168: ' buy' (ID: 3877)
  Prédit: 'buy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buy' → logprob: -0.04880809038877487
    2. ' buy' → logprob: -3.0488080978393555
    3. '   ' → logprob: -9.673808097839355
    4. ' ' → logprob: -10.048808097839355
    5. 'total' → logprob: -10.173808097839355
    6. '  ' → logprob: -10.173808097839355
    7. 'b' → logprob: -11.048808097839355
    8. ' total' → logprob: -12.298808097839355
    9. '    ' → logprob: -12.423808097839355
    10. '     ' → logprob: -12.673808097839355

Token 169: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -3.15441757265944e-05
    2. 'p' → logprob: -11.125031471252441
    3. '_b' → logprob: -11.875031471252441
    4. '>' → logprob: -12.000031471252441
    5. '>=' → logprob: -14.250031471252441
    6. 'buy' → logprob: -14.500031471252441
    7. '_' → logprob: -14.750031471252441
    8. '   ' → logprob: -14.750031471252441
    9. ' ' → logprob: -15.125031471252441
    10. '_buy' → logprob: -15.500031471252441

Token 170: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.38691163063049316
    2. '>=' → logprob: -1.1369116306304932
    3. ' ' → logprob: -11.261911392211914
    4. ' <' → logprob: -11.886911392211914
    5. ']>=' → logprob: -12.011911392211914
    6. ')>=' → logprob: -12.261911392211914
    7. '>' → logprob: -12.761911392211914
    8. '<' → logprob: -13.136911392211914
    9. '==' → logprob: -13.511911392211914
    10. '<|end|>' → logprob: -14.011911392211914

Token 171: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.06944933533668518
    2. ' ' → logprob: -2.8194494247436523
    3. '3' → logprob: -6.069449424743652
    4. '4' → logprob: -6.319449424743652
    5. '2' → logprob: -6.319449424743652
    6. '1' → logprob: -6.569449424743652
    7. '6' → logprob: -9.069449424743652
    8. '  ' → logprob: -12.006949424743652
    9. '7' → logprob: -12.069449424743652
    10. '   ' → logprob: -12.756949424743652

Token 172: '2' (ID: 17)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.026628270745277405
    2. '3' → logprob: -4.401628494262695
    3. '4' → logprob: -5.151628494262695
    4. '2' → logprob: -5.151628494262695
    5. '1' → logprob: -6.151628494262695
    6. '6' → logprob: -8.526628494262695
    7. ' ' → logprob: -9.401628494262695
    8. '7' → logprob: -11.151628494262695
    9. '0' → logprob: -12.214128494262695
    10. '10' → logprob: -13.339128494262695

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043834369629621506
    2. ':
' → logprob: -3.5438344478607178
    3. ' and' → logprob: -4.293834209442139
    4. 'and' → logprob: -8.418834686279297
    5. ' :' → logprob: -9.918834686279297
    6. '   ' → logprob: -11.043834686279297
    7. '       ' → logprob: -11.418834686279297
    8. ' :
' → logprob: -11.918834686279297
    9. ':
' → logprob: -12.043834686279297
    10. ',' → logprob: -12.293834686279297

Token 174: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08754502236843109
    2. ':
' → logprob: -3.4625449180603027
    3. ':' → logprob: -3.8375449180603027
    4. ' cost' → logprob: -3.8375449180603027
    5. ' and' → logprob: -5.337544918060303
    6. 'cost' → logprob: -5.587544918060303
    7. '           ' → logprob: -8.962545394897461
    8. ' :
' → logprob: -9.212545394897461
    9. '       ' → logprob: -9.712545394897461
    10. 'and' → logprob: -9.837545394897461

Token 175: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.062210675328969955
    2. ' cost' → logprob: -2.8122105598449707
    3. '               ' → logprob: -8.812211036682129
    4. 'discount' → logprob: -9.937211036682129
    5. '           ' → logprob: -11.187211036682129
    6. '   ' → logprob: -11.687211036682129
    7. '                   ' → logprob: -12.312211036682129
    8. ' discount' → logprob: -12.562211036682129
    9. 'total' → logprob: -12.687211036682129
    10. 'price' → logprob: -12.812211036682129

Token 176: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -1.1077686548233032
    2. ' *=' → logprob: -1.7327686548233032
    3. '-=' → logprob: -1.8577686548233032
    4. '=' → logprob: -1.8577686548233032
    5. ' -=' → logprob: -1.8577686548233032
    6. ' =' → logprob: -3.7327685356140137
    7. '+=' → logprob: -8.107769012451172
    8. '*' → logprob: -8.607769012451172
    9. ' +=' → logprob: -8.732769012451172
    10. '-' → logprob: -8.982769012451172

Token 177: ' int' (ID: 677)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.1778685301542282
    2. ' cost' → logprob: -2.677868604660034
    3. '(cost' → logprob: -2.802868604660034
    4. 'int' → logprob: -4.177868366241455
    5. '(b' → logprob: -4.677868366241455
    6. ' int' → logprob: -6.302868366241455
    7. ' (' → logprob: -6.302868366241455
    8. '(int' → logprob: -6.552868366241455
    9. '0' → logprob: -6.552868366241455
    10. 'buy' → logprob: -7.302868366241455

Token 178: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.0005763856461271644
    2. 'cost' → logprob: -8.12557601928711
    3. '(' → logprob: -8.37557601928711
    4. ' cost' → logprob: -10.00057601928711
    5. '((' → logprob: -13.62557601928711
    6. '(c' → logprob: -14.12557601928711
    7. '0' → logprob: -14.62557601928711
    8. '(round' → logprob: -14.75057601928711
    9. '(co' → logprob: -15.00057601928711
    10. ' (' → logprob: -15.00057601928711

Token 179: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2813531756401062
    2. ' *' → logprob: -1.406353235244751
    3. '0' → logprob: -8.656352996826172
    4. ' ' → logprob: -11.281352996826172
    5. ' /' → logprob: -12.531352996826172
    6. ' ' → logprob: -12.781352996826172
    7. ')' → logprob: -12.906352996826172
    8. '/' → logprob: -13.281352996826172
    9. '```' → logprob: -14.093852996826172
    10. '**' → logprob: -14.281352996826172

Token 180: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12730738520622253
    2. ' ' → logprob: -2.127307415008545
    3. '(' → logprob: -8.502306938171387
    4. ' (' → logprob: -9.252306938171387
    5. '1' → logprob: -10.002306938171387
    6. '7' → logprob: -12.564806938171387
    7. '8' → logprob: -12.814806938171387
    8. '9' → logprob: -12.939806938171387
    9. '5' → logprob: -13.002306938171387
    10. '2' → logprob: -13.002306938171387

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014340397901833057
    2. ' ' → logprob: -6.876433849334717
    3. '(' → logprob: -8.126434326171875
    4. '1' → logprob: -9.501434326171875
    5. ' (' → logprob: -11.938934326171875
    6. '2' → logprob: -12.751434326171875
    7. '7' → logprob: -13.251434326171875
    8. '85' → logprob: -13.251434326171875
    9. '5' → logprob: -13.563934326171875
    10. '
' → logprob: -13.751434326171875

Token 182: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.778209353797138e-05
    2. ',' → logprob: -9.875067710876465
    3. '0' → logprob: -11.625067710876465
    4. '7' → logprob: -13.250067710876465
    5. '8' → logprob: -13.875067710876465
    6. '9' → logprob: -14.125067710876465
    7. ' .' → logprob: -14.875067710876465
    8. '5' → logprob: -14.875067710876465
    9. '6' → logprob: -15.125067710876465
    10. ')' → logprob: -15.125067710876465

Token 183: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.8621473908424377
    2. '9' → logprob: -0.9871473908424377
    3. '7' → logprob: -2.862147331237793
    4. '75' → logprob: -2.862147331237793
    5. '85' → logprob: -3.112147331237793
    6. '5' → logprob: -3.612147331237793
    7. '95' → logprob: -4.237147331237793
    8. '6' → logprob: -6.112147331237793
    9. '65' → logprob: -7.424647331237793
    10. '66' → logprob: -8.737147331237793

Token 184: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ')
' → logprob: -12.500005722045898
    3. ' )' → logprob: -13.375005722045898
    4. '))' → logprob: -17.0000057220459
    5. ')}' → logprob: -17.0000057220459
    6. ')return' → logprob: -17.7500057220459
    7. '           ' → logprob: -18.0000057220459
    8. '}' → logprob: -18.0000057220459
    9. ')
' → logprob: -18.3750057220459
    10. '),' → logprob: -18.6250057220459

Token 185: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012023737654089928
    2. 'if' → logprob: -7.251202583312988
    3. ' if' → logprob: -8.126202583312988
    4. '            
' → logprob: -9.876202583312988
    5. '
' → logprob: -10.251202583312988
    6. '               ' → logprob: -10.376202583312988
    7. '       ' → logprob: -10.501202583312988
    8. 'min' → logprob: -11.251202583312988
    9. 'elif' → logprob: -11.501202583312988
    10. '   ' → logprob: -11.751202583312988

Token 186: ' if' (ID: 538)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.920369029045105
    2. 'if' (adapté à ' if') → logprob: -1.045369029045105
    3. '   ' → logprob: -2.2953691482543945
    4. ' if' → logprob: -2.5453691482543945
    5. ' min' → logprob: -3.0453691482543945
    6. '           ' → logprob: -3.9203691482543945
    7. '       ' → logprob: -6.0453691482543945
    8. 'else' → logprob: -7.4203691482543945
    9. 'elif' → logprob: -8.920369148254395
    10. '
' → logprob: -9.045369148254395

Token 187: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.14268341660499573
    2. 'cost' → logprob: -2.017683506011963
    3. 'min' → logprob: -13.142683029174805
    4. '(cost' → logprob: -13.267683029174805
    5. 'Cost' → logprob: -14.017683029174805
    6. ' ' → logprob: -14.017683029174805
    7. ' min' → logprob: -14.267683029174805
    8. 'total' → logprob: -14.392683029174805
    9. '   ' → logprob: -15.017683029174805
    10. ' ' → logprob: -15.392683029174805

Token 188: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11283987760543823
    2. '<' → logprob: -2.237839937210083
    3. ' <=' → logprob: -11.987839698791504
    4. ' ' → logprob: -12.237839698791504
    5. 'min' → logprob: -12.487839698791504
    6. '<=' → logprob: -13.737839698791504
    7. ' min' → logprob: -14.237839698791504
    8. ')' → logprob: -16.11284065246582
    9. '<size' → logprob: -16.36284065246582
    10. '<len' → logprob: -16.36284065246582

Token 189: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.2519303858280182
    2. 'min' → logprob: -1.5019303560256958
    3. '   ' → logprob: -14.376930236816406
    4. '	min' → logprob: -14.876930236816406
    5. '_min' → logprob: -16.501930236816406
    6. '=min' → logprob: -16.626930236816406
    7. ' ' → logprob: -16.876930236816406
    8. ' ' → logprob: -17.126930236816406
    9. '(min' → logprob: -17.126930236816406
    10. '           ' → logprob: -17.751930236816406

Token 190: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.9361264946837764e-07
    2. 'cost' → logprob: -17.25
    3. '_' → logprob: -17.75
    4. '_price' → logprob: -18.375
    5. '_COST' → logprob: -19.5
    6. '_co' → logprob: -19.625
    7. '_c' → logprob: -19.75
    8. '_code' → logprob: -20.125
    9. '\' → logprob: -20.75
    10. '_val' → logprob: -21.25

Token 191: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017953701317310333
    2. ':
' → logprob: -6.751795291900635
    3. '       ' → logprob: -7.501795291900635
    4. '           ' → logprob: -10.876795768737793
    5. '<|end|>' → logprob: -11.001795768737793
    6. '   ' → logprob: -11.251795768737793
    7. '):' → logprob: -11.501795768737793
    8. '<|end|>' → logprob: -12.751795768737793
    9. ' :' → logprob: -13.251795768737793
    10. '=' → logprob: -13.626795768737793

Token 192: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6743608713150024
    2. '               ' → logprob: -1.0493608713150024
    3. ' min' → logprob: -2.549360752105713
    4. '           ' → logprob: -3.049360752105713
    5. 'min' → logprob: -4.299360752105713
    6. '   ' → logprob: -7.674360752105713
    7. '	min' → logprob: -8.424361228942871
    8. '_min' → logprob: -8.924361228942871
    9. '[min' → logprob: -9.299361228942871
    10. '                   ' → logprob: -9.549361228942871

Token 193: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.06311235576868057
    2. 'min' (adapté à ' min') → logprob: -2.813112258911133
    3. '               ' → logprob: -6.813112258911133
    4. '                   ' → logprob: -10.688112258911133
    5. '   ' → logprob: -11.813112258911133
    6. '           ' → logprob: -11.938112258911133
    7. '	min' → logprob: -12.313112258911133
    8. '       ' → logprob: -13.063112258911133
    9. '                ' → logprob: -15.188112258911133
    10. ' ' → logprob: -15.313112258911133

Token 194: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.8624639324116288e-06
    2. 'cost' → logprob: -13.875001907348633
    3. '_code' → logprob: -14.625001907348633
    4. '_' → logprob: -15.750001907348633
    5. '_co' → logprob: -16.000001907348633
    6. '_c' → logprob: -17.000001907348633
    7. '_COST' → logprob: -17.250001907348633
    8. ' cost' → logprob: -17.875001907348633
    9. '_price' → logprob: -18.000001907348633
    10. 'Cost' → logprob: -18.250001907348633

Token 195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193002820014954
    2. ' =' → logprob: -1.5019299983978271
    3. '＝' → logprob: -14.626930236816406
    4. '=

' → logprob: -15.751930236816406
    5. '=
' → logprob: -16.751930236816406
    6. 'cost' → logprob: -17.001930236816406
    7. '=min' → logprob: -17.626930236816406
    8. '   ' → logprob: -18.001930236816406
    9. ' ' → logprob: -18.001930236816406
    10. '=True' → logprob: -18.251930236816406

Token 196: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.10020678490400314
    2. ' cost' → logprob: -2.3502068519592285
    3. '(cost' → logprob: -16.60020637512207
    4. 'co' → logprob: -17.60020637512207
    5. '_cost' → logprob: -18.10020637512207
    6. 'cos' → logprob: -18.97520637512207
    7. 'code' → logprob: -19.10020637512207
    8. 'Cost' → logprob: -19.10020637512207
    9. 'c' → logprob: -19.35020637512207
    10. 'price' → logprob: -19.60020637512207

Token 197: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06216385215520859
    2. '   ' → logprob: -2.812163829803467
    3. '
' → logprob: -8.937164306640625
    4. ' print' → logprob: -10.187164306640625
    5. '    
' → logprob: -11.187164306640625
    6. '       ' → logprob: -12.062164306640625
    7. '           ' → logprob: -12.687164306640625
    8. '```' → logprob: -13.312164306640625
    9. '            
' → logprob: -14.562164306640625
    10. '	print' → logprob: -14.562164306640625

Token 198: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07899940013885498
    2. '   ' → logprob: -2.5789995193481445
    3. ' print' → logprob: -9.828999519348145
    4. '
' → logprob: -10.203999519348145
    5. '       ' → logprob: -11.703999519348145
    6. '           ' → logprob: -12.328999519348145
    7. '```' → logprob: -12.953999519348145
    8. '    
' → logprob: -13.078999519348145
    9. '	print' → logprob: -14.453999519348145
    10. '            
' → logprob: -15.828999519348145

Token 199: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002542728092521429
    2. '   ' → logprob: -6.002542495727539
    3. ' print' → logprob: -9.627542495727539
    4. '       ' → logprob: -14.752542495727539
    5. '
' → logprob: -14.877542495727539
    6. '```' → logprob: -15.627542495727539
    7. '    
' → logprob: -16.25254249572754
    8. 'for' → logprob: -16.25254249572754
    9. '           ' → logprob: -16.50254249572754
    10. ' ' → logprob: -17.75254249572754

Token 200: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -2.2127087504486553e-05
    2. '(' → logprob: -10.750021934509277
    3. '(max' → logprob: -14.750021934509277
    4. '(f' → logprob: -15.375021934509277
    5. '(m' → logprob: -17.375022888183594
    6. 'min' → logprob: -17.625022888183594
    7. ' (' → logprob: -18.125022888183594
    8. '()' → logprob: -18.250022888183594
    9. '(int' → logprob: -19.000022888183594
    10. '(round' → logprob: -19.500022888183594

Token 201: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -4.320199877838604e-07
    2. 'cost' → logprob: -14.875
    3. '_COST' → logprob: -18.625
    4. '_' → logprob: -19.5
    5. '_co' → logprob: -19.5
    6. ' cost' → logprob: -19.625
    7. 'Cost' → logprob: -19.75
    8. '_code' → logprob: -19.875
    9. '_count' → logprob: -20.0
    10. ')' → logprob: -20.0

Token 202: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9027791495318525e-05
    2. '<|end|>' → logprob: -11.625019073486328
    3. ' )' → logprob: -12.625019073486328
    4. '')' → logprob: -12.875019073486328
    5. ')
' → logprob: -13.125019073486328
    6. '```' → logprob: -14.125019073486328
    7. '`)' → logprob: -14.875019073486328
    8. '")' → logprob: -15.250019073486328
    9. '())' → logprob: -15.750019073486328
    10. '))' → logprob: -16.375019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 200
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 84
Tokens correctement prédits (top 10): 150
Précision stricte (1ère position): 39.50%
Précision adaptée (1ère position): 42.00%
Précision (top 10): 75.00%
================================================================================
