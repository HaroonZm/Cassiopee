================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H,A,B=map(int,input().split())
count=0
for h in range(A,B+1):
    if H%h==0:
        count+=1
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: ',A' (ID: 59196)
  → Token d'amorce (pas de prédiction)

Token 2: ',B' (ID: 19853)
  → Token d'amorce (pas de prédiction)

Token 3: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0947155952453613
    2. ')' → logprob: -1.3447155952453613
    3. ',' → logprob: -1.4697155952453613
    4. ';' → logprob: -2.3447155952453613
    5. '(' → logprob: -2.9697155952453613
    6. '[' → logprob: -4.719715595245361
    7. ' =' → logprob: -5.594715595245361
    8. '.' → logprob: -5.844715595245361
    9. ']' → logprob: -5.969715595245361
    10. ',C' → logprob: -5.969715595245361

Token 4: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35182034969329834
    2. '1' → logprob: -2.226820468902588
    3. '[' → logprob: -2.226820468902588
    4. '[]' → logprob: -3.101820468902588
    5. ' ' → logprob: -4.351820468902588
    6. '(' → logprob: -5.101820468902588
    7. '10' → logprob: -5.601820468902588
    8. '[],' → logprob: -5.601820468902588
    9. '3' → logprob: -5.726820468902588
    10. ' [' → logprob: -6.601820468902588

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013181055895984173
    2. '(lambda' → logprob: -5.138181209564209
    3. '<|end|>' → logprob: -5.138181209564209
    4. '```' → logprob: -7.888181209564209
    5. '(int' → logprob: -8.38818073272705
    6. '(user' → logprob: -9.51318073272705
    7. ')' → logprob: -9.51318073272705
    8. '((' → logprob: -9.63818073272705
    9. '(open' → logprob: -10.01318073272705
    10. '<|end|>' → logprob: -10.01318073272705

Token 6: ',input' (ID: 123014)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2199467271566391
    2. '<|end|>' → logprob: -1.8449467420578003
    3. ',' → logprob: -4.09494686126709
    4. ')(' → logprob: -4.34494686126709
    5. '<|end|>' → logprob: -5.96994686126709
    6. '`)' → logprob: -6.34494686126709
    7. '(' → logprob: -6.71994686126709
    8. '(input' → logprob: -7.46994686126709
    9. '```' → logprob: -7.84494686126709
    10. '(user' → logprob: -7.84494686126709

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45336732268333435
    2. ')' → logprob: -1.4533673524856567
    3. '('' → logprob: -3.078367233276367
    4. '())' → logprob: -3.203367233276367
    5. '()' → logprob: -5.078367233276367
    6. '("("' → logprob: -5.328367233276367
    7. '(">' → logprob: -5.578367233276367
    8. '(""))' → logprob: -5.578367233276367
    9. ')(' → logprob: -5.703367233276367
    10. '(()' → logprob: -6.078367233276367

Token 8: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009196776081807911
    2. ')' → logprob: -7.125919818878174
    3. 'strip' → logprob: -9.750919342041016
    4. ' split' → logprob: -10.625919342041016
    5. '(split' → logprob: -10.875919342041016
    6. 'rstrip' → logprob: -11.625919342041016
    7. '<|end|>' → logprob: -13.375919342041016
    8. 'spl' → logprob: -14.125919342041016
    9. 'read' → logprob: -14.250919342041016
    10. '_split' → logprob: -14.250919342041016

Token 9: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01548014860600233
    2. '())' → logprob: -4.390480041503906
    3. '`)' → logprob: -6.515480041503906
    4. '))' → logprob: -6.765480041503906
    5. '()' → logprob: -8.515480041503906
    6. '(' → logprob: -10.015480041503906
    7. ')`' → logprob: -10.890480041503906
    8. ' )' → logprob: -11.015480041503906
    9. '```' → logprob: -11.640480041503906
    10. '`' → logprob: -11.890480041503906

Token 10: 'count' (ID: 5420)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2558497190475464
    2. '#' → logprob: -1.5058497190475464
    3. '*' → logprob: -2.255849838256836
    4. ')' → logprob: -2.755849838256836
    5. 'C' → logprob: -2.880849838256836
    6. 'x' → logprob: -3.255849838256836
    7. ',
' → logprob: -3.630849838256836
    8. ';' → logprob: -3.630849838256836
    9. 'c' → logprob: -3.880849838256836
    10. 'if' → logprob: -4.005849838256836

Token 11: '=' (ID: 28)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5860838890075684
    2. '_' → logprob: -1.2110838890075684
    3. '=' → logprob: -1.9610838890075684
    4. '+' → logprob: -6.211083889007568
    5. ')' → logprob: -7.336083889007568
    6. '_space' → logprob: -8.211084365844727
    7. 'space' → logprob: -8.461084365844727
    8. ' =' → logprob: -8.461084365844727
    9. '(space' → logprob: -8.461084365844727
    10. ' (' → logprob: -8.586084365844727

Token 12: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.65707261255011e-06
    2. '(' → logprob: -12.375008583068848
    3. '1' → logprob: -13.375008583068848
    4. ' ' → logprob: -13.375008583068848
    5. 'H' → logprob: -13.750008583068848
    6. '3' → logprob: -17.250009536743164
    7. '(H' → logprob: -17.375009536743164
    8. 'A' → logprob: -17.625009536743164
    9. '10' → logprob: -17.625009536743164
    10. '100' → logprob: -17.750009536743164

Token 13: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9609237313270569
    2. ' while' → logprob: -1.835923671722412
    3. '
' → logprob: -1.960923671722412
    4. 'for' → logprob: -2.335923671722412
    5. '\n' → logprob: -2.835923671722412
    6. ' for' → logprob: -3.460923671722412
    7. '\' → logprob: -3.585923671722412
    8. '<|end|>' → logprob: -3.710923671722412
    9. ' 
' → logprob: -3.835923671722412
    10. '' → logprob: -4.210923671722412

Token 14: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1024137735366821
    2. ' while' → logprob: -1.4774137735366821
    3. '
' → logprob: -1.9774137735366821
    4. 'for' → logprob: -2.2274136543273926
    5. ' for' → logprob: -2.8524136543273926
    6. '\n' → logprob: -3.3524136543273926
    7. '<|end|>' → logprob: -3.3524136543273926
    8. '```' → logprob: -3.6024136543273926
    9. ' 
' → logprob: -4.352413654327393
    10. '' → logprob: -5.102413654327393

Token 15: ' h' (ID: 312)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6627764105796814
    2. ' i' → logprob: -0.9127764105796814
    3. ' _' → logprob: -2.537776470184326
    4. '_' → logprob: -6.412776470184326
    5. '  ' → logprob: -6.537776470184326
    6. 'i' → logprob: -8.412775993347168
    7. ' H' → logprob: -8.537775993347168
    8. ' ‌' → logprob: -8.537775993347168
    9. ' ```' → logprob: -9.162775993347168
    10. ' ▁' → logprob: -9.287775993347168

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00728643499314785
    2. 'in' → logprob: -5.007286548614502
    3. ' ' → logprob: -7.507286548614502
    4. '  ' → logprob: -12.507286071777344
    5. 'n' → logprob: -12.632286071777344
    6. ' i' → logprob: -12.882286071777344
    7. ' n' → logprob: -13.132286071777344
    8. 'range' → logprob: -13.382286071777344
    9. ' range' → logprob: -13.632286071777344
    10. ',' → logprob: -13.757286071777344

Token 17: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07889155298471451
    2. 'range' → logprob: -2.5788915157318115
    3. ' ' → logprob: -14.07889175415039
    4. '(range' → logprob: -14.70389175415039
    5. '	range' → logprob: -14.82889175415039
    6. 'Range' → logprob: -16.57889175415039
    7. ' H' → logprob: -16.95389175415039
    8. 'H' → logprob: -17.07889175415039
    9. '.range' → logprob: -17.32889175415039
    10. '_range' → logprob: -17.45389175415039

Token 18: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760148763656616
    2. '(H' → logprob: -0.8260148763656616
    3. ' (' → logprob: -10.201014518737793
    4. '(h' → logprob: -11.451014518737793
    5. '(A' → logprob: -11.826014518737793
    6. '(len' → logprob: -11.951014518737793
    7. '((' → logprob: -12.451014518737793
    8. '(range' → logprob: -12.951014518737793
    9. '(
' → logprob: -13.451014518737793
    10. '(`' → logprob: -13.701014518737793

Token 19: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08364254236221313
    2. '+' → logprob: -2.7086424827575684
    3. ' ,' → logprob: -4.458642482757568
    4. ' +' → logprob: -6.833642482757568
    5. ',h' → logprob: -7.833642482757568
    6. '):' → logprob: -8.958642959594727
    7. ',H' → logprob: -9.333642959594727
    8. ',A' → logprob: -9.958642959594727
    9. ',+' → logprob: -10.333642959594727
    10. ' ' → logprob: -10.333642959594727

Token 20: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04224856197834015
    2. '):' → logprob: -4.042248725891113
    3. ',' → logprob: -4.167248725891113
    4. ' +' → logprob: -4.917248725891113
    5. ' ,' → logprob: -7.917248725891113
    6. ' ):' → logprob: -8.167248725891113
    7. '):
' → logprob: -9.042248725891113
    8. ',+' → logprob: -9.292248725891113
    9. ')' → logprob: -9.667248725891113
    10. ' ' → logprob: -10.792248725891113

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003819332632701844
    2. ' ' → logprob: -7.875381946563721
    3. '```' → logprob: -14.125381469726562
    4. ',' → logprob: -15.250381469726562
    5. ')' → logprob: -15.250381469726562
    6. '   ' → logprob: -15.875381469726562
    7. '  ' → logprob: -15.875381469726562
    8. '2' → logprob: -16.125381469726562
    9. '(' → logprob: -16.875381469726562
    10. 'h' → logprob: -17.375381469726562

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017881950363516808
    2. ')' → logprob: -4.267881870269775
    3. ':' → logprob: -5.642881870269775
    4. '):
' → logprob: -9.517882347106934
    5. ' ):' → logprob: -9.767882347106934
    6. ',' → logprob: -10.892882347106934
    7. '+' → logprob: -11.642882347106934
    8. ':)' → logprob: -12.892882347106934
    9. ' ' → logprob: -13.517882347106934
    10. ' :' → logprob: -14.017882347106934

Token 23: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9888302087783813
    2. '   ' → logprob: -1.4888302087783813
    3. '<|end|>' → logprob: -1.4888302087783813
    4. ' 
' → logprob: -2.238830089569092
    5. '```' → logprob: -4.113830089569092
    6. ' if' → logprob: -4.113830089569092
    7. '    ' → logprob: -4.238830089569092
    8. '    
' → logprob: -5.488830089569092
    9. '\' → logprob: -5.863830089569092
    10. '  
' → logprob: -6.113830089569092

Token 24: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.199013590812683
    2. 'if' (adapté à ' if') → logprob: -1.574013590812683
    3. ' h' → logprob: -1.699013590812683
    4. ' str' → logprob: -2.6990137100219727
    5. ' ' → logprob: -2.8240137100219727
    6. 'str' → logprob: -3.1990137100219727
    7. '   ' → logprob: -3.4490137100219727
    8. ' H' → logprob: -3.4490137100219727
    9. 'h' → logprob: -4.074013710021973
    10. ''' → logprob: -4.199013710021973

Token 25: ' H' (ID: 487)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.349772185087204
    2. 'h' → logprob: -1.7247722148895264
    3. ' H' → logprob: -2.4747722148895264
    4. 'H' → logprob: -3.5997722148895264
    5. ' (' → logprob: -6.099771976470947
    6. '(' → logprob: -7.099771976470947
    7. ' str' → logprob: -7.349771976470947
    8. ' ' → logprob: -7.724771976470947
    9. ''' → logprob: -8.599772453308105
    10. '(h' → logprob: -8.599772453308105

Token 26: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.025685390457510948
    2. ' %' → logprob: -3.7756853103637695
    3. '>=' → logprob: -6.5256853103637695
    4. '>' → logprob: -7.7756853103637695
    5. '==' → logprob: -8.40068531036377
    6. '%i' → logprob: -9.02568531036377
    7. '%e' → logprob: -9.90068531036377
    8. ' >=' → logprob: -10.40068531036377
    9. '<=' → logprob: -10.40068531036377
    10. '-' → logprob: -11.27568531036377

Token 27: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -2.47495681833243e-05
    2. '2' → logprob: -11.125024795532227
    3. '10' → logprob: -13.000024795532227
    4. ' h' → logprob: -13.250024795532227
    5. '100' → logprob: -13.625024795532227
    6. '(h' → logprob: -14.000024795532227
    7. '3' → logprob: -14.250024795532227
    8. '(' → logprob: -14.500024795532227
    9. '4' → logprob: -15.000024795532227
    10. '7' → logprob: -15.000024795532227

Token 28: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04319854825735092
    2. ' ==' → logprob: -3.168198585510254
    3. '!=' → logprob: -8.793198585510254
    4. '=' → logprob: -10.543198585510254
    5. ' !=' → logprob: -12.293198585510254
    6. ':' → logprob: -12.293198585510254
    7. '===' → logprob: -12.418198585510254
    8. ')==' → logprob: -12.918198585510254
    9. ' ' → logprob: -13.418198585510254
    10. ')' → logprob: -13.668198585510254

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '1' → logprob: -17.750123977661133
    4. '۰' → logprob: -18.562623977661133
    5. '=' → logprob: -18.875123977661133
    6. '```' → logprob: -19.312623977661133
    7. '０' → logprob: -19.500123977661133
    8. '==' → logprob: -19.812623977661133
    9. '०' → logprob: -20.125123977661133
    10. '  ' → logprob: -20.250123977661133

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.1054253011243418e-05
    2. ':
' → logprob: -11.750020980834961
    3. ' :' → logprob: -11.750020980834961
    4. '):' → logprob: -12.875020980834961
    5. ' and' → logprob: -14.125020980834961
    6. ':**' → logprob: -14.375020980834961
    7. ':return' → logprob: -15.250020980834961
    8. '   ' → logprob: -15.250020980834961
    9. 'and' → logprob: -15.750020980834961
    10. '>:' → logprob: -16.00002098083496

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03016037680208683
    2. 'count' → logprob: -3.780160427093506
    3. '   ' → logprob: -5.405160427093506
    4. ' count' → logprob: -6.405160427093506
    5. '\n' → logprob: -8.530159950256348
    6. '
' → logprob: -8.655159950256348
    7. '	count' → logprob: -9.155159950256348
    8. '```' → logprob: -9.780159950256348
    9. '     ' → logprob: -10.405159950256348
    10. '<|end|>' → logprob: -10.780159950256348

Token 32: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.04620887339115143
    2. ' count' → logprob: -3.4212088584899902
    3. '       ' → logprob: -4.79620885848999
    4. '   ' → logprob: -5.54620885848999
    5. '	count' → logprob: -8.421209335327148
    6. '
' → logprob: -10.546209335327148
    7. ' ' → logprob: -10.921209335327148
    8. '```' → logprob: -11.171209335327148
    9. 'counter' → logprob: -11.671209335327148
    10. '    ' → logprob: -11.921209335327148

Token 33: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004004553891718388
    2. ' +=' → logprob: -5.75400447845459
    3. '+' → logprob: -7.25400447845459
    4. '=' → logprob: -9.50400447845459
    5. ']+=' → logprob: -10.50400447845459
    6. '+=(' → logprob: -12.12900447845459
    7. '+='' → logprob: -12.12900447845459
    8. '+="' → logprob: -12.25400447845459
    9. '==' → logprob: -14.50400447845459
    10. '<|end|>' → logprob: -14.87900447845459

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.0033853515051305e-05
    2. ' ' → logprob: -10.125060081481934
    3. 'h' → logprob: -10.875060081481934
    4. 'H' → logprob: -14.250060081481934
    5. ' h' → logprob: -16.000059127807617
    6. '0' → logprob: -16.875059127807617
    7. '2' → logprob: -17.250059127807617
    8. '   ' → logprob: -17.687559127807617
    9. '１' → logprob: -18.437559127807617
    10. ' H' → logprob: -18.500059127807617

Token 35: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.7755875129951164e-05
    2. ' print' → logprob: -11.00004768371582
    3. '```' → logprob: -11.12504768371582
    4. 'if' → logprob: -11.62504768371582
    5. '<|end|>' → logprob: -12.12504768371582
    6. ')' → logprob: -13.87504768371582
    7. '   ' → logprob: -15.87504768371582
    8. '``' → logprob: -16.00004768371582
    9. '\' → logprob: -16.00004768371582
    10. '#print' → logprob: -16.37504768371582

Token 37: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.10021809488534927
    2. '(' → logprob: -2.3502180576324463
    3. '()' → logprob: -12.225217819213867
    4. 'count' → logprob: -12.600217819213867
    5. ' (' → logprob: -14.100217819213867
    6. '((' → logprob: -14.350217819213867
    7. '(sum' → logprob: -15.225217819213867
    8. '(c' → logprob: -15.225217819213867
    9. '('' → logprob: -15.350217819213867
    10. '(cnt' → logprob: -15.475217819213867

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.125
    3. '))' → logprob: -17.875
    4. ')`' → logprob: -18.5
    5. '`)' → logprob: -19.125
    6. ')
' → logprob: -19.25
    7. '）' → logprob: -19.25
    8. '')' → logprob: -19.875
    9. '#' → logprob: -20.75
    10. ')#' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 36
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 28
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 52.78%
Précision (top 10): 77.78%
================================================================================
