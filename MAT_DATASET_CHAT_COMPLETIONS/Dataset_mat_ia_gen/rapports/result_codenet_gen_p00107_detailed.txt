================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:30:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Programme pour déterminer si Jerry peut passer le fromage à travers chaque trou

import math

def can_pass_through(R, A, B, C):
    """
    Détermine si la pièce de fromage de dimensions A x B x C peut passer
    à travers un trou circulaire de rayon R sans toucher.
    
    On considère que le fromage peut être orienté dans n'importe quelle direction.
    Pour cela, on calcule la plus petite diagonale possible de la pièce (à travers
    une quelconque face ou orientation).
    
    La condition est que le diamètre de la section transversale minimale du
    parallélépipède puisse passer dans le trou.
    
    Mathematiquement, pour un parallélépipède rectangle, l'encombrement minimal
    que l'on doit faire passer dans le trou est la plus petite diagonale parmi les
    projections possibles, mais pour simplifier, on utilise la diagonale de la plus
    petite face (côté à côté), car le trou est circulaire.
    
    En fait, ici, puisqu'on peut orienter le fromage dans n'importe quel angle,
    le rayon minimal nécessaire est la moitié de la diagonale de l'arête la plus
    longue possible projetée.
    
    Néanmoins, la solution la plus simple est :
    - Calculer la plus grande longueur diagonale du parallélépipède : d = sqrt(A**2 + B**2 + C**2)
    - Pour passer complètement par un trou circulaire, il faut que le diamètre maximal soit inférieur à 2*R
    - Or, le plus grand diamètre à faire passer est la plus grande diagonale du parallélépipède.
    - Mais le problème précise qu'on considère uniquement le passage par rotation, donc on peut choisir l'orientation comme on veut.
    
    On doit donc trouver le diamètre minimal du plus petit cercle capable de faire passer le parallélépipède.
    
    Le problème est de trouver la section la plus petite maximale du fromage à toute orientation (place la pièce pour minimiser la section transversale).
    
    Finalement, on peut s'en tenir a la méthode mentionnée dans d'autres sources similaires:
    - On calcule la diagonale de la face la plus grande (car il est plus simple pour passer à plat)
    - Et on compare la diagonale de la face min entre (A,B), (B,C), (A,C) aux rayons.
    
    En résumé, le critère retenu dans ce type de problème est :
    Le fromage peut passer si 2*R >= min des diagonales des faces (min diagonal)
    
    C'est à dire, s'il existe une orientation dans laquelle il passe, alors il passe.
    
    On calcule les diagonales des trois faces et on prend la plus courte.
    Si le diamètre du trou (2*R) est au moins égal à cette diagonale minimale, alors OK.
    
    Sinon, NA.
    """
    # Calcul des diagonales des faces (2D)
    d1 = math.sqrt(A**2 + B**2)
    d2 = math.sqrt(B**2 + C**2)
    d3 = math.sqrt(A**2 + C**2)
    
    min_diag = min(d1, d2, d3)
    diameter = 2*R
    
    return diameter >= min_diag

def main():
    while True:
        # Lecture des dimensions A, B, C
        line = input().strip()
        if line == "":
            continue
        A, B, C = map(int, line.split())
        
        # Condition de fin
        if A == 0 and B == 0 and C == 0:
            break
        
        n = int(input().strip())  # nombre de trous
        radii = []
        for _ in range(n):
            R = int(input().strip())
            radii.append(R)
        
        # Pour chaque trou, évaluer si le fromage peut passer
        for R in radii:
            if can_pass_through(R, A, B, C):
                print("OK")
            else:
                print("NA")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Programme' (ID: 50667)
  → Token d'amorce (pas de prédiction)

Token 2: ' pour' (ID: 1930)
  → Token d'amorce (pas de prédiction)

Token 3: ' déterminer' (ID: 122024)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.14480330049991608
    2. ' afficher' → logprob: -2.894803285598755
    3. 'calcul' → logprob: -3.519803285598755
    4. ' l' → logprob: -4.769803524017334
    5. ' le' → logprob: -4.769803524017334
    6. ' compter' → logprob: -4.769803524017334
    7. ' tr' → logprob: -5.644803524017334
    8. ' convertir' → logprob: -5.894803524017334
    9. ' la' → logprob: -6.144803524017334
    10. ' analyser' → logprob: -6.144803524017334

Token 4: ' si' (ID: 1784)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.7285526394844055
    2. ' ' → logprob: -0.8535526394844055
    3. ' la' → logprob: -2.8535525798797607
    4. ' l' → logprob: -4.10355281829834
    5. ' si' → logprob: -5.10355281829834
    6. 's' → logprob: -5.72855281829834
    7. 'le' → logprob: -6.10355281829834
    8. ' s' → logprob: -6.97855281829834
    9. '_' → logprob: -7.22855281829834
    10. ' ' → logprob: -7.22855281829834

Token 5: ' Jerry' (ID: 48906)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2722809314727783
    2. ' un' → logprob: -3.0222809314727783
    3. 'le' → logprob: -3.3972809314727783
    4. 'une' → logprob: -3.5222809314727783
    5. ' le' → logprob: -3.7722809314727783
    6. 'l' → logprob: -4.022280693054199
    7. 'un' → logprob: -4.022280693054199
    8. ' une' → logprob: -4.522280693054199
    9. '#' → logprob: -4.647280693054199
    10. ''' → logprob: -4.772280693054199

Token 6: ' peut' (ID: 9216)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.2749280035495758
    2. ' ' → logprob: -1.6499279737472534
    3. 'est' → logprob: -4.149928092956543
    4. ' a' → logprob: -5.024928092956543
    5. ' s' → logprob: -5.649928092956543
    6. '```' → logprob: -5.774928092956543
    7. ' va' → logprob: -6.149928092956543
    8. ' peut' → logprob: -6.274928092956543
    9. ' Mouse' → logprob: -6.274928092956543
    10. ' is' → logprob: -6.524928092956543

Token 7: ' passer' (ID: 27727)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attr' → logprob: -1.7886251211166382
    2. 's' → logprob: -2.0386252403259277
    3. ' aller' → logprob: -2.1636252403259277
    4. ' sortir' → logprob: -2.7886252403259277
    5. ' passer' → logprob: -3.2886252403259277
    6. 'aller' → logprob: -3.2886252403259277
    7. ' rentrer' → logprob: -3.4136252403259277
    8. ' attr' → logprob: -3.4136252403259277
    9. 'contin' → logprob: -3.7886252403259277
    10. 'm' → logprob: -4.038625240325928

Token 8: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12820963561534882
    2. '.' → logprob: -3.6282095909118652
    3. ' :' → logprob: -3.6282095909118652
    4. ':' → logprob: -4.128209590911865
    5. ''' → logprob: -4.503209590911865
    6. '#' → logprob: -4.628209590911865
    7. ',' → logprob: -5.003209590911865
    8. '```' → logprob: -5.003209590911865
    9. ' ,' → logprob: -5.628209590911865
    10. '_' → logprob: -5.878209590911865

Token 9: ' fromage' (ID: 167520)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.048646330833435
    2. 'mur' → logprob: -1.798646330833435
    3. 'pont' → logprob: -2.2986464500427246
    4. '#' → logprob: -3.0486464500427246
    5. ' pont' → logprob: -3.0486464500427246
    6. ' passage' → logprob: -3.4236464500427246
    7. 'pass' → logprob: -3.4236464500427246
    8. '```' → logprob: -3.6736464500427246
    9. 'r' → logprob: -3.7986464500427246
    10. 't' → logprob: -3.9236464500427246

Token 10: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2682687044143677
    2. ':' → logprob: -1.2682687044143677
    3. '#' → logprob: -1.5182687044143677
    4. ' ' → logprob: -2.893268585205078
    5. ',' → logprob: -3.268268585205078
    6. '_' → logprob: -3.393268585205078
    7. ''' → logprob: -3.893268585205078
    8. 'def' → logprob: -4.393268585205078
    9. '```' → logprob: -4.768268585205078
    10. '\' → logprob: -4.893268585205078

Token 11: ' travers' (ID: 26957)
  Prédit: 'Tom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tom' → logprob: -0.1842639297246933
    2. ' Tom' → logprob: -2.1842639446258545
    3. '#' → logprob: -3.3092639446258545
    4. ' ' → logprob: -5.809263706207275
    5. 'l' → logprob: -6.059263706207275
    6. 'la' → logprob: -6.309263706207275
    7. 'tom' → logprob: -6.434263706207275
    8. ' son' → logprob: -6.559263706207275
    9. '```' → logprob: -6.809263706207275
    10. ' #' → logprob: -6.934263706207275

Token 12: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23257781565189362
    2. 'le' → logprob: -2.2325778007507324
    3. ' le' → logprob: -3.4825778007507324
    4. 'l' → logprob: -4.607577800750732
    5. '```' → logprob: -4.607577800750732
    6. ' l' → logprob: -4.732577800750732
    7. '_' → logprob: -4.857577800750732
    8. '.' → logprob: -5.357577800750732
    9. ' la' → logprob: -5.482577800750732
    10. ''' → logprob: -5.482577800750732

Token 13: ' trou' (ID: 18706)
  Prédit: ' obstacle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obstacle' → logprob: -1.1114450693130493
    2. ' ' → logprob: -1.6114450693130493
    3. ' passage' → logprob: -2.1114449501037598
    4. ' trou' → logprob: -2.3614449501037598
    5. ' ma' → logprob: -2.9864449501037598
    6. '```' → logprob: -3.3614449501037598
    7. ' espace' → logprob: -3.9864449501037598
    8. ' mur' → logprob: -4.23644495010376
    9. ' ```' → logprob: -4.61144495010376
    10. ' morceau' → logprob: -4.61144495010376

Token 14: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6798563003540039
    2. ':' → logprob: -0.9298563003540039
    3. ' :' → logprob: -3.304856300354004
    4. '#' → logprob: -3.804856300354004
    5. ' ' → logprob: -3.929856300354004
    6. ',' → logprob: -4.929856300354004
    7. ''' → logprob: -5.179856300354004
    8. 's' → logprob: -6.304856300354004
    9. '```' → logprob: -7.179856300354004
    10. '_' → logprob: -7.304856300354004

Token 15: 'import' (ID: 561)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0888999700546265
    2. ' :' → logprob: -1.3388999700546265
    3. ' ' → logprob: -1.3388999700546265
    4. '.' → logprob: -2.963900089263916
    5. '#' → logprob: -3.213900089263916
    6. ''' → logprob: -4.338900089263916
    7. ',' → logprob: -4.838900089263916
    8. ' #' → logprob: -4.963900089263916
    9. '\' → logprob: -5.713900089263916
    10. '_' → logprob: -5.963900089263916

Token 16: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.2173297256231308
    2. ' random' → logprob: -1.967329740524292
    3. ' numpy' → logprob: -3.217329740524292
    4. ' cheese' → logprob: -5.092329502105713
    5. ' turtle' → logprob: -6.217329502105713
    6. ' itertools' → logprob: -6.217329502105713
    7. ' os' → logprob: -6.342329502105713
    8. ' sys' → logprob: -6.967329502105713
    9. ' socket' → logprob: -7.217329502105713
    10. ' tkinter' → logprob: -7.342329502105713

Token 17: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5986313819885254
    2. '.' → logprob: -1.9736313819885254
    3. '

' → logprob: -2.2236313819885254
    4. '\' → logprob: -2.4736313819885254
    5. ' 

' → logprob: -2.9736313819885254
    6. '' → logprob: -3.8486313819885254
    7. 'def' → logprob: -4.723631381988525
    8. ' 
' → logprob: -4.848631381988525
    9. '#' → logprob: -4.973631381988525
    10. '```' → logprob: -5.473631381988525

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0057888394221663475
    2. 'de' → logprob: -6.255788803100586
    3. '#' → logprob: -7.005788803100586
    4. '\' → logprob: -7.005788803100586
    5. 'd' → logprob: -7.005788803100586
    6. '```' → logprob: -7.255788803100586
    7. 's' → logprob: -8.755788803100586
    8. '\n' → logprob: -9.505788803100586
    9. 'import' → logprob: -9.880788803100586
    10. ' def' → logprob: -10.255788803100586

Token 19: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.4828542470932007
    2. ' peux' → logprob: -1.6078542470932007
    3. ' peut' → logprob: -1.7328542470932007
    4. ' pouvoir' → logprob: -2.1078543663024902
    5. ' calcul' → logprob: -2.4828543663024902
    6. '_' → logprob: -2.9828543663024902
    7. ' passer' → logprob: -3.4828543663024902
    8. ' passage' → logprob: -3.8578543663024902
    9. ' est' → logprob: -4.35785436630249
    10. ' pass' → logprob: -4.73285436630249

Token 20: '_pass' (ID: 36293)
  Prédit: '_pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pass' → logprob: -0.09351540356874466
    2. '_p' → logprob: -2.718515396118164
    3. '_' → logprob: -3.843515396118164
    4. '_pas' → logprob: -6.843515396118164
    5. ' _' → logprob: -8.593515396118164
    6. '_continue' → logprob: -8.968515396118164
    7. '_jump' → logprob: -9.218515396118164
    8. '_P' → logprob: -9.343515396118164
    9. '_cut' → logprob: -10.718515396118164
    10. 'Pass' → logprob: -10.718515396118164

Token 21: '_th' (ID: 16038)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4408363997936249
    2. '_' → logprob: -1.0658364295959473
    3. '_che' → logprob: -5.190836429595947
    4. ' (' → logprob: -6.940836429595947
    5. '_(' → logprob: -7.065836429595947
    6. '_pass' → logprob: -7.065836429595947
    7. '_space' → logprob: -7.065836429595947
    8. '_p' → logprob: -7.815836429595947
    9. '_the' → logprob: -8.065835952758789
    10. ' ' → logprob: -8.190835952758789

Token 22: 'rough' (ID: 1712)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2563709318637848
    2. 'rough' → logprob: -1.5063709020614624
    3. 'ro' → logprob: -6.756371021270752
    4. '(e' → logprob: -6.881371021270752
    5. '_' → logprob: -7.256371021270752
    6. 'r' → logprob: -7.256371021270752
    7. '_e' → logprob: -8.131370544433594
    8. 're' → logprob: -9.131370544433594
    9. 'rou' → logprob: -9.131370544433594
    10. '```' → logprob: -10.006370544433594

Token 23: '(R' (ID: 4092)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04861347749829292
    2. ' (' → logprob: -4.048613548278809
    3. '(h' → logprob: -4.173613548278809
    4. '_' → logprob: -5.423613548278809
    5. '(t' → logprob: -5.923613548278809
    6. '_h' → logprob: -6.298613548278809
    7. '(tr' → logprob: -6.423613548278809
    8. '_t' → logprob: -7.298613548278809
    9. '_the' → logprob: -7.548613548278809
    10. '(radius' → logprob: -7.673613548278809

Token 24: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08377180993556976
    2. ',' → logprob: -2.8337717056274414
    3. ')' → logprob: -4.833771705627441
    4. 'o' → logprob: -5.833771705627441
    5. ' ):' → logprob: -6.333771705627441
    6. '_r' → logprob: -6.583771705627441
    7. 'adius' → logprob: -6.958771705627441
    8. ':' → logprob: -7.083771705627441
    9. '_' → logprob: -7.333771705627441
    10. 'a' → logprob: -7.583771705627441

Token 25: ' A' (ID: 355)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.6406993865966797
    2. 'r' → logprob: -0.7656993865966797
    3. ' hole' → logprob: -6.14069938659668
    4. ' h' → logprob: -6.64069938659668
    5. ' ' → logprob: -7.32819938659668
    6. 'h' → logprob: -7.39069938659668
    7. 'hole' → logprob: -7.51569938659668
    8. ' d' → logprob: -7.70319938659668
    9. ' holes' → logprob: -7.82819938659668
    10. '	r' → logprob: -8.01569938659668

Token 26: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.040348947048187256
    2. 'ng' → logprob: -3.790349006652832
    3. ',' → logprob: -5.165349006652832
    4. ')):' → logprob: -5.540349006652832
    5. ')' → logprob: -6.165349006652832
    6. 'r' → logprob: -6.415349006652832
    7. '):
' → logprob: -6.790349006652832
    8. ' ):' → logprob: -7.165349006652832
    9. '_r' → logprob: -8.415349006652832
    10. '):

' → logprob: -8.415349006652832

Token 27: ' B' (ID: 418)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.35299956798553467
    2. 'r' → logprob: -1.8529995679855347
    3. ' B' → logprob: -2.852999687194824
    4. ' d' → logprob: -4.477999687194824
    5. 'B' → logprob: -4.602999687194824
    6. ' a' → logprob: -4.602999687194824
    7. ' h' → logprob: -4.852999687194824
    8. ' theta' → logprob: -5.102999687194824
    9. 'a' → logprob: -5.665499687194824
    10. 'theta' → logprob: -5.727999687194824

Token 28: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0707816481590271
    2. ',' → logprob: -3.320781707763672
    3. ')' → logprob: -3.445781707763672
    4. ' ):' → logprob: -8.195781707763672
    5. '):
' → logprob: -10.570781707763672
    6. ' )' → logprob: -11.820781707763672
    7. ' ,' → logprob: -12.320781707763672
    8. ':' → logprob: -12.945781707763672
    9. ' ' → logprob: -12.945781707763672
    10. '),' → logprob: -13.320781707763672

Token 29: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.5077167749404907
    2. ' r' → logprob: -1.6327167749404907
    3. 'C' → logprob: -3.132716655731201
    4. 'r' → logprob: -3.632716655731201
    5. ' H' → logprob: -3.820216655731201
    6. ' h' → logprob: -4.070216655731201
    7. ' x' → logprob: -4.570216655731201
    8. ' R' → logprob: -4.757716655731201
    9. ' d' → logprob: -4.820216655731201
    10. ' T' → logprob: -5.070216655731201

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029825346544384956
    2. ')' → logprob: -3.529825448989868
    3. ',' → logprob: -9.779825210571289
    4. ' ):' → logprob: -11.154825210571289
    5. '):
' → logprob: -13.279825210571289
    6. '),' → logprob: -14.529825210571289
    7. ')：' → logprob: -14.904825210571289
    8. ':' → logprob: -15.154825210571289
    9. ' ' → logprob: -15.654825210571289
    10. ')):' → logprob: -15.779825210571289

Token 31: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05751335993409157
    2. '   ' → logprob: -3.557513475418091
    3. '):' → logprob: -4.432513236999512
    4. ' :' → logprob: -4.807513236999512
    5. ':
' → logprob: -5.682513236999512
    6. '    ' → logprob: -7.182513236999512
    7. ' ' → logprob: -7.182513236999512
    8. ')' → logprob: -7.432513236999512
    9. '):
' → logprob: -8.307513236999512
    10. ' :
' → logprob: -8.307513236999512

Token 32: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9471931457519531
    2. ' radius' → logprob: -1.5721931457519531
    3. '    ' → logprob: -2.197193145751953
    4. ' 
' → logprob: -2.572193145751953
    5. '     
' → logprob: -3.072193145751953
    6. 'radius' → logprob: -3.447193145751953
    7. ')' → logprob: -3.822193145751953
    8. '
' → logprob: -4.197193145751953
    9. ':' → logprob: -4.322193145751953
    10. ' return' → logprob: -4.447193145751953

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.59312105178833
    2. '    ' → logprob: -1.84312105178833
    3. ' """' → logprob: -2.34312105178833
    4. ' """
' → logprob: -2.59312105178833
    5. ' radius' → logprob: -2.71812105178833
    6. '"""' → logprob: -2.71812105178833
    7. ' return' → logprob: -3.46812105178833
    8. '"' → logprob: -3.59312105178833
    9. 'r' → logprob: -3.59312105178833
    10. '"""
' → logprob: -4.15562105178833

Token 34: ' Dé' (ID: 27247)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8681083917617798
    2. 'Calcul' → logprob: -1.1181083917617798
    3. ' Calcul' → logprob: -3.6181082725524902
    4. ' Cal' → logprob: -3.6181082725524902
    5. 'Calculate' → logprob: -3.7431082725524902
    6. ' Calculates' → logprob: -3.7431082725524902
    7. '"""' → logprob: -3.7431082725524902
    8. ' """' → logprob: -3.9931082725524902
    9. 'Cal' → logprob: -4.11810827255249
    10. ' La' → logprob: -4.24310827255249

Token 35: 'term' (ID: 8044)
  Prédit: 'term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.00213788659311831
    2. 'termin' → logprob: -7.127137660980225
    3. 'tect' → logprob: -7.377137660980225
    4. ' termine' → logprob: -8.002138137817383
    5. 'f' → logprob: -8.502138137817383
    6. 'ter' → logprob: -9.627138137817383
    7. 't' → logprob: -11.002138137817383
    8. '
' → logprob: -11.627138137817383
    9. 'terminate' → logprob: -11.752138137817383
    10. '

' → logprob: -11.877138137817383

Token 36: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.026398295536637306
    2. 'iner' → logprob: -3.651398181915283
    3. 'inez' → logprob: -10.651398658752441
    4. 'i' → logprob: -11.026398658752441
    5. 'iné' → logprob: -11.401398658752441
    6. ' ine' → logprob: -11.776398658752441
    7. 'in' → logprob: -12.151398658752441
    8. '   ' → logprob: -12.401398658752441
    9. '-' → logprob: -12.901398658752441
    10. '

' → logprob: -13.026398658752441

Token 37: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.02129184640944004
    2. ' if' → logprob: -4.146291732788086
    3. ' ' → logprob: -6.396291732788086
    4. '   ' → logprob: -6.396291732788086
    5. 'si' → logprob: -6.521291732788086
    6. '  ' → logprob: -9.146291732788086
    7. 'if' → logprob: -9.146291732788086
    8. ' la' → logprob: -9.646291732788086
    9. '```' → logprob: -9.896291732788086
    10. '    ' → logprob: -10.146291732788086

Token 38: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5631446838378906
    2. ' Jerry' → logprob: -1.1881446838378906
    3. ' la' → logprob: -3.5631446838378906
    4. ' j' → logprob: -3.8131446838378906
    5. ' une' → logprob: -3.9381446838378906
    6. ' un' → logprob: -4.063144683837891
    7. 'Jerry' → logprob: -4.688144683837891
    8. 'le' → logprob: -5.063144683837891
    9. ' on' → logprob: -5.563144683837891
    10. ' fromage' → logprob: -5.813144683837891

Token 39: ' pièce' (ID: 56132)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.625580072402954
    2. ' from' → logprob: -1.625580072402954
    3. 'from' → logprob: -2.000580072402954
    4. ' fromage' → logprob: -2.625580072402954
    5. ' sph' → logprob: -2.750580072402954
    6. ' plus' → logprob: -2.875580072402954
    7. ' roue' → logprob: -3.000580072402954
    8. ' sphere' → logprob: -3.125580072402954
    9. ' souris' → logprob: -3.250580072402954
    10. ' boule' → logprob: -3.625580072402954

Token 40: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.31590405106544495
    2. 'de' → logprob: -2.190904140472412
    3. ' peut' → logprob: -2.190904140472412
    4. 'pe' → logprob: -3.940904140472412
    5. ' can' → logprob: -5.440904140472412
    6. 'from' → logprob: -5.690904140472412
    7. '```' → logprob: -5.815904140472412
    8. 'can' → logprob: -6.440904140472412
    9. ' R' → logprob: -6.815904140472412
    10. 'che' → logprob: -6.940904140472412

Token 41: ' fromage' (ID: 167520)
  Prédit: ' fromage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fromage' → logprob: -0.12413899600505829
    2. 'from' → logprob: -2.7491390705108643
    3. ' from' → logprob: -2.9991390705108643
    4. '```' → logprob: -7.624138832092285
    5. '   ' → logprob: -7.999138832092285
    6. ' ' → logprob: -8.249138832092285
    7. ' cheese' → logprob: -8.249138832092285
    8. ' monnaie' → logprob: -8.499138832092285
    9. 's' → logprob: -8.561638832092285
    10. '#' → logprob: -8.999138832092285

Token 42: ' de' (ID: 334)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.10841940343379974
    2. 'pe' → logprob: -2.358419418334961
    3. ' passe' → logprob: -6.233419418334961
    4. 'pass' → logprob: -6.608419418334961
    5. ' can' → logprob: -6.733419418334961
    6. 'p' → logprob: -6.733419418334961
    7. ' peux' → logprob: -7.483419418334961
    8. 'can' → logprob: -7.608419418334961
    9. ' ' → logprob: -8.608419418334961
    10. ' pourra' → logprob: -9.108419418334961

Token 43: ' dimensions' (ID: 23995)
  Prédit: ' rayon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rayon' → logprob: -0.21052037179470062
    2. ' radius' → logprob: -2.3355202674865723
    3. ' diamètre' → logprob: -3.2105202674865723
    4. 'ray' → logprob: -4.585520267486572
    5. ' ray' → logprob: -4.710520267486572
    6. 'radius' → logprob: -4.835520267486572
    7. ' ' → logprob: -5.085520267486572
    8. ' fromage' → logprob: -5.710520267486572
    9. 'diam' → logprob: -5.835520267486572
    10. ' dimensions' → logprob: -5.835520267486572

Token 44: ' A' (ID: 355)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4708706736564636
    2. ' ' → logprob: -1.2208707332611084
    3. ' R' → logprob: -2.7208707332611084
    4. ' A' → logprob: -5.595870494842529
    5. '(R' → logprob: -6.970870494842529
    6. 'f' → logprob: -7.095870494842529
    7. ' donnée' → logprob: -7.095870494842529
    8. '```' → logprob: -7.220870494842529
    9. '  ' → logprob: -7.345870494842529
    10. ' `' → logprob: -7.470870494842529

Token 45: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017534349113702774
    2. ' ,' → logprob: -4.142534255981445
    3. ' x' → logprob: -7.017534255981445
    4. 'x' → logprob: -7.892534255981445
    5. ' ' → logprob: -9.017534255981445
    6. '×' → logprob: -10.642534255981445
    7. ')' → logprob: -10.767534255981445
    8. '+' → logprob: -11.017534255981445
    9. ' ×' → logprob: -12.017534255981445
    10. '*' → logprob: -12.142534255981445

Token 46: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.7957277894020081
    2. 'B' → logprob: -1.2957277297973633
    3. ' ' → logprob: -1.2957277297973633
    4. ' C' → logprob: -7.795727729797363
    5. 'C' → logprob: -7.920727729797363
    6. '  ' → logprob: -8.795727729797363
    7. ' ' → logprob: -9.045727729797363
    8. ' ,' → logprob: -9.858227729797363
    9. ' espace' → logprob: -10.108227729797363
    10. 'space' → logprob: -10.545727729797363

Token 47: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04143526405096054
    2. 'x' → logprob: -3.2914352416992188
    3. ' ' → logprob: -6.166435241699219
    4. ' peut' → logprob: -7.041435241699219
    5. ' et' → logprob: -8.916435241699219
    6. ')' → logprob: -9.291435241699219
    7. ' ou' → logprob: -10.791435241699219
    8. ' est' → logprob: -10.978935241699219
    9. ' par' → logprob: -11.166435241699219
    10. '*' → logprob: -11.291435241699219

Token 48: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.007882476784288883
    2. 'C' → logprob: -5.382882595062256
    3. ' ' → logprob: -5.757882595062256
    4. ' ' → logprob: -9.382882118225098
    5. '  ' → logprob: -12.757882118225098
    6. '<|end|>' → logprob: -13.132882118225098
    7. ')' → logprob: -13.570382118225098
    8. ' )' → logprob: -14.007882118225098
    9. ' `' → logprob: -14.257882118225098
    10. '	C' → logprob: -14.382882118225098

Token 49: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.022049175575375557
    2. 'pe' → logprob: -4.1470489501953125
    3. ')' → logprob: -6.6470489501953125
    4. ' passe' → logprob: -6.8970489501953125
    5. ' ' → logprob: -7.2720489501953125
    6. ' peux' → logprob: -7.2720489501953125
    7. ' )' → logprob: -7.5220489501953125
    8. '   ' → logprob: -8.397048950195312
    9. 'p' → logprob: -8.397048950195312
    10. ' Peut' → logprob: -8.772048950195312

Token 50: ' passer' (ID: 27727)
  Prédit: ' passer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passer' → logprob: -0.7612969279289246
    2. 'pass' → logprob: -1.0112969875335693
    3. ' pass' → logprob: -1.8862969875335693
    4. ' passes' → logprob: -5.38629674911499
    5. '_pass' → logprob: -5.63629674911499
    6. ' ' → logprob: -6.38629674911499
    7. ' passe' → logprob: -6.51129674911499
    8. 'p' → logprob: -6.76129674911499
    9. ' passar' → logprob: -6.76129674911499
    10. ' rentrer' → logprob: -6.88629674911499

Token 51: '
' (ID: 198)
  Prédit: ' through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' through' → logprob: -0.6524508595466614
    2. ' à' → logprob: -1.2774507999420166
    3. ' ' → logprob: -1.7774507999420166
    4. ' au' → logprob: -4.527451038360596
    5. ' par' → logprob: -4.652451038360596
    6. '<|end|>' → logprob: -5.652451038360596
    7. 'through' → logprob: -5.777451038360596
    8. '  ' → logprob: -7.027451038360596
    9. ' через' → logprob: -7.527451038360596
    10. ' dans' → logprob: -7.777451038360596

Token 52: '   ' (ID: 271)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5979169011116028
    2. ' par' → logprob: -0.9729169011116028
    3. ' through' → logprob: -3.097916841506958
    4. ' ' → logprob: -4.597917079925537
    5. ' dans' → logprob: -5.347917079925537
    6. 'à' → logprob: -5.722917079925537
    7. ' au' → logprob: -6.347917079925537
    8. 'dans' → logprob: -6.722917079925537
    9. 'through' → logprob: -6.972917079925537
    10. 'par' → logprob: -6.972917079925537

Token 53: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3523893356323242
    2. ' through' → logprob: -1.9773893356323242
    3. ' par' → logprob: -2.477389335632324
    4. ' ' → logprob: -3.352389335632324
    5. 'à' (adapté à ' à') → logprob: -4.977389335632324
    6. ' dans' → logprob: -5.227389335632324
    7. ')' → logprob: -5.477389335632324
    8. ' ' → logprob: -5.852389335632324
    9. ' au' → logprob: -5.852389335632324
    10. 'through' → logprob: -5.852389335632324

Token 54: ' travers' (ID: 26957)
  Prédit: ' travers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' travers' → logprob: -0.010362817905843258
    2. 'tr' → logprob: -5.51036262512207
    3. ' un' → logprob: -5.76036262512207
    4. ' trav' → logprob: -7.76036262512207
    5. ' l' → logprob: -7.88536262512207
    6. ' traversal' → logprob: -7.88536262512207
    7. ' ' → logprob: -8.13536262512207
    8. 't' → logprob: -8.38536262512207
    9. '```' → logprob: -8.38536262512207
    10. 'u' → logprob: -8.76036262512207

Token 55: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.2915003001689911
    2. ' le' → logprob: -1.6665003299713135
    3. 'un' → logprob: -3.5415003299713135
    4. 'le' → logprob: -4.416500091552734
    5. ' l' → logprob: -4.791500091552734
    6. ' une' → logprob: -5.791500091552734
    7. ' ' → logprob: -5.916500091552734
    8. 'l' → logprob: -6.041500091552734
    9. 'n' → logprob: -7.041500091552734
    10. ' ' → logprob: -7.229000091552734

Token 56: ' trou' (ID: 18706)
  Prédit: ' trou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trou' → logprob: -0.038692656904459
    2. ' trous' → logprob: -4.413692474365234
    3. ' ' → logprob: -5.038692474365234
    4. ' hole' → logprob: -5.413692474365234
    5. ' cercle' → logprob: -5.913692474365234
    6. ' espace' → logprob: -6.538692474365234
    7. ' angle' → logprob: -6.788692474365234
    8. ' triangle' → logprob: -6.913692474365234
    9. ' diamètre' → logprob: -6.976192474365234
    10. 'e' → logprob: -7.351192474365234

Token 57: ' circul' (ID: 20568)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6898170709609985
    2. 'c' → logprob: -1.4398170709609985
    3. ' circul' → logprob: -2.064816951751709
    4. ' circular' → logprob: -3.064816951751709
    5. ' ' → logprob: -3.689816951751709
    6. 'cir' → logprob: -4.564816951751709
    7. ' rond' → logprob: -4.939816951751709
    8. ' sph' → logprob: -5.064816951751709
    9. ' cylind' → logprob: -5.314816951751709
    10. ' en' → logprob: -5.689816951751709

Token 58: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.0011955865193158388
    2. 'a' → logprob: -7.001195430755615
    3. 'air' → logprob: -9.126195907592773
    4. '   ' → logprob: -10.001195907592773
    5. '#' → logprob: -10.251195907592773
    6. '```' → logprob: -11.001195907592773
    7. 'are' → logprob: -11.376195907592773
    8. ' aire' → logprob: -11.376195907592773
    9. '`' → logprob: -11.626195907592773
    10. 'ire' → logprob: -12.501195907592773

Token 59: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.01388915628194809
    2. ' ' → logprob: -5.513889312744141
    3. 'de' → logprob: -5.638889312744141
    4. ' d' → logprob: -5.763889312744141
    5. ' of' → logprob: -6.388889312744141
    6. ' dont' → logprob: -7.763889312744141
    7. 'd' → logprob: -8.76388931274414
    8. 'dont' → logprob: -9.13888931274414
    9. '.' → logprob: -9.51388931274414
    10. ' avec' → logprob: -9.51388931274414

Token 60: ' rayon' (ID: 80967)
  Prédit: ' rayon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rayon' → logprob: -0.23904860019683838
    2. ' radius' → logprob: -2.864048480987549
    3. ' diamètre' → logprob: -2.989048480987549
    4. 'ray' → logprob: -3.114048480987549
    5. ' ' → logprob: -3.739048480987549
    6. 'diam' → logprob: -4.239048480987549
    7. 'radius' → logprob: -4.739048480987549
    8. '```' → logprob: -5.239048480987549
    9. ' ray' → logprob: -6.364048480987549
    10. '   ' → logprob: -6.739048480987549

Token 61: ' R' (ID: 460)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6330451369285583
    2. ' R' → logprob: -0.7580451369285583
    3. 'R' → logprob: -8.258045196533203
    4. ' r' → logprob: -10.258045196533203
    5. 'r' → logprob: -10.758045196533203
    6. ' )' → logprob: -11.008045196533203
    7. ' `' → logprob: -11.008045196533203
    8. '  ' → logprob: -11.508045196533203
    9. ')' → logprob: -11.633045196533203
    10. ' de' → logprob: -11.633045196533203

Token 62: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9406698942184448
    2. '.' → logprob: -1.0656698942184448
    3. ')' → logprob: -1.4406698942184448
    4. ').' → logprob: -4.690670013427734
    5. ' )' → logprob: -5.565670013427734
    6. ')
' → logprob: -5.940670013427734
    7. ' ' → logprob: -6.065670013427734
    8. '
' → logprob: -6.190670013427734
    9. ' en' → logprob: -6.690670013427734
    10. '.
' → logprob: -6.940670013427734

Token 63: ' toucher' (ID: 127487)
  Prédit: ' dépasser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dépasser' → logprob: -0.9761126041412354
    2. ' toucher' → logprob: -1.6011126041412354
    3. ' ' → logprob: -2.7261126041412354
    4. ' être' → logprob: -3.1011126041412354
    5. ' passer' → logprob: -3.4761126041412354
    6. ' se' → logprob: -3.6011126041412354
    7. 's' → logprob: -3.9761126041412354
    8. ' dé' → logprob: -4.226112365722656
    9. ' perdre' → logprob: -4.476112365722656
    10. ' le' → logprob: -4.476112365722656

Token 64: '.
' (ID: 558)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.6170196533203125
    2. '.' → logprob: -1.7420196533203125
    3. ' ' → logprob: -1.7420196533203125
    4. ' les' → logprob: -2.2420196533203125
    5. 'le' → logprob: -2.3670196533203125
    6. ' la' → logprob: -2.3670196533203125
    7. ' l' → logprob: -2.9920196533203125
    8. ' rien' → logprob: -3.6170196533203125
    9. ' aucun' → logprob: -3.7420196533203125
    10. ' aucune' → logprob: -3.9920196533203125

Token 65: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17457319796085358
    2. '"""' → logprob: -2.1745731830596924
    3. ' """' → logprob: -3.9245731830596924
    4. '    ' → logprob: -4.6745734214782715
    5. '\n' → logprob: -5.0495734214782715
    6. '"' → logprob: -5.7995734214782715
    7. ' """
' → logprob: -6.0495734214782715
    8. '
' → logprob: -7.1745734214782715
    9. '```' → logprob: -7.1745734214782715
    10. '""' → logprob: -7.2995734214782715

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05723477154970169
    2. '"""' → logprob: -3.307234764099121
    3. ' """' → logprob: -4.807234764099121
    4. '    ' → logprob: -4.807234764099121
    5. ' """
' → logprob: -7.307234764099121
    6. ' La' → logprob: -8.432234764099121
    7. 'La' → logprob: -8.432234764099121
    8. '"""
' → logprob: -8.557234764099121
    9. ')' → logprob: -8.682234764099121
    10. '"' → logprob: -8.932234764099121

Token 67: ' On' (ID: 2160)
  Prédit: ' """'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' """' → logprob: -0.9076065421104431
    2. '"""' → logprob: -1.157606601715088
    3. '   ' → logprob: -1.532606601715088
    4. ' """
' → logprob: -3.407606601715088
    5. 'La' → logprob: -5.032606601715088
    6. ' La' → logprob: -5.032606601715088
    7. '    ' → logprob: -5.407606601715088
    8. '"""
' → logprob: -5.782606601715088
    9. 'On' (adapté à ' On') → logprob: -5.907606601715088
    10. ' Le' → logprob: -6.907606601715088

Token 68: ' considère' (ID: 176437)
  Prédit: ' considère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' considère' → logprob: -0.116846464574337
    2. ' peut' → logprob: -3.3668465614318848
    3. ' doit' → logprob: -3.9918465614318848
    4. ' consid' → logprob: -4.866846561431885
    5. ' suppose' → logprob: -4.866846561431885
    6. ' a' → logprob: -4.991846561431885
    7. ' considere' → logprob: -5.491846561431885
    8. 'consider' → logprob: -5.741846561431885
    9. ' ' → logprob: -5.741846561431885
    10. ' consider' → logprob: -5.866846561431885

Token 69: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.20238429307937622
    2. ' la' → logprob: -1.9523842334747314
    3. ' les' → logprob: -4.3273844718933105
    4. ' le' → logprob: -4.5773844718933105
    5. ' l' → logprob: -5.4523844718933105
    6. ' un' → logprob: -5.9523844718933105
    7. ' une' → logprob: -6.3273844718933105
    8. 'le' → logprob: -6.8273844718933105
    9. 'les' → logprob: -6.8273844718933105
    10. 'que' → logprob: -7.0773844718933105

Token 70: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6598016023635864
    2. ' le' → logprob: -0.9098016023635864
    3. 'le' → logprob: -3.159801483154297
    4. ' the' → logprob: -4.659801483154297
    5. ' fromage' → logprob: -4.784801483154297
    6. 'la' → logprob: -5.409801483154297
    7. ' l' → logprob: -5.784801483154297
    8. ' from' → logprob: -6.034801483154297
    9. 'the' → logprob: -6.659801483154297
    10. 'l' → logprob: -6.909801483154297

Token 71: ' fromage' (ID: 167520)
  Prédit: ' fromage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fromage' → logprob: -0.10998313874006271
    2. ' passage' → logprob: -3.234983205795288
    3. ' from' → logprob: -3.484983205795288
    4. ' morceau' → logprob: -4.109982967376709
    5. ' plus' → logprob: -4.984982967376709
    6. 'from' → logprob: -5.609982967376709
    7. ' trou' → logprob: -6.109982967376709
    8. ' cheese' → logprob: -7.234982967376709
    9. 'plus' → logprob: -7.484982967376709
    10. ' code' → logprob: -7.734982967376709

Token 72: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.23933513462543488
    2. ' passe' → logprob: -2.739335060119629
    3. ' est' → logprob: -2.739335060119629
    4. ' ' → logprob: -2.989335060119629
    5. 'est' → logprob: -5.239335060119629
    6. ' can' → logprob: -5.489335060119629
    7. ' pass' → logprob: -5.489335060119629
    8. ' a' → logprob: -5.864335060119629
    9. 'pe' → logprob: -5.989335060119629
    10. ' se' → logprob: -6.114335060119629

Token 73: ' être' (ID: 9104)
  Prédit: ' tourner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tourner' → logprob: -0.8744271397590637
    2. ' piv' → logprob: -1.749427080154419
    3. ' pass' → logprob: -2.249427080154419
    4. ' passer' → logprob: -2.249427080154419
    5. ' être' → logprob: -2.874427080154419
    6. ' se' → logprob: -3.249427080154419
    7. '<|end|>' → logprob: -3.249427080154419
    8. ' passes' → logprob: -3.999427080154419
    9. 'pass' → logprob: -4.749427318572998
    10. ' pivot' → logprob: -4.999427318572998

Token 74: ' orient' (ID: 13198)
  Prédit: ' pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pivot' → logprob: -0.7153109312057495
    2. ' tourn' → logprob: -1.4653109312057495
    3. ' orient' → logprob: -2.090311050415039
    4. 'pivot' → logprob: -2.965311050415039
    5. 'orient' → logprob: -3.340311050415039
    6. ' piv' → logprob: -3.590311050415039
    7. ' placé' → logprob: -4.215311050415039
    8. ' tournée' → logprob: -4.840311050415039
    9. 't' → logprob: -5.715311050415039
    10. ' retourn' → logprob: -6.277811050415039

Token 75: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.054958902299404144
    2. 'ée' → logprob: -2.9299588203430176
    3. 'e' → logprob: -11.179959297180176
    4. 'ee' → logprob: -11.304959297180176
    5. ' é' → logprob: -11.929959297180176
    6. '\' → logprob: -12.179959297180176
    7. ',' → logprob: -12.429959297180176
    8. '�' → logprob: -12.554959297180176
    9. '#' → logprob: -13.054959297180176
    10. '-é' → logprob: -13.054959297180176

Token 76: ' dans' (ID: 2671)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.06750300526618958
    2. ' dans' → logprob: -2.942502975463867
    3. 'de' → logprob: -4.942502975463867
    4. 'dans' → logprob: -5.567502975463867
    5. ' libre' → logprob: -7.817502975463867
    6. ' pour' → logprob: -8.317502975463867
    7. ' d' → logprob: -8.567502975463867
    8. ' en' → logprob: -8.817502975463867
    9. ' ' → logprob: -9.817502975463867
    10. 'd' → logprob: -9.942502975463867

Token 77: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.014034456573426723
    2. ' l' → logprob: -5.264034271240234
    3. 'l' → logprob: -5.764034271240234
    4. 'n' → logprob: -5.764034271240234
    5. ' any' → logprob: -6.639034271240234
    6. ' quelcon' → logprob: -7.764034271240234
    7. ' toutes' → logprob: -8.639034271240234
    8. 't' → logprob: -9.264034271240234
    9. ' un' → logprob: -9.264034271240234
    10. ' ' → logprob: -9.264034271240234

Token 78: ''importe' (ID: 103032)
  Prédit: ''importe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''importe' → logprob: -0.03782927617430687
    2. 'importe' → logprob: -4.287829399108887
    3. ''' → logprob: -4.412829399108887
    4. ' '' → logprob: -5.787829399108887
    5. ''>' → logprob: -5.787829399108887
    6. '’importe' → logprob: -6.912829399108887
    7. '''' → logprob: -7.412829399108887
    8. '```' → logprob: -7.787829399108887
    9. '')' → logprob: -8.162829399108887
    10. ''import' → logprob: -8.287829399108887

Token 79: ' quelle' (ID: 47442)
  Prédit: 'quelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quelle' → logprob: -0.7400217652320862
    2. 'quel' → logprob: -1.2400217056274414
    3. ' quelle' → logprob: -1.4900217056274414
    4. ' quel' → logprob: -5.740021705627441
    5. '```' → logprob: -5.990021705627441
    6. '   ' → logprob: -6.990021705627441
    7. '  ' → logprob: -7.490021705627441
    8. ' ' → logprob: -8.115021705627441
    9. '-' → logprob: -8.240021705627441
    10. 'Quelle' → logprob: -9.240021705627441

Token 80: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.497850626707077
    2. ' orientation' → logprob: -1.1228506565093994
    3. 'orientation' → logprob: -3.2478506565093994
    4. 'direction' → logprob: -3.7478506565093994
    5. ' ' → logprob: -6.12285041809082
    6. '   ' → logprob: -8.12285041809082
    7. ' angle' → logprob: -8.49785041809082
    8. ' d' → logprob: -8.62285041809082
    9. '  ' → logprob: -8.74785041809082
    10. ' dimension' → logprob: -8.74785041809082

Token 81: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3491532802581787
    2. ',' → logprob: -1.4741532802581787
    3. ' ,' → logprob: -3.5991532802581787
    4. ' et' → logprob: -4.224153518676758
    5. '   ' → logprob: -5.099153518676758
    6. ' .' → logprob: -5.099153518676758
    7. ' ' → logprob: -5.849153518676758
    8. ' pour' → logprob: -6.474153518676758
    9. ' de' → logprob: -6.724153518676758
    10. '```' → logprob: -6.974153518676758

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1848779320716858
    2. '"""' → logprob: -1.934877872467041
    3. '\n' → logprob: -5.059877872467041
    4. '
' → logprob: -5.559877872467041
    5. ' """' → logprob: -5.559877872467041
    6. ')' → logprob: -5.684877872467041
    7. '```' → logprob: -6.059877872467041
    8. '    
' → logprob: -6.559877872467041
    9. '\' → logprob: -7.309877872467041
    10. '"' → logprob: -7.559877872467041

Token 83: ' Pour' (ID: 13931)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.45921650528907776
    2. '   ' → logprob: -2.209216594696045
    3. '\n' → logprob: -2.584216594696045
    4. ' """' → logprob: -2.709216594696045
    5. '"' → logprob: -3.834216594696045
    6. '\' → logprob: -3.834216594696045
    7. ' """
' → logprob: -4.209216594696045
    8. '"""
' → logprob: -4.209216594696045
    9. '
' → logprob: -4.459216594696045
    10. ' 
' → logprob: -4.709216594696045

Token 84: ' cela' (ID: 17542)
  Prédit: ' passer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passer' → logprob: -1.053118109703064
    2. ' que' → logprob: -1.178118109703064
    3. 'pass' → logprob: -2.5531182289123535
    4. ' cela' → logprob: -2.6781182289123535
    5. ' pass' → logprob: -3.0531182289123535
    6. ' chaque' → logprob: -3.3031182289123535
    7. ' ce' → logprob: -4.1781182289123535
    8. ' déterminer' → logprob: -4.1781182289123535
    9. 'cela' → logprob: -4.6781182289123535
    10. ' ' → logprob: -4.8031182289123535

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005281426943838596
    2. ' ,' → logprob: -5.630281448364258
    3. '   ' → logprob: -7.755281448364258
    4. ' ' → logprob: -8.380281448364258
    5. ':' → logprob: -8.380281448364258
    6. ' on' → logprob: -8.880281448364258
    7. 'def' → logprob: -9.505281448364258
    8. 'e' → logprob: -9.692781448364258
    9. ' il' → logprob: -9.692781448364258
    10. 'a' → logprob: -10.192781448364258

Token 86: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.08762802183628082
    2. ' we' → logprob: -3.837628126144409
    3. ' il' → logprob: -3.962628126144409
    4. ' return' → logprob: -5.08762788772583
    5. ' max' → logprob: -5.58762788772583
    6. ' les' → logprob: -5.71262788772583
    7. 'on' → logprob: -5.71262788772583
    8. ' pass' → logprob: -5.96262788772583
    9. ' nous' → logprob: -5.96262788772583
    10. ' la' → logprob: -6.08762788772583

Token 87: ' calc' (ID: 25691)
  Prédit: ' considère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' considère' → logprob: -0.6693016290664673
    2. ' calc' → logprob: -1.0443016290664673
    3. ' calcul' → logprob: -3.0443015098571777
    4. ' consider' → logprob: -4.794301509857178
    5. ' consid' → logprob: -5.044301509857178
    6. ' doit' → logprob: -5.044301509857178
    7. 'calcul' → logprob: -5.044301509857178
    8. 'consider' → logprob: -5.419301509857178
    9. ' vér' → logprob: -5.419301509857178
    10. 'e' → logprob: -5.794301509857178

Token 88: 'ule' (ID: 1601)
  Prédit: 'ul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.29371294379234314
    2. 'uler' → logprob: -1.7937129735946655
    3. 'ulé' → logprob: -3.543712854385376
    4. 'é' → logprob: -4.168713092803955
    5. 'ule' → logprob: -4.418713092803955
    6. 'u' → logprob: -4.793713092803955
    7. '_' → logprob: -5.668713092803955
    8. ' ul' → logprob: -5.918713092803955
    9. '```' → logprob: -6.293713092803955
    10. '   ' → logprob: -6.481213092803955

Token 89: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.07939191162586212
    2. ' l' → logprob: -3.2043919563293457
    3. ' le' → logprob: -4.329391956329346
    4. 'l' → logprob: -4.829391956329346
    5. 'le' → logprob: -5.829391956329346
    6. ' ' → logprob: -5.954391956329346
    7. '```' → logprob: -6.204391956329346
    8. ' les' → logprob: -6.329391956329346
    9. 'la' → logprob: -6.454391956329346
    10. ' ' → logprob: -7.079391956329346

Token 90: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.2080620527267456
    2. ' distance' → logprob: -2.458062171936035
    3. ' longueur' → logprob: -3.458062171936035
    4. ' diagonal' → logprob: -3.833062171936035
    5. ' diagon' → logprob: -3.833062171936035
    6. ' diamètre' → logprob: -4.833062171936035
    7. ' moindre' → logprob: -5.833062171936035
    8. 'plus' → logprob: -6.083062171936035
    9. ' dimension' → logprob: -6.333062171936035
    10. ' minimal' → logprob: -6.458062171936035

Token 91: ' petite' (ID: 28119)
  Prédit: ' petite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' petite' → logprob: -0.4056752324104309
    2. 'pet' → logprob: -1.7806751728057861
    3. ' grande' → logprob: -2.030675172805786
    4. ' petit' → logprob: -4.155675411224365
    5. ' pet' → logprob: -5.155675411224365
    6. 'gr' → logprob: -5.655675411224365
    7. ' small' → logprob: -6.655675411224365
    8. ' petites' → logprob: -6.780675411224365
    9. ' grand' → logprob: -6.905675411224365
    10. '```' → logprob: -7.155675411224365

Token 92: ' diagon' (ID: 146014)
  Prédit: ' sph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sph' → logprob: -0.6694831252098083
    2. ' dimension' → logprob: -1.5444831848144531
    3. ' sphere' → logprob: -2.669483184814453
    4. ' distance' → logprob: -2.919483184814453
    5. ' diagonal' → logprob: -3.419483184814453
    6. ' diagon' → logprob: -3.794483184814453
    7. ' longueur' → logprob: -4.044483184814453
    8. ' circle' → logprob: -4.294483184814453
    9. ' boule' → logprob: -5.169483184814453
    10. ' ell' → logprob: -5.294483184814453

Token 93: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0006407116306945682
    2. 'al' → logprob: -7.875640869140625
    3. 'o' → logprob: -9.875640869140625
    4. '```' → logprob: -10.375640869140625
    5. '>' → logprob: -10.500640869140625
    6. 'a' → logprob: -10.625640869140625
    7. 'le' → logprob: -10.875640869140625
    8. '</' → logprob: -11.375640869140625
    9. '   ' → logprob: -11.625640869140625
    10. 'e' → logprob: -11.625640869140625

Token 94: ' possible' (ID: 4149)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9177460670471191
    2. ' de' → logprob: -1.5427460670471191
    3. ' du' → logprob: -1.9177460670471191
    4. ' possible' → logprob: -2.042746067047119
    5. 'd' → logprob: -3.417746067047119
    6. 'de' → logprob: -3.792746067047119
    7. 'du' → logprob: -4.917746067047119
    8. ' space' → logprob: -4.917746067047119
    9. 'possible' → logprob: -5.167746067047119
    10. 'e' → logprob: -5.292746067047119

Token 95: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.43016600608825684
    2. ' du' → logprob: -1.6801660060882568
    3. ' d' → logprob: -2.305166006088257
    4. ' possible' → logprob: -4.555166244506836
    5. 'de' → logprob: -4.805166244506836
    6. ')' → logprob: -4.930166244506836
    7. ' entre' → logprob: -4.930166244506836
    8. '.' → logprob: -4.930166244506836
    9. ',' → logprob: -5.555166244506836
    10. ' ' → logprob: -5.805166244506836

Token 96: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.28313690423965454
    2. ' l' → logprob: -1.9081368446350098
    3. 'l' → logprob: -3.0331368446350098
    4. ' deux' → logprob: -4.28313684463501
    5. ' fromage' → logprob: -5.03313684463501
    6. 'la' → logprob: -5.28313684463501
    7. 'a' → logprob: -5.40813684463501
    8. ' from' → logprob: -5.78313684463501
    9. '```' → logprob: -6.15813684463501
    10. ' ses' → logprob: -6.15813684463501

Token 97: ' pièce' (ID: 56132)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.6672220826148987
    2. ' fromage' → logprob: -1.667222023010254
    3. 'from' → logprob: -2.042222023010254
    4. ' section' → logprob: -3.542222023010254
    5. ' boîte' → logprob: -3.667222023010254
    6. ' face' → logprob: -3.917222023010254
    7. ' tranche' → logprob: -4.167222023010254
    8. ' pièce' → logprob: -4.417222023010254
    9. ' surface' → logprob: -4.792222023010254
    10. ' cube' → logprob: -5.042222023010254

Token 98: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4963964223861694
    2. 'rect' → logprob: -1.4963964223861694
    3. ' rect' → logprob: -1.6213964223861694
    4. ' du' → logprob: -2.496396541595459
    5. ' cub' → logprob: -3.121396541595459
    6. ' pour' → logprob: -3.246396541595459
    7. '.' → logprob: -3.496396541595459
    8. ' de' → logprob: -3.746396541595459
    9. ' afin' → logprob: -3.871396541595459
    10. ' ' → logprob: -4.621396541595459

Token 99: 'à' (ID: 708)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24877670407295227
    2. ' )' → logprob: -2.12377667427063
    3. ' en' → logprob: -4.123776912689209
    4. '),' → logprob: -4.498776912689209
    5. ' des' → logprob: -4.998776912689209
    6. ' entre' → logprob: -4.998776912689209
    7. ' la' → logprob: -5.248776912689209
    8. ' dans' → logprob: -5.248776912689209
    9. 'en' → logprob: -5.373776912689209
    10. ',' → logprob: -5.623776912689209

Token 100: ' travers' (ID: 26957)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.9952903389930725
    2. ' travers' → logprob: -1.2452902793884277
    3. 'pass' → logprob: -2.2452902793884277
    4. 'l' → logprob: -2.3702902793884277
    5. ' partir' → logprob: -2.6202902793884277
    6. 'part' → logprob: -4.620290279388428
    7. 'n' → logprob: -4.870290279388428
    8. 'passing' → logprob: -4.995290279388428
    9. 'p' → logprob: -5.370290279388428
    10. '#' → logprob: -5.495290279388428

Token 101: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6734464168548584
    2. ' les' → logprob: -1.9234464168548584
    3. ' ses' → logprob: -1.9234464168548584
    4. 'l' → logprob: -2.1734464168548584
    5. ' laquelle' → logprob: -2.4234464168548584
    6. ' l' → logprob: -2.6734464168548584
    7. 'les' → logprob: -2.6734464168548584
    8. ' which' → logprob: -3.0484464168548584
    9. ' la' → logprob: -3.4234464168548584
    10. 'ses' → logprob: -3.5484464168548584

Token 102: '   ' (ID: 271)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.2279934883117676
    2. ' la' → logprob: -1.9779934883117676
    3. ' laquelle' → logprob: -1.9779934883117676
    4. ' les' → logprob: -2.1029934883117676
    5. ' which' → logprob: -2.4779934883117676
    6. 'l' → logprob: -2.6029934883117676
    7. ')' → logprob: -3.8529934883117676
    8. 'les' → logprob: -3.9779934883117676
    9. ' n' → logprob: -4.102993488311768
    10. ' le' → logprob: -4.102993488311768

Token 103: ' une' (ID: 2463)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.9417101144790649
    2. 'l' → logprob: -1.816710114479065
    3. 'une' (adapté à ' une') → logprob: -1.941710114479065
    4. 'ses' → logprob: -2.1917099952697754
    5. 'la' → logprob: -2.3167099952697754
    6. 'n' → logprob: -4.066709995269775
    7. ' ses' → logprob: -4.316709995269775
    8. ' une' → logprob: -4.816709995269775
    9. 'le' → logprob: -4.941709995269775
    10. ' n' → logprob: -4.941709995269775

Token 104: ' quelcon' (ID: 199130)
  Prédit: ' face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' face' → logprob: -0.5803169012069702
    2. 'face' → logprob: -1.4553169012069702
    3. ' quelcon' → logprob: -2.0803170204162598
    4. ' section' → logprob: -3.3303170204162598
    5. ' ar' → logprob: -4.33031702041626
    6. ' ' → logprob: -5.20531702041626
    7. ' surface' → logprob: -5.95531702041626
    8. ')' → logprob: -6.08031702041626
    9. 'section' → logprob: -6.20531702041626
    10. ' any' → logprob: -6.45531702041626

Token 105: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.018490545451641083
    2. 'quelle' → logprob: -5.393490314483643
    3. 'une' → logprob: -5.643490314483643
    4. 'elle' → logprob: -5.643490314483643
    5. 'q' → logprob: -6.518490314483643
    6. 'qu' → logprob: -6.893490314483643
    7. 'e' → logprob: -7.018490314483643
    8. 'quel' → logprob: -7.268490314483643
    9. 'u' → logprob: -7.893490314483643
    10. 'ques' → logprob: -7.893490314483643

Token 106: ' face' (ID: 4950)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7492430210113525
    2. ' orientation' → logprob: -1.1242430210113525
    3. ' face' → logprob: -2.3742430210113525
    4. ' paire' → logprob: -3.4992430210113525
    5. ' combinaison' → logprob: -3.8742430210113525
    6. 'orientation' → logprob: -3.9992430210113525
    7. ' de' → logprob: -4.624242782592773
    8. 'face' → logprob: -4.749242782592773
    9. ' dimension' → logprob: -5.499242782592773
    10. ' ar' → logprob: -5.624242782592773

Token 107: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25710129737854004
    2. ').' → logprob: -2.13210129737854
    3. ' ou' → logprob: -3.38210129737854
    4. '),' → logprob: -3.88210129737854
    5. ' de' → logprob: -4.257101058959961
    6. '   ' → logprob: -4.507101058959961
    7. ',' → logprob: -5.132101058959961
    8. ' )' → logprob: -5.507101058959961
    9. 'de' → logprob: -5.507101058959961
    10. ' et' → logprob: -5.757101058959961

Token 108: ' orientation' (ID: 29546)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.4964797496795654
    2. ' une' → logprob: -1.4964797496795654
    3. ' un' → logprob: -2.2464797496795654
    4. ' dans' → logprob: -2.3714797496795654
    5. ' l' → logprob: -2.7464797496795654
    6. ' à' → logprob: -2.8714797496795654
    7. 'en' → logprob: -3.6214797496795654
    8. ' la' → logprob: -3.8714797496795654
    9. 'di' → logprob: -3.8714797496795654
    10. 'dans' → logprob: -3.8714797496795654

Token 109: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24150077998638153
    2. ').' → logprob: -1.616500735282898
    3. ' )' → logprob: -4.9915008544921875
    4. '),' → logprob: -5.8665008544921875
    5. '):' → logprob: -6.1165008544921875
    6. ' de' → logprob: -6.6165008544921875
    7. ' ).' → logprob: -6.6165008544921875
    8. 'de' → logprob: -7.9915008544921875
    9. ' possible' → logprob: -8.116500854492188
    10. ',' → logprob: -8.366500854492188

Token 110: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009876496158540249
    2. ')' → logprob: -5.509876728057861
    3. '    
' → logprob: -5.759876728057861
    4. '
' → logprob: -6.884876728057861
    5. '"""' → logprob: -7.759876728057861
    6. '    ' → logprob: -8.009876251220703
    7. ' 
' → logprob: -9.134876251220703
    8. '"' → logprob: -9.384876251220703
    9. '\n' → logprob: -9.384876251220703
    10. ' )' → logprob: -9.384876251220703

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001979072345420718
    2. ')' → logprob: -7.501978874206543
    3. '    
' → logprob: -7.626978874206543
    4. ' """' → logprob: -8.501978874206543
    5. '"""' → logprob: -8.626978874206543
    6. '    ' → logprob: -8.751978874206543
    7. '
' → logprob: -9.251978874206543
    8. '#' → logprob: -9.876978874206543
    9. ' )' → logprob: -10.126978874206543
    10. 'n' → logprob: -10.251978874206543

Token 112: ' La' (ID: 3038)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.46179893612861633
    2. '   ' → logprob: -1.961798906326294
    3. ' max' → logprob: -2.586798906326294
    4. ' diagonal' → logprob: -3.586798906326294
    5. 'from' → logprob: -3.836798906326294
    6. 'max' → logprob: -4.086799144744873
    7. ' #' → logprob: -4.211799144744873
    8. ' min' → logprob: -4.211799144744873
    9. 'def' → logprob: -4.961799144744873
    10. ' from' → logprob: -5.336799144744873

Token 113: ' condition' (ID: 7060)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.05814499035477638
    2. ' diagonal' → logprob: -3.933145046234131
    3. 'plus' → logprob: -4.058145046234131
    4. ' diagon' → logprob: -5.808145046234131
    5. ' smallest' → logprob: -6.058145046234131
    6. 'di' → logprob: -6.308145046234131
    7. ' meilleure' → logprob: -6.308145046234131
    8. 'import' → logprob: -7.058145046234131
    9. '#' → logprob: -7.183145046234131
    10. ' minimal' → logprob: -7.245645046234131

Token 114: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.4687853753566742
    2. ' ' → logprob: -1.8437854051589966
    3. ' de' → logprob: -2.468785285949707
    4. ' d' → logprob: -2.968785285949707
    5. 'est' → logprob: -4.218785285949707
    6. ' suivante' → logprob: -4.218785285949707
    7. ' nécessaire' → logprob: -4.968785285949707
    8. ':' → logprob: -5.218785285949707
    9. ' finale' → logprob: -5.218785285949707
    10. '   ' → logprob: -5.468785285949707

Token 115: ' que' (ID: 661)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.1281009912490845
    2. ' R' → logprob: -1.2531009912490845
    3. ' que' → logprob: -1.3781009912490845
    4. ' True' → logprob: -2.503100872039795
    5. 'True' → logprob: -3.753100872039795
    6. '   ' → logprob: -4.878100872039795
    7. 'R' → logprob: -5.003100872039795
    8. ' ' → logprob: -5.378100872039795
    9. ' (' → logprob: -6.003100872039795
    10. ' "' → logprob: -6.128100872039795

Token 116: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6771058440208435
    2. '2' → logprob: -1.0521059036254883
    3. ' ' → logprob: -2.4271059036254883
    4. 'la' → logprob: -3.4271059036254883
    5. ' le' → logprob: -4.677105903625488
    6. 'le' → logprob: -5.302105903625488
    7. '   ' → logprob: -6.052105903625488
    8. 'di' → logprob: -6.927105903625488
    9. 'diam' → logprob: -6.927105903625488
    10. '4' → logprob: -7.802105903625488

Token 117: ' diamètre' (ID: 167210)
  Prédit: 'diam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diam' → logprob: -0.9040618538856506
    2. 'plus' → logprob: -1.6540617942810059
    3. ' diamètre' → logprob: -2.154061794281006
    4. 'di' → logprob: -2.404061794281006
    5. ' plus' → logprob: -2.654061794281006
    6. '2' → logprob: -3.154061794281006
    7. 'from' → logprob: -3.779061794281006
    8. ' from' → logprob: -3.904061794281006
    9. ' fromage' → logprob: -4.529061794281006
    10. ' rayon' → logprob: -4.654061794281006

Token 118: ' de' (ID: 334)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.01465830858796835
    2. 'du' → logprob: -5.014658451080322
    3. ' maximal' → logprob: -6.514658451080322
    4. ' d' → logprob: -6.764658451080322
    5. ' de' → logprob: -6.764658451080322
    6. ')' → logprob: -7.514658451080322
    7. ' )' → logprob: -8.014657974243164
    8. ' minimal' → logprob: -8.264657974243164
    9. 'diam' → logprob: -8.264657974243164
    10. ' ' → logprob: -8.264657974243164

Token 119: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6029049158096313
    2. ' ' → logprob: -1.8529049158096313
    3. 'le' → logprob: -1.9779049158096313
    4. ' la' → logprob: -2.102904796600342
    5. '2' → logprob: -4.352904796600342
    6. '   ' → logprob: -5.102904796600342
    7. ' trou' → logprob: -5.977904796600342
    8. ' the' → logprob: -6.102904796600342
    9. 'la' → logprob: -6.852904796600342
    10. ' hole' → logprob: -6.977904796600342

Token 120: ' section' (ID: 7102)
  Prédit: ' trou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trou' → logprob: -0.8847843408584595
    2. ' from' → logprob: -1.5097843408584595
    3. ' plus' → logprob: -2.13478422164917
    4. 'from' → logprob: -2.50978422164917
    5. ' fromage' → logprob: -2.75978422164917
    6. 'f' → logprob: -3.75978422164917
    7. ' passage' → logprob: -4.50978422164917
    8. ' cheese' → logprob: -4.63478422164917
    9. ' cercle' → logprob: -4.63478422164917
    10. 'plus' → logprob: -4.75978422164917

Token 121: ' trans' (ID: 1643)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.18340088427066803
    2. 'du' → logprob: -2.808400869369507
    3. ' circul' → logprob: -3.058400869369507
    4. ' minimale' → logprob: -4.808401107788086
    5. ' trans' → logprob: -5.058401107788086
    6. ' travers' → logprob: -5.058401107788086
    7. 'cir' → logprob: -5.058401107788086
    8. ' de' → logprob: -5.308401107788086
    9. ' maximale' → logprob: -5.308401107788086
    10. ' ins' → logprob: -5.433401107788086

Token 122: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.0015581895131617785
    2. 'verse' → logprob: -6.751558303833008
    3. 'versal' → logprob: -8.251558303833008
    4. '
' → logprob: -10.626558303833008
    5. '   ' → logprob: -11.001558303833008
    6. 'ver' → logprob: -11.376558303833008
    7. 'v' → logprob: -11.626558303833008
    8. '

' → logprob: -11.751558303833008
    9. 'versa' → logprob: -12.251558303833008
    10. '       ' → logprob: -12.501558303833008

Token 123: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.3874451518058777
    2. 'e' → logprob: -1.1374452114105225
    3. 'al' → logprob: -8.012445449829102
    4. '#' → logprob: -10.137445449829102
    5. '
' → logprob: -10.387445449829102
    6. 'é' → logprob: -10.387445449829102
    7. 'ion' → logprob: -10.512445449829102
    8. 'a' → logprob: -10.887445449829102
    9. '   ' → logprob: -11.012445449829102
    10. 'le' → logprob: -11.137445449829102

Token 124: ' minimale' (ID: 143217)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.025154849514365196
    2. 'du' → logprob: -4.525155067443848
    3. ' de' → logprob: -4.900155067443848
    4. ' soit' → logprob: -6.150155067443848
    5. ' (' → logprob: -6.525155067443848
    6. '   ' → logprob: -7.400155067443848
    7. ' ' → logprob: -7.900155067443848
    8. ' doit' → logprob: -8.150155067443848
    9. ')' → logprob: -8.525155067443848
    10. ' passant' → logprob: -8.775155067443848

Token 125: ' du' (ID: 1462)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.7873509526252747
    2. ' du' → logprob: -0.7873509526252747
    3. ' (' → logprob: -3.53735089302063
    4. ' de' → logprob: -4.162351131439209
    5. '(' → logprob: -4.412351131439209
    6. 'de' → logprob: -4.912351131439209
    7. ')' → logprob: -5.037351131439209
    8. '   ' → logprob: -5.287351131439209
    9. ' ' → logprob: -5.912351131439209
    10. 'd' → logprob: -6.537351131439209

Token 126: '
' (ID: 198)
  Prédit: ' fromage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fromage' → logprob: -0.5775099992752075
    2. ' trou' → logprob: -0.9525099992752075
    3. 'from' → logprob: -3.702509880065918
    4. ' morceau' → logprob: -4.202509880065918
    5. ' from' → logprob: -4.952509880065918
    6. ' passage' → logprob: -6.702509880065918
    7. '```' → logprob: -7.327509880065918
    8. 'che' → logprob: -7.640009880065918
    9. ' cube' → logprob: -7.952509880065918
    10. ' cheese' → logprob: -8.077509880065918

Token 127: '   ' (ID: 271)
  Prédit: ' fromage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fromage' → logprob: -0.6549848914146423
    2. ' trou' → logprob: -0.9049848914146423
    3. ' from' → logprob: -3.654984951019287
    4. 'from' → logprob: -3.904984951019287
    5. ' passage' → logprob: -4.529984951019287
    6. ' morceau' → logprob: -4.904984951019287
    7. ' cheese' → logprob: -6.154984951019287
    8. ' trous' → logprob: -6.467484951019287
    9. 'tr' → logprob: -6.529984951019287
    10. 't' → logprob: -6.904984951019287

Token 128: ' parall' (ID: 133906)
  Prédit: ' trou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trou' → logprob: -0.4026675820350647
    2. 'tr' → logprob: -1.90266752243042
    3. 'from' → logprob: -2.02766752243042
    4. ' from' → logprob: -3.77766752243042
    5. ' fromage' → logprob: -3.90266752243042
    6. ' trous' → logprob: -6.77766752243042
    7. 't' → logprob: -7.02766752243042
    8. ' cercle' → logprob: -7.02766752243042
    9. 'c' → logprob: -7.40266752243042
    10. 'che' → logprob: -7.71516752243042

Token 129: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.18273819983005524
    2. 'é' → logprob: -1.807738184928894
    3. 'ép' → logprob: -6.182738304138184
    4. 'él' → logprob: -7.182738304138184
    5. 'è' → logprob: -9.432738304138184
    6. 'el' → logprob: -10.682738304138184
    7. 'èl' → logprob: -11.432738304138184
    8. '
' → logprob: -11.807738304138184
    9. 'l' → logprob: -12.182738304138184
    10. '-' → logprob: -12.432738304138184

Token 130: 'pip' (ID: 113064)
  Prédit: 'pip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pip' → logprob: -3.583550642360933e-05
    2. 'p' → logprob: -10.375036239624023
    3. ' pip' → logprob: -13.375036239624023
    4. 'pé' → logprob: -13.750036239624023
    5. 'pid' → logprob: -13.875036239624023
    6. 'log' → logprob: -15.375036239624023
    7. 'l' → logprob: -15.625036239624023
    8. 'ép' → logprob: -15.750036239624023
    9. '-' → logprob: -15.875036239624023
    10. 'ip' → logprob: -16.625036239624023

Token 131: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.06687982380390167
    2. 'è' → logprob: -2.8168797492980957
    3. 'p' → logprob: -6.691879749298096
    4. '`' → logprob: -7.191879749298096
    5. '\' → logprob: -7.191879749298096
    6. 'é' → logprob: -7.566879749298096
    7. 'e' → logprob: -7.691879749298096
    8. '\u' → logprob: -8.316880226135254
    9. '�' → logprob: -9.066880226135254
    10. 'ipe' → logprob: -9.316880226135254

Token 132: ' puisse' (ID: 77890)
  Prédit: ' soit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' soit' → logprob: -1.1871682405471802
    2. 'do' → logprob: -1.3121682405471802
    3. ' doit' → logprob: -2.0621681213378906
    4. ' (' → logprob: -2.1871681213378906
    5. 'so' → logprob: -2.3121681213378906
    6. ' do' → logprob: -4.312168121337891
    7. ' est' → logprob: -4.437168121337891
    8. '(' → logprob: -4.687168121337891
    9. ' ' → logprob: -5.312168121337891
    10. ' inscr' → logprob: -5.437168121337891

Token 133: ' passer' (ID: 27727)
  Prédit: ' passer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passer' → logprob: -0.8897954821586609
    2. ' fit' → logprob: -1.3897955417633057
    3. 'pass' → logprob: -1.6397955417633057
    4. ' pass' → logprob: -3.3897955417633057
    5. ' être' → logprob: -3.3897955417633057
    6. 'être' → logprob: -4.014795303344727
    7. 'fit' → logprob: -4.139795303344727
    8. 's' → logprob: -4.889795303344727
    9. ' s' → logprob: -5.389795303344727
    10. ' travers' → logprob: -5.389795303344727

Token 134: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.6318594217300415
    2. ' à' → logprob: -1.3818594217300415
    3. ' through' → logprob: -2.256859302520752
    4. 'dans' → logprob: -2.631859302520752
    5. ' par' → logprob: -3.756859302520752
    6. ' ' → logprob: -5.006859302520752
    7. 'à' → logprob: -5.756859302520752
    8. 'through' → logprob: -6.756859302520752
    9. ' sans' → logprob: -7.131859302520752
    10. ' au' → logprob: -7.131859302520752

Token 135: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.040808092802762985
    2. 'le' → logprob: -3.2908082008361816
    3. ' un' → logprob: -6.415808200836182
    4. ' la' → logprob: -7.665808200836182
    5. '_le' → logprob: -8.415807723999023
    6. 'diam' → logprob: -9.040807723999023
    7. '2' → logprob: -9.790807723999023
    8. ' l' → logprob: -9.790807723999023
    9. ' ' → logprob: -10.040807723999023
    10. 'un' → logprob: -10.040807723999023

Token 136: ' trou' (ID: 18706)
  Prédit: ' trou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trou' → logprob: -0.07558025419712067
    2. ' cercle' → logprob: -2.825580358505249
    3. 'tr' → logprob: -5.32558012008667
    4. ' cer' → logprob: -5.70058012008667
    5. 'c' → logprob: -6.32558012008667
    6. ' trous' → logprob: -6.70058012008667
    7. 'cer' → logprob: -7.63808012008667
    8. ' circle' → logprob: -8.200580596923828
    9. ' cerc' → logprob: -8.825580596923828
    10. ' ' → logprob: -8.825580596923828

Token 137: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4183899760246277
    2. ')' → logprob: -1.4183900356292725
    3. ',' → logprob: -2.7933900356292725
    4. ').' → logprob: -4.793389797210693
    5. '"""' → logprob: -4.793389797210693
    6. '"' → logprob: -5.168389797210693
    7. ' de' → logprob: -5.543389797210693
    8. ' )' → logprob: -6.043389797210693
    9. '."' → logprob: -6.293389797210693
    10. '(' → logprob: -6.918389797210693

Token 138: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001502717612311244
    2. '    
' → logprob: -7.751502513885498
    3. '    ' → logprob: -8.001502990722656
    4. ')' → logprob: -8.126502990722656
    5. '"""' → logprob: -8.126502990722656
    6. ' """' → logprob: -10.376502990722656
    7. ' ' → logprob: -11.251502990722656
    8. ' )' → logprob: -11.251502990722656
    9. '
' → logprob: -11.501502990722656
    10. '"' → logprob: -11.501502990722656

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011920960620045662
    2. '    ' → logprob: -5.636920928955078
    3. '    
' → logprob: -5.761920928955078
    4. ')' → logprob: -6.511920928955078
    5. ' """' → logprob: -6.511920928955078
    6. '"""' → logprob: -7.511920928955078
    7. ' """
' → logprob: -8.261920928955078
    8. '
' → logprob: -8.511920928955078
    9. '     
' → logprob: -8.511920928955078
    10. ' )' → logprob: -8.636920928955078

Token 140: ' Mat' (ID: 9926)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9413665533065796
    2. '   ' → logprob: -0.9413665533065796
    3. 'diam' → logprob: -2.816366672515869
    4. 'max' → logprob: -2.941366672515869
    5. ' max' → logprob: -3.191366672515869
    6. '"""' → logprob: -4.441366672515869
    7. ' #' → logprob: -4.941366672515869
    8. 'radius' → logprob: -5.191366672515869
    9. ' """' → logprob: -5.566366672515869
    10. ' diagonal' → logprob: -5.941366672515869

Token 141: 'hem' (ID: 6863)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0004419935867190361
    2. 'th' → logprob: -9.250441551208496
    3. 'plotlib' → logprob: -9.625441551208496
    4. 'ér' → logprob: -9.750441551208496
    5. 'ériel' → logprob: -9.750441551208496
    6. 'ch' → logprob: -10.500441551208496
    7. 'r' → logprob: -11.000441551208496
    8. 'hé' → logprob: -11.125441551208496
    9. '```' → logprob: -11.250441551208496
    10. '
' → logprob: -11.750441551208496

Token 142: 'atiquement' (ID: 91584)
  Prédit: 'atique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atique' → logprob: -0.7956801652908325
    2. 'atiques' → logprob: -1.1706801652908325
    3. 'at' → logprob: -2.295680046081543
    4. 'atics' → logprob: -2.795680046081543
    5. 'atica' → logprob: -3.295680046081543
    6. 'ath' → logprob: -3.420680046081543
    7. 'atika' → logprob: -6.295680046081543
    8. 'a' → logprob: -6.920680046081543
    9. 'as' → logprob: -6.920680046081543
    10. 'ics' → logprob: -6.920680046081543

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021712594025302678
    2. ':' → logprob: -9.62521743774414
    3. ' ,' → logprob: -9.87521743774414
    4. ',
' → logprob: -10.50021743774414
    5. ' parlant' → logprob: -10.75021743774414
    6. ',

' → logprob: -11.37521743774414
    7. '"""' → logprob: -11.75021743774414
    8. ' :' → logprob: -11.87521743774414
    9. '   ' → logprob: -12.50021743774414
    10. '#' → logprob: -12.87521743774414

Token 144: ' pour' (ID: 1930)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7385812401771545
    2. ' la' → logprob: -0.9885812401771545
    3. ' le' → logprob: -2.9885811805725098
    4. ' il' → logprob: -3.1135811805725098
    5. 'diam' → logprob: -4.48858118057251
    6. 'le' → logprob: -5.11358118057251
    7. ' voici' → logprob: -5.48858118057251
    8. ' diam' → logprob: -5.61358118057251
    9. ' 
' → logprob: -5.73858118057251
    10. '   ' → logprob: -5.73858118057251

Token 145: ' un' (ID: 537)
  Prédit: ' tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tout' → logprob: -1.4992895126342773
    2. ' passer' → logprob: -1.6242895126342773
    3. ' toute' → logprob: -2.1242895126342773
    4. 'pass' → logprob: -2.4992895126342773
    5. ' une' → logprob: -2.6242895126342773
    6. ' toutes' → logprob: -2.7492895126342773
    7. 'tout' → logprob: -3.3742895126342773
    8. ' chaque' → logprob: -3.3742895126342773
    9. ' un' → logprob: -3.6242895126342773
    10. 't' → logprob: -3.7492895126342773

Token 146: ' parall' (ID: 133906)
  Prédit: ' parall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parall' → logprob: -0.14824463427066803
    2. 'par' → logprob: -3.273244619369507
    3. ' paralle' → logprob: -3.523244619369507
    4. ' rectangle' → logprob: -3.773244619369507
    5. ' cube' → logprob: -3.898244619369507
    6. ' solide' → logprob: -5.523244857788086
    7. 'rectangle' → logprob: -5.898244857788086
    8. 'pr' → logprob: -6.023244857788086
    9. ' parallèle' → logprob: -6.148244857788086
    10. 'cube' → logprob: -6.773244857788086

Token 147: 'élé' (ID: 15228)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.3700055778026581
    2. 'élé' → logprob: -1.3700056076049805
    3. 'él' → logprob: -3.1200056076049805
    4. 'è' → logprob: -4.9950056076049805
    5. 'ép' → logprob: -5.7450056076049805
    6. 'èl' → logprob: -7.7450056076049805
    7. 'el' → logprob: -8.24500560760498
    8. 'l' → logprob: -10.12000560760498
    9. 'e' → logprob: -10.49500560760498
    10. '```' → logprob: -10.62000560760498

Token 148: 'pip' (ID: 113064)
  Prédit: 'pip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pip' → logprob: -0.00013965457037556916
    2. 'p' → logprob: -9.125139236450195
    3. 'pid' → logprob: -11.750139236450195
    4. 'ip' → logprob: -11.875139236450195
    5. ' pip' → logprob: -11.875139236450195
    6. 'ép' → logprob: -13.250139236450195
    7. 'log' → logprob: -13.500139236450195
    8. 'pé' → logprob: -13.750139236450195
    9. '```' → logprob: -14.125139236450195
    10. '-' → logprob: -14.250139236450195

Token 149: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.03446352481842041
    2. 'è' → logprob: -3.409463405609131
    3. '\' → logprob: -8.534463882446289
    4. '`' → logprob: -9.034463882446289
    5. 'p' → logprob: -9.034463882446289
    6. 'ede' → logprob: -9.409463882446289
    7. 'e' → logprob: -9.534463882446289
    8. 'é' → logprob: -10.659463882446289
    9. '\u' → logprob: -10.784463882446289
    10. 'h' → logprob: -10.784463882446289

Token 150: ' rectangle' (ID: 45808)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39231809973716736
    2. 'rect' → logprob: -1.7673181295394897
    3. ' rectangle' → logprob: -2.1423180103302
    4. 'rectangle' → logprob: -3.7673180103302
    5. ' ,' → logprob: -6.142318248748779
    6. ' rectangular' → logprob: -6.267318248748779
    7. ' rect' → logprob: -6.767318248748779
    8. ' quelcon' → logprob: -6.767318248748779
    9. 'd' → logprob: -7.142318248748779
    10. ' de' → logprob: -7.142318248748779

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008754727430641651
    2. ' ,' → logprob: -6.008754730224609
    3. ' rectangle' → logprob: -6.383754730224609
    4. ' de' → logprob: -6.508754730224609
    5. ' (' → logprob: -7.758754730224609
    6. ' ' → logprob: -7.883754730224609
    7. 'de' → logprob: -8.13375473022461
    8. 'rect' → logprob: -8.50875473022461
    9. ' ABC' → logprob: -8.50875473022461
    10. ' avec' → logprob: -8.63375473022461

Token 152: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.030986160039901733
    2. 'le' → logprob: -4.530986309051514
    3. ' le' → logprob: -4.780986309051514
    4. 'la' → logprob: -5.530986309051514
    5. ' on' → logprob: -5.655986309051514
    6. ' il' → logprob: -6.155986309051514
    7. ' c' → logprob: -7.280986309051514
    8. ' the' → logprob: -8.530985832214355
    9. '#' → logprob: -8.780985832214355
    10. 'diam' → logprob: -8.780985832214355

Token 153: ''en' (ID: 16740)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09925926476716995
    2. 'e' → logprob: -2.474259376525879
    3. ' a' → logprob: -5.224259376525879
    4. ''' → logprob: -6.599259376525879
    5. ' diagonal' → logprob: -7.599259376525879
    6. ''a' → logprob: -7.974259376525879
    7. ' diamètre' → logprob: -8.474259376525879
    8. 'es' → logprob: -8.599259376525879
    9. ''espace' → logprob: -8.849259376525879
    10. ''esp' → logprob: -8.974259376525879

Token 154: 'com' (ID: 639)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.2282874584197998
    2. 'def' → logprob: -1.9782874584197998
    3. 'suite' → logprob: -2.7282874584198
    4. ' diam' → logprob: -2.8532874584198
    5. 'diam' → logprob: -2.9782874584198
    6. 'plus' → logprob: -3.1032874584198
    7. 'semble' → logprob: -3.4782874584198
    8. 'c' → logprob: -3.6032874584198
    9. 'di' → logprob: -3.6032874584198
    10. 'code' → logprob: -3.7282874584198

Token 155: 'bre' (ID: 9945)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.05145486071705818
    2. 't' → logprob: -3.676454782485962
    3. 'g' → logprob: -4.176455020904541
    4. 'c' → logprob: -5.551455020904541
    5. 'ce' → logprob: -5.926455020904541
    6. 'comb' → logprob: -6.801455020904541
    7. 'tre' → logprob: -7.426455020904541
    8. '   ' → logprob: -8.676454544067383
    9. 'combe' → logprob: -9.551454544067383
    10. 'comm' → logprob: -9.863954544067383

Token 156: 'ment' (ID: 508)
  Prédit: 'bre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.8249765634536743
    2. 'ment' → logprob: -1.1999765634536743
    3. 'rement' → logprob: -1.8249765634536743
    4. 'r' → logprob: -3.1999764442443848
    5. 'nt' → logprob: -4.824976444244385
    6. 'ur' → logprob: -5.199976444244385
    7. 're' → logprob: -5.449976444244385
    8. 'nement' → logprob: -5.574976444244385
    9. 'dre' → logprob: -5.574976444244385
    10. 'br' → logprob: -5.949976444244385

Token 157: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.14296501874923706
    2. ' maximal' → logprob: -2.392965078353882
    3. 'minimal' → logprob: -3.517965078353882
    4. ' minimum' → logprob: -5.392964839935303
    5. 'minimum' → logprob: -5.767964839935303
    6. 'max' → logprob: -6.267964839935303
    7. ' diagonal' → logprob: -7.267964839935303
    8. ' max' → logprob: -7.517964839935303
    9. ' maximum' → logprob: -8.142965316772461
    10. ' minimale' → logprob: -8.142965316772461

Token 158: '
' (ID: 198)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.4457886219024658
    2. ' de' → logprob: -1.8207886219024658
    3. ' à' → logprob: -2.320788621902466
    4. ' minimal' → logprob: -2.445788621902466
    5. ' possible' → logprob: -2.570788621902466
    6. ' dans' → logprob: -3.195788621902466
    7. ' ' → logprob: -3.445788621902466
    8. 'est' → logprob: -3.445788621902466
    9. ' d' → logprob: -3.570788621902466
    10. 'de' → logprob: -3.695788621902466

Token 159: '   ' (ID: 271)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sur' → logprob: -1.6909009218215942
    2. ' possible' → logprob: -1.6909009218215942
    3. ' est' → logprob: -1.8159009218215942
    4. ' minimal' → logprob: -2.0659008026123047
    5. ' à' → logprob: -2.5659008026123047
    6. ' ' → logprob: -2.9409008026123047
    7. ' du' → logprob: -3.6909008026123047
    8. ' de' → logprob: -3.8159008026123047
    9. 'est' → logprob: -3.9409008026123047
    10. ' dans' → logprob: -3.9409008026123047

Token 160: ' que' (ID: 661)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.8226993680000305
    2. ' possible' → logprob: -1.6976993083953857
    3. ' est' → logprob: -1.8226993083953857
    4. 'possible' → logprob: -3.3226993083953857
    5. ' de' → logprob: -3.5726993083953857
    6. ' minimal' → logprob: -3.9476993083953857
    7. ' ' → logprob: -3.9476993083953857
    8. ' d' → logprob: -4.072699546813965
    9. ' sur' → logprob: -4.447699546813965
    10. ' maximal' → logprob: -4.822699546813965

Token 161: ' l' (ID: 305)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.3434264659881592
    2. ' l' → logprob: -2.843426465988159
    3. ' permet' → logprob: -3.468426465988159
    4. ' passe' → logprob: -3.718426465988159
    5. ' représente' → logprob: -3.843426465988159
    6. ' doit' → logprob: -4.093426704406738
    7. ' puisse' → logprob: -4.093426704406738
    8. ' ' → logprob: -4.343426704406738
    9. ' le' → logprob: -4.468426704406738
    10. ' on' → logprob: -4.718426704406738

Token 162: ''on' (ID: 25812)
  Prédit: ''on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.17222799360752106
    2. 'a' → logprob: -2.1722280979156494
    3. 'on' → logprob: -3.5472280979156494
    4. 'e' → logprob: -5.29722785949707
    5. 'u' → logprob: -6.04722785949707
    6. 'p' → logprob: -6.04722785949707
    7. ''' → logprob: -6.67222785949707
    8. ' peut' → logprob: -7.04722785949707
    9. 'x' → logprob: -7.79722785949707
    10. 'd' → logprob: -7.79722785949707

Token 163: ' doit' (ID: 21822)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.13101474940776825
    2. 'pe' → logprob: -3.381014823913574
    3. ' doit' → logprob: -3.381014823913574
    4. ' puisse' → logprob: -3.881014823913574
    5. ' calc' → logprob: -5.006014823913574
    6. ' can' → logprob: -5.756014823913574
    7. 'do' → logprob: -5.756014823913574
    8. ' appelle' → logprob: -5.881014823913574
    9. ' peux' → logprob: -6.256014823913574
    10. ' veut' → logprob: -6.381014823913574

Token 164: ' faire' (ID: 8119)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.7444785833358765
    2. ' passer' → logprob: -1.6194785833358765
    3. ' vérifier' → logprob: -1.7444785833358765
    4. ' considérer' → logprob: -2.869478702545166
    5. ' mesurer' → logprob: -4.369478702545166
    6. 'consider' → logprob: -4.619478702545166
    7. ' prendre' → logprob: -4.744478702545166
    8. ' pass' → logprob: -4.869478702545166
    9. '_pass' → logprob: -4.994478702545166
    10. 'r' → logprob: -5.619478702545166

Token 165: ' passer' (ID: 27727)
  Prédit: ' passer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passer' → logprob: -0.08456346392631531
    2. 'pass' → logprob: -2.5845634937286377
    3. ' rentrer' → logprob: -6.334563255310059
    4. ' pass' → logprob: -6.584563255310059
    5. ' entrer' → logprob: -7.209563255310059
    6. ' est' → logprob: -7.584563255310059
    7. 'est' → logprob: -7.834563255310059
    8. ' pour' → logprob: -8.834563255310059
    9. ' passar' → logprob: -8.959563255310059
    10. 'pour' → logprob: -9.084563255310059

Token 166: ' dans' (ID: 2671)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.7094175219535828
    2. ' à' → logprob: -1.3344175815582275
    3. ' par' → logprob: -1.9594175815582275
    4. ' dans' → logprob: -2.9594175815582275
    5. ' pour' → logprob: -4.084417343139648
    6. 'est' → logprob: -4.709417343139648
    7. ' au' → logprob: -4.834417343139648
    8. ' ' → logprob: -5.709417343139648
    9. 'dans' → logprob: -5.709417343139648
    10. ' through' → logprob: -6.209417343139648

Token 167: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.12282618880271912
    2. ' le' → logprob: -2.497826099395752
    3. 'diam' → logprob: -3.622826099395752
    4. 'un' → logprob: -5.747826099395752
    5. 'la' → logprob: -6.872826099395752
    6. ' un' → logprob: -6.997826099395752
    7. '2' → logprob: -7.747826099395752
    8. ' la' → logprob: -7.997826099395752
    9. 'l' → logprob: -8.99782657623291
    10. ' ' → logprob: -8.99782657623291

Token 168: ' trou' (ID: 18706)
  Prédit: ' trou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trou' → logprob: -0.05368383973836899
    2. 'tr' → logprob: -3.0536837577819824
    3. ' cercle' → logprob: -5.928683757781982
    4. 'c' → logprob: -6.678683757781982
    5. ' trous' → logprob: -8.05368423461914
    6. 'cer' → logprob: -8.55368423461914
    7. '```' → logprob: -8.80368423461914
    8. 't' → logprob: -8.80368423461914
    9. 'r' → logprob: -9.92868423461914
    10. 'plan' → logprob: -10.17868423461914

Token 169: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.024044979363679886
    2. 'est' → logprob: -4.149044990539551
    3. ' ' → logprob: -5.399044990539551
    4. ',' → logprob: -6.774044990539551
    5. ' pour' → logprob: -7.399044990539551
    6. 's' → logprob: -7.524044990539551
    7. ')' → logprob: -8.52404499053955
    8. ' correspond' → logprob: -8.89904499053955
    9. '"' → logprob: -9.27404499053955
    10. ''est' → logprob: -9.52404499053955

Token 170: ' la' (ID: 557)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.31230974197387695
    2. ' min' → logprob: -1.562309741973877
    3. ' la' → logprob: -3.437309741973877
    4. ' le' → logprob: -4.937309741973877
    5. ' max' → logprob: -5.187309741973877
    6. 'min' → logprob: -5.312309741973877
    7. 'math' → logprob: -5.687309741973877
    8. ' au' → logprob: -6.312309741973877
    9. 'le' → logprob: -6.812309741973877
    10. ' ' → logprob: -7.062309741973877

Token 171: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.0028883253689855337
    2. 'plus' → logprob: -7.502888202667236
    3. ' min' → logprob: -7.877888202667236
    4. ' ' → logprob: -8.502888679504395
    5. ' math' → logprob: -8.502888679504395
    6. ' diam' → logprob: -8.627888679504395
    7. ' section' → logprob: -8.627888679504395
    8. ' diagon' → logprob: -8.752888679504395
    9. ' moindre' → logprob: -8.752888679504395
    10. ' mo' → logprob: -9.002888679504395

Token 172: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.4124043881893158
    2. ' petite' → logprob: -1.1624044179916382
    3. ' petit' → logprob: -4.787404537200928
    4. ' pet' → logprob: -4.787404537200928
    5. ' small' → logprob: -6.662404537200928
    6. '```' → logprob: -6.662404537200928
    7. ' Pet' → logprob: -6.787404537200928
    8. '_pet' → logprob: -7.287404537200928
    9. ' grande' → logprob: -7.537404537200928
    10. ' petites' → logprob: -7.537404537200928

Token 173: ' diagon' (ID: 146014)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -1.0902775526046753
    2. ' diagon' → logprob: -1.3402775526046753
    3. ' diagonal' → logprob: -1.9652775526046753
    4. '_di' → logprob: -1.9652775526046753
    5. ' des' → logprob: -3.590277671813965
    6. ' dimension' → logprob: -3.840277671813965
    7. '"' → logprob: -3.965277671813965
    8. ' ar' → logprob: -5.090277671813965
    9. ' face' → logprob: -5.340277671813965
    10. '_' → logprob: -5.590277671813965

Token 174: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.00027349460287950933
    2. 'a' → logprob: -8.750273704528809
    3. 'al' → logprob: -9.500273704528809
    4. 'g' → logprob: -11.875273704528809
    5. 'але' → logprob: -12.375273704528809
    6. '```' → logprob: -12.375273704528809
    7. '   ' → logprob: -12.625273704528809
    8. 'o' → logprob: -12.750273704528809
    9. ' ' → logprob: -13.125273704528809
    10. '>' → logprob: -13.625273704528809

Token 175: ' parmi' (ID: 51713)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.07764381170272827
    2. ' d' → logprob: -3.827643871307373
    3. ' de' → logprob: -3.827643871307373
    4. 'possible' → logprob: -4.202643871307373
    5. ' du' → logprob: -5.952643871307373
    6. ' face' → logprob: -6.202643871307373
    7. ' des' → logprob: -6.202643871307373
    8. ' entre' → logprob: -6.452643871307373
    9. 'de' → logprob: -6.577643871307373
    10. ' plane' → logprob: -7.202643871307373

Token 176: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.18448738753795624
    2. ' l' → logprob: -3.1844873428344727
    3. 'les' → logprob: -3.1844873428344727
    4. ' (' → logprob: -3.5594873428344727
    5. ' ' → logprob: -3.8094873428344727
    6. ' toutes' → logprob: -4.809487342834473
    7. '(' → logprob: -5.559487342834473
    8. ' la' → logprob: -5.934487342834473
    9. ' ces' → logprob: -5.934487342834473
    10. 'l' → logprob: -6.059487342834473

Token 177: '
' (ID: 198)
  Prédit: ' faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faces' → logprob: -0.9218824505805969
    2. ' trois' → logprob: -1.1718823909759521
    3. ' ' → logprob: -2.296882390975952
    4. 'faces' → logprob: -2.546882390975952
    5. ' pairs' → logprob: -3.796882390975952
    6. ' deux' → logprob: -3.921882390975952
    7. ' p' → logprob: -4.921882629394531
    8. '3' → logprob: -5.171882629394531
    9. ' ar' → logprob: -5.296882629394531
    10. ' côtés' → logprob: -5.546882629394531

Token 178: '   ' (ID: 271)
  Prédit: ' faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faces' → logprob: -1.181847095489502
    2. ' trois' → logprob: -1.806847095489502
    3. ' ' → logprob: -1.931847095489502
    4. 'faces' → logprob: -2.556847095489502
    5. ' pairs' → logprob: -2.806847095489502
    6. ' [
' → logprob: -3.306847095489502
    7. '[
' → logprob: -3.556847095489502
    8. ' deux' → logprob: -3.806847095489502
    9. ' (' → logprob: -4.306847095489502
    10. '   ' → logprob: -4.806847095489502

Token 179: ' projections' (ID: 74016)
  Prédit: ' faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faces' → logprob: -1.1822469234466553
    2. ' trois' → logprob: -1.5572469234466553
    3. ' pairs' → logprob: -1.6822469234466553
    4. ' ' → logprob: -2.4322469234466553
    5. 'faces' → logprob: -2.9322469234466553
    6. ' p' → logprob: -3.6822469234466553
    7. ' deux' → logprob: -3.6822469234466553
    8. ' comb' → logprob: -3.9322469234466553
    9. ' ar' → logprob: -4.557247161865234
    10. ' (' → logprob: -4.932247161865234

Token 180: ' possibles' (ID: 97753)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.17243008315563202
    2. ' de' → logprob: -2.9224300384521484
    3. ' sur' → logprob: -3.6724300384521484
    4. ' ' → logprob: -4.297430038452148
    5. 'sur' → logprob: -4.547430038452148
    6. ' possible' → logprob: -4.797430038452148
    7. 'de' → logprob: -5.297430038452148
    8. 'des' → logprob: -5.297430038452148
    9. 'possible' → logprob: -5.547430038452148
    10. ')' → logprob: -5.547430038452148

Token 181: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5605712532997131
    2. '   ' → logprob: -1.4355711936950684
    3. '.' → logprob: -2.9355711936950684
    4. ' de' → logprob: -3.3105711936950684
    5. ',' → logprob: -3.4355711936950684
    6. ' )' → logprob: -3.5605711936950684
    7. ' ' → logprob: -5.185571193695068
    8. ').' → logprob: -5.435571193695068
    9. ' des' → logprob: -5.560571193695068
    10. '"' → logprob: -5.685571193695068

Token 182: ' mais' (ID: 2899)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1759921312332153
    2. '   ' → logprob: -1.5509921312332153
    3. ')' → logprob: -2.175992012023926
    4. ''' → logprob: -3.050992012023926
    5. ',' → logprob: -3.300992012023926
    6. '"' → logprob: -3.300992012023926
    7. '#' → logprob: -3.925992012023926
    8. '.' → logprob: -3.925992012023926
    9. '    ' → logprob: -3.925992012023926
    10. ' )' → logprob: -4.300992012023926

Token 183: ' pour' (ID: 1930)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5463190674781799
    2. ' on' → logprob: -2.171319007873535
    3. ' ici' → logprob: -3.046319007873535
    4. ' dans' → logprob: -3.296319007873535
    5. '   ' → logprob: -3.546319007873535
    6. ' le' → logprob: -3.671319007873535
    7. ' pour' → logprob: -3.796319007873535
    8. ' il' → logprob: -3.921319007873535
    9. '  ' → logprob: -4.546319007873535
    10. ' au' → logprob: -4.546319007873535

Token 184: ' simpl' (ID: 15693)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.2704254388809204
    2. ' une' → logprob: -3.145425319671631
    3. ' simpl' → logprob: -3.270425319671631
    4. ' la' → logprob: -3.645425319671631
    5. ' le' → logprob: -3.770425319671631
    6. 'un' → logprob: -3.770425319671631
    7. ' les' → logprob: -3.895425319671631
    8. ' passer' → logprob: -4.020425319671631
    9. ' ce' → logprob: -4.520425319671631
    10. 'le' → logprob: -5.270425319671631

Token 185: 'ifier' (ID: 4550)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3374999165534973
    2. 'es' → logprob: -1.3374998569488525
    3. 'er' → logprob: -5.337500095367432
    4. 'ifier' → logprob: -5.337500095367432
    5. '#' → logprob: -5.462500095367432
    6. 'é' → logprob: -5.962500095367432
    7. 'ement' → logprob: -7.337500095367432
    8. '   ' → logprob: -7.462500095367432
    9. 'ifie' → logprob: -7.712500095367432
    10. ' e' → logprob: -7.837500095367432

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04711279645562172
    2. '   ' → logprob: -3.6721127033233643
    3. ' ,' → logprob: -4.672112941741943
    4. ')' → logprob: -6.172112941741943
    5. ' on' → logprob: -6.297112941741943
    6. ' la' → logprob: -6.922112941741943
    7. ':' → logprob: -7.047112941741943
    8. ' le' → logprob: -7.172112941741943
    9. '),' → logprob: -7.547112941741943
    10. 'le' → logprob: -7.672112941741943

Token 187: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.03047354705631733
    2. ' la' → logprob: -4.030473709106445
    3. ' il' → logprob: -5.655473709106445
    4. '#' → logprob: -6.155473709106445
    5. 'on' → logprob: -6.530473709106445
    6. ' return' → logprob: -6.905473709106445
    7. 'return' → logprob: -7.155473709106445
    8. ' nous' → logprob: -7.280473709106445
    9. 'diam' → logprob: -7.280473709106445
    10. ' we' → logprob: -7.655473709106445

Token 188: ' utilise' (ID: 70283)
  Prédit: ' considère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' considère' → logprob: -0.37495800852775574
    2. ' prend' → logprob: -1.3749580383300781
    3. ' calc' → logprob: -4.499958038330078
    4. ' prendra' → logprob: -4.499958038330078
    5. ' utilise' → logprob: -4.624958038330078
    6. ' prends' → logprob: -4.999958038330078
    7. ' consid' → logprob: -5.374958038330078
    8. ' peut' → logprob: -6.124958038330078
    9. ' considere' → logprob: -6.374958038330078
    10. 'consider' → logprob: -6.374958038330078

Token 189: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.03404974192380905
    2. 'la' → logprob: -3.7840497493743896
    3. ' l' → logprob: -4.7840495109558105
    4. ' math' → logprob: -6.6590495109558105
    5. 'l' → logprob: -7.4090495109558105
    6. 'le' → logprob: -8.659049987792969
    7. ' the' → logprob: -9.284049987792969
    8. 'the' → logprob: -9.784049987792969
    9. 'math' → logprob: -10.534049987792969
    10. 'import' → logprob: -10.784049987792969

Token 190: ' diagon' (ID: 146014)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.5035997033119202
    2. ' diagon' → logprob: -1.2535996437072754
    3. ' diagonal' → logprob: -2.3785996437072754
    4. 'di' → logprob: -4.753599643707275
    5. ' formule' → logprob: -6.628599643707275
    6. ' distance' → logprob: -6.628599643707275
    7. 'plus' → logprob: -6.753599643707275
    8. ' longueur' → logprob: -6.878599643707275
    9. ' diag' → logprob: -7.628599643707275
    10. ' di' → logprob: -8.128600120544434

Token 191: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0002661039761733264
    2. 'al' → logprob: -8.750266075134277
    3. 'o' → logprob: -9.500266075134277
    4. 'a' → logprob: -12.500266075134277
    5. 'g' → logprob: -12.500266075134277
    6. 'og' → logprob: -13.000266075134277
    7. 'on' → logprob: -13.000266075134277
    8. '>' → logprob: -13.250266075134277
    9. 'але' → logprob: -13.250266075134277
    10. '

' → logprob: -13.750266075134277

Token 192: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9110591411590576
    2. ' space' → logprob: -1.4110591411590576
    3. ' d' → logprob: -1.7860591411590576
    4. 'space' → logprob: -3.1610591411590576
    5. ' maximale' → logprob: -3.2860591411590576
    6. ' espace' → logprob: -3.4110591411590576
    7. 'd' → logprob: -4.036059379577637
    8. 'de' → logprob: -4.411059379577637
    9. ' principale' → logprob: -4.661059379577637
    10. ' minimale' → logprob: -4.786059379577637

Token 193: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.969414472579956
    2. ' la' → logprob: -0.969414472579956
    3. 'l' → logprob: -1.969414472579956
    4. ' face' → logprob: -3.094414472579956
    5. 's' → logprob: -4.094414710998535
    6. ' A' → logprob: -4.719414710998535
    7. 'la' → logprob: -5.094414710998535
    8. ' plan' → logprob: -5.469414710998535
    9. 'face' → logprob: -5.594414710998535
    10. ' the' → logprob: -5.969414710998535

Token 194: ' plus' (ID: 2932)
  Prédit: ' face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' face' → logprob: -0.7099039554595947
    2. ' plus' → logprob: -1.2099039554595947
    3. 'face' → logprob: -2.0849039554595947
    4. ' section' → logprob: -2.9599039554595947
    5. 'plus' → logprob: -4.584903717041016
    6. ' base' → logprob: -4.834903717041016
    7. ' ar' → logprob: -5.959903717041016
    8. ' surface' → logprob: -6.209903717041016
    9. ' cube' → logprob: -6.459903717041016
    10. 'section' → logprob: -6.584903717041016

Token 195: '
' (ID: 198)
  Prédit: ' grande'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grande' → logprob: -0.34477698802948
    2. ' longue' → logprob: -2.5947771072387695
    3. 'long' → logprob: -2.7197771072387695
    4. ' petite' → logprob: -2.8447771072387695
    5. 'gr' → logprob: -3.5947771072387695
    6. 'pet' → logprob: -3.5947771072387695
    7. ' long' → logprob: -3.8447771072387695
    8. ' ' → logprob: -5.5947771072387695
    9. ' pet' → logprob: -5.8447771072387695
    10. ' plus' → logprob: -6.2197771072387695

Token 196: '   ' (ID: 271)
  Prédit: ' grande'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grande' → logprob: -0.19972795248031616
    2. 'long' → logprob: -2.949728012084961
    3. ' longue' → logprob: -3.574728012084961
    4. 'gr' → logprob: -4.074728012084961
    5. 'pet' → logprob: -4.074728012084961
    6. ' petite' → logprob: -4.199728012084961
    7. ' plus' → logprob: -4.199728012084961
    8. ' ' → logprob: -4.199728012084961
    9. ' long' → logprob: -5.074728012084961
    10. '```' → logprob: -5.949728012084961

Token 197: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.3292848467826843
    2. 'gr' → logprob: -1.579284906387329
    3. ' petite' → logprob: -2.829284906387329
    4. 'long' → logprob: -5.07928466796875
    5. ' grande' → logprob: -5.57928466796875
    6. 'face' → logprob: -6.82928466796875
    7. 'cour' → logprob: -7.07928466796875
    8. 'small' → logprob: -7.32928466796875
    9. 'grand' → logprob: -7.45428466796875
    10. 'large' → logprob: -7.82928466796875

Token 198: ' face' (ID: 4950)
  Prédit: ' face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' face' → logprob: -0.3513011336326599
    2. 'face' → logprob: -1.2263011932373047
    3. ' ar' → logprob: -6.101301193237305
    4. ' base' → logprob: -7.726301193237305
    5. '_face' → logprob: -10.226301193237305
    6. 'base' → logprob: -10.476301193237305
    7. ' surface' → logprob: -10.851301193237305
    8. 'de' → logprob: -11.101301193237305
    9. 'faces' → logprob: -11.351301193237305
    10. ' des' → logprob: -11.601301193237305

Token 199: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5387924313545227
    2. ')' → logprob: -1.038792371749878
    3. '"""' → logprob: -3.663792371749878
    4. '"' → logprob: -4.413792610168457
    5. '.' → logprob: -4.913792610168457
    6. ' ' → logprob: -5.038792610168457
    7. ' )' → logprob: -6.163792610168457
    8. ',' → logprob: -6.663792610168457
    9. ' """' → logprob: -6.663792610168457
    10. '\n' → logprob: -7.163792610168457

Token 200: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04263165965676308
    2. ').' → logprob: -4.04263162612915
    3. '   ' → logprob: -4.79263162612915
    4. ' )' → logprob: -5.16763162612915
    5. ' ' → logprob: -6.29263162612915
    6. '):' → logprob: -6.29263162612915
    7. '")' → logprob: -6.66763162612915
    8. ' A' → logprob: -6.79263162612915
    9. 'A' → logprob: -7.16763162612915
    10. '),' → logprob: -8.042632102966309

Token 201: 'ôté' (ID: 186537)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1122686862945557
    2. 'ôté' → logprob: -1.3622686862945557
    3. '')' → logprob: -1.7372686862945557
    4. ''' → logprob: -2.6122686862945557
    5. ''est' → logprob: -3.3622686862945557
    6. 'o' → logprob: -3.9872686862945557
    7. 'ont' → logprob: -3.9872686862945557
    8. 'ôt' → logprob: -4.237268447875977
    9. 'e' → logprob: -4.237268447875977
    10. 'a' → logprob: -4.737268447875977

Token 202: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7268056273460388
    2. 'min' → logprob: -2.3518056869506836
    3. ' min' → logprob: -2.3518056869506836
    4. ' )' → logprob: -2.9768056869506836
    5. 'A' → logprob: -3.3518056869506836
    6. ',' → logprob: -3.6018056869506836
    7. ' A' → logprob: -3.8518056869506836
    8. ')**' → logprob: -3.8518056869506836
    9. '_min' → logprob: -4.101805686950684
    10. '   ' → logprob: -4.226805686950684

Token 203: ' côté' (ID: 33533)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20769591629505157
    2. 'pass' → logprob: -1.8326959609985352
    3. 'cot' → logprob: -4.457695960998535
    4. 'passing' → logprob: -5.707695960998535
    5. ' ' → logprob: -5.832695960998535
    6. ' c' → logprob: -6.332695960998535
    7. '   ' → logprob: -6.707695960998535
    8. 'part' → logprob: -6.832695960998535
    9. ' côté' → logprob: -7.082695960998535
    10. '  ' → logprob: -7.457695960998535

Token 204: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018055111169815063
    2. '")' → logprob: -4.268054962158203
    3. ').' → logprob: -6.893054962158203
    4. ')
' → logprob: -7.018054962158203
    5. '   ' → logprob: -7.643054962158203
    6. ' )' → logprob: -8.018054962158203
    7. ' de' → logprob: -8.393054962158203
    8. 'e' → logprob: -9.518054962158203
    9. ' ' → logprob: -9.518054962158203
    10. '"' → logprob: -9.518054962158203

Token 205: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38672494888305664
    2. ')' → logprob: -1.7617249488830566
    3. '"' → logprob: -3.0117249488830566
    4. ' ' → logprob: -3.6367249488830566
    5. ''' → logprob: -3.8867249488830566
    6. ',' → logprob: -5.136724948883057
    7. '    
' → logprob: -5.386724948883057
    8. ' '' → logprob: -5.511724948883057
    9. 'n' → logprob: -5.511724948883057
    10. ' )' → logprob: -5.636724948883057

Token 206: ' le' (ID: 505)
  Prédit: ' passing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passing' → logprob: -0.7061246633529663
    2. ' la' → logprob: -1.4561246633529663
    3. ' c' → logprob: -2.206124782562256
    4. ' le' → logprob: -2.956124782562256
    5. ' passer' → logprob: -3.206124782562256
    6. ' les' → logprob: -4.206124782562256
    7. ' if' → logprob: -4.956124782562256
    8. ' cette' → logprob: -4.956124782562256
    9. ' pass' → logprob: -5.206124782562256
    10. ' cela' → logprob: -5.456124782562256

Token 207: ' trou' (ID: 18706)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.43877366185188293
    2. 'plus' → logprob: -2.3137736320495605
    3. 'from' → logprob: -2.9387736320495605
    4. ' fromage' → logprob: -3.1887736320495605
    5. ' from' → logprob: -3.3137736320495605
    6. ' trou' → logprob: -3.4387736320495605
    7. ' passage' → logprob: -3.6887736320495605
    8. 'che' → logprob: -4.4387736320495605
    9. '```' → logprob: -4.4387736320495605
    10. ' minimum' → logprob: -5.6887736320495605

Token 208: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7882260084152222
    2. ' ' → logprob: -1.6632260084152222
    3. ' peut' → logprob: -1.9132260084152222
    4. ' est' → logprob: -2.2882261276245117
    5. ' doit' → logprob: -3.1632261276245117
    6. ' )' → logprob: -4.038226127624512
    7. ' a' → logprob: -4.913226127624512
    8. '"' → logprob: -4.913226127624512
    9. 'est' → logprob: -5.413226127624512
    10. 's' → logprob: -5.913226127624512

Token 209: ' circul' (ID: 20568)
  Prédit: ' circul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' circul' → logprob: -0.09547693282365799
    2. 'cir' → logprob: -2.5954768657684326
    3. ' circular' → logprob: -4.845477104187012
    4. 'c' → logprob: -4.970477104187012
    5. ' rond' → logprob: -7.470477104187012
    6. 's' → logprob: -8.970477104187012
    7. ' toujours' → logprob: -8.970477104187012
    8. 'circle' → logprob: -9.095477104187012
    9. ' un' → logprob: -9.595477104187012
    10. ' circle' → logprob: -9.845477104187012

Token 210: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.0001645644661039114
    2. 'a' → logprob: -9.375164985656738
    3. 'e' → logprob: -10.500164985656738
    4. 'air' → logprob: -10.500164985656738
    5. 'é' → logprob: -12.125164985656738
    6. 'ier' → logprob: -12.375164985656738
    7. 'ire' → logprob: -12.500164985656738
    8. 'ière' → logprob: -12.625164985656738
    9. 'er' → logprob: -12.875164985656738
    10. ' aire' → logprob: -13.250164985656738

Token 211: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5624210834503174
    2. '.' → logprob: -1.4374210834503174
    3. ')' → logprob: -1.8124210834503174
    4. ',' → logprob: -4.812420845031738
    5. ').' → logprob: -4.812420845031738
    6. '"""' → logprob: -6.312420845031738
    7. ':' → logprob: -6.437420845031738
    8. '):' → logprob: -6.687420845031738
    9. '#' → logprob: -6.812420845031738
    10. '  ' → logprob: -6.937420845031738

Token 212: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04837148264050484
    2. ')' → logprob: -3.7983715534210205
    3. '"""' → logprob: -4.298371315002441
    4. '    ' → logprob: -5.798371315002441
    5. ' """' → logprob: -5.798371315002441
    6. '"' → logprob: -6.298371315002441
    7. ' )' → logprob: -6.673371315002441
    8. ' ' → logprob: -7.548371315002441
    9. '  ' → logprob: -8.173371315002441
    10. ' "' → logprob: -8.423371315002441

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00998508557677269
    2. '"""' → logprob: -4.884984970092773
    3. '    ' → logprob: -6.259984970092773
    4. '    
' → logprob: -8.759984970092773
    5. ' """' → logprob: -9.509984970092773
    6. ')' → logprob: -9.759984970092773
    7. '""' → logprob: -10.009984970092773
    8. '"' → logprob: -10.759984970092773
    9. '"""
' → logprob: -10.884984970092773
    10. 'La' → logprob: -11.384984970092773

Token 214: ' En' (ID: 2130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2855817973613739
    2. ' smallest' → logprob: -1.9105818271636963
    3. ' min' → logprob: -3.6605818271636963
    4. 'min' → logprob: -3.6605818271636963
    5. '#' → logprob: -4.285581588745117
    6. 'small' → logprob: -4.910581588745117
    7. '"""' → logprob: -5.535581588745117
    8. '    
' → logprob: -5.660581588745117
    9. '    ' → logprob: -6.035581588745117
    10. ' """' → logprob: -6.160581588745117

Token 215: ' fait' (ID: 7473)
  Prédit: ' résumé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' résumé' → logprob: -0.9870308637619019
    2. 'suite' → logprob: -1.3620308637619019
    3. ' continu' → logprob: -1.8620308637619019
    4. ' calcul' → logprob: -3.4870309829711914
    5. ' gros' → logprob: -3.4870309829711914
    6. ' effet' → logprob: -3.6120309829711914
    7. ' pratique' → logprob: -3.9870309829711914
    8. ' utilisant' → logprob: -4.487030982971191
    9. 'def' → logprob: -4.487030982971191
    10. ' considér' → logprob: -4.737030982971191

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018353492487221956
    2. ' ,' → logprob: -6.626835346221924
    3. '   ' → logprob: -8.126835823059082
    4. '#' → logprob: -9.876835823059082
    5. '  ' → logprob: -10.001835823059082
    6. ',
' → logprob: -10.626835823059082
    7. 'def' → logprob: -11.376835823059082
    8. ' la' → logprob: -11.376835823059082
    9. '```' → logprob: -11.626835823059082
    10. ' ' → logprob: -12.001835823059082

Token 217: ' ici' (ID: 27994)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.2017703652381897
    2. ' la' → logprob: -1.951770305633545
    3. '    ' → logprob: -4.951770305633545
    4. ' il' → logprob: -4.951770305633545
    5. ' pour' → logprob: -5.451770305633545
    6. ' if' → logprob: -5.826770305633545
    7. ' ' → logprob: -5.826770305633545
    8. ' le' → logprob: -5.951770305633545
    9. ' for' → logprob: -6.076770305633545
    10. ' nous' → logprob: -6.076770305633545

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019528718665242195
    2. ' on' → logprob: -4.144528865814209
    3. 'on' → logprob: -6.894528865814209
    4. '   ' → logprob: -7.019528865814209
    5. ' ,' → logprob: -7.019528865814209
    6. ' la' → logprob: -8.51952838897705
    7. '#' → logprob: -9.51952838897705
    8. 'nous' → logprob: -9.76952838897705
    9. ',on' → logprob: -10.01952838897705
    10. ' nous' → logprob: -10.14452838897705

Token 219: ' puisqu' (ID: 97464)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.04114014282822609
    2. ' la' → logprob: -3.416140079498291
    3. ' il' → logprob: -6.166140079498291
    4. ' le' → logprob: -6.541140079498291
    5. ' nous' → logprob: -6.916140079498291
    6. 'on' → logprob: -7.416140079498291
    7. ' we' → logprob: -7.666140079498291
    8. ' pour' → logprob: -7.916140079498291
    9. ' for' → logprob: -8.16614055633545
    10. ' l' → logprob: -8.66614055633545

Token 220: ''on' (ID: 25812)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8426933288574219
    2. ' la' → logprob: -1.4676933288574219
    3. ' on' → logprob: -1.9676933288574219
    4. 'le' → logprob: -2.217693328857422
    5. ' l' → logprob: -4.092693328857422
    6. 'on' → logprob: -4.092693328857422
    7. ' nous' → logprob: -4.217693328857422
    8. ' we' → logprob: -4.717693328857422
    9. '   ' → logprob: -5.092693328857422
    10. ' les' → logprob: -5.342693328857422

Token 221: ' peut' (ID: 9216)
  Prédit: ' considère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' considère' → logprob: -0.4557182490825653
    2. 'cons' → logprob: -2.2057182788848877
    3. ' peut' → logprob: -3.0807182788848877
    4. 'pe' → logprob: -3.2057182788848877
    5. 'a' → logprob: -3.3307182788848877
    6. 'ne' → logprob: -4.080718040466309
    7. ' parle' → logprob: -4.330718040466309
    8. ' ne' → logprob: -4.705718040466309
    9. ' calc' → logprob: -4.705718040466309
    10. ' a' → logprob: -4.830718040466309

Token 222: ' orient' (ID: 13198)
  Prédit: ' orient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orient' → logprob: -1.1649612188339233
    2. 'orient' → logprob: -1.1649612188339233
    3. ' tourner' → logprob: -1.4149612188339233
    4. ' passer' → logprob: -2.539961338043213
    5. 'pass' → logprob: -3.914961338043213
    6. ' faire' → logprob: -5.289961338043213
    7. ' le' → logprob: -5.539961338043213
    8. ' piv' → logprob: -5.789961338043213
    9. ' l' → logprob: -5.914961338043213
    10. 'tour' → logprob: -6.039961338043213

Token 223: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -2.7610454708337784e-05
    2. 'e' → logprob: -11.750027656555176
    3. '   ' → logprob: -12.000027656555176
    4. 'rer' → logprob: -12.500027656555176
    5. 'é' → logprob: -12.875027656555176
    6. '-' → logprob: -13.625027656555176
    7. 'al' → logprob: -13.875027656555176
    8. '#' → logprob: -14.250027656555176
    9. 'r' → logprob: -14.250027656555176
    10. '=' → logprob: -14.375027656555176

Token 224: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6782848834991455
    2. ' la' → logprob: -1.1782848834991455
    3. 'le' → logprob: -1.9282848834991455
    4. 'la' → logprob: -4.053284645080566
    5. ' les' → logprob: -5.053284645080566
    6. ' dans' → logprob: -5.553284645080566
    7. ' l' → logprob: -6.303284645080566
    8. ' the' → logprob: -6.303284645080566
    9. 'dans' → logprob: -6.803284645080566
    10. ' au' → logprob: -6.928284645080566

Token 225: ' fromage' (ID: 167520)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04577126353979111
    2. ' fromage' → logprob: -3.670771360397339
    3. ' from' → logprob: -4.92077112197876
    4. 'par' → logprob: -5.17077112197876
    5. 'cube' → logprob: -6.42077112197876
    6. 'bloc' → logprob: -6.54577112197876
    7. '#' → logprob: -7.17077112197876
    8. 'che' → logprob: -7.54577112197876
    9. ' morceau' → logprob: -7.54577112197876
    10. 'cam' → logprob: -8.795771598815918

Token 226: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.3252650499343872
    2. 'dans' → logprob: -1.8252650499343872
    3. ' de' → logprob: -2.7002649307250977
    4. ',' → logprob: -4.200264930725098
    5. ' pour' → logprob: -4.325264930725098
    6. ' en' → logprob: -5.825264930725098
    7. 'pour' → logprob: -5.825264930725098
    8. ' sur' → logprob: -6.200264930725098
    9. 'de' → logprob: -6.200264930725098
    10. 'en' → logprob: -7.075264930725098

Token 227: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.019477862864732742
    2. 'n' → logprob: -4.019477844238281
    3. 'l' → logprob: -7.519477844238281
    4. ' l' → logprob: -8.769477844238281
    5. 't' → logprob: -8.894477844238281
    6. ' ' → logprob: -8.894477844238281
    7. ' any' → logprob: -9.269477844238281
    8. ' toutes' → logprob: -9.394477844238281
    9. ' quelcon' → logprob: -10.769477844238281
    10. 'une' → logprob: -10.894477844238281

Token 228: ''importe' (ID: 103032)
  Prédit: 'importe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'importe' → logprob: -0.4778023362159729
    2. ''importe' → logprob: -0.9778023362159729
    3. 'import' → logprob: -5.727802276611328
    4. ''import' → logprob: -8.602802276611328
    5. ''' → logprob: -8.977802276611328
    6. 'imp' → logprob: -9.852802276611328
    7. ''imp' → logprob: -10.977802276611328
    8. '’importe' → logprob: -11.102802276611328
    9. '%' → logprob: -11.852802276611328
    10. 'ulle' → logprob: -12.352802276611328

Token 229: ' quel' (ID: 10613)
  Prédit: ' quelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' quelle' → logprob: -0.3568505346775055
    2. 'quelle' → logprob: -1.481850504875183
    3. '   ' → logprob: -2.8568506240844727
    4. '  ' → logprob: -5.856850624084473
    5. 'une' → logprob: -5.856850624084473
    6. ' direction' → logprob: -5.981850624084473
    7. 'quel' → logprob: -5.981850624084473
    8. ' ' → logprob: -6.606850624084473
    9. 'direction' → logprob: -6.731850624084473
    10. '       ' → logprob: -7.731850624084473

Token 230: ' angle' (ID: 16538)
  Prédit: ' sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sens' → logprob: -0.28126031160354614
    2. ' direction' → logprob: -2.6562602519989014
    3. 'direction' → logprob: -2.6562602519989014
    4. 'sens' → logprob: -2.7812602519989014
    5. 'angle' → logprob: -3.6562602519989014
    6. ' angle' → logprob: -4.5312604904174805
    7. 'dire' → logprob: -6.2812604904174805
    8. ' orientation' → logprob: -6.2812604904174805
    9. 'orientation' → logprob: -6.5312604904174805
    10. 'plan' → logprob: -8.53126049041748

Token 231: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008380175568163395
    2. ' ,' → logprob: -4.88338041305542
    3. '   ' → logprob: -8.508379936218262
    4. ' entre' → logprob: -9.008379936218262
    5. ',
' → logprob: -9.133379936218262
    6. ' de' → logprob: -9.383379936218262
    7. ' possible' → logprob: -9.758379936218262
    8. 'possible' → logprob: -10.008379936218262
    9. '),' → logprob: -11.133379936218262
    10. 'de' → logprob: -11.383379936218262

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5331063866615295
    2. ' on' → logprob: -1.1581063270568848
    3. ' il' → logprob: -3.2831063270568848
    4. ' la' → logprob: -3.4081063270568848
    5. 'on' → logprob: -4.783106327056885
    6. '#' → logprob: -5.033106327056885
    7. 'la' → logprob: -5.408106327056885
    8. 'il' → logprob: -6.033106327056885
    9. 'nous' → logprob: -6.408106327056885
    10. ' le' → logprob: -6.533106327056885

Token 233: ' le' (ID: 505)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5719563364982605
    2. ' la' → logprob: -1.3219563961029053
    3. ' il' → logprob: -2.5719563961029053
    4. '#' → logprob: -3.6969563961029053
    5. 'on' → logprob: -3.6969563961029053
    6. '   ' → logprob: -4.196956157684326
    7. 'la' → logprob: -4.446956157684326
    8. ' le' → logprob: -5.071956157684326
    9. 'le' (adapté à ' le') → logprob: -5.821956157684326
    10. 'il' → logprob: -5.946956157684326

Token 234: ' rayon' (ID: 80967)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.3156086802482605
    2. 'plus' → logprob: -2.4406087398529053
    3. 'diam' → logprob: -2.5656087398529053
    4. 'di' → logprob: -3.5656087398529053
    5. ' diagonal' → logprob: -3.6906087398529053
    6. ' minimal' → logprob: -4.815608501434326
    7. ' smallest' → logprob: -4.940608501434326
    8. ' diamètre' → logprob: -5.315608501434326
    9. ' min' → logprob: -5.440608501434326
    10. 'd' → logprob: -5.565608501434326

Token 235: ' minimal' (ID: 19957)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.5154547691345215
    2. ' minimal' → logprob: -1.3904547691345215
    3. ' maximal' → logprob: -2.2654547691345215
    4. ' minimum' → logprob: -3.7654547691345215
    5. ' max' → logprob: -5.2654547691345215
    6. ' doit' → logprob: -5.3904547691345215
    7. ' est' → logprob: -6.0154547691345215
    8. ' peut' → logprob: -6.1404547691345215
    9. ' de' → logprob: -6.3904547691345215
    10. 'minimum' → logprob: -6.6404547691345215

Token 236: ' nécessaire' (ID: 43098)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.37070900201797485
    2. ' nécessaire' → logprob: -2.49570894241333
    3. ' minimal' → logprob: -2.74570894241333
    4. 'du' → logprob: -2.99570894241333
    5. ' de' → logprob: -3.49570894241333
    6. ' d' → logprob: -4.49570894241333
    7. 'de' → logprob: -4.62070894241333
    8. ' est' → logprob: -4.74570894241333
    9. ' minimum' → logprob: -5.12070894241333
    10. ' possible' → logprob: -5.24570894241333

Token 237: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.7763234376907349
    2. ' pour' → logprob: -1.1513234376907349
    3. ' ' → logprob: -2.0263233184814453
    4. ' de' → logprob: -3.4013233184814453
    5. 'pour' → logprob: -3.5263233184814453
    6. ' du' → logprob: -5.026323318481445
    7. ' à' → logprob: -5.526323318481445
    8. ')' → logprob: -5.651323318481445
    9. ',' → logprob: -6.026323318481445
    10. ' to' → logprob: -6.276323318481445

Token 238: ' la' (ID: 557)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.04931227117776871
    2. ' au' → logprob: -3.1743123531341553
    3. 'math' → logprob: -5.924312114715576
    4. ' max' → logprob: -6.799312114715576
    5. ' la' → logprob: -7.299312114715576
    6. ' min' → logprob: -7.299312114715576
    7. '   ' → logprob: -8.299312591552734
    8. ' at' → logprob: -8.424312591552734
    9. 'au' → logprob: -8.799312591552734
    10. ' =' → logprob: -9.049312591552734

Token 239: ' moitié' (ID: 93216)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.677485466003418
    2. ' math' → logprob: -0.802485466003418
    3. ' mo' → logprob: -4.302485466003418
    4. ' min' → logprob: -4.802485466003418
    5. ' moitié' → logprob: -5.177485466003418
    6. ' demi' → logprob: -5.552485466003418
    7. ' ' → logprob: -6.052485466003418
    8. ' half' → logprob: -6.552485466003418
    9. ' diagon' → logprob: -6.552485466003418
    10. ' diagonal' → logprob: -6.677485466003418

Token 240: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4468746781349182
    2. ' du' → logprob: -1.5718746185302734
    3. '*' → logprob: -2.5718746185302734
    4. 'de' → logprob: -3.1968746185302734
    5. 'import' → logprob: -4.321874618530273
    6. ' *' → logprob: -5.196874618530273
    7. '   ' → logprob: -5.446874618530273
    8. 'du' → logprob: -5.821874618530273
    9. ' ' → logprob: -6.446874618530273
    10. ' d' → logprob: -6.446874618530273

Token 241: ' la' (ID: 557)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.8858587741851807
    2. ' math' → logprob: -1.2608587741851807
    3. ' la' → logprob: -1.3858587741851807
    4. 'la' → logprob: -3.6358587741851807
    5. '(math' → logprob: -4.260858535766602
    6. 'l' → logprob: -5.385858535766602
    7. ' l' → logprob: -5.760858535766602
    8. ' A' → logprob: -6.885858535766602
    9. ' (' → logprob: -7.010858535766602
    10. ' ' → logprob: -7.260858535766602

Token 242: ' diagon' (ID: 146014)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.8704327344894409
    2. ' math' → logprob: -1.120432734489441
    3. ' diagon' → logprob: -2.1204328536987305
    4. 'math' → logprob: -2.6204328536987305
    5. ' diagonal' → logprob: -3.7454328536987305
    6. ' di' → logprob: -3.7454328536987305
    7. ' plus' → logprob: -5.1204328536987305
    8. '(math' → logprob: -6.6204328536987305
    9. 'diam' → logprob: -6.6204328536987305
    10. ' diag' → logprob: -6.9954328536987305

Token 243: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -7.703443770878948e-06
    2. 'al' → logprob: -13.500007629394531
    3. 'nale' → logprob: -13.500007629394531
    4. 'але' → logprob: -14.000007629394531
    5. 'a' → logprob: -14.125007629394531
    6. 'on' → logprob: -14.375007629394531
    7. 'g' → logprob: -14.750007629394531
    8. 'o' → logprob: -14.750007629394531
    9. 'le' → logprob: -15.000007629394531
    10. '>' → logprob: -15.625007629394531

Token 244: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.38945743441581726
    2. ' d' → logprob: -2.5144574642181396
    3. '   ' → logprob: -2.6394574642181396
    4. '_' → logprob: -3.3894574642181396
    5. ' du' → logprob: -3.3894574642181396
    6. ')' → logprob: -4.0144572257995605
    7. ' _' → logprob: -4.3894572257995605
    8. ' minimale' → logprob: -4.3894572257995605
    9. ' )' → logprob: -4.8894572257995605
    10. ' ' → logprob: -5.0144572257995605

Token 245: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4417906701564789
    2. ' l' → logprob: -1.6917906999588013
    3. 'l' → logprob: -2.3167905807495117
    4. ' A' → logprob: -2.9417905807495117
    5. 'A' → logprob: -4.441790580749512
    6. 'la' → logprob: -5.441790580749512
    7. ' ' → logprob: -6.441790580749512
    8. ' B' → logprob: -7.691790580749512
    9. 'le' → logprob: -7.941790580749512
    10. ' (' → logprob: -8.191790580749512

Token 246: ''ar' (ID: 54307)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.039964400231838226
    2. ' plus' → logprob: -4.414964199066162
    3. ' a' → logprob: -4.789964199066162
    4. 'e' → logprob: -5.289964199066162
    5. ''' → logprob: -5.289964199066162
    6. ''a' → logprob: -5.664964199066162
    7. ''''' → logprob: -6.914964199066162
    8. ''espace' → logprob: -7.539964199066162
    9. ' face' → logprob: -7.789964199066162
    10. ' from' → logprob: -8.16496467590332

Token 247: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.06915824860334396
    2. 'r' → logprob: -3.5691583156585693
    3. 'ê' → logprob: -4.31915807723999
    4. 'êt' → logprob: -4.94415807723999
    5. 'c' → logprob: -5.31915807723999
    6. 'é' → logprob: -5.56915807723999
    7. 'ète' → logprob: -5.81915807723999
    8. 'Ê' → logprob: -6.81915807723999
    9. 'e' → logprob: -7.19415807723999
    10. 't' → logprob: -7.56915807723999

Token 248: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6631371974945068
    2. ' du' → logprob: -1.7881371974945068
    3. ' oppos' → logprob: -2.038137197494507
    4. ' d' → logprob: -2.663137197494507
    5. '_' → logprob: -2.663137197494507
    6. ' de' → logprob: -2.788137197494507
    7. ' cube' → logprob: -3.288137197494507
    8. '   ' → logprob: -3.413137197494507
    9. ' ' → logprob: -3.413137197494507
    10. '"' → logprob: -3.538137197494507

Token 249: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.2049170434474945
    2. 'p' → logprob: -3.2049169540405273
    3. '+' → logprob: -3.3299169540405273
    4. 'plus' → logprob: -3.4549169540405273
    5. 'pp' → logprob: -3.8299169540405273
    6. 'ng' → logprob: -4.454916954040527
    7. 'n' → logprob: -5.829916954040527
    8. 't' → logprob: -5.954916954040527
    9. ' supérieure' → logprob: -5.954916954040527
    10. '  ' → logprob: -6.204916954040527

Token 250: '
' (ID: 198)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.21026478707790375
    2. 'cour' → logprob: -2.4602646827697754
    3. 'gr' → logprob: -3.4602646827697754
    4. ' longue' → logprob: -3.7102646827697754
    5. 'pet' → logprob: -3.7102646827697754
    6. ' long' → logprob: -4.585264682769775
    7. ' courte' → logprob: -5.460264682769775
    8. 'short' → logprob: -6.210264682769775
    9. ' ' → logprob: -6.585264682769775
    10. 'court' → logprob: -6.585264682769775

Token 251: '   ' (ID: 271)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.02074531465768814
    2. ' longue' → logprob: -4.270745277404785
    3. 'gr' → logprob: -5.895745277404785
    4. 'cour' → logprob: -6.770745277404785
    5. ' long' → logprob: -7.020745277404785
    6. ' ' → logprob: -7.520745277404785
    7. 'lo' → logprob: -7.895745277404785
    8. 'lon' → logprob: -8.145745277404785
    9. 'large' → logprob: -9.270745277404785
    10. '  ' → logprob: -9.645745277404785

Token 252: ' longue' (ID: 59564)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.08217090368270874
    2. 'cour' → logprob: -2.7071709632873535
    3. 'gr' → logprob: -5.3321709632873535
    4. 'pet' → logprob: -5.5821709632873535
    5. ' longue' → logprob: -5.8321709632873535
    6. 'large' → logprob: -9.082170486450195
    7. 'lo' → logprob: -9.457170486450195
    8. 'court' → logprob: -9.457170486450195
    9. 'lon' → logprob: -9.957170486450195
    10. ' courte' → logprob: -9.957170486450195

Token 253: ' possible' (ID: 4149)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8507243394851685
    2. ',' → logprob: -1.4757243394851685
    3. ' de' → logprob: -2.475724220275879
    4. ' ' → logprob: -2.600724220275879
    5. ')' → logprob: -3.350724220275879
    6. ' ,' → logprob: -3.600724220275879
    7. ' d' → logprob: -4.600724220275879
    8. ' (' → logprob: -4.725724220275879
    9. ' )' → logprob: -4.850724220275879
    10. '```' → logprob: -4.975724220275879

Token 254: ' projet' (ID: 13551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.092017650604248
    2. '   ' → logprob: -1.342017650604248
    3. ',' → logprob: -1.717017650604248
    4. ' de' → logprob: -2.217017650604248
    5. ')' → logprob: -3.592017650604248
    6. ' d' → logprob: -4.092017650604248
    7. ' (' → logprob: -4.592017650604248
    8. ' ,' → logprob: -4.842017650604248
    9. ' du' → logprob: -4.842017650604248
    10. ':' → logprob: -5.217017650604248

Token 255: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.03379565104842186
    2. 'é' → logprob: -3.4087955951690674
    3. 'ee' → logprob: -9.033795356750488
    4. 'ées' → logprob: -11.533795356750488
    5. 'e' → logprob: -12.408795356750488
    6. 'É' → logprob: -12.783795356750488
    7. '#' → logprob: -13.033795356750488
    8. '�' → logprob: -13.658795356750488
    9. ' é' → logprob: -13.783795356750488
    10. 'è' → logprob: -14.158795356750488

Token 256: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.597938597202301
    2. '   ' → logprob: -2.5979385375976562
    3. ' de' → logprob: -2.9729385375976562
    4. '):' → logprob: -2.9729385375976562
    5. ':' → logprob: -3.0979385375976562
    6. ' )' → logprob: -3.2229385375976562
    7. ' ' → logprob: -3.3479385375976562
    8. ' sur' → logprob: -3.3479385375976562
    9. '.' → logprob: -3.7229385375976562
    10. ',' → logprob: -4.222938537597656

Token 257: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07506217807531357
    2. ')' → logprob: -2.7000622749328613
    3. 'def' → logprob: -6.575062274932861
    4. ')
' → logprob: -7.325062274932861
    5. ' )' → logprob: -7.575062274932861
    6. '"' → logprob: -7.825062274932861
    7. '"""' → logprob: -7.825062274932861
    8. '    
' → logprob: -7.950062274932861
    9. ',' → logprob: -8.450061798095703
    10. '")' → logprob: -8.575061798095703

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0177073422819376
    2. ')' → logprob: -4.392707347869873
    3. '    ' → logprob: -6.142707347869873
    4. '"""' → logprob: -6.517707347869873
    5. ' """' → logprob: -7.517707347869873
    6. ' )' → logprob: -7.517707347869873
    7. 'def' → logprob: -9.142706871032715
    8. '    
' → logprob: -9.892706871032715
    9. 'n' → logprob: -9.892706871032715
    10. ' ")' → logprob: -10.142706871032715

Token 259: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48610028624534607
    2. 'max' → logprob: -1.6111003160476685
    3. ' max' → logprob: -2.736100196838379
    4. '#' → logprob: -3.111100196838379
    5. 'min' → logprob: -4.486100196838379
    6. '
' → logprob: -4.986100196838379
    7. '"""' → logprob: -4.986100196838379
    8. ' diagonal' → logprob: -5.361100196838379
    9. ' min' → logprob: -5.486100196838379
    10. '    
' → logprob: -5.486100196838379

Token 260: 'éanmoins' (ID: 176785)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.35760995745658875
    2. '   ' → logprob: -2.732609987258911
    3. 'e' → logprob: -3.232609987258911
    4. 'ext' → logprob: -3.232609987258911
    5. 'é' → logprob: -3.607609987258911
    6. 'orm' → logprob: -3.732609987258911
    7. 'import' → logprob: -4.107609748840332
    8. 'orme' → logprob: -4.357609748840332
    9. 'o' → logprob: -5.107609748840332
    10. '
' → logprob: -5.232609748840332

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007976976223289967
    2. ' ,' → logprob: -5.50797700881958
    3. '   ' → logprob: -5.75797700881958
    4. ':' → logprob: -7.88297700881958
    5. 'def' → logprob: -8.882976531982422
    6. ',
' → logprob: -9.632976531982422
    7. '#' → logprob: -10.632976531982422
    8. ' ' → logprob: -10.882976531982422
    9. ' la' → logprob: -10.882976531982422
    10. ' :' → logprob: -11.257976531982422

Token 262: ' la' (ID: 557)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.907288134098053
    2. ' la' → logprob: -1.1572880744934082
    3. '   ' → logprob: -2.407288074493408
    4. '    ' → logprob: -3.157288074493408
    5. ' je' → logprob: -3.657288074493408
    6. ' return' → logprob: -4.157288074493408
    7. ' le' → logprob: -4.157288074493408
    8. ' ' → logprob: -4.657288074493408
    9. ' il' → logprob: -4.657288074493408
    10. ' ' → logprob: -4.657288074493408

Token 263: ' solution' (ID: 7578)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.3733973503112793
    2. 'plus' → logprob: -1.4983973503112793
    3. ' meilleure' → logprob: -2.2483973503112793
    4. '#' → logprob: -2.4983973503112793
    5. ' diagonal' → logprob: -2.4983973503112793
    6. '   ' → logprob: -2.8733973503112793
    7. 'me' → logprob: -3.3733973503112793
    8. 'distance' → logprob: -3.6233973503112793
    9. 'di' → logprob: -3.6233973503112793
    10. 'def' → logprob: -4.248397350311279

Token 264: ' la' (ID: 557)
  Prédit: ' complète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complète' → logprob: -0.8989582061767578
    2. ' =' → logprob: -1.3989582061767578
    3. ' optimale' → logprob: -2.148958206176758
    4. ' est' → logprob: -2.148958206176758
    5. ' la' → logprob: -3.648958206176758
    6. ' finale' → logprob: -4.398958206176758
    7. ' continue' → logprob: -4.523958206176758
    8. 'import' → logprob: -4.773958206176758
    9. '=' → logprob: -5.148958206176758
    10. '   ' → logprob: -5.398958206176758

Token 265: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.49859166145324707
    2. 's' → logprob: -1.998591661453247
    3. 'est' → logprob: -2.123591661453247
    4. 'st' → logprob: -2.748591661453247
    5. 'sera' → logprob: -4.373591423034668
    6. '#' → logprob: -4.623591423034668
    7. ''est' → logprob: -5.373591423034668
    8. 'continue' → logprob: -5.373591423034668
    9. 'n' → logprob: -5.623591423034668
    10. 'do' → logprob: -5.748591423034668

Token 266: ' simple' (ID: 4705)
  Prédit: 'simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simple' → logprob: -0.03625467047095299
    2. ' simple' → logprob: -3.536254644393921
    3. 'optim' → logprob: -6.1612548828125
    4. '```' → logprob: -6.9112548828125
    5. 's' → logprob: -7.5362548828125
    6. 'sim' → logprob: -7.5362548828125
    7. 'simpl' → logprob: -7.5362548828125
    8. 'pr' → logprob: -7.7862548828125
    9. 'é' → logprob: -8.2862548828125
    10. 'prob' → logprob: -8.2862548828125

Token 267: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.035523101687431335
    2. 'est' → logprob: -3.9105231761932373
    3. ':' → logprob: -5.160522937774658
    4. ' ' → logprob: -5.535522937774658
    5. ' consiste' → logprob: -6.910522937774658
    6. '   ' → logprob: -7.035522937774658
    7. ' :' → logprob: -7.035522937774658
    8. ',' → logprob: -7.285522937774658
    9. ' is' → logprob: -7.785522937774658
    10. ' reste' → logprob: -8.160523414611816

Token 268: ' :
' (ID: 10039)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.24319316446781158
    2. '   ' → logprob: -1.6181931495666504
    3. '    ' → logprob: -4.99319314956665
    4. ' d' → logprob: -4.99319314956665
    5. 'de' → logprob: -5.86819314956665
    6. ' math' → logprob: -7.74319314956665
    7. 'd' → logprob: -8.243193626403809
    8. 'def' → logprob: -8.618193626403809
    9. '  ' → logprob: -9.493193626403809
    10. ':' → logprob: -9.493193626403809

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002547719981521368
    2. '    ' → logprob: -6.627547740936279
    3. '    
' → logprob: -7.002547740936279
    4. '
' → logprob: -10.127547264099121
    5. ' minimal' → logprob: -10.127547264099121
    6. '```' → logprob: -10.252547264099121
    7. ' smallest' → logprob: -10.377547264099121
    8. ' min' → logprob: -10.377547264099121
    9. ' max' → logprob: -10.627547264099121
    10. '#' → logprob: -11.377547264099121

Token 270: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8793281316757202
    2. ' diagonal' → logprob: -1.5043281316757202
    3. ' min' → logprob: -1.8793281316757202
    4. ' max' → logprob: -2.7543282508850098
    5. ' smallest' → logprob: -3.6293282508850098
    6. 'min' → logprob: -3.7543282508850098
    7. ' minimal' → logprob: -4.25432825088501
    8. 'di' → logprob: -4.37932825088501
    9. 'max' → logprob: -4.50432825088501
    10. ' diagon' → logprob: -4.75432825088501

Token 271: ' Calcul' (ID: 57243)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.48979949951171875
    2. ' Calcul' → logprob: -2.6147994995117188
    3. 'calcul' → logprob: -2.6147994995117188
    4. 'Calcul' → logprob: -2.7397994995117188
    5. ' Trou' → logprob: -3.2397994995117188
    6. '   ' → logprob: -3.6147994995117188
    7. 'cal' → logprob: -3.9897994995117188
    8. ' prendre' → logprob: -4.239799499511719
    9. ' de' → logprob: -4.739799499511719
    10. '#' → logprob: -4.864799499511719

Token 272: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00017040544480551034
    2. '   ' → logprob: -9.250170707702637
    3. ' de' → logprob: -10.375170707702637
    4. '#' → logprob: -11.000170707702637
    5. 'ateur' → logprob: -12.125170707702637
    6. 'e' → logprob: -12.250170707702637
    7. 'de' → logprob: -12.500170707702637
    8. 'atrice' → logprob: -12.875170707702637
    9. 'ate' → logprob: -13.000170707702637
    10. 'r' → logprob: -13.125170707702637

Token 273: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.21686476469039917
    2. 'la' → logprob: -1.716864824295044
    3. ' toutes' → logprob: -5.591864585876465
    4. 'les' → logprob: -5.716864585876465
    5. ' les' → logprob: -5.966864585876465
    6. 'le' → logprob: -5.966864585876465
    7. 'l' → logprob: -6.966864585876465
    8. ' le' → logprob: -7.091864585876465
    9. ' l' → logprob: -7.716864585876465
    10. 'di' → logprob: -8.341864585876465

Token 274: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.33676642179489136
    2. 'di' → logprob: -1.3367664813995361
    3. 'min' → logprob: -4.461766242980957
    4. ' plus' → logprob: -5.336766242980957
    5. 'diam' → logprob: -6.586766242980957
    6. 'mo' → logprob: -6.711766242980957
    7. 'import' → logprob: -7.086766242980957
    8. 'minimum' → logprob: -7.336766242980957
    9. 'diag' → logprob: -7.586766242980957
    10. 'max' → logprob: -7.586766242980957

Token 275: ' grande' (ID: 10094)
  Prédit: ' petite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' petite' → logprob: -0.15047740936279297
    2. 'pet' → logprob: -2.150477409362793
    3. ' pet' → logprob: -4.150477409362793
    4. ' petit' → logprob: -5.650477409362793
    5. ' small' → logprob: -5.775477409362793
    6. 'small' → logprob: -8.525477409362793
    7. ' Pet' → logprob: -8.900477409362793
    8. ' grande' → logprob: -8.900477409362793
    9. ' petites' → logprob: -9.025477409362793
    10. '_pet' → logprob: -9.775477409362793

Token 276: ' longueur' (ID: 104613)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.16968101263046265
    2. 'face' → logprob: -2.7946810722351074
    3. ' diagon' → logprob: -2.9196810722351074
    4. ' diagonal' → logprob: -3.5446810722351074
    5. ' face' → logprob: -4.669681072235107
    6. 'dimension' → logprob: -7.419681072235107
    7. ' des' → logprob: -7.669681072235107
    8. '_di' → logprob: -7.919681072235107
    9. ' ar' → logprob: -8.16968059539795
    10. 'ar' → logprob: -8.41968059539795

Token 277: ' diagon' (ID: 146014)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5410892963409424
    2. ' possible' → logprob: -2.7910892963409424
    3. 'di' → logprob: -2.9160892963409424
    4. 'possible' → logprob: -3.1660892963409424
    5. ' parmi' → logprob: -3.5410892963409424
    6. 'des' → logprob: -3.6660892963409424
    7. ' entre' → logprob: -3.9160892963409424
    8. 'd' → logprob: -4.041089057922363
    9. ' de' → logprob: -4.041089057922363
    10. '   ' → logprob: -4.041089057922363

Token 278: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.00013011827832087874
    2. 'le' → logprob: -10.250129699707031
    3. 'al' → logprob: -10.250129699707031
    4. 'nale' → logprob: -11.500129699707031
    5. 'a' → logprob: -11.750129699707031
    6. '>' → logprob: -12.000129699707031
    7. 'але' → logprob: -12.500129699707031
    8. ' ale' → logprob: -13.125129699707031
    9. '#' → logprob: -13.375129699707031
    10. '</' → logprob: -13.375129699707031

Token 279: ' du' (ID: 1462)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.6242601275444031
    2. 'possible' → logprob: -1.4992601871490479
    3. '_possible' → logprob: -2.249260187149048
    4. ' des' → logprob: -3.249260187149048
    5. ' de' → logprob: -3.499260187149048
    6. ' ' → logprob: -4.374259948730469
    7. '   ' → logprob: -4.374259948730469
    8. 'de' → logprob: -4.749259948730469
    9. ' parmi' → logprob: -4.749259948730469
    10. ' entre' → logprob: -5.249259948730469

Token 280: ' parall' (ID: 133906)
  Prédit: ' fromage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fromage' → logprob: -0.9679588675498962
    2. ' cube' → logprob: -1.217958927154541
    3. ' from' → logprob: -1.967958927154541
    4. 'from' → logprob: -2.217958927154541
    5. 'par' → logprob: -3.967958927154541
    6. ' par' → logprob: -4.342958927154541
    7. ' morceau' → logprob: -4.467958927154541
    8. ' paralle' → logprob: -4.592958927154541
    9. 'cube' → logprob: -4.967958927154541
    10. ' rectangle' → logprob: -5.967958927154541

Token 281: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.014979653991758823
    2. 'é' → logprob: -4.514979839324951
    3. 'él' → logprob: -6.389979839324951
    4. 'è' → logprob: -6.514979839324951
    5. 'èl' → logprob: -8.514979362487793
    6. '   ' → logprob: -9.139979362487793
    7. 'èle' → logprob: -9.139979362487793
    8. 'el' → logprob: -9.264979362487793
    9. 'ép' → logprob: -9.514979362487793
    10. 'l' → logprob: -9.889979362487793

Token 282: 'pip' (ID: 113064)
  Prédit: 'pip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pip' → logprob: -7.941850526549388e-06
    2. 'p' → logprob: -12.000007629394531
    3. ' pip' → logprob: -13.500007629394531
    4. 'ip' → logprob: -15.500007629394531
    5. 'lep' → logprob: -17.12500762939453
    6. 'pid' → logprob: -17.37500762939453
    7. 'ép' → logprob: -18.25000762939453
    8. 'pé' → logprob: -18.50000762939453
    9. 'pi' → logprob: -19.12500762939453
    10. 'pin' → logprob: -19.37500762939453

Token 283: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.024075474590063095
    2. 'è' → logprob: -3.774075508117676
    3. 'p' → logprob: -8.149075508117676
    4. 'é' → logprob: -9.399075508117676
    5. '\' → logprob: -9.524075508117676
    6. '`' → logprob: -9.774075508117676
    7. 'h' → logprob: -9.899075508117676
    8. 'ip' → logprob: -10.649075508117676
    9. '"' → logprob: -10.899075508117676
    10. 'de' → logprob: -11.274075508117676

Token 284: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20241855084896088
    2. ' (' → logprob: -2.952418565750122
    3. ' entre' → logprob: -3.827418565750122
    4. ':' → logprob: -4.327418327331543
    5. ' de' → logprob: -4.327418327331543
    6. ' ,' → logprob: -4.577418327331543
    7. '.' → logprob: -4.827418327331543
    8. ' ' → logprob: -4.827418327331543
    9. ' parmi' → logprob: -4.827418327331543
    10. '   ' → logprob: -4.952418327331543

Token 285: ' d' (ID: 272)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.24264918267726898
    2. ' max' → logprob: -2.3676490783691406
    3. ' diagonal' → logprob: -2.9926490783691406
    4. ' d' → logprob: -3.4926490783691406
    5. '   ' → logprob: -4.117649078369141
    6. 'math' → logprob: -4.992649078369141
    7. 'd' → logprob: -5.742649078369141
    8. ' diag' → logprob: -5.867649078369141
    9. 'di' → logprob: -6.117649078369141
    10. ' sqrt' → logprob: -6.117649078369141

Token 286: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18168596923351288
    2. 'i' → logprob: -2.1816859245300293
    3. '=' → logprob: -3.0566859245300293
    4. 'istance' → logprob: -6.306685924530029
    5. 'é' → logprob: -7.181685924530029
    6. '   ' → logprob: -7.306685924530029
    7. 'e' → logprob: -7.806685924530029
    8. '=max' → logprob: -7.806685924530029
    9. ' ' → logprob: -7.931685924530029
    10. 'ist' → logprob: -8.306686401367188

Token 287: ' sqrt' (ID: 44237)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.009775921702384949
    2. ' math' → logprob: -4.6347761154174805
    3. '(math' → logprob: -11.38477611541748
    4. '   ' → logprob: -12.50977611541748
    5. 'max' → logprob: -12.75977611541748
    6. ' ' → logprob: -14.13477611541748
    7. 'sqrt' → logprob: -15.38477611541748
    8. 'ma' → logprob: -15.63477611541748
    9. '\' → logprob: -15.88477611541748
    10. '\xf0\x9d' → logprob: -16.009775161743164

Token 288: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.13028492033481598
    2. '((' → logprob: -2.2552850246429443
    3. '(' → logprob: -4.130284786224365
    4. 'A' → logprob: -7.255284786224365
    5. '(
' → logprob: -7.880284786224365
    6. '(max' → logprob: -9.755285263061523
    7. ' (' → logprob: -10.255285263061523
    8. '(a' → logprob: -11.005285263061523
    9. '(pow' → logprob: -12.005285263061523
    10. '(B' → logprob: -12.130285263061523

Token 289: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.008440817706286907
    2. '2' → logprob: -5.133440971374512
    3. '*' → logprob: -6.633440971374512
    4. '²' → logprob: -6.883440971374512
    5. '^' → logprob: -9.008440971374512
    6. ' **' → logprob: -10.133440971374512
    7. ' ' → logprob: -12.383440971374512
    8. '```' → logprob: -14.008440971374512
    9. ' *' → logprob: -15.133440971374512
    10. '_' → logprob: -15.133440971374512

Token 290: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.135819760151207e-05
    2. ' ' → logprob: -9.75007152557373
    3. '²' → logprob: -12.62507152557373
    4. '   ' → logprob: -13.43757152557373
    5. '
' → logprob: -13.68757152557373
    6. '**' → logprob: -13.75007152557373
    7. '```' → logprob: -13.75007152557373
    8. ',' → logprob: -13.81257152557373
    9. '+' → logprob: -14.00007152557373
    10. ')' → logprob: -14.56257152557373

Token 291: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11302323639392853
    2. '+' → logprob: -2.238023281097412
    3. '   ' → logprob: -8.988022804260254
    4. '+B' → logprob: -9.863022804260254
    5. ' ' → logprob: -11.613022804260254
    6. ',' → logprob: -11.988022804260254
    7. '  ' → logprob: -13.113022804260254
    8. '2' → logprob: -13.488022804260254
    9. ' ' → logprob: -14.238022804260254
    10. '+b' → logprob: -14.238022804260254

Token 292: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10022274404764175
    2. ' B' → logprob: -2.3502228260040283
    3. ' ' → logprob: -11.47522258758545
    4. 'C' → logprob: -12.85022258758545
    5. '   ' → logprob: -13.35022258758545
    6. '	B' → logprob: -13.85022258758545
    7. '  ' → logprob: -14.97522258758545
    8. ' C' → logprob: -15.60022258758545
    9. '2' → logprob: -17.600223541259766
    10. 'b' → logprob: -17.600223541259766

Token 293: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -2.935296834039036e-06
    2. '*' → logprob: -13.37500286102295
    3. '2' → logprob: -14.25000286102295
    4. ' **' → logprob: -14.50000286102295
    5. '^' → logprob: -16.875003814697266
    6. '²' → logprob: -17.250003814697266
    7. '
' → logprob: -17.750003814697266
    8. ' ' → logprob: -18.375003814697266
    9. '**
' → logprob: -19.000003814697266
    10. '**)' → logprob: -19.125003814697266

Token 294: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12422270327806473
    2. 'C' → logprob: -2.374222755432129
    3. '**' → logprob: -3.749222755432129
    4. ' C' → logprob: -8.874222755432129
    5. ' ' → logprob: -10.374222755432129
    6. '²' → logprob: -11.249222755432129
    7. '*C' → logprob: -13.374222755432129
    8. '_C' → logprob: -13.749222755432129
    9. ' **' → logprob: -13.874222755432129
    10. '
' → logprob: -13.999222755432129

Token 295: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1003408133983612
    2. '+' → logprob: -2.3503408432006836
    3. '+C' → logprob: -9.100340843200684
    4. ')' → logprob: -11.225340843200684
    5. ' ' → logprob: -12.850340843200684
    6. '   ' → logprob: -12.850340843200684
    7. '```' → logprob: -13.725340843200684
    8. '**' → logprob: -13.975340843200684
    9. 'C' → logprob: -14.975340843200684
    10. '*' → logprob: -15.100340843200684

Token 296: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.07889099419116974
    2. ' C' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.078890800476074
    4. '   ' → logprob: -15.203890800476074
    5. '  ' → logprob: -15.828890800476074
    6. '	C' → logprob: -16.82889175415039
    7. '*C' → logprob: -18.57889175415039
    8. ')' → logprob: -18.82889175415039
    9. '_C' → logprob: -19.07889175415039
    10. ' ' → logprob: -19.82889175415039

Token 297: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.006048128008842468
    2. '2' → logprob: -5.131048202514648
    3. ')' → logprob: -10.006048202514648
    4. '**)' → logprob: -10.631048202514648
    5. ')**' → logprob: -10.631048202514648
    6. '²' → logprob: -11.256048202514648
    7. ' ' → logprob: -11.756048202514648
    8. ' **' → logprob: -12.881048202514648
    9. '*' → logprob: -13.631048202514648
    10. '^' → logprob: -15.006048202514648

Token 298: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.480199954239652e-05
    2. '**' → logprob: -9.875064849853516
    3. ' ' → logprob: -11.250064849853516
    4. '```' → logprob: -15.875064849853516
    5. ')' → logprob: -16.625064849853516
    6. '*' → logprob: -17.875064849853516
    7. '
' → logprob: -18.000064849853516
    8. '   ' → logprob: -18.125064849853516
    9. '²' → logprob: -18.250064849853516
    10. ' **' → logprob: -18.875064849853516

Token 299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012856863031629473
    2. ' )' → logprob: -9.875128746032715
    3. '   ' → logprob: -10.500128746032715
    4. ')**' → logprob: -10.875128746032715
    5. '))' → logprob: -12.000128746032715
    6. '**' → logprob: -12.125128746032715
    7. ')
' → logprob: -12.375128746032715
    8. '+' → logprob: -13.000128746032715
    9. '),' → logprob: -13.250128746032715
    10. '.' → logprob: -13.875128746032715

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08127634972333908
    2. ')' → logprob: -2.5812764167785645
    3. '    
' → logprob: -7.5812764167785645
    4. ' )' → logprob: -7.9562764167785645
    5. '
' → logprob: -8.206275939941406
    6. 'return' → logprob: -8.831275939941406
    7. '.' → logprob: -8.831275939941406
    8. ',' → logprob: -8.956275939941406
    9. '#' → logprob: -8.956275939941406
    10. ')
' → logprob: -9.081275939941406

Token 301: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2281561642885208
    2. ')' → logprob: -1.6031562089920044
    3. ' )' → logprob: -6.353156089782715
    4. '.' → logprob: -8.728156089782715
    5. ',' → logprob: -8.978156089782715
    6. 'return' → logprob: -9.603156089782715
    7. ')
' → logprob: -9.603156089782715
    8. '    
' → logprob: -9.603156089782715
    9. '#' → logprob: -9.728156089782715
    10. '*' → logprob: -9.978156089782715

Token 302: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7880262136459351
    2. ' return' → logprob: -0.7880262136459351
    3. 'return' → logprob: -3.2880263328552246
    4. ' if' → logprob: -3.6630263328552246
    5. 'Comparer' → logprob: -4.913026332855225
    6. 'if' → logprob: -5.913026332855225
    7. ' comparer' → logprob: -5.913026332855225
    8. ' Retour' → logprob: -6.163026332855225
    9. ' Vér' → logprob: -6.163026332855225
    10. ' retourner' → logprob: -6.538026332855225

Token 303: ' passer' (ID: 27727)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.6967396140098572
    2. 'pass' → logprob: -1.821739673614502
    3. ' le' → logprob: -2.196739673614502
    4. ' passer' → logprob: -2.446739673614502
    5. ' passage' → logprob: -4.196739673614502
    6. ' pass' → logprob: -4.196739673614502
    7. ' chaque' → logprob: -4.196739673614502
    8. 'que' → logprob: -4.321739673614502
    9. ' la' → logprob: -4.446739673614502
    10. 'le' → logprob: -4.446739673614502

Token 304: ' complètement' (ID: 81766)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4935466051101685
    2. ' dans' → logprob: -1.8685466051101685
    3. ' through' → logprob: -1.8685466051101685
    4. ' à' → logprob: -2.368546485900879
    5. ' le' → logprob: -2.493546485900879
    6. ' ' → logprob: -2.493546485900879
    7. 'dans' → logprob: -2.618546485900879
    8. 'le' → logprob: -3.368546485900879
    9. '_' → logprob: -3.368546485900879
    10. ' ,' → logprob: -4.368546485900879

Token 305: ' par' (ID: 686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36486124992370605
    2. 'dans' → logprob: -1.864861249923706
    3. 'à' → logprob: -3.114861249923706
    4. ' à' → logprob: -3.114861249923706
    5. ' dans' → logprob: -3.739861249923706
    6. 'le' → logprob: -3.864861249923706
    7. 'par' → logprob: -5.364861488342285
    8. ' ,' → logprob: -5.489861488342285
    9. ' le' → logprob: -6.239861488342285
    10. ' par' → logprob: -6.364861488342285

Token 306: ' un' (ID: 537)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.25790002942085266
    2. 'le' → logprob: -1.6328999996185303
    3. ' un' → logprob: -3.5078999996185303
    4. 'l' → logprob: -7.507900238037109
    5. ' ' → logprob: -7.507900238037109
    6. 'un' → logprob: -7.632900238037109
    7. ' l' → logprob: -8.50790023803711
    8. ' la' → logprob: -9.88290023803711
    9. 'la' → logprob: -10.75790023803711
    10. ' ' → logprob: -10.75790023803711

Token 307: ' trou' (ID: 18706)
  Prédit: ' trou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trou' → logprob: -0.10327538847923279
    2. 'tr' → logprob: -2.3532752990722656
    3. ' trous' → logprob: -6.603275299072266
    4. ' espace' → logprob: -8.103275299072266
    5. ' hole' → logprob: -8.603275299072266
    6. '```' → logprob: -8.603275299072266
    7. 'hole' → logprob: -8.790775299072266
    8. 'c' → logprob: -9.103275299072266
    9. 't' → logprob: -9.353275299072266
    10. ' cercle' → logprob: -9.540775299072266

Token 308: ' circul' (ID: 20568)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5668730139732361
    2. ' circul' → logprob: -1.3168730735778809
    3. ',' → logprob: -1.9418730735778809
    4. ' ' → logprob: -5.191873073577881
    5. 'de' → logprob: -5.441873073577881
    6. ' ,' → logprob: -5.691873073577881
    7. 'cir' → logprob: -5.691873073577881
    8. ' d' → logprob: -7.066873073577881
    9. 'c' → logprob: -7.316873073577881
    10. ' circular' → logprob: -7.441873073577881

Token 309: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.0007291130605153739
    2. 'air' → logprob: -7.875729084014893
    3. 'are' → logprob: -9.37572956085205
    4. 'a' → logprob: -9.50072956085205
    5. 'ulaire' → logprob: -9.75072956085205
    6. 'e' → logprob: -10.37572956085205
    7. 'culaire' → logprob: -10.75072956085205
    8. '#' → logprob: -11.00072956085205
    9. 'caire' → logprob: -11.50072956085205
    10. 'able' → logprob: -12.50072956085205

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09994910657405853
    2. ' de' → logprob: -2.5999491214752197
    3. 'de' → logprob: -4.224948883056641
    4. ' ,' → logprob: -5.224948883056641
    5. ' ' → logprob: -7.849948883056641
    6. 'd' → logprob: -9.09994888305664
    7. ',
' → logprob: -9.22494888305664
    8. ' of' → logprob: -9.47494888305664
    9. ' d' → logprob: -10.47494888305664
    10. '#' → logprob: -10.72494888305664

Token 311: ' il' (ID: 1793)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.42526617646217346
    2. ' il' → logprob: -1.425266146659851
    3. ' la' → logprob: -2.9252662658691406
    4. 'le' → logprob: -3.4252662658691406
    5. '   ' → logprob: -4.800266265869141
    6. ' on' → logprob: -5.550266265869141
    7. ' the' → logprob: -5.925266265869141
    8. 'diam' → logprob: -7.050266265869141
    9. ' d' → logprob: -7.300266265869141
    10. 'il' → logprob: -7.425266265869141

Token 312: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.3914974629878998
    2. 'f' → logprob: -1.1414974927902222
    3. ' faudrait' → logprob: -6.266497611999512
    4. ' doit' → logprob: -7.016497611999512
    5. '_f' → logprob: -7.641497611999512
    6. 'fa' → logprob: -8.016497611999512
    7. ' faudra' → logprob: -8.016497611999512
    8. '_' → logprob: -8.891497611999512
    9. '-' → logprob: -9.391497611999512
    10. ' suffit' → logprob: -9.641497611999512

Token 313: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.006677005439996719
    2. '   ' → logprob: -5.881677150726318
    3. 'diam' → logprob: -6.006677150726318
    4. 'que' → logprob: -7.756677150726318
    5. ' ' → logprob: -8.13167667388916
    6. ' R' → logprob: -9.13167667388916
    7. ' diam' → logprob: -9.63167667388916
    8. ' d' → logprob: -9.75667667388916
    9. 's' → logprob: -9.88167667388916
    10. '    ' → logprob: -10.13167667388916

Token 314: ' le' (ID: 505)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9345097541809082
    2. ' ' → logprob: -0.9345097541809082
    3. ' d' → logprob: -1.9345097541809082
    4. 'd' → logprob: -2.809509754180908
    5. '   ' → logprob: -5.684509754180908
    6. 'diam' → logprob: -5.684509754180908
    7. ' R' → logprob: -6.309509754180908
    8. ' diameter' → logprob: -8.18450927734375
    9. ' diam' → logprob: -8.30950927734375
    10. 'R' → logprob: -8.93450927734375

Token 315: ' diamètre' (ID: 167210)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.31165021657943726
    2. 'diam' → logprob: -1.686650276184082
    3. ' ' → logprob: -2.811650276184082
    4. 'd' → logprob: -3.936650276184082
    5. ' diameter' → logprob: -7.186650276184082
    6. ' d' → logprob: -7.436650276184082
    7. 'R' → logprob: -7.686650276184082
    8. 'di' → logprob: -8.311650276184082
    9. ' diam' → logprob: -8.811650276184082
    10. ' R' → logprob: -8.811650276184082

Token 316: ' maximal' (ID: 65414)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.027504850178956985
    2. ' <=' → logprob: -3.9025049209594727
    3. ' soit' → logprob: -6.152504920959473
    4. 'du' → logprob: -7.027504920959473
    5. ')' → logprob: -7.277504920959473
    6. ' )' → logprob: -7.652504920959473
    7. '<=' → logprob: -7.652504920959473
    8. ' de' → logprob: -7.902504920959473
    9. ' d' → logprob: -8.402504920959473
    10. ' (' → logprob: -8.402504920959473

Token 317: ' soit' (ID: 17293)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.10929834097623825
    2. 'du' → logprob: -2.8592982292175293
    3. ' soit' → logprob: -3.2342982292175293
    4. 'so' → logprob: -5.484298229217529
    5. '   ' → logprob: -7.734298229217529
    6. ')' → logprob: -7.859298229217529
    7. ' ' → logprob: -8.109298706054688
    8. ' puisse' → logprob: -8.234298706054688
    9. ' <=' → logprob: -8.609298706054688
    10. ' fasse' → logprob: -8.984298706054688

Token 318: ' inférieur' (ID: 191498)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.01812829077243805
    2. '<=' → logprob: -4.518128395080566
    3. ' ' → logprob: -5.268128395080566
    4. ' inférieur' → logprob: -6.643128395080566
    5. 'inf' → logprob: -8.643128395080566
    6. ' inf' → logprob: -9.268128395080566
    7. ' less' → logprob: -9.393128395080566
    8. 'infer' → logprob: -9.768128395080566
    9. ' ≤' → logprob: -10.143128395080566
    10. ' <' → logprob: -10.768128395080566

Token 319: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.389540433883667
    2. ' ou' → logprob: -1.389540433883667
    3. 'ou' → logprob: -3.139540433883667
    4. ' à' → logprob: -5.014540672302246
    5. 'au' → logprob: -5.264540672302246
    6. 'à' → logprob: -5.264540672302246
    7. ' =' → logprob: -5.639540672302246
    8. ' au' → logprob: -6.014540672302246
    9. '   ' → logprob: -6.139540672302246
    10. '_' → logprob: -6.639540672302246

Token 320: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3012855052947998
    2. ' ' → logprob: -1.4262855052947998
    3. '=' → logprob: -3.9262855052948
    4. 'le' → logprob: -9.051285743713379
    5. ' =' → logprob: -10.676285743713379
    6. ' le' → logprob: -11.676285743713379
    7. ' R' → logprob: -11.801285743713379
    8. '4' → logprob: -11.926285743713379
    9. '0' → logprob: -12.051285743713379
    10. '1' → logprob: -12.051285743713379

Token 321: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01819266937673092
    2. ' ' → logprob: -4.018192768096924
    3. '=' → logprob: -10.143192291259766
    4. 'le' → logprob: -14.143192291259766
    5. '```' → logprob: -14.393192291259766
    6. ' =' → logprob: -14.518192291259766
    7. 'diam' → logprob: -14.768192291259766
    8. '   ' → logprob: -15.018192291259766
    9. 'R' → logprob: -15.393192291259766
    10. ' R' → logprob: -16.393192291259766

Token 322: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2519381642341614
    2. '*' → logprob: -1.5019381046295166
    3. ' ' → logprob: -11.876937866210938
    4. 'R' → logprob: -14.001937866210938
    5. ' ' → logprob: -14.626937866210938
    6. '   ' → logprob: -15.876937866210938
    7. ' R' → logprob: -16.376937866210938
    8. '*r' → logprob: -16.501937866210938
    9. ')' → logprob: -16.626937866210938
    10. 'space' → logprob: -17.001937866210938

Token 323: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.4740804135799408
    2. ' R' → logprob: -0.9740804433822632
    3. ' ' → logprob: -12.974080085754395
    4. 'space' → logprob: -15.224080085754395
    5. ' ' → logprob: -15.349080085754395
    6. '	R' → logprob: -15.599080085754395
    7. ' space' → logprob: -16.09908103942871
    8. ' espace' → logprob: -16.59908103942871
    9. '_R' → logprob: -16.72408103942871
    10. '`' → logprob: -16.97408103942871

Token 324: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0875217467546463
    2. ')' → logprob: -2.58752179145813
    3. 'def' → logprob: -5.962521553039551
    4. '    
' → logprob: -6.462521553039551
    5. ',' → logprob: -7.462521553039551
    6. '
' → logprob: -7.712521553039551
    7. ')
' → logprob: -7.712521553039551
    8. ' )' → logprob: -7.962521553039551
    9. '.' → logprob: -8.08752155303955
    10. ':' → logprob: -8.08752155303955

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020512811839580536
    2. ')' → logprob: -4.270512580871582
    3. '    
' → logprob: -5.770512580871582
    4. 'def' → logprob: -6.520512580871582
    5. ',' → logprob: -7.895512580871582
    6. '    ' → logprob: -8.395512580871582
    7. '.' → logprob: -8.645512580871582
    8. ' )' → logprob: -8.895512580871582
    9. '     
' → logprob: -9.270512580871582
    10. ')
' → logprob: -9.395512580871582

Token 326: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05529904365539551
    2. ')' → logprob: -3.0552990436553955
    3. ':' → logprob: -6.055298805236816
    4. '    
' → logprob: -7.180298805236816
    5. 'def' → logprob: -7.305298805236816
    6. '):' → logprob: -7.555298805236816
    7. ',' → logprob: -7.680298805236816
    8. '
' → logprob: -7.930298805236816
    9. '\n' → logprob: -8.055298805236816
    10. ' ' → logprob: -8.805298805236816

Token 327: ' Or' (ID: 2604)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6162298321723938
    2. '   ' → logprob: -1.491229772567749
    3. 'return' → logprob: -1.491229772567749
    4. ' if' → logprob: -4.991230010986328
    5. 'if' → logprob: -5.991230010986328
    6. '
' → logprob: -9.116230010986328
    7. 'Retour' → logprob: -9.366230010986328
    8. 'Return' → logprob: -9.741230010986328
    9. ' ' → logprob: -10.116230010986328
    10. '    ' → logprob: -10.241230010986328

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5851336121559143
    2. ' la' → logprob: -1.9601335525512695
    3. ' le' → logprob: -1.9601335525512695
    4. '   ' → logprob: -3.0851335525512695
    5. ' ,' → logprob: -3.5851335525512695
    6. 'le' → logprob: -3.8351335525512695
    7. 'd' → logprob: -4.4601335525512695
    8. ':' → logprob: -4.5851335525512695
    9. ' d' → logprob: -5.0851335525512695
    10. ' if' → logprob: -5.0851335525512695

Token 329: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6184324622154236
    2. ' le' → logprob: -2.4934325218200684
    3. ' d' → logprob: -2.6184325218200684
    4. ' return' → logprob: -2.7434325218200684
    5. 'd' → logprob: -2.8684325218200684
    6. ' la' → logprob: -2.9934325218200684
    7. 'le' → logprob: -3.2434325218200684
    8. 'return' → logprob: -3.3684325218200684
    9. 'diam' → logprob: -3.7434325218200684
    10. ' ' → logprob: -5.243432521820068

Token 330: ' plus' (ID: 2932)
  Prédit: ' fromage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fromage' → logprob: -0.4383593201637268
    2. 'from' → logprob: -2.063359260559082
    3. 'diam' → logprob: -3.313359260559082
    4. ' from' → logprob: -3.313359260559082
    5. ' code' → logprob: -3.813359260559082
    6. 'che' → logprob: -3.938359260559082
    7. ' rayon' → logprob: -4.063359260559082
    8. ' plus' → logprob: -4.313359260559082
    9. ' diamètre' → logprob: -4.688359260559082
    10. ' trou' → logprob: -4.938359260559082

Token 331: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.4194394648075104
    2. 'long' → logprob: -1.419439435005188
    3. ' grand' → logprob: -3.0444395542144775
    4. ' long' → logprob: -3.4194395542144775
    5. 'simple' → logprob: -5.419439315795898
    6. 'court' → logprob: -5.669439315795898
    7. 'pet' → logprob: -6.044439315795898
    8. ' gros' → logprob: -6.169439315795898
    9. 'large' → logprob: -6.294439315795898
    10. 'gr' → logprob: -7.044439315795898

Token 332: ' diamètre' (ID: 167210)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5774884223937988
    2. ' côté' → logprob: -1.8274884223937988
    3. 'token' → logprob: -3.077488422393799
    4. 'd' → logprob: -3.327488422393799
    5. 'diam' → logprob: -3.452488422393799
    6. 'di' → logprob: -3.702488422393799
    7. 'angle' → logprob: -3.952488422393799
    8. ' token' → logprob: -4.077488422393799
    9. ' segment' → logprob: -4.202488422393799
    10. ' diamètre' → logprob: -4.452488422393799

Token 333: ' à' (ID: 1221)
  Prédit: ' maximal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maximal' → logprob: -0.3463471531867981
    2. ' possible' → logprob: -1.5963470935821533
    3. ' du' → logprob: -3.5963470935821533
    4. 'possible' → logprob: -3.8463470935821533
    5. 'max' → logprob: -4.346347332000732
    6. ' est' → logprob: -4.721347332000732
    7. ' de' → logprob: -4.971347332000732
    8. 'du' → logprob: -5.096347332000732
    9. 'de' → logprob: -6.596347332000732
    10. ' d' → logprob: -6.971347332000732

Token 334: ' faire' (ID: 8119)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.2645111680030823
    2. ' passer' → logprob: -1.5145111083984375
    3. 'faire' → logprob: -5.8895111083984375
    4. 'p' → logprob: -6.0145111083984375
    5. 'passing' → logprob: -6.3895111083984375
    6. 'consider' → logprob: -6.6395111083984375
    7. ' faire' → logprob: -7.5145111083984375
    8. 'c' → logprob: -7.8895111083984375
    9. 'n' → logprob: -8.639511108398438
    10. 't' → logprob: -8.639511108398438

Token 335: ' passer' (ID: 27727)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.0022093774750828743
    2. ' passer' → logprob: -6.127209186553955
    3. ' pass' → logprob: -11.502209663391113
    4. ' ' → logprob: -12.502209663391113
    5. '_pass' → logprob: -13.252209663391113
    6. 'passes' → logprob: -13.377209663391113
    7. 'p' → logprob: -13.502209663391113
    8. 'entr' → logprob: -13.627209663391113
    9. '   ' → logprob: -13.752209663391113
    10. ' ' → logprob: -14.752209663391113

Token 336: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.06087207421660423
    2. ' ' → logprob: -3.8108720779418945
    3. 'est' → logprob: -4.8108720779418945
    4. ',' → logprob: -4.9358720779418945
    5. ' dans' → logprob: -5.0608720779418945
    6. ' doit' → logprob: -6.1858720779418945
    7. '=' → logprob: -6.3108720779418945
    8. ' =' → logprob: -6.4358720779418945
    9. ' de' → logprob: -6.4358720779418945
    10. ' du' → logprob: -6.6858720779418945

Token 337: ' la' (ID: 557)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.16708283126354218
    2. 'd' → logprob: -2.0420827865600586
    3. ' la' → logprob: -4.042082786560059
    4. ' ' → logprob: -5.292082786560059
    5. ' ' → logprob: -8.417082786560059
    6. ' =' → logprob: -8.542082786560059
    7. ' le' → logprob: -8.667082786560059
    8. '    ' → logprob: -8.792082786560059
    9. ' sqrt' → logprob: -8.917082786560059
    10. ' math' → logprob: -9.292082786560059

Token 338: ' plus' (ID: 2932)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6882331371307373
    2. ' plus' → logprob: -1.3132331371307373
    3. ' d' → logprob: -2.3132331371307373
    4. ' diagonal' → logprob: -2.5632331371307373
    5. ' diagon' → logprob: -3.6882331371307373
    6. ' space' → logprob: -4.813233375549316
    7. 'd' → logprob: -5.438233375549316
    8. ' ' → logprob: -6.063233375549316
    9. 'di' → logprob: -6.313233375549316
    10. ' face' → logprob: -6.313233375549316

Token 339: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.47996124625205994
    2. ' grande' → logprob: -1.1049612760543823
    3. 'long' → logprob: -3.6049611568450928
    4. 'grand' → logprob: -4.479961395263672
    5. ' longue' → logprob: -4.854961395263672
    6. ' long' → logprob: -6.604961395263672
    7. ' ' → logprob: -7.104961395263672
    8. 'g' → logprob: -7.854961395263672
    9. ' grand' → logprob: -8.104961395263672
    10. 'large' → logprob: -8.604961395263672

Token 340: ' diagon' (ID: 146014)
  Prédit: ' diagon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diagon' → logprob: -0.2126777470111847
    2. ' diagonal' → logprob: -2.7126777172088623
    3. 'di' → logprob: -2.9626777172088623
    4. ' ar' → logprob: -3.0876777172088623
    5. ' longueur' → logprob: -4.462677955627441
    6. '_di' → logprob: -5.087677955627441
    7. ' face' → logprob: -6.087677955627441
    8. ' ' → logprob: -6.337677955627441
    9. ' _' → logprob: -6.587677955627441
    10. ' dimension' → logprob: -7.087677955627441

Token 341: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -4.263011578586884e-05
    2. 'al' → logprob: -10.500042915344238
    3. 'le' → logprob: -12.500042915344238
    4. 'але' → logprob: -13.250042915344238
    5. 'nale' → logprob: -13.250042915344238
    6. '>' → logprob: -13.875042915344238
    7. 'e' → logprob: -14.125042915344238
    8. 'a' → logprob: -14.625042915344238
    9. '**' → logprob: -14.875042915344238
    10. 'g' → logprob: -14.875042915344238

Token 342: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25841790437698364
    2. ')' → logprob: -1.5084178447723389
    3. ',' → logprob: -6.758418083190918
    4. ' )' → logprob: -7.008418083190918
    5. ')
' → logprob: -7.258418083190918
    6. '):' → logprob: -7.633418083190918
    7. '.' → logprob: -7.758418083190918
    8. '**' → logprob: -8.008418083190918
    9. ':' → logprob: -8.008418083190918
    10. ' ' → logprob: -8.258418083190918

Token 343: ' parall' (ID: 133906)
  Prédit: ' parall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parall' → logprob: -0.9958524703979492
    2. 'par' → logprob: -1.2458524703979492
    3. ' paralle' → logprob: -1.6208524703979492
    4. ' ' → logprob: -2.620852470397949
    5. ' par' → logprob: -4.120852470397949
    6. ' fromage' → logprob: -4.245852470397949
    7. ' cube' → logprob: -4.995852470397949
    8. ' cheese' → logprob: -4.995852470397949
    9. ' from' → logprob: -4.995852470397949
    10. ' morceau' → logprob: -5.745852470397949

Token 344: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.013689394108951092
    2. 'é' → logprob: -4.5136895179748535
    3. 'elé' → logprob: -6.2636895179748535
    4. 'él' → logprob: -8.138689041137695
    5. 'è' → logprob: -8.388689041137695
    6. 'ép' → logprob: -9.763689041137695
    7. 'èle' → logprob: -10.138689041137695
    8. 'el' → logprob: -10.638689041137695
    9. 'èl' → logprob: -10.888689041137695
    10. 'ip' → logprob: -11.013689041137695

Token 345: 'pip' (ID: 113064)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.046107906848192215
    2. 'pip' → logprob: -3.2961080074310303
    3. 'd' → logprob: -5.546107769012451
    4. 'pé' → logprob: -6.296107769012451
    5. 'ip' → logprob: -7.046107769012451
    6. 'dé' → logprob: -7.171107769012451
    7. 'pi' → logprob: -8.17110824584961
    8. 'ède' → logprob: -9.67110824584961
    9. 'de' → logprob: -10.17110824584961
    10. 'di' → logprob: -10.17110824584961

Token 346: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.005968138575553894
    2. 'è' → logprob: -5.25596809387207
    3. 'p' → logprob: -8.38096809387207
    4. 'é' → logprob: -8.38096809387207
    5. '`' → logprob: -9.75596809387207
    6. '**' → logprob: -10.25596809387207
    7. 'èque' → logprob: -10.63096809387207
    8. 'de' → logprob: -11.25596809387207
    9. 'édé' → logprob: -11.25596809387207
    10. 'èce' → logprob: -11.25596809387207

Token 347: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2741573452949524
    2. ')' → logprob: -1.5241572856903076
    3. ':' → logprob: -5.149157524108887
    4. ',' → logprob: -6.024157524108887
    5. '):' → logprob: -6.024157524108887
    6. '.' → logprob: -6.149157524108887
    7. ')
' → logprob: -6.399157524108887
    8. 'def' → logprob: -6.899157524108887
    9. '
' → logprob: -7.024157524108887
    10. '    
' → logprob: -7.149157524108887

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08095680177211761
    2. ')' → logprob: -2.8309566974639893
    3. '    
' → logprob: -5.455956935882568
    4. 'def' → logprob: -5.830956935882568
    5. ')
' → logprob: -6.580956935882568
    6. '  
' → logprob: -6.705956935882568
    7. 'd' → logprob: -6.830956935882568
    8. ',' → logprob: -7.080956935882568
    9. 'return' → logprob: -7.080956935882568
    10. '.' → logprob: -7.080956935882568

Token 349: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008829650469124317
    2. '    
' → logprob: -6.008829593658447
    3. ')' → logprob: -6.133829593658447
    4. 'return' → logprob: -6.508829593658447
    5. '
' → logprob: -7.133829593658447
    6. ' return' → logprob: -8.008830070495605
    7. 'def' → logprob: -8.258830070495605
    8. 'd' → logprob: -8.383830070495605
    9. '  
' → logprob: -8.758830070495605
    10. '\n' → logprob: -8.883830070495605

Token 350: ' Mais' (ID: 13880)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.29302823543548584
    2. 'return' → logprob: -1.9180282354354858
    3. '   ' → logprob: -2.2930283546447754
    4. ' if' → logprob: -5.293028354644775
    5. 'if' → logprob: -7.543028354644775
    6. '
' → logprob: -8.918027877807617
    7. '    
' → logprob: -9.418027877807617
    8. '#' → logprob: -9.793027877807617
    9. ' ' → logprob: -9.793027877807617
    10. 'Return' → logprob: -10.293027877807617

Token 351: ' le' (ID: 505)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5690711736679077
    2. ' en' → logprob: -2.3190712928771973
    3. ' le' → logprob: -2.6940712928771973
    4. ' la' → logprob: -3.0690712928771973
    5. ' dans' → logprob: -3.3190712928771973
    6. ' ici' → logprob: -3.4440712928771973
    7. ' si' → logprob: -3.4440712928771973
    8. ' il' → logprob: -3.6940712928771973
    9. 'le' → logprob: -4.319071292877197
    10. ' pour' → logprob: -4.569071292877197

Token 352: ' problème' (ID: 35630)
  Prédit: ' fromage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fromage' → logprob: -1.1888854503631592
    2. 'from' → logprob: -1.3138854503631592
    3. ' trou' → logprob: -1.9388854503631592
    4. ' from' → logprob: -2.188885450363159
    5. '#' → logprob: -3.188885450363159
    6. ' code' → logprob: -3.188885450363159
    7. '```' → logprob: -4.188885688781738
    8. ' rayon' → logprob: -4.563885688781738
    9. ' plus' → logprob: -4.688885688781738
    10. ' diamètre' → logprob: -5.313885688781738

Token 353: ' précise' (ID: 95250)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5417761206626892
    2. ' n' → logprob: -2.041776180267334
    3. 'est' → logprob: -2.166776180267334
    4. 'n' → logprob: -2.916776180267334
    5. ' reste' → logprob: -3.416776180267334
    6. ',' → logprob: -4.041776180267334
    7. '#' → logprob: -4.041776180267334
    8. ' is' → logprob: -4.041776180267334
    9. 'continue' → logprob: -4.541776180267334
    10. 'reste' → logprob: -4.666776180267334

Token 354: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.22673995792865753
    2. ' qu' → logprob: -2.2267398834228516
    3. ' ' → logprob: -2.9767398834228516
    4. ' seulement' → logprob: -5.101739883422852
    5. ' uniquement' → logprob: -5.101739883422852
    6. ' ' → logprob: -5.351739883422852
    7. ':' → logprob: -5.601739883422852
    8. '   ' → logprob: -5.601739883422852
    9. ' juste' → logprob: -5.851739883422852
    10. ' la' → logprob: -6.726739883422852

Token 355: ''on' (ID: 25812)
  Prédit: ''il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.5907486081123352
    2. ''on' → logprob: -1.3407485485076904
    3. ' on' → logprob: -3.0907485485076904
    4. ''' → logprob: -3.3407485485076904
    5. ' il' → logprob: -3.3407485485076904
    6. 'u' → logprob: -3.8407485485076904
    7. 'on' → logprob: -4.4657487869262695
    8. 'e' → logprob: -4.5907487869262695
    9. 'il' → logprob: -5.2157487869262695
    10. 'a' → logprob: -5.4657487869262695

Token 356: ' considère' (ID: 176437)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.32991504669189453
    2. 'pe' → logprob: -1.7049150466918945
    3. ' ne' → logprob: -3.3299150466918945
    4. ' considère' → logprob: -4.0799150466918945
    5. 'ne' → logprob: -4.2049150466918945
    6. 'a' → logprob: -4.8299150466918945
    7. 'n' → logprob: -5.7049150466918945
    8. ' doit' → logprob: -5.7049150466918945
    9. ' veut' → logprob: -6.0799150466918945
    10. '#' → logprob: -6.5799150466918945

Token 357: ' uniquement' (ID: 65527)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.7140060067176819
    2. ' la' → logprob: -1.589005947113037
    3. ' uniquement' → logprob: -2.089005947113037
    4. ' seulement' → logprob: -3.089005947113037
    5. 'le' → logprob: -3.839005947113037
    6. 'que' → logprob: -4.214005947113037
    7. ' l' → logprob: -4.339005947113037
    8. '   ' → logprob: -4.464005947113037
    9. ' le' → logprob: -4.464005947113037
    10. 'la' → logprob: -4.464005947113037

Token 358: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8655343651771545
    2. ' les' → logprob: -1.3655343055725098
    3. 'les' → logprob: -1.6155343055725098
    4. 'la' → logprob: -2.4905343055725098
    5. 'l' → logprob: -4.74053430557251
    6. ' ' → logprob: -4.99053430557251
    7. 'le' → logprob: -4.99053430557251
    8. ' l' → logprob: -5.24053430557251
    9. ' une' → logprob: -5.24053430557251
    10. 'une' → logprob: -5.86553430557251

Token 359: ' passage' (ID: 26368)
  Prédit: ' passage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passage' → logprob: -0.060341060161590576
    2. ' plus' → logprob: -3.1853411197662354
    3. ' diamètre' → logprob: -4.810340881347656
    4. 'plus' → logprob: -5.810340881347656
    5. 'pass' → logprob: -5.810340881347656
    6. ' trou' → logprob: -6.810340881347656
    7. ' pass' → logprob: -7.185340881347656
    8. 'diam' → logprob: -8.435340881347656
    9. '```' → logprob: -8.810340881347656
    10. ' passant' → logprob: -9.060340881347656

Token 360: ' par' (ID: 686)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3531770706176758
    2. ' à' → logprob: -1.3531770706176758
    3. ' du' → logprob: -1.8531770706176758
    4. ' d' → logprob: -1.9781770706176758
    5. ' par' → logprob: -2.603177070617676
    6. ' des' → logprob: -3.103177070617676
    7. ' sur' → logprob: -3.978177070617676
    8. ' through' → logprob: -3.978177070617676
    9. ' ' → logprob: -4.853177070617676
    10. 'sur' → logprob: -5.728177070617676

Token 361: ' rotation' (ID: 23769)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5613275766372681
    2. 'une' → logprob: -0.9363275766372681
    3. ' la' → logprob: -4.0613274574279785
    4. 'les' → logprob: -5.3113274574279785
    5. 'la' → logprob: -5.8113274574279785
    6. ' les' → logprob: -5.9363274574279785
    7. ' le' → logprob: -6.4363274574279785
    8. ' n' → logprob: -6.5613274574279785
    9. ' des' → logprob: -6.6863274574279785
    10. ' un' → logprob: -6.6863274574279785

Token 362: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0473487377166748
    2. ')' → logprob: -2.047348737716675
    3. ',' → logprob: -2.422348737716675
    4. 's' → logprob: -3.297348737716675
    5. 'import' → logprob: -3.297348737716675
    6. '.' → logprob: -3.422348737716675
    7. ' des' → logprob: -3.422348737716675
    8. ' de' → logprob: -3.422348737716675
    9. ' d' → logprob: -3.797348737716675
    10. ' du' → logprob: -3.797348737716675

Token 363: ' donc' (ID: 14206)
  Prédit: ' donc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donc' → logprob: -0.152306467294693
    2. '#' → logprob: -3.02730655670166
    3. '   ' → logprob: -3.52730655670166
    4. ' et' → logprob: -4.40230655670166
    5. ' ce' → logprob: -4.40230655670166
    6. ' so' → logprob: -5.27730655670166
    7. ' ' → logprob: -5.65230655670166
    8. ' il' → logprob: -5.90230655670166
    9. 'don' → logprob: -5.90230655670166
    10. ' pas' → logprob: -6.02730655670166

Token 364: ' on' (ID: 402)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9727190732955933
    2. ' la' → logprob: -1.2227190732955933
    3. ' le' → logprob: -1.9727190732955933
    4. ' on' → logprob: -2.972719192504883
    5. '   ' → logprob: -3.097719192504883
    6. ' il' → logprob: -3.722719192504883
    7. ' #' → logprob: -3.972719192504883
    8. 'return' → logprob: -4.222719192504883
    9. '#' → logprob: -5.097719192504883
    10. ' ' → logprob: -5.597719192504883

Token 365: ' peut' (ID: 9216)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -1.0125956535339355
    2. ' return' → logprob: -1.6375956535339355
    3. ' considère' → logprob: -2.3875956535339355
    4. 'do' → logprob: -2.8875956535339355
    5. ' continue' → logprob: -2.8875956535339355
    6. ' peut' → logprob: -3.2625956535339355
    7. '   ' → logprob: -3.2625956535339355
    8. ' calc' → logprob: -3.5125956535339355
    9. 'return' → logprob: -3.7625956535339355
    10. ' ne' → logprob: -4.1375956535339355

Token 366: ' choisir' (ID: 47004)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.3511494994163513
    2. ' passer' → logprob: -1.726149559020996
    3. ' considérer' → logprob: -2.976149559020996
    4. '   ' → logprob: -4.726149559020996
    5. 'penser' → logprob: -4.851149559020996
    6. ' pass' → logprob: -4.851149559020996
    7. 'consider' → logprob: -5.476149559020996
    8. ' utiliser' → logprob: -5.851149559020996
    9. 'prendre' → logprob: -5.976149559020996
    10. ' calcul' → logprob: -6.476149559020996

Token 367: ' l' (ID: 305)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7595884799957275
    2. ' une' → logprob: -1.7595884799957275
    3. ' l' → logprob: -2.0095884799957275
    4. ' la' → logprob: -2.7595884799957275
    5. ' les' → logprob: -3.3845884799957275
    6. 'de' → logprob: -3.6345884799957275
    7. ' d' → logprob: -3.8845884799957275
    8. 'les' → logprob: -4.009588241577148
    9. 'une' → logprob: -4.134588241577148
    10. 'l' → logprob: -4.384588241577148

Token 368: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.027387717738747597
    2. ''' → logprob: -3.9023876190185547
    3. 'e' → logprob: -6.152387619018555
    4. ''espace' → logprob: -6.652387619018555
    5. ''a' → logprob: -7.027387619018555
    6. 'angle' → logprob: -7.277387619018555
    7. ''ar' → logprob: -8.402387619018555
    8. ''ordre' → logprob: -8.777387619018555
    9. ''ensemble' → logprob: -8.902387619018555
    10. ' a' → logprob: -9.402387619018555

Token 369: 'orientation' (ID: 65957)
  Prédit: 'orientation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orientation' → logprob: -0.778834879398346
    2. 'angle' → logprob: -1.7788348197937012
    3. ' orientation' → logprob: -2.028834819793701
    4. ''' → logprob: -2.403834819793701
    5. ' angle' → logprob: -2.403834819793701
    6. 'a' → logprob: -3.653834819793701
    7. 'orient' → logprob: -5.403834819793701
    8. 'ordre' → logprob: -5.403834819793701
    9. ''ordre' → logprob: -5.903834819793701
    10. ''espace' → logprob: -6.153834819793701

Token 370: ' comme' (ID: 7971)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -1.214308500289917
    2. '   ' → logprob: -1.589308500289917
    3. ' de' → logprob: -2.214308500289917
    4. ',' → logprob: -2.339308500289917
    5. ' ' → logprob: -2.964308500289917
    6. '.' → logprob: -3.089308500289917
    7. ' )' → logprob: -3.214308500289917
    8. ')' → logprob: -3.214308500289917
    9. ' d' → logprob: -3.714308500289917
    10. ':' → logprob: -3.839308500289917

Token 371: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.09701991081237793
    2. 'on' → logprob: -2.597019910812378
    3. ' souhait' → logprob: -5.097020149230957
    4. ''on' → logprob: -6.222020149230957
    5. 'sou' → logprob: -6.222020149230957
    6. ' voulu' → logprob: -6.347020149230957
    7. 'bon' → logprob: -6.847020149230957
    8. 'vous' → logprob: -6.972020149230957
    9. ' bon' → logprob: -7.222020149230957
    10. ' vous' → logprob: -7.597020149230957

Token 372: ' veut' (ID: 41653)
  Prédit: ' veut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' veut' → logprob: -0.03487367182970047
    2. ' souhaite' → logprob: -4.0348734855651855
    3. ' veux' → logprob: -5.0348734855651855
    4. 've' → logprob: -5.5348734855651855
    5. ' ve' → logprob: -5.9098734855651855
    6. ' veu' → logprob: -6.2848734855651855
    7. ' voulez' → logprob: -8.159873962402344
    8. 'le' → logprob: -8.284873962402344
    9. ' want' → logprob: -8.534873962402344
    10. 'veux' → logprob: -8.909873962402344

Token 373: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1577683687210083
    2. ')' → logprob: -2.0327682495117188
    3. ',' → logprob: -5.157768249511719
    4. '    
' → logprob: -5.407768249511719
    5. '.' → logprob: -7.032768249511719
    6. 'def' → logprob: -7.157768249511719
    7. '  
' → logprob: -7.782768249511719
    8. ' )' → logprob: -8.157768249511719
    9. '#' → logprob: -8.282768249511719
    10. '\n' → logprob: -8.532768249511719

Token 374: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004323541186749935
    2. ')' → logprob: -5.629323482513428
    3. ' )' → logprob: -8.504323959350586
    4. '    
' → logprob: -9.004323959350586
    5. ' ' → logprob: -9.754323959350586
    6. '    ' → logprob: -10.004323959350586
    7. ',' → logprob: -10.129323959350586
    8. 'def' → logprob: -10.379323959350586
    9. 'return' → logprob: -10.504323959350586
    10. '  ' → logprob: -10.754323959350586

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018873024731874466
    2. '    
' → logprob: -4.64387321472168
    3. 'return' → logprob: -5.76887321472168
    4. ' return' → logprob: -6.14387321472168
    5. ' 
' → logprob: -7.26887321472168
    6. ')' → logprob: -7.39387321472168
    7. 'd' → logprob: -7.51887321472168
    8. '    ' → logprob: -8.26887321472168
    9. '  
' → logprob: -8.39387321472168
    10. ' d' → logprob: -8.51887321472168

Token 376: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31203874945640564
    2. 'max' → logprob: -2.4370386600494385
    3. ' max' → logprob: -2.5620386600494385
    4. '#' → logprob: -3.4370386600494385
    5. ' diagonal' → logprob: -4.062038898468018
    6. ' min' → logprob: -5.187038898468018
    7. ' minimal' → logprob: -5.187038898468018
    8. '    
' → logprob: -5.312038898468018
    9. 'diam' → logprob: -5.437038898468018
    10. 'min' → logprob: -5.562038898468018

Token 377: ' doit' (ID: 21822)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.6197102069854736
    2. ' considère' → logprob: -1.9947102069854736
    3. ' continue' → logprob: -2.1197102069854736
    4. ' peux' → logprob: -2.8697102069854736
    5. ' doit' → logprob: -3.9947102069854736
    6. '_' → logprob: -4.2447099685668945
    7. '   ' → logprob: -4.3697099685668945
    8. ' return' → logprob: -4.7447099685668945
    9. ' ' → logprob: -4.7447099685668945
    10. '.' → logprob: -4.7447099685668945

Token 378: ' donc' (ID: 14206)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.6917401552200317
    2. ' vérifier' → logprob: -1.8167401552200317
    3. ' donc' → logprob: -2.566740036010742
    4. ' continuer' → logprob: -2.691740036010742
    5. ' comparer' → logprob: -2.816740036010742
    6. ' retourner' → logprob: -3.316740036010742
    7. ' simplement' → logprob: -3.691740036010742
    8. ' considérer' → logprob: -4.066740036010742
    9. ' choisir' → logprob: -4.816740036010742
    10. ' alors' → logprob: -5.066740036010742

Token 379: ' trouver' (ID: 23195)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.754469633102417
    2. 'calcul' → logprob: -1.129469633102417
    3. ' vérifier' → logprob: -2.504469633102417
    4. 'return' → logprob: -2.879469633102417
    5. 'v' → logprob: -3.754469633102417
    6. 'com' → logprob: -4.254469871520996
    7. ' retourner' → logprob: -4.504469871520996
    8. ' comparer' → logprob: -5.379469871520996
    9. 'contin' → logprob: -6.129469871520996
    10. ' return' → logprob: -6.129469871520996

Token 380: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.02614075131714344
    2. 'la' → logprob: -4.6511406898498535
    3. ' le' → logprob: -4.7761406898498535
    4. ' l' → logprob: -5.4011406898498535
    5. 'le' → logprob: -6.1511406898498535
    6. ' ' → logprob: -8.526141166687012
    7. ' the' → logprob: -8.776141166687012
    8. ' if' → logprob: -9.026141166687012
    9. 'l' → logprob: -9.526141166687012
    10. 'the' → logprob: -9.526141166687012

Token 381: ' diamètre' (ID: 167210)
  Prédit: ' minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.5433930158615112
    2. ' plus' → logprob: -1.6683930158615112
    3. ' minimal' → logprob: -2.043393135070801
    4. 'minimum' → logprob: -3.168393135070801
    5. ' diamètre' → logprob: -3.918393135070801
    6. ' rayon' → logprob: -4.793393135070801
    7. ' maximum' → logprob: -4.918393135070801
    8. ' smallest' → logprob: -5.168393135070801
    9. ' min' → logprob: -5.918393135070801
    10. 'plus' → logprob: -6.043393135070801

Token 382: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.4815857708454132
    2. ' maximal' → logprob: -0.9815857410430908
    3. 'minimal' → logprob: -5.10658597946167
    4. 'max' → logprob: -7.48158597946167
    5. ' minimum' → logprob: -8.106585502624512
    6. ' max' → logprob: -8.606585502624512
    7. ' minimale' → logprob: -9.231585502624512
    8. 'minimum' → logprob: -9.606585502624512
    9. '_max' → logprob: -9.856585502624512
    10. ' maximale' → logprob: -9.981585502624512

Token 383: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7672853469848633
    2. ' minimal' → logprob: -1.3922853469848633
    3. ' maximal' → logprob: -2.5172853469848633
    4. ' possible' → logprob: -2.7672853469848633
    5. '_' → logprob: -2.7672853469848633
    6. ')' → logprob: -4.517285346984863
    7. ',' → logprob: -4.767285346984863
    8. ' minimum' → logprob: -4.767285346984863
    9. ' de' → logprob: -4.892285346984863
    10. ' à' → logprob: -5.142285346984863

Token 384: ' plus' (ID: 2932)
  Prédit: ' passage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passage' → logprob: -0.8971635103225708
    2. ' parall' → logprob: -1.1471635103225708
    3. ' fromage' → logprob: -2.3971633911132812
    4. ' from' → logprob: -2.7721633911132812
    5. 'from' → logprob: -3.3971633911132812
    6. ' plus' → logprob: -3.5221633911132812
    7. ' paralle' → logprob: -4.397163391113281
    8. 'par' → logprob: -4.522163391113281
    9. ' cheese' → logprob: -5.147163391113281
    10. ' morceau' → logprob: -5.272163391113281

Token 385: ' petit' (ID: 20577)
  Prédit: ' petit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' petit' → logprob: -0.16521422564983368
    2. 'pet' → logprob: -2.1652143001556396
    3. ' pet' → logprob: -5.0402140617370605
    4. ' long' → logprob: -5.0402140617370605
    5. ' proche' → logprob: -5.1652140617370605
    6. ' petite' → logprob: -5.2902140617370605
    7. 'court' → logprob: -5.9152140617370605
    8. '```' → logprob: -6.4152140617370605
    9. ' grand' → logprob: -6.6652140617370605
    10. ' court' → logprob: -6.7902140617370605

Token 386: ' cercle' (ID: 172399)
  Prédit: ' rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rectangle' → logprob: -0.566906750202179
    2. ' cube' → logprob: -1.9419066905975342
    3. 'c' → logprob: -2.941906690597534
    4. 'rectangle' → logprob: -3.566906690597534
    5. ' cercle' → logprob: -3.566906690597534
    6. ' côté' → logprob: -3.691906690597534
    7. 'cube' → logprob: -3.691906690597534
    8. ' passage' → logprob: -4.066906929016113
    9. 'face' → logprob: -4.316906929016113
    10. ' segment' → logprob: -4.316906929016113

Token 387: ' capable' (ID: 18777)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.27855080366134644
    2. ' qui' → logprob: -2.403550863265991
    3. ' capable' → logprob: -3.028550863265991
    4. 'possible' → logprob: -3.403550863265991
    5. ')' → logprob: -4.403550624847412
    6. ' pouvant' → logprob: -4.653550624847412
    7. ' passant' → logprob: -4.903550624847412
    8. ' ' → logprob: -5.028550624847412
    9. 'qui' → logprob: -5.528550624847412
    10. ' permettant' → logprob: -5.653550624847412

Token 388: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1361260563135147
    2. 'de' → logprob: -2.2611260414123535
    3. ' d' → logprob: -4.5111260414123535
    4. 'd' → logprob: -4.6361260414123535
    5. ' ' → logprob: -6.8861260414123535
    6. '<|end|>' → logprob: -7.7611260414123535
    7. ' of' → logprob: -8.136126518249512
    8. '_' → logprob: -8.511126518249512
    9. '   ' → logprob: -9.386126518249512
    10. '_de' → logprob: -9.636126518249512

Token 389: ' faire' (ID: 8119)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.36886635422706604
    2. 'cont' → logprob: -2.618866443634033
    3. ' conten' → logprob: -2.618866443634033
    4. 'en' → logprob: -3.118866443634033
    5. 'conten' → logprob: -3.118866443634033
    6. 'con' → logprob: -3.993866443634033
    7. 'engl' → logprob: -3.993866443634033
    8. 'enc' → logprob: -4.493866443634033
    9. ' engl' → logprob: -4.618866443634033
    10. ' passer' → logprob: -5.993866443634033

Token 390: ' passer' (ID: 27727)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.03391054645180702
    2. ' passer' → logprob: -3.4089105129241943
    3. ' pass' → logprob: -9.158910751342773
    4. '_pass' → logprob: -9.658910751342773
    5. '   ' → logprob: -9.783910751342773
    6. ' passage' → logprob: -11.533910751342773
    7. ' ' → logprob: -12.158910751342773
    8. '
' → logprob: -12.533910751342773
    9. 'pas' → logprob: -13.033910751342773
    10. 'p' → logprob: -13.158910751342773

Token 391: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.33062857389450073
    2. ' la' → logprob: -1.8306286334991455
    3. 'le' → logprob: -2.7056286334991455
    4. ' ' → logprob: -3.0806286334991455
    5. ' l' → logprob: -6.080628395080566
    6. ' une' → logprob: -6.080628395080566
    7. 'la' → logprob: -7.330628395080566
    8. '_le' → logprob: -7.955628395080566
    9. ' through' → logprob: -8.455628395080566
    10. ' du' → logprob: -8.455628395080566

Token 392: ' parall' (ID: 133906)
  Prédit: ' fromage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fromage' → logprob: -0.11215415596961975
    2. ' morceau' → logprob: -3.362154245376587
    3. ' from' → logprob: -3.612154245376587
    4. 'from' → logprob: -3.612154245376587
    5. ' ' → logprob: -4.737154006958008
    6. ' cheese' → logprob: -6.612154006958008
    7. 'che' → logprob: -6.987154006958008
    8. ' form' → logprob: -7.362154006958008
    9. ' passage' → logprob: -7.487154006958008
    10. ' cube' → logprob: -7.737154006958008

Token 393: 'élé' (ID: 15228)
  Prédit: 'è'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'è' → logprob: -0.5703050494194031
    2. 'élé' → logprob: -1.3203051090240479
    3. 'é' → logprob: -2.070305109024048
    4. 'él' → logprob: -3.945305109024048
    5. 'èle' → logprob: -4.945304870605469
    6. 'èl' → logprob: -5.945304870605469
    7. '**' → logprob: -6.195304870605469
    8. 'être' → logprob: -6.695304870605469
    9. 'ép' → logprob: -6.695304870605469
    10. 'ip' → logprob: -6.945304870605469

Token 394: 'pip' (ID: 113064)
  Prédit: 'pip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pip' → logprob: -1.9743012671824545e-05
    2. 'p' → logprob: -11.000020027160645
    3. ' pip' → logprob: -13.250020027160645
    4. 'ip' → logprob: -14.750020027160645
    5. 'pin' → logprob: -15.250020027160645
    6. 'pé' → logprob: -15.500020027160645
    7. 'pil' → logprob: -15.625020027160645
    8. 'pid' → logprob: -16.250019073486328
    9. 'nip' → logprob: -17.000019073486328
    10. 'cip' → logprob: -17.375019073486328

Token 395: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.019484061747789383
    2. 'è' → logprob: -4.144484043121338
    3. 'é' → logprob: -6.519484043121338
    4. 'p' → logprob: -7.894484043121338
    5. '`' → logprob: -8.144484519958496
    6. 'ede' → logprob: -8.519484519958496
    7. '\' → logprob: -9.331984519958496
    8. 'édé' → logprob: -9.456984519958496
    9. 'èque' → logprob: -9.519484519958496
    10. 'de' → logprob: -9.519484519958496

Token 396: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28494447469711304
    2. '   ' → logprob: -1.6599445343017578
    3. '.' → logprob: -3.784944534301758
    4. ' )' → logprob: -4.034944534301758
    5. ',' → logprob: -4.909944534301758
    6. ':' → logprob: -6.034944534301758
    7. '  ' → logprob: -6.784944534301758
    8. ' ' → logprob: -6.784944534301758
    9. '):' → logprob: -6.784944534301758
    10. '}' → logprob: -7.284944534301758

Token 397: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023865913972258568
    2. ')' → logprob: -7.127386569976807
    3. 'def' → logprob: -7.627386569976807
    4. '"' → logprob: -8.127387046813965
    5. '    
' → logprob: -8.127387046813965
    6. '    ' → logprob: -8.752387046813965
    7. '"""' → logprob: -9.377387046813965
    8. '\' → logprob: -10.502387046813965
    9. ' )' → logprob: -10.627387046813965
    10. ',' → logprob: -10.627387046813965

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004922889173030853
    2. '    
' → logprob: -6.629922866821289
    3. '"""' → logprob: -6.629922866821289
    4. '    ' → logprob: -7.379922866821289
    5. 'def' → logprob: -7.754922866821289
    6. '
' → logprob: -8.254922866821289
    7. ')' → logprob: -8.504922866821289
    8. ' """' → logprob: -8.879922866821289
    9. ' 
' → logprob: -9.504922866821289
    10. '"' → logprob: -9.629922866821289

Token 399: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3008972108364105
    2. '#' → logprob: -2.5508971214294434
    3. 'max' → logprob: -2.8008971214294434
    4. ' max' → logprob: -3.3008971214294434
    5. 'min' → logprob: -4.175897121429443
    6. '    
' → logprob: -4.425897121429443
    7. ' min' → logprob: -4.675897121429443
    8. '
' → logprob: -5.300897121429443
    9. ' #' → logprob: -5.550897121429443
    10. 'diam' → logprob: -5.925897121429443

Token 400: ' problème' (ID: 35630)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.126254677772522
    2. ' radius' → logprob: -2.1262545585632324
    3. ' minimal' → logprob: -2.2512545585632324
    4. ' rayon' → logprob: -2.5012545585632324
    5. ' code' → logprob: -2.6262545585632324
    6. ' diagonal' → logprob: -2.7512545585632324
    7. ' diamètre' → logprob: -3.1262545585632324
    8. ' d' → logprob: -3.1262545585632324
    9. ' diam' → logprob: -3.2512545585632324
    10. ' passage' → logprob: -4.501254558563232

Token 401: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.48067641258239746
    2. 'est' → logprob: -1.7306764125823975
    3. ' n' → logprob: -2.7306764125823975
    4. ' reste' → logprob: -3.2306764125823975
    5. '#' → logprob: -3.4806764125823975
    6. ' semble' → logprob: -4.355676651000977
    7. 'n' → logprob: -4.605676651000977
    8. ' continue' → logprob: -4.730676651000977
    9. ' se' → logprob: -4.980676651000977
    10. ' de' → logprob: -5.355676651000977

Token 402: ' de' (ID: 334)
  Prédit: ' complexe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' complexe' → logprob: -0.5748867988586426
    2. ' trop' → logprob: -1.8248867988586426
    3. ' très' → logprob: -2.5748867988586426
    4. 'complex' → logprob: -2.6998867988586426
    5. ' assez' → logprob: -3.9498867988586426
    6. 'tr' → logprob: -3.9498867988586426
    7. ' compliqué' → logprob: -4.449886798858643
    8. 't' → logprob: -4.574886798858643
    9. ' délic' → logprob: -4.699886798858643
    10. 'class' → logprob: -5.199886798858643

Token 403: ' trouver' (ID: 23195)
  Prédit: ' trouver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -1.5366495847702026
    2. ' calcul' → logprob: -1.6616495847702026
    3. ' résoudre' → logprob: -2.161649703979492
    4. 'calcul' → logprob: -2.286649703979492
    5. 's' → logprob: -2.536649703979492
    6. 'tr' → logprob: -3.036649703979492
    7. '#' → logprob: -3.161649703979492
    8. ' déterminer' → logprob: -3.161649703979492
    9. 't' → logprob: -3.411649703979492
    10. ' la' → logprob: -4.161649703979492

Token 404: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.15144097805023193
    2. ' le' → logprob: -2.5264410972595215
    3. 'la' → logprob: -3.7764410972595215
    4. 'le' → logprob: -3.9014410972595215
    5. ' l' → logprob: -4.6514410972595215
    6. ' une' → logprob: -6.1514410972595215
    7. 'l' → logprob: -6.7764410972595215
    8. ' un' → logprob: -7.2764410972595215
    9. ',' → logprob: -7.4014410972595215
    10. ' ' → logprob: -7.6514410972595215

Token 405: ' section' (ID: 7102)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.7347249984741211
    2. ' diamètre' → logprob: -1.234724998474121
    3. ' minimal' → logprob: -2.484724998474121
    4. ' rayon' → logprob: -2.984724998474121
    5. ' minimum' → logprob: -3.359724998474121
    6. ' diam' → logprob: -4.609724998474121
    7. ' meilleur' → logprob: -4.859724998474121
    8. 'diam' → logprob: -4.859724998474121
    9. ' cercle' → logprob: -4.984724998474121
    10. ' radius' → logprob: -5.109724998474121

Token 406: ' la' (ID: 557)
  Prédit: ' trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trans' → logprob: -0.15684758126735687
    2. 'trans' → logprob: -2.0318474769592285
    3. ' transverse' → logprob: -5.0318474769592285
    4. ' minimale' → logprob: -5.6568474769592285
    5. ' plane' → logprob: -6.2818474769592285
    6. ' transversal' → logprob: -7.2818474769592285
    7. '_trans' → logprob: -7.4068474769592285
    8. 'min' → logprob: -8.781847953796387
    9. ' ' → logprob: -9.406847953796387
    10. ' minimal' → logprob: -9.656847953796387

Token 407: ' plus' (ID: 2932)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.6390698552131653
    2. ' trans' → logprob: -1.8890697956085205
    3. ' plus' → logprob: -1.8890697956085205
    4. 'plus' → logprob: -3.2640697956085205
    5. ' transverse' → logprob: -3.2640697956085205
    6. 'plane' → logprob: -3.6390697956085205
    7. 'min' → logprob: -3.7640697956085205
    8. ' plane' → logprob: -3.8890697956085205
    9. ' minimale' → logprob: -5.5140700340271
    10. ' ' → logprob: -5.6390700340271

Token 408: ' petite' (ID: 28119)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.2486821860074997
    2. 'pet' → logprob: -1.9986821413040161
    3. 'min' → logprob: -3.3736822605133057
    4. ' trans' → logprob: -4.248682022094727
    5. 'pass' → logprob: -5.248682022094727
    6. 'small' → logprob: -5.248682022094727
    7. 'large' → logprob: -5.498682022094727
    8. 'cir' → logprob: -6.248682022094727
    9. ' transverse' → logprob: -6.373682022094727
    10. '```' → logprob: -6.373682022094727

Token 409: ' maximale' (ID: 76380)
  Prédit: ' trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trans' → logprob: -0.528866708278656
    2. ' possible' → logprob: -1.0288667678833008
    3. ' du' → logprob: -4.028866767883301
    4. 'possible' → logprob: -4.028866767883301
    5. 'trans' → logprob: -4.903866767883301
    6. ' ' → logprob: -6.028866767883301
    7. ' transverse' → logprob: -6.653866767883301
    8. ' circul' → logprob: -6.778866767883301
    9. ' capable' → logprob: -7.153866767883301
    10. ' d' → logprob: -7.528866767883301

Token 410: ' du' (ID: 1462)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.19312229752540588
    2. '   ' → logprob: -3.068122386932373
    3. 'possible' → logprob: -3.318122386932373
    4. '.' → logprob: -3.943122386932373
    5. ' ' → logprob: -4.318122386932373
    6. ')' → logprob: -4.318122386932373
    7. ' du' → logprob: -4.568122386932373
    8. ' de' → logprob: -4.693122386932373
    9. ',' → logprob: -5.068122386932373
    10. '_possible' → logprob: -6.193122386932373

Token 411: ' fromage' (ID: 167520)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.8667588829994202
    2. ' parall' → logprob: -0.8667588829994202
    3. ' paralle' → logprob: -2.9917588233947754
    4. 'from' → logprob: -3.1167588233947754
    5. ' fromage' → logprob: -3.6167588233947754
    6. ' from' → logprob: -3.7417588233947754
    7. '```' → logprob: -6.366758823394775
    8. 'che' → logprob: -6.491758823394775
    9. ' passage' → logprob: -6.866758823394775
    10. ' cube' → logprob: -6.866758823394775

Token 412: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7653490900993347
    2. ',' → logprob: -1.1403491497039795
    3. '   ' → logprob: -2.0153491497039795
    4. ')' → logprob: -4.1403489112854
    5. ' ' → logprob: -4.3903489112854
    6. '...' → logprob: -5.0153489112854
    7. ' (' → logprob: -5.0153489112854
    8. ':' → logprob: -5.2653489112854
    9. ' ,' → logprob: -5.5153489112854
    10. '<|end|>' → logprob: -5.6403489112854

Token 413: ' toute' (ID: 16825)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.26939594745635986
    2. 'pass' → logprob: -1.6443959474563599
    3. ' travers' → logprob: -3.7693958282470703
    4. 'n' → logprob: -4.39439582824707
    5. 'faire' → logprob: -6.14439582824707
    6. 'tout' → logprob: -6.64439582824707
    7. 'l' → logprob: -6.89439582824707
    8. ' passer' → logprob: -7.39439582824707
    9. 'part' → logprob: -7.76939582824707
    10. 'passing' → logprob: -7.89439582824707

Token 414: ' orientation' (ID: 29546)
  Prédit: 'orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orientation' → logprob: -0.1301364153623581
    2. 'angle' → logprob: -3.255136489868164
    3. 'rotation' → logprob: -3.630136489868164
    4. ' orientation' → logprob: -4.505136489868164
    5. 's' → logprob: -4.630136489868164
    6. '#' → logprob: -5.130136489868164
    7. 'intersection' → logprob: -5.255136489868164
    8. 'direction' → logprob: -5.505136489868164
    9. 'section' → logprob: -5.630136489868164
    10. 'l' → logprob: -6.005136489868164

Token 415: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9147120714187622
    2. '   ' → logprob: -0.9147120714187622
    3. ',' → logprob: -2.1647119522094727
    4. ')' → logprob: -3.0397119522094727
    5. ':' → logprob: -4.164711952209473
    6. ' )' → logprob: -6.164711952209473
    7. ' ' → logprob: -6.414711952209473
    8. '...' → logprob: -6.414711952209473
    9. '"' → logprob: -6.539711952209473
    10. '  ' → logprob: -6.664711952209473

Token 416: 'place' (ID: 3243)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11597935110330582
    2. ' )' → logprob: -2.3659794330596924
    3. ').' → logprob: -4.365979194641113
    4. ' ).' → logprob: -6.615979194641113
    5. '),' → logprob: -6.865979194641113
    6. ' ),' → logprob: -8.240979194641113
    7. ',' → logprob: -10.240979194641113
    8. ')...' → logprob: -10.240979194641113
    9. '   ' → logprob: -10.490979194641113
    10. '.' → logprob: -10.865979194641113

Token 417: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27214521169662476
    2. ' )' → logprob: -2.3971452713012695
    3. ' ' → logprob: -3.1471452713012695
    4. ' disponible' → logprob: -3.5221452713012695
    5. '=' → logprob: -4.0221452713012695
    6. ' restante' → logprob: -4.3971452713012695
    7. ' maximale' → logprob: -4.7721452713012695
    8. ' =' → logprob: -5.3971452713012695
    9. ' de' → logprob: -5.3971452713012695
    10. 's' → logprob: -6.0221452713012695

Token 418: ' pièce' (ID: 56132)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1013195514678955
    2. ' pièce' → logprob: -1.4763195514678955
    3. 'piece' → logprob: -2.1013195514678955
    4. 'from' → logprob: -3.3513195514678955
    5. 's' → logprob: -3.4763195514678955
    6. 'm' → logprob: -3.7263195514678955
    7. 'portion' → logprob: -3.8513195514678955
    8. '   ' → logprob: -4.101319313049316
    9. ' piece' → logprob: -4.351319313049316
    10. ' portion' → logprob: -4.351319313049316

Token 419: ' pour' (ID: 1930)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.6229603886604309
    2. 'dans' → logprob: -1.3729603290557861
    3. ' sur' → logprob: -3.122960329055786
    4. 'sur' → logprob: -3.747960329055786
    5. ' de' → logprob: -3.872960329055786
    6. ' à' → logprob: -3.872960329055786
    7. 'au' → logprob: -4.497960567474365
    8. ' ' → logprob: -4.872960567474365
    9. ' en' → logprob: -4.872960567474365
    10. ')' → logprob: -4.997960567474365

Token 420: ' minim' (ID: 23874)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.217521071434021
    2. ' passer' → logprob: -1.842521071434021
    3. 'p' → logprob: -5.2175211906433105
    4. ' pass' → logprob: -5.3425211906433105
    5. '   ' → logprob: -5.5925211906433105
    6. 'le' → logprob: -5.8425211906433105
    7. 'que' → logprob: -6.3425211906433105
    8. ' laquelle' → logprob: -6.3425211906433105
    9. 'la' → logprob: -6.5925211906433105
    10. ' passage' → logprob: -6.7175211906433105

Token 421: 'iser' (ID: 7466)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.028279853984713554
    2. 'iser' → logprob: -4.153279781341553
    3. 'al' → logprob: -5.653279781341553
    4. 'un' → logprob: -5.778279781341553
    5. 'u' → logprob: -6.278279781341553
    6. 'a' → logprob: -6.778279781341553
    7. 'ale' → logprob: -7.278279781341553
    8. 'user' → logprob: -7.778279781341553
    9. 'ser' → logprob: -8.028280258178711
    10. '#' → logprob: -8.403280258178711

Token 422: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4266146719455719
    2. ' sa' → logprob: -2.176614761352539
    3. ' le' → logprob: -2.426614761352539
    4. 'le' → logprob: -3.051614761352539
    5. 'la' → logprob: -3.426614761352539
    6. ' l' → logprob: -3.676614761352539
    7. ')' → logprob: -4.176614761352539
    8. ' son' → logprob: -4.676614761352539
    9. 'l' → logprob: -4.801614761352539
    10. 'son' → logprob: -6.051614761352539

Token 423: ' section' (ID: 7102)
  Prédit: ' passage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passage' → logprob: -0.3104386031627655
    2. ' section' → logprob: -1.935438632965088
    3. ' taille' → logprob: -4.310438632965088
    4. 'section' → logprob: -4.435438632965088
    5. ' diagonal' → logprob: -4.435438632965088
    6. ' diamètre' → logprob: -4.435438632965088
    7. ' surface' → logprob: -4.560438632965088
    8. ' plus' → logprob: -4.685438632965088
    9. 'diam' → logprob: -4.935438632965088
    10. ' ' → logprob: -5.060438632965088

Token 424: ' trans' (ID: 1643)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.731344997882843
    2. ' trans' → logprob: -0.856344997882843
    3. ')' → logprob: -2.8563449382781982
    4. ' maximale' → logprob: -4.606345176696777
    5. ' minimale' → logprob: -4.731345176696777
    6. ' transverse' → logprob: -4.856345176696777
    7. ' transversal' → logprob: -5.731345176696777
    8. ' minimal' → logprob: -6.731345176696777
    9. '_trans' → logprob: -6.981345176696777
    10. 'min' → logprob: -7.606345176696777

Token 425: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.008727914653718472
    2. 'versal' → logprob: -5.38372802734375
    3. 'verse' → logprob: -5.75872802734375
    4. 'mise' → logprob: -8.00872802734375
    5. 'miss' → logprob: -9.25872802734375
    6. 'pass' → logprob: -10.00872802734375
    7. 'mission' → logprob: -10.13372802734375
    8. 'port' → logprob: -10.38372802734375
    9. 'versa' → logprob: -10.50872802734375
    10. 'ver' → logprob: -10.63372802734375

Token 426: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -6.24179228907451e-05
    2. 'ée' → logprob: -10.750061988830566
    3. 'ales' → logprob: -11.125061988830566
    4. 'e' → logprob: -11.250061988830566
    5. 'al' → logprob: -11.625061988830566
    6. 'ion' → logprob: -13.875061988830566
    7. 'ionale' → logprob: -14.875061988830566
    8. 'elle' → logprob: -15.000061988830566
    9. 'é' → logprob: -15.250061988830566
    10. 'iale' → logprob: -15.375061988830566

Token 427: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04529334977269173
    2. ' )' → logprob: -3.7952933311462402
    3. ').' → logprob: -5.29529333114624
    4. '),' → logprob: -5.92029333114624
    5. ' maximale' → logprob: -5.92029333114624
    6. 'e' → logprob: -6.04529333114624
    7. ' possible' → logprob: -6.17029333114624
    8. ' de' → logprob: -6.67029333114624
    9. 'de' → logprob: -6.67029333114624
    10. '")' → logprob: -7.17029333114624

Token 428: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5845136642456055
    2. ')' → logprob: -1.0845136642456055
    3. 'def' → logprob: -2.9595136642456055
    4. ':' → logprob: -3.9595136642456055
    5. 'A' → logprob: -5.0845136642456055
    6. 'return' → logprob: -5.4595136642456055
    7. '[' → logprob: -5.8345136642456055
    8. ',' → logprob: -5.9595136642456055
    9. ']' → logprob: -6.3345136642456055
    10. '):' → logprob: -6.3345136642456055

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08774693310260773
    2. ')' → logprob: -2.7127468585968018
    3. 'def' → logprob: -5.712747097015381
    4. ':' → logprob: -5.712747097015381
    5. '):' → logprob: -6.587747097015381
    6. '    
' → logprob: -7.087747097015381
    7. 'return' → logprob: -7.212747097015381
    8. ']' → logprob: -7.462747097015381
    9. '  
' → logprob: -7.587747097015381
    10. ' ' → logprob: -7.712747097015381

Token 430: ' Final' (ID: 12625)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.3688275814056396
    2. '#' → logprob: -1.8688275814056396
    3. '   ' → logprob: -2.1188275814056396
    4. ' max' → logprob: -2.2438275814056396
    5. 'min' → logprob: -2.6188275814056396
    6. 'def' → logprob: -2.6188275814056396
    7. 'max' → logprob: -2.7438275814056396
    8. ' minimal' → logprob: -3.1188275814056396
    9. ' diagonal' → logprob: -3.2438275814056396
    10. ' smallest' → logprob: -5.118827819824219

Token 431: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.3748221695423126
    2. 'def' → logprob: -1.3748221397399902
    3. 'e' → logprob: -3.9998221397399902
    4. 'es' → logprob: -4.99982213973999
    5. ':' → logprob: -5.12482213973999
    6. 'ize' → logprob: -5.24982213973999
    7. ')' → logprob: -5.37482213973999
    8. 'ité' → logprob: -5.62482213973999
    9. '_' → logprob: -5.87482213973999
    10. '   ' → logprob: -5.87482213973999

Token 432: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5102028846740723
    2. ',' → logprob: -1.1352028846740723
    3. ':' → logprob: -3.6352028846740723
    4. ' return' → logprob: -3.7602028846740723
    5. 'return' → logprob: -4.385202884674072
    6. ' ,' → logprob: -5.135202884674072
    7. ' on' → logprob: -5.135202884674072
    8. ' :' → logprob: -6.635202884674072
    9. ' la' → logprob: -7.135202884674072
    10. ':return' → logprob: -7.260202884674072

Token 433: ' on' (ID: 402)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20323210954666138
    2. 'return' → logprob: -2.2032320499420166
    3. '   ' → logprob: -4.203232288360596
    4. ' diagonal' → logprob: -4.703232288360596
    5. ' #' → logprob: -4.828232288360596
    6. '#' → logprob: -4.828232288360596
    7. ' pass' → logprob: -5.328232288360596
    8. ' minimal' → logprob: -5.453232288360596
    9. ' radius' → logprob: -5.578232288360596
    10. ' min' → logprob: -5.703232288360596

Token 434: ' peut' (ID: 9216)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -1.0445066690444946
    2. ' peut' → logprob: -1.7945066690444946
    3. ' considère' → logprob: -1.9195066690444946
    4. ' retourne' → logprob: -2.294506549835205
    5. '   ' → logprob: -2.669506549835205
    6. ' return' → logprob: -2.919506549835205
    7. 'return' → logprob: -3.169506549835205
    8. 'pe' → logprob: -4.169506549835205
    9. ' doit' → logprob: -4.794506549835205
    10. ' estime' → logprob: -5.294506549835205

Token 435: ' s' (ID: 265)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.923430323600769
    2. 'pass' → logprob: -1.048430323600769
    3. 'dire' → logprob: -3.1734304428100586
    4. 'con' → logprob: -3.2984304428100586
    5. 'calcul' → logprob: -3.7984304428100586
    6. 'ret' → logprob: -4.173430442810059
    7. 'est' → logprob: -4.423430442810059
    8. 'approx' → logprob: -4.423430442810059
    9. 'simpl' → logprob: -4.423430442810059
    10. ' passer' → logprob: -4.548430442810059

Token 436: ''en' (ID: 16740)
  Prédit: 'impl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'impl' → logprob: -0.06900327652692795
    2. 'implement' → logprob: -3.3190033435821533
    3. 'e' → logprob: -3.9440033435821533
    4. 'u' → logprob: -6.694003105163574
    5. 'im' → logprob: -6.819003105163574
    6. 'up' → logprob: -7.194003105163574
    7. 'upp' → logprob: -7.444003105163574
    8. 'oit' → logprob: -7.819003105163574
    9. 'ay' → logprob: -7.944003105163574
    10. ''autor' → logprob: -8.069003105163574

Token 437: ' tenir' (ID: 57709)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5620478391647339
    2. 'tenir' → logprob: -1.9370478391647339
    3. 'serv' → logprob: -2.6870479583740234
    4. 'bas' → logprob: -2.9370479583740234
    5. 'app' → logprob: -3.0620479583740234
    6. 'content' → logprob: -3.0620479583740234
    7. 'taire' → logprob: -3.6870479583740234
    8. 'pass' → logprob: -4.312047958374023
    9. 'avoir' → logprob: -4.937047958374023
    10. 'dire' → logprob: -5.937047958374023

Token 438: ' a' (ID: 261)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.15303364396095276
    2. ' à' → logprob: -2.27803373336792
    3. '   ' → logprob: -4.02803373336792
    4. 'au' → logprob: -4.77803373336792
    5. '```' → logprob: -5.15303373336792
    6. ')' → logprob: -5.77803373336792
    7. ''à' → logprob: -6.77803373336792
    8. ' ' → logprob: -6.77803373336792
    9. 'aux' → logprob: -7.52803373336792
    10. ' au' → logprob: -7.65303373336792

Token 439: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4148341715335846
    2. 'u' → logprob: -1.9148341417312622
    3. 'la' → logprob: -3.0398342609405518
    4. '   ' → logprob: -3.4148342609405518
    5. 'une' → logprob: -3.7898342609405518
    6. ''une' → logprob: -4.039834022521973
    7. ''' → logprob: -4.414834022521973
    8. '"' → logprob: -4.539834022521973
    9. 'r' → logprob: -4.664834022521973
    10. ' une' → logprob: -4.664834022521973

Token 440: ' méthode' (ID: 71490)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.1519616842269897
    2. 'plus' → logprob: -1.1519616842269897
    3. 'min' → logprob: -1.7769616842269897
    4. 'di' → logprob: -2.9019618034362793
    5. ' min' → logprob: -3.0269618034362793
    6. ' diagonal' → logprob: -3.9019618034362793
    7. 'minimum' → logprob: -3.9019618034362793
    8. ' minimal' → logprob: -4.526961803436279
    9. 'simpl' → logprob: -4.776961803436279
    10. ' minimum' → logprob: -5.151961803436279

Token 441: ' mention' (ID: 8633)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7320887446403503
    2. ' =' → logprob: -1.8570888042449951
    3. 'import' → logprob: -2.857088804244995
    4. 'def' → logprob: -2.982088804244995
    5. ')' → logprob: -3.232088804244995
    6. ':' → logprob: -3.357088804244995
    7. '()' → logprob: -3.732088804244995
    8. ' math' → logprob: -3.857088804244995
    9. ' return' → logprob: -4.107088565826416
    10. ' la' → logprob: -4.482088565826416

Token 442: 'née' (ID: 86906)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7549161911010742
    2. 'ée' → logprob: -1.1299161911010742
    3. 'é' → logprob: -2.254916191101074
    4. 'er' → logprob: -2.504916191101074
    5. '=' → logprob: -4.254916191101074
    6. '_' → logprob: -6.004916191101074
    7. 'ee' → logprob: -7.129916191101074
    8. 'ue' → logprob: -7.379916191101074
    9. 'u' → logprob: -7.629916191101074
    10. 'r' → logprob: -7.879916191101074

Token 443: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13626255095005035
    2. ':' → logprob: -2.2612626552581787
    3. '):' → logprob: -4.3862624168396
    4. ')' → logprob: -5.1362624168396
    5. ' :' → logprob: -6.8862624168396
    6. '.' → logprob: -7.0112624168396
    7. 'def' → logprob: -7.0112624168396
    8. '    ' → logprob: -7.8862624168396
    9. ',' → logprob: -8.636262893676758
    10. 'return' → logprob: -8.761262893676758

Token 444: ' d' (ID: 272)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.458182156085968
    2. 'le' → logprob: -1.0831820964813232
    3. 'les' → logprob: -4.458182334899902
    4. 'l' → logprob: -4.958182334899902
    5. ' la' → logprob: -5.583182334899902
    6. 'une' → logprob: -6.083182334899902
    7. ' le' → logprob: -6.958182334899902
    8. '#' → logprob: -7.333182334899902
    9. '"""' → logprob: -7.458182334899902
    10. '```' → logprob: -7.833182334899902

Token 445: ''autres' (ID: 38753)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.2749333381652832
    2. 'ocument' → logprob: -2.399933338165283
    3. 'éf' → logprob: -2.774933338165283
    4. 'oc' → logprob: -3.024933338165283
    5. 'escription' → logprob: -3.649933338165283
    6. 'é' → logprob: -5.399933338165283
    7. 'e' → logprob: -6.024933338165283
    8. 'eff' → logprob: -7.149933338165283
    9. 'i' → logprob: -7.274933338165283
    10. 'ocumented' → logprob: -7.774933338165283

Token 446: ' sources' (ID: 11525)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.8227968215942383
    2. 'program' → logprob: -1.8227968215942383
    3. 'pro' → logprob: -2.4477968215942383
    4. ' lignes' → logprob: -2.4477968215942383
    5. 'sources' → logprob: -2.5727968215942383
    6. 'applications' → logprob: -2.8227968215942383
    7. 'comment' → logprob: -3.1977968215942383
    8. '#' → logprob: -3.1977968215942383
    9. 'l' → logprob: -3.3227968215942383
    10. ' commentaires' → logprob: -3.4477968215942383

Token 447: ' similaires' (ID: 129349)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07951534539461136
    2. ':' → logprob: -2.8295154571533203
    3. 'def' → logprob: -5.32951545715332
    4. ')' → logprob: -5.45451545715332
    5. ',' → logprob: -6.07951545715332
    6. '.' → logprob: -6.07951545715332
    7. '):' → logprob: -6.20451545715332
    8. ' :' → logprob: -7.95451545715332
    9. 'return' → logprob: -8.45451545715332
    10. '    ' → logprob: -8.70451545715332

Token 448: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15327870845794678
    2. ':' → logprob: -2.2782788276672363
    3. '):' → logprob: -3.9032788276672363
    4. ')' → logprob: -4.278278827667236
    5. 'def' → logprob: -5.653278827667236
    6. ' :' → logprob: -7.903278827667236
    7. '.' → logprob: -8.528278350830078
    8. '  ' → logprob: -8.653278350830078
    9. '    ' → logprob: -8.778278350830078
    10. ' ' → logprob: -8.778278350830078

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08366644382476807
    2. ' min' → logprob: -3.7086663246154785
    3. ' diagonal' → logprob: -4.2086663246154785
    4. ' max' → logprob: -4.5836663246154785
    5. ' return' → logprob: -5.3336663246154785
    6. '    
' → logprob: -5.4586663246154785
    7. ' minimal' → logprob: -5.5836663246154785
    8. ' diag' → logprob: -5.9586663246154785
    9. '    ' → logprob: -6.0836663246154785
    10. ' smallest' → logprob: -6.2086663246154785

Token 450: ' -' (ID: 533)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5873194932937622
    2. ' diagonal' → logprob: -2.2123193740844727
    3. '   ' → logprob: -2.5873193740844727
    4. 'min' → logprob: -3.0873193740844727
    5. ' dimensions' → logprob: -3.3373193740844727
    6. ' max' → logprob: -3.4623193740844727
    7. ' edges' → logprob: -3.9623193740844727
    8. ' return' → logprob: -4.212319374084473
    9. ' minimal' → logprob: -4.212319374084473
    10. ' side' → logprob: -4.712319374084473

Token 451: ' On' (ID: 2160)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9878396391868591
    2. 'di' → logprob: -1.737839698791504
    3. 'diam' → logprob: -2.612839698791504
    4. '#' → logprob: -2.612839698791504
    5. 'possible' → logprob: -3.112839698791504
    6. ' diagonal' → logprob: -3.362839698791504
    7. 'max' → logprob: -3.737839698791504
    8. ' min' → logprob: -3.737839698791504
    9. 'def' → logprob: -3.737839698791504
    10. '   ' → logprob: -3.862839698791504

Token 452: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.8904970288276672
    2. '   ' → logprob: -2.3904969692230225
    3. ' considère' → logprob: -2.7654969692230225
    4. ' peux' → logprob: -2.8904969692230225
    5. ' regarde' → logprob: -2.8904969692230225
    6. 'cal' → logprob: -3.5154969692230225
    7. ' prend' → logprob: -3.6404969692230225
    8. 'import' → logprob: -3.8904969692230225
    9. ' peut' → logprob: -4.015497207641602
    10. 'calc' → logprob: -4.015497207641602

Token 453: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.005529354326426983
    2. 'ul' → logprob: -5.630529403686523
    3. 'cule' → logprob: -6.630529403686523
    4. 'ulate' → logprob: -8.005529403686523
    5. 'uler' → logprob: -9.630529403686523
    6. 'ulé' → logprob: -9.880529403686523
    7. 'ulte' → logprob: -10.380529403686523
    8. 'ale' → logprob: -10.505529403686523
    9. 'cul' → logprob: -11.005529403686523
    10. 'le' → logprob: -11.380529403686523

Token 454: ' la' (ID: 557)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6539527773857117
    2. ' la' → logprob: -1.2789528369903564
    3. ' math' → logprob: -2.1539528369903564
    4. ' min' → logprob: -3.5289528369903564
    5. ' le' → logprob: -3.6539528369903564
    6. 'max' → logprob: -4.028952598571777
    7. 'math' → logprob: -5.528952598571777
    8. ' les' → logprob: -6.153952598571777
    9. 'la' → logprob: -6.403952598571777
    10. 'le' → logprob: -6.528952598571777

Token 455: ' diagon' (ID: 146014)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.591904878616333
    2. 'plus' → logprob: -1.466904878616333
    3. 'min' → logprob: -2.216904878616333
    4. ' min' → logprob: -3.216904878616333
    5. 'minimum' → logprob: -3.966904878616333
    6. ' minimum' → logprob: -4.466904640197754
    7. 'di' → logprob: -4.966904640197754
    8. ' next' → logprob: -5.091904640197754
    9. ' minimal' → logprob: -5.091904640197754
    10. ' smallest' → logprob: -5.466904640197754

Token 456: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.00015002528380136937
    2. 'al' → logprob: -8.875149726867676
    3. 'a' → logprob: -13.000149726867676
    4. 'le' → logprob: -13.375149726867676
    5. 'nale' → logprob: -13.500149726867676
    6. '**' → logprob: -14.125149726867676
    7. 'o' → logprob: -14.500149726867676
    8. '```' → logprob: -14.875149726867676
    9. '>' → logprob: -15.000149726867676
    10. '[' → logprob: -15.000149726867676

Token 457: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6028887033462524
    2. ' de' → logprob: -1.8528887033462524
    3. 'd' → logprob: -2.102888584136963
    4. 'de' → logprob: -2.352888584136963
    5. '_min' → logprob: -2.477888584136963
    6. '_de' → logprob: -3.102888584136963
    7. '_max' → logprob: -3.477888584136963
    8. ' d' → logprob: -3.852888584136963
    9. 'max' → logprob: -3.977888584136963
    10. '_possible' → logprob: -3.977888584136963

Token 458: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7259998917579651
    2. ' la' → logprob: -1.6009998321533203
    3. 'A' → logprob: -2.3509998321533203
    4. 'min' → logprob: -2.4759998321533203
    5. 'l' → logprob: -2.7259998321533203
    6. ' A' → logprob: -3.8509998321533203
    7. ' min' → logprob: -4.22599983215332
    8. 'max' → logprob: -5.10099983215332
    9. '(A' → logprob: -5.35099983215332
    10. ' chaque' → logprob: -5.60099983215332

Token 459: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.5278691649436951
    2. 'plus' → logprob: -1.7778692245483398
    3. ' face' → logprob: -2.15286922454834
    4. ' plus' → logprob: -2.27786922454834
    5. 'min' → logprob: -5.02786922454834
    6. 'A' → logprob: -5.40286922454834
    7. 'de' → logprob: -6.40286922454834
    8. 'import' → logprob: -6.65286922454834
    9. 'base' → logprob: -6.65286922454834
    10. 'from' → logprob: -6.90286922454834

Token 460: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1139182448387146
    2. ' AB' → logprob: -3.4889183044433594
    3. ' minimale' → logprob: -4.613918304443359
    4. '   ' → logprob: -4.863918304443359
    5. ' de' → logprob: -4.988918304443359
    6. 'AB' → logprob: -5.363918304443359
    7. ' ' → logprob: -5.488918304443359
    8. 's' → logprob: -5.738918304443359
    9. ' smallest' → logprob: -5.738918304443359
    10. 'A' → logprob: -5.863918304443359

Token 461: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.03381546959280968
    2. ' plus' → logprob: -3.408815383911133
    3. 'moins' → logprob: -9.658815383911133
    4. ' ' → logprob: -10.783815383911133
    5. '```' → logprob: -11.158815383911133
    6. '   ' → logprob: -11.283815383911133
    7. 'pl' → logprob: -11.283815383911133
    8. '+' → logprob: -11.533815383911133
    9. '  ' → logprob: -11.658815383911133
    10. '_plus' → logprob: -12.283815383911133

Token 462: ' grande' (ID: 10094)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.08067355304956436
    2. 'cour' → logprob: -2.5806734561920166
    3. 'small' → logprob: -7.205673694610596
    4. 'court' → logprob: -7.830673694610596
    5. 'gr' → logprob: -8.705673217773438
    6. 'long' → logprob: -9.080673217773438
    7. 'short' → logprob: -9.205673217773438
    8. 'min' → logprob: -9.330673217773438
    9. 'import' → logprob: -9.955673217773438
    10. 'c' → logprob: -10.205673217773438

Token 463: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32768431305885315
    2. ']' → logprob: -2.3276844024658203
    3. '**' → logprob: -2.9526844024658203
    4. '   ' → logprob: -3.8276844024658203
    5. ' ' → logprob: -4.45268440246582
    6. ',' → logprob: -4.57768440246582
    7. ' )' → logprob: -4.70268440246582
    8. 'possible' → logprob: -4.70268440246582
    9. '])' → logprob: -4.95268440246582
    10. '_possible' → logprob: -5.20268440246582

Token 464: 'car' (ID: 6830)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7805718183517456
    2. ')' → logprob: -1.7805718183517456
    3. '   ' → logprob: -2.280571937561035
    4. ' max' → logprob: -2.405571937561035
    5. 'A' → logprob: -2.780571937561035
    6. ' A' → logprob: -3.905571937561035
    7. ',' → logprob: -3.905571937561035
    8. '")' → logprob: -4.155571937561035
    9. ' ' → logprob: -4.405571937561035
    10. ' )' → logprob: -5.405571937561035

Token 465: ' il' (ID: 1793)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.40027472376823425
    2. ' max' → logprob: -1.4002747535705566
    3. 'A' → logprob: -4.025274753570557
    4. '   ' → logprob: -4.400274753570557
    5. ' A' → logprob: -4.525274753570557
    6. ' (' → logprob: -5.150274753570557
    7. '(max' → logprob: -5.400274753570557
    8. ' la' → logprob: -5.775274753570557
    9. ' ' → logprob: -6.025274753570557
    10. ')' → logprob: -6.150274753570557

Token 466: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4168983697891235
    2. ' faut' → logprob: -1.6668983697891235
    3. 'n' → logprob: -2.416898250579834
    4. 's' → logprob: -2.541898250579834
    5. ' n' → logprob: -2.791898250579834
    6. '_' → logprob: -3.041898250579834
    7. 'f' → logprob: -3.166898250579834
    8. '"' → logprob: -3.541898250579834
    9. '**' → logprob: -3.666898250579834
    10. ' )' → logprob: -3.666898250579834

Token 467: ' plus' (ID: 2932)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.4051269292831421
    2. 'possible' → logprob: -1.655126929283142
    3. ' plus' → logprob: -2.0301270484924316
    4. 'plus' → logprob: -5.030127048492432
    5. ' maximal' → logprob: -7.155127048492432
    6. ')' → logprob: -7.280127048492432
    7. ' difficile' → logprob: -7.655127048492432
    8. ' impossible' → logprob: -7.905127048492432
    9. '_possible' → logprob: -8.155126571655273
    10. ' )' → logprob: -9.030126571655273

Token 468: ' simple' (ID: 4705)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.2542780935764313
    2. 'long' → logprob: -2.7542781829833984
    3. ' long' → logprob: -3.2542781829833984
    4. ' grand' → logprob: -3.2542781829833984
    5. 'simple' → logprob: -4.004278182983398
    6. 'large' → logprob: -4.129278182983398
    7. ' simple' → logprob: -5.004278182983398
    8. 'pet' → logprob: -5.629278182983398
    9. 'gr' → logprob: -5.754278182983398
    10. ' petit' → logprob: -5.754278182983398

Token 469: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1880629062652588
    2. ' de' → logprob: -1.3130629062652588
    3. '   ' → logprob: -1.9380629062652588
    4. ' possible' → logprob: -2.313062906265259
    5. 'de' → logprob: -2.688062906265259
    6. 'possible' → logprob: -2.938062906265259
    7. ' à' → logprob: -4.18806266784668
    8. ' des' → logprob: -4.68806266784668
    9. ',' → logprob: -5.31306266784668
    10. ' d' → logprob: -5.43806266784668

Token 470: ' passer' (ID: 27727)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6293503046035767
    2. 'i' → logprob: -2.379350185394287
    3. 'face' → logprob: -2.379350185394287
    4. ' face' → logprob: -2.629350185394287
    5. 'pass' → logprob: -2.754350185394287
    6. ' passer' → logprob: -3.129350185394287
    7. ' le' → logprob: -4.004350185394287
    8. ' pass' → logprob: -4.379350185394287
    9. ' A' → logprob: -4.879350185394287
    10. ' l' → logprob: -5.004350185394287

Token 471: ' à' (ID: 1221)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.0493481159210205
    2. ' la' → logprob: -1.6743481159210205
    3. ')' → logprob: -1.9243481159210205
    4. ' à' → logprob: -2.5493481159210205
    5. 'la' → logprob: -3.0493481159210205
    6. 'par' → logprob: -3.6743481159210205
    7. ' au' → logprob: -3.6743481159210205
    8. 'le' → logprob: -3.7993481159210205
    9. ' le' → logprob: -3.9243481159210205
    10. ' through' → logprob: -3.9243481159210205

Token 472: ' plat' (ID: 26916)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.02340061217546463
    2. ' travers' → logprob: -3.8984005451202393
    3. 'through' → logprob: -6.898400783538818
    4. 'l' → logprob: -7.773400783538818
    5. 'pass' → logprob: -8.02340030670166
    6. '[' → logprob: -9.02340030670166
    7. ' through' → logprob: -9.02340030670166
    8. 'la' → logprob: -9.27340030670166
    9. '-tr' → logprob: -9.27340030670166
    10. '```' → logprob: -9.27340030670166

Token 473: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2517569065093994
    2. '   ' → logprob: -3.3767569065093994
    3. ' sur' → logprob: -3.3767569065093994
    4. ' ou' → logprob: -3.3767569065093994
    5. ' )' → logprob: -4.12675666809082
    6. ' de' → logprob: -4.25175666809082
    7. '),' → logprob: -4.37675666809082
    8. 'sur' → logprob: -4.50175666809082
    9. ' entre' → logprob: -4.75175666809082
    10. '")' → logprob: -4.87675666809082

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06454522162675858
    2. ')' → logprob: -3.064545154571533
    3. 'max' → logprob: -5.564545154571533
    4. ',' → logprob: -6.189545154571533
    5. '"' → logprob: -6.564545154571533
    6. ' ' → logprob: -6.814545154571533
    7. ' max' → logprob: -6.939545154571533
    8. 'def' → logprob: -7.564545154571533
    9. '_' → logprob: -7.814545154571533
    10. '    
' → logprob: -7.814545154571533

Token 475: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05875902250409126
    2. ')' → logprob: -2.9337589740753174
    3. ',' → logprob: -6.9337592124938965
    4. '.' → logprob: -8.058758735656738
    5. '    
' → logprob: -8.183758735656738
    6. 'max' → logprob: -8.183758735656738
    7. 'def' → logprob: -8.558758735656738
    8. ' )' → logprob: -8.808758735656738
    9. 'return' → logprob: -8.933758735656738
    10. '    ' → logprob: -8.933758735656738

Token 476: ' Et' (ID: 10007)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.276891827583313
    2. '   ' → logprob: -1.526891827583313
    3. 'min' → logprob: -2.5268917083740234
    4. 'faces' → logprob: -2.5268917083740234
    5. 'face' → logprob: -2.5268917083740234
    6. ' faces' → logprob: -3.0268917083740234
    7. ' max' → logprob: -3.2768917083740234
    8. ' diagonal' → logprob: -3.2768917083740234
    9. ' smallest' → logprob: -3.9018917083740234
    10. ' face' → logprob: -4.151891708374023

Token 477: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49226194620132446
    2. 'return' → logprob: -1.6172618865966797
    3. ' return' → logprob: -2.6172618865966797
    4. ' on' → logprob: -3.1172618865966797
    5. 'on' → logprob: -4.24226188659668
    6. ' ensuite' → logprob: -4.24226188659668
    7. ' la' → logprob: -4.99226188659668
    8. 'def' → logprob: -5.24226188659668
    9. 'le' → logprob: -5.49226188659668
    10. ' retourner' → logprob: -5.49226188659668

Token 478: ' compare' (ID: 12221)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.4226648807525635
    2. 'compare' → logprob: -1.6726648807525635
    3. ' return' → logprob: -1.7976648807525635
    4. ' compare' → logprob: -1.9226648807525635
    5. ' retourne' → logprob: -2.2976648807525635
    6. 'ret' → logprob: -2.6726648807525635
    7. ' calc' → logprob: -3.0476648807525635
    8. 'continue' → logprob: -5.047664642333984
    9. ' vér' → logprob: -5.297664642333984
    10. 'v' → logprob: -5.797664642333984

Token 479: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5549752712249756
    2. '   ' → logprob: -1.4299752712249756
    3. ' max' → logprob: -3.0549752712249756
    4. ' le' → logprob: -3.5549752712249756
    5. ' au' → logprob: -3.8049752712249756
    6. '_' → logprob: -4.554975509643555
    7. 'max' → logprob: -4.679975509643555
    8. ' à' → logprob: -4.804975509643555
    9. ' ' → logprob: -5.179975509643555
    10. ' if' → logprob: -5.304975509643555

Token 480: ' diagon' (ID: 146014)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.21052443981170654
    2. 'plus' → logprob: -1.9605244398117065
    3. 'max' → logprob: -4.335524559020996
    4. 'di' → logprob: -4.835524559020996
    5. ' max' → logprob: -4.960524559020996
    6. 'min' → logprob: -5.335524559020996
    7. ' smallest' → logprob: -5.710524559020996
    8. ' diagon' → logprob: -5.710524559020996
    9. ' min' → logprob: -5.960524559020996
    10. ' diagonal' → logprob: -6.085524559020996

Token 481: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.00027492138906382024
    2. 'al' → logprob: -8.500274658203125
    3. 'le' → logprob: -11.000274658203125
    4. '>' → logprob: -11.875274658203125
    5. 'nale' → logprob: -11.875274658203125
    6. 'але' → logprob: -12.125274658203125
    7. 'ole' → logprob: -12.625274658203125
    8. 'a' → logprob: -12.750274658203125
    9. '```' → logprob: -13.250274658203125
    10. 'ales' → logprob: -13.312774658203125

Token 482: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7634104490280151
    2. 'de' → logprob: -0.8884104490280151
    3. '_de' → logprob: -2.8884105682373047
    4. '_max' → logprob: -4.013410568237305
    5. '_min' → logprob: -4.638410568237305
    6. 'max' → logprob: -4.888410568237305
    7. '_' → logprob: -5.013410568237305
    8. ' maximale' → logprob: -5.513410568237305
    9. ' of' → logprob: -5.638410568237305
    10. ' minimale' → logprob: -6.138410568237305

Token 483: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4738842248916626
    2. ' la' → logprob: -1.0988842248916626
    3. 'l' → logprob: -3.723884105682373
    4. ' cette' → logprob: -4.598884105682373
    5. 'celle' → logprob: -5.473884105682373
    6. 'c' → logprob: -6.223884105682373
    7. ' ' → logprob: -6.973884105682373
    8. ' l' → logprob: -7.223884105682373
    9. ' celle' → logprob: -7.223884105682373
    10. 'max' → logprob: -8.098884582519531

Token 484: ' face' (ID: 4950)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.7972762584686279
    2. 'plus' → logprob: -0.9222762584686279
    3. 'face' → logprob: -2.172276258468628
    4. ' face' → logprob: -3.297276258468628
    5. ' ' → logprob: -8.672276496887207
    6. ' smallest' → logprob: -9.422276496887207
    7. 'largest' → logprob: -9.672276496887207
    8. 'c' → logprob: -9.797276496887207
    9. ' +' → logprob: -9.922276496887207
    10. 'max' → logprob: -10.172276496887207

Token 485: ' min' (ID: 1349)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.024836035445332527
    2. 'la' → logprob: -3.7748360633850098
    3. ' avec' → logprob: -8.274835586547852
    4. ' minimale' → logprob: -8.274835586547852
    5. 'import' → logprob: -8.399835586547852
    6. ' ' → logprob: -8.649835586547852
    7. ' qui' → logprob: -9.149835586547852
    8. ' maximale' → logprob: -9.649835586547852
    9. ' de' → logprob: -9.774835586547852
    10. 'le' → logprob: -10.024835586547852

Token 486: ' entre' (ID: 3853)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.6367858052253723
    2. 'im' → logprob: -0.7617858052253723
    3. 'inale' → logprob: -7.386785984039307
    4. ')' → logprob: -7.886785984039307
    5. 'nale' → logprob: -8.136785507202148
    6. 'ime' → logprob: -8.261785507202148
    7. '```' → logprob: -8.636785507202148
    8. 'érale' → logprob: -8.761785507202148
    9. '   ' → logprob: -8.886785507202148
    10. '#' → logprob: -9.011785507202148

Token 487: ' (' (ID: 350)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.37289682030677795
    2. ' A' → logprob: -1.8728967905044556
    3. 'les' → logprob: -2.497896909713745
    4. ' les' → logprob: -3.497896909713745
    5. 'B' → logprob: -4.747896671295166
    6. ' B' → logprob: -4.997896671295166
    7. ' (' → logprob: -5.372896671295166
    8. '(A' → logprob: -5.747896671295166
    9. 'le' → logprob: -5.997896671295166
    10. 'l' → logprob: -5.997896671295166

Token 488: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.021192306652665138
    2. ' A' → logprob: -4.6461920738220215
    3. '(A' → logprob: -5.1461920738220215
    4. 'B' → logprob: -5.8961920738220215
    5. ' (' → logprob: -6.1461920738220215
    6. '(' → logprob: -8.64619255065918
    7. '(B' → logprob: -8.77119255065918
    8. '   ' → logprob: -9.52119255065918
    9. ' B' → logprob: -10.02119255065918
    10. ')' → logprob: -10.27119255065918

Token 489: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009441551752388477
    2. ',B' → logprob: -4.884441375732422
    3. ' ,' → logprob: -6.384441375732422
    4. '*' → logprob: -9.884441375732422
    5. 'B' → logprob: -10.009441375732422
    6. '**' → logprob: -11.259441375732422
    7. ',
' → logprob: -12.384441375732422
    8. 'and' → logprob: -12.509441375732422
    9. '**,' → logprob: -12.634441375732422
    10. ' B' → logprob: -12.759441375732422

Token 490: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5077651143074036
    2. '),' → logprob: -1.1327650547027588
    3. ')' → logprob: -2.632765054702759
    4. ' ,' → logprob: -6.007765293121338
    5. ',C' → logprob: -6.882765293121338
    6. ' ),' → logprob: -8.63276481628418
    7. 'C' → logprob: -9.13276481628418
    8. ' ' → logprob: -9.50776481628418
    9. '   ' → logprob: -9.88276481628418
    10. '),(' → logprob: -9.88276481628418

Token 491: ' (' (ID: 350)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.9256795644760132
    2. ' (' → logprob: -1.0506795644760132
    3. ' C' → logprob: -2.4256796836853027
    4. 'A' → logprob: -2.6756796836853027
    5. '   ' → logprob: -3.5506796836853027
    6. '(A' → logprob: -3.9256796836853027
    7. '(' → logprob: -4.300679683685303
    8. ' A' → logprob: -4.300679683685303
    9. '(C' → logprob: -4.800679683685303
    10. ',' → logprob: -5.925679683685303

Token 492: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.29253312945365906
    2. 'B' → logprob: -1.4175331592559814
    3. ' A' → logprob: -4.917532920837402
    4. ' B' → logprob: -5.667532920837402
    5. 'C' → logprob: -7.792532920837402
    6. ',' → logprob: -9.917532920837402
    7. '   ' → logprob: -10.542532920837402
    8. '(A' → logprob: -11.605032920837402
    9. ' ' → logprob: -11.917532920837402
    10. ' C' → logprob: -12.292532920837402

Token 493: ',C' (ID: 26924)
  Prédit: ',C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.5779463648796082
    2. ',' → logprob: -0.8279463648796082
    3. ' ,' → logprob: -6.827946186065674
    4. 'C' → logprob: -7.327946186065674
    5. ',A' → logprob: -8.327946662902832
    6. ',
' → logprob: -11.702946662902832
    7. ' C' → logprob: -12.202946662902832
    8. 'A' → logprob: -13.327946662902832
    9. '```' → logprob: -13.952946662902832
    10. '，' → logprob: -14.077946662902832

Token 494: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.22687563300132751
    2. ')' → logprob: -1.60187566280365
    3. '),(' → logprob: -7.1018757820129395
    4. ',' → logprob: -7.6018757820129395
    5. '   ' → logprob: -9.851875305175781
    6. ' ),' → logprob: -10.351875305175781
    7. 'et' → logprob: -11.226875305175781
    8. '(A' → logprob: -11.226875305175781
    9. ' )' → logprob: -12.476875305175781
    10. ')
' → logprob: -12.976875305175781

Token 495: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.060140274465084076
    2. '(A' → logprob: -3.435140371322632
    3. '(' → logprob: -3.685140371322632
    4. '   ' → logprob: -7.560140132904053
    5. '(C' → logprob: -8.185140609741211
    6. ' and' → logprob: -9.435140609741211
    7. ',' → logprob: -9.435140609741211
    8. ')' → logprob: -10.685140609741211
    9. '(B' → logprob: -10.935140609741211
    10. 'and' → logprob: -11.185140609741211

Token 496: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04623619467020035
    2. ' A' → logprob: -3.796236276626587
    3. 'C' → logprob: -3.921236276626587
    4. '(A' → logprob: -6.671236038208008
    5. ' (' → logprob: -6.921236038208008
    6. ' C' → logprob: -8.171236038208008
    7. '(' → logprob: -8.671236038208008
    8. '(C' → logprob: -9.671236038208008
    9. ',' → logprob: -9.796236038208008
    10. '   ' → logprob: -10.171236038208008

Token 497: ',C' (ID: 26924)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6932604908943176
    2. ',C' → logprob: -0.6932604908943176
    3. 'C' → logprob: -9.943260192871094
    4. ' ,' → logprob: -10.318260192871094
    5. ',A' → logprob: -10.443260192871094
    6. ',B' → logprob: -13.943260192871094
    7. ' C' → logprob: -14.443260192871094
    8. ')' → logprob: -15.193260192871094
    9. '),' → logprob: -15.193260192871094
    10. ',
' → logprob: -15.318260192871094

Token 498: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000797119690105319
    2. ')**' → logprob: -7.750797271728516
    3. '   ' → logprob: -9.500797271728516
    4. ')
' → logprob: -9.625797271728516
    5. '))' → logprob: -9.750797271728516
    6. ').' → logprob: -9.750797271728516
    7. ' )' → logprob: -10.750797271728516
    8. '),' → logprob: -10.750797271728516
    9. '):' → logprob: -10.875797271728516
    10. ')`' → logprob: -11.500797271728516

Token 499: ' aux' (ID: 5850)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3775573670864105
    2. ')' → logprob: -1.877557396888733
    3. ':' → logprob: -2.2525572776794434
    4. 'def' → logprob: -3.8775572776794434
    5. ' ' → logprob: -4.752557277679443
    6. '):' → logprob: -5.502557277679443
    7. ':
' → logprob: -5.627557277679443
    8. '[' → logprob: -6.127557277679443
    9. 'return' → logprob: -6.252557277679443
    10. ']' → logprob: -6.502557277679443

Token 500: ' ray' (ID: 22420)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19058170914649963
    2. ' ' → logprob: -1.8155816793441772
    3. ' R' → logprob: -5.440581798553467
    4. 'R' → logprob: -5.940581798553467
    5. ' (' → logprob: -6.565581798553467
    6. 'diam' → logprob: -6.815581798553467
    7. '(' → logprob: -7.315581798553467
    8. 'le' → logprob: -8.940581321716309
    9. '[' → logprob: -9.378081321716309
    10. '0' → logprob: -9.940581321716309

Token 501: 'ons' (ID: 1808)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.4306824505329132
    2. 'ons' → logprob: -1.0556824207305908
    3. 'o' → logprob: -7.80568265914917
    4. 's' → logprob: -7.93068265914917
    5. ' on' → logprob: -8.180682182312012
    6. ' R' → logprob: -8.430682182312012
    7. 'os' → logprob: -8.680682182312012
    8. 'n' → logprob: -9.680682182312012
    9. 'R' → logprob: -9.930682182312012
    10. 'r' → logprob: -10.055682182312012

Token 502: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8255687952041626
    2. ':' → logprob: -1.3255687952041626
    3. '   ' → logprob: -1.5755687952041626
    4. ' ' → logprob: -3.450568675994873
    5. 'def' → logprob: -3.825568675994873
    6. '**' → logprob: -4.825568675994873
    7. '):' → logprob: -4.825568675994873
    8. ' )' → logprob: -5.825568675994873
    9. '.' → logprob: -6.075568675994873
    10. '  ' → logprob: -6.075568675994873

Token 503: '    
' (ID: 1944)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39223214983940125
    2. 'def' → logprob: -1.6422321796417236
    3. '   ' → logprob: -3.5172321796417236
    4. ' ' → logprob: -4.0172319412231445
    5. '_' → logprob: -4.1422319412231445
    6. ':
' → logprob: -4.3922319412231445
    7. ' :' → logprob: -4.3922319412231445
    8. ')' → logprob: -4.8922319412231445
    9. '(' → logprob: -5.2672319412231445
    10. '[' → logprob: -5.7672319412231445

Token 504: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050492383539676666
    2. ':' → logprob: -3.800492286682129
    3. 'def' → logprob: -4.550492286682129
    4. 'face' → logprob: -5.550492286682129
    5. 'min' → logprob: -6.300492286682129
    6. '    
' → logprob: -6.425492286682129
    7. ')' → logprob: -6.550492286682129
    8. '  
' → logprob: -6.925492286682129
    9. ' ' → logprob: -7.300492286682129
    10. '_face' → logprob: -7.425492286682129

Token 505: ' En' (ID: 2130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4308408200740814
    2. 'face' → logprob: -1.6808408498764038
    3. 'def' → logprob: -2.5558407306671143
    4. 'min' → logprob: -3.3058407306671143
    5. 'faces' → logprob: -4.055840969085693
    6. ' min' → logprob: -5.055840969085693
    7. ' face' → logprob: -5.430840969085693
    8. 'di' → logprob: -5.805840969085693
    9. 'max' → logprob: -5.930840969085693
    10. '    
' → logprob: -6.055840969085693

Token 506: ' résumé' (ID: 140184)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suite' → logprob: -1.0138009786605835
    2. ' fait' → logprob: -1.3888009786605835
    3. 'def' → logprob: -1.8888009786605835
    4. 'fin' → logprob: -2.638801097869873
    5. ' résumé' → logprob: -2.763801097869873
    6. 'fait' → logprob: -3.888801097869873
    7. ' effet' → logprob: -4.263801097869873
    8. ' somme' → logprob: -4.888801097869873
    9. ' continu' → logprob: -4.888801097869873
    10. ' fin' → logprob: -5.138801097869873

Token 507: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4429241120815277
    2. ':' → logprob: -1.31792414188385
    3. ',' → logprob: -2.4429240226745605
    4. ' :' → logprob: -6.0679240226745605
    5. 'def' → logprob: -8.192924499511719
    6. ' ,' → logprob: -8.817924499511719
    7. '    ' → logprob: -9.067924499511719
    8. ':
' → logprob: -9.317924499511719
    9. '    
' → logprob: -9.817924499511719
    10. '.' → logprob: -10.192924499511719

Token 508: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7753435373306274
    2. ' min' → logprob: -1.6503435373306274
    3. ' return' → logprob: -3.025343418121338
    4. 'min' → logprob: -3.275343418121338
    5. 'face' → logprob: -3.275343418121338
    6. ' smallest' → logprob: -3.400343418121338
    7. 'faces' → logprob: -3.650343418121338
    8. ' face' → logprob: -3.775343418121338
    9. ' diagonal' → logprob: -3.775343418121338
    10. ' max' → logprob: -4.025343418121338

Token 509: ' crit' (ID: 6709)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.37219342589378357
    2. ' code' → logprob: -2.3721933364868164
    3. 'plus' → logprob: -2.3721933364868164
    4. ' passage' → logprob: -3.9971933364868164
    5. ' meilleur' → logprob: -4.247193336486816
    6. 'diam' → logprob: -4.497193336486816
    7. ' from' → logprob: -4.622193336486816
    8. ' smallest' → logprob: -4.747193336486816
    9. ' minimal' → logprob: -5.122193336486816
    10. ' diam' → logprob: -5.247193336486816

Token 510: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.10970136523246765
    2. 'è' → logprob: -2.98470139503479
    3. 'e' → logprob: -3.23470139503479
    4. 'é' → logprob: -4.609701156616211
    5. 'ere' → logprob: -6.984701156616211
    6. 'ére' → logprob: -7.609701156616211
    7. 'er' → logprob: -7.859701156616211
    8. 'ève' → logprob: -8.109701156616211
    9. 'al' → logprob: -8.234701156616211
    10. 'èr' → logprob: -8.234701156616211

Token 511: ' reten' (ID: 91978)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3728567361831665
    2. ':' → logprob: -1.9978567361831665
    3. 'est' → logprob: -2.372856616973877
    4. ' de' → logprob: -3.247856616973877
    5. ' ' → logprob: -4.497856616973877
    6. ' minimal' → logprob: -4.997856616973877
    7. '   ' → logprob: -5.122856616973877
    8. ' =' → logprob: -5.247856616973877
    9. '=' → logprob: -5.747856616973877
    10. ' :' → logprob: -5.872856616973877

Token 512: 'u' (ID: 84)
  Prédit: 'éré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.034764643758535385
    2. 'ère' → logprob: -3.784764528274536
    3. 'er' → logprob: -4.784764766693115
    4. 'é' → logprob: -6.034764766693115
    5. 'ére' → logprob: -8.659764289855957
    6. 'u' → logprob: -8.784764289855957
    7. 'ér' → logprob: -9.284764289855957
    8. 'ré' → logprob: -10.034764289855957
    9. 'e' → logprob: -10.034764289855957
    10. 'è' → logprob: -10.159764289855957

Token 513: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6961258053779602
    2. ' est' → logprob: -0.9461258053779602
    3. 'est' → logprob: -2.6961257457733154
    4. ':' → logprob: -3.3211257457733154
    5. ' ' → logprob: -5.4461259841918945
    6. '   ' → logprob: -6.5711259841918945
    7. '  ' → logprob: -6.9461259841918945
    8. ' :' → logprob: -7.1961259841918945
    9. ' =' → logprob: -7.3211259841918945
    10. '=' → logprob: -7.6961259841918945

Token 514: ' ce' (ID: 2357)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1735577583312988
    2. 'la' → logprob: -2.048557758331299
    3. ' le' → logprob: -2.173557758331299
    4. 'can' → logprob: -2.173557758331299
    5. 'le' → logprob: -2.548557758331299
    6. 'l' → logprob: -2.673557758331299
    7. ' ce' → logprob: -3.048557758331299
    8. 'def' → logprob: -3.048557758331299
    9. ' cette' → logprob: -3.048557758331299
    10. ' can' → logprob: -3.923557758331299

Token 515: ' type' (ID: 1490)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5328911542892456
    2. 'code' → logprob: -1.4078911542892456
    3. '#' → logprob: -2.532891273498535
    4. ' code' → logprob: -2.657891273498535
    5. 'comment' → logprob: -5.407891273498535
    6. ' dernier' → logprob: -6.407891273498535
    7. ' commentaire' → logprob: -6.407891273498535
    8. 'dern' → logprob: -6.782891273498535
    9. 'return' → logprob: -6.782891273498535
    10. 'doc' → logprob: -6.907891273498535

Token 516: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3278416097164154
    2. '_de' → logprob: -2.4528415203094482
    3. '_' → logprob: -2.8278415203094482
    4. ' d' → logprob: -2.9528415203094482
    5. 'def' → logprob: -3.3278415203094482
    6. '_d' → logprob: -3.7028415203094482
    7. 'de' → logprob: -4.452841758728027
    8. 'd' → logprob: -6.077841758728027
    9. ' =' → logprob: -6.202841758728027
    10. '_code' → logprob: -6.952841758728027

Token 517: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -1.0324475765228271
    2. 'pro' → logprob: -1.5324475765228271
    3. ' passage' → logprob: -1.9074475765228271
    4. 'pass' → logprob: -2.782447576522827
    5. 'code' → logprob: -3.157447576522827
    6. 'calcul' → logprob: -3.532447576522827
    7. 'proble' → logprob: -3.907447576522827
    8. ' code' → logprob: -4.032447814941406
    9. 'fonction' → logprob: -4.282447814941406
    10. 'cas' → logprob: -5.032447814941406

Token 518: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.45722341537475586
    2. '   ' → logprob: -1.2072234153747559
    3. ':' → logprob: -2.832223415374756
    4. 'est' → logprob: -5.457223415374756
    5. ',' → logprob: -6.207223415374756
    6. ' :' → logprob: -6.957223415374756
    7. ' ' → logprob: -7.582223415374756
    8. '    ' → logprob: -7.957223415374756
    9. ' is' → logprob: -7.957223415374756
    10. '  ' → logprob: -8.832223892211914

Token 519: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18471987545490265
    2. '    ' → logprob: -2.6847198009490967
    3. ' de' → logprob: -2.6847198009490967
    4. ' math' → logprob: -4.559720039367676
    5. ' d' → logprob: -5.309720039367676
    6. ':' → logprob: -5.559720039367676
    7. ' que' → logprob: -6.059720039367676
    8. ' ' → logprob: -6.309720039367676
    9. 'de' → logprob: -6.559720039367676
    10. '  ' → logprob: -6.809720039367676

Token 520: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030818097293376923
    2. '    ' → logprob: -7.003081798553467
    3. '    
' → logprob: -7.628081798553467
    4. ' minimal' → logprob: -8.003082275390625
    5. ' smallest' → logprob: -8.378082275390625
    6. '
' → logprob: -8.753082275390625
    7. '"' → logprob: -9.128082275390625
    8. 'min' → logprob: -9.253082275390625
    9. 'max' → logprob: -9.378082275390625
    10. ' max' → logprob: -9.378082275390625

Token 521: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1090526208281517
    2. ' min' → logprob: -3.1090526580810547
    3. ' smallest' → logprob: -4.484052658081055
    4. 'min' → logprob: -4.609052658081055
    5. ' diagonal' → logprob: -4.984052658081055
    6. ' minimal' → logprob: -4.984052658081055
    7. ' max' → logprob: -5.109052658081055
    8. 'face' → logprob: -5.984052658081055
    9. 'faces' → logprob: -5.984052658081055
    10. 'max' → logprob: -6.484052658081055

Token 522: ' fromage' (ID: 167520)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.1170215606689453
    2. 'from' → logprob: -1.2420215606689453
    3. 'plus' → logprob: -1.6170215606689453
    4. ' from' → logprob: -2.4920215606689453
    5. ' fromage' → logprob: -2.4920215606689453
    6. 'diam' → logprob: -5.367021560668945
    7. 'che' → logprob: -5.867021560668945
    8. 'minimum' → logprob: -5.992021560668945
    9. ' diamètre' → logprob: -6.117021560668945
    10. ' minimum' → logprob: -6.492021560668945

Token 523: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.6607242822647095
    2. 'pe' → logprob: -0.7857242822647095
    3. ' doit' → logprob: -4.78572416305542
    4. 'est' → logprob: -5.78572416305542
    5. '_pe' → logprob: -5.78572416305542
    6. ' ' → logprob: -6.03572416305542
    7. ' peux' → logprob: -6.16072416305542
    8. ' passe' → logprob: -6.53572416305542
    9. 'do' → logprob: -7.03572416305542
    10. 'p' → logprob: -7.41072416305542

Token 524: ' passer' (ID: 27727)
  Prédit: ' passer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passer' → logprob: -0.01946617104113102
    2. 'pass' → logprob: -4.269466400146484
    3. ' pass' → logprob: -5.894466400146484
    4. '_pass' → logprob: -6.519466400146484
    5. ' passes' → logprob: -8.269466400146484
    6. ' ' → logprob: -8.519466400146484
    7. ' passe' → logprob: -9.519466400146484
    8. '_' → logprob: -9.644466400146484
    9. ' passage' → logprob: -9.894466400146484
    10. ' être' → logprob: -10.019466400146484

Token 525: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.1150897964835167
    2. ' à' → logprob: -3.1150898933410645
    3. ' if' → logprob: -4.2400898933410645
    4. ' through' → logprob: -4.3650898933410645
    5. ' par' → logprob: -4.6150898933410645
    6. ' ' → logprob: -4.7400898933410645
    7. '_' → logprob: -5.6150898933410645
    8. '   ' → logprob: -5.8650898933410645
    9. 'si' → logprob: -5.8650898933410645
    10. ' uniquement' → logprob: -6.2400898933410645

Token 526: ' ' (ID: 220)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8838374018669128
    2. ' min' → logprob: -1.5088374614715576
    3. ' ' → logprob: -2.3838374614715576
    4. ' any' → logprob: -2.6338374614715576
    5. 'min' → logprob: -2.7588374614715576
    6. ' R' → logprob: -2.7588374614715576
    7. '2' → logprob: -3.5088374614715576
    8. 'math' → logprob: -4.0088372230529785
    9. '   ' → logprob: -4.5088372230529785
    10. ' la' → logprob: -5.3838372230529785

Token 527: '2' (ID: 17)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9749430418014526
    2. '2' → logprob: -1.4749430418014526
    3. 'math' → logprob: -2.099943161010742
    4. 'min' → logprob: -2.474943161010742
    5. ' min' → logprob: -2.724943161010742
    6. ' ' → logprob: -2.724943161010742
    7. ' any' → logprob: -3.599943161010742
    8. ' R' → logprob: -4.724943161010742
    9. ' la' → logprob: -5.349943161010742
    10. ' max' → logprob: -5.599943161010742

Token 528: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.348496675491333
    2. ' *' → logprob: -1.223496675491333
    3. 'R' → logprob: -10.473496437072754
    4. '*r' → logprob: -11.598496437072754
    5. ' <=' → logprob: -12.598496437072754
    6. ' R' → logprob: -13.598496437072754
    7. '**' → logprob: -13.848496437072754
    8. '*(' → logprob: -13.848496437072754
    9. '*np' → logprob: -13.848496437072754
    10. '.' → logprob: -13.973496437072754

Token 529: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.008510438725352287
    2. 'min' → logprob: -5.383510589599609
    3. ' R' → logprob: -5.633510589599609
    4. ' min' → logprob: -8.25851058959961
    5. 'max' → logprob: -11.38351058959961
    6. '(min' → logprob: -11.38351058959961
    7. '(R' → logprob: -12.25851058959961
    8. '*' → logprob: -12.75851058959961
    9. 'math' → logprob: -12.75851058959961
    10. 'r' → logprob: -13.13351058959961

Token 530: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5822228193283081
    2. ' >=' → logprob: -0.8322228193283081
    3. '>' → logprob: -5.207222938537598
    4. ' >' → logprob: -7.457222938537598
    5. '<=' → logprob: -9.957222938537598
    6. '≥' → logprob: -10.332222938537598
    7. ')>=' → logprob: -10.582222938537598
    8. ' <=' → logprob: -10.707222938537598
    9. ']>=' → logprob: -11.082222938537598
    10. '">' → logprob: -11.457222938537598

Token 531: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10735488682985306
    2. 'math' → logprob: -3.1073548793792725
    3. ' min' → logprob: -3.6073548793792725
    4. 'max' → logprob: -3.8573548793792725
    5. ' math' → logprob: -4.857355117797852
    6. ' max' → logprob: -6.982355117797852
    7. '   ' → logprob: -9.857355117797852
    8. 'minimum' → logprob: -11.232355117797852
    9. ' la' → logprob: -11.857355117797852
    10. 'ma' → logprob: -11.982355117797852

Token 532: ' des' (ID: 731)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.5511126518249512
    2. '(' → logprob: -1.5511126518249512
    3. '(A' → logprob: -2.051112651824951
    4. '(min' → logprob: -2.801112651824951
    5. '(
' → logprob: -4.176112651824951
    6. '([' → logprob: -5.801112651824951
    7. 'math' → logprob: -6.426112651824951
    8. '((' → logprob: -6.676112651824951
    9. 'min' → logprob: -8.17611312866211
    10. '(

' → logprob: -8.92611312866211

Token 533: ' diagon' (ID: 146014)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.8397570848464966
    2. '[' → logprob: -1.0897570848464966
    3. '(math' → logprob: -1.5897570848464966
    4. '(
' → logprob: -4.839756965637207
    5. 'math' → logprob: -4.964756965637207
    6. '(' → logprob: -5.339756965637207
    7. '([' → logprob: -5.964756965637207
    8. '[A' → logprob: -6.214756965637207
    9. '(A' → logprob: -6.464756965637207
    10. '([
' → logprob: -7.339756965637207

Token 534: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.0006703823455609381
    2. 'ale' → logprob: -7.375670433044434
    3. 'al' → logprob: -11.250670433044434
    4. '{' → logprob: -11.750670433044434
    5. '(' → logprob: -12.125670433044434
    6. '```' → logprob: -12.750670433044434
    7. '[' → logprob: -12.875670433044434
    8. 'a' → logprob: -13.125670433044434
    9. ' ales' → logprob: -13.250670433044434
    10. 'als' → logprob: -13.750670433044434

Token 535: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24290698766708374
    2. 'def' → logprob: -2.4929070472717285
    3. ':' → logprob: -2.8679070472717285
    4. ')' → logprob: -4.4929070472717285
    5. '(' → logprob: -4.4929070472717285
    6. '\' → logprob: -4.8679070472717285
    7. ' ' → logprob: -4.9929070472717285
    8. '"' → logprob: -5.1179070472717285
    9. ' (' → logprob: -5.2429070472717285
    10. 'import' → logprob: -5.8679070472717285

Token 536: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.1269393414258957
    2. '(A' → logprob: -2.251939296722412
    3. '[(' → logprob: -4.876939296722412
    4. ' faces' → logprob: -6.501939296722412
    5. '(' → logprob: -6.751939296722412
    6. '[
' → logprob: -6.751939296722412
    7. 'face' → logprob: -7.376939296722412
    8. '[A' → logprob: -7.376939296722412
    9. '[' → logprob: -8.75193977355957
    10. ' (' → logprob: -8.87693977355957

Token 537: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5107240080833435
    2. ':' → logprob: -1.6357240676879883
    3. 'def' → logprob: -3.0107240676879883
    4. ')' → logprob: -3.1357240676879883
    5. '\' → logprob: -3.3857240676879883
    6. '_' → logprob: -4.010724067687988
    7. '.' → logprob: -4.760724067687988
    8. '\n' → logprob: -5.010724067687988
    9. '(' → logprob: -5.135724067687988
    10. '
' → logprob: -5.635724067687988

Token 538: 'min' (ID: 1493)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.38342100381851196
    2. ')' → logprob: -1.7584209442138672
    3. ' (' → logprob: -3.383420944213867
    4. '[(' → logprob: -3.383420944213867
    5. '   ' → logprob: -4.258420944213867
    6. '(' → logprob: -4.383420944213867
    7. 'A' → logprob: -4.758420944213867
    8. 'min' → logprob: -4.758420944213867
    9. ',' → logprob: -5.508420944213867
    10. '),' → logprob: -5.508420944213867

Token 539: ' diagonal' (ID: 71638)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.425995409488678
    2. '(math' → logprob: -1.3009953498840332
    3. '(
' → logprob: -3.675995349884033
    4. '(' → logprob: -3.925995349884033
    5. '((' → logprob: -4.550995349884033
    6. '([(' → logprob: -4.800995349884033
    7. '([' → logprob: -5.925995349884033
    8. '   ' → logprob: -5.925995349884033
    9. ' (' → logprob: -6.675995349884033
    10. '([
' → logprob: -7.050995349884033

Token 540: ')
' (ID: 446)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.04533824324607849
    2. 'ales' → logprob: -3.1703381538391113
    3. 'les' → logprob: -6.670338153839111
    4. 'e' → logprob: -7.170338153839111
    5. ')' → logprob: -8.67033863067627
    6. 'ale' → logprob: -10.29533863067627
    7. 'al' → logprob: -10.29533863067627
    8. 'als' → logprob: -10.54533863067627
    9. '```' → logprob: -11.92033863067627
    10. 's' → logprob: -12.42033863067627

Token 541: '    
' (ID: 1944)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34504616260528564
    2. ')' → logprob: -1.5950461626052856
    3. '   ' → logprob: -4.095046043395996
    4. '(' → logprob: -4.220046043395996
    5. ':' → logprob: -4.595046043395996
    6. 'import' → logprob: -4.970046043395996
    7. '[' → logprob: -4.970046043395996
    8. '**' → logprob: -5.220046043395996
    9. '_' → logprob: -5.845046043395996
    10. '.' → logprob: -5.970046043395996

Token 542: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.089688740670681
    2. 'def' → logprob: -2.714688777923584
    3. ')' → logprob: -4.214688777923584
    4. ':' → logprob: -6.464688777923584
    5. '    
' → logprob: -7.839688777923584
    6. ',' → logprob: -7.964688777923584
    7. '.' → logprob: -8.214688301086426
    8. '"' → logprob: -8.714688301086426
    9. 'face' → logprob: -8.714688301086426
    10. 'return' → logprob: -9.089688301086426

Token 543: ' C' (ID: 363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4784456491470337
    2. 'def' → logprob: -1.7284456491470337
    3. 'min' → logprob: -2.228445529937744
    4. 'di' → logprob: -3.353445529937744
    5. 'face' → logprob: -4.103445529937744
    6. ':' → logprob: -4.228445529937744
    7. 'faces' → logprob: -5.103445529937744
    8. 'diag' → logprob: -5.603445529937744
    9. 'd' → logprob: -6.103445529937744
    10. ' ' → logprob: -6.103445529937744

Token 544: ''est' (ID: 6616)
  Prédit: 'om'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'om' → logprob: -1.5406991243362427
    2. 'ont' → logprob: -1.7906991243362427
    3. 'on' → logprob: -2.290699005126953
    4. '#' → logprob: -2.540699005126953
    5. 'al' → logprob: -2.790699005126953
    6. ' =' → logprob: -3.290699005126953
    7. 'faces' → logprob: -3.540699005126953
    8. 'ond' → logprob: -3.915699005126953
    9. 'ons' → logprob: -3.915699005126953
    10. '=' → logprob: -4.040699005126953

Token 545: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6865418553352356
    2. ' la' → logprob: -2.311541795730591
    3. ' donc' → logprob: -2.436541795730591
    4. ' a' → logprob: -3.061541795730591
    5. ' le' → logprob: -3.186541795730591
    6. ' une' → logprob: -3.311541795730591
    7. ' ce' → logprob: -3.936541795730591
    8. ' ' → logprob: -4.06154203414917
    9. '   ' → logprob: -4.06154203414917
    10. ' "' → logprob: -4.18654203414917

Token 546: ' dire' (ID: 4071)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.0035259556025266647
    2. 'not' → logprob: -6.003525733947754
    3. ' dire' → logprob: -7.753525733947754
    4. '-dire' → logprob: -8.628525733947754
    5. 'vous' → logprob: -8.878525733947754
    6. '   ' → logprob: -9.128525733947754
    7. '```' → logprob: -10.628525733947754
    8. 'voir' → logprob: -10.753525733947754
    9. 'cause' → logprob: -11.128525733947754
    10. 'la' → logprob: -11.253525733947754

Token 547: ',' (ID: 11)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.3652883768081665
    2. ' math' → logprob: -1.3652883768081665
    3. ' ' → logprob: -1.6152883768081665
    4. '2' → logprob: -1.6152883768081665
    5. 'min' → logprob: -3.490288257598877
    6. 'math' → logprob: -3.740288257598877
    7. '   ' → logprob: -3.865288257598877
    8. ' que' → logprob: -5.490288257598877
    9. ' int' → logprob: -5.865288257598877
    10. ' la' → logprob: -6.365288257598877

Token 548: ' s' (ID: 265)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19838137924671173
    2. 'math' → logprob: -2.8233814239501953
    3. 'min' → logprob: -2.9483814239501953
    4. ' ' → logprob: -3.4483814239501953
    5. ' math' → logprob: -3.5733814239501953
    6. ' min' → logprob: -5.948381423950195
    7. 'True' → logprob: -6.448381423950195
    8. '   ' → logprob: -6.698381423950195
    9. 'diam' → logprob: -7.073381423950195
    10. '(' → logprob: -8.198381423950195

Token 549: ''il' (ID: 14683)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2770695090293884
    2. ''il' → logprob: -1.6520695686340332
    3. '2' → logprob: -3.527069568634033
    4. ''' → logprob: -5.027069568634033
    5. 'ur' → logprob: -5.152069568634033
    6. 'que' → logprob: -6.402069568634033
    7. 'u' → logprob: -6.402069568634033
    8. ''i' → logprob: -6.902069568634033
    9. 'si' → logprob: -7.277069568634033
    10. 'e' → logprob: -7.277069568634033

Token 550: ' existe' (ID: 19498)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -1.1930161714553833
    2. ' y' → logprob: -1.4430161714553833
    3. ' ' → logprob: -1.8180161714553833
    4. ' n' → logprob: -2.1930160522460938
    5. 'n' → logprob: -2.6930160522460938
    6. '2' → logprob: -3.4430160522460938
    7. 'y' → logprob: -3.5680160522460938
    8. '   ' → logprob: -3.9430160522460938
    9. ' suffit' → logprob: -4.693016052246094
    10. ' peux' → logprob: -5.443016052246094

Token 551: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.13308052718639374
    2. ' au' → logprob: -3.13308048248291
    3. 'une' → logprob: -3.13308048248291
    4. ' un' → logprob: -3.88308048248291
    5. ' ' → logprob: -4.38308048248291
    6. 'un' → logprob: -6.63308048248291
    7. 'au' → logprob: -6.63308048248291
    8. ' deux' → logprob: -7.50808048248291
    9. ' a' → logprob: -7.88308048248291
    10. ' u' → logprob: -8.50808048248291

Token 552: ' orientation' (ID: 29546)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.6467657089233398
    2. ' face' → logprob: -0.8967657089233398
    3. ' paire' → logprob: -3.64676570892334
    4. ' orientation' → logprob: -4.14676570892334
    5. 'orientation' → logprob: -4.64676570892334
    6. ' pair' → logprob: -6.02176570892334
    7. ' combinaison' → logprob: -6.27176570892334
    8. ' diagonal' → logprob: -6.27176570892334
    9. 'fa' → logprob: -6.52176570892334
    10. ' diagon' → logprob: -6.64676570892334

Token 553: ' dans' (ID: 2671)
  Prédit: ' où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' où' → logprob: -1.4869166612625122
    2. ' telle' → logprob: -1.4869166612625122
    3. ' de' → logprob: -1.9869166612625122
    4. ' des' → logprob: -2.4869165420532227
    5. ' ' → logprob: -2.7369165420532227
    6. ' possible' → logprob: -2.9869165420532227
    7. '_possible' → logprob: -3.3619165420532227
    8. 'où' → logprob: -3.3619165420532227
    9. ' _' → logprob: -3.6119165420532227
    10. '_' → logprob: -3.8619165420532227

Token 554: ' laquelle' (ID: 47998)
  Prédit: ' laquelle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' laquelle' → logprob: -0.019805047661066055
    2. ' which' → logprob: -5.144804954528809
    3. 'which' → logprob: -5.394804954528809
    4. 'la' → logprob: -5.394804954528809
    5. ' lequel' → logprob: -6.269804954528809
    6. 'le' → logprob: -6.644804954528809
    7. ' la' → logprob: -7.644804954528809
    8. '   ' → logprob: -8.144804954528809
    9. ' lesquelles' → logprob: -8.519804954528809
    10. 'l' → logprob: -9.019804954528809

Token 555: ' il' (ID: 1793)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.002147912979126
    2. ' ' → logprob: -1.002147912979126
    3. ' le' → logprob: -2.127147912979126
    4. 'from' → logprob: -2.752147912979126
    5. 'le' → logprob: -3.502147912979126
    6. ' la' → logprob: -4.002147674560547
    7. ' from' → logprob: -4.377147674560547
    8. '   ' → logprob: -4.752147674560547
    9. 'che' → logprob: -5.752147674560547
    10. 'min' → logprob: -6.002147674560547

Token 556: ' passe' (ID: 22210)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.4380699098110199
    2. 'pe' → logprob: -1.8130699396133423
    3. ' passe' → logprob: -2.0630698204040527
    4. 'pass' → logprob: -3.4380698204040527
    5. 'p' → logprob: -3.9380698204040527
    6. '   ' → logprob: -6.063069820404053
    7. 'est' → logprob: -6.188069820404053
    8. ' ' → logprob: -6.313069820404053
    9. ' can' → logprob: -6.688069820404053
    10. ' peux' → logprob: -6.688069820404053

Token 557: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32045963406562805
    2. '   ' → logprob: -1.3204596042633057
    3. '):' → logprob: -5.945459842681885
    4. '.' → logprob: -7.070459842681885
    5. ' :' → logprob: -7.070459842681885
    6. ':
' → logprob: -7.320459842681885
    7. ',' → logprob: -7.820459842681885
    8. ' ' → logprob: -7.820459842681885
    9. '_' → logprob: -8.195459365844727
    10. ')' → logprob: -8.570459365844727

Token 558: ' alors' (ID: 17971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14309810101985931
    2. ':' → logprob: -2.2680981159210205
    3. ')' → logprob: -5.268097877502441
    4. ' ' → logprob: -5.393097877502441
    5. '):' → logprob: -5.518097877502441
    6. ''' → logprob: -6.143097877502441
    7. '"' → logprob: -6.268097877502441
    8. 'min' → logprob: -6.393097877502441
    9. '.' → logprob: -6.768097877502441
    10. 'def' → logprob: -6.768097877502441

Token 559: ' il' (ID: 1793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24704013764858246
    2. '2' → logprob: -2.497040033340454
    3. 'return' → logprob: -2.997040033340454
    4. ' return' → logprob: -3.372040033340454
    5. ' True' → logprob: -3.872040033340454
    6. ' ' → logprob: -3.997040033340454
    7. 'True' → logprob: -4.872040271759033
    8. 'min' → logprob: -6.497040271759033
    9. ' la' → logprob: -6.622040271759033
    10. ' min' → logprob: -7.622040271759033

Token 560: ' passe' (ID: 22210)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.1474840641021729
    2. ' peut' → logprob: -1.2724840641021729
    3. ' passe' → logprob: -2.022484064102173
    4. ' pass' → logprob: -2.147484064102173
    5. 'pe' → logprob: -2.772484064102173
    6. '_pass' → logprob: -3.647484064102173
    7. '_' → logprob: -4.147483825683594
    8. 'est' → logprob: -4.397483825683594
    9. ' est' → logprob: -5.022483825683594
    10. ' peux' → logprob: -5.147483825683594

Token 561: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2863267660140991
    2. '   ' → logprob: -1.4113267660140991
    3. '):' → logprob: -6.786326885223389
    4. '.' → logprob: -7.161326885223389
    5. ' :' → logprob: -7.536326885223389
    6. ':
' → logprob: -7.661326885223389
    7. 'def' → logprob: -7.786326885223389
    8. ',' → logprob: -8.03632640838623
    9. '():' → logprob: -8.03632640838623
    10. '_' → logprob: -8.53632640838623

Token 562: '    
' (ID: 1944)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39393219351768494
    2. '   ' → logprob: -1.6439322233200073
    3. 'def' → logprob: -2.1439321041107178
    4. ')' → logprob: -6.143932342529297
    5. 'min' → logprob: -6.393932342529297
    6. ' :' → logprob: -6.393932342529297
    7. '):' → logprob: -6.518932342529297
    8. 'A' → logprob: -7.018932342529297
    9. '.' → logprob: -7.018932342529297
    10. 'return' → logprob: -7.268932342529297

Token 563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01269646268337965
    2. 'min' → logprob: -5.637696266174316
    3. 'face' → logprob: -5.887696266174316
    4. 'faces' → logprob: -5.887696266174316
    5. 'def' → logprob: -6.887696266174316
    6. '    
' → logprob: -7.262696266174316
    7. '_faces' → logprob: -7.887696266174316
    8. ' min' → logprob: -8.262696266174316
    9. ' faces' → logprob: -8.387696266174316
    10. ')' → logprob: -9.012696266174316

Token 564: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4144056737422943
    2. 'min' → logprob: -1.6644057035446167
    3. 'faces' → logprob: -3.039405584335327
    4. 'di' → logprob: -3.414405584335327
    5. 'face' → logprob: -3.664405584335327
    6. ' min' → logprob: -4.039405822753906
    7. '    
' → logprob: -5.289405822753906
    8. 'diag' → logprob: -5.539405822753906
    9. 'def' → logprob: -5.789405822753906
    10. ' faces' → logprob: -6.039405822753906

Token 565: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7309427857398987
    2. ':' → logprob: -0.9809427857398987
    3. ' return' → logprob: -2.980942726135254
    4. ' :' → logprob: -3.355942726135254
    5. 'def' → logprob: -4.480942726135254
    6. ' ' → logprob: -4.480942726135254
    7. '_' → logprob: -4.855942726135254
    8. 'return' → logprob: -5.605942726135254
    9. ' retourne' → logprob: -5.605942726135254
    10. '    ' → logprob: -6.105942726135254

Token 566: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00023071514442563057
    2. 'ul' → logprob: -8.50023078918457
    3. 'ulate' → logprob: -11.50023078918457
    4. 'cule' → logprob: -12.37523078918457
    5. 'ulte' → logprob: -12.37523078918457
    6. 'le' → logprob: -12.62523078918457
    7. 'ulé' → logprob: -13.25023078918457
    8. 'ute' → logprob: -14.12523078918457
    9. 'l' → logprob: -14.37523078918457
    10. 'ite' → logprob: -14.87523078918457

Token 567: ' les' (ID: 1341)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.2388076782226562
    2. 'min' → logprob: -1.2388076782226562
    3. '   ' → logprob: -1.6138076782226562
    4. ' la' → logprob: -2.6138076782226562
    5. 'faces' → logprob: -3.2388076782226562
    6. ' les' → logprob: -3.9888076782226562
    7. 'les' → logprob: -4.238807678222656
    8. ' ' → logprob: -4.613807678222656
    9. 'face' → logprob: -4.613807678222656
    10. 'max' → logprob: -4.738807678222656

Token 568: ' diagon' (ID: 146014)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.10964486002922058
    2. 'faces' → logprob: -2.484644889831543
    3. 'face' → logprob: -4.734644889831543
    4. 'd' → logprob: -5.734644889831543
    5. 'import' → logprob: -6.109644889831543
    6. 'dist' → logprob: -6.484644889831543
    7. 'min' → logprob: -6.859644889831543
    8. 'diag' → logprob: -6.859644889831543
    9. ' diagon' → logprob: -6.984644889831543
    10. ' diagonal' → logprob: -7.984644889831543

Token 569: 'ales' (ID: 3459)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.04877585172653198
    2. 'ales' → logprob: -3.0487759113311768
    3. 'al' → logprob: -9.048775672912598
    4. 'a' → logprob: -9.798775672912598
    5. '```' → logprob: -12.673775672912598
    6. 'als' → logprob: -13.298775672912598
    7. '[' → logprob: -13.298775672912598
    8. '\' → logprob: -13.423775672912598
    9. ']' → logprob: -13.798775672912598
    10. '{' → logprob: -14.048775672912598

Token 570: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6931305527687073
    2. 'des' → logprob: -2.3181304931640625
    3. '_face' → logprob: -2.3181304931640625
    4. ' =' → logprob: -2.4431304931640625
    5. '_faces' → logprob: -3.0681304931640625
    6. '_' → logprob: -3.8181304931640625
    7. '_des' → logprob: -4.0681304931640625
    8. 'faces' → logprob: -4.1931304931640625
    9. '_of' → logprob: -4.1931304931640625
    10. '()' → logprob: -4.4431304931640625

Token 571: ' trois' (ID: 25564)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.533435583114624
    2. '[
' → logprob: -1.408435583114624
    3. 'faces' → logprob: -2.033435583114624
    4. '[A' → logprob: -3.533435583114624
    5. '(A' → logprob: -5.408435821533203
    6. '[' → logprob: -6.033435821533203
    7. 'A' → logprob: -6.908435821533203
    8. ' [(' → logprob: -7.908435821533203
    9. ' faces' → logprob: -9.033435821533203
    10. 'face' → logprob: -9.033435821533203

Token 572: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.050087444484233856
    2. ' faces' → logprob: -3.0500874519348145
    3. '[(' → logprob: -7.4250874519348145
    4. 'import' → logprob: -7.5500874519348145
    5. '[' → logprob: -9.175086975097656
    6. '[
' → logprob: -9.300086975097656
    7. 'face' → logprob: -10.300086975097656
    8. '_faces' → logprob: -10.550086975097656
    9. ' [(' → logprob: -10.675086975097656
    10. 'f' → logprob: -11.300086975097656

Token 573: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35293760895729065
    2. ':' → logprob: -2.602937698364258
    3. 'di' → logprob: -2.602937698364258
    4. 'faces' → logprob: -3.102937698364258
    5. 'def' → logprob: -3.977937698364258
    6. '(' → logprob: -4.352937698364258
    7. '(
' → logprob: -4.852937698364258
    8. '(di' → logprob: -4.977937698364258
    9. 'd' → logprob: -5.227937698364258
    10. 'dist' → logprob: -5.227937698364258

Token 574: ' on' (ID: 402)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.5721988677978516
    2. 'di' → logprob: -1.4471988677978516
    3. '   ' → logprob: -2.4471988677978516
    4. 'min' → logprob: -3.8221988677978516
    5. 'les' → logprob: -4.322198867797852
    6. 'dist' → logprob: -4.322198867797852
    7. ' diagon' → logprob: -4.572198867797852
    8. 'passes' → logprob: -4.822198867797852
    9. 'return' → logprob: -4.947198867797852
    10. ' faces' → logprob: -5.322198867797852

Token 575: ' prend' (ID: 37463)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.4366769790649414
    2. 'min' → logprob: -1.9366769790649414
    3. 'faces' → logprob: -2.1866769790649414
    4. 'return' → logprob: -2.4366769790649414
    5. ' diagon' → logprob: -2.5616769790649414
    6. 'di' → logprob: -3.1866769790649414
    7. ' min' → logprob: -3.3116769790649414
    8. 'def' → logprob: -3.3116769790649414
    9. '   ' → logprob: -3.4366769790649414
    10. ' diagonal' → logprob: -3.8116769790649414

Token 576: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1605929136276245
    2. ' min' → logprob: -1.9105929136276245
    3. ' la' → logprob: -8.660593032836914
    4. 'la' → logprob: -9.660593032836914
    5. '   ' → logprob: -9.785593032836914
    6. 'le' → logprob: -10.285593032836914
    7. '_min' → logprob: -11.535593032836914
    8. '	min' → logprob: -12.035593032836914
    9. ' ' → logprob: -12.160593032836914
    10. '=min' → logprob: -12.410593032836914

Token 577: ' plus' (ID: 2932)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.024010641500353813
    2. ' min' → logprob: -3.77401065826416
    3. 'minimum' → logprob: -7.89901065826416
    4. 'plus' → logprob: -8.39901065826416
    5. ' plus' → logprob: -9.39901065826416
    6. ' minimum' → logprob: -9.89901065826416
    7. '(min' → logprob: -11.52401065826416
    8. '	min' → logprob: -12.14901065826416
    9. ' minimal' → logprob: -12.39901065826416
    10. 'minimal' → logprob: -12.39901065826416

Token 578: ' courte' (ID: 130258)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.13310734927654266
    2. '_' → logprob: -2.1331074237823486
    3. 'min' → logprob: -6.6331071853637695
    4. '_pet' → logprob: -6.7581071853637695
    5. '_p' → logprob: -7.0081071853637695
    6. 'small' → logprob: -7.0081071853637695
    7. '_small' → logprob: -7.1331071853637695
    8. ' _' → logprob: -7.8831071853637695
    9. '```' → logprob: -8.00810718536377
    10. '_min' → logprob: -9.50810718536377

Token 579: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10812275111675262
    2. ':' → logprob: -2.6081228256225586
    3. 'def' → logprob: -5.483122825622559
    4. '_faces' → logprob: -5.608122825622559
    5. ':
' → logprob: -5.858122825622559
    6. '_face' → logprob: -5.983122825622559
    7. '_' → logprob: -6.108122825622559
    8. ' ' → logprob: -6.358122825622559
    9. 'face' → logprob: -6.483122825622559
    10. '    
' → logprob: -6.733122825622559

Token 580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.130848690867424
    2. ':' → logprob: -2.8808486461639404
    3. 'def' → logprob: -3.1308486461639404
    4. '(' → logprob: -4.5058488845825195
    5. 'min' → logprob: -6.1308488845825195
    6. '    
' → logprob: -6.7558488845825195
    7. '(
' → logprob: -6.8808488845825195
    8. ' (' → logprob: -7.2558488845825195
    9. ':
' → logprob: -7.3808488845825195
    10. ' ' → logprob: -7.5058488845825195

Token 581: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1469586193561554
    2. ':' → logprob: -2.396958589553833
    3. 'def' → logprob: -3.521958589553833
    4. 'min' → logprob: -5.521958827972412
    5. '(' → logprob: -6.396958827972412
    6. 'face' → logprob: -6.646958827972412
    7. ' ' → logprob: -6.896958827972412
    8. '    
' → logprob: -6.896958827972412
    9. ':
' → logprob: -6.896958827972412
    10. 'A' → logprob: -7.146958827972412

Token 582: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22557340562343597
    2. '2' → logprob: -1.6005734205245972
    3. '   ' → logprob: -8.850573539733887
    4. ' ' → logprob: -11.850573539733887
    5. '  ' → logprob: -12.600573539733887
    6. '(' → logprob: -12.725573539733887
    7. ' (' → logprob: -12.850573539733887
    8. '    ' → logprob: -14.100573539733887
    9. ' deux' → logprob: -16.10057258605957
    10. ':' → logprob: -16.10057258605957

Token 583: ' diamètre' (ID: 167210)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03485916554927826
    2. ' ' → logprob: -3.4098591804504395
    3. 'from' → logprob: -7.2848591804504395
    4. 'min' → logprob: -8.784858703613281
    5. '(' → logprob: -9.409858703613281
    6. ' from' → logprob: -9.534858703613281
    7. '   ' → logprob: -9.534858703613281
    8. ' min' → logprob: -10.034858703613281
    9. 'diam' → logprob: -10.284858703613281
    10. ' (' → logprob: -10.659858703613281

Token 584: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1894117593765259
    2. ' minimal' → logprob: -1.3144117593765259
    3. ' <=' → logprob: -1.5644117593765259
    4. ' maximal' → logprob: -2.1894116401672363
    5. 'max' → logprob: -4.439411640167236
    6. '_min' → logprob: -4.564411640167236
    7. ' >=' → logprob: -4.564411640167236
    8. ' )' → logprob: -4.564411640167236
    9. '<=' → logprob: -4.689411640167236
    10. '_max' → logprob: -4.814411640167236

Token 585: ' trou' (ID: 18706)
  Prédit: ' trou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trou' → logprob: -0.3658689260482788
    2. 'from' → logprob: -1.4908689260482788
    3. 'plus' → logprob: -3.2408690452575684
    4. 'tr' → logprob: -3.9908690452575684
    5. ' from' → logprob: -4.115869045257568
    6. ' plus' → logprob: -5.615869045257568
    7. ' fromage' → logprob: -6.490869045257568
    8. 'c' → logprob: -7.240869045257568
    9. ' trous' → logprob: -7.990869045257568
    10. 'che' → logprob: -8.99086856842041

Token 586: ' (' (ID: 350)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.11895427107810974
    2. '>=' → logprob: -2.4939541816711426
    3. ')' → logprob: -4.118954181671143
    4. ' est' → logprob: -4.618954181671143
    5. 'est' → logprob: -6.868954181671143
    6. ' ' → logprob: -7.243954181671143
    7. '>' → logprob: -8.2439546585083
    8. '   ' → logprob: -8.4939546585083
    9. ' (' → logprob: -8.6189546585083
    10. ' )' → logprob: -8.7439546585083

Token 587: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3677332103252411
    2. ')' → logprob: -1.2427332401275635
    3. ' ' → logprob: -3.9927332401275635
    4. ' )' → logprob: -7.492733001708984
    5. '   ' → logprob: -10.742733001708984
    6. ')>=' → logprob: -10.992733001708984
    7. '=' → logprob: -11.742733001708984
    8. ')<=' → logprob: -11.867733001708984
    9. ' >=' → logprob: -11.992733001708984
    10. '0' → logprob: -11.992733001708984

Token 588: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.024641476571559906
    2. ' *' → logprob: -3.774641513824463
    3. ')' → logprob: -6.774641513824463
    4. ' >=' → logprob: -8.649641036987305
    5. '>=' → logprob: -10.274641036987305
    6. '*)' → logprob: -11.024641036987305
    7. ')*' → logprob: -11.524641036987305
    8. ' )' → logprob: -12.399641036987305
    9. ')>=' → logprob: -12.524641036987305
    10. '*r' → logprob: -13.024641036987305

Token 589: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00671584764495492
    2. ' R' → logprob: -5.006715774536133
    3. ')' → logprob: -14.881715774536133
    4. ' ' → logprob: -16.631715774536133
    5. '*' → logprob: -17.256715774536133
    6. 'r' → logprob: -17.881715774536133
    7. ' )' → logprob: -17.881715774536133
    8. '   ' → logprob: -18.006715774536133
    9. ' ' → logprob: -18.131715774536133
    10. '	R' → logprob: -18.256715774536133

Token 590: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007166040013544261
    2. ')>=' → logprob: -7.750716686248779
    3. '>=' → logprob: -8.625716209411621
    4. ' )' → logprob: -9.750716209411621
    5. ' >=' → logprob: -10.125716209411621
    6. ')
' → logprob: -13.250716209411621
    7. ')>' → logprob: -13.750716209411621
    8. '>' → logprob: -14.125716209411621
    9. '')' → logprob: -14.250716209411621
    10. '）' → logprob: -14.375716209411621

Token 591: ' est' (ID: 893)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.38759928941726685
    2. ' >=' → logprob: -1.137599229812622
    3. '>' → logprob: -7.762599468231201
    4. ')' → logprob: -9.387598991394043
    5. '   ' → logprob: -9.512598991394043
    6. ')>=' → logprob: -9.512598991394043
    7. ']>=' → logprob: -10.387598991394043
    8. ' >' → logprob: -11.637598991394043
    9. '≥' → logprob: -12.012598991394043
    10. '">' → logprob: -12.262598991394043

Token 592: ' au' (ID: 2791)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3144659996032715
    2. ' >=' → logprob: -1.3144659996032715
    3. ' supérieur' → logprob: -7.0644659996032715
    4. '>' → logprob: -8.56446647644043
    5. '≥' → logprob: -9.31446647644043
    6. '   ' → logprob: -10.68946647644043
    7. 'au' → logprob: -11.18946647644043
    8. ' ' → logprob: -11.93946647644043
    9. 'sup' → logprob: -12.18946647644043
    10. 'greater' → logprob: -12.68946647644043

Token 593: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.005891229957342148
    2. ' moins' → logprob: -6.1308913230896
    3. 'mo' → logprob: -6.2558913230896
    4. 'least' → logprob: -7.1308913230896
    5. 'minimum' → logprob: -7.6308913230896
    6. 'm' → logprob: -8.255890846252441
    7. 'menos' → logprob: -9.255890846252441
    8. 'min' → logprob: -10.255890846252441
    9. 'less' → logprob: -10.880890846252441
    10. '   ' → logprob: -10.880890846252441

Token 594: ' égal' (ID: 15059)
  Prédit: ' égal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.912537157535553
    2. 'min' → logprob: -1.6625370979309082
    3. ' equal' → logprob: -2.287537097930908
    4. 'equal' → logprob: -2.412537097930908
    5. ' min' → logprob: -2.537537097930908
    6. 'égal' → logprob: -2.787537097930908
    7. ' ég' → logprob: -3.537537097930908
    8. 'sup' → logprob: -4.412537097930908
    9. ' supérieur' → logprob: -4.537537097930908
    10. ' aussi' → logprob: -5.412537097930908

Token 595: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1502130776643753
    2. ' au' → logprob: -2.0252130031585693
    3. ' ' → logprob: -5.900213241577148
    4. 'à' → logprob: -6.150213241577148
    5. ' aux' → logprob: -6.775213241577148
    6. 'au' → logprob: -6.900213241577148
    7. '   ' → logprob: -8.400213241577148
    8. ' a' → logprob: -9.400213241577148
    9. '  ' → logprob: -9.650213241577148
    10. ' to' → logprob: -9.775213241577148

Token 596: ' cette' (ID: 7696)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.25930240750312805
    2. 'min' → logprob: -1.5093023777008057
    3. ' la' → logprob: -5.009302616119385
    4. 'la' → logprob: -7.759302616119385
    5. ' le' → logprob: -9.259302139282227
    6. 'le' → logprob: -9.384302139282227
    7. ' ' → logprob: -11.134302139282227
    8. ' minimum' → logprob: -11.384302139282227
    9. ' ce' → logprob: -11.634302139282227
    10. ' math' → logprob: -11.884302139282227

Token 597: ' diagon' (ID: 146014)
  Prédit: ' diagonal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diagonal' → logprob: -0.7831307053565979
    2. ' diagon' → logprob: -1.4081306457519531
    3. 'di' → logprob: -2.033130645751953
    4. ' min' → logprob: -2.283130645751953
    5. 'min' → logprob: -3.533130645751953
    6. ' di' → logprob: -4.283130645751953
    7. ' diag' → logprob: -5.283130645751953
    8. ' ' → logprob: -5.533130645751953
    9. ' d' → logprob: -6.033130645751953
    10. ' minimum' → logprob: -6.158130645751953

Token 598: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -4.215330409351736e-05
    2. 'al' → logprob: -10.125041961669922
    3. 'a' → logprob: -13.750041961669922
    4. 'але' → logprob: -14.875041961669922
    5. 'le' → logprob: -15.375041961669922
    6. 'e' → logprob: -16.125041961669922
    7. '>' → logprob: -17.000041961669922
    8. 'nale' → logprob: -17.125041961669922
    9. 'ales' → logprob: -17.250041961669922
    10. ' ale' → logprob: -17.375041961669922

Token 599: ' minimale' (ID: 143217)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02370159886777401
    2. '):' → logprob: -4.2737016677856445
    3. ',' → logprob: -5.0237016677856445
    4. '   ' → logprob: -6.5237016677856445
    5. ')' → logprob: -7.5237016677856445
    6. '.' → logprob: -7.8987016677856445
    7. ':
' → logprob: -8.648701667785645
    8. ' :' → logprob: -9.648701667785645
    9. '():' → logprob: -9.773701667785645
    10. '),' → logprob: -9.898701667785645

Token 600: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014197122305631638
    2. '):' → logprob: -5.13919734954834
    3. '   ' → logprob: -5.51419734954834
    4. ':
' → logprob: -5.88919734954834
    5. ',' → logprob: -7.38919734954834
    6. ':return' → logprob: -7.76419734954834
    7. ')' → logprob: -9.13919734954834
    8. '.' → logprob: -9.26419734954834
    9. '):
' → logprob: -9.63919734954834
    10. ' :' → logprob: -10.26419734954834

Token 601: ' alors' (ID: 17971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39862746000289917
    2. 'return' → logprob: -1.398627519607544
    3. ':' → logprob: -3.273627519607544
    4. ':return' → logprob: -3.648627519607544
    5. ' return' → logprob: -4.398627281188965
    6. ':
' → logprob: -6.023627281188965
    7. '       ' → logprob: -6.148627281188965
    8. '	return' → logprob: -8.023627281188965
    9. '):' → logprob: -8.523627281188965
    10. '):
' → logprob: -9.023627281188965

Token 602: ' OK' (ID: 11339)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13192260265350342
    2. 'return' → logprob: -2.131922721862793
    3. ' return' → logprob: -5.506922721862793
    4. '       ' → logprob: -7.756922721862793
    5. '	return' → logprob: -8.381922721862793
    6. '   ' → logprob: -8.631922721862793
    7. ':return' → logprob: -10.756922721862793
    8. '
' → logprob: -11.256922721862793
    9. '    
' → logprob: -11.381922721862793
    10. '   ' → logprob: -11.756922721862793

Token 603: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23057392239570618
    2. ':' → logprob: -1.8555738925933838
    3. 'def' → logprob: -3.230573892593384
    4. '    
' → logprob: -5.480574131011963
    5. '.' → logprob: -6.230574131011963
    6. ':
' → logprob: -7.355574131011963
    7. '):' → logprob: -7.480574131011963
    8. '
' → logprob: -7.605574131011963
    9. ',' → logprob: -7.730574131011963
    10. '  
' → logprob: -7.730574131011963

Token 604: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48027539253234863
    2. ':' → logprob: -1.1052753925323486
    3. 'def' → logprob: -3.2302753925323486
    4. ':
' → logprob: -5.2302751541137695
    5. '    
' → logprob: -6.4802751541137695
    6. '(' → logprob: -7.3552751541137695
    7. '_' → logprob: -7.6052751541137695
    8. '):' → logprob: -7.6052751541137695
    9. ' def' → logprob: -8.60527515411377
    10. '
' → logprob: -8.73027515411377

Token 605: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025220759212970734
    2. 'def' → logprob: -3.9002208709716797
    3. 'face' → logprob: -6.40022087097168
    4. '    
' → logprob: -6.52522087097168
    5. 'di' → logprob: -8.02522087097168
    6. 'min' → logprob: -8.27522087097168
    7. ':' → logprob: -8.52522087097168
    8. '
' → logprob: -8.65022087097168
    9. 'diag' → logprob: -8.90022087097168
    10. '  
' → logprob: -9.52522087097168

Token 606: ' Sinon' (ID: 154924)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045037321746349335
    2. 'face' → logprob: -4.420037269592285
    3. 'di' → logprob: -4.545037269592285
    4. 'def' → logprob: -4.545037269592285
    5. 'diag' → logprob: -5.545037269592285
    6. '    
' → logprob: -6.295037269592285
    7. 'faces' → logprob: -6.420037269592285
    8. 'min' → logprob: -6.920037269592285
    9. 'd' → logprob: -8.045037269592285
    10. 'A' → logprob: -8.045037269592285

Token 607: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18763954937458038
    2. '   ' → logprob: -1.812639594078064
    3. ':return' → logprob: -5.8126397132873535
    4. ':
' → logprob: -6.1876397132873535
    5. ' return' → logprob: -6.5626397132873535
    6. 'return' → logprob: -7.3126397132873535
    7. ',' → logprob: -8.187639236450195
    8. '    ' → logprob: -8.687639236450195
    9. ' :' → logprob: -8.687639236450195
    10. '       ' → logprob: -10.437639236450195

Token 608: ' NA' (ID: 24259)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5257753133773804
    2. '   ' → logprob: -1.0257753133773804
    3. 'return' → logprob: -3.02577543258667
    4. '   ' → logprob: -6.52577543258667
    5. ' ' → logprob: -8.900774955749512
    6. '	return' → logprob: -9.525774955749512
    7. ' retourner' → logprob: -10.025774955749512
    8. ' retour' → logprob: -10.025774955749512
    9. '   ' → logprob: -10.275774955749512
    10. ' retourne' → logprob: -11.025774955749512

Token 609: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31045764684677124
    2. '   ' → logprob: -1.935457706451416
    3. 'def' → logprob: -2.685457706451416
    4. '):' → logprob: -3.935457706451416
    5. ')' → logprob: -4.185457706451416
    6. ':
' → logprob: -4.435457706451416
    7. '
' → logprob: -6.310457706451416
    8. '):
' → logprob: -6.685457706451416
    9. '    
' → logprob: -7.060457706451416
    10. ' :' → logprob: -7.310457706451416

Token 610: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23861318826675415
    2. '   ' → logprob: -1.8636131286621094
    3. 'def' → logprob: -3.2386131286621094
    4. ':
' → logprob: -4.238613128662109
    5. '(' → logprob: -7.613613128662109
    6. '_' → logprob: -7.988613128662109
    7. '):' → logprob: -7.988613128662109
    8. ')' → logprob: -8.23861312866211
    9. '    
' → logprob: -8.48861312866211
    10. ' ' → logprob: -8.48861312866211

Token 611: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48074060678482056
    2. 'def' → logprob: -1.1057405471801758
    3. ':' → logprob: -3.605740547180176
    4. 'min' → logprob: -4.480740547180176
    5. '    
' → logprob: -5.730740547180176
    6. 'face' → logprob: -5.980740547180176
    7. ':
' → logprob: -6.855740547180176
    8. 'A' → logprob: -7.105740547180176
    9. 'di' → logprob: -7.605740547180176
    10. '_min' → logprob: -7.605740547180176

Token 612: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003662429517135024
    2. '    
' → logprob: -6.503662586212158
    3. 'def' → logprob: -6.878662586212158
    4. 'di' → logprob: -8.003662109375
    5. 'face' → logprob: -8.128662109375
    6. '
' → logprob: -8.378662109375
    7. ' diagonal' → logprob: -10.003662109375
    8. 'diag' → logprob: -10.003662109375
    9. 'faces' → logprob: -10.253662109375
    10. 'min' → logprob: -10.253662109375

Token 613: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.733848512172699
    2. 'di' → logprob: -1.2338485717773438
    3. 'face' → logprob: -1.9838485717773438
    4. 'faces' → logprob: -2.6088485717773438
    5. 'diag' → logprob: -4.483848571777344
    6. '#' (adapté à ' #') → logprob: -6.358848571777344
    7. 'd' → logprob: -6.483848571777344
    8. ' diagon' → logprob: -6.608848571777344
    9. ' diagonal' → logprob: -7.608848571777344
    10. 'min' → logprob: -8.233848571777344

Token 614: ' Calcul' (ID: 57243)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.6848610043525696
    2. 'face' → logprob: -1.8098609447479248
    3. 'faces' → logprob: -1.9348609447479248
    4. '   ' → logprob: -2.559860944747925
    5. ' diagon' → logprob: -2.934860944747925
    6. 'diag' → logprob: -3.934860944747925
    7. ' diagonal' → logprob: -4.059861183166504
    8. '#' → logprob: -5.059861183166504
    9. 'd' → logprob: -5.559861183166504
    10. ' face' → logprob: -6.184861183166504

Token 615: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06155527010560036
    2. ' des' → logprob: -3.6865553855895996
    3. 'faces' → logprob: -5.0615553855896
    4. 'face' → logprob: -5.1865553855896
    5. ' diagonal' → logprob: -5.3115553855896
    6. ' face' → logprob: -5.9365553855896
    7. 'di' → logprob: -6.0615553855896
    8. ' de' → logprob: -6.1865553855896
    9. 'des' → logprob: -6.3115553855896
    10. '_face' → logprob: -6.3115553855896

Token 616: ' diagon' (ID: 146014)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.45207372307777405
    2. 'di' → logprob: -1.0770736932754517
    3. 'face' → logprob: -4.577073574066162
    4. 'd' → logprob: -4.952073574066162
    5. 'diag' → logprob: -5.327073574066162
    6. 'import' → logprob: -8.07707405090332
    7. 'fac' → logprob: -8.70207405090332
    8. '#' → logprob: -8.70207405090332
    9. 'diam' → logprob: -10.32707405090332
    10. 's' → logprob: -10.45207405090332

Token 617: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.004428458865731955
    2. 'ale' → logprob: -5.504428386688232
    3. 'es' → logprob: -8.37942886352539
    4. 'als' → logprob: -10.00442886352539
    5. 'al' → logprob: -10.00442886352539
    6. 'les' → logprob: -11.50442886352539
    7. 'des' → logprob: -11.62942886352539
    8. '```' → logprob: -13.37942886352539
    9. ' ales' → logprob: -13.50442886352539
    10. 'e' → logprob: -13.87942886352539

Token 618: ' des' (ID: 731)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.7566852569580078
    2. 'face' → logprob: -1.5066852569580078
    3. '   ' → logprob: -2.131685256958008
    4. 'di' → logprob: -2.131685256958008
    5. 'd' → logprob: -4.131685256958008
    6. 'des' → logprob: -4.256685256958008
    7. 'de' → logprob: -4.256685256958008
    8. 'import' → logprob: -4.881685256958008
    9. 'AB' → logprob: -5.131685256958008
    10. 'ab' → logprob: -5.756685256958008

Token 619: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.029350172728300095
    2. '[(' → logprob: -3.9043502807617188
    3. '[
' → logprob: -5.279350280761719
    4. '[A' → logprob: -6.154350280761719
    5. '(A' → logprob: -7.154350280761719
    6. '[' → logprob: -8.154350280761719
    7. ' faces' → logprob: -8.654350280761719
    8. 'face' → logprob: -8.779350280761719
    9. 'fac' → logprob: -10.154350280761719
    10. ' [(' → logprob: -10.279350280761719

Token 620: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5183636546134949
    2. 'di' → logprob: -1.5183637142181396
    3. 'face' → logprob: -2.3933637142181396
    4. 'd' → logprob: -3.2683637142181396
    5. 'faces' → logprob: -3.3933637142181396
    6. 'diag' → logprob: -4.5183634757995605
    7. ' diagonal' → logprob: -5.7683634757995605
    8. ' diagon' → logprob: -5.8933634757995605
    9. 'AB' → logprob: -6.6433634757995605
    10. ' face' → logprob: -7.1433634757995605

Token 621: '2' (ID: 17)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.6997960805892944
    2. 'di' → logprob: -1.8247960805892944
    3. 'math' → logprob: -2.199796199798584
    4. 'face' → logprob: -2.699796199798584
    5. '[A' → logprob: -3.074796199798584
    6. 'AB' → logprob: -3.449796199798584
    7. 'A' → logprob: -3.574796199798584
    8. '[
' → logprob: -3.824796199798584
    9. 'd' → logprob: -4.574796199798584
    10. '[' → logprob: -4.699796199798584

Token 622: 'D' (ID: 35)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14973463118076324
    2. 'import' → logprob: -2.8997347354888916
    3. ' *' → logprob: -3.0247347354888916
    4. 'di' → logprob: -4.7747344970703125
    5. 'def' → logprob: -5.5247344970703125
    6. '   ' → logprob: -5.5247344970703125
    7. 'faces' → logprob: -5.6497344970703125
    8. '*(' → logprob: -5.7747344970703125
    9. 'd' → logprob: -5.8997344970703125
    10. ')' → logprob: -6.7747344970703125

Token 623: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8770861029624939
    2. 'faces' → logprob: -1.0020861625671387
    3. ')' → logprob: -2.3770861625671387
    4. ')
' → logprob: -3.0020861625671387
    5. 'di' → logprob: -3.2520861625671387
    6. '):
' → logprob: -4.252086162567139
    7. '):' → logprob: -5.502086162567139
    8. 's' → logprob: -5.752086162567139
    9. '_faces' → logprob: -5.752086162567139
    10. ' faces' → logprob: -6.252086162567139

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3238552212715149
    2. 'faces' → logprob: -2.07385516166687
    3. 'di' → logprob: -2.44885516166687
    4. 'face' → logprob: -2.82385516166687
    5. 'd' → logprob: -6.323855400085449
    6. 'diag' → logprob: -6.448855400085449
    7. ' diagon' → logprob: -7.823855400085449
    8. ' diagonal' → logprob: -7.948855400085449
    9. ' faces' → logprob: -8.69885540008545
    10. '    
' → logprob: -8.69885540008545

Token 625: ' d' (ID: 272)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.9341951012611389
    2. 'd' (adapté à ' d') → logprob: -1.1841950416564941
    3. 'diag' → logprob: -1.8091950416564941
    4. 'face' → logprob: -2.184195041656494
    5. 'faces' → logprob: -4.059195041656494
    6. '   ' → logprob: -5.059195041656494
    7. ' diagonal' → logprob: -8.059195518493652
    8. ' diagon' → logprob: -8.559195518493652
    9. ' d' → logprob: -8.934195518493652
    10. ' diag' → logprob: -9.059195518493652

Token 626: '1' (ID: 16)
  Prédit: '_faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_faces' → logprob: -0.6202372908592224
    2. '1' → logprob: -1.6202373504638672
    3. '_AB' → logprob: -1.8702373504638672
    4. '_ab' → logprob: -2.745237350463867
    5. 'AB' → logprob: -3.620237350463867
    6. '_face' → logprob: -4.995237350463867
    7. '_' → logprob: -5.370237350463867
    8. 'faces' → logprob: -6.370237350463867
    9. '_ac' → logprob: -6.870237350463867
    10. '_di' → logprob: -7.120237350463867

Token 627: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995032727718353
    2. '=' → logprob: -2.6949503421783447
    3. '   ' → logprob: -12.194950103759766
    4. '1' → logprob: -12.694950103759766
    5. ' ' → logprob: -13.194950103759766
    6. '=s' → logprob: -14.569950103759766
    7. 'import' → logprob: -14.569950103759766
    8. 'a' → logprob: -14.694950103759766
    9. '_' → logprob: -14.944950103759766
    10. 'A' → logprob: -15.444950103759766

Token 628: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -3.6550729419104755e-05
    2. ' math' → logprob: -10.250036239624023
    3. '(math' → logprob: -13.750036239624023
    4. 'A' → logprob: -17.500036239624023
    5. '(A' → logprob: -18.125036239624023
    6. 'Math' → logprob: -18.875036239624023
    7. 'min' → logprob: -20.375036239624023
    8. 'm' → logprob: -20.375036239624023
    9. '   ' → logprob: -20.500036239624023
    10. 'ma' → logprob: -20.625036239624023

Token 629: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0007755621336400509
    2. '.' → logprob: -7.750775337219238
    3. '.h' → logprob: -8.000775337219238
    4. '.pow' → logprob: -12.250775337219238
    5. '.dist' → logprob: -12.875775337219238
    6. '.s' → logprob: -13.500775337219238
    7. '.Sqrt' → logprob: -14.875775337219238
    8. ' .' → logprob: -15.875775337219238
    9. 'sqrt' → logprob: -16.125776290893555
    10. '.sin' → logprob: -16.125776290893555

Token 630: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0008796618785709143
    2. 'A' → logprob: -7.125879764556885
    3. '((' → logprob: -9.750879287719727
    4. '(' → logprob: -11.000879287719727
    5. '(a' → logprob: -16.125879287719727
    6. '(
' → logprob: -16.625879287719727
    7. '   ' → logprob: -16.875879287719727
    8. ' A' → logprob: -17.125879287719727
    9. ' (' → logprob: -17.250879287719727
    10. '	A' → logprob: -17.500879287719727

Token 631: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0007236333331093192
    2. '*' → logprob: -7.250723838806152
    3. ' **' → logprob: -11.375723838806152
    4. '2' → logprob: -13.375723838806152
    5. '**
' → logprob: -15.625723838806152
    6. '```' → logprob: -15.750723838806152
    7. ' ' → logprob: -16.250722885131836
    8. '***' → logprob: -16.375722885131836
    9. '
' → logprob: -16.625722885131836
    10. '²' → logprob: -17.000722885131836

Token 632: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9862216504407115e-05
    2. ' ' → logprob: -10.875020027160645
    3. '   ' → logprob: -15.250020027160645
    4. '```' → logprob: -15.250020027160645
    5. '²' → logprob: -15.875020027160645
    6. '
' → logprob: -17.000019073486328
    7. '  ' → logprob: -17.250019073486328
    8. ')' → logprob: -17.375019073486328
    9. '۲' → logprob: -17.750019073486328
    10. '**' → logprob: -17.875019073486328

Token 633: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11282816529273987
    2. '+' → logprob: -2.237828254699707
    3. ' ' → logprob: -12.862828254699707
    4. '   ' → logprob: -13.362828254699707
    5. '+B' → logprob: -14.112828254699707
    6. ' plus' → logprob: -15.612828254699707
    7. ',' → logprob: -16.23782730102539
    8. ' +
' → logprob: -16.48782730102539
    9. '  ' → logprob: -16.48782730102539
    10. 'd' → logprob: -16.61282730102539

Token 634: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -7.493430894101039e-05
    2. ' B' → logprob: -9.500075340270996
    3. '	B' → logprob: -18.75007438659668
    4. 'b' → logprob: -20.00007438659668
    5. '   ' → logprob: -20.00007438659668
    6. ' ' → logprob: -22.12507438659668
    7. '_B' → logprob: -22.37507438659668
    8. '=B' → logprob: -23.00007438659668
    9. '>B' → logprob: -23.37507438659668
    10. '<B' → logprob: -23.62507438659668

Token 635: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00629977323114872
    2. ')' → logprob: -5.13129997253418
    3. '2' → logprob: -8.63129997253418
    4. '**)' → logprob: -9.38129997253418
    5. '²' → logprob: -9.63129997253418
    6. '*' → logprob: -11.25629997253418
    7. ' **' → logprob: -11.25629997253418
    8. ')**' → logprob: -12.00629997253418
    9. '^' → logprob: -12.63129997253418
    10. ' ' → logprob: -12.63129997253418

Token 636: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007115975022315979
    2. '**' → logprob: -7.250711441040039
    3. ' ' → logprob: -13.625711441040039
    4. '*' → logprob: -15.250711441040039
    5. '²' → logprob: -15.625711441040039
    6. ')' → logprob: -18.12571144104004
    7. '```' → logprob: -18.62571144104004
    8. '**)' → logprob: -19.00071144104004
    9. '^' → logprob: -20.50071144104004
    10. ' **' → logprob: -20.62571144104004

Token 637: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016158591955900192
    2. ')
' → logprob: -4.141158580780029
    3. 'd' → logprob: -9.641159057617188
    4. ')
' → logprob: -10.891159057617188
    5. ' )' → logprob: -10.891159057617188
    6. '   ' → logprob: -11.516159057617188
    7. ')d' → logprob: -12.141159057617188
    8. ')

' → logprob: -12.891159057617188
    9. ' )
' → logprob: -13.266159057617188
    10. ' ' → logprob: -13.766159057617188

Token 638: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20958614349365234
    2. 'd' → logprob: -2.0845861434936523
    3. '   ' → logprob: -2.8345861434936523
    4. '    
' → logprob: -6.084586143493652
    5. '  
' → logprob: -6.334586143493652
    6. ' d' → logprob: -7.209586143493652
    7. '
' → logprob: -8.084586143493652
    8. ' 
' → logprob: -8.209586143493652
    9. ' ' → logprob: -8.334586143493652
    10. '   
' → logprob: -8.959586143493652

Token 639: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.03733086585998535
    2. ' d' → logprob: -3.4123308658599854
    3. '
' → logprob: -6.162330627441406
    4. '   ' → logprob: -6.787330627441406
    5. ' 
' → logprob: -8.912330627441406
    6. '    
' → logprob: -9.162330627441406
    7. ' ' → logprob: -9.912330627441406
    8. '\n' → logprob: -10.037330627441406
    9. '  
' → logprob: -10.537330627441406
    10. '	d' → logprob: -10.662330627441406

Token 640: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.881560041918419e-05
    2. '3' → logprob: -10.375039100646973
    3. '=' → logprob: -12.750039100646973
    4. '_' → logprob: -13.250039100646973
    5. ' =' → logprob: -13.500039100646973
    6. ' ' → logprob: -14.125039100646973
    7. 'd' → logprob: -15.500039100646973
    8. '
' → logprob: -15.875039100646973
    9. '1' → logprob: -16.625038146972656
    10. '```' → logprob: -17.125038146972656

Token 641: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0485873706638813
    2. '=' → logprob: -3.0485873222351074
    3. ' ' → logprob: -17.798587799072266
    4. ' =
' → logprob: -19.423587799072266
    5. ' ' → logprob: -19.548587799072266
    6. '＝' → logprob: -20.423587799072266
    7. '=
' → logprob: -20.548587799072266
    8. 'd' → logprob: -20.548587799072266
    9. '   ' → logprob: -21.298587799072266
    10. '	' → logprob: -21.548587799072266

Token 642: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6931498050689697
    2. 'math' → logprob: -0.6931498050689697
    3. '(math' → logprob: -13.19314956665039
    4. '   ' → logprob: -15.19314956665039
    5. '.math' → logprob: -15.81814956665039
    6. 'm' → logprob: -15.94314956665039
    7. 'Math' → logprob: -16.19314956665039
    8. ' ' → logprob: -16.81814956665039
    9. '_math' → logprob: -17.31814956665039
    10. '/math' → logprob: -17.69314956665039

Token 643: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -4.4894986785948277e-05
    2. '.' → logprob: -10.375044822692871
    3. 'sqrt' → logprob: -11.250044822692871
    4. '.Sqrt' → logprob: -14.500044822692871
    5. 'import' → logprob: -17.125045776367188
    6. ' .' → logprob: -17.375045776367188
    7. ' sqrt' → logprob: -17.500045776367188
    8. '```' → logprob: -19.250045776367188
    9. '√' → logprob: -19.875045776367188
    10. '.pow' → logprob: -20.000045776367188

Token 644: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.00011963568249484524
    2. '(' → logprob: -9.12511920928955
    3. '(C' → logprob: -11.75011920928955
    4. ' (' → logprob: -13.62511920928955
    5. 'B' → logprob: -13.75011920928955
    6. '(A' → logprob: -15.00011920928955
    7. '(b' → logprob: -16.500120162963867
    8. '(
' → logprob: -17.750120162963867
    9. ' B' → logprob: -18.125120162963867
    10. '((' → logprob: -18.625120162963867

Token 645: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -3.531315314830863e-06
    2. ' **' → logprob: -12.750003814697266
    3. '2' → logprob: -14.875003814697266
    4. '*' → logprob: -16.000003814697266
    5. '²' → logprob: -17.750003814697266
    6. ' ' → logprob: -18.250003814697266
    7. '^' → logprob: -18.375003814697266
    8. '[' → logprob: -19.250003814697266
    9. '```' → logprob: -19.500003814697266
    10. '**)' → logprob: -19.625003814697266

Token 646: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -11.875008583068848
    3. '**' → logprob: -13.250008583068848
    4. '²' → logprob: -17.000009536743164
    5. '۲' → logprob: -18.500009536743164
    6. '
' → logprob: -19.500009536743164
    7. '```' → logprob: -19.750009536743164
    8. '  ' → logprob: -20.250009536743164
    9. '２' → logprob: -20.375009536743164
    10. '*' → logprob: -20.500009536743164

Token 647: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12692873179912567
    2. '+' → logprob: -2.1269288063049316
    3. ' ' → logprob: -15.001928329467773
    4. '+C' → logprob: -15.751928329467773
    5. ' plus' → logprob: -16.376928329467773
    6. ' ' → logprob: -16.751928329467773
    7. ' +
' → logprob: -17.126928329467773
    8. '   ' → logprob: -17.251928329467773
    9. 'import' → logprob: -17.251928329467773
    10. '＋' → logprob: -17.376928329467773

Token 648: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008614926598966122
    2. ' C' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.383614540100098
    4. ' ' → logprob: -15.633614540100098
    5. '	C' → logprob: -16.758615493774414
    6. '  ' → logprob: -17.383615493774414
    7. 'c' → logprob: -18.883615493774414
    8. '
' → logprob: -19.258615493774414
    9. '    ' → logprob: -19.508615493774414
    10. '_C' → logprob: -19.633615493774414

Token 649: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -7.588793960167095e-05
    2. ')' → logprob: -10.375076293945312
    3. '2' → logprob: -10.500076293945312
    4. '**)' → logprob: -11.500076293945312
    5. '²' → logprob: -12.375076293945312
    6. '^' → logprob: -13.375076293945312
    7. ')**' → logprob: -13.875076293945312
    8. '*' → logprob: -15.625076293945312
    9. ' **' → logprob: -16.750076293945312
    10. '```' → logprob: -17.125076293945312

Token 650: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '**' → logprob: -16.125003814697266
    4. '²' → logprob: -19.250003814697266
    5. '```' → logprob: -19.625003814697266
    6. '۲' → logprob: -20.000003814697266
    7. '   ' → logprob: -20.500003814697266
    8. '
' → logprob: -21.250003814697266
    9. '  ' → logprob: -21.375003814697266
    10. ')' → logprob: -21.500003814697266

Token 651: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31508955359458923
    2. ')
' → logprob: -1.3150895833969116
    3. '   ' → logprob: -6.315089702606201
    4. ')
' → logprob: -11.690089225769043
    5. 'd' → logprob: -12.065089225769043
    6. ')d' → logprob: -13.315089225769043
    7. ' )
' → logprob: -14.440089225769043
    8. ' ' → logprob: -14.940089225769043
    9. ' )' → logprob: -15.690089225769043
    10. ')

' → logprob: -16.06509017944336

Token 652: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6672884821891785
    2. '   ' → logprob: -0.7922884821891785
    3. ' d' → logprob: -3.4172885417938232
    4. '
' → logprob: -7.292288303375244
    5. '	d' → logprob: -8.167288780212402
    6. ' ' → logprob: -8.917288780212402
    7. '    
' → logprob: -9.167288780212402
    8. '  ' → logprob: -10.167288780212402
    9. ' 
' → logprob: -11.292288780212402
    10. '    ' → logprob: -11.292288780212402

Token 653: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.029345763847231865
    2. '   ' → logprob: -3.779345750808716
    3. ' d' → logprob: -5.154345989227295
    4. '
' → logprob: -9.279345512390137
    5. '    
' → logprob: -9.654345512390137
    6. ' ' → logprob: -9.904345512390137
    7. '	d' → logprob: -10.154345512390137
    8. ' 
' → logprob: -10.904345512390137
    9. '  ' → logprob: -11.654345512390137
    10. '  
' → logprob: -12.466845512390137

Token 654: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.35706390615087e-05
    2. '1' → logprob: -10.375033378601074
    3. '=' → logprob: -14.250033378601074
    4. ' =' → logprob: -14.250033378601074
    5. '_' → logprob: -14.750033378601074
    6. ' ' → logprob: -15.125033378601074
    7. '   ' → logprob: -16.25003433227539
    8. '
' → logprob: -16.62503433227539
    9. '```' → logprob: -16.62503433227539
    10. 'f' → logprob: -17.25003433227539

Token 655: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692810595035553
    2. '=' → logprob: -2.1269280910491943
    3. ' ' → logprob: -18.876928329467773
    4. 'd' → logprob: -19.376928329467773
    5. '＝' → logprob: -19.376928329467773
    6. ' =
' → logprob: -20.001928329467773
    7. ' ' → logprob: -20.376928329467773
    8. '=
' → logprob: -20.876928329467773
    9. '   ' → logprob: -21.626928329467773
    10. ')' → logprob: -21.751928329467773

Token 656: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.20141655206680298
    2. 'math' → logprob: -1.7014164924621582
    3. '   ' → logprob: -13.201416969299316
    4. '(math' → logprob: -13.576416969299316
    5. ' ' → logprob: -16.576416015625
    6. 'Math' → logprob: -17.451416015625
    7. '.math' → logprob: -17.701416015625
    8. 'm' → logprob: -17.826416015625
    9. '  ' → logprob: -18.076416015625
    10. '    ' → logprob: -18.576416015625

Token 657: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -1.8550976164988242e-05
    2. '.' → logprob: -11.000018119812012
    3. 'sqrt' → logprob: -13.250018119812012
    4. '.Sqrt' → logprob: -16.500019073486328
    5. ' .' → logprob: -17.875019073486328
    6. ' sqrt' → logprob: -19.000019073486328
    7. '.square' → logprob: -21.000019073486328
    8. '```' → logprob: -21.500019073486328
    9. '√' → logprob: -21.750019073486328
    10. '.pow' → logprob: -21.875019073486328

Token 658: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0004927450208924711
    2. '(C' → logprob: -7.625492572784424
    3. 'A' → logprob: -12.875493049621582
    4. '(' → logprob: -13.375493049621582
    5. 'C' → logprob: -14.750493049621582
    6. ' (' → logprob: -16.250492095947266
    7. '(a' → logprob: -16.500492095947266
    8. '   ' → logprob: -18.000492095947266
    9. '(I' → logprob: -18.125492095947266
    10. '(B' → logprob: -18.750492095947266

Token 659: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.3856492842023727e-06
    2. ' **' → logprob: -14.125000953674316
    3. '2' → logprob: -14.750000953674316
    4. '*' → logprob: -15.750000953674316
    5. '^' → logprob: -17.625001907348633
    6. '²' → logprob: -17.750001907348633
    7. ' ' → logprob: -18.625001907348633
    8. '**
' → logprob: -19.125001907348633
    9. '+' → logprob: -19.875001907348633
    10. ')**' → logprob: -20.000001907348633

Token 660: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.096126576769166e-05
    2. ' ' → logprob: -10.250041007995605
    3. '**' → logprob: -12.250041007995605
    4. '²' → logprob: -15.125041007995605
    5. '
' → logprob: -15.250041007995605
    6. '```' → logprob: -16.75004005432129
    7. '۲' → logprob: -16.87504005432129
    8. '

' → logprob: -17.50004005432129
    9. '２' → logprob: -17.93754005432129
    10. '   ' → logprob: -18.18754005432129

Token 661: ' +' (ID: 659)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10110598057508469
    2. '**' → logprob: -2.8511059284210205
    3. '+' → logprob: -3.7261059284210205
    4. ' +' → logprob: -4.3511061668396
    5. ' ' → logprob: -6.6011061668396
    6. ' **' → logprob: -11.101105690002441
    7. '²' → logprob: -11.101105690002441
    8. '*' → logprob: -11.476105690002441
    9. '^' → logprob: -13.476105690002441
    10. '```' → logprob: -14.851105690002441

Token 662: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0005530327325686812
    2. ' C' → logprob: -7.500553131103516
    3. '   ' → logprob: -18.250553131103516
    4. ' ' → logprob: -19.750553131103516
    5. 'c' → logprob: -20.500553131103516
    6. '	C' → logprob: -20.875553131103516
    7. '  ' → logprob: -21.000553131103516
    8. '    ' → logprob: -21.750553131103516
    9. ')' → logprob: -22.500553131103516
    10. '*C' → logprob: -22.500553131103516

Token 663: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.07896547019481659
    2. '2' → logprob: -2.578965425491333
    3. '²' → logprob: -9.703965187072754
    4. '*' → logprob: -11.953965187072754
    5. '^' → logprob: -12.203965187072754
    6. '**)' → logprob: -13.453965187072754
    7. ' ' → logprob: -13.828965187072754
    8. '```' → logprob: -14.953965187072754
    9. ' **' → logprob: -15.828965187072754
    10. ')**' → logprob: -15.953965187072754

Token 664: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -12.000008583068848
    3. '**' → logprob: -13.000008583068848
    4. '²' → logprob: -17.12500762939453
    5. '```' → logprob: -17.25000762939453
    6. '۲' → logprob: -18.87500762939453
    7. '   ' → logprob: -19.12500762939453
    8. '
' → logprob: -19.56250762939453
    9. ')' → logprob: -19.75000762939453
    10. '２' → logprob: -19.81250762939453

Token 665: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009273029863834381
    2. ')
' → logprob: -7.000927448272705
    3. '   ' → logprob: -11.125926971435547
    4. ' )' → logprob: -14.500926971435547
    5. ')

' → logprob: -15.000926971435547
    6. ')
' → logprob: -15.125926971435547
    7. ' ' → logprob: -18.125926971435547
    8. '),' → logprob: -18.625926971435547
    9. ')`' → logprob: -18.625926971435547
    10. '```' → logprob: -18.625926971435547

Token 666: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15193848311901093
    2. 'min' → logprob: -2.9019384384155273
    3. '    
' → logprob: -3.2769384384155273
    4. ' min' → logprob: -3.6519384384155273
    5. '
' → logprob: -4.151938438415527
    6. ' minimal' → logprob: -6.276938438415527
    7. 'd' → logprob: -6.776938438415527
    8. 'di' → logprob: -6.901938438415527
    9. '	min' → logprob: -7.151938438415527
    10. 'minimal' → logprob: -7.526938438415527

Token 667: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6914229393005371
    2. ' min' → logprob: -1.066422939300537
    3. '   ' → logprob: -2.441422939300537
    4. ' minimal' → logprob: -3.816422939300537
    5. 'diam' → logprob: -3.941422939300537
    6. 'd' → logprob: -4.566422939300537
    7. 'minimal' → logprob: -5.316422939300537
    8. ' if' → logprob: -5.566422939300537
    9. 'if' → logprob: -5.816422939300537
    10. ' return' → logprob: -6.816422939300537

Token 668: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.014598040841519833
    2. 'return' → logprob: -5.0145978927612305
    3. 'd' → logprob: -5.6395978927612305
    4. 'diam' → logprob: -6.0145978927612305
    5. 'minimal' → logprob: -6.6395978927612305
    6. 'if' → logprob: -8.51459789276123
    7. ' min' → logprob: -8.51459789276123
    8. 'mini' → logprob: -10.01459789276123
    9. 'minimum' → logprob: -10.51459789276123
    10. '   ' → logprob: -10.76459789276123

Token 669: '_diag' (ID: 161716)
  Prédit: '_di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_di' → logprob: -0.057223398238420486
    2. '_diag' → logprob: -3.057223320007324
    3. '_d' → logprob: -4.807223320007324
    4. '_face' → logprob: -7.807223320007324
    5. '_distance' → logprob: -11.432223320007324
    6. '_dist' → logprob: -12.307223320007324
    7. 'Diagonal' → logprob: -13.182223320007324
    8. '_' → logprob: -13.682223320007324
    9. '_dim' → logprob: -14.307223320007324
    10. 'd' → logprob: -14.432223320007324

Token 670: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07899036258459091
    2. '=' → logprob: -2.5789904594421387
    3. 'al' → logprob: -9.70398998260498
    4. '   ' → logprob: -10.82898998260498
    5. ' ' → logprob: -11.45398998260498
    6. 'ale' → logprob: -12.45398998260498
    7. 'inal' → logprob: -12.82898998260498
    8. '  ' → logprob: -13.70398998260498
    9. '=min' → logprob: -14.82898998260498
    10. ' ' → logprob: -14.95398998260498

Token 671: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6931473612785339
    2. 'min' → logprob: -0.6931473612785339
    3. '	min' → logprob: -16.193147659301758
    4. '(min' → logprob: -18.068147659301758
    5. '   ' → logprob: -18.943147659301758
    6. ' minimum' → logprob: -20.193147659301758
    7. 'minimum' → logprob: -20.318147659301758
    8. ' ' → logprob: -20.443147659301758
    9. '=min' → logprob: -20.443147659301758
    10. '.min' → logprob: -20.818147659301758

Token 672: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.320199877838604e-07
    2. '([' → logprob: -15.0
    3. '(' → logprob: -17.375
    4. 'd' → logprob: -17.5
    5. '((' → logprob: -19.375
    6. '[d' → logprob: -20.125
    7. '(
' → logprob: -20.375
    8. ' (' → logprob: -20.5
    9. '	d' → logprob: -22.875
    10. '(min' → logprob: -23.375

Token 673: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '１' → logprob: -18.5
    3. 'd' → logprob: -18.875
    4. '```' → logprob: -20.3125
    5. '(' → logprob: -20.375
    6. '_' → logprob: -20.4375
    7. 'i' → logprob: -20.6875
    8. '१' → logprob: -21.0625
    9. ')' → logprob: -21.125
    10. ' ' → logprob: -21.125

Token 674: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005500895902514458
    2. ',d' → logprob: -5.255500793457031
    3. ' ,' → logprob: -8.255500793457031
    4. 'd' → logprob: -11.880500793457031
    5. ',
' → logprob: -14.880500793457031
    6. ' d' → logprob: -18.13050079345703
    7. ',b' → logprob: -18.50550079345703
    8. ',D' → logprob: -19.50550079345703
    9. ',min' → logprob: -20.00550079345703
    10. '_,' → logprob: -20.25550079345703

Token 675: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004079708829522133
    2. ' d' → logprob: -5.504079818725586
    3. '   ' → logprob: -13.629079818725586
    4. '	d' → logprob: -16.629079818725586
    5. '  ' → logprob: -17.879079818725586
    6. ' ' → logprob: -18.004079818725586
    7. '    ' → logprob: -18.754079818725586
    8. '
' → logprob: -20.004079818725586
    9. '       ' → logprob: -20.129079818725586
    10. '     ' → logprob: -20.754079818725586

Token 676: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009831057861447334
    2. '3' → logprob: -4.634830951690674
    3. 'd' → logprob: -9.509831428527832
    4. ' d' → logprob: -14.759831428527832
    5. 'f' → logprob: -15.134831428527832
    6. ' ' → logprob: -16.634830474853516
    7. '
' → logprob: -17.009830474853516
    8. '   ' → logprob: -17.009830474853516
    9. ')' → logprob: -17.384830474853516
    10. ',' → logprob: -17.384830474853516

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022022522171027958
    2. ' ,' → logprob: -8.75022029876709
    3. ',d' → logprob: -10.12522029876709
    4. 'd' → logprob: -10.75022029876709
    5. ',
' → logprob: -15.87522029876709
    6. ' d' → logprob: -17.500219345092773
    7. '   ' → logprob: -17.500219345092773
    8. ')' → logprob: -18.125219345092773
    9. '_,' → logprob: -18.375219345092773
    10. '3' → logprob: -19.625219345092773

Token 678: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0003802680876106024
    2. ' d' → logprob: -7.875380039215088
    3. '   ' → logprob: -16.62537956237793
    4. '	d' → logprob: -17.62537956237793
    5. ' ' → logprob: -19.25037956237793
    6. '  ' → logprob: -19.50037956237793
    7. ')' → logprob: -20.37537956237793
    8. '    ' → logprob: -20.62537956237793
    9. '```' → logprob: -20.87537956237793
    10. '
' → logprob: -20.87537956237793

Token 679: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ')' → logprob: -18.625
    3. '۳' → logprob: -18.75
    4. '৩' → logprob: -19.875
    5. '３' → logprob: -20.0
    6. '```' → logprob: -20.0
    7. '1' → logprob: -20.25
    8. '٣' → logprob: -20.375
    9. '३' → logprob: -20.5
    10. ' ' → logprob: -20.75

Token 680: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009137284359894693
    2. ')
' → logprob: -7.000913619995117
    3. '   ' → logprob: -13.500913619995117
    4. ')

' → logprob: -14.625913619995117
    5. ')
' → logprob: -15.500913619995117
    6. ' )' → logprob: -16.250913619995117
    7. ')`' → logprob: -18.750913619995117
    8. '))' → logprob: -18.875913619995117
    9. ')**' → logprob: -19.375913619995117
    10. '),' → logprob: -19.625913619995117

Token 681: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008025993593037128
    2. 'return' → logprob: -7.250802516937256
    3. 'if' → logprob: -9.875802993774414
    4. ' return' → logprob: -10.375802993774414
    5. '
' → logprob: -12.250802993774414
    6. '    
' → logprob: -12.500802993774414
    7. ' if' → logprob: -13.875802993774414
    8. '```' → logprob: -15.250802993774414
    9. '	return' → logprob: -15.625802993774414
    10. '   ' → logprob: -16.125802993774414

Token 682: ' diameter' (ID: 32514)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8010414242744446
    2. '   ' → logprob: -1.3010413646697998
    3. 'if' → logprob: -1.8010413646697998
    4. ' return' → logprob: -2.3010413646698
    5. ' if' → logprob: -4.301041603088379
    6. '
' → logprob: -10.801041603088379
    7. '```' → logprob: -10.926041603088379
    8. '    
' → logprob: -11.801041603088379
    9. ' ' → logprob: -12.676041603088379
    10. '	return' → logprob: -13.176041603088379

Token 683: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031872207764536142
    2. '=' → logprob: -5.75318717956543
    3. ' ' → logprob: -12.25318717956543
    4. '<|end|>' → logprob: -13.62818717956543
    5. ' ' → logprob: -14.12818717956543
    6. '_' → logprob: -14.25318717956543
    7. '<|end|>' → logprob: -14.62818717956543
    8. ' ==' → logprob: -15.00318717956543
    9. ')' → logprob: -15.12818717956543
    10. ' =
' → logprob: -15.37818717956543

Token 684: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0889403447508812
    2. ' ' → logprob: -2.463940382003784
    3. '   ' → logprob: -14.088940620422363
    4. '  ' → logprob: -16.588939666748047
    5. ' ' → logprob: -17.963939666748047
    6. '`' → logprob: -18.213939666748047
    7. '```' → logprob: -18.276439666748047
    8. '0' → logprob: -18.901439666748047
    9. '۲' → logprob: -18.901439666748047
    10. '    ' → logprob: -19.026439666748047

Token 685: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.250045776367188
    4. '```' → logprob: -19.375045776367188
    5. '  ' → logprob: -19.875045776367188
    6. '0' → logprob: -20.875045776367188
    7. '２' → logprob: -20.875045776367188
    8. '۲' → logprob: -21.000045776367188
    9. '`' → logprob: -21.250045776367188
    10. '20' → logprob: -21.375045776367188

Token 686: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0005530327325686812
    2. ' *' → logprob: -7.500553131103516
    3. '**' → logprob: -17.750553131103516
    4. '*r' → logprob: -18.625553131103516
    5. '```' → logprob: -19.125553131103516
    6. '*(' → logprob: -19.250553131103516
    7. '*object' → logprob: -19.375553131103516
    8. ' ' → logprob: -20.375553131103516
    9. '＊' → logprob: -20.500553131103516
    10. '   ' → logprob: -20.750553131103516

Token 687: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0001234428636962548
    2. ' R' → logprob: -9.000123023986816
    3. '	R' → logprob: -20.500123977661133
    4. ' ' → logprob: -21.625123977661133
    5. '_R' → logprob: -22.500123977661133
    6. '   ' → logprob: -23.625123977661133
    7. '(R' → logprob: -23.750123977661133
    8. 'Ｒ' → logprob: -24.000123977661133
    9. 'r' → logprob: -24.375123977661133
    10. '<R' → logprob: -24.375123977661133

Token 688: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031968358904123306
    2. '
' → logprob: -4.531968593597412
    3. 'return' → logprob: -5.156968593597412
    4. 'if' → logprob: -5.531968593597412
    5. '    
' → logprob: -5.781968593597412
    6. '>=' → logprob: -5.781968593597412
    7. ' if' → logprob: -6.406968593597412
    8. ' return' → logprob: -6.406968593597412
    9. ' >=' → logprob: -7.156968593597412
    10. '<=' → logprob: -8.031968116760254

Token 689: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001198562909848988
    2. 'return' → logprob: -7.001198768615723
    3. 'if' → logprob: -8.251198768615723
    4. ' return' → logprob: -11.126198768615723
    5. '
' → logprob: -11.751198768615723
    6. ' if' → logprob: -13.001198768615723
    7. '    
' → logprob: -13.751198768615723
    8. '	return' → logprob: -15.876198768615723
    9. '    ' → logprob: -18.501197814941406
    10. '	if' → logprob: -18.501197814941406

Token 690: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10246542096138
    2. 'if' → logprob: -2.3524653911590576
    3. '   ' → logprob: -6.102465629577637
    4. ' return' → logprob: -10.977465629577637
    5. ' if' → logprob: -13.227465629577637
    6. '	return' → logprob: -16.35246467590332
    7. '```' → logprob: -18.72746467590332
    8. 'Return' → logprob: -18.85246467590332
    9. '    
' → logprob: -18.85246467590332
    10. '	if' → logprob: -19.35246467590332

Token 691: ' diameter' (ID: 32514)
  Prédit: ' diameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diameter' → logprob: -0.3139054477214813
    2. 'diam' → logprob: -1.3139054775238037
    3. ' min' → logprob: -7.563905239105225
    4. 'min' → logprob: -9.313905715942383
    5. ' ' → logprob: -11.063905715942383
    6. '   ' → logprob: -11.688905715942383
    7. ' diam' → logprob: -12.813905715942383
    8. 'd' → logprob: -12.938905715942383
    9. ' True' → logprob: -13.563905715942383
    10. '	d' → logprob: -14.188905715942383

Token 692: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6931523084640503
    2. '>=' → logprob: -0.6931523084640503
    3. ')>=' → logprob: -13.19315242767334
    4. '>' → logprob: -13.44315242767334
    5. ']>=' → logprob: -14.06815242767334
    6. '   ' → logprob: -14.44315242767334
    7. ' ' → logprob: -15.56815242767334
    8. '≥' → logprob: -16.068151473999023
    9. ' >' → logprob: -16.818151473999023
    10. '<=' → logprob: -17.068151473999023

Token 693: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0019286326132714748
    2. ' min' → logprob: -6.251928806304932
    3. '_min' → logprob: -21.751928329467773
    4. '(min' → logprob: -22.001928329467773
    5. '	min' → logprob: -22.126928329467773
    6. '=min' → logprob: -24.501928329467773
    7. '[min' → logprob: -25.126928329467773
    8. 'max' → logprob: -25.501928329467773
    9. ':min' → logprob: -25.751928329467773
    10. '   ' → logprob: -26.001928329467773

Token 694: '_diag' (ID: 161716)
  Prédit: '_diag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diag' → logprob: -2.15310683415737e-05
    2. 'diag' → logprob: -10.750021934509277
    3. '_di' → logprob: -18.50002098083496
    4. 'min' → logprob: -19.00002098083496
    5. '\' → logprob: -20.00002098083496
    6. 'Diag' → logprob: -20.62502098083496
    7. ' diag' → logprob: -20.62502098083496
    8. '_d' → logprob: -21.37502098083496
    9. 'd' → logprob: -22.00002098083496
    10. '_' → logprob: -22.37502098083496

Token 695: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 696: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 697: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.22073639929294586
    2. ' test' → logprob: -2.220736503601074
    3. ' can' → logprob: -2.595736503601074
    4. ' j' → logprob: -5.470736503601074
    5. ' is' → logprob: -5.845736503601074
    6. ' passage' → logprob: -5.970736503601074
    7. ' passer' → logprob: -6.970736503601074
    8. 'main' → logprob: -6.970736503601074
    9. ' possible' → logprob: -7.470736503601074
    10. ' check' → logprob: -7.595736503601074

Token 698: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.751746746478602e-05
    2. '():
' → logprob: -10.12504768371582
    3. ' ():' → logprob: -12.50004768371582
    4. '()' → logprob: -12.62504768371582
    5. '():
' → logprob: -15.37504768371582
    6. '(' → logprob: -16.87504768371582
    7. '_' → logprob: -17.12504768371582
    8. '():

' → logprob: -17.62504768371582
    9. '()>' → logprob: -18.12504768371582
    10. '().' → logprob: -19.12504768371582

Token 699: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005244385101832449
    2. '    
' → logprob: -8.125524520874023
    3. ' R' → logprob: -9.250524520874023
    4. '```' → logprob: -10.875524520874023
    5. ' import' → logprob: -11.125524520874023
    6. '(' → logprob: -11.250524520874023
    7. 'import' → logprob: -11.250524520874023
    8. 'n' → logprob: -11.500524520874023
    9. '
' → logprob: -11.750524520874023
    10. ' 
' → logprob: -11.750524520874023

Token 700: ' while' (ID: 2049)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.6264063119888306
    2. 'R' → logprob: -1.1264063119888306
    3. '   ' → logprob: -2.001406192779541
    4. 'n' → logprob: -6.251406192779541
    5. 'import' → logprob: -6.876406192779541
    6. ' radius' → logprob: -6.876406192779541
    7. ' import' → logprob: -7.001406192779541
    8. ' n' → logprob: -7.751406192779541
    9. 'r' → logprob: -8.3764066696167
    10. 'radius' → logprob: -8.7514066696167

Token 701: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.000913370808120817
    2. 'True' → logprob: -7.000913143157959
    3. '(True' → logprob: -13.250913619995117
    4. '=True' → logprob: -17.000913619995117
    5. ' ' → logprob: -18.625913619995117
    6. ' true' → logprob: -18.625913619995117
    7. ' ' → logprob: -18.625913619995117
    8. '_true' → logprob: -20.500913619995117
    9. ' not' → logprob: -20.750913619995117
    10. ' Tru' → logprob: -20.875913619995117

Token 702: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0413081981241703
    2. ':
' → logprob: -3.2913081645965576
    3. '   ' → logprob: -6.541308403015137
    4. '():
' → logprob: -7.541308403015137
    5. ' :' → logprob: -7.666308403015137
    6. '():' → logprob: -7.666308403015137
    7. '       ' → logprob: -8.416308403015137
    8. ',' → logprob: -9.916308403015137
    9. ' :
' → logprob: -10.416308403015137
    10. '):
' → logprob: -11.416308403015137

Token 703: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006746393628418446
    2. '   ' → logprob: -5.006746292114258
    3. '	   ' → logprob: -11.756746292114258
    4. '    
' → logprob: -11.881746292114258
    5. '        
' → logprob: -12.756746292114258
    6. '           ' → logprob: -12.881746292114258
    7. ' try' → logprob: -13.006746292114258
    8. '```' → logprob: -13.631746292114258
    9. ' line' → logprob: -13.881746292114258
    10. '	' → logprob: -14.381746292114258

Token 704: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42467767000198364
    2. ' line' → logprob: -1.9246776103973389
    3. 'try' → logprob: -2.424677610397339
    4. ' try' → logprob: -2.674677610397339
    5. 'line' → logprob: -3.174677610397339
    6. ' ligne' → logprob: -8.049677848815918
    7. 'ligne' → logprob: -8.174677848815918
    8. ' input' → logprob: -10.174677848815918
    9. 'input' → logprob: -10.299677848815918
    10. 'user' → logprob: -10.424677848815918

Token 705: ' Lecture' (ID: 106534)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.4919535219669342
    2. 'line' → logprob: -0.9919534921646118
    3. 'ligne' → logprob: -5.241953372955322
    4. ' line' → logprob: -5.366953372955322
    5. ' try' → logprob: -5.616953372955322
    6. 'user' → logprob: -6.366953372955322
    7. 'input' → logprob: -7.366953372955322
    8. '   ' → logprob: -7.741953372955322
    9. 'inp' → logprob: -7.866953372955322
    10. 'data' → logprob: -8.61695384979248

Token 706: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008836031891405582
    2. 'try' → logprob: -6.758836269378662
    3. ' line' → logprob: -7.008836269378662
    4. 'user' → logprob: -7.133836269378662
    5. ':' → logprob: -7.258836269378662
    6. 'de' → logprob: -7.383836269378662
    7. '    ' → logprob: -7.633836269378662
    8. '()' → logprob: -7.758836269378662
    9. ' try' → logprob: -8.008835792541504
    10. 'ligne' → logprob: -8.133835792541504

Token 707: ' dimensions' (ID: 23995)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.660270094871521
    2. ' données' → logprob: -2.2852702140808105
    3. 'l' → logprob: -2.5352702140808105
    4. 'd' → logprob: -2.9102702140808105
    5. ' valeurs' → logprob: -3.0352702140808105
    6. 'don' → logprob: -3.1602702140808105
    7. 'dimensions' → logprob: -3.6602702140808105
    8. 'inputs' → logprob: -3.6602702140808105
    9. 'params' → logprob: -3.7852702140808105
    10. 'values' → logprob: -4.1602702140808105

Token 708: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1530158519744873
    2. 'try' → logprob: -2.1530158519744873
    3. ' try' → logprob: -4.153016090393066
    4. ' line' → logprob: -6.153016090393066
    5. 'ligne' → logprob: -6.278016090393066
    6. '    
' → logprob: -6.528016090393066
    7. 's' → logprob: -6.653016090393066
    8. 'line' → logprob: -6.778016090393066
    9. '    ' → logprob: -7.903016090393066
    10. ' ligne' → logprob: -8.278016090393066

Token 709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04852672666311264
    2. ' =' → logprob: -3.1735267639160156
    3. '=' → logprob: -5.548526763916016
    4. '   ' → logprob: -6.923526763916016
    5. 'et' → logprob: -8.673526763916016
    6. ' ,' → logprob: -8.923526763916016
    7. ' et' → logprob: -9.173526763916016
    8. '=input' → logprob: -10.173526763916016
    9. 'input' → logprob: -10.423526763916016
    10. '    ' → logprob: -10.673526763916016

Token 710: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.01104935072362423
    2. ' B' → logprob: -4.511049270629883
    3. ' ' → logprob: -13.636049270629883
    4. ',' → logprob: -15.386049270629883
    5. '  ' → logprob: -17.386049270629883
    6. '   ' → logprob: -17.636049270629883
    7. 'R' → logprob: -17.761049270629883
    8. 'b' → logprob: -17.886049270629883
    9. '    ' → logprob: -18.261049270629883
    10. '    
' → logprob: -18.886049270629883

Token 711: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012523093027994037
    2. ' =' → logprob: -9.87512493133545
    3. ' ,' → logprob: -10.62512493133545
    4. '=' → logprob: -10.87512493133545
    5. 'et' → logprob: -11.12512493133545
    6. '   ' → logprob: -12.37512493133545
    7. 's' → logprob: -13.25012493133545
    8. ',B' → logprob: -13.25012493133545
    9. '_,' → logprob: -13.62512493133545
    10. ' et' → logprob: -13.75012493133545

Token 712: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.029885394498705864
    2. ' C' → logprob: -3.5298852920532227
    3. 'et' → logprob: -9.654885292053223
    4. ' and' → logprob: -10.654885292053223
    5. ' ' → logprob: -11.029885292053223
    6. 'and' → logprob: -11.279885292053223
    7. 'R' → logprob: -12.029885292053223
    8. ',' → logprob: -12.654885292053223
    9. ' et' → logprob: -12.654885292053223
    10. '   ' → logprob: -12.779885292053223

Token 713: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13963288068771362
    2. ' =' → logprob: -2.2646329402923584
    3. '       ' → logprob: -4.389632701873779
    4. '=' → logprob: -5.139632701873779
    5. '   ' → logprob: -6.139632701873779
    6. ' ,' → logprob: -6.264632701873779
    7. ' et' → logprob: -6.389632701873779
    8. ':' → logprob: -7.764632701873779
    9. 'et' → logprob: -7.764632701873779
    10. '    ' → logprob: -7.764632701873779

Token 714: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7455584406852722
    2. '       ' → logprob: -1.120558500289917
    3. ',' → logprob: -1.745558500289917
    4. '=' → logprob: -3.870558500289917
    5. '   ' → logprob: -6.620558261871338
    6. '    ' → logprob: -7.495558261871338
    7. ':' → logprob: -7.870558261871338
    8. ' ,' → logprob: -8.120558738708496
    9. '        ' → logprob: -8.245558738708496
    10. '        
' → logprob: -8.245558738708496

Token 715: ' line' (ID: 2543)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.8958777189254761
    2. 'line' (adapté à ' line') → logprob: -1.020877718925476
    3. '   ' → logprob: -1.895877718925476
    4. ' line' → logprob: -3.2708778381347656
    5. ' try' → logprob: -4.145877838134766
    6. 'ligne' → logprob: -4.520877838134766
    7. '       ' → logprob: -4.895877838134766
    8. 'input' → logprob: -5.395877838134766
    9. 'user' → logprob: -6.395877838134766
    10. 'inputs' → logprob: -6.895877838134766

Token 716: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020699352025986
    2. '=' → logprob: -2.3502070903778076
    3. 's' → logprob: -15.475207328796387
    4. '=input' → logprob: -16.85020637512207
    5. '   ' → logprob: -17.72520637512207
    6. ' ' → logprob: -17.72520637512207
    7. '=line' → logprob: -17.85020637512207
    8. '_' → logprob: -18.10020637512207
    9. ' ' → logprob: -18.47520637512207
    10. ' =
' → logprob: -18.97520637512207

Token 717: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006715370807796717
    2. ' input' → logprob: -5.006715297698975
    3. '=input' → logprob: -21.006715774536133
    4. '	input' → logprob: -21.381715774536133
    5. '(input' → logprob: -22.631715774536133
    6. '<input' → logprob: -24.631715774536133
    7. ' ' → logprob: -24.756715774536133
    8. 'sys' → logprob: -25.881715774536133
    9. 'import' → logprob: -25.881715774536133
    10. 'output' → logprob: -26.256715774536133

Token 718: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005578436888754368
    2. '().' → logprob: -5.255578517913818
    3. '()
' → logprob: -8.00557804107666
    4. '(' → logprob: -12.50557804107666
    5. '("")' → logprob: -12.75557804107666
    6. '()

' → logprob: -13.25557804107666
    7. '()
' → logprob: -14.38057804107666
    8. '()>' → logprob: -14.75557804107666
    9. '=' → logprob: -15.25557804107666
    10. '();' → logprob: -15.38057804107666

Token 719: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. 'split' → logprob: -16.0
    3. 'rstrip' → logprob: -16.75
    4. ' strip' → logprob: -18.5
    5. '.strip' → logprob: -21.5
    6. '-strip' → logprob: -22.5
    7. '(strip' → logprob: -22.625
    8. '_strip' → logprob: -22.875
    9. 'replace' → logprob: -26.25
    10. 'startswith' → logprob: -26.875

Token 720: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08895799517631531
    2. '()
' → logprob: -2.4639580249786377
    3. '()
' → logprob: -11.713957786560059
    4. '()

' → logprob: -12.588957786560059
    5. ')' → logprob: -12.838957786560059
    6. '())' → logprob: -13.713957786560059
    7. '()\' → logprob: -13.713957786560059
    8. '(' → logprob: -14.963957786560059
    9. '():
' → logprob: -15.213957786560059
    10. '()`' → logprob: -15.338957786560059

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5661006569862366
    2. '   ' → logprob: -1.5661005973815918
    3. '<|end|>' → logprob: -2.191100597381592
    4. ' if' → logprob: -2.816100597381592
    5. 'if' → logprob: -3.441100597381592
    6. '<|end|>' → logprob: -5.066100597381592
    7. '
' → logprob: -5.691100597381592
    8. '        
' → logprob: -6.066100597381592
    9. '	if' → logprob: -6.441100597381592
    10. ' ' → logprob: -7.066100597381592

Token 722: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.4855663721391466e-05
    2. ' if' → logprob: -11.125015258789062
    3. '       ' → logprob: -17.125015258789062
    4. '#' → logprob: -17.625015258789062
    5. '        
' → logprob: -18.125015258789062
    6. '
' → logprob: -18.500015258789062
    7. '	if' → logprob: -18.750015258789062
    8. 'If' → logprob: -19.250015258789062
    9. 's' → logprob: -20.000015258789062
    10. '   ' → logprob: -20.125015258789062

Token 723: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.25504931807518005
    2. ' not' → logprob: -2.255049228668213
    3. 'not' → logprob: -2.505049228668213
    4. ' line' → logprob: -3.255049228668213
    5. '	line' → logprob: -14.130049705505371
    6. '#line' → logprob: -14.505049705505371
    7. '=line' → logprob: -14.505049705505371
    8. '(line' → logprob: -14.880049705505371
    9. '[line' → logprob: -15.130049705505371
    10. ' ' → logprob: -15.255049705505371

Token 724: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0028269849717617035
    2. ' ==' → logprob: -5.877827167510986
    3. '()==' → logprob: -11.127826690673828
    4. '=' → logprob: -12.377826690673828
    5. '===' → logprob: -13.252826690673828
    6. '==
' → logprob: -14.252826690673828
    7. '=="' → logprob: -14.502826690673828
    8. '=='' → logprob: -15.752826690673828
    9. ')==' → logprob: -16.502826690673828
    10. ']==' → logprob: -16.627826690673828

Token 725: ' "":
' (ID: 132826)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.36835017800331116
    2. '"' → logprob: -1.8683501482009888
    3. '''' → logprob: -2.3683502674102783
    4. '"":' → logprob: -2.8683502674102783
    5. ''' → logprob: -5.743350028991699
    6. ''ex' → logprob: -9.6183500289917
    7. ''end' → logprob: -10.9933500289917
    8. '"#' → logprob: -11.4933500289917
    9. ''t' → logprob: -12.8683500289917
    10. ''#' → logprob: -12.8683500289917

Token 726: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.227340430021286
    2. '       ' → logprob: -1.6023404598236084
    3. '	   ' → logprob: -7.602340221405029
    4. ':' → logprob: -7.852340221405029
    5. '   ' → logprob: -7.852340221405029
    6. 'break' → logprob: -9.102340698242188
    7. '	       ' → logprob: -9.352340698242188
    8. ':
' → logprob: -9.352340698242188
    9. ' break' → logprob: -9.477340698242188
    10. '		' → logprob: -9.602340698242188

Token 727: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.006611399352550507
    2. '       ' → logprob: -5.506611347198486
    3. ' break' → logprob: -6.256611347198486
    4. '           ' → logprob: -7.506611347198486
    5. '	break' → logprob: -9.756611824035645
    6. 'return' → logprob: -13.256611824035645
    7. '               ' → logprob: -13.631611824035645
    8. '   ' → logprob: -14.006611824035645
    9. '```' → logprob: -15.256611824035645
    10. '_break' → logprob: -15.631611824035645

Token 728: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018046533223241568
    2. '<|end|>' → logprob: -6.376804828643799
    3. '
' → logprob: -10.00180435180664
    4. '   ' → logprob: -10.87680435180664
    5. '        
' → logprob: -11.00180435180664
    6. '<|end|>' → logprob: -11.87680435180664
    7. '```' → logprob: -13.12680435180664
    8. '           ' → logprob: -13.75180435180664
    9. 'tokens' → logprob: -13.87680435180664
    10. ')' → logprob: -13.87680435180664

Token 729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010530536528676748
    2. '<|end|>' → logprob: -7.0010528564453125
    3. '        
' → logprob: -9.501052856445312
    4. 'token' → logprob: -11.001052856445312
    5. 'tokens' → logprob: -11.126052856445312
    6. '<|end|>' → logprob: -11.376052856445312
    7. '
' → logprob: -12.126052856445312
    8. '   ' → logprob: -12.376052856445312
    9. '```' → logprob: -12.626052856445312
    10. '	' → logprob: -13.626052856445312

Token 730: ' A' (ID: 355)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10669016093015671
    2. 'parts' → logprob: -3.3566901683807373
    3. 'tokens' → logprob: -3.4816901683807373
    4. 'dims' → logprob: -4.606689929962158
    5. 'try' → logprob: -4.731689929962158
    6. ' if' → logprob: -5.231689929962158
    7. 'values' → logprob: -5.356689929962158
    8. 'dimensions' → logprob: -5.481689929962158
    9. '       ' → logprob: -6.481689929962158
    10. 'sizes' → logprob: -8.356690406799316

Token 731: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.024604277219623e-05
    2. ',B' → logprob: -10.250040054321289
    3. ' ,' → logprob: -13.250040054321289
    4. ',b' → logprob: -13.375040054321289
    5. ',A' → logprob: -14.500040054321289
    6. '_,' → logprob: -15.375040054321289
    7. ',C' → logprob: -16.00004005432129
    8. ',
' → logprob: -16.12504005432129
    9. ',s' → logprob: -16.62504005432129
    10. 's' → logprob: -16.75004005432129

Token 732: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0005539863486774266
    2. ' B' → logprob: -7.500554084777832
    3. '=' → logprob: -14.375554084777832
    4. '<|end|>' → logprob: -15.375554084777832
    5. ' ' → logprob: -16.125553131103516
    6. '*' → logprob: -16.750553131103516
    7. ' =' → logprob: -17.500553131103516
    8. ',' → logprob: -18.000553131103516
    9. '=B' → logprob: -18.125553131103516
    10. 'b' → logprob: -18.875553131103516

Token 733: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.512236498361744e-07
    2. ' ,' → logprob: -15.125000953674316
    3. ',C' → logprob: -16.0
    4. 'C' → logprob: -17.375
    5. '_,' → logprob: -18.125
    6. '<|end|>' → logprob: -18.25
    7. '‌,' → logprob: -19.375
    8. ',B' → logprob: -19.625
    9. '،' → logprob: -19.75
    10. '=' → logprob: -19.75

Token 734: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.000553151941858232
    2. ' C' → logprob: -7.500553131103516
    3. ' ' → logprob: -16.000553131103516
    4. ' =' → logprob: -17.125553131103516
    5. '=' → logprob: -17.625553131103516
    6. '=C' → logprob: -17.875553131103516
    7. '*C' → logprob: -18.125553131103516
    8. '<|end|>' → logprob: -18.250553131103516
    9. '_C' → logprob: -19.250553131103516
    10. '  ' → logprob: -20.375553131103516

Token 735: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520157992839813
    2. ' =' → logprob: -1.5020158290863037
    3. ',' → logprob: -9.377016067504883
    4. '<|end|>' → logprob: -14.127016067504883
    5. ')' → logprob: -14.502016067504883
    6. '＝' → logprob: -15.752016067504883
    7. ')=' → logprob: -15.877016067504883
    8. '=line' → logprob: -16.377016067504883
    9. '=input' → logprob: -16.752016067504883
    10. '.' → logprob: -16.877016067504883

Token 736: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.02975395694375038
    2. ' map' → logprob: -3.5297539234161377
    3. '(map' → logprob: -13.279753684997559
    4. '[' → logprob: -13.404753684997559
    5. '	map' → logprob: -15.904753684997559
    6. 'line' → logprob: -16.154754638671875
    7. '.map' → logprob: -17.279754638671875
    8. '[line' → logprob: -17.279754638671875
    9. 'list' → logprob: -17.529754638671875
    10. ' [' → logprob: -18.654754638671875

Token 737: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008644593879580498
    2. '(float' → logprob: -4.7586445808410645
    3. 'int' → logprob: -10.508645057678223
    4. 'float' → logprob: -13.383645057678223
    5. '(' → logprob: -13.633645057678223
    6. '(str' → logprob: -17.508644104003906
    7. ' int' → logprob: -19.008644104003906
    8. '=int' → logprob: -19.133644104003906
    9. '[int' → logprob: -19.258644104003906
    10. '<int' → logprob: -20.633644104003906

Token 738: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.09804414212703705
    2. ',line' → logprob: -2.5980441570281982
    3. ',' → logprob: -3.9730441570281982
    4. ')' → logprob: -9.973044395446777
    5. 'line' → logprob: -10.473044395446777
    6. '(' → logprob: -10.598044395446777
    7. ' line' → logprob: -10.598044395446777
    8. '=line' → logprob: -11.348044395446777
    9. '#line' → logprob: -11.598044395446777
    10. '[line' → logprob: -12.723044395446777

Token 739: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0007099286303855479
    2. ' line' → logprob: -7.2507100105285645
    3. '(line' → logprob: -18.500709533691406
    4. '	line' → logprob: -19.375709533691406
    5. '#line' → logprob: -20.500709533691406
    6. '=line' → logprob: -20.500709533691406
    7. '[line' → logprob: -21.250709533691406
    8. '_line' → logprob: -22.875709533691406
    9. ',line' → logprob: -23.375709533691406
    10. ')' → logprob: -23.875709533691406

Token 740: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003235228592529893
    2. '.split' → logprob: -5.753235340118408
    3. '.strip' → logprob: -10.37823486328125
    4. '.' → logprob: -10.62823486328125
    5. '()' → logprob: -13.62823486328125
    6. ' .' → logprob: -14.12823486328125
    7. 'split' → logprob: -15.50323486328125
    8. '.Split' → logprob: -17.12823486328125
    9. '.rstrip' → logprob: -18.50323486328125
    10. '_split' → logprob: -18.75323486328125

Token 741: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007607918814755976
    2. '()' → logprob: -7.250760555267334
    3. '('' → logprob: -11.000761032104492
    4. ')' → logprob: -11.000761032104492
    5. '(' → logprob: -11.625761032104492
    6. '())
' → logprob: -11.875761032104492
    7. '()))' → logprob: -14.125761032104492
    8. '(','' → logprob: -14.875761032104492
    9. '("' → logprob: -15.625761032104492
    10. ' ())' → logprob: -16.375761032104492

Token 742: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012580878101289272
    2. ' if' → logprob: -7.50125789642334
    3. 'if' → logprob: -7.62625789642334
    4. '<|end|>' → logprob: -9.12625789642334
    5. '   ' → logprob: -9.37625789642334
    6. '        
' → logprob: -11.00125789642334
    7. ' ' → logprob: -13.25125789642334
    8. '	if' → logprob: -13.37625789642334
    9. '```' → logprob: -13.75125789642334
    10. '<|end|>' → logprob: -14.12625789642334

Token 743: '       ' (ID: 309)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.33360016345977783
    2. '       ' → logprob: -1.5836001634597778
    3. 'if' → logprob: -2.5836000442504883
    4. '   ' → logprob: -7.333600044250488
    5. ' if' → logprob: -7.458600044250488
    6. ' R' → logprob: -7.458600044250488
    7. 'for' → logprob: -8.083600044250488
    8. 'line' → logprob: -8.333600044250488
    9. 'r' → logprob: -9.083600044250488
    10. '#' → logprob: -9.458600044250488

Token 744: ' #' (ID: 1069)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.4289994239807129
    2. 'if' → logprob: -1.053999423980713
    3. '   ' → logprob: -9.053998947143555
    4. ' if' → logprob: -9.303998947143555
    5. 'r' → logprob: -9.928998947143555
    6. '       ' → logprob: -10.678998947143555
    7. '#' (adapté à ' #') → logprob: -11.928998947143555
    8. ' R' → logprob: -12.678998947143555
    9. 'radius' → logprob: -13.178998947143555
    10. 'If' → logprob: -13.303998947143555

Token 745: ' Condition' (ID: 30255)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0300632044672966
    2. 'R' → logprob: -3.5300631523132324
    3. ' if' → logprob: -8.53006362915039
    4. '#' → logprob: -9.90506362915039
    5. 'try' → logprob: -10.65506362915039
    6. 'r' → logprob: -10.90506362915039
    7. 'Si' → logprob: -11.78006362915039
    8. 'If' → logprob: -12.03006362915039
    9. '   ' → logprob: -12.90506362915039
    10. 'si' → logprob: -13.40506362915039

Token 746: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06733852624893188
    2. 'if' → logprob: -2.942338466644287
    3. ' if' → logprob: -4.692338466644287
    4. '   ' → logprob: -6.317338466644287
    5. '<|end|>' → logprob: -7.567338466644287
    6. 's' → logprob: -8.317338943481445
    7. '<|end|>' → logprob: -8.567338943481445
    8. ':' → logprob: -8.942338943481445
    9. 'If' → logprob: -9.317338943481445
    10. '        
' → logprob: -10.067338943481445

Token 747: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.01189175434410572
    2. 'sort' → logprob: -5.136891841888428
    3. ' sortie' → logprob: -6.011891841888428
    4. 'arr' → logprob: -7.011891841888428
    5. 'break' → logprob: -7.636891841888428
    6. ' fin' → logprob: -7.761891841888428
    7. 'stop' → logprob: -7.761891841888428
    8. 'can' → logprob: -7.886891841888428
    9. 'termination' → logprob: -8.26189136505127
    10. 'cess' → logprob: -9.51189136505127

Token 748: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018302272073924541
    2. 'if' → logprob: -6.751830101013184
    3. ' if' → logprob: -7.376830101013184
    4. '<|end|>' → logprob: -10.751830101013184
    5. ',' → logprob: -12.501830101013184
    6. '   ' → logprob: -12.876830101013184
    7. '<|end|>' → logprob: -13.376830101013184
    8. '	if' → logprob: -14.751830101013184
    9. ':' → logprob: -14.751830101013184
    10. 's' → logprob: -14.876830101013184

Token 749: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005956291686743498
    2. 'if' → logprob: -5.255956172943115
    3. ' if' → logprob: -7.255956172943115
    4. '<|end|>' → logprob: -12.005956649780273
    5. '   ' → logprob: -12.880956649780273
    6. '	' → logprob: -13.130956649780273
    7. '	if' → logprob: -13.380956649780273
    8. '	   ' → logprob: -13.755956649780273
    9. '<|end|>' → logprob: -14.505956649780273
    10. '```' → logprob: -14.630956649780273

Token 750: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -9.698698704596609e-05
    2. ' if' → logprob: -9.250097274780273
    3. '       ' → logprob: -14.000097274780273
    4. 'If' → logprob: -19.250097274780273
    5. '   ' → logprob: -20.250097274780273
    6. '```' → logprob: -20.625097274780273
    7. '	if' → logprob: -20.875097274780273
    8. '0' → logprob: -23.000097274780273
    9. 'import' → logprob: -23.500097274780273
    10. '[' → logprob: -23.625097274780273

Token 751: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0007551893359050155
    2. ' A' → logprob: -7.250755310058594
    3. '(' → logprob: -10.500755310058594
    4. '(A' → logprob: -11.000755310058594
    5. ' (' → logprob: -14.375755310058594
    6. ' ' → logprob: -15.375755310058594
    7. '0' → logprob: -16.625755310058594
    8. '	A' → logprob: -17.125755310058594
    9. '   ' → logprob: -17.375755310058594
    10. 'a' → logprob: -19.000755310058594

Token 752: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08903162181377411
    2. ' ==' → logprob: -2.46403169631958
    3. '=' → logprob: -10.464031219482422
    4. '0' → logprob: -10.839031219482422
    5. ' ' → logprob: -11.589031219482422
    6. '<=' → logprob: -11.589031219482422
    7. 'B' → logprob: -12.089031219482422
    8. 'A' → logprob: -12.089031219482422
    9. '()==' → logprob: -12.839031219482422
    10. ' A' → logprob: -13.339031219482422

Token 753: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00034821697045117617
    2. 'B' → logprob: -8.000348091125488
    3. ' ' → logprob: -11.500348091125488
    4. '-' → logprob: -13.000348091125488
    5. ' B' → logprob: -14.875348091125488
    6. '```' → logprob: -17.500349044799805
    7. ' -' → logprob: -18.500349044799805
    8. '	B' → logprob: -19.125349044799805
    9. '-B' → logprob: -19.500349044799805
    10. '000' → logprob: -20.000349044799805

Token 754: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007239909609779716
    2. 'B' → logprob: -7.250723838806152
    3. '-' → logprob: -11.375723838806152
    4. ' ' → logprob: -13.125723838806152
    5. ' B' → logprob: -14.875723838806152
    6. 'A' → logprob: -15.750723838806152
    7. '-B' → logprob: -17.37572479248047
    8. '```' → logprob: -17.75072479248047
    9. '	B' → logprob: -17.87572479248047
    10. ' -' → logprob: -18.37572479248047

Token 755: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.47407740354537964
    2. ' and' → logprob: -0.9740774035453796
    3. '0' → logprob: -15.099077224731445
    4. ' ' → logprob: -16.224077224731445
    5. ' or' → logprob: -17.474077224731445
    6. '	and' → logprob: -18.099077224731445
    7. ' и' → logprob: -18.349077224731445
    8. 'B' → logprob: -18.849077224731445
    9. 'or' → logprob: -19.099077224731445
    10. 'et' → logprob: -19.349077224731445

Token 756: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00020377879263833165
    2. ' B' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.250204086303711
    4. '	B' → logprob: -16.50020408630371
    5. '  ' → logprob: -18.37520408630371
    6. ' ' → logprob: -19.25020408630371
    7. '    ' → logprob: -22.25020408630371
    8. ' ' → logprob: -23.25020408630371
    9. '       ' → logprob: -23.87520408630371
    10. 'A' → logprob: -24.25020408630371

Token 757: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20141403377056122
    2. ' ==' → logprob: -1.7014139890670776
    3. '=' → logprob: -14.576414108276367
    4. '===' → logprob: -16.076414108276367
    5. '<|end|>' → logprob: -16.326414108276367
    6. '==
' → logprob: -17.701414108276367
    7. '()==' → logprob: -17.826414108276367
    8. ' =' → logprob: -18.076414108276367
    9. ']==' → logprob: -18.201414108276367
    10. '0' → logprob: -18.201414108276367

Token 758: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. ' and' → logprob: -17.625261306762695
    4. 'and' → logprob: -18.125261306762695
    5. '   ' → logprob: -19.000261306762695
    6. '  ' → logprob: -19.625261306762695
    7. '<|end|>' → logprob: -20.250261306762695
    8. '```' → logprob: -21.687761306762695
    9. '=' → logprob: -22.000261306762695
    10. '۰' → logprob: -22.000261306762695

Token 759: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. 'and' → logprob: -21.125001907348633
    4. '۰' → logprob: -21.250001907348633
    5. '<|end|>' → logprob: -21.625001907348633
    6. '  ' → logprob: -22.250001907348633
    7. ' and' → logprob: -22.375001907348633
    8. 'A' → logprob: -22.812501907348633
    9. '০' → logprob: -22.875001907348633
    10. '   ' → logprob: -23.000001907348633

Token 760: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2014138251543045
    2. 'and' → logprob: -1.701413869857788
    3. '0' → logprob: -14.701414108276367
    4. ' ' → logprob: -17.326414108276367
    5. ' и' → logprob: -18.826414108276367
    6. '&&' → logprob: -18.826414108276367
    7. '   ' → logprob: -18.951414108276367
    8. '==' → logprob: -19.076414108276367
    9. '	and' → logprob: -19.076414108276367
    10. 'et' → logprob: -19.451414108276367

Token 761: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -9.639096970204264e-05
    2. ' C' → logprob: -9.250096321105957
    3. ' ' → logprob: -16.375097274780273
    4. '   ' → logprob: -16.750097274780273
    5. '  ' → logprob: -16.875097274780273
    6. '	C' → logprob: -19.875097274780273
    7. '0' → logprob: -21.500097274780273
    8. '    ' → logprob: -21.750097274780273
    9. '
' → logprob: -21.875097274780273
    10. ' ' → logprob: -22.125097274780273

Token 762: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3132689297199249
    2. ' ==' → logprob: -1.3132688999176025
    3. '<|end|>' → logprob: -12.938268661499023
    4. ')==' → logprob: -13.313268661499023
    5. '=' → logprob: -13.813268661499023
    6. ']==' → logprob: -14.438268661499023
    7. '<|end|>' → logprob: -14.938268661499023
    8. '==
' → logprob: -15.188268661499023
    9. '===' → logprob: -15.438268661499023
    10. '()==' → logprob: -15.563268661499023

Token 763: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -19.125003814697266
    4. '۰' → logprob: -19.500003814697266
    5. '  ' → logprob: -20.500003814697266
    6. '<|end|>' → logprob: -20.562503814697266
    7. '০' → logprob: -20.875003814697266
    8. '```' → logprob: -21.250003814697266
    9. '<|end|>' → logprob: -21.687503814697266
    10. '०' → logprob: -21.937503814697266

Token 764: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '۰' → logprob: -20.625
    4. '   ' → logprob: -20.75
    5. '```' → logprob: -21.8125
    6. '০' → logprob: -22.0
    7. '  ' → logprob: -22.125
    8. '०' → logprob: -22.625
    9. '０' → logprob: -22.9375
    10. '=' → logprob: -23.25

Token 765: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030069222673773766
    2. ':
' → logprob: -3.53006911277771
    3. '       ' → logprob: -8.280069351196289
    4. '   ' → logprob: -10.030069351196289
    5. ':return' → logprob: -12.155069351196289
    6. '           ' → logprob: -12.280069351196289
    7. ' and' → logprob: -12.655069351196289
    8. '):
' → logprob: -13.030069351196289
    9. '.' → logprob: -13.530069351196289
    10. ',' → logprob: -13.655069351196289

Token 766: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009213464800268412
    2. '       ' → logprob: -7.000921249389648
    3. '	       ' → logprob: -13.000921249389648
    4. '		' → logprob: -13.125921249389648
    5. 'break' → logprob: -13.375921249389648
    6. ':' → logprob: -14.125921249389648
    7. ' break' → logprob: -14.250921249389648
    8. '   ' → logprob: -14.250921249389648
    9. '          ' → logprob: -14.500921249389648
    10. '<|end|>' → logprob: -14.625921249389648

Token 767: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0027562568429857492
    2. ' break' → logprob: -6.502756118774414
    3. '       ' → logprob: -6.752756118774414
    4. '	break' → logprob: -9.502756118774414
    5. 'return' → logprob: -11.752756118774414
    6. '           ' → logprob: -13.002756118774414
    7. '_break' → logprob: -15.127756118774414
    8. '   ' → logprob: -15.252756118774414
    9. '               ' → logprob: -16.877756118774414
    10. '```' → logprob: -17.377756118774414

Token 768: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010476073250174522
    2. '        
' → logprob: -4.760476112365723
    3. '<|end|>' → logprob: -6.635476112365723
    4. '
' → logprob: -8.385476112365723
    5. '   ' → logprob: -8.510476112365723
    6. '    
' → logprob: -10.510476112365723
    7. '```' → logprob: -11.010476112365723
    8. '		
' → logprob: -11.260476112365723
    9. '<|end|>' → logprob: -11.260476112365723
    10. '	' → logprob: -11.510476112365723

Token 769: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08005809038877487
    2. '   ' → logprob: -2.9550580978393555
    3. 'R' → logprob: -3.7050580978393555
    4. '```' → logprob: -8.955058097839355
    5. ' R' → logprob: -9.955058097839355
    6. 'for' → logprob: -10.705058097839355
    7. '        
' → logprob: -10.955058097839355
    8. '    
' → logprob: -12.080058097839355
    9. '	R' → logprob: -12.330058097839355
    10. 'D' → logprob: -12.455058097839355

Token 770: ' n' (ID: 297)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0007392307161353528
    2. '   ' → logprob: -7.625739097595215
    3. '       ' → logprob: -9.250739097595215
    4. 'line' → logprob: -9.375739097595215
    5. ' R' → logprob: -10.500739097595215
    6. 'r' → logprob: -10.750739097595215
    7. '#' → logprob: -11.750739097595215
    8. '```' → logprob: -13.125739097595215
    9. 'hole' → logprob: -13.250739097595215
    10. ' line' → logprob: -13.625739097595215

Token 771: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9179393649101257
    2. ' =' → logprob: -1.0429394245147705
    3. '_pass' → logprob: -2.2929394245147705
    4. 'pass' → logprob: -2.6679394245147705
    5. 'if' → logprob: -4.292939186096191
    6. 'R' → logprob: -4.667939186096191
    7. 'can' → logprob: -5.417939186096191
    8. 'ext' → logprob: -5.917939186096191
    9. '_R' → logprob: -5.917939186096191
    10. '   ' → logprob: -6.042939186096191

Token 772: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.22053886950016022
    2. 'A' → logprob: -2.470538854598999
    3. 'min' → logprob: -2.595538854598999
    4. 'max' → logprob: -4.220539093017578
    5. 'can' → logprob: -4.345539093017578
    6. ' int' → logprob: -5.470539093017578
    7. 'R' → logprob: -6.345539093017578
    8. '3' → logprob: -6.595539093017578
    9. '(int' → logprob: -7.595539093017578
    10. '0' → logprob: -8.095539093017578

Token 773: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0001907855912577361
    2. '(line' → logprob: -9.500190734863281
    3. 'input' → logprob: -9.875190734863281
    4. '(math' → logprob: -10.625190734863281
    5. '(A' → logprob: -11.000190734863281
    6. '(' → logprob: -11.125190734863281
    7. '((' → logprob: -12.000190734863281
    8. 'A' → logprob: -13.875190734863281
    9. '(round' → logprob: -15.375190734863281
    10. '(can' → logprob: -15.750190734863281

Token 774: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13284832239151
    2. '().' → logprob: -2.1328482627868652
    3. '()' → logprob: -5.132848262786865
    4. '())
' → logprob: -13.507848739624023
    5. ' ())' → logprob: -14.632848739624023
    6. '())

' → logprob: -14.882848739624023
    7. '(' → logprob: -15.132848739624023
    8. '();)' → logprob: -15.382848739624023
    9. '()>' → logprob: -15.882848739624023
    10. '()))' → logprob: -16.007848739624023

Token 775: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: 0.0
    2. ' strip' → logprob: -17.625
    3. 'rstrip' → logprob: -19.125
    4. ')' → logprob: -19.375
    5. '_strip' → logprob: -20.75
    6. '.strip' → logprob: -21.125
    7. 'str' → logprob: -21.625
    8. 'trim' → logprob: -21.75
    9. '(strip' → logprob: -21.875
    10. 'stripe' → logprob: -22.25

Token 776: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00019030878320336342
    2. '()' → logprob: -8.750190734863281
    3. '())
' → logprob: -10.750190734863281
    4. ')' → logprob: -11.500190734863281
    5. '())

' → logprob: -16.12519073486328
    6. ' ())' → logprob: -16.12519073486328
    7. '())
' → logprob: -16.75019073486328
    8. '();)' → logprob: -18.12519073486328
    9. '()
' → logprob: -18.62519073486328
    10. '()))' → logprob: -18.75019073486328

Token 777: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6396830677986145
    2. '<|end|>' → logprob: -0.7646830677986145
    3. 'for' → logprob: -5.889683246612549
    4. ' for' → logprob: -6.389683246612549
    5. '<|end|>' → logprob: -7.014683246612549
    6. '        
' → logprob: -7.014683246612549
    7. '	for' → logprob: -7.889683246612549
    8. '   ' → logprob: -8.88968276977539
    9. '\t' → logprob: -10.13968276977539
    10. 'tokens' → logprob: -10.51468276977539

Token 778: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01571512036025524
    2. ' for' → logprob: -4.6407151222229
    3. '       ' → logprob: -5.2657151222229
    4. 'possible' → logprob: -8.765714645385742
    5. 'holes' → logprob: -9.515714645385742
    6. 'pass' → logprob: -9.765714645385742
    7. 'can' → logprob: -9.890714645385742
    8. '<|end|>' → logprob: -10.015714645385742
    9. 'passes' → logprob: -10.140714645385742
    10. 'results' → logprob: -10.265714645385742

Token 779: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09160857647657394
    2. 'for' → logprob: -2.4666085243225098
    3. 'R' → logprob: -7.09160852432251
    4. ' for' → logprob: -7.59160852432251
    5. '0' → logprob: -8.091609001159668
    6. '<|end|>' → logprob: -8.341609001159668
    7. ' n' → logprob: -8.591609001159668
    8. '#' → logprob: -8.966609001159668
    9. '
' → logprob: -9.341609001159668
    10. 'holes' → logprob: -9.841609001159668

Token 780: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7244011759757996
    2. 'des' → logprob: -0.7244011759757996
    3. '_de' → logprob: -3.9744012355804443
    4. '_des' → logprob: -5.099400997161865
    5. 'd' → logprob: -5.974400997161865
    6. '_d' → logprob: -8.099401473999023
    7. 'def' → logprob: -8.099401473999023
    8. 'holes' → logprob: -8.099401473999023
    9. ' trous' → logprob: -8.224401473999023
    10. 't' → logprob: -8.474401473999023

Token 781: ' trous' (ID: 83009)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.044736094772815704
    2. ' trous' → logprob: -3.29473614692688
    3. 'tests' → logprob: -5.669735908508301
    4. ' trou' → logprob: -7.044735908508301
    5. 'holes' → logprob: -7.544735908508301
    6. 'cases' → logprob: -7.794735908508301
    7. 'r' → logprob: -7.794735908508301
    8. 'for' → logprob: -8.5447359085083
    9. 'test' → logprob: -8.9197359085083
    10. '
' → logprob: -9.0447359085083

Token 782: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49921807646751404
    2. '       ' → logprob: -0.9992181062698364
    3. ' for' → logprob: -4.249217987060547
    4. '<|end|>' → logprob: -4.874217987060547
    5. '        
' → logprob: -6.499217987060547
    6. '   ' → logprob: -7.624217987060547
    7. '	for' → logprob: -7.624217987060547
    8. 'tokens' → logprob: -8.749217987060547
    9. 'while' → logprob: -9.999217987060547
    10. '<|end|>' → logprob: -10.374217987060547

Token 783: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3887081444263458
    2. 'for' → logprob: -1.1387081146240234
    3. '   ' → logprob: -7.138708114624023
    4. ' for' → logprob: -7.513708114624023
    5. '        
' → logprob: -9.013708114624023
    6. 'tr' → logprob: -10.013708114624023
    7. '	for' → logprob: -10.013708114624023
    8. 'holes' → logprob: -10.013708114624023
    9. 't' → logprob: -10.138708114624023
    10. 'possible' → logprob: -10.263708114624023

Token 784: ' radi' (ID: 14041)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021384824067354202
    2. 'holes' → logprob: -7.252138614654541
    3. 'can' → logprob: -7.377138614654541
    4. 'passes' → logprob: -8.377138137817383
    5. 'results' → logprob: -9.002138137817383
    6. '       ' → logprob: -9.127138137817383
    7. ' for' → logprob: -9.627138137817383
    8. 'pass' → logprob: -9.627138137817383
    9. 'tr' → logprob: -9.752138137817383
    10. 'sizes' → logprob: -10.002138137817383

Token 785: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0030021851416677237
    2. 'us' → logprob: -5.878002166748047
    3. 'uses' → logprob: -9.878002166748047
    4. 'es' → logprob: -10.128002166748047
    5. 'is' → logprob: -10.253002166748047
    6. '#' → logprob: -10.628002166748047
    7. '[i' → logprob: -11.378002166748047
    8. 's' → logprob: -11.878002166748047
    9. ' =' → logprob: -12.003002166748047
    10. '   ' → logprob: -13.003002166748047

Token 786: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47415685653686523
    2. ' =' → logprob: -0.9741568565368652
    3. 's' → logprob: -9.474157333374023
    4. '=[]' → logprob: -12.974157333374023
    5. '_list' → logprob: -15.474157333374023
    6. '_' → logprob: -16.224157333374023
    7. '=[]
' → logprob: -16.474157333374023
    8. 'es' → logprob: -16.599157333374023
    9. '[]' → logprob: -16.599157333374023
    10. '＝' → logprob: -17.099157333374023

Token 787: ' []
' (ID: 8911)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.3150230050086975
    2. 'list' → logprob: -1.8150229454040527
    3. '[' → logprob: -2.3150229454040527
    4. '[]' → logprob: -4.815022945404053
    5. '[m' → logprob: -8.440023422241211
    6. '[List' → logprob: -9.565023422241211
    7. ' list' → logprob: -9.815023422241211
    8. '[n' → logprob: -10.065023422241211
    9. '[]
' → logprob: -10.440023422241211
    10. '[s' → logprob: -10.565023422241211

Token 788: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.640026867389679
    2. 'for' → logprob: -0.765026867389679
    3. ' for' → logprob: -5.015027046203613
    4. '	for' → logprob: -7.390027046203613
    5. '	   ' → logprob: -9.515027046203613
    6. '	' → logprob: -10.515027046203613
    7. '   ' → logprob: -11.015027046203613
    8. '<|end|>' → logprob: -11.015027046203613
    9. '        
' → logprob: -12.140027046203613
    10. '	       ' → logprob: -13.140027046203613

Token 789: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00025954778539016843
    2. ' for' → logprob: -8.750259399414062
    3. '       ' → logprob: -9.250259399414062
    4. '	for' → logprob: -12.250259399414062
    5. '   ' → logprob: -15.625259399414062
    6. '        
' → logprob: -18.500259399414062
    7. '
' → logprob: -19.750259399414062
    8. '[' → logprob: -19.875259399414062
    9. '	   ' → logprob: -20.000259399414062
    10. ' ' → logprob: -20.250259399414062

Token 790: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009294486371800303
    2. '_i' → logprob: -7.000929355621338
    3. ' _' → logprob: -11.000929832458496
    4. '_j' → logprob: -14.500929832458496
    5. '_in' → logprob: -15.375929832458496
    6. 'i' → logprob: -16.00092887878418
    7. '_token' → logprob: -16.12592887878418
    8. '_range' → logprob: -16.50092887878418
    9. '_index' → logprob: -17.25092887878418
    10. '_line' → logprob: -17.37592887878418

Token 791: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13613885641098022
    2. 'in' → logprob: -2.136138916015625
    3. ' in' → logprob: -4.886138916015625
    4. ' range' → logprob: -6.511138916015625
    5. '_' → logprob: -9.136138916015625
    6. 'i' → logprob: -11.636138916015625
    7. ' ' → logprob: -12.761138916015625
    8. '	range' → logprob: -13.011138916015625
    9. '  ' → logprob: -13.386138916015625
    10. 'r' → logprob: -13.386138916015625

Token 792: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1472419600977446e-06
    2. ' range' → logprob: -13.750000953674316
    3. 'r' → logprob: -20.875001907348633
    4. '	range' → logprob: -22.500001907348633
    5. 'rang' → logprob: -22.750001907348633
    6. '(range' → logprob: -22.750001907348633
    7. 'input' → logprob: -23.250001907348633
    8. 'list' → logprob: -23.750001907348633
    9. 'map' → logprob: -24.000001907348633
    10. 'count' → logprob: -24.000001907348633

Token 793: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1623527854681015
    2. 'n' → logprob: -1.9123528003692627
    3. ' n' → logprob: -6.162352561950684
    4. ' (' → logprob: -11.662352561950684
    5. 'range' → logprob: -12.412352561950684
    6. '(' → logprob: -12.787352561950684
    7. ' range' → logprob: -13.787352561950684
    8. '   ' → logprob: -14.037352561950684
    9. ' in' → logprob: -14.412352561950684
    10. '	n' → logprob: -14.537352561950684

Token 794: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.013531466946005821
    2. '):' → logprob: -4.388531684875488
    3. ')' → logprob: -7.888531684875488
    4. '):
' → logprob: -8.388531684875488
    5. '():
' → logprob: -8.513531684875488
    6. ':
' → logprob: -9.638531684875488
    7. ':' → logprob: -10.013531684875488
    8. '   ' → logprob: -10.138531684875488
    9. '<|end|>' → logprob: -10.888531684875488
    10. ' ):
' → logprob: -11.388531684875488

Token 795: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008327208459377289
    2. 'r' → logprob: -4.883327007293701
    3. '   ' → logprob: -7.883327007293701
    4. '	       ' → logprob: -9.00832748413086
    5. '       ' → logprob: -9.38332748413086
    6. '	   ' → logprob: -10.25832748413086
    7. ' r' → logprob: -10.75832748413086
    8. '		   ' → logprob: -11.50832748413086
    9. '<|end|>' → logprob: -11.50832748413086
    10. '            
' → logprob: -11.63332748413086

Token 796: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.11461879312992096
    2. 'r' → logprob: -2.2396187782287598
    3. ' R' → logprob: -6.48961877822876
    4. 'radius' → logprob: -8.614619255065918
    5. 'radi' → logprob: -9.989619255065918
    6. ' r' → logprob: -10.489619255065918
    7. ' radi' → logprob: -11.489619255065918
    8. '   ' → logprob: -12.864619255065918
    9. '           ' → logprob: -12.864619255065918
    10. ' radius' → logprob: -13.239619255065918

Token 797: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06202392280101776
    2. ' =' → logprob: -2.812023878097534
    3. '=int' → logprob: -9.812024116516113
    4. '=float' → logprob: -14.062024116516113
    5. '           ' → logprob: -15.312024116516113
    6. ')' → logprob: -16.187023162841797
    7. 'int' → logprob: -16.312023162841797
    8. '   ' → logprob: -16.437023162841797
    9. ')=' → logprob: -16.812023162841797
    10. '=
' → logprob: -16.812023162841797

Token 798: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3237166106700897
    2. 'float' → logprob: -1.323716640472412
    3. ' float' → logprob: -5.198716640472412
    4. ' int' → logprob: -5.323716640472412
    5. ' ' → logprob: -14.198716163635254
    6. '   ' → logprob: -14.698716163635254
    7. '	float' → logprob: -14.948716163635254
    8. '	int' → logprob: -15.073716163635254
    9. '  ' → logprob: -16.07371711730957
    10. '=float' → logprob: -16.57371711730957

Token 799: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0007129086880013347
    2. 'input' → logprob: -7.250712871551514
    3. ' input' → logprob: -13.625713348388672
    4. '(' → logprob: -13.750713348388672
    5. '=input' → logprob: -15.500713348388672
    6. '()' → logprob: -16.000713348388672
    7. ',input' → logprob: -16.625713348388672
    8. ' (' → logprob: -16.625713348388672
    9. '(
' → logprob: -17.250713348388672
    10. '	input' → logprob: -17.375713348388672

Token 800: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0052470373921096325
    2. '())' → logprob: -5.255247116088867
    3. '()' → logprob: -11.255247116088867
    4. '())
' → logprob: -15.255247116088867
    5. '()).' → logprob: -16.880247116088867
    6. '(' → logprob: -17.380247116088867
    7. '();)' → logprob: -18.130247116088867
    8. ')' → logprob: -18.255247116088867
    9. ' ().' → logprob: -18.505247116088867
    10. '())
' → logprob: -19.130247116088867

Token 801: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: 0.0
    2. '.strip' → logprob: -19.5
    3. ' strip' → logprob: -19.75
    4. 'rstrip' → logprob: -20.25
    5. '(strip' → logprob: -21.5
    6. '_strip' → logprob: -21.625
    7. '-strip' → logprob: -22.5
    8. 'stripe' → logprob: -24.25
    9. 'Strip' → logprob: -24.375
    10. 'split' → logprob: -25.25

Token 802: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42940855026245117
    2. '())' → logprob: -1.3044085502624512
    3. '())
' → logprob: -2.804408550262451
    4. ')
' → logprob: -4.179408550262451
    5. '()' → logprob: -6.304408550262451
    6. '())
' → logprob: -10.55440902709961
    7. '()
' → logprob: -10.67940902709961
    8. ')`
' → logprob: -11.55440902709961
    9. ')
' → logprob: -11.92940902709961
    10. '());' → logprob: -11.92940902709961

Token 803: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001601506257429719
    2. '       ' → logprob: -6.876601696014404
    3. '<|end|>' → logprob: -7.876601696014404
    4. 'r' → logprob: -9.501601219177246
    5. '	       ' → logprob: -10.126601219177246
    6. '<|end|>' → logprob: -10.501601219177246
    7. '        
' → logprob: -11.376601219177246
    8. '            
' → logprob: -11.876601219177246
    9. '   ' → logprob: -11.876601219177246
    10. '               ' → logprob: -12.501601219177246

Token 804: ' radi' (ID: 14041)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06106487289071083
    2. 'if' → logprob: -3.4360649585723877
    3. '       ' → logprob: -4.436064720153809
    4. '           ' → logprob: -4.686064720153809
    5. ' if' → logprob: -6.186064720153809
    6. 'print' → logprob: -6.436064720153809
    7. 'radi' (adapté à ' radi') → logprob: -6.436064720153809
    8. 'pass' → logprob: -8.436064720153809
    9. 'can' → logprob: -8.936064720153809
    10. '   ' → logprob: -8.936064720153809

Token 805: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002631238894537091
    2. 'r' → logprob: -8.375263214111328
    3. 'us' → logprob: -10.875263214111328
    4. 'e' → logprob: -11.750263214111328
    5. 'es' → logprob: -13.750263214111328
    6. 'a' → logprob: -14.125263214111328
    7. 's' → logprob: -14.250263214111328
    8. 'di' → logprob: -14.375263214111328
    9. 'adii' → logprob: -14.500263214111328
    10. '   ' → logprob: -14.750263214111328

Token 806: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.1318875446449965e-05
    2. '.' → logprob: -10.125041007995605
    3. 'append' → logprob: -14.500041007995605
    4. '.app' → logprob: -15.375041007995605
    5. 's' → logprob: -15.625041007995605
    6. '.extend' → logprob: -16.250041961669922
    7. '.Append' → logprob: -16.500041961669922
    8. '_append' → logprob: -18.000041961669922
    9. '.add' → logprob: -18.125041961669922
    10. '=' → logprob: -18.250041961669922

Token 807: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -4.320199877838604e-07
    2. 'R' → logprob: -15.0
    3. '(' → logprob: -17.25
    4. '(r' → logprob: -19.625
    5. '(int' → logprob: -20.375
    6. '	R' → logprob: -20.5
    7. '(
' → logprob: -21.0
    8. '((' → logprob: -22.25
    9. '[R' → logprob: -22.5
    10. ' R' → logprob: -22.875

Token 808: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.817902173381299e-05
    2. ')
' → logprob: -9.50009822845459
    3. '       ' → logprob: -11.12509822845459
    4. ')

' → logprob: -12.25009822845459
    5. '   ' → logprob: -12.62509822845459
    6. '<|end|>' → logprob: -16.000097274780273
    7. ' )' → logprob: -16.250097274780273
    8. ')
' → logprob: -16.375097274780273
    9. ')`' → logprob: -17.750097274780273
    10. '`)' → logprob: -17.750097274780273

Token 809: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2176045924425125
    2. '   ' → logprob: -2.342604637145996
    3. 'for' → logprob: -2.467604637145996
    4. '
' → logprob: -5.217604637145996
    5. ' for' → logprob: -5.592604637145996
    6. '        
' → logprob: -6.092604637145996
    7. '<|end|>' → logprob: -6.592604637145996
    8. '```' → logprob: -6.842604637145996
    9. '    
' → logprob: -7.342604637145996
    10. '	for' → logprob: -9.842604637145996

Token 810: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20678548514842987
    2. 'for' → logprob: -1.7067854404449463
    3. '       ' → logprob: -5.331785678863525
    4. ' for' → logprob: -8.456785202026367
    5. '    
' → logprob: -9.206785202026367
    6. '```' → logprob: -9.206785202026367
    7. '
' → logprob: -9.581785202026367
    8. 'results' → logprob: -10.706785202026367
    9. '        
' → logprob: -11.831785202026367
    10. '	for' → logprob: -12.081785202026367

Token 811: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.3213025744771585e-05
    2. ' for' → logprob: -11.000033378601074
    3. 'results' → logprob: -11.500033378601074
    4. '   ' → logprob: -12.875033378601074
    5. '       ' → logprob: -12.875033378601074
    6. 'pass' → logprob: -14.625033378601074
    7. 'result' → logprob: -15.000033378601074
    8. '```' → logprob: -15.875033378601074
    9. 'passes' → logprob: -16.125032424926758
    10. '
' → logprob: -16.250032424926758

Token 812: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0773373395204544
    2. 'results' → logprob: -2.9523372650146484
    3. 'passed' → logprob: -4.952337265014648
    4. 'pass' → logprob: -5.327337265014648
    5. 'result' → logprob: -5.452337265014648
    6. 'can' → logprob: -6.077337265014648
    7. 'possible' → logprob: -6.702337265014648
    8. 'passes' → logprob: -7.077337265014648
    9. 'passing' → logprob: -7.202337265014648
    10. 'found' → logprob: -7.452337265014648

Token 813: ' chaque' (ID: 21194)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.28533071279525757
    2. 'r' → logprob: -1.5353307723999023
    3. ' R' → logprob: -4.160330772399902
    4. 'radius' → logprob: -4.410330772399902
    5. 'ray' → logprob: -6.410330772399902
    6. 'pass' → logprob: -7.160330772399902
    7. ' r' → logprob: -7.285330772399902
    8. 'i' → logprob: -7.785330772399902
    9. ' radius' → logprob: -7.785330772399902
    10. 'each' → logprob: -7.785330772399902

Token 814: ' trou' (ID: 18706)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.11242043226957321
    2. ' R' → logprob: -2.6124203205108643
    3. 'radius' → logprob: -4.112420558929443
    4. 'ray' → logprob: -4.487420558929443
    5. ' radius' → logprob: -5.987420558929443
    6. 'r' → logprob: -6.362420558929443
    7. ' rayon' → logprob: -6.987420558929443
    8. 'Ray' → logprob: -9.362420082092285
    9. ' ray' → logprob: -9.737420082092285
    10. ' r' → logprob: -11.112420082092285

Token 815: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011615946888923645
    2. ',' → logprob: -4.886615753173828
    3. 'for' → logprob: -6.136615753173828
    4. ' for' → logprob: -6.386615753173828
    5. '   ' → logprob: -9.886615753173828
    6. ':' → logprob: -10.761615753173828
    7. '<|end|>' → logprob: -10.761615753173828
    8. '        
' → logprob: -10.886615753173828
    9. '<|end|>' → logprob: -11.761615753173828
    10. '           ' → logprob: -11.886615753173828

Token 816: ' é' (ID: 1212)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006757998839020729
    2. '       ' → logprob: -5.256758213043213
    3. ' for' → logprob: -6.506758213043213
    4. 'if' → logprob: -10.756757736206055
    5. 'result' → logprob: -13.256757736206055
    6. 'pass' → logprob: -13.381757736206055
    7. '#' → logprob: -13.631757736206055
    8. '```' → logprob: -14.131757736206055
    9. '        
' → logprob: -14.256757736206055
    10. '   ' → logprob: -14.506757736206055

Token 817: 'valuer' (ID: 141145)
  Prédit: 'valuer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuer' → logprob: -0.032695699483156204
    2. 'value' → logprob: -3.907695770263672
    3. 'for' → logprob: -5.407695770263672
    4. 'valuate' → logprob: -5.782695770263672
    5. 'val' → logprob: -6.032695770263672
    6. 'print' → logprob: -6.907695770263672
    7. 'valu' → logprob: -8.157695770263672
    8. 'valuator' → logprob: -8.282695770263672
    9. 'crire' → logprob: -8.407695770263672
    10. 'v' → logprob: -9.157695770263672

Token 818: ' si' (ID: 1784)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.519084632396698
    2. '       ' → logprob: -1.0190846920013428
    3. ' for' → logprob: -3.1440846920013428
    4. 'if' → logprob: -7.769084453582764
    5. 'pour' → logprob: -8.769084930419922
    6. 'possible' → logprob: -9.644084930419922
    7. '   ' → logprob: -10.019084930419922
    8. 'pass' → logprob: -10.019084930419922
    9. '	for' → logprob: -10.144084930419922
    10. 'poss' → logprob: -10.769084930419922

Token 819: ' le' (ID: 505)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.16149190068244934
    2. ' can' → logprob: -1.911491870880127
    3. '   ' → logprob: -7.036491870880127
    4. 'pass' → logprob: -8.661492347717285
    5. 'possible' → logprob: -9.911492347717285
    6. ' any' → logprob: -10.411492347717285
    7. '  ' → logprob: -10.786492347717285
    8. 'print' → logprob: -11.036492347717285
    9. ' ' → logprob: -11.411492347717285
    10. ' possible' → logprob: -11.786492347717285

Token 820: ' fromage' (ID: 167520)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.018752526491880417
    2. 'che' → logprob: -4.893752574920654
    3. 'can' → logprob: -5.393752574920654
    4. 'print' → logprob: -5.768752574920654
    5. 'for' → logprob: -6.143752574920654
    6. ' fromage' → logprob: -7.018752574920654
    7. 'result' → logprob: -9.268752098083496
    8. 'possible' → logprob: -9.768752098083496
    9. 'pass' → logprob: -10.268752098083496
    10. '#' → logprob: -10.393752098083496

Token 821: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.09489717334508896
    2. ' peut' → logprob: -2.4698972702026367
    3. '   ' → logprob: -6.094897270202637
    4. 'can' → logprob: -6.844897270202637
    5. ' peux' → logprob: -6.969897270202637
    6. 'p' → logprob: -7.719897270202637
    7. '       ' → logprob: -8.219897270202637
    8. ' can' → logprob: -8.344897270202637
    9. 'pu' → logprob: -8.594897270202637
    10. ' pourra' → logprob: -8.719897270202637

Token 822: ' passer' (ID: 27727)
  Prédit: ' passer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passer' → logprob: -0.15101835131645203
    2. 'pass' → logprob: -2.0260183811187744
    3. ' pass' → logprob: -5.401018142700195
    4. '   ' → logprob: -6.151018142700195
    5. '_pass' → logprob: -7.026018142700195
    6. 'être' → logprob: -8.401018142700195
    7. ' être' → logprob: -8.776018142700195
    8. ' passes' → logprob: -9.026018142700195
    9. ' passage' → logprob: -10.026018142700195
    10. ' passe' → logprob: -10.151018142700195

Token 823: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005790081340819597
    2. 'for' → logprob: -7.625578880310059
    3. ' for' → logprob: -9.375578880310059
    4. '<|end|>' → logprob: -12.875578880310059
    5. ',' → logprob: -14.000578880310059
    6. '	' → logprob: -14.625578880310059
    7. '   ' → logprob: -14.625578880310059
    8. '        
' → logprob: -14.750578880310059
    9. '           ' → logprob: -15.000578880310059
    10. '<|end|>' → logprob: -15.000578880310059

Token 824: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018983196059707552
    2. 'for' → logprob: -9.000189781188965
    3. ' for' → logprob: -9.750189781188965
    4. '   ' → logprob: -11.750189781188965
    5. '<|end|>' → logprob: -16.62519073486328
    6. '           ' → logprob: -16.75019073486328
    7. '      ' → logprob: -17.25019073486328
    8. '        
' → logprob: -17.37519073486328
    9. '```' → logprob: -17.37519073486328
    10. '	for' → logprob: -17.87519073486328

Token 825: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.25363796949386597
    2. '       ' → logprob: -1.5036380290985107
    3. ' for' → logprob: -6.378637790679932
    4. '   ' → logprob: -12.00363826751709
    5. '	for' → logprob: -12.75363826751709
    6. '        
' → logprob: -14.25363826751709
    7. '	   ' → logprob: -16.378637313842773
    8. '           ' → logprob: -16.628637313842773
    9. 'results' → logprob: -16.753637313842773
    10. ' ' → logprob: -16.878637313842773

Token 826: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.03846726939082146
    2. ' R' → logprob: -3.2884671688079834
    3. 'r' → logprob: -8.038467407226562
    4. 'radius' → logprob: -9.663467407226562
    5. ' radius' → logprob: -10.288467407226562
    6. ' r' → logprob: -12.413467407226562
    7. '	R' → logprob: -14.788467407226562
    8. 'Radius' → logprob: -15.288467407226562
    9. '   ' → logprob: -15.663467407226562
    10. '_R' → logprob: -16.038467407226562

Token 827: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008619419299066067
    2. 'in' → logprob: -4.75861930847168
    3. ')' → logprob: -12.63361930847168
    4. '	in' → logprob: -14.75861930847168
    5. '_in' → logprob: -15.00861930847168
    6. ',' → logprob: -15.13361930847168
    7. ' ' → logprob: -15.75861930847168
    8. 'd' → logprob: -16.50861930847168
    9. 's' → logprob: -16.63361930847168
    10. 'In' → logprob: -17.32111930847168

Token 828: ' radi' (ID: 14041)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.703443770878948e-06
    2. 'radi' → logprob: -11.875007629394531
    3. ' radi' → logprob: -14.375007629394531
    4. 're' → logprob: -17.25000762939453
    5. '   ' → logprob: -17.25000762939453
    6. ' ' → logprob: -19.87500762939453
    7. 'R' → logprob: -20.25000762939453
    8. ' r' → logprob: -20.25000762939453
    9. 'ranges' → logprob: -20.62500762939453
    10. '_r' → logprob: -20.75000762939453

Token 829: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4021237802808173e-05
    2. 'r' → logprob: -11.875014305114746
    3. 'us' → logprob: -13.375014305114746
    4. 'di' → logprob: -13.375014305114746
    5. 'adii' → logprob: -14.250014305114746
    6. '   ' → logprob: -14.375014305114746
    7. '[i' → logprob: -14.750014305114746
    8. 'e' → logprob: -15.500014305114746
    9. 'indices' → logprob: -15.500014305114746
    10. 'es' → logprob: -15.625014305114746

Token 830: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5793825387954712
    2. ':
' → logprob: -0.8293825387954712
    3. '           ' → logprob: -5.954382419586182
    4. '       ' → logprob: -7.579382419586182
    5. '):
' → logprob: -8.70438289642334
    6. '():
' → logprob: -9.20438289642334
    7. ',' → logprob: -10.32938289642334
    8. '   ' → logprob: -11.70438289642334
    9. ' :
' → logprob: -11.70438289642334
    10. ' :' → logprob: -12.45438289642334

Token 831: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11453672498464584
    2. '           ' → logprob: -2.239536762237549
    3. 'print' → logprob: -6.864536762237549
    4. ' print' → logprob: -8.48953628540039
    5. 'if' → logprob: -8.86453628540039
    6. ' if' → logprob: -9.36453628540039
    7. '<|end|>' → logprob: -9.61453628540039
    8. '        
' → logprob: -9.98953628540039
    9. '```' → logprob: -10.48953628540039
    10. '<|end|>' → logprob: -10.61453628540039

Token 832: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6040712594985962
    2. 'print' → logprob: -0.9790712594985962
    3. ' if' → logprob: -2.8540711402893066
    4. '       ' → logprob: -4.729071140289307
    5. '           ' → logprob: -5.354071140289307
    6. ' print' → logprob: -5.604071140289307
    7. 'result' → logprob: -5.979071140289307
    8. 'can' → logprob: -8.604071617126465
    9. ' result' → logprob: -9.729071617126465
    10. 'pass' → logprob: -9.854071617126465

Token 833: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.0009114635176956654
    2. ' can' → logprob: -7.000911235809326
    3. '	can' → logprob: -19.125911712646484
    4. '(can' → logprob: -19.625911712646484
    5. '_can' → logprob: -19.750911712646484
    6. 'not' → logprob: -21.750911712646484
    7. '.can' → logprob: -22.125911712646484
    8. '   ' → logprob: -22.375911712646484
    9. 'Can' → logprob: -23.750911712646484
    10. ' not' → logprob: -24.875911712646484

Token 834: '_pass' (ID: 36293)
  Prédit: '_pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pass' → logprob: -3.7697225252486533e-06
    2. 'pass' → logprob: -12.625003814697266
    3. '_' → logprob: -15.375003814697266
    4. '_p' → logprob: -16.500003814697266
    5. ' pass' → logprob: -17.000003814697266
    6. '_pas' → logprob: -17.125003814697266
    7. ' _' → logprob: -17.625003814697266
    8. '_PASS' → logprob: -18.250003814697266
    9. 'Pass' → logprob: -18.625003814697266
    10. '   ' → logprob: -20.000003814697266

Token 835: '_th' (ID: 16038)
  Prédit: '_th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_th' → logprob: -9.014684110297821e-06
    2. 'through' → logprob: -12.000008583068848
    3. '_pass' → logprob: -13.000008583068848
    4. 'th' → logprob: -15.875008583068848
    5. '_' → logprob: -16.625009536743164
    6. '   ' → logprob: -16.875009536743164
    7. ' through' → logprob: -16.875009536743164
    8. '_thr' → logprob: -17.000009536743164
    9. '_the' → logprob: -17.125009536743164
    10. '_tr' → logprob: -17.875009536743164

Token 836: 'rough' (ID: 1712)
  Prédit: 'rough'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rough' → logprob: -0.0052360063418745995
    2. 'ough' → logprob: -5.2552361488342285
    3. 'orough' → logprob: -14.13023567199707
    4. 'rou' → logprob: -15.25523567199707
    5. 'h' → logprob: -15.38023567199707
    6. '   ' → logprob: -15.63023567199707
    7. '       ' → logprob: -15.75523567199707
    8. ' rough' → logprob: -16.13023567199707
    9. 'R' → logprob: -16.38023567199707
    10. 'r' → logprob: -16.63023567199707

Token 837: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.0011777279432862997
    2. '(' → logprob: -6.751177787780762
    3. ' (' → logprob: -12.376177787780762
    4. '(
' → logprob: -13.001177787780762
    5. '(r' → logprob: -15.501177787780762
    6. '((' → logprob: -15.876177787780762
    7. '(T' → logprob: -16.001176834106445
    8. 'R' → logprob: -16.126176834106445
    9. '(S' → logprob: -16.376176834106445
    10. ')' → logprob: -16.501176834106445

Token 838: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.310693111619912e-05
    2. ',A' → logprob: -10.500042915344238
    3. ' ,' → logprob: -11.250042915344238
    4. 'A' → logprob: -13.000042915344238
    5. ',
' → logprob: -16.125043869018555
    6. ',R' → logprob: -16.875043869018555
    7. '           ' → logprob: -18.000043869018555
    8. '_,' → logprob: -18.000043869018555
    9. ')' → logprob: -18.375043869018555
    10. '(),' → logprob: -18.625043869018555

Token 839: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.623244553338736e-05
    2. ' A' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.50006675720215
    4. '	A' → logprob: -17.12506675720215
    5. 'a' → logprob: -18.75006675720215
    6. '           ' → logprob: -19.25006675720215
    7. '    ' → logprob: -19.37506675720215
    8. '       ' → logprob: -19.37506675720215
    9. ' ' → logprob: -19.62506675720215
    10. '  ' → logprob: -19.75006675720215

Token 840: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020175233657937497
    2. ',B' → logprob: -8.625202178955078
    3. ' ,' → logprob: -10.750202178955078
    4. ',
' → logprob: -15.750202178955078
    5. ')' → logprob: -16.000202178955078
    6. ',b' → logprob: -16.375202178955078
    7. 'B' → logprob: -16.375202178955078
    8. '   ' → logprob: -17.250202178955078
    9. '```' → logprob: -17.250202178955078
    10. ',A' → logprob: -17.375202178955078

Token 841: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.000488110730657354
    2. ' B' → logprob: -7.62548828125
    3. '   ' → logprob: -17.87548828125
    4. '       ' → logprob: -19.50048828125
    5. 'b' → logprob: -19.87548828125
    6. ')' → logprob: -19.87548828125
    7. '           ' → logprob: -20.00048828125
    8. ',' → logprob: -20.00048828125
    9. ' ' → logprob: -20.50048828125
    10. '    ' → logprob: -20.50048828125

Token 842: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024144348572008312
    2. ' ,' → logprob: -9.00024127960205
    3. ',C' → logprob: -9.12524127960205
    4. 'C' → logprob: -12.00024127960205
    5. ',
' → logprob: -13.37524127960205
    6. '           ' → logprob: -14.25024127960205
    7. ')' → logprob: -15.50024127960205
    8. '```' → logprob: -15.75024127960205
    9. '   ' → logprob: -16.125242233276367
    10. '),' → logprob: -17.125242233276367

Token 843: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -2.15310683415737e-05
    2. ' C' → logprob: -10.750021934509277
    3. '   ' → logprob: -20.75002098083496
    4. ' ' → logprob: -21.12502098083496
    5. ')' → logprob: -22.12502098083496
    6. 'c' → logprob: -22.37502098083496
    7. '  ' → logprob: -23.12502098083496
    8. ',' → logprob: -23.25002098083496
    9. '```' → logprob: -23.87502098083496
    10. '       ' → logprob: -24.00002098083496

Token 844: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0007260137936100364
    2. '):' → logprob: -7.250726222991943
    3. '           ' → logprob: -11.750725746154785
    4. '):
' → logprob: -12.625725746154785
    5. ':
' → logprob: -13.375725746154785
    6. '       ' → logprob: -13.625725746154785
    7. ':' → logprob: -14.250725746154785
    8. '():
' → logprob: -14.750725746154785
    9. ' ):
' → logprob: -14.750725746154785
    10. ')' → logprob: -15.500725746154785

Token 845: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010012515122070909
    2. 'print' → logprob: -7.001001358032227
    3. ' print' → logprob: -9.626001358032227
    4. '	           ' → logprob: -11.626001358032227
    5. '       ' → logprob: -12.001001358032227
    6. '           ' → logprob: -12.626001358032227
    7. '		       ' → logprob: -12.751001358032227
    8. '	print' → logprob: -14.001001358032227
    9. '	       ' → logprob: -14.626001358032227
    10. '                   ' → logprob: -14.876001358032227

Token 846: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.023852813988924026
    2. '               ' → logprob: -3.773852825164795
    3. '           ' → logprob: -7.773852825164795
    4. ' print' → logprob: -8.648852348327637
    5. '   ' → logprob: -11.898852348327637
    6. '                   ' → logprob: -13.398852348327637
    7. '	print' → logprob: -13.398852348327637
    8. '       ' → logprob: -13.523852348327637
    9. '	           ' → logprob: -16.773853302001953
    10. '```' → logprob: -17.523853302001953

Token 847: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0006614457233808935
    2. '('' → logprob: -7.625661373138428
    3. '(' → logprob: -8.875661849975586
    4. '"' → logprob: -10.625661849975586
    5. '"O' → logprob: -12.750661849975586
    6. '("+' → logprob: -12.875661849975586
    7. '(f' → logprob: -13.250661849975586
    8. '("#' → logprob: -15.125661849975586
    9. '(":' → logprob: -15.250661849975586
    10. '   ' → logprob: -15.750661849975586

Token 848: 'OK' (ID: 5175)
  Prédit: 'OK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OK' → logprob: -0.09636256098747253
    2. 'S' → logprob: -3.846362590789795
    3. 'Ok' → logprob: -3.846362590789795
    4. 'ok' → logprob: -4.721362590789795
    5. 'Y' → logprob: -4.721362590789795
    6. 'O' → logprob: -4.846362590789795
    7. 'YES' → logprob: -4.846362590789795
    8. 'Yes' → logprob: -5.346362590789795
    9. 'Oui' → logprob: -5.721362590789795
    10. 'PASS' → logprob: -6.471362590789795

Token 849: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.026703495532274246
    2. '")' → logprob: -3.6517035961151123
    3. '")
' → logprob: -7.901703357696533
    4. ')' → logprob: -11.526703834533691
    5. ')
' → logprob: -11.901703834533691
    6. ' ")
' → logprob: -12.401703834533691
    7. ')")
' → logprob: -12.526703834533691
    8. '   ' → logprob: -13.401703834533691
    9. '"' → logprob: -13.651703834533691
    10. '')
' → logprob: -14.026703834533691

Token 850: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003921847674064338
    2. 'else' → logprob: -7.875391960144043
    3. ' else' → logprob: -11.500391960144043
    4. '       ' → logprob: -14.125391960144043
    5. '		' → logprob: -14.875391960144043
    6. '```' → logprob: -15.250391960144043
    7. '          ' → logprob: -15.750391960144043
    8. '	       ' → logprob: -16.00039291381836
    9. '   ' → logprob: -16.25039291381836
    10. '               ' → logprob: -16.37539291381836

Token 851: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10051881521940231
    2. '           ' → logprob: -2.3505187034606934
    3. ' else' → logprob: -8.100519180297852
    4. '       ' → logprob: -11.725519180297852
    5. '	else' → logprob: -14.975519180297852
    6. '		' → logprob: -15.975519180297852
    7. '   ' → logprob: -16.10051918029785
    8. '	       ' → logprob: -16.35051918029785
    9. 'elif' → logprob: -16.72551918029785
    10. '               ' → logprob: -18.22551918029785

Token 852: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7264343500137329
    2. ':' → logprob: -0.8514343500137329
    3. ':
' → logprob: -2.4764342308044434
    4. '           ' → logprob: -5.351434230804443
    5. '                   ' → logprob: -8.726434707641602
    6. 'print' → logprob: -8.976434707641602
    7. ' :' → logprob: -9.351434707641602
    8. '              ' → logprob: -9.601434707641602
    9. '	           ' → logprob: -10.101434707641602
    10. ' print' → logprob: -10.101434707641602

Token 853: '               ' (ID: 506)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16671651601791382
    2. '               ' → logprob: -1.9167165756225586
    3. ' print' → logprob: -5.041716575622559
    4. '           ' → logprob: -12.291716575622559
    5. '	print' → logprob: -13.291716575622559
    6. '   ' → logprob: -13.791716575622559
    7. '                   ' → logprob: -14.416716575622559
    8. '       ' → logprob: -14.791716575622559
    9. '```' → logprob: -15.916716575622559
    10. '	           ' → logprob: -16.416715621948242

Token 854: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006448837229982018
    2. ' print' → logprob: -7.375644683837891
    3. '               ' → logprob: -11.12564468383789
    4. '           ' → logprob: -12.75064468383789
    5. '"' → logprob: -14.62564468383789
    6. '	print' → logprob: -16.00064468383789
    7. '   ' → logprob: -17.00064468383789
    8. ' ' → logprob: -17.87564468383789
    9. '                   ' → logprob: -18.12564468383789
    10. '       ' → logprob: -18.25064468383789

Token 855: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.5213274309644476e-05
    2. '"' → logprob: -11.500015258789062
    3. '(' → logprob: -12.500015258789062
    4. ' ("' → logprob: -14.125015258789062
    5. '"N' → logprob: -15.000015258789062
    6. '(":' → logprob: -15.625015258789062
    7. '('' → logprob: -17.375015258789062
    8. '("")' → logprob: -17.500015258789062
    9. '   ' → logprob: -17.750015258789062
    10. 'NA' → logprob: -18.125015258789062

Token 856: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.011484675109386444
    2. 'N' → logprob: -4.511484622955322
    3. '"N' → logprob: -8.51148509979248
    4. 'NG' → logprob: -8.63648509979248
    5. 'Nao' → logprob: -11.01148509979248
    6. 'NO' → logprob: -11.76148509979248
    7. ' NA' → logprob: -12.13648509979248
    8. 'NP' → logprob: -12.76148509979248
    9. 'NOP' → logprob: -13.13648509979248
    10. 'Na' → logprob: -13.13648509979248

Token 857: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -5.943783253314905e-05
    2. ')' → logprob: -9.875059127807617
    3. '")
' → logprob: -12.250059127807617
    4. ')")' → logprob: -13.000059127807617
    5. '}")' → logprob: -14.625059127807617
    6. '")}' → logprob: -16.000059127807617
    7. '```' → logprob: -16.625059127807617
    8. ' ")' → logprob: -16.750059127807617
    9. '<|end|>' → logprob: -16.750059127807617
    10. '"' → logprob: -17.000059127807617

Token 858: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005258779972791672
    2. 'main' → logprob: -5.255258560180664
    3. '#' → logprob: -11.130258560180664
    4. '```' → logprob: -11.880258560180664
    5. ' if' → logprob: -12.755258560180664
    6. '<|end|>' → logprob: -14.755258560180664
    7. '(main' → logprob: -16.880258560180664
    8. '#if' → logprob: -17.005258560180664
    9. 'for' → logprob: -17.005258560180664
    10. '
' → logprob: -17.255258560180664

Token 859: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3144124746322632
    2. ' __' → logprob: -1.3144124746322632
    3. 'name' → logprob: -8.064412117004395
    4. '_' → logprob: -8.189412117004395
    5. '_name' → logprob: -8.189412117004395
    6. ' ' → logprob: -8.564412117004395
    7. '___' → logprob: -9.689412117004395
    8. 'Name' → logprob: -11.564412117004395
    9. ' ' → logprob: -12.189412117004395
    10. ' name' → logprob: -12.564412117004395

Token 860: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1571870595216751
    2. '==' → logprob: -2.532186985015869
    3. ' ==' → logprob: -2.782186985015869
    4. '=="' → logprob: -5.907186985015869
    5. 'name' → logprob: -7.032186985015869
    6. ' __' → logprob: -9.032187461853027
    7. '=='' → logprob: -9.532187461853027
    8. '.__' → logprob: -9.657187461853027
    9. 'main' → logprob: -10.282187461853027
    10. '[' → logprob: -10.532187461853027

Token 861: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.259079363080673e-05
    2. '__.__' → logprob: -11.750012397766113
    3. '==' → logprob: -12.625012397766113
    4. '=="' → logprob: -13.875012397766113
    5. '__.' → logprob: -15.750012397766113
    6. '__["' → logprob: -16.50001335144043
    7. '____' → logprob: -16.75001335144043
    8. '___' → logprob: -16.75001335144043
    9. ' ==' → logprob: -17.00001335144043
    10. '__('' → logprob: -17.75001335144043

Token 862: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004395459778606892
    2. '==' → logprob: -5.504395484924316
    3. ' ==' → logprob: -8.504395484924316
    4. '=="' → logprob: -9.129395484924316
    5. '__.__' → logprob: -12.504395484924316
    6. '=='' → logprob: -14.004395484924316
    7. '___' → logprob: -14.754395484924316
    8. '===' → logprob: -15.879395484924316
    9. '__["' → logprob: -16.12939453125
    10. '__.' → logprob: -16.25439453125

Token 863: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.001182012027129531
    2. ''' → logprob: -6.7511820793151855
    3. ' "__' → logprob: -11.876181602478027
    4. '__' → logprob: -12.251181602478027
    5. ' '__' → logprob: -17.626182556152344
    6. '"name' → logprob: -17.626182556152344
    7. '"user' → logprob: -17.751182556152344
    8. '("__' → logprob: -18.251182556152344
    9. '   ' → logprob: -18.751182556152344
    10. '"is' → logprob: -19.376182556152344

Token 864: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0009286141721531749
    2. '__' → logprob: -7.1259284019470215
    3. 'name' → logprob: -9.00092887878418
    4. 'built' → logprob: -15.37592887878418
    5. '"' → logprob: -15.75092887878418
    6. ' main' → logprob: -15.75092887878418
    7. '_main' → logprob: -16.00092887878418
    8. 'ma' → logprob: -16.87592887878418
    9. '__":
' → logprob: -17.37592887878418
    10. 'm' → logprob: -17.37592887878418

Token 865: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4746449291706085
    2. '__":
' → logprob: -0.9746448993682861
    3. '__':
' → logprob: -7.599645137786865
    4. '__["' → logprob: -10.599644660949707
    5. '__:' → logprob: -10.974644660949707
    6. '__.__' → logprob: -11.724644660949707
    7. '__.' → logprob: -12.224644660949707
    8. '__
' → logprob: -12.599644660949707
    9. '__",' → logprob: -12.974644660949707
    10. '__("' → logprob: -13.224644660949707

Token 866: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00010020548506872728
    2. ' main' → logprob: -9.500100135803223
    3. '	main' → logprob: -11.000100135803223
    4. '__' → logprob: -11.750100135803223
    5. '_main' → logprob: -14.875100135803223
    6. '   ' → logprob: -15.125100135803223
    7. 'Main' → logprob: -17.50010108947754
    8. '"' → logprob: -18.50010108947754
    9. '.main' → logprob: -19.00010108947754
    10. 'mainwindow' → logprob: -19.12510108947754

Token 867: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.0
    3. '	main' → logprob: -25.75
    4. '_main' → logprob: -28.875
    5. '.main' → logprob: -29.625
    6. 'import' → logprob: -30.625
    7. 'Main' → logprob: -31.25
    8. '   ' → logprob: -31.375
    9. '(main' → logprob: -31.5
    10. 'mainwindow' → logprob: -32.75

Token 868: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 866
Tokens correctement prédits (1ère position, stricte): 300
Tokens correctement prédits (1ère position, avec adaptation): 315
Tokens correctement prédits (top 10): 608
Précision stricte (1ère position): 34.64%
Précision adaptée (1ère position): 36.37%
Précision (top 10): 70.21%
================================================================================
