================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:11:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
for _ in range(n):
    hh,mm=map(int,input().split(':'))
    h_angle=(hh%12)*30+mm*0.5
    m_angle=mm*6
    diff=abs(h_angle-m_angle)
    diff=min(diff,360-diff)
    if 0<=diff<30:
        print("alert")
    elif 90<=diff<=180:
        print("safe")
    else:
        print("warning")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0858265608549118
    2. ')' → logprob: -2.5858266353607178
    3. '()' → logprob: -5.085826396942139
    4. '())' → logprob: -8.335826873779297
    5. '(
' → logprob: -8.460826873779297
    6. '(

' → logprob: -9.835826873779297
    7. '```' → logprob: -10.460826873779297
    8. '<|end|>' → logprob: -11.085826873779297
    9. ''' → logprob: -11.210826873779297
    10. '))' → logprob: -11.335826873779297

Token 4: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7022286057472229
    2. 'i' → logprob: -1.4522285461425781
    3. 'if' → logprob: -2.952228546142578
    4. 's' → logprob: -3.452228546142578
    5. ' ' → logprob: -3.577228546142578
    6. '`' → logprob: -3.577228546142578
    7. '\n' → logprob: -3.702228546142578
    8. '#' → logprob: -3.827228546142578
    9. ''' → logprob: -3.952228546142578
    10. '```' → logprob: -4.702228546142578

Token 5: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.038457632064819336
    2. ' i' → logprob: -3.9134576320648193
    3. '  ' → logprob: -4.038457870483398
    4. ' n' → logprob: -9.913457870483398
    5. 'i' → logprob: -10.413457870483398
    6. ' ‌' → logprob: -11.288457870483398
    7. '_' → logprob: -11.913457870483398
    8. ' )' → logprob: -12.038457870483398
    9. ' ' → logprob: -12.288457870483398
    10. ' ▁' → logprob: -13.163457870483398

Token 6: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01588948257267475
    2. 'in' → logprob: -4.265889644622803
    3. ' ' → logprob: -6.390889644622803
    4. ' i' → logprob: -11.265889167785645
    5. '  ' → logprob: -11.765889167785645
    6. ' n' → logprob: -11.890889167785645
    7. 'n' → logprob: -12.265889167785645
    8. 'range' → logprob: -12.265889167785645
    9. '_' → logprob: -13.390889167785645
    10. 'import' → logprob: -13.515889167785645

Token 7: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759419798851013
    2. ' range' → logprob: -0.8259419798851013
    3. ' ' → logprob: -13.950942039489746
    4. '	range' → logprob: -14.200942039489746
    5. '(range' → logprob: -15.075942039489746
    6. '_range' → logprob: -15.325942039489746
    7. '```' → logprob: -15.700942039489746
    8. 'n' → logprob: -16.45094108581543
    9. ' xrange' → logprob: -17.07594108581543
    10. ' n' → logprob: -17.20094108581543

Token 8: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01057351566851139
    2. '(n' → logprob: -4.635573387145996
    3. ' (' → logprob: -7.135573387145996
    4. '(range' → logprob: -11.010573387145996
    5. '(len' → logprob: -13.760573387145996
    6. '(int' → logprob: -14.635573387145996
    7. '(i' → logprob: -14.760573387145996
    8. '(
' → logprob: -15.010573387145996
    9. '(m' → logprob: -15.260573387145996
    10. '((' → logprob: -15.385573387145996

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05660921707749367
    2. ')' → logprob: -3.1816091537475586
    3. ':' → logprob: -4.306609153747559
    4. ':)' → logprob: -10.681609153747559
    5. '):
' → logprob: -12.181609153747559
    6. '+' → logprob: -13.056609153747559
    7. ' ):' → logprob: -13.806609153747559
    8. '+:' → logprob: -14.306609153747559
    9. '():' → logprob: -14.431609153747559
    10. '```' → logprob: -14.431609153747559

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00406070938333869
    2. '    
' → logprob: -5.879060745239258
    3. '```' → logprob: -7.129060745239258
    4. ' ' → logprob: -8.879060745239258
    5. '    ' → logprob: -9.504060745239258
    6. 'print' → logprob: -9.754060745239258
    7. 'input' → logprob: -10.129060745239258
    8. '`' → logprob: -11.004060745239258
    9. ' print' → logprob: -11.129060745239258
    10. '  ' → logprob: -11.254060745239258

Token 11: ' hh' (ID: 77572)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23376907408237457
    2. 'a' → logprob: -2.733769178390503
    3. 'x' → logprob: -2.983769178390503
    4. 'print' → logprob: -3.358769178390503
    5. 's' → logprob: -4.358768939971924
    6. 'name' → logprob: -4.358768939971924
    7. 't' → logprob: -4.983768939971924
    8. 'data' → logprob: -5.233768939971924
    9. 'input' → logprob: -5.483768939971924
    10. 'i' → logprob: -5.858768939971924

Token 12: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6070739030838013
    2. ' =' → logprob: -1.2320739030838013
    3. '   ' → logprob: -3.6070737838745117
    4. 'a' → logprob: -3.6070737838745117
    5. '[' → logprob: -3.8570737838745117
    6. 'h' → logprob: -4.357073783874512
    7. 'i' → logprob: -4.482073783874512
    8. 't' → logprob: -4.607073783874512
    9. '[i' → logprob: -4.607073783874512
    10. 'e' → logprob: -4.857073783874512

Token 13: 'mm' (ID: 4538)
  Prédit: 'mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.015358183532953262
    2. ' mm' → logprob: -4.265357971191406
    3. ':mm' → logprob: -7.140357971191406
    4. 'mi' → logprob: -8.640357971191406
    5. '```' → logprob: -9.390357971191406
    6. '_mm' → logprob: -9.515357971191406
    7. ' ' → logprob: -11.390357971191406
    8. 'mmm' → logprob: -11.765357971191406
    9. '(mm' → logprob: -11.890357971191406
    10. 'm' → logprob: -12.015357971191406

Token 14: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0076932176016271114
    2. ' =' → logprob: -5.257693290710449
    3. ',' → logprob: -6.257693290710449
    4. '=input' → logprob: -7.632693290710449
    5. '=int' → logprob: -10.63269329071045
    6. ')' → logprob: -12.00769329071045
    7. ')=' → logprob: -12.88269329071045
    8. '=line' → logprob: -13.00769329071045
    9. '```' → logprob: -13.00769329071045
    10. '=
' → logprob: -13.13269329071045

Token 15: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.25556638836860657
    2. 'input' → logprob: -1.7555663585662842
    3. ' map' → logprob: -3.005566358566284
    4. ' input' → logprob: -5.755566596984863
    5. 'list' → logprob: -10.755566596984863
    6. '[' → logprob: -12.005566596984863
    7. '(map' → logprob: -13.380566596984863
    8. '[input' → logprob: -13.380566596984863
    9. ' ' → logprob: -13.630566596984863
    10. '0' → logprob: -13.755566596984863

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0036752521991729736
    2. '(' → logprob: -6.00367546081543
    3. '(str' → logprob: -7.25367546081543
    4. '(input' → logprob: -8.12867546081543
    5. 'int' → logprob: -9.12867546081543
    6. '(lambda' → logprob: -10.62867546081543
    7. '(list' → logprob: -11.00367546081543
    8. '[int' → logprob: -11.25367546081543
    9. '<int' → logprob: -11.37867546081543
    10. 'list' → logprob: -12.00367546081543

Token 17: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4958605468273163
    2. ',input' → logprob: -0.9958605766296387
    3. ',' → logprob: -4.745860576629639
    4. ')' → logprob: -4.870860576629639
    5. 'input' → logprob: -5.370860576629639
    6. '(' → logprob: -8.24586009979248
    7. '),' → logprob: -9.49586009979248
    8. ' input' → logprob: -9.74586009979248
    9. '=input' → logprob: -10.37086009979248
    10. ',int' → logprob: -10.49586009979248

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00037955286097712815
    2. '()' → logprob: -8.37537956237793
    3. '())' → logprob: -8.87537956237793
    4. ')' → logprob: -12.00037956237793
    5. '()
' → logprob: -14.12537956237793
    6. '(' → logprob: -14.62537956237793
    7. '()))' → logprob: -14.75037956237793
    8. '());' → logprob: -15.00037956237793
    9. ' ().' → logprob: -15.12537956237793
    10. '()[' → logprob: -15.37537956237793

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001605115394340828
    2. 'strip' → logprob: -8.750160217285156
    3. 'rstrip' → logprob: -13.375160217285156
    4. ' split' → logprob: -14.875160217285156
    5. '(split' → logprob: -16.000160217285156
    6. 'spl' → logprob: -19.125160217285156
    7. '.split' → logprob: -20.375160217285156
    8. '```' → logprob: -20.625160217285156
    9. 'replace' → logprob: -21.000160217285156
    10. ')' → logprob: -21.250160217285156

Token 20: '(':' (ID: 36524)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.632082462310791
    2. ')' → logprob: -0.882082462310791
    3. '))' → logprob: -3.132082462310791
    4. '()' → logprob: -5.007082462310791
    5. '()))' → logprob: -5.507082462310791
    6. '())
' → logprob: -9.632081985473633
    7. '(' → logprob: -10.132081985473633
    8. '')' → logprob: -10.882081985473633
    9. '('' → logprob: -11.007081985473633
    10. '`)' → logprob: -11.007081985473633

Token 21: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.07303599268198013
    2. '))' → logprob: -2.698035955429077
    3. ')' → logprob: -5.948036193847656
    4. '')' → logprob: -8.823036193847656
    5. '"))' → logprob: -9.073036193847656
    6. '1' → logprob: -9.198036193847656
    7. ''))
' → logprob: -9.823036193847656
    8. '2' → logprob: -11.323036193847656
    9. '','' → logprob: -11.323036193847656
    10. '')))' → logprob: -11.948036193847656

Token 22: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7370285987854004
    2. ':' → logprob: -1.8620285987854004
    3. '   ' → logprob: -2.4870285987854004
    4. 'if' → logprob: -2.9870285987854004
    5. ' if' → logprob: -2.9870285987854004
    6. ')' → logprob: -3.2370285987854004
    7. ' ' → logprob: -3.2370285987854004
    8. '<|end|>' → logprob: -3.8620285987854004
    9. 'print' → logprob: -4.4870285987854
    10. '\' → logprob: -4.7370285987854

Token 23: ' h' (ID: 312)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3245268166065216
    2. ' if' → logprob: -1.4495267868041992
    3. 'total' → logprob: -4.199526786804199
    4. 'print' → logprob: -4.824526786804199
    5. 'h' (adapté à ' h') → logprob: -5.074526786804199
    6. '   ' → logprob: -5.949526786804199
    7. 's' → logprob: -6.199526786804199
    8. 't' → logprob: -7.074526786804199
    9. ' ' → logprob: -7.074526786804199
    10. 'am' → logprob: -7.199526786804199

Token 24: '_angle' (ID: 51505)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03935452178120613
    2. 'H' → logprob: -4.16435432434082
    3. '=' → logprob: -4.91435432434082
    4. ',' → logprob: -5.28935432434082
    5. 'i' → logprob: -6.41435432434082
    6. ' =' → logprob: -6.78935432434082
    7. '+=' → logprob: -6.78935432434082
    8. '*' → logprob: -6.91435432434082
    9. 'our' → logprob: -7.41435432434082
    10. '-' → logprob: -7.53935432434082

Token 25: '=(' (ID: 9893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43056952953338623
    2. '=' → logprob: -1.0555695295333862
    3. '_' → logprob: -7.180569648742676
    4. ' ' → logprob: -7.305569648742676
    5. 's' → logprob: -8.055569648742676
    6. '_space' → logprob: -10.680569648742676
    7. '_=' → logprob: -10.805569648742676
    8. ')' → logprob: -11.055569648742676
    9. '  ' → logprob: -12.055569648742676
    10. ' =
' → logprob: -12.555569648742676

Token 26: 'hh' (ID: 27224)
  Prédit: 'hh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hh' → logprob: -0.03099309653043747
    2. '30' → logprob: -3.9059929847717285
    3. '60' → logprob: -5.5309929847717285
    4. '(h' → logprob: -6.1559929847717285
    5. '360' → logprob: -6.2809929847717285
    6. ' hh' → logprob: -6.5309929847717285
    7. '(' → logprob: -7.9059929847717285
    8. 'mm' → logprob: -8.530993461608887
    9. 'hhh' → logprob: -9.405993461608887
    10. '11' → logprob: -9.780993461608887

Token 27: '%' (ID: 4)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04636388644576073
    2. '%' → logprob: -3.1713638305664062
    3. ' *' → logprob: -7.046363830566406
    4. ' %' → logprob: -7.171363830566406
    5. ')*' → logprob: -7.421363830566406
    6. ')' → logprob: -7.546363830566406
    7. '+' → logprob: -7.546363830566406
    8. ' ' → logprob: -11.296363830566406
    9. ' )' → logprob: -11.421363830566406
    10. ' +' → logprob: -11.546363830566406

Token 28: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.50000286102295
    3. '```' → logprob: -14.87500286102295
    4. '2' → logprob: -15.00000286102295
    5. '1' → logprob: -15.87500286102295
    6. ')' → logprob: -16.375001907348633
    7. '``' → logprob: -17.000001907348633
    8. '{' → logprob: -17.125001907348633
    9. '6' → logprob: -17.375001907348633
    10. '`' → logprob: -17.375001907348633

Token 29: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.5809317231178284
    2. '*' → logprob: -0.8309317231178284
    3. ')' → logprob: -5.330931663513184
    4. ' *' → logprob: -9.080931663513184
    5. '360' → logprob: -12.205931663513184
    6. ' )' → logprob: -12.205931663513184
    7. ')*(' → logprob: -12.455931663513184
    8. '+' → logprob: -12.580931663513184
    9. '*)' → logprob: -12.580931663513184
    10. '30' → logprob: -13.705931663513184

Token 30: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.0001227276516146958
    2. ' ' → logprob: -9.500123023986816
    3. '60' → logprob: -10.125123023986816
    4. '360' → logprob: -12.375123023986816
    5. '3' → logprob: -13.250123023986816
    6. '6' → logprob: -14.000123023986816
    7. '5' → logprob: -14.250123023986816
    8. '  ' → logprob: -16.6251220703125
    9. '0' → logprob: -16.8751220703125
    10. '(' → logprob: -17.5001220703125

Token 31: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22571685910224915
    2. ' +' → logprob: -1.6007168292999268
    3. '<|end|>' → logprob: -9.225716590881348
    4. '+h' → logprob: -9.350716590881348
    5. '+(' → logprob: -9.850716590881348
    6. ' +
' → logprob: -10.725716590881348
    7. '+m' → logprob: -11.600716590881348
    8. ' ' → logprob: -11.725716590881348
    9. ')' → logprob: -12.350716590881348
    10. '+
' → logprob: -12.600716590881348

Token 32: 'mm' (ID: 4538)
  Prédit: 'mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.008571664802730083
    2. ' mm' → logprob: -5.133571624755859
    3. '(mm' → logprob: -6.508571624755859
    4. '30' → logprob: -7.758571624755859
    5. '0' → logprob: -7.883571624755859
    6. '6' → logprob: -9.25857162475586
    7. ' ' → logprob: -9.50857162475586
    8. 'm' → logprob: -9.75857162475586
    9. '5' → logprob: -10.13357162475586
    10. '60' → logprob: -11.00857162475586

Token 33: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0006585848750546575
    2. '*.' → logprob: -7.5006585121154785
    3. '0' → logprob: -10.375658988952637
    4. '/' → logprob: -10.500658988952637
    5. ' *' → logprob: -10.625658988952637
    6. '<|end|>' → logprob: -11.000658988952637
    7. '.' → logprob: -13.000658988952637
    8. '()*' → logprob: -13.750658988952637
    9. '*/' → logprob: -14.375658988952637
    10. '*(' → logprob: -15.000658988952637

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.055224817246198654
    2. '.' → logprob: -2.930224895477295
    3. '6' → logprob: -8.055224418640137
    4. '5' → logprob: -10.930224418640137
    5. ' .' → logprob: -13.180224418640137
    6. '<|end|>' → logprob: -13.805224418640137
    7. ' ' → logprob: -14.055224418640137
    8. '30' → logprob: -14.305224418640137
    9. '2' → logprob: -14.930224418640137
    10. '```' → logprob: -15.055224418640137

Token 35: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1875571544806007e-05
    2. ''.' → logprob: -12.000011444091797
    3. '5' → logprob: -13.625011444091797
    4. '```' → logprob: -14.000011444091797
    5. '`.' → logprob: -14.250011444091797
    6. ' .' → logprob: -14.500011444091797
    7. '​.' → logprob: -14.500011444091797
    8. '‌.' → logprob: -15.250011444091797
    9. '․' → logprob: -15.500011444091797
    10. '.​' → logprob: -15.625011444091797

Token 36: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.320199877838604e-07
    2. '50' → logprob: -15.375
    3. '<|end|>' → logprob: -16.125
    4. '6' → logprob: -19.625
    5. '```' → logprob: -19.75
    6. '٥' → logprob: -20.375
    7. ' ' → logprob: -20.75
    8. '<|end|>' → logprob: -21.25
    9. '۵' → logprob: -21.375
    10. '0' → logprob: -21.375

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5389609932899475
    2. '<|end|>' → logprob: -1.1639609336853027
    3. 'angle' → logprob: -4.163960933685303
    4. '  
' → logprob: -4.288960933685303
    5. ' 
' → logprob: -4.288960933685303
    6. ')' → logprob: -4.288960933685303
    7. '    
' → logprob: -4.538960933685303
    8. '   ' → logprob: -4.538960933685303
    9. '<|end|>' → logprob: -5.038960933685303
    10. ' angle' → logprob: -5.538960933685303

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27741923928260803
    2. '
' → logprob: -2.277419328689575
    3. '\n' → logprob: -2.777419328689575
    4. '```' → logprob: -3.652419328689575
    5. '    
' → logprob: -3.902419328689575
    6. '45' → logprob: -5.527419090270996
    7. 's' → logprob: -5.652419090270996
    8. '60' → logprob: -5.902419090270996
    9. 'm' → logprob: -6.027419090270996
    10. '<|end|>' → logprob: -6.277419090270996

Token 39: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.05260248854756355
    2. ' m' → logprob: -3.427602529525757
    3. '   ' → logprob: -5.302602291107178
    4. '```' → logprob: -5.677602291107178
    5. 'angle' → logprob: -5.802602291107178
    6. ' ' → logprob: -5.927602291107178
    7. 'h' → logprob: -7.302602291107178
    8. 's' → logprob: -7.302602291107178
    9. 'minute' → logprob: -7.427602291107178
    10. 'print' → logprob: -7.552602291107178

Token 40: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -2.534558552724775e-05
    2. '_' → logprob: -11.250025749206543
    3. 'm' → logprob: -11.375025749206543
    4. 'angle' → logprob: -14.750025749206543
    5. 'in' → logprob: -16.125024795532227
    6. '_angles' → logprob: -16.125024795532227
    7. '_ang' → logprob: -16.125024795532227
    8. '_answer' → logprob: -18.250024795532227
    9. '_in' → logprob: -18.375024795532227
    10. '=' → logprob: -18.750024795532227

Token 41: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011060204356908798
    2. ' =' → logprob: -4.5110602378845215
    3. '=int' → logprob: -12.136059761047363
    4. '=m' → logprob: -12.261059761047363
    5. '=min' → logprob: -13.761059761047363
    6. '=n' → logprob: -15.636059761047363
    7. '=

' → logprob: -15.636059761047363
    8. '=float' → logprob: -15.886059761047363
    9. '=max' → logprob: -16.26106071472168
    10. '=h' → logprob: -16.26106071472168

Token 42: 'mm' (ID: 4538)
  Prédit: 'mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.004103215876966715
    2. '6' → logprob: -5.504103183746338
    3. ' mm' → logprob: -11.254103660583496
    4. '(mm' → logprob: -12.129103660583496
    5. 'mmm' → logprob: -12.379103660583496
    6. 'm' → logprob: -13.629103660583496
    7. '   ' → logprob: -15.004103660583496
    8. ':mm' → logprob: -15.629103660583496
    9. 'mmmm' → logprob: -16.12910270690918
    10. 'mn' → logprob: -16.25410270690918

Token 43: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.8624639324116288e-06
    2. ' *' → logprob: -13.625001907348633
    3. '60' → logprob: -14.750001907348633
    4. '**' → logprob: -15.750001907348633
    5. '0' → logprob: -16.875001907348633
    6. '6' → logprob: -18.000001907348633
    7. ''*' → logprob: -18.250001907348633
    8. '()*' → logprob: -18.500001907348633
    9. '45' → logprob: -18.875001907348633
    10. '***' → logprob: -19.000001907348633

Token 44: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '60' → logprob: -17.5
    4. '   ' → logprob: -18.75
    5. '360' → logprob: -19.25
    6. '' → logprob: -19.875
    7. '```' → logprob: -19.875
    8. '**' → logprob: -20.125
    9. '06' → logprob: -20.5
    10. '006' → logprob: -20.625

Token 45: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32882633805274963
    2. '   ' → logprob: -1.3288263082504272
    3. 'angle' → logprob: -5.578826427459717
    4. 'diff' → logprob: -5.828826427459717
    5. ' angle' → logprob: -6.203826427459717
    6. '    
' → logprob: -6.578826427459717
    7. '
' → logprob: -6.953826427459717
    8. 'a' → logprob: -7.328826427459717
    9. '```' → logprob: -7.328826427459717
    10. '<|end|>' → logprob: -7.578826427459717

Token 46: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36554136872291565
    2. '   ' → logprob: -1.2405413389205933
    3. '```' → logprob: -4.865541458129883
    4. '    
' → logprob: -5.365541458129883
    5. '<|end|>' → logprob: -6.990541458129883
    6. '\n' → logprob: -7.115541458129883
    7. 'angle' → logprob: -7.865541458129883
    8. 'diff' → logprob: -8.115541458129883
    9. 'a' → logprob: -8.115541458129883
    10. '
' → logprob: -8.240541458129883

Token 47: ' diff' (ID: 8868)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6005530953407288
    2. '
' → logprob: -1.475553035736084
    3. 'diff' (adapté à ' diff') → logprob: -1.725553035736084
    4. 'd' → logprob: -4.600553035736084
    5. '```' → logprob: -4.850553035736084
    6. ' diff' → logprob: -5.100553035736084
    7. 'angle' → logprob: -5.350553035736084
    8. 'delta' → logprob: -5.850553035736084
    9. 'a' → logprob: -5.975553035736084
    10. '\' → logprob: -6.225553035736084

Token 48: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11299926787614822
    2. ' =' → logprob: -2.237999200820923
    3. '=int' → logprob: -9.487998962402344
    4. '=_' → logprob: -9.987998962402344
    5. '_=' → logprob: -10.862998962402344
    6. '_' → logprob: -11.362998962402344
    7. '_angle' → logprob: -12.362998962402344
    8. '=Math' → logprob: -12.862998962402344
    9. '=np' → logprob: -13.112998962402344
    10. '=max' → logprob: -13.237998962402344

Token 49: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0001085497424355708
    2. ' abs' → logprob: -9.75010871887207
    3. 'min' → logprob: -10.00010871887207
    4. 'h' → logprob: -12.75010871887207
    5. '(abs' → logprob: -13.87510871887207
    6. 'max' → logprob: -14.00010871887207
    7. '   ' → logprob: -16.25010871887207
    8. 'int' → logprob: -17.37510871887207
    9. 'angle' → logprob: -18.37510871887207
    10. '```' → logprob: -18.87510871887207

Token 50: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -9.610702363715973e-06
    2. '(m' → logprob: -11.750009536743164
    3. 'h' → logprob: -13.750009536743164
    4. '(' → logprob: -14.375009536743164
    5. '((' → logprob: -17.500009536743164
    6. '(int' → logprob: -18.250009536743164
    7. 'diff' → logprob: -18.250009536743164
    8. 'm' → logprob: -18.875009536743164
    9. '(diff' → logprob: -20.500009536743164
    10. '(a' → logprob: -20.500009536743164

Token 51: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.12500286102295
    3. 'angle' → logprob: -15.50000286102295
    4. '_a' → logprob: -15.50000286102295
    5. '-angle' → logprob: -16.000001907348633
    6. '_ang' → logprob: -16.250001907348633
    7. '_angles' → logprob: -16.375001907348633
    8. '_an' → logprob: -17.875001907348633
    9. ' _' → logprob: -18.125001907348633
    10. 'a' → logprob: -18.750001907348633

Token 52: '-m' (ID: 2126)
  Prédit: '-m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-m' → logprob: -0.45300722122192383
    2. '-' → logprob: -1.7030072212219238
    3. ' -' → logprob: -1.7030072212219238
    4. '-mm' → logprob: -11.953006744384766
    5. '-
' → logprob: -12.453006744384766
    6. 'm' → logprob: -13.203006744384766
    7. ' ' → logprob: -13.328006744384766
    8. ' -
' → logprob: -14.828006744384766
    9. '-midi' → logprob: -14.953006744384766
    10. '-

' → logprob: -15.078006744384766

Token 53: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -3.054500666621607e-06
    2. '_' → logprob: -13.12500286102295
    3. 'angle' → logprob: -14.00000286102295
    4. '_a' → logprob: -16.500003814697266
    5. '_angles' → logprob: -17.000003814697266
    6. ' angle' → logprob: -17.375003814697266
    7. '_ang' → logprob: -18.000003814697266
    8. '-angle' → logprob: -18.125003814697266
    9. 'Angle' → logprob: -18.250003814697266
    10. ' _' → logprob: -18.875003814697266

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010819212911883369
    2. ')
' → logprob: -9.500107765197754
    3. ' )' → logprob: -10.375107765197754
    4. '))' → logprob: -14.625107765197754
    5. '   ' → logprob: -14.750107765197754
    6. ')))' → logprob: -15.125107765197754
    7. '`)' → logprob: -15.750107765197754
    8. '')' → logprob: -16.00010871887207
    9. '<|end|>' → logprob: -16.50010871887207
    10. ')**' → logprob: -16.62510871887207

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016015008091926575
    2. '
' → logprob: -4.64101505279541
    3. '\' → logprob: -6.51601505279541
    4. '\n' → logprob: -6.64101505279541
    5. 'print' → logprob: -6.64101505279541
    6. ' if' → logprob: -7.14101505279541
    7. ' ' → logprob: -8.64101505279541
    8. ' print' → logprob: -8.76601505279541
    9. 'if' → logprob: -8.89101505279541
    10. '    
' → logprob: -8.89101505279541

Token 56: ' diff' (ID: 8868)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.48352497816085815
    2. ' min' → logprob: -0.9835249781608582
    3. '60' → logprob: -5.858524799346924
    4. '360' → logprob: -6.108524799346924
    5. ' ' → logprob: -6.858524799346924
    6. '90' → logprob: -7.108524799346924
    7. '180' → logprob: -7.108524799346924
    8. 'if' → logprob: -7.483524799346924
    9. ' if' → logprob: -7.858524799346924
    10. '   ' → logprob: -8.733525276184082

Token 57: '=min' (ID: 149377)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.25193363428115845
    2. '(' → logprob: -1.5019335746765137
    3. 'diff' → logprob: -12.751934051513672
    4. '```' → logprob: -14.751934051513672
    5. ' (' → logprob: -15.126934051513672
    6. '360' → logprob: -15.126934051513672
    7. '	diff' → logprob: -15.376934051513672
    8. '_diff' → logprob: -16.376934051513672
    9. '(`' → logprob: -16.501934051513672
    10. '(d' → logprob: -16.626934051513672

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0045186541974544525
    2. '(' → logprob: -5.504518508911133
    3. ' ,' → logprob: -8.004518508911133
    4. ',(' → logprob: -9.629518508911133
    5. '360' → logprob: -11.004518508911133
    6. ')' → logprob: -11.879518508911133
    7. '),' → logprob: -12.129518508911133
    8. ',
' → logprob: -12.504518508911133
    9. '(),' → logprob: -13.504518508911133
    10. '`,' → logprob: -14.004518508911133

Token 60: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.006716079078614712
    2. ' ' → logprob: -5.006716251373291
    3. '180' → logprob: -14.381715774536133
    4. '720' → logprob: -16.756715774536133
    5. '60' → logprob: -17.756715774536133
    6. '(' → logprob: -17.756715774536133
    7. '120' → logprob: -17.881715774536133
    8. '   ' → logprob: -18.131715774536133
    9. '36' → logprob: -18.756715774536133
    10. '0' → logprob: -19.131715774536133

Token 61: '-d' (ID: 2469)
  Prédit: '-d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.011343121528625488
    2. ' -' → logprob: -4.511343002319336
    3. '-' → logprob: -8.136343002319336
    4. '-D' → logprob: -13.011343002319336
    5. '-
' → logprob: -16.011343002319336
    6. '	diff' → logprob: -16.636343002319336
    7. '-д' → logprob: -17.636343002319336
    8. ' ' → logprob: -18.636343002319336
    9. ' -
' → logprob: -18.886343002319336
    10. '‌' → logprob: -19.011343002319336

Token 62: 'iff' (ID: 4443)
  Prédit: 'iff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iff' → logprob: -1.2664456789934775e-06
    2. 'if' → logprob: -13.875000953674316
    3. 'diff' → logprob: -15.375000953674316
    4. 'eff' → logprob: -17.750001907348633
    5. 'iffs' → logprob: -17.875001907348633
    6. 'ff' → logprob: -18.000001907348633
    7. ' diff' → logprob: -18.500001907348633
    8. 'iffer' → logprob: -19.125001907348633
    9. ' iff' → logprob: -19.125001907348633
    10. 'i' → logprob: -19.250001907348633

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2528499960899353
    2. ')
' → logprob: -1.50285005569458
    3. '   ' → logprob: -7.12785005569458
    4. ')
' → logprob: -9.127849578857422
    5. 'print' → logprob: -12.377849578857422
    6. ')

' → logprob: -13.627849578857422
    7. ' )
' → logprob: -13.752849578857422
    8. ' )' → logprob: -13.877849578857422
    9. '))' → logprob: -15.002849578857422
    10. ')**' → logprob: -15.252849578857422

Token 64: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.357586145401001
    2. '   ' → logprob: -1.232586145401001
    3. '
' → logprob: -5.232585906982422
    4. 'if' → logprob: -6.482585906982422
    5. '```' → logprob: -6.607585906982422
    6. ' print' → logprob: -7.357585906982422
    7. '\' → logprob: -9.482585906982422
    8. ' if' → logprob: -10.482585906982422
    9. '	print' → logprob: -10.482585906982422
    10. '\n' → logprob: -10.732585906982422

Token 65: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008346481248736382
    2. '   ' → logprob: -5.3833465576171875
    3. ' print' → logprob: -6.1333465576171875
    4. 'if' (adapté à ' if') → logprob: -6.5083465576171875
    5. ' if' → logprob: -10.383346557617188
    6. '```' → logprob: -11.383346557617188
    7. 'angle' → logprob: -11.633346557617188
    8. '	print' → logprob: -12.883346557617188
    9. '
' → logprob: -12.883346557617188
    10. '    
' → logprob: -14.383346557617188

Token 66: ' ' (ID: 220)
  Prédit: ' diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.002887491136789322
    2. 'diff' → logprob: -5.877887725830078
    3. '(diff' → logprob: -9.877887725830078
    4. '	diff' → logprob: -11.127887725830078
    5. ' ' → logprob: -11.752887725830078
    6. ' int' → logprob: -12.752887725830078
    7. ' abs' → logprob: -13.002887725830078
    8. '   ' → logprob: -13.627887725830078
    9. ' dif' → logprob: -14.002887725830078
    10. '  ' → logprob: -14.127887725830078

Token 67: '0' (ID: 15)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.04862869903445244
    2. ' diff' → logprob: -3.048628807067871
    3. '(diff' → logprob: -11.048628807067871
    4. 'abs' → logprob: -11.673628807067871
    5. 'int' → logprob: -11.798628807067871
    6. '	diff' → logprob: -13.173628807067871
    7. ' ' → logprob: -13.298628807067871
    8. '   ' → logprob: -13.423628807067871
    9. ' abs' → logprob: -13.673628807067871
    10. '0' → logprob: -14.548628807067871

Token 68: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8672255873680115
    2. ' <' → logprob: -1.3672256469726562
    3. ' <=' → logprob: -1.8672256469726562
    4. '<=' → logprob: -2.1172256469726562
    5. '==' → logprob: -3.8672256469726562
    6. ' ==' → logprob: -4.117225646972656
    7. ':' → logprob: -5.367225646972656
    8. '.' → logprob: -5.617225646972656
    9. '=' → logprob: -6.742225646972656
    10. ' ' → logprob: -6.992225646972656

Token 69: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.00011009939044015482
    2. ' diff' → logprob: -9.125109672546387
    3. '	diff' → logprob: -14.125109672546387
    4. '   ' → logprob: -16.125110626220703
    5. '  ' → logprob: -16.500110626220703
    6. '(diff' → logprob: -17.375110626220703
    7. 'd' → logprob: -17.750110626220703
    8. 'dif' → logprob: -17.875110626220703
    9. 'int' → logprob: -18.250110626220703
    10. 'mm' → logprob: -18.625110626220703

Token 70: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.02522912807762623
    2. '<=' → logprob: -3.7752292156219482
    3. '15' → logprob: -7.150228977203369
    4. '45' → logprob: -7.525228977203369
    5. '30' → logprob: -8.150229454040527
    6. 'and' → logprob: -9.150229454040527
    7. '10' → logprob: -9.775229454040527
    8. ' <' → logprob: -9.775229454040527
    9. '20' → logprob: -10.900229454040527
    10. '60' → logprob: -11.025229454040527

Token 71: '30' (ID: 1130)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.6399686932563782
    2. '90' → logprob: -0.8899686932563782
    3. '1' → logprob: -3.0149686336517334
    4. '30' → logprob: -5.2649688720703125
    5. '45' → logprob: -5.7649688720703125
    6. '180' → logprob: -6.1399688720703125
    7. '91' → logprob: -7.5149688720703125
    8. '60' → logprob: -7.6399688720703125
    9. '0' → logprob: -8.264968872070312
    10. '7' → logprob: -8.639968872070312

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032064728438854218
    2. ':
' → logprob: -5.753206253051758
    3. '   ' → logprob: -11.128206253051758
    4. 'print' → logprob: -12.753206253051758
    5. ':
' → logprob: -13.253206253051758
    6. '.' → logprob: -13.503206253051758
    7. ':return' → logprob: -13.628206253051758
    8. '):' → logprob: -13.753206253051758
    9. ' :' → logprob: -13.878206253051758
    10. '0' → logprob: -13.878206253051758

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017094764858484268
    2. '   ' → logprob: -4.517094612121582
    3. ' print' → logprob: -5.267094612121582
    4. 'print' → logprob: -7.267094612121582
    5. '           ' → logprob: -9.517094612121582
    6. '    ' → logprob: -9.892094612121582
    7. '	print' → logprob: -11.954594612121582
    8. '      ' → logprob: -12.329594612121582
    9. '	   ' → logprob: -12.329594612121582
    10. '     ' → logprob: -12.329594612121582

Token 74: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.15395520627498627
    2. ' print' → logprob: -2.2789552211761475
    3. '   ' → logprob: -3.6539552211761475
    4. '       ' → logprob: -4.278954982757568
    5. '           ' → logprob: -8.153955459594727
    6. ' ' → logprob: -9.903955459594727
    7. '    ' → logprob: -9.903955459594727
    8. '	print' → logprob: -9.903955459594727
    9. 'continue' → logprob: -10.403955459594727
    10. 'pr' → logprob: -11.528955459594727

Token 75: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.13133792579174042
    2. '('' → logprob: -2.631337881088257
    3. '(' → logprob: -3.131337881088257
    4. '(":' → logprob: -5.506338119506836
    5. '("("' → logprob: -7.006338119506836
    6. '("<' → logprob: -7.256338119506836
    7. '("*' → logprob: -8.381338119506836
    8. '('"' → logprob: -8.506338119506836
    9. '('<' → logprob: -8.756338119506836
    10. '("'' → logprob: -8.881338119506836

Token 76: 'alert' (ID: 10106)
  Prédit: 'AC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.6206330060958862
    2. 'Y' → logprob: -1.7456330060958862
    3. 'Ac' → logprob: -2.620633125305176
    4. 'O' → logprob: -4.120633125305176
    5. 'ac' → logprob: -4.495633125305176
    6. 'cute' → logprob: -4.495633125305176
    7. 'acute' → logprob: -4.620633125305176
    8. 'good' → logprob: -4.870633125305176
    9. 'small' → logprob: -4.870633125305176
    10. 'YES' → logprob: -4.933133125305176

Token 77: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3167448937892914
    2. '!")' → logprob: -1.3167449235916138
    3. ')")' → logprob: -7.066744804382324
    4. '")
' → logprob: -7.316744804382324
    5. '!")
' → logprob: -7.816744804382324
    6. '!' → logprob: -7.941744804382324
    7. 's' → logprob: -8.691744804382324
    8. ':' → logprob: -8.816744804382324
    9. '("' → logprob: -9.066744804382324
    10. ' ")' → logprob: -9.441744804382324

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16892015933990479
    2. 'else' → logprob: -1.9189201593399048
    3. ' else' → logprob: -4.918920040130615
    4. 'elif' → logprob: -6.918920040130615
    5. '	else' → logprob: -8.918920516967773
    6. ' elif' → logprob: -9.918920516967773
    7. '       ' → logprob: -10.293920516967773
    8. ')' → logprob: -10.543920516967773
    9. '    
' → logprob: -10.918920516967773
    10. '```' → logprob: -11.168920516967773

Token 79: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.22978894412517548
    2. '   ' → logprob: -1.979788899421692
    3. ' else' → logprob: -2.8547890186309814
    4. 'elif' (adapté à ' elif') → logprob: -4.729788780212402
    5. ' elif' → logprob: -7.604788780212402
    6. '	else' → logprob: -8.604788780212402
    7. ' ' → logprob: -10.354788780212402
    8. '	elif' → logprob: -10.979788780212402
    9. '_else' → logprob: -11.604788780212402
    10. '<|end|>' → logprob: -11.604788780212402

Token 80: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5179640650749207
    2. '30' → logprob: -1.3929641246795654
    3. ' diff' → logprob: -2.5179641246795654
    4. '0' → logprob: -3.1429641246795654
    5. 'diff' → logprob: -3.5179641246795654
    6. '60' → logprob: -6.892963886260986
    7. '20' → logprob: -8.142964363098145
    8. '   ' → logprob: -8.517964363098145
    9. '45' → logprob: -8.642964363098145
    10. '90' → logprob: -8.892964363098145

Token 81: '90' (ID: 2744)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.23889194428920746
    2. ' ' → logprob: -2.238891839981079
    3. 'diff' → logprob: -2.863891839981079
    4. '0' → logprob: -3.363891839981079
    5. ' diff' → logprob: -4.488892078399658
    6. '60' → logprob: -7.113892078399658
    7. '180' → logprob: -7.738892078399658
    8. '90' → logprob: -8.2388916015625
    9. '15' → logprob: -8.3638916015625
    10. '   ' → logprob: -8.4888916015625

Token 82: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.20470520853996277
    2. ' <=' → logprob: -1.7047052383422852
    3. '==' → logprob: -5.954705238342285
    4. '<' → logprob: -8.454705238342285
    5. ' ==' → logprob: -9.079705238342285
    6. ':' → logprob: -9.579705238342285
    7. '-' → logprob: -9.704705238342285
    8. '>=' → logprob: -9.829705238342285
    9. ' <' → logprob: -10.329705238342285
    10. '0' → logprob: -10.704705238342285

Token 83: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0003466673369985074
    2. ' diff' → logprob: -8.000347137451172
    3. '90' → logprob: -12.125347137451172
    4. '	diff' → logprob: -13.125347137451172
    5. '30' → logprob: -14.125347137451172
    6. '60' → logprob: -14.250347137451172
    7. '180' → logprob: -14.625347137451172
    8. '45' → logprob: -15.000347137451172
    9. '(diff' → logprob: -15.000347137451172
    10. 'dif' → logprob: -15.250347137451172

Token 84: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06695061922073364
    2. '<=' → logprob: -3.191950559616089
    3. 'and' → logprob: -4.441950798034668
    4. ' and' → logprob: -5.191950798034668
    5. ' <' → logprob: -5.566950798034668
    6. ' <=' → logprob: -6.691950798034668
    7. ':' → logprob: -7.691950798034668
    8. '<|end|>' → logprob: -8.066950798034668
    9. '   ' → logprob: -8.441950798034668
    10. ':<' → logprob: -9.316950798034668

Token 85: '180' (ID: 7521)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.5681400895118713
    2. '180' → logprob: -1.1931400299072266
    3. '120' → logprob: -3.0681400299072266
    4. '150' → logprob: -3.1931400299072266
    5. '91' → logprob: -3.6931400299072266
    6. '92' → logprob: -5.443140029907227
    7. '95' → logprob: -5.693140029907227
    8. '110' → logprob: -5.943140029907227
    9. '100' → logprob: -6.193140029907227
    10. '105' → logprob: -6.693140029907227

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005269334185868502
    2. ':
' → logprob: -5.255269527435303
    3. '       ' → logprob: -10.630269050598145
    4. '   ' → logprob: -11.505269050598145
    5. ':
' → logprob: -14.755269050598145
    6. ':

' → logprob: -15.255269050598145
    7. '):' → logprob: -15.380269050598145
    8. ' :' → logprob: -15.505269050598145
    9. ' and' → logprob: -16.50527000427246
    10. ' or' → logprob: -16.75527000427246

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017724005738273263
    2. 'print' → logprob: -6.501772403717041
    3. ' print' → logprob: -8.501771926879883
    4. '   ' → logprob: -9.876771926879883
    5. '           ' → logprob: -11.501771926879883
    6. '	print' → logprob: -13.626771926879883
    7. '```' → logprob: -14.251771926879883
    8. '      ' → logprob: -14.376771926879883
    9. '     ' → logprob: -14.751771926879883
    10. '
' → logprob: -14.876771926879883

Token 88: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05575203895568848
    2. ' print' → logprob: -3.5557520389556885
    3. '       ' → logprob: -3.6807520389556885
    4. '   ' → logprob: -7.930751800537109
    5. ' ' → logprob: -10.55575180053711
    6. '           ' → logprob: -10.68075180053711
    7. '	print' → logprob: -11.18075180053711
    8. 'pass' → logprob: -11.93075180053711
    9. '```' → logprob: -12.24325180053711
    10. '  ' → logprob: -12.36825180053711

Token 89: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011905835708603263
    2. '(' → logprob: -6.751190662384033
    3. '("")' → logprob: -11.501190185546875
    4. '()' → logprob: -12.501190185546875
    5. '("("' → logprob: -12.501190185546875
    6. '('' → logprob: -13.626190185546875
    7. '"' → logprob: -14.501190185546875
    8. '("\"' → logprob: -16.001190185546875
    9. '("(' → logprob: -16.001190185546875
    10. '(""' → logprob: -16.126190185546875

Token 90: 'safe' (ID: 46891)
  Prédit: 'safe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.3448571264743805
    2. 'normal' → logprob: -2.5948572158813477
    3. 'warning' → logprob: -2.9698572158813477
    4. 'ok' → logprob: -3.3448572158813477
    5. 'danger' → logprob: -3.3448572158813477
    6. 'alert' → logprob: -3.9698572158813477
    7. 'watch' → logprob: -4.469857215881348
    8. 'alarm' → logprob: -4.719857215881348
    9. 'no' → logprob: -5.344857215881348
    10. 'okay' → logprob: -5.469857215881348

Token 91: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.002209973521530628
    2. '")
' → logprob: -6.1272101402282715
    3. ')' → logprob: -11.252209663391113
    4. ')")' → logprob: -12.002209663391113
    5. '")
' → logprob: -12.252209663391113
    6. '"' → logprob: -15.002209663391113
    7. ')
' → logprob: -15.377209663391113
    8. '")

' → logprob: -15.627209663391113
    9. ')")
' → logprob: -16.87721061706543
    10. '()' → logprob: -17.25221061706543

Token 92: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.31711581349372864
    2. '   ' → logprob: -2.0671157836914062
    3. ' else' → logprob: -2.5671157836914062
    4. '<|end|>' → logprob: -3.0671157836914062
    5. '```' → logprob: -4.817115783691406
    6. 'elif' → logprob: -4.942115783691406
    7. ')' → logprob: -6.067115783691406
    8. '\n' → logprob: -6.317115783691406
    9. '	else' → logprob: -7.317115783691406
    10. '<|end|>' → logprob: -7.817115783691406

Token 93: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.25196558237075806
    2. '   ' → logprob: -1.7519655227661133
    3. ' else' → logprob: -3.5019655227661133
    4. '<|end|>' → logprob: -5.001965522766113
    5. 'elif' → logprob: -5.126965522766113
    6. '```' → logprob: -5.501965522766113
    7. ')' → logprob: -6.751965522766113
    8. '\n' → logprob: -7.501965522766113
    9. '	else' → logprob: -8.751965522766113
    10. ' elif' → logprob: -9.751965522766113

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01637439802289009
    2. ':
' → logprob: -4.141374588012695
    3. '   ' → logprob: -8.266374588012695
    4. '       ' → logprob: -9.516374588012695
    5. 'print' → logprob: -12.391374588012695
    6. ':
' → logprob: -13.391374588012695
    7. ' print' → logprob: -13.891374588012695
    8. ':

' → logprob: -14.766374588012695
    9. ' :' → logprob: -14.891374588012695
    10. '    ' → logprob: -15.016374588012695

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3999691307544708
    2. 'print' → logprob: -1.1499691009521484
    3. ' print' → logprob: -4.399969100952148
    4. '   ' → logprob: -7.524969100952148
    5. '```' → logprob: -9.274969100952148
    6. '           ' → logprob: -10.524969100952148
    7. '	print' → logprob: -10.524969100952148
    8. '	   ' → logprob: -11.399969100952148
    9. '    ' → logprob: -11.899969100952148
    10. ' ' → logprob: -12.399969100952148

Token 96: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0008342855726368725
    2. ' print' → logprob: -7.1258344650268555
    3. '       ' → logprob: -11.125834465026855
    4. '   ' → logprob: -11.375834465026855
    5. 'pass' → logprob: -12.750834465026855
    6. '	print' → logprob: -15.125834465026855
    7. '```' → logprob: -15.625834465026855
    8. '    ' → logprob: -16.62583351135254
    9. 'break' → logprob: -16.87583351135254
    10. '           ' → logprob: -16.87583351135254

Token 97: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0031312520150095224
    2. '(' → logprob: -6.75313138961792
    3. '()' → logprob: -6.87813138961792
    4. '("")' → logprob: -7.00313138961792
    5. '('' → logprob: -11.753130912780762
    6. '("("' → logprob: -12.253130912780762
    7. '("\"' → logprob: -12.503130912780762
    8. '("'' → logprob: -13.753130912780762
    9. '("(' → logprob: -14.503130912780762
    10. '('"' → logprob: -14.503130912780762

Token 98: 'warning' (ID: 39914)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.5542792677879333
    2. 'alert' → logprob: -2.054279327392578
    3. 'ignore' → logprob: -2.929279327392578
    4. 'unknown' → logprob: -2.929279327392578
    5. 'neutral' → logprob: -3.304279327392578
    6. 'danger' → logprob: -3.679279327392578
    7. 'warning' → logprob: -3.679279327392578
    8. 'safe' → logprob: -3.804279327392578
    9. 'none' → logprob: -4.054279327392578
    10. 'unsafe' → logprob: -4.554279327392578

Token 99: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -2.6656825866666622e-05
    2. '")
' → logprob: -10.75002670288086
    3. ')' → logprob: -12.37502670288086
    4. ')")' → logprob: -13.87502670288086
    5. '")
' → logprob: -17.50002670288086
    6. '"' → logprob: -18.62502670288086
    7. '()' → logprob: -19.12502670288086
    8. '')' → logprob: -19.25002670288086
    9. '!")' → logprob: -19.25002670288086
    10. '")

' → logprob: -20.12502670288086


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 97
Tokens correctement prédits (1ère position, stricte): 53
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 87
Précision stricte (1ère position): 54.64%
Précision adaptée (1ère position): 59.79%
Précision (top 10): 89.69%
================================================================================
