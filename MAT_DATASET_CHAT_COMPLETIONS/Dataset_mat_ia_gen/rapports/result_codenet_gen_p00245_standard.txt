================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:21:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque
input=sys.stdin.readline

DIRS=[(0,1),(0,-1),(1,0),(-1,0)]

def bfs(startX,startY,mapc,X,Y):
    dist=[[-1]*Y for _ in range(X)]
    dist[startX][startY]=0
    q=deque()
    q.append((startX,startY))
    while q:
        x,y=q.popleft()
        for dx,dy in DIRS:
            nx,ny=x+dx,y+dy
            if 0<=nx<X and 0<=ny<Y and dist[nx][ny]==-1 and mapc[nx][ny]=='.':
                dist[nx][ny]=dist[x][y]+1
                q.append((nx,ny))
    return dist

def bfs_from_aisle_to_shelf(mapc,X,Y):
    # For each aisle cell, from it movement to adjacent shelf cell is cost 0
    # Because cannot enter shelf cell, must go adjacent aisle to pick product.
    # We need shortest distance from aisle to shelf by moving on aisles only,
    # but picking shelf adjacency counts as if at aisle cell adjacent to shelf.
    # So distances on aisles to aisle cells only.
    # Here shelves are walls for movement.
    pass

def main():
    while True:
        X,Y=map(int,input().split())
        if X==0 and Y==0:
            break
        mapc=[[] for _ in range(X)]
        shelves_pos={}
        start=(-1,-1)
        for y in range(Y):
            line=list(input().split())
            for x in range(X):
                c=line[x]
                mapc[x].append(c)
                if c=='P':
                    start=(x,y)
                elif c!='.' and c!='P':
                    shelves_pos[(x,y)]=int(c)
        n=int(input())
        sale_info=[{} for _ in range(10)]
        # storing [discount,s,e] per product number; only one per g per input assumed
        product_info_list=[]
        for _ in range(n):
            g,d,s,e=map(int,input().split())
            product_info_list.append((g,d,s,e))
        # map aisles and shelves
        # aisles: '.','P'; shelves: digits
        # movement allowed only on aisles except initial at P
        # need distances from each aisle cell to aisles adjacent shelf cells.
        # Calculate distance from aisles to aisles (BFS from P)
        dist_from_start=bfs(start[0],start[1],mapc,X,Y)
        # find for each shelf cell the aisles adjacent to it (neighbors)
        shelf_aisle_pos={}
        for (x,y),g in shelves_pos.items():
            aisles_adj=[]
            for dx,dy in DIRS:
                nx,ny=x+dx,y+dy
                if 0<=nx<X and 0<=ny<Y and mapc[nx][ny]=='.':
                    aisles_adj.append((nx,ny))
            shelf_aisle_pos[(x,y)]=aisles_adj
        # For each shelf cell, determine minimal dist from start to one of its adjacent aisles
        shelf_min_dist={}
        for (x,y) in shelves_pos.keys():
            min_d=10**9
            for ax,ay in shelf_aisle_pos[(x,y)]:
                if dist_from_start[ax][ay]>=0 and dist_from_start[ax][ay]<min_d:
                    min_d=dist_from_start[ax][ay]
            # impossible to access shelf if min_d remains large
            shelf_min_dist[(x,y)]=min_d
        # For each product number g, list its shelf positions
        prod_shelves=[[] for _ in range(10)]
        for (x,y),g in shelves_pos.items():
            prod_shelves[g].append((x,y))
        # For each product, need minimal distance to reach it from current position or other products picked
        # Since cannot step into shelf cells, movement cost calculation between products done between their aisle adjacents
        # Precompute shortest paths on aisles between shelves adjacency aisles:
        # prepare list of aisle positions relevant: starting position + all aisles adjacent shelf positions
        aisle_points=[]
        aisle_points.append(start)
        for g in range(10):
            for (x,y) in prod_shelves[g]:
                # multiple aisles adjacent to shelf; we store all
                for ax,ay in shelf_aisle_pos[(x,y)]:
                    aisle_points.append((ax,ay))
        # remove duplicates
        aisle_points=list(set(aisle_points))
        # Map point to idx
        point_idx={p:i for i,p in enumerate(aisle_points)}
        # Compute all pairs shortest distances on aisles using BFS per point
        adj=[[10**9]*len(aisle_points) for _ in range(len(aisle_points))]
        for i,(x,y) in enumerate(aisle_points):
            dist=[[-1]*Y for _ in range(X)]
            dist[x][y]=0
            q=deque()
            q.append((x,y))
            while q:
                cx,cy=q.popleft()
                for dx,dy in DIRS:
                    nx,ny=cx+dx,cy+dy
                    if 0<=nx<X and 0<=ny<Y:
                        if dist[nx][ny]==-1 and mapc[nx][ny]=='.':
                            dist[nx][ny]=dist[cx][cy]+1
                            q.append((nx,ny))
            for j,(tx,ty) in enumerate(aisle_points):
                if dist[tx][ty]>=0:
                    adj[i][j]=dist[tx][ty]
        # For each product g, determine minimal distance to pick from current position or another product position
        # Build a list of "nodes" for each product: minimal access cost from start or from other products
        # We'll represent picks by bits of length n (number of sales)
        # Each sale: product g[i], discount d[i], start s[i], end e[i]
        # For each sale, find minimal distance from start aisle or another shelf aisle adjacency with product picked, to each shelf adjacency of that product
        # We will pick one shelf position with minimal arrival time per product to maximize chance of buying within sale time.
        # Prepare a list for easier indexing:
        # For each sale i, store (g,d,s,e)
        # Build dist matrix between sales and start: dist_start[i] minimal distance from start point to product i shelf
        # dist_p2p[i][j]: minimal distance from product i shelf to product j shelf on aisles
        def dist_min_between_products(pi,pj):
            g_i,d_i,s_i,e_i=product_info_list[pi]
            g_j,d_j,s_j,e_j=product_info_list[pj]
            res=10**9
            for (x1,y1) in prod_shelves[g_i]:
                idx1s=[point_idx[p] for p in shelf_aisle_pos[(x1,y1)] if p in point_idx]
                for (x2,y2) in prod_shelves[g_j]:
                    idx2s=[point_idx[p] for p in shelf_aisle_pos[(x2,y2)] if p in point_idx]
                    for u in idx1s:
                        for v in idx2s:
                            d=adj[u][v]
                            if d<res:
                                res=d
            return res
        def dist_min_start_product(i):
            g_i,d_i,s_i,e_i=product_info_list[i]
            res=10**9
            stidx=point_idx[start]
            for (x,y) in prod_shelves[g_i]:
                idxs=[point_idx[p] for p in shelf_aisle_pos[(x,y)] if p in point_idx]
                for v in idxs:
                    d=adj[stidx][v]
                    if d<res:
                        res=d
            return res
        n=len(product_info_list)
        dist_start=[dist_min_start_product(i) for i in range(n)]
        dist_p2p=[[10**9]*n for _ in range(n)]
        for i in range(n):
            for j in range(n):
                if i!=j:
                    dist_p2p[i][j]=dist_min_between_products(i,j)
        # DP for bitmask picking products
        # state: dp[mask][last]: minimal time to have picked set mask with last picked product last
        # store time as minimum arrival time at product last product's shelf aisle adjacency (arbitrary adjacency with minimal arrival)
        # initial from start to product i at dist_start[i]
        # we must check feasibility of picking i: that arrival_time between s_i (sale start) and e_i(sale end)
        dp=[[10**9]*(n) for _ in range(1<<n)]
        for i in range(n):
            g,d,s,e=product_info_list[i]
            t=dist_start[i]
            if t>=s and t<=e and t!=10**9:
                dp[1<<i][i]=t
        for mask in range(1<<n):
            for last in range(n):
                if dp[mask][last]==10**9:
                    continue
                for nxt in range(n):
                    if (mask>>nxt)&1==0:
                        g,d,s,e=product_info_list[nxt]
                        cost=dist_p2p[last][nxt]
                        if cost==10**9:
                            continue
                        arrival_time=dp[mask][last]+cost
                        if arrival_time>=s and arrival_time<=e:
                            if arrival_time<dp[mask|(1<<nxt)][nxt]:
                                dp[mask|(1<<nxt)][nxt]=arrival_time
        ans=0
        for mask in range(1<<n):
            val=0
            for i in range(n):
                if (mask>>i)&1:
                    val+=product_info_list[i][1]
            for i in range(n):
                if dp[mask][i]!=10**9:
                    if val>ans:
                        ans=val
        print(ans)
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.012081976048648357
    2. 'os' → logprob: -4.762082099914551
    3. ' collections' → logprob: -6.887082099914551
    4. ' ' → logprob: -7.512082099914551
    5. ' math' → logprob: -7.887082099914551
    6. ' Py' → logprob: -7.887082099914551
    7. ' pathlib' → logprob: -8.01208209991455
    8. ' typing' → logprob: -8.63708209991455
    9. 'collections' → logprob: -9.38708209991455
    10. ' datetime' → logprob: -9.38708209991455

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.537659227848053
    2. 'import' → logprob: -0.912659227848053
    3. '.' → logprob: -4.287659168243408
    4. ' ' → logprob: -8.287659645080566
    5. '<|end|>' → logprob: -9.037659645080566
    6. '.import' → logprob: -9.287659645080566
    7. '```' → logprob: -9.412659645080566
    8. '_import' → logprob: -10.537659645080566
    9. '	import' → logprob: -10.662659645080566
    10. '_' → logprob: -11.412659645080566

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.26182234287261963
    2. ' deque' → logprob: -1.7618223428726196
    3. ' abc' → logprob: -3.01182222366333
    4. 'deque' → logprob: -4.88682222366333
    5. 'abc' → logprob: -7.13682222366333
    6. ' named' → logprob: -7.76182222366333
    7. ' Counter' → logprob: -7.88682222366333
    8. ' import' → logprob: -9.261822700500488
    9. ' counter' → logprob: -10.511822700500488
    10. ' ' → logprob: -10.511822700500488

Token 7: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9681236147880554
    2. '

' → logprob: -1.4681236743927002
    3. 'import' → logprob: -1.7181236743927002
    4. '
' → logprob: -2.0931236743927
    5. '```' → logprob: -3.4681236743927
    6. '\' → logprob: -3.8431236743927
    7. '<|end|>' → logprob: -3.8431236743927
    8. 'newline' → logprob: -5.593123435974121
    9. '<|end|>' → logprob: -5.968123435974121
    10. '' → logprob: -6.218123435974121

Token 8: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5978865623474121
    2. '```' → logprob: -1.847886562347412
    3. '\' → logprob: -2.222886562347412
    4. '

' → logprob: -2.722886562347412
    5. 'import' → logprob: -2.972886562347412
    6. '
' → logprob: -2.972886562347412
    7. '<|end|>' → logprob: -5.347886562347412
    8. 'def' → logprob: -5.847886562347412
    9. 'newline' → logprob: -6.472886562347412
    10. ',' → logprob: -6.972886562347412

Token 9: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031865055207163095
    2. '.' → logprob: -6.3781867027282715
    3. '=' → logprob: -7.0031867027282715
    4. ' =' → logprob: -8.253186225891113
    5. ' (' → logprob: -9.128186225891113
    6. '()' → logprob: -9.753186225891113
    7. ')' → logprob: -10.253186225891113
    8. '(
' → logprob: -10.878186225891113
    9. '```' → logprob: -11.378186225891113
    10. '[' → logprob: -11.503186225891113

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00022427814838010818
    2. '.readline' → logprob: -9.125224113464355
    3. '.stdin' → logprob: -10.125224113464355
    4. ' .' → logprob: -10.125224113464355
    5. '.
' → logprob: -11.125224113464355
    6. '.​' → logprob: -12.500224113464355
    7. '.\' → logprob: -12.875224113464355
    8. '[' → logprob: -13.500224113464355
    9. '.argv' → logprob: -14.125224113464355
    10. '.`' → logprob: -14.125224113464355

Token 11: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04946136102080345
    2. '.readline' → logprob: -3.0494613647460938
    3. '.read' → logprob: -7.174461364746094
    4. '.Read' → logprob: -10.174461364746094
    5. 'read' → logprob: -10.674461364746094
    6. '[' → logprob: -11.924461364746094
    7. '.
' → logprob: -12.049461364746094
    8. '.​' → logprob: -12.174461364746094
    9. '.readlines' → logprob: -12.424461364746094
    10. '.READ' → logprob: -12.799461364746094

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41044315695762634
    2. '()' → logprob: -1.1604431867599487
    3. '(
' → logprob: -4.035443305969238
    4. '()
' → logprob: -6.410443305969238
    5. '
' → logprob: -6.535443305969238
    6. '(

' → logprob: -7.535443305969238
    7. '()

' → logprob: -7.660443305969238
    8. '\(' → logprob: -8.035443305969238
    9. '

' → logprob: -8.410443305969238
    10. '\n' → logprob: -8.910443305969238

Token 13: 'DIR' (ID: 28773)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02973880246281624
    2. 'def' → logprob: -4.654738903045654
    3. 'd' → logprob: -4.779738903045654
    4. '(n' → logprob: -5.404738903045654
    5. '(' → logprob: -6.029738903045654
    6. 'q' → logprob: -6.654738903045654
    7. 'N' → logprob: -6.779738903045654
    8. 'b' → logprob: -7.904738903045654
    9. 'queue' → logprob: -8.279738426208496
    10. '()' → logprob: -8.529738426208496

Token 14: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.1994775377388578e-05
    2. ' =' → logprob: -12.375012397766113
    3. '_S' → logprob: -13.250012397766113
    4. ' S' → logprob: -13.375012397766113
    5. '=' → logprob: -13.750012397766113
    6. '_' → logprob: -13.875012397766113
    7. '=S' → logprob: -14.250012397766113
    8. '```' → logprob: -14.500012397766113
    9. '4' → logprob: -14.750012397766113
    10. 's' → logprob: -15.125012397766113

Token 15: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002444977406412363
    2. ' =[' → logprob: -6.127444744110107
    3. '=' → logprob: -9.252445220947266
    4. '[:]' → logprob: -9.377445220947266
    5. '=[' → logprob: -10.127445220947266
    6. '[' → logprob: -11.377445220947266
    7. ' ' → logprob: -12.127445220947266
    8. '=[]' → logprob: -12.252445220947266
    9. ' [' → logprob: -12.377445220947266
    10. ' ={' → logprob: -12.752445220947266

Token 16: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3144225478172302
    2. '(-' → logprob: -1.314422607421875
    3. '[' → logprob: -7.564422607421875
    4. ' (' → logprob: -7.689422607421875
    5. '[-' → logprob: -8.939422607421875
    6. ' (-' → logprob: -10.439422607421875
    7. '   ' → logprob: -11.314422607421875
    8. '[(' → logprob: -12.689422607421875
    9. '(+' → logprob: -12.689422607421875
    10. ' [' → logprob: -13.439422607421875

Token 17: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2603975832462311
    2. '0' → logprob: -1.5103975534439087
    3. '1' → logprob: -4.885397434234619
    4. ' -' → logprob: -7.885397434234619
    5. ' ' → logprob: -8.010397911071777
    6. '(-' → logprob: -8.885397911071777
    7. '(' → logprob: -10.510397911071777
    8. ' (-' → logprob: -13.885397911071777
    9. ' (' → logprob: -14.010397911071777
    10. '   ' → logprob: -14.510397911071777

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022821188031230122
    2. ' ,' → logprob: -8.750227928161621
    3. ',-' → logprob: -9.750227928161621
    4. '1' → logprob: -12.375227928161621
    5. ',+' → logprob: -12.750227928161621
    6. ',)' → logprob: -13.625227928161621
    7. ',

' → logprob: -14.000227928161621
    8. ',
' → logprob: -14.250227928161621
    9. ' ' → logprob: -14.500227928161621
    10. ',),' → logprob: -15.125227928161621

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05905042961239815
    2. '-' → logprob: -3.5590503215789795
    3. ' ' → logprob: -3.5590503215789795
    4. ' -' → logprob: -7.809050559997559
    5. '0' → logprob: -13.684050559997559
    6. '   ' → logprob: -15.246550559997559
    7. '2' → logprob: -15.309050559997559
    8. '+' → logprob: -15.559050559997559
    9. '  ' → logprob: -15.746550559997559
    10. ')' → logprob: -15.996550559997559

Token 20: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3138737380504608
    2. '),(' → logprob: -1.3138737678527832
    3. '),
' → logprob: -8.188873291015625
    4. ')' → logprob: -8.563873291015625
    5. ' ),' → logprob: -8.938873291015625
    6. '),

' → logprob: -11.563873291015625
    7. '),
' → logprob: -14.813873291015625
    8. ',' → logprob: -15.063873291015625
    9. ')]' → logprob: -15.063873291015625
    10. '0' → logprob: -15.313873291015625

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002911623567342758
    2. '1' → logprob: -6.002911567687988
    3. '-' → logprob: -8.127911567687988
    4. ' ' → logprob: -8.877911567687988
    5. ' -' → logprob: -14.690411567687988
    6. '01' → logprob: -15.502911567687988
    7. '  ' → logprob: -16.315412521362305
    8. '```' → logprob: -16.315412521362305
    9. '۰' → logprob: -16.315412521362305
    10. '   ' → logprob: -16.690412521362305

Token 22: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0015135504072532058
    2. ',' → logprob: -6.501513481140137
    3. '-' → logprob: -11.876513481140137
    4. ' ,-' → logprob: -13.001513481140137
    5. ',-

' → logprob: -13.876513481140137
    6. '1' → logprob: -14.251513481140137
    7. ',-
' → logprob: -15.126513481140137
    8. ',+' → logprob: -16.751514434814453
    9. ' ,' → logprob: -16.876514434814453
    10. '",-' → logprob: -18.126514434814453

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -17.000001907348633
    4. '１' → logprob: -17.375001907348633
    5. '۱' → logprob: -18.000001907348633
    6. '१' → logprob: -19.125001907348633
    7. '১' → logprob: -19.250001907348633
    8. '-' → logprob: -19.750001907348633
    9. ')' → logprob: -19.812501907348633
    10. '2' → logprob: -19.812501907348633

Token 24: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.00705102551728487
    2. '),' → logprob: -5.00705099105835
    3. ')' → logprob: -8.007051467895508
    4. '),
' → logprob: -13.757051467895508
    5. ',' → logprob: -14.257051467895508
    6. ',(' → logprob: -15.632051467895508
    7. ' ),' → logprob: -16.007051467895508
    8. ')]' → logprob: -16.007051467895508
    9. '(' → logprob: -16.507051467895508
    10. '<|end|>' → logprob: -16.507051467895508

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.278864359250292e-05
    2. '-' → logprob: -10.000072479248047
    3. ' ' → logprob: -10.875072479248047
    4. '0' → logprob: -11.750072479248047
    5. '```' → logprob: -15.625072479248047
    6. ')' → logprob: -16.375072479248047
    7. '(' → logprob: -16.750072479248047
    8. ' -' → logprob: -17.000072479248047
    9. '2' → logprob: -18.687572479248047
    10. '  ' → logprob: -18.750072479248047

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012856863031629473
    2. '0' → logprob: -9.125128746032715
    3. ' ,' → logprob: -10.875128746032715
    4. ',-' → logprob: -14.250128746032715
    5. ' ' → logprob: -17.1251277923584
    6. '```' → logprob: -17.5001277923584
    7. ',
' → logprob: -18.6251277923584
    8. ')' → logprob: -18.8126277923584
    9. '，' → logprob: -19.2501277923584
    10. '

' → logprob: -19.3126277923584

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '۰' → logprob: -16.125036239624023
    4. '```' → logprob: -17.812536239624023
    5. '０' → logprob: -17.937536239624023
    6. '-' → logprob: -18.125036239624023
    7. ',' → logprob: -18.937536239624023
    8. '1' → logprob: -19.062536239624023
    9. '   ' → logprob: -19.312536239624023
    10. '٠' → logprob: -19.437536239624023

Token 28: '),' (ID: 936)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0010259009432047606
    2. '),' → logprob: -7.001025676727295
    3. ')' → logprob: -9.126026153564453
    4. ',(' → logprob: -12.501026153564453
    5. ',' → logprob: -14.126026153564453
    6. '),
' → logprob: -14.751026153564453
    7. '(' → logprob: -15.376026153564453
    8. ' ),' → logprob: -15.501026153564453
    9. '),

' → logprob: -16.126026153564453
    10. ')]' → logprob: -16.126026153564453

Token 29: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -6.337155355140567e-05
    2. ' (-' → logprob: -9.750062942504883
    3. '-' → logprob: -12.500062942504883
    4. '(' → logprob: -13.625062942504883
    5. ' ' → logprob: -17.750062942504883
    6. '[-' → logprob: -19.125062942504883
    7. ' -' → logprob: -19.625062942504883
    8. ',-' → logprob: -20.000062942504883
    9. '   ' → logprob: -20.000062942504883
    10. '{-' → logprob: -20.125062942504883

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -15.625000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '```' → logprob: -17.1875
    5. '１' → logprob: -18.0
    6. '

' → logprob: -18.0625
    7. '१' → logprob: -18.125
    8. '১' → logprob: -18.375
    9. '۱' → logprob: -18.5
    10. '' → logprob: -18.625

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006748885381966829
    2. '0' → logprob: -5.006748676300049
    3. ' ,' → logprob: -10.381749153137207
    4. '```' → logprob: -13.756749153137207
    5. '<|end|>' → logprob: -14.256749153137207
    6. ' ' → logprob: -15.381749153137207
    7. ')' → logprob: -15.881749153137207
    8. '1' → logprob: -16.25674819946289
    9. ',
' → logprob: -17.13174819946289
    10. '،' → logprob: -17.31924819946289

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '1' → logprob: -17.2500057220459
    4. '```' → logprob: -17.6250057220459
    5. '۰' → logprob: -18.1250057220459
    6. '０' → logprob: -19.8125057220459
    7. ')' → logprob: -20.0000057220459
    8. '

' → logprob: -20.5000057220459
    9. '٠' → logprob: -20.6875057220459
    10. '   ' → logprob: -20.6875057220459

Token 33: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006502442411147058
    2. ')' → logprob: -7.500650405883789
    3. '),' → logprob: -10.125650405883789
    4. ')])' → logprob: -10.125650405883789
    5. '),(' → logprob: -11.875650405883789
    6. ' )' → logprob: -12.750650405883789
    7. ')],' → logprob: -12.750650405883789
    8. '))' → logprob: -13.625650405883789
    9. ']' → logprob: -14.000650405883789
    10. ')}' → logprob: -14.625650405883789

Token 34: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5101324915885925
    2. 'def' → logprob: -1.0101325511932373
    3. 'N' → logprob: -3.3851325511932373
    4. 'd' → logprob: -7.510132312774658
    5. 'q' → logprob: -8.135132789611816
    6. 't' → logprob: -8.885132789611816
    7. 'T' → logprob: -9.260132789611816
    8. 'r' → logprob: -9.385132789611816
    9. 'a' → logprob: -10.385132789611816
    10. 'v' → logprob: -10.635132789611816

Token 35: ' bfs' (ID: 147571)
  Prédit: ' bfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.003541382495313883
    2. ' solve' → logprob: -6.503541469573975
    3. 'b' → logprob: -6.628541469573975
    4. ' solution' → logprob: -8.003540992736816
    5. ' BFS' → logprob: -8.378540992736816
    6. ' main' → logprob: -10.003540992736816
    7. ' ' → logprob: -10.253540992736816
    8. ' dfs' → logprob: -11.003540992736816
    9. 'solve' → logprob: -11.128540992736816
    10. ' is' → logprob: -12.003540992736816

Token 36: '(start' (ID: 20008)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002133960137143731
    2. '(queue' → logprob: -6.377133846282959
    3. '(node' → logprob: -8.377134323120117
    4. '(root' → logprob: -10.127134323120117
    5. '((' → logprob: -11.127134323120117
    6. '(start' → logprob: -11.252134323120117
    7. '(user' → logprob: -11.377134323120117
    8. '(x' → logprob: -11.627134323120117
    9. '_' → logprob: -11.627134323120117
    10. '(query' → logprob: -12.002134323120117

Token 37: 'X' (ID: 55)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4648016393184662
    2. ',' → logprob: -1.0898016691207886
    3. '(' → logprob: -3.964801549911499
    4. '(start' → logprob: -4.589801788330078
    5. ')' → logprob: -5.339801788330078
    6. ' ):' → logprob: -8.214801788330078
    7. ',start' → logprob: -8.214801788330078
    8. ':' → logprob: -8.464801788330078
    9. '(node' → logprob: -8.839801788330078
    10. '`' → logprob: -9.839801788330078

Token 38: ',start' (ID: 121128)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003023345780093223
    2. ',start' → logprob: -8.7503023147583
    3. '):' → logprob: -9.3753023147583
    4. ' ,' → logprob: -10.6253023147583
    5. ')' → logprob: -12.0003023147583
    6. ',x' → logprob: -12.1253023147583
    7. ',n' → logprob: -12.5003023147583
    8. ',p' → logprob: -13.2503023147583
    9. ',X' → logprob: -13.2503023147583
    10. ',s' → logprob: -13.7503023147583

Token 39: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -1.3856492842023727e-06
    2. 'y' → logprob: -13.750000953674316
    3. ',' → logprob: -15.500000953674316
    4. ',Y' → logprob: -17.875001907348633
    5. '_y' → logprob: -19.000001907348633
    6. ' Y' → logprob: -19.500001907348633
    7. '```' → logprob: -19.625001907348633
    8. 'X' → logprob: -20.125001907348633
    9. ')' → logprob: -20.500001907348633
    10. ',y' → logprob: -20.875001907348633

Token 40: ',map' (ID: 179912)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47502899169921875
    2. ',' → logprob: -0.9750289916992188
    3. ')' → logprob: -7.475028991699219
    4. ' ):' → logprob: -9.475028991699219
    5. ',state' → logprob: -9.725028991699219
    6. ',x' → logprob: -10.100028991699219
    7. ',n' → logprob: -10.225028991699219
    8. ',start' → logprob: -10.475028991699219
    9. ',p' → logprob: -10.850028991699219
    10. ' ,' → logprob: -11.350028991699219

Token 41: 'c' (ID: 66)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5193846821784973
    2. ',map' → logprob: -1.7693846225738525
    3. '_map' → logprob: -2.1443846225738525
    4. ',' → logprob: -2.8943846225738525
    5. '_' → logprob: -3.5193846225738525
    6. ')' → logprob: -4.269384860992432
    7. '_data' → logprob: -5.519384860992432
    8. '_,' → logprob: -5.644384860992432
    9. '_grid' → logprob: -6.019384860992432
    10. ',m' → logprob: -6.894384860992432

Token 42: ',X' (ID: 83943)
  Prédit: 'opy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'opy' → logprob: -0.4879509210586548
    2. '):' → logprob: -1.7379509210586548
    3. ',' → logprob: -2.8629508018493652
    4. 'ount' → logprob: -2.9879508018493652
    5. ')' → logprob: -3.4879508018493652
    6. 'h' → logprob: -4.112950801849365
    7. 'on' → logprob: -4.737950801849365
    8. 'nt' → logprob: -4.862950801849365
    9. 'ost' → logprob: -4.862950801849365
    10. '):
' → logprob: -5.112950801849365

Token 43: ',Y' (ID: 71464)
  Prédit: ',Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',Y' → logprob: -0.22590585052967072
    2. ',map' → logprob: -2.2259058952331543
    3. ',' → logprob: -2.7259058952331543
    4. ',max' → logprob: -4.975905895233154
    5. ',H' → logprob: -4.975905895233154
    6. ',N' → logprob: -5.725905895233154
    7. ',size' → logprob: -5.975905895233154
    8. ',M' → logprob: -6.225905895233154
    9. 'size' → logprob: -6.475905895233154
    10. '_size' → logprob: -6.975905895233154

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029794832225888968
    2. ')' → logprob: -5.877979278564453
    3. ',' → logprob: -8.877979278564453
    4. ':' → logprob: -10.877979278564453
    5. '):
' → logprob: -11.377979278564453
    6. ' ):' → logprob: -13.002979278564453
    7. ')：' → logprob: -14.752979278564453
    8. ')):' → logprob: -15.252979278564453
    9. '),' → logprob: -15.377979278564453
    10. ''):' → logprob: -15.502979278564453

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13886581361293793
    2. '	queue' → logprob: -2.7638657093048096
    3. ':' → logprob: -3.3888657093048096
    4. ' queue' → logprob: -4.763865947723389
    5. '```' → logprob: -5.388865947723389
    6. '
' → logprob: -6.263865947723389
    7. '    
' → logprob: -6.263865947723389
    8. ' ' → logprob: -6.263865947723389
    9. 'queue' → logprob: -6.388865947723389
    10. '(queue' → logprob: -6.513865947723389

Token 46: ' dist' (ID: 3601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9064343571662903
    2. ' queue' → logprob: -1.1564342975616455
    3. ' visited' → logprob: -1.7814342975616455
    4. ' q' → logprob: -2.7814342975616455
    5. 'queue' → logprob: -3.6564342975616455
    6. 'visited' → logprob: -4.531434535980225
    7. 'q' → logprob: -5.531434535980225
    8. ' dq' → logprob: -6.406434535980225
    9. ' d' → logprob: -6.531434535980225
    10. '```' → logprob: -6.781434535980225

Token 47: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20573750138282776
    2. ' =' → logprob: -2.080737590789795
    3. '=[' → logprob: -3.080737590789795
    4. '=[[' → logprob: -4.330737590789795
    5. '[start' → logprob: -7.080737590789795
    6. '[' → logprob: -7.330737590789795
    7. '=[]' → logprob: -8.205737113952637
    8. '={}' → logprob: -9.330737113952637
    9. ' =[' → logprob: -9.830737113952637
    10. '=[
' → logprob: -10.830737113952637

Token 48: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.011056899093091488
    2. '[' → logprob: -4.511056900024414
    3. ' [-' → logprob: -12.261056900024414
    4. '   ' → logprob: -14.011056900024414
    5. '[x' → logprob: -14.386056900024414
    6. '[[' → logprob: -14.511056900024414
    7. '-' → logprob: -14.636056900024414
    8. '[X' → logprob: -15.011056900024414
    9. ' [' → logprob: -15.136056900024414
    10. '[a' → logprob: -15.261056900024414

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '-' → logprob: -14.125000953674316
    3. '10' → logprob: -17.000001907348633
    4. 'int' → logprob: -17.125001907348633
    5. '11' → logprob: -17.250001907348633
    6. ' ' → logprob: -17.500001907348633
    7. 'inf' → logprob: -17.500001907348633
    8. '999' → logprob: -17.625001907348633
    9. '987' → logprob: -17.750001907348633
    10. '2' → logprob: -17.875001907348633

Token 50: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.010527748614549637
    2. 'for' → logprob: -4.885527610778809
    3. ']*' → logprob: -6.010527610778809
    4. ']' → logprob: -8.510527610778809
    5. '	for' → logprob: -8.885527610778809
    6. ']*(' → logprob: -9.385527610778809
    7. ' ]' → logprob: -11.135527610778809
    8. '   ' → logprob: -11.385527610778809
    9. ')' → logprob: -11.885527610778809
    10. '<|end|>' → logprob: -13.135527610778809

Token 51: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0009566014050506055
    2. 'X' → logprob: -7.0009565353393555
    3. '(Y' → logprob: -10.625956535339355
    4. ' Y' → logprob: -11.125956535339355
    5. 'len' → logprob: -13.250956535339355
    6. '(' → logprob: -13.500956535339355
    7. 'W' → logprob: -13.750956535339355
    8. 'M' → logprob: -14.125956535339355
    9. '	Y' → logprob: -14.625956535339355
    10. '   ' → logprob: -15.375956535339355

Token 52: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07889385521411896
    2. 'for' → logprob: -2.5788938999176025
    3. '	for' → logprob: -13.078893661499023
    4. '   ' → logprob: -13.328893661499023
    5. ']' → logprob: -15.328893661499023
    6. ' ' → logprob: -16.203893661499023
    7. ' ]' → logprob: -16.703893661499023
    8. '    ' → logprob: -17.828893661499023
    9. ')' → logprob: -18.703893661499023
    10. '  ' → logprob: -18.703893661499023

Token 53: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6298386454582214
    2. ' _' → logprob: -0.8798386454582214
    3. ' in' → logprob: -3.004838705062866
    4. ' i' → logprob: -6.879838466644287
    5. ' range' → logprob: -7.504838466644287
    6. '<|end|>' → logprob: -8.004838943481445
    7. ' ' → logprob: -8.504838943481445
    8. '_range' → logprob: -8.629838943481445
    9. '_i' → logprob: -8.754838943481445
    10. 'range' → logprob: -9.004838943481445

Token 54: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.253057062625885
    2. ' in' → logprob: -1.5030570030212402
    3. 'range' → logprob: -6.87805700302124
    4. ' ' → logprob: -9.628057479858398
    5. ' range' → logprob: -11.753057479858398
    6. '  ' → logprob: -12.378057479858398
    7. 'i' → logprob: -12.628057479858398
    8. '```' → logprob: -13.253057479858398
    9. '(range' → logprob: -13.253057479858398
    10. '[' → logprob: -13.378057479858398

Token 55: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023246990516781807
    2. ' range' → logprob: -3.773247003555298
    3. '	range' → logprob: -14.398246765136719
    4. '   ' → logprob: -14.648246765136719
    5. '(range' → logprob: -15.648246765136719
    6. ' ' → logprob: -16.02324676513672
    7. '  ' → logprob: -17.02324676513672
    8. 'r' → logprob: -17.52324676513672
    9. 'rang' → logprob: -17.64824676513672
    10. '[' → logprob: -17.64824676513672

Token 56: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.000327956018736586
    2. '(' → logprob: -8.375328063964844
    3. 'X' → logprob: -9.250328063964844
    4. ' (' → logprob: -14.625328063964844
    5. ' X' → logprob: -15.625328063964844
    6. '(Y' → logprob: -15.750328063964844
    7. '(x' → logprob: -15.750328063964844
    8. '(
' → logprob: -16.000328063964844
    9. '   ' → logprob: -16.375328063964844
    10. '	X' → logprob: -16.750328063964844

Token 57: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.8789383830153383e-05
    2. ')' → logprob: -11.500019073486328
    3. ']' → logprob: -11.750019073486328
    4. ')],' → logprob: -15.000019073486328
    5. ' )' → logprob: -15.875019073486328
    6. ')]
' → logprob: -16.375019073486328
    7. '   ' → logprob: -17.000019073486328
    8. '')]' → logprob: -17.625019073486328
    9. ')])' → logprob: -17.625019073486328
    10. '])' → logprob: -17.750019073486328

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2862389385700226
    2. 'dist' → logprob: -1.6612389087677002
    3. '    
' → logprob: -3.9112389087677
    4. '	dist' → logprob: -4.536239147186279
    5. '
' → logprob: -4.786239147186279
    6. '```' → logprob: -5.161239147186279
    7. ' dist' → logprob: -5.661239147186279
    8. '<|end|>' → logprob: -6.161239147186279
    9. '\' → logprob: -6.661239147186279
    10. '[' → logprob: -6.911239147186279

Token 59: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.6388548612594604
    2. '   ' → logprob: -0.7638548612594604
    3. ' dist' → logprob: -5.76385498046875
    4. 'queue' → logprob: -6.38885498046875
    5. '	dist' → logprob: -7.01385498046875
    6. ' queue' → logprob: -8.63885498046875
    7. '    
' → logprob: -8.88885498046875
    8. '```' → logprob: -9.13885498046875
    9. '
' → logprob: -10.51385498046875
    10. '	queue' → logprob: -10.63885498046875

Token 60: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.375001907348633
    3. '[s' → logprob: -15.375001907348633
    4. '```' → logprob: -15.625001907348633
    5. 'start' → logprob: -15.875001907348633
    6. '[source' → logprob: -18.000001907348633
    7. '[int' → logprob: -18.875001907348633
    8. '[src' → logprob: -19.000001907348633
    9. '[end' → logprob: -19.000001907348633
    10. '][' → logprob: -19.375001907348633

Token 61: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.0280383548888494e-06
    2. ')' → logprob: -15.750000953674316
    3. 'Y' → logprob: -15.750000953674316
    4. ',' → logprob: -15.875000953674316
    5. 'x' → logprob: -15.875000953674316
    6. '```' → logprob: -15.875000953674316
    7. '[' → logprob: -16.250001907348633
    8. '   ' → logprob: -16.812501907348633
    9. ' X' → logprob: -17.125001907348633
    10. ']' → logprob: -17.125001907348633

Token 62: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000354769523255527
    2. '[start' → logprob: -8.125354766845703
    3. ' ][' → logprob: -10.500354766845703
    4. ',start' → logprob: -10.625354766845703
    5. '   ' → logprob: -13.000354766845703
    6. 'start' → logprob: -13.750354766845703
    7. ']' → logprob: -14.000354766845703
    8. ',' → logprob: -14.125354766845703
    9. ')][' → logprob: -14.625354766845703
    10. '[' → logprob: -15.125354766845703

Token 63: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -5.796184723294573e-06
    2. ' start' → logprob: -12.125005722045898
    3. 'star' → logprob: -15.750005722045898
    4. '   ' → logprob: -18.2500057220459
    5. 'st' → logprob: -18.2500057220459
    6. 's' → logprob: -18.5000057220459
    7. '[start' → logprob: -18.6250057220459
    8. 'Start' → logprob: -18.6250057220459
    9. 'sta' → logprob: -18.8750057220459
    10. '	start' → logprob: -19.0000057220459

Token 64: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -1.6240566083070007e-06
    2. ']' → logprob: -13.875001907348633
    3. 'X' → logprob: -15.750001907348633
    4. 'y' → logprob: -16.000001907348633
    5. ' Y' → logprob: -16.625001907348633
    6. '```' → logprob: -16.875001907348633
    7. '

' → logprob: -17.500001907348633
    8. '   ' → logprob: -17.500001907348633
    9. '
' → logprob: -17.625001907348633
    10. '1' → logprob: -17.875001907348633

Token 65: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023432280868291855
    2. ']=' → logprob: -3.7734322547912598
    3. ' ]' → logprob: -8.648432731628418
    4. '=' → logprob: -11.523432731628418
    5. ']+=' → logprob: -15.023432731628418
    6. ']=-' → logprob: -15.148432731628418
    7. ']=(' → logprob: -15.273432731628418
    8. ']='' → logprob: -15.398432731628418
    9. ']={' → logprob: -15.898432731628418
    10. ']="' → logprob: -16.1484317779541

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۰' → logprob: -19.375
    4. '   ' → logprob: -20.0
    5. '０' → logprob: -20.75
    6. '00' → logprob: -21.125
    7. '000' → logprob: -21.5
    8. '٠' → logprob: -21.6875
    9. '1' → logprob: -21.875
    10. ' ' → logprob: -22.0

Token 67: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009049764834344387
    2. '<|end|>' → logprob: -5.009049892425537
    3. '    
' → logprob: -7.134049892425537
    4. '\n' → logprob: -7.634049892425537
    5. '   ' → logprob: -8.134049415588379
    6. '
' → logprob: -8.759049415588379
    7. '<|end|>' → logprob: -9.009049415588379
    8. '' → logprob: -9.009049415588379
    9. '  
' → logprob: -9.134049415588379
    10. ' 
' → logprob: -9.509049415588379

Token 68: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004380278754979372
    2. '<|end|>' → logprob: -6.129380226135254
    3. '\n' → logprob: -7.379380226135254
    4. ' 
' → logprob: -7.879380226135254
    5. '    
' → logprob: -7.879380226135254
    6. '   ' → logprob: -8.254380226135254
    7. '  
' → logprob: -8.879380226135254
    8. '
' → logprob: -9.004380226135254
    9. '' → logprob: -9.504380226135254
    10. 'newline' → logprob: -9.754380226135254

Token 69: ' q' (ID: 2335)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.26704901456832886
    2. 'queue' → logprob: -1.6420490741729736
    3. '   ' → logprob: -3.7670490741729736
    4. ' q' → logprob: -4.6420488357543945
    5. 'q' (adapté à ' q') → logprob: -5.3920488357543945
    6. '
' → logprob: -6.3920488357543945
    7. ' que' → logprob: -7.3920488357543945
    8. ' dq' → logprob: -8.017048835754395
    9. '	queue' → logprob: -8.642048835754395
    10. '```' → logprob: -8.892048835754395

Token 70: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858884960412979
    2. ' =' → logprob: -3.048588752746582
    3. '=q' → logprob: -14.298588752746582
    4. '=d' → logprob: -15.673588752746582
    5. ' ' → logprob: -16.1735897064209
    6. '.=' → logprob: -16.6735897064209
    7. '=

' → logprob: -16.9235897064209
    8. '=
' → logprob: -16.9235897064209
    9. '=torch' → logprob: -17.0485897064209
    10. '＝' → logprob: -17.1735897064209

Token 71: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0009118211455643177
    2. ' deque' → logprob: -7.000911712646484
    3. 'de' → logprob: -15.750911712646484
    4. 'Deque' → logprob: -16.625911712646484
    5. 'dq' → logprob: -18.250911712646484
    6. '```' → logprob: -18.875911712646484
    7. 'queue' → logprob: -19.625911712646484
    8. '	de' → logprob: -20.000911712646484
    9. '(de' → logprob: -20.125911712646484
    10. 'que' → logprob: -20.375911712646484

Token 72: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.019138889387249947
    2. '()' → logprob: -4.019138813018799
    3. '([' → logprob: -7.644138813018799
    4. '(' → logprob: -8.019139289855957
    5. '((' → logprob: -9.394139289855957
    6. '[(' → logprob: -9.519139289855957
    7. '([]' → logprob: -11.144139289855957
    8. '()
' → logprob: -12.394139289855957
    9. '([
' → logprob: -13.644139289855957
    10. '([...' → logprob: -13.894139289855957

Token 73: '   ' (ID: 271)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0033774571493268013
    2. ' q' → logprob: -6.128377437591553
    3. '   ' → logprob: -7.253377437591553
    4. '	q' → logprob: -7.753377437591553
    5. '(q' → logprob: -9.878377914428711
    6. '
' → logprob: -13.753377914428711
    7. '    
' → logprob: -14.253377914428711
    8. '```' → logprob: -14.503377914428711
    9. '[q' → logprob: -15.003377914428711
    10. '\' → logprob: -15.878377914428711

Token 74: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -5.538490950129926e-05
    2. ' q' → logprob: -10.125055313110352
    3. '	q' → logprob: -11.375055313110352
    4. '   ' → logprob: -12.500055313110352
    5. '```' → logprob: -16.87505531311035
    6. '
' → logprob: -17.37505531311035
    7. '    
' → logprob: -18.25005531311035
    8. '(q' → logprob: -19.12505531311035
    9. '`' → logprob: -19.62505531311035
    10. '_q' → logprob: -20.25005531311035

Token 75: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0014376122271642089
    2. '.enqueue' → logprob: -7.501437664031982
    3. '.put' → logprob: -8.001437187194824
    4. '.extend' → logprob: -8.501437187194824
    5. '.' → logprob: -8.626437187194824
    6. '.add' → logprob: -9.876437187194824
    7. '.e' → logprob: -10.501437187194824
    8. '.push' → logprob: -11.126437187194824
    9. '.ap' → logprob: -11.626437187194824
    10. '.offer' → logprob: -11.751437187194824

Token 76: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.8444881536415778e-05
    2. '(' → logprob: -10.500028610229492
    3. '(((' → logprob: -14.500028610229492
    4. ' ((' → logprob: -15.750028610229492
    5. '([(' → logprob: -16.625028610229492
    6. '(([' → logprob: -18.125028610229492
    7. '(('' → logprob: -18.625028610229492
    8. '(
' → logprob: -19.000028610229492
    9. 'left' → logprob: -20.000028610229492
    10. '((-' → logprob: -20.000028610229492

Token 77: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.9027791495318525e-05
    2. ' start' → logprob: -10.875019073486328
    3. '(start' → logprob: -17.250019073486328
    4. 'star' → logprob: -19.375019073486328
    5. '0' → logprob: -19.625019073486328
    6. ' ' → logprob: -19.875019073486328
    7. '	start' → logprob: -20.625019073486328
    8. '   ' → logprob: -20.750019073486328
    9. '[start' → logprob: -20.750019073486328
    10. '  ' → logprob: -21.500019073486328

Token 78: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: 0.0
    2. ')' → logprob: -17.75
    3. '[' → logprob: -18.375
    4. '(' → logprob: -19.125
    5. ' X' → logprob: -19.25
    6. 'Y' → logprob: -19.375
    7. 'x' → logprob: -19.375
    8. 'Q' → logprob: -19.625
    9. '```' → logprob: -20.375
    10. '(X' → logprob: -21.0

Token 79: ',start' (ID: 121128)
  Prédit: ',start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',start' → logprob: -0.38690683245658875
    2. ',' → logprob: -1.1369068622589111
    3. ',user' → logprob: -11.261906623840332
    4. ' ,' → logprob: -12.136906623840332
    5. 'start' → logprob: -12.511906623840332
    6. ',input' → logprob: -12.886906623840332
    7. ',s' → logprob: -13.011906623840332
    8. ',end' → logprob: -13.136906623840332
    9. ',state' → logprob: -13.511906623840332
    10. ',current' → logprob: -13.636906623840332

Token 80: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -7.584239938296378e-06
    2. 'X' → logprob: -11.875007629394531
    3. ',' → logprob: -15.000007629394531
    4. ',Y' → logprob: -16.12500762939453
    5. ')' → logprob: -16.37500762939453
    6. 'Q' → logprob: -17.12500762939453
    7. ' Y' → logprob: -17.12500762939453
    8. 'y' → logprob: -17.50000762939453
    9. '```' → logprob: -18.37500762939453
    10. '),' → logprob: -18.37500762939453

Token 81: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03805446997284889
    2. ')' → logprob: -3.2880544662475586
    3. ')))' → logprob: -12.038054466247559
    4. '))
' → logprob: -12.413054466247559
    5. ' ))' → logprob: -13.288054466247559
    6. '),' → logprob: -14.288054466247559
    7. ' )' → logprob: -15.913054466247559
    8. ')
' → logprob: -16.288055419921875
    9. '));' → logprob: -16.288055419921875
    10. '   ' → logprob: -16.538055419921875

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3038233518600464
    2. '
' → logprob: -1.8038233518600464
    3. '    
' → logprob: -2.803823471069336
    4. ' while' → logprob: -3.553823471069336
    5. '	while' → logprob: -5.803823471069336
    6. 'while' → logprob: -5.928823471069336
    7. '```' → logprob: -6.303823471069336
    8. '<|end|>' → logprob: -8.428823471069336
    9. '	
' → logprob: -8.928823471069336
    10. '  
' → logprob: -9.303823471069336

Token 83: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.41143515706062317
    2. ' while' → logprob: -1.1614351272583008
    3. '	while' → logprob: -4.286435127258301
    4. '   ' → logprob: -4.661435127258301
    5. '```' → logprob: -7.411435127258301
    6. '
' → logprob: -8.1614351272583
    7. '    
' → logprob: -9.0364351272583
    8. 'While' → logprob: -10.7864351272583
    9. ' 
' → logprob: -11.2864351272583
    10. '``' → logprob: -12.7864351272583

Token 84: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.07891678065061569
    2. 'q' → logprob: -2.5789167881011963
    3. ' ' → logprob: -11.453916549682617
    4. ' len' → logprob: -11.578916549682617
    5. '	q' → logprob: -12.453916549682617
    6. '   ' → logprob: -13.953916549682617
    7. 'len' → logprob: -14.203916549682617
    8. '(q' → logprob: -14.328916549682617
    9. ' ' → logprob: -14.578916549682617
    10. '  ' → logprob: -15.203916549682617

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -9.019237768370658e-05
    2. '):' → logprob: -10.750090599060059
    3. '>:' → logprob: -11.000090599060059
    4. ':not' → logprob: -11.375090599060059
    5. '.:' → logprob: -11.625090599060059
    6. ':**' → logprob: -11.875090599060059
    7. '.p' → logprob: -12.125090599060059
    8. '.' → logprob: -12.500090599060059
    9. ':p' → logprob: -12.625090599060059
    10. '.pop' → logprob: -13.000090599060059

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023572142235934734
    2. 'x' → logprob: -7.377357006072998
    3. '        
' → logprob: -7.627357006072998
    4. ',' → logprob: -7.877357006072998
    5. ' x' → logprob: -9.127357482910156
    6. '   ' → logprob: -9.252357482910156
    7. '`' → logprob: -9.752357482910156
    8. '(' → logprob: -9.752357482910156
    9. '(x' → logprob: -9.752357482910156
    10. '```' → logprob: -9.877357482910156

Token 87: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.029798047617077827
    2. ' x' → logprob: -3.5297980308532715
    3. '   ' → logprob: -10.65479850769043
    4. 'cx' → logprob: -11.40479850769043
    5. 'cur' → logprob: -12.40479850769043
    6. '```' → logprob: -12.77979850769043
    7. '	x' → logprob: -13.02979850769043
    8. ' cx' → logprob: -13.52979850769043
    9. ' ' → logprob: -14.15479850769043
    10. ' cur' → logprob: -14.52979850769043

Token 88: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1554011106491089
    2. ',y' → logprob: -2.0304012298583984
    3. ',q' → logprob: -4.405401229858398
    4. ',x' → logprob: -8.405401229858398
    5. ',n' → logprob: -10.030401229858398
    6. ',d' → logprob: -10.655401229858398
    7. ',next' → logprob: -10.655401229858398
    8. ',p' → logprob: -10.780401229858398
    9. ',w' → logprob: -11.280401229858398
    10. ' ,' → logprob: -11.280401229858398

Token 89: '=q' (ID: 151306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6941170692443848
    2. '=q' → logprob: -0.6941170692443848
    3. ' =' → logprob: -6.944117069244385
    4. '=x' → logprob: -14.069116592407227
    5. '=

' → logprob: -14.069116592407227
    6. '=k' → logprob: -14.194116592407227
    7. '=d' → logprob: -14.319116592407227
    8. '=j' → logprob: -15.194116592407227
    9. '=
' → logprob: -15.194116592407227
    10. '=_' → logprob: -15.319116592407227

Token 90: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -2.081584716506768e-05
    2. '.pop' → logprob: -11.250020980834961
    3. '.' → logprob: -12.250020980834961
    4. 'p' → logprob: -13.625020980834961
    5. 'opleft' → logprob: -13.875020980834961
    6. '   ' → logprob: -15.250020980834961
    7. '=p' → logprob: -15.750020980834961
    8. ')p' → logprob: -15.750020980834961
    9. ',p' → logprob: -16.37502098083496
    10. ' .' → logprob: -16.75002098083496

Token 91: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.029273059219121933
    2. 'op' → logprob: -3.77927303314209
    3. 'opl' → logprob: -5.27927303314209
    4. 'ople' → logprob: -7.02927303314209
    5. 'opt' → logprob: -10.65427303314209
    6. 'o' → logprob: -13.02927303314209
    7. 'opf' → logprob: -14.65427303314209
    8. 'opu' → logprob: -14.90427303314209
    9. 'opup' → logprob: -15.65427303314209
    10. 'opc' → logprob: -15.77927303314209

Token 92: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0024931374937295914
    2. '(' → logprob: -6.002492904663086
    3. '()
' → logprob: -11.127492904663086
    4. ')' → logprob: -14.127492904663086
    5. '()

' → logprob: -14.127492904663086
    6. ' ()' → logprob: -15.252492904663086
    7. '()`' → logprob: -15.252492904663086
    8. '()
' → logprob: -15.502492904663086
    9. '(
' → logprob: -15.877492904663086
    10. '()]' → logprob: -16.002492904663086

Token 93: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7700876593589783
    2. ' for' → logprob: -1.145087718963623
    3. 'for' (adapté à ' for') → logprob: -1.895087718963623
    4. '<|end|>' → logprob: -3.145087718963623
    5. ' 
' → logprob: -4.020087718963623
    6. ' ' → logprob: -6.520087718963623
    7. '   ' → logprob: -6.645087718963623
    8. '       ' → logprob: -6.770087718963623
    9. '    
' → logprob: -7.020087718963623
    10. '  
' → logprob: -7.520087718963623

Token 95: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.038101620972156525
    2. ' dx' → logprob: -3.2881016731262207
    3. 'd' → logprob: -10.038101196289062
    4. 'nx' → logprob: -12.038101196289062
    5. '_dx' → logprob: -12.663101196289062
    6. '```' → logprob: -12.913101196289062
    7. '	d' → logprob: -13.538101196289062
    8. ' d' → logprob: -13.913101196289062
    9. 'DX' → logprob: -14.038101196289062
    10. '(dx' → logprob: -14.288101196289062

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012128500267863274
    2. ',d' → logprob: -4.5121283531188965
    3. ',y' → logprob: -6.8871283531188965
    4. ' ,' → logprob: -10.262128829956055
    5. ',int' → logprob: -12.387128829956055
    6. ',w' → logprob: -12.387128829956055
    7. ',user' → logprob: -12.387128829956055
    8. ',n' → logprob: -13.137128829956055
    9. ',de' → logprob: -13.137128829956055
    10. ',my' → logprob: -13.637128829956055

Token 97: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.002475777640938759
    2. ' dy' → logprob: -6.002475738525391
    3. 'd' → logprob: -17.12747573852539
    4. '.dy' → logprob: -17.37747573852539
    5. 'Dy' → logprob: -19.37747573852539
    6. 'dym' → logprob: -19.50247573852539
    7. 'ddy' → logprob: -20.00247573852539
    8. '	d' → logprob: -20.25247573852539
    9. 'dyr' → logprob: -20.62747573852539
    10. ' ' → logprob: -20.62747573852539

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012531078420579433
    2. 'in' → logprob: -4.387531280517578
    3. '<|end|>' → logprob: -11.012531280517578
    4. ',' → logprob: -13.262531280517578
    5. ' ' → logprob: -13.387531280517578
    6. 'In' → logprob: -14.262531280517578
    7. ')' → logprob: -15.012531280517578
    8. ' ,' → logprob: -16.012531280517578
    9. '<|end|>' → logprob: -16.012531280517578
    10. 'inthe' → logprob: -16.262531280517578

Token 99: ' DIR' (ID: 83023)
  Prédit: 'DIR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIR' → logprob: -0.014165159314870834
    2. ' DIR' → logprob: -4.264164924621582
    3. ' ' → logprob: -14.514164924621582
    4. 'DR' → logprob: -14.889164924621582
    5. 'D' → logprob: -15.014164924621582
    6. ' DIRE' → logprob: -16.1391658782959
    7. 'DI' → logprob: -16.2641658782959
    8. 'DIRECT' → logprob: -16.2641658782959
    9. '_DIR' → logprob: -16.3891658782959
    10. ' ' → logprob: -17.1391658782959

Token 100: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.9504606825648807e-05
    2. 's' → logprob: -11.000019073486328
    3. '<|end|>' → logprob: -13.375019073486328
    4. ' S' → logprob: -15.000019073486328
    5. '```' → logprob: -15.875019073486328
    6. 'Ss' → logprob: -16.000019073486328
    7. ',' → logprob: -16.000019073486328
    8. '[' → logprob: -16.937519073486328
    9. 'SR' → logprob: -16.937519073486328
    10. '2' → logprob: -17.062519073486328

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011796315666288137
    2. '<|end|>' → logprob: -7.2511796951293945
    3. ' :' → logprob: -7.8761796951293945
    4. '):' → logprob: -10.126179695129395
    5. '<|end|>' → logprob: -11.376179695129395
    6. ':
' → logprob: -11.501179695129395
    7. ',' → logprob: -11.626179695129395
    8. ':**' → logprob: -12.126179695129395
    9. ')' → logprob: -12.251179695129395
    10. ' if' → logprob: -13.501179695129395

Token 102: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' nx' (ID: 50118)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.035225775092840195
    2. '<|end|>' → logprob: -4.285225868225098
    3. ' 
' → logprob: -4.535225868225098
    4. 'x' → logprob: -5.035225868225098
    5. ' (' → logprob: -6.785225868225098
    6. ' x' → logprob: -7.910225868225098
    7. 's' → logprob: -8.160225868225098
    8. '(space' → logprob: -8.785225868225098
    9. ' ' → logprob: -8.910225868225098
    10. '(s' → logprob: -8.910225868225098

Token 104: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.046202730387449265
    2. ' =' → logprob: -3.2962026596069336
    3. '=x' → logprob: -5.046202659606934
    4. '=n' → logprob: -6.921202659606934
    5. ',' → logprob: -7.296202659606934
    6. ',n' → logprob: -11.671202659606934
    7. '=int' → logprob: -11.921202659606934
    8. ',x' → logprob: -12.171202659606934
    9. ' ,' → logprob: -13.296202659606934
    10. 'x' → logprob: -14.296202659606934

Token 105: 'ny' (ID: 3008)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00038348292582668364
    2. ' x' → logprob: -7.875383377075195
    3. '=' → logprob: -13.750383377075195
    4. ' ' → logprob: -14.375383377075195
    5. '0' → logprob: -14.625383377075195
    6. ' =' → logprob: -14.875383377075195
    7. '<|end|>' → logprob: -15.000383377075195
    8. '=x' → logprob: -15.500383377075195
    9. ')x' → logprob: -16.250383377075195
    10. '```' → logprob: -16.500383377075195

Token 106: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.039039403200149536
    2. ' =' → logprob: -3.289039373397827
    3. '=x' → logprob: -6.914039611816406
    4. '=n' → logprob: -12.789039611816406
    5. '=
' → logprob: -15.664039611816406
    6. '=y' → logprob: -15.914039611816406
    7. '=

' → logprob: -16.289039611816406
    8. '＝' → logprob: -16.414039611816406
    9. '=int' → logprob: -17.164039611816406
    10. '=ax' → logprob: -17.164039611816406

Token 107: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0232709851115942
    2. ' +' → logprob: -3.773271083831787
    3. '+x' → logprob: -10.773270606994629
    4. '+d' → logprob: -13.023270606994629
    5. '+n' → logprob: -14.023270606994629
    6. '+,' → logprob: -15.023270606994629
    7. '+
' → logprob: -15.398270606994629
    8. '＋' → logprob: -15.773270606994629
    9. '+xml' → logprob: -16.398271560668945
    10. '+D' → logprob: -16.398271560668945

Token 108: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -5.407366916188039e-05
    2. ' dx' → logprob: -9.875054359436035
    3. '1' → logprob: -13.875054359436035
    4. '(dx' → logprob: -14.000054359436035
    5. ' ' → logprob: -14.875054359436035
    6. '_dx' → logprob: -16.00005340576172
    7. 'd' → logprob: -16.62505340576172
    8. '.dx' → logprob: -16.75005340576172
    9. '   ' → logprob: -16.75005340576172
    10. '[' → logprob: -17.25005340576172

Token 109: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.1269940435886383
    2. ',' → logprob: -2.1269941329956055
    3. ' ,' → logprob: -9.626994132995605
    4. ',x' → logprob: -16.75199317932129
    5. ',n' → logprob: -17.37699317932129
    6. ',
' → logprob: -17.87699317932129
    7. ',v' → logprob: -19.12699317932129
    8. ',Y' → logprob: -19.12699317932129
    9. ',

' → logprob: -20.25199317932129
    10. ',
' → logprob: -20.37699317932129

Token 110: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.7697225252486533e-06
    2. ' +' → logprob: -12.875003814697266
    3. '+d' → logprob: -14.125003814697266
    4. '+y' → logprob: -15.625003814697266
    5. '<|end|>' → logprob: -16.125003814697266
    6. '+
' → logprob: -18.375003814697266
    7. '＋' → logprob: -19.000003814697266
    8. '+n' → logprob: -19.125003814697266
    9. '+j' → logprob: -19.125003814697266
    10. '+r' → logprob: -20.250003814697266

Token 111: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.024464670568704605
    2. 'dx' → logprob: -3.7744646072387695
    3. ' dy' → logprob: -6.8994646072387695
    4. '1' → logprob: -9.02446460723877
    5. 'y' → logprob: -10.89946460723877
    6. 'dz' → logprob: -11.02446460723877
    7. 'x' → logprob: -11.27446460723877
    8. '0' → logprob: -11.39946460723877
    9. ' dx' → logprob: -11.52446460723877
    10. 'd' → logprob: -12.14946460723877

Token 112: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3887331783771515
    2. 'if' (adapté à ' if') → logprob: -2.138733148574829
    3. '
' → logprob: -2.513733148574829
    4. '<|end|>' → logprob: -2.763733148574829
    5. '           ' → logprob: -3.138733148574829
    6. ' 
' → logprob: -4.888733386993408
    7. '            ' → logprob: -5.388733386993408
    8. '\n' → logprob: -6.513733386993408
    9. '            
' → logprob: -6.513733386993408
    10. ' ' → logprob: -8.01373291015625

Token 115: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6934477090835571
    2. ' ' → logprob: -0.6934477090835571
    3. ' nx' → logprob: -9.193448066711426
    4. 'nx' → logprob: -9.318448066711426
    5. '(nx' → logprob: -9.818448066711426
    6. ' ' → logprob: -10.818448066711426
    7. ' not' → logprob: -11.068448066711426
    8. ' (' → logprob: -12.193448066711426
    9. '(' → logprob: -12.818448066711426
    10. 'not' → logprob: -13.568448066711426

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018007232574746013
    2. ' ' → logprob: -6.376800537109375
    3. 'nx' → logprob: -9.876800537109375
    4. '(nx' → logprob: -10.501800537109375
    5. ' nx' → logprob: -11.376800537109375
    6. ' not' → logprob: -13.001800537109375
    7. 'not' → logprob: -13.001800537109375
    8. '(' → logprob: -13.626800537109375
    9. '   ' → logprob: -14.501800537109375
    10. ' (' → logprob: -14.501800537109375

Token 117: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.47408533096313477
    2. ' <=' → logprob: -0.9740853309631348
    3. '<' → logprob: -12.349084854125977
    4. ' ' → logprob: -13.224084854125977
    5. ']<=' → logprob: -14.599084854125977
    6. '<len' → logprob: -14.974084854125977
    7. ')<=' → logprob: -15.099084854125977
    8. ' <' → logprob: -15.349084854125977
    9. '[' → logprob: -15.849084854125977
    10. ' ≤' → logprob: -16.099084854125977

Token 118: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0009336133953183889
    2. ' nx' → logprob: -7.000933647155762
    3. '(nx' → logprob: -10.750933647155762
    4. 'n' → logprob: -14.750933647155762
    5. 'xn' → logprob: -16.750932693481445
    6. 'x' → logprob: -17.125932693481445
    7. 'ny' → logprob: -17.250932693481445
    8. '
' → logprob: -17.500932693481445
    9. '<n' → logprob: -18.250932693481445
    10. ':n' → logprob: -18.500932693481445

Token 119: '<X' (ID: 126345)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.006946010515093803
    2. '<X' → logprob: -5.006946086883545
    3. '<len' → logprob: -9.756945610046387
    4. 'and' → logprob: -10.006945610046387
    5. '<x' → logprob: -10.881945610046387
    6. ' and' → logprob: -11.131945610046387
    7. '<User' → logprob: -11.506945610046387
    8. ' <' → logprob: -11.506945610046387
    9. '<ID' → logprob: -11.631945610046387
    10. '<n' → logprob: -11.631945610046387

Token 120: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3868752717971802
    2. 'and' → logprob: -1.1368752717971802
    3. ' ' → logprob: -12.51187515258789
    4. '           ' → logprob: -15.26187515258789
    5. '	and' → logprob: -15.88687515258789
    6. '            ' → logprob: -17.01187515258789
    7. '   ' → logprob: -17.51187515258789
    8. '```' → logprob: -17.88687515258789
    9. '               ' → logprob: -18.13687515258789
    10. '0' → logprob: -18.26187515258789

Token 121: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1797645390033722
    2. '0' → logprob: -1.8047645092010498
    3. '<|end|>' → logprob: -11.554764747619629
    4. ' ' → logprob: -11.804764747619629
    5. ' 
' → logprob: -14.742264747619629
    6. '  ' → logprob: -14.992264747619629
    7. 'y' → logprob: -15.242264747619629
    8. ',' → logprob: -15.429764747619629
    9. '    ' → logprob: -15.742264747619629
    10. '<|end|>' → logprob: -16.179763793945312

Token 122: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.553032628493384e-05
    2. ' ' → logprob: -9.500075340270996
    3. 'ny' → logprob: -14.375075340270996
    4. ' ny' → logprob: -18.250076293945312
    5. '   ' → logprob: -18.625076293945312
    6. ' ' → logprob: -19.125076293945312
    7. '<|end|>' → logprob: -19.375076293945312
    8. '  ' → logprob: -19.625076293945312
    9. '۰' → logprob: -19.875076293945312
    10. '    ' → logprob: -20.125076293945312

Token 123: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0019749074708670378
    2. ' <' → logprob: -7.751975059509277
    3. '<len' → logprob: -7.876975059509277
    4. 'and' → logprob: -7.876975059509277
    5. ' ' → logprob: -8.126975059509277
    6. ' and' → logprob: -9.126975059509277
    7. 'Y' → logprob: -9.376975059509277
    8. 'y' → logprob: -9.376975059509277
    9. '<n' → logprob: -9.501975059509277
    10. '<num' → logprob: -10.501975059509277

Token 124: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.006786066107451916
    2. 'Y' → logprob: -5.381785869598389
    3. 'y' → logprob: -6.256785869598389
    4. ' ny' → logprob: -8.381786346435547
    5. 'yn' → logprob: -11.506786346435547
    6. '
' → logprob: -13.631786346435547
    7. 'NY' → logprob: -13.631786346435547
    8. 'Ny' → logprob: -14.631786346435547
    9. ' Y' → logprob: -14.756786346435547
    10. 'ry' → logprob: -15.006786346435547

Token 125: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00032378386822529137
    2. 'Y' → logprob: -8.875324249267578
    3. ' <' → logprob: -8.875324249267578
    4. '<len' → logprob: -11.750324249267578
    5. '<X' → logprob: -11.875324249267578
    6. '<User' → logprob: -12.375324249267578
    7. ' Y' → logprob: -12.750324249267578
    8. ' ' → logprob: -13.250324249267578
    9. '<View' → logprob: -13.500324249267578
    10. '<|end|>' → logprob: -13.500324249267578

Token 126: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -2.8087270038668066e-05
    2. ' Y' → logprob: -10.500027656555176
    3. '	Y' → logprob: -16.125028610229492
    4. '
' → logprob: -16.500028610229492
    5. ' ' → logprob: -16.750028610229492
    6. 'y' → logprob: -17.250028610229492
    7. '<|end|>' → logprob: -17.750028610229492
    8. '   ' → logprob: -17.875028610229492
    9. 'X' → logprob: -17.875028610229492
    10. '>' → logprob: -18.000028610229492

Token 127: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012541436590254307
    2. 'and' → logprob: -4.3875412940979
    3. ':' → logprob: -10.887541770935059
    4. ':
' → logprob: -12.262541770935059
    5. ' ' → logprob: -13.262541770935059
    6. '           ' → logprob: -13.387541770935059
    7. '<|end|>' → logprob: -13.387541770935059
    8. '	and' → logprob: -13.762541770935059
    9. ' ' → logprob: -14.887541770935059
    10. '            ' → logprob: -15.012541770935059

Token 128: ' dist' (ID: 3601)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2703264057636261
    2. ' dist' → logprob: -1.7703263759613037
    3. 'map' → logprob: -2.8953263759613037
    4. 'dist' → logprob: -4.520326614379883
    5. ' not' → logprob: -8.145326614379883
    6. ' ' → logprob: -9.895326614379883
    7. '	map' → logprob: -11.020326614379883
    8. 'not' → logprob: -11.207826614379883
    9. '(map' → logprob: -11.520326614379883
    10. '(dist' → logprob: -12.020326614379883

Token 129: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.664371848164592e-05
    2. '[' → logprob: -11.250016212463379
    3. '```' → logprob: -13.125016212463379
    4. '<n' → logprob: -14.125016212463379
    5. 'nx' → logprob: -15.250016212463379
    6. '(nx' → logprob: -15.375016212463379
    7. '	n' → logprob: -15.500016212463379
    8. 'n' → logprob: -17.250017166137695
    9. '   ' → logprob: -17.875017166137695
    10. ' [' → logprob: -18.125017166137695

Token 130: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.221884101862088e-05
    2. '[n' → logprob: -9.625092506408691
    3. '[x' → logprob: -10.625092506408691
    4. '[' → logprob: -13.500092506408691
    5. 'nx' → logprob: -16.125091552734375
    6. '][' → logprob: -16.375091552734375
    7. '```' → logprob: -16.375091552734375
    8. ']' → logprob: -17.625091552734375
    9. '(nx' → logprob: -17.875091552734375
    10. 'n' → logprob: -18.125091552734375

Token 131: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.06251845508813858
    2. '][' → logprob: -3.437518358230591
    3. '[' → logprob: -3.562518358230591
    4. '"][' → logprob: -11.062518119812012
    5. '(nx' → logprob: -11.187518119812012
    6. 'nx' → logprob: -11.812518119812012
    7. ' ][' → logprob: -11.937518119812012
    8. '[N' → logprob: -12.062518119812012
    9. '```' → logprob: -12.062518119812012
    10. ''][' → logprob: -12.062518119812012

Token 132: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -4.842555426876061e-06
    2. ' ny' → logprob: -12.500004768371582
    3. 'nyi' → logprob: -14.500004768371582
    4. 'n' → logprob: -15.000004768371582
    5. ''ny' → logprob: -17.2500057220459
    6. 'y' → logprob: -17.3750057220459
    7. 'yn' → logprob: -17.5000057220459
    8. 'ney' → logprob: -18.0000057220459
    9. 'nye' → logprob: -18.2500057220459
    10. 'ni' → logprob: -18.2500057220459

Token 133: ']==' (ID: 34128)
  Prédit: '==-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==-' → logprob: -0.058024413883686066
    2. '==' → logprob: -2.9330244064331055
    3. ' ==' → logprob: -6.5580244064331055
    4. ']==' → logprob: -6.6830244064331055
    5. '=' → logprob: -8.433024406433105
    6. '<' → logprob: -8.683024406433105
    7. ')==' → logprob: -10.058024406433105
    8. '```' → logprob: -11.433024406433105
    9. '==
' → logprob: -11.808024406433105
    10. ')' → logprob: -12.058024406433105

Token 134: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.6240566083070007e-06
    2. ' -' → logprob: -13.375001907348633
    3. '   ' → logprob: -19.750001907348633
    4. '```' → logprob: -19.875001907348633
    5. '−' → logprob: -20.000001907348633
    6. '‌' → logprob: -20.750001907348633
    7. '	' → logprob: -21.500001907348633
    8. ' ' → logprob: -21.750001907348633
    9. '(-' → logprob: -21.875001907348633
    10. '-
' → logprob: -21.875001907348633

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.75001049041748
    3. '```' → logprob: -14.06251049041748
    4. 'and' → logprob: -14.93751049041748
    5. '-' → logprob: -15.87501049041748
    6. '<|end|>' → logprob: -16.062511444091797
    7. '...' → logprob: -16.125011444091797
    8. '   ' → logprob: -16.187511444091797
    9. ' and' → logprob: -16.500011444091797
    10. ',' → logprob: -16.500011444091797

Token 136: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.043452877551317215
    2. 'and' → logprob: -3.1684529781341553
    3. '<|end|>' → logprob: -7.918452739715576
    4. ':' → logprob: -9.793453216552734
    5. '	and' → logprob: -11.293453216552734
    6. '<|end|>' → logprob: -12.168453216552734
    7. ' ' → logprob: -12.293453216552734
    8. ':
' → logprob: -13.168453216552734
    9. ')' → logprob: -13.543453216552734
    10. '           ' → logprob: -13.543453216552734

Token 137: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.14293351769447327
    2. ' map' → logprob: -2.0179336071014404
    3. ' not' → logprob: -8.89293384552002
    4. 'not' → logprob: -9.64293384552002
    5. '   ' → logprob: -10.01793384552002
    6. ' ' → logprob: -12.89293384552002
    7. '	map' → logprob: -13.14293384552002
    8. '(map' → logprob: -13.26793384552002
    9. '    ' → logprob: -13.51793384552002
    10. '```' → logprob: -14.14293384552002

Token 138: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00031532408320344985
    2. '[n' → logprob: -8.12531566619873
    3. '[' → logprob: -12.00031566619873
    4. '```' → logprob: -12.00031566619873
    5. 'nx' → logprob: -12.50031566619873
    6. 'n' → logprob: -13.75031566619873
    7. '[c' → logprob: -14.50031566619873
    8. 'x' → logprob: -15.25031566619873
    9. '[x' → logprob: -15.62531566619873
    10. 'nc' → logprob: -16.250314712524414

Token 139: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.1398757123970427e-05
    2. '[' → logprob: -12.625011444091797
    3. '```' → logprob: -12.750011444091797
    4. '
' → logprob: -13.875011444091797
    5. '][' → logprob: -14.125011444091797
    6. ' [' → logprob: -14.500011444091797
    7. '[
' → logprob: -14.500011444091797
    8. '[x' → logprob: -14.750011444091797
    9. '\[' → logprob: -14.750011444091797
    10. '<n' → logprob: -15.125011444091797

Token 140: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.511406809295295e-06
    2. '[x' → logprob: -13.000006675720215
    3. '][' → logprob: -13.500006675720215
    4. ']' → logprob: -14.000006675720215
    5. 'X' → logprob: -14.750006675720215
    6. '[n' → logprob: -14.875006675720215
    7. '[' → logprob: -14.875006675720215
    8. '```' → logprob: -15.125006675720215
    9. '(nx' → logprob: -15.250006675720215
    10. 'nx' → logprob: -15.375006675720215

Token 141: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007781722117215395
    2. '[n' → logprob: -4.882781505584717
    3. ']' → logprob: -9.007781982421875
    4. '[' → logprob: -10.882781982421875
    5. ' ][' → logprob: -11.007781982421875
    6. '"][' → logprob: -12.257781982421875
    7. ''][' → logprob: -13.007781982421875
    8. '<n' → logprob: -13.507781982421875
    9. '(nx' → logprob: -13.507781982421875
    10. 'nx' → logprob: -14.007781982421875

Token 142: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -2.3199920178740285e-05
    2. 'nx' → logprob: -10.750022888183594
    3. 'n' → logprob: -14.125022888183594
    4. '][' → logprob: -14.875022888183594
    5. ' ny' → logprob: -15.375022888183594
    6. 'nj' → logprob: -15.875022888183594
    7. ']' → logprob: -16.125022888183594
    8. 'y' → logprob: -16.250022888183594
    9. '```' → logprob: -16.875022888183594
    10. 'nyi' → logprob: -18.125022888183594

Token 143: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.592303991317749
    2. ']' → logprob: -1.217303991317749
    3. ']=='' → logprob: -2.717303991317749
    4. ']!=' → logprob: -3.342303991317749
    5. ']!='' → logprob: -3.467303991317749
    6. ')' → logprob: -5.467304229736328
    7. '!=' → logprob: -5.842304229736328
    8. '!='' → logprob: -5.967304229736328
    9. '==' → logprob: -5.967304229736328
    10. '=='' → logprob: -6.217304229736328

Token 144: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.020999711006879807
    2. ''' → logprob: -4.020999908447266
    3. '0' → logprob: -6.395999908447266
    4. '1' → logprob: -7.520999908447266
    5. '.' → logprob: -8.145999908447266
    6. '"."' → logprob: -9.020999908447266
    7. ''o' → logprob: -9.895999908447266
    8. '".' → logprob: -10.145999908447266
    9. ''#' → logprob: -10.395999908447266
    10. ''O' → logprob: -10.770999908447266

Token 145: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.18605341017246246
    2. ''' → logprob: -2.811053514480591
    3. ':' → logprob: -3.186053514480591
    4. ''):' → logprob: -3.561053514480591
    5. '):' → logprob: -4.561053276062012
    6. ' ':' → logprob: -4.561053276062012
    7. '':
' → logprob: -4.936053276062012
    8. ')' → logprob: -5.811053276062012
    9. ''):
' → logprob: -6.061053276062012
    10. ' '' → logprob: -6.186053276062012

Token 146: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018437055870890617
    2. '<|end|>' → logprob: -5.143436908721924
    3. '       ' → logprob: -6.018436908721924
    4. ' ' → logprob: -6.018436908721924
    5. '                
' → logprob: -6.268436908721924
    6. '           ' → logprob: -6.268436908721924
    7. '                ' → logprob: -6.768436908721924
    8. ' 
' → logprob: -7.643436908721924
    9. '   ' → logprob: -7.893436908721924
    10. 'dist' → logprob: -8.018437385559082

Token 147: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.008837212808430195
    2. ' dist' → logprob: -4.7588372230529785
    3. '               ' → logprob: -8.75883674621582
    4. '	dist' → logprob: -11.13383674621582
    5. '                ' → logprob: -11.25883674621582
    6. '                   ' → logprob: -11.38383674621582
    7. '
' → logprob: -11.38383674621582
    8. '_dist' → logprob: -11.75883674621582
    9. '                
' → logprob: -12.88383674621582
    10. 'Dist' → logprob: -13.88383674621582

Token 148: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.750003814697266
    3. '```' → logprob: -14.750003814697266
    4. ' [' → logprob: -16.625003814697266
    5. '[
' → logprob: -17.000003814697266
    6. '[x' → logprob: -17.500003814697266
    7. '[next' → logprob: -17.750003814697266
    8. '
' → logprob: -18.500003814697266
    9. '<n' → logprob: -18.500003814697266
    10. '][' → logprob: -18.500003814697266

Token 149: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.933173426659778e-05
    2. '[n' → logprob: -10.750069618225098
    3. 'nx' → logprob: -10.875069618225098
    4. '[x' → logprob: -11.250069618225098
    5. '[' → logprob: -12.000069618225098
    6. '][' → logprob: -12.625069618225098
    7. '(nx' → logprob: -12.750069618225098
    8. ' nx' → logprob: -13.625069618225098
    9. 'sx' → logprob: -14.750069618225098
    10. '```' → logprob: -14.875069618225098

Token 150: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2760666310787201
    2. '[n' → logprob: -1.7760666608810425
    3. '[' → logprob: -2.651066541671753
    4. '"][' → logprob: -8.776066780090332
    5. '```' → logprob: -8.901066780090332
    6. ''][' → logprob: -9.026066780090332
    7. ']' → logprob: -9.026066780090332
    8. 'n' → logprob: -9.276066780090332
    9. ' ][' → logprob: -9.276066780090332
    10. '(nx' → logprob: -9.651066780090332

Token 151: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.008800225332379341
    2. 'nx' → logprob: -4.758800029754639
    3. 'n' → logprob: -10.133800506591797
    4. ' ny' → logprob: -10.258800506591797
    5. 'y' → logprob: -10.883800506591797
    6. '1' → logprob: -10.883800506591797
    7. '```' → logprob: -11.133800506591797
    8. '(nx' → logprob: -11.508800506591797
    9. ' ' → logprob: -12.008800506591797
    10. '
' → logprob: -12.133800506591797

Token 152: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5811040997505188
    2. ']=' → logprob: -0.8311040997505188
    3. ']' → logprob: -6.081104278564453
    4. ')=' → logprob: -6.206104278564453
    5. ' =' → logprob: -7.206104278564453
    6. '=n' → logprob: -10.456104278564453
    7. '=q' → logprob: -11.081104278564453
    8. ')' → logprob: -11.831104278564453
    9. ' ]' → logprob: -11.831104278564453
    10. ']+=' → logprob: -12.081104278564453

Token 153: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00043126524542458355
    2. ' dist' → logprob: -7.750431060791016
    3. '	dist' → logprob: -14.750431060791016
    4. '   ' → logprob: -16.625431060791016
    5. 'dis' → logprob: -17.375431060791016
    6. 'd' → logprob: -17.500431060791016
    7. '(dist' → logprob: -17.625431060791016
    8. '0' → logprob: -18.125431060791016
    9. ' ' → logprob: -18.375431060791016
    10. '```' → logprob: -18.625431060791016

Token 154: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00018065694894175977
    2. 'x' → logprob: -8.6251802444458
    3. '```' → logprob: -15.1251802444458
    4. '[n' → logprob: -15.2501802444458
    5. '[' → logprob: -15.2501802444458
    6. '][' → logprob: -15.6251802444458
    7. '   ' → logprob: -17.625181198120117
    8. ' [' → logprob: -18.000181198120117
    9. '[s' → logprob: -18.625181198120117
    10. '[
' → logprob: -18.875181198120117

Token 155: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002690840628929436
    2. '[y' → logprob: -8.750268936157227
    3. '[' → logprob: -9.750268936157227
    4. 'y' → logprob: -10.750268936157227
    5. ' ][' → logprob: -11.125268936157227
    6. '[x' → logprob: -12.125268936157227
    7. '```' → logprob: -12.500268936157227
    8. 'x' → logprob: -13.000268936157227
    9. '"][' → logprob: -13.375268936157227
    10. '[n' → logprob: -14.625268936157227

Token 156: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.2664456789934775e-06
    2. ' y' → logprob: -14.250000953674316
    3. 'x' → logprob: -15.125000953674316
    4. '
' → logprob: -16.125001907348633
    5. ']' → logprob: -16.500001907348633
    6. '

' → logprob: -18.125001907348633
    7. '	y' → logprob: -18.125001907348633
    8. ' ' → logprob: -18.625001907348633
    9. '
' → logprob: -18.750001907348633
    10. '   ' → logprob: -18.875001907348633

Token 157: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.014196529053151608
    2. '+' → logprob: -4.514196395874023
    3. ']' → logprob: -5.764196395874023
    4. '```' → logprob: -13.014196395874023
    5. ' +' → logprob: -13.889196395874023
    6. '[' → logprob: -14.014196395874023
    7. '}+' → logprob: -14.139196395874023
    8. ']+=' → logprob: -14.764196395874023
    9. ')+' → logprob: -15.014196395874023
    10. '+]' → logprob: -15.889196395874023

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -16.000011444091797
    4. '6' → logprob: -17.375011444091797
    5. '
' → logprob: -17.750011444091797
    6. '   ' → logprob: -17.750011444091797
    7. '.' → logprob: -19.187511444091797
    8. ' ' → logprob: -19.312511444091797
    9. '  ' → logprob: -19.437511444091797
    10. '7' → logprob: -20.187511444091797

Token 159: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06633555889129639
    2. 'q' → logprob: -3.316335678100586
    3. '
' → logprob: -4.316335678100586
    4. '                
' → logprob: -5.316335678100586
    5. '                   ' → logprob: -5.316335678100586
    6. '
' → logprob: -7.566335678100586
    7. '	q' → logprob: -7.566335678100586
    8. ',q' → logprob: -7.566335678100586
    9. ' q' → logprob: -7.691335678100586
    10. '' → logprob: -7.816335678100586

Token 160: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02275547944009304
    2. 'q' → logprob: -4.6477556228637695
    3. '                
' → logprob: -5.1477556228637695
    4. '
' → logprob: -6.0227556228637695
    5. ' q' → logprob: -6.1477556228637695
    6. '                   ' → logprob: -7.2727556228637695
    7. '                ' → logprob: -8.14775562286377
    8. '<|end|>' → logprob: -8.52275562286377
    9. '				
' → logprob: -8.89775562286377
    10. ' 
' → logprob: -8.89775562286377

Token 161: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -2.339278580620885e-06
    2. '               ' → logprob: -13.625001907348633
    3. ' q' → logprob: -14.125001907348633
    4. '	q' → logprob: -15.375001907348633
    5. '                   ' → logprob: -15.750001907348633
    6. '```' → logprob: -18.750001907348633
    7. '           ' → logprob: -18.875001907348633
    8. '
' → logprob: -19.125001907348633
    9. '                
' → logprob: -19.625001907348633
    10. '                ' → logprob: -19.875001907348633

Token 162: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00010211274639004841
    2. '.' → logprob: -9.250102043151855
    3. 'append' → logprob: -12.875102043151855
    4. '.extend' → logprob: -13.250102043151855
    5. '.app' → logprob: -14.000102043151855
    6. '.p' → logprob: -15.250102043151855
    7. '.enqueue' → logprob: -15.500102043151855
    8. '.ap' → logprob: -16.375102996826172
    9. '.Append' → logprob: -16.750102996826172
    10. ' .' → logprob: -17.000102996826172

Token 163: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.000497032655403018
    2. '(' → logprob: -7.625496864318848
    3. '(nx' → logprob: -12.250496864318848
    4. '(n' → logprob: -13.250496864318848
    5. ' ((' → logprob: -13.375496864318848
    6. ' (' → logprob: -14.500496864318848
    7. '(
' → logprob: -15.375496864318848
    8. ' ' → logprob: -17.125497817993164
    9. ')((' → logprob: -17.875497817993164
    10. '```' → logprob: -18.125497817993164

Token 164: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0006330899195745587
    2. '(nx' → logprob: -7.375633239746094
    3. ' nx' → logprob: -12.125633239746094
    4. '```' → logprob: -14.625633239746094
    5. '(n' → logprob: -15.500633239746094
    6. 'n' → logprob: -15.625633239746094
    7. '
' → logprob: -15.625633239746094
    8. '   ' → logprob: -17.000633239746094
    9. '(' → logprob: -17.125633239746094
    10. ')' → logprob: -17.500633239746094

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02217324636876583
    2. ',n' → logprob: -4.0221734046936035
    3. '(nx' → logprob: -5.7721734046936035
    4. 'nx' → logprob: -8.022172927856445
    5. 'n' → logprob: -8.647172927856445
    6. ' ,' → logprob: -9.147172927856445
    7. '[n' → logprob: -9.397172927856445
    8. '[' → logprob: -9.647172927856445
    9. 'ny' → logprob: -10.272172927856445
    10. '+' → logprob: -10.397172927856445

Token 166: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -1.2948405128554441e-05
    2. ' ny' → logprob: -11.37501335144043
    3. 'nyi' → logprob: -14.12501335144043
    4. '```' → logprob: -15.62501335144043
    5. '
' → logprob: -16.00001335144043
    6. 'nym' → logprob: -16.75001335144043
    7. 'ney' → logprob: -17.00001335144043
    8. ' ' → logprob: -17.25001335144043
    9. '   ' → logprob: -17.50001335144043
    10. 'new' → logprob: -17.62501335144043

Token 167: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.048724301159381866
    2. ')' → logprob: -3.048724412918091
    3. '))
' → logprob: -9.048724174499512
    4. ')
' → logprob: -11.173724174499512
    5. ')))' → logprob: -12.298724174499512
    6. ' ))' → logprob: -15.423724174499512
    7. '))

' → logprob: -16.048725128173828
    8. '),' → logprob: -16.923725128173828
    9. ')}' → logprob: -17.173725128173828
    10. '))))' → logprob: -17.173725128173828

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25016456842422485
    2. 'return' → logprob: -2.00016450881958
    3. '<|end|>' → logprob: -3.12516450881958
    4. ' return' → logprob: -3.75016450881958
    5. '
' → logprob: -5.50016450881958
    6. ')' → logprob: -5.50016450881958
    7. ':return' → logprob: -6.00016450881958
    8. '    
' → logprob: -6.50016450881958
    9. '	return' → logprob: -6.75016450881958
    10. ' ' → logprob: -7.00016450881958

Token 169: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7794970870018005
    2. '   ' → logprob: -1.0294971466064453
    3. ' return' → logprob: -2.4044971466064453
    4. 'r' → logprob: -2.9044971466064453
    5. ' ' → logprob: -3.7794971466064453
    6. '    ' → logprob: -5.779497146606445
    7. '
' → logprob: -6.154497146606445
    8. ')' → logprob: -6.154497146606445
    9. '    
' → logprob: -6.404497146606445
    10. ' 
' → logprob: -6.404497146606445

Token 170: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00020425561524461955
    2. ' dist' → logprob: -8.500204086303711
    3. 'max' → logprob: -14.250204086303711
    4. '[' → logprob: -17.50020408630371
    5. '(dist' → logprob: -17.50020408630371
    6. '	dist' → logprob: -17.62520408630371
    7. ' ' → logprob: -18.12520408630371
    8. '[max' → logprob: -18.75020408630371
    9. '   ' → logprob: -19.00020408630371
    10. '_dist' → logprob: -19.50020408630371

Token 171: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: ' bfs' (ID: 147571)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.012479047290980816
    2. 'main' → logprob: -4.887478828430176
    3. ' solve' → logprob: -5.512478828430176
    4. 'solve' → logprob: -7.887478828430176
    5. ' max' → logprob: -8.762478828430176
    6. ' solution' → logprob: -9.012478828430176
    7. ' find' → logprob: -9.137478828430176
    8. 'max' → logprob: -10.887478828430176
    9. ' longest' → logprob: -11.262478828430176
    10. ' shortest' → logprob: -11.637478828430176

Token 174: '_from' (ID: 12526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5215523838996887
    2. '2' → logprob: -1.271552324295044
    3. '(start' → logprob: -2.771552324295044
    4. '1' → logprob: -4.521552562713623
    5. '_' → logprob: -4.646552562713623
    6. '_all' → logprob: -5.146552562713623
    7. '_two' → logprob: -5.271552562713623
    8. '_multiple' → logprob: -5.646552562713623
    9. '(s' → logprob: -6.146552562713623
    10. '_multi' → logprob: -6.146552562713623

Token 175: '_' (ID: 62)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5917869210243225
    2. '(start' → logprob: -1.7167868614196777
    3. 'start' → logprob: -3.3417868614196777
    4. '(s' → logprob: -3.4667868614196777
    5. 'all' → logprob: -3.4667868614196777
    6. '(x' → logprob: -3.8417868614196777
    7. '_points' → logprob: -3.9667868614196777
    8. '(points' → logprob: -4.341786861419678
    9. '_all' → logprob: -4.466786861419678
    10. '_' → logprob: -4.466786861419678

Token 176: 'ais' (ID: 1873)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.0590879917144775
    2. 'all' → logprob: -1.4340879917144775
    3. 'end' → logprob: -2.8090879917144775
    4. 's' → logprob: -3.1840879917144775
    5. 'multiple' → logprob: -3.4340879917144775
    6. 'S' → logprob: -3.6840879917144775
    7. 'J' → logprob: -4.309087753295898
    8. 'fire' → logprob: -4.434087753295898
    9. 'A' → logprob: -4.559087753295898
    10. 'points' → logprob: -4.559087753295898

Token 177: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.022053614258766174
    2. 'l' → logprob: -4.2720537185668945
    3. 'les' → logprob: -5.7720537185668945
    4. '(' → logprob: -6.7720537185668945
    5. 't' → logprob: -6.8970537185668945
    6. 'land' → logprob: -7.1470537185668945
    7. '()' → logprob: -8.647053718566895
    8. '(start' → logprob: -8.647053718566895
    9. '([]' → logprob: -8.897053718566895
    10. '((' → logprob: -9.022053718566895

Token 178: '_to' (ID: 5089)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7259594798088074
    2. '(start' → logprob: -0.7259594798088074
    3. '():' → logprob: -3.975959539413452
    4. '(x' → logprob: -4.975959300994873
    5. '(s' → logprob: -6.225959300994873
    6. '(map' → logprob: -6.350959300994873
    7. '(X' → logprob: -7.100959300994873
    8. '(a' → logprob: -7.475959300994873
    9. '(Start' → logprob: -7.850959300994873
    10. '(A' → logprob: -8.725959777832031

Token 179: '_s' (ID: 1278)
  Prédit: '_exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_exit' → logprob: -1.5646212100982666
    2. '_d' → logprob: -2.1896212100982666
    3. '_' → logprob: -2.4396212100982666
    4. '_wall' → logprob: -2.6896212100982666
    5. '_room' → logprob: -2.8146212100982666
    6. '_goal' → logprob: -3.3146212100982666
    7. '_target' → logprob: -3.4396212100982666
    8. '_corner' → logprob: -3.5646212100982666
    9. '_point' → logprob: -3.6896212100982666
    10. '_end' → logprob: -3.6896212100982666

Token 180: 'helf' (ID: 51433)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.19234226644039154
    2. 'afe' → logprob: -3.0673422813415527
    3. 'helf' → logprob: -3.6923422813415527
    4. 'tar' → logprob: -4.192342281341553
    5. 'helves' → logprob: -4.692342281341553
    6. 'tage' → logprob: -5.317342281341553
    7. 'hore' → logprob: -5.317342281341553
    8. 'ource' → logprob: -5.442342281341553
    9. 'top' → logprob: -5.442342281341553
    10. 'earch' → logprob: -5.567342281341553

Token 181: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07058149576187134
    2. '(start' → logprob: -2.6955814361572266
    3. '():' → logprob: -7.820581436157227
    4. '(s' → logprob: -9.070581436157227
    5. '(Start' → logprob: -10.195581436157227
    6. '(x' → logprob: -10.820581436157227
    7. '(a' → logprob: -11.570581436157227
    8. '()' → logprob: -11.695581436157227
    9. '(space' → logprob: -11.945581436157227
    10. '(st' → logprob: -12.445581436157227

Token 182: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001381782698445022
    2. ',' → logprob: -7.626381874084473
    3. '):' → logprob: -7.876381874084473
    4. 'C' → logprob: -8.376381874084473
    5. '[' → logprob: -9.126381874084473
    6. ')' → logprob: -10.001381874084473
    7. '_c' → logprob: -10.251381874084473
    8. 's' → logprob: -10.501381874084473
    9. ',c' → logprob: -10.876381874084473
    10. '_,' → logprob: -11.751381874084473

Token 183: ',X' (ID: 83943)
  Prédit: ',map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',map' → logprob: -0.588001549243927
    2. ',' → logprob: -0.838001549243927
    3. ',start' → logprob: -4.963001728057861
    4. ' ,' → logprob: -5.963001728057861
    5. ',m' → logprob: -7.088001728057861
    6. '):' → logprob: -7.463001728057861
    7. ',s' → logprob: -8.963001251220703
    8. '(' → logprob: -9.338001251220703
    9. ',x' → logprob: -9.463001251220703
    10. ',(' → logprob: -9.463001251220703

Token 184: ',Y' (ID: 71464)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3878651261329651
    2. ',Y' → logprob: -1.1378650665283203
    3. ' ,' → logprob: -7.51286506652832
    4. ',y' → logprob: -8.13786506652832
    5. ',map' → logprob: -9.51286506652832
    6. ',user' → logprob: -11.26286506652832
    7. ',input' → logprob: -11.76286506652832
    8. ',int' → logprob: -12.01286506652832
    9. ',start' → logprob: -12.13786506652832
    10. ',s' → logprob: -12.13786506652832

Token 185: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.215806245803833
    2. ',start' → logprob: -1.965806245803833
    3. '):' → logprob: -2.965806245803833
    4. ',s' → logprob: -6.590806007385254
    5. ',map' → logprob: -7.215806007385254
    6. ',:' → logprob: -8.965806007385254
    7. ',p' → logprob: -9.965806007385254
    8. ',x' → logprob: -10.465806007385254
    9. ' ,' → logprob: -10.590806007385254
    10. ')' → logprob: -10.840806007385254

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004024614579975605
    2. 'dist' → logprob: -6.254024505615234
    3. ' ais' → logprob: -7.629024505615234
    4. ' dist' → logprob: -7.879024505615234
    5. 's' → logprob: -8.254024505615234
    6. ' for' → logprob: -8.629024505615234
    7. 'visited' → logprob: -9.629024505615234
    8. '   ' → logprob: -9.629024505615234
    9. ' distances' → logprob: -9.754024505615234
    10. '    
' → logprob: -9.754024505615234

Token 187: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6003490090370178
    2. '   ' → logprob: -1.100348949432373
    3. ' dist' → logprob: -4.100348949432373
    4. 's' → logprob: -4.350348949432373
    5. 'ais' → logprob: -4.350348949432373
    6. 'dp' → logprob: -4.475348949432373
    7. 'result' → logprob: -4.475348949432373
    8. 'for' → logprob: -4.725348949432373
    9. 'visited' → logprob: -4.850348949432373
    10. ' ais' → logprob: -4.975348949432373

Token 188: ' For' (ID: 2214)
  Prédit: ' ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ais' → logprob: -1.1209261417388916
    2. ' dist' → logprob: -1.8709261417388916
    3. ' aisle' → logprob: -1.9959261417388916
    4. 'dist' → logprob: -2.4959261417388916
    5. ' for' → logprob: -2.7459261417388916
    6. 'for' → logprob: -3.4959261417388916
    7. ' shelf' → logprob: -3.8709261417388916
    8. ' distances' → logprob: -3.8709261417388916
    9. ' res' → logprob: -4.2459259033203125
    10. ' result' → logprob: -4.3709259033203125

Token 189: ' each' (ID: 2454)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5576083064079285
    2. 'x' → logprob: -1.1826083660125732
    3. ' i' → logprob: -2.6826083660125732
    4. ' shelf' → logprob: -4.057608127593994
    5. 'i' → logprob: -4.432608127593994
    6. 's' → logprob: -4.807608127593994
    7. ' ais' → logprob: -6.057608127593994
    8. ' row' → logprob: -6.057608127593994
    9. ' aisle' → logprob: -6.432608127593994
    10. ' _' → logprob: -6.682608127593994

Token 190: ' aisle' (ID: 99887)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.595321536064148
    2. 'x' → logprob: -0.845321536064148
    3. ' i' → logprob: -4.2203216552734375
    4. 'i' → logprob: -5.5953216552734375
    5. 's' → logprob: -8.345321655273438
    6. ' row' → logprob: -8.720321655273438
    7. ' ' → logprob: -9.720321655273438
    8. ' shelf' → logprob: -9.845321655273438
    9. ' aisle' → logprob: -10.345321655273438
    10. ' X' → logprob: -10.720321655273438

Token 191: ' cell' (ID: 4206)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026863189414143562
    2. ' ,' → logprob: -4.026863098144531
    3. '_' → logprob: -5.526863098144531
    4. '_,' → logprob: -7.026863098144531
    5. ':' → logprob: -7.276863098144531
    6. 's' → logprob: -7.776863098144531
    7. '   ' → logprob: -7.901863098144531
    8. 'row' → logprob: -7.901863098144531
    9. ' ' → logprob: -8.276863098144531
    10. ' row' → logprob: -8.401863098144531

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03459664061665535
    2. ' ,' → logprob: -3.5345966815948486
    3. '   ' → logprob: -6.0345964431762695
    4. ',
' → logprob: -7.0345964431762695
    5. ':' → logprob: -7.4095964431762695
    6. ',s' → logprob: -8.90959644317627
    7. ' (' → logprob: -9.03459644317627
    8. 's' → logprob: -9.40959644317627
    9. 'def' → logprob: -9.53459644317627
    10. ' :' → logprob: -9.53459644317627

Token 193: ' from' (ID: 591)
  Prédit: ' ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ais' → logprob: -1.0505163669586182
    2. ' distances' → logprob: -1.3005163669586182
    3. ' res' → logprob: -2.050516366958618
    4. ' result' → logprob: -2.675516366958618
    5. '   ' → logprob: -3.425516366958618
    6. 'dist' → logprob: -3.675516366958618
    7. ' aisle' → logprob: -3.925516366958618
    8. ' dist' → logprob: -3.925516366958618
    9. ' distance' → logprob: -4.175516128540039
    10. ' for' → logprob: -4.425516128540039

Token 194: ' it' (ID: 480)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8996153473854065
    2. ' range' → logprob: -2.2746152877807617
    3. 'range' → logprob: -2.5246152877807617
    4. ' ' → logprob: -2.7746152877807617
    5. ' which' → logprob: -3.0246152877807617
    6. 'x' → logprob: -3.1496152877807617
    7. ' collections' → logprob: -3.2746152877807617
    8. 'collections' → logprob: -3.2746152877807617
    9. 'enumer' → logprob: -3.3996152877807617
    10. '(' → logprob: -3.3996152877807617

Token 195: ' movement' (ID: 12772)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016051145270466805
    2. 'to' → logprob: -5.016051292419434
    3. ' ,' → logprob: -5.141051292419434
    4. ' to' → logprob: -5.766051292419434
    5. '   ' → logprob: -8.766051292419434
    6. ':' → logprob: -10.266051292419434
    7. ',to' → logprob: -10.266051292419434
    8. 'def' → logprob: -11.016051292419434
    9. ' ' → logprob: -11.391051292419434
    10. '.' → logprob: -11.516051292419434

Token 196: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4601452946662903
    2. 'is' → logprob: -2.3351452350616455
    3. 's' → logprob: -2.4601452350616455
    4. 'distance' → logprob: -3.0851452350616455
    5. ' is' → logprob: -3.4601452350616455
    6. ' to' → logprob: -3.4601452350616455
    7. ',' → logprob: -3.5851452350616455
    8. 'possible' → logprob: -4.460145473480225
    9. 'cost' → logprob: -4.960145473480225
    10. 'dist' → logprob: -5.210145473480225

Token 197: ' adjacent' (ID: 39069)
  Prédit: ' shelf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shelf' → logprob: -0.9491939544677734
    2. 'each' → logprob: -1.8241939544677734
    3. ' each' → logprob: -1.9491939544677734
    4. 's' → logprob: -2.3241939544677734
    5. 'any' → logprob: -3.3241939544677734
    6. ' any' → logprob: -3.4491939544677734
    7. ' the' → logprob: -4.074193954467773
    8. 'the' → logprob: -4.074193954467773
    9. 'a' → logprob: -4.199193954467773
    10. ' shelves' → logprob: -4.324193954467773

Token 198: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8832157254219055
    2. ' shelf' → logprob: -1.1332156658172607
    3. 'cells' → logprob: -2.7582156658172607
    4. ' cells' → logprob: -3.0082156658172607
    5. 'ais' → logprob: -3.6332156658172607
    6. ''.' → logprob: -3.6332156658172607
    7. ' shelves' → logprob: -3.8832156658172607
    8. ' aisle' → logprob: -4.00821590423584
    9. ' '.'' → logprob: -4.13321590423584
    10. ''s' → logprob: -4.25821590423584

Token 199: ' cell' (ID: 4206)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0939295291900635
    2. ' cells' → logprob: -1.2189295291900635
    3. ' is' → logprob: -1.4689295291900635
    4. 'cells' → logprob: -2.4689295291900635
    5. ':' → logprob: -4.593929290771484
    6. ',' → logprob: -4.968929290771484
    7. '_cells' → logprob: -5.343929290771484
    8. ' ' → logprob: -5.343929290771484
    9. '.' → logprob: -5.718929290771484
    10. 'positions' → logprob: -5.718929290771484

Token 200: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.38496923446655273
    2. '   ' → logprob: -1.5099692344665527
    3. 's' → logprob: -3.2599692344665527
    4. ',' → logprob: -4.509969234466553
    5. ' for' → logprob: -4.759969234466553
    6. ' ,' → logprob: -4.884969234466553
    7. ' ' → logprob: -5.259969234466553
    8. '.' → logprob: -5.384969234466553
    9. ':' → logprob: -5.759969234466553
    10. '(s' → logprob: -6.009969234466553

Token 201: ' cost' (ID: 3097)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.5395154356956482
    2. ' possible' → logprob: -1.539515495300293
    3. '1' → logprob: -2.414515495300293
    4. 'allowed' → logprob: -2.914515495300293
    5. ' allowed' → logprob: -3.289515495300293
    6. ' ' → logprob: -5.289515495300293
    7. ' valid' → logprob: -5.914515495300293
    8. ' counted' → logprob: -6.039515495300293
    9. '0' → logprob: -6.164515495300293
    10. 'consider' → logprob: -6.289515495300293

Token 202: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.056051332503557205
    2. '1' → logprob: -3.056051254272461
    3. ' =' → logprob: -6.181051254272461
    4. '0' → logprob: -6.306051254272461
    5. '+' → logprob: -7.056051254272461
    6. ' +' → logprob: -7.556051254272461
    7. '=' → logprob: -7.681051254272461
    8. ',' → logprob: -7.931051254272461
    9. ' one' → logprob: -8.306051254272461
    10. ' is' → logprob: -8.306051254272461

Token 203: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2093142718076706
    2. ' ' → logprob: -1.709314227104187
    3. '0' → logprob: -5.084314346313477
    4. '2' → logprob: -7.209314346313477
    5. '=' → logprob: -8.084314346313477
    6. '   ' → logprob: -8.834314346313477
    7. '+' → logprob: -9.084314346313477
    8. ',' → logprob: -9.959314346313477
    9. ' =' → logprob: -10.084314346313477
    10. '-' → logprob: -10.334314346313477

Token 204: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09126490354537964
    2. '
' → logprob: -3.2162649631500244
    3. ',' → logprob: -3.9662649631500244
    4. 'def' → logprob: -4.591264724731445
    5. '.' → logprob: -5.591264724731445
    6. '<|end|>' → logprob: -5.591264724731445
    7. ':' → logprob: -5.716264724731445
    8. '    
' → logprob: -5.716264724731445
    9. '    ' → logprob: -7.091264724731445
    10. ',
' → logprob: -7.716264724731445

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01664559729397297
    2. '    
' → logprob: -4.766645431518555
    3. ':' → logprob: -5.641645431518555
    4. '<|end|>' → logprob: -6.891645431518555
    5. '
' → logprob: -7.016645431518555
    6. ',' → logprob: -7.016645431518555
    7. ' 
' → logprob: -7.891645431518555
    8. 'def' → logprob: -8.391645431518555
    9. '.' → logprob: -8.391645431518555
    10. '  
' → logprob: -8.641645431518555

Token 206: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4627528190612793
    2. 'dist' → logprob: -2.0877528190612793
    3. ' dist' → logprob: -2.5877528190612793
    4. ' shelf' → logprob: -3.2127528190612793
    5. 's' → logprob: -3.9627528190612793
    6. '    
' → logprob: -4.212752819061279
    7. ' pass' → logprob: -4.212752819061279
    8. ' distances' → logprob: -4.712752819061279
    9. 'def' → logprob: -4.837752819061279
    10. ' visited' → logprob: -4.962752819061279

Token 207: ' Because' (ID: 13602)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9571873545646667
    2. 'dist' → logprob: -1.3321874141693115
    3. ' dist' → logprob: -2.3321874141693115
    4. ' ais' → logprob: -2.7071874141693115
    5. 's' → logprob: -3.5821874141693115
    6. ' shelf' → logprob: -3.7071874141693115
    7. ' res' → logprob: -4.332187175750732
    8. ' aisle' → logprob: -4.332187175750732
    9. 'cost' → logprob: -4.457187175750732
    10. 'dp' → logprob: -4.457187175750732

Token 208: ' cannot' (ID: 6284)
  Prédit: ' ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ais' → logprob: -0.2393299788236618
    2. ' aisle' → logprob: -3.2393300533294678
    3. ' shelves' → logprob: -3.4893300533294678
    4. 's' → logprob: -3.4893300533294678
    5. ' the' → logprob: -3.4893300533294678
    6. 'ais' → logprob: -3.9893300533294678
    7. 'the' → logprob: -3.9893300533294678
    8. ' shelf' → logprob: -4.114329814910889
    9. ' we' → logprob: -5.114329814910889
    10. ' in' → logprob: -5.739329814910889

Token 209: ' enter' (ID: 5747)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.5479713678359985
    2. ' move' → logprob: -2.297971248626709
    3. 'pass' → logprob: -2.422971248626709
    4. 'walk' → logprob: -2.547971248626709
    5. 'go' → logprob: -2.672971248626709
    6. ' pass' → logprob: -3.797971248626709
    7. ' go' → logprob: -4.297971248626709
    8. 'enter' → logprob: -4.547971248626709
    9. 'stand' → logprob: -5.047971248626709
    10. ' walk' → logprob: -5.047971248626709

Token 210: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2849539816379547
    2. ' shelf' → logprob: -2.284954071044922
    3. ',' → logprob: -3.909954071044922
    4. ' shelves' → logprob: -4.034954071044922
    5. ' ' → logprob: -4.284954071044922
    6. '<|end|>' → logprob: -4.409954071044922
    7. ' the' → logprob: -4.409954071044922
    8. '.' → logprob: -4.784954071044922
    9. ''s' → logprob: -4.784954071044922
    10. ' '' → logprob: -5.159954071044922

Token 211: ' cell' (ID: 4206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.870256245136261
    2. '
' → logprob: -0.995256245136261
    3. ':' → logprob: -2.495256185531616
    4. '<|end|>' → logprob: -3.370256185531616
    5. 'def' → logprob: -3.745256185531616
    6. '    
' → logprob: -4.120256423950195
    7. '  
' → logprob: -4.245256423950195
    8. ':
' → logprob: -5.370256423950195
    9. ',' → logprob: -5.370256423950195
    10. '(s' → logprob: -5.495256423950195

Token 212: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3091674745082855
    2. '
' → logprob: -1.684167504310608
    3. ':' → logprob: -3.6841673851013184
    4. '    
' → logprob: -3.8091673851013184
    5. ',' → logprob: -4.934167385101318
    6. '  
' → logprob: -5.059167385101318
    7. 'def' → logprob: -5.434167385101318
    8. ':
' → logprob: -5.934167385101318
    9. '<|end|>' → logprob: -5.934167385101318
    10. ' 
' → logprob: -6.184167385101318

Token 213: ' must' (ID: 2804)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.5613635778427124
    2. ' the' → logprob: -2.311363697052002
    3. ' but' → logprob: -2.311363697052002
    4. 'we' → logprob: -2.686363697052002
    5. ' continue' → logprob: -3.436363697052002
    6. '   ' → logprob: -3.561363697052002
    7. '#' → logprob: -3.936363697052002
    8. 'continue' → logprob: -3.936363697052002
    9. 'the' → logprob: -4.061363697052002
    10. ' return' → logprob: -4.436363697052002

Token 214: ' go' (ID: 810)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.8802279233932495
    2. 'return' → logprob: -2.005228042602539
    3. 'find' → logprob: -2.005228042602539
    4. 'move' → logprob: -2.130228042602539
    5. ' use' → logprob: -3.005228042602539
    6. 'use' → logprob: -3.130228042602539
    7. ' move' → logprob: -3.380228042602539
    8. 'consider' → logprob: -3.380228042602539
    9. ' find' → logprob: -3.505228042602539
    10. 'check' → logprob: -3.630228042602539

Token 215: ' adjacent' (ID: 39069)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.5252097845077515
    2. ' through' → logprob: -1.9002097845077515
    3. 'around' → logprob: -2.025209903717041
    4. ' around' → logprob: -2.525209903717041
    5. 'to' → logprob: -3.400209903717041
    6. ' to' → logprob: -4.775209903717041
    7. 'from' → logprob: -5.900209903717041
    8. 'adj' → logprob: -7.150209903717041
    9. 'only' → logprob: -7.650209903717041
    10. ' only' → logprob: -8.775209426879883

Token 216: ' aisle' (ID: 99887)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0722330808639526
    2. ' cells' → logprob: -1.3222330808639526
    3. '   ' → logprob: -1.5722330808639526
    4. ' to' → logprob: -2.697233200073242
    5. 'cells' → logprob: -3.947233200073242
    6. ',' → logprob: -3.947233200073242
    7. '_cells' → logprob: -4.072233200073242
    8. '_' → logprob: -4.322233200073242
    9. 's' → logprob: -4.447233200073242
    10. ' for' → logprob: -4.822233200073242

Token 217: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43042612075805664
    2. 'def' → logprob: -1.5554261207580566
    3. ':' → logprob: -2.8054261207580566
    4. '
' → logprob: -3.3054261207580566
    5. ':
' → logprob: -4.305426120758057
    6. '    
' → logprob: -5.180426120758057
    7. '(' → logprob: -5.305426120758057
    8. '():' → logprob: -6.055426120758057
    9. ',' → logprob: -6.305426120758057
    10. '():
' → logprob: -6.305426120758057

Token 218: ' pick' (ID: 5230)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1719660758972168
    2. ' shelf' → logprob: -1.7969660758972168
    3. ' access' → logprob: -1.9219660758972168
    4. 'access' → logprob: -2.421966075897217
    5. 'continue' → logprob: -3.171966075897217
    6. 'adj' → logprob: -3.296966075897217
    7. 'the' → logprob: -3.796966075897217
    8. 'get' → logprob: -3.796966075897217
    9. 'reach' → logprob: -4.296966075897217
    10. ' reach' → logprob: -4.296966075897217

Token 219: ' product' (ID: 1888)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.0685720443725586
    2. 'up' → logprob: -2.8185720443725586
    3. 'def' → logprob: -6.568572044372559
    4. '_up' → logprob: -7.068572044372559
    5. 's' → logprob: -7.193572044372559
    6. ',' → logprob: -7.318572044372559
    7. '-up' → logprob: -7.943572044372559
    8. ' ,' → logprob: -8.193572044372559
    9. ' cells' → logprob: -8.318572044372559
    10. ' the' → logprob: -8.693572044372559

Token 220: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060461025685071945
    2. '
' → logprob: -3.6854610443115234
    3. 'def' → logprob: -3.9354610443115234
    4. '    
' → logprob: -4.685461044311523
    5. ',' → logprob: -6.810461044311523
    6. '<|end|>' → logprob: -7.310461044311523
    7. '  
' → logprob: -7.810461044311523
    8. 'import' → logprob: -7.935461044311523
    9. ',
' → logprob: -8.060461044311523
    10. '#' → logprob: -8.435461044311523

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004676592070609331
    2. 'def' → logprob: -6.504676818847656
    3. '
' → logprob: -6.754676818847656
    4. ' for' → logprob: -6.879676818847656
    5. '    
' → logprob: -7.129676818847656
    6. 'for' → logprob: -10.129676818847656
    7. ' 
' → logprob: -11.129676818847656
    8. ',' → logprob: -11.254676818847656
    9. ' def' → logprob: -11.379676818847656
    10. ')' → logprob: -11.629676818847656

Token 222: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07932540029287338
    2. 'def' → logprob: -4.204325199127197
    3. 'dist' → logprob: -4.454325199127197
    4. '    
' → logprob: -4.829325199127197
    5. 'dp' → logprob: -5.329325199127197
    6. ' res' → logprob: -5.579325199127197
    7. 'result' → logprob: -5.829325199127197
    8. ' result' → logprob: -5.829325199127197
    9. '
' → logprob: -5.829325199127197
    10. 'visited' → logprob: -5.954325199127197

Token 223: ' We' (ID: 1416)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.4308066368103027
    2. 'dist' → logprob: -1.5558066368103027
    3. ' ais' → logprob: -2.5558066368103027
    4. 'dp' → logprob: -3.0558066368103027
    5. 'result' → logprob: -3.0558066368103027
    6. ' dist' → logprob: -3.1808066368103027
    7. 'visited' → logprob: -3.1808066368103027
    8. 'res' → logprob: -3.3058066368103027
    9. 'for' → logprob: -3.4308066368103027
    10. ' result' → logprob: -3.4308066368103027

Token 224: ' need' (ID: 1309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9291309714317322
    2. 'need' → logprob: -1.429131031036377
    3. 'can' → logprob: -2.304131031036377
    4. 'import' → logprob: -2.554131031036377
    5. ' need' → logprob: -2.804131031036377
    6. ' can' → logprob: -2.929131031036377
    7. ''ll' → logprob: -4.429131031036377
    8. 'continue' → logprob: -4.429131031036377
    9. 'will' → logprob: -4.554131031036377
    10. 'return' → logprob: -4.679131031036377

Token 225: ' shortest' (ID: 70564)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3180820941925049
    2. ' to' → logprob: -1.3180820941925049
    3. 'a' → logprob: -5.943081855773926
    4. ' a' → logprob: -6.568081855773926
    5. 'def' → logprob: -8.443081855773926
    6. 'dist' → logprob: -8.568081855773926
    7. '   ' → logprob: -9.068081855773926
    8. ' distances' → logprob: -9.943081855773926
    9. 'from' → logprob: -10.068081855773926
    10. 'an' → logprob: -10.818081855773926

Token 226: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.48179537057876587
    2. 'path' → logprob: -1.481795310974121
    3. 'distance' → logprob: -3.106795310974121
    4. '_path' → logprob: -3.356795310974121
    5. 'paths' → logprob: -3.481795310974121
    6. '_dist' → logprob: -4.731795310974121
    7. ' distances' → logprob: -4.731795310974121
    8. 'def' → logprob: -4.981795310974121
    9. '_paths' → logprob: -4.981795310974121
    10. ' path' → logprob: -5.106795310974121

Token 227: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.7308276891708374
    2. 'from' → logprob: -1.1058276891708374
    3. '   ' → logprob: -2.355827808380127
    4. ' to' → logprob: -3.230827808380127
    5. 'def' → logprob: -3.980827808380127
    6. ' for' → logprob: -4.230827808380127
    7. 's' → logprob: -5.355827808380127
    8. 'to' → logprob: -6.230827808380127
    9. ' between' → logprob: -6.605827808380127
    10. ' map' → logprob: -6.605827808380127

Token 228: ' aisle' (ID: 99887)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.4683810770511627
    2. ' aisle' → logprob: -1.9683810472488403
    3. ' all' → logprob: -2.09338116645813
    4. 'each' → logprob: -3.34338116645813
    5. ' every' → logprob: -3.46838116645813
    6. ' ais' → logprob: -4.218380928039551
    7. 'ais' → logprob: -4.593380928039551
    8. 'all' → logprob: -4.968380928039551
    9. ' an' → logprob: -5.718380928039551
    10. 'every' → logprob: -5.718380928039551

Token 229: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.32286831736564636
    2. ' cells' → logprob: -2.8228683471679688
    3. 's' → logprob: -3.0728683471679688
    4. 'to' → logprob: -3.3228683471679688
    5. 'def' → logprob: -3.8228683471679688
    6. ' for' → logprob: -4.197868347167969
    7. ' cell' → logprob: -4.197868347167969
    8. 'cells' → logprob: -4.322868347167969
    9. '   ' → logprob: -4.822868347167969
    10. ' from' → logprob: -4.947868347167969

Token 230: ' shelf' (ID: 40978)
  Prédit: ' aisle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aisle' → logprob: -0.9049503803253174
    2. ' all' → logprob: -1.4049503803253174
    3. ' shelf' → logprob: -2.1549503803253174
    4. ' each' → logprob: -2.2799503803253174
    5. 'all' → logprob: -3.1549503803253174
    6. ' ais' → logprob: -3.7799503803253174
    7. ' any' → logprob: -4.279950141906738
    8. 's' → logprob: -4.529950141906738
    9. 'ais' → logprob: -4.654950141906738
    10. ' every' → logprob: -4.779950141906738

Token 231: ' by' (ID: 656)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41607680916786194
    2. '   ' → logprob: -1.2910767793655396
    3. '
' → logprob: -4.54107666015625
    4. 's' → logprob: -4.66607666015625
    5. 'dist' → logprob: -4.66607666015625
    6. ',' → logprob: -5.04107666015625
    7. '(s' → logprob: -5.29107666015625
    8. '.' → logprob: -5.41607666015625
    9. ':' → logprob: -5.54107666015625
    10. ':
' → logprob: -6.29107666015625

Token 232: ' moving' (ID: 10067)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2345319986343384
    2. 'b' → logprob: -1.6095319986343384
    3. 'consider' → logprob: -2.109531879425049
    4. 'using' → logprob: -2.484531879425049
    5. 'mod' → logprob: -2.734531879425049
    6. 'transform' → logprob: -3.109531879425049
    7. ' ' → logprob: -3.859531879425049
    8. 'def' → logprob: -4.484531879425049
    9. ' modifying' → logprob: -4.609531879425049
    10. 'multi' → logprob: -4.609531879425049

Token 233: ' on' (ID: 402)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.90721595287323
    2. ' only' → logprob: -1.28221595287323
    3. 'through' → logprob: -1.90721595287323
    4. ' through' → logprob: -2.0322160720825195
    5. ' on' → logprob: -4.6572160720825195
    6. 'in' → logprob: -4.7822160720825195
    7. 'on' → logprob: -4.9072160720825195
    8. ' in' → logprob: -5.2822160720825195
    9. 'within' → logprob: -6.2822160720825195
    10. 'inside' → logprob: -6.4072160720825195

Token 234: ' ais' (ID: 36709)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.4432186484336853
    2. ' aisle' → logprob: -1.31821870803833
    3. ' ais' → logprob: -2.44321870803833
    4. 'the' → logprob: -6.94321870803833
    5. ' the' → logprob: -7.06821870803833
    6. ' map' → logprob: -8.693218231201172
    7. '<|end|>' → logprob: -8.755718231201172
    8. '```' → logprob: -9.318218231201172
    9. 'air' → logprob: -9.443218231201172
    10. ' ' → logprob: -9.443218231201172

Token 235: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -5.455048449221067e-05
    2. 'les' → logprob: -10.125054359436035
    3. 'l' → logprob: -12.000054359436035
    4. '[]' → logprob: -13.625054359436035
    5. '[' → logprob: -14.000054359436035
    6. 'ле' → logprob: -14.000054359436035
    7. 'e' → logprob: -14.375054359436035
    8. '```' → logprob: -14.500054359436035
    9. '_le' → logprob: -14.625054359436035
    10. '   ' → logprob: -14.625054359436035

Token 236: ' only' (ID: 1606)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14900946617126465
    2. 'def' → logprob: -2.0240094661712646
    3. '
' → logprob: -6.024009704589844
    4. ',' → logprob: -6.774009704589844
    5. 'import' → logprob: -7.399009704589844
    6. '    
' → logprob: -7.524009704589844
    7. '.' → logprob: -8.149009704589844
    8. ' def' → logprob: -8.399009704589844
    9. 'from' → logprob: -8.524009704589844
    10. ',
' → logprob: -8.899009704589844

Token 237: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02015828900039196
    2. 'def' → logprob: -4.770158290863037
    3. '
' → logprob: -5.020158290863037
    4. 'import' → logprob: -6.520158290863037
    5. ',' → logprob: -7.020158290863037
    6. '    
' → logprob: -7.020158290863037
    7. 'dist' → logprob: -7.770158290863037
    8. 'from' → logprob: -8.145157814025879
    9. ',
' → logprob: -8.270157814025879
    10. '<|end|>' → logprob: -9.395157814025879

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03264841064810753
    2. '#' → logprob: -4.03264856338501
    3. 'def' → logprob: -5.03264856338501
    4. ' and' → logprob: -5.28264856338501
    5. '    ' → logprob: -7.65764856338501
    6. '    
' → logprob: -7.78264856338501
    7. 'and' → logprob: -8.157648086547852
    8. ' but' → logprob: -8.532648086547852
    9. ' so' → logprob: -8.907648086547852
    10. ' with' → logprob: -8.907648086547852

Token 239: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026491062715649605
    2. '#' (adapté à ' #') → logprob: -3.901491165161133
    3. ' and' → logprob: -5.901491165161133
    4. 'def' → logprob: -6.776491165161133
    5. '    ' → logprob: -7.651491165161133
    6. 'and' → logprob: -8.651491165161133
    7. ' so' → logprob: -8.776491165161133
    8. ' but' → logprob: -9.026491165161133
    9. 'import' → logprob: -9.026491165161133
    10. ')' → logprob: -9.026491165161133

Token 240: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37267056107521057
    2. '#' → logprob: -1.2476705312728882
    3. 'def' → logprob: -4.872670650482178
    4. ' so' → logprob: -5.497670650482178
    5. ' #' → logprob: -5.622670650482178
    6. ' and' → logprob: -6.122670650482178
    7. 'and' → logprob: -6.122670650482178
    8. ' but' → logprob: -7.747670650482178
    9. 'so' → logprob: -7.872670650482178
    10. ' continuing' → logprob: -7.997670650482178

Token 241: ' picking' (ID: 30859)
  Prédit: ' also'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' also' → logprob: -0.6398710608482361
    2. ' we' → logprob: -2.514871120452881
    3. ' allowing' → logprob: -2.889871120452881
    4. ' can' → logprob: -2.889871120452881
    5. '    ' → logprob: -3.014871120452881
    6. ' not' → logprob: -3.514871120452881
    7. ' the' → logprob: -3.514871120452881
    8. '   ' → logprob: -3.764871120452881
    9. ' considering' → logprob: -3.764871120452881
    10. ' for' → logprob: -4.139871120452881

Token 242: ' shelf' (ID: 40978)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.018750187009572983
    2. 'up' → logprob: -5.768750190734863
    3. ' from' → logprob: -5.768750190734863
    4. ' a' → logprob: -6.143750190734863
    5. ' the' → logprob: -6.268750190734863
    6. 'from' → logprob: -6.518750190734863
    7. ' product' → logprob: -6.768750190734863
    8. ' distances' → logprob: -6.893750190734863
    9. 's' → logprob: -7.268750190734863
    10. ' cells' → logprob: -7.393750190734863

Token 243: ' adjacency' (ID: 177015)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.8453918695449829
    2. 's' → logprob: -1.470391869544983
    3. 'cells' → logprob: -1.970391869544983
    4. '_cells' → logprob: -2.7203917503356934
    5. ',' → logprob: -4.220391750335693
    6. ' edges' → logprob: -4.470391750335693
    7. '_positions' → logprob: -4.595391750335693
    8. 'adj' → logprob: -4.970391750335693
    9. '_' → logprob: -4.970391750335693
    10. 'def' → logprob: -4.970391750335693

Token 244: ' counts' (ID: 28991)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19083744287490845
    2. '   ' → logprob: -2.3158373832702637
    3. '
' → logprob: -4.315837383270264
    4. ':' → logprob: -4.315837383270264
    5. '):' → logprob: -4.690837383270264
    6. ' def' → logprob: -4.815837383270264
    7. ' distances' → logprob: -5.440837383270264
    8. ' cells' → logprob: -5.565837383270264
    9. '):
' → logprob: -5.815837383270264
    10. '.' → logprob: -5.815837383270264

Token 245: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08108939230442047
    2. '
' → logprob: -3.081089496612549
    3. 'def' → logprob: -3.956089496612549
    4. '    
' → logprob: -4.956089496612549
    5. ':' → logprob: -6.206089496612549
    6. '  
' → logprob: -6.956089496612549
    7. 'import' → logprob: -7.956089496612549
    8. ',' → logprob: -8.08108901977539
    9. ':
' → logprob: -8.20608901977539
    10. ',
' → logprob: -8.95608901977539

Token 246: ' if' (ID: 538)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18608172237873077
    2. ' ' → logprob: -2.436081647872925
    3. ' zero' → logprob: -3.686081647872925
    4. 'distance' → logprob: -4.061081886291504
    5. ' cost' → logprob: -4.436081886291504
    6. ' distance' → logprob: -4.936081886291504
    7. 'cost' → logprob: -4.936081886291504
    8. '1' → logprob: -5.186081886291504
    9. 'zero' → logprob: -5.686081886291504
    10. ' movement' → logprob: -6.561081886291504

Token 247: ' at' (ID: 540)
  Prédit: ' moving'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' moving' → logprob: -0.8375452756881714
    2. ' movement' → logprob: -2.337545394897461
    3. 'moving' → logprob: -2.462545394897461
    4. ' zero' → logprob: -3.212545394897461
    5. ' one' → logprob: -3.337545394897461
    6. ' it' → logprob: -3.462545394897461
    7. ' a' → logprob: -3.587545394897461
    8. ' we' → logprob: -3.712545394897461
    9. ' cost' → logprob: -3.712545394897461
    10. '0' → logprob: -3.712545394897461

Token 248: ' aisle' (ID: 99887)
  Prédit: ' aisle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aisle' → logprob: -0.6146533489227295
    2. ' the' → logprob: -1.1146533489227295
    3. ' ais' → logprob: -3.3646533489227295
    4. ' that' → logprob: -3.6146533489227295
    5. ' current' → logprob: -3.8646533489227295
    6. 'the' → logprob: -4.239653587341309
    7. ' adjacent' → logprob: -4.739653587341309
    8. ' an' → logprob: -5.114653587341309
    9. ' a' → logprob: -5.239653587341309
    10. 'that' → logprob: -6.114653587341309

Token 249: ' cell' (ID: 4206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035526324063539505
    2. 'def' → logprob: -4.035526275634766
    3. '
' → logprob: -5.035526275634766
    4. ':' → logprob: -5.285526275634766
    5. '    
' → logprob: -6.160526275634766
    6. ',' → logprob: -7.660526275634766
    7. '<|end|>' → logprob: -7.785526275634766
    8. ')' → logprob: -8.035526275634766
    9. '#' → logprob: -8.160526275634766
    10. ':
' → logprob: -8.285526275634766

Token 250: ' adjacent' (ID: 39069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06138107180595398
    2. 'def' → logprob: -3.3113811016082764
    3. '
' → logprob: -4.436380863189697
    4. '    
' → logprob: -5.436380863189697
    5. 'dist' → logprob: -6.186380863189697
    6. ':' → logprob: -7.436380863189697
    7. ',
' → logprob: -7.686380863189697
    8. 'import' → logprob: -7.686380863189697
    9. ',' → logprob: -7.936380863189697
    10. 'from' → logprob: -8.061381340026855

Token 251: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.35644015669822693
    2. 'def' → logprob: -1.9814401865005493
    3. 'to' → logprob: -2.8564400672912598
    4. ')' → logprob: -3.7314400672912598
    5. ',' → logprob: -3.7314400672912598
    6. 'To' → logprob: -3.9814400672912598
    7. '   ' → logprob: -4.60644006729126
    8. '(' → logprob: -5.35644006729126
    9. 's' → logprob: -5.48144006729126
    10. ' cells' → logprob: -6.10644006729126

Token 252: ' shelf' (ID: 40978)
  Prédit: ' shelf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shelf' → logprob: -0.02375340834259987
    2. 's' → logprob: -4.148753643035889
    3. 'the' → logprob: -5.648753643035889
    4. ' the' → logprob: -5.773753643035889
    5. ' a' → logprob: -7.148753643035889
    6. 'a' → logprob: -9.02375316619873
    7. ' that' → logprob: -10.52375316619873
    8. ' shel' → logprob: -10.64875316619873
    9. 'that' → logprob: -10.64875316619873
    10. ' ' → logprob: -10.64875316619873

Token 253: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017817188054323196
    2. 'def' → logprob: -4.51781702041626
    3. '
' → logprob: -5.89281702041626
    4. '    
' → logprob: -6.76781702041626
    5. ':' → logprob: -7.39281702041626
    6. 'dist' → logprob: -7.64281702041626
    7. ',
' → logprob: -8.142817497253418
    8. ',' → logprob: -8.392817497253418
    9. ':
' → logprob: -8.767817497253418
    10. ')' → logprob: -9.017817497253418

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0763360932469368
    2. 'def' → logprob: -3.076336145401001
    3. '
' → logprob: -4.451335906982422
    4. 'dist' → logprob: -5.076335906982422
    5. '    
' → logprob: -6.201335906982422
    6. 'import' → logprob: -6.576335906982422
    7. 'from' → logprob: -7.076335906982422
    8. ')' → logprob: -7.576335906982422
    9. ' from' → logprob: -7.826335906982422
    10. '#' → logprob: -7.826335906982422

Token 255: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2731075584888458
    2. 'dist' → logprob: -1.7731075286865234
    3. 'dp' → logprob: -3.6481075286865234
    4. 'from' → logprob: -4.398107528686523
    5. 'visited' → logprob: -4.773107528686523
    6. 'def' → logprob: -5.273107528686523
    7. ' dist' → logprob: -5.523107528686523
    8. ' from' → logprob: -6.023107528686523
    9. '
' → logprob: -6.023107528686523
    10. 'import' → logprob: -6.273107528686523

Token 256: ' So' (ID: 2632)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8431738615036011
    2. '   ' → logprob: -1.718173861503601
    3. 'dp' → logprob: -1.843173861503601
    4. 'visited' → logprob: -2.8431739807128906
    5. 'from' → logprob: -3.0931739807128906
    6. ' dist' → logprob: -3.2181739807128906
    7. ' from' → logprob: -4.218173980712891
    8. 'def' → logprob: -4.343173980712891
    9. ' visited' → logprob: -4.593173980712891
    10. 'distance' → logprob: -4.968173980712891

Token 257: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8248118758201599
    2. '   ' → logprob: -1.5748119354248047
    3. ' dist' → logprob: -3.0748119354248047
    4. ' we' → logprob: -3.0748119354248047
    5. '#' → logprob: -3.1998119354248047
    6. 'def' → logprob: -3.4498119354248047
    7. 'from' → logprob: -3.5748119354248047
    8. ' for' → logprob: -3.6998119354248047
    9. ' #' → logprob: -4.074811935424805
    10. ' from' → logprob: -4.074811935424805

Token 258: ' on' (ID: 402)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26305410265922546
    2. ' =' → logprob: -1.7630541324615479
    3. '[' → logprob: -4.263053894042969
    4. '   ' → logprob: -4.513053894042969
    5. 'from' → logprob: -4.638053894042969
    6. ' are' → logprob: -5.263053894042969
    7. ',' → logprob: -5.263053894042969
    8. '=[]' → logprob: -5.388053894042969
    9. ' ' → logprob: -6.263053894042969
    10. '=[' → logprob: -6.638053894042969

Token 259: ' ais' (ID: 36709)
  Prédit: ' ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ais' → logprob: -0.20043490827083588
    2. 'ais' → logprob: -2.200434923171997
    3. ' map' → logprob: -3.200434923171997
    4. ' aisle' → logprob: -4.325434684753418
    5. 'map' → logprob: -5.450434684753418
    6. 'the' → logprob: -5.575434684753418
    7. ' the' → logprob: -5.700434684753418
    8. ' grid' → logprob: -7.325434684753418
    9. ' graph' → logprob: -7.450434684753418
    10. 'b' → logprob: -7.762934684753418

Token 260: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.023308487609028816
    2. 'les' → logprob: -3.773308515548706
    3. 'l' → logprob: -11.648308753967285
    4. '
' → logprob: -11.773308753967285
    5. '[]' → logprob: -12.148308753967285
    6. '#' → logprob: -12.148308753967285
    7. 'de' → logprob: -12.273308753967285
    8. '   ' → logprob: -12.523308753967285
    9. '```' → logprob: -12.523308753967285
    10. '[]
' → logprob: -12.773308753967285

Token 261: ' to' (ID: 316)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5245485305786133
    2. '=' → logprob: -1.7745485305786133
    3. 'are' → logprob: -2.7745485305786133
    4. ',' → logprob: -2.8995485305786133
    5. ' =' → logprob: -2.8995485305786133
    6. ' can' → logprob: -4.524548530578613
    7. '<|end|>' → logprob: -4.524548530578613
    8. 'continue' → logprob: -4.649548530578613
    9. ' continue' → logprob: -5.274548530578613
    10. '   ' → logprob: -5.649548530578613

Token 262: ' aisle' (ID: 99887)
  Prédit: ' shelf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shelf' → logprob: -1.1541916131973267
    2. 'all' → logprob: -2.529191493988037
    3. ' all' → logprob: -2.529191493988037
    4. 'adj' → logprob: -2.529191493988037
    5. ' reach' → logprob: -2.654191493988037
    6. 's' → logprob: -2.654191493988037
    7. ' adjacent' → logprob: -3.279191493988037
    8. ' cells' → logprob: -3.279191493988037
    9. 'reach' → logprob: -3.404191493988037
    10. ' shelves' → logprob: -3.654191493988037

Token 263: ' cells' (ID: 11242)
  Prédit: ' cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.37452155351638794
    2. 'cells' → logprob: -1.9995214939117432
    3. 's' → logprob: -2.999521493911743
    4. ' are' → logprob: -2.999521493911743
    5. ',' → logprob: -3.374521493911743
    6. ' is' → logprob: -4.624521732330322
    7. '.' → logprob: -5.499521732330322
    8. '+' → logprob: -6.249521732330322
    9. ' and' → logprob: -6.249521732330322
    10. ' distances' → logprob: -6.249521732330322

Token 264: ' only' (ID: 1606)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.21497394144535065
    2. 'are' → logprob: -2.7149739265441895
    3. ' and' → logprob: -3.7149739265441895
    4. ' can' → logprob: -3.8399739265441895
    5. ',' → logprob: -4.2149739265441895
    6. 'and' → logprob: -4.3399739265441895
    7. ' with' → logprob: -4.8399739265441895
    8. ' only' → logprob: -5.0899739265441895
    9. '   ' → logprob: -5.2149739265441895
    10. ' remain' → logprob: -5.2149739265441895

Token 265: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14641743898391724
    2. '
' → logprob: -2.7714173793792725
    3. '<|end|>' → logprob: -3.5214173793792725
    4. ':' → logprob: -4.396417617797852
    5. 'def' → logprob: -4.521417617797852
    6. '    
' → logprob: -5.021417617797852
    7. ',' → logprob: -5.396417617797852
    8. '<|end|>' → logprob: -5.521417617797852
    9. ')' → logprob: -7.146417617797852
    10. '#' → logprob: -7.271417617797852

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003332187421619892
    2. '
' → logprob: -6.628332138061523
    3. 'def' → logprob: -6.753332138061523
    4. '    
' → logprob: -7.378332138061523
    5. 'import' → logprob: -9.628332138061523
    6. ' def' → logprob: -11.128332138061523
    7. ' from' → logprob: -11.378332138061523
    8. ' for' → logprob: -11.378332138061523
    9. ',' → logprob: -11.503332138061523
    10. 'from' → logprob: -11.628332138061523

Token 267: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.369894802570343
    2. 'dist' → logprob: -1.4948947429656982
    3. ' dist' → logprob: -3.4948947429656982
    4. ' visited' → logprob: -3.8698947429656982
    5. 'visited' → logprob: -4.119894981384277
    6. ' distances' → logprob: -5.494894981384277
    7. 'dp' → logprob: -5.744894981384277
    8. 'distance' → logprob: -5.994894981384277
    9. 'from' → logprob: -6.369894981384277
    10. ' from' → logprob: -6.369894981384277

Token 268: ' Here' (ID: 7306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3151395916938782
    2. 'dist' → logprob: -2.4401395320892334
    3. ' dist' → logprob: -3.5651395320892334
    4. 'dp' → logprob: -3.8151395320892334
    5. ' distances' → logprob: -3.9401395320892334
    6. ' result' → logprob: -4.8151397705078125
    7. 's' → logprob: -4.8151397705078125
    8. 'def' → logprob: -4.9401397705078125
    9. 'result' → logprob: -4.9401397705078125
    10. ' res' → logprob: -4.9401397705078125

Token 269: ' shelves' (ID: 52049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5285221338272095
    2. 'dist' → logprob: -1.9035221338272095
    3. ' dist' → logprob: -2.27852201461792
    4. ' distances' → logprob: -2.90352201461792
    5. 'def' → logprob: -3.77852201461792
    6. 'import' → logprob: -4.52852201461792
    7. ' for' → logprob: -4.52852201461792
    8. ' is' → logprob: -4.77852201461792
    9. ' import' → logprob: -4.90352201461792
    10. ',' → logprob: -5.27852201461792

Token 270: ' are' (ID: 553)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6580337882041931
    2. '_positions' → logprob: -1.283033847808838
    3. '_cells' → logprob: -2.783033847808838
    4. ' =' → logprob: -2.908033847808838
    5. '=[]' → logprob: -3.158033847808838
    6. '_' → logprob: -4.283033847808838
    7. '=set' → logprob: -4.283033847808838
    8. 's' → logprob: -5.533033847808838
    9. 'cells' → logprob: -6.158033847808838
    10. ' are' → logprob: -6.533033847808838

Token 271: ' walls' (ID: 20562)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -1.1621205806732178
    2. 'represented' → logprob: -1.7871205806732178
    3. ''s' → logprob: -2.5371205806732178
    4. ''' → logprob: -2.7871205806732178
    5. 'cells' → logprob: -2.9121205806732178
    6. ' represented' → logprob: -3.1621205806732178
    7. 'marked' → logprob: -3.2871205806732178
    8. ' '#'' → logprob: -3.2871205806732178
    9. 'walls' → logprob: -3.4121205806732178
    10. ' cells' → logprob: -3.6621205806732178

Token 272: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040150515735149384
    2. 'def' → logprob: -4.1651506423950195
    3. 'dist' → logprob: -4.7901506423950195
    4. '    
' → logprob: -5.4151506423950195
    5. '
' → logprob: -6.2901506423950195
    6. 's' → logprob: -6.2901506423950195
    7. ' dist' → logprob: -6.9151506423950195
    8. ' pass' → logprob: -7.0401506423950195
    9. ',' → logprob: -7.1651506423950195
    10. '#' → logprob: -7.1651506423950195

Token 273: ' movement' (ID: 12772)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7814534902572632
    2. ' movement' → logprob: -1.0314534902572632
    3. 'movement' → logprob: -2.0314536094665527
    4. ' bfs' → logprob: -3.5314536094665527
    5. 'the' → logprob: -5.031453609466553
    6. ' the' → logprob: -5.031453609466553
    7. ' now' → logprob: -5.406453609466553
    8. ' BFS' → logprob: -5.906453609466553
    9. 'now' → logprob: -7.156453609466553
    10. ' navigation' → logprob: -7.656453609466553

Token 274: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6450908780097961
    2. 'dist' → logprob: -1.1450908184051514
    3. 'def' → logprob: -3.1450908184051514
    4. ' shelves' → logprob: -3.5200908184051514
    5. ' dist' → logprob: -3.7700908184051514
    6. 's' → logprob: -4.1450910568237305
    7. ' ais' → logprob: -4.1450910568237305
    8. '    
' → logprob: -5.1450910568237305
    9. ' shelf' → logprob: -6.0200910568237305
    10. '#' → logprob: -6.0200910568237305

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01611202582716942
    2. 'def' → logprob: -4.641111850738525
    3. '    
' → logprob: -5.516111850738525
    4. '
' → logprob: -6.516111850738525
    5. '<|end|>' → logprob: -8.891112327575684
    6. 'dist' → logprob: -9.141112327575684
    7. '#' → logprob: -9.391112327575684
    8. ',' → logprob: -9.641112327575684
    9. ')' → logprob: -9.891112327575684
    10. 'import' → logprob: -10.016112327575684

Token 276: ' pass' (ID: 1853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038629114627838135
    2. 'dist' → logprob: -4.038629055023193
    3. 's' → logprob: -5.538629055023193
    4. 'pass' (adapté à ' pass') → logprob: -5.913629055023193
    5. ' pass' → logprob: -6.038629055023193
    6. 'def' → logprob: -6.288629055023193
    7. '    
' → logprob: -6.413629055023193
    8. ' dist' → logprob: -6.538629055023193
    9. ' shelves' → logprob: -6.913629055023193
    10. '#' → logprob: -7.163629055023193

Token 277: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2267492711544037
    2. '
' → logprob: -2.3517491817474365
    3. 'def' → logprob: -2.9767491817474365
    4. ' 
' → logprob: -3.8517491817474365
    5. ' ' → logprob: -4.851749420166016
    6. '\' → logprob: -4.976749420166016
    7. '    
' → logprob: -5.101749420166016
    8. 'n' → logprob: -6.101749420166016
    9. '' → logprob: -6.351749420166016
    10. '    ' → logprob: -6.476749420166016

Token 278: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.77036452293396
    2. 'def' → logprob: -1.14536452293396
    3. ' 
' → logprob: -2.39536452293396
    4. '
' → logprob: -2.52036452293396
    5. 'd' → logprob: -4.645364761352539
    6. 'n' → logprob: -4.895364761352539
    7. ' ' → logprob: -5.145364761352539
    8. '\' → logprob: -5.270364761352539
    9. '    
' → logprob: -5.645364761352539
    10. '    ' → logprob: -6.145364761352539

Token 279: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2500919699668884
    2. 'main' → logprob: -1.6250920295715332
    3. ' shortest' → logprob: -5.375092029571533
    4. ' bfs' → logprob: -5.500092029571533
    5. 'solve' → logprob: -5.500092029571533
    6. ' solve' → logprob: -5.625092029571533
    7. ' find' → logprob: -6.375092029571533
    8. 'b' → logprob: -6.750092029571533
    9. 'd' → logprob: -6.750092029571533
    10. 'short' → logprob: -6.875092029571533

Token 280: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.085517113911919e-05
    2. '(' → logprob: -10.87505054473877
    3. '()' → logprob: -11.37505054473877
    4. ' ():' → logprob: -11.37505054473877
    5. '():
' → logprob: -12.12505054473877
    6. '_' → logprob: -13.25005054473877
    7. ':' → logprob: -14.62505054473877
    8. '()>' → logprob: -14.87505054473877
    9. '(:' → logprob: -15.37505054473877
    10. '(":' → logprob: -15.62505054473877

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0797218605875969
    2. ' ' → logprob: -2.7047219276428223
    3. '    ' → logprob: -5.704721927642822
    4. 'n' → logprob: -6.079721927642822
    5. ' n' → logprob: -6.829721927642822
    6. '<|end|>' → logprob: -7.454721927642822
    7. '  ' → logprob: -7.704721927642822
    8. 'import' → logprob: -8.079721450805664
    9. ' import' → logprob: -8.204721450805664
    10. 'input' → logprob: -9.079721450805664

Token 282: ' while' (ID: 2049)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.311588317155838
    2. 'N' → logprob: -2.0615882873535156
    3. '   ' → logprob: -2.4365882873535156
    4. 'n' → logprob: -3.4365882873535156
    5. ' X' → logprob: -4.936588287353516
    6. 'import' → logprob: -5.061588287353516
    7. ' N' → logprob: -5.936588287353516
    8. 'input' → logprob: -6.186588287353516
    9. ' n' → logprob: -7.311588287353516
    10. ' ' → logprob: -7.561588287353516

Token 283: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.16024017333984375
    2. 'True' → logprob: -1.9102401733398438
    3. '(True' → logprob: -11.160240173339844
    4. '1' → logprob: -14.035240173339844
    5. '=True' → logprob: -14.285240173339844
    6. ' ' → logprob: -15.660240173339844
    7. ' Tru' → logprob: -15.785240173339844
    8. 'TRUE' → logprob: -16.910240173339844
    9. 'true' → logprob: -17.660240173339844
    10. '_TRUE' → logprob: -17.785240173339844

Token 284: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004883262328803539
    2. ' :' → logprob: -6.629883289337158
    3. '():' → logprob: -6.629883289337158
    4. '   ' → logprob: -7.004883289337158
    5. ',' → logprob: -7.129883289337158
    6. '(' → logprob: -8.8798828125
    7. '<|end|>' → logprob: -8.8798828125
    8. ':
' → logprob: -9.2548828125
    9. '       ' → logprob: -10.0048828125
    10. '<|end|>' → logprob: -11.1298828125

Token 285: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03083740919828415
    2. '<|end|>' → logprob: -4.780837535858154
    3. '       ' → logprob: -4.905837535858154
    4. ' ' → logprob: -5.405837535858154
    5. ' line' → logprob: -5.405837535858154
    6. '    ' → logprob: -5.905837535858154
    7. '    
' → logprob: -6.655837535858154
    8. ' readline' → logprob: -8.280837059020996
    9. ' 
' → logprob: -8.655837059020996
    10. '<|end|>' → logprob: -8.780837059020996

Token 286: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -1.0050244331359863
    2. 'line' → logprob: -1.6300244331359863
    3. '   ' → logprob: -2.1300244331359863
    4. ' line' → logprob: -2.2550244331359863
    5. 'H' → logprob: -2.6300244331359863
    6. 'N' → logprob: -2.7550244331359863
    7. 'L' → logprob: -3.3800244331359863
    8. 'XY' → logprob: -4.130024433135986
    9. 'l' → logprob: -4.880024433135986
    10. 'R' → logprob: -5.130024433135986

Token 287: ',Y' (ID: 71464)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1625719666481018
    2. ',Y' → logprob: -1.912571907043457
    3. ' ,' → logprob: -6.287571907043457
    4. ',int' → logprob: -9.037571907043457
    5. ',X' → logprob: -9.162571907043457
    6. ',input' → logprob: -9.537571907043457
    7. ',N' → logprob: -9.912571907043457
    8. ',Z' → logprob: -10.787571907043457
    9. ',y' → logprob: -10.912571907043457
    10. ' Y' → logprob: -11.162571907043457

Token 288: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000990295666269958
    2. ' =' → logprob: -7.125990390777588
    3. '=input' → logprob: -9.00098991394043
    4. '=list' → logprob: -10.25098991394043
    5. '=sys' → logprob: -11.62598991394043
    6. '=X' → logprob: -11.62598991394043
    7. '=int' → logprob: -12.37598991394043
    8. '=line' → logprob: -12.50098991394043
    9. '=

' → logprob: -14.87598991394043
    10. '=
' → logprob: -16.00098991394043

Token 289: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.02324955351650715
    2. ' map' → logprob: -3.773249626159668
    3. 'list' → logprob: -12.898249626159668
    4. '(map' → logprob: -14.398249626159668
    5. 'input' → logprob: -14.398249626159668
    6. '[' → logprob: -15.273249626159668
    7. '	map' → logprob: -15.773249626159668
    8. ' ' → logprob: -17.14824867248535
    9. 'tuple' → logprob: -18.64824867248535
    10. 'sys' → logprob: -18.77324867248535

Token 290: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0049803052097558975
    2. '(' → logprob: -5.629980087280273
    3. '(map' → logprob: -6.879980087280273
    4. 'map' → logprob: -9.379980087280273
    5. '()' → logprob: -9.629980087280273
    6. '(lambda' → logprob: -9.629980087280273
    7. 'int' → logprob: -10.129980087280273
    8. '[int' → logprob: -10.754980087280273
    9. '(str' → logprob: -10.754980087280273
    10. '(input' → logprob: -11.004980087280273

Token 291: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5695255994796753
    2. 'input' → logprob: -1.0695255994796753
    3. '(input' → logprob: -3.069525718688965
    4. ',' → logprob: -3.444525718688965
    5. ' input' → logprob: -4.944525718688965
    6. ')' → logprob: -5.944525718688965
    7. '(' → logprob: -6.944525718688965
    8. ' ,' → logprob: -7.319525718688965
    9. '(sys' → logprob: -7.694525718688965
    10. 'sys' → logprob: -7.819525718688965

Token 292: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.1424973713001236e-05
    2. '()' → logprob: -10.375031471252441
    3. ' ().' → logprob: -16.625030517578125
    4. '())' → logprob: -17.250030517578125
    5. '(' → logprob: -17.750030517578125
    6. '().'' → logprob: -19.375030517578125
    7. ')' → logprob: -19.625030517578125
    8. '()
' → logprob: -19.625030517578125
    9. '()[' → logprob: -20.625030517578125
    10. '.readline' → logprob: -20.875030517578125

Token 293: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018306681886315346
    2. 'strip' → logprob: -4.018306732177734
    3. 'rstrip' → logprob: -8.768306732177734
    4. '().' → logprob: -14.393306732177734
    5. ' split' → logprob: -15.143306732177734
    6. 'read' → logprob: -16.268306732177734
    7. ' strip' → logprob: -16.393306732177734
    8. '.readline' → logprob: -17.518306732177734
    9. '(split' → logprob: -17.893306732177734
    10. '.split' → logprob: -18.393306732177734

Token 294: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005126546137034893
    2. '()' → logprob: -6.005126476287842
    3. ')' → logprob: -6.380126476287842
    4. '()))' → logprob: -7.630126476287842
    5. '())
' → logprob: -7.755126476287842
    6. '))' → logprob: -10.505126953125
    7. '(' → logprob: -12.255126953125
    8. '()))
' → logprob: -13.130126953125
    9. '())
' → logprob: -13.880126953125
    10. '()
' → logprob: -14.130126953125

Token 295: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 296: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3411966562271118
    2. 'if' (adapté à ' if') → logprob: -1.7161966562271118
    3. '       ' → logprob: -2.2161965370178223
    4. '<|end|>' → logprob: -8.59119701385498
    5. '	if' → logprob: -9.71619701385498
    6. ' ' → logprob: -10.84119701385498
    7. '   ' → logprob: -10.84119701385498
    8. '	' → logprob: -11.96619701385498
    9. '      ' → logprob: -13.09119701385498
    10. '    ' → logprob: -13.21619701385498

Token 297: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.005233882926404476
    2. ' X' → logprob: -5.2552337646484375
    3. '(X' → logprob: -16.255233764648438
    4. '(' → logprob: -17.005233764648438
    5. ' ' → logprob: -17.005233764648438
    6. ' not' → logprob: -18.255233764648438
    7. '   ' → logprob: -19.380233764648438
    8. 'not' → logprob: -19.505233764648438
    9. ' (' → logprob: -19.630233764648438
    10. '	X' → logprob: -19.755233764648438

Token 298: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.160234272480011
    2. ' ==' → logprob: -1.9102342128753662
    3. '=' → logprob: -11.910234451293945
    4. '()==' → logprob: -14.035234451293945
    5. ')==' → logprob: -14.535234451293945
    6. '==
' → logprob: -14.660234451293945
    7. ']==' → logprob: -14.910234451293945
    8. ' ' → logprob: -14.910234451293945
    9. '===' → logprob: -15.160234451293945
    10. '[' → logprob: -15.660234451293945

Token 299: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015085970517247915
    2. ' ' → logprob: -8.875150680541992
    3. 'Y' → logprob: -11.500150680541992
    4. ' Y' → logprob: -14.875150680541992
    5. '```' → logprob: -15.500150680541992
    6. ' ' → logprob: -16.375150680541992
    7. '０' → logprob: -16.687650680541992
    8. '

' → logprob: -16.937650680541992
    9. '۰' → logprob: -17.187650680541992
    10. '
' → logprob: -17.375150680541992

Token 300: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07893286645412445
    2. 'and' → logprob: -2.578932762145996
    3. ' or' → logprob: -10.203932762145996
    4. ' ' → logprob: -12.328932762145996
    5. '	and' → logprob: -13.578932762145996
    6. ' ' → logprob: -16.078933715820312
    7. ':' → logprob: -16.828933715820312
    8. ' a' → logprob: -17.203933715820312
    9. '<|end|>' → logprob: -17.203933715820312
    10. 'or' → logprob: -17.703933715820312

Token 301: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.008615161292254925
    2. ' Y' → logprob: -4.758615016937256
    3. '   ' → logprob: -14.758615493774414
    4. '  ' → logprob: -16.383615493774414
    5. '	Y' → logprob: -16.508615493774414
    6. ' ' → logprob: -17.133615493774414
    7. ' ' → logprob: -19.383615493774414
    8. '    ' → logprob: -19.758615493774414
    9. '       ' → logprob: -20.008615493774414
    10. '     ' → logprob: -21.508615493774414

Token 302: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0002767094410955906
    2. ' ==' → logprob: -8.250276565551758
    3. ')==' → logprob: -12.125276565551758
    4. '=' → logprob: -12.500276565551758
    5. ']==' → logprob: -12.750276565551758
    6. '()==' → logprob: -13.250276565551758
    7. '0' → logprob: -13.875276565551758
    8. '==
' → logprob: -15.250276565551758
    9. '===' → logprob: -15.625276565551758
    10. '==(' → logprob: -16.125276565551758

Token 303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -20.125059127807617
    4. '  ' → logprob: -20.875059127807617
    5. '۰' → logprob: -20.875059127807617
    6. '
' → logprob: -21.500059127807617
    7. '```' → logprob: -21.750059127807617
    8. ' ' → logprob: -22.000059127807617
    9. '<|end|>' → logprob: -22.125059127807617
    10. '０' → logprob: -22.750059127807617

Token 304: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004196405876427889
    2. ':
' → logprob: -5.504196643829346
    3. ':return' → logprob: -9.379196166992188
    4. '           ' → logprob: -10.879196166992188
    5. '       ' → logprob: -11.504196166992188
    6. '   ' → logprob: -13.879196166992188
    7. '<|end|>' → logprob: -14.379196166992188
    8. ':
' → logprob: -14.504196166992188
    9. '.' → logprob: -14.629196166992188
    10. ',' → logprob: -15.004196166992188

Token 305: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016110315918922424
    2. '       ' → logprob: -6.501611232757568
    3. '               ' → logprob: -10.62661075592041
    4. '   ' → logprob: -10.87661075592041
    5. '		' → logprob: -11.00161075592041
    6. '<|end|>' → logprob: -11.00161075592041
    7. ':' → logprob: -11.87661075592041
    8. '	       ' → logprob: -12.37661075592041
    9. '          ' → logprob: -12.62661075592041
    10. '<|end|>' → logprob: -12.75161075592041

Token 306: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.02748548425734043
    2. 'return' → logprob: -3.7774853706359863
    3. ' break' → logprob: -5.527485370635986
    4. '	break' → logprob: -8.652485847473145
    5. '           ' → logprob: -10.027485847473145
    6. '       ' → logprob: -10.777485847473145
    7. ' return' → logprob: -11.527485847473145
    8. '               ' → logprob: -12.777485847473145
    9. '_break' → logprob: -14.527485847473145
    10. '```' → logprob: -14.652485847473145

Token 307: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3590949475765228
    2. '<|end|>' → logprob: -1.2340949773788452
    3. '
' → logprob: -4.734095096588135
    4. '        
' → logprob: -6.984095096588135
    5. '<|end|>' → logprob: -7.734095096588135
    6. ',' → logprob: -8.484094619750977
    7. '```' → logprob: -9.609094619750977
    8. '   ' → logprob: -10.234094619750977
    9. '        ' → logprob: -10.734094619750977
    10. '#' → logprob: -11.734094619750977

Token 308: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' (adapté à ' map') → logprob: -0.020131181925535202
    2. ' map' → logprob: -4.0201311111450195
    3. '   ' → logprob: -6.3951311111450195
    4. '       ' → logprob: -8.14513111114502
    5. '	map' → logprob: -11.89513111114502
    6. 'grid' → logprob: -12.52013111114502
    7. '_map' → logprob: -13.02013111114502
    8. ' ' → logprob: -14.02013111114502
    9. 'maps' → logprob: -14.02013111114502
    10. '```' → logprob: -14.02013111114502

Token 310: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.339278580620885e-06
    2. '_c' → logprob: -13.250001907348633
    3. ' =' → logprob: -15.750001907348633
    4. '_' → logprob: -16.625001907348633
    5. '=' → logprob: -17.000001907348633
    6. '```' → logprob: -17.125001907348633
    7. 'a' → logprob: -17.250001907348633
    8. 'с' → logprob: -17.500001907348633
    9. '[' → logprob: -18.500001907348633
    10. 'C' → logprob: -19.125001907348633

Token 311: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020602500066161156
    2. ' =' → logprob: -4.270602703094482
    3. '=[' → logprob: -5.770602703094482
    4. '[' → logprob: -6.020602703094482
    5. ' =[' → logprob: -7.645602703094482
    6. '=[
' → logprob: -9.145602226257324
    7. '=[]' → logprob: -9.145602226257324
    8. ')' → logprob: -10.895602226257324
    9. ')=' → logprob: -11.270602226257324
    10. '[]=' → logprob: -11.395602226257324

Token 312: '[]' (ID: 1951)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008643293753266335
    2. 'list' → logprob: -4.75864315032959
    3. ' input' → logprob: -10.50864315032959
    4. '[input' → logprob: -13.88364315032959
    5. 'sys' → logprob: -14.88364315032959
    6. ' list' → logprob: -16.133644104003906
    7. '(input' → logprob: -17.508644104003906
    8. '<input' → logprob: -17.633644104003906
    9. '
' → logprob: -18.258644104003906
    10. ',input' → logprob: -18.758644104003906

Token 313: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7768939137458801
    2. 'input' → logprob: -1.0268938541412354
    3. '(input' → logprob: -2.1518938541412354
    4. ']' → logprob: -3.4018938541412354
    5. '(map' → logprob: -3.9018938541412354
    6. ' for' → logprob: -5.1518940925598145
    7. 'map' → logprob: -5.9018940925598145
    8. '   ' → logprob: -7.0268940925598145
    9. ']*' → logprob: -7.6518940925598145
    10. 'int' → logprob: -7.9018940925598145

Token 314: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00011343709047650918
    2. ' _' → logprob: -9.125113487243652
    3. ' range' → logprob: -13.125113487243652
    4. '_range' → logprob: -13.625113487243652
    5. 'range' → logprob: -14.625113487243652
    6. '_x' → logprob: -14.875113487243652
    7. '_]' → logprob: -15.625113487243652
    8. ' in' → logprob: -16.250112533569336
    9. '_
' → logprob: -17.000112533569336
    10. 'in' → logprob: -17.375112533569336

Token 315: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.542942464351654
    2. 'in' → logprob: -1.0429425239562988
    3. 'range' → logprob: -2.792942523956299
    4. ' range' → logprob: -5.292942523956299
    5. '_' → logprob: -8.41794204711914
    6. ' ' → logprob: -10.54294204711914
    7. '0' → logprob: -11.29294204711914
    8. 'x' → logprob: -11.79294204711914
    9. 'i' → logprob: -11.91794204711914
    10. ' _' → logprob: -13.54294204711914

Token 316: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038042180240154266
    2. ' range' → logprob: -3.2880420684814453
    3. '_' → logprob: -14.538042068481445
    4. '_range' → logprob: -15.288042068481445
    5. '0' → logprob: -18.913042068481445
    6. '	range' → logprob: -19.038042068481445
    7. '(range' → logprob: -19.663042068481445
    8. 'in' → logprob: -20.663042068481445
    9. 'r' → logprob: -22.288042068481445
    10. '
' → logprob: -22.663042068481445

Token 317: '(X' (ID: 17061)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.16034527122974396
    2. '(X' → logprob: -1.9103453159332275
    3. 'range' → logprob: -9.410345077514648
    4. ' X' → logprob: -10.285345077514648
    5. ' range' → logprob: -12.285345077514648
    6. '(' → logprob: -15.410345077514648
    7. ' (' → logprob: -15.910345077514648
    8. '	X' → logprob: -16.53534507751465
    9. ',X' → logprob: -17.16034507751465
    10. '[X' → logprob: -18.03534507751465

Token 318: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005439769593067467
    2. ')]
' → logprob: -7.75054407119751
    3. ']' → logprob: -9.500543594360352
    4. ')' → logprob: -10.625543594360352
    5. ')]
' → logprob: -12.625543594360352
    6. ' )' → logprob: -12.750543594360352
    7. '()]' → logprob: -13.375543594360352
    8. ')][' → logprob: -13.625543594360352
    9. '])]' → logprob: -14.125543594360352
    10. ')]

' → logprob: -14.125543594360352

Token 319: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7484727501869202
    2. '       ' → logprob: -1.2484726905822754
    3. 'for' → logprob: -1.4984726905822754
    4. '   ' → logprob: -4.623472690582275
    5. '	for' → logprob: -5.373472690582275
    6. '<|end|>' → logprob: -7.248472690582275
    7. '	' → logprob: -7.498472690582275
    8. '
' → logprob: -7.873472690582275
    9. ' ' → logprob: -9.123473167419434
    10. '           ' → logprob: -9.998473167419434

Token 320: ' shelves' (ID: 52049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019287518225610256
    2. ' for' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.626928329467773
    4. '	for' → logprob: -17.501928329467773
    5. '
' → logprob: -20.501928329467773
    6. '```' → logprob: -22.251928329467773
    7. '_for' → logprob: -22.376928329467773
    8. '       ' → logprob: -22.626928329467773
    9. 'range' → logprob: -23.001928329467773
    10. 'import' → logprob: -23.126928329467773

Token 321: '_pos' (ID: 14692)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19805139303207397
    2. ' =' → logprob: -2.6980514526367188
    3. '[' → logprob: -3.1980514526367188
    4. 'for' → logprob: -3.3230514526367188
    5. '=[]' → logprob: -4.323051452636719
    6. ' for' → logprob: -5.323051452636719
    7. '=[' → logprob: -5.698051452636719
    8. '<|end|>' → logprob: -5.698051452636719
    9. '[line' → logprob: -6.573051452636719
    10. ',' → logprob: -6.698051452636719

Token 322: '={}
' (ID: 146130)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.6658095717430115
    2. '=' → logprob: -0.7908095717430115
    3. '=[' → logprob: -3.7908096313476562
    4. ' =' → logprob: -4.790809631347656
    5. '=[]
' → logprob: -6.790809631347656
    6. '=[
' → logprob: -9.165809631347656
    7. ' =[' → logprob: -9.165809631347656
    8. '=[],' → logprob: -9.290809631347656
    9. '=list' → logprob: -9.540809631347656
    10. '=[]
' → logprob: -9.790809631347656

Token 323: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26975318789482117
    2. 'for' → logprob: -1.5197532176971436
    3. '       ' → logprob: -4.5197529792785645
    4. '	for' → logprob: -5.7697529792785645
    5. '<|end|>' → logprob: -6.3947529792785645
    6. '   ' → logprob: -6.7697529792785645
    7. ' ' → logprob: -7.7697529792785645
    8. '	' → logprob: -8.269753456115723
    9. '
' → logprob: -10.144753456115723
    10. ' ' → logprob: -11.269753456115723

Token 324: ' start' (ID: 1604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.100351482629776
    2. ' for' → logprob: -2.350351572036743
    3. '   ' → logprob: -9.475351333618164
    4. '	for' → logprob: -10.100351333618164
    5. '       ' → logprob: -10.600351333618164
    6. ' ' → logprob: -13.975351333618164
    7. ' ' → logprob: -14.225351333618164
    8. '	' → logprob: -15.350351333618164
    9. '    ' → logprob: -16.225351333618164
    10. '\t' → logprob: -16.725351333618164

Token 325: '=(-' (ID: 198297)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.1926964819431305
    2. '=' → logprob: -1.942696452140808
    3. '_' → logprob: -3.8176965713500977
    4. ' =' → logprob: -5.567696571350098
    5. ',' → logprob: -6.817696571350098
    6. '[' → logprob: -7.067696571350098
    7. '_positions' → logprob: -7.067696571350098
    8. 'Pos' → logprob: -7.567696571350098
    9. '_pos' → logprob: -7.692696571350098
    10. ')' → logprob: -8.192696571350098

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.803360495017841e-05
    2. 'X' → logprob: -9.750078201293945
    3. ')' → logprob: -11.500078201293945
    4. '0' → logprob: -11.750078201293945
    5. ' ' → logprob: -13.750078201293945
    6. 'x' → logprob: -15.000078201293945
    7. '(' → logprob: -16.500078201293945
    8. ',' → logprob: -16.750078201293945
    9. '2' → logprob: -16.750078201293945
    10. ' X' → logprob: -17.125078201293945

Token 327: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.3349485993385315
    2. ',' → logprob: -1.4599485397338867
    3. '1' → logprob: -2.9599485397338867
    4. ',
' → logprob: -8.709948539733887
    5. ' ,' → logprob: -9.334948539733887
    6. ',-
' → logprob: -9.334948539733887
    7. ',X' → logprob: -9.959948539733887
    8. ',start' → logprob: -10.959948539733887
    9. ',None' → logprob: -10.959948539733887
    10. '<|end|>' → logprob: -11.084948539733887

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. ' -' → logprob: -15.625005722045898
    4. '-' → logprob: -15.687505722045898
    5. '１' → logprob: -17.6250057220459
    6. ')' → logprob: -18.0625057220459
    7. '१' → logprob: -18.2500057220459
    8. '

' → logprob: -18.3750057220459
    9. '```' → logprob: -18.3750057220459
    10. '' → logprob: -18.5000057220459

Token 329: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.435139898210764e-05
    2. ')
' → logprob: -9.500083923339844
    3. '<|end|>' → logprob: -11.750083923339844
    4. ' )' → logprob: -14.625083923339844
    5. '),' → logprob: -15.250083923339844
    6. ')

' → logprob: -15.500083923339844
    7. ')}}' → logprob: -15.500083923339844
    8. '       ' → logprob: -16.375083923339844
    9. ')#' → logprob: -16.750083923339844
    10. '<|end|>' → logprob: -16.750083923339844

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11288981884717941
    2. ' for' → logprob: -2.4878897666931152
    3. 'for' → logprob: -3.9878897666931152
    4. '<|end|>' → logprob: -5.612889766693115
    5. '	' → logprob: -7.112889766693115
    6. '	for' → logprob: -8.112890243530273
    7. '
' → logprob: -8.487890243530273
    8. '   ' → logprob: -9.862890243530273
    9. '<|end|>' → logprob: -10.237890243530273
    10. '	   ' → logprob: -10.862890243530273

Token 331: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5772536993026733
    2. 'for' (adapté à ' for') → logprob: -0.8272536993026733
    3. '	for' → logprob: -6.827253818511963
    4. '       ' → logprob: -8.952253341674805
    5. '   ' → logprob: -9.327253341674805
    6. ' ' → logprob: -12.827253341674805
    7. '	' → logprob: -12.952253341674805
    8. ' ' → logprob: -13.077253341674805
    9. '
' → logprob: -13.702253341674805
    10. '	   ' → logprob: -14.077253341674805

Token 332: ' y' (ID: 342)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5763556361198425
    2. 'i' → logprob: -0.8263556361198425
    3. 'x' → logprob: -8.201355934143066
    4. '_' → logprob: -9.951355934143066
    5. ' x' → logprob: -9.951355934143066
    6. ' _' → logprob: -10.451355934143066
    7. '_i' → logprob: -11.326355934143066
    8. ' ' → logprob: -13.576355934143066
    9. '	i' → logprob: -13.576355934143066
    10. '0' → logprob: -14.326355934143066

Token 333: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06210224702954292
    2. 'in' → logprob: -2.8121023178100586
    3. ' ' → logprob: -9.312102317810059
    4. '	in' → logprob: -11.687102317810059
    5. '_' → logprob: -12.062102317810059
    6. '0' → logprob: -12.312102317810059
    7. ' i' → logprob: -12.812102317810059
    8. 'x' → logprob: -12.937102317810059
    9. 'n' → logprob: -12.937102317810059
    10. 'i' → logprob: -13.187102317810059

Token 334: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014163863845169544
    2. ' range' → logprob: -4.264163970947266
    3. '_' → logprob: -16.014163970947266
    4. ' ' → logprob: -16.639163970947266
    5. ')' → logprob: -17.014163970947266
    6. '	range' → logprob: -17.139163970947266
    7. '0' → logprob: -17.264163970947266
    8. 'r' → logprob: -17.389163970947266
    9. '(range' → logprob: -17.639163970947266
    10. ' xrange' → logprob: -17.764163970947266

Token 335: '(Y' (ID: 44341)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0035931828897446394
    2. ' X' → logprob: -6.3785929679870605
    3. '(X' → logprob: -6.6285929679870605
    4. '0' → logprob: -7.5035929679870605
    5. ' range' → logprob: -12.003593444824219
    6. '	X' → logprob: -12.378593444824219
    7. '(' → logprob: -13.253593444824219
    8. 'range' → logprob: -13.378593444824219
    9. ',X' → logprob: -13.878593444824219
    10. '   ' → logprob: -14.753593444824219

Token 336: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11314599215984344
    2. '):
' → logprob: -2.2381460666656494
    3. ')' → logprob: -9.11314582824707
    4. ' ):' → logprob: -9.11314582824707
    5. '   ' → logprob: -9.98814582824707
    6. ':' → logprob: -10.48814582824707
    7. '):
' → logprob: -11.48814582824707
    8. ' ):
' → logprob: -11.73814582824707
    9. ',' → logprob: -13.11314582824707
    10. '       ' → logprob: -13.23814582824707

Token 337: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7383806705474854
    2. '   ' → logprob: -0.8633806705474854
    3. '       ' → logprob: -2.4883806705474854
    4. '           ' → logprob: -5.238380432128906
    5. 'for' → logprob: -5.488380432128906
    6. ':' → logprob: -5.738380432128906
    7. ' ' → logprob: -7.238380432128906
    8. ' x' → logprob: -7.363380432128906
    9. '	   ' → logprob: -7.988380432128906
    10. '	for' → logprob: -8.113380432128906

Token 338: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.904816746711731
    2. ' for' → logprob: -1.029816746711731
    3. 'line' (adapté à ' line') → logprob: -2.2798166275024414
    4. '   ' → logprob: -3.0298166275024414
    5. 'for' → logprob: -3.0298166275024414
    6. ' row' → logprob: -3.5298166275024414
    7. 'row' → logprob: -5.029816627502441
    8. 'x' → logprob: -6.779816627502441
    9. ' ' → logprob: -7.029816627502441
    10. ' x' → logprob: -7.404816627502441

Token 339: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40567976236343384
    2. ' =' → logprob: -1.155679702758789
    3. '=input' → logprob: -4.030679702758789
    4. '=list' → logprob: -7.655679702758789
    5. '=line' → logprob: -8.405679702758789
    6. '=sys' → logprob: -9.030679702758789
    7. '=s' → logprob: -11.155679702758789
    8. '   ' → logprob: -11.905679702758789
    9. '=int' → logprob: -12.030679702758789
    10. ' ' → logprob: -12.530679702758789

Token 340: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00034714414505288005
    2. 'input' → logprob: -8.250347137451172
    3. '(' → logprob: -10.375347137451172
    4. '(map' → logprob: -10.625347137451172
    5. '(sys' → logprob: -10.750347137451172
    6. '=input' → logprob: -12.250347137451172
    7. '(str' → logprob: -13.375347137451172
    8. '()' → logprob: -14.125347137451172
    9. '[input' → logprob: -14.625347137451172
    10. ' (' → logprob: -14.750347137451172

Token 341: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03284705802798271
    2. '())' → logprob: -3.5328471660614014
    3. '()' → logprob: -5.782846927642822
    4. '();)' → logprob: -12.90784740447998
    5. 'rstrip' → logprob: -13.03284740447998
    6. '(' → logprob: -13.28284740447998
    7. ')' → logprob: -13.90784740447998
    8. '()<' → logprob: -14.40784740447998
    9. '()[' → logprob: -14.53284740447998
    10. '.rstrip' → logprob: -14.78284740447998

Token 342: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.04859429597854614
    2. 'rstrip' → logprob: -3.0485942363739014
    3. 'split' → logprob: -12.17359447479248
    4. ' strip' → logprob: -14.17359447479248
    5. '(strip' → logprob: -14.29859447479248
    6. 'r' → logprob: -15.17359447479248
    7. 'read' → logprob: -16.548593521118164
    8. '_strip' → logprob: -16.923593521118164
    9. 'replace' → logprob: -17.298593521118164
    10. '.strip' → logprob: -17.298593521118164

Token 343: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009580657817423344
    2. '()[' → logprob: -5.009580612182617
    3. '()' → logprob: -6.009580612182617
    4. '())
' → logprob: -8.384580612182617
    5. '())[' → logprob: -9.384580612182617
    6. '('' → logprob: -10.384580612182617
    7. ')' → logprob: -11.009580612182617
    8. '(' → logprob: -11.009580612182617
    9. '()))' → logprob: -11.759580612182617
    10. ' ())' → logprob: -11.884580612182617

Token 344: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.536584198474884
    2. '       ' → logprob: -1.0365841388702393
    3. 'for' (adapté à ' for') → logprob: -3.7865841388702393
    4. '   ' → logprob: -4.286584377288818
    5. ' ' → logprob: -4.911584377288818
    6. '	for' → logprob: -5.411584377288818
    7. '           ' → logprob: -5.536584377288818
    8. '<|end|>' → logprob: -6.036584377288818
    9. '	       ' → logprob: -6.661584377288818
    10. '[' → logprob: -6.661584377288818

Token 346: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20145495235919952
    2. 'x' → logprob: -1.701454997062683
    3. ' ' → logprob: -11.076455116271973
    4. '	x' → logprob: -11.576455116271973
    5. '   ' → logprob: -12.326455116271973
    6. ' y' → logprob: -12.951455116271973
    7. '_x' → logprob: -13.451455116271973
    8. ' i' → logprob: -13.826455116271973
    9. '(x' → logprob: -14.201455116271973
    10. '0' → logprob: -14.201455116271973

Token 347: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020986054092645645
    2. 'in' → logprob: -3.8959860801696777
    3. ' ' → logprob: -8.14598560333252
    4. ',' → logprob: -9.27098560333252
    5. ' ,' → logprob: -10.64598560333252
    6. '	in' → logprob: -10.77098560333252
    7. '<|end|>' → logprob: -13.27098560333252
    8. '  ' → logprob: -13.39598560333252
    9. '   ' → logprob: -13.77098560333252
    10. ',in' → logprob: -13.89598560333252

Token 348: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740999937057495
    2. 'range' → logprob: -0.9740999937057495
    3. '0' → logprob: -11.099100112915039
    4. '(range' → logprob: -12.099100112915039
    5. ' ' → logprob: -13.599100112915039
    6. ' xrange' → logprob: -14.474100112915039
    7. '(' → logprob: -15.724100112915039
    8. '	range' → logprob: -15.849100112915039
    9. '[' → logprob: -16.22410011291504
    10. ' in' → logprob: -16.34910011291504

Token 349: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0625917986035347
    2. 'X' → logprob: -2.937591791152954
    3. '(Y' → logprob: -6.187592029571533
    4. 'range' → logprob: -6.312592029571533
    5. '(' → logprob: -6.437592029571533
    6. ' range' → logprob: -6.812592029571533
    7. ' (' → logprob: -8.312591552734375
    8. ' X' → logprob: -8.312591552734375
    9. 'Y' → logprob: -8.562591552734375
    10. '(len' → logprob: -8.687591552734375

Token 350: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005348313134163618
    2. ')' → logprob: -5.380348205566406
    3. '):
' → logprob: -7.755348205566406
    4. ':' → logprob: -8.255348205566406
    5. ',' → logprob: -11.130348205566406
    6. '           ' → logprob: -11.630348205566406
    7. '<|end|>' → logprob: -12.755348205566406
    8. ' ):' → logprob: -13.005348205566406
    9. ']:' → logprob: -13.380348205566406
    10. '       ' → logprob: -13.880348205566406

Token 351: '               ' (ID: 506)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4996960759162903
    2. '               ' → logprob: -1.4996960163116455
    3. '           ' → logprob: -2.7496960163116455
    4. '<|end|>' → logprob: -3.6246960163116455
    5. '            ' → logprob: -3.7496960163116455
    6. ' line' → logprob: -4.249696254730225
    7. ' if' → logprob: -4.624696254730225
    8. '[line' → logprob: -5.999696254730225
    9. '   ' → logprob: -6.124696254730225
    10. ' ' → logprob: -6.249696254730225

Token 352: ' c' (ID: 274)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.48939844965934753
    2. 'map' → logprob: -1.11439847946167
    3. ' line' → logprob: -3.11439847946167
    4. 'line' → logprob: -4.61439847946167
    5. ' if' → logprob: -5.98939847946167
    6. ' ' → logprob: -7.61439847946167
    7. '           ' → logprob: -7.61439847946167
    8. 'if' → logprob: -7.73939847946167
    9. '    ' → logprob: -8.239398002624512
    10. '   ' → logprob: -9.489398002624512

Token 353: '=line' (ID: 192488)
  Prédit: '=line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=line' → logprob: -0.35895267128944397
    2. '=' → logprob: -1.3589526414871216
    3. ' =' → logprob: -3.108952760696411
    4. '=c' → logprob: -12.108952522277832
    5. '=
' → logprob: -12.608952522277832
    6. '[line' → logprob: -13.608952522277832
    7. '=

' → logprob: -13.733952522277832
    8. '(line' → logprob: -14.358952522277832
    9. ' =
' → logprob: -14.608952522277832
    10. ' line' → logprob: -14.608952522277832

Token 354: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -7.433829159708694e-05
    2. '[y' → logprob: -10.12507438659668
    3. '[' → logprob: -10.75007438659668
    4. '[c' → logprob: -12.37507438659668
    5. ' [' → logprob: -12.87507438659668
    6. '=x' → logprob: -13.25007438659668
    7. '           ' → logprob: -13.50007438659668
    8. '][' → logprob: -13.75007438659668
    9. '=' → logprob: -14.62507438659668
    10. 'x' → logprob: -15.37507438659668

Token 355: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01150752604007721
    2. ')]' → logprob: -5.261507511138916
    3. '[' → logprob: -6.136507511138916
    4. ')' → logprob: -6.386507511138916
    5. '])' → logprob: -6.386507511138916
    6. ']==' → logprob: -8.136507987976074
    7. '<|end|>' → logprob: -8.136507987976074
    8. ' ]' → logprob: -9.386507987976074
    9. '])]' → logprob: -11.386507987976074
    10. ']
' → logprob: -11.636507987976074

Token 356: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: ' map' (ID: 4014)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2168305218219757
    2. 'if' → logprob: -1.9668304920196533
    3. '               ' → logprob: -3.8418304920196533
    4. ' map' → logprob: -4.466830730438232
    5. 'map' (adapté à ' map') → logprob: -4.716830730438232
    6. '           ' → logprob: -4.716830730438232
    7. '       ' → logprob: -6.216830730438232
    8. '                ' → logprob: -6.966830730438232
    9. '        ' → logprob: -8.091830253601074
    10. '            ' → logprob: -8.341830253601074

Token 358: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -12.250007629394531
    3. '[x' → logprob: -13.250007629394531
    4. '[c' → logprob: -14.625007629394531
    5. 'x' → logprob: -14.750007629394531
    6. '_c' → logprob: -15.750007629394531
    7. ' c' → logprob: -15.750007629394531
    8. 's' → logprob: -16.50000762939453
    9. '```' → logprob: -16.62500762939453
    10. 'с' → logprob: -17.37500762939453

Token 359: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0001434690784662962
    2. '[c' → logprob: -9.875143051147461
    3. '[' → logprob: -10.250143051147461
    4. '][' → logprob: -11.000143051147461
    5. '[y' → logprob: -11.500143051147461
    6. '[s' → logprob: -12.000143051147461
    7. ' [' → logprob: -12.000143051147461
    8. '[n' → logprob: -12.375143051147461
    9. '```' → logprob: -13.125143051147461
    10. '[][' → logprob: -13.750143051147461

Token 360: '].' (ID: 1651)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0029450133442878723
    2. '].' → logprob: -6.5029449462890625
    3. ']' → logprob: -6.6279449462890625
    4. '.append' → logprob: -10.377944946289062
    5. '[x' → logprob: -10.752944946289062
    6. ' ][' → logprob: -10.752944946289062
    7. ']=' → logprob: -11.752944946289062
    8. '[y' → logprob: -11.752944946289062
    9. '][]' → logprob: -11.752944946289062
    10. '[' → logprob: -12.752944946289062

Token 361: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.45848218582978e-06
    2. ' append' → logprob: -13.62500286102295
    3. 'appen' → logprob: -14.25000286102295
    4. '.append' → logprob: -15.00000286102295
    5. 'extend' → logprob: -15.75000286102295
    6. '	append' → logprob: -16.875001907348633
    7. '_append' → logprob: -17.500001907348633
    8. 'app' → logprob: -17.875001907348633
    9. 'insert' → logprob: -18.500001907348633
    10. 'ap' → logprob: -18.875001907348633

Token 362: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.636475493200123e-05
    2. 'c' → logprob: -9.500076293945312
    3. '(' → logprob: -13.625076293945312
    4. '(
' → logprob: -16.375076293945312
    5. ')c' → logprob: -16.500076293945312
    6. '	c' → logprob: -18.375076293945312
    7. ' c' → logprob: -19.500076293945312
    8. ' (' → logprob: -20.500076293945312
    9. '[c' → logprob: -20.625076293945312
    10. '©' → logprob: -20.750076293945312

Token 363: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1398757123970427e-05
    2. ')
' → logprob: -12.000011444091797
    3. ' )' → logprob: -12.250011444091797
    4. ')}' → logprob: -16.375011444091797
    5. ')}}' → logprob: -16.625011444091797
    6. ')return' → logprob: -16.750011444091797
    7. '<|end|>' → logprob: -16.750011444091797
    8. '))' → logprob: -16.875011444091797
    9. '')' → logprob: -17.500011444091797
    10. ')`' → logprob: -17.750011444091797

Token 364: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3331016004085541
    2. '               ' → logprob: -1.3331016302108765
    3. ' if' → logprob: -3.958101511001587
    4. '           ' → logprob: -8.583101272583008
    5. ' ' → logprob: -9.208101272583008
    6. 'for' → logprob: -9.583101272583008
    7. '              ' → logprob: -9.833101272583008
    8. '   ' → logprob: -10.333101272583008
    9. '	if' → logprob: -11.083101272583008
    10. '       ' → logprob: -11.208101272583008

Token 366: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3484615087509155
    2. 'c' → logprob: -1.2234615087509155
    3. '(c' → logprob: -12.473461151123047
    4. ' (' → logprob: -12.848461151123047
    5. ' ' → logprob: -13.098461151123047
    6. '	c' → logprob: -13.223461151123047
    7. ' ' → logprob: -13.410961151123047
    8. 'x' → logprob: -13.973461151123047
    9. '(' → logprob: -14.098461151123047
    10. 'start' → logprob: -14.598461151123047

Token 367: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.0021601372864097357
    2. '==' → logprob: -6.37716007232666
    3. ' ==' → logprob: -8.37716007232666
    4. ' =='' → logprob: -8.62716007232666
    5. '=="' → logprob: -10.25216007232666
    6. ']=='' → logprob: -11.75216007232666
    7. '==
' → logprob: -13.12716007232666
    8. ')=='' → logprob: -13.75216007232666
    9. '']=='' → logprob: -14.12716007232666
    10. '='' → logprob: -14.75216007232666

Token 368: 'P' (ID: 47)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.011658230796456337
    2. 'A' → logprob: -5.761658191680908
    3. 'R' → logprob: -6.011658191680908
    4. '@' → logprob: -6.261658191680908
    5. 'P' → logprob: -6.511658191680908
    6. 's' → logprob: -6.886658191680908
    7. '#' → logprob: -7.886658191680908
    8. 'I' → logprob: -8.136658668518066
    9. 'W' → logprob: -9.136658668518066
    10. 'L' → logprob: -9.136658668518066

Token 369: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.18846717476844788
    2. ''' → logprob: -2.313467264175415
    3. '':
' → logprob: -3.188467264175415
    4. ''):' → logprob: -3.688467264175415
    5. ''):
' → logprob: -5.313467025756836
    6. '')' → logprob: -7.563467025756836
    7. '':
' → logprob: -7.813467025756836
    8. '':

' → logprob: -8.813467025756836
    9. '):' → logprob: -9.313467025756836
    10. '']:' → logprob: -9.438467025756836

Token 370: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05201417952775955
    2. '<|end|>' → logprob: -3.802014112472534
    3. ':' → logprob: -5.052014350891113
    4. ',start' → logprob: -5.427014350891113
    5. '               ' → logprob: -5.927014350891113
    6. 'start' → logprob: -6.052014350891113
    7. '<|end|>' → logprob: -6.052014350891113
    8. ':start' → logprob: -6.552014350891113
    9. ':
' → logprob: -6.677014350891113
    10. '                    
' → logprob: -6.802014350891113

Token 371: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.0004905993700958788
    2. ' start' → logprob: -7.625490665435791
    3. '                   ' → logprob: -14.000490188598633
    4. 's' → logprob: -14.875490188598633
    5. 'x' → logprob: -14.875490188598633
    6. '
' → logprob: -14.875490188598633
    7. '(start' → logprob: -15.250490188598633
    8. '   ' → logprob: -16.250490188598633
    9. 'star' → logprob: -16.250490188598633
    10. '(' → logprob: -16.750490188598633

Token 372: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03649492189288139
    2. '=(' → logprob: -3.6614949703216553
    3. ' =' → logprob: -5.036494731903076
    4. '=x' → logprob: -5.661494731903076
    5. '=
' → logprob: -9.411495208740234
    6. ' =(' → logprob: -11.036495208740234
    7. '=((' → logprob: -11.036495208740234
    8. '=(-' → logprob: -11.161495208740234
    9. 'x' → logprob: -11.661495208740234
    10. '=

' → logprob: -12.536495208740234

Token 373: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0008394040050916374
    2. '0' → logprob: -7.5008392333984375
    3. ' x' → logprob: -8.750839233398438
    4. 's' → logprob: -10.125839233398438
    5. 'c' → logprob: -10.500839233398438
    6. ')' → logprob: -10.750839233398438
    7. ')x' → logprob: -11.250839233398438
    8. 'map' → logprob: -12.000839233398438
    9. 'start' → logprob: -12.125839233398438
    10. '(x' → logprob: -12.625839233398438

Token 374: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.5760983824729919
    2. ',' → logprob: -0.8260983824729919
    3. ' ,' → logprob: -8.826098442077637
    4. ',
' → logprob: -12.326098442077637
    5. ',start' → logprob: -12.576098442077637
    6. ',user' → logprob: -13.701098442077637
    7. ',Y' → logprob: -13.951098442077637
    8. ',x' → logprob: -14.951098442077637
    9. ',s' → logprob: -15.576098442077637
    10. ',end' → logprob: -15.701098442077637

Token 375: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017386233957950026
    2. ')
' → logprob: -8.750173568725586
    3. ' )' → logprob: -11.250173568725586
    4. '<|end|>' → logprob: -14.000173568725586
    5. ')return' → logprob: -15.000173568725586
    6. ')

' → logprob: -15.375173568725586
    7. '),' → logprob: -15.500173568725586
    8. ')
' → logprob: -16.000173568725586
    9. ')}}' → logprob: -16.000173568725586
    10. ',' → logprob: -16.500173568725586

Token 376: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 377: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.4567079544067383
    2. ' elif' → logprob: -1.0817079544067383
    3. '               ' → logprob: -4.081707954406738
    4. '<|end|>' → logprob: -5.831707954406738
    5. ' if' → logprob: -6.206707954406738
    6. 'if' → logprob: -6.456707954406738
    7. 's' → logprob: -6.956707954406738
    8. '                ' → logprob: -7.206707954406738
    9. '	elif' → logprob: -7.581707954406738
    10. '       ' → logprob: -7.581707954406738

Token 378: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.22542345523834229
    2. 'c' → logprob: -1.6004234552383423
    3. 's' → logprob: -12.475423812866211
    4. '                   ' → logprob: -13.600423812866211
    5. '(c' → logprob: -13.850423812866211
    6. '[c' → logprob: -14.100423812866211
    7. '               ' → logprob: -14.225423812866211
    8. ' ' → logprob: -14.725423812866211
    9. '	c' → logprob: -14.850423812866211
    10. ' ' → logprob: -14.850423812866211

Token 379: '!='' (ID: 58874)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.002587192924693227
    2. '==' → logprob: -6.12758731842041
    3. ' =='' → logprob: -8.50258731842041
    4. ' ==' → logprob: -9.25258731842041
    5. ']=='' → logprob: -10.00258731842041
    6. '[' → logprob: -10.87758731842041
    7. '['' → logprob: -11.37758731842041
    8. ')=='' → logprob: -11.50258731842041
    9. '==='' → logprob: -12.25258731842041
    10. '']=='' → logprob: -12.75258731842041

Token 380: '.'' (ID: 8856)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013272607466205955
    2. ''.' → logprob: -7.751327037811279
    3. '.'' → logprob: -7.876327037811279
    4. '#' → logprob: -8.501327514648438
    5. '.')' → logprob: -9.001327514648438
    6. '.
' → logprob: -9.376327514648438
    7. '.)' → logprob: -10.751327514648438
    8. '.#' → logprob: -11.001327514648438
    9. ''' → logprob: -11.001327514648438
    10. 'P' → logprob: -11.501327514648438

Token 381: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4775640368461609
    2. 'and' → logprob: -0.9775640368461609
    3. ':' → logprob: -6.352563858032227
    4. ':
' → logprob: -6.477563858032227
    5. '                   ' → logprob: -9.602563858032227
    6. ' ' → logprob: -10.727563858032227
    7. '<|end|>' → logprob: -10.727563858032227
    8. '               ' → logprob: -11.227563858032227
    9. '                       ' → logprob: -11.227563858032227
    10. 's' → logprob: -11.477563858032227

Token 382: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.1437806785106659
    2. 'c' → logprob: -2.0187807083129883
    3. ' not' → logprob: -7.893780708312988
    4. ' (' → logprob: -8.268780708312988
    5. ' ' → logprob: -9.393780708312988
    6. ' ' → logprob: -9.643780708312988
    7. ' map' → logprob: -9.768780708312988
    8. ''' → logprob: -9.768780708312988
    9. 'not' → logprob: -10.018780708312988
    10. '(c' → logprob: -10.393780708312988

Token 383: '!='' (ID: 58874)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5727968811988831
    2. '!='' → logprob: -0.9477968811988831
    3. ' !=' → logprob: -3.6977968215942383
    4. '[' → logprob: -4.697796821594238
    5. '!' → logprob: -4.947796821594238
    6. '==' → logprob: -6.197796821594238
    7. '!=(' → logprob: -6.697796821594238
    8. '<|end|>' → logprob: -7.197796821594238
    9. '=='' → logprob: -7.822796821594238
    10. ']!='' → logprob: -7.947796821594238

Token 384: 'P' (ID: 47)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3612285554409027
    2. 'P' → logprob: -1.236228585243225
    3. 'S' → logprob: -5.4862284660339355
    4. '.' → logprob: -5.9862284660339355
    5. ''' → logprob: -6.1112284660339355
    6. ''#' → logprob: -6.2362284660339355
    7. 'A' → logprob: -7.7362284660339355
    8. '#
' → logprob: -8.236228942871094
    9. '0' → logprob: -8.361228942871094
    10. '-' → logprob: -8.736228942871094

Token 385: '':
' (ID: 7669)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.15256226062774658
    2. 'and' → logprob: -2.402562141418457
    3. ':' → logprob: -3.527562141418457
    4. ':
' → logprob: -3.902562141418457
    5. '<|end|>' → logprob: -7.152562141418457
    6. '):' → logprob: -8.652562141418457
    7. '):
' → logprob: -9.027562141418457
    8. '':' → logprob: -9.902562141418457
    9. ')' → logprob: -10.027562141418457
    10. ''' → logprob: -10.277562141418457

Token 386: '                   ' (ID: 699)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2467934787273407
    2. '               ' → logprob: -1.871793508529663
    3. ' shelves' → logprob: -2.871793508529663
    4. '           ' → logprob: -5.246793270111084
    5. '                   ' → logprob: -7.121793270111084
    6. '	s' → logprob: -7.746793270111084
    7. '                       ' → logprob: -8.121793746948242
    8. 'helves' → logprob: -8.746793746948242
    9. '       ' → logprob: -8.996793746948242
    10. ' ' → logprob: -8.996793746948242

Token 387: ' shelves' (ID: 52049)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05510297790169716
    2. ' shelves' → logprob: -2.930103063583374
    3. '                   ' → logprob: -9.430103302001953
    4. '                       ' → logprob: -9.930103302001953
    5. ' shel' → logprob: -10.180103302001953
    6. '           ' → logprob: -11.305103302001953
    7. '   ' → logprob: -11.930103302001953
    8. '               ' → logprob: -12.055103302001953
    9. 'helves' → logprob: -12.305103302001953
    10. '                        
' → logprob: -12.805103302001953

Token 388: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -5.200166469876422e-06
    2. '_positions' → logprob: -12.875004768371582
    3. 'pos' → logprob: -13.500004768371582
    4. '[pos' → logprob: -15.000004768371582
    5. '_' → logprob: -15.250004768371582
    6. '[(' → logprob: -15.500004768371582
    7. '_p' → logprob: -16.1250057220459
    8. 'Pos' → logprob: -16.5000057220459
    9. '_s' → logprob: -16.5000057220459
    10. '[' → logprob: -16.7500057220459

Token 389: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00040958117460832
    2. '[' → logprob: -8.750409126281738
    3. '[s' → logprob: -9.125409126281738
    4. '[x' → logprob: -9.375409126281738
    5. '[c' → logprob: -9.875409126281738
    6. '.setdefault' → logprob: -13.875409126281738
    7. '[((' → logprob: -14.125409126281738
    8. ' [(' → logprob: -14.375409126281738
    9. '=(' → logprob: -14.750409126281738
    10. '[
' → logprob: -14.750409126281738

Token 390: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.816093228830141e-06
    2. ' x' → logprob: -12.87500286102295
    3. '<|end|>' → logprob: -16.125001907348633
    4. ')x' → logprob: -16.250001907348633
    5. '
' → logprob: -17.250001907348633
    6. '0' → logprob: -17.750001907348633
    7. '(x' → logprob: -18.125001907348633
    8. ')' → logprob: -18.375001907348633
    9. '{x' → logprob: -18.875001907348633
    10. '	x' → logprob: -19.875001907348633

Token 391: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.006802763789892197
    2. ',' → logprob: -5.006802558898926
    3. ' ,' → logprob: -9.381802558898926
    4. ',
' → logprob: -13.631802558898926
    5. ',n' → logprob: -14.506802558898926
    6. ',Y' → logprob: -15.256802558898926
    7. ',s' → logprob: -15.381802558898926
    8. ',user' → logprob: -15.756802558898926
    9. ',

' → logprob: -16.256803512573242
    10. '   ' → logprob: -16.506803512573242

Token 392: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04464763402938843
    2. ')' → logprob: -3.169647693634033
    3. ']' → logprob: -7.169647693634033
    4. ' )' → logprob: -7.919647693634033
    5. ']=' → logprob: -7.919647693634033
    6. ')=' → logprob: -9.919647216796875
    7. ']]=' → logprob: -10.169647216796875
    8. ']=(' → logprob: -10.419647216796875
    9. '])' → logprob: -10.669647216796875
    10. ' ]' → logprob: -12.669647216796875

Token 393: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.05497334897518158
    2. ']' → logprob: -3.0549733638763428
    3. ']=(' → logprob: -5.179973125457764
    4. ']+=' → logprob: -7.929973125457764
    5. '=' → logprob: -8.804973602294922
    6. ')=' → logprob: -9.179973602294922
    7. ']={' → logprob: -10.054973602294922
    8. ')]' → logprob: -11.054973602294922
    9. ' ]' → logprob: -11.429973602294922
    10. ')' → logprob: -11.429973602294922

Token 394: 'int' (ID: 491)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14784225821495056
    2. '0' → logprob: -2.3978421688079834
    3. 'True' → logprob: -3.7728421688079834
    4. '[]' → logprob: -4.6478424072265625
    5. '1' → logprob: -5.2728424072265625
    6. 'int' → logprob: -5.5228424072265625
    7. 'False' → logprob: -6.8978424072265625
    8. 'line' → logprob: -7.0228424072265625
    9. '(c' → logprob: -7.3978424072265625
    10. '[c' → logprob: -8.022842407226562

Token 395: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00011212585377506912
    2. '(' → logprob: -9.375112533569336
    3. 'c' → logprob: -10.875112533569336
    4. '(line' → logprob: -12.250112533569336
    5. ')c' → logprob: -13.250112533569336
    6. '(
' → logprob: -14.375112533569336
    7. '('' → logprob: -15.250112533569336
    8. '((' → logprob: -15.375112533569336
    9. ' (' → logprob: -15.750112533569336
    10. '()' → logprob: -16.625112533569336

Token 396: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.513339445111342e-05
    2. ' )' → logprob: -11.500044822692871
    3. '))' → logprob: -11.750044822692871
    4. '[' → logprob: -11.750044822692871
    5. '<|end|>' → logprob: -12.125044822692871
    6. ')
' → logprob: -12.750044822692871
    7. ')))' → logprob: -12.875044822692871
    8. ')}}' → logprob: -13.000044822692871
    9. ')])' → logprob: -13.250044822692871
    10. ')return' → logprob: -14.375044822692871

Token 397: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: ' n' (ID: 297)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: '=int' (ID: 37431)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3748431205749512
    2. 'e' → logprob: -1.6248431205749512
    3. 'o' → logprob: -2.124843120574951
    4. 'um' → logprob: -2.499843120574951
    5. 'u' → logprob: -2.749843120574951
    6. '   ' → logprob: -3.124843120574951
    7. '#' → logprob: -3.124843120574951
    8. '=' → logprob: -3.624843120574951
    9. '    ' → logprob: -3.874843120574951
    10. '.' → logprob: -4.374843120574951

Token 400: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005410005105659366
    2. 'input' → logprob: -7.6255412101745605
    3. ' (' → logprob: -10.500540733337402
    4. '(' → logprob: -10.875540733337402
    5. '()' → logprob: -12.750540733337402
    6. '=input' → logprob: -13.375540733337402
    7. ' input' → logprob: -13.875540733337402
    8. '(sys' → logprob: -15.250540733337402
    9. '(
' → logprob: -15.625540733337402
    10. ' ' → logprob: -15.750540733337402

Token 401: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7025021910667419
    2. '())' → logprob: -0.7025021910667419
    3. ')' → logprob: -4.702502250671387
    4. '(' → logprob: -8.952502250671387
    5. '().' → logprob: -10.202502250671387
    6. '())
' → logprob: -10.577502250671387
    7. ' ())' → logprob: -10.952502250671387
    8. '()
' → logprob: -11.202502250671387
    9. '();)' → logprob: -12.702502250671387
    10. '()\' → logprob: -13.077502250671387

Token 402: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 403: ' sale' (ID: 7357)
  Prédit: ' orders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' orders' → logprob: -1.8591145277023315
    2. ' order' → logprob: -1.9841145277023315
    3. 'order' → logprob: -2.234114646911621
    4. 'orders' → logprob: -2.984114646911621
    5. '       ' → logprob: -3.359114646911621
    6. 'for' → logprob: -3.609114646911621
    7. ' products' → logprob: -3.859114646911621
    8. ' items' → logprob: -3.984114646911621
    9. ' for' → logprob: -3.984114646911621
    10. ' routes' → logprob: -4.109114646911621

Token 404: '_info' (ID: 6744)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.028624892234802246
    2. '_items' → logprob: -4.028625011444092
    3. '_' → logprob: -5.028625011444092
    4. '[' → logprob: -7.278625011444092
    5. 'items' → logprob: -7.528625011444092
    6. '=' → logprob: -7.778625011444092
    7. ' =' → logprob: -7.903625011444092
    8. '_price' → logprob: -8.278624534606934
    9. '_positions' → logprob: -8.778624534606934
    10. '_products' → logprob: -8.903624534606934

Token 405: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09473128616809845
    2. ' =' → logprob: -2.469731330871582
    3. '[' → logprob: -5.594731330871582
    4. '=[' → logprob: -6.969731330871582
    5. '=[]' → logprob: -7.844731330871582
    6. ' =[' → logprob: -8.469731330871582
    7. 's' → logprob: -9.094731330871582
    8. '=[
' → logprob: -10.219731330871582
    9. '=input' → logprob: -10.469731330871582
    10. '={}' → logprob: -10.469731330871582

Token 406: '{}' (ID: 12083)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02652936987578869
    2. '[]' → logprob: -3.901529312133789
    3. 'input' → logprob: -5.651529312133789
    4. ']' → logprob: -7.026529312133789
    5. ' list' → logprob: -7.151529312133789
    6. 'tuple' → logprob: -8.026529312133789
    7. '[input' → logprob: -8.651529312133789
    8. '[' → logprob: -9.401529312133789
    9. '[list' → logprob: -9.901529312133789
    10. ' []' → logprob: -10.276529312133789

Token 407: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1961115449666977
    2. 'for' → logprob: -1.8211115598678589
    3. ']' → logprob: -4.696111679077148
    4. '()' → logprob: -5.071111679077148
    5. ')' → logprob: -8.196111679077148
    6. '	for' → logprob: -8.821111679077148
    7. ' ' → logprob: -9.321111679077148
    8. '   ' → logprob: -9.696111679077148
    9. '()]' → logprob: -9.946111679077148
    10. '<|end|>' → logprob: -10.196111679077148

Token 408: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001099968678317964
    2. ' _' → logprob: -7.126100063323975
    3. '_range' → logprob: -8.501099586486816
    4. '_n' → logprob: -9.876099586486816
    5. '_i' → logprob: -10.751099586486816
    6. '_x' → logprob: -11.501099586486816
    7. ' range' → logprob: -12.876099586486816
    8. '_in' → logprob: -13.126099586486816
    9. '_s' → logprob: -14.001099586486816
    10. 'i' → logprob: -15.001099586486816

Token 409: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7351542711257935
    2. '_' → logprob: -1.1101542711257935
    3. 'range' → logprob: -1.9851542711257935
    4. ' in' → logprob: -3.110154151916504
    5. ' _' → logprob: -5.235154151916504
    6. 'in' → logprob: -6.360154151916504
    7. '_range' → logprob: -6.485154151916504
    8. 'i' → logprob: -8.235154151916504
    9. '_n' → logprob: -9.110154151916504
    10. '(range' → logprob: -10.235154151916504

Token 410: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6932855844497681
    2. 'range' → logprob: -0.6932855844497681
    3. '_' → logprob: -8.943285942077637
    4. '_range' → logprob: -11.818285942077637
    5. ' _' → logprob: -16.19328498840332
    6. '(range' → logprob: -16.44328498840332
    7. '	range' → logprob: -16.44328498840332
    8. '
' → logprob: -16.81828498840332
    9. ' ' → logprob: -18.56828498840332
    10. 'in' → logprob: -18.81828498840332

Token 411: '(' (ID: 7)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06412681937217712
    2. 'range' → logprob: -3.18912672996521
    3. ' range' → logprob: -4.814126968383789
    4. '(n' → logprob: -5.064126968383789
    5. ' n' → logprob: -5.314126968383789
    6. '_' → logprob: -7.439126968383789
    7. '_n' → logprob: -7.564126968383789
    8. '(range' → logprob: -9.439126968383789
    9. ' (' → logprob: -9.564126968383789
    10. '(' → logprob: -9.689126968383789

Token 412: '10' (ID: 702)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00047071068547666073
    2. 'X' → logprob: -9.250471115112305
    3. '(n' → logprob: -9.500471115112305
    4. '100' → logprob: -9.750471115112305
    5. '10' → logprob: -9.875471115112305
    6. '2' → logprob: -10.500471115112305
    7. '101' → logprob: -10.750471115112305
    8. '11' → logprob: -11.000471115112305
    9. '(' → logprob: -11.000471115112305
    10. '4' → logprob: -11.125471115112305

Token 413: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011975488450843841
    2. ']' → logprob: -9.125120162963867
    3. ')' → logprob: -12.000120162963867
    4. ')]
' → logprob: -13.625120162963867
    5. ' )' → logprob: -14.125120162963867
    6. '])' → logprob: -14.250120162963867
    7. ' ]' → logprob: -14.375120162963867
    8. '0' → logprob: -15.000120162963867
    9. '])]' → logprob: -15.500120162963867
    10. ')]

' → logprob: -15.750120162963867

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45854097604751587
    2. '<|end|>' → logprob: -1.458540916442871
    3. ' for' → logprob: -2.833540916442871
    4. '	' → logprob: -3.208540916442871
    5. 'for' → logprob: -4.208540916442871
    6. '
' → logprob: -5.708540916442871
    7. '	for' → logprob: -5.833540916442871
    8. '        
' → logprob: -6.083540916442871
    9. '<|end|>' → logprob: -6.208540916442871
    10. '   ' → logprob: -6.208540916442871

Token 415: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47199171781539917
    2. '       ' → logprob: -1.596991777420044
    3. 'for' → logprob: -2.346991777420044
    4. '<|end|>' → logprob: -2.971991777420044
    5. '	' → logprob: -4.721991539001465
    6. '
' → logprob: -4.971991539001465
    7. '	for' → logprob: -5.471991539001465
    8. ' ' → logprob: -6.096991539001465
    9. '   ' → logprob: -6.221991539001465
    10. '<|end|>' → logprob: -7.971991539001465

Token 416: ' storing' (ID: 42787)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5330113768577576
    2. 'for' → logprob: -1.6580114364624023
    3. '       ' → logprob: -2.0330114364624023
    4. '        ' → logprob: -3.6580114364624023
    5. ' ' → logprob: -3.7830114364624023
    6. '   ' → logprob: -4.533011436462402
    7. '           ' → logprob: -4.908011436462402
    8. '    ' → logprob: -5.158011436462402
    9. 'n' → logprob: -5.658011436462402
    10. ' n' → logprob: -6.783011436462402

Token 417: ' [' (ID: 723)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7897568941116333
    2. 'for' → logprob: -0.9147568941116333
    3. ' ' → logprob: -2.6647567749023438
    4. '       ' → logprob: -4.414756774902344
    5. '        ' → logprob: -4.664756774902344
    6. '    ' → logprob: -4.914756774902344
    7. 'x' → logprob: -4.914756774902344
    8. ' sale' → logprob: -5.164756774902344
    9. ' x' → logprob: -5.289756774902344
    10. '_' → logprob: -5.664756774902344

Token 418: 'discount' (ID: 50794)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8882922530174255
    2. ' x' → logprob: -1.8882923126220703
    3. '_]' → logprob: -2.6382923126220703
    4. ' (' → logprob: -2.8882923126220703
    5. 'i' → logprob: -2.8882923126220703
    6. ' _' → logprob: -3.1382923126220703
    7. '_' → logprob: -3.2632923126220703
    8. ']' → logprob: -3.5132923126220703
    9. ' i' → logprob: -3.6382923126220703
    10. ' ]' → logprob: -3.8882923126220703

Token 419: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1403357982635498
    2. ']' → logprob: -1.2653357982635498
    3. ' ,' → logprob: -2.01533579826355
    4. '_rate' → logprob: -2.64033579826355
    5. '])' → logprob: -3.26533579826355
    6. 'rate' → logprob: -3.26533579826355
    7. ')' → logprob: -4.265336036682129
    8. '][' → logprob: -4.640336036682129
    9. ']=' → logprob: -4.640336036682129
    10. ')]' → logprob: -4.640336036682129

Token 420: ',e' (ID: 43127)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.48217546939849854
    2. 'count' → logprob: -1.9821754693984985
    3. 'ales' → logprob: -2.607175350189209
    4. 'old' → logprob: -3.232175350189209
    5. 't' → logprob: -3.357175350189209
    6. 'quantity' → logprob: -3.982175350189209
    7. 'price' → logprob: -4.107175350189209
    8. ']' → logprob: -4.857175350189209
    9. 'amount' → logprob: -5.357175350189209
    10. '0' → logprob: -5.607175350189209

Token 421: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019494930282235146
    2. ',' → logprob: -4.769495010375977
    3. 't' → logprob: -5.394495010375977
    4. ',t' → logprob: -7.144495010375977
    5. ' ]' → logprob: -7.269495010375977
    6. 'time' → logprob: -7.519495010375977
    7. '_time' → logprob: -7.894495010375977
    8. 'price' → logprob: -7.894495010375977
    9. ',p' → logprob: -8.394495010375977
    10. '_]' → logprob: -8.394495010375977

Token 422: ' per' (ID: 777)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 423: ' product' (ID: 1888)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -1.4278403520584106
    2. 'range' → logprob: -1.5528403520584106
    3. 'product' → logprob: -1.8028403520584106
    4. ' range' → logprob: -2.427840232849121
    5. ' item' → logprob: -3.177840232849121
    6. 'token' → logprob: -3.302840232849121
    7. 'i' → logprob: -3.677840232849121
    8. ' product' → logprob: -3.677840232849121
    9. 'x' → logprob: -4.177840232849121
    10. 's' → logprob: -4.177840232849121

Token 424: ' number' (ID: 2086)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.997417151927948
    2. '<|end|>' → logprob: -1.4974172115325928
    3. 'for' → logprob: -1.8724172115325928
    4. ']' → logprob: -1.8724172115325928
    5. 's' → logprob: -4.622416973114014
    6. ',' → logprob: -4.622416973114014
    7. '[]' → logprob: -4.872416973114014
    8. '[' → logprob: -5.122416973114014
    9. '_tokens' → logprob: -5.372416973114014
    10. '   ' → logprob: -5.372416973114014

Token 425: ';' (ID: 26)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 426: ' only' (ID: 1606)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4946524500846863
    2. ' for' → logprob: -0.9946524500846863
    3. '<|end|>' → logprob: -3.994652509689331
    4. '       ' → logprob: -7.744652271270752
    5. 'continue' → logprob: -8.24465274810791
    6. '#' → logprob: -8.36965274810791
    7. '	for' → logprob: -8.74465274810791
    8. ' ' → logprob: -8.99465274810791
    9. '
' → logprob: -8.99465274810791
    10. '<|end|>' → logprob: -9.11965274810791

Token 427: ' one' (ID: 1001)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9341970682144165
    2. 'for' → logprob: -0.9341970682144165
    3. '[' → logprob: -3.184196949005127
    4. 'x' → logprob: -3.934196949005127
    5. 'if' → logprob: -4.184196949005127
    6. '#' → logprob: -4.309196949005127
    7. ' if' → logprob: -4.559196949005127
    8. ' in' → logprob: -4.684196949005127
    9. ' ' → logprob: -4.809196949005127
    10. '0' → logprob: -4.809196949005127

Token 428: ' per' (ID: 777)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6093977689743042
    2. '<|end|>' → logprob: -1.2343977689743042
    3. 'def' → logprob: -3.9843978881835938
    4. 'token' → logprob: -4.109397888183594
    5. 'for' → logprob: -4.234397888183594
    6. ']' → logprob: -4.234397888183594
    7. '[' → logprob: -4.359397888183594
    8. '[]' → logprob: -4.609397888183594
    9. '<|end|>' → logprob: -4.734397888183594
    10. '_' → logprob: -4.859397888183594

Token 429: ' g' (ID: 329)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.3446480333805084
    2. 'line' → logprob: -2.5946481227874756
    3. 'range' → logprob: -3.3446481227874756
    4. ' product' → logprob: -3.3446481227874756
    5. '<|end|>' → logprob: -3.4696481227874756
    6. 'sale' → logprob: -3.9696481227874756
    7. 'number' → logprob: -4.2196478843688965
    8. '[]' → logprob: -4.5946478843688965
    9. '[' → logprob: -4.5946478843688965
    10. 'n' → logprob: -4.7196478843688965

Token 430: ' per' (ID: 777)
  Prédit: 'ood'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ood' → logprob: -0.6810794472694397
    2. 'roup' → logprob: -1.931079387664795
    3. 'iven' → logprob: -3.056079387664795
    4. 'eneral' → logprob: -3.181079387664795
    5. 'product' → logprob: -3.556079387664795
    6. 'oods' → logprob: -3.681079387664795
    7. ']' → logprob: -3.931079387664795
    8. 'range' → logprob: -4.056079387664795
    9. ')' → logprob: -4.181079387664795
    10. '[' → logprob: -4.431079387664795

Token 431: ' input' (ID: 3422)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2306179404258728
    2. ' range' → logprob: -2.4806180000305176
    3. 'product' → logprob: -2.9806180000305176
    4. 'line' → logprob: -3.8556180000305176
    5. 'for' → logprob: -4.980618000030518
    6. 'sale' → logprob: -5.355618000030518
    7. ' line' → logprob: -5.605618000030518
    8. 'token' → logprob: -5.730618000030518
    9. 'index' → logprob: -5.855618000030518
    10. 'list' → logprob: -5.855618000030518

Token 432: ' assumed' (ID: 37703)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 433: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3888283669948578
    2. '<|end|>' → logprob: -2.0138282775878906
    3. ' ' → logprob: -2.8888282775878906
    4. '	' → logprob: -3.2638282775878906
    5. ' for' → logprob: -3.6388282775878906
    6. '        ' → logprob: -3.6388282775878906
    7. 'for' → logprob: -5.013828277587891
    8. '        
' → logprob: -5.013828277587891
    9. '   ' → logprob: -5.388828277587891
    10. ' 
' → logprob: -5.638828277587891

Token 435: ' product' (ID: 1888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.787250280380249
    2. ' for' → logprob: -1.537250280380249
    3. 'for' → logprob: -1.912250280380249
    4. '	' → logprob: -2.037250280380249
    5. '<|end|>' → logprob: -4.162250518798828
    6. '	for' → logprob: -4.537250518798828
    7. '		' → logprob: -5.412250518798828
    8. '        ' → logprob: -5.662250518798828
    9. ' ' → logprob: -5.662250518798828
    10. '   ' → logprob: -5.912250518798828

Token 436: '_info' (ID: 6744)
  Prédit: '_numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -1.2213788032531738
    2. 's' → logprob: -1.7213788032531738
    3. '_info' → logprob: -2.096378803253174
    4. '_' → logprob: -2.221378803253174
    5. '_num' → logprob: -2.971378803253174
    6. '_number' → logprob: -3.096378803253174
    7. '_s' → logprob: -3.221378803253174
    8. '=' → logprob: -3.346378803253174
    9. '_prices' → logprob: -4.221378803253174
    10. '_nums' → logprob: -4.596378803253174

Token 437: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24404193460941315
    2. ' =' → logprob: -2.619041919708252
    3. '=[' → logprob: -2.744041919708252
    4. '=[]' → logprob: -2.744041919708252
    5. '[' → logprob: -4.994041919708252
    6. 's' → logprob: -6.119041919708252
    7. '={}' → logprob: -6.119041919708252
    8. ' =[' → logprob: -6.494041919708252
    9. '=[[' → logprob: -7.119041919708252
    10. '=[]
' → logprob: -8.49404239654541

Token 438: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32947301864624023
    2. ' =' → logprob: -1.7044730186462402
    3. '=[]' → logprob: -2.3294730186462402
    4. '=[' → logprob: -7.07947301864624
    5. ' =[' → logprob: -8.829473495483398
    6. '=[]
' → logprob: -9.079473495483398
    7. '=line' → logprob: -9.829473495483398
    8. '=list' → logprob: -9.954473495483398
    9. '=[
' → logprob: -10.079473495483398
    10. '[' → logprob: -10.329473495483398

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11686363816261292
    2. '	' → logprob: -2.86686372756958
    3. '<|end|>' → logprob: -4.24186372756958
    4. ' for' → logprob: -4.49186372756958
    5. '        
' → logprob: -5.24186372756958
    6. '   ' → logprob: -5.61686372756958
    7. 'for' → logprob: -5.74186372756958
    8. ' ' → logprob: -5.86686372756958
    9. '[' → logprob: -6.24186372756958
    10. '		
' → logprob: -6.61686372756958

Token 440: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1936684548854828
    2. '	' → logprob: -2.4436683654785156
    3. ' for' → logprob: -3.0686683654785156
    4. 'for' (adapté à ' for') → logprob: -4.318668365478516
    5. '        ' → logprob: -5.443668365478516
    6. '   ' → logprob: -5.568668365478516
    7. ' ' → logprob: -5.943668365478516
    8. '        
' → logprob: -6.068668365478516
    9. ' ' → logprob: -6.318668365478516
    10. '		' → logprob: -6.443668365478516

Token 441: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6659082770347595
    2. ' _' → logprob: -0.7909082770347595
    3. ' i' → logprob: -3.7909083366394043
    4. '_i' → logprob: -4.915908336639404
    5. 'i' → logprob: -6.165908336639404
    6. '_g' → logprob: -7.915908336639404
    7. ' g' → logprob: -8.290907859802246
    8. 'g' → logprob: -9.915907859802246
    9. ' ' → logprob: -10.290907859802246
    10. '_=' → logprob: -11.040907859802246

Token 442: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.576416552066803
    2. ' in' → logprob: -0.826416552066803
    3. 'i' → logprob: -8.576416969299316
    4. ' ' → logprob: -9.201416969299316
    5. 'range' → logprob: -10.076416969299316
    6. 's' → logprob: -10.201416969299316
    7. '_' → logprob: -10.201416969299316
    8. ' _' → logprob: -10.701416969299316
    9. 'n' → logprob: -11.076416969299316
    10. '_in' → logprob: -11.951416969299316

Token 443: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011771318968385458
    2. ' range' → logprob: -6.7511773109436035
    3. 'product' → logprob: -13.501176834106445
    4. 'n' → logprob: -13.626176834106445
    5. 'input' → logprob: -13.626176834106445
    6. 'in' → logprob: -13.876176834106445
    7. ' ' → logprob: -14.626176834106445
    8. 'r' → logprob: -14.876176834106445
    9. ')' → logprob: -15.126176834106445
    10. '_' → logprob: -15.751176834106445

Token 444: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5855118036270142
    2. '(n' → logprob: -0.9605118036270142
    3. ' n' → logprob: -2.8355116844177246
    4. '(' → logprob: -6.585511684417725
    5. ' (' → logprob: -7.835511684417725
    6. ' ' → logprob: -12.460512161254883
    7. '(
' → logprob: -12.460512161254883
    8. '(int' → logprob: -12.835512161254883
    9. '	n' → logprob: -13.460512161254883
    10. 'range' → logprob: -13.835512161254883

Token 445: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4747825562953949
    2. '):' → logprob: -0.9747825860977173
    3. ')' → logprob: -8.349782943725586
    4. ':' → logprob: -9.099782943725586
    5. '):
' → logprob: -9.224782943725586
    6. ',' → logprob: -9.349782943725586
    7. ':
' → logprob: -9.974782943725586
    8. ' ):' → logprob: -10.599782943725586
    9. '+' → logprob: -10.849782943725586
    10. '   ' → logprob: -10.974782943725586

Token 446: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5669839382171631
    2. ' line' → logprob: -1.566983938217163
    3. '       ' → logprob: -1.816983938217163
    4. ' sale' → logprob: -3.566983938217163
    5. ' product' → logprob: -5.066984176635742
    6. '           ' → logprob: -5.191984176635742
    7. ' s' → logprob: -5.941984176635742
    8. '    ' → logprob: -6.066984176635742
    9. ' code' → logprob: -6.191984176635742
    10. 'line' → logprob: -6.316984176635742

Token 447: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.7180626392364502
    2. 'l' → logprob: -1.9680626392364502
    3. 'a' → logprob: -2.34306263923645
    4. 's' → logprob: -2.71806263923645
    5. '   ' → logprob: -3.34306263923645
    6. ' g' → logprob: -3.59306263923645
    7. 'line' → logprob: -3.71806263923645
    8. 'data' → logprob: -3.71806263923645
    9. ' l' → logprob: -3.84306263923645
    10. 'p' → logprob: -4.093062400817871

Token 448: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12762369215488434
    2. ' ,' → logprob: -2.3776237964630127
    3. ' =' → logprob: -4.377623558044434
    4. '=' → logprob: -5.377623558044434
    5. ',input' → logprob: -5.627623558044434
    6. '=input' → logprob: -6.627623558044434
    7. ',g' → logprob: -6.752623558044434
    8. ',s' → logprob: -7.627623558044434
    9. ',int' → logprob: -7.752623558044434
    10. ' ' → logprob: -7.877623558044434

Token 449: ',s' (ID: 20379)
  Prédit: ',s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.2476814091205597
    2. '=' → logprob: -2.4976813793182373
    3. ',p' → logprob: -2.7476813793182373
    4. ' =' → logprob: -3.4976813793182373
    5. ',' → logprob: -4.747681617736816
    6. ',e' → logprob: -5.247681617736816
    7. 's' → logprob: -5.372681617736816
    8. ',input' → logprob: -5.497681617736816
    9. ',k' → logprob: -5.997681617736816
    10. '=input' → logprob: -6.122681617736816

Token 450: ',e' (ID: 43127)
  Prédit: ',e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.0002028251619776711
    2. ',' → logprob: -10.000203132629395
    3. ',s' → logprob: -10.500203132629395
    4. ' ,' → logprob: -10.500203132629395
    5. ',t' → logprob: -10.875203132629395
    6. 'e' → logprob: -11.000203132629395
    7. ' =' → logprob: -11.125203132629395
    8. '=' → logprob: -11.250203132629395
    9. ',p' → logprob: -11.875203132629395
    10. '_,' → logprob: -12.625203132629395

Token 451: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013682155404239893
    2. ' =' → logprob: -7.251368045806885
    3. '=list' → logprob: -7.876368045806885
    4. '=input' → logprob: -8.251368522644043
    5. '=line' → logprob: -11.501368522644043
    6. '=sys' → logprob: -13.251368522644043
    7. 'map' → logprob: -13.376368522644043
    8. '=[' → logprob: -13.501368522644043
    9. ')=' → logprob: -14.376368522644043
    10. '=_' → logprob: -14.501368522644043

Token 452: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.010431844741106033
    2. 'input' → logprob: -4.88543176651001
    3. ' map' → logprob: -6.01043176651001
    4. 'list' → logprob: -8.010432243347168
    5. ' input' → logprob: -10.260432243347168
    6. ' list' → logprob: -14.135432243347168
    7. 'tuple' → logprob: -15.010432243347168
    8. '(map' → logprob: -15.260432243347168
    9. '	map' → logprob: -15.510432243347168
    10. 'sys' → logprob: -16.13543128967285

Token 453: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001342254807241261
    2. '(' → logprob: -6.876342296600342
    3. 'int' → logprob: -8.126341819763184
    4. '(
' → logprob: -12.251341819763184
    5. '=int' → logprob: -12.376341819763184
    6. '[int' → logprob: -13.501341819763184
    7. '(lambda' → logprob: -13.501341819763184
    8. '(str' → logprob: -14.376341819763184
    9. ' (' → logprob: -14.626341819763184
    10. ' int' → logprob: -15.001341819763184

Token 454: ',input' (ID: 123014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.2904061079025269
    2. ')' → logprob: -1.6654061079025269
    3. '().' → logprob: -1.6654061079025269
    4. '())' → logprob: -1.9154061079025269
    5. '()' → logprob: -2.6654062271118164
    6. '(input' → logprob: -2.7904062271118164
    7. ',input' → logprob: -2.9154062271118164
    8. ' input' → logprob: -5.290406227111816
    9. '=input' → logprob: -5.415406227111816
    10. '(' → logprob: -6.540406227111816

Token 455: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001478796184528619
    2. '()' → logprob: -8.875147819519043
    3. '())' → logprob: -11.875147819519043
    4. '()
' → logprob: -14.375147819519043
    5. ')' → logprob: -15.125147819519043
    6. '(' → logprob: -16.87514877319336
    7. '().
' → logprob: -17.37514877319336
    8. ' ().' → logprob: -17.37514877319336
    9. '();)' → logprob: -17.50014877319336
    10. '()\' → logprob: -18.00014877319336

Token 456: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.696889623621246e-06
    2. 'strip' → logprob: -13.00000286102295
    3. ' split' → logprob: -15.62500286102295
    4. 'spl' → logprob: -16.125001907348633
    5. '(split' → logprob: -16.750001907348633
    6. '.split' → logprob: -17.500001907348633
    7. 'rstrip' → logprob: -18.375001907348633
    8. '().' → logprob: -18.875001907348633
    9. ')' → logprob: -19.000001907348633
    10. '_split' → logprob: -19.250001907348633

Token 457: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.280038982629776
    2. '())' → logprob: -1.6550389528274536
    3. '()' → logprob: -3.780039072036743
    4. '())
' → logprob: -4.030038833618164
    5. ')
' → logprob: -4.405038833618164
    6. '()
' → logprob: -8.405038833618164
    7. '(' → logprob: -10.030038833618164
    8. '())
' → logprob: -11.405038833618164
    9. ')
' → logprob: -11.655038833618164
    10. '());' → logprob: -11.780038833618164

Token 458: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024440274573862553
    2. '<|end|>' → logprob: -6.502443790435791
    3. '       ' → logprob: -7.877443790435791
    4. '<|end|>' → logprob: -8.62744426727295
    5. ',' → logprob: -9.25244426727295
    6. '
' → logprob: -9.62744426727295
    7. 'product' → logprob: -10.25244426727295
    8. '		' → logprob: -10.37744426727295
    9. '   ' → logprob: -10.75244426727295
    10. '#' → logprob: -11.00244426727295

Token 459: ' product' (ID: 1888)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8794820308685303
    2. 'product' (adapté à ' product') → logprob: -1.6294820308685303
    3. ' product' → logprob: -1.7544820308685303
    4. ' sale' → logprob: -2.5044820308685303
    5. 'sale' → logprob: -3.0044820308685303
    6. '       ' → logprob: -3.0044820308685303
    7. '
' → logprob: -3.6294820308685303
    8. '   ' → logprob: -5.629482269287109
    9. '	product' → logprob: -7.254482269287109
    10. ' 
' → logprob: -7.379482269287109

Token 460: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.0002354832977289334
    2. 'info' → logprob: -8.375235557556152
    3. '=' → logprob: -13.875235557556152
    4. 's' → logprob: -14.375235557556152
    5. '=_' → logprob: -14.875235557556152
    6. '_information' → logprob: -14.875235557556152
    7. '_infos' → logprob: -15.000235557556152
    8. 'Info' → logprob: -15.250235557556152
    9. '_INFO' → logprob: -15.500235557556152
    10. '_' → logprob: -15.500235557556152

Token 461: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.632542913896032e-05
    2. 'list' → logprob: -11.125046730041504
    3. 's' → logprob: -11.250046730041504
    4. '=' → logprob: -12.375046730041504
    5. '[' → logprob: -12.500046730041504
    6. '.append' → logprob: -12.750046730041504
    7. '_' → logprob: -13.500046730041504
    8. '_lists' → logprob: -13.625046730041504
    9. '_l' → logprob: -14.000046730041504
    10. '[_' → logprob: -14.125046730041504

Token 462: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005243952851742506
    2. '.' → logprob: -5.25524377822876
    3. '.app' → logprob: -12.255244255065918
    4. '.setdefault' → logprob: -13.380244255065918
    5. '.ap' → logprob: -13.880244255065918
    6. ' .' → logprob: -14.255244255065918
    7. ').' → logprob: -14.505244255065918
    8. '.extend' → logprob: -14.755244255065918
    9. '.insert' → logprob: -15.880244255065918
    10. '.py' → logprob: -15.880244255065918

Token 463: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0012627330143004656
    2. '(' → logprob: -7.126262664794922
    3. '(g' → logprob: -7.751262664794922
    4. '([' → logprob: -10.501262664794922
    5. '[(' → logprob: -16.376262664794922
    6. ' (' → logprob: -16.626262664794922
    7. '(([' → logprob: -17.126262664794922
    8. ' ((' → logprob: -17.251262664794922
    9. ' ' → logprob: -17.376262664794922
    10. '(('' → logprob: -17.376262664794922

Token 464: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0011706985533237457
    2. ' g' → logprob: -6.751170635223389
    3. '	g' → logprob: -16.001171112060547
    4. ' ' → logprob: -16.126171112060547
    5. '_g' → logprob: -16.126171112060547
    6. ')' → logprob: -16.501171112060547
    7. '   ' → logprob: -16.501171112060547
    8. 'x' → logprob: -16.751171112060547
    9. '
' → logprob: -17.001171112060547
    10. 's' → logprob: -17.376171112060547

Token 465: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.4743187129497528
    2. ',' → logprob: -0.9743187427520752
    3. ' ,' → logprob: -8.474318504333496
    4. ',
' → logprob: -10.974318504333496
    5. ',g' → logprob: -11.974318504333496
    6. ',

' → logprob: -13.724318504333496
    7. ')' → logprob: -14.349318504333496
    8. ',)' → logprob: -14.349318504333496
    9. ',int' → logprob: -14.599318504333496
    10. '

' → logprob: -14.599318504333496

Token 466: ',s' (ID: 20379)
  Prédit: ',s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.0070610735565423965
    2. ',' → logprob: -5.007061004638672
    3. ' ,' → logprob: -8.257061004638672
    4. 's' → logprob: -9.507061004638672
    5. ' s' → logprob: -12.632061004638672
    6. ',e' → logprob: -12.632061004638672
    7. ',
' → logprob: -13.757061004638672
    8. '
' → logprob: -14.507061004638672
    9. ',d' → logprob: -14.507061004638672
    10. ')' → logprob: -14.757061004638672

Token 467: ',e' (ID: 43127)
  Prédit: ',e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.011124220676720142
    2. ',' → logprob: -4.511124134063721
    3. ' ,' → logprob: -9.636124610900879
    4. ',
' → logprob: -12.761124610900879
    5. ',s' → logprob: -13.386124610900879
    6. ',

' → logprob: -13.636124610900879
    7. ')' → logprob: -13.761124610900879
    8. 'e' → logprob: -14.011124610900879
    9. '))' → logprob: -14.886124610900879
    10. ',end' → logprob: -14.886124610900879

Token 468: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16186214983463287
    2. ')' → logprob: -1.9118621349334717
    3. '))
' → logprob: -6.661862373352051
    4. ')
' → logprob: -8.03686237335205
    5. ')))' → logprob: -11.03686237335205
    6. '),' → logprob: -12.41186237335205
    7. '));' → logprob: -12.78686237335205
    8. ',' → logprob: -12.78686237335205
    9. ')\' → logprob: -13.16186237335205
    10. '))

' → logprob: -13.66186237335205

Token 469: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 470: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6626824140548706
    2. '<|end|>' → logprob: -0.7876824140548706
    3. '
' → logprob: -4.28768253326416
    4. '<|end|>' → logprob: -5.28768253326416
    5. 'def' → logprob: -5.78768253326416
    6. '        
' → logprob: -6.91268253326416
    7. '   ' → logprob: -6.91268253326416
    8. ' for' → logprob: -7.03768253326416
    9. '	' → logprob: -7.16268253326416
    10. ' map' → logprob: -7.28768253326416

Token 471: ' map' (ID: 4014)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10015092045068741
    2. 'def' → logprob: -2.8501508235931396
    3. ' map' → logprob: -4.475151062011719
    4. 'dist' → logprob: -4.725151062011719
    5. ' dist' → logprob: -5.600151062011719
    6. '#' → logprob: -5.725151062011719
    7. 'map' → logprob: -6.225151062011719
    8. ' def' → logprob: -6.475151062011719
    9. ' distances' → logprob: -6.850151062011719
    10. 'X' → logprob: -7.475151062011719

Token 472: ' ais' (ID: 36709)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.621131956577301
    2. '   ' → logprob: -0.996131956577301
    3. '#' → logprob: -3.9961318969726562
    4. 'dist' → logprob: -4.371131896972656
    5. 'def' → logprob: -4.496131896972656
    6. '       ' → logprob: -4.746131896972656
    7. '
' → logprob: -5.246131896972656
    8. ' =' → logprob: -5.246131896972656
    9. 'for' → logprob: -5.496131896972656
    10. ' for' → logprob: -5.496131896972656

Token 473: 'les' (ID: 1032)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009410256519913673
    2. ' =' → logprob: -6.134410381317139
    3. '=[]' → logprob: -6.384410381317139
    4. '=' → logprob: -6.634410381317139
    5. 'def' → logprob: -7.009410381317139
    6. '#' → logprob: -7.259410381317139
    7. ')' → logprob: -8.13440990447998
    8. '   ' → logprob: -8.13440990447998
    9. 'for' → logprob: -8.50940990447998
    10. ']' → logprob: -8.63440990447998

Token 474: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: ' shelves' (ID: 52049)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3968980610370636
    2. ' shelves' → logprob: -1.3968980312347412
    3. 'dist' → logprob: -4.14689826965332
    4. '#' → logprob: -4.39689826965332
    5. 'products' → logprob: -5.14689826965332
    6. ' shelf' → logprob: -5.14689826965332
    7. 'map' → logprob: -5.77189826965332
    8. ' distances' → logprob: -5.89689826965332
    9. 'deque' → logprob: -6.02189826965332
    10. 'b' → logprob: -6.52189826965332

Token 476: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 477: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05581122636795044
    2. 'def' → logprob: -3.5558111667633057
    3. '<|end|>' → logprob: -3.9308111667633057
    4. '#' → logprob: -6.555811405181885
    5. '
' → logprob: -7.180811405181885
    6. ' pass' → logprob: -7.305811405181885
    7. ' def' → logprob: -7.555811405181885
    8. '       ' → logprob: -7.680811405181885
    9. '<|end|>' → logprob: -8.055810928344727
    10. '    
' → logprob: -8.430810928344727

Token 478: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6386895179748535
    2. '   ' → logprob: -1.0136895179748535
    3. '#' (adapté à ' #') → logprob: -3.7636895179748535
    4. ' dist' → logprob: -4.1386895179748535
    5. 'def' → logprob: -4.2636895179748535
    6. ' ais' → logprob: -4.5136895179748535
    7. 's' → logprob: -4.6386895179748535
    8. 'ais' → logprob: -5.3886895179748535
    9. ' #' → logprob: -5.6386895179748535
    10. 'for' → logprob: -5.8886895179748535

Token 479: ' ais' (ID: 36709)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9569306373596191
    2. '   ' → logprob: -1.5819306373596191
    3. '#' → logprob: -1.9569306373596191
    4. ' dist' → logprob: -2.956930637359619
    5. 'for' → logprob: -3.081930637359619
    6. ' ais' → logprob: -3.331930637359619
    7. ' for' → logprob: -3.581930637359619
    8. ' #' → logprob: -3.581930637359619
    9. 'def' → logprob: -3.956930637359619
    10. 's' → logprob: -4.331930637359619

Token 480: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.049659207463264465
    2. 'les' → logprob: -3.799659252166748
    3. '       ' → logprob: -4.174659252166748
    4. 'l' → logprob: -5.424659252166748
    5. '   ' → logprob: -5.799659252166748
    6. 'def' → logprob: -7.049659252166748
    7. 'c' → logprob: -7.174659252166748
    8. '#' → logprob: -7.674659252166748
    9. 'map' → logprob: -8.67465877532959
    10. '           ' → logprob: -8.92465877532959

Token 481: ':' (ID: 25)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.7950611710548401
    2. '=[' → logprob: -1.4200611114501953
    3. ' =' → logprob: -1.9200611114501953
    4. '=' → logprob: -2.1700611114501953
    5. ',' → logprob: -4.545061111450195
    6. '=[
' → logprob: -4.920061111450195
    7. '=[]
' → logprob: -5.170061111450195
    8. '   ' → logprob: -5.920061111450195
    9. ' cells' → logprob: -6.295061111450195
    10. ')' → logprob: -6.420061111450195

Token 482: ' '.' (ID: 12662)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.068938970565796
    2. ' for' → logprob: -1.943938970565796
    3. ''.' → logprob: -2.318938970565796
    4. 'for' → logprob: -2.443938970565796
    5. ' '.'' → logprob: -2.818938970565796
    6. '#' → logprob: -3.568938970565796
    7. '['' → logprob: -3.693938970565796
    8. ' ['' → logprob: -3.693938970565796
    9. '[(' → logprob: -4.068939208984375
    10. '[]' → logprob: -4.068939208984375

Token 483: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15151053667068481
    2. '')' → logprob: -2.02651047706604
    3. '',' → logprob: -6.151510715484619
    4. ')' → logprob: -6.401510715484619
    5. ''or' → logprob: -7.276510715484619
    6. '')]' → logprob: -7.401510715484619
    7. ''),' → logprob: -7.651510715484619
    8. '')
' → logprob: -7.776510715484619
    9. ')'' → logprob: -7.901510715484619
    10. ' or' → logprob: -7.901510715484619

Token 484: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.026109501719474792
    2. ''' → logprob: -3.776109457015991
    3. '','' → logprob: -6.02610969543457
    4. '',' → logprob: -8.77610969543457
    5. ','' → logprob: -9.90110969543457
    6. ' P' → logprob: -10.52610969543457
    7. 'def' → logprob: -10.52610969543457
    8. '
' → logprob: -10.71360969543457
    9. ',P' → logprob: -11.15110969543457
    10. '0' → logprob: -11.33860969543457

Token 485: '';' (ID: 15290)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4158777892589569
    2. '','' → logprob: -1.6658778190612793
    3. '',' → logprob: -2.1658778190612793
    4. '')' → logprob: -4.040877819061279
    5. ')' → logprob: -4.665877819061279
    6. ')'' → logprob: -6.165877819061279
    7. ')','' → logprob: -6.665877819061279
    8. '','.' → logprob: -7.165877819061279
    9. ','' → logprob: -7.290877819061279
    10. ')',' → logprob: -7.415877819061279

Token 486: ' shelves' (ID: 52049)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7165698409080505
    2. 's' → logprob: -2.2165699005126953
    3. '   ' → logprob: -2.4665699005126953
    4. ' shelves' → logprob: -2.7165699005126953
    5. ' #' → logprob: -2.8415699005126953
    6. 'def' → logprob: -2.9665699005126953
    7. '           ' → logprob: -3.3415699005126953
    8. '       ' → logprob: -3.7165699005126953
    9. ' for' → logprob: -4.216569900512695
    10. ' and' → logprob: -4.591569900512695

Token 487: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3229303359985352
    2. ' =' → logprob: -1.4479303359985352
    3. '=['' → logprob: -2.322930335998535
    4. ',' → logprob: -2.572930335998535
    5. '   ' → logprob: -2.697930335998535
    6. '=' → logprob: -3.197930335998535
    7. ' are' → logprob: -3.447930335998535
    8. 'def' → logprob: -3.697930335998535
    9. ' or' → logprob: -3.947930335998535
    10. '='' → logprob: -4.197930335998535

Token 488: ' digits' (ID: 37806)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.3152799606323242
    2. ' all' → logprob: -1.5652799606323242
    3. 'digits' → logprob: -1.8152799606323242
    4. 'all' → logprob: -2.690279960632324
    5. ' digits' → logprob: -3.190279960632324
    6. 'c' → logprob: -3.440279960632324
    7. 'str' → logprob: -3.565279960632324
    8. 'set' → logprob: -3.690279960632324
    9. ' c' → logprob: -4.065279960632324
    10. '[c' → logprob: -4.190279960632324

Token 489: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4540645182132721
    2. '<|end|>' → logprob: -1.0790644884109497
    3. '<|end|>' → logprob: -4.45406436920166
    4. 'def' → logprob: -5.20406436920166
    5. '
' → logprob: -5.57906436920166
    6. '   ' → logprob: -6.20406436920166
    7. ',' → logprob: -7.07906436920166
    8. '#' → logprob: -8.20406436920166
    9. ')' → logprob: -8.45406436920166
    10. '```' → logprob: -8.82906436920166

Token 490: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0381135493516922
    2. 'def' → logprob: -3.413113594055176
    3. 'dist' → logprob: -6.538113594055176
    4. '<|end|>' → logprob: -7.163113594055176
    5. '#' → logprob: -7.538113594055176
    6. 'pass' → logprob: -8.538113594055176
    7. ' dist' → logprob: -8.788113594055176
    8. ' pass' → logprob: -8.913113594055176
    9. '```' → logprob: -8.913113594055176
    10. ' def' → logprob: -9.288113594055176

Token 491: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11190179735422134
    2. '   ' → logprob: -2.3619017601013184
    3. 'def' → logprob: -5.111901760101318
    4. 'dist' → logprob: -6.361901760101318
    5. '
' → logprob: -7.361901760101318
    6. '#' (adapté à ' #') → logprob: -7.611901760101318
    7. '        
' → logprob: -7.736901760101318
    8. ' dist' → logprob: -7.861901760101318
    9. ' distances' → logprob: -8.236902236938477
    10. ' #' → logprob: -8.986902236938477

Token 492: ' movement' (ID: 12772)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32820186018943787
    2. 'dist' → logprob: -1.5782018899917603
    3. ' dist' → logprob: -3.8282017707824707
    4. '#' → logprob: -3.8282017707824707
    5. 'def' → logprob: -4.453201770782471
    6. ' distances' → logprob: -6.078201770782471
    7. ' ais' → logprob: -6.328201770782471
    8. ' #' → logprob: -6.453201770782471
    9. 'distance' → logprob: -6.453201770782471
    10. 'return' → logprob: -6.578201770782471

Token 493: ' allowed' (ID: 9279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5260714292526245
    2. 'def' → logprob: -1.9010714292526245
    3. '=' → logprob: -2.026071548461914
    4. ' =' → logprob: -2.401071548461914
    5. ' on' → logprob: -4.776071548461914
    6. 'from' → logprob: -4.901071548461914
    7. '<|end|>' → logprob: -5.651071548461914
    8. '       ' → logprob: -6.276071548461914
    9. ' for' → logprob: -6.401071548461914
    10. '(' → logprob: -6.526071548461914

Token 494: ' only' (ID: 1606)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24574361741542816
    2. 'def' → logprob: -2.2457435131073
    3. '       ' → logprob: -2.6207435131073
    4. ' for' → logprob: -4.495743751525879
    5. ' in' → logprob: -5.120743751525879
    6. '<|end|>' → logprob: -5.245743751525879
    7. ' to' → logprob: -5.495743751525879
    8. '
' → logprob: -6.370743751525879
    9. '           ' → logprob: -6.495743751525879
    10. '(' → logprob: -6.870743751525879

Token 495: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.4597027897834778
    2. 'on' → logprob: -1.084702730178833
    3. '.' → logprob: -3.834702730178833
    4. 'to' → logprob: -5.459702968597412
    5. ' through' → logprob: -6.709702968597412
    6. ' to' → logprob: -6.834702968597412
    7. ' in' → logprob: -7.084702968597412
    8. 'in' → logprob: -8.209702491760254
    9. 'through' → logprob: -8.209702491760254
    10. '.on' → logprob: -8.459702491760254

Token 496: ' ais' (ID: 36709)
  Prédit: ' ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ais' → logprob: -0.6755120158195496
    2. ''.' → logprob: -1.4255120754241943
    3. 'ais' → logprob: -1.6755120754241943
    4. '.' → logprob: -3.8005120754241943
    5. ' '.'' → logprob: -4.175511837005615
    6. ' aisle' → logprob: -4.425511837005615
    7. ''' → logprob: -4.925511837005615
    8. '['' → logprob: -7.613011837005615
    9. '`.`' → logprob: -7.738011837005615
    10. '.'' → logprob: -7.800511837005615

Token 497: 'les' (ID: 1032)
  Prédit: 'les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.43036216497421265
    2. 'le' → logprob: -1.0553622245788574
    3. 'l' → logprob: -7.805362224578857
    4. '.' → logprob: -8.4303617477417
    5. '[' → logprob: -8.5553617477417
    6. '['' → logprob: -8.6803617477417
    7. '[]' → logprob: -9.0553617477417
    8. '#' → logprob: -9.3053617477417
    9. '```' → logprob: -9.6803617477417
    10. 'es' → logprob: -10.1803617477417

Token 498: ' except' (ID: 6384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12100247293710709
    2. 'def' → logprob: -2.246002435684204
    3. '#' → logprob: -6.246002674102783
    4. 'dist' → logprob: -6.871002674102783
    5. '<|end|>' → logprob: -6.996002674102783
    6. ')' → logprob: -7.246002674102783
    7. ',' → logprob: -7.371002674102783
    8. '       ' → logprob: -7.871002674102783
    9. '    ' → logprob: -8.121002197265625
    10. ' def' → logprob: -8.121002197265625

Token 499: ' initial' (ID: 4871)
  Prédit: ' shelves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shelves' → logprob: -0.8405044674873352
    2. ' shelf' → logprob: -1.7155044078826904
    3. 's' → logprob: -2.3405044078826904
    4. 'def' → logprob: -2.5905044078826904
    5. ''' → logprob: -2.8405044078826904
    6. ''s' → logprob: -3.3405044078826904
    7. ' for' → logprob: -3.7155044078826904
    8. ' '' → logprob: -3.8405044078826904
    9. 'for' → logprob: -4.5905046463012695
    10. ' shelving' → logprob: -5.0905046463012695

Token 500: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6661528944969177
    2. 'def' → logprob: -1.1661529541015625
    3. '<|end|>' → logprob: -3.0411529541015625
    4. ' for' → logprob: -3.2911529541015625
    5. '_' → logprob: -3.7911529541015625
    6. ' def' → logprob: -4.7911529541015625
    7. '
' → logprob: -5.1661529541015625
    8. '    ' → logprob: -5.4161529541015625
    9. '    
' → logprob: -5.4161529541015625
    10. ')' → logprob: -5.4161529541015625

Token 501: ' P' (ID: 398)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1332303285598755
    2. 'P' → logprob: -1.1332303285598755
    3. 'start' → logprob: -1.3832303285598755
    4. ''s' → logprob: -3.633230209350586
    5. ' P' → logprob: -4.008230209350586
    6. 'def' → logprob: -4.633230209350586
    7. ' start' → logprob: -4.758230209350586
    8. ' '' → logprob: -4.758230209350586
    9. 'the' → logprob: -5.508230209350586
    10. 'pass' → logprob: -5.758230209350586

Token 502: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03808373212814331
    2. 'def' → logprob: -3.538083791732788
    3. '       ' → logprob: -5.413083553314209
    4. '
' → logprob: -6.538083553314209
    5. '#' → logprob: -7.288083553314209
    6. ' def' → logprob: -8.413084030151367
    7. 'n' → logprob: -8.663084030151367
    8. ')' → logprob: -8.663084030151367
    9. ',' → logprob: -8.913084030151367
    10. '    ' → logprob: -8.913084030151367

Token 503: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04100034385919571
    2. 'def' → logprob: -3.6660003662109375
    3. '       ' → logprob: -4.4160003662109375
    4. 'dist' → logprob: -6.9160003662109375
    5. ' distances' → logprob: -8.041000366210938
    6. ' dist' → logprob: -8.291000366210938
    7. ')' → logprob: -8.916000366210938
    8. '#' → logprob: -8.916000366210938
    9. ' def' → logprob: -9.041000366210938
    10. ' for' → logprob: -9.166000366210938

Token 504: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11176129430532455
    2. 'dist' → logprob: -2.7367613315582275
    3. 'def' → logprob: -4.236761093139648
    4. '#' (adapté à ' #') → logprob: -4.736761093139648
    5. ' distances' → logprob: -5.486761093139648
    6. ' dist' → logprob: -5.486761093139648
    7. ' ais' → logprob: -5.736761093139648
    8. 'distance' → logprob: -6.611761093139648
    9. 's' → logprob: -7.236761093139648
    10. '    
' → logprob: -7.861761093139648

Token 505: ' need' (ID: 1309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14419522881507874
    2. 'def' → logprob: -2.769195318222046
    3. 'dist' → logprob: -3.144195318222046
    4. '#' → logprob: -3.894195318222046
    5. 'distance' → logprob: -6.269195079803467
    6. 'for' → logprob: -6.269195079803467
    7. 'total' → logprob: -7.644195079803467
    8. 'map' → logprob: -7.644195079803467
    9. 's' → logprob: -8.144195556640625
    10. 'DIST' → logprob: -8.144195556640625

Token 506: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9772039651870728
    2. ' distances' → logprob: -1.7272039651870728
    3. 'to' → logprob: -1.8522039651870728
    4. ' to' → logprob: -2.227203845977783
    5. '<|end|>' → logprob: -2.477203845977783
    6. 'def' → logprob: -2.977203845977783
    7. 'distance' → logprob: -3.977203845977783
    8. 'next' → logprob: -5.477203845977783
    9. ' next' → logprob: -5.602203845977783
    10. ' shortest' → logprob: -5.977203845977783

Token 507: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07807555049657822
    2. 'def' → logprob: -3.453075647354126
    3. '<|end|>' → logprob: -4.078075408935547
    4. '
' → logprob: -4.578075408935547
    5. '    ' → logprob: -5.828075408935547
    6. '    
' → logprob: -6.078075408935547
    7. ',' → logprob: -6.578075408935547
    8. ':' → logprob: -6.703075408935547
    9. '#' → logprob: -6.828075408935547
    10. ' def' → logprob: -7.078075408935547

Token 508: ' each' (ID: 2454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1236563920974731
    2. ' (' → logprob: -1.8736563920974731
    3. 'start' → logprob: -1.8736563920974731
    4. ' start' → logprob: -2.6236562728881836
    5. 's' → logprob: -2.9986562728881836
    6. ' ais' → logprob: -3.2486562728881836
    7. ')' → logprob: -3.6236562728881836
    8. ' all' → logprob: -3.7486562728881836
    9. 'all' → logprob: -3.8736562728881836
    10. 'P' → logprob: -4.123656272888184

Token 509: ' aisle' (ID: 99887)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 510: ' cell' (ID: 4206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1126919537782669
    2. 'def' → logprob: -2.987691879272461
    3. '<|end|>' → logprob: -3.987691879272461
    4. '_' → logprob: -4.737691879272461
    5. 'from' → logprob: -4.987691879272461
    6. '(' → logprob: -5.237691879272461
    7. ',' → logprob: -5.612691879272461
    8. ':' → logprob: -6.112691879272461
    9. ' to' → logprob: -6.862691879272461
    10. '    ' → logprob: -7.362691879272461

Token 511: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14387205243110657
    2. '       ' → logprob: -2.268872022628784
    3. ' pass' → logprob: -4.518872261047363
    4. '<|end|>' → logprob: -5.018872261047363
    5. 'pass' → logprob: -5.268872261047363
    6. '#' → logprob: -6.018872261047363
    7. ' return' → logprob: -7.018872261047363
    8. '    ' → logprob: -7.018872261047363
    9. 'def' → logprob: -7.518872261047363
    10. '
' → logprob: -7.643872261047363

Token 512: ' ais' (ID: 36709)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.9486802220344543
    2. 's' → logprob: -1.8236801624298096
    3. 'adj' → logprob: -1.9486801624298096
    4. 'all' → logprob: -2.9486801624298096
    5. '<|end|>' → logprob: -2.9486801624298096
    6. ' shelf' → logprob: -3.3236801624298096
    7. ' each' → logprob: -3.4486801624298096
    8. 'nearest' → logprob: -3.5736801624298096
    9. ' adjacent' → logprob: -3.8236801624298096
    10. 'next' → logprob: -4.198680400848389

Token 513: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0010274506639689207
    2. 'les' → logprob: -7.126027584075928
    3. 'l' → logprob: -9.50102710723877
    4. 'e' → logprob: -10.12602710723877
    5. '   ' → logprob: -11.43852710723877
    6. '```' → logprob: -11.62602710723877
    7. '
' → logprob: -11.75102710723877
    8. '[' → logprob: -12.31352710723877
    9. '       ' → logprob: -12.43852710723877
    10. '#' → logprob: -12.56352710723877

Token 514: ' adjacent' (ID: 39069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016774674877524376
    2. 'def' → logprob: -4.391774654388428
    3. '<|end|>' → logprob: -7.016774654388428
    4. '#' → logprob: -7.516774654388428
    5. '       ' → logprob: -7.516774654388428
    6. ',' → logprob: -8.266775131225586
    7. ' pass' → logprob: -8.391775131225586
    8. '
' → logprob: -8.516775131225586
    9. ')' → logprob: -8.641775131225586
    10. ' def' → logprob: -8.766775131225586

Token 515: ' shelf' (ID: 40978)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4254717528820038
    2. 'def' → logprob: -1.6754717826843262
    3. '(' → logprob: -2.300471782684326
    4. ':' → logprob: -4.175471782684326
    5. '_' → logprob: -4.550471782684326
    6. ' to' → logprob: -5.175471782684326
    7. 'to' → logprob: -5.175471782684326
    8. '(
' → logprob: -5.550471782684326
    9. '()' → logprob: -5.800471782684326
    10. ')' → logprob: -6.175471782684326

Token 516: ' cells' (ID: 11242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026122508570551872
    2. 'def' → logprob: -3.901122570037842
    3. '#' → logprob: -5.901122570037842
    4. ' pass' → logprob: -7.026122570037842
    5. '       ' → logprob: -7.526122570037842
    6. 'pass' → logprob: -7.526122570037842
    7. ' return' → logprob: -8.651122093200684
    8. ' def' → logprob: -9.026122093200684
    9. 'return' → logprob: -9.026122093200684
    10. ' #' → logprob: -9.651122093200684

Token 517: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03013087995350361
    2. '       ' → logprob: -3.6551308631896973
    3. 'def' → logprob: -6.530130863189697
    4. '    ' → logprob: -7.280130863189697
    5. ' pass' → logprob: -7.405130863189697
    6. '
' → logprob: -8.405131340026855
    7. ' def' → logprob: -8.530131340026855
    8. ' return' → logprob: -9.280131340026855
    9. '    
' → logprob: -9.530131340026855
    10. ' ' → logprob: -9.655131340026855

Token 518: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007405600044876337
    2. 'def' → logprob: -6.132405757904053
    3. ' pass' → logprob: -6.507405757904053
    4. '#' → logprob: -6.882405757904053
    5. 'pass' → logprob: -6.882405757904053
    6. 'return' → logprob: -7.132405757904053
    7. '<|end|>' → logprob: -8.132405281066895
    8. ' return' → logprob: -8.507405281066895
    9. '...' → logprob: -8.757405281066895
    10. '    ' → logprob: -9.507405281066895

Token 519: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061434321105480194
    2. 'dist' → logprob: -3.561434268951416
    3. 'def' → logprob: -4.061434268951416
    4. '#' (adapté à ' #') → logprob: -5.436434268951416
    5. 'pass' → logprob: -5.811434268951416
    6. ' distances' → logprob: -6.436434268951416
    7. ' dist' → logprob: -6.811434268951416
    8. ' pass' → logprob: -6.811434268951416
    9. 'distance' → logprob: -7.311434268951416
    10. 'return' → logprob: -7.561434268951416

Token 520: ' Calculate' (ID: 38942)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01867319829761982
    2. 'def' → logprob: -5.268673419952393
    3. 'dist' → logprob: -5.518673419952393
    4. ' map' → logprob: -5.768673419952393
    5. ' dist' → logprob: -6.268673419952393
    6. ' distances' → logprob: -6.643673419952393
    7. ' return' → logprob: -7.393673419952393
    8. ' def' → logprob: -7.518673419952393
    9. 'return' → logprob: -8.518672943115234
    10. ' res' → logprob: -8.518672943115234

Token 521: ' distance' (ID: 9324)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0628218799829483
    2. ' pass' → logprob: -4.187821865081787
    3. 'def' → logprob: -4.562821865081787
    4. 'pass' → logprob: -4.562821865081787
    5. '#' → logprob: -4.812821865081787
    6. 'dist' → logprob: -5.062821865081787
    7. 'return' → logprob: -6.062821865081787
    8. ' distances' → logprob: -6.437821865081787
    9. ' return' → logprob: -6.812821865081787
    10. '    ' → logprob: -7.312821865081787

Token 522: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07398782670497894
    2. 'def' → logprob: -3.6989877223968506
    3. '       ' → logprob: -4.19898796081543
    4. 'dist' → logprob: -4.82398796081543
    5. '<|end|>' → logprob: -5.07398796081543
    6. '
' → logprob: -5.07398796081543
    7. '#' → logprob: -6.57398796081543
    8. '    
' → logprob: -6.69898796081543
    9. 'import' → logprob: -6.82398796081543
    10. ',' → logprob: -7.07398796081543

Token 523: ' ais' (ID: 36709)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3111099302768707
    2. 'each' → logprob: -2.186110019683838
    3. 'all' → logprob: -2.311110019683838
    4. 'P' → logprob: -3.686110019683838
    5. 'the' → logprob: -4.686110019683838
    6. 's' → logprob: -4.936110019683838
    7. 'def' → logprob: -5.561110019683838
    8. '(' → logprob: -6.686110019683838
    9. 'every' → logprob: -6.686110019683838
    10. ' each' → logprob: -6.811110019683838

Token 524: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.03828854858875275
    2. 'les' → logprob: -3.2882885932922363
    3. 'l' → logprob: -10.538288116455078
    4. 'ue' → logprob: -10.663288116455078
    5. '```' → logprob: -10.663288116455078
    6. 's' → logprob: -11.288288116455078
    7. '
' → logprob: -11.288288116455078
    8. 'ues' → logprob: -11.538288116455078
    9. 'tle' → logprob: -11.538288116455078
    10. '[' → logprob: -11.538288116455078

Token 525: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36478477716445923
    2. 'def' → logprob: -2.7397847175598145
    3. '<|end|>' → logprob: -2.7397847175598145
    4. '_to' → logprob: -3.1147847175598145
    5. '_' → logprob: -3.6147847175598145
    6. ' to' → logprob: -3.8647847175598145
    7. 'from' → logprob: -3.9897847175598145
    8. ',' → logprob: -4.3647847175598145
    9. ')' → logprob: -4.6147847175598145
    10. 'to' → logprob: -5.2397847175598145

Token 526: ' ais' (ID: 36709)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2211933135986328
    2. 'adj' → logprob: -1.4711933135986328
    3. 'all' → logprob: -2.346193313598633
    4. 'each' → logprob: -2.346193313598633
    5. ' shelves' → logprob: -2.596193313598633
    6. 'ais' → logprob: -2.846193313598633
    7. ' ais' → logprob: -2.971193313598633
    8. ' adjacent' → logprob: -3.721193313598633
    9. 'start' → logprob: -4.471193313598633
    10. ' each' → logprob: -4.846193313598633

Token 527: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.01013273186981678
    2. 'e' → logprob: -5.260132789611816
    3. 'les' → logprob: -5.760132789611816
    4. 'ue' → logprob: -7.510132789611816
    5. 'u' → logprob: -8.510132789611816
    6. '#' → logprob: -8.510132789611816
    7. '[]' → logprob: -8.635132789611816
    8. '_' → logprob: -8.760132789611816
    9. 'l' → logprob: -9.635132789611816
    10. 't' → logprob: -10.010132789611816

Token 528: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006171709392219782
    2. '<|end|>' → logprob: -6.006171703338623
    3. 'pass' → logprob: -7.631171703338623
    4. ':' → logprob: -7.631171703338623
    5. '
' → logprob: -8.006172180175781
    6. ',' → logprob: -8.006172180175781
    7. '#' → logprob: -8.131172180175781
    8. 'def' → logprob: -8.131172180175781
    9. ' pass' → logprob: -8.256172180175781
    10. '    
' → logprob: -8.381172180175781

Token 529: 'B' (ID: 33)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22099456191062927
    2. 'adj' → logprob: -2.220994472503662
    3. 'only' → logprob: -2.970994472503662
    4. ' only' → logprob: -5.095994472503662
    5. 'cells' → logprob: -5.345994472503662
    6. ' adjacent' → logprob: -5.720994472503662
    7. 'def' → logprob: -5.720994472503662
    8. '),' → logprob: -5.720994472503662
    9. '#' → logprob: -6.220994472503662
    10. ' cells' → logprob: -6.595994472503662

Token 530: 'FS' (ID: 14179)
  Prédit: 'fs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.6765735149383545
    2. 'FS' → logprob: -1.0515735149383545
    3. 'F' → logprob: -2.3015735149383545
    4. ')' → logprob: -3.6765735149383545
    5. 'f' → logprob: -4.801573753356934
    6. '_' → logprob: -6.301573753356934
    7. '_fs' → logprob: -6.801573753356934
    8. '   ' → logprob: -7.051573753356934
    9. 'e' → logprob: -7.176573753356934
    10. 's' → logprob: -7.301573753356934

Token 531: ' from' (ID: 591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015511149540543556
    2. 'from' → logprob: -5.5155110359191895
    3. '),' → logprob: -6.0155110359191895
    4. ' on' → logprob: -6.1405110359191895
    5. ' from' → logprob: -6.2655110359191895
    6. ' for' → logprob: -7.0155110359191895
    7. ').' → logprob: -7.0155110359191895
    8. '):' → logprob: -7.5155110359191895
    9. 'def' → logprob: -8.015511512756348
    10. ' )' → logprob: -8.265511512756348

Token 532: ' P' (ID: 398)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.04326989874243736
    2. 'P' → logprob: -4.668270111083984
    3. 'all' → logprob: -4.668270111083984
    4. ' start' → logprob: -4.793270111083984
    5. 'each' → logprob: -5.168270111083984
    6. ')' → logprob: -6.168270111083984
    7. 'the' → logprob: -6.293270111083984
    8. 's' → logprob: -6.543270111083984
    9. 'ais' → logprob: -7.543270111083984
    10. '(start' → logprob: -7.793270111083984

Token 533: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009234982542693615
    2. '):' → logprob: -5.13423490524292
    3. ')
' → logprob: -6.63423490524292
    4. '):
' → logprob: -7.13423490524292
    5. 'def' → logprob: -7.75923490524292
    6. ' )' → logprob: -8.759235382080078
    7. '   ' → logprob: -9.009235382080078
    8. ').' → logprob: -9.884235382080078
    9. '())' → logprob: -9.884235382080078
    10. '),' → logprob: -10.009235382080078

Token 534: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03982705995440483
    2. '       ' → logprob: -4.4148268699646
    3. 'dist' → logprob: -4.4148268699646
    4. '#' → logprob: -5.1648268699646
    5. 'def' → logprob: -5.9148268699646
    6. ' distances' → logprob: -6.2898268699646
    7. ' dist' → logprob: -6.5398268699646
    8. ')' → logprob: -7.5398268699646
    9. 'distance' → logprob: -8.164827346801758
    10. ' pass' → logprob: -8.539827346801758

Token 535: ' dist' (ID: 3601)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0100857587531209
    2. 'dist' (adapté à ' dist') → logprob: -5.635085582733154
    3. '   ' → logprob: -6.260085582733154
    4. ' dist' → logprob: -6.385085582733154
    5. ',' → logprob: -7.760085582733154
    6. '        
' → logprob: -8.135086059570312
    7. ' distances' → logprob: -8.135086059570312
    8. ')' → logprob: -8.760086059570312
    9. 'start' → logprob: -8.760086059570312
    10. 'distance' → logprob: -8.760086059570312

Token 536: '_from' (ID: 12526)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09187611192464828
    2. '=b' → logprob: -2.8418760299682617
    3. ' =' → logprob: -4.091876029968262
    4. '=start' → logprob: -4.716876029968262
    5. '=P' → logprob: -6.716876029968262
    6. 'b' → logprob: -6.716876029968262
    7. '[start' → logprob: -7.966876029968262
    8. '=s' → logprob: -8.716876029968262
    9. '_from' → logprob: -9.216876029968262
    10. '(start' → logprob: -9.466876029968262

Token 537: '_start' (ID: 10949)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.020261449739336967
    2. 'P' → logprob: -4.020261287689209
    3. ' start' → logprob: -7.270261287689209
    4. '(start' → logprob: -7.270261287689209
    5. '_start' → logprob: -8.520261764526367
    6. '_P' → logprob: -9.020261764526367
    7. 's' → logprob: -9.645261764526367
    8. '_' → logprob: -9.645261764526367
    9. '_p' → logprob: -9.895261764526367
    10. ' P' → logprob: -10.645261764526367

Token 538: '=b' (ID: 49769)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09412742406129837
    2. '[start' → logprob: -3.0941274166107178
    3. ' =' → logprob: -4.219127655029297
    4. '=start' → logprob: -4.344127655029297
    5. '[' → logprob: -4.719127655029297
    6. '(start' → logprob: -5.594127655029297
    7. '=[' → logprob: -6.594127655029297
    8. '(' → logprob: -6.844127655029297
    9. ',' → logprob: -7.594127655029297
    10. ')' → logprob: -7.969127655029297

Token 539: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -5.319370302458992e-06
    2. 'f' → logprob: -12.250005722045898
    3. 'fsm' → logprob: -15.625005722045898
    4. 's' → logprob: -16.0000057220459
    5. 'fsp' → logprob: -16.7500057220459
    6. 'fsi' → logprob: -17.0000057220459
    7. '(fs' → logprob: -17.6250057220459
    8. ' fs' → logprob: -17.8750057220459
    9. 'FS' → logprob: -18.2500057220459
    10. '_fs' → logprob: -18.2500057220459

Token 540: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0005550591740757227
    2. 'start' → logprob: -8.125555038452148
    3. '(' → logprob: -8.375555038452148
    4. '(*' → logprob: -10.750555038452148
    5. '(
' → logprob: -12.500555038452148
    6. ' (' → logprob: -13.625555038452148
    7. '((' → logprob: -13.875555038452148
    8. '(s' → logprob: -15.375555038452148
    9. '[start' → logprob: -15.375555038452148
    10. '(st' → logprob: -15.750555038452148

Token 541: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004039337392896414
    2. '(' → logprob: -6.879039287567139
    3. '0' → logprob: -7.129039287567139
    4. ')' → logprob: -7.129039287567139
    5. 'X' → logprob: -7.379039287567139
    6. ',' → logprob: -8.004039764404297
    7. 'x' → logprob: -8.879039764404297
    8. '[
' → logprob: -9.504039764404297
    9. '```' → logprob: -9.879039764404297
    10. '<|end|>' → logprob: -10.129039764404297

Token 542: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -14.12500286102295
    3. '[' → logprob: -14.25000286102295
    4. '```' → logprob: -14.50000286102295
    5. 'x' → logprob: -14.87500286102295
    6. '
' → logprob: -15.75000286102295
    7. 'X' → logprob: -16.625001907348633
    8. '   ' → logprob: -16.875001907348633
    9. '][' → logprob: -17.812501907348633
    10. '1' → logprob: -17.937501907348633

Token 543: '],' (ID: 2155)
  Prédit: ',start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',start' → logprob: -0.16027377545833588
    2. ',' → logprob: -1.910273790359497
    3. ' ,' → logprob: -10.410273551940918
    4. ',end' → logprob: -12.035273551940918
    5. ',next' → logprob: -13.035273551940918
    6. ',input' → logprob: -13.285273551940918
    7. '[start' → logprob: -13.285273551940918
    8. 'start' → logprob: -13.660273551940918
    9. ',current' → logprob: -13.910273551940918
    10. ',last' → logprob: -14.160273551940918

Token 544: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.7610454708337784e-05
    2. ' start' → logprob: -10.500027656555176
    3. '[start' → logprob: -19.37502670288086
    4. '(start' → logprob: -20.12502670288086
    5. '	start' → logprob: -20.50002670288086
    6. ',start' → logprob: -21.75002670288086
    7. '=start' → logprob: -22.00002670288086
    8. 'star' → logprob: -22.50002670288086
    9. '.start' → logprob: -22.87502670288086
    10. ':start' → logprob: -22.87502670288086

Token 545: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01001494750380516
    2. '[' → logprob: -4.88501501083374
    3. '1' → logprob: -6.38501501083374
    4. 'start' → logprob: -7.51001501083374
    5. '```' → logprob: -8.885014533996582
    6. '-' → logprob: -11.510014533996582
    7. '[start' → logprob: -11.760014533996582
    8. ' ' → logprob: -13.010014533996582
    9. ')' → logprob: -13.135014533996582
    10. '.' → logprob: -13.385014533996582

Token 546: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030727831181138754
    2. 'start' → logprob: -5.878072738647461
    3. '0' → logprob: -8.253072738647461
    4. '```' → logprob: -13.003072738647461
    5. '[' → logprob: -13.503072738647461
    6. ' start' → logprob: -13.753072738647461
    7. '[start' → logprob: -14.378072738647461
    8. '(start' → logprob: -14.503072738647461
    9. ' ' → logprob: -14.628072738647461
    10. '-' → logprob: -14.753072738647461

Token 547: '],' (ID: 2155)
  Prédit: ',map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',map' → logprob: -0.0029154305811971426
    2. ',' → logprob: -5.877915382385254
    3. ',start' → logprob: -9.752915382385254
    4. ',len' → logprob: -11.127915382385254
    5. ')' → logprob: -11.127915382385254
    6. ' ,' → logprob: -11.627915382385254
    7. ',input' → logprob: -13.127915382385254
    8. ',m' → logprob: -13.127915382385254
    9. ',b' → logprob: -13.502915382385254
    10. 'map' → logprob: -14.002915382385254

Token 548: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -5.157039049663581e-05
    2. ' map' → logprob: -9.875051498413086
    3. ',map' → logprob: -16.875051498413086
    4. ')' → logprob: -17.500051498413086
    5. '   ' → logprob: -18.500051498413086
    6. '(map' → logprob: -19.000051498413086
    7. '	map' → logprob: -19.375051498413086
    8. '.map' → logprob: -19.625051498413086
    9. '
' → logprob: -19.750051498413086
    10. ' ' → logprob: -20.375051498413086

Token 549: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.3856492842023727e-06
    2. ')c' → logprob: -14.875000953674316
    3. '[' → logprob: -15.500000953674316
    4. '```' → logprob: -15.625000953674316
    5. 'с' → logprob: -16.000001907348633
    6. ' c' → logprob: -16.375001907348633
    7. 'p' → logprob: -16.562501907348633
    8. '<|end|>' → logprob: -17.062501907348633
    9. 's' → logprob: -17.187501907348633
    10. '_c' → logprob: -17.312501907348633

Token 550: ',X' (ID: 83943)
  Prédit: ',X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',X' → logprob: -0.0028332918882369995
    2. ',' → logprob: -5.877833366394043
    3. ' ,' → logprob: -11.252833366394043
    4. 'X' → logprob: -11.877833366394043
    5. ',x' → logprob: -13.002833366394043
    6. ',Y' → logprob: -13.752833366394043
    7. ')' → logprob: -13.877833366394043
    8. ',len' → logprob: -14.377833366394043
    9. ',
' → logprob: -14.752833366394043
    10. '   ' → logprob: -14.752833366394043

Token 551: ',Y' (ID: 71464)
  Prédit: ',Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',Y' → logprob: -0.005951910279691219
    2. ',' → logprob: -5.130951881408691
    3. ' ,' → logprob: -11.505951881408691
    4. ',y' → logprob: -12.380951881408691
    5. 'Y' → logprob: -12.880951881408691
    6. ',
' → logprob: -13.255951881408691
    7. ',X' → logprob: -13.380951881408691
    8. ')' → logprob: -14.380951881408691
    9. ',start' → logprob: -14.505951881408691
    10. ',Z' → logprob: -15.130951881408691

Token 552: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5941604690160602e-05
    2. ')
' → logprob: -10.750025749206543
    3. ' )' → logprob: -12.875025749206543
    4. '   ' → logprob: -14.250025749206543
    5. ')return' → logprob: -15.375025749206543
    6. ',)' → logprob: -15.875025749206543
    7. ')#' → logprob: -15.875025749206543
    8. ')

' → logprob: -16.00002670288086
    9. '),' → logprob: -16.25002670288086
    10. ')[' → logprob: -16.25002670288086

Token 553: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13604116439819336
    2. '<|end|>' → logprob: -2.7610411643981934
    3. 'def' → logprob: -4.386041164398193
    4. '
' → logprob: -4.386041164398193
    5. ')' → logprob: -4.761041164398193
    6. 'dist' → logprob: -5.136041164398193
    7. '```' → logprob: -5.261041164398193
    8. '       ' → logprob: -5.261041164398193
    9. '    
' → logprob: -5.636041164398193
    10. ' ' → logprob: -6.636041164398193

Token 554: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05733834207057953
    2. 'dist' → logprob: -3.307338237762451
    3. '#' (adapté à ' #') → logprob: -4.307338237762451
    4. 'return' → logprob: -6.807338237762451
    5. 'def' → logprob: -6.932338237762451
    6. 's' → logprob: -7.057338237762451
    7. 'distance' → logprob: -7.182338237762451
    8. 'd' → logprob: -8.30733871459961
    9. '```' → logprob: -8.68233871459961
    10. 'for' → logprob: -8.68233871459961

Token 555: ' find' (ID: 1646)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8054552674293518
    2. '   ' → logprob: -1.055455207824707
    3. '#' → logprob: -2.555455207824707
    4. 'ais' → logprob: -3.680455207824707
    5. 'def' → logprob: -3.805455207824707
    6. 'return' → logprob: -3.930455207824707
    7. '       ' → logprob: -4.430455207824707
    8. 'visited' → logprob: -4.805455207824707
    9. 's' → logprob: -4.930455207824707
    10. 'for' → logprob: -5.430455207824707

Token 556: ' for' (ID: 395)
  Prédit: ' ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ais' → logprob: -1.6548750400543213
    2. 'min' → logprob: -2.1548750400543213
    3. ' aisle' → logprob: -2.6548750400543213
    4. 'ais' → logprob: -2.7798750400543213
    5. ' min' → logprob: -2.7798750400543213
    6. ' shelf' → logprob: -2.9048750400543213
    7. '   ' → logprob: -3.0298750400543213
    8. 'best' → logprob: -3.0298750400543213
    9. 'all' → logprob: -3.0298750400543213
    10. 'dist' → logprob: -3.2798750400543213

Token 557: ' each' (ID: 2454)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.4236012697219849
    2. 'x' → logprob: -1.6736012697219849
    3. ' g' → logprob: -1.7986012697219849
    4. ' x' → logprob: -2.4236011505126953
    5. 'each' → logprob: -2.6736011505126953
    6. ' each' → logprob: -3.2986011505126953
    7. 'all' → logprob: -3.4236011505126953
    8. 's' → logprob: -3.7986011505126953
    9. 'product' → logprob: -3.9236011505126953
    10. ' product' → logprob: -3.9236011505126953

Token 558: ' shelf' (ID: 40978)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.0631176233291626
    2. 'x' → logprob: -1.1881176233291626
    3. ' aisle' → logprob: -2.688117504119873
    4. ' shelf' → logprob: -3.063117504119873
    5. ' product' → logprob: -3.313117504119873
    6. 'g' → logprob: -3.313117504119873
    7. ' x' → logprob: -3.313117504119873
    8. 's' → logprob: -3.563117504119873
    9. ' (' → logprob: -3.938117504119873
    10. '(' → logprob: -4.063117504119873

Token 559: ' cell' (ID: 4206)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -1.0756072998046875
    2. '_positions' → logprob: -1.9506072998046875
    3. '_' → logprob: -2.2006072998046875
    4. 'cells' → logprob: -2.8256072998046875
    5. '_adj' → logprob: -2.9506072998046875
    6. 's' → logprob: -3.2006072998046875
    7. ':' → logprob: -3.4506072998046875
    8. 'cell' → logprob: -3.4506072998046875
    9. 'for' → logprob: -3.4506072998046875
    10. '_pos' → logprob: -3.8256072998046875

Token 560: ' the' (ID: 290)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3652652502059937
    2. ' the' → logprob: -1.6152652502059937
    3. ' for' → logprob: -2.365265369415283
    4. ' cells' → logprob: -2.615265369415283
    5. 's' → logprob: -2.990265369415283
    6. '#' → logprob: -3.240265369415283
    7. '   ' → logprob: -3.740265369415283
    8. '_cells' → logprob: -3.865265369415283
    9. ' (' → logprob: -3.990265369415283
    10. ':' → logprob: -4.115265369415283

Token 561: ' ais' (ID: 36709)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.3308274745941162
    2. 'minimum' → logprob: -1.3308274745941162
    3. ' minimal' → logprob: -2.330827474594116
    4. ' minimum' → logprob: -2.705827474594116
    5. 'positions' → logprob: -3.080827474594116
    6. ' positions' → logprob: -3.205827474594116
    7. ' adjacent' → logprob: -3.330827474594116
    8. 'minimal' → logprob: -3.705827474594116
    9. 'dist' → logprob: -3.955827474594116
    10. ' distances' → logprob: -4.080827713012695

Token 562: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.006050024647265673
    2. 'les' → logprob: -5.131050109863281
    3. '```' → logprob: -10.506050109863281
    4. '#' → logprob: -11.256050109863281
    5. 'l' → logprob: -11.381050109863281
    6. '[]' → logprob: -12.006050109863281
    7. 'ле' → logprob: -12.256050109863281
    8. '
' → logprob: -12.381050109863281
    9. '``' → logprob: -12.443550109863281
    10. 'lest' → logprob: -12.506050109863281

Token 563: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.3398282825946808
    2. 'cells' → logprob: -1.8398282527923584
    3. '_adj' → logprob: -3.4648282527923584
    4. '_cells' → logprob: -3.5898282527923584
    5. 'to' → logprob: -3.8398282527923584
    6. '_to' → logprob: -4.0898284912109375
    7. ' adjacent' → logprob: -4.4648284912109375
    8. ' cells' → logprob: -4.7148284912109375
    9. '[]' → logprob: -6.7148284912109375
    10. '_' → logprob: -6.8398284912109375

Token 564: ' to' (ID: 316)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.7739989757537842
    2. ' cells' → logprob: -0.8989989757537842
    3. ' to' → logprob: -3.398998975753784
    4. 'to' → logprob: -3.773998975753784
    5. 's' → logprob: -4.023999214172363
    6. 'def' → logprob: -4.523999214172363
    7. '_cells' → logprob: -4.773999214172363
    8. 'for' → logprob: -5.023999214172363
    9. '=' → logprob: -5.273999214172363
    10. 'positions' → logprob: -5.273999214172363

Token 565: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.18022039532661438
    2. ' it' → logprob: -2.180220365524292
    3. '(' → logprob: -3.805220365524292
    4. 's' → logprob: -4.180220603942871
    5. 'that' → logprob: -5.430220603942871
    6. 'nx' → logprob: -5.680220603942871
    7. '[(' → logprob: -6.305220603942871
    8. 'the' → logprob: -6.805220603942871
    9. '[
' → logprob: -7.305220603942871
    10. 'x' → logprob: -7.305220603942871

Token 566: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05198679864406586
    2. ' for' → logprob: -3.6769866943359375
    3. 'for' → logprob: -5.1769866943359375
    4. ',' → logprob: -5.6769866943359375
    5. '   ' → logprob: -5.9269866943359375
    6. '
' → logprob: -5.9269866943359375
    7. '<|end|>' → logprob: -5.9269866943359375
    8. '        
' → logprob: -6.0519866943359375
    9. '#' → logprob: -6.6769866943359375
    10. ':' → logprob: -6.8019866943359375

Token 567: 'neighbors' (ID: 192470)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48324671387672424
    2. ')' → logprob: -2.1082468032836914
    3. '#' → logprob: -2.6082468032836914
    4. ' for' → logprob: -2.8582468032836914
    5. '   ' → logprob: -3.1082468032836914
    6. 'adj' → logprob: -3.4832468032836914
    7. '       ' → logprob: -4.233246803283691
    8. 's' → logprob: -4.358246803283691
    9. 'def' → logprob: -5.108246803283691
    10. 'ais' → logprob: -5.233246803283691

Token 568: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1850292682647705
    2. ' for' → logprob: -1.5600292682647705
    3. 'for' → logprob: -1.8100292682647705
    4. ')
' → logprob: -2.5600292682647705
    5. '   ' → logprob: -2.5600292682647705
    6. ' =' → logprob: -3.3100292682647705
    7. '           ' → logprob: -3.6850292682647705
    8. '       ' → logprob: -3.8100292682647705
    9. '):
' → logprob: -4.060029029846191
    10. '=' → logprob: -4.435029029846191

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1413259208202362
    2. ' for' → logprob: -2.2663259506225586
    3. '   ' → logprob: -3.8913259506225586
    4. 'for' → logprob: -5.516325950622559
    5. 'def' → logprob: -7.016325950622559
    6. '<|end|>' → logprob: -7.016325950622559
    7. '           ' → logprob: -8.141325950622559
    8. '#' → logprob: -8.141325950622559
    9. '        
' → logprob: -8.141325950622559
    10. ',' → logprob: -8.516325950622559

Token 570: ' shelf' (ID: 40978)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13734225928783417
    2. ' for' → logprob: -2.5123422145843506
    3. 'for' → logprob: -3.2623422145843506
    4. 'def' → logprob: -6.26234245300293
    5. 's' → logprob: -6.76234245300293
    6. ' ais' → logprob: -6.88734245300293
    7. '   ' → logprob: -6.88734245300293
    8. '        
' → logprob: -7.13734245300293
    9. 'adj' → logprob: -7.63734245300293
    10. ' aisle' → logprob: -7.63734245300293

Token 571: '_' (ID: 62)
  Prédit: '_adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.25517383217811584
    2. '_neighbors' → logprob: -2.505173921585083
    3. '_positions' → logprob: -3.130173921585083
    4. '_cells' → logprob: -3.380173921585083
    5. '_ad' → logprob: -3.630173921585083
    6. 'adj' → logprob: -4.255173683166504
    7. '_pos' → logprob: -4.255173683166504
    8. 's' → logprob: -4.880173683166504
    9. '_to' → logprob: -6.505173683166504
    10. 'pos' → logprob: -7.755173683166504

Token 572: 'ais' (ID: 1873)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.205193430185318
    2. '_adj' → logprob: -2.580193519592285
    3. 'to' → logprob: -3.205193519592285
    4. '_to' → logprob: -3.830193519592285
    5. '_neighbors' → logprob: -4.080193519592285
    6. 'neighbors' → logprob: -4.705193519592285
    7. '_ad' → logprob: -5.080193519592285
    8. 'cells' → logprob: -5.705193519592285
    9. '_cells' → logprob: -5.955193519592285
    10. 'ad' → logprob: -6.205193519592285

Token 573: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0317743718624115
    2. 'les' → logprob: -3.5317742824554443
    3. '_adj' → logprob: -6.656774520874023
    4. 'adj' → logprob: -8.031774520874023
    5. '_neighbors' → logprob: -9.656774520874023
    6. '_le' → logprob: -10.281774520874023
    7. 'e' → logprob: -10.406774520874023
    8. '_pos' → logprob: -10.406774520874023
    9. '```' → logprob: -10.406774520874023
    10. 'neighbors' → logprob: -10.781774520874023

Token 574: '_pos' (ID: 14692)
  Prédit: '_adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.16959379613399506
    2. '_neighbors' → logprob: -2.6695938110351562
    3. 's' → logprob: -3.4195938110351562
    4. '_ad' → logprob: -3.7945938110351562
    5. '_cells' → logprob: -4.169593811035156
    6. '_' → logprob: -4.419593811035156
    7. '_positions' → logprob: -6.169593811035156
    8. 'adj' → logprob: -7.794593811035156
    9. '_pos' → logprob: -7.794593811035156
    10. '=' → logprob: -7.919593811035156

Token 575: '={}
' (ID: 146130)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09534169733524323
    2. 's' → logprob: -2.720341682434082
    3. '=[]' → logprob: -4.095341682434082
    4. '={}' → logprob: -4.970341682434082
    5. ' =' → logprob: -7.220341682434082
    6. '=[' → logprob: -7.845341682434082
    7. '={
' → logprob: -9.595341682434082
    8. '=set' → logprob: -10.095341682434082
    9. '[' → logprob: -10.345341682434082
    10. '=[]
' → logprob: -10.345341682434082

Token 576: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7697347402572632
    2. '<|end|>' → logprob: -1.3947347402572632
    3. 'for' → logprob: -2.2697348594665527
    4. '[' → logprob: -2.8947348594665527
    5. ':' → logprob: -3.8947348594665527
    6. '[
' → logprob: -3.8947348594665527
    7. ',' → logprob: -4.144734859466553
    8. '=' → logprob: -4.269734859466553
    9. ')' → logprob: -4.394734859466553
    10. '   ' → logprob: -4.394734859466553

Token 577: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3792829215526581
    2. '       ' → logprob: -1.3792829513549805
    3. 'for' (adapté à ' for') → logprob: -2.7542829513549805
    4. '	for' → logprob: -9.75428295135498
    5. '        
' → logprob: -10.00428295135498
    6. 'def' → logprob: -10.50428295135498
    7. '   ' → logprob: -10.62928295135498
    8. '<|end|>' → logprob: -11.87928295135498
    9. '```' → logprob: -11.87928295135498
    10. ' in' → logprob: -12.25428295135498

Token 578: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7726028561592102
    2. '(s' → logprob: -1.1476027965545654
    3. 'x' → logprob: -2.2726027965545654
    4. 'pos' → logprob: -2.7726027965545654
    5. '(pos' → logprob: -4.3976030349731445
    6. '(' → logprob: -4.5226030349731445
    7. ' (' → logprob: -4.8976030349731445
    8. 's' → logprob: -4.8976030349731445
    9. '(c' → logprob: -5.8976030349731445
    10. ' pos' → logprob: -6.2726030349731445

Token 579: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14470098912715912
    2. 'sx' → logprob: -2.1447010040283203
    3. 's' → logprob: -4.51970100402832
    4. 'nx' → logprob: -5.76970100402832
    5. 'px' → logprob: -7.26970100402832
    6. '(s' → logprob: -7.39470100402832
    7. 'pos' → logprob: -7.89470100402832
    8. '(x' → logprob: -7.89470100402832
    9. 'xs' → logprob: -8.51970100402832
    10. 'ax' → logprob: -8.51970100402832

Token 580: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0041927252896130085
    2. ',' → logprob: -5.50419282913208
    3. ' ,' → logprob: -9.379192352294922
    4. 'y' → logprob: -11.129192352294922
    5. '_,' → logprob: -12.004192352294922
    6. ',n' → logprob: -12.754192352294922
    7. '```' → logprob: -13.879192352294922
    8. ',
' → logprob: -14.629192352294922
    9. '
' → logprob: -14.629192352294922
    10. ',user' → logprob: -14.754192352294922

Token 581: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45870357751846313
    2. '),' → logprob: -1.0837035179138184
    3. '),(' → logprob: -3.5837035179138184
    4. 'in' → logprob: -6.708703517913818
    5. ' ),' → logprob: -8.958703994750977
    6. ',' → logprob: -9.333703994750977
    7. ',)' → logprob: -9.333703994750977
    8. ' )' → logprob: -9.458703994750977
    9. '   ' → logprob: -9.833703994750977
    10. ' in' → logprob: -9.833703994750977

Token 582: 'g' (ID: 70)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.7573453187942505
    2. 'price' → logprob: -1.5073453187942505
    3. 'v' → logprob: -2.882345199584961
    4. 'val' → logprob: -3.007345199584961
    5. 'p' → logprob: -3.382345199584961
    6. 'value' → logprob: -3.507345199584961
    7. 'cost' → logprob: -3.882345199584961
    8. 'pos' → logprob: -4.132345199584961
    9. 'count' → logprob: -4.132345199584961
    10. 'cnt' → logprob: -4.132345199584961

Token 583: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4288348853588104
    2. ' in' → logprob: -1.0538349151611328
    3. ' ' → logprob: -10.178834915161133
    4. ')' → logprob: -11.053834915161133
    5. ',' → logprob: -11.053834915161133
    6. '	in' → logprob: -11.428834915161133
    7. 's' → logprob: -11.553834915161133
    8. ':' → logprob: -12.178834915161133
    9. '_in' → logprob: -12.428834915161133
    10. '   ' → logprob: -12.428834915161133

Token 584: ' shelves' (ID: 52049)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5231766700744629
    2. ' shelves' → logprob: -0.8981766700744629
    3. ' shel' → logprob: -11.148176193237305
    4. '`s' → logprob: -11.648176193237305
    5. '[s' → logprob: -12.273176193237305
    6. 'enumer' → logprob: -12.773176193237305
    7. '(s' → logprob: -12.898176193237305
    8. 'helves' → logprob: -12.898176193237305
    9. ' s' → logprob: -13.023176193237305
    10. '	s' → logprob: -13.023176193237305

Token 585: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.18896862864494324
    2. 'in' → logprob: -2.3139686584472656
    3. 'pos' → logprob: -3.3139686584472656
    4. ' in' → logprob: -3.6889686584472656
    5. '_positions' → logprob: -5.563968658447266
    6. 's' → logprob: -6.313968658447266
    7. '.items' → logprob: -6.438968658447266
    8. 'Pos' → logprob: -6.938968658447266
    9. 'items' → logprob: -7.188968658447266
    10. '_items' → logprob: -7.313968658447266

Token 586: '.items' (ID: 19607)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3513922095298767
    2. 'in' → logprob: -1.2263922691345215
    3. ':' → logprob: -6.6013922691345215
    4. '   ' → logprob: -6.8513922691345215
    5. ')' → logprob: -9.101391792297363
    6. ' ' → logprob: -9.226391792297363
    7. '	in' → logprob: -9.351391792297363
    8. ':
' → logprob: -9.726391792297363
    9. '.items' → logprob: -10.101391792297363
    10. ',' → logprob: -10.351391792297363

Token 587: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7843475937843323
    2. '():
' → logprob: -1.0343475341796875
    3. '()' → logprob: -1.7843475341796875
    4. ':' → logprob: -4.2843475341796875
    5. '(' → logprob: -6.1593475341796875
    6. '(),' → logprob: -7.1593475341796875
    7. '();' → logprob: -7.2843475341796875
    8. ':
' → logprob: -8.159347534179688
    9. '   ' → logprob: -8.409347534179688
    10. ',' → logprob: -8.409347534179688

Token 588: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09430177509784698
    2. ' for' → logprob: -3.469301700592041
    3. '       ' → logprob: -4.469301700592041
    4. '<|end|>' → logprob: -5.094301700592041
    5. '```' → logprob: -5.469301700592041
    6. '    
' → logprob: -5.469301700592041
    7. ' neighbors' → logprob: -5.719301700592041
    8. ',' → logprob: -5.844301700592041
    9. '    ' → logprob: -5.844301700592041
    10. ' ' → logprob: -6.281801700592041

Token 589: ' ais' (ID: 36709)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.427736759185791
    2. '           ' → logprob: -1.427736759185791
    3. 's' → logprob: -3.552736759185791
    4. ' adj' → logprob: -3.677736759185791
    5. 'for' → logprob: -4.302736759185791
    6. ' adjacent' → logprob: -4.427736759185791
    7. 'adj' → logprob: -4.677736759185791
    8. ' ais' → logprob: -5.552736759185791
    9. ' found' → logprob: -5.927736759185791
    10. ' s' → logprob: -6.302736759185791

Token 590: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.009970924817025661
    2. 'les' → logprob: -4.6349711418151855
    3. '_le' → logprob: -10.134970664978027
    4. 'x' → logprob: -10.884970664978027
    5. '[]' → logprob: -11.259970664978027
    6. '```' → logprob: -11.259970664978027
    7. '[' → logprob: -11.384970664978027
    8. 'l' → logprob: -11.697470664978027
    9. '[(' → logprob: -11.759970664978027
    10. '=' → logprob: -11.759970664978027

Token 591: '_adj' (ID: 117293)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22769810259342194
    2. '=[]' → logprob: -1.9776980876922607
    3. 'for' → logprob: -3.8526980876922607
    4. ' =' → logprob: -3.9776980876922607
    5. '=set' → logprob: -4.35269832611084
    6. '=[' → logprob: -6.22769832611084
    7. '=(' → logprob: -6.22769832611084
    8. '_neighbors' → logprob: -6.35269832611084
    9. '_positions' → logprob: -6.97769832611084
    10. ' for' → logprob: -7.10269832611084

Token 592: '=[]
' (ID: 63466)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.4062017500400543
    2. 'acent' → logprob: -1.406201720237732
    3. '=[]
' → logprob: -2.9062018394470215
    4. '=[' → logprob: -4.0312018394470215
    5. '=' → logprob: -5.9062018394470215
    6. 'ac' → logprob: -5.9062018394470215
    7. '=(' → logprob: -6.0312018394470215
    8. 'ent' → logprob: -6.4062018394470215
    9. '={}' → logprob: -6.6562018394470215
    10. '={(' → logprob: -6.7812018394470215

Token 593: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.44541746377944946
    2. '           ' → logprob: -1.0704174041748047
    3. 'for' → logprob: -5.195417404174805
    4. '<|end|>' → logprob: -5.320417404174805
    5. '       ' → logprob: -6.070417404174805
    6. '	       ' → logprob: -6.945417404174805
    7. '   ' → logprob: -7.195417404174805
    8. '<|end|>' → logprob: -7.695417404174805
    9. '
' → logprob: -8.195417404174805
    10. '	for' → logprob: -8.570417404174805

Token 594: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.052376482635736465
    2. '           ' → logprob: -3.1773765087127686
    3. ' for' → logprob: -4.6773762702941895
    4. '	for' → logprob: -11.302376747131348
    5. '   ' → logprob: -11.802376747131348
    6. '               ' → logprob: -12.677376747131348
    7. '            
' → logprob: -13.427376747131348
    8. '
' → logprob: -13.802376747131348
    9. '       ' → logprob: -13.927376747131348
    10. 'x' → logprob: -13.927376747131348

Token 595: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00034654809860512614
    2. ' dx' → logprob: -8.000346183776855
    3. '(dx' → logprob: -11.875346183776855
    4. '   ' → logprob: -13.000346183776855
    5. '```' → logprob: -14.375346183776855
    6. ' ' → logprob: -14.875346183776855
    7. 'nx' → logprob: -14.875346183776855
    8. '_dx' → logprob: -16.000347137451172
    9. '1' → logprob: -16.125347137451172
    10. '  ' → logprob: -16.625347137451172

Token 596: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.607391408877447e-05
    2. ' ,' → logprob: -11.125036239624023
    3. ',d' → logprob: -11.375036239624023
    4. ',y' → logprob: -12.625036239624023
    5. ' in' → logprob: -13.000036239624023
    6. ',n' → logprob: -13.625036239624023
    7. '_,' → logprob: -14.125036239624023
    8. ',
' → logprob: -14.375036239624023
    9. 'in' → logprob: -15.000036239624023
    10. ',-' → logprob: -15.250036239624023

Token 597: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0069612846709787846
    2. ' dy' → logprob: -5.256961345672607
    3. '0' → logprob: -6.381961345672607
    4. ' ' → logprob: -11.00696086883545
    5. ',' → logprob: -12.00696086883545
    6. '-' → logprob: -12.25696086883545
    7. '.dy' → logprob: -13.00696086883545
    8. '-d' → logprob: -14.00696086883545
    9. '[' → logprob: -14.25696086883545
    10. '```' → logprob: -14.63196086883545

Token 598: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20153340697288513
    2. 'in' → logprob: -1.7015334367752075
    3. '   ' → logprob: -9.576533317565918
    4. ',' → logprob: -10.951533317565918
    5. ' ' → logprob: -11.826533317565918
    6. ' ,' → logprob: -11.951533317565918
    7. ',(' → logprob: -12.701533317565918
    8. '    ' → logprob: -12.701533317565918
    9. '	in' → logprob: -12.826533317565918
    10. '),(' → logprob: -14.076533317565918

Token 599: ' DIR' (ID: 83023)
  Prédit: 'DIR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIR' → logprob: -0.011728458106517792
    2. ' DIR' → logprob: -4.511728286743164
    3. '[' → logprob: -7.511728286743164
    4. '[(' → logprob: -9.011728286743164
    5. '[-' → logprob: -11.761728286743164
    6. ' [' → logprob: -12.761728286743164
    7. ' [(' → logprob: -14.386728286743164
    8. 'Dir' → logprob: -15.636728286743164
    9. ' ' → logprob: -16.636728286743164
    10. '   ' → logprob: -16.636728286743164

Token 600: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.05753597989678383
    2. '[(' → logprob: -3.1825358867645264
    3. '[' → logprob: -5.0575361251831055
    4. '[
' → logprob: -6.1825361251831055
    5. ']' → logprob: -6.5575361251831055
    6. '(' → logprob: -7.0575361251831055
    7. 's' → logprob: -7.1825361251831055
    8. '][' → logprob: -7.4325361251831055
    9. ',' → logprob: -7.9325361251831055
    10. '((' → logprob: -8.057536125183105

Token 601: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5540655851364136
    2. ':
' → logprob: -0.9290655851364136
    3. ' in' → logprob: -4.679065704345703
    4. '(' → logprob: -5.554065704345703
    5. ',' → logprob: -5.929065704345703
    6. '   ' → logprob: -5.929065704345703
    7. '(-' → logprob: -6.179065704345703
    8. '<|end|>' → logprob: -6.304065704345703
    9. '       ' → logprob: -6.804065704345703
    10. '):
' → logprob: -6.804065704345703

Token 602: '               ' (ID: 506)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.4995570480823517
    2. '               ' → logprob: -1.4995570182800293
    3. '(nx' → logprob: -2.1245570182800293
    4. '            ' → logprob: -3.9995570182800293
    5. 'nx' → logprob: -4.374557018280029
    6. '	           ' → logprob: -4.624557018280029
    7. '           ' → logprob: -5.374557018280029
    8. '<|end|>' → logprob: -6.374557018280029
    9. ',' → logprob: -7.874557018280029
    10. '             ' → logprob: -8.374557495117188

Token 603: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.2019939422607422
    2. 'nx' (adapté à ' nx') → logprob: -1.7019939422607422
    3. '(nx' → logprob: -7.576993942260742
    4. 'n' → logprob: -11.201993942260742
    5. ' ax' → logprob: -11.201993942260742
    6. 'ax' → logprob: -11.201993942260742
    7. ' adj' → logprob: -11.701993942260742
    8. '
' → logprob: -12.201993942260742
    9. '               ' → logprob: -12.451993942260742
    10. '   ' → logprob: -13.576993942260742

Token 604: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029399030609056354
    2. ' ,' → logprob: -8.500293731689453
    3. ',n' → logprob: -9.375293731689453
    4. '=' → logprob: -13.500293731689453
    5. '=x' → logprob: -14.000293731689453
    6. ',y' → logprob: -14.250293731689453
    7. '```' → logprob: -14.375293731689453
    8. '=n' → logprob: -14.500293731689453
    9. '_,' → logprob: -15.000293731689453
    10. ',
' → logprob: -15.000293731689453

Token 605: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.006627623923122883
    2. ',' → logprob: -5.756627559661865
    3. 'x' → logprob: -5.756627559661865
    4. 'nx' → logprob: -9.006628036499023
    5. ' ny' → logprob: -9.506628036499023
    6. 'dy' → logprob: -10.506628036499023
    7. ',y' → logprob: -10.506628036499023
    8. '0' → logprob: -12.131628036499023
    9. 'y' → logprob: -12.256628036499023
    10. ',x' → logprob: -12.381628036499023

Token 606: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.706339418888092
    2. '=x' → logprob: -0.706339418888092
    3. ',x' → logprob: -5.456339359283447
    4. ' =' → logprob: -5.581339359283447
    5. ',' → logprob: -5.956339359283447
    6. '=n' → logprob: -6.706339359283447
    7. ',n' → logprob: -7.081339359283447
    8. '=
' → logprob: -8.706339836120605
    9. '=(' → logprob: -8.831339836120605
    10. ' ,' → logprob: -10.831339836120605

Token 607: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07924094051122665
    2. ',n' → logprob: -3.0792410373687744
    3. ',y' → logprob: -3.5792410373687744
    4. '+' → logprob: -6.329240798950195
    5. ' ,' → logprob: -8.454240798950195
    6. '=' → logprob: -9.329240798950195
    7. ',x' → logprob: -9.829240798950195
    8. ',d' → logprob: -10.579240798950195
    9. ',w' → logprob: -10.704240798950195
    10. '+x' → logprob: -10.829240798950195

Token 608: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0004803624760825187
    2. 'dy' → logprob: -8.250480651855469
    3. '0' → logprob: -8.500480651855469
    4. ' dx' → logprob: -11.750480651855469
    5. '1' → logprob: -12.875480651855469
    6. 'd' → logprob: -13.750480651855469
    7. ',' → logprob: -13.875480651855469
    8. '```' → logprob: -13.875480651855469
    9. '   ' → logprob: -14.375480651855469
    10. ' ' → logprob: -14.750480651855469

Token 609: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01866559498012066
    2. ',n' → logprob: -4.018665790557861
    3. ',y' → logprob: -7.768665790557861
    4. ' ,' → logprob: -9.393665313720703
    5. ',
' → logprob: -12.768665313720703
    6. ',x' → logprob: -12.893665313720703
    7. ',next' → logprob: -13.393665313720703
    8. ',m' → logprob: -14.768665313720703
    9. ',no' → logprob: -15.268665313720703
    10. ',new' → logprob: -15.268665313720703

Token 610: '+' (ID: 10)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.3885498046875
    2. ',' → logprob: -1.1385498046875
    3. ',n' → logprob: -6.6385498046875
    4. ',x' → logprob: -9.0135498046875
    5. ',user' → logprob: -9.1385498046875
    6. 'y' → logprob: -9.3885498046875
    7. '<|end|>' → logprob: -10.7635498046875
    8. ',next' → logprob: -12.0135498046875
    9. ',
' → logprob: -12.8885498046875
    10. ',my' → logprob: -13.0135498046875

Token 611: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -4.668304245569743e-05
    2. ' dy' → logprob: -10.125046730041504
    3. '1' → logprob: -12.000046730041504
    4. 'dx' → logprob: -15.625046730041504
    5. 'd' → logprob: -16.250045776367188
    6. '.dy' → logprob: -16.625045776367188
    7. '0' → logprob: -17.000045776367188
    8. 'ny' → logprob: -17.750045776367188
    9. 'Dy' → logprob: -18.750045776367188
    10. 'dym' → logprob: -18.875045776367188

Token 612: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0272639412432909
    2. ',n' → logprob: -4.27726411819458
    3. 'if' → logprob: -5.77726411819458
    4. '               ' → logprob: -6.15226411819458
    5. ' ,' → logprob: -6.15226411819458
    6. ',
' → logprob: -6.52726411819458
    7. '<|end|>' → logprob: -6.77726411819458
    8. ' if' → logprob: -6.90226411819458
    9. ',x' → logprob: -7.02726411819458
    10. '                   ' → logprob: -8.152263641357422

Token 613: '               ' (ID: 506)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13028135895729065
    2. '               ' → logprob: -2.130281448364258
    3. 'if' → logprob: -7.255281448364258
    4. ',n' → logprob: -7.505281448364258
    5. '           ' → logprob: -7.755281448364258
    6. '	           ' → logprob: -7.880281448364258
    7. ' if' → logprob: -8.255281448364258
    8. ' ,' → logprob: -8.380281448364258
    9. '<|end|>' → logprob: -8.755281448364258
    10. ',
' → logprob: -8.880281448364258

Token 614: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011102529242634773
    2. 'if' (adapté à ' if') → logprob: -5.011102676391602
    3. '               ' → logprob: -6.011102676391602
    4. '<|end|>' → logprob: -7.136102676391602
    5. '                ' → logprob: -8.261102676391602
    6. ',' → logprob: -8.511102676391602
    7. ' ' → logprob: -8.886102676391602
    8. ' 
' → logprob: -9.261102676391602
    9. '[' → logprob: -9.261102676391602
    10. ' in' → logprob: -10.011102676391602

Token 615: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018155328929424286
    2. ' ' → logprob: -4.018155097961426
    3. '(nx' → logprob: -13.893155097961426
    4. ' (' → logprob: -14.018155097961426
    5. ' nx' → logprob: -14.018155097961426
    6. '(' → logprob: -14.393155097961426
    7. 'nx' → logprob: -14.643155097961426
    8. '                   ' → logprob: -14.643155097961426
    9. '               ' → logprob: -14.893155097961426
    10. '   ' → logprob: -15.393155097961426

Token 616: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.25001335144043
    3. '(' → logprob: -15.00001335144043
    4. 'nx' → logprob: -16.25001335144043
    5. '(nx' → logprob: -16.50001335144043
    6. '000' → logprob: -19.00001335144043
    7. '   ' → logprob: -19.37501335144043
    8. '۰' → logprob: -19.50001335144043
    9. ' (' → logprob: -19.75001335144043
    10. '-' → logprob: -20.00001335144043

Token 617: '<=' (ID: 16672)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3885800242424011
    2. ' >=' → logprob: -1.138580083847046
    3. '0' → logprob: -7.263579845428467
    4. ' in' → logprob: -8.138580322265625
    5. ' <' → logprob: -8.388580322265625
    6. ' ' → logprob: -8.763580322265625
    7. '<' → logprob: -9.513580322265625
    8. ')>=' → logprob: -9.638580322265625
    9. ']>=' → logprob: -10.013580322265625
    10. '<n' → logprob: -10.013580322265625

Token 618: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -3.666993507067673e-05
    2. ' nx' → logprob: -10.750036239624023
    3. 'x' → logprob: -11.625036239624023
    4. 'n' → logprob: -12.625036239624023
    5. '(nx' → logprob: -13.750036239624023
    6. '0' → logprob: -14.500036239624023
    7. 'ny' → logprob: -14.625036239624023
    8. 'xn' → logprob: -15.125036239624023
    9. '   ' → logprob: -15.875036239624023
    10. '
' → logprob: -16.125036239624023

Token 619: '<X' (ID: 126345)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11615649610757828
    2. '<X' → logprob: -2.241156578063965
    3. '<n' → logprob: -5.866156578063965
    4. ' <' → logprob: -8.491156578063965
    5. 'and' → logprob: -9.241156578063965
    6. '<N' → logprob: -9.616156578063965
    7. '<x' → logprob: -9.991156578063965
    8. '<len' → logprob: -10.616156578063965
    9. ' and' → logprob: -10.741156578063965
    10. '<num' → logprob: -11.116156578063965

Token 620: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12694574892520905
    2. 'and' → logprob: -2.126945734024048
    3. '<' → logprob: -11.126945495605469
    4. '               ' → logprob: -13.376945495605469
    5. '0' → logprob: -14.001945495605469
    6. ' ' → logprob: -16.00194549560547
    7. '```' → logprob: -16.00194549560547
    8. '	and' → logprob: -16.12694549560547
    9. ' <' → logprob: -16.25194549560547
    10. '           ' → logprob: -16.62694549560547

Token 621: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0052690957672894
    2. ' ' → logprob: -5.2552690505981445
    3. 'ny' → logprob: -10.505269050598145
    4. ' ny' → logprob: -12.005269050598145
    5. 'nx' → logprob: -14.755269050598145
    6. '
' → logprob: -15.130269050598145
    7. '   ' → logprob: -15.380269050598145
    8. '  ' → logprob: -15.755269050598145
    9. '(' → logprob: -16.50527000427246
    10. ' ' → logprob: -16.63027000427246

Token 622: '0' (ID: 15)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.20171132683753967
    2. '0' → logprob: -1.7017112970352173
    3. ' ny' → logprob: -8.201711654663086
    4. 'nx' → logprob: -10.951711654663086
    5. ' ' → logprob: -13.201711654663086
    6. '
' → logprob: -13.451711654663086
    7. '<' → logprob: -14.201711654663086
    8. 'n' → logprob: -14.451711654663086
    9. 'nyi' → logprob: -14.951711654663086
    10. 'yn' → logprob: -15.576711654663086

Token 623: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00023917861108202487
    2. 'Y' → logprob: -9.125239372253418
    3. '<n' → logprob: -9.750239372253418
    4. '<len' → logprob: -10.625239372253418
    5. '<X' → logprob: -11.125239372253418
    6. '<num' → logprob: -11.375239372253418
    7. '
' → logprob: -12.625239372253418
    8. '<N' → logprob: -12.750239372253418
    9. ' <' → logprob: -12.875239372253418
    10. '	Y' → logprob: -13.000239372253418

Token 624: 'ny' (ID: 3008)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.16028475761413574
    2. 'ny' → logprob: -1.9102847576141357
    3. ' ny' → logprob: -10.410284996032715
    4. ' Y' → logprob: -11.160284996032715
    5. 'y' → logprob: -11.785284996032715
    6. 'NY' → logprob: -12.785284996032715
    7. 'yn' → logprob: -12.785284996032715
    8. '	Y' → logprob: -14.410284996032715
    9. '
' → logprob: -14.785284996032715
    10. 'Ny' → logprob: -14.910284996032715

Token 625: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0002394170151092112
    2. '<len' → logprob: -9.375239372253418
    3. 'Y' → logprob: -10.000239372253418
    4. ' <' → logprob: -10.375239372253418
    5. '<n' → logprob: -10.500239372253418
    6. 'and' → logprob: -11.250239372253418
    7. '<X' → logprob: -12.125239372253418
    8. ' and' → logprob: -12.250239372253418
    9. '<N' → logprob: -12.250239372253418
    10. '[Y' → logprob: -12.500239372253418

Token 626: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -2.2246291337069124e-05
    2. ' Y' → logprob: -10.875021934509277
    3. '
' → logprob: -13.375021934509277
    4. '   ' → logprob: -14.500021934509277
    5. '0' → logprob: -15.625021934509277
    6. '           ' → logprob: -15.875021934509277
    7. '```' → logprob: -16.125022888183594
    8. '
' → logprob: -16.125022888183594
    9. '	Y' → logprob: -16.125022888183594
    10. '                   ' → logprob: -16.250022888183594

Token 627: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.16078802943229675
    2. ' and' → logprob: -1.9107880592346191
    3. '               ' → logprob: -8.160787582397461
    4. '                   ' → logprob: -8.535787582397461
    5. '           ' → logprob: -9.910787582397461
    6. ':
' → logprob: -11.535787582397461
    7. ':' → logprob: -12.160787582397461
    8. '                       ' → logprob: -12.660787582397461
    9. '              ' → logprob: -13.035787582397461
    10. '	and' → logprob: -13.160787582397461

Token 628: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.01292384508997202
    2. '(map' → logprob: -4.887923717498779
    3. ' map' → logprob: -5.262923717498779
    4. ' (' → logprob: -9.137924194335938
    5. '   ' → logprob: -12.137924194335938
    6. '(' → logprob: -12.512924194335938
    7. '	map' → logprob: -13.387924194335938
    8. ' ' → logprob: -13.512924194335938
    9. 'dist' → logprob: -14.575424194335938
    10. '(m' → logprob: -14.887924194335938

Token 629: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.253090865968261e-06
    2. '[' → logprob: -13.250009536743164
    3. '```' → logprob: -13.250009536743164
    4. '_c' → logprob: -14.000009536743164
    5. '   ' → logprob: -14.125009536743164
    6. '[x' → logprob: -14.875009536743164
    7. '[c' → logprob: -14.875009536743164
    8. '           ' → logprob: -14.875009536743164
    9. ' c' → logprob: -15.125009536743164
    10. '[n' → logprob: -15.125009536743164

Token 630: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00012654215970542282
    2. '```' → logprob: -9.875126838684082
    3. '[' → logprob: -10.375126838684082
    4. '[
' → logprob: -11.375126838684082
    5. '][' → logprob: -11.750126838684082
    6. ' [' → logprob: -11.875126838684082
    7. '
' → logprob: -12.375126838684082
    8. '   ' → logprob: -13.000126838684082
    9. 'nx' → logprob: -13.750126838684082
    10. 'n' → logprob: -14.000126838684082

Token 631: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0003309361054562032
    2. '[n' → logprob: -8.125330924987793
    3. '[x' → logprob: -10.875330924987793
    4. '[' → logprob: -11.750330924987793
    5. 'nx' → logprob: -13.125330924987793
    6. '][' → logprob: -13.250330924987793
    7. 'c' → logprob: -14.000330924987793
    8. 'n' → logprob: -14.250330924987793
    9. '(nx' → logprob: -14.625330924987793
    10. '
' → logprob: -14.750330924987793

Token 632: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013480309396982193
    2. '[n' → logprob: -4.388480186462402
    3. '[' → logprob: -7.263480186462402
    4. '   ' → logprob: -9.638480186462402
    5. '```' → logprob: -10.138480186462402
    6. ']' → logprob: -10.263480186462402
    7. '
' → logprob: -10.638480186462402
    8. ' ][' → logprob: -10.763480186462402
    9. '       ' → logprob: -11.513480186462402
    10. '(n' → logprob: -11.888480186462402

Token 633: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -9.849109119386412e-06
    2. ' ny' → logprob: -12.250009536743164
    3. 'n' → logprob: -13.500009536743164
    4. '][' → logprob: -13.625009536743164
    5. '[' → logprob: -14.000009536743164
    6. '```' → logprob: -15.125009536743164
    7. '
' → logprob: -15.375009536743164
    8. 'nx' → logprob: -15.500009536743164
    9. ''ny' → logprob: -15.875009536743164
    10. '   ' → logprob: -16.125009536743164

Token 634: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.041608866304159164
    2. ']' → logprob: -3.6666088104248047
    3. ']=='' → logprob: -4.541608810424805
    4. '][' → logprob: -5.541608810424805
    5. '==' → logprob: -7.916608810424805
    6. '[n' → logprob: -9.791608810424805
    7. ']=="' → logprob: -9.791608810424805
    8. ']!=' → logprob: -10.416608810424805
    9. '```' → logprob: -10.916608810424805
    10. '']==' → logprob: -10.916608810424805

Token 635: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -4.60414821645827e-06
    2. ''' → logprob: -13.125004768371582
    3. '"."' → logprob: -13.500004768371582
    4. ' '.'' → logprob: -14.500004768371582
    5. '.' → logprob: -14.625004768371582
    6. '".' → logprob: -16.000003814697266
    7. '('.')' → logprob: -16.250003814697266
    8. '('.' → logprob: -17.375003814697266
    9. '.'.' → logprob: -17.625003814697266
    10. ''A' → logprob: -17.625003814697266

Token 636: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6548445820808411
    2. ' or' → logprob: -1.0298445224761963
    3. '':' → logprob: -3.4048445224761963
    4. 'or' → logprob: -3.7798445224761963
    5. ''' → logprob: -4.029844760894775
    6. '<|end|>' → logprob: -4.029844760894775
    7. ':
' → logprob: -4.404844760894775
    8. ''or' → logprob: -4.779844760894775
    9. '):' → logprob: -5.279844760894775
    10. '.' → logprob: -6.904844760894775

Token 637: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002765175187960267
    2. '                       ' → logprob: -6.50276517868042
    3. '               ' → logprob: -6.87776517868042
    4. '                  ' → logprob: -9.502764701843262
    5. ',' → logprob: -10.377764701843262
    6. '<|end|>' → logprob: -10.502764701843262
    7. '```' → logprob: -11.252764701843262
    8. '           ' → logprob: -11.502764701843262
    9. '                    
' → logprob: -11.627764701843262
    10. '       ' → logprob: -12.002764701843262

Token 638: ' ais' (ID: 36709)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18671174347400665
    2. 'ais' (adapté à ' ais') → logprob: -2.1867117881774902
    3. ' ais' → logprob: -3.4367117881774902
    4. '               ' → logprob: -4.18671178817749
    5. '                       ' → logprob: -4.93671178817749
    6. '           ' → logprob: -6.93671178817749
    7. '   ' → logprob: -7.18671178817749
    8. '       ' → logprob: -7.81171178817749
    9. '                           ' → logprob: -8.686711311340332
    10. '                  ' → logprob: -9.186711311340332

Token 639: 'les' (ID: 1032)
  Prédit: 'iles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -0.12799212336540222
    2. 'les' → logprob: -2.1279921531677246
    3. 's' → logprob: -7.252992153167725
    4. 'cles' → logprob: -8.752991676330566
    5. 'lles' → logprob: -9.627991676330566
    6. 'li' → logprob: -10.127991676330566
    7. 'lies' → logprob: -10.502991676330566
    8. 'illes' → logprob: -11.627991676330566
    9. 'es' → logprob: -12.002991676330566
    10. 'tiles' → logprob: -12.252991676330566

Token 640: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.0013392893597483635
    2. 'adj' → logprob: -6.626339435577393
    3. '_' → logprob: -11.501338958740234
    4. '.append' → logprob: -13.001338958740234
    5. 'Adj' → logprob: -15.126338958740234
    6. '_ad' → logprob: -15.501338958740234
    7. '.' → logprob: -16.501338958740234
    8. '(adj' → logprob: -16.501338958740234
    9. '_app' → logprob: -16.626338958740234
    10. '_append' → logprob: -16.751338958740234

Token 641: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011130002327263355
    2. '.' → logprob: -4.511129856109619
    3. ' .' → logprob: -10.386130332946777
    4. '                   ' → logprob: -11.136130332946777
    5. ').' → logprob: -11.261130332946777
    6. '().' → logprob: -12.136130332946777
    7. 'append' → logprob: -12.386130332946777
    8. '.add' → logprob: -12.886130332946777
    9. '.Append' → logprob: -13.136130332946777
    10. '].' → logprob: -13.136130332946777

Token 642: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4293784201145172
    2. '(nx' → logprob: -1.4293783903121948
    3. '(' → logprob: -2.6793785095214844
    4. '(n' → logprob: -3.6793785095214844
    5. '(x' → logprob: -4.679378509521484
    6. ' (' → logprob: -5.054378509521484
    7. '(
' → logprob: -10.304378509521484
    8. ' ((' → logprob: -10.429378509521484
    9. '[(' → logprob: -11.179378509521484
    10. '(nt' → logprob: -11.929378509521484

Token 643: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0002198676229454577
    2. ' nx' → logprob: -9.00022029876709
    3. '(nx' → logprob: -9.25022029876709
    4. 'n' → logprob: -16.125219345092773
    5. '   ' → logprob: -16.125219345092773
    6. '
' → logprob: -16.625219345092773
    7. 'x' → logprob: -18.375219345092773
    8. ' (' → logprob: -19.000219345092773
    9. '(n' → logprob: -19.125219345092773
    10. '       ' → logprob: -19.750219345092773

Token 644: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001426346570951864
    2. ' ,' → logprob: -9.000143051147461
    3. ',y' → logprob: -11.750143051147461
    4. ',n' → logprob: -12.250143051147461
    5. ',
' → logprob: -12.375143051147461
    6. '```' → logprob: -14.000143051147461
    7. '<|end|>' → logprob: -14.625143051147461
    8. '‌,' → logprob: -16.62514305114746
    9. '
' → logprob: -16.62514305114746
    10. ',next' → logprob: -16.75014305114746

Token 645: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00018947436183225363
    2. ' ny' → logprob: -8.625189781188965
    3. ',' → logprob: -11.875189781188965
    4. 'nyi' → logprob: -13.375189781188965
    5. '
' → logprob: -14.375189781188965
    6. 'dy' → logprob: -15.875189781188965
    7. 'ney' → logprob: -16.25018882751465
    8. ' ' → logprob: -16.37518882751465
    9. '```' → logprob: -16.37518882751465
    10. 'y' → logprob: -16.87518882751465

Token 646: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2522270381450653
    2. '))' → logprob: -1.5022270679473877
    3. ')
' → logprob: -8.752226829528809
    4. '))
' → logprob: -9.127226829528809
    5. '                   ' → logprob: -11.252226829528809
    6. ')))' → logprob: -12.002226829528809
    7. ')}' → logprob: -13.127226829528809
    8. '               ' → logprob: -13.127226829528809
    9. '           ' → logprob: -13.752226829528809
    10. '),' → logprob: -13.877226829528809

Token 647: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1075698658823967
    2. '<|end|>' → logprob: -2.732569932937622
    3. '               ' → logprob: -4.232569694519043
    4. '       ' → logprob: -4.857569694519043
    5. '                   ' → logprob: -4.982569694519043
    6. ')' → logprob: -6.357569694519043
    7. ',' → logprob: -7.107569694519043
    8. '<|end|>' → logprob: -7.232569694519043
    9. '          ' → logprob: -7.357569694519043
    10. '#' → logprob: -7.732569694519043

Token 648: ' shelf' (ID: 40978)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17662763595581055
    2. 'for' → logprob: -2.0516276359558105
    3. 's' → logprob: -4.5516276359558105
    4. 'continue' → logprob: -5.4266276359558105
    5. ' for' → logprob: -5.6766276359558105
    6. '<|end|>' → logprob: -5.6766276359558105
    7. '           ' → logprob: -5.8016276359558105
    8. '```' → logprob: -6.0516276359558105
    9. '#' → logprob: -6.1766276359558105
    10. 'if' → logprob: -6.6766276359558105

Token 649: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00035095500061288476
    2. 's' → logprob: -8.500350952148438
    3. '_pos' → logprob: -9.375350952148438
    4. 'pos' → logprob: -11.500350952148438
    5. '_positions' → logprob: -11.500350952148438
    6. '_s' → logprob: -11.750350952148438
    7. '[' → logprob: -12.500350952148438
    8. '<|end|>' → logprob: -12.500350952148438
    9. '```' → logprob: -12.625350952148438
    10. '<|end|>' → logprob: -12.625350952148438

Token 650: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.0005740015767514706
    2. 'pos' → logprob: -7.625574111938477
    3. '_' → logprob: -10.125574111938477
    4. '_pos' → logprob: -10.250574111938477
    5. 's' → logprob: -12.875574111938477
    6. 'asile' → logprob: -13.625574111938477
    7. '```' → logprob: -13.625574111938477
    8. 'adj' → logprob: -14.125574111938477
    9. 'ail' → logprob: -14.250574111938477
    10. 'asis' → logprob: -14.875574111938477

Token 651: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0013109555002301931
    2. 'sle' → logprob: -8.501311302185059
    3. 'tle' → logprob: -8.501311302185059
    4. 'ile' → logprob: -9.001311302185059
    5. 'e' → logprob: -9.126311302185059
    6. 'ele' → logprob: -9.126311302185059
    7. 'les' → logprob: -9.251311302185059
    8. '_le' → logprob: -9.501311302185059
    9. 'cle' → logprob: -9.626311302185059
    10. '_' → logprob: -10.126311302185059

Token 652: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.04994797334074974
    2. 'pos' → logprob: -3.04994797706604
    3. 's' → logprob: -6.674947738647461
    4. 'adj' → logprob: -10.174947738647461
    5. '_positions' → logprob: -11.049947738647461
    6. 'positions' → logprob: -11.299947738647461
    7. '_adj' → logprob: -11.549947738647461
    8. 'Pos' → logprob: -12.549947738647461
    9. '```' → logprob: -12.549947738647461
    10. '.append' → logprob: -12.674947738647461

Token 653: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0008016457431949675
    2. '.setdefault' → logprob: -7.6258015632629395
    3. '[' → logprob: -9.500802040100098
    4. '.' → logprob: -9.500802040100098
    5. '[s' → logprob: -9.625802040100098
    6. '=' → logprob: -10.250802040100098
    7. 's' → logprob: -10.625802040100098
    8. '```' → logprob: -11.500802040100098
    9. '[x' → logprob: -12.000802040100098
    10. '
' → logprob: -12.625802040100098

Token 654: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.273621405242011e-05
    2. '(x' → logprob: -11.250032424926758
    3. ' x' → logprob: -11.250032424926758
    4. '<|end|>' → logprob: -13.000032424926758
    5. ')x' → logprob: -13.375032424926758
    6. ''x' → logprob: -14.750032424926758
    7. 's' → logprob: -14.875032424926758
    8. ')' → logprob: -15.000032424926758
    9. 'user' → logprob: -15.250032424926758
    10. '{x' → logprob: -15.750032424926758

Token 655: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16105005145072937
    2. ',y' → logprob: -2.5360500812530518
    3. '<|end|>' → logprob: -3.6610500812530518
    4. ',n' → logprob: -3.9110500812530518
    5. ',x' → logprob: -4.536049842834473
    6. '+' → logprob: -4.911049842834473
    7. ')' → logprob: -6.661049842834473
    8. ',user' → logprob: -7.036049842834473
    9. '),(' → logprob: -7.161049842834473
    10. ')][' → logprob: -7.661049842834473

Token 656: ')' (ID: 8)
  Prédit: ')].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')].' → logprob: -0.6604297161102295
    2. '].' → logprob: -1.6604297161102295
    3. ')' → logprob: -2.2854297161102295
    4. ']=' → logprob: -3.0354297161102295
    5. ')]' → logprob: -3.0354297161102295
    6. ').' → logprob: -3.4104297161102295
    7. ']' → logprob: -3.9104297161102295
    8. '])' → logprob: -4.035429954528809
    9. ']).' → logprob: -4.035429954528809
    10. ')=' → logprob: -5.660429954528809

Token 657: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -1.0760754346847534
    2. '].' → logprob: -1.3260754346847534
    3. ').' → logprob: -2.201075553894043
    4. ')' → logprob: -2.201075553894043
    5. ')=' → logprob: -2.201075553894043
    6. ']' → logprob: -3.451075553894043
    7. '=' → logprob: -4.951075553894043
    8. '.' → logprob: -4.951075553894043
    9. '.append' → logprob: -5.076075553894043
    10. ']+=' → logprob: -5.576075553894043

Token 658: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -2.4272752852994017e-05
    2. ' ais' → logprob: -11.50002384185791
    3. '[' → logprob: -11.87502384185791
    4. '[]' → logprob: -12.25002384185791
    5. 'ails' → logprob: -13.87502384185791
    6. 'ail' → logprob: -14.62502384185791
    7. 'airs' → logprob: -15.37502384185791
    8. 'ait' → logprob: -16.000024795532227
    9. '`' → logprob: -16.125024795532227
    10. 'a' → logprob: -16.375024795532227

Token 659: 'les' (ID: 1032)
  Prédit: 'les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.00012213163427077234
    2. 'le' → logprob: -9.5001220703125
    3. '[]' → logprob: -10.7501220703125
    4. '[' → logprob: -10.8751220703125
    5. '[]
' → logprob: -13.5001220703125
    6. '[(' → logprob: -13.6251220703125
    7. 'iles' → logprob: -14.1251220703125
    8. '_' → logprob: -14.5001220703125
    9. '[[' → logprob: -14.8751220703125
    10. '```' → logprob: -14.8751220703125

Token 660: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.001942918635904789
    2. 'adj' → logprob: -6.251943111419678
    3. '_pos' → logprob: -12.25194263458252
    4. 'Adj' → logprob: -12.25194263458252
    5. '[' → logprob: -13.50194263458252
    6. 'pos' → logprob: -14.50194263458252
    7. '[]' → logprob: -14.50194263458252
    8. '[
' → logprob: -14.87694263458252
    9. 's' → logprob: -15.00194263458252
    10. '_' → logprob: -15.00194263458252

Token 661: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 662: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 663: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03771976754069328
    2. 'for' → logprob: -3.9127197265625
    3. '        
' → logprob: -5.5377197265625
    4. ' for' → logprob: -5.6627197265625
    5. '#' (adapté à ' #') → logprob: -6.0377197265625
    6. '<|end|>' → logprob: -6.1627197265625
    7. 'def' → logprob: -6.4127197265625
    8. '```' → logprob: -7.1627197265625
    9. 'import' → logprob: -7.5377197265625
    10. '
' → logprob: -7.6627197265625

Token 664: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7650455832481384
    2. 'dist' → logprob: -0.8900455832481384
    3. '       ' → logprob: -3.140045642852783
    4. '#' → logprob: -3.265045642852783
    5. 'def' → logprob: -3.765045642852783
    6. 'distance' → logprob: -5.515045642852783
    7. 's' → logprob: -5.890045642852783
    8. 'total' → logprob: -6.265045642852783
    9. 'discount' → logprob: -6.640045642852783
    10. 'from' → logprob: -6.765045642852783

Token 665: ' each' (ID: 2454)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.3278132677078247
    2. ' d' → logprob: -2.327813148498535
    3. 'x' → logprob: -2.452813148498535
    4. ' x' → logprob: -2.702813148498535
    5. ' g' → logprob: -2.702813148498535
    6. 'g' → logprob: -3.077813148498535
    7. '(' → logprob: -3.202813148498535
    8. ' dx' → logprob: -3.202813148498535
    9. ' p' → logprob: -3.327813148498535
    10. 'd' → logprob: -3.452813148498535

Token 666: ' shelf' (ID: 40978)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.0073202848434448
    2. 'product' → logprob: -2.0073204040527344
    3. ' shelf' → logprob: -2.3823204040527344
    4. ' product' → logprob: -2.6323204040527344
    5. 's' → logprob: -2.6323204040527344
    6. '(x' → logprob: -2.7573204040527344
    7. '(g' → logprob: -3.1323204040527344
    8. ' (' → logprob: -3.3823204040527344
    9. 'x' → logprob: -3.7573204040527344
    10. ' g' → logprob: -4.007320404052734

Token 667: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.35535064339637756
    2. '_' → logprob: -2.2303507328033447
    3. ' cell' → logprob: -2.6053507328033447
    4. 'pos' → logprob: -2.8553507328033447
    5. '_pos' → logprob: -4.480350494384766
    6. ',' → logprob: -5.105350494384766
    7. '_cell' → logprob: -5.105350494384766
    8. '#' → logprob: -5.105350494384766
    9. '_,' → logprob: -5.480350494384766
    10. '           ' → logprob: -5.605350494384766

Token 668: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1647021770477295
    2. 'for' → logprob: -1.4147021770477295
    3. '#' → logprob: -1.5397021770477295
    4. ' for' → logprob: -2.4147021770477295
    5. '       ' → logprob: -2.5397021770477295
    6. '           ' → logprob: -3.6647021770477295
    7. '   ' → logprob: -4.539702415466309
    8. ',
' → logprob: -5.539702415466309
    9. '
' → logprob: -5.664702415466309
    10. 's' → logprob: -6.414702415466309

Token 669: ' determine' (ID: 11433)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2826172113418579
    2. 'for' → logprob: -1.532617211341858
    3. ' for' → logprob: -3.9076170921325684
    4. 'dist' → logprob: -5.907617092132568
    5. 'calculate' → logprob: -6.157617092132568
    6. ' #' → logprob: -6.657617092132568
    7. 'continue' → logprob: -6.657617092132568
    8. 'distance' → logprob: -7.532617092132568
    9. 'compute' → logprob: -8.282617568969727
    10. 'import' → logprob: -8.532617568969727

Token 670: ' minimal' (ID: 19957)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9434784650802612
    2. ' minimal' → logprob: -1.5684784650802612
    3. ' the' → logprob: -2.318478584289551
    4. 'minimal' → logprob: -2.318478584289551
    5. 'minimum' → logprob: -2.693478584289551
    6. 'min' → logprob: -3.318478584289551
    7. ' min' → logprob: -4.193478584289551
    8. '#' → logprob: -4.568478584289551
    9. ' minimum' → logprob: -4.693478584289551
    10. 'for' → logprob: -4.818478584289551

Token 671: ' dist' (ID: 3601)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.4712017774581909
    2. ' distance' → logprob: -1.596201777458191
    3. 'dist' → logprob: -1.846201777458191
    4. ' dist' → logprob: -4.4712018966674805
    5. 'cost' → logprob: -6.9712018966674805
    6. ' cost' → logprob: -7.4712018966674805
    7. ' distances' → logprob: -7.5962018966674805
    8. '_distance' → logprob: -8.34620189666748
    9. '```' → logprob: -8.47120189666748
    10. '
' → logprob: -8.84620189666748

Token 672: ' from' (ID: 591)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.775399386882782
    2. '_to' → logprob: -1.5253994464874268
    3. '=' → logprob: -2.4003994464874268
    4. 'from' → logprob: -2.7753994464874268
    5. ' =' → logprob: -3.5253994464874268
    6. '   ' → logprob: -3.5253994464874268
    7. 'for' → logprob: -3.7753994464874268
    8. 's' → logprob: -3.7753994464874268
    9. ' to' → logprob: -4.025399208068848
    10. '_from' → logprob: -4.025399208068848

Token 673: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.004956104792654514
    2. 'dist' → logprob: -6.129956245422363
    3. ' start' → logprob: -6.629956245422363
    4. 'all' → logprob: -7.629956245422363
    5. 's' → logprob: -8.254956245422363
    6. 'ais' → logprob: -8.379956245422363
    7. 'the' → logprob: -8.879956245422363
    8. 'any' → logprob: -9.379956245422363
    9. 'adj' → logprob: -9.379956245422363
    10. 'P' → logprob: -10.129956245422363

Token 674: ' to' (ID: 316)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.15092794597148895
    2. 'to' → logprob: -3.150928020477295
    3. 'dist' → logprob: -3.150928020477295
    4. 'd' → logprob: -4.275928020477295
    5. '   ' → logprob: -4.525928020477295
    6. ' to' → logprob: -5.400928020477295
    7. 's' → logprob: -5.400928020477295
    8. 'ans' → logprob: -5.775928020477295
    9. ' min' → logprob: -5.900928020477295
    10. '       ' → logprob: -6.275928020477295

Token 675: ' one' (ID: 1001)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.1797490119934082
    2. 'ais' → logprob: -3.179749011993408
    3. 'adj' → logprob: -3.179749011993408
    4. ' any' → logprob: -3.429749011993408
    5. 'its' → logprob: -4.429749011993408
    6. 'each' → logprob: -4.429749011993408
    7. ' ais' → logprob: -4.679749011993408
    8. ' each' → logprob: -5.679749011993408
    9. ' adjacent' → logprob: -5.679749011993408
    10. 'all' → logprob: -5.929749011993408

Token 676: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.25241488218307495
    2. 'of' → logprob: -1.5024149417877197
    3. 's' → logprob: -8.87741470336914
    4. 'ofs' → logprob: -9.37741470336914
    5. 'space' → logprob: -10.00241470336914
    6. '=' → logprob: -10.00241470336914
    7. '_of' → logprob: -10.12741470336914
    8. ' ' → logprob: -10.37741470336914
    9. '[' → logprob: -10.75241470336914
    10. '(' → logprob: -11.75241470336914

Token 677: ' its' (ID: 1617)
  Prédit: 'its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.2176668345928192
    2. ' its' → logprob: -1.8426668643951416
    3. 'the' → logprob: -3.4676668643951416
    4. 's' → logprob: -5.4676666259765625
    5. 'adj' → logprob: -7.4676666259765625
    6. ' shelf' → logprob: -7.7176666259765625
    7. ' the' → logprob: -8.342666625976562
    8. 'ais' → logprob: -8.467666625976562
    9. 'their' → logprob: -8.717666625976562
    10. '`s' → logprob: -10.342666625976562

Token 678: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.7210277318954468
    2. 'ais' → logprob: -1.0960277318954468
    3. ' adjacent' → logprob: -2.0960278511047363
    4. ' ais' → logprob: -2.9710278511047363
    5. ' aisle' → logprob: -6.596027851104736
    6. '_adj' → logprob: -6.721027851104736
    7. ' adj' → logprob: -7.096027851104736
    8. '   ' → logprob: -7.596027851104736
    9. '```' → logprob: -7.971027851104736
    10. ' adjacency' → logprob: -8.471027374267578

Token 679: ' ais' (ID: 36709)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.05741814151406288
    2. ' aisle' → logprob: -3.55741810798645
    3. ' ais' → logprob: -3.68241810798645
    4. '_' → logprob: -6.807418346405029
    5. ' ' → logprob: -8.807417869567871
    6. '```' → logprob: -8.932417869567871
    7. ' cells' → logprob: -8.932417869567871
    8. 'cells' → logprob: -9.307417869567871
    9. '   ' → logprob: -9.369917869567871
    10. 's' → logprob: -10.182417869567871

Token 680: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.31358811259269714
    2. 'les' → logprob: -1.3135881423950195
    3. 'l' → logprob: -9.56358814239502
    4. 'es' → logprob: -9.68858814239502
    5. 'de' → logprob: -10.31358814239502
    6. '```' → logprob: -11.31358814239502
    7. 'e' → logprob: -11.62608814239502
    8. 'ls' → logprob: -11.81358814239502
    9. 'cells' → logprob: -11.81358814239502
    10. 's' → logprob: -11.81358814239502

Token 681: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09837491065263748
    2. ' for' → logprob: -2.973374843597412
    3. 'for' → logprob: -3.223374843597412
    4. '```' → logprob: -6.848374843597412
    5. ',' → logprob: -7.598374843597412
    6. '        
' → logprob: -7.848374843597412
    7. '
' → logprob: -8.72337532043457
    8. '<|end|>' → logprob: -8.84837532043457
    9. '           ' → logprob: -9.09837532043457
    10. 's' → logprob: -9.84837532043457

Token 682: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08184802532196045
    2. ' for' → logprob: -3.33184814453125
    3. 'for' → logprob: -3.45684814453125
    4. '```' → logprob: -4.83184814453125
    5. '
' → logprob: -6.83184814453125
    6. '        
' → logprob: -7.20684814453125
    7. '<|end|>' → logprob: -7.83184814453125
    8. ',' → logprob: -7.95684814453125
    9. '           ' → logprob: -8.45684814453125
    10. '#' → logprob: -9.70684814453125

Token 683: ' shelf' (ID: 40978)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43118011951446533
    2. '       ' → logprob: -1.6811801195144653
    3. 'min' → logprob: -2.306180000305176
    4. '```' → logprob: -3.306180000305176
    5. ' for' → logprob: -4.556180000305176
    6. 'max' → logprob: -5.181180000305176
    7. 's' → logprob: -6.306180000305176
    8. 'dist' → logprob: -6.306180000305176
    9. 'best' → logprob: -6.431180000305176
    10. 'minimum' → logprob: -6.556180000305176

Token 684: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.7652910947799683
    2. '_dist' → logprob: -1.1402910947799683
    3. '_' → logprob: -1.7652910947799683
    4. '_distance' → logprob: -4.765291213989258
    5. '_pos' → logprob: -5.140291213989258
    6. '_positions' → logprob: -5.265291213989258
    7. '_cost' → logprob: -5.390291213989258
    8. '_to' → logprob: -5.515291213989258
    9. '_best' → logprob: -5.640291213989258
    10. '_time' → logprob: -5.890291213989258

Token 685: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.009170375764369965
    2. '_distance' → logprob: -5.1341705322265625
    3. '_pos' → logprob: -6.3841705322265625
    4. '_' → logprob: -7.2591705322265625
    5. '_cost' → logprob: -8.009170532226562
    6. 'dist' → logprob: -9.009170532226562
    7. '_d' → logprob: -9.509170532226562
    8. '_time' → logprob: -9.759170532226562
    9. ' _' → logprob: -9.884170532226562
    10. '_dis' → logprob: -10.509170532226562

Token 686: '={}
' (ID: 146130)
  Prédit: '={}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={}' → logprob: -0.5327609181404114
    2. '=' → logprob: -0.9077609181404114
    3. '=[]' → logprob: -5.407761096954346
    4. '={' → logprob: -6.532761096954346
    5. '=[' → logprob: -6.532761096954346
    6. '=s' → logprob: -7.157761096954346
    7. '={(' → logprob: -7.907761096954346
    8. ' =' → logprob: -8.032760620117188
    9. 's' → logprob: -8.282760620117188
    10. '={}
' → logprob: -8.532760620117188

Token 687: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027950558811426163
    2. ' for' → logprob: -4.277950763702393
    3. '       ' → logprob: -4.402950763702393
    4. '   ' → logprob: -6.902950763702393
    5. '```' → logprob: -8.527950286865234
    6. '           ' → logprob: -8.777950286865234
    7. '=' → logprob: -10.902950286865234
    8. ')' → logprob: -11.152950286865234
    9. '        
' → logprob: -12.027950286865234
    10. ' ' → logprob: -12.277950286865234

Token 688: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003710894088726491
    2. ' for' → logprob: -8.000370979309082
    3. '       ' → logprob: -10.250370979309082
    4. '   ' → logprob: -15.875370979309082
    5. '```' → logprob: -16.1253719329834
    6. '	for' → logprob: -18.3753719329834
    7. '           ' → logprob: -19.6253719329834
    8. 'import' → logprob: -21.0003719329834
    9. '
' → logprob: -21.3753719329834
    10. '``' → logprob: -21.6253719329834

Token 689: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7061786651611328
    2. '(x' → logprob: -0.8311786651611328
    3. '(s' → logprob: -2.706178665161133
    4. 'pos' → logprob: -6.456178665161133
    5. '(pos' → logprob: -6.706178665161133
    6. '(k' → logprob: -7.956178665161133
    7. ' pos' → logprob: -7.956178665161133
    8. '(key' → logprob: -7.956178665161133
    9. 's' → logprob: -9.331178665161133
    10. ' shelf' → logprob: -10.581178665161133

Token 690: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.930552313453518e-05
    2. ' x' → logprob: -10.125049591064453
    3. '(x' → logprob: -12.000049591064453
    4. ')x' → logprob: -13.250049591064453
    5. 's' → logprob: -14.000049591064453
    6. '```' → logprob: -16.500049591064453
    7. '
' → logprob: -16.750049591064453
    8. '_x' → logprob: -17.125049591064453
    9. ' (' → logprob: -17.125049591064453
    10. ')' → logprob: -17.250049591064453

Token 691: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0003445216570980847
    2. ',' → logprob: -8.125344276428223
    3. ' ,' → logprob: -10.000344276428223
    4. ',s' → logprob: -13.875344276428223
    5. ',user' → logprob: -14.250344276428223
    6. '```' → logprob: -14.750344276428223
    7. ',x' → logprob: -14.875344276428223
    8. ',
' → logprob: -15.875344276428223
    9. '
' → logprob: -16.12534523010254
    10. ' ' → logprob: -16.50034523010254

Token 692: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.007150445133447647
    2. '),(' → logprob: -5.007150650024414
    3. ')' → logprob: -8.007150650024414
    4. ' ),' → logprob: -10.132150650024414
    5. ',' → logprob: -10.882150650024414
    6. '   ' → logprob: -11.257150650024414
    7. ',),' → logprob: -12.132150650024414
    8. ',s' → logprob: -12.257150650024414
    9. 'in' → logprob: -12.257150650024414
    10. ' in' → logprob: -13.382150650024414

Token 693: ' in' (ID: 306)
  Prédit: ',s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.7080023884773254
    2. ' in' → logprob: -1.3330023288726807
    3. 'in' → logprob: -1.7080023288726807
    4. ',' → logprob: -2.9580023288726807
    5. 's' → logprob: -6.58300256729126
    6. ' ,' → logprob: -6.70800256729126
    7. ',(' → logprob: -6.70800256729126
    8. ',in' → logprob: -6.70800256729126
    9. ',n' → logprob: -6.83300256729126
    10. ',v' → logprob: -7.70800256729126

Token 694: ' shelves' (ID: 52049)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3497280478477478
    2. ' shelves' → logprob: -1.2247281074523926
    3. ' shelf' → logprob: -6.849728107452393
    4. ' shel' → logprob: -8.599727630615234
    5. ' s' → logprob: -11.849727630615234
    6. 'helves' → logprob: -12.349727630615234
    7. 'sh' → logprob: -12.724727630615234
    8. ' shelving' → logprob: -12.849727630615234
    9. '`s' → logprob: -12.912227630615234
    10. '棚' → logprob: -12.912227630615234

Token 695: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -6.778209353797138e-05
    2. 'pos' → logprob: -9.625067710876465
    3. '_positions' → logprob: -14.125067710876465
    4. 'Pos' → logprob: -15.000067710876465
    5. '```' → logprob: -15.375067710876465
    6. '_' → logprob: -16.37506866455078
    7. '
' → logprob: -16.37506866455078
    8. '[(' → logprob: -16.62506866455078
    9. '   ' → logprob: -16.62506866455078
    10. 's' → logprob: -17.50006866455078

Token 696: '.keys' (ID: 18392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03461621701717377
    2. ':
' → logprob: -3.534616231918335
    3. '):' → logprob: -5.659615993499756
    4. ',' → logprob: -7.659615993499756
    5. '):
' → logprob: -7.909615993499756
    6. '<|end|>' → logprob: -8.784616470336914
    7. ' in' → logprob: -9.409616470336914
    8. ']:' → logprob: -10.284616470336914
    9. ':

' → logprob: -10.409616470336914
    10. 's' → logprob: -10.409616470336914

Token 697: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6849285364151001
    2. '():
' → logprob: -1.1849285364151
    3. ':
' → logprob: -2.0599284172058105
    4. '():' → logprob: -3.3099284172058105
    5. '):' → logprob: -4.1849284172058105
    6. '):
' → logprob: -5.0599284172058105
    7. '   ' → logprob: -6.6849284172058105
    8. '<|end|>' → logprob: -6.8099284172058105
    9. '()' → logprob: -7.9349284172058105
    10. '       ' → logprob: -8.059928894042969

Token 698: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05436668172478676
    2. '           ' → logprob: -3.5543665885925293
    3. '       ' → logprob: -4.179366588592529
    4. '```' → logprob: -5.054366588592529
    5. 's' → logprob: -6.804366588592529
    6. '    
' → logprob: -8.304367065429688
    7. '<|end|>' → logprob: -8.554367065429688
    8. ',s' → logprob: -8.554367065429688
    9. '`s' → logprob: -8.679367065429688
    10. ' ' → logprob: -9.554367065429688

Token 699: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.4754341244697571
    2. 'dist' → logprob: -1.3504340648651123
    3. 'd' → logprob: -2.8504340648651123
    4. 's' → logprob: -3.6004340648651123
    5. '           ' → logprob: -4.475434303283691
    6. 'm' → logprob: -5.475434303283691
    7. '   ' → logprob: -5.975434303283691
    8. ' shelf' → logprob: -5.975434303283691
    9. 'ans' → logprob: -6.100434303283691
    10. 'best' → logprob: -6.225434303283691

Token 700: '_d' (ID: 1565)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.001613769680261612
    2. 'dist' → logprob: -7.376613616943359
    3. '_' → logprob: -7.626613616943359
    4. '_val' → logprob: -8.50161361694336
    5. '_distance' → logprob: -8.62661361694336
    6. 'Dist' → logprob: -9.62661361694336
    7. '_d' → logprob: -10.62661361694336
    8. 's' → logprob: -12.12661361694336
    9. '_s' → logprob: -12.75161361694336
    10. '_min' → logprob: -13.00161361694336

Token 701: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030295932665467262
    2. '=min' → logprob: -3.9052958488464355
    3. '=_' → logprob: -5.9052958488464355
    4. '=int' → logprob: -5.9052958488464355
    5. 'ist' → logprob: -6.5302958488464355
    6. '=max' → logprob: -7.1552958488464355
    7. '=float' → logprob: -7.4052958488464355
    8. ' =' → logprob: -7.6552958488464355
    9. '=[]' → logprob: -8.155296325683594
    10. 'istance' → logprob: -8.155296325683594

Token 702: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.2214573174715042
    2. '10' → logprob: -1.7214573621749878
    3. 'dist' → logprob: -3.9714572429656982
    4. 'sys' → logprob: -7.471457481384277
    5. '1' → logprob: -8.721457481384277
    6. 'int' → logprob: -8.971457481384277
    7. '100' → logprob: -9.346457481384277
    8. 'min' → logprob: -11.096457481384277
    9. '-' → logprob: -11.096457481384277
    10. '999' → logprob: -11.346457481384277

Token 703: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6882910132408142
    2. '9' → logprob: -0.9382910132408142
    3. '000' → logprob: -2.313291072845459
    4. '7' → logprob: -6.063291072845459
    5. '6' → logprob: -6.438291072845459
    6. '10' → logprob: -7.063291072845459
    7. '00' → logprob: -7.313291072845459
    8. '999' → logprob: -7.563291072845459
    9. '0' → logprob: -7.688291072845459
    10. '```' → logprob: -8.0632905960083

Token 704: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.004336595069617033
    2. '15' → logprob: -6.629336357116699
    3. '7' → logprob: -6.754336357116699
    4. '10' → logprob: -6.879336357116699
    5. '8' → logprob: -7.879336357116699
    6. '12' → logprob: -8.6293363571167
    7. '6' → logprob: -8.8793363571167
    8. '18' → logprob: -9.2543363571167
    9. '14' → logprob: -11.7543363571167
    10. '13' → logprob: -12.1293363571167

Token 705: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2846773862838745
    2. 'for' → logprob: -2.034677505493164
    3. ' for' → logprob: -3.034677505493164
    4. '<|end|>' → logprob: -3.409677505493164
    5. '           ' → logprob: -3.784677505493164
    6. '  
' → logprob: -5.909677505493164
    7. '   ' → logprob: -6.034677505493164
    8. ' ' → logprob: -6.409677505493164
    9. '<|end|>' → logprob: -6.659677505493164
    10. '	for' → logprob: -6.909677505493164

Token 706: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013007979840040207
    2. ' for' → logprob: -4.513008117675781
    3. 'for' → logprob: -6.888008117675781
    4. '       ' → logprob: -8.638008117675781
    5. '
' → logprob: -9.013008117675781
    6. '   ' → logprob: -9.138008117675781
    7. '<|end|>' → logprob: -9.138008117675781
    8. ',' → logprob: -9.513008117675781
    9. '```' → logprob: -9.763008117675781
    10. '	       ' → logprob: -10.263008117675781

Token 707: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.44121053814888
    2. ' for' → logprob: -1.1912105083465576
    3. '           ' → logprob: -2.9412105083465576
    4. '   ' → logprob: -10.941210746765137
    5. '	for' → logprob: -10.941210746765137
    6. '```' → logprob: -11.066210746765137
    7. '       ' → logprob: -11.941210746765137
    8. 'adj' → logprob: -12.191210746765137
    9. '               ' → logprob: -12.441210746765137
    10. '
' → logprob: -12.566210746765137

Token 708: ' ax' (ID: 6807)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.8446269035339355
    2. '(ax' → logprob: -1.3446269035339355
    3. '(nx' → logprob: -2.2196269035339355
    4. 'nx' → logprob: -2.2196269035339355
    5. 'adj' → logprob: -3.5946269035339355
    6. '(adj' → logprob: -3.8446269035339355
    7. 'pos' → logprob: -3.9696269035339355
    8. '(' → logprob: -4.0946269035339355
    9. '(pos' → logprob: -5.9696269035339355
    10. '(a' → logprob: -6.3446269035339355

Token 709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020020268857479095
    2. ' ,' → logprob: -9.000200271606445
    3. ',y' → logprob: -10.750200271606445
    4. '_,' → logprob: -10.750200271606445
    5. ',_' → logprob: -11.375200271606445
    6. 'ay' → logprob: -12.125200271606445
    7. ',a' → logprob: -12.875200271606445
    8. ' in' → logprob: -12.875200271606445
    9. ',s' → logprob: -13.000200271606445
    10. ',my' → logprob: -13.125200271606445

Token 710: 'ay' (ID: 356)
  Prédit: 'ay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -4.36574100604048e-06
    2. ' ay' → logprob: -12.375004768371582
    3. '
' → logprob: -17.875003814697266
    4. 'ax' → logprob: -18.625003814697266
    5. 'ayy' → logprob: -18.750003814697266
    6. 'aybe' → logprob: -18.875003814697266
    7. '-ay' → logprob: -19.625003814697266
    8. 'ayey' → logprob: -19.625003814697266
    9. 'ayay' → logprob: -20.125003814697266
    10. 'ayi' → logprob: -20.125003814697266

Token 711: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02362872287631035
    2. 'in' → logprob: -3.7736287117004395
    3. ',' → logprob: -8.398629188537598
    4. ' ,' → logprob: -10.648629188537598
    5. 'ax' → logprob: -10.773629188537598
    6. ')' → logprob: -11.148629188537598
    7. 's' → logprob: -11.398629188537598
    8. '<|end|>' → logprob: -11.523629188537598
    9. '           ' → logprob: -11.773629188537598
    10. '```' → logprob: -12.023629188537598

Token 712: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030166734009981155
    2. 'ais' → logprob: -4.1551666259765625
    3. ' shelf' → logprob: -4.2801666259765625
    4. '   ' → logprob: -9.655166625976562
    5. ' ais' → logprob: -10.405166625976562
    6. ' aisle' → logprob: -10.780166625976562
    7. '
' → logprob: -11.530166625976562
    8. ' ' → logprob: -11.655166625976562
    9. '    ' → logprob: -12.030166625976562
    10. '`s' → logprob: -12.530166625976562

Token 713: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.77627644513268e-06
    2. '_adj' → logprob: -12.125008583068848
    3. '_pos' → logprob: -13.750008583068848
    4. '_min' → logprob: -13.750008583068848
    5. 'ais' → logprob: -15.000008583068848
    6. 'x' → logprob: -15.875008583068848
    7. '_x' → logprob: -16.375009536743164
    8. '```' → logprob: -16.500009536743164
    9. '_ax' → logprob: -16.875009536743164
    10. '(x' → logprob: -16.875009536743164

Token 714: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.0026630505453795195
    2. '_' → logprob: -6.1276631355285645
    3. '_pos' → logprob: -9.377662658691406
    4. 'pos' → logprob: -9.627662658691406
    5. 'asile' → logprob: -9.752662658691406
    6. 's' → logprob: -9.877662658691406
    7. 'ail' → logprob: -10.127662658691406
    8. 'aise' → logprob: -10.752662658691406
    9. 'adj' → logprob: -11.127662658691406
    10. 'ase' → logprob: -11.377662658691406

Token 715: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7017943859100342
    2. '_pos' → logprob: -1.4517943859100342
    3. '_adj' → logprob: -1.7017943859100342
    4. 'ile' → logprob: -3.451794385910034
    5. 'pos' → logprob: -4.326794624328613
    6. 'ale' → logprob: -5.201794624328613
    7. 's' → logprob: -5.701794624328613
    8. 'sle' → logprob: -5.951794624328613
    9. 'les' → logprob: -6.076794624328613
    10. 'lse' → logprob: -6.076794624328613

Token 716: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.007648983504623175
    2. 'pos' → logprob: -4.882648944854736
    3. 's' → logprob: -10.382649421691895
    4. '```' → logprob: -12.382649421691895
    5. 'adj' → logprob: -13.632649421691895
    6. '
' → logprob: -13.757649421691895
    7. '_positions' → logprob: -14.132649421691895
    8. '[pos' → logprob: -14.132649421691895
    9. '_adj' → logprob: -14.257649421691895
    10. 'Pos' → logprob: -14.382649421691895

Token 717: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.463036435074173e-05
    2. '[x' → logprob: -11.375024795532227
    3. '(x' → logprob: -12.000024795532227
    4. '[
' → logprob: -13.250024795532227
    5. '.items' → logprob: -13.875024795532227
    6. '```' → logprob: -14.125024795532227
    7. '[' → logprob: -14.375024795532227
    8. '.get' → logprob: -14.875024795532227
    9. '((' → logprob: -15.250024795532227
    10. 's' → logprob: -15.250024795532227

Token 718: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00023154958034865558
    2. '(x' → logprob: -8.375231742858887
    3. ')x' → logprob: -15.000231742858887
    4. ' x' → logprob: -15.250231742858887
    5. ' (' → logprob: -16.00023078918457
    6. '
' → logprob: -16.37523078918457
    7. '{x' → logprob: -16.87523078918457
    8. '   ' → logprob: -17.12523078918457
    9. 's' → logprob: -17.25023078918457
    10. '```' → logprob: -17.25023078918457

Token 719: ',y' (ID: 16103)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14427964389324188
    2. 'y' → logprob: -2.019279718399048
    3. ',y' → logprob: -6.894279479980469
    4. '(x' → logprob: -7.644279479980469
    5. ',' → logprob: -10.394279479980469
    6. '(y' → logprob: -10.644279479980469
    7. ',x' → logprob: -11.144279479980469
    8. '0' → logprob: -11.769279479980469
    9. '(' → logprob: -11.769279479980469
    10. '])' → logprob: -12.019279479980469

Token 720: ')]' (ID: 15710)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3942859470844269
    2. ']:' → logprob: -1.1442859172821045
    3. '):
' → logprob: -6.144286155700684
    4. ']' → logprob: -6.269286155700684
    5. ']:
' → logprob: -6.894286155700684
    6. ')]' → logprob: -7.144286155700684
    7. '):' → logprob: -7.519286155700684
    8. ']]:
' → logprob: -8.269286155700684
    9. ']):
' → logprob: -8.519286155700684
    10. ']:

' → logprob: -8.894286155700684

Token 721: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6371920704841614
    2. ':' → logprob: -1.3871920108795166
    3. '               ' → logprob: -1.5121920108795166
    4. '           ' → logprob: -8.637191772460938
    5. '):
' → logprob: -8.887191772460938
    6. '                   ' → logprob: -9.137191772460938
    7. '              ' → logprob: -9.762191772460938
    8. '[' → logprob: -9.887191772460938
    9. ' if' → logprob: -10.012191772460938
    10. '```' → logprob: -10.137191772460938

Token 722: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000808082812000066
    2. ' if' → logprob: -7.375808238983154
    3. 'if' → logprob: -10.000807762145996
    4. '```' → logprob: -10.000807762145996
    5. '           ' → logprob: -10.625807762145996
    6. '                
' → logprob: -11.000807762145996
    7. '                   ' → logprob: -11.500807762145996
    8. ' ' → logprob: -11.500807762145996
    9. '                               ' → logprob: -12.000807762145996
    10. '<|end|>' → logprob: -12.875807762145996

Token 723: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4971824884414673
    2. 'min' → logprob: -0.9971824884414673
    3. 'd' → logprob: -4.747182369232178
    4. ' if' → logprob: -4.872182369232178
    5. '                   ' → logprob: -5.622182369232178
    6. '               ' → logprob: -6.872182369232178
    7. ' min' → logprob: -6.997182369232178
    8. 'dist' → logprob: -7.122182369232178
    9. 'nd' → logprob: -9.622182846069336
    10. ' d' → logprob: -11.247182846069336

Token 724: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03807580843567848
    2. ' dist' → logprob: -3.2880759239196777
    3. '               ' → logprob: -10.66307544708252
    4. '                   ' → logprob: -11.66307544708252
    5. '	dist' → logprob: -14.03807544708252
    6. '(dist' → logprob: -14.66307544708252
    7. '   ' → logprob: -15.03807544708252
    8. '0' → logprob: -15.41307544708252
    9. '                           ' → logprob: -15.66307544708252
    10. '                ' → logprob: -15.78807544708252

Token 725: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.0013177391374483705
    2. 'from' → logprob: -7.126317501068115
    3. '[' → logprob: -7.626317501068115
    4. '```' → logprob: -12.126317977905273
    5. 'From' → logprob: -12.251317977905273
    6. '_FROM' → logprob: -12.501317977905273
    7. '[x' → logprob: -13.501317977905273
    8. '[from' → logprob: -13.751317977905273
    9. 's' → logprob: -14.126317977905273
    10. '   ' → logprob: -14.251317977905273

Token 726: '_start' (ID: 10949)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -3.464347173576243e-05
    2. ' ax' → logprob: -11.25003433227539
    3. 'start' → logprob: -11.50003433227539
    4. '[' → logprob: -12.25003433227539
    5. '
' → logprob: -13.37503433227539
    6. '(ax' → logprob: -13.50003433227539
    7. '
' → logprob: -14.00003433227539
    8. '```' → logprob: -14.25003433227539
    9. 'x' → logprob: -14.37503433227539
    10. '   ' → logprob: -15.00003433227539

Token 727: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.2617008400848135e-05
    2. '[n' → logprob: -10.750032424926758
    3. '```' → logprob: -12.125032424926758
    4. ' [' → logprob: -14.125032424926758
    5. '[
' → logprob: -14.125032424926758
    6. '
' → logprob: -14.125032424926758
    7. 'ax' → logprob: -14.375032424926758
    8. '=ax' → logprob: -14.500032424926758
    9. '[(' → logprob: -15.250032424926758
    10. '(ax' → logprob: -15.250032424926758

Token 728: 'ax' (ID: 1362)
  Prédit: 'ax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -5.9153885558771435e-06
    2. ' ax' → logprob: -12.250005722045898
    3. '(ax' → logprob: -15.000005722045898
    4. '	ax' → logprob: -15.125005722045898
    5. '
' → logprob: -16.2500057220459
    6. '[' → logprob: -16.3750057220459
    7. '   ' → logprob: -16.8750057220459
    8. 'axx' → logprob: -16.8750057220459
    9. '=ax' → logprob: -17.0000057220459
    10. 'x' → logprob: -17.2500057220459

Token 729: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01611730270087719
    2. '[' → logprob: -4.141117095947266
    3. 'ax' → logprob: -10.266117095947266
    4. ']' → logprob: -10.766117095947266
    5. ' ][' → logprob: -12.141117095947266
    6. '```' → logprob: -12.266117095947266
    7. '
' → logprob: -13.516117095947266
    8. '   ' → logprob: -13.516117095947266
    9. ''][' → logprob: -13.766117095947266
    10. '"][' → logprob: -13.891117095947266

Token 730: 'ay' (ID: 356)
  Prédit: 'ay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -1.8624639324116288e-06
    2. ' ay' → logprob: -13.375001907348633
    3. '
' → logprob: -16.250001907348633
    4. 'ax' → logprob: -16.500001907348633
    5. '
' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.500001907348633
    7. '[' → logprob: -18.875001907348633
    8. '][' → logprob: -19.125001907348633
    9. '```' → logprob: -19.125001907348633
    10. ' ' → logprob: -19.375001907348633

Token 731: ']>=' (ID: 185954)
  Prédit: ']!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.0767156258225441
    2. ']' → logprob: -3.0767157077789307
    3. ']<' → logprob: -4.076715469360352
    4. ']>=' → logprob: -4.951715469360352
    5. '!=-' → logprob: -6.326715469360352
    6. '!=' → logprob: -7.326715469360352
    7. ']>' → logprob: -7.701715469360352
    8. ']==' → logprob: -7.951715469360352
    9. '<' → logprob: -8.576715469360352
    10. ']+' → logprob: -8.951715469360352

Token 732: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۰' → logprob: -19.500001907348633
    4. '   ' → logprob: -20.000001907348633
    5. '
' → logprob: -21.500001907348633
    6. '```' → logprob: -21.500001907348633
    7. '<|end|>' → logprob: -21.625001907348633
    8. '０' → logprob: -22.750001907348633
    9. '1' → logprob: -23.125001907348633
    10. '000' → logprob: -23.375001907348633

Token 733: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.15969038009643555
    2. '                   ' → logprob: -2.2846903800964355
    3. 'and' → logprob: -3.1596903800964355
    4. '                       ' → logprob: -6.0346903800964355
    5. '               ' → logprob: -7.7846903800964355
    6. ':' → logprob: -8.159690856933594
    7. ':
' → logprob: -9.409690856933594
    8. '                  ' → logprob: -10.034690856933594
    9. '                           ' → logprob: -10.284690856933594
    10. '                    ' → logprob: -11.034690856933594

Token 734: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5762720704078674
    2. ' dist' → logprob: -0.8262720704078674
    3. '                   ' → logprob: -8.326272010803223
    4. '               ' → logprob: -10.201272010803223
    5. '	dist' → logprob: -11.451272010803223
    6. '                       ' → logprob: -11.576272010803223
    7. '                           ' → logprob: -11.826272010803223
    8. '                  ' → logprob: -12.701272010803223
    9. '(dist' → logprob: -12.826272010803223
    10. ' ' → logprob: -12.826272010803223

Token 735: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.00029065259150229394
    2. 'from' → logprob: -8.875290870666504
    3. 'dist' → logprob: -9.625290870666504
    4. '[s' → logprob: -10.500290870666504
    5. 's' → logprob: -11.375290870666504
    6. '[' → logprob: -11.375290870666504
    7. '[from' → logprob: -12.375290870666504
    8. '[x' → logprob: -12.625290870666504
    9. '_FROM' → logprob: -12.750290870666504
    10. '   ' → logprob: -12.750290870666504

Token 736: '_start' (ID: 10949)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.049910664558410645
    2. '_start' → logprob: -3.049910545349121
    3. 'dist' → logprob: -7.549910545349121
    4. 's' → logprob: -7.674910545349121
    5. ' start' → logprob: -9.299910545349121
    6. 'from' → logprob: -9.299910545349121
    7. '```' → logprob: -9.674910545349121
    8. '10' → logprob: -10.799910545349121
    9. '
' → logprob: -11.674910545349121
    10. '_from' → logprob: -11.674910545349121

Token 737: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.478889215737581e-05
    2. '[x' → logprob: -11.250054359436035
    3. '(ax' → logprob: -11.625054359436035
    4. '[(' → logprob: -11.875054359436035
    5. 'ax' → logprob: -11.875054359436035
    6. '][' → logprob: -12.375054359436035
    7. '```' → logprob: -12.500054359436035
    8. '
' → logprob: -12.625054359436035
    9. ' [' → logprob: -14.000054359436035
    10. '[s' → logprob: -14.125054359436035

Token 738: 'ax' (ID: 1362)
  Prédit: 'ax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -1.7432603272027336e-06
    2. ' ax' → logprob: -13.500001907348633
    3. '(ax' → logprob: -15.750001907348633
    4. '	ax' → logprob: -16.250001907348633
    5. '
' → logprob: -17.625001907348633
    6. '[' → logprob: -17.625001907348633
    7. '=ax' → logprob: -17.625001907348633
    8. '_ax' → logprob: -18.125001907348633
    9. '
' → logprob: -18.125001907348633
    10. 'x' → logprob: -18.125001907348633

Token 739: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06422845274209976
    2. '[' → logprob: -2.8142285346984863
    3. 'ay' → logprob: -6.189228534698486
    4. 'ax' → logprob: -9.689228057861328
    5. ')][' → logprob: -10.814228057861328
    6. ']][' → logprob: -11.064228057861328
    7. ']' → logprob: -11.314228057861328
    8. ''][' → logprob: -11.689228057861328
    9. '```' → logprob: -11.689228057861328
    10. ' ][' → logprob: -11.814228057861328

Token 740: 'ay' (ID: 356)
  Prédit: 'ay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -3.4121114822482923e-06
    2. 'ax' → logprob: -13.875003814697266
    3. ' ay' → logprob: -14.375003814697266
    4. '   ' → logprob: -14.875003814697266
    5. '
' → logprob: -15.125003814697266
    6. 'a' → logprob: -15.250003814697266
    7. '```' → logprob: -15.250003814697266
    8. 'ays' → logprob: -16.500003814697266
    9. ' ' → logprob: -16.875003814697266
    10. '
' → logprob: -17.000003814697266

Token 741: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.13220953941345215
    2. ']<' → logprob: -2.132209539413452
    3. ']' → logprob: -6.007209777832031
    4. ' <' → logprob: -6.882209777832031
    5. ']<=' → logprob: -7.882209777832031
    6. '<len' → logprob: -8.007209777832031
    7. '+' → logprob: -8.132209777832031
    8. '<size' → logprob: -8.757209777832031
    9. 'min' → logprob: -9.257209777832031
    10. '<int' → logprob: -9.382209777832031

Token 742: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00029840084607712924
    2. ' min' → logprob: -8.125298500061035
    3. '10' → logprob: -13.375298500061035
    4. '   ' → logprob: -14.500298500061035
    5. '	min' → logprob: -16.00029754638672
    6. '```' → logprob: -16.62529754638672
    7. '           ' → logprob: -16.87529754638672
    8. '
' → logprob: -16.87529754638672
    9. '=min' → logprob: -16.87529754638672
    10. '       ' → logprob: -18.12529754638672

Token 743: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00042983482126146555
    2. 'min' → logprob: -8.0004301071167
    3. 'd' → logprob: -9.8754301071167
    4. '=min' → logprob: -11.2504301071167
    5. '```' → logprob: -12.0004301071167
    6. '=' → logprob: -12.5004301071167
    7. '(min' → logprob: -12.5004301071167
    8. 's' → logprob: -13.0004301071167
    9. '[min' → logprob: -13.0004301071167
    10. ' min' → logprob: -13.2504301071167

Token 744: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6669319272041321
    2. ':
' → logprob: -1.0419318675994873
    3. '                   ' → logprob: -2.6669318675994873
    4. '               ' → logprob: -3.4169318675994873
    5. '                       ' → logprob: -3.7919318675994873
    6. '                           ' → logprob: -5.166932106018066
    7. ':min' → logprob: -6.791932106018066
    8. '                               ' → logprob: -6.916932106018066
    9. '           ' → logprob: -7.791932106018066
    10. '=min' → logprob: -9.291932106018066

Token 745: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013826251961290836
    2. '                       ' → logprob: -5.013826370239258
    3. ' min' → logprob: -5.263826370239258
    4. 'min' → logprob: -6.888826370239258
    5. '               ' → logprob: -8.138826370239258
    6. '                           ' → logprob: -8.263826370239258
    7. '                               ' → logprob: -8.763826370239258
    8. '```' → logprob: -9.513826370239258
    9. '                                           ' → logprob: -10.138826370239258
    10. '                                   ' → logprob: -11.138826370239258

Token 746: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -3.786196975852363e-05
    2. ' min' → logprob: -10.375038146972656
    3. '                   ' → logprob: -12.875038146972656
    4. '                           ' → logprob: -13.000038146972656
    5. '                       ' → logprob: -13.375038146972656
    6. '```' → logprob: -17.125038146972656
    7. '
' → logprob: -17.500038146972656
    8. '(min' → logprob: -17.875038146972656
    9. '                               ' → logprob: -18.125038146972656
    10. '               ' → logprob: -18.250038146972656

Token 747: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.250000953674316
    3. 'd' → logprob: -15.250000953674316
    4. '=' → logprob: -17.875001907348633
    5. '_c' → logprob: -18.000001907348633
    6. '_dist' → logprob: -18.250001907348633
    7. '_p' → logprob: -18.375001907348633
    8. 's' → logprob: -18.500001907348633
    9. '                   ' → logprob: -18.625001907348633
    10. '_s' → logprob: -18.625001907348633

Token 748: '=' (ID: 28)
  Prédit: '=min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=min' → logprob: -0.023282986134290695
    2. '=' → logprob: -3.773283004760742
    3. '=max' → logprob: -10.898283004760742
    4. '=d' → logprob: -11.148283004760742
    5. '=
' → logprob: -13.648283004760742
    6. '=int' → logprob: -14.148283004760742
    7. '=is' → logprob: -14.523283004760742
    8. '=i' → logprob: -15.273283004760742
    9. '=

' → logprob: -15.273283004760742
    10. '=m' → logprob: -15.523283004760742

Token 749: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0001242772996192798
    2. ' dist' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.000123977661133
    4. '	dist' → logprob: -15.375123977661133
    5. '                   ' → logprob: -15.875123977661133
    6. '               ' → logprob: -16.250123977661133
    7. '```' → logprob: -16.625123977661133
    8. '           ' → logprob: -17.000123977661133
    9. '10' → logprob: -17.125123977661133
    10. '(dist' → logprob: -18.125123977661133

Token 750: '_from' (ID: 12526)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.10322873294353485
    2. '_from' → logprob: -2.353228807449341
    3. 'from' → logprob: -5.853228569030762
    4. '_' → logprob: -10.228228569030762
    5. '_for' → logprob: -10.353228569030762
    6. '[' → logprob: -10.728228569030762
    7. 'd' → logprob: -11.228228569030762
    8. 'From' → logprob: -11.853228569030762
    9. '```' → logprob: -11.853228569030762
    10. 'ax' → logprob: -12.353228569030762

Token 751: '_start' (ID: 10949)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3134465217590332
    2. '_start' → logprob: -1.3134465217590332
    3. 'ax' → logprob: -9.563446044921875
    4. 'dist' → logprob: -9.688446044921875
    5. 's' → logprob: -10.938446044921875
    6. ' start' → logprob: -11.188446044921875
    7. 'min' → logprob: -11.938446044921875
    8. '```' → logprob: -12.063446044921875
    9. '10' → logprob: -12.563446044921875
    10. '
' → logprob: -13.688446044921875

Token 752: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.045823566731997e-05
    2. 'dist' → logprob: -11.250020027160645
    3. 'ax' → logprob: -13.125020027160645
    4. '[min' → logprob: -13.625020027160645
    5. '(ax' → logprob: -14.250020027160645
    6. '```' → logprob: -14.500020027160645
    7. '[(' → logprob: -14.750020027160645
    8. '[
' → logprob: -15.000020027160645
    9. '[n' → logprob: -15.125020027160645
    10. '_ax' → logprob: -15.250020027160645

Token 753: 'ax' (ID: 1362)
  Prédit: 'ax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -1.5451681974809617e-05
    2. 'x' → logprob: -11.875015258789062
    3. '(ax' → logprob: -12.375015258789062
    4. '[' → logprob: -13.250015258789062
    5. ' ax' → logprob: -13.250015258789062
    6. '[x' → logprob: -15.375015258789062
    7. 'nx' → logprob: -15.750015258789062
    8. 'a' → logprob: -16.875015258789062
    9. '_ax' → logprob: -17.250015258789062
    10. '```' → logprob: -17.250015258789062

Token 754: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5239003300666809
    2. '][' → logprob: -0.8989003300666809
    3. 'from' → logprob: -8.023900032043457
    4. 'ax' → logprob: -8.773900032043457
    5. '           ' → logprob: -10.398900032043457
    6. ']' → logprob: -10.398900032043457
    7. '               ' → logprob: -10.648900032043457
    8. '   ' → logprob: -10.898900032043457
    9. '       ' → logprob: -11.148900032043457
    10. '(ax' → logprob: -11.148900032043457

Token 755: 'ay' (ID: 356)
  Prédit: 'ay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.002190948696807027
    2. 'ax' → logprob: -6.127191066741943
    3. '
' → logprob: -12.877190589904785
    4. '[' → logprob: -14.127190589904785
    5. ' ay' → logprob: -14.377190589904785
    6. '(' → logprob: -14.877190589904785
    7. '   ' → logprob: -15.002190589904785
    8. 'ny' → logprob: -15.377190589904785
    9. '0' → logprob: -15.627190589904785
    10. 'oy' → logprob: -16.3771915435791

Token 756: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16292248666286469
    2. '<|end|>' → logprob: -2.4129223823547363
    3. '           ' → logprob: -3.5379223823547363
    4. '               ' → logprob: -4.037922382354736
    5. ')return' → logprob: -5.912922382354736
    6. '                   ' → logprob: -5.912922382354736
    7. ']' → logprob: -6.162922382354736
    8. '       ' → logprob: -6.412922382354736
    9. '<|end|>' → logprob: -6.412922382354736
    10. '```' → logprob: -7.787922382354736

Token 757: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07588759064674377
    2. '       ' → logprob: -3.575887680053711
    3. '<|end|>' → logprob: -4.325887680053711
    4. '               ' → logprob: -4.575887680053711
    5. '```' → logprob: -4.825887680053711
    6. '
' → logprob: -5.575887680053711
    7. 's' → logprob: -6.450887680053711
    8. ')' → logprob: -6.700887680053711
    9. '                   ' → logprob: -6.700887680053711
    10. '          ' → logprob: -7.200887680053711

Token 758: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6897265911102295
    2. '       ' → logprob: -1.3147265911102295
    3. 's' → logprob: -1.5647265911102295
    4. 'if' → logprob: -4.064726829528809
    5. '```' → logprob: -6.439726829528809
    6. '   ' → logprob: -7.064726829528809
    7. ' if' → logprob: -7.189726829528809
    8. '               ' → logprob: -9.314726829528809
    9. '`s' → logprob: -10.689726829528809
    10. '	s' → logprob: -11.064726829528809

Token 759: ' impossible' (ID: 19786)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9444878101348877
    2. 's' → logprob: -1.1944878101348877
    3. '           ' → logprob: -1.1944878101348877
    4. '       ' → logprob: -5.569487571716309
    5. ' if' → logprob: -6.694487571716309
    6. '   ' → logprob: -8.944487571716309
    7. '               ' → logprob: -9.569487571716309
    8. ' shelf' → logprob: -9.569487571716309
    9. '#' → logprob: -11.069487571716309
    10. '```' → logprob: -11.194487571716309

Token 760: ' to' (ID: 316)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06501639634370804
    2. 'if' → logprob: -3.065016508102417
    3. '           ' → logprob: -4.190016269683838
    4. '       ' → logprob: -6.940016269683838
    5. '
' → logprob: -9.565016746520996
    6. '	if' → logprob: -10.315016746520996
    7. '   ' → logprob: -11.190016746520996
    8. '```' → logprob: -11.315016746520996
    9. 's' → logprob: -11.565016746520996
    10. '            
' → logprob: -12.065016746520996

Token 761: ' access' (ID: 3158)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.6647636890411377
    2. 'if' → logprob: -2.1647636890411377
    3. 'continue' → logprob: -2.2897636890411377
    4. 's' → logprob: -2.2897636890411377
    5. 'move' → logprob: -2.9147636890411377
    6. 'store' → logprob: -3.0397636890411377
    7. '           ' → logprob: -4.789763450622559
    8. '```' → logprob: -4.914763450622559
    9. 'get' → logprob: -5.039763450622559
    10. '       ' → logprob: -5.039763450622559

Token 762: ' shelf' (ID: 40978)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009158092550933361
    2. ' if' → logprob: -4.759158134460449
    3. 'if' → logprob: -7.759158134460449
    4. '       ' → logprob: -10.25915813446045
    5. '```' → logprob: -10.25915813446045
    6. '<|end|>' → logprob: -10.75915813446045
    7. '               ' → logprob: -12.13415813446045
    8. '
' → logprob: -12.63415813446045
    9. '                   ' → logprob: -12.88415813446045
    10. ',' → logprob: -13.25915813446045

Token 763: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7426270246505737
    2. ' if' → logprob: -0.7426270246505737
    3. 'if' → logprob: -3.2426271438598633
    4. '       ' → logprob: -4.742627143859863
    5. 's' → logprob: -8.242627143859863
    6. '```' → logprob: -8.992627143859863
    7. '<|end|>' → logprob: -10.742627143859863
    8. '               ' → logprob: -11.242627143859863
    9. '   ' → logprob: -11.242627143859863
    10. ',' → logprob: -11.742627143859863

Token 764: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1269282102584839
    2. ' min' → logprob: -2.1269283294677734
    3. '(min' → logprob: -15.751928329467773
    4. 'dist' → logprob: -17.626928329467773
    5. '[min' → logprob: -18.626928329467773
    6. '           ' → logprob: -18.876928329467773
    7. '```' → logprob: -18.876928329467773
    8. ',min' → logprob: -19.001928329467773
    9. '=min' → logprob: -19.126928329467773
    10. '	min' → logprob: -19.251928329467773

Token 765: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -14.250001907348633
    3. 'd' → logprob: -14.375001907348633
    4. 'min' → logprob: -15.375001907348633
    5. '_distance' → logprob: -15.625001907348633
    6. '_dist' → logprob: -15.750001907348633
    7. 'dist' → logprob: -16.625001907348633
    8. '```' → logprob: -16.750001907348633
    9. '=min' → logprob: -17.125001907348633
    10. 'distance' → logprob: -17.375001907348633

Token 766: ' remains' (ID: 14777)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.010752202942967415
    2. ' ==' → logprob: -4.885752201080322
    3. '==-' → logprob: -6.385752201080322
    4. '>' → logprob: -7.010752201080322
    5. '>=' → logprob: -7.635752201080322
    6. '=' → logprob: -10.88575267791748
    7. '<' → logprob: -11.13575267791748
    8. '```' → logprob: -11.26075267791748
    9. 'is' → logprob: -11.38575267791748
    10. '==
' → logprob: -12.76075267791748

Token 767: ' large' (ID: 4410)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00017076305812224746
    2. ' ' → logprob: -9.875170707702637
    3. '=' → logprob: -10.500170707702637
    4. '   ' → logprob: -10.625170707702637
    5. '```' → logprob: -10.750170707702637
    6. '100' → logprob: -11.250170707702637
    7. '           ' → logprob: -11.750170707702637
    8. '>' → logprob: -12.125170707702637
    9. '==' → logprob: -12.750170707702637
    10. 'float' → logprob: -12.750170707702637

Token 768: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007091972976922989
    2. ' if' → logprob: -5.132091999053955
    3. '       ' → logprob: -7.882091999053955
    4. ',' → logprob: -8.257091522216797
    5. '
' → logprob: -9.132091522216797
    6. '<|end|>' → logprob: -9.757091522216797
    7. '               ' → logprob: -9.882091522216797
    8. '   ' → logprob: -10.132091522216797
    9. 'if' → logprob: -10.507091522216797
    10. ' and' → logprob: -10.632091522216797

Token 769: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.035567399114370346
    2. ' if' → logprob: -3.660567283630371
    3. '
' → logprob: -5.410567283630371
    4. '   ' → logprob: -6.535567283630371
    5. '       ' → logprob: -6.785567283630371
    6. '```' → logprob: -6.910567283630371
    7. 's' → logprob: -7.785567283630371
    8. 'if' → logprob: -7.785567283630371
    9. '               ' → logprob: -9.285567283630371
    10. '`s' → logprob: -9.410567283630371

Token 770: ' shelf' (ID: 40978)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23018327355384827
    2. ' if' → logprob: -2.4801833629608154
    3. '       ' → logprob: -2.6051833629608154
    4. 'if' → logprob: -3.2301833629608154
    5. 's' → logprob: -5.105183124542236
    6. '```' → logprob: -7.105183124542236
    7. '   ' → logprob: -7.230183124542236
    8. '               ' → logprob: -8.355183601379395
    9. '
' → logprob: -8.730183601379395
    10. 'map' → logprob: -9.230183601379395

Token 771: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.1398757123970427e-05
    2. 'min' → logprob: -12.000011444091797
    3. '_' → logprob: -13.500011444091797
    4. '_positions' → logprob: -13.875011444091797
    5. '_max' → logprob: -14.375011444091797
    6. '_dist' → logprob: -14.625011444091797
    7. 's' → logprob: -14.875011444091797
    8. '[min' → logprob: -15.000011444091797
    9. '```' → logprob: -15.875011444091797
    10. '_code' → logprob: -16.125011444091797

Token 772: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00019507692195475101
    2. 'dist' → logprob: -8.625195503234863
    3. 'Dist' → logprob: -11.875195503234863
    4. '_distance' → logprob: -12.625195503234863
    5. '_d' → logprob: -12.875195503234863
    6. '	dist' → logprob: -14.375195503234863
    7. '```' → logprob: -14.500195503234863
    8. ' Dist' → logprob: -15.500195503234863
    9. 'd' → logprob: -15.625195503234863
    10. '_DIST' → logprob: -15.625195503234863

Token 773: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.2948405128554441e-05
    2. '=' → logprob: -12.50001335144043
    3. '[s' → logprob: -13.00001335144043
    4. '[' → logprob: -13.12501335144043
    5. '=(' → logprob: -13.12501335144043
    6. '[x' → logprob: -13.50001335144043
    7. '```' → logprob: -15.25001335144043
    8. '[((' → logprob: -15.62501335144043
    9. '[
' → logprob: -15.87501335144043
    10. '   ' → logprob: -16.00001335144043

Token 774: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. ' x' → logprob: -15.5
    3. ')x' → logprob: -16.625
    4. '(x' → logprob: -17.0
    5. '{x' → logprob: -19.875
    6. '"x' → logprob: -20.125
    7. '   ' → logprob: -20.25
    8. '```' → logprob: -20.25
    9. '0' → logprob: -20.625
    10. '	x' → logprob: -21.125

Token 775: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0014410654548555613
    2. ',' → logprob: -6.62644100189209
    3. 'y' → logprob: -9.25144100189209
    4. ' ,' → logprob: -12.25144100189209
    5. ',user' → logprob: -12.25144100189209
    6. '],[' → logprob: -13.37644100189209
    7. '<|end|>' → logprob: -13.37644100189209
    8. '][' → logprob: -13.50144100189209
    9. '[' → logprob: -14.12644100189209
    10. '0' → logprob: -14.25144100189209

Token 776: ')' (ID: 8)
  Prédit: ']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.8546248078346252
    2. ')]' → logprob: -1.1046247482299805
    3. ')' → logprob: -1.9796247482299805
    4. ']==' → logprob: -2.9796247482299805
    5. ']' → logprob: -3.6046247482299805
    6. ')=' → logprob: -4.1046247482299805
    7. ')==' → logprob: -4.8546247482299805
    8. ']=-' → logprob: -7.4796247482299805
    9. ']>=' → logprob: -7.7296247482299805
    10. ']={' → logprob: -7.8546247482299805

Token 777: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.011499169282615185
    2. ')=' → logprob: -5.011499404907227
    3. ']' → logprob: -6.011499404907227
    4. '=' → logprob: -6.261499404907227
    5. ')' → logprob: -9.011499404907227
    6. ']=(' → logprob: -9.261499404907227
    7. ']=-' → logprob: -9.761499404907227
    8. ']==' → logprob: -9.886499404907227
    9. ']+=' → logprob: -10.761499404907227
    10. ']={' → logprob: -11.011499404907227

Token 778: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -4.320199877838604e-07
    2. ' min' → logprob: -14.75
    3. '10' → logprob: -17.625
    4. '	min' → logprob: -21.375
    5. '(min' → logprob: -21.75
    6. '_min' → logprob: -22.875
    7. '   ' → logprob: -23.125
    8. '-' → logprob: -23.125
    9. 'inf' → logprob: -23.625
    10. 'max' → logprob: -24.0

Token 779: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -4.127333340875339e-06
    2. '_dist' → logprob: -12.750003814697266
    3. 'd' → logprob: -14.625003814697266
    4. '\' → logprob: -16.375003814697266
    5. 'Dist' → logprob: -16.625003814697266
    6. 'dist' → logprob: -16.625003814697266
    7. '_' → logprob: -16.750003814697266
    8. '10' → logprob: -16.875003814697266
    9. 'ist' → logprob: -16.875003814697266
    10. 'inf' → logprob: -17.250003814697266

Token 780: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 781: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 782: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07652493566274643
    2. 'def' → logprob: -2.9515249729156494
    3. '```' → logprob: -4.45152473449707
    4. 'for' → logprob: -5.82652473449707
    5. '   ' → logprob: -5.95152473449707
    6. ' for' → logprob: -6.20152473449707
    7. '<|end|>' → logprob: -7.45152473449707
    8. '        
' → logprob: -7.57652473449707
    9. '
' → logprob: -8.07652473449707
    10. '#' (adapté à ' #') → logprob: -8.32652473449707

Token 783: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7646669149398804
    2. 'for' → logprob: -1.2646669149398804
    3. 'total' → logprob: -2.63966703414917
    4. 'discount' → logprob: -3.01466703414917
    5. '       ' → logprob: -3.38966703414917
    6. 'dist' → logprob: -4.01466703414917
    7. 'result' → logprob: -4.13966703414917
    8. 'def' → logprob: -4.38966703414917
    9. 'res' → logprob: -4.88966703414917
    10. 'answer' → logprob: -5.38966703414917

Token 784: ' each' (ID: 2454)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9677423238754272
    2. '_' → logprob: -1.0927423238754272
    3. ' g' → logprob: -2.092742443084717
    4. ' _' → logprob: -3.217742443084717
    5. 'x' → logprob: -3.592742443084717
    6. 'i' → logprob: -4.217742443084717
    7. '_g' → logprob: -4.717742443084717
    8. ' i' → logprob: -4.842742443084717
    9. 'product' → logprob: -4.842742443084717
    10. ' (' → logprob: -4.967742443084717

Token 785: ' product' (ID: 1888)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6224245429039001
    2. ' product' → logprob: -1.872424602508545
    3. 'product' → logprob: -2.122424602508545
    4. ' g' → logprob: -2.122424602508545
    5. ' (' → logprob: -3.622424602508545
    6. '(g' → logprob: -3.622424602508545
    7. '(product' → logprob: -5.747424602508545
    8. '(x' → logprob: -5.872424602508545
    9. 'p' → logprob: -6.372424602508545
    10. 'x' → logprob: -6.622424602508545

Token 786: ' number' (ID: 2086)
  Prédit: '_info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.9191038012504578
    2. 'for' → logprob: -1.2941038608551025
    3. 'g' → logprob: -2.2941038608551025
    4. 'info' → logprob: -2.9191038608551025
    5. 'pos' → logprob: -3.4191038608551025
    6. '_' → logprob: -3.5441038608551025
    7. '#' → logprob: -3.6691038608551025
    8. ' for' → logprob: -4.419103622436523
    9. ',' → logprob: -4.544103622436523
    10. 'num' → logprob: -5.044103622436523

Token 787: ' g' (ID: 329)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.135393887758255
    2. ' for' → logprob: -2.5103938579559326
    3. 'g' → logprob: -3.8853938579559326
    4. ',' → logprob: -4.885394096374512
    5. '#' → logprob: -5.635394096374512
    6. '       ' → logprob: -6.010394096374512
    7. ' in' → logprob: -6.510394096374512
    8. ':' → logprob: -6.760394096374512
    9. 'range' → logprob: -6.760394096374512
    10. '```' → logprob: -7.135394096374512

Token 788: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9181703329086304
    2. '       ' → logprob: -1.4181703329086304
    3. ' for' → logprob: -1.5431703329086304
    4. ',' → logprob: -2.91817045211792
    5. 'for' → logprob: -3.29317045211792
    6. '<|end|>' → logprob: -4.29317045211792
    7. '#' → logprob: -4.54317045211792
    8. ':
' → logprob: -5.29317045211792
    9. '```' → logprob: -5.29317045211792
    10. '        
' → logprob: -5.66817045211792

Token 789: ' list' (ID: 1562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7778341770172119
    2. ' for' → logprob: -0.9028341770172119
    3. '```' → logprob: -3.152834177017212
    4. '       ' → logprob: -3.527834177017212
    5. 'sale' → logprob: -4.402833938598633
    6. 'g' → logprob: -4.402833938598633
    7. '#' → logprob: -5.027833938598633
    8. 'product' → logprob: -5.402833938598633
    9. ' sale' → logprob: -6.152833938598633
    10. 's' → logprob: -6.152833938598633

Token 790: ' its' (ID: 1617)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.6500991582870483
    2. '[]' → logprob: -1.4000991582870483
    3. '[s' → logprob: -3.025099277496338
    4. 'for' → logprob: -3.275099277496338
    5. 's' → logprob: -3.650099277496338
    6. '=' → logprob: -4.025099277496338
    7. 'positions' → logprob: -4.150099277496338
    8. '[(' → logprob: -4.275099277496338
    9. 'g' → logprob: -4.525099277496338
    10. '[' → logprob: -4.650099277496338

Token 791: ' shelf' (ID: 40978)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.19092775881290436
    2. 's' → logprob: -3.315927743911743
    3. 'best' → logprob: -3.440927743911743
    4. 'available' → logprob: -3.565927743911743
    5. 'locations' → logprob: -3.690927743911743
    6. 'possible' → logprob: -4.190927982330322
    7. 'min' → logprob: -4.315927982330322
    8. 'valid' → logprob: -5.190927982330322
    9. 'discount' → logprob: -5.190927982330322
    10. 'pos' → logprob: -5.815927982330322

Token 792: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6891631484031677
    2. 'cells' → logprob: -1.5641632080078125
    3. '_positions' → logprob: -1.9391632080078125
    4. 's' → logprob: -2.9391632080078125
    5. '_cells' → logprob: -3.1891632080078125
    6. '=[]' → logprob: -3.6891632080078125
    7. 'pos' → logprob: -4.9391632080078125
    8. '=' → logprob: -5.3141632080078125
    9. '_pos' → logprob: -5.9391632080078125
    10. 'locations' → logprob: -6.0641632080078125

Token 793: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 794: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4116653203964233
    2. '<|end|>' → logprob: -1.4116653203964233
    3. '[s' → logprob: -2.786665439605713
    4. '[' → logprob: -2.786665439605713
    5. ' for' → logprob: -2.911665439605713
    6. 'g' → logprob: -2.911665439605713
    7. 's' → logprob: -3.036665439605713
    8. '{' → logprob: -3.286665439605713
    9. '=[]' → logprob: -3.411665439605713
    10. '[]' → logprob: -3.786665439605713

Token 795: ' prod' (ID: 10207)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.19873100519180298
    2. 'g' → logprob: -2.823730945587158
    3. 'products' → logprob: -2.948730945587158
    4. 'for' → logprob: -3.323730945587158
    5. '{' → logprob: -4.948730945587158
    6. '       ' → logprob: -4.948730945587158
    7. ' product' → logprob: -5.448730945587158
    8. '```' → logprob: -5.698730945587158
    9. ' for' → logprob: -5.823730945587158
    10. 'from' → logprob: -6.073730945587158

Token 796: '_s' (ID: 1278)
  Prédit: 'uct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uct' → logprob: -0.3232528567314148
    2. '_positions' → logprob: -1.4482529163360596
    3. '_pos' → logprob: -3.8232529163360596
    4. '_s' → logprob: -4.6982526779174805
    5. '_' → logprob: -5.3232526779174805
    6. 's' → logprob: -6.0732526779174805
    7. 'positions' → logprob: -6.9482526779174805
    8. '_to' → logprob: -7.8232526779174805
    9. 'pos' → logprob: -7.9482526779174805
    10. '_cells' → logprob: -8.57325267791748

Token 797: 'helves' (ID: 182327)
  Prédit: 'helves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helves' → logprob: -0.47071388363838196
    2. 'helf' → logprob: -1.2207138538360596
    3. '_positions' → logprob: -3.7207138538360596
    4. '_pos' → logprob: -3.9707138538360596
    5. 'pos' → logprob: -4.720714092254639
    6. '_' → logprob: -4.845714092254639
    7. 'h' → logprob: -5.220714092254639
    8. 'hel' → logprob: -5.470714092254639
    9. '_to' → logprob: -5.970714092254639
    10. 's' → logprob: -6.345714092254639

Token 798: '=[' (ID: 13370)
  Prédit: '={}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={}' → logprob: -0.2793847620487213
    2. '=' → logprob: -1.904384732246399
    3. '={' → logprob: -3.5293848514556885
    4. '.setdefault' → logprob: -3.6543848514556885
    5. '=[]' → logprob: -4.779384613037109
    6. '=[' → logprob: -5.029384613037109
    7. '={}
' → logprob: -5.029384613037109
    8. '_g' → logprob: -5.779384613037109
    9. 's' → logprob: -6.029384613037109
    10. '=g' → logprob: -6.154384613037109

Token 799: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.010887112468481064
    2. '{}' → logprob: -4.635887145996094
    3. '[' → logprob: -7.135887145996094
    4. ' []' → logprob: -8.385887145996094
    5. '[]
' → logprob: -9.510887145996094
    6. '{' → logprob: -11.385887145996094
    7. 'set' → logprob: -12.010887145996094
    8. ' [[]' → logprob: -12.510887145996094
    9. '[]}' → logprob: -12.635887145996094
    10. '[]

' → logprob: -13.135887145996094

Token 800: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4307791292667389
    2. 'for' → logprob: -1.0557790994644165
    3. '()' → logprob: -6.305778980255127
    4. '(' → logprob: -9.055779457092285
    5. ']' → logprob: -10.055779457092285
    6. '	for' → logprob: -11.305779457092285
    7. '   ' → logprob: -11.430779457092285
    8. '(x' → logprob: -11.555779457092285
    9. ' ()' → logprob: -12.055779457092285
    10. ' ' → logprob: -12.055779457092285

Token 801: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16243891417980194
    2. ' range' → logprob: -1.9124388694763184
    3. '_' → logprob: -6.162438869476318
    4. '10' → logprob: -9.537439346313477
    5. '(range' → logprob: -10.787439346313477
    6. 'g' → logprob: -12.037439346313477
    7. 'i' → logprob: -13.412439346313477
    8. '_range' → logprob: -13.662439346313477
    9. ' _' → logprob: -13.787439346313477
    10. '(' → logprob: -13.787439346313477

Token 802: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.24060598015785217
    2. '10' → logprob: -2.7406060695648193
    3. ' range' → logprob: -2.7406060695648193
    4. 'g' → logprob: -3.1156060695648193
    5. '(' → logprob: -3.2406060695648193
    6. ' (' → logprob: -7.99060583114624
    7. '(range' → logprob: -7.99060583114624
    8. '100' → logprob: -8.740606307983398
    9. '0' → logprob: -9.365606307983398
    10. '11' → logprob: -9.490606307983398

Token 803: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006721655838191509
    2. ' range' → logprob: -5.006721496582031
    3. '10' → logprob: -12.506721496582031
    4. '(range' → logprob: -13.006721496582031
    5. '
' → logprob: -15.881721496582031
    6. '(' → logprob: -15.881721496582031
    7. '	range' → logprob: -17.88172149658203
    8. ' ' → logprob: -18.50672149658203
    9. ' (' → logprob: -18.88172149658203
    10. '_' → logprob: -18.88172149658203

Token 804: '(' (ID: 7)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009007388725876808
    2. '11' → logprob: -7.375900745391846
    3. '(' → logprob: -8.375900268554688
    4. '101' → logprob: -11.000900268554688
    5. ' ' → logprob: -11.250900268554688
    6. '100' → logprob: -11.625900268554688
    7. 'len' → logprob: -14.375900268554688
    8. '   ' → logprob: -14.625900268554688
    9. '```' → logprob: -14.625900268554688
    10. '20' → logprob: -14.750900268554688

Token 805: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004497177433222532
    2. '11' → logprob: -5.504497051239014
    3. '101' → logprob: -9.004497528076172
    4. '100' → logprob: -9.129497528076172
    5. '(' → logprob: -9.254497528076172
    6. ' ' → logprob: -9.629497528076172
    7. '110' → logprob: -12.254497528076172
    8. '20' → logprob: -13.004497528076172
    9. '   ' → logprob: -13.004497528076172
    10. 'range' → logprob: -13.004497528076172

Token 806: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012160524725914001
    2. ']
' → logprob: -4.512160301208496
    3. '()]' → logprob: -7.512160301208496
    4. ')]' → logprob: -7.637160301208496
    5. ']
' → logprob: -10.262160301208496
    6. '()]
' → logprob: -11.137160301208496
    7. ']

' → logprob: -11.387160301208496
    8. ']()
' → logprob: -12.137160301208496
    9. ')' → logprob: -12.262160301208496
    10. ']()' → logprob: -12.637160301208496

Token 807: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 808: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.732194185256958
    2. '       ' → logprob: -1.357194185256958
    3. 'for' (adapté à ' for') → logprob: -1.482194185256958
    4. '[' → logprob: -4.732193946838379
    5. '```' → logprob: -4.857193946838379
    6. '           ' → logprob: -4.982193946838379
    7. '        ' → logprob: -5.857193946838379
    8. ' ' → logprob: -6.982193946838379
    9. '        
' → logprob: -7.107193946838379
    10. '               ' → logprob: -7.232193946838379

Token 809: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12177322059869766
    2. ' (' → logprob: -2.8717732429504395
    3. 'pos' → logprob: -3.3717732429504395
    4. 'x' → logprob: -4.6217732429504395
    5. '(s' → logprob: -5.2467732429504395
    6. '(pos' → logprob: -5.7467732429504395
    7. ' pos' → logprob: -6.6217732429504395
    8. '(g' → logprob: -6.8717732429504395
    9. 'g' → logprob: -7.7467732429504395
    10. '(' → logprob: -7.9967732429504395

Token 810: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00014489953173324466
    2. '(x' → logprob: -9.375144958496094
    3. ' x' → logprob: -10.750144958496094
    4. 's' → logprob: -11.250144958496094
    5. '_x' → logprob: -11.750144958496094
    6. 'pos' → logprob: -12.000144958496094
    7. '(' → logprob: -13.125144958496094
    8. 'k' → logprob: -13.375144958496094
    9. 'sx' → logprob: -13.375144958496094
    10. ' (' → logprob: -13.500144958496094

Token 811: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.000597712118178606
    2. ',' → logprob: -7.5005974769592285
    3. ' ,' → logprob: -10.250597953796387
    4. ',(' → logprob: -13.000597953796387
    5. 'y' → logprob: -13.625597953796387
    6. '(y' → logprob: -14.000597953796387
    7. '_,' → logprob: -14.375597953796387
    8. '(' → logprob: -14.625597953796387
    9. ',x' → logprob: -14.625597953796387
    10. '```' → logprob: -14.625597953796387

Token 812: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.12444377690553665
    2. '),(' → logprob: -2.249443769454956
    3. ')' → logprob: -4.749444007873535
    4. ',' → logprob: -6.124444007873535
    5. 'in' → logprob: -8.749444007873535
    6. ',s' → logprob: -9.249444007873535
    7. ',g' → logprob: -9.249444007873535
    8. ' ),' → logprob: -9.374444007873535
    9. '   ' → logprob: -10.624444007873535
    10. ' in' → logprob: -10.749444007873535

Token 813: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00041053479071706533
    2. 'pos' → logprob: -8.500410079956055
    3. ' g' → logprob: -8.750410079956055
    4. 'num' → logprob: -11.500410079956055
    5. 'c' → logprob: -11.750410079956055
    6. 'p' → logprob: -11.875410079956055
    7. 'v' → logprob: -12.500410079956055
    8. 'val' → logprob: -12.625410079956055
    9. 'prod' → logprob: -13.000410079956055
    10. 's' → logprob: -13.125410079956055

Token 814: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6362384557723999
    2. 'in' → logprob: -0.7612384557723999
    3. '.' → logprob: -6.2612385749816895
    4. '.append' → logprob: -7.8862385749816895
    5. 's' → logprob: -8.011238098144531
    6. '```' → logprob: -8.386238098144531
    7. ',' → logprob: -9.011238098144531
    8. 'prod' → logprob: -9.261238098144531
    9. ')' → logprob: -9.636238098144531
    10. '_in' → logprob: -9.761238098144531

Token 815: ' shelves' (ID: 52049)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.806287407875061
    2. 'prod' → logprob: -0.806287407875061
    3. ' shelves' → logprob: -2.8062872886657715
    4. ' prod' → logprob: -3.5562872886657715
    5. 'range' → logprob: -5.8062872886657715
    6. ' range' → logprob: -6.0562872886657715
    7. ' shelf' → logprob: -6.5562872886657715
    8. 'pro' → logprob: -6.6812872886657715
    9. 'product' → logprob: -6.9312872886657715
    10. '[s' → logprob: -7.1187872886657715

Token 816: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.003124002367258072
    2. 'pos' → logprob: -6.003124237060547
    3. '_positions' → logprob: -8.503124237060547
    4. '.items' → logprob: -9.128124237060547
    5. 's' → logprob: -9.253124237060547
    6. 'Pos' → logprob: -9.503124237060547
    7. '[(' → logprob: -10.003124237060547
    8. '```' → logprob: -10.878124237060547
    9. 'positions' → logprob: -11.128124237060547
    10. '.setdefault' → logprob: -11.253124237060547

Token 817: '.items' (ID: 19607)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.09696169197559357
    2. '.' → logprob: -2.471961736679077
    3. ' in' → logprob: -5.221961498260498
    4. 'in' → logprob: -7.471961498260498
    5. '.app' → logprob: -7.471961498260498
    6. ').' → logprob: -8.221961975097656
    7. 'append' → logprob: -8.346961975097656
    8. ' .' → logprob: -8.471961975097656
    9. '].' → logprob: -8.971961975097656
    10. '_append' → logprob: -9.596961975097656

Token 818: '():
' (ID: 8595)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.886492133140564
    2. ':
' → logprob: -1.386492133140564
    3. ':' → logprob: -1.636492133140564
    4. '.' → logprob: -2.3864922523498535
    5. '):
' → logprob: -4.5114922523498535
    6. ' in' → logprob: -5.0114922523498535
    7. '].' → logprob: -5.2614922523498535
    8. ']:
' → logprob: -5.3864922523498535
    9. '):' → logprob: -6.1364922523498535
    10. '           ' → logprob: -6.1364922523498535

Token 819: '           ' (ID: 352)
  Prédit: ' prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prod' → logprob: -0.11533096432685852
    2. 'prod' → logprob: -3.240330934524536
    3. '   ' → logprob: -4.115331172943115
    4. '       ' → logprob: -4.115331172943115
    5. '```' → logprob: -4.115331172943115
    6. '           ' → logprob: -4.615331172943115
    7. '[' → logprob: -5.365331172943115
    8. '<|end|>' → logprob: -6.115331172943115
    9. '	pro' → logprob: -7.240331172943115
    10. '``' → logprob: -7.490331172943115

Token 820: ' prod' (ID: 10207)
  Prédit: ' prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prod' → logprob: -0.22643107175827026
    2. 'prod' (adapté à ' prod') → logprob: -1.601431131362915
    3. '           ' → logprob: -7.226430892944336
    4. '   ' → logprob: -8.726430892944336
    5. '```' → logprob: -10.226430892944336
    6. '	pro' → logprob: -10.851430892944336
    7. ' ' → logprob: -11.101430892944336
    8. '       ' → logprob: -11.226430892944336
    9. '.prod' → logprob: -11.601430892944336
    10. '``' → logprob: -11.726430892944336

Token 821: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0042889961041510105
    2. 's' → logprob: -5.879289150238037
    3. 'g' → logprob: -7.879289150238037
    4. '=' → logprob: -8.254288673400879
    5. 'prod' → logprob: -8.379288673400879
    6. '[' → logprob: -9.379288673400879
    7. '[_' → logprob: -9.504288673400879
    8. ' =' → logprob: -9.879288673400879
    9. '_g' → logprob: -9.879288673400879
    10. '[g' → logprob: -10.004288673400879

Token 822: 'helves' (ID: 182327)
  Prédit: 'helves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helves' → logprob: -0.001924706157296896
    2. 'prod' → logprob: -6.751924514770508
    3. 's' → logprob: -8.376924514770508
    4. '_s' → logprob: -8.501924514770508
    5. '[' → logprob: -9.001924514770508
    6. 'hel' → logprob: -9.501924514770508
    7. 'h' → logprob: -9.876924514770508
    8. 'he' → logprob: -11.751924514770508
    9. 'p' → logprob: -12.001924514770508
    10. ' shelves' → logprob: -12.126924514770508

Token 823: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -2.999452772201039e-05
    2. 'g' → logprob: -10.500029563903809
    3. '[' → logprob: -14.125029563903809
    4. '[int' → logprob: -14.375029563903809
    5. '
' → logprob: -15.125029563903809
    6. ' [' → logprob: -15.125029563903809
    7. '[
' → logprob: -15.500029563903809
    8. '=g' → logprob: -15.500029563903809
    9. '```' → logprob: -16.500030517578125
    10. '[[' → logprob: -17.125030517578125

Token 824: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.015172344632446766
    2. ').' → logprob: -4.640172481536865
    3. '.append' → logprob: -5.265172481536865
    4. '.' → logprob: -8.515172004699707
    5. '.app' → logprob: -11.265172004699707
    6. ']' → logprob: -11.765172004699707
    7. 'append' → logprob: -12.765172004699707
    8. ' ].' → logprob: -12.890172004699707
    9. '}.' → logprob: -13.640172004699707
    10. '.Append' → logprob: -14.265172004699707

Token 825: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.1472419600977446e-06
    2. ' append' → logprob: -14.250000953674316
    3. '.append' → logprob: -15.375000953674316
    4. 'appen' → logprob: -15.625000953674316
    5. '_append' → logprob: -17.000001907348633
    6. '```' → logprob: -18.250001907348633
    7. '	append' → logprob: -18.625001907348633
    8. 'app' → logprob: -20.125001907348633
    9. 'Append' → logprob: -20.375001907348633
    10. 'appe' → logprob: -21.375001907348633

Token 826: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3166729807853699
    2. '(x' → logprob: -1.3166730403900146
    3. '(' → logprob: -5.9416728019714355
    4. '(y' → logprob: -7.6916728019714355
    5. ' (' → logprob: -8.191673278808594
    6. '   ' → logprob: -11.191673278808594
    7. '(nx' → logprob: -11.316673278808594
    8. ' ((' → logprob: -11.816673278808594
    9. '[(' → logprob: -12.566673278808594
    10. '(n' → logprob: -13.566673278808594

Token 827: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.491498531133402e-06
    2. ' x' → logprob: -12.125009536743164
    3. '(x' → logprob: -12.500009536743164
    4. ')x' → logprob: -15.375009536743164
    5. '   ' → logprob: -17.500009536743164
    6. ',x' → logprob: -18.375009536743164
    7. '```' → logprob: -18.375009536743164
    8. '{x' → logprob: -18.500009536743164
    9. '	x' → logprob: -18.625009536743164
    10. '(' → logprob: -18.875009536743164

Token 828: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0011809427523985505
    2. ',' → logprob: -6.751181125640869
    3. ' ,' → logprob: -11.501180648803711
    4. ',
' → logprob: -14.626180648803711
    5. 'y' → logprob: -16.50118064880371
    6. ',user' → logprob: -16.62618064880371
    7. '),' → logprob: -17.75118064880371
    8. ')' → logprob: -17.75118064880371
    9. '),(' → logprob: -18.12618064880371
    10. '```' → logprob: -18.25118064880371

Token 829: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006547740194946527
    2. ')' → logprob: -7.375654697418213
    3. '))
' → logprob: -10.625655174255371
    4. ' ))' → logprob: -13.500655174255371
    5. ')))' → logprob: -14.125655174255371
    6. '       ' → logprob: -14.750655174255371
    7. '));' → logprob: -15.000655174255371
    8. '   ' → logprob: -15.500655174255371
    9. ')
' → logprob: -15.875655174255371
    10. ' ' → logprob: -15.875655174255371

Token 830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12528161704540253
    2. '<|end|>' → logprob: -2.250281572341919
    3. '```' → logprob: -5.000281810760498
    4. 'for' → logprob: -6.750281810760498
    5. ' for' → logprob: -6.750281810760498
    6. '<|end|>' → logprob: -6.875281810760498
    7. 's' → logprob: -7.750281810760498
    8. '
' → logprob: -7.750281810760498
    9. '#' → logprob: -8.50028133392334
    10. '        
' → logprob: -8.50028133392334

Token 831: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054568417370319366
    2. 'for' → logprob: -3.8045685291290283
    3. ' for' → logprob: -3.8045685291290283
    4. '        
' → logprob: -5.679568290710449
    5. '```' → logprob: -6.179568290710449
    6. '<|end|>' → logprob: -7.429568290710449
    7. '
' → logprob: -8.17956829071045
    8. '   ' → logprob: -8.17956829071045
    9. '#' (adapté à ' #') → logprob: -8.30456829071045
    10. ')' → logprob: -8.92956829071045

Token 832: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3724909722805023
    2. '       ' → logprob: -2.247490882873535
    3. 'dp' → logprob: -2.997490882873535
    4. 'dist' → logprob: -3.622490882873535
    5. 'total' → logprob: -3.622490882873535
    6. ' for' → logprob: -3.747490882873535
    7. 'def' → logprob: -3.997490882873535
    8. '#' → logprob: -4.372490882873535
    9. 'discount' → logprob: -4.372490882873535
    10. 'cost' → logprob: -4.997490882873535

Token 833: ' each' (ID: 2454)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1252551078796387
    2. 'g' → logprob: -1.7502551078796387
    3. ' g' → logprob: -1.7502551078796387
    4. ' _' → logprob: -2.0002551078796387
    5. ' i' → logprob: -2.2502551078796387
    6. 'i' → logprob: -2.6252551078796387
    7. ' product' → logprob: -6.000255107879639
    8. 'product' → logprob: -6.375255107879639
    9. ' p' → logprob: -6.500255107879639
    10. '_i' → logprob: -6.500255107879639

Token 834: ' product' (ID: 1888)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.14801490306854248
    2. ' g' → logprob: -2.398015022277832
    3. 'i' → logprob: -4.023015022277832
    4. 'product' → logprob: -5.023015022277832
    5. 'prod' → logprob: -5.148015022277832
    6. ' i' → logprob: -5.398015022277832
    7. '_' → logprob: -6.023015022277832
    8. 'd' → logprob: -6.148015022277832
    9. ' product' → logprob: -6.148015022277832
    10. '_g' → logprob: -6.898015022277832

Token 835: ',' (ID: 11)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.914326012134552
    2. '_' → logprob: -1.1643259525299072
    3. '<|end|>' → logprob: -2.2893259525299072
    4. ' g' → logprob: -3.1643259525299072
    5. '[' → logprob: -3.7893259525299072
    6. '_g' → logprob: -3.9143259525299072
    7. 'for' → logprob: -3.9143259525299072
    8. '```' → logprob: -4.039326190948486
    9. '0' → logprob: -4.039326190948486
    10. '#' → logprob: -4.664326190948486

Token 836: ' need' (ID: 1309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20097875595092773
    2. '#' → logprob: -2.4509787559509277
    3. ' for' → logprob: -2.4509787559509277
    4. '       ' → logprob: -5.200978755950928
    5. 'continue' → logprob: -6.575978755950928
    6. ' #' → logprob: -7.325978755950928
    7. '<|end|>' → logprob: -7.950978755950928
    8. 'dist' → logprob: -8.200979232788086
    9. '...' → logprob: -8.200979232788086
    10. ' continue' → logprob: -8.950979232788086

Token 837: ' minimal' (ID: 19957)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.143567681312561
    2. ' distances' → logprob: -1.643567681312561
    3. 'dist' → logprob: -1.893567681312561
    4. ' for' → logprob: -2.0185675621032715
    5. ' dist' → logprob: -3.6435675621032715
    6. '   ' → logprob: -3.7685675621032715
    7. 'distance' → logprob: -4.1435675621032715
    8. ' calculate' → logprob: -4.5185675621032715
    9. 'to' → logprob: -4.7685675621032715
    10. 'calculate' → logprob: -5.1435675621032715

Token 838: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.29253411293029785
    2. '_dist' → logprob: -2.042534112930298
    3. 'cost' → logprob: -3.042534112930298
    4. 'price' → logprob: -4.167533874511719
    5. 'distance' → logprob: -4.292533874511719
    6. ' dist' → logprob: -4.917533874511719
    7. '_cost' → logprob: -5.167533874511719
    8. '_price' → logprob: -5.167533874511719
    9. '_distance' → logprob: -5.292533874511719
    10. ' cost' → logprob: -5.667533874511719

Token 839: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0226801633834839
    2. '       ' → logprob: -1.2726801633834839
    3. ' for' → logprob: -1.5226801633834839
    4. ' to' → logprob: -2.6476802825927734
    5. 'from' → logprob: -3.5226802825927734
    6. 'to' → logprob: -4.772680282592773
    7. ' from' → logprob: -4.772680282592773
    8. '[' → logprob: -5.272680282592773
    9. ',' → logprob: -5.772680282592773
    10. '_to' → logprob: -6.022680282592773

Token 840: ' reach' (ID: 7627)
  Prédit: 'purchase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'purchase' → logprob: -0.7956989407539368
    2. 'buy' → logprob: -1.545698881149292
    3. 'get' → logprob: -1.920698881149292
    4. ' purchase' → logprob: -2.670698881149292
    5. 'p' → logprob: -3.545698881149292
    6. 'pick' → logprob: -4.170699119567871
    7. 's' → logprob: -4.545699119567871
    8. '買' → logprob: -4.795699119567871
    9. ' purch' → logprob: -4.920699119567871
    10. 'visit' → logprob: -5.545699119567871

Token 841: ' it' (ID: 480)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -1.2146905660629272
    2. 'a' → logprob: -2.214690685272217
    3. 'the' → logprob: -2.214690685272217
    4. 'its' → logprob: -2.714690685272217
    5. 'product' → logprob: -2.964690685272217
    6. 'one' → logprob: -2.964690685272217
    7. 'all' → logprob: -3.089690685272217
    8. 'each' → logprob: -3.214690685272217
    9. 's' → logprob: -3.339690685272217
    10. 'that' → logprob: -3.839690685272217

Token 842: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11589400470256805
    2. '<|end|>' → logprob: -2.990894079208374
    3. ' for' → logprob: -4.115893840789795
    4. 'from' → logprob: -4.365893840789795
    5. 'for' → logprob: -4.490893840789795
    6. ',' → logprob: -5.115893840789795
    7. ' from' → logprob: -5.740893840789795
    8. '
' → logprob: -6.115893840789795
    9. '<|end|>' → logprob: -6.240893840789795
    10. ' and' → logprob: -6.240893840789795

Token 843: ' current' (ID: 2208)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.007115294691175222
    2. '0' → logprob: -5.132115364074707
    3. ' start' → logprob: -7.882115364074707
    4. 'main' → logprob: -8.382115364074707
    5. 'P' → logprob: -8.757115364074707
    6. 's' → logprob: -9.382115364074707
    7. 'prev' → logprob: -9.757115364074707
    8. 'range' → logprob: -9.757115364074707
    9. ' ' → logprob: -10.132115364074707
    10. '1' → logprob: -10.382115364074707

Token 844: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.3637983798980713
    2. 'pos' → logprob: -1.3637983798980713
    3. 'location' → logprob: -3.4887983798980713
    4. '_pos' → logprob: -5.113798141479492
    5. '_position' → logprob: -5.613798141479492
    6. ' position' → logprob: -6.238798141479492
    7. 'start' → logprob: -6.488798141479492
    8. '_' → logprob: -6.988798141479492
    9. 'positions' → logprob: -7.238798141479492
    10. '_location' → logprob: -7.363798141479492

Token 845: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1531391143798828
    2. '<|end|>' → logprob: -3.028139114379883
    3. '#' → logprob: -3.903139114379883
    4. ',' → logprob: -4.153139114379883
    5. 'def' → logprob: -4.653139114379883
    6. ' for' → logprob: -4.653139114379883
    7. 'for' → logprob: -4.903139114379883
    8. '+' → logprob: -5.528139114379883
    9. '<|end|>' → logprob: -5.903139114379883
    10. 'import' → logprob: -5.903139114379883

Token 846: ' other' (ID: 1273)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4475283622741699
    2. 'previous' → logprob: -1.82252836227417
    3. 'prev' → logprob: -2.69752836227417
    4. 'from' → logprob: -4.19752836227417
    5. 'next' → logprob: -4.44752836227417
    6. 'start' → logprob: -4.44752836227417
    7. 'purchase' → logprob: -4.44752836227417
    8. 'to' → logprob: -4.44752836227417
    9. ' previous' → logprob: -4.69752836227417
    10. 'the' → logprob: -5.07252836227417

Token 847: ' products' (ID: 3891)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5516860485076904
    2. 'products' → logprob: -1.6766860485076904
    3. 'product' → logprob: -2.1766860485076904
    4. 'positions' → logprob: -2.3016860485076904
    5. 'for' → logprob: -3.0516860485076904
    6. 's' → logprob: -3.5516860485076904
    7. ')' → logprob: -3.6766860485076904
    8. 'position' → logprob: -3.6766860485076904
    9. 'pos' → logprob: -3.8016860485076904
    10. 'cells' → logprob: -4.0516862869262695

Token 848: ' picked' (ID: 19148)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23753149807453156
    2. '<|end|>' → logprob: -2.1125314235687256
    3. '   ' → logprob: -3.9875314235687256
    4. ',' → logprob: -4.487531661987305
    5. ')' → logprob: -4.612531661987305
    6. '<|end|>' → logprob: -4.737531661987305
    7. '
' → logprob: -4.987531661987305
    8. '[' → logprob: -5.112531661987305
    9. '#' → logprob: -5.237531661987305
    10. ' for' → logprob: -5.737531661987305

Token 849: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4631577730178833
    2. '<|end|>' → logprob: -1.2131577730178833
    3. ',' → logprob: -4.588157653808594
    4. '   ' → logprob: -4.713157653808594
    5. '<|end|>' → logprob: -4.963157653808594
    6. '#' → logprob: -4.963157653808594
    7. ')' → logprob: -5.088157653808594
    8. '...' → logprob: -5.338157653808594
    9. '        
' → logprob: -5.463157653808594
    10. '\' → logprob: -5.713157653808594

Token 850: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28260695934295654
    2. '<|end|>' → logprob: -1.5326069593429565
    3. '#' → logprob: -4.782607078552246
    4. '<|end|>' → logprob: -5.407607078552246
    5. '
' → logprob: -5.657607078552246
    6. '        
' → logprob: -6.157607078552246
    7. '   ' → logprob: -6.407607078552246
    8. ' for' → logprob: -6.657607078552246
    9. ',' → logprob: -6.657607078552246
    10. '[' → logprob: -6.657607078552246

Token 851: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14525538682937622
    2. '<|end|>' → logprob: -2.7702553272247314
    3. '        
' → logprob: -4.2702555656433105
    4. '\' → logprob: -4.5202555656433105
    5. ',' → logprob: -5.1452555656433105
    6. '[' → logprob: -5.2702555656433105
    7. '\n' → logprob: -5.2702555656433105
    8. '        ' → logprob: -5.7702555656433105
    9. '   ' → logprob: -5.8952555656433105
    10. ' \' → logprob: -6.0202555656433105

Token 852: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22273863852024078
    2. '#' → logprob: -2.722738742828369
    3. '<|end|>' → logprob: -2.722738742828369
    4. 'for' → logprob: -4.472738742828369
    5. 'dist' → logprob: -4.847738742828369
    6. ' for' → logprob: -4.972738742828369
    7. 'distance' → logprob: -4.972738742828369
    8. '...' → logprob: -5.097738742828369
    9. 'def' → logprob: -5.347738742828369
    10. 'prev' → logprob: -5.597738742828369

Token 853: ' cannot' (ID: 6284)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.8843790292739868
    2. 'False' → logprob: -2.2593789100646973
    3. 'len' → logprob: -2.3843789100646973
    4. ' len' → logprob: -2.3843789100646973
    5. ' False' → logprob: -2.7593789100646973
    6. ' True' → logprob: -2.7593789100646973
    7. ' n' → logprob: -3.0093789100646973
    8. 'product' → logprob: -3.2593789100646973
    9. 'True' → logprob: -3.6343789100646973
    10. 'def' → logprob: -3.6343789100646973

Token 854: ' step' (ID: 5983)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' move' → logprob: -1.2732473611831665
    2. ' continue' → logprob: -2.023247241973877
    3. ' #' → logprob: -2.898247241973877
    4. '       ' → logprob: -3.023247241973877
    5. ' visit' → logprob: -3.148247241973877
    6. ' )' → logprob: -3.273247241973877
    7. '
' → logprob: -3.398247241973877
    8. ')' → logprob: -3.523247241973877
    9. ' []' → logprob: -3.523247241973877
    10. ' can' → logprob: -3.898247241973877

Token 855: ' into' (ID: 1511)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0208250284194946
    2. ' into' → logprob: -1.1458250284194946
    3. ' on' → logprob: -2.395824909210205
    4. 'on' → logprob: -2.645824909210205
    5. 'into' → logprob: -3.395824909210205
    6. ' _' → logprob: -3.770824909210205
    7. ' out' → logprob: -4.270824909210205
    8. ' (' → logprob: -4.395824909210205
    9. '```' → logprob: -4.645824909210205
    10. ' onto' → logprob: -5.145824909210205

Token 856: ' shelf' (ID: 40978)
  Prédit: ' ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ais' → logprob: -0.7094519734382629
    2. 's' → logprob: -1.5844519138336182
    3. 'ais' → logprob: -2.084451913833618
    4. ''' → logprob: -2.709451913833618
    5. '.' → logprob: -3.834451913833618
    6. ' shelves' → logprob: -4.084452152252197
    7. '#' → logprob: -4.459452152252197
    8. ''#' → logprob: -4.584452152252197
    9. ''s' → logprob: -4.709452152252197
    10. ' aisle' → logprob: -5.084452152252197

Token 857: ' cells' (ID: 11242)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.036676499992609024
    2. '_' → logprob: -5.036676406860352
    3. '.' → logprob: -5.786676406860352
    4. ' cells' → logprob: -5.786676406860352
    5. 'cells' → logprob: -6.036676406860352
    6. '#' → logprob: -6.161676406860352
    7. '<|end|>' → logprob: -6.161676406860352
    8. ')' → logprob: -6.286676406860352
    9. '_,' → logprob: -6.286676406860352
    10. '_cells' → logprob: -6.286676406860352

Token 858: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10826396197080612
    2. '<|end|>' → logprob: -2.6082639694213867
    3. '   ' → logprob: -5.108263969421387
    4. ',' → logprob: -5.108263969421387
    5. '#' → logprob: -5.608263969421387
    6. '<|end|>' → logprob: -5.858263969421387
    7. '...' → logprob: -6.108263969421387
    8. ')' → logprob: -6.733263969421387
    9. '           ' → logprob: -6.858263969421387
    10. ' ' → logprob: -7.233263969421387

Token 859: ' movement' (ID: 12772)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32045426964759827
    2. ' continue' → logprob: -2.0704543590545654
    3. '<|end|>' → logprob: -2.8204543590545654
    4. '#' → logprob: -3.9454543590545654
    5. 'continue' → logprob: -3.9454543590545654
    6. '           ' → logprob: -5.070454120635986
    7. ' #' → logprob: -5.195454120635986
    8. ' for' → logprob: -5.195454120635986
    9. ' ' → logprob: -5.195454120635986
    10. '<|end|>' → logprob: -5.445454120635986

Token 860: ' cost' (ID: 3097)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4912584125995636
    2. ' on' → logprob: -2.616258382797241
    3. 'allowed' → logprob: -2.616258382797241
    4. ' =' → logprob: -3.241258382797241
    5. ' allowed' → logprob: -3.366258382797241
    6. ' can' → logprob: -3.366258382797241
    7. '=' → logprob: -3.491258382797241
    8. '_allowed' → logprob: -3.616258382797241
    9. ' only' → logprob: -3.991258382797241
    10. 'is' → logprob: -4.36625862121582

Token 861: ' calculation' (ID: 40722)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7465453147888184
    2. '=' → logprob: -1.4965453147888184
    3. ' +=' → logprob: -2.1215453147888184
    4. ' is' → logprob: -3.2465453147888184
    5. ')' → logprob: -3.7465453147888184
    6. '<|end|>' → logprob: -3.7465453147888184
    7. '+' → logprob: -4.371545314788818
    8. 's' → logprob: -4.371545314788818
    9. '+=' → logprob: -4.496545314788818
    10. ' +' → logprob: -4.496545314788818

Token 862: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3748898506164551
    2. '<|end|>' → logprob: -1.874889850616455
    3. ' continues' → logprob: -4.124889850616455
    4. ' for' → logprob: -4.124889850616455
    5. '<|end|>' → logprob: -4.124889850616455
    6. ' continue' → logprob: -4.374889850616455
    7. '
' → logprob: -4.374889850616455
    8. '        
' → logprob: -4.499889850616455
    9. ' =' → logprob: -4.499889850616455
    10. '   ' → logprob: -4.624889850616455

Token 863: ' products' (ID: 3891)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.3954661786556244
    2. 'ais' → logprob: -2.2704660892486572
    3. 'product' → logprob: -2.5204660892486572
    4. 's' → logprob: -2.7704660892486572
    5. 'positions' → logprob: -4.270466327667236
    6. 'items' → logprob: -4.520466327667236
    7. 'cells' → logprob: -4.645466327667236
    8. 'prod' → logprob: -4.770466327667236
    9. 'p' → logprob: -4.895466327667236
    10. 'points' → logprob: -5.270466327667236

Token 864: ' done' (ID: 4167)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 865: ' between' (ID: 2870)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 866: ' their' (ID: 1043)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.39261189103126526
    2. 's' → logprob: -1.8926118612289429
    3. ' ais' → logprob: -3.5176119804382324
    4. 'product' → logprob: -3.5176119804382324
    5. 'products' → logprob: -3.6426119804382324
    6. ' aisle' → logprob: -3.8926119804382324
    7. 'positions' → logprob: -4.517611980438232
    8. 'prod' → logprob: -4.892611980438232
    9. ' shelf' → logprob: -5.517611980438232
    10. ')' → logprob: -5.767611980438232

Token 867: ' aisle' (ID: 99887)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.28732746839523315
    2. 'ais' → logprob: -2.162327527999878
    3. ' positions' → logprob: -3.412327527999878
    4. 's' → logprob: -3.412327527999878
    5. 'locations' → logprob: -4.287327289581299
    6. 'adj' → logprob: -4.412327289581299
    7. 'cells' → logprob: -5.037327289581299
    8. '_positions' → logprob: -5.412327289581299
    9. ' aisle' → logprob: -5.662327289581299
    10. '[]' → logprob: -5.787327289581299

Token 868: ' adj' (ID: 20251)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.27427515387535095
    2. 's' → logprob: -2.649275064468384
    3. 'adj' → logprob: -3.149275064468384
    4. 'neighbors' → logprob: -3.524275064468384
    5. '<|end|>' → logprob: -3.649275064468384
    6. ')' → logprob: -3.899275064468384
    7. ' cells' → logprob: -4.399275302886963
    8. '_adj' → logprob: -5.024275302886963
    9. '_' → logprob: -5.024275302886963
    10. '_cells' → logprob: -5.149275302886963

Token 869: 'ac' (ID: 359)
  Prédit: 'acent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.14072471857070923
    2. 'acency' → logprob: -2.1407246589660645
    3. ')' → logprob: -5.7657246589660645
    4. '```' → logprob: -6.0157246589660645
    5. '[' → logprob: -6.7657246589660645
    6. 'ac' → logprob: -6.8907246589660645
    7. 'oints' → logprob: -6.8907246589660645
    8. ']' → logprob: -7.0157246589660645
    9. 'cent' → logprob: -7.5157246589660645
    10. '])' → logprob: -7.7657246589660645

Token 870: 'ents' (ID: 1094)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.1665535420179367
    2. 'ents' → logprob: -1.9165534973144531
    3. '```' → logprob: -5.541553497314453
    4. '[(' → logprob: -8.166553497314453
    5. 'ency' → logprob: -8.291553497314453
    6. '[]' → logprob: -8.541553497314453
    7. ']' → logprob: -8.791553497314453
    8. '[
' → logprob: -9.354053497314453
    9. '[' → logprob: -9.416553497314453
    10. 't' → logprob: -9.604053497314453

Token 871: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 872: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2543639540672302
    2. '<|end|>' → logprob: -1.629364013671875
    3. ')' → logprob: -5.129364013671875
    4. ',' → logprob: -5.504364013671875
    5. '<|end|>' → logprob: -5.879364013671875
    6. '\' → logprob: -5.879364013671875
    7. '   ' → logprob: -6.379364013671875
    8. '        ' → logprob: -6.504364013671875
    9. '        
' → logprob: -6.504364013671875
    10. '[' → logprob: -6.629364013671875

Token 873: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017710156738758087
    2. '<|end|>' → logprob: -5.642710208892822
    3. ' for' → logprob: -5.767710208892822
    4. 'def' → logprob: -6.267710208892822
    5. '   ' → logprob: -6.767710208892822
    6. '        
' → logprob: -6.767710208892822
    7. ',' → logprob: -7.142710208892822
    8. '           ' → logprob: -7.267710208892822
    9. 'for' → logprob: -7.517710208892822
    10. '        ' → logprob: -7.642710208892822

Token 874: ' Pre' (ID: 4659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6194021701812744
    2. 'dist' → logprob: -1.7444021701812744
    3. 'def' → logprob: -2.1194021701812744
    4. 'for' → logprob: -2.8694021701812744
    5. 'import' → logprob: -3.8694021701812744
    6. '#' → logprob: -3.9944021701812744
    7. ' for' → logprob: -3.9944021701812744
    8. '   ' → logprob: -4.369401931762695
    9. 'prev' → logprob: -5.369401931762695
    10. ' dist' → logprob: -5.744401931762695

Token 875: 'compute' (ID: 54521)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7875789403915405
    2. 'compute' → logprob: -1.1625789403915405
    3. 'dict' → logprob: -2.28757905960083
    4. 'pare' → logprob: -3.53757905960083
    5. 'v' → logprob: -3.66257905960083
    6. 'computed' → logprob: -4.16257905960083
    7. 'def' → logprob: -4.41257905960083
    8. 'c' → logprob: -4.78757905960083
    9. 'sum' → logprob: -5.03757905960083
    10. 's' → logprob: -5.28757905960083

Token 876: ' shortest' (ID: 70564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.49432042241096497
    2. '#' → logprob: -2.7443203926086426
    3. 'prod' → logprob: -2.7443203926086426
    4. ' dist' → logprob: -3.1193203926086426
    5. 'distance' → logprob: -3.3693203926086426
    6. ' prod' → logprob: -3.4943203926086426
    7. 'dp' → logprob: -3.6193203926086426
    8. 'for' → logprob: -3.6193203926086426
    9. ' for' → logprob: -3.8693203926086426
    10. ' #' → logprob: -3.8693203926086426

Token 877: ' paths' (ID: 23373)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8076589703559875
    2. '_dist' → logprob: -0.8076589703559875
    3. '_' → logprob: -2.4326589107513428
    4. ' distances' → logprob: -4.432659149169922
    5. '_distance' → logprob: -6.432659149169922
    6. 'distance' → logprob: -6.557659149169922
    7. '_paths' → logprob: -6.682659149169922
    8. 'd' → logprob: -6.932659149169922
    9. '_d' → logprob: -7.432659149169922
    10. '```' → logprob: -8.182659149169922

Token 878: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2965608835220337
    2. '<|end|>' → logprob: -2.046560764312744
    3. '   ' → logprob: -2.171560764312744
    4. ' for' → logprob: -2.296560764312744
    5. 'dist' → logprob: -2.671560764312744
    6. 'from' → logprob: -2.671560764312744
    7. ' from' → logprob: -3.296560764312744
    8. 'def' → logprob: -3.421560764312744
    9. '(' → logprob: -3.796560764312744
    10. ',' → logprob: -3.921560764312744

Token 879: ' ais' (ID: 36709)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.4649830758571625
    2. ' ais' → logprob: -1.0899831056594849
    3. '.' → logprob: -4.714982986450195
    4. '```' → logprob: -4.964982986450195
    5. '#' → logprob: -5.089982986450195
    6. 'map' → logprob: -5.839982986450195
    7. '`' → logprob: -6.089982986450195
    8. 'all' → logprob: -6.589982986450195
    9. ' map' → logprob: -6.714982986450195
    10. 'the' → logprob: -7.339982986450195

Token 880: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.693947970867157
    2. 'les' → logprob: -0.693947970867157
    3. '[]' → logprob: -8.443947792053223
    4. '[' → logprob: -8.943947792053223
    5. 'LES' → logprob: -9.568947792053223
    6. '```' → logprob: -9.568947792053223
    7. '#' → logprob: -10.068947792053223
    8. '_' → logprob: -10.693947792053223
    9. '[[' → logprob: -10.881447792053223
    10. 'LE' → logprob: -10.943947792053223

Token 881: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4763202667236328
    2. '<|end|>' → logprob: -1.8513202667236328
    3. '
' → logprob: -2.601320266723633
    4. '   ' → logprob: -3.726320266723633
    5. 'dist' → logprob: -3.726320266723633
    6. 'def' → logprob: -3.726320266723633
    7. '        
' → logprob: -4.101320266723633
    8. ',' → logprob: -4.601320266723633
    9. '<|end|>' → logprob: -4.601320266723633
    10. ' for' → logprob: -4.726320266723633

Token 882: ' shelves' (ID: 52049)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.9258754849433899
    2. 'positions' → logprob: -2.300875425338745
    3. 'cells' → logprob: -2.300875425338745
    4. 'product' → logprob: -2.550875425338745
    5. 'ais' → logprob: -3.050875425338745
    6. 's' → logprob: -3.175875425338745
    7. 'points' → logprob: -3.425875425338745
    8. 'products' → logprob: -3.675875425338745
    9. 'adj' → logprob: -3.675875425338745
    10. 'nodes' → logprob: -3.800875425338745

Token 883: ' adjacency' (ID: 177015)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 884: ' ais' (ID: 36709)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8532953858375549
    2. '   ' → logprob: -1.7282953262329102
    3. '<|end|>' → logprob: -1.9782953262329102
    4. '#' → logprob: -2.85329532623291
    5. 'def' → logprob: -3.22829532623291
    6. 'dist' → logprob: -3.47829532623291
    7. ')' → logprob: -3.72829532623291
    8. ',' → logprob: -3.85329532623291
    9. 's' → logprob: -4.22829532623291
    10. ' for' → logprob: -4.35329532623291

Token 885: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5918044447898865
    2. 'les' → logprob: -0.9668044447898865
    3. 'positions' → logprob: -4.091804504394531
    4. 'cells' → logprob: -4.216804504394531
    5. 'l' → logprob: -4.841804504394531
    6. 'tle' → logprob: -5.216804504394531
    7. 'cles' → logprob: -5.591804504394531
    8. 'cell' → logprob: -5.966804504394531
    9. 'cel' → logprob: -6.091804504394531
    10. '```' → logprob: -6.591804504394531

Token 886: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09503702819347382
    2. '<|end|>' → logprob: -2.7200369834899902
    3. 'def' → logprob: -4.84503698348999
    4. '   ' → logprob: -4.97003698348999
    5. '#' → logprob: -6.34503698348999
    6. '<|end|>' → logprob: -6.47003698348999
    7. '...' → logprob: -7.09503698348999
    8. '```' → logprob: -7.09503698348999
    9. ',' → logprob: -7.34503698348999
    10. 'import' → logprob: -7.47003698348999

Token 887: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7725281715393066
    2. 'def' → logprob: -1.7725281715393066
    3. '<|end|>' → logprob: -2.0225281715393066
    4. ' ' → logprob: -2.2725281715393066
    5. '[' → logprob: -2.6475281715393066
    6. '       ' → logprob: -2.7725281715393066
    7. ' #' → logprob: -2.8975281715393066
    8. '   ' → logprob: -2.8975281715393066
    9. 'n' → logprob: -3.8975281715393066
    10. '(' → logprob: -4.272528171539307

Token 888: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.4603855609893799
    2. '       ' → logprob: -1.7103855609893799
    3. 'dist' → logprob: -1.7103855609893799
    4. ' #' → logprob: -2.33538556098938
    5. '   ' → logprob: -2.58538556098938
    6. 'd' → logprob: -3.08538556098938
    7. 'for' → logprob: -3.96038556098938
    8. 'def' → logprob: -3.96038556098938
    9. ' for' → logprob: -3.96038556098938
    10. 's' → logprob: -3.96038556098938

Token 889: ' prepare' (ID: 13708)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.43103253841400146
    2. '#' → logprob: -1.5560325384140015
    3. '   ' → logprob: -2.931032657623291
    4. 'from' → logprob: -3.931032657623291
    5. 'distance' → logprob: -4.556032657623291
    6. 'def' → logprob: -4.681032657623291
    7. 'import' → logprob: -4.806032657623291
    8. 'dp' → logprob: -5.181032657623291
    9. 'adj' → logprob: -5.181032657623291
    10. 'graph' → logprob: -5.306032657623291

Token 890: ' list' (ID: 1562)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.3853742182254791
    2. 'adj' → logprob: -2.0103743076324463
    3. 's' → logprob: -3.0103743076324463
    4. 'dist' → logprob: -3.1353743076324463
    5. 'from' → logprob: -3.3853743076324463
    6. 'graph' → logprob: -4.135374069213867
    7. '#' → logprob: -4.135374069213867
    8. 'import' → logprob: -4.760374069213867
    9. 'pos' → logprob: -5.010374069213867
    10. 'for' → logprob: -5.885374069213867

Token 891: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.807148814201355
    2. 'prod' → logprob: -1.807148814201355
    3. '=[]' → logprob: -1.932148814201355
    4. '[]' → logprob: -2.4321489334106445
    5. 'positions' → logprob: -2.8071489334106445
    6. 'ais' → logprob: -2.9321489334106445
    7. 'adj' → logprob: -3.0571489334106445
    8. 'all' → logprob: -3.1821489334106445
    9. 'for' → logprob: -3.3071489334106445
    10. 'pos' → logprob: -3.5571489334106445

Token 892: ' aisle' (ID: 99887)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.4206053018569946
    2. 's' → logprob: -1.6706053018569946
    3. 'all' → logprob: -1.6706053018569946
    4. 'ais' → logprob: -2.045605182647705
    5. 'nodes' → logprob: -2.670605182647705
    6. 'points' → logprob: -3.295605182647705
    7. '(' → logprob: -3.545605182647705
    8. 'prod' → logprob: -3.795605182647705
    9. 'pos' → logprob: -3.920605182647705
    10. '[(' → logprob: -3.920605182647705

Token 893: ' positions' (ID: 15897)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6589580774307251
    2. '_positions' → logprob: -1.533958077430725
    3. 'cells' → logprob: -2.2839579582214355
    4. '_cells' → logprob: -2.5339579582214355
    5. 'positions' → logprob: -3.5339579582214355
    6. 'adj' → logprob: -4.0339579582214355
    7. '_adj' → logprob: -4.1589579582214355
    8. '_pos' → logprob: -5.0339579582214355
    9. '_nodes' → logprob: -5.9089579582214355
    10. '_' → logprob: -5.9089579582214355

Token 894: ' relevant' (ID: 12331)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6635977625846863
    2. '[' → logprob: -2.288597822189331
    3. '=[]' → logprob: -2.913597822189331
    4. '[]
' → logprob: -3.413597822189331
    5. 's' → logprob: -3.413597822189331
    6. '=' → logprob: -3.663597822189331
    7. '[
' → logprob: -3.663597822189331
    8. 'positions' → logprob: -3.788597822189331
    9. '_' → logprob: -4.038597583770752
    10. 'ais' → logprob: -4.163597583770752

Token 895: ':' (ID: 25)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.6896204948425293
    2. '=' → logprob: -2.5646204948425293
    3. ' =' → logprob: -2.8146204948425293
    4. ',' → logprob: -3.0646204948425293
    5. '=[]
' → logprob: -3.1896204948425293
    6. 'for' → logprob: -3.1896204948425293
    7. '_positions' → logprob: -3.8146204948425293
    8. 's' → logprob: -3.9396204948425293
    9. '[' → logprob: -4.189620494842529
    10. '[]' → logprob: -4.314620494842529

Token 896: ' starting' (ID: 8601)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.1121619939804077
    2. 's' → logprob: -1.6121619939804077
    3. 'ais' → logprob: -1.6121619939804077
    4. ' aisle' → logprob: -2.9871621131896973
    5. ' relevant' → logprob: -3.1121621131896973
    6. 'pos' → logprob: -3.1121621131896973
    7. 'positions' → logprob: -3.6121621131896973
    8. 'all' → logprob: -4.237162113189697
    9. ' ais' → logprob: -4.362162113189697
    10. 'points' → logprob: -4.612162113189697

Token 897: ' position' (ID: 4010)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.588064432144165
    2. 'points' → logprob: -1.713064432144165
    3. '_positions' → logprob: -2.088064432144165
    4. 'pos' → logprob: -2.588064432144165
    5. 'point' → logprob: -3.963064432144165
    6. '_points' → logprob: -4.213064193725586
    7. 'cells' → logprob: -4.838064193725586
    8. '_pos' → logprob: -5.088064193725586
    9. '_' → logprob: -6.213064193725586
    10. 'position' → logprob: -6.588064193725586

Token 898: ' +' (ID: 659)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.3293249607086182
    2. '_positions' → logprob: -1.3293249607086182
    3. ',' → logprob: -1.4543249607086182
    4. ' =' → logprob: -3.454324960708618
    5. '_pos' → logprob: -3.579324960708618
    6. '.append' → logprob: -3.704324960708618
    7. 's' → logprob: -3.829324960708618
    8. '=[' → logprob: -3.954324960708618
    9. '=' → logprob: -4.079324722290039
    10. 'pos' → logprob: -4.454324722290039

Token 899: ' all' (ID: 722)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.8683891296386719
    2. '[s' → logprob: -1.3683891296386719
    3. 'prod' → logprob: -1.9933891296386719
    4. '[' → logprob: -2.368389129638672
    5. 's' → logprob: -4.118389129638672
    6. '[]
' → logprob: -4.368389129638672
    7. '[p' → logprob: -4.743389129638672
    8. 'for' → logprob: -4.868389129638672
    9. 'sum' → logprob: -4.868389129638672
    10. 'product' → logprob: -4.993389129638672

Token 900: ' ais' (ID: 36709)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26214340329170227
    2. '[(' → logprob: -2.01214337348938
    3. 'ais' → logprob: -3.01214337348938
    4. 'positions' → logprob: -5.137143611907959
    5. ' shelves' → logprob: -5.137143611907959
    6. 'prod' → logprob: -5.387143611907959
    7. 'for' → logprob: -5.637143611907959
    8. '[' → logprob: -5.887143611907959
    9. '[]' → logprob: -6.012143611907959
    10. 'product' → logprob: -6.012143611907959

Token 901: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.03814442455768585
    2. 'les' → logprob: -3.28814435005188
    3. '[]' → logprob: -9.7881441116333
    4. '```' → logprob: -11.1631441116333
    5. '(' → logprob: -12.4131441116333
    6. 'lle' → logprob: -12.5381441116333
    7. '[' → logprob: -12.9131441116333
    8. '[(' → logprob: -13.2881441116333
    9. 'len' → logprob: -13.2881441116333
    10. '_le' → logprob: -13.4131441116333

Token 902: ' adjacent' (ID: 39069)
  Prédit: '_adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.15289103984832764
    2. '_' → logprob: -2.902891159057617
    3. '_positions' → logprob: -3.527891159057617
    4. '_ad' → logprob: -3.777891159057617
    5. 'adj' → logprob: -4.402891159057617
    6. '_pos' → logprob: -4.652891159057617
    7. ')' → logprob: -6.402891159057617
    8. '[' → logprob: -6.527891159057617
    9. '[(' → logprob: -6.777891159057617
    10. ' adjacent' → logprob: -7.152891159057617

Token 903: ' shelf' (ID: 40978)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3254406154155731
    2. ' to' → logprob: -1.5754406452178955
    3. '_to' → logprob: -3.4504406452178955
    4. 's' → logprob: -4.325440406799316
    5. ')' → logprob: -5.325440406799316
    6. '_s' → logprob: -5.825440406799316
    7. '=[]' → logprob: -5.950440406799316
    8. '[]' → logprob: -6.200440406799316
    9. '_positions' → logprob: -6.200440406799316
    10. '```' → logprob: -6.700440406799316

Token 904: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.6473590135574341
    2. 's' → logprob: -1.022359013557434
    3. '_' → logprob: -2.7723588943481445
    4. 'positions' → logprob: -4.5223588943481445
    5. 'es' → logprob: -4.7723588943481445
    6. '[
' → logprob: -5.1473588943481445
    7. '[' → logprob: -5.3973588943481445
    8. '_pos' → logprob: -5.6473588943481445
    9. '_list' → logprob: -5.7723588943481445
    10. '_cells' → logprob: -5.8973588943481445

Token 905: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46397915482521057
    2. '   ' → logprob: -2.0889792442321777
    3. '```' → logprob: -2.8389792442321777
    4. 'start' → logprob: -4.088979244232178
    5. '[' → logprob: -4.088979244232178
    6. '        
' → logprob: -4.213979244232178
    7. '`' → logprob: -4.463979244232178
    8. ',' → logprob: -4.588979244232178
    9. 'tokens' → logprob: -4.588979244232178
    10. '[start' → logprob: -4.838979244232178

Token 906: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21261721849441528
    2. '[' → logprob: -2.2126171588897705
    3. '```' → logprob: -4.33761739730835
    4. '#' → logprob: -4.71261739730835
    5. '[
' → logprob: -4.96261739730835
    6. '[start' → logprob: -4.96261739730835
    7. '   ' → logprob: -5.71261739730835
    8. ')' → logprob: -5.71261739730835
    9. ',' → logprob: -5.83761739730835
    10. 'start' → logprob: -5.83761739730835

Token 907: ' aisle' (ID: 99887)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2897268533706665
    2. 'positions' → logprob: -1.6647268533706665
    3. 'pos' → logprob: -2.039726734161377
    4. 'start' → logprob: -2.164726734161377
    5. '[
' → logprob: -3.414726734161377
    6. 're' → logprob: -3.539726734161377
    7. 'p' → logprob: -3.539726734161377
    8. ' relevant' → logprob: -3.539726734161377
    9. '(' → logprob: -3.789726734161377
    10. 's' → logprob: -3.914726734161377

Token 908: '_points' (ID: 30070)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.021139424294233322
    2. '_pos' → logprob: -4.896139621734619
    3. '_' → logprob: -5.146139621734619
    4. 's' → logprob: -5.271139621734619
    5. '_list' → logprob: -7.396139621734619
    6. '_adj' → logprob: -7.396139621734619
    7. 'positions' → logprob: -7.521139621734619
    8. '_points' → logprob: -8.396139144897461
    9. '_neighbors' → logprob: -10.271139144897461
    10. 'pos' → logprob: -10.521139144897461

Token 909: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2483281046152115
    2. ' =' → logprob: -1.8733280897140503
    3. '=[' → logprob: -2.99832820892334
    4. '=[]' → logprob: -4.24832820892334
    5. ' =[' → logprob: -7.24832820892334
    6. '=[
' → logprob: -7.87332820892334
    7. '.' → logprob: -7.99832820892334
    8. '.append' → logprob: -8.12332820892334
    9. '[' → logprob: -8.62332820892334
    10. '=[]
' → logprob: -9.62332820892334

Token 910: '       ' (ID: 309)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005356143694370985
    2. '
' → logprob: -5.755356311798096
    3. 'append' → logprob: -8.130355834960938
    4. ')' → logprob: -8.255355834960938
    5. '```' → logprob: -8.255355834960938
    6. '[
' → logprob: -8.755355834960938
    7. '[:]' → logprob: -8.755355834960938
    8. '   ' → logprob: -9.380355834960938
    9. '[' → logprob: -9.380355834960938
    10. ',' → logprob: -9.505355834960938

Token 911: ' aisle' (ID: 99887)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.008412092924118042
    2. 'start' → logprob: -5.133411884307861
    3. 'ase' → logprob: -6.883411884307861
    4. '   ' → logprob: -7.508411884307861
    5. ' aisle' → logprob: -8.38341236114502
    6. 'append' → logprob: -9.00841236114502
    7. '```' → logprob: -9.38341236114502
    8. 'ail' → logprob: -9.38341236114502
    9. '(' → logprob: -10.38341236114502
    10. 'for' → logprob: -10.50841236114502

Token 912: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.001953018014319241
    2. '_positions' → logprob: -6.876953125
    3. 'points' → logprob: -7.751953125
    4. '.append' → logprob: -8.126953125
    5. 'adj' → logprob: -10.126953125
    6. '_adj' → logprob: -10.126953125
    7. '_pts' → logprob: -11.001953125
    8. '```' → logprob: -11.126953125
    9. '_pos' → logprob: -11.251953125
    10. '_point' → logprob: -11.376953125

Token 913: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008278265595436096
    2. '.' → logprob: -4.8832783699035645
    3. 'append' → logprob: -8.383277893066406
    4. '.extend' → logprob: -8.508277893066406
    5. '=' → logprob: -9.008277893066406
    6. '.app' → logprob: -9.883277893066406
    7. '_append' → logprob: -10.008277893066406
    8. ' .' → logprob: -11.633277893066406
    9. '.ap' → logprob: -12.633277893066406
    10. '=[]' → logprob: -13.258277893066406

Token 914: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.00770174153149128
    2. 'start' → logprob: -5.257701873779297
    3. '((' → logprob: -6.007701873779297
    4. '(' → logprob: -12.382701873779297
    5. '((*' → logprob: -14.757701873779297
    6. '((-' → logprob: -15.507701873779297
    7. ' start' → logprob: -16.507701873779297
    8. '(('' → logprob: -17.382701873779297
    9. ',start' → logprob: -17.507701873779297
    10. '(*' → logprob: -17.507701873779297

Token 915: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00193280098028481
    2. ')
' → logprob: -6.251932621002197
    3. ')
' → logprob: -13.501933097839355
    4. ' )' → logprob: -14.001933097839355
    5. '   ' → logprob: -14.501933097839355
    6. ')

' → logprob: -15.126933097839355
    7. '))' → logprob: -15.376933097839355
    8. '),' → logprob: -15.751933097839355
    9. '
' → logprob: -16.25193214416504
    10. ')#' → logprob: -16.37693214416504

Token 916: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15125428140163422
    2. '```' → logprob: -2.526254177093506
    3. 'for' → logprob: -3.526254177093506
    4. ' for' → logprob: -4.776254177093506
    5. '	for' → logprob: -5.526254177093506
    6. '[' → logprob: -5.776254177093506
    7. '``' → logprob: -5.776254177093506
    8. '        
' → logprob: -6.276254177093506
    9. '
' → logprob: -6.276254177093506
    10. '<|end|>' → logprob: -6.901254177093506

Token 917: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005834150360897183
    2. '       ' → logprob: -8.00058364868164
    3. 'idx' → logprob: -9.25058364868164
    4. 'visited' → logprob: -9.75058364868164
    5. 'ais' → logprob: -10.37558364868164
    6. 'point' → logprob: -10.75058364868164
    7. 'points' → logprob: -11.87558364868164
    8. '   ' → logprob: -12.12558364868164
    9. '#' → logprob: -12.37558364868164
    10. ' for' → logprob: -12.50058364868164

Token 918: ' g' (ID: 329)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4431973695755005
    2. 'pos' → logprob: -1.6931973695755005
    3. 'g' → logprob: -2.443197250366211
    4. '(g' → logprob: -3.693197250366211
    5. 's' → logprob: -4.443197250366211
    6. '(' → logprob: -4.443197250366211
    7. 'x' → logprob: -4.568197250366211
    8. '(s' → logprob: -5.193197250366211
    9. 'px' → logprob: -5.443197250366211
    10. 'gx' → logprob: -5.443197250366211

Token 919: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2743215560913086
    2. ' in' → logprob: -1.5243215560913086
    3. ',' → logprob: -4.024321556091309
    4. 's' → logprob: -6.524321556091309
    5. '_in' → logprob: -7.149321556091309
    6. '_s' → logprob: -8.149321556091309
    7. ',s' → logprob: -8.149321556091309
    8. ',_' → logprob: -8.399321556091309
    9. 'prod' → logprob: -8.649321556091309
    10. ',(' → logprob: -9.274321556091309

Token 920: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009147809818387032
    2. ' range' → logprob: -4.884147644042969
    3. 'prod' → logprob: -6.759147644042969
    4. 's' → logprob: -8.009147644042969
    5. '[' → logprob: -10.509147644042969
    6. 'ranges' → logprob: -12.509147644042969
    7. ' shelves' → logprob: -13.134147644042969
    8. 'product' → logprob: -13.259147644042969
    9. '[s' → logprob: -13.384147644042969
    10. ' prod' → logprob: -13.509147644042969

Token 921: '(' (ID: 7)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.011276880279183388
    2. '(' → logprob: -4.511276721954346
    3. '0' → logprob: -8.511277198791504
    4. ' ' → logprob: -10.761277198791504
    5. '(
' → logprob: -12.636277198791504
    6. '1' → logprob: -13.136277198791504
    7. '   ' → logprob: -14.636277198791504
    8. ' (' → logprob: -15.011277198791504
    9. ')' → logprob: -16.011276245117188
    10. '=' → logprob: -16.136276245117188

Token 922: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.6087021473795176e-05
    2. '0' → logprob: -10.125045776367188
    3. '1' → logprob: -12.375045776367188
    4. '
' → logprob: -13.875045776367188
    5. ' ' → logprob: -15.000045776367188
    6. ')' → logprob: -15.875045776367188
    7. '(' → logprob: -16.375045776367188
    8. 'len' → logprob: -16.375045776367188
    9. '2' → logprob: -17.500045776367188
    10. 'g' → logprob: -17.625045776367188

Token 923: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004671018570661545
    2. '):' → logprob: -5.379671096801758
    3. '   ' → logprob: -11.254671096801758
    4. ':' → logprob: -11.379671096801758
    5. ':
' → logprob: -11.629671096801758
    6. '):
' → logprob: -12.379671096801758
    7. '():
' → logprob: -12.629671096801758
    8. ')' → logprob: -12.629671096801758
    9. '+' → logprob: -13.629671096801758
    10. ' ):
' → logprob: -13.629671096801758

Token 924: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11088525503873825
    2. '   ' → logprob: -2.9858851432800293
    3. ':' → logprob: -3.6108851432800293
    4. '           ' → logprob: -4.235885143280029
    5. ' for' → logprob: -5.235885143280029
    6. ':
' → logprob: -5.360885143280029
    7. ',' → logprob: -7.610885143280029
    8. '[' → logprob: -8.110885620117188
    9. '	       ' → logprob: -8.110885620117188
    10. 'for' → logprob: -8.735885620117188

Token 925: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04141971468925476
    2. '   ' → logprob: -3.291419744491577
    3. '       ' → logprob: -6.416419506072998
    4. ' for' → logprob: -6.791419506072998
    5. '           ' → logprob: -7.791419506072998
    6. 'if' → logprob: -8.916419982910156
    7. 'ais' → logprob: -10.916419982910156
    8. '	for' → logprob: -11.041419982910156
    9. ' ' → logprob: -11.541419982910156
    10. '```' → logprob: -12.416419982910156

Token 926: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.44046810269355774
    2. 'pos' → logprob: -1.9404680728912354
    3. '(s' → logprob: -1.9404680728912354
    4. 'x' → logprob: -3.8154680728912354
    5. 'sx' → logprob: -3.8154680728912354
    6. '(pos' → logprob: -4.5654683113098145
    7. 'px' → logprob: -5.0654683113098145
    8. '(px' → logprob: -5.4404683113098145
    9. '(' → logprob: -5.8154683113098145
    10. '(ax' → logprob: -8.065467834472656

Token 927: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0008876374922692776
    2. 'sx' → logprob: -8.125887870788574
    3. 'px' → logprob: -9.000887870788574
    4. 'ax' → logprob: -9.375887870788574
    5. 'xx' → logprob: -10.000887870788574
    6. 'nx' → logprob: -10.125887870788574
    7. ' x' → logprob: -10.250887870788574
    8. 'pos' → logprob: -10.250887870788574
    9. 'xp' → logprob: -10.375887870788574
    10. 's' → logprob: -10.500887870788574

Token 928: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.004686564672738314
    2. ',' → logprob: -5.37968635559082
    3. ' ,' → logprob: -10.00468635559082
    4. 'y' → logprob: -11.62968635559082
    5. '_,' → logprob: -12.87968635559082
    6. 's' → logprob: -13.37968635559082
    7. '[' → logprob: -13.75468635559082
    8. ',x' → logprob: -14.00468635559082
    9. ',s' → logprob: -14.37968635559082
    10. '```' → logprob: -14.37968635559082

Token 929: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049307163804769516
    2. '),' → logprob: -3.049307107925415
    3. ')=' → logprob: -8.049306869506836
    4. ',' → logprob: -9.299306869506836
    5. ',)' → logprob: -9.674306869506836
    6. ')...' → logprob: -10.049306869506836
    7. ')
' → logprob: -10.299306869506836
    8. ')==' → logprob: -10.424306869506836
    9. ')x' → logprob: -10.549306869506836
    10. ' )' → logprob: -10.799306869506836

Token 930: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43469056487083435
    2. 'in' → logprob: -1.4346905946731567
    3. ',' → logprob: -2.559690475463867
    4. '),' → logprob: -3.934690475463867
    5. ' in' → logprob: -4.934690475463867
    6. ',s' → logprob: -5.684690475463867
    7. ',)' → logprob: -6.809690475463867
    8. '
' → logprob: -7.059690475463867
    9. ' ,' → logprob: -7.059690475463867
    10. ')s' → logprob: -7.184690475463867

Token 931: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.0019881133921444416
    2. 's' → logprob: -6.376987934112549
    3. ' prod' → logprob: -8.251988410949707
    4. '   ' → logprob: -11.376988410949707
    5. '
' → logprob: -13.001988410949707
    6. '(prod' → logprob: -13.501988410949707
    7. '    ' → logprob: -14.001988410949707
    8. '  ' → logprob: -14.001988410949707
    9. ' ' → logprob: -14.001988410949707
    10. '.prod' → logprob: -14.376988410949707

Token 932: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0004342453321442008
    2. 's' → logprob: -7.750434398651123
    3. '_' → logprob: -13.750433921813965
    4. '\' → logprob: -14.250433921813965
    5. '   ' → logprob: -14.500433921813965
    6. '```' → logprob: -16.00043487548828
    7. 'e' → logprob: -16.25043487548828
    8. 'd' → logprob: -16.25043487548828
    9. '_u' → logprob: -16.50043487548828
    10. 'g' → logprob: -16.50043487548828

Token 933: 'helves' (ID: 182327)
  Prédit: 'helves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helves' → logprob: -0.0008622690802440047
    2. 'e' → logprob: -8.375862121582031
    3. 's' → logprob: -8.500862121582031
    4. 'h' → logprob: -8.750862121582031
    5. 'elves' → logprob: -9.500862121582031
    6. 'hel' → logprob: -10.000862121582031
    7. 'he' → logprob: -10.750862121582031
    8. ' shelves' → logprob: -11.000862121582031
    9. 'g' → logprob: -11.375862121582031
    10. 'heels' → logprob: -11.500862121582031

Token 934: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.001954563893377781
    2. '[(' → logprob: -6.501954555511475
    3. 'g' → logprob: -7.751954555511475
    4. '(g' → logprob: -11.501955032348633
    5. '[x' → logprob: -11.751955032348633
    6. '
' → logprob: -13.501955032348633
    7. '   ' → logprob: -14.376955032348633
    8. '[
' → logprob: -15.376955032348633
    9. 's' → logprob: -15.376955032348633
    10. '[s' → logprob: -15.501955032348633

Token 935: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5286251306533813
    2. '):
' → logprob: -0.9036251306533813
    3. ')' → logprob: -5.653625011444092
    4. ']:' → logprob: -7.403625011444092
    5. ']:
' → logprob: -7.528625011444092
    6. ']):' → logprob: -8.40362548828125
    7. '):
' → logprob: -8.52862548828125
    8. ']):
' → logprob: -9.40362548828125
    9. ')]' → logprob: -9.77862548828125
    10. ':' → logprob: -9.77862548828125

Token 936: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00107389607001096
    2. ',' → logprob: -8.376073837280273
    3. ':
' → logprob: -8.751073837280273
    4. '                
' → logprob: -9.126073837280273
    5. '   ' → logprob: -9.251073837280273
    6. '                   ' → logprob: -9.376073837280273
    7. ':' → logprob: -9.501073837280273
    8. '           ' → logprob: -9.626073837280273
    9. '       ' → logprob: -10.251073837280273
    10. '):
' → logprob: -10.876073837280273

Token 937: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20884181559085846
    2. '   ' → logprob: -2.0838418006896973
    3. ' for' → logprob: -3.4588418006896973
    4. '                   ' → logprob: -3.8338418006896973
    5. '               ' → logprob: -4.958841800689697
    6. '           ' → logprob: -6.083841800689697
    7. ' ' → logprob: -7.833841800689697
    8. '       ' → logprob: -8.083842277526855
    9. 'ais' → logprob: -8.208842277526855
    10. '	for' → logprob: -8.708842277526855

Token 938: ' multiple' (ID: 7598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006579066161066294
    2. ' for' → logprob: -5.7565789222717285
    3. 'ais' → logprob: -6.7565789222717285
    4. '   ' → logprob: -6.8815789222717285
    5. '               ' → logprob: -7.3815789222717285
    6. '           ' → logprob: -8.006579399108887
    7. '                   ' → logprob: -9.381579399108887
    8. 'ax' → logprob: -10.256579399108887
    9. '       ' → logprob: -10.381579399108887
    10. 's' → logprob: -11.631579399108887

Token 939: ' ais' (ID: 36709)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1515616774559021
    2. ' for' → logprob: -2.651561737060547
    3. 'ax' → logprob: -3.651561737060547
    4. 'ais' → logprob: -4.401561737060547
    5. 'adj' → logprob: -4.651561737060547
    6. '
' → logprob: -5.401561737060547
    7. '(' → logprob: -6.151561737060547
    8. '(ax' → logprob: -6.276561737060547
    9. 'nx' → logprob: -6.401561737060547
    10. '            
' → logprob: -6.901561737060547

Token 940: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.10057121515274048
    2. 'les' → logprob: -2.3505711555480957
    3. 'es' → logprob: -9.975571632385254
    4. 'l' → logprob: -10.350571632385254
    5. 'ile' → logprob: -10.350571632385254
    6. 'e' → logprob: -10.475571632385254
    7. 'iles' → logprob: -10.600571632385254
    8. '(' → logprob: -10.600571632385254
    9. 'de' → logprob: -11.100571632385254
    10. 'tle' → logprob: -11.413071632385254

Token 941: ' adjacent' (ID: 39069)
  Prédit: '_adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.03344869241118431
    2. 'adj' → logprob: -4.533448696136475
    3. ' =' → logprob: -5.283448696136475
    4. '.append' → logprob: -5.283448696136475
    5. '_ad' → logprob: -5.658448696136475
    6. 's' → logprob: -6.283448696136475
    7. '=' → logprob: -6.658448696136475
    8. 'for' → logprob: -6.783448696136475
    9. '_' → logprob: -7.533448696136475
    10. '_pos' → logprob: -7.783448696136475

Token 942: ' to' (ID: 316)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8299327492713928
    2. '.append' → logprob: -1.704932689666748
    3. 'for' → logprob: -2.829932689666748
    4. ' =' → logprob: -2.954932689666748
    5. '=' → logprob: -3.329932689666748
    6. '_positions' → logprob: -3.329932689666748
    7. 'positions' → logprob: -3.329932689666748
    8. '_points' → logprob: -4.204932689666748
    9. '[(' → logprob: -4.329932689666748
    10. 'to' → logprob: -4.579932689666748

Token 943: ' shelf' (ID: 40978)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0004130344314035028
    2. ' (' → logprob: -8.500412940979004
    3. 's' → logprob: -9.375412940979004
    4. '(' → logprob: -9.875412940979004
    5. 'x' → logprob: -10.000412940979004
    6. '(s' → logprob: -10.625412940979004
    7. '   ' → logprob: -14.375412940979004
    8. 'the' → logprob: -14.500412940979004
    9. '[x' → logprob: -14.625412940979004
    10. 'each' → logprob: -14.875412940979004

Token 944: ';' (ID: 26)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.286165714263916
    2. '_positions' → logprob: -1.911165714263916
    3. '_adj' → logprob: -2.036165714263916
    4. '.append' → logprob: -2.411165714263916
    5. 'adj' → logprob: -2.536165714263916
    6. 'positions' → logprob: -3.036165714263916
    7. '_points' → logprob: -3.411165714263916
    8. '_pos' → logprob: -3.536165714263916
    9. ',' → logprob: -3.661165714263916
    10. 's' → logprob: -4.161165714263916

Token 945: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05901807174086571
    2. ' for' → logprob: -3.059018135070801
    3. '               ' → logprob: -5.809018135070801
    4. 'continue' → logprob: -6.059018135070801
    5. '                   ' → logprob: -6.434018135070801
    6. '#' → logprob: -6.684018135070801
    7. 'pass' → logprob: -7.184018135070801
    8. '   ' → logprob: -8.1840181350708
    9. 'ais' → logprob: -8.3090181350708
    10. '           ' → logprob: -8.4340181350708

Token 946: ' store' (ID: 4897)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.9512417316436768
    2. '.append' → logprob: -1.3262417316436768
    3. 'continue' → logprob: -2.0762417316436768
    4. ' continue' → logprob: -3.0762417316436768
    5. ' will' → logprob: -3.9512417316436768
    6. 'need' → logprob: -3.9512417316436768
    7. ' need' → logprob: -4.076241493225098
    8. '.extend' → logprob: -4.201241493225098
    9. 'will' → logprob: -4.326241493225098
    10. ' append' → logprob: -4.326241493225098

Token 947: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13791829347610474
    2. 'all' → logprob: -3.38791823387146
    3. '(x' → logprob: -4.012918472290039
    4. ' for' → logprob: -4.512918472290039
    5. 'len' → logprob: -4.637918472290039
    6. 'each' → logprob: -4.762918472290039
    7. 's' → logprob: -4.887918472290039
    8. '
' → logprob: -5.387918472290039
    9. 'dist' → logprob: -5.637918472290039
    10. '((' → logprob: -5.637918472290039

Token 948: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0723222494125366
    2. 'for' → logprob: -1.3223222494125366
    3. '               ' → logprob: -2.072322368621826
    4. 'adj' → logprob: -2.447322368621826
    5. '(' → logprob: -3.072322368621826
    6. '                   ' → logprob: -3.697322368621826
    7. '           ' → logprob: -4.072322368621826
    8. 'ais' → logprob: -4.197322368621826
    9. '(adj' → logprob: -4.822322368621826
    10. '
' → logprob: -5.072322368621826

Token 949: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48131656646728516
    2. '                   ' → logprob: -1.1063165664672852
    3. ' for' → logprob: -3.481316566467285
    4. 'for' → logprob: -4.731316566467285
    5. '                       ' → logprob: -5.481316566467285
    6. '
' → logprob: -6.856316566467285
    7. '```' → logprob: -6.856316566467285
    8. ',' → logprob: -6.981316566467285
    9. '(' → logprob: -7.606316566467285
    10. '                               ' → logprob: -7.856316566467285

Token 950: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5045377016067505
    2. '               ' → logprob: -1.8795377016067505
    3. 'ais' → logprob: -2.254537582397461
    4. ' for' → logprob: -2.754537582397461
    5. '                   ' → logprob: -2.879537582397461
    6. '   ' → logprob: -4.754537582397461
    7. ' aisle' → logprob: -6.504537582397461
    8. '           ' → logprob: -6.879537582397461
    9. '```' → logprob: -7.067037582397461
    10. '                       ' → logprob: -7.192037582397461

Token 951: ' ax' (ID: 6807)
  Prédit: '(ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ax' → logprob: -0.45876604318618774
    2. 'ax' → logprob: -1.458765983581543
    3. '(nx' → logprob: -3.333765983581543
    4. 'pos' → logprob: -3.458765983581543
    5. '(adj' → logprob: -3.958765983581543
    6. '(pos' → logprob: -4.083765983581543
    7. '(' → logprob: -4.333765983581543
    8. 'adj' → logprob: -4.708765983581543
    9. 'nx' → logprob: -5.333765983581543
    10. '(s' → logprob: -6.583765983581543

Token 952: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.816093228830141e-06
    2. ' ,' → logprob: -12.87500286102295
    3. '_,' → logprob: -16.500001907348633
    4. 'ay' → logprob: -16.625001907348633
    5. ',
' → logprob: -17.250001907348633
    6. ',_' → logprob: -17.875001907348633
    7. '```' → logprob: -18.125001907348633
    8. ',(' → logprob: -18.375001907348633
    9. '           ' → logprob: -18.750001907348633
    10. ',a' → logprob: -19.250001907348633

Token 953: 'ay' (ID: 356)
  Prédit: 'ay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -5.319370302458992e-06
    2. ' ay' → logprob: -12.375005722045898
    3. ',' → logprob: -14.750005722045898
    4. 'aybe' → logprob: -15.500005722045898
    5. 'ayay' → logprob: -16.7500057220459
    6. 'a' → logprob: -17.0000057220459
    7. 'ayes' → logprob: -17.3750057220459
    8. '```' → logprob: -17.3750057220459
    9. 'ayey' → logprob: -17.3750057220459
    10. '
' → logprob: -17.5000057220459

Token 954: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22569088637828827
    2. 'in' → logprob: -1.6006908416748047
    3. ',' → logprob: -8.975690841674805
    4. '                   ' → logprob: -9.600690841674805
    5. ')' → logprob: -10.725690841674805
    6. ',s' → logprob: -11.100690841674805
    7. '               ' → logprob: -11.350690841674805
    8. ',in' → logprob: -12.100690841674805
    9. '                           ' → logprob: -12.225690841674805
    10. ' ,' → logprob: -12.725690841674805

Token 955: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002852305769920349
    2. ' shelf' → logprob: -6.252852439880371
    3. 'ais' → logprob: -7.127852439880371
    4. ' aisle' → logprob: -9.377852439880371
    5. '[s' → logprob: -11.627852439880371
    6. '
' → logprob: -12.502852439880371
    7. '`s' → logprob: -12.502852439880371
    8. '(s' → logprob: -12.627852439880371
    9. ' ais' → logprob: -13.127852439880371
    10. '[' → logprob: -13.252852439880371

Token 956: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.749814019713085e-06
    2. '[(' → logprob: -12.875006675720215
    3. '_adj' → logprob: -13.625006675720215
    4. '[x' → logprob: -14.000006675720215
    5. '[' → logprob: -14.875006675720215
    6. '(x' → logprob: -15.000006675720215
    7. '_pos' → logprob: -15.125006675720215
    8. '[_' → logprob: -15.125006675720215
    9. 's' → logprob: -15.875006675720215
    10. 'ais' → logprob: -16.50000762939453

Token 957: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.00031985383247956634
    2. '_' → logprob: -8.125319480895996
    3. 'ail' → logprob: -11.875319480895996
    4. 'aise' → logprob: -12.750319480895996
    5. 'asile' → logprob: -13.625319480895996
    6. 'ax' → logprob: -13.750319480895996
    7. 'adj' → logprob: -14.000319480895996
    8. 's' → logprob: -14.250319480895996
    9. '```' → logprob: -14.625319480895996
    10. '`' → logprob: -14.750319480895996

Token 958: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7045919299125671
    2. 'ale' → logprob: -1.079591989517212
    3. 'ile' → logprob: -1.954591989517212
    4. 'el' → logprob: -5.079591751098633
    5. '_pos' → logprob: -5.454591751098633
    6. 'ele' → logprob: -5.829591751098633
    7. 'e' → logprob: -5.829591751098633
    8. 'ole' → logprob: -6.454591751098633
    9. 'al' → logprob: -6.829591751098633
    10. 'ule' → logprob: -7.079591751098633

Token 959: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.004229647107422352
    2. 'pos' → logprob: -5.879229545593262
    3. '[(' → logprob: -6.629229545593262
    4. 'adj' → logprob: -10.254229545593262
    5. 's' → logprob: -10.754229545593262
    6. '_positions' → logprob: -11.629229545593262
    7. '[pos' → logprob: -11.754229545593262
    8. '[x' → logprob: -12.254229545593262
    9. '_adj' → logprob: -12.254229545593262
    10. '[' → logprob: -12.504229545593262

Token 960: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -9.088346359931165e-07
    2. '((' → logprob: -15.125000953674316
    3. '[((' → logprob: -15.375000953674316
    4. '[' → logprob: -16.625
    5. '[x' → logprob: -16.625
    6. ' [(' → logprob: -16.75
    7. '(x' → logprob: -17.25
    8. '   ' → logprob: -17.75
    9. '[
' → logprob: -17.75
    10. '#' → logprob: -17.875

Token 961: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00029720881138928235
    2. '(x' → logprob: -8.125297546386719
    3. ' x' → logprob: -15.125297546386719
    4. ')x' → logprob: -15.250297546386719
    5. '(' → logprob: -15.500297546386719
    6. ' (' → logprob: -15.625297546386719
    7. '
' → logprob: -16.00029754638672
    8. ')(' → logprob: -17.37529754638672
    9. '```' → logprob: -17.37529754638672
    10. '   ' → logprob: -17.50029754638672

Token 962: ',y' (ID: 16103)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002593130338937044
    2. '(x' → logprob: -8.375259399414062
    3. 'y' → logprob: -10.750259399414062
    4. ',x' → logprob: -13.375259399414062
    5. '[x' → logprob: -13.750259399414062
    6. '][' → logprob: -14.125259399414062
    7. '
' → logprob: -14.125259399414062
    8. ',' → logprob: -14.375259399414062
    9. 'ax' → logprob: -14.500259399414062
    10. '{x' → logprob: -15.250259399414062

Token 963: ')]' (ID: 15710)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8122022151947021
    2. '):' → logprob: -1.1872022151947021
    3. ')' → logprob: -2.562202215194702
    4. ']:
' → logprob: -3.187202215194702
    5. ')]' → logprob: -3.187202215194702
    6. ']):' → logprob: -3.687202215194702
    7. ']):
' → logprob: -3.812202215194702
    8. ']:' → logprob: -3.812202215194702
    9. ']' → logprob: -4.812202453613281
    10. '):
' → logprob: -5.187202453613281

Token 964: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19626721739768982
    2. ':
' → logprob: -2.1962671279907227
    3. ':' → logprob: -3.9462671279907227
    4. '                       ' → logprob: -4.196267127990723
    5. ',' → logprob: -4.446267127990723
    6. '):
' → logprob: -4.946267127990723
    7. '               ' → logprob: -6.321267127990723
    8. '.append' → logprob: -6.821267127990723
    9. '.' → logprob: -7.071267127990723
    10. '	               ' → logprob: -7.071267127990723

Token 965: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013560713268816471
    2. '                       ' → logprob: -7.12635612487793
    3. '               ' → logprob: -7.87635612487793
    4. '                  ' → logprob: -10.62635612487793
    5. '           ' → logprob: -11.00135612487793
    6. '                           ' → logprob: -11.12635612487793
    7. '       ' → logprob: -11.12635612487793
    8. '   ' → logprob: -11.25135612487793
    9. '#' → logprob: -11.50135612487793
    10. '<|end|>' → logprob: -11.50135612487793

Token 966: ' aisle' (ID: 99887)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.46008098125457764
    2. '                   ' → logprob: -1.0850809812545776
    3. 'if' → logprob: -4.710081100463867
    4. 'ais' → logprob: -4.710081100463867
    5. '   ' → logprob: -5.210081100463867
    6. '                           ' → logprob: -5.960081100463867
    7. ' if' → logprob: -7.210081100463867
    8. '                               ' → logprob: -7.210081100463867
    9. ' aisle' → logprob: -7.460081100463867
    10. '       ' → logprob: -7.585081100463867

Token 967: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -3.3451433409936726e-05
    2. '_positions' → logprob: -10.625033378601074
    3. '_tokens' → logprob: -13.625033378601074
    4. '.append' → logprob: -13.750033378601074
    5. '_pts' → logprob: -14.000033378601074
    6. ' _' → logprob: -14.125033378601074
    7. 'points' → logprob: -14.375033378601074
    8. ',_' → logprob: -14.375033378601074
    9. '_POINTS' → logprob: -14.500033378601074
    10. '_p' → logprob: -14.500033378601074

Token 968: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0036228811368346214
    2. '.' → logprob: -5.628623008728027
    3. ' .' → logprob: -11.628623008728027
    4. 'append' → logprob: -12.503623008728027
    5. '.extend' → logprob: -12.753623008728027
    6. '.app' → logprob: -13.003623008728027
    7. '.add' → logprob: -13.628623008728027
    8. ').' → logprob: -14.128623008728027
    9. '.setdefault' → logprob: -14.378623008728027
    10. '.insert' → logprob: -15.003623008728027

Token 969: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.22062072157859802
    2. '(' → logprob: -2.095620632171631
    3. '(ax' → logprob: -2.595620632171631
    4. ' (' → logprob: -7.970620632171631
    5. ' ((' → logprob: -11.095621109008789
    6. '(nx' → logprob: -11.595621109008789
    7. '(x' → logprob: -12.095621109008789
    8. '(
' → logprob: -12.720621109008789
    9. ' ' → logprob: -13.720621109008789
    10. '   ' → logprob: -13.970621109008789

Token 970: 'ax' (ID: 1362)
  Prédit: 'ax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -7.896309739408025e-07
    2. ' ax' → logprob: -14.500000953674316
    3. '	ax' → logprob: -16.0
    4. '(ax' → logprob: -16.5
    5. 'axx' → logprob: -18.25
    6. 'axo' → logprob: -18.625
    7. '_ax' → logprob: -18.75
    8. '=ax' → logprob: -18.75
    9. '   ' → logprob: -19.25
    10. 'x' → logprob: -20.0

Token 971: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7252845029579476e-05
    2. ' ,' → logprob: -11.125027656555176
    3. ',
' → logprob: -11.750027656555176
    4. '<|end|>' → logprob: -13.750027656555176
    5. ',y' → logprob: -14.000027656555176
    6. ',)' → logprob: -14.750027656555176
    7. '```' → logprob: -15.250027656555176
    8. '‌,' → logprob: -15.625027656555176
    9. ',

' → logprob: -16.00002670288086
    10. '),(' → logprob: -16.00002670288086

Token 972: 'ay' (ID: 356)
  Prédit: 'ay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -1.6240566083070007e-06
    2. ' ay' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.625001907348633
    4. 'ayay' → logprob: -18.625001907348633
    5. 'aya' → logprob: -18.875001907348633
    6. 'aybe' → logprob: -19.000001907348633
    7. 'ayes' → logprob: -19.125001907348633
    8. '(' → logprob: -19.250001907348633
    9. '
' → logprob: -19.250001907348633
    10. 'a' → logprob: -19.375001907348633

Token 973: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048986658453941345
    2. '))' → logprob: -3.0489866733551025
    3. ')
' → logprob: -8.298986434936523
    4. ')))' → logprob: -9.173986434936523
    5. '))
' → logprob: -11.173986434936523
    6. '),' → logprob: -11.423986434936523
    7. '                   ' → logprob: -12.423986434936523
    8. '               ' → logprob: -12.673986434936523
    9. ' )' → logprob: -12.923986434936523
    10. ')#' → logprob: -12.923986434936523

Token 974: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4352920353412628
    2. '<|end|>' → logprob: -1.9352920055389404
    3. 'def' → logprob: -3.0602920055389404
    4. '
' → logprob: -3.1852920055389404
    5. '```' → logprob: -3.3102920055389404
    6. ')' → logprob: -4.0602922439575195
    7. '#' → logprob: -4.1852922439575195
    8. '        
' → logprob: -4.5602922439575195
    9. '<|end|>' → logprob: -4.6852922439575195
    10. '   ' → logprob: -5.0602922439575195

Token 975: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.022943885996937752
    2. 'dp' → logprob: -4.27294397354126
    3. '#' (adapté à ' #') → logprob: -6.02294397354126
    4. 'from' → logprob: -6.02294397354126
    5. 'visited' → logprob: -7.39794397354126
    6. 'd' → logprob: -7.64794397354126
    7. 'def' → logprob: -8.022943496704102
    8. 'point' → logprob: -8.022943496704102
    9. '   ' → logprob: -8.147943496704102
    10. 'n' → logprob: -8.147943496704102

Token 976: ' remove' (ID: 6234)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09691203385591507
    2. '#' → logprob: -3.471912145614624
    3. 'from' → logprob: -3.596912145614624
    4. 'dp' → logprob: -4.971911907196045
    5. 'visited' → logprob: -5.096911907196045
    6. 'point' → logprob: -5.471911907196045
    7. 'def' → logprob: -5.721911907196045
    8. 'import' → logprob: -6.096911907196045
    9. 'idx' → logprob: -6.346911907196045
    10. 'ais' → logprob: -6.596911907196045

Token 977: ' duplicates' (ID: 91135)
  Prédit: ' duplicates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.23110447824001312
    2. 'duplicates' → logprob: -1.7311044931411743
    3. '_duplicates' → logprob: -3.6061043739318848
    4. 'duplicate' → logprob: -6.981104373931885
    5. ' duplicate' → logprob: -7.481104373931885
    6. 'd' → logprob: -8.356104850769043
    7. 'dup' → logprob: -8.981104850769043
    8. 'duplic' → logprob: -9.481104850769043
    9. '_points' → logprob: -10.106104850769043
    10. '_duplicate' → logprob: -10.606104850769043

Token 978: '
' (ID: 198)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.01163303293287754
    2. '   ' → logprob: -5.636632919311523
    3. '
' → logprob: -6.261632919311523
    4. ' aisle' → logprob: -6.511632919311523
    5. ')
' → logprob: -7.386632919311523
    6. ',' → logprob: -7.511632919311523
    7. 'ail' → logprob: -7.761632919311523
    8. '    
' → logprob: -7.761632919311523
    9. '       ' → logprob: -7.886632919311523
    10. '        
' → logprob: -8.011632919311523

Token 979: '       ' (ID: 309)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.08241356164216995
    2. '   ' → logprob: -3.957413673400879
    3. ' aisle' → logprob: -4.082413673400879
    4. '
' → logprob: -4.832413673400879
    5. '```' → logprob: -5.082413673400879
    6. '       ' → logprob: -5.582413673400879
    7. '    
' → logprob: -5.582413673400879
    8. 'seen' → logprob: -5.707413673400879
    9. ',' → logprob: -6.207413673400879
    10. ')
' → logprob: -6.457413673400879

Token 980: ' aisle' (ID: 99887)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.10280977189540863
    2. ' aisle' → logprob: -2.9778096675872803
    3. 'seen' → logprob: -3.6028096675872803
    4. ' seen' → logprob: -5.102809906005859
    5. '   ' → logprob: -5.602809906005859
    6. 'unique' → logprob: -6.227809906005859
    7. ' unique' → logprob: -6.602809906005859
    8. 'ase' → logprob: -7.102809906005859
    9. '```' → logprob: -7.477809906005859
    10. 'points' → logprob: -7.602809906005859

Token 981: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.00011808603449026123
    2. '_positions' → logprob: -9.875118255615234
    3. '_tokens' → logprob: -10.250118255615234
    4. '_set' → logprob: -11.375118255615234
    5. 'points' → logprob: -12.375118255615234
    6. '_' → logprob: -12.500118255615234
    7. '_pts' → logprob: -12.625118255615234
    8. 'Points' → logprob: -12.750118255615234
    9. '```' → logprob: -13.000118255615234
    10. '_POINTS' → logprob: -14.250118255615234

Token 982: '=list' (ID: 93413)
  Prédit: '=list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=list' → logprob: -0.36927011609077454
    2. '=' → logprob: -1.8692700862884521
    3. '=set' → logprob: -1.8692700862884521
    4. ' =' → logprob: -9.119270324707031
    5. '=[]' → logprob: -9.744270324707031
    6. '=[' → logprob: -9.994270324707031
    7. '=len' → logprob: -10.369270324707031
    8. '=[]
' → logprob: -10.994270324707031
    9. '=array' → logprob: -11.869270324707031
    10. '=dict' → logprob: -12.119270324707031

Token 983: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.25436025857925415
    2. '(dict' → logprob: -1.5043601989746094
    3. 'dict' → logprob: -6.254360198974609
    4. '(' → logprob: -7.629360198974609
    5. 'set' → logprob: -11.37936019897461
    6. '(sorted' → logprob: -11.87936019897461
    7. '(
' → logprob: -13.62936019897461
    8. '=set' → logprob: -16.12936019897461
    9. '
' → logprob: -16.62936019897461
    10. ' dict' → logprob: -17.00436019897461

Token 984: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2200749754119897e-06
    2. '(
' → logprob: -14.375001907348633
    3. ' (' → logprob: -14.375001907348633
    4. '((' → logprob: -14.750001907348633
    5. ')' → logprob: -15.250001907348633
    6. '())' → logprob: -15.750001907348633
    7. ')(' → logprob: -16.250001907348633
    8. '(list' → logprob: -17.625001907348633
    9. '```' → logprob: -17.875001907348633
    10. '([' → logprob: -18.250001907348633

Token 985: 'ais' (ID: 1873)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6933814287185669
    2. 'ais' → logprob: -0.6933814287185669
    3. 'ail' → logprob: -9.068381309509277
    4. ')' → logprob: -9.318381309509277
    5. '[' → logprob: -11.693381309509277
    6. 'ase' → logprob: -12.568381309509277
    7. '(
' → logprob: -12.693381309509277
    8. 'a' → logprob: -13.318381309509277
    9. '{' → logprob: -13.943381309509277
    10. 'aisi' → logprob: -14.068381309509277

Token 986: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.26492613554000854
    2. 'ue' → logprob: -2.0149261951446533
    3. '(' → logprob: -2.8899261951446533
    4. 'le' → logprob: -3.5149261951446533
    5. 't' → logprob: -5.014925956726074
    6. ')' → logprob: -6.139925956726074
    7. 'ule' → logprob: -7.139925956726074
    8. 'el' → logprob: -7.514925956726074
    9. 'te' → logprob: -7.514925956726074
    10. 'ist' → logprob: -8.014925956726074

Token 987: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -5.5577775128767826e-06
    2. 'points' → logprob: -12.375005722045898
    3. '_' → logprob: -15.000005722045898
    4. 'Points' → logprob: -15.125005722045898
    5. '_POINTS' → logprob: -15.625005722045898
    6. '_positions' → logprob: -15.875005722045898
    7. '_point' → logprob: -16.2500057220459
    8. 'oints' → logprob: -16.5000057220459
    9. '_pts' → logprob: -16.7500057220459
    10. ' points' → logprob: -17.1250057220459

Token 988: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.078912153840065
    2. ')' → logprob: -2.5789122581481934
    3. '))
' → logprob: -11.453911781311035
    4. ')))' → logprob: -12.578911781311035
    5. ' ))' → logprob: -12.953911781311035
    6. ')
' → logprob: -13.703911781311035
    7. '       ' → logprob: -13.953911781311035
    8. '   ' → logprob: -14.328911781311035
    9. '));' → logprob: -14.328911781311035
    10. '])' → logprob: -14.328911781311035

Token 989: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15139394998550415
    2. '       ' → logprob: -2.7763938903808594
    3. 'def' → logprob: -3.6513938903808594
    4. '   ' → logprob: -4.151393890380859
    5. '#' → logprob: -4.776393890380859
    6. ',' → logprob: -5.151393890380859
    7. '
' → logprob: -6.026393890380859
    8. 'distance' → logprob: -6.026393890380859
    9. '	dist' → logprob: -6.401393890380859
    10. ')' → logprob: -6.401393890380859

Token 990: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03210078179836273
    2. '#' (adapté à ' #') → logprob: -4.532100677490234
    3. 'def' → logprob: -5.157100677490234
    4. 'dp' → logprob: -5.407100677490234
    5. 'visited' → logprob: -6.157100677490234
    6. 'graph' → logprob: -6.282100677490234
    7. 'd' → logprob: -6.907100677490234
    8. 'from' → logprob: -6.907100677490234
    9. 'adj' → logprob: -7.407100677490234
    10. 'points' → logprob: -7.407100677490234

Token 991: ' Map' (ID: 7343)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0554826594889164
    2. '#' → logprob: -3.6804826259613037
    3. 'point' → logprob: -4.930482864379883
    4. 'def' → logprob: -5.680482864379883
    5. 'dp' → logprob: -5.805482864379883
    6. 'from' → logprob: -5.930482864379883
    7. 'ais' → logprob: -6.055482864379883
    8. 'd' → logprob: -6.055482864379883
    9. 'adj' → logprob: -6.055482864379883
    10. 'pos' → logprob: -6.430482864379883

Token 992: ' point' (ID: 2438)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6993988752365112
    2. 'point' → logprob: -0.8243988752365112
    3. ' aisle' → logprob: -3.824398994445801
    4. 'idx' → logprob: -4.574398994445801
    5. ' point' → logprob: -4.824398994445801
    6. ' pos' → logprob: -5.074398994445801
    7. 'ais' → logprob: -5.449398994445801
    8. 'dist' → logprob: -5.949398994445801
    9. ' dist' → logprob: -6.074398994445801
    10. 'pt' → logprob: -6.949398994445801

Token 993: ' to' (ID: 316)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.4105243682861328
    2. '_indices' → logprob: -1.5355243682861328
    3. '_idx' → logprob: -1.6605243682861328
    4. '_id' → logprob: -1.6605243682861328
    5. '_to' → logprob: -1.9105243682861328
    6. '_indexes' → logprob: -5.660524368286133
    7. 'index' → logprob: -5.785524368286133
    8. '_ids' → logprob: -6.410524368286133
    9. 'idx' → logprob: -6.660524368286133
    10. 'to' → logprob: -7.160524368286133

Token 994: ' idx' (ID: 14016)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.062432557344436646
    2. 'idx' → logprob: -2.8124325275421143
    3. 'id' → logprob: -8.062432289123535
    4. ' index' → logprob: -9.187432289123535
    5. 'len' → logprob: -10.687432289123535
    6. 'indices' → logprob: -11.312432289123535
    7. ' idx' → logprob: -11.687432289123535
    8. '_index' → logprob: -14.187432289123535
    9. 'point' → logprob: -14.562432289123535
    10. 'i' → logprob: -14.687432289123535

Token 995: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0019034147262573
    2. '_points' → logprob: -1.5019034147262573
    3. '_point' → logprob: -1.5019034147262573
    4. '={}' → logprob: -3.126903533935547
    5. '_' → logprob: -3.501903533935547
    6. 'point' → logprob: -3.751903533935547
    7. '_indices' → logprob: -4.251903533935547
    8. '_idx' → logprob: -4.501903533935547
    9. '_pts' → logprob: -4.501903533935547
    10. '_p' → logprob: -4.501903533935547

Token 996: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8022222518920898
    2. 'point' → logprob: -0.9272222518920898
    3. '_point' → logprob: -2.55222225189209
    4. '={}' → logprob: -3.30222225189209
    5. ' =' → logprob: -4.17722225189209
    6. '_p' → logprob: -5.30222225189209
    7. 'p' → logprob: -5.67722225189209
    8. '_points' → logprob: -5.67722225189209
    9. '_' → logprob: -6.17722225189209
    10. '=[]' → logprob: -6.55222225189209

Token 997: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' (adapté à ' point') → logprob: -0.006124671082943678
    2. 'pt' → logprob: -6.006124496459961
    3. 'pos' → logprob: -6.381124496459961
    4. 'idx' → logprob: -6.631124496459961
    5. 'p' → logprob: -8.131124496459961
    6. 'ais' → logprob: -9.131124496459961
    7. 'ap' → logprob: -10.006124496459961
    8. 'poi' → logprob: -10.006124496459961
    9. 'points' → logprob: -10.381124496459961
    10. 'pts' → logprob: -10.506124496459961

Token 998: '_idx' (ID: 15257)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.2761093080043793
    2. '_idx' → logprob: -1.9011093378067017
    3. '_indices' → logprob: -3.026109218597412
    4. '_map' → logprob: -4.026109218597412
    5. '_index' → logprob: -4.401109218597412
    6. '2' → logprob: -5.776109218597412
    7. '_id' → logprob: -5.776109218597412
    8. 's' → logprob: -6.151109218597412
    9. '_idxs' → logprob: -6.526109218597412
    10. '_pos' → logprob: -6.651109218597412

Token 999: '={' (ID: 1693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06767493486404419
    2. '={}' → logprob: -2.8176748752593994
    3. '={' → logprob: -5.1926751136779785
    4. '={(' → logprob: -10.19267463684082
    5. ' =' → logprob: -10.31767463684082
    6. '={
' → logprob: -10.94267463684082
    7. '=dict' → logprob: -11.31767463684082
    8. '={}
' → logprob: -11.44267463684082
    9. '={"' → logprob: -11.69267463684082
    10. '={'' → logprob: -12.06767463684082

Token 1000: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04134434089064598
    2. 'pt' → logprob: -3.291344404220581
    3. 'point' → logprob: -5.791344165802002
    4. 'pos' → logprob: -9.29134464263916
    5. 'ap' → logprob: -9.66634464263916
    6. ' p' → logprob: -10.41634464263916
    7. 'pp' → logprob: -11.04134464263916
    8. ' pt' → logprob: -11.16634464263916
    9. '(p' → logprob: -11.16634464263916
    10. '{' → logprob: -12.04134464263916

Token 1001: ':i' (ID: 34041)
  Prédit: ':p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':p' → logprob: -0.1272248923778534
    2. ':' → logprob: -2.127224922180176
    3. ' :' → logprob: -8.252224922180176
    4. ':px' → logprob: -11.502224922180176
    5. ':i' → logprob: -11.627224922180176
    6. 'p' → logprob: -12.252224922180176
    7. '[p' → logprob: -12.752224922180176
    8. ':
' → logprob: -12.877224922180176
    9. ':(' → logprob: -13.377224922180176
    10. ':[' → logprob: -14.252224922180176

Token 1002: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759550333023071
    2. ' for' → logprob: -0.8259550333023071
    3. 'p' → logprob: -12.450955390930176
    4. '
' → logprob: -12.450955390930176
    5. ' p' → logprob: -13.075955390930176
    6. '   ' → logprob: -13.325955390930176
    7. '	for' → logprob: -13.950955390930176
    8. ' ' → logprob: -14.575955390930176
    9. '(p' → logprob: -14.825955390930176
    10. '}' → logprob: -15.200955390930176

Token 1003: ' i' (ID: 575)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.623244553338736e-05
    2. ' p' → logprob: -9.750065803527832
    3. 'i' → logprob: -11.875065803527832
    4. '
' → logprob: -14.625065803527832
    5. '<|end|>' → logprob: -15.750065803527832
    6. '_p' → logprob: -15.875065803527832
    7. ')p' → logprob: -16.87506675720215
    8. '	p' → logprob: -17.00006675720215
    9. '_' → logprob: -17.37506675720215
    10. '<|end|>' → logprob: -17.62506675720215

Token 1004: ',p' (ID: 14835)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4827195405960083
    2. ' in' → logprob: -1.1077195405960083
    3. ' p' → logprob: -3.2327194213867188
    4. 'in' → logprob: -4.357719421386719
    5. ',p' → logprob: -8.107719421386719
    6. ',' → logprob: -10.982719421386719
    7. '<|end|>' → logprob: -13.357719421386719
    8. '_p' → logprob: -13.482719421386719
    9. 'i' → logprob: -13.482719421386719
    10. ' ' → logprob: -13.982719421386719

Token 1005: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3869400918483734
    2. 'in' → logprob: -1.1369401216506958
    3. 'n' → logprob: -9.636940002441406
    4. 'In' → logprob: -14.011940002441406
    5. 's' → logprob: -14.636940002441406
    6. 'ins' → logprob: -15.011940002441406
    7. 'import' → logprob: -15.136940002441406
    8. ' ' → logprob: -15.261940002441406
    9. '```' → logprob: -15.386940002441406
    10. '<|end|>' → logprob: -15.761940002441406

Token 1006: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0002980432182084769
    2. ' enumerate' → logprob: -8.125298500061035
    3. 'enum' → logprob: -13.875298500061035
    4. '
' → logprob: -14.250298500061035
    5. '```' → logprob: -15.500298500061035
    6. '[' → logprob: -16.25029754638672
    7. 'en' → logprob: -16.37529754638672
    8. 'enqueue' → logprob: -17.00029754638672
    9. 'import' → logprob: -17.50029754638672
    10. 'point' → logprob: -18.62529754638672

Token 1007: '(' (ID: 7)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.0003500050224829465
    2. 'ail' → logprob: -8.000349998474121
    3. '(' → logprob: -12.125349998474121
    4. 'ase' → logprob: -13.125349998474121
    5. 'air' → logprob: -13.500349998474121
    6. '[' → logprob: -13.625349998474121
    7. 'aire' → logprob: -13.875349998474121
    8. 'ai' → logprob: -14.250349998474121
    9. 'aisi' → logprob: -14.500349998474121
    10. 'ait' → logprob: -14.750349998474121

Token 1008: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.0001146291324403137
    2. 'ail' → logprob: -9.500114440917969
    3. 'enumer' → logprob: -10.250114440917969
    4. 'ase' → logprob: -13.125114440917969
    5. 'air' → logprob: -14.625114440917969
    6. '[(' → logprob: -14.750114440917969
    7. 'ai' → logprob: -15.000114440917969
    8. 'aisi' → logprob: -15.500114440917969
    9. 'aire' → logprob: -15.625114440917969
    10. '[' → logprob: -15.875114440917969

Token 1009: 'le' (ID: 282)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9069502353668213
    2. 'er' → logprob: -1.5319502353668213
    3. 'point' → logprob: -2.0319502353668213
    4. 'el' → logprob: -2.1569502353668213
    5. 'rl' → logprob: -2.9069502353668213
    6. 'ir' → logprob: -3.4069502353668213
    7. 'elf' → logprob: -4.656949996948242
    8. 'il' → logprob: -5.281949996948242
    9. 'em' → logprob: -5.531949996948242
    10. '_point' → logprob: -5.906949996948242

Token 1010: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -9.088346359931165e-07
    2. '_POINTS' → logprob: -15.250000953674316
    3. '_positions' → logprob: -15.625000953674316
    4. 'points' → logprob: -16.125
    5. '```' → logprob: -16.125
    6. ')_' → logprob: -16.625
    7. '_p' → logprob: -16.875
    8. ')' → logprob: -17.375
    9. 'Points' → logprob: -18.0
    10. '
' → logprob: -18.125

Token 1011: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.016175247728824615
    2. '}' → logprob: -4.141175270080566
    3. '})' → logprob: -9.641175270080566
    4. ')' → logprob: -9.766175270080566
    5. ');}' → logprob: -11.641175270080566
    6. ')}
' → logprob: -12.641175270080566
    7. ']}' → logprob: -13.766175270080566
    8. '")}' → logprob: -13.766175270080566
    9. ')}
' → logprob: -14.141175270080566
    10. '   ' → logprob: -14.266175270080566

Token 1012: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21504546701908112
    2. '       ' → logprob: -1.84004545211792
    3. 'for' → logprob: -4.46504545211792
    4. '   ' → logprob: -4.71504545211792
    5. 'def' → logprob: -5.59004545211792
    6. 'dp' → logprob: -6.09004545211792
    7. '#' → logprob: -6.09004545211792
    8. 'distance' → logprob: -6.34004545211792
    9. '```' → logprob: -6.71504545211792
    10. ' distances' → logprob: -7.46504545211792

Token 1013: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15210120379924774
    2. 'for' → logprob: -2.7771012783050537
    3. '#' (adapté à ' #') → logprob: -3.7771012783050537
    4. 'def' → logprob: -3.9021012783050537
    5. 'visited' → logprob: -4.402101039886475
    6. 'dp' → logprob: -4.902101039886475
    7. '   ' → logprob: -5.027101039886475
    8. 'd' → logprob: -6.902101039886475
    9. 'from' → logprob: -6.902101039886475
    10. '       ' → logprob: -6.902101039886475

Token 1014: ' Compute' (ID: 45438)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5280208587646484
    2. 'for' → logprob: -1.4030208587646484
    3. 'def' → logprob: -2.4030208587646484
    4. '#' → logprob: -3.1530208587646484
    5. 'from' → logprob: -4.403020858764648
    6. 'visited' → logprob: -4.903020858764648
    7. 'INF' → logprob: -5.528020858764648
    8. 'dp' → logprob: -5.903020858764648
    9. 'distance' → logprob: -6.028020858764648
    10. 'import' → logprob: -7.403020858764648

Token 1015: ' all' (ID: 722)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06419916450977325
    2. 'all' → logprob: -3.439199209213257
    3. 'd' → logprob: -4.314198970794678
    4. 'n' → logprob: -5.064198970794678
    5. 'adj' → logprob: -5.439198970794678
    6. 'dp' → logprob: -6.314198970794678
    7. 'point' → logprob: -7.189198970794678
    8. 'len' → logprob: -7.189198970794678
    9. 'graph' → logprob: -7.439198970794678
    10. 'D' → logprob: -7.814198970794678

Token 1016: ' pairs' (ID: 24702)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10261065512895584
    2. '_dist' → logprob: -2.3526105880737305
    3. '_pairs' → logprob: -7.2276105880737305
    4. 'd' → logprob: -7.3526105880737305
    5. 'pairs' → logprob: -7.7276105880737305
    6. ' dist' → logprob: -8.22761058807373
    7. '_d' → logprob: -9.22761058807373
    8. '   ' → logprob: -9.47761058807373
    9. '```' → logprob: -10.10261058807373
    10. 'pair' → logprob: -10.85261058807373

Token 1017: ' shortest' (ID: 70564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10606112331151962
    2. '_dist' → logprob: -2.8560612201690674
    3. ' dist' → logprob: -3.2310612201690674
    4. 'for' → logprob: -6.481060981750488
    5. ' for' → logprob: -7.106060981750488
    6. 'd' → logprob: -7.731060981750488
    7. 'distance' → logprob: -8.731060981750488
    8. '```' → logprob: -8.981060981750488
    9. ' distances' → logprob: -8.981060981750488
    10. '#' → logprob: -9.606060981750488

Token 1018: ' distances' (ID: 48294)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.1427839696407318
    2. '_paths' → logprob: -2.2677838802337646
    3. 'dist' → logprob: -3.6427838802337646
    4. '_distance' → logprob: -6.517784118652344
    5. '_path' → logprob: -6.767784118652344
    6. '```' → logprob: -8.017784118652344
    7. 'paths' → logprob: -9.142784118652344
    8. '_tokens' → logprob: -10.017784118652344
    9. 'distance' → logprob: -10.642784118652344
    10. '_' → logprob: -10.767784118652344

Token 1019: ' on' (ID: 402)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4345197379589081
    2. 'all' → logprob: -1.4345197677612305
    3. 'n' → logprob: -3.3095197677612305
    4. 'dp' → logprob: -3.4345197677612305
    5. 'for' → logprob: -4.4345197677612305
    6. 'import' → logprob: -4.9345197677612305
    7. 'from' → logprob: -5.3095197677612305
    8. 'def' → logprob: -5.8095197677612305
    9. 'point' → logprob: -5.8095197677612305
    10. 'num' → logprob: -5.8095197677612305

Token 1020: ' ais' (ID: 36709)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.006588658783584833
    2. '```' → logprob: -6.006588459014893
    3. ' ais' → logprob: -6.006588459014893
    4. '`' → logprob: -8.00658893585205
    5. '``' → logprob: -8.38158893585205
    6. 'the' → logprob: -8.38158893585205
    7. ' aisle' → logprob: -8.88158893585205
    8. 'adj' → logprob: -9.38158893585205
    9. 'air' → logprob: -9.75658893585205
    10. 'map' → logprob: -10.06908893585205

Token 1021: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.12696129083633423
    2. 'les' → logprob: -2.1269612312316895
    3. 'ile' → logprob: -10.751961708068848
    4. 'iles' → logprob: -12.876961708068848
    5. '```' → logprob: -13.501961708068848
    6. 'lee' → logprob: -14.001961708068848
    7. 'l' → logprob: -14.001961708068848
    8. 'leis' → logprob: -14.126961708068848
    9. 'lie' → logprob: -14.376961708068848
    10. '#' → logprob: -14.501961708068848

Token 1022: ' using' (ID: 2360)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6590044498443604
    2. 'for' → logprob: -1.1590044498443604
    3. ' for' → logprob: -2.2840044498443604
    4. '
' → logprob: -4.159004211425781
    5. '```' → logprob: -4.784004211425781
    6. '   ' → logprob: -5.034004211425781
    7. '_dist' → logprob: -5.409004211425781
    8. ' dist' → logprob: -5.534004211425781
    9. 'distance' → logprob: -5.659004211425781
    10. 'def' → logprob: -5.784004211425781

Token 1023: ' BFS' (ID: 190016)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.019157830625772476
    2. 'for' → logprob: -5.394157886505127
    3. '[b' → logprob: -5.519157886505127
    4. '```' → logprob: -5.644157886505127
    5. 'dist' → logprob: -6.519157886505127
    6. 'def' → logprob: -6.769157886505127
    7. 'B' → logprob: -7.144157886505127
    8. 'len' → logprob: -7.144157886505127
    9. '[' → logprob: -7.144157886505127
    10. ' bfs' → logprob: -7.644157886505127

Token 1024: ' per' (ID: 777)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4051879048347473
    2. 'for' → logprob: -1.2801878452301025
    3. 'all' → logprob: -4.155188083648682
    4. 'dp' → logprob: -4.905188083648682
    5. ' for' → logprob: -5.280188083648682
    6. 'def' → logprob: -5.405188083648682
    7. 'distance' → logprob: -5.655188083648682
    8. 'from' → logprob: -5.655188083648682
    9. 'next' → logprob: -5.905188083648682
    10. '```' → logprob: -6.280188083648682

Token 1025: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.08367697149515152
    2. 'p' → logprob: -2.833677053451538
    3. ' point' → logprob: -3.958677053451538
    4. ' p' → logprob: -6.708676815032959
    5. '
' → logprob: -7.833676815032959
    6. 'pt' → logprob: -7.833676815032959
    7. 'i' → logprob: -9.958677291870117
    8. 'idx' → logprob: -9.958677291870117
    9. 'def' → logprob: -10.083677291870117
    10. 'each' → logprob: -10.333677291870117

Token 1026: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015207558870315552
    2. ' for' → logprob: -4.265207767486572
    3. '```' → logprob: -7.265207767486572
    4. '
' → logprob: -9.015207290649414
    5. '       ' → logprob: -9.140207290649414
    6. 'def' → logprob: -10.265207290649414
    7. '   ' → logprob: -10.640207290649414
    8. 'dist' → logprob: -11.265207290649414
    9. ':' → logprob: -11.890207290649414
    10. '``' → logprob: -12.015207290649414

Token 1027: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0507318414747715
    2. 'for' → logprob: -3.050731897354126
    3. ' for' → logprob: -6.300731658935547
    4. '   ' → logprob: -9.050731658935547
    5. 'dist' → logprob: -9.425731658935547
    6. '```' → logprob: -10.675731658935547
    7. '           ' → logprob: -11.300731658935547
    8. 'next' → logprob: -11.300731658935547
    9. '        
' → logprob: -11.425731658935547
    10. 'import' → logprob: -11.675731658935547

Token 1028: ' adj' (ID: 20251)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07435861229896545
    2. ' for' → logprob: -2.6993587017059326
    3. 'dist' → logprob: -6.5743584632873535
    4. '
' → logprob: -7.0743584632873535
    5. '   ' → logprob: -7.1993584632873535
    6. '```' → logprob: -7.1993584632873535
    7. '       ' → logprob: -7.9493584632873535
    8. ' distances' → logprob: -9.199358940124512
    9. 'distance' → logprob: -10.324358940124512
    10. '    
' → logprob: -10.824358940124512

Token 1029: '=[[' (ID: 112637)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.34356608986854553
    2. 'acency' → logprob: -2.0935661792755127
    3. '_dist' → logprob: -3.3435661792755127
    4. '=[' → logprob: -3.4685661792755127
    5. '=[[' → logprob: -3.7185661792755127
    6. 'acent' → logprob: -3.9685661792755127
    7. 's' → logprob: -4.093565940856934
    8. 'dist' → logprob: -4.468565940856934
    9. '=[]
' → logprob: -4.968565940856934
    10. 'ac' → logprob: -5.093565940856934

Token 1030: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4312670826911926
    2. '-' → logprob: -1.0562670230865479
    3. 'float' → logprob: -6.181267261505127
    4. '(' → logprob: -7.931267261505127
    5. '100' → logprob: -9.681266784667969
    6. '(-' → logprob: -11.181266784667969
    7. 'int' → logprob: -11.431266784667969
    8. '0' → logprob: -11.556266784667969
    9. '1' → logprob: -11.556266784667969
    10. ' -' → logprob: -11.931266784667969

Token 1031: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.023305924609303474
    2. '9' → logprob: -3.773305892944336
    3. '*' → logprob: -9.773305892944336
    4. '^' → logprob: -13.398305892944336
    5. '```' → logprob: -13.898305892944336
    6. '[' → logprob: -15.148305892944336
    7. '0' → logprob: -15.523305892944336
    8. ' **' → logprob: -16.023305892944336
    9. '000' → logprob: -16.148305892944336
    10. '***' → logprob: -16.398305892944336

Token 1032: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.703443770878948e-06
    2. '8' → logprob: -12.500007629394531
    3. '6' → logprob: -13.125007629394531
    4. '7' → logprob: -13.500007629394531
    5. '18' → logprob: -15.000007629394531
    6. '15' → logprob: -16.00000762939453
    7. '5' → logprob: -16.75000762939453
    8. '``' → logprob: -17.81250762939453
    9. '
' → logprob: -17.87500762939453
    10. '10' → logprob: -18.12500762939453

Token 1033: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.09708492457866669
    2. 'for' → logprob: -2.5970849990844727
    3. ' for' → logprob: -4.472084999084473
    4. ']' → logprob: -5.722084999084473
    5. ']*(' → logprob: -5.722084999084473
    6. '   ' → logprob: -10.222084999084473
    7. ']+' → logprob: -11.472084999084473
    8. 'if' → logprob: -12.472084999084473
    9. '	for' → logprob: -12.722084999084473
    10. ' ]' → logprob: -12.972084999084473

Token 1034: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0052354102954268456
    2. '(len' → logprob: -5.255235195159912
    3. ' len' → logprob: -13.50523567199707
    4. '(' → logprob: -15.38023567199707
    5. '
' → logprob: -18.00523567199707
    6. '[len' → logprob: -18.38023567199707
    7. '	len' → logprob: -18.88023567199707
    8. '=len' → logprob: -19.13023567199707
    9. '10' → logprob: -19.63023567199707
    10. ',len' → logprob: -20.00523567199707

Token 1035: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014504875987768173
    2. 'adj' → logprob: -4.764504909515381
    3. 'ais' → logprob: -5.264504909515381
    4. '(adj' → logprob: -7.264504909515381
    5. '(
' → logprob: -14.889504432678223
    6. 'ail' → logprob: -15.514504432678223
    7. '```' → logprob: -16.26450538635254
    8. '(a' → logprob: -16.38950538635254
    9. 'ase' → logprob: -16.38950538635254
    10. '``' → logprob: -16.38950538635254

Token 1036: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.0017208768986165524
    2. '(' → logprob: -6.376720905303955
    3. 'adj' → logprob: -11.376720428466797
    4. 'ail' → logprob: -12.501720428466797
    5. ')' → logprob: -14.001720428466797
    6. '```' → logprob: -14.376720428466797
    7. '`' → logprob: -15.001720428466797
    8. 'ase' → logprob: -15.001720428466797
    9. '[' → logprob: -15.126720428466797
    10. '{' → logprob: -15.501720428466797

Token 1037: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.4343903362751007
    2. 'e' → logprob: -1.1843903064727783
    3. 'el' → logprob: -3.9343903064727783
    4. 'ile' → logprob: -4.059390544891357
    5. 'ue' → logprob: -5.559390544891357
    6. 'il' → logprob: -6.684390544891357
    7. 'lee' → logprob: -7.059390544891357
    8. 'al' → logprob: -7.184390544891357
    9. 'eil' → logprob: -7.934390544891357
    10. 'ele' → logprob: -8.3093900680542

Token 1038: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -7.226628895296017e-06
    2. 'points' → logprob: -12.000007629394531
    3. '_POINTS' → logprob: -14.125007629394531
    4. 'Points' → logprob: -15.500007629394531
    5. 'oints' → logprob: -17.12500762939453
    6. ' points' → logprob: -17.50000762939453
    7. '	points' → logprob: -18.12500762939453
    8. '```' → logprob: -19.25000762939453
    9. '(points' → logprob: -19.50000762939453
    10. '_pts' → logprob: -20.12500762939453

Token 1039: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3141815662384033
    2. ')' → logprob: -1.5641815662384033
    3. ' for' → logprob: -2.8141815662384033
    4. ']' → logprob: -8.814181327819824
    5. ')]' → logprob: -9.189181327819824
    6. '[' → logprob: -9.939181327819824
    7. '	for' → logprob: -10.189181327819824
    8. '
' → logprob: -11.189181327819824
    9. '[i' → logprob: -11.439181327819824
    10. '   ' → logprob: -11.439181327819824

Token 1040: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34859699010849
    2. ' for' → logprob: -1.2235970497131348
    3. ']' → logprob: -10.098596572875977
    4. '<|end|>' → logprob: -10.098596572875977
    5. '	for' → logprob: -10.723596572875977
    6. '
' → logprob: -10.723596572875977
    7. ')' → logprob: -11.348596572875977
    8. '<|end|>' → logprob: -12.223596572875977
    9. '   ' → logprob: -13.098596572875977
    10. '```' → logprob: -13.223596572875977

Token 1041: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0025013405829668045
    2. '_in' → logprob: -6.377501487731934
    3. '_range' → logprob: -7.752501487731934
    4. ' _' → logprob: -8.252501487731934
    5. '_i' → logprob: -9.377501487731934
    6. ' in' → logprob: -12.252501487731934
    7. '_p' → logprob: -12.627501487731934
    8. 'in' → logprob: -13.127501487731934
    9. '_=' → logprob: -13.252501487731934
    10. '_a' → logprob: -13.252501487731934

Token 1042: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.29837191104888916
    2. 'in' → logprob: -1.5483719110488892
    3. ' in' → logprob: -3.6733717918395996
    4. ' range' → logprob: -3.9233717918395996
    5. '_range' → logprob: -9.923372268676758
    6. '0' → logprob: -9.923372268676758
    7. 'i' → logprob: -10.548372268676758
    8. 'ange' → logprob: -10.548372268676758
    9. '	range' → logprob: -11.173372268676758
    10. '_' → logprob: -11.673372268676758

Token 1043: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.754368223482743e-05
    2. ' range' → logprob: -9.625067710876465
    3. '_range' → logprob: -13.625067710876465
    4. '
' → logprob: -15.750067710876465
    5. '	range' → logprob: -16.75006675720215
    6. 'ange' → logprob: -18.25006675720215
    7. '(range' → logprob: -18.37506675720215
    8. '_' → logprob: -18.75006675720215
    9. 'rage' → logprob: -19.37506675720215
    10. 'r' → logprob: -19.75006675720215

Token 1044: '(len' (ID: 14990)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00048775310278870165
    2. '(range' → logprob: -8.250487327575684
    3. ' range' → logprob: -8.625487327575684
    4. '(' → logprob: -10.125487327575684
    5. 'len' → logprob: -12.250487327575684
    6. '
' → logprob: -13.875487327575684
    7. '(len' → logprob: -15.125487327575684
    8. 'in' → logprob: -15.375487327575684
    9. '	range' → logprob: -16.37548828125
    10. '```' → logprob: -16.37548828125

Token 1045: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4974866644479334e-05
    2. 'ais' → logprob: -11.125015258789062
    3. 'adj' → logprob: -16.375015258789062
    4. '(
' → logprob: -16.625015258789062
    5. '(adj' → logprob: -17.625015258789062
    6. ')' → logprob: -18.625015258789062
    7. '```' → logprob: -19.000015258789062
    8. '=' → logprob: -19.375015258789062
    9. '
' → logprob: -19.375015258789062
    10. 'ail' → logprob: -19.750015258789062

Token 1046: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -2.093505099765025e-05
    2. '(' → logprob: -11.750020980834961
    3. 'ail' → logprob: -11.750020980834961
    4. 'adj' → logprob: -12.875020980834961
    5. ')' → logprob: -13.375020980834961
    6. 'ase' → logprob: -15.625020980834961
    7. '```' → logprob: -15.750020980834961
    8. 'a' → logprob: -16.12502098083496
    9. 'aise' → logprob: -16.12502098083496
    10. '[' → logprob: -16.25002098083496

Token 1047: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4540654718875885
    2. '_points' → logprob: -1.5790654420852661
    3. 'oint' → logprob: -2.4540655612945557
    4. 'ue' → logprob: -3.3290655612945557
    5. 'oints' → logprob: -4.079065322875977
    6. 'el' → logprob: -5.454065322875977
    7. 'le' → logprob: -5.579065322875977
    8. '_point' → logprob: -6.579065322875977
    9. 'o' → logprob: -6.704065322875977
    10. 'oi' → logprob: -6.829065322875977

Token 1048: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.00490485830232501
    2. 'oints' → logprob: -5.504904747009277
    3. 'points' → logprob: -7.129904747009277
    4. '_POINTS' → logprob: -10.879904747009277
    5. 'Points' → logprob: -12.504904747009277
    6. '```' → logprob: -14.004904747009277
    7. '	points' → logprob: -14.879904747009277
    8. 's' → logprob: -15.254904747009277
    9. 'int' → logprob: -15.254904747009277
    10. 'p' → logprob: -15.504904747009277

Token 1049: '))]
' (ID: 53695)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.836499985889532e-05
    2. ')' → logprob: -10.5000581741333
    3. ')]
' → logprob: -11.2500581741333
    4. ')])' → logprob: -11.8750581741333
    5. '])]' → logprob: -12.0000581741333
    6. ']' → logprob: -13.3750581741333
    7. ')][' → logprob: -13.8750581741333
    8. ')]
' → logprob: -14.2500581741333
    9. '))' → logprob: -14.5000581741333
    10. '   ' → logprob: -15.2500581741333

Token 1050: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06614533066749573
    2. ' for' → logprob: -3.191145420074463
    3. '	for' → logprob: -4.191145420074463
    4. '   ' → logprob: -5.066145420074463
    5. '       ' → logprob: -6.816145420074463
    6. '```' → logprob: -8.441144943237305
    7. '    
' → logprob: -10.566144943237305
    8. '
' → logprob: -10.566144943237305
    9. '<|end|>' → logprob: -11.066144943237305
    10. 'i' → logprob: -11.441144943237305

Token 1051: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00015920029545668513
    2. ' for' → logprob: -8.87515926361084
    3. '       ' → logprob: -11.50015926361084
    4. '   ' → logprob: -12.12515926361084
    5. '```' → logprob: -12.87515926361084
    6. '	for' → logprob: -14.50015926361084
    7. 'n' → logprob: -14.62515926361084
    8. 'i' → logprob: -16.125158309936523
    9. '           ' → logprob: -16.875158309936523
    10. 'def' → logprob: -17.750158309936523

Token 1052: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0014059479581192136
    2. ' i' → logprob: -6.876405715942383
    3. 'idx' → logprob: -8.376405715942383
    4. '_i' → logprob: -9.876405715942383
    5. 'start' → logprob: -10.626405715942383
    6. 'u' → logprob: -10.751405715942383
    7. 'p' → logprob: -10.751405715942383
    8. 'pi' → logprob: -11.501405715942383
    9. 'src' → logprob: -12.376405715942383
    10. ' idx' → logprob: -12.501405715942383

Token 1053: ',(' (ID: 27243)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6938990950584412
    2. ' in' → logprob: -0.6938990950584412
    3. ',' → logprob: -7.568899154663086
    4. ' ,' → logprob: -9.193899154663086
    5. ',in' → logprob: -11.193899154663086
    6. '=' → logprob: -11.318899154663086
    7. '```' → logprob: -11.568899154663086
    8. ' ' → logprob: -11.568899154663086
    9. ')' → logprob: -11.943899154663086
    10. '	in' → logprob: -11.943899154663086

Token 1054: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12710145115852356
    2. 'ax' → logprob: -2.377101421356201
    3. 'px' → logprob: -4.127101421356201
    4. 'p' → logprob: -5.002101421356201
    5. ')' → logprob: -6.877101421356201
    6. 'sx' → logprob: -7.502101421356201
    7. '```' → logprob: -7.752101421356201
    8. '_x' → logprob: -8.00210189819336
    9. 'xi' → logprob: -9.00210189819336
    10. '
' → logprob: -9.12710189819336

Token 1055: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0028191357851028442
    2. ',' → logprob: -5.877819061279297
    3. ' ,' → logprob: -11.502819061279297
    4. '_,' → logprob: -13.877819061279297
    5. ',x' → logprob: -14.377819061279297
    6. ',w' → logprob: -14.627819061279297
    7. ',i' → logprob: -15.002819061279297
    8. ',len' → logprob: -15.252819061279297
    9. ',j' → logprob: -15.377819061279297
    10. ',n' → logprob: -15.627819061279297

Token 1056: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010676169040380046
    2. ')=' → logprob: -9.375106811523438
    3. ' )' → logprob: -11.500106811523438
    4. 'in' → logprob: -12.875106811523438
    5. ',)' → logprob: -12.875106811523438
    6. ')
' → logprob: -13.750106811523438
    7. ')=>' → logprob: -14.000106811523438
    8. ' in' → logprob: -14.250106811523438
    9. ')`' → logprob: -14.500106811523438
    10. '
' → logprob: -14.500106811523438

Token 1057: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25401902198791504
    2. 'in' → logprob: -1.504019021987915
    3. ')' → logprob: -6.254018783569336
    4. '
' → logprob: -9.254018783569336
    5. '   ' → logprob: -10.629018783569336
    6. '```' → logprob: -12.004018783569336
    7. 'b' → logprob: -12.129018783569336
    8. '):
' → logprob: -12.254018783569336
    9. ' )' → logprob: -12.504018783569336
    10. '),' → logprob: -13.004018783569336

Token 1058: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0004350797680672258
    2. ' enumerate' → logprob: -8.000434875488281
    3. 'range' → logprob: -9.250434875488281
    4. '
' → logprob: -13.250434875488281
    5. 'enqueue' → logprob: -14.625434875488281
    6. 'enum' → logprob: -14.875434875488281
    7. 'in' → logprob: -15.250434875488281
    8. '```' → logprob: -15.375434875488281
    9. 'import' → logprob: -15.875434875488281
    10. '[(' → logprob: -16.87543487548828

Token 1059: '(' (ID: 7)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.0004474732850212604
    2. 'ase' → logprob: -8.250447273254395
    3. 'ail' → logprob: -9.250447273254395
    4. ')' → logprob: -9.875447273254395
    5. 'enumer' → logprob: -11.625447273254395
    6. '(' → logprob: -11.750447273254395
    7. '[(' → logprob: -12.250447273254395
    8. '[' → logprob: -13.250447273254395
    9. 'aise' → logprob: -13.375447273254395
    10. ']' → logprob: -13.500447273254395

Token 1060: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -9.710618905955926e-05
    2. 'ail' → logprob: -9.375097274780273
    3. ')' → logprob: -12.125097274780273
    4. 'ase' → logprob: -13.000097274780273
    5. 'air' → logprob: -13.875097274780273
    6. '[' → logprob: -14.375097274780273
    7. 'aise' → logprob: -14.625097274780273
    8. 'as' → logprob: -14.875097274780273
    9. 'ait' → logprob: -15.125097274780273
    10. 'ass' → logprob: -15.375097274780273

Token 1061: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.2740245759487152
    2. 'ile' → logprob: -1.7740246057510376
    3. 'il' → logprob: -3.774024486541748
    4. 'el' → logprob: -4.399024486541748
    5. 'e' → logprob: -4.649024486541748
    6. 'point' → logprob: -5.899024486541748
    7. 'oint' → logprob: -5.899024486541748
    8. 'ir' → logprob: -6.024024486541748
    9. 'i' → logprob: -6.524024486541748
    10. 'se' → logprob: -6.524024486541748

Token 1062: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -6.694766489090398e-05
    2. 'points' → logprob: -9.875066757202148
    3. '_POINTS' → logprob: -11.875066757202148
    4. 'Points' → logprob: -12.000066757202148
    5. 'oints' → logprob: -14.375066757202148
    6. 'c' → logprob: -15.000066757202148
    7. ')' → logprob: -15.125066757202148
    8. '	points' → logprob: -15.375066757202148
    9. '[' → logprob: -15.875066757202148
    10. '[
' → logprob: -16.00006675720215

Token 1063: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04907791689038277
    2. '):' → logprob: -3.0490779876708984
    3. '       ' → logprob: -8.299077987670898
    4. '   ' → logprob: -9.049077987670898
    5. '):
' → logprob: -9.549077987670898
    6. ')' → logprob: -10.799077987670898
    7. ':' → logprob: -11.174077987670898
    8. '):

' → logprob: -12.174077987670898
    9. ':
' → logprob: -12.299077987670898
    10. ' ):
' → logprob: -13.299077987670898

Token 1064: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022119492292404175
    2. 'dist' → logprob: -4.397119522094727
    3. '       ' → logprob: -5.147119522094727
    4. '```' → logprob: -6.897119522094727
    5. '
' → logprob: -7.022119522094727
    6. ' dist' → logprob: -7.147119522094727
    7. '           ' → logprob: -7.272119522094727
    8. '    
' → logprob: -9.022119522094727
    9. '	dist' → logprob: -9.022119522094727
    10. '):
' → logprob: -10.897119522094727

Token 1065: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.005922635551542044
    2. '   ' → logprob: -5.880922794342041
    3. '               ' → logprob: -6.130922794342041
    4. ' dist' → logprob: -7.255922794342041
    5. '           ' → logprob: -9.755922317504883
    6. 'd' → logprob: -9.880922317504883
    7. '```' → logprob: -9.880922317504883
    8. '	dist' → logprob: -10.380922317504883
    9. '_dist' → logprob: -11.255922317504883
    10. '       ' → logprob: -12.380922317504883

Token 1066: '=[' (ID: 13370)
  Prédit: '=b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=b' → logprob: -0.0009649383719079196
    2. '=' → logprob: -7.125965118408203
    3. 'b' → logprob: -9.250965118408203
    4. ' =' → logprob: -10.875965118408203
    5. '[b' → logprob: -11.000965118408203
    6. '_=' → logprob: -11.500965118408203
    7. '=sys' → logprob: -12.375965118408203
    8. ']=' → logprob: -12.750965118408203
    9. '=[' → logprob: -12.875965118408203
    10. '=B' → logprob: -13.500965118408203

Token 1067: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0028935596346855164
    2. '-' → logprob: -5.877893447875977
    3. '[' → logprob: -9.752893447875977
    4. '10' → logprob: -12.002893447875977
    5. 'b' → logprob: -12.127893447875977
    6. '][-' → logprob: -12.127893447875977
    7. '[b' → logprob: -12.752893447875977
    8. '[x' → logprob: -13.627893447875977
    9. '(-' → logprob: -13.752893447875977
    10. '```' → logprob: -13.877893447875977

Token 1068: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002084277366520837
    2. '10' → logprob: -9.125208854675293
    3. '-' → logprob: -9.250208854675293
    4. 'sys' → logprob: -13.750208854675293
    5. '...' → logprob: -15.250208854675293
    6. '9' → logprob: -15.250208854675293
    7. '```' → logprob: -15.250208854675293
    8. '100' → logprob: -15.375208854675293
    9. 'import' → logprob: -15.500208854675293
    10. 'int' → logprob: -15.625208854675293

Token 1069: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.00605511711910367
    2. ']*(' → logprob: -5.2560553550720215
    3. 'for' → logprob: -7.7560553550720215
    4. ']' → logprob: -8.256054878234863
    5. '(x' → logprob: -9.881054878234863
    6. '][' → logprob: -10.506054878234863
    7. ' for' → logprob: -11.506054878234863
    8. '           ' → logprob: -11.506054878234863
    9. 'len' → logprob: -11.881054878234863
    10. 'size' → logprob: -12.506054878234863

Token 1070: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.00014704519708175212
    2. 'len' → logprob: -8.875146865844727
    3. '(Y' → logprob: -12.750146865844727
    4. '(len' → logprob: -13.875146865844727
    5. '
' → logprob: -13.875146865844727
    6. ' Y' → logprob: -14.125146865844727
    7. '           ' → logprob: -14.750146865844727
    8. '10' → logprob: -15.125146865844727
    9. '```' → logprob: -15.750146865844727
    10. '(' → logprob: -16.125146865844727

Token 1071: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02210083045065403
    2. ' for' → logprob: -3.8971009254455566
    3. '           ' → logprob: -6.772100925445557
    4. '[x' → logprob: -9.147100448608398
    5. '][' → logprob: -9.397100448608398
    6. '[' → logprob: -9.772100448608398
    7. ']' → logprob: -10.022100448608398
    8. '               ' → logprob: -10.397100448608398
    9. '	for' → logprob: -10.647100448608398
    10. '```' → logprob: -11.147100448608398

Token 1072: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10384593904018402
    2. ' in' → logprob: -2.6038458347320557
    3. ' _' → logprob: -4.603846073150635
    4. ' range' → logprob: -5.103846073150635
    5. '_range' → logprob: -5.603846073150635
    6. 'range' → logprob: -5.978846073150635
    7. 'in' → logprob: -6.853846073150635
    8. '_x' → logprob: -7.353846073150635
    9. '_in' → logprob: -8.728845596313477
    10. ' ' → logprob: -9.603845596313477

Token 1073: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4028494656085968
    2. 'in' → logprob: -1.4028494358062744
    3. ' in' → logprob: -2.6528494358062744
    4. ' range' → logprob: -4.4028496742248535
    5. '_range' → logprob: -6.6528496742248535
    6. '_' → logprob: -6.9028496742248535
    7. '(range' → logprob: -8.527849197387695
    8. 'i' → logprob: -8.902849197387695
    9. 'def' → logprob: -9.277849197387695
    10. 'x' → logprob: -9.402849197387695

Token 1074: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01828104443848133
    2. ' range' → logprob: -4.018280982971191
    3. '_range' → logprob: -9.018280982971191
    4. '_' → logprob: -12.393280982971191
    5. '(range' → logprob: -12.893280982971191
    6. 'in' → logprob: -13.393280982971191
    7. ' in' → logprob: -13.768280982971191
    8. '	range' → logprob: -14.643280982971191
    9. ' _' → logprob: -16.143281936645508
    10. '_in' → logprob: -17.018281936645508

Token 1075: '(X' (ID: 17061)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.021754687651991844
    2. ' range' → logprob: -3.896754741668701
    3. '(range' → logprob: -7.521754741668701
    4. 'in' → logprob: -8.021754264831543
    5. '_range' → logprob: -8.646754264831543
    6. ' in' → logprob: -9.646754264831543
    7. 'X' → logprob: -9.646754264831543
    8. '(X' → logprob: -10.896754264831543
    9. '_' → logprob: -12.396754264831543
    10. '
' → logprob: -12.396754264831543

Token 1076: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.06362514197826385
    2. ']' → logprob: -3.5636250972747803
    3. ')]
' → logprob: -4.188625335693359
    4. '           ' → logprob: -4.188625335693359
    5. ')]' → logprob: -6.063625335693359
    6. ')
' → logprob: -8.18862533569336
    7. ']
' → logprob: -8.81362533569336
    8. ')' → logprob: -9.18862533569336
    9. '       ' → logprob: -10.06362533569336
    10. '               ' → logprob: -10.43862533569336

Token 1077: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08051837980747223
    2. 'dist' → logprob: -2.5805184841156006
    3. '   ' → logprob: -7.3305182456970215
    4. '       ' → logprob: -7.8305182456970215
    5. '	dist' → logprob: -8.70551872253418
    6. ' dist' → logprob: -8.95551872253418
    7. '```' → logprob: -8.95551872253418
    8. 'x' → logprob: -9.45551872253418
    9. '               ' → logprob: -10.83051872253418
    10. '	       ' → logprob: -11.20551872253418

Token 1078: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.006928731221705675
    2. '           ' → logprob: -5.00692892074585
    3. 'x' → logprob: -8.881928443908691
    4. ' dist' → logprob: -9.881928443908691
    5. '   ' → logprob: -11.506928443908691
    6. '	dist' → logprob: -11.756928443908691
    7. '```' → logprob: -13.506928443908691
    8. 'for' → logprob: -13.881928443908691
    9. '               ' → logprob: -14.131928443908691
    10. '0' → logprob: -14.381928443908691

Token 1079: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -8.65707261255011e-06
    2. 'x' → logprob: -11.875008583068848
    3. '=' → logprob: -14.625008583068848
    4. '[i' → logprob: -15.000008583068848
    5. '
' → logprob: -15.500008583068848
    6. '```' → logprob: -15.875008583068848
    7. '[start' → logprob: -16.125009536743164
    8. ' =' → logprob: -16.250009536743164
    9. '=x' → logprob: -16.250009536743164
    10. '=[' → logprob: -16.875009536743164

Token 1080: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.9504606825648807e-05
    2. ']' → logprob: -11.375019073486328
    3. '[y' → logprob: -13.000019073486328
    4. ' ][' → logprob: -13.625019073486328
    5. '           ' → logprob: -13.875019073486328
    6. '[' → logprob: -13.875019073486328
    7. '[x' → logprob: -14.250019073486328
    8. ')[' → logprob: -15.125019073486328
    9. ')][' → logprob: -15.750019073486328
    10. '[i' → logprob: -16.000019073486328

Token 1081: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.165027217415627e-05
    2. ' y' → logprob: -11.250021934509277
    3. '0' → logprob: -12.625021934509277
    4. 'x' → logprob: -13.875021934509277
    5. 'start' → logprob: -14.000021934509277
    6. '           ' → logprob: -14.125021934509277
    7. '[y' → logprob: -14.500021934509277
    8. '[' → logprob: -14.875021934509277
    9. '(y' → logprob: -14.875021934509277
    10. 'Y' → logprob: -15.500021934509277

Token 1082: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.0210670605301857
    2. '=' → logprob: -3.8960671424865723
    3. ']' → logprob: -8.146066665649414
    4. '][' → logprob: -8.771066665649414
    5. ']+=' → logprob: -10.396066665649414
    6. '=x' → logprob: -11.146066665649414
    7. '           ' → logprob: -11.396066665649414
    8. ']=(' → logprob: -11.771066665649414
    9. '=i' → logprob: -13.271066665649414
    10. ']=-' → logprob: -13.396066665649414

Token 1083: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '۰' → logprob: -20.75
    4. '
' → logprob: -20.875
    5. '   ' → logprob: -21.625
    6. '000' → logprob: -21.75
    7. '00' → logprob: -22.5
    8. '```' → logprob: -22.625
    9. 's' → logprob: -22.75
    10. '=' → logprob: -22.875

Token 1084: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027935877442359924
    2. '	       ' → logprob: -6.627793788909912
    3. '   ' → logprob: -7.002793788909912
    4. '	   ' → logprob: -8.002793312072754
    5. '       ' → logprob: -9.377793312072754
    6. '    	   ' → logprob: -10.252793312072754
    7. '		' → logprob: -10.752793312072754
    8. '<|end|>' → logprob: -11.002793312072754
    9. 'q' → logprob: -11.377793312072754
    10. '    	' → logprob: -11.502793312072754

Token 1085: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08884654194116592
    2. '	       ' → logprob: -3.338846445083618
    3. '   ' → logprob: -3.713846445083618
    4. '	   ' → logprob: -4.838846683502197
    5. '       ' → logprob: -4.963846683502197
    6. '	q' → logprob: -5.838846683502197
    7. '<|end|>' → logprob: -5.963846683502197
    8. '		' → logprob: -6.963846683502197
    9. 'q' → logprob: -7.463846683502197
    10. '    	   ' → logprob: -8.088846206665039

Token 1086: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.031642843037843704
    2. '           ' → logprob: -3.7816429138183594
    3. '   ' → logprob: -5.656642913818359
    4. 'from' → logprob: -6.406642913818359
    5. '	q' → logprob: -6.906642913818359
    6. ' q' → logprob: -7.156642913818359
    7. '       ' → logprob: -7.656642913818359
    8. 'queue' → logprob: -8.15664291381836
    9. '	       ' → logprob: -9.03164291381836
    10. '	   ' → logprob: -9.03164291381836

Token 1087: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.341087570646778e-05
    2. '.append' → logprob: -9.500093460083008
    3. ' =' → logprob: -12.250093460083008
    4. 'from' → logprob: -12.875093460083008
    5. '=q' → logprob: -13.000093460083008
    6. '```' → logprob: -13.250093460083008
    7. '=
' → logprob: -13.625093460083008
    8. 'deque' → logprob: -13.875093460083008
    9. 'append' → logprob: -14.625093460083008
    10. '.' → logprob: -14.875093460083008

Token 1088: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.9361264946837764e-07
    2. ' deque' → logprob: -16.375
    3. 'Deque' → logprob: -21.625
    4. 'collections' → logprob: -21.75
    5. '
' → logprob: -22.375
    6. '```' → logprob: -22.5
    7. 'dq' → logprob: -23.375
    8. 'queue' → logprob: -24.25
    9. 'from' → logprob: -24.75
    10. 'deb' → logprob: -25.125

Token 1089: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.04906214773654938
    2. '()' → logprob: -3.0490622520446777
    3. '([(' → logprob: -7.799062252044678
    4. '[(' → logprob: -10.42406177520752
    5. '((' → logprob: -10.54906177520752
    6. '()
' → logprob: -12.17406177520752
    7. '()\' → logprob: -13.54906177520752
    8. '([' → logprob: -14.67406177520752
    9. '[]
' → logprob: -14.67406177520752
    10. '()

' → logprob: -14.79906177520752

Token 1090: '           ' (ID: 352)
  Prédit: '	q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	q' → logprob: -0.06409328430891037
    2. 'q' → logprob: -2.8140933513641357
    3. '(q' → logprob: -6.564093112945557
    4. ' q' → logprob: -7.689093112945557
    5. '[q' → logprob: -9.064093589782715
    6. '   ' → logprob: -10.314093589782715
    7. '```' → logprob: -10.439093589782715
    8. '		' → logprob: -10.814093589782715
    9. '=q' → logprob: -11.189093589782715
    10. '	       ' → logprob: -11.689093589782715

Token 1091: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.003329806961119175
    2. '	q' → logprob: -5.753329753875732
    3. ' q' → logprob: -8.87833023071289
    4. '		' → logprob: -12.62833023071289
    5. '(q' → logprob: -12.75333023071289
    6. '```' → logprob: -13.00333023071289
    7. '   ' → logprob: -13.50333023071289
    8. '\t' → logprob: -14.37833023071289
    9. '           ' → logprob: -14.50333023071289
    10. '			' → logprob: -15.00333023071289

Token 1092: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.0445127372804563e-05
    2. '.' → logprob: -12.25001049041748
    3. 'append' → logprob: -12.62501049041748
    4. '.enqueue' → logprob: -13.87501049041748
    5. '.p' → logprob: -14.87501049041748
    6. '.extend' → logprob: -15.12501049041748
    7. '.Append' → logprob: -15.37501049041748
    8. '.q' → logprob: -15.75001049041748
    9. '.put' → logprob: -15.87501049041748
    10. ' .' → logprob: -16.250009536743164

Token 1093: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00016074994346126914
    2. '(x' → logprob: -9.125161170959473
    3. '(' → logprob: -9.875161170959473
    4. '[(' → logprob: -16.125160217285156
    5. ' ((' → logprob: -16.250160217285156
    6. '(i' → logprob: -17.000160217285156
    7. '(((' → logprob: -17.625160217285156
    8. '   ' → logprob: -18.000160217285156
    9. '(
' → logprob: -18.125160217285156
    10. '```' → logprob: -18.375160217285156

Token 1094: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0008935939986258745
    2. '(x' → logprob: -7.125893592834473
    3. 'i' → logprob: -9.375893592834473
    4. ' x' → logprob: -13.000893592834473
    5. '(' → logprob: -14.125893592834473
    6. ')x' → logprob: -14.375893592834473
    7. '(i' → logprob: -14.750893592834473
    8. ' (' → logprob: -15.875893592834473
    9. '   ' → logprob: -16.12589454650879
    10. ')' → logprob: -16.25089454650879

Token 1095: ',y' (ID: 16103)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31912073493003845
    2. ',' → logprob: -1.9441207647323608
    3. ',x' → logprob: -2.4441206455230713
    4. ',y' → logprob: -3.1941206455230713
    5. '(x' → logprob: -7.44412088394165
    6. '[x' → logprob: -8.319120407104492
    7. '[' → logprob: -8.444120407104492
    8. ')' → logprob: -8.444120407104492
    9. 'y' → logprob: -8.569120407104492
    10. '<|end|>' → logprob: -8.569120407104492

Token 1096: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02088787406682968
    2. '))
' → logprob: -3.895887851715088
    3. '           ' → logprob: -8.645888328552246
    4. ')' → logprob: -9.145888328552246
    5. '       ' → logprob: -10.770888328552246
    6. '               ' → logprob: -11.145888328552246
    7. '   ' → logprob: -11.645888328552246
    8. ')))' → logprob: -12.270888328552246
    9. '));' → logprob: -12.645888328552246
    10. ')
' → logprob: -12.770888328552246

Token 1097: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4755478501319885
    2. '           ' → logprob: -1.3505477905273438
    3. '       ' → logprob: -2.3505477905273438
    4. 'while' → logprob: -4.350547790527344
    5. '	while' → logprob: -4.975547790527344
    6. ' while' → logprob: -6.350547790527344
    7. '```' → logprob: -6.975547790527344
    8. '
' → logprob: -7.225547790527344
    9. '	       ' → logprob: -8.475547790527344
    10. 'While' → logprob: -9.100547790527344

Token 1098: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3704555928707123
    2. '   ' → logprob: -1.7454556226730347
    3. '           ' → logprob: -2.745455503463745
    4. ' while' → logprob: -2.995455503463745
    5. '	while' → logprob: -4.245455741882324
    6. '       ' → logprob: -5.120455741882324
    7. '
' → logprob: -8.870455741882324
    8. '```' → logprob: -8.995455741882324
    9. '	       ' → logprob: -9.620455741882324
    10. '               ' → logprob: -9.870455741882324

Token 1099: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00023214559769257903
    2. ' q' → logprob: -8.375231742858887
    3. 'len' → logprob: -14.250231742858887
    4. '   ' → logprob: -14.625231742858887
    5. '	q' → logprob: -16.375232696533203
    6. ' ' → logprob: -16.500232696533203
    7. '(q' → logprob: -16.625232696533203
    8. '```' → logprob: -16.875232696533203
    9. '$q' → logprob: -17.750232696533203
    10. '
' → logprob: -17.875232696533203

Token 1100: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07906867563724518
    2. ':' → logprob: -2.579068660736084
    3. '):
' → logprob: -9.954069137573242
    4. ':p' → logprob: -10.079069137573242
    5. '```' → logprob: -10.579069137573242
    6. '       ' → logprob: -11.079069137573242
    7. '   ' → logprob: -11.079069137573242
    8. '.p' → logprob: -12.079069137573242
    9. '           ' → logprob: -12.329069137573242
    10. 'p' → logprob: -12.579069137573242

Token 1101: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007100023794919252
    2. '       ' → logprob: -5.6321001052856445
    3. '   ' → logprob: -7.1321001052856445
    4. '		       ' → logprob: -7.2571001052856445
    5. '			' → logprob: -7.3821001052856445
    6. '	           ' → logprob: -7.8821001052856445
    7. 'x' → logprob: -8.132100105285645
    8. ' x' → logprob: -8.757100105285645
    9. '           ' → logprob: -8.757100105285645
    10. '	       ' → logprob: -9.507100105285645

Token 1102: ' cx' (ID: 44448)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005990774370729923
    2. 'q' → logprob: -6.255990982055664
    3. ' x' → logprob: -6.255990982055664
    4. 'u' → logprob: -7.380990982055664
    5. 'qx' → logprob: -7.755990982055664
    6. '               ' → logprob: -8.130990982055664
    7. 'nx' → logprob: -8.255990982055664
    8. '                   ' → logprob: -9.130990982055664
    9. 'vx' → logprob: -9.505990982055664
    10. 'cx' (adapté à ' cx') → logprob: -9.755990982055664

Token 1103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053435925394296646
    2. ',y' → logprob: -3.053436040878296
    3. ',c' → logprob: -5.928435802459717
    4. ',q' → logprob: -6.303435802459717
    5. ' ,' → logprob: -8.553436279296875
    6. ',x' → logprob: -9.553436279296875
    7. ',n' → logprob: -10.303436279296875
    8. ',w' → logprob: -11.428436279296875
    9. '_,' → logprob: -11.553436279296875
    10. ',d' → logprob: -11.803436279296875

Token 1104: 'cy' (ID: 4523)
  Prédit: 'cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -2.2200749754119897e-06
    2. 'cyj' → logprob: -13.500001907348633
    3. ' cy' → logprob: -15.125001907348633
    4. '.cy' → logprob: -15.250001907348633
    5. 'cych' → logprob: -16.500001907348633
    6. 'qy' → logprob: -16.750001907348633
    7. 'cu' → logprob: -18.250001907348633
    8. 'c' → logprob: -18.500001907348633
    9. 'cur' → logprob: -18.500001907348633
    10. 'ct' → logprob: -18.750001907348633

Token 1105: '=q' (ID: 151306)
  Prédit: '=q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=q' → logprob: -0.002148238942027092
    2. ',q' → logprob: -6.252148151397705
    3. ' =' → logprob: -9.502148628234863
    4. '=' → logprob: -9.502148628234863
    5. ',' → logprob: -11.002148628234863
    6. '   ' → logprob: -11.127148628234863
    7. '=sys' → logprob: -12.002148628234863
    8. ')=' → logprob: -12.127148628234863
    9. '
' → logprob: -12.377148628234863
    10. '[q' → logprob: -12.502148628234863

Token 1106: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -5.1928003813372925e-05
    2. 'opleft' → logprob: -10.375051498413086
    3. 'p' → logprob: -11.125051498413086
    4. '.pop' → logprob: -12.500051498413086
    5. '```' → logprob: -14.625051498413086
    6. '.append' → logprob: -14.750051498413086
    7. '_p' → logprob: -14.875051498413086
    8. ',p' → logprob: -15.625051498413086
    9. ')p' → logprob: -15.875051498413086
    10. '	p' → logprob: -16.000051498413086

Token 1107: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -1.2471589798224159e-05
    2. 'op' → logprob: -11.750012397766113
    3. 'append' → logprob: -12.875012397766113
    4. 'p' → logprob: -14.125012397766113
    5. 'left' → logprob: -14.625012397766113
    6. 'ople' → logprob: -15.000012397766113
    7. 'opped' → logprob: -16.00001335144043
    8. 'opl' → logprob: -16.25001335144043
    9. '```' → logprob: -16.62501335144043
    10. 'opt' → logprob: -16.62501335144043

Token 1108: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2696962058544159
    2. '           ' → logprob: -1.5196962356567383
    3. 'for' → logprob: -4.644696235656738
    4. ')' → logprob: -6.144696235656738
    5. ',' → logprob: -7.019696235656738
    6. ' for' → logprob: -7.144696235656738
    7. '
' → logprob: -7.394696235656738
    8. ')
' → logprob: -7.394696235656738
    9. '                   ' → logprob: -7.394696235656738
    10. '       ' → logprob: -7.644696235656738

Token 1109: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5248588919639587
    2. '           ' → logprob: -0.8998588919639587
    3. '       ' → logprob: -6.7748589515686035
    4. '                   ' → logprob: -8.024858474731445
    5. ' for' → logprob: -8.649858474731445
    6. 'for' → logprob: -9.899858474731445
    7. '                       ' → logprob: -11.899858474731445
    8. '<|end|>' → logprob: -12.024858474731445
    9. '   ' → logprob: -12.399858474731445
    10. '```' → logprob: -12.899858474731445

Token 1110: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0034185550175607204
    2. ' for' → logprob: -6.003418445587158
    3. '               ' → logprob: -7.128418445587158
    4. '                   ' → logprob: -9.128418922424316
    5. '           ' → logprob: -10.753418922424316
    6. '	for' → logprob: -12.003418922424316
    7. '```' → logprob: -13.878418922424316
    8. '                ' → logprob: -14.253418922424316
    9. '	           ' → logprob: -14.503418922424316
    10. '                       ' → logprob: -14.628418922424316

Token 1111: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.006720229052007198
    2. ' dx' → logprob: -5.006720066070557
    3. '(dx' → logprob: -12.506720542907715
    4. '```' → logprob: -14.381720542907715
    5. '_dx' → logprob: -15.381720542907715
    6. 'DX' → logprob: -16.1317195892334
    7. 'd' → logprob: -16.3817195892334
    8. 'nx' → logprob: -17.0067195892334
    9. '.dx' → logprob: -17.1317195892334
    10. ' ' → logprob: -17.1317195892334

Token 1112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.008129963040119e-06
    2. ' ,' → logprob: -12.875003814697266
    3. ',d' → logprob: -14.625003814697266
    4. ',
' → logprob: -14.875003814697266
    5. '_,' → logprob: -15.125003814697266
    6. '0' → logprob: -16.250003814697266
    7. '```' → logprob: -16.875003814697266
    8. ',-' → logprob: -17.000003814697266
    9. '1' → logprob: -17.125003814697266
    10. 'dy' → logprob: -17.375003814697266

Token 1113: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -4.0722858102526516e-05
    2. ' dy' → logprob: -10.125041007995605
    3. '0' → logprob: -15.125041007995605
    4. ',' → logprob: -15.500041007995605
    5. 'd' → logprob: -17.25004005432129
    6. '```' → logprob: -17.75004005432129
    7. '
' → logprob: -18.25004005432129
    8. ' ' → logprob: -18.37504005432129
    9. '.dy' → logprob: -18.37504005432129
    10. '...' → logprob: -19.25004005432129

Token 1114: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04377241060137749
    2. 'in' → logprob: -3.1687724590301514
    3. '```' → logprob: -8.54377269744873
    4. ',' → logprob: -8.66877269744873
    5. ',n' → logprob: -9.04377269744873
    6. ',(' → logprob: -9.29377269744873
    7. '   ' → logprob: -9.91877269744873
    8. '
' → logprob: -10.66877269744873
    9. '           ' → logprob: -10.91877269744873
    10. ',c' → logprob: -11.04377269744873

Token 1115: ' DIR' (ID: 83023)
  Prédit: 'DIR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIR' → logprob: -0.005236598663032055
    2. ' DIR' → logprob: -5.255236625671387
    3. '[' → logprob: -13.380236625671387
    4. '_DIR' → logprob: -15.130236625671387
    5. '(' → logprob: -15.755236625671387
    6. '[(' → logprob: -16.38023567199707
    7. 'dir' → logprob: -16.50523567199707
    8. 'Dir' → logprob: -16.63023567199707
    9. 'D' → logprob: -17.00523567199707
    10. '
' → logprob: -17.13023567199707

Token 1116: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.525762140750885
    2. 'DIR' → logprob: -0.900762140750885
    3. ' DIR' → logprob: -6.52576208114624
    4. '[' → logprob: -7.02576208114624
    5. '[-' → logprob: -9.900762557983398
    6. '_DIR' → logprob: -10.150762557983398
    7. 'IR' → logprob: -10.150762557983398
    8. 's' → logprob: -10.275762557983398
    9. '   ' → logprob: -11.275762557983398
    10. 'IRS' → logprob: -11.400762557983398

Token 1117: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6662765145301819
    2. '                   ' → logprob: -0.9162765145301819
    3. ':' → logprob: -3.291276454925537
    4. '(nx' → logprob: -3.291276454925537
    5. '                       ' → logprob: -5.916276454925537
    6. ',' → logprob: -5.916276454925537
    7. '               ' → logprob: -6.291276454925537
    8. ',
' → logprob: -6.416276454925537
    9. ',n' → logprob: -7.291276454925537
    10. '                           ' → logprob: -7.916276454925537

Token 1118: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020304428413510323
    2. '               ' → logprob: -4.270304203033447
    3. '           ' → logprob: -6.895304203033447
    4. '                       ' → logprob: -7.145304203033447
    5. '```' → logprob: -7.145304203033447
    6. '		           ' → logprob: -7.395304203033447
    7. '	               ' → logprob: -7.520304203033447
    8. '                ' → logprob: -7.520304203033447
    9. '<|end|>' → logprob: -7.520304203033447
    10. '                    ' → logprob: -8.645304679870605

Token 1119: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' (adapté à ' nx') → logprob: -0.053796812891960144
    2. ' nx' → logprob: -3.0537967681884766
    3. '(nx' → logprob: -5.303796768188477
    4. '```' → logprob: -9.553796768188477
    5. '0' → logprob: -9.928796768188477
    6. '1' → logprob: -10.053796768188477
    7. '                   ' → logprob: -10.303796768188477
    8. '                       ' → logprob: -11.428796768188477
    9. 'n' → logprob: -12.303796768188477
    10. '``' → logprob: -13.428796768188477

Token 1120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012928384239785373
    2. ',n' → logprob: -9.625129699707031
    3. ',c' → logprob: -10.000129699707031
    4. '```' → logprob: -12.125129699707031
    5. '=' → logprob: -12.250129699707031
    6. ' ,' → logprob: -12.375129699707031
    7. 'n' → logprob: -13.750129699707031
    8. ',
' → logprob: -14.125129699707031
    9. '_,' → logprob: -15.125129699707031
    10. ',C' → logprob: -15.125129699707031

Token 1121: 'ny' (ID: 3008)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.07299875468015671
    2. 'cy' → logprob: -2.8229987621307373
    3. '0' → logprob: -5.197998523712158
    4. 'nx' → logprob: -5.947998523712158
    5. 'ny' → logprob: -6.322998523712158
    6. 'x' → logprob: -7.322998523712158
    7. ' cx' → logprob: -8.697999000549316
    8. '(cx' → logprob: -9.197999000549316
    9. 'dx' → logprob: -10.447999000549316
    10. 'n' → logprob: -10.947999000549316

Token 1122: '=c' (ID: 43473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6962293386459351
    2. '=c' → logprob: -0.6962293386459351
    3. '=x' → logprob: -6.446229457855225
    4. '=n' → logprob: -6.696229457855225
    5. ' =' → logprob: -9.196228981018066
    6. '=C' → logprob: -9.946228981018066
    7. '=
' → logprob: -10.071228981018066
    8. ',c' → logprob: -10.571228981018066
    9. '=int' → logprob: -11.446228981018066
    10. ',' → logprob: -12.696228981018066

Token 1123: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0016762561863288283
    2. '+' → logprob: -6.626676082611084
    3. '+x' → logprob: -9.251676559448242
    4. 'p' → logprob: -10.501676559448242
    5. '+=' → logprob: -10.626676559448242
    6. ',x' → logprob: -10.626676559448242
    7. '(x' → logprob: -10.876676559448242
    8. '=' → logprob: -11.001676559448242
    9. '(cx' → logprob: -11.001676559448242
    10. '[' → logprob: -11.126676559448242

Token 1124: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013377433642745018
    2. '+x' → logprob: -6.87633752822876
    3. ',n' → logprob: -9.501338005065918
    4. ' +' → logprob: -9.626338005065918
    5. '+d' → logprob: -10.001338005065918
    6. '+n' → logprob: -10.126338005065918
    7. '+,' → logprob: -11.001338005065918
    8. ',' → logprob: -11.376338005065918
    9. '+w' → logprob: -11.376338005065918
    10. ',d' → logprob: -11.876338005065918

Token 1125: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00031186718842945993
    2. ' dx' → logprob: -8.875311851501465
    3. '0' → logprob: -9.000311851501465
    4. '-' → logprob: -10.500311851501465
    5. '(dx' → logprob: -11.875311851501465
    6. 'nx' → logprob: -12.750311851501465
    7. '```' → logprob: -13.000311851501465
    8. '
' → logprob: -13.125311851501465
    9. 'd' → logprob: -13.250311851501465
    10. '1' → logprob: -13.625311851501465

Token 1126: ',' (ID: 11)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.16121281683444977
    2. ',' → logprob: -1.9112128019332886
    3. ',c' → logprob: -7.536212921142578
    4. ',y' → logprob: -7.786212921142578
    5. ' ,' → logprob: -11.911212921142578
    6. ',
' → logprob: -11.911212921142578
    7. ',k' → logprob: -13.036212921142578
    8. ',next' → logprob: -13.286212921142578
    9. ',m' → logprob: -13.411212921142578
    10. '                   ' → logprob: -13.411212921142578

Token 1127: 'cy' (ID: 4523)
  Prédit: 'cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -6.630610641877865e-06
    2. 'ny' → logprob: -12.125006675720215
    3. ' cy' → logprob: -14.000006675720215
    4. 'cn' → logprob: -16.0000057220459
    5. 'cx' → logprob: -16.8750057220459
    6. 'cyj' → logprob: -17.0000057220459
    7. '
' → logprob: -17.8750057220459
    8. 'n' → logprob: -17.8750057220459
    9. 'cych' → logprob: -18.2500057220459
    10. 'c' → logprob: -18.3750057220459

Token 1128: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2753434479236603
    2. 'ny' → logprob: -1.775343418121338
    3. ',n' → logprob: -3.025343418121338
    4. ',y' → logprob: -5.275343418121338
    5. '+' → logprob: -5.650343418121338
    6. 'cy' → logprob: -5.650343418121338
    7. ' ny' → logprob: -5.775343418121338
    8. ''ny' → logprob: -6.525343418121338
    9. 'y' → logprob: -6.900343418121338
    10. '[' → logprob: -7.275343418121338

Token 1129: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -2.7729658540920354e-05
    2. ' dy' → logprob: -10.875027656555176
    3. '1' → logprob: -12.250027656555176
    4. 'ny' → logprob: -12.750027656555176
    5. 'dx' → logprob: -14.750027656555176
    6. 'dym' → logprob: -15.875027656555176
    7. 'd' → logprob: -16.000028610229492
    8. '.dy' → logprob: -16.875028610229492
    9. '0' → logprob: -17.250028610229492
    10. 'nd' → logprob: -17.500028610229492

Token 1130: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011608755216002464
    2. '<|end|>' → logprob: -5.136608600616455
    3. '		           ' → logprob: -6.511608600616455
    4. '           ' → logprob: -6.636608600616455
    5. '                       ' → logprob: -7.761608600616455
    6. '				' → logprob: -7.886608600616455
    7. '               ' → logprob: -8.011609077453613
    8. '                           ' → logprob: -8.136609077453613
    9. '			       ' → logprob: -8.511609077453613
    10. 'if' → logprob: -8.761609077453613

Token 1131: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0029226834885776043
    2. '				' → logprob: -6.502922534942627
    3. '		           ' → logprob: -7.752922534942627
    4. '                       ' → logprob: -8.627923011779785
    5. '	               ' → logprob: -8.877923011779785
    6. '```' → logprob: -8.877923011779785
    7. '               ' → logprob: -9.377923011779785
    8. '			       ' → logprob: -9.377923011779785
    9. '                    ' → logprob: -9.752923011779785
    10. '           ' → logprob: -10.127923011779785

Token 1132: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.257427841424942
    2. '                   ' → logprob: -1.6324278116226196
    3. 'if' (adapté à ' if') → logprob: -3.757427930831909
    4. '                    ' → logprob: -5.88242769241333
    5. ' ' → logprob: -7.25742769241333
    6. '<|end|>' → logprob: -7.38242769241333
    7. '	if' → logprob: -7.63242769241333
    8. '				' → logprob: -7.88242769241333
    9. '```' → logprob: -8.007428169250488
    10. '           ' → logprob: -8.007428169250488

Token 1133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06197250634431839
    2. ' ' → logprob: -2.8119726181030273
    3. ' nx' → logprob: -13.436972618103027
    4. '(' → logprob: -14.061972618103027
    5. ' (' → logprob: -14.436972618103027
    6. 'nx' → logprob: -14.561972618103027
    7. '
' → logprob: -15.186972618103027
    8. ' ' → logprob: -15.186972618103027
    9. '(nx' → logprob: -15.186972618103027
    10. '```' → logprob: -15.311972618103027

Token 1134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007139815716072917
    2. ' ' → logprob: -7.25071382522583
    3. 'nx' → logprob: -13.750714302062988
    4. '   ' → logprob: -14.875714302062988
    5. ' nx' → logprob: -14.875714302062988
    6. '(nx' → logprob: -15.000714302062988
    7. '(' → logprob: -15.125714302062988
    8. '                   ' → logprob: -15.375714302062988
    9. '
' → logprob: -15.563214302062988
    10. '  ' → logprob: -15.875714302062988

Token 1135: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.009586794301867485
    2. '<' → logprob: -4.884586811065674
    3. '<n' → logprob: -7.384586811065674
    4. '<len' → logprob: -7.634586811065674
    5. ' <=' → logprob: -8.134586334228516
    6. '<X' → logprob: -8.634586334228516
    7. '<x' → logprob: -8.634586334228516
    8. ' <' → logprob: -9.384586334228516
    9. '<N' → logprob: -10.759586334228516
    10. '>=' → logprob: -10.884586334228516

Token 1136: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -8.828512363834307e-05
    2. ' nx' → logprob: -9.375088691711426
    3. '(nx' → logprob: -13.250088691711426
    4. 'n' → logprob: -14.250088691711426
    5. 'x' → logprob: -15.125088691711426
    6. 'X' → logprob: -15.625088691711426
    7. '
' → logprob: -15.875088691711426
    8. '```' → logprob: -16.00008773803711
    9. 'Nx' → logprob: -17.12508773803711
    10. '0' → logprob: -17.37508773803711

Token 1137: '<X' (ID: 126345)
  Prédit: '<X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<X' → logprob: -0.0005176475970074534
    2. '<' → logprob: -8.500517845153809
    3. '<n' → logprob: -8.875517845153809
    4. 'X' → logprob: -9.250517845153809
    5. '<len' → logprob: -9.750517845153809
    6. ' <' → logprob: -11.375517845153809
    7. '<x' → logprob: -13.000517845153809
    8. 'nx' → logprob: -13.875517845153809
    9. '<N' → logprob: -13.875517845153809
    10. '
' → logprob: -14.250517845153809

Token 1138: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4741170108318329
    2. 'and' → logprob: -0.9741170406341553
    3. '<' → logprob: -10.849117279052734
    4. '                       ' → logprob: -12.099117279052734
    5. '                   ' → logprob: -12.224117279052734
    6. '```' → logprob: -12.724117279052734
    7. '           ' → logprob: -13.099117279052734
    8. '                     ' → logprob: -14.099117279052734
    9. '               ' → logprob: -14.349117279052734
    10. ' ' → logprob: -14.599117279052734

Token 1139: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00041732576210051775
    2. ' ' → logprob: -7.875417232513428
    3. 'ny' → logprob: -10.375417709350586
    4. ' ny' → logprob: -12.625417709350586
    5. 'nx' → logprob: -13.750417709350586
    6. '
' → logprob: -14.750417709350586
    7. '(nx' → logprob: -15.125417709350586
    8. ' nx' → logprob: -15.500417709350586
    9. '```' → logprob: -15.750417709350586
    10. 'n' → logprob: -16.375417709350586

Token 1140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001341315801255405
    2. 'ny' → logprob: -6.626341342926025
    3. 'nx' → logprob: -11.501340866088867
    4. '
' → logprob: -13.876340866088867
    5. ' ' → logprob: -13.876340866088867
    6. '```' → logprob: -14.376340866088867
    7. '(nx' → logprob: -14.501340866088867
    8. ' ny' → logprob: -14.751340866088867
    9. '<=' → logprob: -15.001340866088867
    10. 'ney' → logprob: -15.501340866088867

Token 1141: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.006275132764130831
    2. '<n' → logprob: -5.131275177001953
    3. '<len' → logprob: -8.506275177001953
    4. '<=' → logprob: -10.631275177001953
    5. '[' → logprob: -10.631275177001953
    6. ' <' → logprob: -10.756275177001953
    7. '<num' → logprob: -10.756275177001953
    8. '<N' → logprob: -11.381275177001953
    9. '<[' → logprob: -11.881275177001953
    10. '<size' → logprob: -11.881275177001953

Token 1142: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.07057749480009079
    2. 'Y' → logprob: -2.695577383041382
    3. 'NY' → logprob: -7.695577621459961
    4. ' ny' → logprob: -8.695577621459961
    5. 'Ny' → logprob: -12.195577621459961
    6. '
' → logprob: -12.195577621459961
    7. ' Y' → logprob: -12.570577621459961
    8. '```' → logprob: -14.320577621459961
    9. 'ney' → logprob: -14.695577621459961
    10. '
' → logprob: -14.695577621459961

Token 1143: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0009698220528662205
    2. '<n' → logprob: -8.000969886779785
    3. '<len' → logprob: -8.625969886779785
    4. ' <' → logprob: -8.875969886779785
    5. '<X' → logprob: -9.125969886779785
    6. '<N' → logprob: -10.500969886779785
    7. '<num' → logprob: -10.625969886779785
    8. 'Y' → logprob: -10.625969886779785
    9. '[Y' → logprob: -10.625969886779785
    10. '<size' → logprob: -10.875969886779785

Token 1144: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -4.36574100604048e-06
    2. ' Y' → logprob: -12.625004768371582
    3. 'ny' → logprob: -14.875004768371582
    4. 'NY' → logprob: -15.125004768371582
    5. '
' → logprob: -16.375003814697266
    6. 'n' → logprob: -16.750003814697266
    7. 'N' → logprob: -17.375003814697266
    8. '```' → logprob: -17.375003814697266
    9. '	Y' → logprob: -17.375003814697266
    10. ',Y' → logprob: -18.000003814697266

Token 1145: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38697659969329834
    2. 'and' → logprob: -1.1369765996932983
    3. '                   ' → logprob: -9.63697624206543
    4. '                       ' → logprob: -11.01197624206543
    5. '```' → logprob: -11.13697624206543
    6. '               ' → logprob: -13.13697624206543
    7. '	and' → logprob: -13.76197624206543
    8. '                    ' → logprob: -13.88697624206543
    9. '                           ' → logprob: -13.88697624206543
    10. '                     ' → logprob: -14.13697624206543

Token 1146: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.020889511331915855
    2. ' and' → logprob: -4.0208892822265625
    3. '                               ' → logprob: -7.1458892822265625
    4. 'and' → logprob: -7.8958892822265625
    5. '                           ' → logprob: -7.8958892822265625
    6. '```' → logprob: -7.8958892822265625
    7. '                        ' → logprob: -8.145889282226562
    8. '<|end|>' → logprob: -8.895889282226562
    9. ' if' → logprob: -9.145889282226562
    10. '                   ' → logprob: -10.020889282226562

Token 1147: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6123701333999634
    2. ' if' → logprob: -0.8623701333999634
    3. 'if' (adapté à ' if') → logprob: -3.862370014190674
    4. '```' → logprob: -4.987370014190674
    5. '                               ' → logprob: -5.237370014190674
    6. '                            ' → logprob: -7.612370014190674
    7. '                       ' → logprob: -7.737370014190674
    8. ' and' → logprob: -8.237370491027832
    9. '#' → logprob: -8.737370491027832
    10. '   ' → logprob: -8.862370491027832

Token 1148: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.42688268423080444
    2. ' map' → logprob: -1.8018827438354492
    3. 'dist' → logprob: -2.051882743835449
    4. 'map' → logprob: -2.926882743835449
    5. ' ' → logprob: -9.55188274383545
    6. '   ' → logprob: -9.55188274383545
    7. '(dist' → logprob: -9.67688274383545
    8. '    ' → logprob: -10.30188274383545
    9. '	dist' → logprob: -10.61438274383545
    10. ' ' → logprob: -10.80188274383545

Token 1149: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.633853652398102e-05
    2. '```' → logprob: -10.625056266784668
    3. '
' → logprob: -11.250056266784668
    4. ' [' → logprob: -12.500056266784668
    5. '[' → logprob: -12.625056266784668
    6. '[
' → logprob: -12.750056266784668
    7. 'nx' → logprob: -13.125056266784668
    8. '(nx' → logprob: -13.750056266784668
    9. '   ' → logprob: -14.000056266784668
    10. 'n' → logprob: -14.250056266784668

Token 1150: 'x' (ID: 87)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.001347138429991901
    2. 'nx' → logprob: -7.126347064971924
    3. '][' → logprob: -8.876347541809082
    4. 'n' → logprob: -8.876347541809082
    5. '(nx' → logprob: -9.001347541809082
    6. '[' → logprob: -9.626347541809082
    7. '```' → logprob: -10.376347541809082
    8. 'x' → logprob: -10.876347541809082
    9. '<n' → logprob: -12.251347541809082
    10. '
' → logprob: -12.376347541809082

Token 1151: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004154737573117018
    2. '[n' → logprob: -5.504154682159424
    3. '[' → logprob: -9.754155158996582
    4. ']' → logprob: -12.129155158996582
    5. '
' → logprob: -12.879155158996582
    6. '>[' → logprob: -13.254155158996582
    7. ''][' → logprob: -13.254155158996582
    8. '```' → logprob: -13.504155158996582
    9. '"][' → logprob: -14.254155158996582
    10. '}[' → logprob: -14.379155158996582

Token 1152: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -5.44312788406387e-05
    2. ' ny' → logprob: -10.375054359436035
    3. 'nx' → logprob: -11.875054359436035
    4. 'n' → logprob: -12.000054359436035
    5. '[' → logprob: -12.500054359436035
    6. 'nyi' → logprob: -13.625054359436035
    7. '```' → logprob: -14.000054359436035
    8. '
' → logprob: -14.375054359436035
    9. ']' → logprob: -14.375054359436035
    10. 'nj' → logprob: -15.125054359436035

Token 1153: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.5776590704917908
    2. '==-' → logprob: -0.8276590704917908
    3. '==' → logprob: -6.4526591300964355
    4. '```' → logprob: -9.327658653259277
    5. ' ==' → logprob: -10.827658653259277
    6. '==
' → logprob: -11.577658653259277
    7. ')==' → logprob: -11.827658653259277
    8. ']' → logprob: -12.077658653259277
    9. '']==' → logprob: -12.077658653259277
    10. ']=='' → logprob: -13.202658653259277

Token 1154: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.5776860184123507e-06
    2. ' -' → logprob: -12.87500286102295
    3. '1' → logprob: -19.000001907348633
    4. '   ' → logprob: -21.625001907348633
    5. '```' → logprob: -22.250001907348633
    6. '−' → logprob: -22.375001907348633
    7. '
' → logprob: -22.875001907348633
    8. ' ' → logprob: -23.000001907348633
    9. '	' → logprob: -24.625001907348633
    10. '  ' → logprob: -25.000001907348633

Token 1155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '-' → logprob: -13.750001907348633
    3. '```' → logprob: -14.375001907348633
    4. ' ' → logprob: -15.750001907348633
    5. '2' → logprob: -16.750001907348633
    6. '
' → logprob: -17.000001907348633
    7. '...' → logprob: -17.437501907348633
    8. ',' → logprob: -17.562501907348633
    9. '<|end|>' → logprob: -18.187501907348633
    10. ' -' → logprob: -18.187501907348633

Token 1156: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006799917668104172
    2. 'and' → logprob: -5.006799697875977
    3. '                           ' → logprob: -10.506799697875977
    4. '<|end|>' → logprob: -10.631799697875977
    5. '	and' → logprob: -11.006799697875977
    6. '                       ' → logprob: -11.756799697875977
    7. '                            ' → logprob: -13.381799697875977
    8. ' ' → logprob: -13.631799697875977
    9. '                               ' → logprob: -13.631799697875977
    10. '                        ' → logprob: -14.131799697875977

Token 1157: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.049147605895996094
    2. ' map' → logprob: -3.174147605895996
    3. '(map' → logprob: -5.299147605895996
    4. ' (' → logprob: -6.799147605895996
    5. '(' → logprob: -12.549147605895996
    6. '	map' → logprob: -12.799147605895996
    7. '(m' → logprob: -12.924147605895996
    8. '   ' → logprob: -13.174147605895996
    9. ' ' → logprob: -13.486647605895996
    10. '
' → logprob: -13.611647605895996

Token 1158: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.3425219549390022e-05
    2. '[n' → logprob: -11.62501335144043
    3. '[x' → logprob: -13.12501335144043
    4. '```' → logprob: -13.25001335144043
    5. 'nx' → logprob: -15.50001335144043
    6. '[c' → logprob: -15.75001335144043
    7. '[' → logprob: -16.25001335144043
    8. '(nx' → logprob: -16.37501335144043
    9. '_c' → logprob: -16.62501335144043
    10. 'cx' → logprob: -17.50001335144043

Token 1159: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.1160349458805285e-05
    2. '[' → logprob: -12.125011444091797
    3. '```' → logprob: -12.500011444091797
    4. '[
' → logprob: -14.750011444091797
    5. '\[' → logprob: -15.375011444091797
    6. '][' → logprob: -15.625011444091797
    7. ' [' → logprob: -15.875011444091797
    8. '(nx' → logprob: -15.875011444091797
    9. '[[' → logprob: -16.125011444091797
    10. 'n' → logprob: -16.375011444091797

Token 1160: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.527232825756073
    2. 'nx' → logprob: -1.0272328853607178
    3. '[n' → logprob: -3.0272328853607178
    4. 'n' → logprob: -6.152232646942139
    5. '(nx' → logprob: -7.027232646942139
    6. ' nx' → logprob: -8.402233123779297
    7. 'xn' → logprob: -11.152233123779297
    8. '
' → logprob: -11.402233123779297
    9. '```' → logprob: -11.527233123779297
    10. '[x' → logprob: -12.027233123779297

Token 1161: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.07263687998056412
    2. '][' → logprob: -2.822636842727661
    3. 'nx' → logprob: -4.69763708114624
    4. '(nx' → logprob: -7.44763708114624
    5. 'n' → logprob: -7.57263708114624
    6. '```' → logprob: -8.572636604309082
    7. 'x' → logprob: -9.822636604309082
    8. '[x' → logprob: -9.947636604309082
    9. ''][' → logprob: -10.822636604309082
    10. '[' → logprob: -10.947636604309082

Token 1162: 'ny' (ID: 3008)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0645689070224762
    2. 'ny' → logprob: -3.1895689964294434
    3. '[n' → logprob: -4.189568996429443
    4. 'n' → logprob: -5.689568996429443
    5. '(nx' → logprob: -6.064568996429443
    6. 'nz' → logprob: -9.189568519592285
    7. '```' → logprob: -9.439568519592285
    8. 'nj' → logprob: -10.064568519592285
    9. '[' → logprob: -10.189568519592285
    10. 'nc' → logprob: -10.314568519592285

Token 1163: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.022961482405662537
    2. ']=='' → logprob: -3.897961378097534
    3. '==' → logprob: -6.272961616516113
    4. ']' → logprob: -8.147961616516113
    5. ']!='' → logprob: -9.022961616516113
    6. '=='' → logprob: -10.522961616516113
    7. '']==' → logprob: -10.772961616516113
    8. '```' → logprob: -10.772961616516113
    9. ']!=' → logprob: -11.397961616516113
    10. '']=='' → logprob: -11.397961616516113

Token 1164: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -4.723352049040841e-06
    2. ' '.'' → logprob: -13.250004768371582
    3. '('.')' → logprob: -14.250004768371582
    4. ''' → logprob: -14.625004768371582
    5. '".' → logprob: -15.125004768371582
    6. '"."' → logprob: -15.125004768371582
    7. '.' → logprob: -15.250004768371582
    8. '('.' → logprob: -15.375004768371582
    9. '','' → logprob: -16.125003814697266
    10. ''#' → logprob: -16.125003814697266

Token 1165: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5859796404838562
    2. ':
' → logprob: -0.9609796404838562
    3. ' or' → logprob: -4.210979461669922
    4. '                       ' → logprob: -4.460979461669922
    5. ' and' → logprob: -4.585979461669922
    6. '                           ' → logprob: -5.085979461669922
    7. '               ' → logprob: -5.335979461669922
    8. '<|end|>' → logprob: -5.585979461669922
    9. '```' → logprob: -6.085979461669922
    10. '):
' → logprob: -6.460979461669922

Token 1166: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.07099231332540512
    2. '                               ' → logprob: -3.6959922313690186
    3. '                       ' → logprob: -4.070992469787598
    4. '```' → logprob: -4.320992469787598
    5. '<|end|>' → logprob: -5.570992469787598
    6. ':' → logprob: -5.570992469787598
    7. '                            ' → logprob: -6.570992469787598
    8. '               ' → logprob: -6.945992469787598
    9. ':
' → logprob: -7.445992469787598
    10. '                            
' → logprob: -7.945992469787598

Token 1167: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0031464621424674988
    2. ' dist' → logprob: -5.878146648406982
    3. '                               ' → logprob: -8.253146171569824
    4. '                           ' → logprob: -9.503146171569824
    5. '```' → logprob: -13.128146171569824
    6. '                                   ' → logprob: -13.628146171569824
    7. '                            ' → logprob: -14.253146171569824
    8. '                             ' → logprob: -14.628146171569824
    9. '                                       ' → logprob: -14.753146171569824
    10. '                       ' → logprob: -14.878146171569824

Token 1168: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.0339031834737398e-05
    2. '
' → logprob: -11.125020027160645
    3. '```' → logprob: -12.875020027160645
    4. 'nx' → logprob: -14.375020027160645
    5. '[
' → logprob: -14.625020027160645
    6. '=' → logprob: -15.000020027160645
    7. '[' → logprob: -15.250020027160645
    8. '(nx' → logprob: -15.375020027160645
    9. '   ' → logprob: -15.500020027160645
    10. ' [' → logprob: -15.875020027160645

Token 1169: 'x' (ID: 87)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0006583464564755559
    2. 'nx' → logprob: -7.5006585121154785
    3. 'n' → logprob: -9.87565803527832
    4. '[' → logprob: -10.75065803527832
    5. '(nx' → logprob: -11.50065803527832
    6. '[
' → logprob: -11.75065803527832
    7. '
' → logprob: -12.25065803527832
    8. '```' → logprob: -13.00065803527832
    9. '	n' → logprob: -13.50065803527832
    10. ',n' → logprob: -13.87565803527832

Token 1170: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0004055282333865762
    2. '][' → logprob: -8.375405311584473
    3. '[' → logprob: -9.375405311584473
    4. '
' → logprob: -10.125405311584473
    5. '```' → logprob: -11.125405311584473
    6. '[
' → logprob: -11.250405311584473
    7. '(nx' → logprob: -12.625405311584473
    8. 'nx' → logprob: -13.000405311584473
    9. '[][' → logprob: -13.250405311584473
    10. ' [' → logprob: -13.500405311584473

Token 1171: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.006506470963358879
    2. 'nx' → logprob: -5.256506443023682
    3. '[' → logprob: -7.756506443023682
    4. '
' → logprob: -8.25650691986084
    5. '[n' → logprob: -9.13150691986084
    6. ' ny' → logprob: -9.50650691986084
    7. 'n' → logprob: -9.75650691986084
    8. '```' → logprob: -10.00650691986084
    9. '1' → logprob: -10.13150691986084
    10. '0' → logprob: -10.25650691986084

Token 1172: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.019083455204963684
    2. '=' → logprob: -4.019083499908447
    3. ')=' → logprob: -7.769083499908447
    4. '=n' → logprob: -8.019083023071289
    5. ']+=' → logprob: -10.144083023071289
    6. ']' → logprob: -10.394083023071289
    7. '[n' → logprob: -10.519083023071289
    8. '=x' → logprob: -11.019083023071289
    9. '```' → logprob: -11.269083023071289
    10. '=q' → logprob: -11.644083023071289

Token 1173: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -7.226628895296017e-06
    2. ' dist' → logprob: -11.875007629394531
    3. '	dist' → logprob: -15.625007629394531
    4. '   ' → logprob: -16.50000762939453
    5. '                           ' → logprob: -16.87500762939453
    6. '                   ' → logprob: -18.00000762939453
    7. '               ' → logprob: -18.25000762939453
    8. '(dist' → logprob: -18.62500762939453
    9. '                               ' → logprob: -18.75000762939453
    10. '```' → logprob: -18.87500762939453

Token 1174: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0010575797641649842
    2. '[n' → logprob: -6.8760576248168945
    3. '[x' → logprob: -11.751057624816895
    4. '[' → logprob: -12.126057624816895
    5. 'cx' → logprob: -12.751057624816895
    6. '(cx' → logprob: -13.001057624816895
    7. '
' → logprob: -13.626057624816895
    8. '```' → logprob: -14.001057624816895
    9. '[
' → logprob: -14.251057624816895
    10. '   ' → logprob: -14.376057624816895

Token 1175: 'x' (ID: 87)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0513615682721138
    2. '[n' → logprob: -3.051361560821533
    3. 'cx' → logprob: -7.176361560821533
    4. '[x' → logprob: -7.301361560821533
    5. '[' → logprob: -7.926361560821533
    6. '[i' → logprob: -8.301362037658691
    7. 'x' → logprob: -8.301362037658691
    8. 'nx' → logprob: -8.551362037658691
    9. '(cx' → logprob: -9.176362037658691
    10. 'i' → logprob: -10.301362037658691

Token 1176: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.003210865193977952
    2. '[c' → logprob: -6.12821102142334
    3. '][' → logprob: -7.00321102142334
    4. '
' → logprob: -10.12821102142334
    5. '[' → logprob: -10.62821102142334
    6. '```' → logprob: -10.87821102142334
    7. '   ' → logprob: -11.75321102142334
    8. 'nx' → logprob: -12.75321102142334
    9. '}[' → logprob: -12.75321102142334
    10. '[x' → logprob: -13.00321102142334

Token 1177: 'cy' (ID: 4523)
  Prédit: 'cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.00018458699923940003
    2. 'ny' → logprob: -9.125185012817383
    3. '
' → logprob: -10.500185012817383
    4. '1' → logprob: -11.125185012817383
    5. '0' → logprob: -11.750185012817383
    6. '[' → logprob: -12.000185012817383
    7. 'dist' → logprob: -12.375185012817383
    8. 'y' → logprob: -12.500185012817383
    9. 'cn' → logprob: -12.750185012817383
    10. '```' → logprob: -13.875185012817383

Token 1178: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1130552738904953
    2. ']+' → logprob: -2.2380552291870117
    3. ' +' → logprob: -8.863055229187012
    4. ']' → logprob: -9.988055229187012
    5. '}+' → logprob: -11.113055229187012
    6. '```' → logprob: -12.113055229187012
    7. '[' → logprob: -12.238055229187012
    8. ')+' → logprob: -12.363055229187012
    9. '+t' → logprob: -12.863055229187012
    10. '+n' → logprob: -12.988055229187012

Token 1179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -16.750019073486328
    4. '
' → logprob: -18.875019073486328
    5. '   ' → logprob: -19.500019073486328
    6. '`' → logprob: -19.875019073486328
    7. '[' → logprob: -20.000019073486328
    8. '+' → logprob: -20.312519073486328
    9. '<|end|>' → logprob: -20.312519073486328
    10. '0' → logprob: -20.437519073486328

Token 1180: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.010276809334754944
    2. '<|end|>' → logprob: -6.010276794433594
    3. '                               ' → logprob: -6.260276794433594
    4. '```' → logprob: -6.510276794433594
    5. '						' → logprob: -6.760276794433594
    6. '                            ' → logprob: -7.135276794433594
    7. 'q' → logprob: -7.260276794433594
    8. '
' → logprob: -7.760276794433594
    9. '                            
' → logprob: -7.760276794433594
    10. ' q' → logprob: -8.635276794433594

Token 1181: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0030415281653404236
    2. '```' → logprob: -6.503041744232178
    3. '<|end|>' → logprob: -7.628041744232178
    4. '
' → logprob: -8.37804126739502
    5. '                               ' → logprob: -8.50304126739502
    6. '                            ' → logprob: -8.62804126739502
    7. '						' → logprob: -8.87804126739502
    8. '                            
' → logprob: -9.00304126739502
    9. '               ' → logprob: -10.37804126739502
    10. '                   ' → logprob: -10.50304126739502

Token 1182: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.00031699295504949987
    2. ' q' → logprob: -8.250316619873047
    3. '```' → logprob: -10.750316619873047
    4. '                           ' → logprob: -11.000316619873047
    5. '                                   ' → logprob: -11.625316619873047
    6. '                               ' → logprob: -12.375316619873047
    7. '	q' → logprob: -13.625316619873047
    8. '``' → logprob: -14.250316619873047
    9. '                            ' → logprob: -14.375316619873047
    10. '#' → logprob: -15.375316619873047

Token 1183: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00043233807082287967
    2. 'append' → logprob: -7.75043249130249
    3. '.' → logprob: -14.000432014465332
    4. '```' → logprob: -15.375432014465332
    5. '.extend' → logprob: -15.500432014465332
    6. 'app' → logprob: -16.00043296813965
    7. '           ' → logprob: -16.25043296813965
    8. 'p' → logprob: -17.00043296813965
    9. '.p' → logprob: -17.37543296813965
    10. ' append' → logprob: -17.75043296813965

Token 1184: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0006714478367939591
    2. '(nx' → logprob: -7.62567138671875
    3. '(' → logprob: -8.62567138671875
    4. '(n' → logprob: -13.62567138671875
    5. '(((' → logprob: -13.62567138671875
    6. ' ((' → logprob: -14.12567138671875
    7. '(
' → logprob: -15.12567138671875
    8. ')((' → logprob: -16.00067138671875
    9. '```' → logprob: -16.87567138671875
    10. '[(' → logprob: -16.87567138671875

Token 1185: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00462688785046339
    2. '(nx' → logprob: -5.379626750946045
    3. ' nx' → logprob: -12.379627227783203
    4. '
' → logprob: -13.754627227783203
    5. '```' → logprob: -15.129627227783203
    6. '(n' → logprob: -15.254627227783203
    7. '(' → logprob: -15.379627227783203
    8. ')' → logprob: -15.504627227783203
    9. '   ' → logprob: -15.879627227783203
    10. 'n' → logprob: -16.504627227783203

Token 1186: ',' (ID: 11)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.27162081003189087
    2. 'nx' → logprob: -1.896620750427246
    3. ',' → logprob: -2.521620750427246
    4. ',n' → logprob: -5.396620750427246
    5. '(nx' → logprob: -6.521620750427246
    6. '
' → logprob: -8.146620750427246
    7. ',
' → logprob: -8.396620750427246
    8. '[n' → logprob: -8.646620750427246
    9. '(n' → logprob: -8.896620750427246
    10. 'n' → logprob: -9.146620750427246

Token 1187: 'ny' (ID: 3008)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.386913925409317
    2. 'ny' → logprob: -1.1369138956069946
    3. 'ay' → logprob: -11.011914253234863
    4. 'dy' → logprob: -11.886914253234863
    5. '
' → logprob: -12.136914253234863
    6. '```' → logprob: -12.761914253234863
    7. ' ny' → logprob: -13.261914253234863
    8. ',' → logprob: -13.636914253234863
    9. '   ' → logprob: -13.761914253234863
    10. 'cn' → logprob: -13.886914253234863

Token 1188: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003134168218821287
    2. ')
' → logprob: -8.875313758850098
    3. '                           ' → logprob: -9.000313758850098
    4. '               ' → logprob: -10.875313758850098
    5. '))' → logprob: -11.625313758850098
    6. '                   ' → logprob: -12.000313758850098
    7. '                       ' → logprob: -12.125313758850098
    8. '           ' → logprob: -12.125313758850098
    9. '                               ' → logprob: -14.125313758850098
    10. ' )' → logprob: -14.250313758850098

Token 1189: '           ' (ID: 352)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.07767612487077713
    2. '                               ' → logprob: -3.3276760578155518
    3. '<|end|>' → logprob: -4.077676296234131
    4. '                            ' → logprob: -5.077676296234131
    5. '```' → logprob: -5.327676296234131
    6. '               ' → logprob: -6.327676296234131
    7. '                            
' → logprob: -6.452676296234131
    8. '                       ' → logprob: -6.577676296234131
    9. '                   ' → logprob: -6.827676296234131
    10. '                             ' → logprob: -7.202676296234131

Token 1190: ' for' (ID: 395)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -1.2968430519104004
    2. '       ' → logprob: -1.4218430519104004
    3. 'for' (adapté à ' for') → logprob: -1.5468430519104004
    4. '           ' → logprob: -1.7968430519104004
    5. ' for' → logprob: -2.6718430519104004
    6. '<|end|>' → logprob: -4.4218430519104
    7. '                           ' → logprob: -5.6718430519104
    8. '	       ' → logprob: -5.6718430519104
    9. '```' → logprob: -5.6718430519104
    10. '   ' → logprob: -5.7968430519104

Token 1191: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10021141171455383
    2. ' j' → logprob: -2.3502113819122314
    3. 'k' → logprob: -13.600211143493652
    4. '   ' → logprob: -14.350211143493652
    5. '	j' → logprob: -14.350211143493652
    6. '_j' → logprob: -14.350211143493652
    7. ' ' → logprob: -14.850211143493652
    8. '```' → logprob: -15.100211143493652
    9. 'i' → logprob: -15.350211143493652
    10. 'idx' → logprob: -15.850211143493652

Token 1192: ',(' (ID: 27243)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5865573883056641
    2. ' in' → logprob: -0.8365573883056641
    3. ',(' → logprob: -4.961557388305664
    4. ',' → logprob: -5.711557388305664
    5. ',i' → logprob: -9.711557388305664
    6. ' ,' → logprob: -9.711557388305664
    7. 'i' → logprob: -10.336557388305664
    8. '),(' → logprob: -10.836557388305664
    9. ',in' → logprob: -11.336557388305664
    10. '```' → logprob: -11.461557388305664

Token 1193: 'tx' (ID: 6874)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.5337238311767578
    2. 'ax' → logprob: -1.0337238311767578
    3. 'jx' → logprob: -3.783723831176758
    4. 'tx' → logprob: -4.033723831176758
    5. 'xx' → logprob: -4.283723831176758
    6. 'ox' → logprob: -6.783723831176758
    7. 'nx' → logprob: -7.408723831176758
    8. 'ix' → logprob: -7.658723831176758
    9. 'x' → logprob: -8.033723831176758
    10. 'ux' → logprob: -8.283723831176758

Token 1194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3031073212623596
    2. ',x' → logprob: -1.5531072616577148
    3. 'x' → logprob: -3.053107261657715
    4. ',t' → logprob: -6.803107261657715
    5. ',j' → logprob: -7.053107261657715
    6. ',w' → logprob: -8.178107261657715
    7. ' ,' → logprob: -8.678107261657715
    8. '_x' → logprob: -9.428107261657715
    9. 'tx' → logprob: -10.303107261657715
    10. ',tp' → logprob: -10.928107261657715

Token 1195: 'ty' (ID: 1206)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.4647617042064667
    2. 'x' → logprob: -1.089761734008789
    3. 'ax' → logprob: -4.089761734008789
    4. 'px' → logprob: -5.089761734008789
    5. ',' → logprob: -5.589761734008789
    6. 'jx' → logprob: -5.964761734008789
    7. 'ix' → logprob: -6.964761734008789
    8. 'j' → logprob: -7.339761734008789
    9. 'xx' → logprob: -7.589761734008789
    10. '_,' → logprob: -7.714761734008789

Token 1196: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.227250610711053e-05
    2. ' )' → logprob: -10.125041961669922
    3. '
' → logprob: -14.500041961669922
    4. ')
' → logprob: -14.625041961669922
    5. 'in' → logprob: -14.750041961669922
    6. '   ' → logprob: -15.125041961669922
    7. ')i' → logprob: -16.875041961669922
    8. ' in' → logprob: -16.875041961669922
    9. ',)' → logprob: -17.000041961669922
    10. '),' → logprob: -17.250041961669922

Token 1197: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055877409875392914
    2. ' in' → logprob: -3.305877447128296
    3. 'in' → logprob: -4.055877208709717
    4. ' )' → logprob: -8.680877685546875
    5. '):
' → logprob: -9.805877685546875
    6. '
' → logprob: -10.430877685546875
    7. ' ' → logprob: -11.180877685546875
    8. '   ' → logprob: -11.305877685546875
    9. ')=' → logprob: -11.305877685546875
    10. '),' → logprob: -11.805877685546875

Token 1198: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0009736365755088627
    2. ' enumerate' → logprob: -7.000973701477051
    3. '[(' → logprob: -10.12597370147705
    4. 'ais' → logprob: -11.25097370147705
    5. '```' → logprob: -13.25097370147705
    6. 'ase' → logprob: -13.75097370147705
    7. ')' → logprob: -13.87597370147705
    8. 'range' → logprob: -14.12597370147705
    9. 'air' → logprob: -14.25097370147705
    10. 'enqueue' → logprob: -14.37597370147705

Token 1199: '(' (ID: 7)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.03009016439318657
    2. '(' → logprob: -3.530090093612671
    3. 'ail' → logprob: -8.78009033203125
    4. 'ase' → logprob: -9.53009033203125
    5. ')' → logprob: -10.15509033203125
    6. 'air' → logprob: -11.03009033203125
    7. ' aisle' → logprob: -11.65509033203125
    8. 'aisi' → logprob: -11.90509033203125
    9. 'ait' → logprob: -12.40509033203125
    10. '[' → logprob: -12.65509033203125

Token 1200: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -8.77627644513268e-06
    2. 'ail' → logprob: -12.000008583068848
    3. ')' → logprob: -14.000008583068848
    4. 'ase' → logprob: -14.500008583068848
    5. ' aisle' → logprob: -14.750008583068848
    6. '[' → logprob: -14.875008583068848
    7. '(' → logprob: -16.250009536743164
    8. '   ' → logprob: -16.875009536743164
    9. 'ait' → logprob: -17.000009536743164
    10. 'aisi' → logprob: -17.000009536743164

Token 1201: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.00017231269157491624
    2. 'lee' → logprob: -9.00017261505127
    3. 'l' → logprob: -11.25017261505127
    4. 'ле' → logprob: -12.37517261505127
    5. 'tle' → logprob: -12.50017261505127
    6. '_le' → logprob: -12.75017261505127
    7. '[(' → logprob: -12.87517261505127
    8. 'ile' → logprob: -13.12517261505127
    9. 'lea' → logprob: -13.12517261505127
    10. 'lei' → logprob: -13.12517261505127

Token 1202: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -2.7252845029579476e-05
    2. 'points' → logprob: -11.500027656555176
    3. '_POINTS' → logprob: -12.250027656555176
    4. ')_' → logprob: -12.375027656555176
    5. '_tokens' → logprob: -12.500027656555176
    6. ')' → logprob: -13.375027656555176
    7. 's' → logprob: -13.875027656555176
    8. 'Points' → logprob: -14.750027656555176
    9. 'oints' → logprob: -15.125027656555176
    10. '_positions' → logprob: -15.250027656555176

Token 1203: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0016833937261253595
    2. '               ' → logprob: -7.126683235168457
    3. '):' → logprob: -8.126683235168457
    4. '           ' → logprob: -8.251683235168457
    5. '                   ' → logprob: -9.001683235168457
    6. '                       ' → logprob: -9.751683235168457
    7. ':
' → logprob: -9.876683235168457
    8. '       ' → logprob: -10.501683235168457
    9. '):
' → logprob: -10.876683235168457
    10. '          ' → logprob: -12.126683235168457

Token 1204: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007247024914249778
    2. '                   ' → logprob: -8.750724792480469
    3. '                               ' → logprob: -8.750724792480469
    4. '```' → logprob: -9.000724792480469
    5. '                       ' → logprob: -9.500724792480469
    6. '           ' → logprob: -10.500724792480469
    7. '<|end|>' → logprob: -10.500724792480469
    8. '                                       ' → logprob: -10.625724792480469
    9. '                
' → logprob: -10.750724792480469
    10. '                           ' → logprob: -11.250724792480469

Token 1205: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2711189091205597
    2. ' adj' → logprob: -2.0211188793182373
    3. 'adj' → logprob: -2.3961188793182373
    4. ' if' → logprob: -4.771119117736816
    5. '                       ' → logprob: -6.021119117736816
    6. 'if' (adapté à ' if') → logprob: -6.021119117736816
    7. '               ' → logprob: -8.146119117736816
    8. '                           ' → logprob: -8.896119117736816
    9. '                               ' → logprob: -10.896119117736816
    10. '                    
' → logprob: -11.271119117736816

Token 1206: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02054831013083458
    2. ' dist' → logprob: -3.8955483436584473
    3. '	dist' → logprob: -12.770547866821289
    4. '0' → logprob: -13.520547866821289
    5. '(dist' → logprob: -14.270547866821289
    6. '   ' → logprob: -14.395547866821289
    7. '```' → logprob: -15.520547866821289
    8. 'nx' → logprob: -15.520547866821289
    9. ' ' → logprob: -15.770547866821289
    10. 'Dist' → logprob: -16.27054786682129

Token 1207: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.3676733690081164e-05
    2. 'tx' → logprob: -11.37502384185791
    3. '[n' → logprob: -13.00002384185791
    4. ' [' → logprob: -13.25002384185791
    5. '(tx' → logprob: -13.37502384185791
    6. '[
' → logprob: -14.00002384185791
    7. '
' → logprob: -14.00002384185791
    8. '```' → logprob: -14.12502384185791
    9. '][' → logprob: -14.62502384185791
    10. '=' → logprob: -14.75002384185791

Token 1208: 'tx' (ID: 6874)
  Prédit: 'tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -6.897412822581828e-05
    2. '[' → logprob: -9.625068664550781
    3. ' tx' → logprob: -13.500068664550781
    4. '(tx' → logprob: -14.750068664550781
    5. '][' → logprob: -15.250068664550781
    6. '               ' → logprob: -15.625068664550781
    7. '	tx' → logprob: -15.750068664550781
    8. 'tp' → logprob: -15.875068664550781
    9. ']' → logprob: -16.12506866455078
    10. '   ' → logprob: -16.37506866455078

Token 1209: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008663260377943516
    2. '[' → logprob: -4.758663177490234
    3. ']' → logprob: -11.008663177490234
    4. '               ' → logprob: -11.883663177490234
    5. ''][' → logprob: -12.008663177490234
    6. '"][' → logprob: -12.508663177490234
    7. ' ][' → logprob: -12.758663177490234
    8. 'tx' → logprob: -13.258663177490234
    9. ']][' → logprob: -13.383663177490234
    10. '           ' → logprob: -13.383663177490234

Token 1210: 'ty' (ID: 1206)
  Prédit: 'ty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ty' → logprob: -2.2200749754119897e-06
    2. ' ty' → logprob: -13.250001907348633
    3. '[' → logprob: -16.125001907348633
    4. '][' → logprob: -16.375001907348633
    5. ']' → logprob: -17.000001907348633
    6. '.ty' → logprob: -17.375001907348633
    7. '
' → logprob: -17.875001907348633
    8. '...' → logprob: -18.375001907348633
    9. 'tyw' → logprob: -18.375001907348633
    10. '0' → logprob: -18.375001907348633

Token 1211: ']>=' (ID: 185954)
  Prédit: ']!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.41278207302093506
    2. ']>=' → logprob: -1.162782073020935
    3. '!=-' → logprob: -4.537782192230225
    4. ']' → logprob: -5.162782192230225
    5. ']==' → logprob: -5.537782192230225
    6. ']>' → logprob: -5.662782192230225
    7. '>=' → logprob: -7.037782192230225
    8. '!=' → logprob: -7.537782192230225
    9. '[' → logprob: -9.287781715393066
    10. ')!=' → logprob: -9.912781715393066

Token 1212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '                       ' → logprob: -16.625036239624023
    4. '<|end|>' → logprob: -16.875036239624023
    5. '1' → logprob: -17.250036239624023
    6. '                   ' → logprob: -17.375036239624023
    7. '   ' → logprob: -17.500036239624023
    8. '               ' → logprob: -17.500036239624023
    9. '                           ' → logprob: -17.750036239624023
    10. '
' → logprob: -18.750036239624023

Token 1213: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19362513720989227
    2. ' and' → logprob: -1.9436250925064087
    3. '                       ' → logprob: -4.443624973297119
    4. ':
' → logprob: -4.568624973297119
    5. 'and' → logprob: -5.318624973297119
    6. '               ' → logprob: -5.943624973297119
    7. ':' → logprob: -6.318624973297119
    8. '                           ' → logprob: -7.818624973297119
    9. '[' → logprob: -7.943624973297119
    10. '```' → logprob: -9.068625450134277

Token 1214: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0084352632984519
    2. '                       ' → logprob: -5.258435249328613
    3. ' adj' → logprob: -6.258435249328613
    4. 'adj' → logprob: -7.508435249328613
    5. '                           ' → logprob: -7.633435249328613
    6. '               ' → logprob: -9.758435249328613
    7. '```' → logprob: -9.758435249328613
    8. '                               ' → logprob: -10.383435249328613
    9. ' and' → logprob: -11.008435249328613
    10. '<|end|>' → logprob: -11.383435249328613

Token 1215: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.07898177206516266
    2. ' adj' → logprob: -2.578981876373291
    3. '                       ' → logprob: -9.703981399536133
    4. '                   ' → logprob: -10.453981399536133
    5. 'ad' → logprob: -14.703981399536133
    6. '               ' → logprob: -15.078981399536133
    7. '(adj' → logprob: -15.203981399536133
    8. '```' → logprob: -15.203981399536133
    9. '   ' → logprob: -15.328981399536133
    10. '                           ' → logprob: -15.578981399536133

Token 1216: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6047699318733066e-05
    2. '[' → logprob: -11.750016212463379
    3. '][' → logprob: -12.500016212463379
    4. '[j' → logprob: -13.375016212463379
    5. 'i' → logprob: -13.500016212463379
    6. '[I' → logprob: -15.000016212463379
    7. '```' → logprob: -15.500016212463379
    8. ')[' → logprob: -16.000015258789062
    9. ' [' → logprob: -16.000015258789062
    10. '[
' → logprob: -16.250015258789062

Token 1217: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07735543698072433
    2. '[j' → logprob: -2.95235538482666
    3. '[i' → logprob: -3.82735538482666
    4. '[' → logprob: -7.82735538482666
    5. ']' → logprob: -11.82735538482666
    6. ')[' → logprob: -12.07735538482666
    7. '[I' → logprob: -12.07735538482666
    8. '```' → logprob: -12.07735538482666
    9. 'j' → logprob: -12.32735538482666
    10. ' ][' → logprob: -12.32735538482666

Token 1218: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.650518920039758e-06
    2. '][' → logprob: -13.375003814697266
    3. ']' → logprob: -14.000003814697266
    4. ' j' → logprob: -14.250003814697266
    5. 'i' → logprob: -15.875003814697266
    6. '```' → logprob: -16.125003814697266
    7. '[j' → logprob: -16.500003814697266
    8. '	j' → logprob: -16.750003814697266
    9. ':j' → logprob: -17.625003814697266
    10. ',j' → logprob: -18.000003814697266

Token 1219: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.008670591749250889
    2. '=' → logprob: -4.758670806884766
    3. ']' → logprob: -10.133670806884766
    4. ')=' → logprob: -12.258670806884766
    5. '"]=' → logprob: -13.383670806884766
    6. ']+=' → logprob: -13.508670806884766
    7. '=min' → logprob: -13.508670806884766
    8. '```' → logprob: -13.633670806884766
    9. '']=' → logprob: -13.758670806884766
    10. ']=(' → logprob: -14.258670806884766

Token 1220: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.842555426876061e-06
    2. ' dist' → logprob: -12.250004768371582
    3. '	dist' → logprob: -17.3750057220459
    4. '   ' → logprob: -19.7500057220459
    5. '                   ' → logprob: -19.8750057220459
    6. '               ' → logprob: -20.0000057220459
    7. 'Dist' → logprob: -20.6250057220459
    8. '           ' → logprob: -20.7500057220459
    9. '```' → logprob: -20.7500057220459
    10. '(dist' → logprob: -21.0000057220459

Token 1221: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00022713904036208987
    2. 'tx' → logprob: -8.500226974487305
    3. '```' → logprob: -11.750226974487305
    4. '(tx' → logprob: -12.500226974487305
    5. '_tx' → logprob: -13.125226974487305
    6. '[x' → logprob: -13.625226974487305
    7. '][' → logprob: -13.750226974487305
    8. ' [' → logprob: -14.000226974487305
    9. ' tx' → logprob: -14.125226974487305
    10. '	tx' → logprob: -14.375226974487305

Token 1222: 'tx' (ID: 6874)
  Prédit: 'tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -3.128163257315464e-07
    2. ' tx' → logprob: -16.125
    3. '(tx' → logprob: -16.5
    4. 'x' → logprob: -17.75
    5. '[' → logprob: -17.875
    6. 'tp' → logprob: -18.75
    7. '	tx' → logprob: -18.75
    8. 'tc' → logprob: -19.125
    9. '0' → logprob: -19.625
    10. ''t' → logprob: -20.125

Token 1223: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5760803818702698
    2. '][' → logprob: -0.8260803818702698
    3. 'tx' → logprob: -9.951080322265625
    4. ']' → logprob: -10.826080322265625
    5. '```' → logprob: -10.951080322265625
    6. ''][' → logprob: -11.451080322265625
    7. 'x' → logprob: -12.451080322265625
    8. '"][' → logprob: -12.451080322265625
    9. ' ][' → logprob: -12.576080322265625
    10. '[][' → logprob: -12.701080322265625

Token 1224: 'ty' (ID: 1206)
  Prédit: 'ty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ty' → logprob: -4.246537173457909e-06
    2. ' ty' → logprob: -13.250003814697266
    3. '
' → logprob: -13.500003814697266
    4. ']' → logprob: -15.000003814697266
    5. '[' → logprob: -15.375003814697266
    6. '_ty' → logprob: -15.750003814697266
    7. 'tx' → logprob: -16.625003814697266
    8. '.ty' → logprob: -16.750003814697266
    9. '0' → logprob: -16.875003814697266
    10. '   ' → logprob: -17.125003814697266

Token 1225: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004167202394455671
    2. ']+' → logprob: -5.629167079925537
    3. '<|end|>' → logprob: -8.004167556762695
    4. ' ]' → logprob: -9.254167556762695
    5. ']
' → logprob: -9.629167556762695
    6. '+' → logprob: -11.004167556762695
    7. '<|end|>' → logprob: -11.254167556762695
    8. '               ' → logprob: -11.504167556762695
    9. ')' → logprob: -11.754167556762695
    10. ']+=' → logprob: -12.504167556762695

Token 1226: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1227: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0165406465530396
    2. '```' → logprob: -1.2665406465530396
    3. '       ' → logprob: -1.5165406465530396
    4. '   ' → logprob: -3.14154052734375
    5. ')' → logprob: -4.01654052734375
    6. '\' → logprob: -4.39154052734375
    7. '<|end|>' → logprob: -4.39154052734375
    8. '
' → logprob: -5.14154052734375
    9. 'for' → logprob: -5.14154052734375
    10. ' for' → logprob: -5.39154052734375

Token 1228: ' For' (ID: 2214)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0555742979049683
    2. 'dp' → logprob: -1.4305742979049683
    3. 'import' → logprob: -1.5555742979049683
    4. 'for' → logprob: -2.055574417114258
    5. '#' → logprob: -3.555574417114258
    6. '       ' → logprob: -4.430574417114258
    7. 'INF' → logprob: -5.055574417114258
    8. 'def' → logprob: -5.305574417114258
    9. 'inf' → logprob: -5.305574417114258
    10. 'sale' → logprob: -5.805574417114258

Token 1229: ' each' (ID: 2454)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.17934992909431458
    2. ' g' → logprob: -2.429349899291992
    3. 'i' → logprob: -3.304349899291992
    4. '_g' → logprob: -3.804349899291992
    5. ' i' → logprob: -5.179349899291992
    6. '_' → logprob: -6.304349899291992
    7. '_i' → logprob: -6.304349899291992
    8. 'dp' → logprob: -6.429349899291992
    9. ' _' → logprob: -7.054349899291992
    10. '_dp' → logprob: -7.054349899291992

Token 1230: ' product' (ID: 1888)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.05411600321531296
    2. ' g' → logprob: -3.6791160106658936
    3. 'product' → logprob: -4.5541157722473145
    4. 'i' → logprob: -4.9291157722473145
    5. ' product' → logprob: -5.9291157722473145
    6. '_g' → logprob: -6.1791157722473145
    7. '   ' → logprob: -7.3041157722473145
    8. '#' → logprob: -7.3041157722473145
    9. ' i' → logprob: -7.3041157722473145
    10. 'def' → logprob: -8.179116249084473

Token 1231: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.8223440647125244
    2. '_' → logprob: -1.1973440647125244
    3. 's' → logprob: -2.9473440647125244
    4. '_g' → logprob: -3.1973440647125244
    5. '```' → logprob: -3.6973440647125244
    6. '_info' → logprob: -4.322343826293945
    7. 'for' → logprob: -4.447343826293945
    8. '_idx' → logprob: -4.572343826293945
    9. ',' → logprob: -4.572343826293945
    10. '_positions' → logprob: -4.822343826293945

Token 1232: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4340306520462036
    2. ':' → logprob: -2.434030532836914
    3. 'for' → logprob: -2.434030532836914
    4. ' for' → logprob: -2.684030532836914
    5. 'in' → logprob: -3.184030532836914
    6. ',' → logprob: -3.184030532836914
    7. 'g' → logprob: -5.059030532836914
    8. '#' → logprob: -5.809030532836914
    9. '[' → logprob: -5.934030532836914
    10. ' g' → logprob: -6.059030532836914

Token 1233: ' determine' (ID: 11433)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11615850776433945
    2. '#' → logprob: -3.2411584854125977
    3. 'prod' → logprob: -3.2411584854125977
    4. ' for' → logprob: -5.241158485412598
    5. 'product' → logprob: -5.241158485412598
    6. 'positions' → logprob: -5.366158485412598
    7. 'dp' → logprob: -6.241158485412598
    8. 'all' → logprob: -6.241158485412598
    9. 'min' → logprob: -6.491158485412598
    10. 'pos' → logprob: -6.491158485412598

Token 1234: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8942624926567078
    2. ' min' → logprob: -1.7692625522613525
    3. ' minimal' → logprob: -1.7692625522613525
    4. 'minimal' → logprob: -2.8942625522613525
    5. 'best' → logprob: -3.2692625522613525
    6. 'the' → logprob: -3.3942625522613525
    7. ' the' → logprob: -4.019262313842773
    8. '#' → logprob: -4.019262313842773
    9. ' best' → logprob: -4.519262313842773
    10. 'for' → logprob: -4.769262313842773

Token 1235: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8325675129890442
    2. 'distance' → logprob: -1.0825674533843994
    3. ' distance' → logprob: -2.2075674533843994
    4. 'cost' → logprob: -2.8325674533843994
    5. ' dist' → logprob: -3.7075674533843994
    6. ' cost' → logprob: -4.0825676918029785
    7. 'price' → logprob: -5.4575676918029785
    8. '
' → logprob: -6.0825676918029785
    9. '_distance' → logprob: -6.3325676918029785
    10. '_dist' → logprob: -6.4575676918029785

Token 1236: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.907117486000061
    2. 'for' → logprob: -1.657117486000061
    3. ' to' → logprob: -1.782117486000061
    4. 'from' → logprob: -2.5321173667907715
    5. '       ' → logprob: -2.9071173667907715
    6. '_to' → logprob: -3.4071173667907715
    7. ' for' → logprob: -3.6571173667907715
    8. '#' → logprob: -4.5321173667907715
    9. '```' → logprob: -4.9071173667907715
    10. 'between' → logprob: -5.5321173667907715

Token 1237: ' pick' (ID: 5230)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.6996831893920898
    2. 'pick' → logprob: -2.19968318939209
    3. 'purchase' → logprob: -2.57468318939209
    4. 'all' → logprob: -2.69968318939209
    5. 'collect' → logprob: -2.69968318939209
    6. 'g' → logprob: -3.19968318939209
    7. 'next' → logprob: -3.57468318939209
    8. 'go' → logprob: -3.82468318939209
    9. 'get' → logprob: -4.32468318939209
    10. 'start' → logprob: -4.44968318939209

Token 1238: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2698994576931
    2. 'g' → logprob: -2.394899368286133
    3. 'from' → logprob: -2.519899368286133
    4. ' for' → logprob: -3.894899368286133
    5. '       ' → logprob: -4.894899368286133
    6. '#' → logprob: -5.019899368286133
    7. '[' → logprob: -5.269899368286133
    8. '
' → logprob: -5.394899368286133
    9. 'up' → logprob: -5.394899368286133
    10. '```' → logprob: -5.894899368286133

Token 1239: ' current' (ID: 2208)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -1.279655933380127
    2. 'g' → logprob: -1.529655933380127
    3. 'range' → logprob: -2.279655933380127
    4. 'all' → logprob: -2.404655933380127
    5. 's' → logprob: -2.404655933380127
    6. ' range' → logprob: -3.654655933380127
    7. '[' → logprob: -3.654655933380127
    8. ' g' → logprob: -3.779655933380127
    9. 'ais' → logprob: -3.904655933380127
    10. 'each' → logprob: -4.529655933380127

Token 1240: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.5325316190719604
    2. ' position' → logprob: -1.5325316190719604
    3. 'pos' → logprob: -2.40753173828125
    4. '_position' → logprob: -3.28253173828125
    5. '_pos' → logprob: -4.15753173828125
    6. '_positions' → logprob: -4.65753173828125
    7. ' product' → logprob: -4.90753173828125
    8. 'positions' → logprob: -4.90753173828125
    9. 'product' → logprob: -5.03253173828125
    10. ' point' → logprob: -5.90753173828125

Token 1241: ' or' (ID: 503)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5307852029800415
    2. '       ' → logprob: -1.9057852029800415
    3. '#' → logprob: -2.405785083770752
    4. ' for' → logprob: -2.655785083770752
    5. 'dist' → logprob: -4.155785083770752
    6. 'min' → logprob: -4.405785083770752
    7. '
' → logprob: -4.530785083770752
    8. 'dp' → logprob: -4.780785083770752
    9. 'def' → logprob: -5.405785083770752
    10. 'from' → logprob: -5.405785083770752

Token 1242: ' another' (ID: 3613)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.645254909992218
    2. '#' → logprob: -1.0202548503875732
    3. 'others' → logprob: -2.5202548503875732
    4. 'collect' → logprob: -5.520255088806152
    5. 'all' → logprob: -5.645255088806152
    6. 'start' → logprob: -5.645255088806152
    7. 'g' → logprob: -6.020255088806152
    8. 'to' → logprob: -6.145255088806152
    9. 'product' → logprob: -6.145255088806152
    10. 'adj' → logprob: -6.145255088806152

Token 1243: ' product' (ID: 1888)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.17516958713531494
    2. 'product' → logprob: -2.6751694679260254
    3. 'for' → logprob: -3.5501694679260254
    4. '_product' → logprob: -3.9251694679260254
    5. '_' → logprob: -4.550169467926025
    6. '#' → logprob: -4.675169467926025
    7. '
' → logprob: -5.175169467926025
    8. '_g' → logprob: -6.175169467926025
    9. '_s' → logprob: -6.175169467926025
    10. ' for' → logprob: -6.425169467926025

Token 1244: ' position' (ID: 4010)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9714071154594421
    2. '
' → logprob: -1.346407175064087
    3. ' for' → logprob: -1.971407175064087
    4. '       ' → logprob: -2.346407175064087
    5. 'g' → logprob: -3.346407175064087
    6. '```' → logprob: -4.346406936645508
    7. 's' → logprob: -4.596406936645508
    8. ',' → logprob: -4.596406936645508
    9. 'def' → logprob: -4.846406936645508
    10. '_' → logprob: -5.346406936645508

Token 1245: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13623134791851044
    2. '#' → logprob: -3.1362314224243164
    3. ' for' → logprob: -3.3862314224243164
    4. 'for' → logprob: -4.261231422424316
    5. '
' → logprob: -4.261231422424316
    6. '<|end|>' → logprob: -5.011231422424316
    7. '        
' → logprob: -5.511231422424316
    8. ',' → logprob: -6.261231422424316
    9. '[' → logprob: -6.511231422424316
    10. '```' → logprob: -7.136231422424316

Token 1246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1972975730895996
    2. ' for' → logprob: -2.6972975730895996
    3. '<|end|>' → logprob: -2.9472975730895996
    4. '
' → logprob: -4.4472975730896
    5. 'for' → logprob: -4.6972975730896
    6. '        
' → logprob: -4.8222975730896
    7. ' g' → logprob: -5.1972975730896
    8. '```' → logprob: -5.5722975730896
    9. '[' → logprob: -5.6972975730896
    10. ' continue' → logprob: -5.8222975730896

Token 1247: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2209874838590622
    2. 'for' → logprob: -1.8459874391555786
    3. '       ' → logprob: -4.595987319946289
    4. '#' (adapté à ' #') → logprob: -4.970987319946289
    5. 'INF' → logprob: -5.095987319946289
    6. 'dist' → logprob: -5.470987319946289
    7. 'inf' → logprob: -5.470987319946289
    8. 'from' → logprob: -6.345987319946289
    9. 'import' → logprob: -6.595987319946289
    10. 'max' → logprob: -6.970987319946289

Token 1248: ' Build' (ID: 10885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.701714813709259
    2. 'dp' → logprob: -1.4517147541046143
    3. 'for' → logprob: -2.0767147541046143
    4. ' for' → logprob: -2.9517147541046143
    5. ' dp' → logprob: -4.076714992523193
    6. '#' → logprob: -4.076714992523193
    7. 'g' → logprob: -4.576714992523193
    8. 'dist' → logprob: -4.576714992523193
    9. 'inf' → logprob: -5.451714992523193
    10. 'product' → logprob: -5.951714992523193

Token 1249: ' a' (ID: 261)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013429141603410244
    2. 'dist' → logprob: -4.888429164886475
    3. 'from' → logprob: -7.138429164886475
    4. 'product' → logprob: -7.388429164886475
    5. 'import' → logprob: -7.513429164886475
    6. '[' → logprob: -7.638429164886475
    7. 'prod' → logprob: -7.763429164886475
    8. ' dp' → logprob: -7.888429164886475
    9. '```' → logprob: -8.013428688049316
    10. 'graph' → logprob: -8.263428688049316

Token 1250: ' list' (ID: 1562)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4185144901275635
    2. ' dp' → logprob: -1.6685144901275635
    3. 'd' → logprob: -4.043514251708984
    4. 'mask' → logprob: -4.043514251708984
    5. '[' → logprob: -4.293514251708984
    6. 'b' → logprob: -4.543514251708984
    7. 'll' → logprob: -4.668514251708984
    8. ' mask' → logprob: -5.043514251708984
    9. 'p' → logprob: -5.168514251708984
    10. 'rray' → logprob: -5.168514251708984

Token 1251: ' of' (ID: 328)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1398723125457764
    2. 'for' → logprob: -1.6398723125457764
    3. ' of' → logprob: -1.7648723125457764
    4. '[' → logprob: -3.0148723125457764
    5. '=[]' → logprob: -3.0148723125457764
    6. '[]' → logprob: -3.2648723125457764
    7. '[
' → logprob: -3.5148723125457764
    8. ' =' → logprob: -3.5148723125457764
    9. '_' → logprob: -3.8898723125457764
    10. 'of' → logprob: -4.2648725509643555

Token 1252: ' "' (ID: 392)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34255826473236084
    2. '[(' → logprob: -2.3425583839416504
    3. 'product' → logprob: -2.7175583839416504
    4. 'products' → logprob: -3.3425583839416504
    5. '[' → logprob: -3.8425583839416504
    6. 'dist' → logprob: -4.21755838394165
    7. 'g' → logprob: -4.34255838394165
    8. '[]' → logprob: -4.96755838394165
    9. 'possible' → logprob: -5.21755838394165
    10. 'next' → logprob: -6.21755838394165

Token 1253: 'nodes' (ID: 44664)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.576586365699768
    2. 'dp' → logprob: -2.2015862464904785
    3. 'positions' → logprob: -2.2015862464904785
    4. 'product' → logprob: -2.3265862464904785
    5. 'products' → logprob: -2.4515862464904785
    6. '(' → logprob: -3.0765862464904785
    7. 'list' → logprob: -3.4515862464904785
    8. 'items' → logprob: -3.7015862464904785
    9. 'nodes' → logprob: -3.7015862464904785
    10. '[(' → logprob: -3.8265862464904785

Token 1254: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0974315404891968
    2. '[' → logprob: -1.5974315404891968
    3. ':' → logprob: -2.2224316596984863
    4. ')' → logprob: -2.8474316596984863
    5. '```' → logprob: -2.9724316596984863
    6. 's' → logprob: -3.0974316596984863
    7. '_' → logprob: -3.7224316596984863
    8. '[
' → logprob: -3.8474316596984863
    9. '[]' → logprob: -4.222431659698486
    10. ',' → logprob: -4.597431659698486

Token 1255: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4358257055282593
    2. '=[]' → logprob: -1.4358257055282593
    3. '[]' → logprob: -2.560825824737549
    4. '=' → logprob: -2.935825824737549
    5. '<|end|>' → logprob: -2.935825824737549
    6. ':' → logprob: -3.060825824737549
    7. ',' → logprob: -3.185825824737549
    8. '[' → logprob: -3.185825824737549
    9. '_nodes' → logprob: -3.310825824737549
    10. ']' → logprob: -3.560825824737549

Token 1256: ' each' (ID: 2454)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.6319990754127502
    2. 'p' → logprob: -1.5069990158081055
    3. 'each' → logprob: -1.8819990158081055
    4. 'all' → logprob: -3.3819990158081055
    5. 'product' → logprob: -3.8819990158081055
    6. 'the' → logprob: -4.1319990158081055
    7. 'purchase' → logprob: -5.2569990158081055
    8. 'g' → logprob: -5.3819990158081055
    9. 'b' → logprob: -6.1319990158081055
    10. ' products' → logprob: -6.5069990158081055

Token 1257: ' product' (ID: 1888)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7463885545730591
    2. 'product' → logprob: -1.371388554573059
    3. ' product' → logprob: -1.871388554573059
    4. ' g' → logprob: -2.8713884353637695
    5. '_' → logprob: -3.8713884353637695
    6. ' _' → logprob: -4.2463884353637695
    7. ' (' → logprob: -5.2463884353637695
    8. ')' → logprob: -5.3713884353637695
    9. '_g' → logprob: -5.7463884353637695
    10. '_product' → logprob: -5.9963884353637695

Token 1258: ':' (ID: 25)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.6767245531082153
    2. '_' → logprob: -1.6767245531082153
    3. '<|end|>' → logprob: -3.051724433898926
    4. '=[]' → logprob: -3.551724433898926
    5. '[]' → logprob: -3.551724433898926
    6. '[' → logprob: -3.551724433898926
    7. '_product' → logprob: -4.551724433898926
    8. ' =' → logprob: -4.676724433898926
    9. '_products' → logprob: -4.676724433898926
    10. ']' → logprob: -4.801724433898926

Token 1259: ' minimal' (ID: 19957)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.43917661905288696
    2. ' product' → logprob: -2.439176559448242
    3. 'nodes' → logprob: -2.689176559448242
    4. '[]' → logprob: -3.564176559448242
    5. 'prod' → logprob: -3.814176559448242
    6. '<|end|>' → logprob: -3.814176559448242
    7. '```' → logprob: -3.939176559448242
    8. ' nodes' → logprob: -4.189176559448242
    9. 'node' → logprob: -4.689176559448242
    10. 'products' → logprob: -4.689176559448242

Token 1260: ' access' (ID: 3158)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distance' → logprob: -1.2229608297348022
    2. 'dist' → logprob: -1.5979608297348022
    3. 'distance' → logprob: -1.7229608297348022
    4. ' distances' → logprob: -1.7229608297348022
    5. '_distance' → logprob: -3.097960948944092
    6. '_dist' → logprob: -3.347960948944092
    7. ' dist' → logprob: -3.597960948944092
    8. '_' → logprob: -4.722960948944092
    9. ' _' → logprob: -5.222960948944092
    10. ' cost' → logprob: -5.597960948944092

Token 1261: ' cost' (ID: 3097)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0071920156478882
    2. 'distance' → logprob: -1.0071920156478882
    3. '_distance' → logprob: -3.1321921348571777
    4. '_dist' → logprob: -3.2571921348571777
    5. '_' → logprob: -3.6321921348571777
    6. 's' → logprob: -3.6321921348571777
    7. ' distances' → logprob: -3.6321921348571777
    8. 'cost' → logprob: -3.7571921348571777
    9. '[]' → logprob: -3.8821921348571777
    10. '[' → logprob: -4.507192134857178

Token 1262: ' from' (ID: 591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4164264500141144
    2. 'for' → logprob: -2.166426420211792
    3. '       ' → logprob: -2.666426420211792
    4. '#' → logprob: -4.041426658630371
    5. '<|end|>' → logprob: -4.041426658630371
    6. 's' → logprob: -4.166426658630371
    7. '[' → logprob: -4.166426658630371
    8. ',' → logprob: -4.416426658630371
    9. ']' → logprob: -4.416426658630371
    10. ' =' → logprob: -5.041426658630371

Token 1263: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05447494238615036
    2. 'previous' → logprob: -4.054474830627441
    3. 'prev' → logprob: -4.304474830627441
    4. 'current' → logprob: -4.804474830627441
    5. 'ais' → logprob: -5.054474830627441
    6. 'adj' → logprob: -5.429474830627441
    7. 'other' → logprob: -7.429474830627441
    8. 'point' → logprob: -7.929474830627441
    9. '```' → logprob: -8.554474830627441
    10. 'all' → logprob: -8.554474830627441

Token 1264: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48200997710227966
    2. 'for' → logprob: -2.9820098876953125
    3. 'cost' → logprob: -3.3570098876953125
    4. 'product' → logprob: -3.3570098876953125
    5. ' for' → logprob: -3.6070098876953125
    6. '#' → logprob: -3.6070098876953125
    7. '=' → logprob: -3.7320098876953125
    8. '```' → logprob: -3.7320098876953125
    9. ' =' → logprob: -3.9820098876953125
    10. ',' → logprob: -3.9820098876953125

Token 1265: ' from' (ID: 591)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.5307112336158752
    2. '#' → logprob: -1.4057111740112305
    3. 'previous' → logprob: -2.0307111740112305
    4. 'another' → logprob: -4.4057111740112305
    5. 'prev' → logprob: -5.0307111740112305
    6. 'from' → logprob: -5.6557111740112305
    7. ' other' → logprob: -5.7807111740112305
    8. 'adj' → logprob: -6.0307111740112305
    9. 'others' → logprob: -6.4057111740112305
    10. 'product' → logprob: -6.9057111740112305

Token 1266: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.7062776684761047
    2. 'previous' → logprob: -1.08127760887146
    3. 'another' → logprob: -2.58127760887146
    4. 'prev' → logprob: -3.33127760887146
    5. 'product' → logprob: -4.456277847290039
    6. 'adj' → logprob: -4.706277847290039
    7. ' other' → logprob: -4.956277847290039
    8. 'any' → logprob: -5.081277847290039
    9. 'already' → logprob: -5.831277847290039
    10. 'last' → logprob: -6.081277847290039

Token 1267: ' products' (ID: 3891)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.885734498500824
    2. 'product' → logprob: -2.1357345581054688
    3. 'g' → logprob: -2.3857345581054688
    4. ' products' → logprob: -2.8857345581054688
    5. ' product' → logprob: -3.1357345581054688
    6. '_product' → logprob: -3.2607345581054688
    7. '_products' → logprob: -3.2607345581054688
    8. '_' → logprob: -3.3857345581054688
    9. '#' → logprob: -3.8857345581054688
    10. '
' → logprob: -4.010734558105469

Token 1268: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14512595534324646
    2. '<|end|>' → logprob: -3.3951258659362793
    3. '        ' → logprob: -4.145125865936279
    4. '[' → logprob: -4.145125865936279
    5. '   ' → logprob: -4.895125865936279
    6. ',' → logprob: -4.895125865936279
    7. ')' → logprob: -5.270125865936279
    8. '        
' → logprob: -5.520125865936279
    9. ' for' → logprob: -5.645125865936279
    10. '    ' → logprob: -5.645125865936279

Token 1270: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06823494285345078
    2. '<|end|>' → logprob: -4.693234920501709
    3. '[' → logprob: -5.068234920501709
    4. '        ' → logprob: -5.193234920501709
    5. '        
' → logprob: -5.193234920501709
    6. ' 
' → logprob: -5.318234920501709
    7. '   ' → logprob: -5.568234920501709
    8. ' for' → logprob: -5.818234920501709
    9. ' ]' → logprob: -5.818234920501709
    10. ',' → logprob: -6.068234920501709

Token 1271: ' We'll' (ID: 46830)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17843255400657654
    2. 'for' → logprob: -2.9284324645996094
    3. '       ' → logprob: -3.1784324645996094
    4. '#' → logprob: -3.3034324645996094
    5. 'product' → logprob: -5.178432464599609
    6. 'inf' → logprob: -5.803432464599609
    7. 'prod' → logprob: -5.803432464599609
    8. 'mask' → logprob: -6.428432464599609
    9. 'node' → logprob: -6.428432464599609
    10. ' dp' → logprob: -6.428432464599609

Token 1272: ' represent' (ID: 5188)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2840632498264313
    2. ' continue' → logprob: -1.5340632200241089
    3. 'append' → logprob: -4.034063339233398
    4. ' append' → logprob: -6.034063339233398
    5. 'for' → logprob: -6.159063339233398
    6. '_continue' → logprob: -6.409063339233398
    7. '.append' → logprob: -6.534063339233398
    8. '   ' → logprob: -7.659063339233398
    9. 'import' → logprob: -7.659063339233398
    10. 'def' → logprob: -7.659063339233398

Token 1273: ' picks' (ID: 37120)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0446116924285889
    2. ' product' → logprob: -1.6696116924285889
    3. 'product' → logprob: -2.669611692428589
    4. ' nodes' → logprob: -2.794611692428589
    5. '[]' → logprob: -2.919611692428589
    6. '_' → logprob: -3.044611692428589
    7. 'g' → logprob: -3.044611692428589
    8. ' ' → logprob: -3.169611692428589
    9. '[
' → logprob: -3.669611692428589
    10. ' g' → logprob: -4.669611930847168

Token 1274: ' by' (ID: 656)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09319410473108292
    2. '[' → logprob: -3.093194007873535
    3. '<|end|>' → logprob: -4.718194007873535
    4. ' _' → logprob: -4.968194007873535
    5. '[
' → logprob: -5.343194007873535
    6. '_
' → logprob: -5.968194007873535
    7. ']' → logprob: -6.093194007873535
    8. '(' → logprob: -6.218194007873535
    9. ')' → logprob: -6.343194007873535
    10. '[]' → logprob: -6.468194007873535

Token 1275: ' bits' (ID: 18189)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.36965855956077576
    2. '(' → logprob: -2.3696584701538086
    3. 'bits' → logprob: -2.3696584701538086
    4. 'a' → logprob: -3.3696584701538086
    5. 'product' → logprob: -3.6196584701538086
    6. 'mask' → logprob: -3.9946584701538086
    7. 'state' → logprob: -4.744658470153809
    8. 'nodes' → logprob: -5.244658470153809
    9. 'inte' → logprob: -5.369658470153809
    10. 'node' → logprob: -5.869658470153809

Token 1276: ' of' (ID: 328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.87686288356781
    2. ')' → logprob: -2.0018630027770996
    3. '<|end|>' → logprob: -2.0018630027770996
    4. ' =' → logprob: -2.3768630027770996
    5. 'def' → logprob: -2.7518630027770996
    6. '[' → logprob: -3.0018630027770996
    7. ' 
' → logprob: -3.0018630027770996
    8. '=' → logprob: -3.1268630027770996
    9. '
' → logprob: -3.2518630027770996
    10. ',' → logprob: -3.2518630027770996

Token 1277: ' length' (ID: 5517)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.1662139892578125
    2. '10' → logprob: -1.6662139892578125
    3. 'products' → logprob: -2.1662139892578125
    4. 'product' → logprob: -2.4162139892578125
    5. 'code' → logprob: -2.7912139892578125
    6. 'a' → logprob: -3.0412139892578125
    7. 'n' → logprob: -3.4162139892578125
    8. 'mask' → logprob: -3.7912139892578125
    9. '1' → logprob: -3.9162139892578125
    10. 'visited' → logprob: -4.0412139892578125

Token 1278: ' n' (ID: 297)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1078846454620361
    2. '1' → logprob: -1.7328846454620361
    3. 'n' → logprob: -1.8578846454620361
    4. '(' → logprob: -2.607884645462036
    5. ')' → logprob: -2.857884645462036
    6. ' ' → logprob: -2.857884645462036
    7. ' n' → logprob: -3.107884645462036
    8. 'g' → logprob: -3.607884645462036
    9. ' (' → logprob: -3.857884645462036
    10. '[' → logprob: -4.857884407043457

Token 1279: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.561444640159607
    2. '_' → logprob: -1.686444640159607
    3. '   ' → logprob: -1.811444640159607
    4. '[' → logprob: -2.5614447593688965
    5. ')' → logprob: -2.8114447593688965
    6. ' ' → logprob: -2.9364447593688965
    7. ',' → logprob: -3.5614447593688965
    8. ':' → logprob: -3.6864447593688965
    9. '(
' → logprob: -3.6864447593688965
    10. ' 
' → logprob: -3.8114447593688965

Token 1280: 'number' (ID: 8096)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050460316240787506
    2. '1' → logprob: -3.5504603385925293
    3. '<|end|>' → logprob: -4.800460338592529
    4. '0' → logprob: -5.675460338592529
    5. 'n' → logprob: -6.050460338592529
    6. ' ' → logprob: -6.425460338592529
    7. '(' → logprob: -7.175460338592529
    8. '[' → logprob: -7.300460338592529
    9. '32' → logprob: -7.300460338592529
    10. '```' → logprob: -7.925460338592529

Token 1281: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4624974727630615
    2. '[' → logprob: -1.7124974727630615
    3. '
' → logprob: -3.2124974727630615
    4. '=' → logprob: -3.7124974727630615
    5. '#' → logprob: -3.8374974727630615
    6. '[
' → logprob: -4.087497711181641
    7. '[]' → logprob: -4.212497711181641
    8. 'of' → logprob: -4.337497711181641
    9. '_' → logprob: -4.587497711181641
    10. ']' → logprob: -5.087497711181641

Token 1282: ' sales' (ID: 7155)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.1529708355665207
    2. ' products' → logprob: -2.777970790863037
    3. 'p' → logprob: -3.277970790863037
    4. 'items' → logprob: -4.402970790863037
    5. ' p' → logprob: -5.277970790863037
    6. 'product' → logprob: -5.277970790863037
    7. 'g' → logprob: -5.277970790863037
    8. ')' → logprob: -5.402970790863037
    9. ' items' → logprob: -5.777970790863037
    10. 's' → logprob: -6.277970790863037

Token 1283: ')
' (ID: 446)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6201663613319397
    2. ')' → logprob: -0.8701663613319397
    3. ')_' → logprob: -3.870166301727295
    4. '_)' → logprob: -4.745166301727295
    5. '_info' → logprob: -5.370166301727295
    6. '[' → logprob: -5.745166301727295
    7. '_
' → logprob: -6.745166301727295
    8. 's' → logprob: -7.495166301727295
    9. ']' → logprob: -7.870166301727295
    10. ')
' → logprob: -8.245166778564453

Token 1284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025022082030773163
    2. '   ' → logprob: -5.525022029876709
    3. '#' → logprob: -5.775022029876709
    4. '<|end|>' → logprob: -6.025022029876709
    5. ' for' → logprob: -6.400022029876709
    6. '
' → logprob: -6.525022029876709
    7. '...' → logprob: -6.900022029876709
    8. '        
' → logprob: -7.025022029876709
    9. ' n' → logprob: -7.150022029876709
    10. 'n' → logprob: -7.150022029876709

Token 1285: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45932987332344055
    2. '<|end|>' → logprob: -1.5843298435211182
    3. '   ' → logprob: -3.459329843521118
    4. 'def' → logprob: -3.834329843521118
    5. ' 
' → logprob: -4.209330081939697
    6. '        
' → logprob: -4.334330081939697
    7. 'n' → logprob: -4.459330081939697
    8. '        ' → logprob: -4.834330081939697
    9. ' ' → logprob: -4.834330081939697
    10. '    ' → logprob: -4.959330081939697

Token 1286: ' Each' (ID: 11555)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0568820238113403
    2. '       ' → logprob: -1.0568820238113403
    3. 'def' → logprob: -2.556881904602051
    4. 'dp' → logprob: -3.181881904602051
    5. ' dp' → logprob: -3.306881904602051
    6. '#' → logprob: -3.556881904602051
    7. ' #' → logprob: -4.556881904602051
    8. 'mask' → logprob: -4.556881904602051
    9. 'import' → logprob: -4.806881904602051
    10. ' mask' → logprob: -5.056881904602051

Token 1287: ' sale' (ID: 7357)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3896555006504059
    2. 'g' → logprob: -2.514655590057373
    3. ' _' → logprob: -3.139655590057373
    4. 'def' → logprob: -3.389655590057373
    5. ')' → logprob: -3.639655590057373
    6. '   ' → logprob: -3.764655590057373
    7. 'product' → logprob: -3.889655590057373
    8. '#' → logprob: -4.514655590057373
    9. ']' → logprob: -4.639655590057373
    10. ' product' → logprob: -5.139655590057373

Token 1288: ':' (ID: 25)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.017924567684531212
    2. '_info' → logprob: -5.392924785614014
    3. '[' → logprob: -6.142924785614014
    4. 's' → logprob: -6.517924785614014
    5. '_
' → logprob: -6.517924785614014
    6. ' _' → logprob: -6.642924785614014
    7. ' =' → logprob: -6.642924785614014
    8. ')' → logprob: -6.767924785614014
    9. 'n' → logprob: -7.142924785614014
    10. '=' → logprob: -8.267924308776855

Token 1289: ' product' (ID: 1888)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08019407838582993
    2. ' =' → logprob: -3.7051939964294434
    3. '<|end|>' → logprob: -4.330193996429443
    4. ' n' → logprob: -5.205193996429443
    5. ' )' → logprob: -5.205193996429443
    6. 'n' → logprob: -5.455193996429443
    7. 'def' → logprob: -5.955193996429443
    8. ' (' → logprob: -6.205193996429443
    9. ' ,' → logprob: -6.455193996429443
    10. ')' → logprob: -6.580193996429443

Token 1290: ' g' (ID: 329)
  Prédit: '_info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.7121555209159851
    2. '_' → logprob: -0.9621555209159851
    3. 's' → logprob: -2.33715558052063
    4. ')' → logprob: -5.587155342102051
    5. '_i' → logprob: -5.962155342102051
    6. ')_' → logprob: -6.337155342102051
    7. '_
' → logprob: -6.337155342102051
    8. '[' → logprob: -6.587155342102051
    9. '_s' → logprob: -6.712155342102051
    10. '
' → logprob: -6.837155342102051

Token 1291: '[i' (ID: 1768)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.544727087020874
    2. 's' → logprob: -1.419727087020874
    3. '<|end|>' → logprob: -2.794727087020874
    4. ')' → logprob: -3.294727087020874
    5. ',' → logprob: -3.919727087020874
    6. ']' → logprob: -5.294727325439453
    7. ' =' → logprob: -5.294727325439453
    8. '_n' → logprob: -5.294727325439453
    9. '[' → logprob: -5.544727325439453
    10. ' _' → logprob: -5.544727325439453

Token 1292: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03343117609620094
    2. '],' → logprob: -3.7834312915802
    3. '[i' → logprob: -5.783431053161621
    4. '][' → logprob: -6.283431053161621
    5. ']
' → logprob: -6.408431053161621
    6. ']+' → logprob: -7.658431053161621
    7. '])' → logprob: -7.908431053161621
    8. '[' → logprob: -8.033431053161621
    9. '],
' → logprob: -8.158431053161621
    10. '[
' → logprob: -8.533431053161621

Token 1293: ' discount' (ID: 11522)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0193829536437988
    2. 'discount' → logprob: -1.0193829536437988
    3. ' discount' → logprob: -3.019382953643799
    4. ' d' → logprob: -3.019382953643799
    5. ' start' → logprob: -3.644382953643799
    6. 's' → logprob: -3.644382953643799
    7. 'start' → logprob: -3.894382953643799
    8. ' s' → logprob: -4.144382953643799
    9. 'sale' → logprob: -4.394382953643799
    10. 'i' → logprob: -4.894382953643799

Token 1294: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1295: '[i' (ID: 1768)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46193206310272217
    2. ',
' → logprob: -2.2119321823120117
    3. ']' → logprob: -2.5869321823120117
    4. 's' → logprob: -2.7119321823120117
    5. ')' → logprob: -3.4619321823120117
    6. '<|end|>' → logprob: -4.461932182312012
    7. '
' → logprob: -4.586932182312012
    8. '[i' → logprob: -4.836932182312012
    9. ',i' → logprob: -4.961932182312012
    10. '#' → logprob: -5.336932182312012

Token 1296: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2849990725517273
    2. '],' → logprob: -1.534999132156372
    3. '])' → logprob: -4.284998893737793
    4. '[i' → logprob: -4.784998893737793
    5. ',' → logprob: -5.784998893737793
    6. ')]' → logprob: -6.034998893737793
    7. ')' → logprob: -6.659998893737793
    8. ',i' → logprob: -6.659998893737793
    9. '],[' → logprob: -7.284998893737793
    10. ']
' → logprob: -7.534998893737793

Token 1297: ' start' (ID: 1604)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.021605610847473145
    2. ' s' → logprob: -3.8966054916381836
    3. 'start' → logprob: -7.146605491638184
    4. ' start' → logprob: -9.146605491638184
    5. 'sale' → logprob: -9.271605491638184
    6. '   ' → logprob: -11.396605491638184
    7. ''s' → logprob: -11.521605491638184
    8. ' sale' → logprob: -12.271605491638184
    9. '    ' → logprob: -12.396605491638184
    10. 'sales' → logprob: -12.396605491638184

Token 1298: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17868414521217346
    2. ',end' → logprob: -3.3036842346191406
    3. ',' → logprob: -3.5536842346191406
    4. 'i' → logprob: -3.8036842346191406
    5. ',s' → logprob: -4.303684234619141
    6. '=' → logprob: -4.428684234619141
    7. '=end' → logprob: -4.678684234619141
    8. ' s' → logprob: -5.053684234619141
    9. 'time' → logprob: -5.303684234619141
    10. 'e' → logprob: -5.303684234619141

Token 1299: '[i' (ID: 1768)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.9692020416259766
    2. 'i' → logprob: -1.8442020416259766
    3. ',' → logprob: -1.9692020416259766
    4. 'e' → logprob: -2.3442020416259766
    5. '[i' → logprob: -2.3442020416259766
    6. ',e' → logprob: -2.8442020416259766
    7. '=i' → logprob: -3.7192020416259766
    8. '=' → logprob: -3.9692020416259766
    9. ' =' → logprob: -5.469202041625977
    10. ',end' → logprob: -5.594202041625977

Token 1300: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.025046268478035927
    2. ']' → logprob: -4.400046348571777
    3. ',i' → logprob: -5.400046348571777
    4. ',' → logprob: -5.775046348571777
    5. ']=' → logprob: -5.775046348571777
    6. '[i' → logprob: -7.400046348571777
    7. '][' → logprob: -8.525046348571777
    8. ' ],' → logprob: -8.775046348571777
    9. '],
' → logprob: -9.025046348571777
    10. ',e' → logprob: -9.275046348571777

Token 1301: ' end' (ID: 1268)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2829514145851135
    2. 'end' → logprob: -1.4079513549804688
    3. ' e' → logprob: -7.282951354980469
    4. ''e' → logprob: -7.907951354980469
    5. ''end' → logprob: -8.157951354980469
    6. ' end' → logprob: -8.282951354980469
    7. '#' → logprob: -11.282951354980469
    8. '```' → logprob: -11.282951354980469
    9. '_end' → logprob: -11.407951354980469
    10. 'endmodule' → logprob: -11.407951354980469

Token 1302: ' e' (ID: 319)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7273241877555847
    2. '_' → logprob: -1.7273242473602295
    3. '=' → logprob: -2.2273242473602295
    4. '=[' → logprob: -3.2273242473602295
    5. '```' → logprob: -3.6023242473602295
    6. '_idx' → logprob: -3.8523242473602295
    7. '=[]' → logprob: -3.8523242473602295
    8. ',' → logprob: -4.10232400894165
    9. ',i' → logprob: -4.47732400894165
    10. 's' → logprob: -4.47732400894165

Token 1303: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.24626851081848145
    2. ']' → logprob: -1.9962685108184814
    3. '][' → logprob: -3.7462685108184814
    4. '[' → logprob: -4.496268272399902
    5. '[
' → logprob: -4.621268272399902
    6. '[]' → logprob: -4.621268272399902
    7. '```' → logprob: -5.621268272399902
    8. ',' → logprob: -5.746268272399902
    9. 'i' → logprob: -5.871268272399902
    10. 's' → logprob: -5.871268272399902

Token 1304: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45498278737068176
    2. '])' → logprob: -1.4549827575683594
    3. ']=' → logprob: -2.4549827575683594
    4. ')]' → logprob: -3.9549827575683594
    5. ']
' → logprob: -4.329982757568359
    6. ')' → logprob: -4.704982757568359
    7. '])
' → logprob: -6.329982757568359
    8. '[i' → logprob: -8.07998275756836
    9. '])]' → logprob: -8.07998275756836
    10. ')=' → logprob: -8.20498275756836

Token 1305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04945772886276245
    2. '
' → logprob: -4.549457550048828
    3. '<|end|>' → logprob: -4.549457550048828
    4. '#' → logprob: -5.174457550048828
    5. ',' → logprob: -5.424457550048828
    6. '        
' → logprob: -5.924457550048828
    7. '```' → logprob: -6.049457550048828
    8. ')' → logprob: -6.424457550048828
    9. '   ' → logprob: -6.924457550048828
    10. ' for' → logprob: -6.924457550048828

Token 1306: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02297302521765232
    2. '   ' → logprob: -5.14797306060791
    3. '        
' → logprob: -6.27297306060791
    4. 'def' → logprob: -6.39797306060791
    5. ' for' → logprob: -6.64797306060791
    6. '<|end|>' → logprob: -7.02297306060791
    7. '	' → logprob: -7.14797306060791
    8. '
' → logprob: -7.14797306060791
    9. ',' → logprob: -7.27297306060791
    10. '```' → logprob: -7.39797306060791

Token 1307: ' For' (ID: 2214)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2808726727962494
    2. '       ' → logprob: -1.6558727025985718
    3. '   ' → logprob: -4.405872821807861
    4. 'mask' → logprob: -4.905872821807861
    5. 'from' → logprob: -5.030872821807861
    6. 'INF' → logprob: -5.280872821807861
    7. 'for' → logprob: -5.405872821807861
    8. '#' → logprob: -5.780872821807861
    9. 'inf' → logprob: -6.155872821807861
    10. 'def' → logprob: -6.530872821807861

Token 1308: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.319021463394165
    2. '_' → logprob: -1.819021463394165
    3. 'n' → logprob: -1.819021463394165
    4. ' range' → logprob: -2.444021463394165
    5. ' n' → logprob: -2.694021463394165
    6. 'g' → logprob: -2.694021463394165
    7. ' i' → logprob: -2.819021463394165
    8. ' ' → logprob: -3.319021463394165
    9. 'range' → logprob: -3.444021463394165
    10. ' g' → logprob: -4.194021224975586

Token 1309: ' sale' (ID: 7357)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8217734098434448
    2. 'g' → logprob: -1.1967734098434448
    3. ' _' → logprob: -2.3217735290527344
    4. ' g' → logprob: -3.8217735290527344
    5. 'i' → logprob: -4.071773529052734
    6. 'product' → logprob: -4.196773529052734
    7. 'n' → logprob: -4.196773529052734
    8. 'sale' → logprob: -4.321773529052734
    9. ' product' → logprob: -4.446773529052734
    10. ']' → logprob: -4.446773529052734

Token 1310: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2129188776016235
    2. 'g' → logprob: -1.5879188776016235
    3. ',' → logprob: -2.462918758392334
    4. ' for' → logprob: -2.587918758392334
    5. ' g' → logprob: -2.712918758392334
    6. '```' → logprob: -3.337918758392334
    7. 'for' → logprob: -3.337918758392334
    8. ' (' → logprob: -4.087918758392334
    9. 'i' → logprob: -4.087918758392334
    10. '_' → logprob: -4.212918758392334

Token 1311: ' find' (ID: 1646)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1605806350708008
    2. ' pass' → logprob: -1.5355806350708008
    3. ' g' → logprob: -2.285580635070801
    4. ' #' → logprob: -2.660580635070801
    5. ' idx' → logprob: -3.285580635070801
    6. ' sale' → logprob: -3.535580635070801
    7. 'g' → logprob: -3.660580635070801
    8. ' for' → logprob: -3.660580635070801
    9. ' product' → logprob: -3.660580635070801
    10. ' i' → logprob: -3.910580635070801

Token 1312: ' minimal' (ID: 19957)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.3391108512878418
    2. 'closest' → logprob: -2.089110851287842
    3. 'best' → logprob: -2.214110851287842
    4. '#' → logprob: -2.339110851287842
    5. 'min' → logprob: -2.464110851287842
    6. 'minimal' → logprob: -2.589110851287842
    7. 'possible' → logprob: -3.214110851287842
    8. 'product' → logprob: -3.589110851287842
    9. 'nearest' → logprob: -3.839110851287842
    10. 'positions' → logprob: -3.964110851287842

Token 1313: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9290068745613098
    2. 'distance' → logprob: -1.804006814956665
    3. ' distance' → logprob: -2.054006814956665
    4. '_dist' → logprob: -2.804006814956665
    5. '_distance' → logprob: -2.929006814956665
    6. ' dist' → logprob: -3.304006814956665
    7. ' _' → logprob: -3.554006814956665
    8. 'cost' → logprob: -3.804006814956665
    9. '_' → logprob: -3.929006814956665
    10. ' cost' → logprob: -4.304007053375244

Token 1314: ' from' (ID: 591)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6348421573638916
    2. '=' → logprob: -2.1348421573638916
    3. ',' → logprob: -2.3848421573638916
    4. ' =' → logprob: -2.3848421573638916
    5. '_' → logprob: -2.5098421573638916
    6. ')' → logprob: -2.7598421573638916
    7. '<|end|>' → logprob: -3.0098421573638916
    8. '(' → logprob: -3.1348421573638916
    9. ']' → logprob: -3.8848421573638916
    10. '[
' → logprob: -3.8848421573638916

Token 1315: ' start' (ID: 1604)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.610016942024231
    2. 'start' → logprob: -1.235016942024231
    3. 'prev' → logprob: -2.8600168228149414
    4. 'adj' → logprob: -3.3600168228149414
    5. ' aisle' → logprob: -3.9850168228149414
    6. 'previous' → logprob: -3.9850168228149414
    7. 'point' → logprob: -4.985016822814941
    8. '0' → logprob: -4.985016822814941
    9. 'product' → logprob: -5.735016822814941
    10. '
' → logprob: -5.985016822814941

Token 1316: ' aisle' (ID: 99887)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6744706630706787
    2. 'for' → logprob: -2.1744706630706787
    3. 'dist' → logprob: -2.2994706630706787
    4. ' for' → logprob: -2.5494706630706787
    5. 'g' → logprob: -3.7994706630706787
    6. '```' → logprob: -3.9244706630706787
    7. ' dist' → logprob: -4.049470901489258
    8. 'distance' → logprob: -4.299470901489258
    9. '#' → logprob: -4.424470901489258
    10. '   ' → logprob: -4.424470901489258

Token 1317: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12684431672096252
    2. ',' → logprob: -4.00184440612793
    3. ')' → logprob: -4.12684440612793
    4. '   ' → logprob: -4.50184440612793
    5. '        
' → logprob: -4.87684440612793
    6. '
' → logprob: -5.12684440612793
    7. '[' → logprob: -5.37684440612793
    8. ']' → logprob: -5.50184440612793
    9. ' for' → logprob: -5.50184440612793
    10. 's' → logprob: -5.50184440612793

Token 1318: ' another' (ID: 3613)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.42426565289497375
    2. 'other' → logprob: -1.4242656230926514
    3. 'from' → logprob: -3.2992656230926514
    4. 'previous' → logprob: -3.6742656230926514
    5. ' other' → logprob: -4.0492658615112305
    6. 'prev' → logprob: -5.1742658615112305
    7. 'for' → logprob: -5.5492658615112305
    8. 'product' → logprob: -5.7992658615112305
    9. 'another' → logprob: -5.7992658615112305
    10. 'adj' → logprob: -6.1742658615112305

Token 1319: ' shelf' (ID: 40978)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2635175883769989
    2. '[i' → logprob: -2.5135176181793213
    3. '#' → logprob: -3.7635176181793213
    4. '
' → logprob: -4.013517379760742
    5. '[' → logprob: -4.138517379760742
    6. 'sale' → logprob: -4.388517379760742
    7. '_' → logprob: -4.638517379760742
    8. 'product' → logprob: -4.638517379760742
    9. 'i' → logprob: -4.763517379760742
    10. 'for' → logprob: -5.013517379760742

Token 1320: ' aisle' (ID: 99887)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5780864953994751
    2. '   ' → logprob: -2.5780863761901855
    3. ')' → logprob: -2.9530863761901855
    4. '<|end|>' → logprob: -3.0780863761901855
    5. ',' → logprob: -3.4530863761901855
    6. '\n' → logprob: -3.5780863761901855
    7. ']' → logprob: -3.9530863761901855
    8. ':' → logprob: -4.2030863761901855
    9. '\' → logprob: -4.3280863761901855
    10. '[' → logprob: -4.4530863761901855

Token 1321: ' adjacency' (ID: 177015)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09068095684051514
    2. 'for' → logprob: -3.7156810760498047
    3. ' for' → logprob: -4.090681076049805
    4. '
' → logprob: -4.590681076049805
    5. '#' → logprob: -4.715681076049805
    6. 'g' → logprob: -5.340681076049805
    7. '```' → logprob: -5.465681076049805
    8. 'n' → logprob: -5.840681076049805
    9. '...' → logprob: -6.090681076049805
    10. '        
' → logprob: -6.465681076049805

Token 1322: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07539687305688858
    2. '
' → logprob: -4.07539701461792
    3. ' for' → logprob: -4.07539701461792
    4. 'for' → logprob: -4.32539701461792
    5. '```' → logprob: -5.20039701461792
    6. '#' → logprob: -5.57539701461792
    7. '   ' → logprob: -5.95039701461792
    8. 'g' → logprob: -6.07539701461792
    9. '        
' → logprob: -6.07539701461792
    10. 'n' → logprob: -6.45039701461792

Token 1323: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.7134836912155151
    2. '```' → logprob: -1.8384836912155151
    3. 'the' → logprob: -1.9634836912155151
    4. 'g' → logprob: -2.0884838104248047
    5. 'adj' → logprob: -3.4634838104248047
    6. 'p' → logprob: -3.7134838104248047
    7. 'discount' → logprob: -3.8384838104248047
    8. 'same' → logprob: -3.8384838104248047
    9. 'picked' → logprob: -3.8384838104248047
    10. 'b' → logprob: -3.8384838104248047

Token 1324: ' picked' (ID: 19148)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5009822845458984
    2. '       ' → logprob: -1.6259822845458984
    3. 's' → logprob: -2.0009822845458984
    4. '_' → logprob: -2.1259822845458984
    5. '
' → logprob: -3.3759822845458984
    6. '_info' → logprob: -3.3759822845458984
    7. '   ' → logprob: -3.5009822845458984
    8. '#' → logprob: -3.7509822845458984
    9. ' for' → logprob: -3.7509822845458984
    10. 'for' → logprob: -4.250982284545898

Token 1325: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09072625637054443
    2. '   ' → logprob: -2.715726375579834
    3. ' for' → logprob: -4.840726375579834
    4. 'def' → logprob: -5.590726375579834
    5. 'n' → logprob: -6.715726375579834
    6. '<|end|>' → logprob: -6.965726375579834
    7. '```' → logprob: -7.340726375579834
    8. ')' → logprob: -7.465726375579834
    9. '
' → logprob: -7.590726375579834
    10. '#' → logprob: -7.590726375579834

Token 1326: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7230373024940491
    2. ' continue' → logprob: -2.0980372428894043
    3. '        ' → logprob: -2.9730372428894043
    4. ' 
' → logprob: -3.0980372428894043
    5. '#' → logprob: -3.3480372428894043
    6. '<|end|>' → logprob: -3.5980372428894043
    7. ' #' → logprob: -3.7230372428894043
    8. ' ' → logprob: -3.8480372428894043
    9. 'continue' → logprob: -3.8480372428894043
    10. '        
' → logprob: -3.9730372428894043

Token 1327: ' each' (ID: 2454)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.8567628860473633
    2. 'next' → logprob: -1.9817628860473633
    3. 'reach' → logprob: -1.9817628860473633
    4. 'pick' → logprob: -1.9817628860473633
    5. 'complete' → logprob: -2.6067628860473633
    6. 'get' → logprob: -2.9817628860473633
    7. 'continue' → logprob: -2.9817628860473633
    8. 'each' → logprob: -3.3567628860473633
    9. 'purchase' → logprob: -3.3567628860473633
    10. 'g' → logprob: -3.4817628860473633

Token 1328: ' shelf' (ID: 40978)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2723711729049683
    2. 'g' → logprob: -1.2723711729049683
    3. 'i' → logprob: -2.022371292114258
    4. '[i' → logprob: -2.147371292114258
    5. '_' → logprob: -2.897371292114258
    6. '][' → logprob: -3.522371292114258
    7. '_i' → logprob: -3.897371292114258
    8. '(i' → logprob: -4.147371292114258
    9. ']_' → logprob: -4.522371292114258
    10. '
' → logprob: -5.272371292114258

Token 1329: ' adjacency' (ID: 177015)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6430794596672058
    2. '<|end|>' → logprob: -1.5180795192718506
    3. '_' → logprob: -2.5180795192718506
    4. '   ' → logprob: -3.1430795192718506
    5. '
' → logprob: -3.3930795192718506
    6. 'def' → logprob: -4.0180792808532715
    7. '(
' → logprob: -4.6430792808532715
    8. '(' → logprob: -4.7680792808532715
    9. '<|end|>' → logprob: -4.8930792808532715
    10. '[' → logprob: -5.0180792808532715

Token 1330: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18838226795196533
    2. '<|end|>' → logprob: -2.063382148742676
    3. '   ' → logprob: -4.188382148742676
    4. ')' → logprob: -4.938382148742676
    5. '...' → logprob: -5.188382148742676
    6. 'def' → logprob: -5.688382148742676
    7. '#' → logprob: -6.188382148742676
    8. '<|end|>' → logprob: -6.188382148742676
    9. ' for' → logprob: -6.313382148742676
    10. '        ' → logprob: -6.688382148742676

Token 1331: ' that' (ID: 484)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.01449418906122446
    2. ' g' → logprob: -5.0144944190979
    3. 'product' → logprob: -5.8894944190979
    4. 'sale' → logprob: -6.2644944190979
    5. 'the' → logprob: -6.7644944190979
    6. 's' → logprob: -7.5144944190979
    7. 'products' → logprob: -8.014493942260742
    8. 'sales' → logprob: -8.889493942260742
    9. ' product' → logprob: -9.264493942260742
    10. '   ' → logprob: -9.826993942260742

Token 1332: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.35298267006874084
    2. 'g' → logprob: -1.2279826402664185
    3. 'sale' → logprob: -6.102982521057129
    4. ' product' → logprob: -6.727982521057129
    5. 's' → logprob: -7.977982521057129
    6. '<|end|>' → logprob: -8.602982521057129
    7. ' g' → logprob: -8.852982521057129
    8. 'p' → logprob: -9.352982521057129
    9. '
' → logprob: -9.602982521057129
    10. '...' → logprob: -9.977982521057129

Token 1333: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06300714612007141
    2. '<|end|>' → logprob: -3.438007116317749
    3. '#' → logprob: -4.063007354736328
    4. '...' → logprob: -6.063007354736328
    5. '        
' → logprob: -6.188007354736328
    6. 'g' → logprob: -6.813007354736328
    7. ' for' → logprob: -6.813007354736328
    8. 'for' → logprob: -7.063007354736328
    9. 'import' → logprob: -7.063007354736328
    10. '
' → logprob: -7.438007354736328

Token 1334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028723590075969696
    2. '<|end|>' → logprob: -5.65372371673584
    3. ' for' → logprob: -5.90372371673584
    4. ' sale' → logprob: -6.15372371673584
    5. 'def' → logprob: -6.27872371673584
    6. '        
' → logprob: -6.27872371673584
    7. '   ' → logprob: -6.27872371673584
    8. ')' → logprob: -6.40372371673584
    9. '        ' → logprob: -6.40372371673584
    10. 'n' → logprob: -6.40372371673584

Token 1335: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9691594243049622
    2. ' for' → logprob: -1.2191593647003174
    3. '       ' → logprob: -1.4691593647003174
    4. '#' (adapté à ' #') → logprob: -3.8441593647003174
    5. 'dist' → logprob: -4.4691596031188965
    6. 'g' → logprob: -4.7191596031188965
    7. 'dp' → logprob: -4.8441596031188965
    8. 'def' → logprob: -5.0941596031188965
    9. 'import' → logprob: -5.5941596031188965
    10. 'from' → logprob: -5.7191596031188965

Token 1336: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.016824722290039
    2. 'for' → logprob: -1.016824722290039
    3. 'dp' → logprob: -2.266824722290039
    4. 'def' → logprob: -3.266824722290039
    5. '#' → logprob: -3.891824722290039
    6. 'dist' → logprob: -4.016824722290039
    7. 'from' → logprob: -4.266824722290039
    8. 'sale' → logprob: -4.391824722290039
    9. 'g' → logprob: -5.016824722290039
    10. '   ' → logprob: -5.016824722290039

Token 1337: ' will' (ID: 738)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.010389804840088
    2. ' continue' → logprob: -1.885389804840088
    3. 'continue' → logprob: -2.135389804840088
    4. '=' → logprob: -2.385389804840088
    5. '[
' → logprob: -2.885389804840088
    6. ' =' → logprob: -2.885389804840088
    7. ']' → logprob: -3.010389804840088
    8. 'def' → logprob: -3.760389804840088
    9. '#' → logprob: -4.510389804840088
    10. '.append' → logprob: -5.135389804840088

Token 1338: ' pick' (ID: 5230)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.03115903213620186
    2. ' continue' → logprob: -4.406158924102783
    3. 'def' → logprob: -4.781158924102783
    4. 'import' → logprob: -5.906158924102783
    5. 'define' → logprob: -7.031158924102783
    6. 'append' → logprob: -7.156158924102783
    7. 'calculate' → logprob: -7.281158924102783
    8. '#' → logprob: -7.406158924102783
    9. '```' → logprob: -7.531158924102783
    10. 'return' → logprob: -7.906158924102783

Token 1339: ' one' (ID: 1001)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.8011178970336914
    2. '_' → logprob: -2.1761178970336914
    3. 'n' → logprob: -2.1761178970336914
    4. 's' → logprob: -2.6761178970336914
    5. 'for' → logprob: -2.8011178970336914
    6. ']' → logprob: -3.0511178970336914
    7. '[
' → logprob: -3.0511178970336914
    8. ' for' → logprob: -3.3011178970336914
    9. '<|end|>' → logprob: -3.3011178970336914
    10. ')' → logprob: -3.4261178970336914

Token 1340: ' shelf' (ID: 40978)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7223175168037415
    2. '_' → logprob: -2.0973174571990967
    3. ' more' → logprob: -3.0973174571990967
    4. '#' → logprob: -3.4723174571990967
    5. 's' → logprob: -3.5973174571990967
    6. ']' → logprob: -3.9723174571990967
    7. '   ' → logprob: -4.097317695617676
    8. ' of' → logprob: -4.097317695617676
    9. 'more' → logprob: -4.097317695617676
    10. 'for' → logprob: -4.222317695617676

Token 1341: ' position' (ID: 4010)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1342: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.72333163022995
    2. '   ' → logprob: -1.5983316898345947
    3. '
' → logprob: -2.0983316898345947
    4. ')' → logprob: -3.0983316898345947
    5. 'def' → logprob: -3.8483316898345947
    6. '#' → logprob: -4.348331451416016
    7. ',' → logprob: -4.473331451416016
    8. ' 
' → logprob: -4.723331451416016
    9. ']' → logprob: -4.973331451416016
    10. '        
' → logprob: -5.098331451416016

Token 1343: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.6157001852989197
    2. ' minimal' → logprob: -1.4907002449035645
    3. 'lowest' → logprob: -2.6157002449035645
    4. 'the' → logprob: -2.9907002449035645
    5. 'minimum' → logprob: -3.1157002449035645
    6. 'min' → logprob: -3.6157002449035645
    7. 'adj' → logprob: -4.2407002449035645
    8. '
' → logprob: -5.7407002449035645
    9. 'least' → logprob: -5.7407002449035645
    10. 'best' → logprob: -5.8657002449035645

Token 1344: ' arrival' (ID: 24861)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3726646602153778
    2. 'cost' → logprob: -2.1226646900177
    3. 'distance' → logprob: -2.1226646900177
    4. '_dist' → logprob: -3.8726646900177
    5. 'adj' → logprob: -4.247664451599121
    6. 'access' → logprob: -4.872664451599121
    7. ' cost' → logprob: -5.497664451599121
    8. '_adj' → logprob: -5.497664451599121
    9. ' distance' → logprob: -5.622664451599121
    10. '_distance' → logprob: -5.747664451599121

Token 1345: ' time' (ID: 1058)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04112390801310539
    2. '_cost' → logprob: -3.791123867034912
    3. '_
' → logprob: -5.666123867034912
    4. 'cost' → logprob: -6.041123867034912
    5. '_distance' → logprob: -6.166123867034912
    6. '_dist' → logprob: -6.416123867034912
    7. '_idx' → logprob: -6.791123867034912
    8. '_token' → logprob: -7.041123867034912
    9. ' cost' → logprob: -7.041123867034912
    10. 'distance' → logprob: -7.291123867034912

Token 1346: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0339522622525692
    2. ' for' → logprob: -5.158952236175537
    3. '   ' → logprob: -5.283952236175537
    4. 'def' → logprob: -5.783952236175537
    5. '<|end|>' → logprob: -6.033952236175537
    6. '
' → logprob: -6.283952236175537
    7. '        
' → logprob: -6.283952236175537
    8. ',' → logprob: -6.658952236175537
    9. 'g' → logprob: -6.658952236175537
    10. '#' → logprob: -6.908952236175537

Token 1347: ' product' (ID: 1888)
  Prédit: 'sale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sale' → logprob: -0.22690348327159882
    2. 'product' → logprob: -1.9769034385681152
    3. 'i' → logprob: -3.6019034385681152
    4. ' sale' → logprob: -4.226903438568115
    5. 'g' → logprob: -4.726903438568115
    6. ' product' → logprob: -5.726903438568115
    7. 'item' → logprob: -6.351903438568115
    8. '
' → logprob: -6.726903438568115
    9. ' i' → logprob: -6.726903438568115
    10. 's' → logprob: -6.851903438568115

Token 1348: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4088912010192871
    2. '<|end|>' → logprob: -1.283891201019287
    3. '   ' → logprob: -4.033891201019287
    4. 'def' → logprob: -4.408891201019287
    5. '...' → logprob: -5.408891201019287
    6. '<|end|>' → logprob: -5.658891201019287
    7. ')' → logprob: -5.908891201019287
    8. ',' → logprob: -6.158891201019287
    9. ' for' → logprob: -6.158891201019287
    10. '#' → logprob: -6.533891201019287

Token 1349: ' maximize' (ID: 44207)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.2086763381958008
    2. 'complete' → logprob: -1.3336763381958008
    3. 'pick' → logprob: -1.5836763381958008
    4. 'finish' → logprob: -2.833676338195801
    5. 'purchase' → logprob: -3.083676338195801
    6. 'buy' → logprob: -3.333676338195801
    7. 'collect' → logprob: -4.333676338195801
    8. 'consider' → logprob: -4.958676338195801
    9. 'choose' → logprob: -5.083676338195801
    10. 'store' → logprob: -5.083676338195801

Token 1350: ' chance' (ID: 8058)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8537736535072327
    2. ')' → logprob: -2.478773593902588
    3. 'i' → logprob: -2.978773593902588
    4. 'product' → logprob: -2.978773593902588
    5. 'time' → logprob: -3.478773593902588
    6. '#' → logprob: -3.728773593902588
    7. ' _' → logprob: -3.978773593902588
    8. 'space' → logprob: -3.978773593902588
    9. 'coverage' → logprob: -4.228773593902588
    10. '_time' → logprob: -4.353773593902588

Token 1351: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03734166920185089
    2. 'def' → logprob: -4.162341594696045
    3. '   ' → logprob: -5.037341594696045
    4. '<|end|>' → logprob: -5.912341594696045
    5. ' for' → logprob: -6.162341594696045
    6. ')' → logprob: -6.662341594696045
    7. 'n' → logprob: -6.912341594696045
    8. ',' → logprob: -7.037341594696045
    9. '#' → logprob: -7.287341594696045
    10. '        
' → logprob: -7.412341594696045

Token 1352: ' buying' (ID: 12398)
  Prédit: 'purchase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'purchase' → logprob: -0.8602160215377808
    2. 'success' → logprob: -1.7352160215377808
    3. 'buy' → logprob: -2.7352161407470703
    4. 'sale' → logprob: -2.8602161407470703
    5. 'discount' → logprob: -2.9852161407470703
    6. 'getting' → logprob: -2.9852161407470703
    7. 'completion' → logprob: -2.9852161407470703
    8. 'p' → logprob: -3.6102161407470703
    9. 'com' → logprob: -4.23521614074707
    10. 'sol' → logprob: -4.36021614074707

Token 1353: ' within' (ID: 3518)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03601425141096115
    2. 'def' → logprob: -4.036014080047607
    3. '   ' → logprob: -4.536014080047607
    4. ' for' → logprob: -6.161014080047607
    5. '...' → logprob: -6.786014080047607
    6. ')' → logprob: -7.411014080047607
    7. '#' → logprob: -7.661014080047607
    8. '        
' → logprob: -7.786014080047607
    9. '<|end|>' → logprob: -8.286014556884766
    10. 'import' → logprob: -8.286014556884766

Token 1354: ' sale' (ID: 7357)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.32660987973213196
    2. 'n' → logprob: -2.2016098499298096
    3. 'time' → logprob: -3.0766098499298096
    4. '```' → logprob: -3.9516098499298096
    5. 'product' → logprob: -4.326610088348389
    6. 'g' → logprob: -4.451610088348389
    7. 'sale' → logprob: -4.451610088348389
    8. 'the' → logprob: -4.576610088348389
    9. 's' → logprob: -4.576610088348389
    10. ' range' → logprob: -4.826610088348389

Token 1355: ' time' (ID: 1058)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5591451525688171
    2. '<|end|>' → logprob: -1.809145212173462
    3. '   ' → logprob: -1.934145212173462
    4. 'def' → logprob: -2.684145212173462
    5. '...' → logprob: -4.184144973754883
    6. ')' → logprob: -4.934144973754883
    7. ' for' → logprob: -5.809144973754883
    8. '
' → logprob: -6.059144973754883
    9. '           ' → logprob: -6.559144973754883
    10. '#' → logprob: -6.559144973754883

Token 1356: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8186743259429932
    2. '       ' → logprob: -1.0686743259429932
    3. 'def' → logprob: -1.8186743259429932
    4. '<|end|>' → logprob: -3.693674325942993
    5. '#' → logprob: -5.193674087524414
    6. ')' → logprob: -5.693674087524414
    7. ' for' → logprob: -5.818674087524414
    8. ' def' → logprob: -6.318674087524414
    9. ' #' → logprob: -6.318674087524414
    10. ' pass' → logprob: -6.568674087524414

Token 1357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08842337131500244
    2. 'def' → logprob: -3.088423252105713
    3. '   ' → logprob: -4.588423252105713
    4. '<|end|>' → logprob: -5.338423252105713
    5. '#' → logprob: -5.463423252105713
    6. ' for' → logprob: -5.963423252105713
    7. '        
' → logprob: -6.088423252105713
    8. ',' → logprob: -6.213423252105713
    9. 'n' → logprob: -6.463423252105713
    10. 'import' → logprob: -6.463423252105713

Token 1358: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10800226777791977
    2. 'for' → logprob: -3.358002185821533
    3. ' for' → logprob: -3.858002185821533
    4. 'def' → logprob: -4.108002185821533
    5. 'dp' → logprob: -5.108002185821533
    6. 'import' → logprob: -5.108002185821533
    7. '   ' → logprob: -5.733002185821533
    8. '```' → logprob: -5.858002185821533
    9. '#' (adapté à ' #') → logprob: -6.108002185821533
    10. 'sale' → logprob: -6.608002185821533

Token 1359: ' Prepare' (ID: 49102)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8328916430473328
    2. 'dp' → logprob: -1.0828917026519775
    3. '       ' → logprob: -3.0828917026519775
    4. 'def' → logprob: -3.3328917026519775
    5. 'visited' → logprob: -3.5828917026519775
    6. 'from' → logprob: -3.8328917026519775
    7. '#' → logprob: -4.332891464233398
    8. 'INF' → logprob: -4.457891464233398
    9. 'dist' → logprob: -4.582891464233398
    10. 'idx' → logprob: -4.707891464233398

Token 1360: ' a' (ID: 261)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.48795053362846375
    2. 'product' → logprob: -2.612950563430786
    3. 'for' → logprob: -3.237950563430786
    4. 'from' → logprob: -3.237950563430786
    5. 'sale' → logprob: -3.237950563430786
    6. 'visited' → logprob: -3.487950563430786
    7. 'dist' → logprob: -3.862950563430786
    8. 'prod' → logprob: -4.112950325012207
    9. 'import' → logprob: -4.237950325012207
    10. 'pos' → logprob: -4.362950325012207

Token 1361: ' list' (ID: 1562)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28985244035720825
    2. 'visited' → logprob: -2.6648523807525635
    3. 'def' → logprob: -2.9148523807525635
    4. 'bit' → logprob: -4.039852619171143
    5. 'dist' → logprob: -4.164852619171143
    6. 'from' → logprob: -4.289852619171143
    7. 'mask' → logprob: -4.664852619171143
    8. 'default' → logprob: -4.789852619171143
    9. 'for' → logprob: -4.789852619171143
    10. 'queue' → logprob: -5.289852619171143

Token 1362: ' for' (ID: 395)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.6331692934036255
    2. 'of' → logprob: -1.8831692934036255
    3. 'product' → logprob: -2.508169174194336
    4. '[
' → logprob: -2.508169174194336
    5. '[' → logprob: -2.633169174194336
    6. '_sale' → logprob: -2.758169174194336
    7. 'for' → logprob: -2.883169174194336
    8. 'sale' → logprob: -3.008169174194336
    9. ' for' → logprob: -3.508169174194336
    10. ' =' → logprob: -3.758169174194336

Token 1363: ' easier' (ID: 11087)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4653736650943756
    2. 'g' → logprob: -2.2153737545013428
    3. 'product' → logprob: -2.7153737545013428
    4. 'p' → logprob: -3.3403737545013428
    5. 'range' → logprob: -3.3403737545013428
    6. 'idx' → logprob: -4.090373516082764
    7. 'dp' → logprob: -4.215373516082764
    8. 'sale' → logprob: -4.215373516082764
    9. 'b' → logprob: -4.590373516082764
    10. 'products' → logprob: -4.715373516082764

Token 1364: ' indexing' (ID: 105989)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.12446928024292
    2. 'access' → logprob: -1.87446928024292
    3. 'processing' → logprob: -2.37446928024292
    4. 'reading' → logprob: -2.87446928024292
    5. 'for' → logprob: -2.99946928024292
    6. 'continu' → logprob: -3.49946928024292
    7. 'product' → logprob: -3.74946928024292
    8. 'par' → logprob: -3.87446928024292
    9. 'continue' → logprob: -3.87446928024292
    10. 'use' → logprob: -4.24946928024292

Token 1365: ':
' (ID: 734)
  Prédit: 'sale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sale' → logprob: -1.057045817375183
    2. 'product' → logprob: -1.682045817375183
    3. ' sale' → logprob: -1.932045817375183
    4. ' product' → logprob: -2.0570459365844727
    5. 'g' → logprob: -2.6820459365844727
    6. ' g' → logprob: -3.6820459365844727
    7. 'n' → logprob: -4.182045936584473
    8. ' n' → logprob: -4.682045936584473
    9. '[' → logprob: -5.057045936584473
    10. '[]' → logprob: -5.307045936584473

Token 1366: '       ' (ID: 309)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.3834789991378784
    2. 'g' → logprob: -1.6334789991378784
    3. 'sale' → logprob: -2.258479118347168
    4. ' product' → logprob: -2.383479118347168
    5. ' sale' → logprob: -2.633479118347168
    6. '       ' → logprob: -3.008479118347168
    7. '```' → logprob: -3.133479118347168
    8. 'n' → logprob: -3.258479118347168
    9. ' for' → logprob: -3.508479118347168
    10. ' g' → logprob: -3.508479118347168

Token 1367: ' #' (ID: 1069)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.383373498916626
    2. 'g' → logprob: -1.633373498916626
    3. '```' → logprob: -2.258373498916626
    4. '       ' → logprob: -2.383373498916626
    5. 'n' → logprob: -2.508373498916626
    6. ' product' → logprob: -2.633373498916626
    7. 'sale' → logprob: -2.883373498916626
    8. ' for' → logprob: -3.383373498916626
    9. ' sale' → logprob: -3.883373498916626
    10. 'for' → logprob: -3.883373498916626

Token 1368: ' For' (ID: 2214)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.3613308668136597
    2. 'pos' → logprob: -1.9863308668136597
    3. 'products' → logprob: -1.9863308668136597
    4. 'for' → logprob: -2.236330986022949
    5. 'g' → logprob: -2.611330986022949
    6. 'prod' → logprob: -3.111330986022949
    7. 'positions' → logprob: -3.111330986022949
    8. 'idx' → logprob: -3.236330986022949
    9. '#' → logprob: -3.361330986022949
    10. 'dp' → logprob: -3.861330986022949

Token 1369: ' each' (ID: 2454)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33808770775794983
    2. 'i' → logprob: -1.4630876779556274
    3. 'g' → logprob: -4.088087558746338
    4. '_i' → logprob: -4.213087558746338
    5. ' i' → logprob: -4.338087558746338
    6. ' _' → logprob: -5.088087558746338
    7. ' g' → logprob: -6.838087558746338
    8. '_]' → logprob: -6.963087558746338
    9. 'x' → logprob: -7.838087558746338
    10. '_g' → logprob: -8.338088035583496

Token 1370: ' sale' (ID: 7357)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8840070366859436
    2. 'g' → logprob: -1.0090069770812988
    3. '_' → logprob: -2.134006977081299
    4. 'product' → logprob: -3.884006977081299
    5. ' i' → logprob: -4.134006977081299
    6. ' g' → logprob: -4.384006977081299
    7. '_i' → logprob: -4.384006977081299
    8. ' _' → logprob: -5.009006977081299
    9. 'sale' → logprob: -5.134006977081299
    10. 'n' → logprob: -5.384006977081299

Token 1371: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7786996364593506
    2. '_,' → logprob: -2.4036996364593506
    3. ',' → logprob: -2.5286996364593506
    4. ':' → logprob: -2.6536996364593506
    5. '_info' → logprob: -3.0286996364593506
    6. 'g' → logprob: -3.1536996364593506
    7. '[' → logprob: -3.6536996364593506
    8. '_code' → logprob: -3.7786996364593506
    9. '```' → logprob: -4.15369987487793
    10. '[i' → logprob: -4.27869987487793

Token 1372: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2564097046852112
    2. ',' → logprob: -1.8814096450805664
    3. ':
' → logprob: -4.506409645080566
    4. '_' → logprob: -4.631409645080566
    5. '```' → logprob: -5.256409645080566
    6. ' in' → logprob: -5.631409645080566
    7. ' =' → logprob: -5.631409645080566
    8. '=' → logprob: -5.881409645080566
    9. ',g' → logprob: -5.881409645080566
    10. ',i' → logprob: -6.006409645080566

Token 1373: ' store' (ID: 4897)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.23677438497543335
    2. ' g' → logprob: -1.6117744445800781
    3. 'product' → logprob: -5.486774444580078
    4. ' product' → logprob: -5.736774444580078
    5. '   ' → logprob: -7.361774444580078
    6. '
' → logprob: -7.736774444580078
    7. 'prod' → logprob: -8.111774444580078
    8. '`' → logprob: -8.236774444580078
    9. ' prod' → logprob: -8.361774444580078
    10. 'p' → logprob: -8.361774444580078

Token 1374: ' (' (ID: 350)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.2860349416732788
    2. '(' → logprob: -1.7860349416732788
    3. 'product' → logprob: -1.9110349416732788
    4. '[]' → logprob: -1.9110349416732788
    5. 'g' → logprob: -2.6610350608825684
    6. '[g' → logprob: -2.7860350608825684
    7. '{
' → logprob: -3.4110350608825684
    8. '(product' → logprob: -3.7860350608825684
    9. '{' → logprob: -4.036035060882568
    10. '[(' → logprob: -4.161035060882568

Token 1375: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.01809586025774479
    2. 'product' → logprob: -4.393095970153809
    3. 'dist' → logprob: -7.143095970153809
    4. 'prod' → logprob: -7.143095970153809
    5. 'x' → logprob: -7.268095970153809
    6. ')' → logprob: -7.768095970153809
    7. '0' → logprob: -8.018095970153809
    8. '(' → logprob: -8.018095970153809
    9. 'i' → logprob: -8.143095970153809
    10. '(g' → logprob: -8.393095970153809

Token 1376: ',d' (ID: 26159)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029058748856186867
    2. ')' → logprob: -4.904058933258057
    3. ')[' → logprob: -5.279058933258057
    4. '[' → logprob: -5.404058933258057
    5. ',i' → logprob: -5.654058933258057
    6. ',' → logprob: -6.279058933258057
    7. 'i' → logprob: -6.279058933258057
    8. '[
' → logprob: -7.154058933258057
    9. 's' → logprob: -7.404058933258057
    10. '```' → logprob: -7.779058933258057

Token 1377: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0949674844741821
    2. ',i' → logprob: -1.0949674844741821
    3. ',s' → logprob: -1.2199674844741821
    4. '[i' → logprob: -4.094967365264893
    5. ',start' → logprob: -5.594967365264893
    6. 's' → logprob: -5.719967365264893
    7. ',e' → logprob: -6.219967365264893
    8. 'i' → logprob: -6.469967365264893
    9. ')' → logprob: -6.844967365264893
    10. ',n' → logprob: -6.844967365264893

Token 1378: ',e' (ID: 43127)
  Prédit: ',e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.005634977947920561
    2. ',' → logprob: -5.755634784698486
    3. ',i' → logprob: -6.130634784698486
    4. ',t' → logprob: -8.505635261535645
    5. ',
' → logprob: -10.755635261535645
    6. 'e' → logprob: -11.380635261535645
    7. ' ,' → logprob: -11.880635261535645
    8. 't' → logprob: -12.255635261535645
    9. '           ' → logprob: -12.505635261535645
    10. '       ' → logprob: -12.755635261535645

Token 1379: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5550841093063354
    2. ',i' → logprob: -1.3050841093063354
    3. ',' → logprob: -2.055084228515625
    4. '[i' → logprob: -4.305084228515625
    5. ')
' → logprob: -5.930084228515625
    6. '   ' → logprob: -6.055084228515625
    7. ',g' → logprob: -6.180084228515625
    8. ')[' → logprob: -6.555084228515625
    9. ')=' → logprob: -7.055084228515625
    10. '),' → logprob: -7.305084228515625

Token 1380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1857064813375473
    2. ',' → logprob: -2.685706377029419
    3. ')' → logprob: -4.310706615447998
    4. '<|end|>' → logprob: -4.810706615447998
    5. 'sale' → logprob: -4.935706615447998
    6. '[
' → logprob: -5.060706615447998
    7. '[' → logprob: -5.185706615447998
    8. 'for' → logprob: -5.185706615447998
    9. 'product' → logprob: -5.185706615447998
    10. '        
' → logprob: -5.310706615447998

Token 1381: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2454775720834732
    2. ' for' → logprob: -2.7454776763916016
    3. 'g' → logprob: -3.4954776763916016
    4. 'def' → logprob: -3.4954776763916016
    5. 'for' → logprob: -3.6204776763916016
    6. '   ' → logprob: -3.9954776763916016
    7. 'import' → logprob: -4.870477676391602
    8. '#' (adapté à ' #') → logprob: -4.995477676391602
    9. '        
' → logprob: -5.245477676391602
    10. 'product' → logprob: -5.745477676391602

Token 1382: ' Build' (ID: 10885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8716894388198853
    2. '   ' → logprob: -2.2466893196105957
    3. 'dp' → logprob: -2.2466893196105957
    4. '       ' → logprob: -2.6216893196105957
    5. '#' → logprob: -3.1216893196105957
    6. 'g' → logprob: -3.3716893196105957
    7. 'idx' → logprob: -3.3716893196105957
    8. 'sale' → logprob: -3.3716893196105957
    9. 'product' → logprob: -3.8716893196105957
    10. 'def' → logprob: -3.9966893196105957

Token 1383: ' dist' (ID: 3601)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04240968078374863
    2. 'graph' → logprob: -4.667409896850586
    3. 'dist' → logprob: -5.167409896850586
    4. 'sale' → logprob: -5.542409896850586
    5. ' dp' → logprob: -5.667409896850586
    6. 'product' → logprob: -5.792409896850586
    7. 'from' → logprob: -5.917409896850586
    8. 'sales' → logprob: -6.167409896850586
    9. 'import' → logprob: -6.417409896850586
    10. 'pos' → logprob: -6.667409896850586

Token 1384: ' matrix' (ID: 12248)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.609709620475769
    2. 's' → logprob: -1.359709620475769
    3. '_to' → logprob: -2.8597097396850586
    4. 'ance' → logprob: -3.7347097396850586
    5. '_matrix' → logprob: -4.109709739685059
    6. 'from' → logprob: -4.234709739685059
    7. '_' → logprob: -4.234709739685059
    8. '_list' → logprob: -4.359709739685059
    9. 'ances' → logprob: -4.484709739685059
    10. '_for' → logprob: -4.984709739685059

Token 1385: ' between' (ID: 2870)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7648788094520569
    2. 'n' → logprob: -1.889878749847412
    3. '[n' → logprob: -2.889878749847412
    4. 'import' → logprob: -2.889878749847412
    5. '   ' → logprob: -3.139878749847412
    6. ' dist' → logprob: -3.889878749847412
    7. ']' → logprob: -3.889878749847412
    8. ' n' → logprob: -4.014878749847412
    9. 'sale' → logprob: -4.389878749847412
    10. '[' → logprob: -4.514878749847412

Token 1386: ' sales' (ID: 7155)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.8596938252449036
    2. 'products' → logprob: -1.2346937656402588
    3. 'sale' → logprob: -2.609693765640259
    4. 'sales' → logprob: -2.734693765640259
    5. 'i' → logprob: -2.859693765640259
    6. 'nodes' → logprob: -4.109694004058838
    7. 'product' → logprob: -4.734694004058838
    8. 'points' → logprob: -4.734694004058838
    9. ' products' → logprob: -4.984694004058838
    10. 'n' → logprob: -5.109694004058838

Token 1387: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.905103325843811
    2. '
' → logprob: -1.655103325843811
    3. '   ' → logprob: -2.9051032066345215
    4. ',' → logprob: -2.9051032066345215
    5. ']' → logprob: -3.5301032066345215
    6. '        
' → logprob: -3.5301032066345215
    7. ')' → logprob: -3.6551032066345215
    8. '\n' → logprob: -4.0301032066345215
    9. ',
' → logprob: -4.1551032066345215
    10. '[' → logprob: -4.4051032066345215

Token 1388: ' start' (ID: 1604)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.19016386568546295
    2. 'start' → logprob: -1.9401638507843018
    3. 'points' → logprob: -4.440164089202881
    4. 'sales' → logprob: -5.315164089202881
    5. '[' → logprob: -6.065164089202881
    6. 'sale' → logprob: -6.065164089202881
    7. 'point' → logprob: -6.690164089202881
    8. 'all' → logprob: -6.940164089202881
    9. ' aisle' → logprob: -6.940164089202881
    10. '[]' → logprob: -7.565164089202881

Token 1389: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.865598738193512
    2. '
' → logprob: -2.365598678588867
    3. '_' → logprob: -2.740598678588867
    4. ',' → logprob: -2.865598678588867
    5. '[' → logprob: -2.865598678588867
    6. '        
' → logprob: -3.365598678588867
    7. ')' → logprob: -3.490598678588867
    8. ']' → logprob: -3.615598678588867
    9. '   ' → logprob: -3.740598678588867
    10. '[
' → logprob: -3.740598678588867

Token 1390: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.39675527811050415
    2. ' dist' → logprob: -1.6467552185058594
    3. 'dp' → logprob: -3.1467552185058594
    4. 'sale' → logprob: -3.8967552185058594
    5. 'sales' → logprob: -4.021755218505859
    6. '       ' → logprob: -4.646755218505859
    7. ' sale' → logprob: -4.896755218505859
    8. ' sales' → logprob: -5.146755218505859
    9. 'n' → logprob: -5.396755218505859
    10. ' n' → logprob: -5.396755218505859

Token 1391: '_start' (ID: 10949)
  Prédit: '_matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.5571250319480896
    2. '_from' → logprob: -2.0571250915527344
    3. '[' → logprob: -2.5571250915527344
    4. 's' → logprob: -2.5571250915527344
    5. '_' → logprob: -3.5571250915527344
    6. '[i' → logprob: -3.5571250915527344
    7. ' =' → logprob: -3.9321250915527344
    8. '=' → logprob: -4.307125091552734
    9. 'from' → logprob: -4.557125091552734
    10. '=[[' → logprob: -5.057125091552734

Token 1392: '[i' (ID: 1768)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8735558986663818
    2. '=' → logprob: -0.9985558986663818
    3. '[i' → logprob: -2.498555898666382
    4. '=[' → logprob: -3.248555898666382
    5. '[' → logprob: -3.623555898666382
    6. '_=' → logprob: -4.373556137084961
    7. ' =' → logprob: -4.498556137084961
    8. '=[]' → logprob: -4.748556137084961
    9. '_start' → logprob: -5.623556137084961
    10. '=[[' → logprob: -5.748556137084961

Token 1393: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.331285685300827
    2. ']' → logprob: -1.3312857151031494
    3. ']=' → logprob: -4.58128547668457
    4. '][]' → logprob: -5.83128547668457
    5. '],' → logprob: -6.20628547668457
    6. '[i' → logprob: -7.33128547668457
    7. ' ][' → logprob: -7.70628547668457
    8. '][:' → logprob: -8.58128547668457
    9. '].' → logprob: -8.70628547668457
    10. ']
' → logprob: -8.95628547668457

Token 1394: ' minimal' (ID: 19957)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.7750265598297119
    2. '=' → logprob: -1.150026559829712
    3. '=[]' → logprob: -1.525026559829712
    4. '=_' → logprob: -6.650026321411133
    5. ' =' → logprob: -7.025026321411133
    6. '=[]
' → logprob: -7.025026321411133
    7. '_' → logprob: -7.150026321411133
    8. '_=' → logprob: -8.400026321411133
    9. '=[[' → logprob: -8.400026321411133
    10. '[' → logprob: -8.775026321411133

Token 1395: ' distance' (ID: 9324)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.017877615988254547
    2. '_from' → logprob: -5.267877578735352
    3. '_
' → logprob: -6.517877578735352
    4. '[' → logprob: -6.642877578735352
    5. '_start' → logprob: -6.642877578735352
    6. '_to' → logprob: -6.767877578735352
    7. '_cost' → logprob: -7.017877578735352
    8. '_for' → logprob: -7.142877578735352
    9. '[_' → logprob: -7.392877578735352
    10. ' _' → logprob: -8.017877578735352

Token 1396: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1912560909986496
    2. '_' → logprob: -2.316256046295166
    3. '=[' → logprob: -3.191256046295166
    4. '=[]' → logprob: -4.066256046295166
    5. '_=' → logprob: -5.441256046295166
    6. '_start' → logprob: -5.691256046295166
    7. '_from' → logprob: -6.066256046295166
    8. '=_' → logprob: -6.066256046295166
    9. '[' → logprob: -6.441256046295166
    10. '[i' → logprob: -6.941256046295166

Token 1397: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0007026608218438923
    2. ' start' → logprob: -7.500702857971191
    3. 'ais' → logprob: -9.000702857971191
    4. '`' → logprob: -12.125702857971191
    5. '```' → logprob: -12.875702857971191
    6. '[start' → logprob: -13.250702857971191
    7. '
' → logprob: -13.625702857971191
    8. '_start' → logprob: -13.750702857971191
    9. '	start' → logprob: -13.750702857971191
    10. ' ' → logprob: -13.875702857971191

Token 1398: ' point' (ID: 2438)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.1291600912809372
    2. '=[' → logprob: -3.879160165786743
    3. '_from' → logprob: -3.879160165786743
    4. '_' → logprob: -4.004159927368164
    5. '=' → logprob: -4.129159927368164
    6. '=_' → logprob: -4.629159927368164
    7. '=[]' → logprob: -4.629159927368164
    8. ' =' → logprob: -5.004159927368164
    9. 's' → logprob: -5.629159927368164
    10. '[i' → logprob: -5.754159927368164

Token 1399: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3901429176330566
    2. '=[]' → logprob: -1.3901429176330566
    3. '=[' → logprob: -1.6401429176330566
    4. '_start' → logprob: -1.8901429176330566
    5. '=' → logprob: -2.1401429176330566
    6. '=[]
' → logprob: -4.640142917633057
    7. '_dist' → logprob: -4.890142917633057
    8. '=_' → logprob: -4.890142917633057
    9. ' =' → logprob: -5.515142917633057
    10. '_=' → logprob: -5.765142917633057

Token 1400: ' product' (ID: 1888)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.09682612121105194
    2. 'any' → logprob: -3.4718260765075684
    3. 'each' → logprob: -3.9718260765075684
    4. 's' → logprob: -4.471826076507568
    5. 'all' → logprob: -4.846826076507568
    6. 'the' → logprob: -5.346826076507568
    7. 'i' → logprob: -5.596826076507568
    8. ' aisle' → logprob: -5.846826076507568
    9. 'pick' → logprob: -6.471826076507568
    10. ' ais' → logprob: -6.596826076507568

Token 1401: ' i' (ID: 575)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.014331450685858727
    2. '_' → logprob: -5.264331340789795
    3. '_s' → logprob: -5.264331340789795
    4. 's' → logprob: -6.764331340789795
    5. '_from' → logprob: -7.139331340789795
    6. '_for' → logprob: -8.014331817626953
    7. '```' → logprob: -8.389331817626953
    8. '_list' → logprob: -9.139331817626953
    9. '_points' → logprob: -9.389331817626953
    10. ' _' → logprob: -9.389331817626953

Token 1402: ' shelf' (ID: 40978)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.49761027097702026
    2. '_' → logprob: -1.747610330581665
    3. '_start' → logprob: -2.122610330581665
    4. '=' → logprob: -3.247610330581665
    5. '=[]' → logprob: -3.997610330581665
    6. 'dist' → logprob: -4.497610092163086
    7. '=[' → logprob: -5.247610092163086
    8. '=[]
' → logprob: -5.372610092163086
    9. ' =' → logprob: -5.497610092163086
    10. '=_' → logprob: -5.622610092163086

Token 1403: '
' (ID: 198)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.027326583862304688
    2. '_s' → logprob: -4.527326583862305
    3. '_' → logprob: -5.027326583862305
    4. 's' → logprob: -5.277326583862305
    5. '_from' → logprob: -7.152326583862305
    6. '_points' → logprob: -7.152326583862305
    7. '_list' → logprob: -7.402326583862305
    8. '```' → logprob: -8.027326583862305
    9. '_for' → logprob: -8.277326583862305
    10. '_i' → logprob: -8.652326583862305

Token 1404: '       ' (ID: 309)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24320344626903534
    2. '_start' → logprob: -1.6182034015655518
    3. '_s' → logprob: -4.618203639984131
    4. 's' → logprob: -6.368203639984131
    5. '_
' → logprob: -7.118203639984131
    6. '_i' → logprob: -7.243203639984131
    7. '```' → logprob: -7.493203639984131
    8. '\' → logprob: -7.618203639984131
    9. ' _' → logprob: -7.993203639984131
    10. '[' → logprob: -8.368203163146973

Token 1405: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5173578262329102
    2. 'd' → logprob: -1.8923578262329102
    3. '_' → logprob: -2.39235782623291
    4. 'dist' → logprob: -2.76735782623291
    5. '[
' → logprob: -3.89235782623291
    6. '#' (adapté à ' #') → logprob: -4.51735782623291
    7. '\' → logprob: -4.64235782623291
    8. '=' → logprob: -4.64235782623291
    9. 's' → logprob: -5.14235782623291
    10. '(' → logprob: -5.14235782623291

Token 1406: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0005327790859155357
    2. ' dist' → logprob: -7.625532627105713
    3. '#' → logprob: -10.875533103942871
    4. '```' → logprob: -12.500533103942871
    5. '       ' → logprob: -12.625533103942871
    6. '   ' → logprob: -12.875533103942871
    7. '[' → logprob: -13.125533103942871
    8. '`' → logprob: -13.125533103942871
    9. '``' → logprob: -13.375533103942871
    10. 'n' → logprob: -13.375533103942871

Token 1407: '_p' (ID: 1359)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0031226985156536102
    2. '_sales' → logprob: -6.753122806549072
    3. 'start' → logprob: -7.628122806549072
    4. '_sale' → logprob: -7.878122806549072
    5. '_' → logprob: -8.378122329711914
    6. '_i' → logprob: -8.503122329711914
    7. '_from' → logprob: -8.503122329711914
    8. '_product' → logprob: -8.753122329711914
    9. '_s' → logprob: -9.378122329711914
    10. 's' → logprob: -9.503122329711914

Token 1408: '2' (ID: 17)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.7993622422218323
    2. 'rod' → logprob: -1.2993621826171875
    3. 'oints' → logprob: -2.0493621826171875
    4. 'os' → logprob: -2.9243621826171875
    5. 'r' → logprob: -3.7993621826171875
    6. '_start' → logprob: -3.9243621826171875
    7. 'rices' → logprob: -5.2993621826171875
    8. 'start' → logprob: -5.5493621826171875
    9. 'icks' → logprob: -5.5493621826171875
    10. 'oint' → logprob: -5.5493621826171875

Token 1409: 'p' (ID: 79)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -1.0882357358932495
    2. '2' → logprob: -1.3382357358932495
    3. 'os' → logprob: -1.9632357358932495
    4. '[i' → logprob: -2.713235855102539
    5. 'r' → logprob: -2.838235855102539
    6. '_to' → logprob: -3.088235855102539
    7. 'rod' → logprob: -3.463235855102539
    8. '_start' → logprob: -3.713235855102539
    9. 'start' → logprob: -5.088235855102539
    10. '_from' → logprob: -5.463235855102539

Token 1410: '[i' (ID: 1768)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.44765505194664
    2. '_' → logprob: -1.0726550817489624
    3. '_p' → logprob: -5.447655200958252
    4. '=[' → logprob: -5.822655200958252
    5. '=' → logprob: -6.322655200958252
    6. ' =' → logprob: -6.697655200958252
    7. '[i' → logprob: -6.822655200958252
    8. '[' → logprob: -6.947655200958252
    9. '=_' → logprob: -6.947655200958252
    10. '_s' → logprob: -7.197655200958252

Token 1411: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.023166174069046974
    2. ']' → logprob: -4.148166179656982
    3. '][]' → logprob: -5.773166179656982
    4. '[i' → logprob: -7.148166179656982
    5. ']=' → logprob: -7.398166179656982
    6. 's' → logprob: -7.523166179656982
    7. '[' → logprob: -7.648166179656982
    8. '[j' → logprob: -8.398165702819824
    9. '=' → logprob: -8.523165702819824
    10. ',j' → logprob: -9.273165702819824

Token 1412: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7253285050392151
    2. 'i' → logprob: -1.2253284454345703
    3. ']' → logprob: -2.1003284454345703
    4. '][' → logprob: -2.3503284454345703
    5. '][]' → logprob: -6.85032844543457
    6. ')' → logprob: -7.35032844543457
    7. '[' → logprob: -8.22532844543457
    8. ' j' → logprob: -8.47532844543457
    9. '
' → logprob: -8.47532844543457
    10. ',' → logprob: -8.47532844543457

Token 1413: ']:' (ID: 12433)
  Prédit: ']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.9105658531188965
    2. ']' → logprob: -1.1605658531188965
    3. '][' → logprob: -1.2855658531188965
    4. '[i' → logprob: -5.5355658531188965
    5. '=' → logprob: -7.0355658531188965
    6. '][]' → logprob: -7.1605658531188965
    7. ']==' → logprob: -7.7855658531188965
    8. ']+=' → logprob: -7.7855658531188965
    9. '[' → logprob: -8.160566329956055
    10. '   ' → logprob: -8.785566329956055

Token 1414: ' minimal' (ID: 19957)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.14691682159900665
    2. '[' → logprob: -2.0219168663024902
    3. ' [[' → logprob: -5.77191686630249
    4. '10' → logprob: -7.52191686630249
    5. '[
' → logprob: -8.396916389465332
    6. '[]' → logprob: -8.646916389465332
    7. ' [' → logprob: -8.896916389465332
    8. '[i' → logprob: -12.271916389465332
    9. '[][]' → logprob: -12.271916389465332
    10. '0' → logprob: -12.521916389465332

Token 1415: ' distance' (ID: 9324)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.42931047081947327
    2. '[' → logprob: -2.4293105602264404
    3. '[
' → logprob: -3.1793105602264404
    4. '=' → logprob: -3.4293105602264404
    5. 'distance' → logprob: -3.4293105602264404
    6. '_' → logprob: -4.054310321807861
    7. '[]' → logprob: -4.304310321807861
    8. 'dist' → logprob: -4.429310321807861
    9. '_distance' → logprob: -4.554310321807861
    10. ' =' → logprob: -4.929310321807861

Token 1416: ' from' (ID: 591)
  Prédit: '=[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[[' → logprob: -1.0707576274871826
    2. '=' → logprob: -1.3207576274871826
    3. '=[' → logprob: -1.6957576274871826
    4. '[i' → logprob: -2.0707576274871826
    5. ' =' → logprob: -4.070757865905762
    6. 'from' → logprob: -4.320757865905762
    7. '=[]' → logprob: -4.695757865905762
    8. '_p' → logprob: -5.195757865905762
    9. '[' → logprob: -5.445757865905762
    10. '=i' → logprob: -5.570757865905762

Token 1417: ' product' (ID: 1888)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0312119722366333
    2. '0' → logprob: -1.1562119722366333
    3. 'start' → logprob: -1.2812119722366333
    4. 'range' → logprob: -3.4062118530273438
    5. 'j' → logprob: -4.906211853027344
    6. 'p' → logprob: -5.656211853027344
    7. 'product' → logprob: -6.031211853027344
    8. ' i' → logprob: -6.656211853027344
    9. 'sale' → logprob: -6.781211853027344
    10. 'sales' → logprob: -8.156211853027344

Token 1418: ' i' (ID: 575)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.2570071816444397
    2. 's' → logprob: -2.257007122039795
    3. '_s' → logprob: -2.882007122039795
    4. '2' → logprob: -4.257007122039795
    5. 'p' → logprob: -4.257007122039795
    6. '_i' → logprob: -4.257007122039795
    7. '```' → logprob: -5.257007122039795
    8. 'i' → logprob: -5.757007122039795
    9. '_j' → logprob: -6.132007122039795
    10. ']' → logprob: -6.507007122039795

Token 1419: ' shelf' (ID: 40978)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.25426366925239563
    2. '_' → logprob: -2.3792636394500732
    3. '][' → logprob: -3.2542636394500732
    4. ']' → logprob: -3.5042636394500732
    5. ']_' → logprob: -4.254263877868652
    6. '[' → logprob: -4.629263877868652
    7. '][_' → logprob: -4.879263877868652
    8. '```' → logprob: -5.004263877868652
    9. '_s' → logprob: -5.379263877868652
    10. '_to' → logprob: -5.754263877868652

Token 1420: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5090764760971069
    2. '_p' → logprob: -1.759076476097107
    3. ']' → logprob: -3.0090765953063965
    4. '[' → logprob: -3.3840765953063965
    5. '_start' → logprob: -3.3840765953063965
    6. ' =' → logprob: -4.2590765953063965
    7. '[i' → logprob: -4.3840765953063965
    8. '=' → logprob: -4.5090765953063965
    9. '][' → logprob: -4.5090765953063965
    10. '[
' → logprob: -4.6340765953063965

Token 1421: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.43363845348358154
    2. 'j' → logprob: -1.0586384534835815
    3. ' product' → logprob: -5.558638572692871
    4. ' j' → logprob: -7.433638572692871
    5. 'sale' → logprob: -8.433638572692871
    6. 'sales' → logprob: -9.183638572692871
    7. 's' → logprob: -9.558638572692871
    8. '   ' → logprob: -10.808638572692871
    9. 'purchase' → logprob: -11.183638572692871
    10. 'p' → logprob: -11.433638572692871

Token 1422: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2760942280292511
    2. '_p' → logprob: -2.1510941982269287
    3. 's' → logprob: -3.2760941982269287
    4. ' j' → logprob: -3.4010941982269287
    5. '_j' → logprob: -3.4010941982269287
    6. 'p' → logprob: -4.776094436645508
    7. '2' → logprob: -6.026094436645508
    8. '_s' → logprob: -6.026094436645508
    9. '```' → logprob: -6.026094436645508
    10. '[j' → logprob: -6.401094436645508

Token 1423: ' shelf' (ID: 40978)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28580808639526367
    2. '[' → logprob: -2.9108080863952637
    3. '_
' → logprob: -3.1608080863952637
    4. '[
' → logprob: -3.6608080863952637
    5. '_p' → logprob: -4.160808086395264
    6. ']' → logprob: -4.285808086395264
    7. ' =' → logprob: -4.785808086395264
    8. '```' → logprob: -4.785808086395264
    9. '   ' → logprob: -4.910808086395264
    10. ' _' → logprob: -5.035808086395264

Token 1424: ' on' (ID: 402)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21010588109493256
    2. ' dist' → logprob: -1.7101058959960938
    3. '       ' → logprob: -5.835105895996094
    4. '   ' → logprob: -6.085105895996094
    5. '
' → logprob: -7.335105895996094
    6. '_dist' → logprob: -7.335105895996094
    7. '#' → logprob: -8.085105895996094
    8. '```' → logprob: -8.460105895996094
    9. ' n' → logprob: -8.710105895996094
    10. ' for' → logprob: -8.710105895996094

Token 1425: ' ais' (ID: 36709)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.03638998046517372
    2. 'adj' → logprob: -3.9113900661468506
    3. 'the' → logprob: -5.9113898277282715
    4. ' ais' → logprob: -6.0363898277282715
    5. ' aisle' → logprob: -6.2863898277282715
    6. '[i' → logprob: -6.4113898277282715
    7. ']' → logprob: -7.1613898277282715
    8. '```' → logprob: -7.2863898277282715
    9. 'i' → logprob: -7.4113898277282715
    10. 'p' → logprob: -7.6613898277282715

Token 1426: 'les' (ID: 1032)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0010475777089595795
    2. 'les' → logprob: -6.876047611236572
    3. '#' → logprob: -12.751047134399414
    4. 'lei' → logprob: -13.251047134399414
    5. '[[' → logprob: -13.376047134399414
    6. 'ле' → logprob: -13.751047134399414
    7. '```' → logprob: -14.126047134399414
    8. 'tle' → logprob: -14.376047134399414
    9. '
' → logprob: -14.376047134399414
    10. '[]' → logprob: -14.751047134399414

Token 1427: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7423956394195557
    2. '_' → logprob: -1.7423956394195557
    3. '   ' → logprob: -2.3673956394195557
    4. '[' → logprob: -2.7423956394195557
    5. '```' → logprob: -3.2423956394195557
    6. '\' → logprob: -3.6173956394195557
    7. '[
' → logprob: -3.6173956394195557
    8. ',' → logprob: -4.367395401000977
    9. ']' → logprob: -4.617395401000977
    10. '_
' → logprob: -4.742395401000977

Token 1428: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.90863436460495
    2. '_' → logprob: -1.4086344242095947
    3. '       ' → logprob: -2.4086344242095947
    4. '   ' → logprob: -2.5336344242095947
    5. '[
' → logprob: -3.2836344242095947
    6. 'dist' → logprob: -3.7836344242095947
    7. '\' → logprob: -4.033634185791016
    8. 'def' → logprob: -4.658634185791016
    9. '```' → logprob: -4.658634185791016
    10. '_dist' → logprob: -4.658634185791016

Token 1429: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054626550525426865
    2. '   ' → logprob: -4.30462646484375
    3. '[' → logprob: -4.55462646484375
    4. 'dist' → logprob: -5.17962646484375
    5. '```' → logprob: -5.30462646484375
    6. '	' → logprob: -5.92962646484375
    7. '        
' → logprob: -6.17962646484375
    8. ' \' → logprob: -6.80462646484375
    9. '
' → logprob: -6.80462646484375
    10. ' dist' → logprob: -6.92962646484375

Token 1430: ' dist' (ID: 3601)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -1.6814624071121216
    2. ' dist' → logprob: -1.8064624071121216
    3. ' calc' → logprob: -1.8064624071121216
    4. ' get' → logprob: -2.306462287902832
    5. 'dist' → logprob: -2.306462287902832
    6. 'get' → logprob: -2.681462287902832
    7. ' solve' → logprob: -2.806462287902832
    8. 'solve' → logprob: -3.181462287902832
    9. ' compute' → logprob: -3.431462287902832
    10. 'compute' → logprob: -3.556462287902832

Token 1431: '_min' (ID: 15950)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9336882829666138
    2. '_start' → logprob: -1.0586882829666138
    3. '_p' → logprob: -2.058688163757324
    4. '_from' → logprob: -2.183688163757324
    5. '_between' → logprob: -5.183688163757324
    6. '[' → logprob: -6.808688163757324
    7. '_matrix' → logprob: -6.808688163757324
    8. '_for' → logprob: -6.933688163757324
    9. '_token' → logprob: -7.183688163757324
    10. '_next' → logprob: -7.433688163757324

Token 1432: '_between' (ID: 124874)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.741585910320282
    2. '_start' → logprob: -1.1165859699249268
    3. '_' → logprob: -2.1165859699249268
    4. '_between' → logprob: -3.4915859699249268
    5. 'from' → logprob: -3.8665859699249268
    6. '[' → logprob: -5.116585731506348
    7. '_for' → logprob: -6.241585731506348
    8. '(
' → logprob: -6.491585731506348
    9. '(' → logprob: -6.491585731506348
    10. '_points' → logprob: -6.741585731506348

Token 1433: '_products' (ID: 68048)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.2878553867340088
    2. '_points' → logprob: -2.037855386734009
    3. 'products' → logprob: -3.537855386734009
    4. 'p' → logprob: -3.787855386734009
    5. '_p' → logprob: -4.66285514831543
    6. '(i' → logprob: -4.91285514831543
    7. 'ais' → logprob: -5.03785514831543
    8. 'sales' → logprob: -5.03785514831543
    9. '(' → logprob: -5.41285514831543
    10. 's' → logprob: -5.41285514831543

Token 1434: '(pi' (ID: 128494)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22198991477489471
    2. '(i' → logprob: -2.221989870071411
    3. '[' → logprob: -3.471989870071411
    4. '_' → logprob: -3.846989870071411
    5. '[i' → logprob: -3.971989870071411
    6. '(
' → logprob: -4.72199010848999
    7. '<|end|>' → logprob: -6.22199010848999
    8. '(p' → logprob: -6.59699010848999
    9. '[
' → logprob: -6.72199010848999
    10. '   ' → logprob: -7.22199010848999

Token 1435: ',p' (ID: 14835)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18282458186149597
    2. ',' → logprob: -2.0578246116638184
    3. '][' → logprob: -3.8078246116638184
    4. '[i' → logprob: -5.932824611663818
    5. 's' → logprob: -6.057824611663818
    6. '):
' → logprob: -6.307824611663818
    7. ',i' → logprob: -6.307824611663818
    8. 'nt' → logprob: -6.807824611663818
    9. '   ' → logprob: -6.932824611663818
    10. ')[' → logprob: -7.432824611663818

Token 1436: 'j' (ID: 73)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.6544675827026367
    2. 'i' → logprob: -1.5294675827026367
    3. 'r' → logprob: -2.2794675827026367
    4. 'oints' → logprob: -2.6544675827026367
    5. 'ro' → logprob: -3.4044675827026367
    6. 'oint' → logprob: -4.654467582702637
    7. ')' → logprob: -4.779467582702637
    8. 'o' → logprob: -5.529467582702637
    9. '1' → logprob: -5.529467582702637
    10. 'x' → logprob: -5.904467582702637

Token 1437: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.298056960105896
    2. '):
' → logprob: -1.673056960105896
    3. ',' → logprob: -3.9230570793151855
    4. '[i' → logprob: -4.4230570793151855
    5. ')' → logprob: -4.5480570793151855
    6. ']:' → logprob: -4.7980570793151855
    7. '][' → logprob: -4.9230570793151855
    8. '   ' → logprob: -5.7980570793151855
    9. ':' → logprob: -6.6730570793151855
    10. ')[' → logprob: -6.9230570793151855

Token 1438: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3397890627384186
    2. '[' → logprob: -2.2147891521453857
    3. ':' → logprob: -2.3397891521453857
    4. '   ' → logprob: -3.9647891521453857
    5. '(
' → logprob: -4.089788913726807
    6. ' (' → logprob: -4.714788913726807
    7. '.' → logprob: -4.964788913726807
    8. '<|end|>' → logprob: -5.214788913726807
    9. '(p' → logprob: -5.339788913726807
    10. ',' → logprob: -5.839788913726807

Token 1439: ' g' (ID: 329)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.05642547085881233
    2. 'm' → logprob: -3.8064255714416504
    3. ' min' → logprob: -3.8064255714416504
    4. '   ' → logprob: -5.05642557144165
    5. 'res' → logprob: -6.93142557144165
    6. '           ' → logprob: -7.05642557144165
    7. 'mi' → logprob: -7.93142557144165
    8. 'r' → logprob: -8.181425094604492
    9. 'return' → logprob: -8.806425094604492
    10. 'max' → logprob: -8.806425094604492

Token 1440: '_i' (ID: 10853)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7022190690040588
    2. '[p' → logprob: -2.077219009399414
    3. '[i' → logprob: -2.327219009399414
    4. '=' → logprob: -2.577219009399414
    5. ')' → logprob: -3.077219009399414
    6. ',' → logprob: -3.077219009399414
    7. ']' → logprob: -3.827219009399414
    8. 's' → logprob: -4.577219009399414
    9. 'i' → logprob: -4.702219009399414
    10. 'p' → logprob: -4.702219009399414

Token 1441: ',d' (ID: 26159)
  Prédit: '=g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=g' → logprob: -0.6235557794570923
    2. '=' → logprob: -1.2485557794570923
    3. ',g' → logprob: -2.4985556602478027
    4. ',' → logprob: -2.8735556602478027
    5. ' =' → logprob: -3.7485556602478027
    6. 'x' → logprob: -5.623555660247803
    7. '=p' → logprob: -6.123555660247803
    8. 'g' → logprob: -6.248555660247803
    9. ',x' → logprob: -6.748555660247803
    10. '=x' → logprob: -6.748555660247803

Token 1442: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31143248081207275
    2. ',p' → logprob: -2.311432361602783
    3. '[' → logprob: -3.061432361602783
    4. '=' → logprob: -3.311432361602783
    5. '[i' → logprob: -3.811432361602783
    6. ',i' → logprob: -3.811432361602783
    7. 's' → logprob: -4.561432361602783
    8. 'i' → logprob: -5.061432361602783
    9. '[p' → logprob: -5.061432361602783
    10. '_i' → logprob: -5.811432361602783

Token 1443: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48781779408454895
    2. ',p' → logprob: -1.4878177642822266
    3. '[' → logprob: -2.8628177642822266
    4. ')' → logprob: -3.8628177642822266
    5. '<|end|>' → logprob: -4.112817764282227
    6. ',i' → logprob: -4.362817764282227
    7. '=' → logprob: -4.862817764282227
    8. ',
' → logprob: -5.362817764282227
    9. ',j' → logprob: -5.362817764282227
    10. '[i' → logprob: -5.362817764282227

Token 1444: '_i' (ID: 10853)
  Prédit: ',e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.6758618354797363
    2. ',j' → logprob: -1.6758618354797363
    3. ',' → logprob: -2.0508618354797363
    4. ',p' → logprob: -2.3008618354797363
    5. ',i' → logprob: -3.5508618354797363
    6. ',q' → logprob: -4.925861835479736
    7. 'e' → logprob: -4.925861835479736
    8. '[' → logprob: -5.675861835479736
    9. ',n' → logprob: -6.050861835479736
    10. '=' → logprob: -6.175861835479736

Token 1445: ',e' (ID: 43127)
  Prédit: ',e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.005190351512283087
    2. ',' → logprob: -5.380190372467041
    3. ',p' → logprob: -8.755189895629883
    4. ',y' → logprob: -9.380189895629883
    5. ',x' → logprob: -9.505189895629883
    6. 'e' → logprob: -10.005189895629883
    7. ',j' → logprob: -10.255189895629883
    8. ',s' → logprob: -10.380189895629883
    9. ' ,' → logprob: -10.505189895629883
    10. ',i' → logprob: -10.755189895629883

Token 1446: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.301579236984253
    2. '=' → logprob: -1.801579236984253
    3. '[i' → logprob: -2.801579236984253
    4. ',' → logprob: -2.801579236984253
    5. ')' → logprob: -3.051579236984253
    6. 'i' → logprob: -3.051579236984253
    7. ')=' → logprob: -3.051579236984253
    8. ')[' → logprob: -3.176579236984253
    9. ',i' → logprob: -3.301579236984253
    10. '[' → logprob: -3.676579236984253

Token 1447: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04464421048760414
    2. ')=' → logprob: -3.6696441173553467
    3. ',' → logprob: -4.419644355773926
    4. ')' → logprob: -6.544644355773926
    5. ' =' → logprob: -6.544644355773926
    6. ',p' → logprob: -7.044644355773926
    7. ',x' → logprob: -7.419644355773926
    8. ',i' → logprob: -7.669644355773926
    9. ',j' → logprob: -8.419644355773926
    10. '=
' → logprob: -8.544644355773926

Token 1448: 'product' (ID: 5260)
  Prédit: 'product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.0001537169300718233
    2. ' product' → logprob: -9.125153541564941
    3. '   ' → logprob: -10.625153541564941
    4. 'sale' → logprob: -10.875153541564941
    5. '	product' → logprob: -15.375153541564941
    6. 'prod' → logprob: -15.625153541564941
    7. '           ' → logprob: -15.750153541564941
    8. '       ' → logprob: -16.000154495239258
    9. '     ' → logprob: -16.000154495239258
    10. 'sales' → logprob: -16.000154495239258

Token 1449: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.0008893063059076667
    2. 's' → logprob: -8.250889778137207
    3. '[i' → logprob: -8.875889778137207
    4. '_i' → logprob: -9.125889778137207
    5. '```' → logprob: -9.375889778137207
    6. '_' → logprob: -9.875889778137207
    7. '[' → logprob: -10.750889778137207
    8. 'g' → logprob: -10.750889778137207
    9. '_infos' → logprob: -10.750889778137207
    10. 'i' → logprob: -11.000889778137207

Token 1450: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0007631686748936772
    2. 'list' → logprob: -7.750762939453125
    3. '[i' → logprob: -8.125762939453125
    4. '_info' → logprob: -11.875762939453125
    5. '[p' → logprob: -12.375762939453125
    6. '[' → logprob: -12.500762939453125
    7. 's' → logprob: -12.750762939453125
    8. '[j' → logprob: -13.000762939453125
    9. '[min' → logprob: -13.125762939453125
    10. ')' → logprob: -13.250762939453125

Token 1451: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0021236150059849024
    2. '[p' → logprob: -6.377123832702637
    3. '[i' → logprob: -8.002123832702637
    4. '][' → logprob: -11.627123832702637
    5. '[
' → logprob: -11.627123832702637
    6. '[j' → logprob: -11.752123832702637
    7. ')[' → logprob: -11.877123832702637
    8. '\[' → logprob: -12.002123832702637
    9. '(pi' → logprob: -12.127123832702637
    10. '[ip' → logprob: -12.252123832702637

Token 1452: 'pi' (ID: 3455)
  Prédit: 'pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.01171938981860876
    2. 'i' → logprob: -4.761719226837158
    3. 'pj' → logprob: -5.886719226837158
    4. '0' → logprob: -9.636719703674316
    5. '(pi' → logprob: -10.011719703674316
    6. ' pi' → logprob: -10.386719703674316
    7. '][' → logprob: -10.511719703674316
    8. '...' → logprob: -11.011719703674316
    9. '[i' → logprob: -11.011719703674316
    10. ']' → logprob: -11.011719703674316

Token 1453: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5193644165992737
    2. ']' → logprob: -1.394364356994629
    3. '][' → logprob: -1.894364356994629
    4. '],' → logprob: -5.519364356994629
    5. '],
' → logprob: -7.144364356994629
    6. ']
' → logprob: -7.894364356994629
    7. '       ' → logprob: -8.519364356994629
    8. '][:' → logprob: -8.769364356994629
    9. '[i' → logprob: -8.894364356994629
    10. '           ' → logprob: -8.894364356994629

Token 1454: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09645771980285645
    2. ',' → logprob: -2.8464577198028564
    3. ',p' → logprob: -4.971457481384277
    4. '   ' → logprob: -5.221457481384277
    5. '       ' → logprob: -5.846457481384277
    6. '               ' → logprob: -5.846457481384277
    7. ',g' → logprob: -6.221457481384277
    8. ' for' → logprob: -6.596457481384277
    9. ',
' → logprob: -6.721457481384277
    10. '
' → logprob: -6.846457481384277

Token 1455: ' g' (ID: 329)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9773589968681335
    2. '           ' → logprob: -1.2273590564727783
    3. 'g' (adapté à ' g') → logprob: -2.4773590564727783
    4. 'pos' → logprob: -3.3523590564727783
    5. ' x' → logprob: -3.7273590564727783
    6. 'idx' → logprob: -4.352358818054199
    7. 'dist' → logprob: -4.352358818054199
    8. 'p' → logprob: -4.477358818054199
    9. 'return' → logprob: -4.477358818054199
    10. 'res' → logprob: -4.602358818054199

Token 1456: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.01958821900188923
    2. '_i' → logprob: -4.269587993621826
    3. '_p' → logprob: -5.644587993621826
    4. '_idx' → logprob: -8.019588470458984
    5. '```' → logprob: -8.269588470458984
    6. '[' → logprob: -8.644588470458984
    7. '[j' → logprob: -8.769588470458984
    8. ',' → logprob: -8.894588470458984
    9. '_js' → logprob: -8.894588470458984
    10. 'j' → logprob: -9.144588470458984

Token 1457: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.0027878843247890472
    2. ',' → logprob: -6.002788066864014
    3. '=' → logprob: -9.377787590026855
    4. ',p' → logprob: -9.877787590026855
    5. ',j' → logprob: -10.002787590026855
    6. ',
' → logprob: -10.377787590026855
    7. '```' → logprob: -10.877787590026855
    8. '_,' → logprob: -11.127787590026855
    9. '=d' → logprob: -11.877787590026855
    10. ',int' → logprob: -12.002787590026855

Token 1458: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.003994223196059465
    2. '_i' → logprob: -6.128993988037109
    3. 'j' → logprob: -7.128993988037109
    4. '_,' → logprob: -8.12899398803711
    5. '```' → logprob: -8.50399398803711
    6. ',' → logprob: -8.75399398803711
    7. '[j' → logprob: -9.37899398803711
    8. '[' → logprob: -10.25399398803711
    9. ',j' → logprob: -10.50399398803711
    10. '_[' → logprob: -10.50399398803711

Token 1459: ',s' (ID: 20379)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.028668338432908058
    2. ',' → logprob: -3.6536684036254883
    3. '[' → logprob: -7.653668403625488
    4. ',s' → logprob: -7.778668403625488
    5. ',j' → logprob: -8.153668403625488
    6. '[p' → logprob: -8.528668403625488
    7. '```' → logprob: -8.778668403625488
    8. ',[' → logprob: -9.153668403625488
    9. '=' → logprob: -9.528668403625488
    10. ',k' → logprob: -9.528668403625488

Token 1460: '_j' (ID: 12021)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.221990942955017
    2. '_j' → logprob: -1.596990942955017
    3. '][' → logprob: -1.846990942955017
    4. '[' → logprob: -2.4719910621643066
    5. '[i' → logprob: -2.5969910621643066
    6. '[j' → logprob: -2.5969910621643066
    7. 'i' → logprob: -3.8469910621643066
    8. ')[' → logprob: -4.096991062164307
    9. 'j' → logprob: -4.221991062164307
    10. ',' → logprob: -4.971991062164307

Token 1461: ',e' (ID: 43127)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.3997621238231659
    2. ',' → logprob: -1.2747621536254883
    3. '[' → logprob: -4.149762153625488
    4. '][' → logprob: -5.024762153625488
    5. ',j' → logprob: -5.024762153625488
    6. ',k' → logprob: -5.149762153625488
    7. '[p' → logprob: -5.274762153625488
    8. ')[' → logprob: -6.649762153625488
    9. ',[' → logprob: -6.774762153625488
    10. '<|end|>' → logprob: -7.399762153625488

Token 1462: '_j' (ID: 12021)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6493735313415527
    2. '_j' → logprob: -1.0243735313415527
    3. '_i' → logprob: -3.3993735313415527
    4. '```' → logprob: -3.7743735313415527
    5. '[' → logprob: -4.149373531341553
    6. 'i' → logprob: -4.274373531341553
    7. '[j' → logprob: -4.774373531341553
    8. '[
' → logprob: -5.024373531341553
    9. '[p' → logprob: -5.649373531341553
    10. '[i' → logprob: -5.774373531341553

Token 1463: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048505377024412155
    2. ')=' → logprob: -4.1735053062438965
    3. ')' → logprob: -4.7985053062438965
    4. ',' → logprob: -5.2985053062438965
    5. ',p' → logprob: -5.7985053062438965
    6. '=p' → logprob: -5.9235053062438965
    7. '=i' → logprob: -6.1735053062438965
    8. '):' → logprob: -6.4235053062438965
    9. '           ' → logprob: -6.4235053062438965
    10. ',i' → logprob: -7.4235053062438965

Token 1464: 'product' (ID: 5260)
  Prédit: 'product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -9.507972572464496e-05
    2. ' product' → logprob: -9.50009536743164
    3. '0' → logprob: -12.62509536743164
    4. 'g' → logprob: -12.75009536743164
    5. 'map' → logprob: -12.75009536743164
    6. '(product' → logprob: -12.87509536743164
    7. '
' → logprob: -13.37509536743164
    8. 'sale' → logprob: -13.50009536743164
    9. 'int' → logprob: -13.62509536743164
    10. '   ' → logprob: -14.00009536743164

Token 1465: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.17722000181674957
    2. '_list' → logprob: -2.052220106124878
    3. '_min' → logprob: -3.677220106124878
    4. '_i' → logprob: -6.302219867706299
    5. '```' → logprob: -6.302219867706299
    6. '[i' → logprob: -6.927219867706299
    7. '[' → logprob: -7.052219867706299
    8. 'info' → logprob: -7.552219867706299
    9. 'import' → logprob: -7.677219867706299
    10. 'min' → logprob: -8.427220344543457

Token 1466: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.025068948045372963
    2. 'list' → logprob: -3.775068998336792
    3. '[j' → logprob: -6.650068759918213
    4. 'List' → logprob: -8.525069236755371
    5. '[' → logprob: -9.150069236755371
    6. '[p' → logprob: -9.275069236755371
    7. '[]' → logprob: -10.900069236755371
    8. '```' → logprob: -10.900069236755371
    9. '[i' → logprob: -11.025069236755371
    10. 's' → logprob: -11.275069236755371

Token 1467: '[p' (ID: 23234)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3404262065887451
    2. '[p' → logprob: -1.3404262065887451
    3. '[
' → logprob: -4.590426445007324
    4. '[j' → logprob: -5.715426445007324
    5. '][' → logprob: -6.090426445007324
    6. '```' → logprob: -6.340426445007324
    7. ']' → logprob: -6.465426445007324
    8. '[i' → logprob: -6.465426445007324
    9. '(p' → logprob: -6.590426445007324
    10. 'pj' → logprob: -6.715426445007324

Token 1468: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005149058997631073
    2. 'i' → logprob: -8.12551498413086
    3. '_j' → logprob: -8.75051498413086
    4. '[
' → logprob: -11.75051498413086
    5. ']' → logprob: -11.87551498413086
    6. '
' → logprob: -11.87551498413086
    7. ']
' → logprob: -12.00051498413086
    8. '_' → logprob: -12.25051498413086
    9. '][' → logprob: -12.62551498413086
    10. '[j' → logprob: -12.87551498413086

Token 1469: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17435230314731598
    2. '][' → logprob: -1.9243522882461548
    3. ']
' → logprob: -5.299352169036865
    4. ']+' → logprob: -5.299352169036865
    5. '])' → logprob: -5.924352169036865
    6. ')' → logprob: -7.674352169036865
    7. '+' → logprob: -8.924352645874023
    8. '],' → logprob: -9.049352645874023
    9. ')]' → logprob: -9.299352645874023
    10. '[' → logprob: -9.674352645874023

Token 1470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14292700588703156
    2. '       ' → logprob: -2.2679269313812256
    3. '<|end|>' → logprob: -4.642927169799805
    4. '   ' → logprob: -4.892927169799805
    5. ')' → logprob: -6.517927169799805
    6. ' ' → logprob: -6.767927169799805
    7. '               ' → logprob: -6.892927169799805
    8. '        
' → logprob: -6.892927169799805
    9. '<|end|>' → logprob: -7.017927169799805
    10. ',' → logprob: -7.392927169799805

Token 1471: ' res' (ID: 694)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014742057770490646
    2. '   ' → logprob: -5.389741897583008
    3. '       ' → logprob: -6.139741897583008
    4. '
' → logprob: -6.389741897583008
    5. 'min' → logprob: -6.639741897583008
    6. ' res' → logprob: -7.389741897583008
    7. 'max' → logprob: -7.389741897583008
    8. ' min' → logprob: -7.639741897583008
    9. 'ans' → logprob: -8.389741897583008
    10. 'res' (adapté à ' res') → logprob: -8.514741897583008

Token 1472: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013284583576023579
    2. '=[]' → logprob: -4.888284683227539
    3. ' =' → logprob: -5.513284683227539
    4. '=[' → logprob: -6.888284683227539
    5. '={}' → logprob: -8.263284683227539
    6. '=
' → logprob: -9.388284683227539
    7. '=[]
' → logprob: -9.388284683227539
    8. '[' → logprob: -10.513284683227539
    9. ',' → logprob: -10.638284683227539
    10. '=[[' → logprob: -11.013284683227539

Token 1473: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.172891830326989e-05
    2. 'min' → logprob: -9.625082015991211
    3. '
' → logprob: -11.875082015991211
    4. '1' → logprob: -12.625082015991211
    5. 'float' → logprob: -13.125082015991211
    6. 'int' → logprob: -13.875082015991211
    7. '100' → logprob: -14.625082015991211
    8. ' ' → logprob: -14.750082015991211
    9. '```' → logprob: -15.375082015991211
    10. '`' → logprob: -15.375082015991211

Token 1474: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0006177236791700125
    2. '9' → logprob: -7.625617504119873
    3. '*' → logprob: -9.625617980957031
    4. '```' → logprob: -9.875617980957031
    5. '^' → logprob: -12.125617980957031
    6. '#' → logprob: -13.000617980957031
    7. ' **' → logprob: -13.750617980957031
    8. '***' → logprob: -13.875617980957031
    9. '``' → logprob: -14.500617980957031
    10. '3' → logprob: -14.875617980957031

Token 1475: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.125
    3. '``' → logprob: -17.75
    4. '99' → logprob: -18.375
    5. '-' → logprob: -18.875
    6. '
' → logprob: -19.25
    7. '^' → logprob: -19.875
    8. '09' → logprob: -20.25
    9. '999' → logprob: -20.375
    10. '

' → logprob: -20.625

Token 1476: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1477: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003199454629793763
    2. ' for' → logprob: -6.628199577331543
    3. 'for' → logprob: -7.753199577331543
    4. '<|end|>' → logprob: -7.753199577331543
    5. '                   ' → logprob: -8.503199577331543
    6. '                           ' → logprob: -8.878199577331543
    7. '               ' → logprob: -8.878199577331543
    8. '       ' → logprob: -9.003199577331543
    9. ',' → logprob: -9.128199577331543
    10. '<|end|>' → logprob: -9.503199577331543

Token 1478: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33973270654678345
    2. 'for' (adapté à ' for') → logprob: -1.3397326469421387
    3. ' for' → logprob: -3.7147326469421387
    4. '       ' → logprob: -6.464732646942139
    5. '   ' → logprob: -9.464733123779297
    6. '               ' → logprob: -9.839733123779297
    7. '                   ' → logprob: -10.464733123779297
    8. '#' → logprob: -11.214733123779297
    9. '	for' → logprob: -12.464733123779297
    10. 'i' → logprob: -12.964733123779297

Token 1479: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5571297407150269
    2. '(s' → logprob: -2.3071298599243164
    3. '(ax' → logprob: -2.3071298599243164
    4. 'ax' → logprob: -2.5571298599243164
    5. 'sx' → logprob: -2.8071298599243164
    6. 'x' → logprob: -3.3071298599243164
    7. 'idx' → logprob: -4.807129859924316
    8. '(' → logprob: -4.807129859924316
    9. 's' → logprob: -5.057129859924316
    10. 'xi' → logprob: -5.807129859924316

Token 1480: 'x' (ID: 87)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.09153525531291962
    2. 'x' → logprob: -2.4665353298187256
    3. 'sx' → logprob: -6.0915350914001465
    4. 'ix' → logprob: -9.841535568237305
    5. 'px' → logprob: -9.966535568237305
    6. 'tx' → logprob: -10.216535568237305
    7. ' ax' → logprob: -10.466535568237305
    8. 'a' → logprob: -11.091535568237305
    9. '(ax' → logprob: -11.216535568237305
    10. 'xi' → logprob: -11.216535568237305

Token 1481: '1' (ID: 16)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.20164868235588074
    2. ',' → logprob: -1.7016487121582031
    3. ' ,' → logprob: -9.326648712158203
    4. 'y' → logprob: -9.826648712158203
    5. '_,' → logprob: -10.576648712158203
    6. ',x' → logprob: -11.576648712158203
    7. 'x' → logprob: -11.826648712158203
    8. ',
' → logprob: -11.826648712158203
    9. ',j' → logprob: -11.826648712158203
    10. ')' → logprob: -12.826648712158203

Token 1482: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.005287596024572849
    2. ',' → logprob: -5.2552876472473145
    3. ' ,' → logprob: -10.380287170410156
    4. '),(' → logprob: -11.880287170410156
    5. ',x' → logprob: -12.505287170410156
    6. ',j' → logprob: -13.255287170410156
    7. '),' → logprob: -13.630287170410156
    8. '_,' → logprob: -13.755287170410156
    9. ',
' → logprob: -13.880287170410156
    10. ')' → logprob: -14.255287170410156

Token 1483: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5147635340690613
    2. '),(' → logprob: -1.389763593673706
    3. '),' → logprob: -1.889763593673706
    4. ')x' → logprob: -6.639763355255127
    5. ',x' → logprob: -8.639763832092285
    6. ',' → logprob: -8.889763832092285
    7. '0' → logprob: -9.514763832092285
    8. '1' → logprob: -9.639763832092285
    9. ')...' → logprob: -10.139763832092285
    10. 'in' → logprob: -10.264763832092285

Token 1484: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.33878448605537415
    2. '),(' → logprob: -1.8387844562530518
    3. ')' → logprob: -2.0887844562530518
    4. '           ' → logprob: -6.213784694671631
    5. '),
' → logprob: -6.838784694671631
    6. ')[' → logprob: -7.838784694671631
    7. ',' → logprob: -8.713784217834473
    8. ')...' → logprob: -9.338784217834473
    9. '               ' → logprob: -9.588784217834473
    10. '...' → logprob: -9.713784217834473

Token 1485: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14913856983184814
    2. ' in' → logprob: -3.6491384506225586
    3. 'in' → logprob: -3.7741384506225586
    4. ',s' → logprob: -4.024138450622559
    5. ',p' → logprob: -4.024138450622559
    6. ',x' → logprob: -5.149138450622559
    7. ',
' → logprob: -5.274138450622559
    8. '),' → logprob: -5.399138450622559
    9. '),(' → logprob: -5.649138450622559
    10. ')' → logprob: -6.024138450622559

Token 1486: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.001351306913420558
    2. 's' → logprob: -6.876351356506348
    3. ' prod' → logprob: -8.251351356506348
    4. '[s' → logprob: -11.126351356506348
    5. '   ' → logprob: -11.126351356506348
    6. '[' → logprob: -12.626351356506348
    7. '           ' → logprob: -12.751351356506348
    8. ' ' → logprob: -13.001351356506348
    9. '
' → logprob: -13.001351356506348
    10. '(prod' → logprob: -13.251351356506348

Token 1487: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -4.8351892473874614e-05
    2. 's' → logprob: -10.000048637390137
    3. '
' → logprob: -14.250048637390137
    4. '\' → logprob: -14.625048637390137
    5. '[_' → logprob: -14.750048637390137
    6. '_' → logprob: -15.500048637390137
    7. '[(' → logprob: -15.500048637390137
    8. '```' → logprob: -15.750048637390137
    9. ' _' → logprob: -16.25004768371582
    10. 'g' → logprob: -16.37504768371582

Token 1488: 'helves' (ID: 182327)
  Prédit: 'helves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helves' → logprob: -0.000601169012952596
    2. 'h' → logprob: -8.750600814819336
    3. 'hel' → logprob: -8.750600814819336
    4. 's' → logprob: -9.125600814819336
    5. '[' → logprob: -10.375600814819336
    6. 'he' → logprob: -10.500600814819336
    7. '_s' → logprob: -10.500600814819336
    8. '_' → logprob: -10.875600814819336
    9. ' shelves' → logprob: -11.250600814819336
    10. '[(' → logprob: -12.250600814819336

Token 1489: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.01121982466429472
    2. 'g' → logprob: -4.5112199783325195
    3. '[' → logprob: -10.01121997833252
    4. '
' → logprob: -10.88621997833252
    5. '[j' → logprob: -11.01121997833252
    6. '   ' → logprob: -11.13621997833252
    7. '[
' → logprob: -11.26121997833252
    8. '(g' → logprob: -11.38621997833252
    9. ' [' → logprob: -11.51121997833252
    10. '```' → logprob: -11.63621997833252

Token 1490: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.29192009568214417
    2. '_j' → logprob: -1.4169200658798218
    3. 'i' → logprob: -4.916920185089111
    4. '[i' → logprob: -6.666920185089111
    5. '[j' → logprob: -7.416920185089111
    6. 'j' → logprob: -7.791920185089111
    7. '[' → logprob: -8.416919708251953
    8. '
' → logprob: -8.916919708251953
    9. 's' → logprob: -9.041919708251953
    10. '```' → logprob: -9.541919708251953

Token 1491: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5903478264808655
    2. ']:' → logprob: -1.0903477668762207
    3. ']' → logprob: -2.9653477668762207
    4. '][' → logprob: -2.9653477668762207
    5. '[x' → logprob: -6.340347766876221
    6. ']:

' → logprob: -7.090347766876221
    7. '][:' → logprob: -7.215347766876221
    8. ':' → logprob: -7.840347766876221
    9. '[j' → logprob: -7.840347766876221
    10. '[' → logprob: -7.965347766876221

Token 1492: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.035447172820568085
    2. ':' → logprob: -4.410447120666504
    3. ' for' → logprob: -4.535447120666504
    4. '<|end|>' → logprob: -5.785447120666504
    5. ',' → logprob: -6.285447120666504
    6. 'for' → logprob: -6.535447120666504
    7. ':
' → logprob: -6.785447120666504
    8. '                   ' → logprob: -7.160447120666504
    9. '```' → logprob: -7.285447120666504
    10. '                ' → logprob: -7.410447120666504

Token 1493: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5321459770202637
    2. ' for' → logprob: -0.9071459770202637
    3. '	for' → logprob: -5.157145977020264
    4. ':' → logprob: -7.282145977020264
    5. '<|end|>' → logprob: -7.282145977020264
    6. '                   ' → logprob: -7.532145977020264
    7. ' ' → logprob: -8.157146453857422
    8. '   ' → logprob: -8.782146453857422
    9. '.' → logprob: -9.032146453857422
    10. ',' → logprob: -9.282146453857422

Token 1494: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018081575632095337
    2. ' =' → logprob: -4.1430816650390625
    3. '=p' → logprob: -7.2680816650390625
    4. 'for' → logprob: -8.393081665039062
    5. '=
' → logprob: -9.018081665039062
    6. '[
' → logprob: -9.268081665039062
    7. '[' → logprob: -9.393081665039062
    8. '(point' → logprob: -9.518081665039062
    9. '=set' → logprob: -9.643081665039062
    10. ' for' → logprob: -9.893081665039062

Token 1495: 's' (ID: 82)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23707078397274017
    2. 'for' → logprob: -1.8620707988739014
    3. ' =' → logprob: -3.8620707988739014
    4. ' for' → logprob: -4.987070560455322
    5. ' in' → logprob: -5.112070560455322
    6. 'in' → logprob: -5.612070560455322
    7. '=list' → logprob: -5.612070560455322
    8. ')' → logprob: -6.112070560455322
    9. '=int' → logprob: -6.487070560455322
    10. ':' → logprob: -6.737070560455322

Token 1496: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11545746773481369
    2. 'for' → logprob: -3.365457534790039
    3. ' =' → logprob: -3.865457534790039
    4. ')=' → logprob: -4.740457534790039
    5. '=[' → logprob: -4.865457534790039
    6. ')' → logprob: -4.990457534790039
    7. '=[]' → logprob: -5.740457534790039
    8. ':' → logprob: -5.990457534790039
    9. ']=' → logprob: -5.990457534790039
    10. ' for' → logprob: -5.990457534790039

Token 1497: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.0002583594177849591
    2. ' point' → logprob: -9.125258445739746
    3. ']
' → logprob: -9.875258445739746
    4. ']' → logprob: -10.250258445739746
    5. '(point' → logprob: -10.500258445739746
    6. '
' → logprob: -11.500258445739746
    7. '[]' → logprob: -12.375258445739746
    8. 'i' → logprob: -13.000258445739746
    9. 'idx' → logprob: -13.000258445739746
    10. 'p' → logprob: -13.625258445739746

Token 1498: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.02486046403646469
    2. 'idx' → logprob: -4.399860382080078
    3. 'x' → logprob: -4.899860382080078
    4. 'dx' → logprob: -6.024860382080078
    5. 'for' → logprob: -6.899860382080078
    6. 's' → logprob: -7.274860382080078
    7. ' for' → logprob: -8.149860382080078
    8. 'd' → logprob: -9.024860382080078
    9. '[' → logprob: -9.899860382080078
    10. '```' → logprob: -10.149860382080078

Token 1499: '[p' (ID: 23234)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.03902415186166763
    2. '((' → logprob: -3.4140241146087646
    3. '.get' → logprob: -5.789024353027344
    4. '(' → logprob: -6.664024353027344
    5. '(x' → logprob: -7.789024353027344
    6. '(ax' → logprob: -8.164024353027344
    7. '[((' → logprob: -9.414024353027344
    8. '[
' → logprob: -9.539024353027344
    9. 'for' → logprob: -9.789024353027344
    10. '[' → logprob: -10.539024353027344

Token 1500: ']' (ID: 60)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4916040897369385
    2. ']' → logprob: -1.6166040897369385
    3. '1' → logprob: -2.2416040897369385
    4. '(' → logprob: -2.9916040897369385
    5. '((' → logprob: -4.241603851318359
    6. 'r' → logprob: -5.491603851318359
    7. ']
' → logprob: -6.116603851318359
    8. ']=(' → logprob: -6.241603851318359
    9. '[(' → logprob: -6.991603851318359
    10. 'for' → logprob: -6.991603851318359

Token 1501: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20267419517040253
    2. ' for' → logprob: -1.702674150466919
    3. ']' → logprob: -7.077674388885498
    4. '[' → logprob: -9.20267391204834
    5. '                   ' → logprob: -10.32767391204834
    6. ')' → logprob: -10.45267391204834
    7. '[(' → logprob: -10.45267391204834
    8. '[:]' → logprob: -10.45267391204834
    9. '               ' → logprob: -10.57767391204834
    10. '```' → logprob: -10.70267391204834

Token 1502: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0033424021676182747
    2. ' p' → logprob: -6.503342628479004
    3. '(p' → logprob: -7.503342628479004
    4. 'in' → logprob: -8.253342628479004
    5. '[
' → logprob: -8.503342628479004
    6. '[(' → logprob: -8.753342628479004
    7. '[p' → logprob: -8.753342628479004
    8. ' (' → logprob: -9.128342628479004
    9. ' in' → logprob: -9.378342628479004
    10. '(x' → logprob: -9.628342628479004

Token 1503: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4743829667568207
    2. ' in' → logprob: -0.9743829965591431
    3. '
' → logprob: -9.224383354187012
    4. 'p' → logprob: -9.474383354187012
    5. 's' → logprob: -10.099383354187012
    6. '(' → logprob: -10.974383354187012
    7. '(x' → logprob: -11.349383354187012
    8. '(p' → logprob: -11.349383354187012
    9. 'x' → logprob: -11.474383354187012
    10. '```' → logprob: -11.724383354187012

Token 1504: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005070925690233707
    2. '[(' → logprob: -5.63007116317749
    3. '[s' → logprob: -7.38007116317749
    4. 'ais' → logprob: -7.63007116317749
    5. ' shelf' → logprob: -8.630070686340332
    6. '[' → logprob: -9.880070686340332
    7. '[
' → logprob: -10.130070686340332
    8. '(s' → logprob: -10.755070686340332
    9. '   ' → logprob: -11.755070686340332
    10. '[((' → logprob: -11.755070686340332

Token 1505: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0013418971793726087
    2. '_adj' → logprob: -6.876341819763184
    3. '[(' → logprob: -8.876341819763184
    4. '(x' → logprob: -9.251341819763184
    5. '[x' → logprob: -10.626341819763184
    6. '((' → logprob: -11.626341819763184
    7. 'adj' → logprob: -11.751341819763184
    8. 'ais' → logprob: -12.251341819763184
    9. '_ai' → logprob: -12.501341819763184
    10. 's' → logprob: -13.001341819763184

Token 1506: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.05136710777878761
    2. '_' → logprob: -3.3013670444488525
    3. '(x' → logprob: -5.301367282867432
    4. '(' → logprob: -6.551367282867432
    5. 'adj' → logprob: -6.801367282867432
    6. '[(' → logprob: -7.051367282867432
    7. '_adj' → logprob: -7.551367282867432
    8. 'ai' → logprob: -8.051366806030273
    9. 'ail' → logprob: -8.051366806030273
    10. '(i' → logprob: -8.176366806030273

Token 1507: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0741065964102745
    2. 'el' → logprob: -2.9491066932678223
    3. 'ele' → logprob: -5.074106693267822
    4. 'e' → logprob: -5.199106693267822
    5. 'ile' → logprob: -5.574106693267822
    6. 'tle' → logprob: -6.949106693267822
    7. '_pos' → logprob: -7.074106693267822
    8. '_adj' → logprob: -7.699106693267822
    9. 'ale' → logprob: -7.824106693267822
    10. 'ule' → logprob: -8.949106216430664

Token 1508: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.06646429002285004
    2. 'pos' → logprob: -3.3164641857147217
    3. '[(' → logprob: -3.9414641857147217
    4. '_adj' → logprob: -5.191464424133301
    5. 'adj' → logprob: -6.566464424133301
    6. '_positions' → logprob: -8.1914644241333
    7. '
' → logprob: -8.6914644241333
    8. 'positions' → logprob: -9.1914644241333
    9. '```' → logprob: -9.1914644241333
    10. ']' → logprob: -9.1914644241333

Token 1509: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -5.676981345459353e-06
    2. '[((' → logprob: -13.375005722045898
    3. '[' → logprob: -13.750005722045898
    4. '.get' → logprob: -14.125005722045898
    5. '[
' → logprob: -14.250005722045898
    6. '   ' → logprob: -14.750005722045898
    7. '[x' → logprob: -15.250005722045898
    8. '```' → logprob: -15.375005722045898
    9. '((' → logprob: -15.500005722045898
    10. '``' → logprob: -15.750005722045898

Token 1510: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.466968650580384e-05
    2. '(x' → logprob: -9.875054359436035
    3. ' x' → logprob: -13.000054359436035
    4. '{x' → logprob: -15.500054359436035
    5. '
' → logprob: -15.875054359436035
    6. ' (' → logprob: -16.00005531311035
    7. '(' → logprob: -16.37505531311035
    8. ')x' → logprob: -16.50005531311035
    9. '```' → logprob: -16.75005531311035
    10. '   ' → logprob: -18.12505531311035

Token 1511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028493450372479856
    2. 'x' → logprob: -8.750285148620605
    3. '(x' → logprob: -9.500285148620605
    4. ',y' → logprob: -11.500285148620605
    5. ',x' → logprob: -11.625285148620605
    6. '[x' → logprob: -12.000285148620605
    7. ',' → logprob: -12.250285148620605
    8. 'y' → logprob: -12.250285148620605
    9. '
' → logprob: -12.250285148620605
    10. 's' → logprob: -13.625285148620605

Token 1512: ',y' (ID: 16103)
  Prédit: ')]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')][' → logprob: -0.8057357668876648
    2. ',y' → logprob: -0.9307357668876648
    3. '][' → logprob: -2.4307358264923096
    4. ',x' → logprob: -3.5557358264923096
    5. ',' → logprob: -4.3057355880737305
    6. '[' → logprob: -4.9307355880737305
    7. '[x' → logprob: -5.1807355880737305
    8. '1' → logprob: -5.5557355880737305
    9. ')]' → logprob: -5.8057355880737305
    10. ')' → logprob: -5.9307355880737305

Token 1513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5010468363761902
    2. 'y' → logprob: -1.376046895980835
    3. '0' → logprob: -2.751046895980835
    4. '][' → logprob: -3.876046895980835
    5. ')][' → logprob: -3.876046895980835
    6. '])' → logprob: -4.251046657562256
    7. 'x' → logprob: -5.626046657562256
    8. 'i' → logprob: -6.001046657562256
    9. '])]' → logprob: -6.001046657562256
    10. ']][' → logprob: -6.251046657562256

Token 1514: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4974408745765686
    2. ']]]' → logprob: -1.1224408149719238
    3. ']]' → logprob: -3.747440814971924
    4. ']' → logprob: -3.747440814971924
    5. ')]' → logprob: -4.372440814971924
    6. '])]' → logprob: -5.497440814971924
    7. ']][' → logprob: -6.622440814971924
    8. '][' → logprob: -8.122441291809082
    9. ')][' → logprob: -8.247441291809082
    10. ']])' → logprob: -8.622441291809082

Token 1515: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014405123889446259
    2. '               ' → logprob: -5.514405250549316
    3. ']
' → logprob: -5.639405250549316
    4. '                   ' → logprob: -5.764405250549316
    5. ']:
' → logprob: -6.514405250549316
    6. ':' → logprob: -7.639405250549316
    7. ':]' → logprob: -7.889405250549316
    8. ']:' → logprob: -8.014405250549316
    9. '                           ' → logprob: -8.764405250549316
    10. ':
' → logprob: -8.889405250549316

Token 1516: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0006402421277016401
    2. 'point' → logprob: -7.500640392303467
    3. ' p' → logprob: -10.000639915466309
    4. '(p' → logprob: -11.375639915466309
    5. '(' → logprob: -11.625639915466309
    6. 'len' → logprob: -12.500639915466309
    7. 'x' → logprob: -13.250639915466309
    8. '_p' → logprob: -13.313139915466309
    9. 'True' → logprob: -13.688139915466309
    10. '_' → logprob: -13.813139915466309

Token 1517: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.32070913910865784
    2. ' in' → logprob: -1.3207091093063354
    3. '[' → logprob: -4.945709228515625
    4. '0' → logprob: -9.695709228515625
    5. '!=' → logprob: -9.820709228515625
    6. 'x' → logprob: -10.445709228515625
    7. 'is' → logprob: -10.695709228515625
    8. 's' → logprob: -11.195709228515625
    9. '[
' → logprob: -11.195709228515625
    10. 'not' → logprob: -11.320709228515625

Token 1518: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -9.412610233994201e-05
    2. 'idx' → logprob: -9.875094413757324
    3. 'ais' → logprob: -10.375094413757324
    4. '
' → logprob: -13.125094413757324
    5. 's' → logprob: -13.250094413757324
    6. ' point' → logprob: -13.500094413757324
    7. 'points' → logprob: -14.125094413757324
    8. '{
' → logprob: -14.375094413757324
    9. '{' → logprob: -14.625094413757324
    10. 'poi' → logprob: -14.625094413757324

Token 1519: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -6.158350151963532e-05
    2. 'idx' → logprob: -9.875061988830566
    3. '_idxs' → logprob: -12.500061988830566
    4. '_points' → logprob: -13.000061988830566
    5. 's' → logprob: -13.500061988830566
    6. 'point' → logprob: -14.625061988830566
    7. '_point' → logprob: -15.125061988830566
    8. '_IDX' → logprob: -15.250061988830566
    9. '```' → logprob: -15.250061988830566
    10. '_' → logprob: -15.250061988830566

Token 1520: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012280851369723678
    2. ']
' → logprob: -6.751227855682373
    3. '`]' → logprob: -11.251228332519531
    4. ' ]' → logprob: -11.751228332519531
    5. ']==' → logprob: -12.376228332519531
    6. '               ' → logprob: -12.376228332519531
    7. ')]' → logprob: -12.751228332519531
    8. '()]' → logprob: -12.751228332519531
    9. '                   ' → logprob: -12.876228332519531
    10. ']>' → logprob: -13.126228332519531

Token 1521: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009732594713568687
    2. '                   ' → logprob: -5.009732723236084
    3. '           ' → logprob: -7.134732723236084
    4. ']' → logprob: -7.384732723236084
    5. ' for' → logprob: -7.634732723236084
    6. 'for' → logprob: -8.259732246398926
    7. '```' → logprob: -8.759732246398926
    8. '<|end|>' → logprob: -8.884732246398926
    9. '                       ' → logprob: -9.134732246398926
    10. '+' → logprob: -9.884732246398926

Token 1522: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0628010630607605
    2. ' for' → logprob: -3.0628011226654053
    3. 'res' → logprob: -4.562800884246826
    4. '                   ' → logprob: -6.062800884246826
    5. '               ' → logprob: -7.437800884246826
    6. '```' → logprob: -8.187801361083984
    7. ' res' → logprob: -8.937801361083984
    8. '``' → logprob: -9.437801361083984
    9. 'idx' → logprob: -9.937801361083984
    10. '                       ' → logprob: -10.062801361083984

Token 1523: ' (' (ID: 350)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0014659387525171041
    2. ' idx' → logprob: -7.126465797424316
    3. 'ix' → logprob: -8.126465797424316
    4. 'i' → logprob: -8.876465797424316
    5. 'id' → logprob: -9.376465797424316
    6. 'j' → logprob: -9.626465797424316
    7. '(idx' → logprob: -11.001465797424316
    8. 'ii' → logprob: -11.626465797424316
    9. 'p' → logprob: -11.751465797424316
    10. 'x' → logprob: -11.876465797424316

Token 1524: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5822168588638306
    2. 'ax' → logprob: -0.8322168588638306
    3. 'a' → logprob: -6.582216739654541
    4. 'tx' → logprob: -6.582216739654541
    5. 'idx' → logprob: -6.707216739654541
    6. 'nx' → logprob: -7.457216739654541
    7. 'px' → logprob: -7.707216739654541
    8. 'ix' → logprob: -8.2072172164917
    9. 'p' → logprob: -8.4572172164917
    10. 'xx' → logprob: -8.5822172164917

Token 1525: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037100540939718485
    2. ',' → logprob: -6.2537102699279785
    3. ',y' → logprob: -6.3787102699279785
    4. '_,' → logprob: -11.00370979309082
    5. '0' → logprob: -11.25370979309082
    6. 'y' → logprob: -11.37870979309082
    7. ',j' → logprob: -12.37870979309082
    8. '_' → logprob: -12.37870979309082
    9. '+' → logprob: -12.50370979309082
    10. '```' → logprob: -12.50370979309082

Token 1526: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.00018268341955263168
    2. ',' → logprob: -8.75018310546875
    3. ' ,' → logprob: -10.75018310546875
    4. '   ' → logprob: -14.87518310546875
    5. ' ' → logprob: -15.00018310546875
    6. ',
' → logprob: -15.00018310546875
    7. '```' → logprob: -15.25018310546875
    8. '       ' → logprob: -15.62518310546875
    9. ',j' → logprob: -15.87518310546875
    10. ',x' → logprob: -16.25018310546875

Token 1527: '2' (ID: 17)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.018267113715410233
    2. ',' → logprob: -4.1432671546936035
    3. 'y' → logprob: -6.5182671546936035
    4. '2' → logprob: -7.2682671546936035
    5. ',user' → logprob: -11.268266677856445
    6. ',x' → logprob: -11.393266677856445
    7. ',p' → logprob: -12.018266677856445
    8. ',
' → logprob: -12.268266677856445
    9. '1' → logprob: -12.393266677856445
    10. ',j' → logprob: -12.518266677856445

Token 1528: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.88418151892256e-05
    2. ' in' → logprob: -10.750059127807617
    3. ' )' → logprob: -11.000059127807617
    4. 'in' → logprob: -11.750059127807617
    5. ')
' → logprob: -13.125059127807617
    6. '           ' → logprob: -13.500059127807617
    7. '                   ' → logprob: -13.750059127807617
    8. '               ' → logprob: -14.000059127807617
    9. 'In' → logprob: -14.125059127807617
    10. '):
' → logprob: -14.125059127807617

Token 1529: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04461241513490677
    2. 'in' → logprob: -3.169612407684326
    3. ')' → logprob: -6.794612407684326
    4. 's' → logprob: -7.919612407684326
    5. '```' → logprob: -10.044612884521484
    6. ' ' → logprob: -11.294612884521484
    7. '           ' → logprob: -11.419612884521484
    8. '
' → logprob: -11.669612884521484
    9. '               ' → logprob: -11.794612884521484
    10. 'In' → logprob: -12.294612884521484

Token 1530: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.006014714017510414
    2. ' prod' → logprob: -5.381014823913574
    3. 's' → logprob: -6.631014823913574
    4. '           ' → logprob: -10.381014823913574
    5. ' shelf' → logprob: -11.756014823913574
    6. '(prod' → logprob: -11.881014823913574
    7. '   ' → logprob: -12.256014823913574
    8. '               ' → logprob: -12.506014823913574
    9. '          ' → logprob: -13.256014823913574
    10. '.prod' → logprob: -13.381014823913574

Token 1531: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.2534742057323456
    2. '_' → logprob: -1.503474235534668
    3. 's' → logprob: -6.503474235534668
    4. '```' → logprob: -12.128474235534668
    5. '_
' → logprob: -12.378474235534668
    6. '\' → logprob: -12.628474235534668
    7. '
' → logprob: -12.628474235534668
    8. '_points' → logprob: -12.753474235534668
    9. '   ' → logprob: -12.878474235534668
    10. '#' → logprob: -13.003474235534668

Token 1532: 'helves' (ID: 182327)
  Prédit: 'helves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helves' → logprob: -0.01521378941833973
    2. 'hel' → logprob: -5.140213966369629
    3. 'helf' → logprob: -5.640213966369629
    4. 's' → logprob: -7.140213966369629
    5. 'hele' → logprob: -7.140213966369629
    6. 'h' → logprob: -7.265213966369629
    7. 'he' → logprob: -7.640213966369629
    8. '_' → logprob: -8.015213966369629
    9. 'e' → logprob: -8.327713966369629
    10. '{' → logprob: -8.452713966369629

Token 1533: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -9.85366350505501e-05
    2. 'g' → logprob: -10.12509822845459
    3. '[j' → logprob: -10.62509822845459
    4. '[' → logprob: -11.25009822845459
    5. '[(' → logprob: -12.50009822845459
    6. '{' → logprob: -12.50009822845459
    7. '```' → logprob: -12.87509822845459
    8. '   ' → logprob: -13.62509822845459
    9. '[
' → logprob: -13.75009822845459

Token 1534: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00028493450372479856
    2. 'j' → logprob: -8.500285148620605
    3. '_i' → logprob: -9.875285148620605
    4. '[j' → logprob: -11.375285148620605
    5. '
' → logprob: -12.500285148620605
    6. '```' → logprob: -13.250285148620605
    7. '[' → logprob: -13.500285148620605
    8. '``' → logprob: -13.875285148620605
    9. '   ' → logprob: -14.375285148620605
    10. '{
' → logprob: -14.437785148620605

Token 1535: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.13343213498592377
    2. '[(' → logprob: -2.258432149887085
    3. '[x' → logprob: -4.883431911468506
    4. ']:' → logprob: -5.383431911468506
    5. '):
' → logprob: -6.008431911468506
    6. '(x' → logprob: -6.258431911468506
    7. ':
' → logprob: -7.133431911468506
    8. ']' → logprob: -7.383431911468506
    9. '           ' → logprob: -7.883431911468506
    10. ']:

' → logprob: -7.883431911468506

Token 1536: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006343241780996323
    2. '                           ' → logprob: -6.506343364715576
    3. '<|end|>' → logprob: -6.631343364715576
    4. '```' → logprob: -7.256343364715576
    5. '                       ' → logprob: -7.506343364715576
    6. '<|end|>' → logprob: -7.631343364715576
    7. ' for' → logprob: -7.631343364715576
    8. '                               ' → logprob: -9.006342887878418
    9. ':
' → logprob: -9.131342887878418
    10. '                    
' → logprob: -9.131342887878418

Token 1537: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.05110162869095802
    2. 'for' → logprob: -3.3011016845703125
    3. ' idx' → logprob: -4.8011016845703125
    4. ' for' → logprob: -5.8011016845703125
    5. '                   ' → logprob: -7.0511016845703125
    6. 'indices' → logprob: -8.551101684570312
    7. '                       ' → logprob: -8.676101684570312
    8. 'if' → logprob: -9.426101684570312
    9. '                           ' → logprob: -9.551101684570312
    10. 'j' → logprob: -9.551101684570312

Token 1538: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07545800507068634
    2. '1' → logprob: -3.07545804977417
    3. 's' → logprob: -3.70045804977417
    4. '_j' → logprob: -7.70045804977417
    5. '_s' → logprob: -8.200457572937012
    6. 'es' → logprob: -8.325457572937012
    7. '_list' → logprob: -8.575457572937012
    8. '_p' → logprob: -8.825457572937012
    9. '_idx' → logprob: -9.075457572937012
    10. 'for' → logprob: -9.575457572937012

Token 1539: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0013948804698884487
    2. '=[' → logprob: -7.376394748687744
    3. 'list' → logprob: -7.876394748687744
    4. '=' → logprob: -8.626395225524902
    5. '_list' → logprob: -9.126395225524902
    6. '=[]' → logprob: -10.376395225524902
    7. '=s' → logprob: -11.126395225524902
    8. 'for' → logprob: -11.376395225524902
    9. '[s' → logprob: -11.751395225524902
    10. ' =' → logprob: -12.126395225524902

Token 1540: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.009604621678590775
    2. '=' → logprob: -4.884604454040527
    3. '=[
' → logprob: -6.634604454040527
    4. '=[]' → logprob: -8.634604454040527
    5. 'for' → logprob: -9.009604454040527
    6. ' =' → logprob: -9.259604454040527
    7. ' =[' → logprob: -9.384604454040527
    8. '[' → logprob: -9.509604454040527
    9. '=list' → logprob: -10.634604454040527
    10. 's' → logprob: -10.634604454040527

Token 1541: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.0007175540085881948
    2. '[' → logprob: -7.250717639923096
    3. '(point' → logprob: -12.375717163085938
    4. ' point' → logprob: -13.500717163085938
    5. '[
' → logprob: -13.750717163085938
    6. '
' → logprob: -15.375717163085938
    7. '	point' → logprob: -15.750717163085938
    8. '[p' → logprob: -16.000717163085938
    9. '   ' → logprob: -16.500717163085938
    10. ' [' → logprob: -16.500717163085938

Token 1542: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -5.049755782238208e-05
    2. '[' → logprob: -11.12505054473877
    3. 'point' → logprob: -11.12505054473877
    4. '_[' → logprob: -12.62505054473877
    5. 'idx' → logprob: -12.75005054473877
    6. '[
' → logprob: -13.00005054473877
    7. '_token' → logprob: -13.12505054473877
    8. '_IDX' → logprob: -13.37505054473877
    9. '```' → logprob: -13.50005054473877
    10. '_' → logprob: -13.75005054473877

Token 1543: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.07245595008134842
    2. '[s' → logprob: -2.697455883026123
    3. '[(' → logprob: -6.697455883026123
    4. 'p' → logprob: -6.947455883026123
    5. '[' → logprob: -8.447456359863281
    6. 'for' → logprob: -10.322456359863281
    7. 's' → logprob: -10.447456359863281
    8. '[
' → logprob: -11.072456359863281
    9. '```' → logprob: -11.822456359863281
    10. ' [' → logprob: -12.447456359863281

Token 1544: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1427358239889145
    2. 'for' → logprob: -2.017735719680786
    3. '[p' → logprob: -11.142735481262207
    4. '[' → logprob: -11.267735481262207
    5. '                           ' → logprob: -12.017735481262207
    6. '                   ' → logprob: -12.267735481262207
    7. '```' → logprob: -12.642735481262207
    8. '	for' → logprob: -13.142735481262207
    9. '               ' → logprob: -13.142735481262207
    10. ']' → logprob: -13.517735481262207

Token 1545: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5760867595672607
    2. 'for' → logprob: -0.8260867595672607
    3. '[(' → logprob: -9.57608699798584
    4. '[' → logprob: -10.32608699798584
    5. '```' → logprob: -11.82608699798584
    6. '                           ' → logprob: -11.82608699798584
    7. '	for' → logprob: -12.07608699798584
    8. '[p' → logprob: -12.45108699798584
    9. '
' → logprob: -12.82608699798584
    10. ')' → logprob: -13.07608699798584

Token 1546: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004051209893077612
    2. ' p' → logprob: -5.754051208496094
    3. 's' → logprob: -7.379051208496094
    4. '(p' → logprob: -9.129051208496094
    5. '(x' → logprob: -10.129051208496094
    6. ' (' → logprob: -11.254051208496094
    7. '   ' → logprob: -11.629051208496094
    8. '(s' → logprob: -11.629051208496094
    9. '           ' → logprob: -11.754051208496094
    10. '(' → logprob: -11.754051208496094

Token 1547: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2608914077281952
    2. 'in' → logprob: -2.0108914375305176
    3. ' in' → logprob: -2.8858914375305176
    4. 's' → logprob: -3.6358914375305176
    5. ' p' → logprob: -5.010891437530518
    6. '(p' → logprob: -5.635891437530518
    7. '(x' → logprob: -7.510891437530518
    8. ' (' → logprob: -7.635891437530518
    9. '(s' → logprob: -8.32339096069336
    10. '(' → logprob: -8.32339096069336

Token 1548: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00478123826906085
    2. ' shelf' → logprob: -5.379781246185303
    3. '[s' → logprob: -10.129780769348145
    4. 'p' → logprob: -11.129780769348145
    5. '   ' → logprob: -11.254780769348145
    6. 'ais' → logprob: -11.254780769348145
    7. '`s' → logprob: -11.504780769348145
    8. '(s' → logprob: -11.629780769348145
    9. ' ' → logprob: -11.754780769348145
    10. '[(' → logprob: -11.879780769348145

Token 1549: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0018530775560066104
    2. '_s' → logprob: -7.501852989196777
    3. '_adj' → logprob: -7.501852989196777
    4. 's' → logprob: -8.126852989196777
    5. 'adj' → logprob: -8.501852989196777
    6. 'pos' → logprob: -9.251852989196777
    7. '_pos' → logprob: -10.126852989196777
    8. '[(' → logprob: -11.001852989196777
    9. '#' → logprob: -11.001852989196777
    10. '_positions' → logprob: -11.626852989196777

Token 1550: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.501167356967926
    2. '_' → logprob: -1.1261672973632812
    3. 'aj' → logprob: -4.001167297363281
    4. '(' → logprob: -4.751167297363281
    5. 's' → logprob: -4.751167297363281
    6. '_pos' → logprob: -5.126167297363281
    7. 'pos' → logprob: -5.126167297363281
    8. 'ay' → logprob: -5.876167297363281
    9. 'ail' → logprob: -6.251167297363281
    10. 'as' → logprob: -6.376167297363281

Token 1551: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.19836555421352386
    2. 'e' → logprob: -1.948365569114685
    3. '_pos' → logprob: -3.9483654499053955
    4. 'pos' → logprob: -4.948365688323975
    5. 'el' → logprob: -5.323365688323975
    6. 'ole' → logprob: -6.448365688323975
    7. 'se' → logprob: -7.073365688323975
    8. 'ale' → logprob: -7.823365688323975
    9. '_positions' → logprob: -7.823365688323975
    10. 'ele' → logprob: -7.948365688323975

Token 1552: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.016012078151106834
    2. 'pos' → logprob: -4.266012191772461
    3. 'adj' → logprob: -6.766012191772461
    4. '_adj' → logprob: -7.766012191772461
    5. '[(' → logprob: -9.641012191772461
    6. 's' → logprob: -10.016012191772461
    7. '_' → logprob: -10.766012191772461
    8. 'ais' → logprob: -11.016012191772461
    9. '
' → logprob: -11.016012191772461
    10. '{
' → logprob: -11.141012191772461

Token 1553: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -7.584239938296378e-06
    2. '.get' → logprob: -12.500007629394531
    3. '((' → logprob: -13.125007629394531
    4. '   ' → logprob: -14.750007629394531
    5. '[
' → logprob: -15.250007629394531
    6. '```' → logprob: -15.625007629394531
    7. '(x' → logprob: -16.12500762939453
    8. '(' → logprob: -16.12500762939453
    9. ']' → logprob: -16.25000762939453
    10. '[' → logprob: -16.37500762939453

Token 1554: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01254897378385067
    2. '(x' → logprob: -4.387548923492432
    3. ' x' → logprob: -11.13754940032959
    4. '(' → logprob: -11.88754940032959
    5. '{x' → logprob: -11.88754940032959
    6. ' (' → logprob: -12.63754940032959
    7. '
' → logprob: -13.76254940032959
    8. ')x' → logprob: -13.88754940032959
    9. '   ' → logprob: -14.13754940032959
    10. '(
' → logprob: -14.38754940032959

Token 1555: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02374979481101036
    2. 'x' → logprob: -3.773749828338623
    3. '(x' → logprob: -8.148749351501465
    4. '(' → logprob: -10.023749351501465
    5. 'j' → logprob: -10.148749351501465
    6. 'y' → logprob: -10.148749351501465
    7. '```' → logprob: -11.023749351501465
    8. '_j' → logprob: -11.398749351501465
    9. '1' → logprob: -11.773749351501465
    10. '   ' → logprob: -11.836249351501465

Token 1556: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.00712239183485508
    2. '][' → logprob: -5.63212251663208
    3. ',' → logprob: -6.13212251663208
    4. ')][' → logprob: -7.25712251663208
    5. '[y' → logprob: -8.507122039794922
    6. ')' → logprob: -8.757122039794922
    7. ',p' → logprob: -9.132122039794922
    8. ')[' → logprob: -9.632122039794922
    9. '(y' → logprob: -11.132122039794922
    10. '[' → logprob: -11.507122039794922

Token 1557: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.600106418132782
    2. 'ny' → logprob: -1.2251064777374268
    3. 'x' → logprob: -3.1001064777374268
    4. 'ay' → logprob: -3.2251064777374268
    5. 'p' → logprob: -3.3501064777374268
    6. '2' → logprob: -4.225106239318848
    7. '1' → logprob: -4.350106239318848
    8. '0' → logprob: -5.975106239318848
    9. ',y' → logprob: -6.725106239318848
    10. ',' → logprob: -6.850106239318848

Token 1558: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7172545194625854
    2. ']]' → logprob: -0.7172545194625854
    3. ']]
' → logprob: -4.092254638671875
    4. ')]' → logprob: -5.717254638671875
    5. ']]:
' → logprob: -6.842254638671875
    6. '])' → logprob: -7.467254638671875
    7. ']
' → logprob: -7.717254638671875
    8. 'if' → logprob: -7.842254638671875
    9. ']:
' → logprob: -8.467254638671875
    10. ')' → logprob: -8.467254638671875

Token 1559: ' if' (ID: 538)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3757960796356201
    2. ' if' → logprob: -2.12579607963562
    3. ':
' → logprob: -2.87579607963562
    4. 'if' → logprob: -3.00079607963562
    5. '                   ' → logprob: -3.37579607963562
    6. ':' → logprob: -4.125796318054199
    7. ']' → logprob: -4.500796318054199
    8. ']:' → logprob: -4.625796318054199
    9. '                       ' → logprob: -5.000796318054199
    10. '```' → logprob: -5.375796318054199

Token 1560: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0031790214125066996
    2. ' p' → logprob: -5.75317907333374
    3. '(p' → logprob: -14.753178596496582
    4. ' ' → logprob: -16.2531795501709
    5. 'x' → logprob: -16.2531795501709
    6. '[p' → logprob: -16.2531795501709
    7. '   ' → logprob: -16.3781795501709
    8. '[' → logprob: -16.8781795501709
    9. '<p' → logprob: -16.8781795501709
    10. '`' → logprob: -17.3781795501709

Token 1561: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10023277252912521
    2. ' in' → logprob: -2.3502328395843506
    3. '[' → logprob: -11.72523307800293
    4. 'n' → logprob: -11.97523307800293
    5. 'inx' → logprob: -12.85023307800293
    6. '```' → logprob: -13.35023307800293
    7. ' ' → logprob: -13.47523307800293
    8. 'In' → logprob: -14.10023307800293
    9. '
' → logprob: -14.22523307800293
    10. 'p' → logprob: -14.60023307800293

Token 1562: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -7.624555291840807e-05
    2. ' point' → logprob: -9.500076293945312
    3. '(point' → logprob: -14.625076293945312
    4. '{' → logprob: -15.250076293945312
    5. '	point' → logprob: -15.625076293945312
    6. 'oint' → logprob: -16.375076293945312
    7. '
' → logprob: -16.375076293945312
    8. 'set' → logprob: -17.000076293945312
    9. 'idx' → logprob: -17.000076293945312
    10. '[' → logprob: -17.250076293945312

Token 1563: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.7432603272027336e-06
    2. 'idx' → logprob: -14.250001907348633
    3. '[idx' → logprob: -15.250001907348633
    4. '_idxs' → logprob: -15.875001907348633
    5. '[
' → logprob: -16.000001907348633
    6. '[' → logprob: -16.125001907348633
    7. '_ctx' → logprob: -16.250001907348633
    8. '```' → logprob: -16.625001907348633
    9. '_IDX' → logprob: -16.750001907348633
    10. 'Idx' → logprob: -17.375001907348633

Token 1564: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003396933199837804
    2. ']:
' → logprob: -6.503396987915039
    3. ']:' → logprob: -6.878396987915039
    4. ']
' → logprob: -7.378396987915039
    5. ':' → logprob: -9.253396987915039
    6. ':]' → logprob: -10.128396987915039
    7. ' ]' → logprob: -10.128396987915039
    8. ']==' → logprob: -11.628396987915039
    9. '```' → logprob: -11.878396987915039
    10. '`]' → logprob: -11.878396987915039

Token 1565: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14807821810245514
    2. '                       ' → logprob: -2.273078203201294
    3. '                           ' → logprob: -4.773078441619873
    4. '                               ' → logprob: -5.148078441619873
    5. '               ' → logprob: -5.398078441619873
    6. ' for' → logprob: -5.523078441619873
    7. '<|end|>' → logprob: -5.898078441619873
    8. '```' → logprob: -6.148078441619873
    9. '           ' → logprob: -7.023078441619873
    10. '                                           ' → logprob: -7.023078441619873

Token 1566: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5222616195678711
    2. '                       ' → logprob: -1.397261619567871
    3. 'for' (adapté à ' for') → logprob: -2.397261619567871
    4. '                           ' → logprob: -3.272261619567871
    5. '                               ' → logprob: -4.397261619567871
    6. '                                           ' → logprob: -5.647261619567871
    7. '                                   ' → logprob: -6.397261619567871
    8. '                                       ' → logprob: -6.397261619567871
    9. '                                               ' → logprob: -6.522261619567871
    10. '                   ' → logprob: -6.522261619567871

Token 1567: ' u' (ID: 337)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5813887119293213
    2. 'idx' → logprob: -0.8313887119293213
    3. 'id' → logprob: -5.956388473510742
    4. 'u' → logprob: -5.956388473510742
    5. ' idx' → logprob: -9.456388473510742
    6. 'a' → logprob: -9.706388473510742
    7. 'ii' → logprob: -10.206388473510742
    8. 'ix' → logprob: -10.706388473510742
    9. 'k' → logprob: -10.706388473510742
    10. 'index' → logprob: -12.331388473510742

Token 1568: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.577752411365509
    2. ' in' → logprob: -0.827752411365509
    3. 'u' → logprob: -7.327752590179443
    4. ',u' → logprob: -7.327752590179443
    5. '_in' → logprob: -8.827752113342285
    6. '1' → logprob: -9.327752113342285
    7. ',' → logprob: -9.577752113342285
    8. '```' → logprob: -9.702752113342285
    9. '	in' → logprob: -10.577752113342285
    10. 'i' → logprob: -11.202752113342285

Token 1569: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00031270162435248494
    2. ' idx' → logprob: -8.125312805175781
    3. 'range' → logprob: -11.625312805175781
    4. 'u' → logprob: -12.750312805175781
    5. '[idx' → logprob: -13.375312805175781
    6. '   ' → logprob: -14.000312805175781
    7. '[' → logprob: -14.250312805175781
    8. '(idx' → logprob: -14.375312805175781
    9. 'index' → logprob: -15.250312805175781
    10. '
' → logprob: -15.375312805175781

Token 1570: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07117750495672226
    2. '2' → logprob: -3.5711774826049805
    3. '[u' → logprob: -3.5711774826049805
    4. '_idx' → logprob: -5.3211774826049805
    5. '[' → logprob: -6.0711774826049805
    6. 's' → logprob: -6.5711774826049805
    7. ']' → logprob: -7.1961774826049805
    8. 'u' → logprob: -7.4461774826049805
    9. '```' → logprob: -7.6961774826049805
    10. '(u' → logprob: -7.8211774826049805

Token 1571: 's' (ID: 82)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.6666533946990967
    2. 's' → logprob: -0.9166533946990967
    3. ':' → logprob: -3.7916533946990967
    4. '[' → logprob: -4.041653633117676
    5. '<|end|>' → logprob: -4.416653633117676
    6. 'u' → logprob: -5.166653633117676
    7. '][' → logprob: -5.666653633117676
    8. ']' → logprob: -5.666653633117676
    9. '[s' → logprob: -5.791653633117676
    10. '+' → logprob: -6.291653633117676

Token 1572: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7347881197929382
    2. ':
' → logprob: -0.9847881197929382
    3. '                       ' → logprob: -2.484788179397583
    4. '                               ' → logprob: -3.609788179397583
    5. '                           ' → logprob: -4.609787940979004
    6. 'for' → logprob: -4.734787940979004
    7. ' for' → logprob: -5.109787940979004
    8. '.' → logprob: -6.359787940979004
    9. '                                               ' → logprob: -6.484787940979004
    10. '                                           ' → logprob: -6.609787940979004

Token 1573: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.31853440403938293
    2. ' for' → logprob: -1.4435343742370605
    3. 'for' → logprob: -3.5685343742370605
    4. '                           ' → logprob: -5.0685343742370605
    5. '                               ' → logprob: -6.8185343742370605
    6. '```' → logprob: -8.568534851074219
    7. '                        ' → logprob: -8.818534851074219
    8. '                                               ' → logprob: -9.318534851074219
    9. '<|end|>' → logprob: -9.318534851074219
    10. '       ' → logprob: -9.318534851074219

Token 1574: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6334277391433716
    2. ' for' → logprob: -0.7584277391433716
    3. '                       ' → logprob: -7.758427619934082
    4. '                           ' → logprob: -8.258427619934082
    5. '                               ' → logprob: -9.383427619934082
    6. '```' → logprob: -11.008427619934082
    7. '   ' → logprob: -12.008427619934082
    8. '       ' → logprob: -12.133427619934082
    9. '<|end|>' → logprob: -12.258427619934082
    10. '	for' → logprob: -12.508427619934082

Token 1575: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0013291679788380861
    2. ' v' → logprob: -6.626328945159912
    3. 'idx' → logprob: -13.50132942199707
    4. '	v' → logprob: -14.50132942199707
    5. '(v' → logprob: -14.87632942199707
    6. 'w' → logprob: -15.00132942199707
    7. '[v' → logprob: -15.25132942199707
    8. '   ' → logprob: -15.87632942199707
    9. '
' → logprob: -15.87632942199707
    10. 'range' → logprob: -16.87632942199707

Token 1576: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06200532615184784
    2. 'in' → logprob: -2.8120052814483643
    3. '[' → logprob: -12.062005043029785
    4. ')' → logprob: -12.062005043029785
    5. ',' → logprob: -12.187005043029785
    6. '                           ' → logprob: -12.687005043029785
    7. '```' → logprob: -13.062005043029785
    8. 'adj' → logprob: -13.187005043029785
    9. '[u' → logprob: -13.437005043029785
    10. ' ' → logprob: -13.562005043029785

Token 1577: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0001745775662129745
    2. ' idx' → logprob: -8.750174522399902
    3. '[idx' → logprob: -11.125174522399902
    4. '(idx' → logprob: -14.625174522399902
    5. 'range' → logprob: -15.125174522399902
    6. 'index' → logprob: -15.250174522399902
    7. '	idx' → logprob: -15.750174522399902
    8. '   ' → logprob: -17.12517547607422
    9. '
' → logprob: -17.62517547607422
    10. '[' → logprob: -17.75017547607422

Token 1578: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019749074708670378
    2. 'idx' → logprob: -6.501975059509277
    3. '1' → logprob: -8.251975059509277
    4. 's' → logprob: -9.251975059509277
    5. '[idx' → logprob: -10.626975059509277
    6. '[u' → logprob: -10.626975059509277
    7. '[' → logprob: -10.876975059509277
    8. '_idx' → logprob: -11.126975059509277
    9. '```' → logprob: -12.001975059509277
    10. '
' → logprob: -12.126975059509277

Token 1579: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010158988879993558
    2. '2' → logprob: -7.626015663146973
    3. '_idx' → logprob: -8.626015663146973
    4. 'idx' → logprob: -9.126015663146973
    5. '[u' → logprob: -9.501015663146973
    6. '_s' → logprob: -10.376015663146973
    7. '[s' → logprob: -10.376015663146973
    8. '[
' → logprob: -10.876015663146973
    9. '```' → logprob: -11.126015663146973
    10. 'u' → logprob: -11.376015663146973

Token 1580: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.17555153369903564
    2. ':
' → logprob: -2.175551414489746
    3. ':' → logprob: -3.550551414489746
    4. '                               ' → logprob: -4.675551414489746
    5. '                                   ' → logprob: -6.300551414489746
    6. '                                           ' → logprob: -6.300551414489746
    7. '+' → logprob: -7.300551414489746
    8. '```' → logprob: -7.300551414489746
    9. '                       ' → logprob: -7.425551414489746
    10. '.' → logprob: -7.550551414489746

Token 1581: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3513502776622772
    2. '                                   ' → logprob: -1.8513503074645996
    3. '                               ' → logprob: -2.2263503074645996
    4. 'if' → logprob: -4.2263503074646
    5. '                                       ' → logprob: -5.1013503074646
    6. '                                           ' → logprob: -5.4763503074646
    7. '```' → logprob: -5.8513503074646
    8. ' if' → logprob: -6.9763503074646
    9. '                                               ' → logprob: -7.6013503074646
    10. '                                                                   ' → logprob: -7.8513503074646

Token 1582: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14697517454624176
    2. ' if' → logprob: -2.02197527885437
    3. '                               ' → logprob: -6.271975040435791
    4. '                           ' → logprob: -6.771975040435791
    5. 'adj' → logprob: -8.02197551727295
    6. '```' → logprob: -8.39697551727295
    7. '                                   ' → logprob: -8.89697551727295
    8. ' res' → logprob: -9.02197551727295
    9. 'res' → logprob: -9.14697551727295
    10. '   ' → logprob: -9.64697551727295

Token 1583: '=' (ID: 28)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.29496920108795166
    2. '=' → logprob: -1.5449692010879517
    3. '[' → logprob: -3.669969081878662
    4. '=u' → logprob: -4.669969081878662
    5. 'ist' → logprob: -5.919969081878662
    6. '=
' → logprob: -7.294969081878662
    7. '[i' → logprob: -7.419969081878662
    8. ' =' → logprob: -7.544969081878662
    9. 'u' → logprob: -7.919969081878662
    10. '=[' → logprob: -7.919969081878662

Token 1584: 'adj' (ID: 57001)
  Prédit: 'adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.00011021859245374799
    2. ' adj' → logprob: -9.125110626220703
    3. 'min' → logprob: -13.875110626220703
    4. '(adj' → logprob: -15.500110626220703
    5. 'adm' → logprob: -17.250110626220703
    6. 'Adj' → logprob: -17.250110626220703
    7. 'ad' → logprob: -17.375110626220703
    8. 'dist' → logprob: -18.250110626220703
    9. '   ' → logprob: -18.750110626220703
    10. 'max' → logprob: -19.000110626220703

Token 1585: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -9.198043699143454e-05
    2. '[' → logprob: -9.500091552734375
    3. 'u' → logprob: -11.250091552734375
    4. '[
' → logprob: -13.000091552734375
    5. '```' → logprob: -14.500091552734375
    6. '(u' → logprob: -14.875091552734375
    7. ' [' → logprob: -15.000091552734375
    8. '[[' → logprob: -15.625091552734375
    9. '\[' → logprob: -15.875091552734375
    10. '<u' → logprob: -16.500091552734375

Token 1586: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003585840167943388
    2. '[v' → logprob: -8.000358581542969
    3. ']' → logprob: -11.125358581542969
    4. ' ][' → logprob: -12.500358581542969
    5. '[u' → logprob: -12.750358581542969
    6. '[' → logprob: -14.250358581542969
    7. '"][' → logprob: -15.000358581542969
    8. 'v' → logprob: -15.000358581542969
    9. ''][' → logprob: -15.750358581542969
    10. ']][' → logprob: -16.62535858154297

Token 1587: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9361264946837764e-07
    2. ' v' → logprob: -16.0
    3. '[v' → logprob: -18.75
    4. ')v' → logprob: -19.5
    5. '	v' → logprob: -19.625
    6. '```' → logprob: -19.875
    7. '(v' → logprob: -20.375
    8. 'u' → logprob: -20.625
    9. 'vj' → logprob: -21.0
    10. '_v' → logprob: -21.125

Token 1588: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12202797085046768
    2. '+' → logprob: -3.24702787399292
    3. '<|end|>' → logprob: -3.24702787399292
    4. ')' → logprob: -4.12202787399292
    5. ']+' → logprob: -4.24702787399292
    6. '])' → logprob: -5.99702787399292
    7. '<|end|>' → logprob: -6.99702787399292
    8. '                           ' → logprob: -7.12202787399292
    9. ' +' → logprob: -7.37202787399292
    10. ' ]' → logprob: -7.62202787399292

Token 1589: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.4461911618709564
    2. '                               ' → logprob: -1.0711911916732788
    3. '                                   ' → logprob: -5.196191310882568
    4. '                             ' → logprob: -6.196191310882568
    5. '```' → logprob: -6.196191310882568
    6. '<|end|>' → logprob: -6.196191310882568
    7. '                            ' → logprob: -6.946191310882568
    8. '                            
' → logprob: -7.071191310882568
    9. '                                           ' → logprob: -7.571191310882568
    10. '                                       ' → logprob: -7.696191310882568

Token 1590: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3609492778778076
    2. ' if' → logprob: -1.3609492778778076
    3. '                           ' → logprob: -3.6109492778778076
    4. '                               ' → logprob: -4.360949516296387
    5. '<' → logprob: -6.485949516296387
    6. '<=' → logprob: -6.610949516296387
    7. '=' → logprob: -6.985949516296387
    8. '==' → logprob: -7.485949516296387
    9. '```' → logprob: -7.860949516296387
    10. ' <' → logprob: -8.235949516296387

Token 1591: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05488657206296921
    2. ' d' → logprob: -2.92988657951355
    3. '                           ' → logprob: -12.804886817932129
    4. '                               ' → logprob: -15.179886817932129
    5. '(d' → logprob: -15.679886817932129
    6. '	d' → logprob: -15.679886817932129
    7. '   ' → logprob: -15.929886817932129
    8. '                                   ' → logprob: -15.929886817932129
    9. ' ' → logprob: -16.429885864257812
    10. 'res' → logprob: -16.929885864257812

Token 1592: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4538044333457947
    2. '<=' → logprob: -1.0788044929504395
    3. '!=' → logprob: -4.2038044929504395
    4. ' <=' → logprob: -6.2038044929504395
    5. ' <' → logprob: -6.3288044929504395
    6. '<u' → logprob: -6.7038044929504395
    7. '<n' → logprob: -7.5788044929504395
    8. '>' → logprob: -7.7038044929504395
    9. '>=' → logprob: -7.8288044929504395
    10. '<size' → logprob: -7.8288044929504395

Token 1593: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.5332478142227046e-05
    2. ' res' → logprob: -11.125015258789062
    3. '10' → logprob: -15.750015258789062
    4. '(res' → logprob: -16.250015258789062
    5. '=res' → logprob: -16.375015258789062
    6. '$res' → logprob: -16.625015258789062
    7. '
' → logprob: -16.750015258789062
    8. '```' → logprob: -16.875015258789062
    9. '	res' → logprob: -17.750015258789062
    10. 'ress' → logprob: -18.000015258789062

Token 1594: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.2134995311498642
    2. ':
' → logprob: -2.4634995460510254
    3. ':' → logprob: -2.5884995460510254
    4. '                           ' → logprob: -3.9634995460510254
    5. '                                   ' → logprob: -5.838499546051025
    6. '                                
' → logprob: -6.088499546051025
    7. '                       ' → logprob: -6.963499546051025
    8. '                                       ' → logprob: -7.088499546051025
    9. '):
' → logprob: -7.213499546051025
    10. '```' → logprob: -7.338499546051025

Token 1595: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.08433536440134048
    2. 'res' → logprob: -4.2093353271484375
    3. '                                                               ' → logprob: -4.3343353271484375
    4. '                                                                ' → logprob: -4.4593353271484375
    5. '                                   ' → logprob: -4.7093353271484375
    6. ' res' → logprob: -4.9593353271484375
    7. '                                       ' → logprob: -5.0843353271484375
    8. '                                                                                               ' → logprob: -5.0843353271484375
    9. '                                
' → logprob: -5.7093353271484375
    10. '                                           ' → logprob: -5.9593353271484375

Token 1596: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -3.5597102396423e-05
    2. ' res' → logprob: -10.750035285949707
    3. '                               ' → logprob: -11.250035285949707
    4. '                                   ' → logprob: -13.875035285949707
    5. '                                       ' → logprob: -16.125036239624023
    6. '
' → logprob: -17.875036239624023
    7. '$res' → logprob: -18.375036239624023
    8. '```' → logprob: -18.750036239624023
    9. '                           ' → logprob: -18.875036239624023
    10. '_res' → logprob: -19.000036239624023

Token 1597: '=d' (ID: 56413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005716211744584143
    2. '=res' → logprob: -8.000571250915527
    3. '=
' → logprob: -8.750571250915527
    4. ' =' → logprob: -10.125571250915527
    5. '=d' → logprob: -10.375571250915527
    6. '=

' → logprob: -12.625571250915527
    7. '                               ' → logprob: -14.250571250915527
    8. '=int' → logprob: -14.750571250915527
    9. '=s' → logprob: -15.000571250915527
    10. '=r' → logprob: -15.750571250915527

Token 1598: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1599: '           ' (ID: 352)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.4353792369365692
    2. '<|end|>' → logprob: -2.1853792667388916
    3. '```' → logprob: -2.5603792667388916
    4. '                           ' → logprob: -2.6853792667388916
    5. '\' → logprob: -3.9353792667388916
    6. '\n' → logprob: -4.3103790283203125
    7. '                                
' → logprob: -4.4353790283203125
    8. '                                   ' → logprob: -4.8103790283203125
    9. '
' → logprob: -5.4353790283203125
    10. '                            
' → logprob: -5.5603790283203125

Token 1600: ' return' (ID: 622)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.3569289445877075
    2. 'return' (adapté à ' return') → logprob: -1.4819289445877075
    3. '                                   ' → logprob: -3.606928825378418
    4. '
' → logprob: -4.356928825378418
    5. '                           ' → logprob: -4.606928825378418
    6. '           ' → logprob: -4.731928825378418
    7. ' return' → logprob: -5.606928825378418
    8. '                                       ' → logprob: -6.356928825378418
    9. '       ' → logprob: -6.856928825378418
    10. '   ' → logprob: -7.106928825378418

Token 1601: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.04927846044301987
    2. ' res' → logprob: -3.299278497695923
    3. 'd' → logprob: -4.549278259277344
    4. ' d' → logprob: -7.424278259277344
    5. '
' → logprob: -13.924278259277344
    6. '	res' → logprob: -14.174278259277344
    7. '(res' → logprob: -14.924278259277344
    8. '$res' → logprob: -15.674278259277344
    9. 'dist' → logprob: -16.049278259277344
    10. ' ' → logprob: -16.174278259277344

Token 1602: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4840831458568573
    2. '
' → logprob: -1.9840831756591797
    3. '```' → logprob: -3.2340831756591797
    4. ',
' → logprob: -3.3590831756591797
    5. '        
' → logprob: -3.3590831756591797
    6. '    
' → logprob: -3.4840831756591797
    7. ',' → logprob: -3.7340831756591797
    8. '   ' → logprob: -4.10908317565918
    9. '\n' → logprob: -4.10908317565918
    10. ')
' → logprob: -4.60908317565918

Token 1603: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.025095444172620773
    2. '       ' → logprob: -4.150095462799072
    3. '
' → logprob: -5.025095462799072
    4. '   ' → logprob: -7.150095462799072
    5. ' dist' → logprob: -7.775095462799072
    6. 'def' → logprob: -7.900095462799072
    7. '_dist' → logprob: -9.025094985961914
    8. '```' → logprob: -9.150094985961914
    9. '    
' → logprob: -9.525094985961914
    10. ',
' → logprob: -9.525094985961914

Token 1604: ' def' (ID: 1056)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0023296247236430645
    2. '       ' → logprob: -6.2523298263549805
    3. '
' → logprob: -8.25232982635498
    4. '   ' → logprob: -10.00232982635498
    5. ' dist' → logprob: -10.62732982635498
    6. '```' → logprob: -10.62732982635498
    7. '        
' → logprob: -11.25232982635498
    8. 'def' (adapté à ' def') → logprob: -12.25232982635498
    9. '``' → logprob: -12.50232982635498
    10. '_dist' → logprob: -12.50232982635498

Token 1605: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.2868664562702179
    2. 'dist' → logprob: -1.4118664264678955
    3. '_dist' → logprob: -6.036866664886475
    4. ' product' → logprob: -7.286866664886475
    5. ' _' → logprob: -8.161866188049316
    6. ' calculate' → logprob: -8.286866188049316
    7. '_' → logprob: -8.286866188049316
    8. ' compute' → logprob: -8.536866188049316
    9. ' calc' → logprob: -8.661866188049316
    10. ' dfs' → logprob: -8.786866188049316

Token 1606: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.009291795082390308
    2. '_' → logprob: -4.884291648864746
    3. '_start' → logprob: -6.884291648864746
    4. '_from' → logprob: -8.009291648864746
    5. ' _' → logprob: -8.634291648864746
    6. '_between' → logprob: -10.134291648864746
    7. '_max' → logprob: -10.759291648864746
    8. '```' → logprob: -11.259291648864746
    9. '_
' → logprob: -11.634291648864746
    10. '_MIN' → logprob: -11.759291648864746

Token 1607: '_start' (ID: 10949)
  Prédit: '_between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_between' → logprob: -2.629921436891891e-05
    2. ' between' → logprob: -11.62502670288086
    3. '_from' → logprob: -11.75002670288086
    4. 'Between' → logprob: -12.75002670288086
    5. '_' → logprob: -13.12502670288086
    6. 'between' → logprob: -13.25002670288086
    7. '```' → logprob: -13.50002670288086
    8. '_for' → logprob: -15.00002670288086
    9. '_min' → logprob: -15.62502670288086
    10. '[' → logprob: -15.75002670288086

Token 1608: '_product' (ID: 21247)
  Prédit: '_between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_between' → logprob: -0.061709724366664886
    2. '_' → logprob: -3.3117096424102783
    3. '_from' → logprob: -4.186709880828857
    4. '[' → logprob: -5.436709880828857
    5. '[_' → logprob: -7.311709880828857
    6. '_start' → logprob: -7.436709880828857
    7. '```' → logprob: -7.686709880828857
    8. '_for' → logprob: -7.686709880828857
    9. '_to' → logprob: -8.1867094039917
    10. '(' → logprob: -8.4367094039917

Token 1609: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6211729645729065
    2. '(pi' → logprob: -0.8711729645729065
    3. '(' → logprob: -3.2461729049682617
    4. '(p' → logprob: -6.371172904968262
    5. '(start' → logprob: -6.871172904968262
    6. '(product' → logprob: -7.246172904968262
    7. '[' → logprob: -7.621172904968262
    8. '(_' → logprob: -8.121172904968262
    9. '[i' → logprob: -8.496172904968262
    10. '(
' → logprob: -8.496172904968262

Token 1610: '):
' (ID: 1883)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.005441620480269194
    2. '):' → logprob: -6.005441665649414
    3. '(' → logprob: -6.505441665649414
    4. '):
' → logprob: -7.380441665649414
    5. '(pi' → logprob: -7.630441665649414
    6. '(p' → logprob: -9.005441665649414
    7. '(start' → logprob: -9.505441665649414
    8. ' (' → logprob: -9.630441665649414
    9. '_start' → logprob: -11.130441665649414
    10. '(
' → logprob: -11.130441665649414

Token 1611: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36728379130363464
    2. '   ' → logprob: -2.367283821105957
    3. ' 
' → logprob: -3.117283821105957
    4. '(start' → logprob: -3.242283821105957
    5. ' (' → logprob: -3.617283821105957
    6. ' start' → logprob: -3.992283821105957
    7. ' return' → logprob: -4.242283821105957
    8. '    
' → logprob: -4.367283821105957
    9. '       ' → logprob: -4.367283821105957
    10. '(
' → logprob: -4.742283821105957

Token 1612: ' g' (ID: 329)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5846246480941772
    2. 'g' (adapté à ' g') → logprob: -1.7096246480941772
    3. ' res' → logprob: -2.084624767303467
    4. 'res' → logprob: -2.334624767303467
    5. '           ' → logprob: -3.959624767303467
    6. ' g' → logprob: -4.459624767303467
    7. '       ' → logprob: -5.334624767303467
    8. 'r' → logprob: -5.709624767303467
    9. ' ' → logprob: -8.084624290466309
    10. 'result' → logprob: -8.584624290466309

Token 1613: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.297797679901123
    2. '=' → logprob: -1.422797679901123
    3. '_i' → logprob: -1.422797679901123
    4. '_product' → logprob: -2.547797679901123
    5. '=_' → logprob: -2.797797679901123
    6. ' =' → logprob: -3.422797679901123
    7. '_idx' → logprob: -4.422797679901123
    8. '[i' → logprob: -4.547797679901123
    9. '_code' → logprob: -4.672797679901123
    10. '_=' → logprob: -4.797797679901123

Token 1614: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7208985090255737
    2. '=' → logprob: -0.7208985090255737
    3. ',i' → logprob: -4.720898628234863
    4. '           ' → logprob: -5.720898628234863
    5. ',p' → logprob: -5.720898628234863
    6. ' =' → logprob: -6.095898628234863
    7. ',g' → logprob: -6.220898628234863
    8. ',n' → logprob: -6.720898628234863
    9. ',d' → logprob: -7.095898628234863
    10. '=i' → logprob: -7.220898628234863

Token 1615: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.001607939600944519
    2. ',i' → logprob: -6.501607894897461
    3. ',' → logprob: -10.376607894897461
    4. ',_' → logprob: -10.376607894897461
    5. 'i' → logprob: -10.876607894897461
    6. '_,' → logprob: -11.751607894897461
    7. '=i' → logprob: -12.126607894897461
    8. '[i' → logprob: -13.126607894897461
    9. '(i' → logprob: -13.126607894897461
    10. '=' → logprob: -13.251607894897461

Token 1616: ',s' (ID: 20379)
  Prédit: ',s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -1.1373422145843506
    2. ',i' → logprob: -1.1373422145843506
    3. ',' → logprob: -1.3873422145843506
    4. ',start' → logprob: -2.5123422145843506
    5. ',p' → logprob: -4.13734245300293
    6. ',n' → logprob: -5.63734245300293
    7. '=' → logprob: -5.63734245300293
    8. ',g' → logprob: -6.38734245300293
    9. ',int' → logprob: -7.13734245300293
    10. ',d' → logprob: -8.26234245300293

Token 1617: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.5902770161628723
    2. ',i' → logprob: -0.8402770161628723
    3. ',' → logprob: -5.340277194976807
    4. 'i' → logprob: -5.590277194976807
    5. '[i' → logprob: -5.965277194976807
    6. '(i' → logprob: -6.340277194976807
    7. ',_' → logprob: -6.840277194976807
    8. '=i' → logprob: -9.840276718139648
    9. '   ' → logprob: -10.465276718139648
    10. ',
' → logprob: -10.465276718139648

Token 1618: ',e' (ID: 43127)
  Prédit: ',s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.00810977816581726
    2. ',i' → logprob: -5.2581095695495605
    3. ',e' → logprob: -6.2581095695495605
    4. ',' → logprob: -7.0081095695495605
    5. ',start' → logprob: -11.008110046386719
    6. ',int' → logprob: -11.633110046386719
    7. ',p' → logprob: -11.758110046386719
    8. ',_' → logprob: -12.258110046386719
    9. 's' → logprob: -12.633110046386719
    10. ' ,' → logprob: -13.133110046386719

Token 1619: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -6.396757089532912e-05
    2. '[i' → logprob: -10.7500638961792
    3. 'i' → logprob: -11.1250638961792
    4. ',i' → logprob: -12.1250638961792
    5. '(i' → logprob: -12.2500638961792
    6. '[' → logprob: -12.2500638961792
    7. '```' → logprob: -12.7500638961792
    8. '_,' → logprob: -13.3750638961792
    9. '_' → logprob: -13.7500638961792
    10. ',_' → logprob: -14.2500638961792

Token 1620: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005351595464162529
    2. '=start' → logprob: -7.625535011291504
    3. '=i' → logprob: -11.125535011291504
    4. '=s' → logprob: -11.375535011291504
    5. ' =' → logprob: -11.625535011291504
    6. '=g' → logprob: -13.000535011291504
    7. '=item' → logprob: -13.125535011291504
    8. '=p' → logprob: -13.750535011291504
    9. '=x' → logprob: -14.375535011291504
    10. '   ' → logprob: -14.375535011291504

Token 1621: 'product' (ID: 5260)
  Prédit: 'product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -7.822646693966817e-06
    2. ' product' → logprob: -11.875007629394531
    3. '           ' → logprob: -14.250007629394531
    4. '	product' → logprob: -15.875007629394531
    5. '$product' → logprob: -16.87500762939453
    6. '(product' → logprob: -17.75000762939453
    7. '   ' → logprob: -17.87500762939453
    8. '
' → logprob: -18.50000762939453
    9. '.product' → logprob: -19.37500762939453
    10. ' ' → logprob: -19.50000762939453

Token 1622: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.0003902775060851127
    2. '_list' → logprob: -8.25039005279541
    3. '_i' → logprob: -9.37539005279541
    4. '```' → logprob: -10.75039005279541
    5. '[i' → logprob: -12.50039005279541
    6. '`' → logprob: -12.75039005279541
    7. '[_' → logprob: -13.12539005279541
    8. '[' → logprob: -13.25039005279541
    9. '_inf' → logprob: -13.37539005279541
    10. '_min' → logprob: -13.37539005279541

Token 1623: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.002528575947508216
    2. 'list' → logprob: -6.002528667449951
    3. '[i' → logprob: -10.502528190612793
    4. '```' → logprob: -12.002528190612793
    5. 'List' → logprob: -12.127528190612793
    6. '[' → logprob: -12.127528190612793
    7. '[
' → logprob: -12.752528190612793
    8. '[_' → logprob: -13.877528190612793
    9. '_lists' → logprob: -14.627528190612793
    10. 's' → logprob: -14.627528190612793

Token 1624: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.019265303388237953
    2. '[' → logprob: -4.644265174865723
    3. '(i' → logprob: -4.894265174865723
    4. '[
' → logprob: -7.144265174865723
    5. '```' → logprob: -8.394265174865723
    6. 'i' → logprob: -8.519265174865723
    7. ')' → logprob: -8.769265174865723
    8. '<|end|>' → logprob: -9.019265174865723
    9. '_i' → logprob: -9.144265174865723
    10. ',' → logprob: -9.894265174865723

Token 1625: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5187401175498962
    2. '[' → logprob: -1.893740177154541
    3. ']' → logprob: -2.268740177154541
    4. ')[' → logprob: -2.643740177154541
    5. ')' → logprob: -2.768740177154541
    6. ']
' → logprob: -5.268740177154541
    7. '])' → logprob: -5.643740177154541
    8. ')
' → logprob: -6.768740177154541
    9. '[
' → logprob: -7.143740177154541
    10. ')][' → logprob: -7.143740177154541

Token 1626: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17099374532699585
    2. '           ' → logprob: -2.5459938049316406
    3. ' res' → logprob: -3.2959938049316406
    4. '       ' → logprob: -3.6709938049316406
    5. '
' → logprob: -5.045993804931641
    6. 'res' → logprob: -5.295993804931641
    7. 'r' → logprob: -6.045993804931641
    8. '   ' → logprob: -7.170993804931641
    9. '    
' → logprob: -7.920993804931641
    10. ' ' → logprob: -8.79599380493164

Token 1627: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.010746774263679981
    2. '           ' → logprob: -5.260746955871582
    3. ' res' → logprob: -5.760746955871582
    4. '   ' → logprob: -6.635746955871582
    5. '       ' → logprob: -7.385746955871582
    6. 'r' → logprob: -8.635746955871582
    7. 'ans' → logprob: -9.135746955871582
    8. 'result' → logprob: -9.885746955871582
    9. '```' → logprob: -10.885746955871582
    10. 'ret' → logprob: -11.135746955871582

Token 1628: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.939851037808694e-05
    2. ' =' → logprob: -10.500029563903809
    3. '=float' → logprob: -14.375029563903809
    4. '=-' → logprob: -14.625029563903809
    5. '=int' → logprob: -16.000028610229492
    6. '=max' → logprob: -16.375028610229492
    7. '10' → logprob: -16.375028610229492
    8. '   ' → logprob: -16.375028610229492
    9. '```' → logprob: -16.500028610229492
    10. '=None' → logprob: -16.875028610229492

Token 1629: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.531315314830863e-06
    2. '1' → logprob: -14.125003814697266
    3. '100' → logprob: -14.125003814697266
    4. '
' → logprob: -14.125003814697266
    5. ' ' → logprob: -14.750003814697266
    6. '`' → logprob: -16.500003814697266
    7. '```' → logprob: -16.500003814697266
    8. '   ' → logprob: -16.625003814697266
    9. '

' → logprob: -16.750003814697266
    10. 'int' → logprob: -16.875003814697266

Token 1630: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.282920129597187e-05
    2. '9' → logprob: -11.875012397766113
    3. '```' → logprob: -12.625012397766113
    4. '*' → logprob: -13.375012397766113
    5. '^' → logprob: -14.875012397766113
    6. ' **' → logprob: -15.000012397766113
    7. '
' → logprob: -16.00001335144043
    8. '***' → logprob: -17.00001335144043
    9. '**
' → logprob: -17.00001335144043
    10. '\xe2\x81' → logprob: -17.75001335144043

Token 1631: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '8' → logprob: -17.25
    3. '99' → logprob: -17.625
    4. '```' → logprob: -18.625
    5. '999' → logprob: -19.125
    6. '39' → logprob: -19.25
    7. '``' → logprob: -19.375
    8. '
' → logprob: -19.4375
    9. '09' → logprob: -19.75
    10. '18' → logprob: -19.875

Token 1632: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01386305596679449
    2. ' for' → logprob: -4.5138630867004395
    3. 'for' → logprob: -6.0138630867004395
    4. '   ' → logprob: -8.888862609863281
    5. '       ' → logprob: -9.388862609863281
    6. '
' → logprob: -9.888862609863281
    7. ',' → logprob: -10.388862609863281
    8. '		' → logprob: -11.513862609863281
    9. '#' → logprob: -11.763862609863281
    10. '	for' → logprob: -12.138862609863281

Token 1633: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21277613937854767
    2. ' for' → logprob: -2.0877761840820312
    3. 'for' → logprob: -2.7127761840820312
    4. '       ' → logprob: -7.212776184082031
    5. '   ' → logprob: -7.587776184082031
    6. '	for' → logprob: -10.337776184082031
    7. '               ' → logprob: -10.712776184082031
    8. '
' → logprob: -11.087776184082031
    9. '#' → logprob: -12.087776184082031
    10. ' ' → logprob: -12.587776184082031

Token 1634: ' st' (ID: 420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00027099132421426475
    2. '           ' → logprob: -8.37527084350586
    3. ' for' → logprob: -10.12527084350586
    4. '       ' → logprob: -16.12527084350586
    5. '   ' → logprob: -16.75027084350586
    6. 'For' → logprob: -17.12527084350586
    7. '#' → logprob: -17.12527084350586
    8. 'g' → logprob: -17.87527084350586
    9. '	for' → logprob: -19.37527084350586
    10. '```' → logprob: -19.75027084350586

Token 1635: 'idx' (ID: 13196)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.11016178876161575
    2. '=' → logprob: -2.360161781311035
    3. '=start' → logprob: -5.735161781311035
    4. ' =' → logprob: -5.985161781311035
    5. 'x' → logprob: -6.985161781311035
    6. '=(' → logprob: -7.235161781311035
    7. '_idx' → logprob: -7.360161781311035
    8. 'a' → logprob: -7.610161781311035
    9. 'idx' → logprob: -7.985161781311035
    10. '_x' → logprob: -8.735161781311035

Token 1636: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04624813795089722
    2. '=start' → logprob: -3.296248197555542
    3. ' =' → logprob: -4.921247959136963
    4. '=set' → logprob: -8.671248435974121
    5. '=int' → logprob: -9.046248435974121
    6. '=input' → logprob: -9.296248435974121
    7. '=s' → logprob: -9.921248435974121
    8. '=list' → logprob: -9.921248435974121
    9. '=index' → logprob: -10.046248435974121
    10. '=end' → logprob: -10.046248435974121

Token 1637: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.375
    3. ' point' → logprob: -16.125
    4. 'start' → logprob: -18.5
    5. '(point' → logprob: -18.5
    6. '	point' → logprob: -19.0
    7. '
' → logprob: -19.125
    8. 'points' → logprob: -19.375
    9. '[' → logprob: -19.75
    10. '   ' → logprob: -20.0

Token 1638: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0007906900718808174
    2. 'idx' → logprob: -7.250790596008301
    3. '0' → logprob: -10.3757905960083
    4. '[' → logprob: -11.1257905960083
    5. 'start' → logprob: -11.6257905960083
    6. '_idxs' → logprob: -12.2507905960083
    7. '_start' → logprob: -12.6257905960083
    8. '[_' → logprob: -12.8757905960083
    9. '```' → logprob: -12.8757905960083
    10. '[start' → logprob: -13.0007905960083

Token 1639: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.0016380504239350557
    2. 'start' → logprob: -6.501637935638428
    3. '[(' → logprob: -9.126638412475586
    4. '[' → logprob: -10.626638412475586
    5. '(start' → logprob: -12.876638412475586
    6. '=start' → logprob: -17.001638412475586
    7. '```' → logprob: -17.126638412475586
    8. '[
' → logprob: -17.501638412475586
    9. '[get' → logprob: -17.626638412475586
    10. ' start' → logprob: -17.751638412475586

Token 1640: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16469445824623108
    2. ']
' → logprob: -1.9146944284439087
    3. ')]' → logprob: -5.539694309234619
    4. ')' → logprob: -8.789694786071777
    5. ']
' → logprob: -8.914694786071777
    6. '])' → logprob: -9.289694786071777
    7. ')]
' → logprob: -9.414694786071777
    8. ')
' → logprob: -11.039694786071777
    9. '])
' → logprob: -11.914694786071777
    10. '[' → logprob: -12.414694786071777

Token 1641: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004263852315489203
    2. ' for' → logprob: -9.000426292419434
    3. '<|end|>' → logprob: -9.500426292419434
    4. '       ' → logprob: -9.875426292419434
    5. '               ' → logprob: -10.500426292419434
    6. 'for' → logprob: -10.500426292419434
    7. '   ' → logprob: -10.875426292419434
    8. ',' → logprob: -11.250426292419434
    9. '	       ' → logprob: -11.375426292419434
    10. '<|end|>' → logprob: -11.625426292419434

Token 1642: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.9160102712921798e-05
    2. '           ' → logprob: -10.875029563903809
    3. ' for' → logprob: -11.500029563903809
    4. 'g' → logprob: -17.375028610229492
    5. '       ' → logprob: -18.500028610229492
    6. '#' → logprob: -19.125028610229492
    7. '   ' → logprob: -19.500028610229492
    8. '```' → logprob: -19.500028610229492
    9. 'For' → logprob: -20.000028610229492
    10. '            
' → logprob: -20.375028610229492

Token 1643: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.022643491625785828
    2. 'p' → logprob: -5.147643566131592
    3. 'x' → logprob: -5.147643566131592
    4. '(' → logprob: -5.272643566131592
    5. 'g' → logprob: -5.772643566131592
    6. 's' → logprob: -7.397643566131592
    7. ' (' → logprob: -7.522643566131592
    8. '(s' → logprob: -7.772643566131592
    9. '(ax' → logprob: -8.397643089294434
    10. '(g' → logprob: -8.772643089294434

Token 1644: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007469381671398878
    2. 'ax' → logprob: -5.132469177246094
    3. '(x' → logprob: -6.632469177246094
    4. 'p' → logprob: -9.257469177246094
    5. '(ax' → logprob: -10.257469177246094
    6. 'px' → logprob: -10.257469177246094
    7. 'sx' → logprob: -10.257469177246094
    8. 's' → logprob: -12.507469177246094
    9. 'xs' → logprob: -12.882469177246094
    10. 'pos' → logprob: -13.007469177246094

Token 1645: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0022765810135751963
    2. ',' → logprob: -6.252276420593262
    3. '2' → logprob: -8.377276420593262
    4. 'y' → logprob: -9.502276420593262
    5. '1' → logprob: -11.002276420593262
    6. ' ,' → logprob: -11.752276420593262
    7. '_,' → logprob: -12.252276420593262
    8. 'p' → logprob: -12.627276420593262
    9. 's' → logprob: -13.502276420593262
    10. '0' → logprob: -13.627276420593262

Token 1646: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001114106344175525
    2. '),' → logprob: -10.00011157989502
    3. ' )' → logprob: -10.75011157989502
    4. 'in' → logprob: -11.00011157989502
    5. '),(' → logprob: -12.12511157989502
    6. ')s' → logprob: -12.37511157989502
    7. ')p' → logprob: -12.50011157989502
    8. ',' → logprob: -13.00011157989502
    9. '
' → logprob: -13.25011157989502
    10. ',)' → logprob: -13.37511157989502

Token 1647: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12327543646097183
    2. ')' → logprob: -2.6232755184173584
    3. ' in' → logprob: -3.4982755184173584
    4. ',' → logprob: -5.248275279998779
    5. ',p' → logprob: -6.123275279998779
    6. ',s' → logprob: -6.498275279998779
    7. '
' → logprob: -6.623275279998779
    8. ',y' → logprob: -7.373275279998779
    9. ',x' → logprob: -7.748275279998779
    10. 's' → logprob: -8.248275756835938

Token 1648: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.00027099132421426475
    2. ' prod' → logprob: -8.25027084350586
    3. '   ' → logprob: -12.75027084350586
    4. '           ' → logprob: -12.87527084350586
    5. '
' → logprob: -14.25027084350586
    6. '(prod' → logprob: -14.25027084350586
    7. 'proj' → logprob: -14.62527084350586
    8. '       ' → logprob: -14.75027084350586
    9. 'proc' → logprob: -15.37527084350586
    10. '.prod' → logprob: -15.50027084350586

Token 1649: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.9743012671824545e-05
    2. 's' → logprob: -10.875020027160645
    3. '_' → logprob: -15.125020027160645
    4. '\' → logprob: -15.500020027160645
    5. '
' → logprob: -15.875020027160645
    6. '```' → logprob: -17.500019073486328
    7. ' _' → logprob: -17.875019073486328
    8. '#' → logprob: -18.625019073486328
    9. '[_' → logprob: -18.625019073486328
    10. '_
' → logprob: -18.750019073486328

Token 1650: 'helves' (ID: 182327)
  Prédit: 'helves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helves' → logprob: -1.2113979209971149e-05
    2. 'h' → logprob: -11.875012397766113
    3. 'hel' → logprob: -13.375012397766113
    4. ' shelves' → logprob: -13.875012397766113
    5. 's' → logprob: -14.125012397766113
    6. 'he' → logprob: -15.500012397766113
    7. 'heels' → logprob: -15.750012397766113
    8. 'e' → logprob: -15.875012397766113
    9. 'elves' → logprob: -15.875012397766113
    10. '[' → logprob: -16.375011444091797

Token 1651: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.0011757015017792583
    2. 'g' → logprob: -6.751175880432129
    3. '[' → logprob: -13.876175880432129
    4. '#g' → logprob: -14.126175880432129
    5. '```' → logprob: -14.501175880432129
    6. '_g' → logprob: -14.501175880432129
    7. '[
' → logprob: -14.751175880432129
    8. '=g' → logprob: -14.876175880432129
    9. '(g' → logprob: -15.001175880432129

Token 1652: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.03159733861684799
    2. 'g' → logprob: -3.656597375869751
    3. 'i' → logprob: -5.406597137451172
    4. '[g' → logprob: -7.781597137451172
    5. '_g' → logprob: -9.656597137451172
    6. '```' → logprob: -9.906597137451172
    7. '_j' → logprob: -10.281597137451172
    8. '[i' → logprob: -10.469097137451172
    9. '`' → logprob: -10.656597137451172
    10. ' g' → logprob: -10.844097137451172

Token 1653: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.02004566229879856
    2. ':
' → logprob: -4.395045757293701
    3. ']:' → logprob: -5.520045757293701
    4. '):
' → logprob: -6.395045757293701
    5. '           ' → logprob: -7.645045757293701
    6. ':' → logprob: -8.520045280456543
    7. '(x' → logprob: -8.645045280456543
    8. '               ' → logprob: -8.645045280456543
    9. '][' → logprob: -8.770045280456543
    10. '[(' → logprob: -9.020045280456543

Token 1654: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02895534038543701
    2. 'idx' → logprob: -4.528955459594727
    3. '   ' → logprob: -5.153955459594727
    4. '           ' → logprob: -5.403955459594727
    5. ' for' → logprob: -5.903955459594727
    6. 'for' → logprob: -6.778955459594727
    7. '                   ' → logprob: -7.153955459594727
    8. '```' → logprob: -7.528955459594727
    9. ' idx' → logprob: -8.028955459594727
    10. 'ax' → logprob: -8.403955459594727

Token 1655: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.08466445654630661
    2. 'for' → logprob: -2.9596643447875977
    3. 'adj' → logprob: -3.9596643447875977
    4. 'indices' → logprob: -5.584664344787598
    5. 'axs' → logprob: -5.959664344787598
    6. 'ax' → logprob: -6.834664344787598
    7. 'ais' → logprob: -6.834664344787598
    8. '           ' → logprob: -7.959664344787598
    9. 'inds' → logprob: -8.459664344787598
    10. 'indexes' → logprob: -8.584664344787598

Token 1656: 's' (ID: 82)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46299901604652405
    2. 's' → logprob: -1.2129989862442017
    3. '=p' → logprob: -3.837999105453491
    4. 'list' → logprob: -4.212998867034912
    5. '=[' → logprob: -4.587998867034912
    6. 'p' → logprob: -5.212998867034912
    7. '_list' → logprob: -5.462998867034912
    8. '=s' → logprob: -5.587998867034912
    9. ' =' → logprob: -5.837998867034912
    10. '=list' → logprob: -6.212998867034912

Token 1657: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.006039242725819349
    2. '=' → logprob: -5.256039142608643
    3. '=[]' → logprob: -8.0060396194458
    4. '=[
' → logprob: -8.0060396194458
    5. '=list' → logprob: -9.6310396194458
    6. ' =' → logprob: -10.8810396194458
    7. '.append' → logprob: -11.0060396194458
    8. '=[]
' → logprob: -11.7560396194458
    9. ' =[' → logprob: -11.7560396194458
    10. '=[[' → logprob: -12.1310396194458

Token 1658: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -5.512236498361744e-07
    2. ' point' → logprob: -15.375000953674316
    3. '(point' → logprob: -16.0
    4. '[' → logprob: -16.375
    5. 'p' → logprob: -16.5
    6. '	point' → logprob: -18.625
    7. '   ' → logprob: -19.5
    8. '
' → logprob: -19.5
    9. '```' → logprob: -19.75
    10. '    
' → logprob: -20.0

Token 1659: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0031027307268232107
    2. 'idx' → logprob: -6.128102779388428
    3. 'point' → logprob: -7.003102779388428
    4. '_point' → logprob: -12.62810230255127
    5. 'Idx' → logprob: -13.87810230255127
    6. 's' → logprob: -14.12810230255127
    7. '(point' → logprob: -14.37810230255127
    8. 'p' → logprob: -14.75310230255127
    9. 'pt' → logprob: -14.87810230255127
    10. 'x' → logprob: -15.12810230255127

Token 1660: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.010924730449914932
    2. 'p' → logprob: -5.010924816131592
    3. '[(' → logprob: -5.510924816131592
    4. '(p' → logprob: -9.010924339294434
    5. '[' → logprob: -11.385924339294434
    6. '[
' → logprob: -11.635924339294434
    7. 'for' → logprob: -11.635924339294434
    8. '_p' → logprob: -13.885924339294434
    9. '[s' → logprob: -13.885924339294434
    10. '
' → logprob: -14.010924339294434

Token 1661: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10023287683725357
    2. 'for' → logprob: -2.3502328395843506
    3. '	for' → logprob: -11.47523307800293
    4. ']' → logprob: -11.85023307800293
    5. '[' → logprob: -12.72523307800293
    6. '                           ' → logprob: -14.22523307800293
    7. ')' → logprob: -14.35023307800293
    8. '
' → logprob: -14.35023307800293
    9. '```' → logprob: -14.35023307800293
    10. '                   ' → logprob: -14.97523307800293

Token 1662: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043452657759189606
    2. ' for' → logprob: -3.168452739715576
    3. '(p' → logprob: -8.793452262878418
    4. '[p' → logprob: -8.793452262878418
    5. '[(' → logprob: -9.043452262878418
    6. 'p' → logprob: -11.043452262878418
    7. '[' → logprob: -13.043452262878418
    8. '
' → logprob: -13.168452262878418
    9. '	for' → logprob: -13.668452262878418
    10. '               ' → logprob: -13.793452262878418

Token 1663: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0011709370883181691
    2. ' p' → logprob: -6.751171112060547
    3. 's' → logprob: -14.751171112060547
    4. '	p' → logprob: -16.126171112060547
    5. '(p' → logprob: -16.501171112060547
    6. '_p' → logprob: -16.626171112060547
    7. '[p' → logprob: -17.001171112060547
    8. 'in' → logprob: -17.126171112060547
    9. '[' → logprob: -18.376171112060547
    10. '#' → logprob: -18.563671112060547

Token 1664: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24496424198150635
    2. 'p' → logprob: -2.119964122772217
    3. 'in' → logprob: -2.369964122772217
    4. ' p' → logprob: -5.744964122772217
    5. 's' → logprob: -8.369964599609375
    6. '(p' → logprob: -8.494964599609375
    7. ',p' → logprob: -9.744964599609375
    8. ',' → logprob: -11.619964599609375
    9. ' (' → logprob: -11.994964599609375
    10. '(' → logprob: -12.119964599609375

Token 1665: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005266484338790178
    2. ' shelf' → logprob: -5.2552666664123535
    3. '[s' → logprob: -11.505266189575195
    4. '   ' → logprob: -12.005266189575195
    5. '`s' → logprob: -12.255266189575195
    6. '(s' → logprob: -12.255266189575195
    7. '[' → logprob: -13.505266189575195
    8. ' ' → logprob: -13.755266189575195
    9. '[(' → logprob: -14.630266189575195
    10. '  ' → logprob: -14.630266189575195

Token 1666: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0011075903894379735
    2. 'ais' → logprob: -8.001107215881348
    3. 's' → logprob: -8.626107215881348
    4. '[(' → logprob: -8.751107215881348
    5. '(' → logprob: -8.876107215881348
    6. '_s' → logprob: -9.251107215881348
    7. '(x' → logprob: -9.876107215881348
    8. '[' → logprob: -11.376107215881348
    9. '```' → logprob: -11.501107215881348
    10. '(s' → logprob: -12.001107215881348

Token 1667: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.12955161929130554
    2. '_' → logprob: -2.129551649093628
    3. 's' → logprob: -7.379551410675049
    4. 'ail' → logprob: -7.879551410675049
    5. 'asile' → logprob: -8.379551887512207
    6. 'ase' → logprob: -8.504551887512207
    7. 'ile' → logprob: -8.879551887512207
    8. 'ale' → logprob: -9.004551887512207
    9. 'as' → logprob: -9.504551887512207
    10. 'ai' → logprob: -9.754551887512207

Token 1668: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.036010339856147766
    2. 'el' → logprob: -4.161010265350342
    3. 'e' → logprob: -4.911010265350342
    4. 'ile' → logprob: -5.036010265350342
    5. 'ole' → logprob: -6.661010265350342
    6. 'ele' → logprob: -7.036010265350342
    7. 'se' → logprob: -7.161010265350342
    8. '_pos' → logprob: -7.286010265350342
    9. 'ale' → logprob: -7.411010265350342
    10. '_' → logprob: -8.0360107421875

Token 1669: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.013064699247479439
    2. 'pos' → logprob: -4.638064861297607
    3. '_' → logprob: -6.138064861297607
    4. '_adj' → logprob: -7.263064861297607
    5. '_s' → logprob: -8.01306438446045
    6. 'adj' → logprob: -9.88806438446045
    7. 's' → logprob: -9.88806438446045
    8. '_positions' → logprob: -12.88806438446045
    9. '_ad' → logprob: -13.38806438446045
    10. '[(' → logprob: -13.76306438446045

Token 1670: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.1472419600977446e-06
    2. '((' → logprob: -14.750000953674316
    3. '#' → logprob: -15.250000953674316
    4. '```' → logprob: -16.625001907348633
    5. '(x' → logprob: -17.000001907348633
    6. '[[' → logprob: -17.125001907348633
    7. '[
' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.125001907348633
    9. ' [(' → logprob: -17.250001907348633
    10. '``' → logprob: -17.250001907348633

Token 1671: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16026932001113892
    2. 'x' → logprob: -1.9102692604064941
    3. '(' → logprob: -11.035269737243652
    4. ' (' → logprob: -11.785269737243652
    5. '{x' → logprob: -11.910269737243652
    6. '[x' → logprob: -12.035269737243652
    7. ' x' → logprob: -12.535269737243652
    8. '
' → logprob: -13.160269737243652
    9. '[(' → logprob: -14.160269737243652
    10. ',x' → logprob: -14.785269737243652

Token 1672: ',y' (ID: 16103)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.15679427981376648
    2. ',y' → logprob: -2.031794309616089
    3. '[y' → logprob: -4.90679407119751
    4. '(y' → logprob: -6.03179407119751
    5. ',' → logprob: -6.40679407119751
    6. '][' → logprob: -6.53179407119751
    7. 'x' → logprob: -8.031794548034668
    8. '(x' → logprob: -8.281794548034668
    9. ''y' → logprob: -9.031794548034668
    10. '[x' → logprob: -9.656794548034668

Token 1673: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11387251317501068
    2. ']]' → logprob: -2.363872528076172
    3. ')]' → logprob: -4.488872528076172
    4. ')' → logprob: -6.863872528076172
    5. ']]]' → logprob: -6.988872528076172
    6. ']])' → logprob: -9.113872528076172
    7. '])]' → logprob: -9.363872528076172
    8. ']]
' → logprob: -9.613872528076172
    9. '()]' → logprob: -10.363872528076172
    10. '])' → logprob: -10.738872528076172

Token 1674: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26007312536239624
    2. ' if' → logprob: -1.635073184967041
    3. 'if' → logprob: -3.510073184967041
    4. '<|end|>' → logprob: -6.760073184967041
    5. ']:
' → logprob: -7.635073184967041
    6. '                           ' → logprob: -8.010072708129883
    7. '                   ' → logprob: -8.135072708129883
    8. '])' → logprob: -8.135072708129883
    9. ']
' → logprob: -8.760072708129883
    10. '               ' → logprob: -8.760072708129883

Token 1675: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002805467927828431
    2. ' p' → logprob: -5.877805233001709
    3. '(p' → logprob: -14.627805709838867
    4. '   ' → logprob: -16.627805709838867
    5. ' ' → logprob: -17.127805709838867
    6. '(' → logprob: -17.502805709838867
    7. '  ' → logprob: -18.002805709838867
    8. '<p' → logprob: -18.002805709838867
    9. '	p' → logprob: -18.627805709838867
    10. 'x' → logprob: -18.627805709838867

Token 1676: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2519436180591583
    2. ' in' → logprob: -1.501943588256836
    3. 'n' → logprob: -11.376943588256836
    4. ' ' → logprob: -14.001943588256836
    5. 'inx' → logprob: -14.126943588256836
    6. '
' → logprob: -15.126943588256836
    7. 'In' → logprob: -15.251943588256836
    8. 'import' → logprob: -16.126943588256836
    9. '           ' → logprob: -16.251943588256836
    10. '	in' → logprob: -16.501943588256836

Token 1677: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -8.41866585687967e-06
    2. ' point' → logprob: -11.750008583068848
    3. '{' → logprob: -16.00000762939453
    4. '(point' → logprob: -16.12500762939453
    5. '	point' → logprob: -16.62500762939453
    6. '
' → logprob: -17.37500762939453
    7. '[' → logprob: -18.00000762939453
    8. 'idx' → logprob: -18.25000762939453
    9. '```' → logprob: -18.50000762939453
    10. 'oint' → logprob: -18.75000762939453

Token 1678: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.1160349458805285e-05
    2. 'idx' → logprob: -11.500011444091797
    3. 'Idx' → logprob: -15.250011444091797
    4. '_IDX' → logprob: -15.750011444091797
    5. '[idx' → logprob: -15.875011444091797
    6. '_idxs' → logprob: -15.875011444091797
    7. '```' → logprob: -16.625011444091797
    8. '[
' → logprob: -17.375011444091797
    9. '[' → logprob: -17.375011444091797
    10. '`' → logprob: -17.875011444091797

Token 1679: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012291580205783248
    2. ']
' → logprob: -7.126229286193848
    3. ']:' → logprob: -8.001229286193848
    4. ']:
' → logprob: -10.001229286193848
    5. ':' → logprob: -11.751229286193848
    6. ':]' → logprob: -11.876229286193848
    7. '                           ' → logprob: -12.126229286193848
    8. ' ]' → logprob: -12.251229286193848
    9. '`]' → logprob: -12.626229286193848
    10. '']' → logprob: -13.001229286193848

Token 1680: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.28541699051856995
    2. '               ' → logprob: -1.5354169607162476
    3. ' for' → logprob: -4.410417079925537
    4. ':' → logprob: -4.910417079925537
    5. '           ' → logprob: -5.785417079925537
    6. ':
' → logprob: -5.910417079925537
    7. '                               ' → logprob: -6.035417079925537
    8. '                       ' → logprob: -6.160417079925537
    9. '       ' → logprob: -7.285417079925537
    10. '```' → logprob: -7.285417079925537

Token 1681: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3149931728839874
    2. ' for' → logprob: -1.314993143081665
    3. '               ' → logprob: -7.064993381500244
    4. '                   ' → logprob: -7.314993381500244
    5. '           ' → logprob: -9.439992904663086
    6. '                               ' → logprob: -9.814992904663086
    7. '                                   ' → logprob: -10.814992904663086
    8. '
' → logprob: -11.064992904663086
    9. '                       ' → logprob: -11.439992904663086
    10. '   ' → logprob: -12.064992904663086

Token 1682: ' v' (ID: 323)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.05877036973834038
    2. 'u' → logprob: -3.3087704181671143
    3. ' idx' → logprob: -3.9337704181671143
    4. ' u' → logprob: -7.558770179748535
    5. 'id' → logprob: -9.058770179748535
    6. 'i' → logprob: -9.058770179748535
    7. 'ids' → logprob: -9.558770179748535
    8. 'v' → logprob: -9.933770179748535
    9. '
' → logprob: -10.558770179748535
    10. 'p' → logprob: -11.183770179748535

Token 1683: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28118255734443665
    2. 'in' → logprob: -1.4061825275421143
    3. 's' → logprob: -11.781182289123535
    4. 'n' → logprob: -11.906182289123535
    5. 'v' → logprob: -12.406182289123535
    6. ' ' → logprob: -13.281182289123535
    7. '_in' → logprob: -13.281182289123535
    8. '```' → logprob: -13.281182289123535
    9. 'In' → logprob: -13.531182289123535
    10. '	in' → logprob: -13.656182289123535

Token 1684: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.003179975086823106
    2. ' idx' → logprob: -5.753180027008057
    3. '[idx' → logprob: -13.378179550170898
    4. '
' → logprob: -15.378179550170898
    5. '	idx' → logprob: -15.628179550170898
    6. '   ' → logprob: -15.878179550170898
    7. '_idxs' → logprob: -16.2531795501709
    8. 'v' → logprob: -17.7531795501709
    9. '[' → logprob: -17.7531795501709
    10. '(idx' → logprob: -18.1281795501709

Token 1685: 's' (ID: 82)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.3318585753440857
    2. 'idx' → logprob: -1.3318586349487305
    3. 's' → logprob: -4.2068586349487305
    4. ' idx' → logprob: -6.5818586349487305
    5. 'x' → logprob: -6.9568586349487305
    6. '_idxs' → logprob: -7.2068586349487305
    7. '[idx' → logprob: -8.58185863494873
    8. '[' → logprob: -9.70685863494873
    9. 'dx' → logprob: -9.95685863494873
    10. 'ids' → logprob: -10.20685863494873

Token 1686: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3269020617008209
    2. ':' → logprob: -1.3269020318984985
    3. '                   ' → logprob: -4.951901912689209
    4. '                           ' → logprob: -5.701901912689209
    5. '                                   ' → logprob: -7.326901912689209
    6. '                               ' → logprob: -7.451901912689209
    7. '                                           ' → logprob: -7.701901912689209
    8. '=' → logprob: -8.201902389526367
    9. '                       ' → logprob: -8.451902389526367
    10. ' :' → logprob: -8.701902389526367

Token 1687: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.3144041299819946
    2. '                               ' → logprob: -1.4394041299819946
    3. '                                           ' → logprob: -2.064404010772705
    4. '                           ' → logprob: -2.689404010772705
    5. '                                   ' → logprob: -2.689404010772705
    6. ':' → logprob: -3.064404010772705
    7. ' :' → logprob: -3.189404010772705
    8. ':
' → logprob: -3.814404010772705
    9. '                                ' → logprob: -3.939404010772705
    10. ' 
' → logprob: -4.439404010772705

Token 1688: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6290575861930847
    2. ' if' → logprob: -1.0040576457977295
    3. 'd' (adapté à ' d') → logprob: -3.1290576457977295
    4. '                           ' → logprob: -3.7540576457977295
    5. '                               ' → logprob: -4.00405740737915
    6. '                       ' → logprob: -4.50405740737915
    7. ' d' → logprob: -6.12905740737915
    8. '```' → logprob: -7.37905740737915
    9. '                                   ' → logprob: -8.379057884216309
    10. ' ' → logprob: -9.129057884216309

Token 1689: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011431955499574542
    2. ' =' → logprob: -6.876142978668213
    3. '=v' → logprob: -10.126143455505371
    4. '=d' → logprob: -10.501143455505371
    5. 'istance' → logprob: -11.876143455505371
    6. '=
' → logprob: -12.126143455505371
    7. '=min' → logprob: -12.376143455505371
    8. '<' → logprob: -12.501143455505371
    9. '=int' → logprob: -12.626143455505371
    10. '[' → logprob: -12.626143455505371

Token 1690: 'adj' (ID: 57001)
  Prédit: 'adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -6.704273118884885e-07
    2. ' adj' → logprob: -14.375000953674316
    3. '   ' → logprob: -18.25
    4. 'ad' → logprob: -18.625
    5. '(adj' → logprob: -19.125
    6. 'dist' → logprob: -19.625
    7. 'adm' → logprob: -20.0
    8. 'min' → logprob: -20.875
    9. '```' → logprob: -20.875
    10. '    ' → logprob: -21.125

Token 1691: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.898723561083898e-05
    2. '[u' → logprob: -9.500079154968262
    3. ' [' → logprob: -13.250079154968262
    4. '[v' → logprob: -13.375079154968262
    5. '[
' → logprob: -15.375079154968262
    6. 'st' → logprob: -16.000078201293945
    7. 'u' → logprob: -16.375078201293945
    8. 'v' → logprob: -16.375078201293945
    9. '[s' → logprob: -16.500078201293945
    10. '```' → logprob: -16.500078201293945

Token 1692: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -4.320199877838604e-07
    2. ' st' → logprob: -15.875
    3. '(st' → logprob: -16.625
    4. '	st' → logprob: -16.875
    5. '[' → logprob: -17.5
    6. '```' → logprob: -17.75
    7. '
' → logprob: -18.125
    8. 's' → logprob: -19.0
    9. '0' → logprob: -19.125
    10. '   ' → logprob: -19.375

Token 1693: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00048072010395117104
    2. 'v' → logprob: -8.000480651855469
    3. 'st' → logprob: -9.625480651855469
    4. 'ix' → logprob: -10.500480651855469
    5. 'x' → logprob: -11.250480651855469
    6. '[idx' → logprob: -11.875480651855469
    7. 'id' → logprob: -12.000480651855469
    8. '[' → logprob: -12.125480651855469
    9. 'ex' → logprob: -12.750480651855469
    10. 'i' → logprob: -12.875480651855469

Token 1694: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.475159227848053
    2. '][' → logprob: -0.975159227848053
    3. '[u' → logprob: -7.100159168243408
    4. '[' → logprob: -8.725159645080566
    5. ']' → logprob: -9.725159645080566
    6. ' ][' → logprob: -11.225159645080566
    7. 'v' → logprob: -12.225159645080566
    8. '[
' → logprob: -12.600159645080566
    9. '                   ' → logprob: -13.350159645080566
    10. '   ' → logprob: -13.475159645080566

Token 1695: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.512236498361744e-07
    2. '[v' → logprob: -15.250000953674316
    3. ' v' → logprob: -15.875000953674316
    4. '	v' → logprob: -17.25
    5. '(v' → logprob: -17.75
    6. '[' → logprob: -18.125
    7. ']' → logprob: -18.625
    8. ')v' → logprob: -19.0
    9. '```' → logprob: -19.375
    10. '
' → logprob: -19.625

Token 1696: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006210205145180225
    2. ']
' → logprob: -5.1312103271484375
    3. ']+' → logprob: -9.006210327148438
    4. '                   ' → logprob: -9.381210327148438
    5. ']<' → logprob: -10.881210327148438
    6. ']
' → logprob: -11.256210327148438
    7. ' ]' → logprob: -11.881210327148438
    8. '+' → logprob: -12.131210327148438
    9. ']>' → logprob: -12.131210327148438
    10. '                           ' → logprob: -12.631210327148438

Token 1697: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04711802676320076
    2. '                       ' → logprob: -3.9221179485321045
    3. '                           ' → logprob: -4.547118186950684
    4. '<|end|>' → logprob: -4.922118186950684
    5. '                               ' → logprob: -6.797118186950684
    6. '<|end|>' → logprob: -6.797118186950684
    7. '               ' → logprob: -6.922118186950684
    8. '				' → logprob: -7.797118186950684
    9. '                    
' → logprob: -7.922118186950684
    10. '                        
' → logprob: -7.922118186950684

Token 1698: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.45948952436447144
    2. ' if' → logprob: -1.5844895839691162
    3. '                   ' → logprob: -2.084489583969116
    4. '                       ' → logprob: -4.084489345550537
    5. '                               ' → logprob: -4.584489345550537
    6. '                           ' → logprob: -4.709489345550537
    7. '<' → logprob: -7.084489345550537
    8. '                                   ' → logprob: -7.334489345550537
    9. '
' → logprob: -8.584489822387695
    10. '                                           ' → logprob: -8.834489822387695

Token 1699: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004080062732100487
    2. ' d' → logprob: -5.504080295562744
    3. '                   ' → logprob: -15.254079818725586
    4. '   ' → logprob: -15.379079818725586
    5. '
' → logprob: -15.379079818725586
    6. '	d' → logprob: -15.754079818725586
    7. '                           ' → logprob: -15.879079818725586
    8. '```' → logprob: -16.254079818725586
    9. '                               ' → logprob: -16.504079818725586
    10. 'dist' → logprob: -16.629079818725586

Token 1700: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0005097838002257049
    2. '<v' → logprob: -8.250510215759277
    3. ' <' → logprob: -8.875510215759277
    4. '<int' → logprob: -10.000510215759277
    5. '<size' → logprob: -11.125510215759277
    6. '<n' → logprob: -11.250510215759277
    7. '<len' → logprob: -12.125510215759277
    8. '<data' → logprob: -13.250510215759277
    9. '<num' → logprob: -13.375510215759277
    10. '<p' → logprob: -13.375510215759277

Token 1701: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00015133652777876705
    2. ' res' → logprob: -8.875151634216309
    3. '=res' → logprob: -12.125151634216309
    4. '=' → logprob: -12.500151634216309
    5. '$res' → logprob: -14.500151634216309
    6. '10' → logprob: -14.625151634216309
    7. '	res' → logprob: -14.750151634216309
    8. 'd' → logprob: -15.250151634216309
    9. '
' → logprob: -15.375151634216309
    10. 'r' → logprob: -15.500151634216309

Token 1702: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.5448096990585327
    2. ':' → logprob: -1.0448096990585327
    3. '                       ' → logprob: -2.7948098182678223
    4. '                           ' → logprob: -5.919809818267822
    5. ':
' → logprob: -6.169809818267822
    6. '                   ' → logprob: -8.169809341430664
    7. '                              ' → logprob: -8.169809341430664
    8. '                                ' → logprob: -8.294809341430664
    9. ' :' → logprob: -8.544809341430664
    10. '=' → logprob: -8.669809341430664

Token 1703: '                       ' (ID: 968)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.4827580153942108
    2. '                       ' → logprob: -0.9827580451965332
    3. '                           ' → logprob: -6.107758045196533
    4. '                        ' → logprob: -6.357758045196533
    5. '                                ' → logprob: -6.482758045196533
    6. ':' → logprob: -6.982758045196533
    7. '                        
' → logprob: -8.107757568359375
    8. '                   ' → logprob: -8.232757568359375
    9. ' :' → logprob: -8.607757568359375
    10. '                                
' → logprob: -8.857757568359375

Token 1704: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -1.5332478142227046e-05
    2. ' res' → logprob: -11.125015258789062
    3. '                               ' → logprob: -15.125015258789062
    4. '                       ' → logprob: -16.500015258789062
    5. '                           ' → logprob: -16.750015258789062
    6. 'd' → logprob: -16.875015258789062
    7. 'return' → logprob: -17.125015258789062
    8. '
' → logprob: -17.375015258789062
    9. '$res' → logprob: -17.625015258789062
    10. '_res' → logprob: -19.000015258789062

Token 1705: '=d' (ID: 56413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021258588880300522
    2. '=res' → logprob: -3.896258592605591
    3. '                           ' → logprob: -8.146258354187012
    4. '                               ' → logprob: -8.396258354187012
    5. '=d' → logprob: -9.396258354187012
    6. '<' → logprob: -9.771258354187012
    7. '.' → logprob: -11.521258354187012
    8. '<=' → logprob: -11.646258354187012
    9. ' =' → logprob: -12.021258354187012
    10. '                       ' → logprob: -12.396258354187012

Token 1706: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1707: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1708: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7299436330795288
    2. '           ' → logprob: -0.9799436330795288
    3. '       ' → logprob: -2.2299437522888184
    4. ' return' → logprob: -3.9799437522888184
    5. '
' → logprob: -4.854943752288818
    6. '   ' → logprob: -5.979943752288818
    7. '               ' → logprob: -7.229943752288818
    8. ')' → logprob: -7.229943752288818
    9. '         ' → logprob: -7.354943752288818
    10. ' ' → logprob: -7.479943752288818

Token 1709: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.547789674485102e-05
    2. ' res' → logprob: -10.250035285949707
    3. '10' → logprob: -19.500036239624023
    4. '
' → logprob: -19.625036239624023
    5. '	res' → logprob: -21.125036239624023
    6. '$res' → logprob: -21.125036239624023
    7. 'r' → logprob: -21.375036239624023
    8. '0' → logprob: -21.750036239624023
    9. '(res' → logprob: -22.000036239624023
    10. 're' → logprob: -22.125036239624023

Token 1710: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30619052052497864
    2. '<|end|>' → logprob: -1.4311904907226562
    3. ')' → logprob: -4.681190490722656
    4. '        
' → logprob: -5.806190490722656
    5. '<|end|>' → logprob: -6.306190490722656
    6. '```' → logprob: -6.431190490722656
    7. '
' → logprob: -6.431190490722656
    8. '   ' → logprob: -6.806190490722656
    9. '[' → logprob: -6.806190490722656
    10. '#' → logprob: -6.931190490722656

Token 1711: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4745217263698578
    2. '       ' → logprob: -0.9745217561721802
    3. '#' → logprob: -8.34952163696289
    4. ' dist' → logprob: -9.72452163696289
    5. 'def' → logprob: -10.22452163696289
    6. '   ' → logprob: -10.47452163696289
    7. 'n' → logprob: -10.72452163696289
    8. '```' → logprob: -10.97452163696289
    9. '	dist' → logprob: -11.22452163696289
    10. '        
' → logprob: -11.22452163696289

Token 1712: ' n' (ID: 297)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001194990472868085
    2. '       ' → logprob: -6.751194953918457
    3. '#' → logprob: -11.126194953918457
    4. 'def' → logprob: -12.126194953918457
    5. ' dist' → logprob: -13.126194953918457
    6. 'n' (adapté à ' n') → logprob: -13.251194953918457
    7. '   ' → logprob: -15.126194953918457
    8. '	dist' → logprob: -15.251194953918457
    9. 'import' → logprob: -16.501195907592773
    10. '```' → logprob: -16.751195907592773

Token 1713: '=len' (ID: 114011)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08825629949569702
    2. ' =' → logprob: -3.463256359100342
    3. ')' → logprob: -4.713256359100342
    4. '[' → logprob: -4.838256359100342
    5. '_' → logprob: -4.963256359100342
    6. '<|end|>' → logprob: -5.088256359100342
    7. ',' → logprob: -5.463256359100342
    8. '.' → logprob: -5.838256359100342
    9. ' ' → logprob: -6.588256359100342
    10. '>' → logprob: -6.588256359100342

Token 1714: '(product' (ID: 31697)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04066765308380127
    2. '(product' → logprob: -3.7906675338745117
    3. '(
' → logprob: -5.290667533874512
    4. '[' → logprob: -5.290667533874512
    5. '(n' → logprob: -5.790667533874512
    6. 'product' → logprob: -6.165667533874512
    7. 'n' → logprob: -7.665667533874512
    8. ')' → logprob: -7.665667533874512
    9. '[
' → logprob: -8.165667533874512
    10. ''' → logprob: -8.665667533874512

Token 1715: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.005406996235251427
    2. '_' → logprob: -6.505406856536865
    3. ')_' → logprob: -6.505406856536865
    4. ')' → logprob: -7.130406856536865
    5. 's' → logprob: -8.005407333374023
    6. '_)' → logprob: -8.380407333374023
    7. '_list' → logprob: -8.505407333374023
    8. '[' → logprob: -8.505407333374023
    9. '_i' → logprob: -9.005407333374023
    10. '```' → logprob: -9.255407333374023

Token 1716: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0014532095519825816
    2. 's' → logprob: -7.376453399658203
    3. '_info' → logprob: -8.126453399658203
    4. ')_' → logprob: -8.626453399658203
    5. '_' → logprob: -9.001453399658203
    6. ')' → logprob: -9.501453399658203
    7. '```' → logprob: -9.876453399658203
    8. '[' → logprob: -10.126453399658203
    9. '[
' → logprob: -11.376453399658203
    10. '`' → logprob: -12.001453399658203

Token 1717: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006870833225548267
    2. '       ' → logprob: -6.381870746612549
    3. '   ' → logprob: -6.881870746612549
    4. '[' → logprob: -6.881870746612549
    5. '<|end|>' → logprob: -7.131870746612549
    6. '+' → logprob: -7.756870746612549
    7. '<|end|>' → logprob: -8.006871223449707
    8. '
' → logprob: -8.256871223449707
    9. ']' → logprob: -8.256871223449707
    10. '[
' → logprob: -8.881871223449707

Token 1718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4754418134689331
    2. 'dist' → logprob: -0.9754418134689331
    3. ' dist' → logprob: -7.225441932678223
    4. '	dist' → logprob: -8.975441932678223
    5. 'dp' → logprob: -9.225441932678223
    6. '#' → logprob: -9.475441932678223
    7. '   ' → logprob: -9.600441932678223
    8. '_dist' → logprob: -9.725441932678223
    9. '        
' → logprob: -10.100441932678223
    10. 'import' → logprob: -10.100441932678223

Token 1719: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0012176171876490116
    2. 'dp' → logprob: -6.876217842102051
    3. '       ' → logprob: -8.75121784210205
    4. '#' → logprob: -11.37621784210205
    5. '   ' → logprob: -11.62621784210205
    6. ' dist' → logprob: -13.37621784210205
    7. '
' → logprob: -14.00121784210205
    8. '        
' → logprob: -14.12621784210205
    9. 'import' → logprob: -14.50121784210205
    10. '_dist' → logprob: -14.62621784210205

Token 1720: '_start' (ID: 10949)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.030766276642680168
    2. '_start' → logprob: -3.905766248703003
    3. '_p' → logprob: -4.780766487121582
    4. '_from' → logprob: -7.155766487121582
    5. '_' → logprob: -7.280766487121582
    6. '_matrix' → logprob: -9.530766487121582
    7. '_between' → logprob: -9.530766487121582
    8. '_i' → logprob: -11.030766487121582
    9. '```' → logprob: -11.155766487121582
    10. '=_' → logprob: -11.155766487121582

Token 1721: '=[' (ID: 13370)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33671531081199646
    2. '_min' → logprob: -1.5867153406143188
    3. '_start' → logprob: -3.0867152214050293
    4. '=' → logprob: -4.336715221405029
    5. '_from' → logprob: -5.836715221405029
    6. '_for' → logprob: -5.961715221405029
    7. '[' → logprob: -5.961715221405029
    8. '=[' → logprob: -6.086715221405029
    9. '[_' → logprob: -6.086715221405029
    10. '=_' → logprob: -6.336715221405029

Token 1722: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00021140782337170094
    2. '[' → logprob: -9.375211715698242
    3. '10' → logprob: -9.750211715698242
    4. '0' → logprob: -10.250211715698242
    5. ' dist' → logprob: -11.375211715698242
    6. '(dist' → logprob: -11.750211715698242
    7. '[]' → logprob: -11.875211715698242
    8. ']' → logprob: -12.750211715698242
    9. '[]
' → logprob: -14.000211715698242
    10. '
' → logprob: -14.250211715698242

Token 1723: '_min' (ID: 15950)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.31613731384277344
    2. '_min' → logprob: -1.3161373138427734
    3. '[i' → logprob: -7.066137313842773
    4. '[' → logprob: -7.566137313842773
    5. '[_' → logprob: -8.316137313842773
    6. '_from' → logprob: -8.316137313842773
    7. '_' → logprob: -8.441137313842773
    8. ' _' → logprob: -9.066137313842773
    9. '```' → logprob: -9.316137313842773
    10. ']_' → logprob: -9.441137313842773

Token 1724: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.002736639464274049
    2. '_between' → logprob: -6.127736568450928
    3. 'start' → logprob: -7.627736568450928
    4. '_from' → logprob: -10.627737045288086
    5. '_' → logprob: -11.252737045288086
    6. '_to' → logprob: -12.502737045288086
    7. '_for' → logprob: -12.627737045288086
    8. ']' → logprob: -12.752737045288086
    9. 'between' → logprob: -12.877737045288086
    10. ']_' → logprob: -13.002737045288086

Token 1725: '_product' (ID: 21247)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.040849972516298294
    2. '_between' → logprob: -3.4158499240875244
    3. '_to' → logprob: -5.5408501625061035
    4. '_' → logprob: -6.9158501625061035
    5. ']_' → logprob: -7.4158501625061035
    6. '(i' → logprob: -7.6658501625061035
    7. ']' → logprob: -8.040849685668945
    8. 'start' → logprob: -8.165849685668945
    9. '_for' → logprob: -9.040849685668945
    10. '_from' → logprob: -9.040849685668945

Token 1726: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.020396830514073372
    2. '(' → logprob: -4.270396709442139
    3. ']' → logprob: -5.895396709442139
    4. '[i' → logprob: -6.145396709442139
    5. 'i' → logprob: -7.895396709442139
    6. ' (' → logprob: -8.145397186279297
    7. '](' → logprob: -8.395397186279297
    8. '[' → logprob: -8.770397186279297
    9. '
' → logprob: -10.020397186279297
    10. 'for' → logprob: -10.145397186279297

Token 1727: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05750998854637146
    2. '()]' → logprob: -3.8075098991394043
    3. ')]' → logprob: -4.682509899139404
    4. '(i' → logprob: -4.807509899139404
    5. ')' → logprob: -4.932509899139404
    6. ']()' → logprob: -5.432509899139404
    7. 'for' → logprob: -6.307509899139404
    8. '()' → logprob: -6.682509899139404
    9. ' for' → logprob: -6.932509899139404
    10. ' ]' → logprob: -8.432510375976562

Token 1728: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47967779636383057
    2. 'for' → logprob: -1.4796777963638306
    3. ']' → logprob: -1.9796777963638306
    4. '(' → logprob: -6.104677677154541
    5. '<|end|>' → logprob: -6.104677677154541
    6. '(i' → logprob: -6.229677677154541
    7. '()' → logprob: -6.354677677154541
    8. ')' → logprob: -6.604677677154541
    9. '()]' → logprob: -6.729677677154541
    10. ' ]' → logprob: -6.979677677154541

Token 1729: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011877299984917045
    2. ' i' → logprob: -6.751187801361084
    3. 'range' → logprob: -11.251187324523926
    4. ' range' → logprob: -12.376187324523926
    5. '
' → logprob: -16.501188278198242
    6. '	i' → logprob: -16.751188278198242
    7. '_i' → logprob: -16.751188278198242
    8. '_' → logprob: -16.751188278198242
    9. ' ' → logprob: -18.126188278198242
    10. '(i' → logprob: -18.126188278198242

Token 1730: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31416407227516174
    2. 'in' → logprob: -1.3141640424728394
    3. 'i' → logprob: -7.064164161682129
    4. 'range' → logprob: -10.564164161682129
    5. ' ' → logprob: -12.064164161682129
    6. ' i' → logprob: -12.189164161682129
    7. '(i' → logprob: -12.939164161682129
    8. 'n' → logprob: -13.314164161682129
    9. '
' → logprob: -13.439164161682129
    10. '0' → logprob: -14.189164161682129

Token 1731: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1472419600977446e-06
    2. ' range' → logprob: -13.750000953674316
    3. '(range' → logprob: -17.250001907348633
    4. 'n' → logprob: -19.000001907348633
    5. '
' → logprob: -22.250001907348633
    6. '	range' → logprob: -23.875001907348633
    7. 'rage' → logprob: -24.250001907348633
    8. '(n' → logprob: -24.750001907348633
    9. '[' → logprob: -25.250001907348633
    10. '[n' → logprob: -25.250001907348633

Token 1732: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001971577061340213
    2. '(n' → logprob: -6.25197172164917
    3. ' n' → logprob: -10.376971244812012
    4. ')n' → logprob: -12.251971244812012
    5. '(' → logprob: -12.376971244812012
    6. '(
' → logprob: -13.126971244812012
    7. '
' → logprob: -14.626971244812012
    8. ')' → logprob: -15.501971244812012
    9. '	n' → logprob: -15.876971244812012
    10. '_n' → logprob: -16.876972198486328

Token 1733: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6935448050498962
    2. ')]' → logprob: -0.6935448050498962
    3. ')' → logprob: -8.193544387817383
    4. ' ]' → logprob: -9.693544387817383
    5. '       ' → logprob: -10.568544387817383
    6. ']
' → logprob: -11.318544387817383
    7. ')],' → logprob: -12.443544387817383
    8. '()]' → logprob: -12.568544387817383
    9. ')]
' → logprob: -12.693544387817383
    10. '])' → logprob: -12.943544387817383

Token 1734: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16896647214889526
    2. '       ' → logprob: -2.04396653175354
    3. ' dist' → logprob: -3.79396653175354
    4. '        
' → logprob: -6.793966293334961
    5. '```' → logprob: -7.168966293334961
    6. '
' → logprob: -7.418966293334961
    7. '`' → logprob: -8.918966293334961
    8. '#' → logprob: -9.043966293334961
    9. '_dist' → logprob: -9.043966293334961
    10. '	dist' → logprob: -9.543966293334961

Token 1735: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -1.1472419600977446e-06
    2. ' dist' → logprob: -14.375000953674316
    3. '       ' → logprob: -14.625000953674316
    4. '
' → logprob: -17.250001907348633
    5. '        
' → logprob: -18.625001907348633
    6. '```' → logprob: -18.875001907348633
    7. '_dist' → logprob: -19.625001907348633
    8. '#' → logprob: -19.750001907348633
    9. '   ' → logprob: -21.250001907348633
    10. '	dist' → logprob: -21.250001907348633

Token 1736: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.00229085236787796
    2. '_min' → logprob: -6.127290725708008
    3. '_' → logprob: -9.877290725708008
    4. '```' → logprob: -11.252290725708008
    5. 'p' → logprob: -12.127290725708008
    6. '_start' → logprob: -12.377290725708008
    7. ' _' → logprob: -12.627290725708008
    8. '=_' → logprob: -12.627290725708008
    9. '_pp' → logprob: -13.002290725708008
    10. ' =' → logprob: -13.002290725708008

Token 1737: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000116655595775228
    2. '_to' → logprob: -9.500116348266602
    3. 'to' → logprob: -11.875116348266602
    4. '[' → logprob: -12.250116348266602
    5. '```' → logprob: -12.375116348266602
    6. '_p' → logprob: -12.500116348266602
    7. '_' → logprob: -12.625116348266602
    8. '_start' → logprob: -12.750116348266602
    9. 'r' → logprob: -13.000116348266602
    10. 'start' → logprob: -13.000116348266602

Token 1738: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003431858029216528
    2. '2' → logprob: -6.003431797027588
    3. '_p' → logprob: -7.003431797027588
    4. '[' → logprob: -10.503432273864746
    5. '[i' → logprob: -11.878432273864746
    6. '```' → logprob: -12.503432273864746
    7. 'r' → logprob: -12.753432273864746
    8. '[[' → logprob: -13.128432273864746
    9. '_' → logprob: -13.878432273864746
    10. '[
' → logprob: -14.503432273864746

Token 1739: '=[[' (ID: 112637)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.3404023051261902
    2. '=[[' → logprob: -1.590402364730835
    3. '=' → logprob: -2.590402364730835
    4. '[i' → logprob: -5.590402126312256
    5. '[' → logprob: -5.590402126312256
    6. '=[]' → logprob: -7.090402126312256
    7. '=[
' → logprob: -7.715402126312256
    8. ' =' → logprob: -8.090402603149414
    9. '[[' → logprob: -8.340402603149414
    10. '_' → logprob: -9.090402603149414

Token 1740: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.011774524115025997
    2. '0' → logprob: -4.63677453994751
    3. 'dist' → logprob: -6.88677453994751
    4. 'n' → logprob: -7.26177453994751
    5. '(' → logprob: -9.011774063110352
    6. '-' → logprob: -9.636774063110352
    7. ' ' → logprob: -10.761774063110352
    8. 'j' → logprob: -11.136774063110352
    9. '100' → logprob: -11.386774063110352
    10. '[' → logprob: -11.636774063110352

Token 1741: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.14342544972896576
    2. '9' → logprob: -2.018425464630127
    3. '^' → logprob: -7.643425464630127
    4. '*' → logprob: -8.518424987792969
    5. '```' → logprob: -10.393424987792969
    6. '\xe2\x81' → logprob: -11.393424987792969
    7. '[' → logprob: -11.643424987792969
    8. '#' → logprob: -12.268424987792969
    9. ' **' → logprob: -12.643424987792969
    10. '
' → logprob: -12.893424987792969

Token 1742: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.375000953674316
    3. '^' → logprob: -16.125
    4. '```' → logprob: -16.375
    5. '
' → logprob: -17.0
    6. 'n' → logprob: -17.375
    7. '``' → logprob: -17.625
    8. '**' → logprob: -17.625
    9. '0' → logprob: -18.0
    10. '   ' → logprob: -18.5

Token 1743: ']*' (ID: 18579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7538694143295288
    2. ' for' → logprob: -1.0038694143295288
    3. ']' → logprob: -2.2538695335388184
    4. ']*' → logprob: -2.8788695335388184
    5. '[' → logprob: -7.378869533538818
    6. '	for' → logprob: -8.62886905670166
    7. '   ' → logprob: -9.00386905670166
    8. '][' → logprob: -9.00386905670166
    9. '[i' → logprob: -9.00386905670166
    10. '[j' → logprob: -9.25386905670166

Token 1744: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5048530030981055e-06
    2. ' n' → logprob: -13.625001907348633
    3. '(n' → logprob: -15.375001907348633
    4. '
' → logprob: -19.000001907348633
    5. '	n' → logprob: -19.000001907348633
    6. '_n' → logprob: -19.250001907348633
    7. ')n' → logprob: -19.250001907348633
    8. '<|end|>' → logprob: -20.375001907348633
    9. '(' → logprob: -20.500001907348633
    10. '$n' → logprob: -20.500001907348633

Token 1745: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5759612321853638
    2. 'for' → logprob: -0.8259612321853638
    3. '	for' → logprob: -11.575961112976074
    4. '       ' → logprob: -12.075961112976074
    5. ']' → logprob: -13.200961112976074
    6. '           ' → logprob: -13.450961112976074
    7. ')' → logprob: -13.825961112976074
    8. '   ' → logprob: -13.825961112976074
    9. '[' → logprob: -14.950961112976074
    10. '               ' → logprob: -15.200961112976074

Token 1746: ' _' (ID: 1175)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7208575010299683
    2. ' range' → logprob: -1.2208575010299683
    3. ' i' → logprob: -2.595857620239258
    4. '_' → logprob: -2.970857620239258
    5. ' _' → logprob: -3.220857620239258
    6. 'range' → logprob: -3.720857620239258
    7. ' j' → logprob: -4.470857620239258
    8. 'j' → logprob: -5.720857620239258
    9. '_range' → logprob: -5.845857620239258
    10. ' in' → logprob: -5.970857620239258

Token 1747: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02005688101053238
    2. 'n' → logprob: -4.52005672454834
    3. 'in' → logprob: -5.39505672454834
    4. ' range' → logprob: -5.52005672454834
    5. 'i' → logprob: -8.64505672454834
    6. ' in' → logprob: -9.64505672454834
    7. '(range' → logprob: -9.64505672454834
    8. '_range' → logprob: -10.27005672454834
    9. '_n' → logprob: -10.52005672454834
    10. '_' → logprob: -11.27005672454834

Token 1748: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008346432005055249
    2. ' range' → logprob: -7.2508344650268555
    3. 'n' → logprob: -9.000834465026855
    4. '(range' → logprob: -13.750834465026855
    5. '(n' → logprob: -16.375835418701172
    6. '
' → logprob: -16.625835418701172
    7. ' n' → logprob: -17.000835418701172
    8. 'in' → logprob: -17.750835418701172
    9. '	range' → logprob: -18.625835418701172
    10. '   ' → logprob: -19.500835418701172

Token 1749: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011541512794792652
    2. 'range' → logprob: -7.126153945922852
    3. ' n' → logprob: -8.126153945922852
    4. ' range' → logprob: -9.876153945922852
    5. '(n' → logprob: -13.126153945922852
    6. '_n' → logprob: -15.501153945922852
    7. '   ' → logprob: -15.751153945922852
    8. '
' → logprob: -15.876153945922852
    9. '(range' → logprob: -17.25115394592285
    10. '	n' → logprob: -17.62615394592285

Token 1750: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1642216593027115
    2. ')]' → logprob: -1.9142216444015503
    3. ')' → logprob: -5.66422176361084
    4. '       ' → logprob: -8.41422176361084
    5. '])' → logprob: -8.66422176361084
    6. '])]' → logprob: -10.16422176361084
    7. ']
' → logprob: -10.53922176361084
    8. ' ]' → logprob: -11.16422176361084
    9. '   ' → logprob: -11.53922176361084
    10. 'for' → logprob: -11.78922176361084

Token 1751: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02896275371313095
    2. 'for' → logprob: -3.9039628505706787
    3. ' for' → logprob: -4.9039626121521
    4. '   ' → logprob: -7.5289626121521
    5. '	for' → logprob: -9.028963088989258
    6. '           ' → logprob: -9.278963088989258
    7. '```' → logprob: -9.778963088989258
    8. '<|end|>' → logprob: -10.028963088989258
    9. '	' → logprob: -10.403963088989258
    10. '[' → logprob: -11.028963088989258

Token 1752: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005169005133211613
    2. ' for' → logprob: -5.755168914794922
    3. '       ' → logprob: -6.255168914794922
    4. '   ' → logprob: -10.505168914794922
    5. '	for' → logprob: -10.755168914794922
    6. '```' → logprob: -11.130168914794922
    7. '           ' → logprob: -13.380168914794922
    8. '
' → logprob: -13.380168914794922
    9. '<|end|>' → logprob: -14.005168914794922
    10. 'For' → logprob: -15.255168914794922

Token 1753: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024758970830589533
    2. ' i' → logprob: -6.002475738525391
    3. '_i' → logprob: -16.37747573852539
    4. '	i' → logprob: -16.37747573852539
    5. '   ' → logprob: -17.00247573852539
    6. '
' → logprob: -17.12747573852539
    7. 'j' → logprob: -17.37747573852539
    8. 'pi' → logprob: -18.00247573852539
    9. '`' → logprob: -18.25247573852539
    10. '(i' → logprob: -18.37747573852539

Token 1754: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25236645340919495
    2. 'in' → logprob: -1.5023664236068726
    3. '	in' → logprob: -8.252366065979004
    4. '   ' → logprob: -9.627366065979004
    5. '+' → logprob: -10.627366065979004
    6. '[' → logprob: -10.752366065979004
    7. ' ' → logprob: -11.252366065979004
    8. '0' → logprob: -11.502366065979004
    9. '<|end|>' → logprob: -11.877366065979004
    10. 'i' → logprob: -12.252366065979004

Token 1755: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.35980117321014404
    2. 'n' → logprob: -1.359801173210144
    3. ' range' → logprob: -3.1098012924194336
    4. ' n' → logprob: -7.109801292419434
    5. '(n' → logprob: -11.109801292419434
    6. 'in' → logprob: -11.609801292419434
    7. '0' → logprob: -11.734801292419434
    8. ' in' → logprob: -11.859801292419434
    9. ' ' → logprob: -13.109801292419434
    10. '(range' → logprob: -13.484801292419434

Token 1756: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07893473654985428
    2. '(n' → logprob: -2.578934669494629
    3. ' n' → logprob: -10.203934669494629
    4. '(' → logprob: -12.578934669494629
    5. '	n' → logprob: -13.328934669494629
    6. '       ' → logprob: -14.328934669494629
    7. '0' → logprob: -14.578934669494629
    8. ')n' → logprob: -14.703934669494629
    9. '           ' → logprob: -15.328934669494629
    10. '[n' → logprob: -15.328934669494629

Token 1757: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00556942168623209
    2. '):' → logprob: -5.8805694580078125
    3. '       ' → logprob: -7.0055694580078125
    4. '   ' → logprob: -7.8805694580078125
    5. ']:
' → logprob: -8.005569458007812
    6. ')' → logprob: -8.130569458007812
    7. 'for' → logprob: -8.755569458007812
    8. ':
' → logprob: -8.880569458007812
    9. ':' → logprob: -9.380569458007812
    10. '           ' → logprob: -9.630569458007812

Token 1758: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.478210985660553
    2. '   ' → logprob: -1.6032109260559082
    3. '           ' → logprob: -2.353210926055908
    4. '	   ' → logprob: -3.228210926055908
    5. '	       ' → logprob: -3.853210926055908
    6. ' for' → logprob: -3.978210926055908
    7. 'for' → logprob: -6.853210926055908
    8. '	for' → logprob: -6.853210926055908
    9. '<|end|>' → logprob: -7.853210926055908
    10. '```' → logprob: -8.103211402893066

Token 1759: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005391703452914953
    2. ' for' → logprob: -5.255391597747803
    3. 'j' → logprob: -9.380392074584961
    4. '   ' → logprob: -9.630392074584961
    5. ' j' → logprob: -12.130392074584961
    6. '       ' → logprob: -13.505392074584961
    7. '```' → logprob: -14.380392074584961
    8. '           ' → logprob: -15.130392074584961
    9. 'range' → logprob: -15.755392074584961
    10. '	for' → logprob: -16.88039207458496

Token 1760: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.036989033222198486
    2. 'n' → logprob: -3.7869889736175537
    3. 'i' → logprob: -4.536989212036133
    4. ' j' → logprob: -5.911989212036133
    5. '0' → logprob: -9.411989212036133
    6. ' n' → logprob: -9.786989212036133
    7. 'range' → logprob: -10.661989212036133
    8. ' i' → logprob: -10.786989212036133
    9. '           ' → logprob: -11.161989212036133
    10. '(n' → logprob: -11.286989212036133

Token 1761: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4132663607597351
    2. 'in' → logprob: -1.2882664203643799
    3. '(i' → logprob: -3.03826642036438
    4. 'i' → logprob: -5.038266181945801
    5. '[i' → logprob: -5.413266181945801
    6. ' i' → logprob: -5.913266181945801
    7. ' (' → logprob: -7.663266181945801
    8. '[' → logprob: -8.7882661819458
    9. '(' → logprob: -9.2882661819458
    10. '(in' → logprob: -9.5382661819458

Token 1762: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5213878154754639
    2. 'n' → logprob: -1.5213878154754639
    3. '(n' → logprob: -2.021387815475464
    4. ' range' → logprob: -3.021387815475464
    5. ' n' → logprob: -5.771388053894043
    6. ' (' → logprob: -5.896388053894043
    7. '(i' → logprob: -7.521388053894043
    8. '(range' → logprob: -8.521388053894043
    9. 'i' → logprob: -9.896388053894043
    10. '(' → logprob: -11.146388053894043

Token 1763: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9361777305603027
    2. '(i' → logprob: -0.9361777305603027
    3. 'n' → logprob: -1.6861777305603027
    4. 'i' → logprob: -3.5611777305603027
    5. ' (' → logprob: -6.436177730560303
    6. '0' → logprob: -8.811178207397461
    7. '(' → logprob: -8.936178207397461
    8. 'range' → logprob: -9.311178207397461
    9. '(j' → logprob: -10.061178207397461
    10. '           ' → logprob: -10.686178207397461

Token 1764: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17700091004371643
    2. '+' → logprob: -2.5520009994506836
    3. '):' → logprob: -2.8020009994506836
    4. '           ' → logprob: -5.052000999450684
    5. ']:
' → logprob: -5.552000999450684
    6. 'if' → logprob: -6.427000999450684
    7. ':' → logprob: -6.552000999450684
    8. '[i' → logprob: -6.677000999450684
    9. '[' → logprob: -7.052000999450684
    10. ')' → logprob: -7.177000999450684

Token 1765: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04115341231226921
    2. '[' → logprob: -3.9161534309387207
    3. '                               ' → logprob: -5.166153430938721
    4. '```' → logprob: -5.416153430938721
    5. '<|end|>' → logprob: -6.416153430938721
    6. '                           ' → logprob: -6.666153430938721
    7. '	           ' → logprob: -6.666153430938721
    8. '           ' → logprob: -6.791153430938721
    9. '                                           ' → logprob: -7.166153430938721
    10. '                       ' → logprob: -7.291153430938721

Token 1766: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2682299017906189
    2. '                   ' → logprob: -2.2682299613952637
    3. 'if' (adapté à ' if') → logprob: -2.7682299613952637
    4. '               ' → logprob: -3.1432299613952637
    5. '                           ' → logprob: -4.643229961395264
    6. '                               ' → logprob: -4.768229961395264
    7. '                       ' → logprob: -6.518229961395264
    8. '[' → logprob: -6.643229961395264
    9. '                                           ' → logprob: -7.143229961395264
    10. '           ' → logprob: -7.393229961395264

Token 1767: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4740913212299347
    2. ' i' → logprob: -0.9740912914276123
    3. 'j' → logprob: -11.849091529846191
    4. ' j' → logprob: -12.224091529846191
    5. '	i' → logprob: -13.849091529846191
    6. '   ' → logprob: -14.474091529846191
    7. ' not' → logprob: -15.599091529846191
    8. '    ' → logprob: -15.974091529846191
    9. ' ' → logprob: -16.099090576171875
    10. 'not' → logprob: -16.099090576171875

Token 1768: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1035003811120987
    2. ' !=' → logprob: -2.3535003662109375
    3. '==' → logprob: -6.3535003662109375
    4. '[' → logprob: -7.3535003662109375
    5. '[i' → logprob: -8.853500366210938
    6. '```' → logprob: -8.853500366210938
    7. ']!=' → logprob: -9.353500366210938
    8. '<' → logprob: -9.353500366210938
    9. '<=' → logprob: -9.603500366210938
    10. ' ==' → logprob: -9.603500366210938

Token 1769: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00018161057960242033
    2. ' j' → logprob: -8.625181198120117
    3. '```' → logprob: -13.875181198120117
    4. '	j' → logprob: -15.000181198120117
    5. '                   ' → logprob: -15.625181198120117
    6. '                       ' → logprob: -16.625181198120117
    7. ':j' → logprob: -16.750181198120117
    8. '$j' → logprob: -16.875181198120117
    9. '   ' → logprob: -17.000181198120117
    10. ',j' → logprob: -17.125181198120117

Token 1770: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.2464677095413208
    2. '[' → logprob: -1.6214677095413208
    3. ' and' → logprob: -1.6214677095413208
    4. '                   ' → logprob: -2.1214675903320312
    5. '                           ' → logprob: -2.4964675903320312
    6. ':' → logprob: -2.9964675903320312
    7. '                       ' → logprob: -3.2464675903320312
    8. 'and' → logprob: -5.496467590332031
    9. '                                           ' → logprob: -5.621467590332031
    10. '                               ' → logprob: -5.621467590332031

Token 1771: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03357262536883354
    2. '                           ' → logprob: -3.9085726737976074
    3. '                       ' → logprob: -4.658572673797607
    4. '               ' → logprob: -7.283572673797607
    5. '                                           ' → logprob: -7.283572673797607
    6. ' dist' → logprob: -7.533572673797607
    7. 'dist' → logprob: -7.908572673797607
    8. '<|end|>' → logprob: -8.15857219696045
    9. '           ' → logprob: -8.65857219696045
    10. '                               ' → logprob: -8.65857219696045

Token 1772: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.000627014203928411
    2. ' dist' → logprob: -7.375627040863037
    3. '	dist' → logprob: -14.875626564025879
    4. '                           ' → logprob: -17.000627517700195
    5. '_dist' → logprob: -17.375627517700195
    6. '                   ' → logprob: -17.375627517700195
    7. '```' → logprob: -17.750627517700195
    8. '               ' → logprob: -17.875627517700195
    9. 'Dist' → logprob: -18.250627517700195
    10. '`' → logprob: -18.500627517700195

Token 1773: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0077436245046556
    2. '[i' → logprob: -4.882743835449219
    3. '[p' → logprob: -9.882743835449219
    4. '_min' → logprob: -10.382743835449219
    5. 'p' → logprob: -10.507743835449219
    6. '[min' → logprob: -11.757743835449219
    7. '```' → logprob: -12.382743835449219
    8. 'min' → logprob: -12.507743835449219
    9. '[' → logprob: -12.757743835449219
    10. '	p' → logprob: -13.632743835449219

Token 1774: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000133098365040496
    2. '_p' → logprob: -9.500133514404297
    3. 'p' → logprob: -10.250133514404297
    4. '[i' → logprob: -11.750133514404297
    5. '```' → logprob: -12.625133514404297
    6. 'to' → logprob: -13.000133514404297
    7. '_to' → logprob: -13.187633514404297
    8. '[p' → logprob: -13.562633514404297
    9. '
' → logprob: -14.062633514404297
    10. '[' → logprob: -14.125133514404297

Token 1775: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.069664333248511e-05
    2. '2' → logprob: -10.875020980834961
    3. 'i' → logprob: -14.375020980834961
    4. '[i' → logprob: -15.250020980834961
    5. '
' → logprob: -15.500020980834961
    6. '_p' → logprob: -16.12502098083496
    7. 'o' → logprob: -16.37502098083496
    8. '[p' → logprob: -16.50002098083496
    9. ' p' → logprob: -16.62502098083496
    10. '[' → logprob: -16.87502098083496

Token 1776: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.0033853515051305e-05
    2. '[' → logprob: -10.125060081481934
    3. '][' → logprob: -11.500060081481934
    4. '[j' → logprob: -12.750060081481934
    5. ' [' → logprob: -13.500060081481934
    6. '=' → logprob: -13.500060081481934
    7. '=[' → logprob: -13.875060081481934
    8. ')[' → logprob: -14.250060081481934
    9. '[
' → logprob: -14.750060081481934
    10. '[][' → logprob: -14.750060081481934

Token 1777: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0034303157590329647
    2. ']=' → logprob: -6.378430366516113
    3. ']' → logprob: -7.128430366516113
    4. '[j' → logprob: -8.128430366516113
    5. '[i' → logprob: -8.503430366516113
    6. ' ][' → logprob: -8.628430366516113
    7. '=' → logprob: -9.003430366516113
    8. '[' → logprob: -9.878430366516113
    9. '=[' → logprob: -11.503430366516113
    10. ']==' → logprob: -11.753430366516113

Token 1778: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.896309739408025e-07
    2. ' j' → logprob: -14.250000953674316
    3. ']' → logprob: -18.0
    4. '```' → logprob: -18.5
    5. '=j' → logprob: -18.625
    6. '	j' → logprob: -19.125
    7. '$j' → logprob: -19.125
    8. 'i' → logprob: -19.875
    9. '[j' → logprob: -20.125
    10. '][' → logprob: -20.25

Token 1779: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.005368222016841173
    2. '=' → logprob: -5.255368232727051
    3. ']' → logprob: -9.00536823272705
    4. ']+=' → logprob: -12.13036823272705
    5. ']=(' → logprob: -12.63036823272705
    6. ']='' → logprob: -13.50536823272705
    7. ')=' → logprob: -14.88036823272705
    8. ']=-' → logprob: -15.38036823272705
    9. '[' → logprob: -15.50536823272705
    10. ']="' → logprob: -16.005367279052734

Token 1780: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.320199877838604e-07
    2. ' dist' → logprob: -14.75
    3. '(dist' → logprob: -23.625
    4. '	dist' → logprob: -25.5
    5. '.dist' → logprob: -26.5
    6. '_dist' → logprob: -27.5
    7. 'Dist' → logprob: -27.875
    8. 'dict' → logprob: -28.25
    9. 'diff' → logprob: -28.375
    10. 'dest' → logprob: -28.625

Token 1781: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0015128388768061996
    2. '_p' → logprob: -6.5015130043029785
    3. 'min' → logprob: -11.87651252746582
    4. 'p' → logprob: -13.62651252746582
    5. '_max' → logprob: -14.12651252746582
    6. 'Min' → logprob: -14.87651252746582
    7. '[p' → logprob: -15.25151252746582
    8. '[min' → logprob: -15.62651252746582
    9. '_dist' → logprob: -15.62651252746582
    10. '[i' → logprob: -15.87651252746582

Token 1782: '_between' (ID: 124874)
  Prédit: '_between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -2.45848218582978e-06
    2. '_p' → logprob: -13.50000286102295
    3. '_product' → logprob: -14.50000286102295
    4. '_start' → logprob: -14.75000286102295
    5. 'Between' → logprob: -16.750001907348633
    6. '_from' → logprob: -18.375001907348633
    7. 'between' → logprob: -18.750001907348633
    8. '_min' → logprob: -19.000001907348633
    9. '_to' → logprob: -19.500001907348633
    10. ' between' → logprob: -20.625001907348633

Token 1783: '_products' (ID: 68048)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.5980875492095947
    2. '_products' → logprob: -0.8480875492095947
    3. 'p' → logprob: -3.8480875492095947
    4. 'i' → logprob: -8.473087310791016
    5. '_p' → logprob: -8.848087310791016
    6. '(i' → logprob: -9.598087310791016
    7. 'product' → logprob: -10.223087310791016
    8. '-products' → logprob: -10.348087310791016
    9. 's' → logprob: -10.598087310791016
    10. 'Products' → logprob: -11.098087310791016

Token 1784: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.531315314830863e-06
    2. 'i' → logprob: -13.250003814697266
    3. '[i' → logprob: -13.875003814697266
    4. '(' → logprob: -14.625003814697266
    5. '(j' → logprob: -15.375003814697266
    6. ' (' → logprob: -16.750003814697266
    7. '(
' → logprob: -17.750003814697266
    8. '(p' → logprob: -18.000003814697266
    9. '(ii' → logprob: -18.750003814697266
    10. '```' → logprob: -19.375003814697266

Token 1785: ',j' (ID: 22712)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.4600064158439636
    2. ')' → logprob: -1.3350064754486084
    3. '][' → logprob: -2.5850064754486084
    4. '[j' → logprob: -3.5850064754486084
    5. ')+' → logprob: -7.710006237030029
    6. '[' → logprob: -7.710006237030029
    7. '])' → logprob: -7.710006237030029
    8. ')][' → logprob: -7.960006237030029
    9. ']' → logprob: -8.585006713867188
    10. '+' → logprob: -8.835006713867188

Token 1786: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011353354202583432
    2. '<|end|>' → logprob: -6.876135349273682
    3. ']' → logprob: -9.751134872436523
    4. '<|end|>' → logprob: -11.626134872436523
    5. ')
' → logprob: -11.751134872436523
    6. '[' → logprob: -11.876134872436523
    7. ')return' → logprob: -12.126134872436523
    8. '               ' → logprob: -12.876134872436523
    9. '])' → logprob: -13.001134872436523
    10. ' )' → logprob: -13.251134872436523

Token 1787: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3405579924583435
    2. 'dp' → logprob: -1.5905580520629883
    3. 'mask' → logprob: -3.2155580520629883
    4. 'for' → logprob: -4.715558052062988
    5. 'import' → logprob: -5.090558052062988
    6. '#' → logprob: -5.340558052062988
    7. '   ' → logprob: -5.340558052062988
    8. '```' → logprob: -5.465558052062988
    9. 'from' → logprob: -6.090558052062988
    10. 'purchase' → logprob: -6.465558052062988

Token 1788: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02662304788827896
    2. 'INF' → logprob: -4.651623249053955
    3. 'import' → logprob: -5.526623249053955
    4. '       ' → logprob: -5.526623249053955
    5. '   ' → logprob: -5.651623249053955
    6. 'from' → logprob: -6.151623249053955
    7. 'DP' → logprob: -6.901623249053955
    8. 'visited' → logprob: -7.651623249053955
    9. '#' (adapté à ' #') → logprob: -8.026622772216797
    10. 'dist' → logprob: -8.151622772216797

Token 1789: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1422327756881714
    2. '#' → logprob: -2.392232894897461
    3. 'import' → logprob: -4.767232894897461
    4. 'from' → logprob: -4.892232894897461
    5. 'dist' → logprob: -4.892232894897461
    6. 'INF' → logprob: -5.017232894897461
    7. '   ' → logprob: -5.767232894897461
    8. 'DP' → logprob: -6.267232894897461
    9. 'inf' → logprob: -6.517232894897461
    10. 'mask' → logprob: -7.267232894897461

Token 1790: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0019452953711152077
    2. 'size' → logprob: -7.126945495605469
    3. '
' → logprob: -7.751945495605469
    4. 'DP' → logprob: -8.501945495605469
    5. 'from' → logprob: -8.626945495605469
    6. '   ' → logprob: -9.001945495605469
    7. 'INF' → logprob: -9.126945495605469
    8. ' dp' → logprob: -10.001945495605469
    9. 'import' → logprob: -11.376945495605469
    10. 'SIZE' → logprob: -11.501945495605469

Token 1791: ' bit' (ID: 3546)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.286863774061203
    2. 'mask' → logprob: -1.9118638038635254
    3. 'dp' → logprob: -3.4118638038635254
    4. 'subset' → logprob: -3.9118638038635254
    5. 'state' → logprob: -4.161863803863525
    6. ' (' → logprob: -4.411863803863525
    7. '1' → logprob: -5.911863803863525
    8. 'bit' → logprob: -6.161863803863525
    9. 'i' → logprob: -6.161863803863525
    10. ' state' → logprob: -6.536863803863525

Token 1792: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.028592342510819435
    2. 'm' → logprob: -4.278592109680176
    3. 'size' → logprob: -5.278592109680176
    4. ' =' → logprob: -5.528592109680176
    5. 's' → logprob: -6.403592109680176
    6. '_mask' → logprob: -7.278592109680176
    7. '=' → logprob: -7.403592109680176
    8. '```' → logprob: -7.403592109680176
    9. 'MASK' → logprob: -7.778592109680176
    10. '
' → logprob: -7.903592109680176

Token 1793: ' picking' (ID: 30859)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19469717144966125
    2. ' dp' → logprob: -1.8196971416473389
    3. '   ' → logprob: -4.444697380065918
    4. ' size' → logprob: -6.194697380065918
    5. 'size' → logprob: -7.569697380065918
    6. 'DP' → logprob: -9.194697380065918
    7. '
' → logprob: -9.444697380065918
    8. 'INF' → logprob: -9.444697380065918
    9. ' DP' → logprob: -9.569697380065918
    10. '       ' → logprob: -9.694697380065918

Token 1794: ' products' (ID: 3891)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03000039793550968
    2. ' dp' → logprob: -3.7800004482269287
    3. '       ' → logprob: -5.90500020980835
    4. '   ' → logprob: -6.03000020980835
    5. ' size' → logprob: -7.40500020980835
    6. 'DP' → logprob: -7.78000020980835
    7. 'size' → logprob: -8.030000686645508
    8. 'INF' → logprob: -9.405000686645508
    9. '
' → logprob: -9.655000686645508
    10. ' DP' → logprob: -10.155000686645508

Token 1795: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1338047832250595
    2. ' dp' → logprob: -2.2588047981262207
    3. '
' → logprob: -4.383804798126221
    4. '       ' → logprob: -5.883804798126221
    5. '   ' → logprob: -6.133804798126221
    6. 'DP' → logprob: -7.133804798126221
    7. ' DP' → logprob: -7.633804798126221
    8. '```' → logprob: -7.633804798126221
    9. '_dp' → logprob: -8.008804321289062
    10. '(dp' → logprob: -8.133804321289062

Token 1796: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3629343807697296
    2. 'dp' → logprob: -1.3629343509674072
    3. ' dp' → logprob: -3.1129343509674072
    4. '   ' → logprob: -5.862934589385986
    5. '
' → logprob: -7.362934589385986
    6. 'DP' → logprob: -9.112934112548828
    7. '	dp' → logprob: -9.487934112548828
    8. ' DP' → logprob: -9.987934112548828
    9. ' size' → logprob: -10.112934112548828
    10. 'size' → logprob: -10.112934112548828

Token 1797: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.052027199417352676
    2. 'INF' → logprob: -3.1770272254943848
    3. '   ' → logprob: -5.302027225494385
    4. 'DP' → logprob: -6.177027225494385
    5. 'from' → logprob: -7.052027225494385
    6. ' dp' → logprob: -7.302027225494385
    7. 'import' → logprob: -9.052026748657227
    8. ' INF' → logprob: -9.427026748657227
    9. 'MAX' → logprob: -9.927026748657227
    10. 'size' → logprob: -10.427026748657227

Token 1798: ' state' (ID: 2608)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.017508812248706818
    2. 'INF' → logprob: -4.2675089836120605
    3. 'DP' → logprob: -6.3925089836120605
    4. 'from' → logprob: -6.5175089836120605
    5. '   ' → logprob: -9.142508506774902
    6. 'import' → logprob: -10.392508506774902
    7. 'MAX' → logprob: -10.892508506774902
    8. 'size' → logprob: -11.392508506774902
    9. 'max' → logprob: -12.392508506774902
    10. 'inf' → logprob: -12.517508506774902

Token 1799: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15365715324878693
    2. '=' → logprob: -2.5286571979522705
    3. 'dp' → logprob: -4.278656959533691
    4. ' dp' → logprob: -4.528656959533691
    5. 'size' → logprob: -4.528656959533691
    6. '_size' → logprob: -4.903656959533691
    7. ' size' → logprob: -5.153656959533691
    8. 's' → logprob: -5.653656959533691
    9. '_dp' → logprob: -6.153656959533691
    10. '=[' → logprob: -6.403656959533691

Token 1800: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7554584741592407
    2. 'mask' → logprob: -1.5054584741592407
    3. ' dp' → logprob: -1.6304584741592407
    4. '(' → logprob: -3.130458354949951
    5. ' (' → logprob: -3.880458354949951
    6. ' mask' → logprob: -4.005458354949951
    7. '   ' → logprob: -5.130458354949951
    8. '(mask' → logprob: -5.380458354949951
    9. '(dp' → logprob: -5.505458354949951
    10. '0' → logprob: -6.755458354949951

Token 1801: '[' (ID: 58)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.24720171093940735
    2. ' =' → logprob: -1.747201681137085
    3. '=[[' → logprob: -3.747201681137085
    4. '=' → logprob: -3.997201681137085
    5. '={}' → logprob: -6.747201919555664
    6. 'size' → logprob: -7.122201919555664
    7. ' =[' → logprob: -8.247201919555664
    8. '={' → logprob: -8.497201919555664
    9. '_size' → logprob: -9.622201919555664
    10. '[' → logprob: -9.872201919555664

Token 1802: 'mask' (ID: 22527)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03752274811267853
    2. '1' → logprob: -3.412522792816162
    3. '][' → logprob: -6.412522792816162
    4. '
' → logprob: -7.412522792816162
    5. '(n' → logprob: -7.787522792816162
    6. ']' → logprob: -8.037522315979004
    7. 'mask' → logprob: -8.037522315979004
    8. ' (' → logprob: -8.287522315979004
    9. 'n' → logprob: -8.662522315979004
    10. '[' → logprob: -10.037522315979004

Token 1803: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6593869924545288
    2. ']={' → logprob: -1.7843869924545288
    3. ']=' → logprob: -1.9093869924545288
    4. ']' → logprob: -2.1593871116638184
    5. '=[' → logprob: -3.1593871116638184
    6. '=' → logprob: -5.784387111663818
    7. ' =' → logprob: -6.034387111663818
    8. ']=(' → logprob: -6.784387111663818
    9. '=[[' → logprob: -7.409387111663818
    10. '={}' → logprob: -7.659387111663818

Token 1804: 'last' (ID: 6684)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7137370705604553
    2. 'i' → logprob: -0.8387370705604553
    3. 'last' → logprob: -2.9637370109558105
    4. 'p' → logprob: -4.5887370109558105
    5. 'k' → logprob: -4.9637370109558105
    6. 'u' → logprob: -5.5887370109558105
    7. 'j' → logprob: -6.8387370109558105
    8. 'v' → logprob: -7.0887370109558105
    9. 'idx' → logprob: -7.3387370109558105
    10. ' pos' → logprob: -8.088737487792969

Token 1805: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5172269940376282
    2. '_i' → logprob: -1.6422269344329834
    3. '][' → logprob: -2.3922269344329834
    4. ']=' → logprob: -2.6422269344329834
    5. ']_' → logprob: -4.0172271728515625
    6. '_idx' → logprob: -4.1422271728515625
    7. '_product' → logprob: -5.1422271728515625
    8. 'i' → logprob: -5.3922271728515625
    9. '_pos' → logprob: -7.2672271728515625
    10. '_p' → logprob: -7.6422271728515625

Token 1806: ' minimal' (ID: 19957)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01669812761247158
    2. ' [' → logprob: -4.516698360443115
    3. '0' → logprob: -5.891698360443115
    4. '=' → logprob: -7.391698360443115
    5. ' =' → logprob: -7.391698360443115
    6. '10' → logprob: -7.891698360443115
    7. '[n' → logprob: -8.266697883605957
    8. '[-' → logprob: -8.391697883605957
    9. '=[' → logprob: -9.016697883605957
    10. '[i' → logprob: -9.391697883605957

Token 1807: ' time' (ID: 1058)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.9198594689369202
    2. '_time' → logprob: -1.4198594093322754
    3. '_' → logprob: -1.6698594093322754
    4. '[' → logprob: -3.2948594093322754
    5. ' _' → logprob: -3.2948594093322754
    6. 'cost' → logprob: -3.6698594093322754
    7. '_distance' → logprob: -3.6698594093322754
    8. ' =' → logprob: -4.544859409332275
    9. ' cost' → logprob: -4.794859409332275
    10. '_dist' → logprob: -5.169859409332275

Token 1808: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0721749067306519
    2. '=[' → logprob: -1.1971749067306519
    3. '=' → logprob: -1.3221749067306519
    4. ']' → logprob: -3.3221750259399414
    5. ']=' → logprob: -4.572175025939941
    6. '[' → logprob: -5.572175025939941
    7. '   ' → logprob: -5.572175025939941
    8. ' =[' → logprob: -5.572175025939941
    9. '=[[' → logprob: -5.697175025939941
    10. '=[
' → logprob: -5.822175025939941

Token 1809: ' have' (ID: 679)
  Prédit: 'pick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pick' → logprob: -0.028307080268859863
    2. 'reach' → logprob: -4.77830696105957
    3. 'purchase' → logprob: -4.77830696105957
    4. 'buy' → logprob: -5.27830696105957
    5. 'have' → logprob: -6.52830696105957
    6. 'finish' → logprob: -6.52830696105957
    7. ' pick' → logprob: -7.02830696105957
    8. 'get' → logprob: -7.02830696105957
    9. 'complete' → logprob: -8.15330696105957
    10. 'arr' → logprob: -8.52830696105957

Token 1810: ' picked' (ID: 19148)
  Prédit: 'pick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pick' → logprob: -0.953931450843811
    2. ' pick' → logprob: -1.328931450843811
    3. 'picked' → logprob: -1.453931450843811
    4. 'p' → logprob: -3.2039313316345215
    5. 'buy' → logprob: -4.3289313316345215
    6. '   ' → logprob: -4.5789313316345215
    7. '```' → logprob: -4.8289313316345215
    8. 'get' → logprob: -5.0789313316345215
    9. ' ' → logprob: -5.3289313316345215
    10. 'purchase' → logprob: -5.7039313316345215

Token 1811: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5004211068153381
    2. 'mask' → logprob: -1.1254210472106934
    3. '_mask' → logprob: -3.7504210472106934
    4. ' mask' → logprob: -4.875421047210693
    5. '```' → logprob: -5.125421047210693
    6. '   ' → logprob: -5.125421047210693
    7. '(mask' → logprob: -5.250421047210693
    8. '_' → logprob: -5.500421047210693
    9. '
' → logprob: -6.375421047210693
    10. ' (' → logprob: -6.375421047210693

Token 1812: ' mask' (ID: 10910)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06983738392591476
    2. '][' → logprob: -3.8198373317718506
    3. 'mask' → logprob: -4.94483757019043
    4. '_mask' → logprob: -5.19483757019043
    5. '   ' → logprob: -5.56983757019043
    6. '```' → logprob: -5.56983757019043
    7. '_' → logprob: -5.69483757019043
    8. '(mask' → logprob: -5.81983757019043
    9. 'of' → logprob: -5.94483757019043
    10. '_of' → logprob: -6.06983757019043

Token 1813: ' with' (ID: 483)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0988843441009521
    2. ']' → logprob: -1.5988843441009521
    3. '][' → logprob: -1.5988843441009521
    4. '[' → logprob: -1.8488843441009521
    5. ']=' → logprob: -3.348884344100952
    6. '=[' → logprob: -3.848884344100952
    7. ' =' → logprob: -3.848884344100952
    8. '```' → logprob: -5.098884582519531
    9. '_' → logprob: -5.348884582519531
    10. '=[]' → logprob: -6.348884582519531

Token 1814: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.10050242394208908
    2. ' last' → logprob: -2.3505024909973145
    3. '[last' → logprob: -9.100502014160156
    4. '
' → logprob: -9.850502014160156
    5. 'time' → logprob: -10.225502014160156
    6. ' ' → logprob: -11.225502014160156
    7. '_last' → logprob: -11.350502014160156
    8. '[' → logprob: -11.475502014160156
    9. '`' → logprob: -11.600502014160156
    10. ' 
' → logprob: -11.975502014160156

Token 1815: ' picked' (ID: 19148)
  Prédit: '_product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_product' → logprob: -1.2921690940856934
    2. '][' → logprob: -1.4171690940856934
    3. ']' → logprob: -1.5421690940856934
    4. '_' → logprob: -2.0421690940856934
    5. ']_' → logprob: -2.6671690940856934
    6. '[' → logprob: -4.542169094085693
    7. '=' → logprob: -4.542169094085693
    8. '][_' → logprob: -4.917169094085693
    9. '```' → logprob: -5.167169094085693
    10. ' =' → logprob: -5.292169094085693

Token 1816: ' product' (ID: 1888)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0480635166168213
    2. '_product' → logprob: -1.0480635166168213
    3. ']' → logprob: -2.1730635166168213
    4. '][' → logprob: -2.6730635166168213
    5. ']_' → logprob: -3.6730635166168213
    6. '_idx' → logprob: -4.548063278198242
    7. '```' → logprob: -4.673063278198242
    8. ' =' → logprob: -4.798063278198242
    9. '=' → logprob: -5.048063278198242
    10. 'product' → logprob: -5.298063278198242

Token 1817: ' last' (ID: 2174)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6874727606773376
    2. '=' → logprob: -1.0624728202819824
    3. ']' → logprob: -2.9374728202819824
    4. ']=' → logprob: -3.5624728202819824
    5. '   ' → logprob: -4.062472820281982
    6. '=
' → logprob: -4.687472820281982
    7. '=[' → logprob: -4.812472820281982
    8. '[' → logprob: -5.187472820281982
    9. '```' → logprob: -5.437472820281982
    10. '][' → logprob: -5.562472820281982

Token 1818: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0302592515945435
    2. ' =' → logprob: -1.0302592515945435
    3. '=
' → logprob: -2.405259132385254
    4. ']' → logprob: -2.655259132385254
    5. '   ' → logprob: -3.030259132385254
    6. ']=' → logprob: -3.155259132385254
    7. '=[]
' → logprob: -4.780259132385254
    8. '=[' → logprob: -5.155259132385254
    9. ' =
' → logprob: -5.280259132385254
    10. '
' → logprob: -5.530259132385254

Token 1819: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2011865377426147
    2. ' dp' → logprob: -1.3261865377426147
    3. '       ' → logprob: -1.4511865377426147
    4. 'dp' → logprob: -1.9511865377426147
    5. ' =' → logprob: -3.7011866569519043
    6. '
' → logprob: -4.701186656951904
    7. '```' → logprob: -5.201186656951904
    8. ']' → logprob: -5.701186656951904
    9. '=' → logprob: -5.951186656951904
    10. '	dp' → logprob: -6.076186656951904

Token 1820: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2164995670318604
    2. ' dp' → logprob: -1.4664995670318604
    3. '   ' → logprob: -1.7164995670318604
    4. '	dp' → logprob: -1.8414995670318604
    5. 'dp' → logprob: -2.4664995670318604
    6. '	' → logprob: -4.091499328613281
    7. '
' → logprob: -4.216499328613281
    8. '```' → logprob: -4.966499328613281
    9. '\t' → logprob: -5.716499328613281
    10. '	d' → logprob: -6.966499328613281

Token 1821: ' store' (ID: 4897)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06277945637702942
    2. '       ' → logprob: -3.437779426574707
    3. '   ' → logprob: -3.687779426574707
    4. ' dp' → logprob: -5.687779426574707
    5. '
' → logprob: -9.187779426574707
    6. '```' → logprob: -9.562779426574707
    7. '	dp' → logprob: -10.437779426574707
    8. 'import' → logprob: -10.437779426574707
    9. '           ' → logprob: -10.562779426574707
    10. 'for' → logprob: -11.687779426574707

Token 1822: ' time' (ID: 1058)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09264378249645233
    2. '[' → logprob: -3.9676437377929688
    3. '[[' → logprob: -4.092643737792969
    4. ' dp' → logprob: -4.217643737792969
    5. ' =' → logprob: -4.467643737792969
    6. '```' → logprob: -4.592643737792969
    7. '
' → logprob: -5.217643737792969
    8. '=' → logprob: -6.092643737792969
    9. '   ' → logprob: -6.217643737792969
    10. 'import' → logprob: -6.467643737792969

Token 1823: ' as' (ID: 472)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.8566285967826843
    2. ' =' → logprob: -0.9816285967826843
    3. '=' → logprob: -2.356628656387329
    4. '=[[' → logprob: -2.481628656387329
    5. '=[]
' → logprob: -5.35662841796875
    6. '   ' → logprob: -5.35662841796875
    7. '=[]' → logprob: -5.48162841796875
    8. '=
' → logprob: -6.35662841796875
    9. '=[
' → logprob: -6.60662841796875
    10. 's' → logprob: -6.73162841796875

Token 1824: ' minimum' (ID: 11085)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.07046951353549957
    2. '10' → logprob: -3.070469617843628
    3. '[' → logprob: -4.445469379425049
    4. 'float' → logprob: -5.320469379425049
    5. ' [[' → logprob: -6.695469379425049
    6. 'int' → logprob: -6.695469379425049
    7. '[
' → logprob: -6.945469379425049
    8. 'inf' → logprob: -7.695469379425049
    9. 'dist' → logprob: -8.445469856262207
    10. 'time' → logprob: -8.570469856262207

Token 1825: ' arrival' (ID: 24861)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5938171148300171
    2. '_' → logprob: -1.843817114830017
    3. '=' → logprob: -2.3438172340393066
    4. ' =' → logprob: -2.7188172340393066
    5. '[
' → logprob: -3.0938172340393066
    6. ' ' → logprob: -3.9688172340393066
    7. '```' → logprob: -4.968817234039307
    8. 'dp' → logprob: -5.218817234039307
    9. '\' → logprob: -5.218817234039307
    10. ']' → logprob: -5.343817234039307

Token 1826: ' time' (ID: 1058)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1449766159057617
    2. '_time' → logprob: -1.3949766159057617
    3. '[' → logprob: -1.6449766159057617
    4. '[
' → logprob: -2.0199766159057617
    5. ']' → logprob: -3.3949766159057617
    6. '=' → logprob: -3.8949766159057617
    7. 'time' → logprob: -4.269976615905762
    8. 's' → logprob: -5.019976615905762
    9. '_times' → logprob: -5.394976615905762
    10. '[_' → logprob: -5.644976615905762

Token 1827: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9740200638771057
    2. ' =' → logprob: -1.849020004272461
    3. '[' → logprob: -1.974020004272461
    4. '   ' → logprob: -2.349020004272461
    5. '       ' → logprob: -2.974020004272461
    6. ']' → logprob: -3.099020004272461
    7. ' ' → logprob: -4.224020004272461
    8. ',' → logprob: -4.349020004272461
    9. '\t' → logprob: -4.349020004272461
    10. '[
' → logprob: -4.349020004272461

Token 1828: ' product' (ID: 1888)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32466262578964233
    2. '[' → logprob: -2.449662685394287
    3. 'mask' → logprob: -3.449662685394287
    4. '][' → logprob: -3.574662685394287
    5. 'dist' → logprob: -3.574662685394287
    6. 'last' → logprob: -3.574662685394287
    7. ' shelf' → logprob: -4.199662685394287
    8. ']' → logprob: -4.449662685394287
    9. ' dp' → logprob: -4.699662685394287
    10. 's' → logprob: -4.824662685394287

Token 1829: ' last' (ID: 2174)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4820126295089722
    2. '   ' → logprob: -1.7320126295089722
    3. ']' → logprob: -2.1070127487182617
    4. ' =' → logprob: -2.3570127487182617
    5. '[
' → logprob: -2.3570127487182617
    6. '```' → logprob: -2.4820127487182617
    7. '=' → logprob: -2.8570127487182617
    8. ',' → logprob: -3.7320127487182617
    9. '_' → logprob: -3.7320127487182617
    10. '       ' → logprob: -4.607012748718262

Token 1830: ' product' (ID: 1888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47060665488243103
    2. '   ' → logprob: -1.4706066846847534
    3. '	dp' → logprob: -2.470606565475464
    4. '
' → logprob: -3.470606565475464
    5. '	' → logprob: -4.595606803894043
    6. 'dp' → logprob: -4.845606803894043
    7. ' dp' → logprob: -5.095606803894043
    8. '\t' → logprob: -6.595606803894043
    9. 'import' → logprob: -6.970606803894043
    10. '```' → logprob: -7.345606803894043

Token 1831: ''s' (ID: 885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21316738426685333
    2. '   ' → logprob: -2.338167428970337
    3. ' =' → logprob: -3.088167428970337
    4. '
' → logprob: -3.713167428970337
    5. '           ' → logprob: -5.338167190551758
    6. '	' → logprob: -5.963167190551758
    7. '	dp' → logprob: -6.338167190551758
    8. '=' → logprob: -6.463167190551758
    9. ' dp' → logprob: -6.463167190551758
    10. '```' → logprob: -6.588167190551758

Token 1832: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15664997696876526
    2. ' shelf' → logprob: -2.6566500663757324
    3. 'ais' → logprob: -3.9066500663757324
    4. 'cell' → logprob: -4.406650066375732
    5. 'position' → logprob: -4.906650066375732
    6. 'location' → logprob: -5.031650066375732
    7. '```' → logprob: -5.031650066375732
    8. 'adj' → logprob: -5.281650066375732
    9. '[]' → logprob: -5.906650066375732
    10. ']' → logprob: -6.531650066375732

Token 1833: ' aisle' (ID: 99887)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4677282571792603
    2. ' =' → logprob: -1.8427282571792603
    3. '=' → logprob: -1.9677282571792603
    4. '   ' → logprob: -2.4677281379699707
    5. '       ' → logprob: -2.4677281379699707
    6. '[
' → logprob: -2.9677281379699707
    7. ']' → logprob: -3.0927281379699707
    8. '```' → logprob: -3.2177281379699707
    9. '<|end|>' → logprob: -3.4677281379699707
    10. '
' → logprob: -3.8427281379699707

Token 1834: ' adjacency' (ID: 177015)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7634962201118469
    2. '       ' → logprob: -1.0134961605072021
    3. '
' → logprob: -2.763496160507202
    4. ' dp' → logprob: -3.263496160507202
    5. '	dp' → logprob: -3.638496160507202
    6. 'dp' → logprob: -4.388496398925781
    7. ' =' → logprob: -5.138496398925781
    8. '```' → logprob: -5.263496398925781
    9. '	' → logprob: -5.388496398925781
    10. '\t' → logprob: -5.763496398925781

Token 1835: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05648157000541687
    2. '   ' → logprob: -3.1814815998077393
    3. 'dp' → logprob: -4.93148136138916
    4. ' dp' → logprob: -5.80648136138916
    5. '
' → logprob: -6.18148136138916
    6. '	dp' → logprob: -8.30648136138916
    7. '           ' → logprob: -8.30648136138916
    8. '	' → logprob: -8.80648136138916
    9. 'import' → logprob: -8.80648136138916
    10. '```' → logprob: -9.18148136138916

Token 1836: 'ar' (ID: 277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023151729255914688
    2. ' )' → logprob: -4.648151874542236
    3. '])' → logprob: -5.523151874542236
    4. ')])' → logprob: -6.023151874542236
    5. ']' → logprob: -6.273151874542236
    6. ')]' → logprob: -6.523151874542236
    7. '[' → logprob: -7.523151874542236
    8. '   ' → logprob: -7.773151874542236
    9. ')
' → logprob: -8.023151397705078
    10. ',' → logprob: -8.148151397705078

Token 1837: 'bitrary' (ID: 183229)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.1928003813372925e-05
    2. 'ray' → logprob: -10.625051498413086
    3. '[r' → logprob: -12.000051498413086
    4. ']' → logprob: -12.625051498413086
    5. '[
' → logprob: -12.625051498413086
    6. '[' → logprob: -12.750051498413086
    7. '```' → logprob: -12.750051498413086
    8. '=' → logprob: -13.250051498413086
    9. ')' → logprob: -13.625051498413086
    10. 'range' → logprob: -13.750051498413086

Token 1838: ' adjacency' (ID: 177015)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1332547813653946
    2. '[' → logprob: -3.2582547664642334
    3. 'position' → logprob: -3.8832547664642334
    4. '```' → logprob: -4.3832550048828125
    5. ',' → logprob: -4.6332550048828125
    6. ')_' → logprob: -4.7582550048828125
    7. '_' → logprob: -5.3832550048828125
    8. 'cell' → logprob: -5.3832550048828125
    9. 'token' → logprob: -6.1332550048828125
    10. ']' → logprob: -6.1332550048828125

Token 1839: ' with' (ID: 483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07797002792358398
    2. '```' → logprob: -4.202970027923584
    3. '[' → logprob: -4.577970027923584
    4. ']' → logprob: -4.952970027923584
    5. ')_' → logprob: -5.077970027923584
    6. '_' → logprob: -5.202970027923584
    7. ')[' → logprob: -5.202970027923584
    8. ',' → logprob: -5.702970027923584
    9. '][' → logprob: -5.702970027923584
    10. '])' → logprob: -6.452970027923584

Token 1840: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.5252200961112976
    2. 'dist' → logprob: -2.4002201557159424
    3. 'lowest' → logprob: -2.5252201557159424
    4. 'minimum' → logprob: -2.7752201557159424
    5. 'min' → logprob: -2.9002201557159424
    6. ' minimal' → logprob: -3.1502201557159424
    7. 'the' → logprob: -3.7752201557159424
    8. 'adj' → logprob: -5.025219917297363
    9. 'best' → logprob: -5.275219917297363
    10. 'distance' → logprob: -5.400219917297363

Token 1841: ' arrival' (ID: 24861)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.1714041233062744
    2. 'dist' → logprob: -1.5464041233062744
    3. '_distance' → logprob: -1.9214041233062744
    4. '_' → logprob: -2.1714041233062744
    5. 'distance' → logprob: -2.7964041233062744
    6. ' _' → logprob: -2.7964041233062744
    7. ' distance' → logprob: -4.046403884887695
    8. '_d' → logprob: -4.296403884887695
    9. '_cost' → logprob: -4.421403884887695
    10. ' dist' → logprob: -4.921403884887695

Token 1842: ')
' (ID: 446)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.6690348982810974
    2. '_' → logprob: -0.9190348982810974
    3. 'time' → logprob: -3.419034957885742
    4. ' time' → logprob: -3.419034957885742
    5. ')' → logprob: -4.669034957885742
    6. ' _' → logprob: -5.294034957885742
    7. ']' → logprob: -6.169034957885742
    8. '_t' → logprob: -6.794034957885742
    9. ')_' → logprob: -6.794034957885742
    10. ']_' → logprob: -7.294034957885742

Token 1843: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03485732153058052
    2. '   ' → logprob: -4.284857273101807
    3. ' dp' → logprob: -4.409857273101807
    4. '	' → logprob: -5.909857273101807
    5. '	dp' → logprob: -5.909857273101807
    6. '
' → logprob: -7.034857273101807
    7. 'dp' → logprob: -7.659857273101807
    8. '           ' → logprob: -8.159857749938965
    9. '```' → logprob: -8.284857749938965
    10. '    ' → logprob: -9.284857749938965

Token 1844: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07888714224100113
    2. '   ' → logprob: -3.3288872241973877
    3. '	' → logprob: -4.703886985778809
    4. '           ' → logprob: -5.328886985778809
    5. '[' → logprob: -5.578886985778809
    6. '
' → logprob: -5.703886985778809
    7. ' ' → logprob: -5.953886985778809
    8. ' dp' → logprob: -5.953886985778809
    9. ' 
' → logprob: -6.453886985778809
    10. '\' → logprob: -6.578886985778809

Token 1845: ' initial' (ID: 4871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46179404854774475
    2. '	dp' → logprob: -1.5867940187454224
    3. '   ' → logprob: -2.461794137954712
    4. '	' → logprob: -3.211794137954712
    5. ' dp' → logprob: -3.961794137954712
    6. 'dp' → logprob: -4.336793899536133
    7. '
' → logprob: -5.586793899536133
    8. '\t' → logprob: -7.586793899536133
    9. '	d' → logprob: -7.711793899536133
    10. '	tab' → logprob: -7.961793899536133

Token 1846: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0793607234954834
    2. '=' → logprob: -1.4543607234954834
    3. 'dp' → logprob: -1.7043607234954834
    4. '   ' → logprob: -1.8293607234954834
    5. '_dp' → logprob: -3.3293607234954834
    6. '
' → logprob: -4.3293609619140625
    7. '```' → logprob: -5.2043609619140625
    8. '_' → logprob: -5.4543609619140625
    9. '	dp' → logprob: -5.8293609619140625
    10. '=
' → logprob: -6.0793609619140625

Token 1847: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.038759175688028336
    2. '0' → logprob: -3.913759231567383
    3. 'dist' → logprob: -4.538759231567383
    4. '-' → logprob: -5.788759231567383
    5. 'range' → logprob: -6.413759231567383
    6. ' start' → logprob: -7.163759231567383
    7. 'point' → logprob: -7.538759231567383
    8. ' ' → logprob: -8.663759231567383
    9. 'dp' → logprob: -8.788759231567383
    10. '[start' → logprob: -9.038759231567383

Token 1848: ' to' (ID: 316)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0460678339004517
    2. '
' → logprob: -1.1710678339004517
    3. '	dp' → logprob: -1.7960678339004517
    4. ' dp' → logprob: -2.296067714691162
    5. '   ' → logprob: -2.796067714691162
    6. '       ' → logprob: -5.546067714691162
    7. '```' → logprob: -5.671067714691162
    8. '_dp' → logprob: -7.046067714691162
    9. ' =' → logprob: -7.296067714691162
    10. '    
' → logprob: -8.17106819152832

Token 1849: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.4265534579753876
    2. 'i' → logprob: -1.67655348777771
    3. 'last' → logprob: -2.30155348777771
    4. 'all' → logprob: -4.051553249359131
    5. '[i' → logprob: -4.801553249359131
    6. 'products' → logprob: -5.176553249359131
    7. '[' → logprob: -5.301553249359131
    8. 'each' → logprob: -5.426553249359131
    9. 'range' → logprob: -5.551553249359131
    10. 'mask' → logprob: -5.676553249359131

Token 1850: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5979862213134766
    2. ' =' → logprob: -1.7229862213134766
    3. '```' → logprob: -1.8479862213134766
    4. '[' → logprob: -1.9729862213134766
    5. '       ' → logprob: -2.0979862213134766
    6. '=' → logprob: -2.8479862213134766
    7. '
' → logprob: -2.9729862213134766
    8. '_' → logprob: -4.097986221313477
    9. '[
' → logprob: -4.472986221313477
    10. '`' → logprob: -5.097986221313477

Token 1851: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5187390446662903
    2. 'dp' → logprob: -1.8937389850616455
    3. '	dp' → logprob: -2.2687389850616455
    4. ' dp' → logprob: -2.3937389850616455
    5. '
' → logprob: -3.3937389850616455
    6. '   ' → logprob: -3.8937389850616455
    7. '```' → logprob: -6.518739223480225
    8. '	' → logprob: -6.518739223480225
    9. '(dp' → logprob: -6.893739223480225
    10. '_dp' → logprob: -8.143738746643066

Token 1852: ' dist' (ID: 3601)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7733340859413147
    2. 'dist' → logprob: -1.14833402633667
    3. '0' → logprob: -1.77333402633667
    4. 's' → logprob: -4.89833402633667
    5. 'time' → logprob: -5.02333402633667
    6. 'product' → logprob: -5.27333402633667
    7. ' i' → logprob: -5.39833402633667
    8. '[i' → logprob: -5.39833402633667
    9. ' dist' → logprob: -5.77333402633667
    10. 'idx' → logprob: -5.89833402633667

Token 1853: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.08058910071849823
    2. '_' → logprob: -2.9555890560150146
    3. '_from' → logprob: -3.8305890560150146
    4. '_
' → logprob: -7.330589294433594
    5. '_min' → logprob: -7.580589294433594
    6. '_p' → logprob: -7.580589294433594
    7. 't' → logprob: -7.580589294433594
    8. '_s' → logprob: -8.830589294433594
    9. 'from' → logprob: -8.955589294433594
    10. '_for' → logprob: -9.330589294433594

Token 1854: '[i' (ID: 1768)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6370338797569275
    2. 'dp' → logprob: -1.6370339393615723
    3. '       ' → logprob: -2.0120339393615723
    4. '   ' → logprob: -2.5120339393615723
    5. ' dp' → logprob: -3.2620339393615723
    6. '	dp' → logprob: -5.387033939361572
    7. '_dp' → logprob: -5.387033939361572
    8. '```' → logprob: -5.387033939361572
    9. '(dp' → logprob: -6.387033939361572
    10. ' =' → logprob: -6.637033939361572

Token 1855: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05288996174931526
    2. ' ]' → logprob: -4.052889823913574
    3. '][' → logprob: -4.427889823913574
    4. ']+' → logprob: -4.802889823913574
    5. ')]' → logprob: -5.802889823913574
    6. '])' → logprob: -6.177889823913574
    7. '+' → logprob: -6.302889823913574
    8. ']
' → logprob: -6.427889823913574
    9. ')' → logprob: -6.552889823913574
    10. '[i' → logprob: -6.677889823913574

Token 1856: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1075458824634552
    2. '	dp' → logprob: -3.232545852661133
    3. 'dp' → logprob: -3.357545852661133
    4. '   ' → logprob: -4.482545852661133
    5. '
' → logprob: -4.732545852661133
    6. ' dp' → logprob: -5.482545852661133
    7. '	' → logprob: -5.857545852661133
    8. '```' → logprob: -9.107545852661133
    9. 'import' → logprob: -9.357545852661133
    10. '        
' → logprob: -9.607545852661133

Token 1857: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16816303133964539
    2. 'dp' → logprob: -1.9181630611419678
    3. ' dp' → logprob: -6.043162822723389
    4. 'import' → logprob: -6.293162822723389
    5. '   ' → logprob: -6.543162822723389
    6. '```' → logprob: -6.918162822723389
    7. '
' → logprob: -7.418162822723389
    8. '	dp' → logprob: -7.668162822723389
    9. '	' → logprob: -9.293163299560547
    10. '           ' → logprob: -10.543163299560547

Token 1858: ' we' (ID: 581)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009159388951957226
    2. '       ' → logprob: -4.759159564971924
    3. 'import' → logprob: -8.134159088134766
    4. '
' → logprob: -8.759159088134766
    5. '   ' → logprob: -9.634159088134766
    6. ' dp' → logprob: -11.009159088134766
    7. 'from' → logprob: -12.134159088134766
    8. '	dp' → logprob: -13.009159088134766
    9. 'for' → logprob: -13.634159088134766
    10. '```' → logprob: -13.884159088134766

Token 1859: ' must' (ID: 2804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7000604867935181
    2. '[' → logprob: -1.325060486793518
    3. ' =' → logprob: -2.5750603675842285
    4. 'for' → logprob: -3.3250603675842285
    5. 'continue' → logprob: -3.8250603675842285
    6. '.append' → logprob: -4.2000603675842285
    7. ']' → logprob: -4.7000603675842285
    8. ' continue' → logprob: -4.9500603675842285
    9. '_' → logprob: -4.9500603675842285
    10. '[
' → logprob: -5.0750603675842285

Token 1860: ' check' (ID: 2371)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.7745283246040344
    2. ' initialize' → logprob: -1.3995282649993896
    3. 'continue' → logprob: -2.1495282649993896
    4. ' continue' → logprob: -2.2745282649993896
    5. ' complete' → logprob: -3.2745282649993896
    6. '       ' → logprob: -5.399528503417969
    7. ' indent' → logprob: -5.649528503417969
    8. ' fill' → logprob: -5.649528503417969
    9. 'complete' → logprob: -5.649528503417969
    10. '```' → logprob: -6.024528503417969

Token 1861: ' feasibility' (ID: 97666)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.77406907081604
    2. '   ' → logprob: -1.89906907081604
    3. '                   ' → logprob: -2.27406907081604
    4. '       ' → logprob: -2.27406907081604
    5. 'if' → logprob: -2.77406907081604
    6. 'for' → logprob: -2.89906907081604
    7. '           ' → logprob: -3.02406907081604
    8. '\t' → logprob: -3.39906907081604
    9. ' if' → logprob: -3.52406907081604
    10. '[' → logprob: -3.52406907081604

Token 1862: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00702651496976614
    2. '
' → logprob: -6.132026672363281
    3. '   ' → logprob: -7.007026672363281
    4. '	' → logprob: -7.132026672363281
    5. '           ' → logprob: -7.132026672363281
    6. ' for' → logprob: -8.132026672363281
    7. '[' → logprob: -8.257026672363281
    8. '                   ' → logprob: -8.257026672363281
    9. '        ' → logprob: -8.632026672363281
    10. '```' → logprob: -8.632026672363281

Token 1863: ' picking' (ID: 30859)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.48766690492630005
    2. 'purchase' → logprob: -1.8626668453216553
    3. 'dp' → logprob: -2.7376668453216553
    4. 'time' → logprob: -2.7376668453216553
    5. 'pick' → logprob: -3.7376668453216553
    6. 'arrival' → logprob: -4.487667083740234
    7. 'the' → logprob: -4.862667083740234
    8. 'all' → logprob: -5.112667083740234
    9. 'state' → logprob: -5.362667083740234
    10. 'buy' → logprob: -5.487667083740234

Token 1864: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2592676877975464
    2. ' product' → logprob: -1.8842676877975464
    3. 'product' → logprob: -2.134267807006836
    4. '[i' → logprob: -2.259267807006836
    5. ' products' → logprob: -2.884267807006836
    6. 'time' → logprob: -3.009267807006836
    7. 'products' → logprob: -3.134267807006836
    8. ' i' → logprob: -3.259267807006836
    9. ' for' → logprob: -3.759267807006836
    10. '       ' → logprob: -4.009267807006836

Token 1865: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.341414213180542
    2. '_' → logprob: -1.716414213180542
    3. '[i' → logprob: -2.091414213180542
    4. '       ' → logprob: -2.591414213180542
    5. '
' → logprob: -2.716414213180542
    6. '   ' → logprob: -2.841414213180542
    7. ' =' → logprob: -3.341414213180542
    8. '[
' → logprob: -3.341414213180542
    9. '```' → logprob: -3.591414213180542
    10. '_
' → logprob: -3.591414213180542

Token 1866: ' that' (ID: 484)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9768391847610474
    2. ' if' → logprob: -1.8518391847610474
    3. 'if' → logprob: -2.476839065551758
    4. ' 
' → logprob: -2.601839065551758
    5. '               ' → logprob: -3.101839065551758
    6. '                   ' → logprob: -3.476839065551758
    7. '                       ' → logprob: -3.726839065551758
    8. '       ' → logprob: -3.726839065551758
    9. '                               ' → logprob: -3.851839065551758
    10. '                           ' → logprob: -3.976839065551758

Token 1867: ' arrival' (ID: 24861)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.5221372842788696
    2. 'dist' → logprob: -1.2721372842788696
    3. ' ' → logprob: -3.39713716506958
    4. ' <' → logprob: -3.77213716506958
    5. ' if' → logprob: -4.64713716506958
    6. '_' → logprob: -5.14713716506958
    7. ' i' → logprob: -5.27213716506958
    8. ' <=' → logprob: -5.39713716506958
    9. 'if' → logprob: -5.52213716506958
    10. 'i' → logprob: -5.64713716506958

Token 1868: '_time' (ID: 6425)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0470951646566391
    2. '_time' → logprob: -3.1720950603485107
    3. '[i' → logprob: -6.67209529876709
    4. ' _' → logprob: -6.79709529876709
    5. '[' → logprob: -7.67209529876709
    6. '_times' → logprob: -8.04709529876709
    7. '```' → logprob: -8.54709529876709
    8. '_t' → logprob: -8.79709529876709
    9. '_[' → logprob: -9.17209529876709
    10. '[_' → logprob: -9.42209529876709

Token 1869: ' between' (ID: 2870)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.21136482059955597
    2. ' <=' → logprob: -1.8363648653030396
    3. '+' → logprob: -4.08636474609375
    4. '>=' → logprob: -5.33636474609375
    5. '[i' → logprob: -5.46136474609375
    6. '[' → logprob: -6.71136474609375
    7. ' +' → logprob: -6.83636474609375
    8. ' >=' → logprob: -7.58636474609375
    9. '   ' → logprob: -7.83636474609375
    10. '>' → logprob: -7.96136474609375

Token 1870: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.134364515542984
    2. '0' → logprob: -2.384364604949951
    3. 'product' → logprob: -4.634364604949951
    4. 'start' → logprob: -5.009364604949951
    5. 'sale' → logprob: -5.759364604949951
    6. 'sales' → logprob: -6.134364604949951
    7. 'i' → logprob: -6.134364604949951
    8. ' s' → logprob: -6.384364604949951
    9. '```' → logprob: -6.509364604949951
    10. 'products' → logprob: -6.634364604949951

Token 1871: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00517671275883913
    2. '_i' → logprob: -5.380176544189453
    3. '```' → logprob: -8.755176544189453
    4. 'i' → logprob: -9.130176544189453
    5. '[' → logprob: -9.380176544189453
    6. 'e' → logprob: -9.505176544189453
    7. '_[' → logprob: -10.505176544189453
    8. '``' → logprob: -11.255176544189453
    9. '   ' → logprob: -11.505176544189453
    10. '<=' → logprob: -11.755176544189453

Token 1872: ' (' (ID: 350)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5171409249305725
    2. 'and' → logprob: -1.2671408653259277
    3. ' and' → logprob: -2.5171408653259277
    4. '[i' → logprob: -3.7671408653259277
    5. ' <=' → logprob: -4.267140865325928
    6. '```' → logprob: -6.517140865325928
    7. ',' → logprob: -7.392140865325928
    8. '[' → logprob: -8.392141342163086
    9. ']<=' → logprob: -8.767141342163086
    10. '&&' → logprob: -8.892141342163086

Token 1873: 'sale' (ID: 64157)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6944649815559387
    2. '[i' → logprob: -1.819464921951294
    3. '<=' → logprob: -2.194464921951294
    4. ' and' → logprob: -2.819464921951294
    5. '```' → logprob: -3.194464921951294
    6. '[' → logprob: -3.569464921951294
    7. 'and' → logprob: -3.569464921951294
    8. 's' → logprob: -4.444465160369873
    9. '...' → logprob: -4.569465160369873
    10. '``' → logprob: -4.694465160369873

Token 1874: ' start' (ID: 1604)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9798637628555298
    2. ')_' → logprob: -1.8548637628555298
    3. '_time' → logprob: -2.3548636436462402
    4. '_' → logprob: -2.3548636436462402
    5. '_i' → logprob: -2.3548636436462402
    6. '[' → logprob: -2.4798636436462402
    7. '[i' → logprob: -3.6048636436462402
    8. '```' → logprob: -4.35486364364624
    9. '_)' → logprob: -4.72986364364624
    10. ']_' → logprob: -4.72986364364624

Token 1875: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28515899181365967
    2. ' and' → logprob: -2.035159111022949
    3. ',' → logprob: -3.160159111022949
    4. ']' → logprob: -4.035159111022949
    5. 'and' → logprob: -4.035159111022949
    6. ' )' → logprob: -4.910159111022949
    7. '_time' → logprob: -5.160159111022949
    8. '[i' → logprob: -5.285159111022949
    9. '<=' → logprob: -6.160159111022949
    10. 'time' → logprob: -6.160159111022949

Token 1876: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.1171256303787231
    2. '<=' → logprob: -1.7421256303787231
    3. '[' → logprob: -1.9921256303787231
    4. ' <=' → logprob: -2.2421255111694336
    5. ')' → logprob: -3.1171255111694336
    6. 'and' → logprob: -3.2421255111694336
    7. '=' → logprob: -3.9921255111694336
    8. ',' → logprob: -4.242125511169434
    9. '[i' → logprob: -4.367125511169434
    10. ':' → logprob: -4.492125511169434

Token 1877: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1797948181629181
    2. ' e' → logprob: -1.8047947883605957
    3. '```' → logprob: -11.304795265197754
    4. '_e' → logprob: -11.679795265197754
    5. '``' → logprob: -11.929795265197754
    6. '
' → logprob: -12.179795265197754
    7. '`' → logprob: -12.429795265197754
    8. ' ' → logprob: -13.054795265197754
    9. ''e' → logprob: -13.367295265197754
    10. '	e' → logprob: -13.429795265197754

Token 1878: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.08182495832443237
    2. '[i' → logprob: -3.206825017929077
    3. '_' → logprob: -3.581825017929077
    4. ']' → logprob: -5.831824779510498
    5. '```' → logprob: -6.081824779510498
    6. 'i' → logprob: -6.331824779510498
    7. '[' → logprob: -7.456824779510498
    8. '``' → logprob: -8.081825256347656
    9. ']_' → logprob: -8.206825256347656
    10. '_]' → logprob: -8.456825256347656

Token 1879: '(s' (ID: 1858)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003774670185521245
    2. '
' → logprob: -6.378774642944336
    3. '   ' → logprob: -7.628774642944336
    4. '           ' → logprob: -7.753774642944336
    5. '	' → logprob: -7.878774642944336
    6. '        ' → logprob: -8.628774642944336
    7. '        
' → logprob: -9.628774642944336
    8. ')' → logprob: -9.753774642944336
    9. '               ' → logprob: -10.128774642944336
    10. ',' → logprob: -10.128774642944336

Token 1880: 'ale' (ID: 1167)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2098122090101242
    2. 'ale' → logprob: -1.8348121643066406
    3. 'end' → logprob: -4.584812164306641
    4. '```' → logprob: -4.959812164306641
    5. '_end' → logprob: -5.959812164306641
    6. ']' → logprob: -6.584812164306641
    7. 't' → logprob: -6.709812164306641
    8. '_e' → logprob: -6.709812164306641
    9. '=end' → logprob: -6.709812164306641
    10. ')' → logprob: -7.834812164306641

Token 1881: ' end' (ID: 1268)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2672629356384277
    2. '_time' → logprob: -1.2672629356384277
    3. '_' → logprob: -2.1422629356384277
    4. ')_' → logprob: -2.2672629356384277
    5. '_i' → logprob: -2.6422629356384277
    6. '])' → logprob: -3.2672629356384277
    7. '_end' → logprob: -3.2672629356384277
    8. ']_' → logprob: -3.6422629356384277
    9. '_)' → logprob: -3.7672629356384277
    10. ']' → logprob: -5.392262935638428

Token 1882: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.6420648097991943
    2. ']' → logprob: -1.7670648097991943
    3. '       ' → logprob: -1.7670648097991943
    4. ']
' → logprob: -2.0170648097991943
    5. ')' → logprob: -2.6420648097991943
    6. ':
' → logprob: -3.1420648097991943
    7. '           ' → logprob: -3.5170648097991943
    8. '               ' → logprob: -3.5170648097991943
    9. '):
' → logprob: -3.5170648097991943
    10. '[i' → logprob: -3.6420648097991943

Token 1883: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017916720360517502
    2. '
' → logprob: -4.892916679382324
    3. '                   ' → logprob: -6.142916679382324
    4. '           ' → logprob: -6.267916679382324
    5. '   ' → logprob: -6.517916679382324
    6. '               ' → logprob: -7.142916679382324
    7. ')' → logprob: -7.642916679382324
    8. '                       ' → logprob: -7.892916679382324
    9. ',' → logprob: -8.142916679382324
    10. ')
' → logprob: -8.267916679382324

Token 1884: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04401085525751114
    2. '	' → logprob: -5.044010639190674
    3. '                   ' → logprob: -5.169010639190674
    4. '           ' → logprob: -5.419010639190674
    5. '
' → logprob: -5.544010639190674
    6. '\' → logprob: -5.919010639190674
    7. ' 
' → logprob: -6.044010639190674
    8. '   ' → logprob: -6.169010639190674
    9. '               ' → logprob: -6.169010639190674
    10. '[' → logprob: -6.294010639190674

Token 1885: '=[[' (ID: 112637)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.604867696762085
    2. '=' → logprob: -0.979867696762085
    3. '=[[' → logprob: -3.479867696762085
    4. '[' → logprob: -3.729867696762085
    5. ' =' → logprob: -3.854867696762085
    6. ' =[' → logprob: -7.104867935180664
    7. '=[]' → logprob: -7.854867935180664
    8. '=[
' → logprob: -7.854867935180664
    9. '={}' → logprob: -8.854867935180664
    10. '={' → logprob: -9.104867935180664

Token 1886: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0002141458389814943
    2. '(' → logprob: -8.875214576721191
    3. 'float' → logprob: -10.125214576721191
    4. '-' → logprob: -10.750214576721191
    5. '100' → logprob: -12.375214576721191
    6. '1' → logprob: -12.875214576721191
    7. '[' → logprob: -13.500214576721191
    8. '
' → logprob: -13.500214576721191
    9. '0' → logprob: -14.250214576721191
    10. ' ' → logprob: -14.375214576721191

Token 1887: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -6.511406809295295e-06
    2. '*' → logprob: -12.625006675720215
    3. '```' → logprob: -13.750006675720215
    4. '^' → logprob: -14.000006675720215
    5. '9' → logprob: -14.125006675720215
    6. ' **' → logprob: -15.625006675720215
    7. '***' → logprob: -15.625006675720215
    8. '[' → logprob: -17.8750057220459
    9. '###' → logprob: -18.6250057220459
    10. '\xe2\x81' → logprob: -18.7500057220459

Token 1888: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.875000953674316
    3. '18' → logprob: -15.250000953674316
    4. '^' → logprob: -15.625000953674316
    5. '``' → logprob: -16.000001907348633
    6. '99' → logprob: -16.250001907348633
    7. '
' → logprob: -17.125001907348633
    8. '999' → logprob: -17.125001907348633
    9. '09' → logprob: -17.562501907348633
    10. '10' → logprob: -17.562501907348633

Token 1889: ']*(' (ID: 92627)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.048950571566820145
    2. ']' → logprob: -3.048950672149658
    3. ']*(' → logprob: -8.6739501953125
    4. ' ]' → logprob: -9.7989501953125
    5. ']]' → logprob: -10.1739501953125
    6. ']+' → logprob: -10.1739501953125
    7. '   ' → logprob: -10.2989501953125
    8. 'for' → logprob: -12.1739501953125
    9. '```' → logprob: -12.6739501953125
    10. '[' → logprob: -12.9239501953125

Token 1890: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008054602658376098
    2. '1' → logprob: -7.875805377960205
    3. '101' → logprob: -8.750805854797363
    4. '(' → logprob: -9.125805854797363
    5. '(n' → logprob: -9.250805854797363
    6. '10' → logprob: -11.125805854797363
    7. 'max' → logprob: -11.375805854797363
    8. ' n' → logprob: -11.500805854797363
    9. '100' → logprob: -11.750805854797363
    10. '102' → logprob: -12.125805854797363

Token 1891: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007556661730632186
    2. ')]' → logprob: -7.875755786895752
    3. ')][' → logprob: -8.625755310058594
    4. '+' → logprob: -9.125755310058594
    5. 'for' → logprob: -10.625755310058594
    6. ')n' → logprob: -10.875755310058594
    7. ')<<' → logprob: -11.125755310058594
    8. ')
' → logprob: -11.250755310058594
    9. '```' → logprob: -12.250755310058594
    10. ' )' → logprob: -13.500755310058594

Token 1892: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16024331748485565
    2. ' for' → logprob: -1.910243272781372
    3. '	for' → logprob: -11.410243034362793
    4. '<|end|>' → logprob: -12.535243034362793
    5. ']' → logprob: -13.285243034362793
    6. ')' → logprob: -13.910243034362793
    7. '       ' → logprob: -14.410243034362793
    8. '   ' → logprob: -15.035243034362793
    9. '```' → logprob: -15.160243034362793
    10. '
' → logprob: -15.160243034362793

Token 1893: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9762094616889954
    2. ' _' → logprob: -1.3512094020843506
    3. '_' → logprob: -1.9762094020843506
    4. 'mask' → logprob: -2.6012094020843506
    5. ' mask' → logprob: -3.1012094020843506
    6. 'range' → logprob: -3.3512094020843506
    7. '(' → logprob: -3.4762094020843506
    8. '_mask' → logprob: -3.6012094020843506
    9. ' (' → logprob: -4.72620964050293
    10. '(mask' → logprob: -5.97620964050293

Token 1894: ' in' (ID: 306)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1487766057252884
    2. 'range' → logprob: -2.7737765312194824
    3. ' range' → logprob: -3.0237765312194824
    4. ' (' → logprob: -3.8987765312194824
    5. '(range' → logprob: -5.023776531219482
    6. '1' → logprob: -9.02377700805664
    7. '0' → logprob: -10.14877700805664
    8. '_range' → logprob: -10.39877700805664
    9. '(n' → logprob: -10.64877700805664
    10. ' in' → logprob: -10.77377700805664

Token 1895: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2926296591758728
    2. '(' → logprob: -1.6676297187805176
    3. ' range' → logprob: -2.7926297187805176
    4. ' (' → logprob: -5.792629718780518
    5. '(range' → logprob: -7.292629718780518
    6. '1' → logprob: -12.29262924194336
    7. '```' → logprob: -12.79262924194336
    8. '[' → logprob: -12.91762924194336
    9. '   ' → logprob: -13.54262924194336
    10. '`' → logprob: -14.16762924194336

Token 1896: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01625758223235607
    2. '1' → logprob: -4.1412577629089355
    3. ' (' → logprob: -9.641257286071777
    4. '(n' → logprob: -9.641257286071777
    5. 'range' → logprob: -9.641257286071777
    6. '2' → logprob: -11.391257286071777
    7. 'n' → logprob: -11.641257286071777
    8. '(range' → logprob: -12.891257286071777
    9. '0' → logprob: -13.141257286071777
    10. '
' → logprob: -14.141257286071777

Token 1897: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20419292151927948
    2. '(' → logprob: -1.704192876815796
    3. 'n' → logprob: -5.954193115234375
    4. '(n' → logprob: -9.204193115234375
    5. '2' → logprob: -9.954193115234375
    6. ' (' → logprob: -10.829193115234375
    7. '102' → logprob: -12.204193115234375
    8. ' ' → logprob: -12.954193115234375
    9. '0' → logprob: -13.579193115234375
    10. '101' → logprob: -13.579193115234375

Token 1898: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -9.317247167928144e-05
    2. ' <<' → logprob: -9.875093460083008
    3. '<<(' → logprob: -10.125093460083008
    4. '<<<' → logprob: -14.125093460083008
    5. '()<<' → logprob: -14.750093460083008
    6. ']<<' → logprob: -15.125093460083008
    7. '<<"' → logprob: -15.625093460083008
    8. ')<<' → logprob: -16.625093460083008
    9. '<<<<' → logprob: -18.375093460083008
    10. '```' → logprob: -18.875093460083008

Token 1899: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.491498531133402e-06
    2. '(n' → logprob: -11.875009536743164
    3. ' n' → logprob: -13.625009536743164
    4. '	n' → logprob: -15.125009536743164
    5. '[n' → logprob: -15.500009536743164
    6. '0' → logprob: -15.750009536743164
    7. ')n' → logprob: -16.000009536743164
    8. '10' → logprob: -16.250009536743164
    9. '_n' → logprob: -16.750009536743164
    10. '```' → logprob: -16.875009536743164

Token 1900: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06221628561615944
    2. ')]
' → logprob: -2.812216281890869
    3. ')' → logprob: -8.687216758728027
    4. ')][' → logprob: -10.187216758728027
    5. ']' → logprob: -10.937216758728027
    6. '       ' → logprob: -11.187216758728027
    7. ')]

' → logprob: -12.812216758728027
    8. ')]
' → logprob: -13.187216758728027
    9. '   ' → logprob: -13.562216758728027
    10. ')])' → logprob: -13.812216758728027

Token 1901: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1106615886092186
    2. ' for' → logprob: -2.860661506652832
    3. 'for' → logprob: -3.610661506652832
    4. '           ' → logprob: -5.110661506652832
    5. '[' → logprob: -5.985661506652832
    6. '                   ' → logprob: -6.110661506652832
    7. '               ' → logprob: -6.360661506652832
    8. '   ' → logprob: -6.485661506652832
    9. '```' → logprob: -6.610661506652832
    10. '                       ' → logprob: -6.860661506652832

Token 1902: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005477313883602619
    2. ' for' → logprob: -5.380477428436279
    3. '       ' → logprob: -7.380477428436279
    4. '	for' → logprob: -8.505476951599121
    5. '```' → logprob: -10.755476951599121
    6. '
' → logprob: -12.380476951599121
    7. '   ' → logprob: -12.880476951599121
    8. '           ' → logprob: -14.005476951599121
    9. 'For' → logprob: -14.255476951599121
    10. '               ' → logprob: -15.505476951599121

Token 1903: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00280558317899704
    2. ' i' → logprob: -5.877805709838867
    3. '	i' → logprob: -15.377805709838867
    4. '(i' → logprob: -15.877805709838867
    5. '   ' → logprob: -16.127805709838867
    6. '_i' → logprob: -16.377805709838867
    7. ' ' → logprob: -16.502805709838867
    8. '```' → logprob: -16.502805709838867
    9. '`' → logprob: -17.502805709838867
    10. '
' → logprob: -18.002805709838867

Token 1904: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08783842623233795
    2. '[' → logprob: -3.0878384113311768
    3. 'in' → logprob: -3.4628384113311768
    4. ' [' → logprob: -5.587838649749756
    5. '[i' → logprob: -6.462838649749756
    6. '][' → logprob: -6.962838649749756
    7. '   ' → logprob: -7.587838649749756
    8. ' ][' → logprob: -8.962838172912598
    9. '[in' → logprob: -9.712838172912598
    10. '       ' → logprob: -10.712838172912598

Token 1905: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007107630372047424
    2. ' range' → logprob: -7.250710964202881
    3. '(range' → logprob: -14.750710487365723
    4. '
' → logprob: -15.125710487365723
    5. 'in' → logprob: -16.00071144104004
    6. 'n' → logprob: -17.25071144104004
    7. ')' → logprob: -18.00071144104004
    8. '```' → logprob: -18.00071144104004
    9. '   ' → logprob: -18.12571144104004
    10. ' in' → logprob: -18.62571144104004

Token 1906: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002867042785510421
    2. '(n' → logprob: -5.877867221832275
    3. ' n' → logprob: -10.127866744995117
    4. '   ' → logprob: -11.252866744995117
    5. '(' → logprob: -12.377866744995117
    6. '       ' → logprob: -13.002866744995117
    7. ')n' → logprob: -14.627866744995117
    8. '           ' → logprob: -14.627866744995117
    9. '	n' → logprob: -14.752866744995117
    10. ' (' → logprob: -14.877866744995117

Token 1907: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009743100963532925
    2. '       ' → logprob: -5.3847432136535645
    3. ']:
' → logprob: -6.0097432136535645
    4. '   ' → logprob: -6.5097432136535645
    5. ']):
' → logprob: -8.259742736816406
    6. ')][' → logprob: -8.759742736816406
    7. ':
' → logprob: -9.009742736816406
    8. '][' → logprob: -9.134742736816406
    9. '           ' → logprob: -9.259742736816406
    10. ')]' → logprob: -9.509742736816406

Token 1908: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0545329675078392
    2. ' if' → logprob: -3.429533004760742
    3. ' dp' → logprob: -4.679533004760742
    4. '[' → logprob: -4.804533004760742
    5. 'dp' → logprob: -6.679533004760742
    6. 'if' → logprob: -7.804533004760742
    7. '```' → logprob: -7.929533004760742
    8. '           ' → logprob: -8.304533004760742
    9. '   ' → logprob: -8.304533004760742
    10. '	dp' → logprob: -8.679533004760742

Token 1909: ' g' (ID: 329)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6449896097183228
    2. 'dp' → logprob: -1.6449896097183228
    3. 'dist' → logprob: -1.8949896097183228
    4. '   ' → logprob: -2.894989490509033
    5. 'd' → logprob: -3.519989490509033
    6. 'arrival' → logprob: -3.894989490509033
    7. ' if' → logprob: -4.644989490509033
    8. 'arr' → logprob: -5.519989490509033
    9. 't' → logprob: -5.644989490509033
    10. 'time' → logprob: -5.644989490509033

Token 1910: ',d' (ID: 26159)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5747848749160767
    2. 'dp' → logprob: -1.3247848749160767
    3. ' i' → logprob: -2.699784755706787
    4. 'for' → logprob: -4.074784755706787
    5. '[i' → logprob: -4.199784755706787
    6. ' for' → logprob: -4.324784755706787
    7. '(i' → logprob: -4.824784755706787
    8. '][' → logprob: -4.949784755706787
    9. ' =' → logprob: -5.324784755706787
    10. '   ' → logprob: -5.574784755706787

Token 1911: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2643464505672455
    2. ',i' → logprob: -1.7643464803695679
    3. '_i' → logprob: -3.7643463611602783
    4. 'i' → logprob: -4.264346599578857
    5. '[i' → logprob: -4.264346599578857
    6. ' =' → logprob: -6.014346599578857
    7. ' ,' → logprob: -6.389346599578857
    8. '_,' → logprob: -6.764346599578857
    9. '=' → logprob: -7.389346599578857
    10. '=i' → logprob: -7.514346599578857

Token 1912: ',e' (ID: 43127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1041417121887207
    2. ',i' → logprob: -1.2291417121887207
    3. '[i' → logprob: -1.6041417121887207
    4. 'i' → logprob: -2.2291417121887207
    5. '           ' → logprob: -4.479141712188721
    6. '_i' → logprob: -4.479141712188721
    7. '][' → logprob: -4.979141712188721
    8. '=i' → logprob: -5.104141712188721
    9. ' =' → logprob: -5.354141712188721
    10. ' ,' → logprob: -5.604141712188721

Token 1913: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18003828823566437
    2. ' =' → logprob: -2.4300382137298584
    3. 'dp' → logprob: -3.5550382137298584
    4. ',' → logprob: -4.1800384521484375
    5. '][' → logprob: -5.4300384521484375
    6. ' dp' → logprob: -5.5550384521484375
    7. ']=' → logprob: -5.5550384521484375
    8. '           ' → logprob: -5.6800384521484375
    9. '=int' → logprob: -5.6800384521484375
    10. '=i' → logprob: -5.9300384521484375

Token 1914: 'product' (ID: 5260)
  Prédit: 'product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.005286292172968388
    2. ' product' → logprob: -5.25528621673584
    3. '           ' → logprob: -10.50528621673584
    4. '   ' → logprob: -11.13028621673584
    5. '(product' → logprob: -11.63028621673584
    6. '       ' → logprob: -15.00528621673584
    7. '	product' → logprob: -15.00528621673584
    8. '          ' → logprob: -15.75528621673584
    9. '            ' → logprob: -16.005287170410156
    10. '$product' → logprob: -16.255287170410156

Token 1915: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.002113977912813425
    2. '[i' → logprob: -6.7521138191223145
    3. 'i' → logprob: -8.002114295959473
    4. '_i' → logprob: -8.127114295959473
    5. '(i' → logprob: -9.002114295959473
    6. 'info' → logprob: -9.377114295959473
    7. 'Info' → logprob: -10.127114295959473
    8. '```' → logprob: -11.377114295959473
    9. '   ' → logprob: -12.127114295959473
    10. '[' → logprob: -12.252114295959473

Token 1916: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.2563880980014801
    2. '_info' → logprob: -1.5063880681991577
    3. 'list' → logprob: -5.756388187408447
    4. 'info' → logprob: -7.381388187408447
    5. '[i' → logprob: -7.631388187408447
    6. 'i' → logprob: -9.756387710571289
    7. 'Info' → logprob: -10.256387710571289
    8. 'List' → logprob: -11.256387710571289
    9. '[' → logprob: -11.381387710571289
    10. 's' → logprob: -11.756387710571289

Token 1917: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2973586618900299
    2. '(i' → logprob: -1.6723586320877075
    3. ',i' → logprob: -3.547358751296997
    4. ',' → logprob: -4.297358512878418
    5. ' =' → logprob: -4.422358512878418
    6. 'i' → logprob: -5.672358512878418
    7. '=i' → logprob: -5.922358512878418
    8. '
' → logprob: -6.172358512878418
    9. '   ' → logprob: -6.672358512878418
    10. '=' → logprob: -6.797358512878418

Token 1918: ']
' (ID: 1592)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1221179962158203
    2. ':
' → logprob: -1.3721179962158203
    3. '           ' → logprob: -1.6221179962158203
    4. '][' → logprob: -2.1221179962158203
    5. ',' → logprob: -3.8721179962158203
    6. '   ' → logprob: -4.12211799621582
    7. '       ' → logprob: -4.37211799621582
    8. '               ' → logprob: -4.49711799621582
    9. '
' → logprob: -4.62211799621582
    10. ']:
' → logprob: -4.74711799621582

Token 1919: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14830394089221954
    2. ' if' → logprob: -2.648303985595703
    3. ' arrival' → logprob: -3.648303985595703
    4. '       ' → logprob: -3.898303985595703
    5. '   ' → logprob: -4.273303985595703
    6. 'if' → logprob: -5.398303985595703
    7. 'arrival' → logprob: -6.398303985595703
    8. '```' → logprob: -8.273303985595703
    9. ' ' → logprob: -9.523303985595703
    10. '               ' → logprob: -10.398303985595703

Token 1920: ' t' (ID: 260)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4743114411830902
    2. ' if' → logprob: -1.7243114709854126
    3. 'dp' → logprob: -1.8493114709854126
    4. '   ' → logprob: -4.599311351776123
    5. ' dp' → logprob: -4.599311351776123
    6. 'dist' → logprob: -4.849311351776123
    7. 'arrival' → logprob: -4.849311351776123
    8. ' arrival' → logprob: -5.724311351776123
    9. ' dist' → logprob: -7.224311351776123
    10. 'time' → logprob: -7.474311351776123

Token 1921: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41130900382995605
    2. '=' → logprob: -1.161309003829956
    3. '[' → logprob: -5.161309242248535
    4. 'p' → logprob: -5.661309242248535
    5. '=int' → logprob: -6.161309242248535
    6. '=i' → logprob: -6.411309242248535
    7. '[i' → logprob: -6.411309242248535
    8. '   ' → logprob: -6.536309242248535
    9. '=[' → logprob: -6.536309242248535
    10. '_' → logprob: -6.661309242248535

Token 1922: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -8.537868779967539e-06
    2. ' dist' → logprob: -11.750008583068848
    3. 'max' → logprob: -15.125008583068848
    4. '   ' → logprob: -15.625008583068848
    5. 'dp' → logprob: -17.50000762939453
    6. '(dist' → logprob: -17.87500762939453
    7. '	dist' → logprob: -18.37500762939453
    8. '           ' → logprob: -18.87500762939453
    9. '       ' → logprob: -19.00000762939453
    10. '
' → logprob: -19.37500762939453

Token 1923: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00016420685278717428
    2. 'start' → logprob: -9.000164031982422
    3. '_from' → logprob: -10.875164031982422
    4. '[i' → logprob: -11.750164031982422
    5. '_min' → logprob: -12.125164031982422
    6. '[start' → logprob: -12.250164031982422
    7. 'from' → logprob: -13.875164031982422
    8. '
' → logprob: -14.250164031982422
    9. 'i' → logprob: -14.250164031982422
    10. '```' → logprob: -14.375164031982422

Token 1924: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.547789674485102e-05
    2. '[' → logprob: -11.000035285949707
    3. ' [' → logprob: -11.750035285949707
    4. '```' → logprob: -12.625035285949707
    5. 'i' → logprob: -13.125035285949707
    6. '(i' → logprob: -13.750035285949707
    7. '][' → logprob: -14.125035285949707
    8. ')[' → logprob: -14.250035285949707
    9. '
' → logprob: -14.625035285949707
    10. '_i' → logprob: -14.875035285949707

Token 1925: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1381612867116928
    2. ']+' → logprob: -2.7631611824035645
    3. '[i' → logprob: -3.3881611824035645
    4. ']
' → logprob: -3.5131611824035645
    5. ')' → logprob: -7.7631611824035645
    6. '])' → logprob: -8.138161659240723
    7. ' ]' → logprob: -8.138161659240723
    8. '           ' → logprob: -8.513161659240723
    9. '][' → logprob: -8.638161659240723
    10. '+i' → logprob: -9.013161659240723

Token 1926: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004281396511942148
    2. ' if' → logprob: -5.629281520843506
    3. '
' → logprob: -8.254281044006348
    4. 'if' → logprob: -9.129281044006348
    5. '```' → logprob: -9.504281044006348
    6. ' +' → logprob: -9.754281044006348
    7. '       ' → logprob: -10.129281044006348
    8. '		' → logprob: -10.879281044006348
    9. '+' → logprob: -10.879281044006348
    10. '   ' → logprob: -11.004281044006348

Token 1927: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3056296110153198
    2. ' if' → logprob: -1.4306296110153198
    3. '           ' → logprob: -3.9306297302246094
    4. '
' → logprob: -6.180629730224609
    5. 'dp' → logprob: -6.180629730224609
    6. ' dp' → logprob: -8.43062973022461
    7. '```' → logprob: -9.55562973022461
    8. '       ' → logprob: -9.93062973022461
    9. ' 
' → logprob: -10.80562973022461
    10. '   ' → logprob: -10.93062973022461

Token 1928: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04396236687898636
    2. ' t' → logprob: -3.7939624786376953
    3. 's' → logprob: -3.9189624786376953
    4. ' s' → logprob: -7.418962478637695
    5. '           ' → logprob: -11.168962478637695
    6. '0' → logprob: -11.918962478637695
    7. '   ' → logprob: -12.918962478637695
    8. '`t' → logprob: -12.918962478637695
    9. ' ' → logprob: -13.043962478637695
    10. '            ' → logprob: -13.418962478637695

Token 1929: '>=' (ID: 20974)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5792710781097412
    2. ' <=' → logprob: -0.8292710781097412
    3. '>=' → logprob: -6.20427131652832
    4. ' >=' → logprob: -6.82927131652832
    5. '```' → logprob: -9.82927131652832
    6. ')<=' → logprob: -10.20427131652832
    7. '[' → logprob: -11.07927131652832
    8. '<' → logprob: -11.07927131652832
    9. ' ' → logprob: -11.07927131652832
    10. ' <' → logprob: -11.57927131652832

Token 1930: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4741757810115814
    2. '0' → logprob: -0.9741758108139038
    3. '
' → logprob: -10.474175453186035
    4. 'd' → logprob: -10.724175453186035
    5. ' s' → logprob: -10.724175453186035
    6. ' ' → logprob: -11.599175453186035
    7. '```' → logprob: -12.849175453186035
    8. 'g' → logprob: -13.474175453186035
    9. 'e' → logprob: -13.474175453186035
    10. '=' → logprob: -13.786675453186035

Token 1931: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.043983474373817444
    2. 'and' → logprob: -3.1689834594726562
    3. ':
' → logprob: -8.043983459472656
    4. ':' → logprob: -8.168983459472656
    5. '           ' → logprob: -8.293983459472656
    6. '<|end|>' → logprob: -10.418983459472656
    7. '       ' → logprob: -11.043983459472656
    8. '	and' → logprob: -11.418983459472656
    9. '```' → logprob: -11.418983459472656
    10. ')' → logprob: -11.918983459472656

Token 1932: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0009120595059357584
    2. ' t' → logprob: -7.000912189483643
    3. '`t' → logprob: -15.500911712646484
    4. '   ' → logprob: -16.125911712646484
    5. '           ' → logprob: -16.250911712646484
    6. '<t' → logprob: -16.875911712646484
    7. '(t' → logprob: -17.625911712646484
    8. '	t' → logprob: -17.625911712646484
    9. '```' → logprob: -17.875911712646484
    10. '                   ' → logprob: -18.375911712646484

Token 1933: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.09240719676017761
    2. ' <=' → logprob: -2.4674072265625
    3. 't' → logprob: -6.2174072265625
    4. '```' → logprob: -7.4674072265625
    5. ')<=' → logprob: -8.5924072265625
    6. '0' → logprob: -8.9674072265625
    7. '           ' → logprob: -9.3424072265625
    8. ']<=' → logprob: -9.5924072265625
    9. 'e' → logprob: -9.7174072265625
    10. ')' → logprob: -9.7174072265625

Token 1934: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00036953974631614983
    2. ' e' → logprob: -8.00036907196045
    3. '           ' → logprob: -11.12536907196045
    4. '   ' → logprob: -11.75036907196045
    5. '       ' → logprob: -12.50036907196045
    6. '```' → logprob: -13.25036907196045
    7. '               ' → logprob: -13.75036907196045
    8. '                   ' → logprob: -14.00036907196045
    9. '``' → logprob: -14.37536907196045
    10. ' ' → logprob: -14.75036907196045

Token 1935: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5373351573944092
    2. ':' → logprob: -1.6623351573944092
    3. '               ' → logprob: -1.7873351573944092
    4. '           ' → logprob: -3.537335157394409
    5. ' and' → logprob: -3.662335157394409
    6. 'and' → logprob: -6.912335395812988
    7. '                       ' → logprob: -7.037335395812988
    8. '                   ' → logprob: -7.787335395812988
    9. '[' → logprob: -8.412335395812988
    10. '                           ' → logprob: -8.412335395812988

Token 1936: ' t' (ID: 260)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2081581950187683
    2. 'map' → logprob: -2.208158254623413
    3. 't' → logprob: -3.208158254623413
    4. 'dp' → logprob: -4.583158016204834
    5. ' d' → logprob: -4.708158016204834
    6. 'dist' → logprob: -5.333158016204834
    7. ' map' → logprob: -5.583158016204834
    8. 'g' → logprob: -6.708158016204834
    9. '(d' → logprob: -6.833158016204834
    10. '(map' → logprob: -6.958158016204834

Token 1937: '!=' (ID: 11408)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.49413350224494934
    2. '+' → logprob: -2.244133472442627
    3. '!=' → logprob: -2.244133472442627
    4. ' <=' → logprob: -3.119133472442627
    5. ' !=' → logprob: -3.619133472442627
    6. '==' → logprob: -3.994133472442627
    7. '[' → logprob: -3.994133472442627
    8. '<' → logprob: -4.119133472442627
    9. ' <' → logprob: -4.744133472442627
    10. '<len' → logprob: -4.869133472442627

Token 1938: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004249589052051306
    2. '-' → logprob: -5.504249572753906
    3. ' ' → logprob: -10.129249572753906
    4. '0' → logprob: -10.254249572753906
    5. '
' → logprob: -10.754249572753906
    6. '(' → logprob: -10.879249572753906
    7. '```' → logprob: -11.379249572753906
    8. 'float' → logprob: -11.504249572753906
    9. ' -' → logprob: -11.629249572753906
    10. '100' → logprob: -12.254249572753906

Token 1939: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.10152459144592285
    2. '9' → logprob: -2.351524591445923
    3. '```' → logprob: -6.726524353027344
    4. '^' → logprob: -9.976524353027344
    5. '*' → logprob: -10.101524353027344
    6. '
' → logprob: -10.851524353027344
    7. '``' → logprob: -12.601524353027344
    8. '\xe2\x81' → logprob: -12.976524353027344
    9. '***' → logprob: -13.476524353027344
    10. '#' → logprob: -14.226524353027344

Token 1940: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.7432603272027336e-06
    2. '```' → logprob: -13.750001907348633
    3. '
' → logprob: -15.000001907348633
    4. '``' → logprob: -15.625001907348633
    5. ' ' → logprob: -17.000001907348633
    6. '^' → logprob: -17.375001907348633
    7. '99' → logprob: -17.562501907348633
    8. '09' → logprob: -17.562501907348633
    9. '999' → logprob: -18.312501907348633
    10. '**' → logprob: -18.500001907348633

Token 1941: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3959236145019531
    2. ':' → logprob: -1.1459236145019531
    3. ' and' → logprob: -5.020923614501953
    4. '           ' → logprob: -6.520923614501953
    5. 'and' → logprob: -7.895923614501953
    6. '               ' → logprob: -8.145923614501953
    7. '       ' → logprob: -8.770923614501953
    8. '):
' → logprob: -10.020923614501953
    9. '                       ' → logprob: -11.020923614501953
    10. ':
' → logprob: -12.020923614501953

Token 1942: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004618896055035293
    2. '```' → logprob: -8.12546157836914
    3. '           ' → logprob: -10.12546157836914
    4. '                   ' → logprob: -10.62546157836914
    5. '                               ' → logprob: -10.87546157836914
    6. 'dp' → logprob: -11.50046157836914
    7. '                       ' → logprob: -11.50046157836914
    8. '                
' → logprob: -11.75046157836914
    9. ' dp' → logprob: -11.87546157836914
    10. ':
' → logprob: -12.37546157836914

Token 1943: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0024800582323223352
    2. ' dp' → logprob: -6.0024800300598145
    3. '```' → logprob: -13.502480506896973
    4. '               ' → logprob: -13.627480506896973
    5. '           ' → logprob: -13.877480506896973
    6. '                   ' → logprob: -14.752480506896973
    7. '``' → logprob: -15.752480506896973
    8. '   ' → logprob: -15.877480506896973
    9. '	dp' → logprob: -16.502479553222656
    10. '(dp' → logprob: -17.002479553222656

Token 1944: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.5577775128767826e-06
    2. '[i' → logprob: -12.500005722045898
    3. '1' → logprob: -14.250005722045898
    4. '0' → logprob: -14.625005722045898
    5. '```' → logprob: -15.250005722045898
    6. ' [' → logprob: -15.875005722045898
    7. '\[' → logprob: -15.875005722045898
    8. '][' → logprob: -16.6250057220459
    9. '
' → logprob: -17.2500057220459
    10. ')[' → logprob: -17.5000057220459

Token 1945: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16214044392108917
    2. '(' → logprob: -1.9121404886245728
    3. '0' → logprob: -6.287140369415283
    4. '[' → logprob: -10.912140846252441
    5. '][' → logprob: -10.912140846252441
    6. '
' → logprob: -12.162140846252441
    7. ' (' → logprob: -12.537140846252441
    8. '```' → logprob: -12.912140846252441
    9. 'i' → logprob: -13.162140846252441
    10. '   ' → logprob: -13.787140846252441

Token 1946: '<<' (ID: 5354)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.18278884887695312
    2. '][' → logprob: -1.8077888488769531
    3. '[' → logprob: -6.182788848876953
    4. '```' → logprob: -7.432788848876953
    5. ' [' → logprob: -9.432788848876953
    6. 'i' → logprob: -9.807788848876953
    7. '[I' → logprob: -9.932788848876953
    8. '<<' → logprob: -10.182788848876953
    9. '   ' → logprob: -10.307788848876953
    10. '[
' → logprob: -10.432788848876953

Token 1947: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.4121114822482923e-06
    2. ' i' → logprob: -12.625003814697266
    3. '```' → logprob: -17.750003814697266
    4. '	i' → logprob: -18.500003814697266
    5. ')i' → logprob: -18.500003814697266
    6. '<|end|>' → logprob: -18.625003814697266
    7. '[i' → logprob: -18.875003814697266
    8. 'user' → logprob: -19.375003814697266
    9. '   ' → logprob: -19.375003814697266
    10. '(i' → logprob: -19.500003814697266

Token 1948: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014198530465364456
    2. '[i' → logprob: -4.264198303222656
    3. ' ][' → logprob: -11.014198303222656
    4. ']' → logprob: -11.889198303222656
    5. ']=' → logprob: -12.014198303222656
    6. '   ' → logprob: -13.639198303222656
    7. '```' → logprob: -14.139198303222656
    8. '[' → logprob: -14.264198303222656
    9. 'i' → logprob: -14.389198303222656
    10. '"][' → logprob: -14.889198303222656

Token 1949: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.9361264946837764e-07
    2. ' i' → logprob: -16.5
    3. '   ' → logprob: -19.25
    4. '```' → logprob: -20.75
    5. '	i' → logprob: -21.5
    6. '0' → logprob: -22.875
    7. ')i' → logprob: -22.875
    8. '[i' → logprob: -22.875
    9. ']' → logprob: -23.0
    10. '{i' → logprob: -23.0

Token 1950: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.008479589596390724
    2. ']' → logprob: -5.008479595184326
    3. ']+=' → logprob: -6.508479595184326
    4. '=' → logprob: -8.383479118347168
    5. ' ]' → logprob: -11.008479118347168
    6. ']=(' → logprob: -11.508479118347168
    7. '```' → logprob: -12.258479118347168
    8. '=t' → logprob: -12.383479118347168
    9. ']='' → logprob: -13.883479118347168
    10. '']=' → logprob: -13.883479118347168

Token 1951: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.60414821645827e-06
    2. 'dist' → logprob: -12.375004768371582
    3. ' t' → logprob: -15.625004768371582
    4. 'd' → logprob: -16.125003814697266
    5. '`t' → logprob: -16.625003814697266
    6. '```' → logprob: -16.750003814697266
    7. '0' → logprob: -17.000003814697266
    8. '	t' → logprob: -19.000003814697266
    9. '   ' → logprob: -19.500003814697266
    10. '10' → logprob: -20.750003814697266

Token 1952: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8373119831085205
    2. '<|end|>' → logprob: -0.8373119831085205
    3. '   ' → logprob: -2.7123119831085205
    4. '
' → logprob: -3.3373119831085205
    5. ' for' → logprob: -3.9623119831085205
    6. 'for' → logprob: -5.712311744689941
    7. '        
' → logprob: -6.087311744689941
    8. '<|end|>' → logprob: -6.212311744689941
    9. '	for' → logprob: -6.462311744689941
    10. '    
' → logprob: -6.587311744689941

Token 1953: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1954: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004860615357756615
    2. ' for' → logprob: -5.6298604011535645
    3. '   ' → logprob: -7.3798604011535645
    4. '       ' → logprob: -8.254860877990723
    5. '```' → logprob: -8.379860877990723
    6. '	for' → logprob: -9.879860877990723
    7. 'from' → logprob: -10.379860877990723
    8. '#' → logprob: -10.754860877990723
    9. '<|end|>' → logprob: -11.129860877990723
    10. '
' → logprob: -11.504860877990723

Token 1955: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.017268415540456772
    2. ' mask' → logprob: -4.142268180847168
    3. 'm' → logprob: -6.892268180847168
    4. 'i' → logprob: -9.517268180847168
    5. '_mask' → logprob: -9.767268180847168
    6. ' m' → logprob: -11.142268180847168
    7. '_' → logprob: -11.267268180847168
    8. 'ms' → logprob: -11.517268180847168
    9. 's' → logprob: -11.892268180847168
    10. '(mask' → logprob: -11.892268180847168

Token 1956: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017077414318919182
    2. 'in' → logprob: -4.142077445983887
    3. '+' → logprob: -7.392077445983887
    4. '<<' → logprob: -8.392077445983887
    5. '   ' → logprob: -9.517077445983887
    6. ' +' → logprob: -11.017077445983887
    7. '       ' → logprob: -11.017077445983887
    8. '```' → logprob: -11.017077445983887
    9. '1' → logprob: -11.517077445983887
    10. '
' → logprob: -11.767077445983887

Token 1957: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4630756080150604
    2. ' range' → logprob: -1.2130756378173828
    3. '(' → logprob: -3.338075637817383
    4. '1' → logprob: -3.463075637817383
    5. ' (' → logprob: -5.588075637817383
    6. 'n' → logprob: -6.838075637817383
    7. '(range' → logprob: -7.088075637817383
    8. ' n' → logprob: -7.713075637817383
    9. ' ' → logprob: -8.088075637817383
    10. '0' → logprob: -10.338075637817383

Token 1958: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013849768787622452
    2. '1' → logprob: -4.63884973526001
    3. ' (' → logprob: -5.51384973526001
    4. '+' → logprob: -10.763850212097168
    5. '   ' → logprob: -11.388850212097168
    6. '0' → logprob: -11.638850212097168
    7. ' ' → logprob: -12.138850212097168
    8. '(mask' → logprob: -12.638850212097168
    9. '((' → logprob: -12.888850212097168
    10. '(len' → logprob: -14.388850212097168

Token 1959: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3134905993938446
    2. '1' → logprob: -1.313490629196167
    3. 'n' → logprob: -8.688490867614746
    4. 'dp' → logprob: -10.563490867614746
    5. '0' → logprob: -10.813490867614746
    6. ' (' → logprob: -11.688490867614746
    7. '(n' → logprob: -12.813490867614746
    8. '((' → logprob: -14.063490867614746
    9. 'len' → logprob: -14.313490867614746
    10. ')' → logprob: -15.063490867614746

Token 1960: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.01312163844704628
    2. '+' → logprob: -4.388121604919434
    3. '(' → logprob: -7.513121604919434
    4. ' <<' → logprob: -11.263121604919434
    5. '1' → logprob: -11.388121604919434
    6. '<<(' → logprob: -11.638121604919434
    7. '   ' → logprob: -12.013121604919434
    8. ')<<' → logprob: -12.263121604919434
    9. '```' → logprob: -12.513121604919434
    10. ' +' → logprob: -12.513121604919434

Token 1961: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0325924449716695e-05
    2. '(n' → logprob: -12.00001049041748
    3. '   ' → logprob: -13.50001049041748
    4. '1' → logprob: -14.37501049041748
    5. ' n' → logprob: -14.50001049041748
    6. '
' → logprob: -14.50001049041748
    7. '(' → logprob: -14.75001049041748
    8. '0' → logprob: -15.25001049041748
    9. '           ' → logprob: -15.87501049041748
    10. '       ' → logprob: -16.125009536743164

Token 1962: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.26294222474098206
    2. ':
' → logprob: -2.137942314147949
    3. ':' → logprob: -2.262942314147949
    4. '):' → logprob: -5.762942314147949
    5. '       ' → logprob: -5.887942314147949
    6. '   ' → logprob: -6.762942314147949
    7. '+' → logprob: -7.262942314147949
    8. '           ' → logprob: -7.637942314147949
    9. '():
' → logprob: -8.26294231414795
    10. '```' → logprob: -8.38794231414795

Token 1963: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2612649202346802
    2. '           ' → logprob: -1.6362649202346802
    3. '       ' → logprob: -3.3862648010253906
    4. ' for' → logprob: -6.886264801025391
    5. ' ' → logprob: -9.01126480102539
    6. 'for' → logprob: -9.38626480102539
    7. '```' → logprob: -9.38626480102539
    8. '   ' → logprob: -10.63626480102539
    9. '	   ' → logprob: -11.13626480102539
    10. '               ' → logprob: -11.63626480102539

Token 1964: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.9193800687789917
    2. ' for' → logprob: -1.1693800687789917
    3. '           ' → logprob: -1.9193800687789917
    4. '       ' → logprob: -2.1693801879882812
    5. '   ' → logprob: -4.044380187988281
    6. '               ' → logprob: -4.419380187988281
    7. ' ' → logprob: -9.544380187988281
    8. '	for' → logprob: -9.794380187988281
    9. '                   ' → logprob: -11.419380187988281
    10. '```' → logprob: -12.169380187988281

Token 1965: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.018718834966421127
    2. ' last' → logprob: -4.768718719482422
    3. 'i' → logprob: -5.143718719482422
    4. 'j' → logprob: -5.518718719482422
    5. ' i' → logprob: -9.893718719482422
    6. 'lst' → logprob: -10.018718719482422
    7. ' j' → logprob: -10.018718719482422
    8. 'l' → logprob: -10.143718719482422
    9. 'next' → logprob: -10.893718719482422
    10. 'u' → logprob: -12.893718719482422

Token 1966: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015780596062541008
    2. 'in' → logprob: -4.390780448913574
    3. '+' → logprob: -6.765780448913574
    4. '][' → logprob: -7.765780448913574
    5. '               ' → logprob: -7.890780448913574
    6. ',' → logprob: -8.390780448913574
    7. '           ' → logprob: -9.140780448913574
    8. ' +' → logprob: -9.140780448913574
    9. ' ,' → logprob: -9.140780448913574
    10. '[' → logprob: -9.765780448913574

Token 1967: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001975503284484148
    2. ' range' → logprob: -6.2519755363464355
    3. 'n' → logprob: -10.001975059509277
    4. '(range' → logprob: -13.751975059509277
    5. '(n' → logprob: -14.751975059509277
    6. ' n' → logprob: -16.251976013183594
    7. '
' → logprob: -17.626976013183594
    8. ' ' → logprob: -18.126976013183594
    9. '   ' → logprob: -18.126976013183594
    10. '(' → logprob: -18.251976013183594

Token 1968: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03805079311132431
    2. '(n' → logprob: -3.288050889968872
    3. '(' → logprob: -12.413050651550293
    4. '           ' → logprob: -12.913050651550293
    5. '   ' → logprob: -14.038050651550293
    6. '               ' → logprob: -14.163050651550293
    7. ' n' → logprob: -14.788050651550293
    8. '       ' → logprob: -15.163050651550293
    9. '_n' → logprob: -15.663050651550293
    10. '
' → logprob: -16.28805160522461

Token 1969: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00016027313540689647
    2. '+' → logprob: -9.500160217285156
    3. '):' → logprob: -9.625160217285156
    4. '           ' → logprob: -11.875160217285156
    5. '               ' → logprob: -12.000160217285156
    6. ':
' → logprob: -13.125160217285156
    7. ']:
' → logprob: -14.375160217285156
    8. '                   ' → logprob: -14.500160217285156
    9. '       ' → logprob: -14.500160217285156
    10. '):
' → logprob: -14.625160217285156

Token 1970: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.196732960641384e-05
    2. '                   ' → logprob: -10.750082015991211
    3. '                       ' → logprob: -11.500082015991211
    4. '```' → logprob: -11.625082015991211
    5. '			' → logprob: -11.875082015991211
    6. ' if' → logprob: -11.875082015991211
    7. '	           ' → logprob: -12.125082015991211
    8. '		       ' → logprob: -12.375082015991211
    9. '              ' → logprob: -13.000082015991211
    10. '                ' → logprob: -13.000082015991211

Token 1971: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7110159993171692
    2. '                   ' → logprob: -1.2110159397125244
    3. 'if' (adapté à ' if') → logprob: -1.5860159397125244
    4. '                       ' → logprob: -5.3360161781311035
    5. '               ' → logprob: -7.7110161781311035
    6. '   ' → logprob: -8.086015701293945
    7. '                           ' → logprob: -8.211015701293945
    8. '                               ' → logprob: -8.961015701293945
    9. '```' → logprob: -8.961015701293945
    10. '	if' → logprob: -10.836015701293945

Token 1972: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03817736357450485
    2. ' dp' → logprob: -3.288177251815796
    3. '(dp' → logprob: -8.913177490234375
    4. ' (' → logprob: -13.913177490234375
    5. 'mask' → logprob: -15.788177490234375
    6. '   ' → logprob: -16.288177490234375
    7. '(' → logprob: -16.413177490234375
    8. '	dp' → logprob: -17.288177490234375
    9. '_dp' → logprob: -18.288177490234375
    10. ' mask' → logprob: -18.413177490234375

Token 1973: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1756367712223437e-05
    2. 'mask' → logprob: -12.375011444091797
    3. '```' → logprob: -13.125011444091797
    4. '][' → logprob: -13.250011444091797
    5. '
' → logprob: -13.625011444091797
    6. '_mask' → logprob: -14.125011444091797
    7. ' [' → logprob: -14.250011444091797
    8. '[last' → logprob: -15.875011444091797
    9. '	mask' → logprob: -16.000011444091797
    10. '(mask' → logprob: -16.000011444091797

Token 1974: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.00020580526324920356
    2. '[' → logprob: -9.250205993652344
    3. 'n' → logprob: -9.375205993652344
    4. ' mask' → logprob: -11.500205993652344
    5. '(mask' → logprob: -11.625205993652344
    6. 'len' → logprob: -13.000205993652344
    7. '][' → logprob: -14.125205993652344
    8. '_mask' → logprob: -14.250205993652344
    9. '	mask' → logprob: -14.875205993652344
    10. 'last' → logprob: -15.000205993652344

Token 1975: '][' (ID: 2696)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.01820414699614048
    2. '][' → logprob: -4.018204212188721
    3. '[next' → logprob: -10.518203735351562
    4. '[' → logprob: -11.018203735351562
    5. 'last' → logprob: -12.643203735351562
    6. '[first' → logprob: -13.768203735351562
    7. ' ][' → logprob: -13.893203735351562
    8. '
' → logprob: -14.268203735351562
    9. '   ' → logprob: -14.643203735351562
    10. '[left' → logprob: -14.768203735351562

Token 1976: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.2664456789934775e-06
    2. ' last' → logprob: -13.625000953674316
    3. '(last' → logprob: -18.125001907348633
    4. '_last' → logprob: -18.250001907348633
    5. '[last' → logprob: -18.250001907348633
    6. '	last' → logprob: -20.000001907348633
    7. 'n' → logprob: -20.250001907348633
    8. '0' → logprob: -20.375001907348633
    9. '
' → logprob: -20.500001907348633
    10. 'Last' → logprob: -21.375001907348633

Token 1977: ']==' (ID: 34128)
  Prédit: ']!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.07252012938261032
    2. ']==' → logprob: -3.4475200176239014
    3. ']' → logprob: -3.6975200176239014
    4. ']<' → logprob: -5.0725202560424805
    5. ']+' → logprob: -5.3225202560424805
    6. ']>=' → logprob: -6.9475202560424805
    7. ']>' → logprob: -7.5725202560424805
    8. '!=' → logprob: -8.32252025604248
    9. '```' → logprob: -9.32252025604248
    10. ']!='' → logprob: -9.57252025604248

Token 1978: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.35143643617630005
    2. '0' → logprob: -1.2264363765716553
    3. 'float' → logprob: -7.226436614990234
    4. '
' → logprob: -7.851436614990234
    5. 't' → logprob: -8.101436614990234
    6. ' ' → logprob: -8.351436614990234
    7. 'int' → logprob: -8.601436614990234
    8. '<' → logprob: -8.976436614990234
    9. 'dp' → logprob: -8.976436614990234
    10. '```' → logprob: -9.226436614990234

Token 1979: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.14307424426078796
    2. '9' → logprob: -2.0180742740631104
    3. '```' → logprob: -8.393074035644531
    4. '^' → logprob: -9.018074035644531
    5. '*' → logprob: -10.893074035644531
    6. '
' → logprob: -11.268074035644531
    7. '\xe2\x81' → logprob: -11.643074035644531
    8. '``' → logprob: -12.768074035644531
    9. '###' → logprob: -13.018074035644531
    10. '***' → logprob: -13.518074035644531

Token 1980: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.1008713702030946e-06
    2. '```' → logprob: -13.625001907348633
    3. '
' → logprob: -15.250001907348633
    4. '``' → logprob: -16.000001907348633
    5. '-' → logprob: -16.125001907348633
    6. ' ' → logprob: -16.375001907348633
    7. '3' → logprob: -17.437501907348633
    8. '^' → logprob: -17.812501907348633
    9. '99' → logprob: -18.062501907348633
    10. '`' → logprob: -18.062501907348633

Token 1981: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6326400637626648
    2. ':
' → logprob: -1.6326401233673096
    3. '                           ' → logprob: -2.5076401233673096
    4. '                       ' → logprob: -3.1326401233673096
    5. 'and' → logprob: -3.1326401233673096
    6. '                   ' → logprob: -3.2576401233673096
    7. ':' → logprob: -3.3826401233673096
    8. '                               ' → logprob: -3.6326401233673096
    9. '                                   ' → logprob: -6.2576398849487305
    10. '               ' → logprob: -7.0076398849487305

Token 1982: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06598743796348572
    2. '                       ' → logprob: -2.9409873485565186
    3. '                           ' → logprob: -5.565987586975098
    4. '                               ' → logprob: -6.190987586975098
    5. '                    ' → logprob: -6.815987586975098
    6. '               ' → logprob: -7.315987586975098
    7. '```' → logprob: -7.315987586975098
    8. '                    
' → logprob: -7.815987586975098
    9. '				' → logprob: -7.940987586975098
    10. '                        ' → logprob: -8.315987586975098

Token 1983: ' continue' (ID: 4901)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.6763918399810791
    2. 'continue' (adapté à ' continue') → logprob: -1.426391839981079
    3. '                       ' → logprob: -1.801391839981079
    4. ' continue' → logprob: -3.301391839981079
    5. '                           ' → logprob: -3.926391839981079
    6. '                   ' → logprob: -4.1763916015625
    7. '                                           ' → logprob: -5.4263916015625
    8. '                                   ' → logprob: -5.6763916015625
    9. '                                       ' → logprob: -6.0513916015625
    10. '	continue' → logprob: -6.5513916015625

Token 1984: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5521568059921265
    2. '               ' → logprob: -0.9271568059921265
    3. '                       ' → logprob: -4.427156925201416
    4. '				' → logprob: -5.552156925201416
    5. '                ' → logprob: -5.802156925201416
    6. '			' → logprob: -6.052156925201416
    7. '	               ' → logprob: -6.177156925201416
    8. '```' → logprob: -7.052156925201416
    9. '	' → logprob: -7.177156925201416
    10. '                               ' → logprob: -7.677156925201416

Token 1985: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5434882640838623
    2. '                   ' → logprob: -0.9184882640838623
    3. '                       ' → logprob: -4.668488502502441
    4. '```' → logprob: -4.668488502502441
    5. '			' → logprob: -8.043488502502441
    6. '	               ' → logprob: -8.543488502502441
    7. '				' → logprob: -8.668488502502441
    8. '                ' → logprob: -8.793488502502441
    9. '``' → logprob: -9.543488502502441
    10. '	' → logprob: -9.793488502502441

Token 1986: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.48203688859939575
    2. ' for' → logprob: -1.232036828994751
    3. 'for' (adapté à ' for') → logprob: -2.482036828994751
    4. '               ' → logprob: -6.10703706741333
    5. '                       ' → logprob: -6.23203706741333
    6. '```' → logprob: -6.35703706741333
    7. '				' → logprob: -8.232036590576172
    8. '	for' → logprob: -8.482036590576172
    9. '                ' → logprob: -8.732036590576172
    10. '                               ' → logprob: -9.357036590576172

Token 1987: ' nxt' (ID: 160200)
  Prédit: ' nxt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.4937816560268402
    2. 'n' → logprob: -1.4937816858291626
    3. 'next' → logprob: -1.8687816858291626
    4. ' next' → logprob: -5.868781566619873
    5. 'nj' → logprob: -5.993781566619873
    6. 'nx' → logprob: -6.243781566619873
    7. 'i' → logprob: -6.493781566619873
    8. 'k' → logprob: -7.493781566619873
    9. 'ni' → logprob: -7.743781566619873
    10. 'new' → logprob: -8.493782043457031

Token 1988: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029765525832772255
    2. 'in' → logprob: -3.5297656059265137
    3. ' ' → logprob: -12.529765129089355
    4. '	in' → logprob: -13.029765129089355
    5. 'n' → logprob: -13.154765129089355
    6. ' ' → logprob: -13.654765129089355
    7. '   ' → logprob: -14.154765129089355
    8. 'space' → logprob: -14.404765129089355
    9. '```' → logprob: -14.529765129089355
    10. '  ' → logprob: -14.529765129089355

Token 1989: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47430315613746643
    2. ' range' → logprob: -0.974303126335144
    3. '(range' → logprob: -8.724303245544434
    4. ' in' → logprob: -10.849303245544434
    5. 'last' → logprob: -10.974303245544434
    6. ' last' → logprob: -11.974303245544434
    7. 'in' → logprob: -11.974303245544434
    8. 'n' → logprob: -12.224303245544434
    9. ' n' → logprob: -12.474303245544434
    10. '
' → logprob: -13.349303245544434

Token 1990: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6306011080741882
    2. 'n' → logprob: -0.8806011080741882
    3. ' (' → logprob: -3.505601167678833
    4. ' n' → logprob: -4.005600929260254
    5. '(' → logprob: -5.380600929260254
    6. '(mask' → logprob: -9.255600929260254
    7. '(
' → logprob: -9.755600929260254
    8. '               ' → logprob: -9.880600929260254
    9. '                   ' → logprob: -10.130600929260254
    10. '   ' → logprob: -11.380600929260254

Token 1991: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4643162786960602
    2. '):
' → logprob: -1.0893162488937378
    3. '                   ' → logprob: -4.464316368103027
    4. '                       ' → logprob: -5.214316368103027
    5. ' +' → logprob: -5.339316368103027
    6. '```' → logprob: -5.714316368103027
    7. '               ' → logprob: -6.214316368103027
    8. '                           ' → logprob: -6.339316368103027
    9. ')(
' → logprob: -7.464316368103027
    10. ':
' → logprob: -7.464316368103027

Token 1992: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005119665525853634
    2. '		           ' → logprob: -7.130119800567627
    3. '                           ' → logprob: -7.255119800567627
    4. '                                           ' → logprob: -7.755119800567627
    5. '                    ' → logprob: -8.005119323730469
    6. '```' → logprob: -8.005119323730469
    7. '                ' → logprob: -8.255119323730469
    8. '                    
' → logprob: -8.255119323730469
    9. '                       ' → logprob: -8.255119323730469
    10. '				' → logprob: -8.380119323730469

Token 1993: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5174450874328613
    2. ' if' → logprob: -1.8924450874328613
    3. '```' → logprob: -2.3924450874328613
    4. 'if' (adapté à ' if') → logprob: -2.5174450874328613
    5. '                               ' → logprob: -3.2674450874328613
    6. '                           ' → logprob: -4.267445087432861
    7. '<|end|>' → logprob: -5.017445087432861
    8. '                   ' → logprob: -5.142445087432861
    9. '                                           ' → logprob: -6.142445087432861
    10. '					' → logprob: -6.392445087432861

Token 1994: ' (' (ID: 350)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.0908101797103882
    2. '(mask' → logprob: -1.2158101797103882
    3. ' (' → logprob: -1.7158101797103882
    4. ' mask' → logprob: -2.0908102989196777
    5. 'mask' → logprob: -3.3408102989196777
    6. 'not' → logprob: -3.9658102989196777
    7. '(n' → logprob: -5.340810298919678
    8. '(not' → logprob: -6.090810298919678
    9. '(' → logprob: -6.965810298919678
    10. '((' → logprob: -7.215810298919678

Token 1995: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.24132108688354492
    2. '(mask' → logprob: -2.241321086883545
    3. ' mask' → logprob: -2.491321086883545
    4. ' (' → logprob: -3.866321086883545
    5. ' not' → logprob: -6.116321086883545
    6. 'not' → logprob: -6.491321086883545
    7. '
' → logprob: -8.741321563720703
    8. '(not' → logprob: -8.866321563720703
    9. '(' → logprob: -9.116321563720703
    10. '(n' → logprob: -9.741321563720703

Token 1996: '>>' (ID: 3920)
  Prédit: '&('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&(' → logprob: -0.18037866055965424
    2. '&' → logprob: -2.1803786754608154
    3. ' &' → logprob: -3.8053786754608154
    4. '>>' → logprob: -3.8053786754608154
    5. '>>(' → logprob: -5.055378437042236
    6. '|(' → logprob: -7.805378437042236
    7. ' &(' → logprob: -8.055378913879395
    8. ')&' → logprob: -8.430378913879395
    9. '&type' → logprob: -10.430378913879395
    10. '&
' → logprob: -10.430378913879395

Token 1997: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.5107177862082608e-05
    2. '1' → logprob: -11.750024795532227
    3. '```' → logprob: -12.000024795532227
    4. '
' → logprob: -12.500024795532227
    5. '   ' → logprob: -13.000024795532227
    6. ' nxt' → logprob: -13.375024795532227
    7. 'next' → logprob: -14.125024795532227
    8. '``' → logprob: -14.500024795532227
    9. '(n' → logprob: -14.750024795532227
    10. '`' → logprob: -14.875024795532227

Token 1998: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0007174347410909832
    2. 't' → logprob: -8.250717163085938
    3. 'ext' → logprob: -8.250717163085938
    4. '   ' → logprob: -10.000717163085938
    5. '```' → logprob: -10.000717163085938
    6. '``' → logprob: -10.875717163085938
    7. 'n' → logprob: -11.250717163085938
    8. '
' → logprob: -11.375717163085938
    9. ' nxt' → logprob: -11.375717163085938
    10. 'x' → logprob: -11.375717163085938

Token 1999: ')&' (ID: 34370)
  Prédit: ')&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')&' → logprob: -0.23786018788814545
    2. '&' → logprob: -1.7378602027893066
    3. ')' → logprob: -3.3628602027893066
    4. ' &' → logprob: -7.237860202789307
    5. '1' → logprob: -8.362859725952148
    6. 'n' → logprob: -9.862859725952148
    7. '&amp' → logprob: -9.987859725952148
    8. '```' → logprob: -10.487859725952148
    9. '0' → logprob: -10.862859725952148
    10. '   ' → logprob: -10.987859725952148

Token 2000: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024762547109276056
    2. '0' → logprob: -6.002476215362549
    3. '
' → logprob: -14.502476692199707
    4. ' ' → logprob: -17.37747573852539
    5. 'False' → logprob: -17.87747573852539
    6. '```' → logprob: -18.00247573852539
    7. '   ' → logprob: -18.75247573852539
    8. '(' → logprob: -19.87747573852539
    9. '

' → logprob: -20.12747573852539
    10. '' → logprob: -20.12747573852539

Token 2001: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006170878652483225
    2. ' ==' → logprob: -5.631170749664307
    3. ')==' → logprob: -6.256170749664307
    4. ']==' → logprob: -7.631170749664307
    5. '==
' → logprob: -9.006171226501465
    6. '()==' → logprob: -10.881171226501465
    7. '']==' → logprob: -12.131171226501465
    8. '```' → logprob: -12.256171226501465
    9. '===' → logprob: -12.881171226501465
    10. '                           ' → logprob: -13.756171226501465

Token 2002: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '۰' → logprob: -20.75
    4. '```' → logprob: -21.25
    5. '   ' → logprob: -21.375
    6. '
' → logprob: -21.375
    7. ' ' → logprob: -22.5
    8. 'False' → logprob: -22.75
    9. '1' → logprob: -23.125
    10. '０' → logprob: -23.25

Token 2003: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.229678675532341
    2. '                       ' → logprob: -1.7296786308288574
    3. ':
' → logprob: -4.479678630828857
    4. '                   ' → logprob: -5.354678630828857
    5. '                           ' → logprob: -5.354678630828857
    6. ':' → logprob: -5.354678630828857
    7. '                               ' → logprob: -6.604678630828857
    8. 'and' → logprob: -8.479679107666016
    9. '                        ' → logprob: -8.479679107666016
    10. '               ' → logprob: -9.604679107666016

Token 2004: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1682279407978058
    2. '                           ' → logprob: -2.6682279109954834
    3. '                               ' → logprob: -3.1682279109954834
    4. '                        ' → logprob: -4.4182281494140625
    5. '                   ' → logprob: -5.2932281494140625
    6. '                        
' → logprob: -5.5432281494140625
    7. '                            ' → logprob: -5.5432281494140625
    8. '```' → logprob: -5.9182281494140625
    9. '                                ' → logprob: -6.1682281494140625
    10. '                    ' → logprob: -6.4182281494140625

Token 2005: ' g' (ID: 329)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8685282468795776
    2. 'd' → logprob: -1.6185282468795776
    3. ' dist' → logprob: -1.7435282468795776
    4. 'dist' → logprob: -2.243528366088867
    5. ' nd' → logprob: -3.118528366088867
    6. ' nxt' → logprob: -4.243528366088867
    7. ' t' → logprob: -4.743528366088867
    8. '                           ' → logprob: -4.743528366088867
    9. 't' → logprob: -5.368528366088867
    10. 'nd' → logprob: -5.743528366088867

Token 2006: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.1006598249077797
    2. ',' → logprob: -2.6006598472595215
    3. ',n' → logprob: -4.2256598472595215
    4. 'd' → logprob: -5.7256598472595215
    5. '=d' → logprob: -7.3506598472595215
    6. ' ,' → logprob: -7.6006598472595215
    7. '_,' → logprob: -7.7256598472595215
    8. '_d' → logprob: -8.350659370422363
    9. '_n' → logprob: -8.600659370422363
    10. ',_' → logprob: -8.600659370422363

Token 2007: ',s' (ID: 20379)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.1347920298576355
    2. ',' → logprob: -2.6347920894622803
    3. '=' → logprob: -3.8847920894622803
    4. ',s' → logprob: -4.759791851043701
    5. ',e' → logprob: -5.259791851043701
    6. '=n' → logprob: -5.634791851043701
    7. '[n' → logprob: -5.759791851043701
    8. 's' → logprob: -6.134791851043701
    9. 'n' → logprob: -6.384791851043701
    10. ',d' → logprob: -6.509791851043701

Token 2008: ',e' (ID: 43127)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.2195715457201004
    2. '[n' → logprob: -2.719571590423584
    3. ',' → logprob: -3.094571590423584
    4. '=n' → logprob: -3.344571590423584
    5. '=' → logprob: -3.594571590423584
    6. '_n' → logprob: -5.094571590423584
    7. '=s' → logprob: -6.219571590423584
    8. ',e' → logprob: -6.344571590423584
    9. '[next' → logprob: -6.594571590423584
    10. 'n' → logprob: -6.844571590423584

Token 2009: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06004778668284416
    2. '==' → logprob: -3.1850478649139404
    3. '<=' → logprob: -4.935047626495361
    4. '>=' → logprob: -5.310047626495361
    5. '```' → logprob: -6.685047626495361
    6. '=n' → logprob: -7.060047626495361
    7. '=int' → logprob: -7.060047626495361
    8. ' =' → logprob: -8.43504810333252
    9. '=d' → logprob: -8.68504810333252
    10. '=t' → logprob: -8.81004810333252

Token 2010: 'product' (ID: 5260)
  Prédit: 'product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.07891589403152466
    2. ' product' → logprob: -2.57891583442688
    3. 'n' → logprob: -11.0789155960083
    4. '(product' → logprob: -12.2039155960083
    5. '	product' → logprob: -13.0789155960083
    6. '$product' → logprob: -13.3289155960083
    7. '                           ' → logprob: -14.7039155960083
    8. '_product' → logprob: -15.0789155960083
    9. ' n' → logprob: -15.3289155960083
    10. '                       ' → logprob: -15.7039155960083

Token 2011: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.1284562349319458
    2. '_product' → logprob: -2.2534561157226562
    3. 'product' → logprob: -4.253456115722656
    4. 'info' → logprob: -8.378456115722656
    5. '_user' → logprob: -8.378456115722656
    6. '[i' → logprob: -8.878456115722656
    7. '_i' → logprob: -9.003456115722656
    8. 'user' → logprob: -9.378456115722656
    9. '```' → logprob: -9.503456115722656
    10. '_code' → logprob: -9.753456115722656

Token 2012: '_list' (ID: 4162)
  Prédit: '_info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.0008268986130133271
    2. '_list' → logprob: -7.375826835632324
    3. 'info' → logprob: -9.625826835632324
    4. '[n' → logprob: -10.375826835632324
    5. 'user' → logprob: -10.750826835632324
    6. '_product' → logprob: -10.875826835632324
    7. 'Info' → logprob: -10.875826835632324
    8. 'product' → logprob: -11.125826835632324
    9. '_user' → logprob: -11.500826835632324
    10. '[user' → logprob: -12.000826835632324

Token 2013: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0005824613617733121
    2. '[i' → logprob: -7.875582695007324
    3. '```' → logprob: -9.250582695007324
    4. '[next' → logprob: -10.250582695007324
    5. '(n' → logprob: -10.625582695007324
    6. '][' → logprob: -11.125582695007324
    7. '[' → logprob: -11.500582695007324
    8. ')[' → logprob: -12.125582695007324
    9. '                       ' → logprob: -12.875582695007324
    10. '           ' → logprob: -13.125582695007324

Token 2014: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.011489496566355228
    2. '[n' → logprob: -5.386489391326904
    3. 'n' → logprob: -5.886489391326904
    4. '][' → logprob: -6.011489391326904
    5. '   ' → logprob: -8.011489868164062
    6. 'ext' → logprob: -8.261489868164062
    7. 'x' → logprob: -8.636489868164062
    8. ']' → logprob: -9.011489868164062
    9. '```' → logprob: -9.011489868164062
    10. '
' → logprob: -9.136489868164062

Token 2015: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.31094494462013245
    2. '][' → logprob: -2.3109450340270996
    3. ']' → logprob: -3.3109450340270996
    4. '                       ' → logprob: -3.3109450340270996
    5. '                           ' → logprob: -3.3109450340270996
    6. ')
' → logprob: -4.4359450340271
    7. ']:
' → logprob: -4.6859450340271
    8. '[n' → logprob: -5.0609450340271
    9. ':
' → logprob: -5.3109450340271
    10. ',n' → logprob: -5.4359450340271

Token 2016: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.03683784231543541
    2. '```' → logprob: -4.286838054656982
    3. '						' → logprob: -4.661838054656982
    4. '                       ' → logprob: -5.536838054656982
    5. '	                       ' → logprob: -6.036838054656982
    6. '                               ' → logprob: -6.161838054656982
    7. ',' → logprob: -7.536838054656982
    8. ' ' → logprob: -7.661838054656982
    9. '                            ' → logprob: -7.911838054656982
    10. '`' → logprob: -7.911838054656982

Token 2017: ' cost' (ID: 3097)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3852892220020294
    2. 't' → logprob: -3.135289192199707
    3. ' time' → logprob: -3.135289192199707
    4. ' nxt' → logprob: -3.260289192199707
    5. ' arrival' → logprob: -3.385289192199707
    6. ' nd' → logprob: -3.385289192199707
    7. ' dist' → logprob: -3.510289192199707
    8. ' nt' → logprob: -3.760289192199707
    9. ' if' → logprob: -4.260289192199707
    10. 'time' → logprob: -4.760289192199707

Token 2018: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02447398193180561
    2. ' =' → logprob: -3.7744739055633545
    3. '=n' → logprob: -7.524474143981934
    4. '+' → logprob: -8.899474143981934
    5. '=
' → logprob: -9.024474143981934
    6. '=d' → logprob: -9.399474143981934
    7. '=[' → logprob: -9.649474143981934
    8. '[' → logprob: -9.774474143981934
    9. '[n' → logprob: -9.899474143981934
    10. '+=' → logprob: -10.649474143981934

Token 2019: 'dist' (ID: 24126)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0021294450853019953
    2. ' dp' → logprob: -6.502129554748535
    3. 'dist' → logprob: -7.377129554748535
    4. ' dist' → logprob: -14.377129554748535
    5. '(dp' → logprob: -14.627129554748535
    6. '	dp' → logprob: -15.627129554748535
    7. '                   ' → logprob: -16.62712860107422
    8. '   ' → logprob: -16.75212860107422
    9. 'd' → logprob: -16.87712860107422
    10. 'dj' → logprob: -17.25212860107422

Token 2020: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -9.014684110297821e-06
    2. 'p' → logprob: -12.250008583068848
    3. '[last' → logprob: -13.750008583068848
    4. '_start' → logprob: -14.000008583068848
    5. '[start' → logprob: -14.000008583068848
    6. '```' → logprob: -15.000008583068848
    7. '[' → logprob: -15.875008583068848
    8. '_n' → logprob: -15.875008583068848
    9. '[n' → logprob: -16.000009536743164
    10. 'n' → logprob: -16.000009536743164

Token 2021: '2' (ID: 17)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0003210422000847757
    2. 'p' → logprob: -8.125321388244629
    3. 'n' → logprob: -11.250321388244629
    4. '[n' → logprob: -12.750321388244629
    5. '[start' → logprob: -13.250321388244629
    6. '```' → logprob: -13.375321388244629
    7. '[' → logprob: -13.625321388244629
    8. 'start' → logprob: -14.125321388244629
    9. '2' → logprob: -14.125321388244629
    10. '[[' → logprob: -14.250321388244629

Token 2022: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03850225731730461
    2. '2' → logprob: -3.6635022163391113
    3. '_p' → logprob: -4.413502216339111
    4. '```' → logprob: -12.66350269317627
    5. '_' → logprob: -13.03850269317627
    6. 'n' → logprob: -13.16350269317627
    7. '
' → logprob: -13.53850269317627
    8. '][' → logprob: -13.91350269317627
    9. 'P' → logprob: -14.53850269317627
    10. '``' → logprob: -14.78850269317627

Token 2023: '[last' (ID: 126100)
  Prédit: '[last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -4.7755875129951164e-05
    2. '[n' → logprob: -10.25004768371582
    3. '[' → logprob: -11.87504768371582
    4. '[[' → logprob: -13.12504768371582
    5. '[now' → logprob: -14.00004768371582
    6. 'last' → logprob: -14.12504768371582
    7. '][' → logprob: -15.00004768371582
    8. '[next' → logprob: -15.00004768371582
    9. 'dp' → logprob: -15.50004768371582
    10. ' [' → logprob: -15.75004768371582

Token 2024: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0160544291138649
    2. '[n' → logprob: -4.141054630279541
    3. ']' → logprob: -12.391054153442383
    4. '   ' → logprob: -12.766054153442383
    5. '       ' → logprob: -13.016054153442383
    6. 'n' → logprob: -13.016054153442383
    7. '```' → logprob: -13.141054153442383
    8. '
' → logprob: -13.766054153442383
    9. ' ][' → logprob: -14.016054153442383
    10. '[next' → logprob: -14.266054153442383

Token 2025: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.981667537620524e-06
    2. '
' → logprob: -13.625001907348633
    3. ']' → logprob: -15.750001907348633
    4. 'next' → logprob: -16.000001907348633
    5. '```' → logprob: -16.000001907348633
    6. '][' → logprob: -16.375001907348633
    7. '[n' → logprob: -16.625001907348633
    8. '(n' → logprob: -16.625001907348633
    9. ' nxt' → logprob: -16.750001907348633
    10. '
' → logprob: -16.875001907348633

Token 2026: 'xt' (ID: 711)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016214311122894287
    2. 'xt' → logprob: -4.141214370727539
    3. 'x' → logprob: -10.016214370727539
    4. 'j' → logprob: -10.391214370727539
    5. '[n' → logprob: -10.891214370727539
    6. '][' → logprob: -10.891214370727539
    7. '```' → logprob: -11.016214370727539
    8. ']' → logprob: -11.391214370727539
    9. 'st' → logprob: -12.391214370727539
    10. '
' → logprob: -12.516214370727539

Token 2027: ']
' (ID: 1592)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.02526400238275528
    2. ']' → logprob: -3.775264024734497
    3. '][' → logprob: -6.900263786315918
    4. '[n' → logprob: -7.525263786315918
    5. '+n' → logprob: -8.275263786315918
    6. '+' → logprob: -8.775263786315918
    7. '[' → logprob: -11.400263786315918
    8. '[next' → logprob: -11.525263786315918
    9. ']
' → logprob: -11.650263786315918
    10. ']+=' → logprob: -12.150263786315918

Token 2028: '                       ' (ID: 968)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12626293301582336
    2. ' +' → logprob: -3.001262903213501
    3. '                       ' → logprob: -3.876262903213501
    4. '                           ' → logprob: -4.00126314163208
    5. '                               ' → logprob: -4.75126314163208
    6. '```' → logprob: -5.37626314163208
    7. ' if' → logprob: -5.75126314163208
    8. 'if' → logprob: -6.12626314163208
    9. '<|end|>' → logprob: -6.25126314163208
    10. ')' → logprob: -6.87626314163208

Token 2029: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9257388710975647
    2. ' if' → logprob: -1.55073881149292
    3. 't' → logprob: -2.17573881149292
    4. 'arr' → logprob: -2.17573881149292
    5. 'arrival' → logprob: -2.80073881149292
    6. 'time' → logprob: -3.42573881149292
    7. 'next' → logprob: -4.17573881149292
    8. ' arrival' → logprob: -4.30073881149292
    9. ' t' → logprob: -4.30073881149292
    10. 'new' → logprob: -4.92573881149292

Token 2030: ' cost' (ID: 3097)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1529368758201599
    2. 'cost' → logprob: -2.0279369354248047
    3. ' dp' → logprob: -4.777936935424805
    4. ' cost' → logprob: -6.527936935424805
    5. 'dist' → logprob: -8.652936935424805
    6. 't' → logprob: -9.902936935424805
    7. '   ' → logprob: -10.902936935424805
    8. '                   ' → logprob: -11.152936935424805
    9. '               ' → logprob: -11.277936935424805
    10. '(dp' → logprob: -11.402936935424805

Token 2031: '==' (ID: 560)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.41113612055778503
    2. '!=' → logprob: -1.7861361503601074
    3. '<=' → logprob: -2.0361361503601074
    4. '==' → logprob: -4.786136150360107
    5. ' !=' → logprob: -4.786136150360107
    6. '>=' → logprob: -4.786136150360107
    7. ' +' → logprob: -5.411136150360107
    8. ' <=' → logprob: -5.786136150360107
    9. '```' → logprob: -6.161136150360107
    10. '>' → logprob: -6.536136150360107

Token 2032: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.4378848391061183e-05
    2. ' ' → logprob: -12.125014305114746
    3. '-' → logprob: -12.750014305114746
    4. '```' → logprob: -13.375014305114746
    5. '0' → logprob: -13.500014305114746
    6. '100' → logprob: -14.500014305114746
    7. '   ' → logprob: -15.125014305114746
    8. '
' → logprob: -15.125014305114746
    9. 'float' → logprob: -15.250014305114746
    10. '<' → logprob: -15.250014305114746

Token 2033: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.676292231422849e-05
    2. '```' → logprob: -11.250017166137695
    3. '9' → logprob: -13.500017166137695
    4. '*' → logprob: -13.625017166137695
    5. '***' → logprob: -14.125017166137695
    6. '
' → logprob: -16.375017166137695
    7. '^' → logprob: -16.625017166137695
    8. '****' → logprob: -17.250017166137695
    9. '\' → logprob: -17.250017166137695
    10. '\xe2\x81' → logprob: -17.500017166137695

Token 2034: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.511406809295295e-06
    2. '```' → logprob: -12.750006675720215
    3. '**' → logprob: -14.375006675720215
    4. '999' → logprob: -14.625006675720215
    5. '99' → logprob: -15.000006675720215
    6. '^' → logprob: -15.000006675720215
    7. '``' → logprob: -15.125006675720215
    8. '
' → logprob: -15.500006675720215
    9. '19' → logprob: -15.750006675720215
    10. ' ' → logprob: -15.750006675720215

Token 2035: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.38748836517333984
    2. ':' → logprob: -2.38748836517334
    3. ' or' → logprob: -2.51248836517334
    4. ':
' → logprob: -2.63748836517334
    5. '                       ' → logprob: -3.38748836517334
    6. '                               ' → logprob: -4.26248836517334
    7. '+' → logprob: -4.26248836517334
    8. ' and' → logprob: -5.01248836517334
    9. '                   ' → logprob: -6.76248836517334
    10. ':return' → logprob: -6.88748836517334

Token 2036: '                           ' (ID: 1686)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5635748505592346
    2. '                           ' → logprob: -1.1885747909545898
    3. '                       ' → logprob: -2.81357479095459
    4. '                               ' → logprob: -3.56357479095459
    5. '+' → logprob: -4.06357479095459
    6. ':' → logprob: -5.06357479095459
    7. ':
' → logprob: -5.56357479095459
    8. '==' → logprob: -5.93857479095459
    9. 'and' → logprob: -6.31357479095459
    10. '```' → logprob: -6.81357479095459

Token 2037: ' continue' (ID: 4901)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.8844351768493652
    2. ' continue' → logprob: -0.8844351768493652
    3. 'continue' (adapté à ' continue') → logprob: -2.2594351768493652
    4. '                           ' → logprob: -3.0094351768493652
    5. '							' → logprob: -5.009435176849365
    6. '                                   ' → logprob: -5.509435176849365
    7. '	continue' → logprob: -5.634435176849365
    8. '						' → logprob: -6.259435176849365
    9. '								' → logprob: -6.759435176849365
    10. '                       ' → logprob: -7.384435176849365

Token 2038: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.19697153568267822
    2. '                               ' → logprob: -2.3219714164733887
    3. '                       ' → logprob: -3.0719714164733887
    4. ':
' → logprob: -4.446971416473389
    5. '```' → logprob: -4.696971416473389
    6. ' and' → logprob: -4.946971416473389
    7. ':' → logprob: -6.071971416473389
    8. '                            
' → logprob: -7.571971416473389
    9. ',' → logprob: -7.696971416473389
    10. '                            ' → logprob: -7.821971416473389

Token 2039: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.05133223533630371
    2. '                           ' → logprob: -3.5513322353363037
    3. '                               ' → logprob: -4.551332473754883
    4. '					' → logprob: -5.426332473754883
    5. '```' → logprob: -6.676332473754883
    6. '						' → logprob: -7.051332473754883
    7. '                        
' → logprob: -7.176332473754883
    8. '                        ' → logprob: -7.551332473754883
    9. '	                       ' → logprob: -7.926332473754883
    10. '							' → logprob: -8.051332473754883

Token 2040: ' arrival' (ID: 24861)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5151760578155518
    2. 't' → logprob: -1.8901760578155518
    3. ' arrival' → logprob: -2.5151760578155518
    4. ' new' → logprob: -3.1401760578155518
    5. ' time' → logprob: -4.015175819396973
    6. 'arrival' (adapté à ' arrival') → logprob: -4.015175819396973
    7. ' nxt' → logprob: -4.015175819396973
    8. ' if' → logprob: -4.265175819396973
    9. 'time' → logprob: -4.515175819396973
    10. ' next' → logprob: -4.515175819396973

Token 2041: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.02772749774158001
    2. '=' → logprob: -4.1527276039123535
    3. '=_' → logprob: -4.6527276039123535
    4. '=time' → logprob: -6.2777276039123535
    5. '_t' → logprob: -9.652727127075195
    6. '=t' → logprob: -10.027727127075195
    7. '=n' → logprob: -10.652727127075195
    8. ' =' → logprob: -10.902727127075195
    9. '_=' → logprob: -11.527727127075195
    10. 'time' → logprob: -11.527727127075195

Token 2042: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014166327193379402
    2. ' =' → logprob: -4.264166355133057
    3. '=
' → logprob: -14.264165878295898
    4. ' ' → logprob: -15.014165878295898
    5. '=d' → logprob: -15.264165878295898
    6. '=df' → logprob: -15.264165878295898
    7. '=db' → logprob: -15.514165878295898
    8. '=time' → logprob: -15.889165878295898
    9. '   ' → logprob: -16.0141658782959
    10. '=max' → logprob: -16.2641658782959

Token 2043: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.6166903151315637e-05
    2. ' dp' → logprob: -11.250016212463379
    3. 'max' → logprob: -12.750016212463379
    4. '                   ' → logprob: -17.625015258789062
    5. '           ' → logprob: -17.750015258789062
    6. '	dp' → logprob: -17.875015258789062
    7. '               ' → logprob: -18.000015258789062
    8. '   ' → logprob: -18.375015258789062
    9. '(dp' → logprob: -19.250015258789062
    10. '                       ' → logprob: -19.500015258789062

Token 2044: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. 'mask' → logprob: -13.75000286102295
    3. '```' → logprob: -13.75000286102295
    4. ' [' → logprob: -15.75000286102295
    5. '_mask' → logprob: -15.87500286102295
    6. '
' → logprob: -16.375003814697266
    7. '(mask' → logprob: -16.875003814697266
    8. '][' → logprob: -16.875003814697266
    9. '	mask' → logprob: -17.000003814697266
    10. '   ' → logprob: -17.250003814697266

Token 2045: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -4.620622712536715e-05
    2. '[' → logprob: -10.000045776367188
    3. ' mask' → logprob: -14.250045776367188
    4. '(mask' → logprob: -17.250045776367188
    5. '	mask' → logprob: -17.250045776367188
    6. 'last' → logprob: -20.000045776367188
    7. '
' → logprob: -20.000045776367188
    8. '_mask' → logprob: -20.250045776367188
    9. '][' → logprob: -20.875045776367188
    10. '   ' → logprob: -21.000045776367188

Token 2046: '][' (ID: 2696)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.04865311458706856
    2. '][' → logprob: -3.0486531257629395
    3. '[' → logprob: -10.173652648925781
    4. '[next' → logprob: -12.048652648925781
    5. '[left' → logprob: -12.298652648925781
    6. '[end' → logprob: -13.048652648925781
    7. '
' → logprob: -13.298652648925781
    8. '[now' → logprob: -13.298652648925781
    9. '```' → logprob: -13.423652648925781
    10. '>[' → logprob: -13.423652648925781

Token 2047: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.5213274309644476e-05
    2. '[last' → logprob: -11.125015258789062
    3. ' last' → logprob: -15.250015258789062
    4. '(last' → logprob: -16.250015258789062
    5. '
' → logprob: -16.375015258789062
    6. '_last' → logprob: -16.875015258789062
    7. '	last' → logprob: -17.375015258789062
    8. 'n' → logprob: -17.625015258789062
    9. ',last' → logprob: -18.375015258789062
    10. 'Last' → logprob: -19.000015258789062

Token 2048: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20946268737316132
    2. ']+' → logprob: -2.3344626426696777
    3. '[' → logprob: -3.0844626426696777
    4. '][' → logprob: -3.9594626426696777
    5. '[n' → logprob: -4.459462642669678
    6. '[last' → logprob: -4.959462642669678
    7. '+[' → logprob: -5.709462642669678
    8. ' +' → logprob: -5.959462642669678
    9. '+n' → logprob: -6.459462642669678
    10. '[next' → logprob: -7.834462642669678

Token 2049: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -5.717296517104842e-05
    2. '1' → logprob: -10.375057220458984
    3. ' cost' → logprob: -10.750057220458984
    4. '(cost' → logprob: -12.375057220458984
    5. 'dist' → logprob: -15.625057220458984
    6. '```' → logprob: -17.375057220458984
    7. '
' → logprob: -17.500057220458984
    8. '`' → logprob: -18.000057220458984
    9. '_cost' → logprob: -18.875057220458984
    10. '(' → logprob: -18.875057220458984

Token 2050: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.43359261751174927
    2. '<|end|>' → logprob: -2.3085925579071045
    3. '<=' → logprob: -2.9335925579071045
    4. '+' → logprob: -2.9335925579071045
    5. ' if' → logprob: -3.4335925579071045
    6. '
' → logprob: -3.5585925579071045
    7. '                        
' → logprob: -4.433592796325684
    8. '					' → logprob: -4.558592796325684
    9. ' <=' → logprob: -4.558592796325684
    10. '                           ' → logprob: -4.558592796325684

Token 2051: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1329389214515686
    2. '```' → logprob: -2.757938861846924
    3. '                           ' → logprob: -3.382938861846924
    4. ' if' → logprob: -4.632938861846924
    5. '                               ' → logprob: -4.757938861846924
    6. '<|end|>' → logprob: -6.382938861846924
    7. 'if' → logprob: -6.632938861846924
    8. '                        
' → logprob: -7.132938861846924
    9. '					' → logprob: -7.132938861846924
    10. '                        ' → logprob: -7.382938861846924

Token 2052: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5674290657043457
    2. 'if' (adapté à ' if') → logprob: -1.5674290657043457
    3. '                       ' → logprob: -1.5674290657043457
    4. '                           ' → logprob: -4.942429065704346
    5. '                               ' → logprob: -5.942429065704346
    6. '					' → logprob: -6.692429065704346
    7. '                        ' → logprob: -6.817429065704346
    8. '	if' → logprob: -7.317429065704346
    9. '                        
' → logprob: -7.567429065704346
    10. '						' → logprob: -7.567429065704346

Token 2053: ' arrival' (ID: 24861)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.02976888418197632
    2. ' arrival' → logprob: -3.529768943786621
    3. 'arr' → logprob: -11.279768943786621
    4. 's' → logprob: -12.154768943786621
    5. ' s' → logprob: -14.529768943786621
    6. '   ' → logprob: -18.154767990112305
    7. ' ' → logprob: -19.279767990112305
    8. ' ' → logprob: -19.654767990112305
    9. 'Arrival' → logprob: -19.654767990112305
    10. '```' → logprob: -19.904767990112305

Token 2054: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -5.490809417096898e-05
    2. ' _' → logprob: -10.500055313110352
    3. '[_' → logprob: -11.000055313110352
    4. ']_' → logprob: -13.125055313110352
    5. ')_' → logprob: -13.250055313110352
    6. '_' → logprob: -14.000055313110352
    7. '._' → logprob: -14.500055313110352
    8. '_TIME' → logprob: -14.500055313110352
    9. '[n' → logprob: -14.750055313110352
    10. '```' → logprob: -14.875055313110352

Token 2055: '>=' (ID: 20974)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2682258188724518
    2. ' <=' → logprob: -1.5182257890701294
    3. '>=' → logprob: -4.39322566986084
    4. '<' → logprob: -6.64322566986084
    5. ' >=' → logprob: -6.76822566986084
    6. '```' → logprob: -7.76822566986084
    7. '[' → logprob: -8.01822566986084
    8. ' <' → logprob: -9.01822566986084
    9. '                           ' → logprob: -9.26822566986084
    10. '                               ' → logprob: -9.89322566986084

Token 2056: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.7954958821064793e-05
    2. ' s' → logprob: -11.125018119812012
    3. '                       ' → logprob: -14.125018119812012
    4. '                   ' → logprob: -14.625018119812012
    5. '                           ' → logprob: -14.875018119812012
    6. '
' → logprob: -15.125018119812012
    7. '```' → logprob: -15.250018119812012
    8. '`s' → logprob: -15.375018119812012
    9. '           ' → logprob: -15.500018119812012
    10. '               ' → logprob: -15.625018119812012

Token 2057: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16181400418281555
    2. 'and' → logprob: -1.9118139743804932
    3. '                           ' → logprob: -6.536814212799072
    4. '                       ' → logprob: -9.536813735961914
    5. '                            ' → logprob: -11.161813735961914
    6. '                               ' → logprob: -11.286813735961914
    7. '```' → logprob: -11.411813735961914
    8. '                        ' → logprob: -12.161813735961914
    9. '                          ' → logprob: -12.286813735961914
    10. '                             ' → logprob: -12.536813735961914

Token 2058: ' arrival' (ID: 24861)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.0067161982879042625
    2. ' arrival' → logprob: -5.006716251373291
    3. 'arr' → logprob: -14.256715774536133
    4. '           ' → logprob: -16.881715774536133
    5. '```' → logprob: -17.756715774536133
    6. '                           ' → logprob: -18.131715774536133
    7. ' ' → logprob: -18.881715774536133
    8. '                   ' → logprob: -19.256715774536133
    9. '
' → logprob: -19.256715774536133
    10. 'Arrival' → logprob: -19.381715774536133

Token 2059: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00039528406341560185
    2. '[n' → logprob: -8.500394821166992
    3. '[_' → logprob: -10.500394821166992
    4. '```' → logprob: -10.750394821166992
    5. '[' → logprob: -10.875394821166992
    6. '_n' → logprob: -11.125394821166992
    7. '[next' → logprob: -11.500394821166992
    8. 'n' → logprob: -11.500394821166992
    9. '<n' → logprob: -11.750394821166992
    10. '``' → logprob: -11.750394821166992

Token 2060: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.00039051592466421425
    2. ' <=' → logprob: -8.25039005279541
    3. ']<=' → logprob: -10.25039005279541
    4. '```' → logprob: -10.25039005279541
    5. '<' → logprob: -11.00039005279541
    6. '[' → logprob: -11.12539005279541
    7. '[n' → logprob: -11.25039005279541
    8. '≤' → logprob: -12.62539005279541
    9. ')<=' → logprob: -12.87539005279541
    10. '[arr' → logprob: -13.00039005279541

Token 2061: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00043376852408982813
    2. ' e' → logprob: -7.750433921813965
    3. '   ' → logprob: -14.375433921813965
    4. '```' → logprob: -14.500433921813965
    5. '	e' → logprob: -14.625433921813965
    6. '
' → logprob: -14.625433921813965
    7. '           ' → logprob: -15.375433921813965
    8. '       ' → logprob: -15.625433921813965
    9. ''e' → logprob: -15.875433921813965
    10. ' ' → logprob: -16.00043296813965

Token 2062: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6114435195922852
    2. ':' → logprob: -0.8614435195922852
    3. '                           ' → logprob: -3.986443519592285
    4. ' and' → logprob: -4.361443519592285
    5. '                       ' → logprob: -5.861443519592285
    6. '                               ' → logprob: -7.986443519592285
    7. 'and' → logprob: -8.861443519592285
    8. '```' → logprob: -9.861443519592285
    9. '[' → logprob: -10.361443519592285
    10. ':

' → logprob: -10.861443519592285

Token 2063: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0011628384236246347
    2. '                               ' → logprob: -7.001163005828857
    3. '                       ' → logprob: -9.2511625289917
    4. ':
' → logprob: -9.3761625289917
    5. '```' → logprob: -10.1261625289917
    6. '                          ' → logprob: -12.2511625289917
    7. '                            ' → logprob: -12.2511625289917
    8. '                                   ' → logprob: -12.3761625289917
    9. ':' → logprob: -12.7511625289917
    10. '                            
' → logprob: -12.8761625289917

Token 2064: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10586769878864288
    2. ' dp' → logprob: -2.355867624282837
    3. 'if' (adapté à ' if') → logprob: -6.105867862701416
    4. '                               ' → logprob: -6.230867862701416
    5. ' if' → logprob: -6.730867862701416
    6. '                           ' → logprob: -8.980867385864258
    7. '                                   ' → logprob: -9.480867385864258
    8. '```' → logprob: -10.980867385864258
    9. '(dp' → logprob: -12.105867385864258
    10. '	dp' → logprob: -12.105867385864258

Token 2065: ' arrival' (ID: 24861)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06259885430335999
    2. ' dp' → logprob: -3.062598943710327
    3. 'arrival' → logprob: -4.437598705291748
    4. ' arrival' → logprob: -6.187598705291748
    5. 'arr' → logprob: -11.437599182128906
    6. '                           ' → logprob: -11.562599182128906
    7. '(dp' → logprob: -12.062599182128906
    8. '                               ' → logprob: -13.187599182128906
    9. '	dp' → logprob: -13.687599182128906
    10. '                                   ' → logprob: -13.687599182128906

Token 2066: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0026115672662854195
    2. '[' → logprob: -6.5026116371154785
    3. '][' → logprob: -7.6276116371154785
    4. '_mask' → logprob: -8.37761116027832
    5. 'ation' → logprob: -9.62761116027832
    6. '_size' → logprob: -9.87761116027832
    7. '                       ' → logprob: -10.00261116027832
    8. '_token' → logprob: -10.62761116027832
    9. '_' → logprob: -10.75261116027832
    10. '           ' → logprob: -11.25261116027832

Token 2067: '<' (ID: 27)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3843989074230194
    2. '<' → logprob: -1.6343989372253418
    3. '][' → logprob: -2.759398937225342
    4. '+' → logprob: -4.134398937225342
    5. 'dp' → logprob: -4.384398937225342
    6. ' <' → logprob: -5.009398937225342
    7. '[token' → logprob: -5.634398937225342
    8. '<=' → logprob: -6.009398937225342
    9. '                           ' → logprob: -6.134398937225342
    10. '<n' → logprob: -6.759398937225342

Token 2068: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0004315036640036851
    2. ' dp' → logprob: -7.750431537628174
    3. '                           ' → logprob: -15.000431060791016
    4. '	dp' → logprob: -16.125431060791016
    5. '                               ' → logprob: -16.500431060791016
    6. '=' → logprob: -16.500431060791016
    7. '(dp' → logprob: -16.750431060791016
    8. '_dp' → logprob: -17.375431060791016
    9. '                                   ' → logprob: -17.875431060791016
    10. '
' → logprob: -18.625431060791016

Token 2069: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4849443838757e-06
    2. '```' → logprob: -13.250004768371582
    3. '[n' → logprob: -14.000004768371582
    4. '               ' → logprob: -14.625004768371582
    5. '][' → logprob: -15.000004768371582
    6. '                   ' → logprob: -15.125004768371582
    7. 'mask' → logprob: -15.375004768371582
    8. '           ' → logprob: -15.625004768371582
    9. '                       ' → logprob: -15.875004768371582
    10. '                           ' → logprob: -16.750003814697266

Token 2070: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -2.45848218582978e-06
    2. '(mask' → logprob: -13.12500286102295
    3. ' mask' → logprob: -15.12500286102295
    4. '           ' → logprob: -18.000001907348633
    5. '	mask' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '               ' → logprob: -18.250001907348633
    8. '[' → logprob: -18.250001907348633
    9. '
' → logprob: -18.375001907348633
    10. '                   ' → logprob: -18.625001907348633

Token 2071: '|(' (ID: 153684)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20147308707237244
    2. '][' → logprob: -1.7014731168746948
    3. '           ' → logprob: -10.951473236083984
    4. '               ' → logprob: -11.576473236083984
    5. '```' → logprob: -11.701473236083984
    6. '                   ' → logprob: -12.326473236083984
    7. '   ' → logprob: -12.576473236083984
    8. '       ' → logprob: -12.576473236083984
    9. ']' → logprob: -12.701473236083984
    10. '                       ' → logprob: -12.826473236083984

Token 2072: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. '(' → logprob: -12.125005722045898
    3. '(n' → logprob: -16.1250057220459
    4. '```' → logprob: -16.3750057220459
    5. ' ' → logprob: -17.5000057220459
    6. 'n' → logprob: -17.5000057220459
    7. '[' → logprob: -20.0000057220459
    8. '`' → logprob: -20.1250057220459
    9. ' (' → logprob: -20.1250057220459
    10. '   ' → logprob: -20.6250057220459

Token 2073: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.5384897589683533
    2. '1' → logprob: -0.9134897589683533
    3. '<n' → logprob: -5.038489818572998
    4. '[n' → logprob: -5.663489818572998
    5. 'n' → logprob: -5.913489818572998
    6. '```' → logprob: -6.788489818572998
    7. '(n' → logprob: -7.413489818572998
    8. '>>' → logprob: -8.16348934173584
    9. '[' → logprob: -8.91348934173584
    10. '(' → logprob: -9.53848934173584

Token 2074: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.751746746478602e-05
    2. '1' → logprob: -10.25004768371582
    3. ' nxt' → logprob: -12.12504768371582
    4. '
' → logprob: -12.62504768371582
    5. '(n' → logprob: -13.50004768371582
    6. '   ' → logprob: -14.75004768371582
    7. '```' → logprob: -14.75004768371582
    8. ''n' → logprob: -15.50004768371582
    9. '	n' → logprob: -15.75004768371582
    10. ' ' → logprob: -15.87504768371582

Token 2075: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0005654225824400783
    2. 'n' → logprob: -8.500565528869629
    3. ' nxt' → logprob: -8.875565528869629
    4. 't' → logprob: -9.000565528869629
    5. 'ext' → logprob: -10.125565528869629
    6. 'x' → logprob: -10.125565528869629
    7. '```' → logprob: -12.000565528869629
    8. 'st' → logprob: -12.000565528869629
    9. '       ' → logprob: -13.750565528869629
    10. 'txt' → logprob: -13.750565528869629

Token 2076: ')][' (ID: 112886)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6972750425338745
    2. ')][' → logprob: -0.6972750425338745
    3. '[n' → logprob: -6.197275161743164
    4. ']][' → logprob: -6.322275161743164
    5. 'n' → logprob: -8.947275161743164
    6. ')[' → logprob: -9.572275161743164
    7. '(n' → logprob: -10.822275161743164
    8. '[' → logprob: -11.197275161743164
    9. '           ' → logprob: -11.447275161743164
    10. '       ' → logprob: -12.322275161743164

Token 2077: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.1008713702030946e-06
    2. '```' → logprob: -14.750001907348633
    3. '[n' → logprob: -14.875001907348633
    4. '[' → logprob: -15.250001907348633
    5. '   ' → logprob: -15.375001907348633
    6. '(n' → logprob: -15.625001907348633
    7. '][' → logprob: -15.750001907348633
    8. '           ' → logprob: -16.625001907348633
    9. '
' → logprob: -16.750001907348633
    10. '               ' → logprob: -16.875001907348633

Token 2078: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: 0.0
    2. '```' → logprob: -17.875
    3. 'n' → logprob: -18.375
    4. 'xta' → logprob: -18.75
    5. 'x' → logprob: -18.75
    6. 'txt' → logprob: -19.0
    7. 'ext' → logprob: -19.0
    8. 'xto' → logprob: -19.5
    9. '
' → logprob: -20.0
    10. 'xtap' → logprob: -20.125

Token 2079: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.27193301916122437
    2. '[n' → logprob: -2.146933078765869
    3. ']' → logprob: -3.146933078765869
    4. ']:' → logprob: -3.771933078765869
    5. '                           ' → logprob: -3.896933078765869
    6. '][' → logprob: -4.521933078765869
    7. '                       ' → logprob: -4.771933078765869
    8. '                               ' → logprob: -5.646933078765869
    9. '[next' → logprob: -6.021933078765869
    10. ']+' → logprob: -6.521933078765869

Token 2080: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.054342176765203476
    2. '                                   ' → logprob: -3.804342269897461
    3. '                           ' → logprob: -4.429342269897461
    4. '=' → logprob: -4.804342269897461
    5. ' =' → logprob: -5.554342269897461
    6. '                                       ' → logprob: -6.804342269897461
    7. '[' → logprob: -7.054342269897461
    8. '1' → logprob: -7.179342269897461
    9. '                                ' → logprob: -7.554342269897461
    10. '```' → logprob: -7.804342269897461

Token 2081: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.007427845615893602
    2. ' dp' → logprob: -5.38242769241333
    3. '                               ' → logprob: -6.63242769241333
    4. '                                   ' → logprob: -6.63242769241333
    5. '                                       ' → logprob: -9.132428169250488
    6. '                           ' → logprob: -11.132428169250488
    7. '                                           ' → logprob: -11.632428169250488
    8. '```' → logprob: -12.132428169250488
    9. '(dp' → logprob: -12.257428169250488
    10. '
' → logprob: -12.382428169250488

Token 2082: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. 'mask' → logprob: -15.125000953674316
    3. '               ' → logprob: -15.375000953674316
    4. '   ' → logprob: -15.625000953674316
    5. '
' → logprob: -16.000001907348633
    6. '           ' → logprob: -16.125001907348633
    7. '[
' → logprob: -16.250001907348633
    8. '                   ' → logprob: -16.250001907348633
    9. ' [' → logprob: -16.750001907348633
    10. '```' → logprob: -16.875001907348633

Token 2083: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.00027945113833993673
    2. '[' → logprob: -9.125279426574707
    3. 'n' → logprob: -9.500279426574707
    4. '(mask' → logprob: -9.875279426574707
    5. '_mask' → logprob: -11.375279426574707
    6. ' mask' → logprob: -11.625279426574707
    7. '
' → logprob: -12.000279426574707
    8. '1' → logprob: -12.125279426574707
    9. '	mask' → logprob: -12.375279426574707
    10. '][' → logprob: -13.125279426574707

Token 2084: '|(' (ID: 153684)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25331082940101624
    2. '][' → logprob: -1.5033107995986938
    3. '|' → logprob: -6.878310680389404
    4. '```' → logprob: -8.878311157226562
    5. '|(' → logprob: -9.003311157226562
    6. '[n' → logprob: -11.378311157226562
    7. '
' → logprob: -11.628311157226562
    8. ']' → logprob: -11.753311157226562
    9. '           ' → logprob: -12.128311157226562
    10. '                               ' → logprob: -12.503311157226562

Token 2085: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -12.375011444091797
    3. 'n' → logprob: -12.500011444091797
    4. '```' → logprob: -12.750011444091797
    5. ' ' → logprob: -14.875011444091797
    6. '   ' → logprob: -15.750011444091797
    7. '[' → logprob: -16.250011444091797
    8. '`' → logprob: -16.375011444091797
    9. '(n' → logprob: -16.375011444091797
    10. '
' → logprob: -16.750011444091797

Token 2086: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.20119313895702362
    2. '<n' → logprob: -2.20119309425354
    3. 'n' → logprob: -3.57619309425354
    4. '```' → logprob: -4.201193332672119
    5. '[n' → logprob: -4.576193332672119
    6. '(n' → logprob: -5.201193332672119
    7. '>>' → logprob: -5.326193332672119
    8. '_n' → logprob: -6.201193332672119
    9. ']<<' → logprob: -6.201193332672119
    10. '][' → logprob: -6.576193332672119

Token 2087: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3856492842023727e-06
    2. '
' → logprob: -14.250000953674316
    3. '   ' → logprob: -15.000000953674316
    4. ' nxt' → logprob: -15.750000953674316
    5. '	n' → logprob: -16.625001907348633
    6. '```' → logprob: -16.875001907348633
    7. '       ' → logprob: -17.250001907348633
    8. '1' → logprob: -17.250001907348633
    9. '<n' → logprob: -17.500001907348633
    10. ' n' → logprob: -17.500001907348633

Token 2088: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.016395501792430878
    2. 'n' → logprob: -4.141395568847656
    3. 't' → logprob: -9.266395568847656
    4. 'txt' → logprob: -9.391395568847656
    5. 'ext' → logprob: -9.766395568847656
    6. 'tmp' → logprob: -10.016395568847656
    7. 'x' → logprob: -10.641395568847656
    8. '   ' → logprob: -11.266395568847656
    9. '[n' → logprob: -11.516395568847656
    10. 'st' → logprob: -12.391395568847656

Token 2089: ')][' (ID: 112886)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002087853499688208
    2. ')][' → logprob: -8.625208854675293
    3. ']][' → logprob: -11.250208854675293
    4. ']' → logprob: -11.875208854675293
    5. '[n' → logprob: -12.875208854675293
    6. '       ' → logprob: -13.375208854675293
    7. '   ' → logprob: -13.500208854675293
    8. '           ' → logprob: -13.750208854675293
    9. ' ][' → logprob: -14.750208854675293
    10. '                       ' → logprob: -14.750208854675293

Token 2090: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.512236498361744e-07
    2. '[n' → logprob: -15.625000953674316
    3. '   ' → logprob: -16.5
    4. '```' → logprob: -16.5
    5. '
' → logprob: -16.875
    6. '][' → logprob: -17.375
    7. '(n' → logprob: -17.875
    8. '	n' → logprob: -18.5
    9. '{' → logprob: -18.75
    10. ']' → logprob: -18.75

Token 2091: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.007286792621016502
    2. 'n' → logprob: -5.13228702545166
    3. '[n' → logprob: -7.50728702545166
    4. 'txt' → logprob: -8.38228702545166
    5. '_n' → logprob: -9.38228702545166
    6. 'tmp' → logprob: -9.38228702545166
    7. 'st' → logprob: -9.38228702545166
    8. 'nst' → logprob: -9.63228702545166
    9. 'x' → logprob: -9.75728702545166
    10. 'ext' → logprob: -10.38228702545166

Token 2092: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.014923167414963245
    2. ']' → logprob: -4.264923095703125
    3. ']+=' → logprob: -7.889923095703125
    4. '=' → logprob: -8.514923095703125
    5. ']==' → logprob: -9.014923095703125
    6. '][' → logprob: -11.139923095703125
    7. ']+' → logprob: -11.514923095703125
    8. ']<' → logprob: -11.889923095703125
    9. ']=-' → logprob: -11.889923095703125
    10. ']=(' → logprob: -12.139923095703125

Token 2093: 'arrival' (ID: 183251)
  Prédit: 'arrival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -2.7968066206085496e-05
    2. ' arrival' → logprob: -10.500027656555176
    3. 'arr' → logprob: -14.875027656555176
    4. '
' → logprob: -19.000028610229492
    5. '                           ' → logprob: -19.250028610229492
    6. '           ' → logprob: -19.500028610229492
    7. '                   ' → logprob: -19.750028610229492
    8. '   ' → logprob: -20.000028610229492
    9. '```' → logprob: -20.125028610229492
    10. '`' → logprob: -20.250028610229492

Token 2094: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.696889623621246e-06
    2. '_token' → logprob: -13.37500286102295
    3. '_type' → logprob: -15.37500286102295
    4. '```' → logprob: -15.37500286102295
    5. '_code' → logprob: -15.50000286102295
    6. '   ' → logprob: -16.375001907348633
    7. '\' → logprob: -16.750001907348633
    8. '[' → logprob: -17.250001907348633
    9. ' _' → logprob: -17.625001907348633
    10. '_t' → logprob: -17.750001907348633

Token 2095: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1575014889240265
    2. '
' → logprob: -3.032501459121704
    3. '<|end|>' → logprob: -3.157501459121704
    4. '        
' → logprob: -4.157501697540283
    5. '                            
' → logprob: -5.407501697540283
    6. '                               ' → logprob: -5.407501697540283
    7. '                           ' → logprob: -5.532501697540283
    8. '    
' → logprob: -5.657501697540283
    9. '        ' → logprob: -5.782501697540283
    10. ')' → logprob: -6.032501697540283

Token 2096: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2952817380428314
    2. '<|end|>' → logprob: -2.4202816486358643
    3. '```' → logprob: -2.9202816486358643
    4. '                               ' → logprob: -4.045281887054443
    5. '                           ' → logprob: -4.420281887054443
    6. '
' → logprob: -4.795281887054443
    7. '   ' → logprob: -4.920281887054443
    8. '        
' → logprob: -4.920281887054443
    9. '           ' → logprob: -5.045281887054443
    10. ')' → logprob: -5.045281887054443

Token 2097: ' ans' (ID: 3345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2835870087146759
    2. 'max' → logprob: -1.6585869789123535
    3. '   ' → logprob: -3.5335869789123535
    4. '```' → logprob: -4.1585869789123535
    5. 'result' → logprob: -5.6585869789123535
    6. 'for' → logprob: -6.2835869789123535
    7. 'score' → logprob: -6.4085869789123535
    8. 'mask' → logprob: -6.7835869789123535
    9. '``' → logprob: -7.6585869789123535
    10. '<|end|>' → logprob: -7.9085869789123535

Token 2098: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3566071391105652
    2. '=max' → logprob: -1.35660719871521
    3. ' =' → logprob: -3.60660719871521
    4. '=[' → logprob: -4.731606960296631
    5. '_=' → logprob: -6.481606960296631
    6. '=[]' → logprob: -6.731606960296631
    7. '=
' → logprob: -7.481606960296631
    8. '=[]
' → logprob: -7.481606960296631
    9. '=_' → logprob: -7.731606960296631
    10. 'max' → logprob: -7.856606960296631

Token 2099: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00047940885997377336
    2. 'max' → logprob: -7.750479221343994
    3. '-' → logprob: -10.250479698181152
    4. ' ' → logprob: -11.500479698181152
    5. ' max' → logprob: -14.000479698181152
    6. '10' → logprob: -14.000479698181152
    7. '   ' → logprob: -14.250479698181152
    8. '-max' → logprob: -14.625479698181152
    9. '```' → logprob: -16.375478744506836
    10. '1' → logprob: -16.625478744506836

Token 2100: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12307708710432053
    2. '
' → logprob: -2.498077154159546
    3. ' for' → logprob: -3.498077154159546
    4. '       ' → logprob: -5.748076915740967
    5. '   ' → logprob: -10.248077392578125
    6. '```' → logprob: -10.998077392578125
    7. '	for' → logprob: -11.248077392578125
    8. '
' → logprob: -11.373077392578125
    9. ' 
' → logprob: -11.498077392578125
    10. '        
' → logprob: -11.498077392578125

Token 2101: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8328207731246948
    2. 'for' → logprob: -0.8328207731246948
    3. ' for' → logprob: -2.3328208923339844
    4. '       ' → logprob: -3.4578208923339844
    5. '   ' → logprob: -7.207820892333984
    6. ' 
' → logprob: -8.082820892333984
    7. '	for' → logprob: -8.332820892333984
    8. '
' → logprob: -9.082820892333984
    9. '        
' → logprob: -9.332820892333984
    10. '  
' → logprob: -9.707820892333984

Token 2102: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0014213069807738066
    2. ' for' → logprob: -6.6264214515686035
    3. '       ' → logprob: -9.751420974731445
    4. '
' → logprob: -10.626420974731445
    5. 'mask' → logprob: -11.876420974731445
    6. '   ' → logprob: -12.376420974731445
    7. '```' → logprob: -14.751420974731445
    8. 'max' → logprob: -15.126420974731445
    9. 'total' → logprob: -15.376420974731445
    10. '	for' → logprob: -16.001420974731445

Token 2103: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.023522768169641495
    2. ' mask' → logprob: -3.7735228538513184
    3. 'm' → logprob: -8.77352237701416
    4. 'i' → logprob: -9.64852237701416
    5. '   ' → logprob: -10.89852237701416
    6. 'full' → logprob: -12.27352237701416
    7. '_mask' → logprob: -12.27352237701416
    8. ' i' → logprob: -12.27352237701416
    9. 'ms' → logprob: -12.52352237701416
    10. ' m' → logprob: -13.02352237701416

Token 2104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.386898398399353
    2. 'in' → logprob: -1.136898398399353
    3. '
' → logprob: -11.886898040771484
    4. '```' → logprob: -12.636898040771484
    5. '   ' → logprob: -12.761898040771484
    6. 'range' → logprob: -12.761898040771484
    7. '	in' → logprob: -12.886898040771484
    8. '[' → logprob: -13.386898040771484
    9. 'i' → logprob: -13.386898040771484
    10. '[in' → logprob: -13.886898040771484

Token 2105: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018156733363866806
    2. ' range' → logprob: -4.0181565284729
    3. '(range' → logprob: -12.268157005310059
    4. '(' → logprob: -13.268157005310059
    5. '[' → logprob: -15.768157005310059
    6. '   ' → logprob: -16.768156051635742
    7. 'mask' → logprob: -17.018156051635742
    8. '```' → logprob: -17.143156051635742
    9. '	range' → logprob: -17.768156051635742
    10. ' in' → logprob: -18.768156051635742

Token 2106: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0026720918249338865
    2. '((' → logprob: -6.37767219543457
    3. '       ' → logprob: -7.50267219543457
    4. ' (' → logprob: -8.00267219543457
    5. '           ' → logprob: -10.12767219543457
    6. '   ' → logprob: -11.25267219543457
    7. '(len' → logprob: -11.50267219543457
    8. '1' → logprob: -12.12767219543457
    9. '               ' → logprob: -12.50267219543457
    10. '```' → logprob: -12.87767219543457

Token 2107: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0052422950975596905
    2. '1' → logprob: -5.255242347717285
    3. ' (' → logprob: -11.755242347717285
    4. '```' → logprob: -15.505242347717285
    5. '
' → logprob: -15.880242347717285
    6. '((' → logprob: -16.13024139404297
    7. ' ' → logprob: -16.38024139404297
    8. 'range' → logprob: -16.63024139404297
    9. '   ' → logprob: -16.63024139404297
    10. 'len' → logprob: -18.13024139404297

Token 2108: '<<' (ID: 5354)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017936276271939278
    2. '+' → logprob: -4.1429362297058105
    3. '(len' → logprob: -7.1429362297058105
    4. '1' → logprob: -7.6429362297058105
    5. '<<' → logprob: -8.642936706542969
    6. '```' → logprob: -8.892936706542969
    7. '((' → logprob: -9.267936706542969
    8. '       ' → logprob: -9.642936706542969
    9. '
' → logprob: -10.642936706542969
    10. '   ' → logprob: -10.642936706542969

Token 2109: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3902033970225602e-05
    2. '10' → logprob: -11.625014305114746
    3. '
' → logprob: -13.375014305114746
    4. ' n' → logprob: -13.375014305114746
    5. '(n' → logprob: -14.750014305114746
    6. '0' → logprob: -14.750014305114746
    7. '_n' → logprob: -15.000014305114746
    8. '1' → logprob: -16.00001335144043
    9. '(' → logprob: -16.25001335144043
    10. 'ans' → logprob: -16.62501335144043

Token 2110: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04414043575525284
    2. '):' → logprob: -4.919140338897705
    3. '```' → logprob: -4.919140338897705
    4. ',' → logprob: -5.294140338897705
    5. ')' → logprob: -5.419140338897705
    6. '<|end|>' → logprob: -5.544140338897705
    7. ':
' → logprob: -6.044140338897705
    8. ')(
' → logprob: -6.044140338897705
    9. '[' → logprob: -6.919140338897705
    10. ':' → logprob: -7.044140338897705

Token 2111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009211080614477396
    2. '   ' → logprob: -7.500921249389648
    3. '	       ' → logprob: -8.750921249389648
    4. '       ' → logprob: -10.000921249389648
    5. '```' → logprob: -10.000921249389648
    6. '	   ' → logprob: -10.125921249389648
    7. ' for' → logprob: -10.875921249389648
    8. '               ' → logprob: -11.125921249389648
    9. '		' → logprob: -11.750921249389648
    10. '		   ' → logprob: -12.375921249389648

Token 2112: ' val' (ID: 1459)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6090338230133057
    2. 'cnt' → logprob: -1.8590338230133057
    3. 'max' → logprob: -2.2340338230133057
    4. 'count' → logprob: -2.2340338230133057
    5. '           ' → logprob: -2.4840338230133057
    6. 'total' → logprob: -2.8590338230133057
    7. ' cnt' → logprob: -3.2340338230133057
    8. '       ' → logprob: -3.2340338230133057
    9. 'sum' → logprob: -3.3590338230133057
    10. 'for' → logprob: -3.6090338230133057

Token 2113: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31100553274154663
    2. '=int' → logprob: -2.1860055923461914
    3. '=max' → logprob: -2.3110055923461914
    4. ' =' → logprob: -3.6860055923461914
    5. '=sum' → logprob: -4.186005592346191
    6. '=len' → logprob: -4.811005592346191
    7. 'for' → logprob: -6.436005592346191
    8. ' for' → logprob: -7.061005592346191
    9. '=count' → logprob: -7.186005592346191
    10. '=
' → logprob: -7.186005592346191

Token 2114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009071504697203636
    2. 'max' → logprob: -4.759071350097656
    3. 'bin' → logprob: -8.509071350097656
    4. 'val' → logprob: -8.884071350097656
    5. 'sum' → logprob: -9.384071350097656
    6. ' max' → logprob: -11.884071350097656
    7. ' ' → logprob: -12.259071350097656
    8. 'mask' → logprob: -12.509071350097656
    9. '[max' → logprob: -12.759071350097656
    10. '(max' → logprob: -12.884071350097656

Token 2115: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3038873076438904
    2. ' for' → logprob: -1.5538873672485352
    3. '           ' → logprob: -3.178887367248535
    4. '               ' → logprob: -6.053887367248535
    5. '```' → logprob: -6.053887367248535
    6. '       ' → logprob: -6.803887367248535
    7. '   ' → logprob: -7.053887367248535
    8. '=' → logprob: -7.303887367248535
    9. '	for' → logprob: -7.553887367248535
    10. '
' → logprob: -8.303887367248535

Token 2116: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34031036496162415
    2. 'for' → logprob: -1.3403103351593018
    3. ' for' → logprob: -3.9653103351593018
    4. '               ' → logprob: -5.840310573577881
    5. '       ' → logprob: -6.090310573577881
    6. '                   ' → logprob: -6.715310573577881
    7. '
' → logprob: -7.340310573577881
    8. '   ' → logprob: -7.840310573577881
    9. '```' → logprob: -8.590310096740723
    10. '                       ' → logprob: -10.090310096740723

Token 2117: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010586019605398178
    2. '           ' → logprob: -5.135585784912109
    3. ' for' → logprob: -5.385585784912109
    4. '       ' → logprob: -10.38558578491211
    5. '   ' → logprob: -10.88558578491211
    6. '               ' → logprob: -11.63558578491211
    7. 'bits' → logprob: -13.63558578491211
    8. '
' → logprob: -13.76058578491211
    9. 'count' → logprob: -13.88558578491211
    10. '	for' → logprob: -14.51058578491211

Token 2118: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008103981614112854
    2. ' i' → logprob: -5.008103847503662
    3. 'mask' → logprob: -7.258103847503662
    4. 'range' → logprob: -7.633103847503662
    5. '   ' → logprob: -9.75810432434082
    6. ' range' → logprob: -10.13310432434082
    7. 'j' → logprob: -10.75810432434082
    8. 'n' → logprob: -11.50810432434082
    9. ' mask' → logprob: -11.63310432434082
    10. 'user' → logprob: -11.88310432434082

Token 2119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3869016468524933
    2. 'in' → logprob: -1.136901617050171
    3. 'mask' → logprob: -12.13690185546875
    4. '   ' → logprob: -12.38690185546875
    5. ' ' → logprob: -12.63690185546875
    6. 'n' → logprob: -12.63690185546875
    7. '       ' → logprob: -12.88690185546875
    8. 'range' → logprob: -12.88690185546875
    9. 'i' → logprob: -13.26190185546875
    10. '           ' → logprob: -13.63690185546875

Token 2120: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.8087270038668066e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -15.125027656555176
    4. 'mask' → logprob: -15.750027656555176
    5. '
' → logprob: -16.875028610229492
    6. 'n' → logprob: -17.625028610229492
    7. '```' → logprob: -19.125028610229492
    8. '   ' → logprob: -19.250028610229492
    9. '	range' → logprob: -20.250028610229492
    10. '``' → logprob: -20.375028610229492

Token 2121: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.025563150644302368
    2. 'range' → logprob: -3.7755632400512695
    3. '(' → logprob: -6.5255632400512695
    4. '(n' → logprob: -7.5255632400512695
    5. ' range' → logprob: -8.15056324005127
    6. ' n' → logprob: -11.65056324005127
    7. '(range' → logprob: -11.90056324005127
    8. '   ' → logprob: -13.02556324005127
    9. '       ' → logprob: -13.77556324005127
    10. '
' → logprob: -14.02556324005127

Token 2122: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06296639889478683
    2. 'if' → logprob: -3.0629663467407227
    3. '):' → logprob: -5.187966346740723
    4. ' if' → logprob: -5.937966346740723
    5. ',' → logprob: -6.562966346740723
    6. '           ' → logprob: -7.187966346740723
    7. '```' → logprob: -7.187966346740723
    8. '       ' → logprob: -8.062966346740723
    9. ':
' → logprob: -8.062966346740723
    10. '
' → logprob: -8.062966346740723

Token 2123: '               ' (ID: 506)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8104496002197266
    2. '                               ' → logprob: -1.5604496002197266
    3. ' if' → logprob: -1.6854496002197266
    4. '```' → logprob: -2.3104496002197266
    5. '               ' → logprob: -3.5604496002197266
    6. '                       ' → logprob: -4.310449600219727
    7. '                           ' → logprob: -5.435449600219727
    8. '                   ' → logprob: -5.935449600219727
    9. '``' → logprob: -6.185449600219727
    10. '                                       ' → logprob: -6.685449600219727

Token 2124: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.579969048500061
    2. ' if' → logprob: -0.829969048500061
    3. '```' → logprob: -6.7049689292907715
    4. '                               ' → logprob: -7.3299689292907715
    5. ' ' → logprob: -7.7049689292907715
    6. '                           ' → logprob: -8.07996940612793
    7. '                   ' → logprob: -8.20496940612793
    8. '               ' → logprob: -8.20496940612793
    9. '	if' → logprob: -8.45496940612793
    10. '   ' → logprob: -8.70496940612793

Token 2125: ' (' (ID: 350)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.006845138035714626
    2. ' (' → logprob: -5.006844997406006
    3. 'mask' → logprob: -9.256845474243164
    4. '((' → logprob: -11.006845474243164
    5. ' mask' → logprob: -11.381845474243164
    6. '(dp' → logprob: -12.256845474243164
    7. '   ' → logprob: -14.381845474243164
    8. '(' → logprob: -14.881845474243164
    9. ' ' → logprob: -15.381845474243164
    10. '
' → logprob: -16.631845474243164

Token 2126: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.3872818350791931
    2. '(mask' → logprob: -1.137281894683838
    3. ' mask' → logprob: -7.887281894683838
    4. '(' → logprob: -11.01228141784668
    5. ' (' → logprob: -11.26228141784668
    6. '	mask' → logprob: -13.01228141784668
    7. '_mask' → logprob: -13.76228141784668
    8. '```' → logprob: -14.26228141784668
    9. '1' → logprob: -15.13728141784668
    10. '
' → logprob: -15.13728141784668

Token 2127: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.00385672808624804
    2. ')&' → logprob: -6.378856658935547
    3. ')>>' → logprob: -6.628856658935547
    4. '>>&' → logprob: -7.503856658935547
    5. '>>(' → logprob: -9.253856658935547
    6. '&' → logprob: -9.378856658935547
    7. '&gt' → logprob: -9.878856658935547
    8. ']&' → logprob: -11.128856658935547
    9. '>&' → logprob: -11.753856658935547
    10. ')' → logprob: -12.628856658935547

Token 2128: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.968312951968983e-06
    2. ' i' → logprob: -11.625009536743164
    3. '```' → logprob: -14.375009536743164
    4. '           ' → logprob: -16.625009536743164
    5. '<|end|>' → logprob: -16.625009536743164
    6. '   ' → logprob: -17.000009536743164
    7. '       ' → logprob: -17.250009536743164
    8. '``' → logprob: -17.250009536743164
    9. ')i' → logprob: -17.375009536743164
    10. ' ' → logprob: -17.875009536743164

Token 2129: ')&' (ID: 34370)
  Prédit: ')&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')&' → logprob: -0.0017200425500050187
    2. ')' → logprob: -6.376719951629639
    3. '&' → logprob: -11.001720428466797
    4. '```' → logprob: -15.001720428466797
    5. ')&&' → logprob: -15.626720428466797
    6. '1' → logprob: -16.126720428466797
    7. ')>>' → logprob: -16.251720428466797
    8. ')
' → logprob: -16.251720428466797
    9. '>&' → logprob: -16.376720428466797
    10. '
' → logprob: -16.876720428466797

Token 2130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.25
    3. 'i' → logprob: -16.625
    4. '
' → logprob: -18.125
    5. '   ' → logprob: -18.875
    6. '```' → logprob: -18.875
    7. '(i' → logprob: -20.25
    8. '0' → logprob: -21.0
    9. '``' → logprob: -21.125
    10. '

' → logprob: -21.375

Token 2131: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.030698640272021294
    2. ':
' → logprob: -4.030698776245117
    3. 'and' → logprob: -5.655698776245117
    4. '1' → logprob: -6.155698776245117
    5. ']==' → logprob: -6.155698776245117
    6. ')==' → logprob: -6.280698776245117
    7. ':' → logprob: -7.280698776245117
    8. ' and' → logprob: -7.405698776245117
    9. '&' → logprob: -7.780698776245117
    10. '```' → logprob: -7.780698776245117

Token 2132: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8909551501274109
    2. 'val' → logprob: -0.8909551501274109
    3. ' val' → logprob: -2.0159552097320557
    4. '```' → logprob: -3.3909552097320557
    5. ',val' → logprob: -5.640954971313477
    6. '                       ' → logprob: -6.015954971313477
    7. '               ' → logprob: -6.640954971313477
    8. '``' → logprob: -7.015954971313477
    9. '                               ' → logprob: -7.015954971313477
    10. '+' → logprob: -7.390954971313477

Token 2133: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.09118568152189255
    2. ' val' → logprob: -2.4661855697631836
    3. 'd' → logprob: -6.216185569763184
    4. '```' → logprob: -9.216185569763184
    5. ' d' → logprob: -9.466185569763184
    6. 'g' → logprob: -10.091185569763184
    7. '           ' → logprob: -11.841185569763184
    8. '+' → logprob: -11.966185569763184
    9. '	val' → logprob: -12.966185569763184
    10. '_val' → logprob: -13.216185569763184

Token 2134: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -8.554343366995454e-05
    2. '+=(' → logprob: -10.250085830688477
    3. ']+=' → logprob: -10.500085830688477
    4. '|' → logprob: -11.000085830688477
    5. '```' → logprob: -12.500085830688477
    6. '+' → logprob: -14.000085830688477
    7. ' +=' → logprob: -14.125085830688477
    8. '+="' → logprob: -15.750085830688477
    9. '+='' → logprob: -15.875085830688477
    10. '=' → logprob: -16.375085830688477

Token 2135: 'product' (ID: 5260)
  Prédit: 'product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.000698972842656076
    2. '(product' → logprob: -7.375699043273926
    3. ' product' → logprob: -9.625699043273926
    4. '(' → logprob: -13.250699043273926
    5. 'sale' → logprob: -13.375699043273926
    6. '10' → logprob: -14.375699043273926
    7. '$product' → logprob: -14.500699043273926
    8. '```' → logprob: -14.750699043273926
    9. 'int' → logprob: -15.000699043273926
    10. '((' → logprob: -15.625699043273926

Token 2136: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.00013440960901789367
    2. 'info' → logprob: -9.750134468078613
    3. '[i' → logprob: -10.500134468078613
    4. 'i' → logprob: -10.750134468078613
    5. '```' → logprob: -11.125134468078613
    6. '[' → logprob: -12.750134468078613
    7. '_i' → logprob: -13.500134468078613
    8. '`' → logprob: -13.625134468078613
    9. 'Info' → logprob: -13.750134468078613
    10. '[_' → logprob: -13.875134468078613

Token 2137: '_list' (ID: 4162)
  Prédit: '_info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.000693016336299479
    2. '```' → logprob: -8.000693321228027
    3. '[i' → logprob: -8.375693321228027
    4. '_i' → logprob: -10.000693321228027
    5. 'info' → logprob: -11.125693321228027
    6. '_list' → logprob: -11.375693321228027
    7. 'i' → logprob: -11.375693321228027
    8. '[_' → logprob: -11.625693321228027
    9. '_infos' → logprob: -12.000693321228027
    10. '``' → logprob: -12.125693321228027

Token 2138: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.0629870858974755e-05
    2. '```' → logprob: -10.12506103515625
    3. '[
' → logprob: -12.12506103515625
    4. '[' → logprob: -12.25006103515625
    5. 'i' → logprob: -12.62506103515625
    6. '[][' → logprob: -13.25006103515625
    7. '(i' → logprob: -13.62506103515625
    8. '][' → logprob: -14.25006103515625
    9. '`' → logprob: -14.37506103515625
    10. '``' → logprob: -14.50006103515625

Token 2139: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6337489485740662
    2. '[' → logprob: -0.7587489485740662
    3. '[i' → logprob: -8.008749008178711
    4. '```' → logprob: -8.883749008178711
    5. '>[' → logprob: -9.508749008178711
    6. '
' → logprob: -9.633749008178711
    7. '\[' → logprob: -9.758749008178711
    8. '}[' → logprob: -9.758749008178711
    9. '#' → logprob: -9.883749008178711
    10. '`' → logprob: -9.883749008178711

Token 2140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.0948158382670954e-05
    2. '
' → logprob: -11.000030517578125
    3. '4' → logprob: -12.875030517578125
    4. '```' → logprob: -13.062530517578125
    5. '2' → logprob: -13.375030517578125
    6. '[' → logprob: -13.625030517578125
    7. '   ' → logprob: -14.187530517578125
    8. ']' → logprob: -14.250030517578125
    9. '][' → logprob: -14.312530517578125
    10. '``' → logprob: -14.312530517578125

Token 2141: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2142: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0588836595416069
    2. '
' → logprob: -3.1838836669921875
    3. '               ' → logprob: -5.1838836669921875
    4. '       ' → logprob: -5.5588836669921875
    5. '```' → logprob: -5.8088836669921875
    6. '                   ' → logprob: -6.4338836669921875
    7. '<|end|>' → logprob: -7.4338836669921875
    8. '``' → logprob: -8.058883666992188
    9. '          ' → logprob: -8.308883666992188
    10. '                           ' → logprob: -9.183883666992188

Token 2143: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009381796233355999
    2. ' if' → logprob: -5.1343817710876465
    3. 'ans' → logprob: -6.2593817710876465
    4. '           ' → logprob: -6.8843817710876465
    5. '
' → logprob: -8.509382247924805
    6. '   ' → logprob: -9.259382247924805
    7. '       ' → logprob: -9.259382247924805
    8. '```' → logprob: -9.759382247924805
    9. 'for' (adapté à ' for') → logprob: -10.634382247924805
    10. '                               ' → logprob: -11.634382247924805

Token 2144: ' i' (ID: 575)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.6205465793609619
    2. ' last' → logprob: -0.8705465793609619
    3. ' j' → logprob: -4.745546340942383
    4. 'mask' → logprob: -4.995546340942383
    5. 'j' → logprob: -5.370546340942383
    6. ' dp' → logprob: -5.620546340942383
    7. ' mask' → logprob: -5.745546340942383
    8. 'n' → logprob: -5.870546340942383
    9. ' nxt' → logprob: -5.870546340942383
    10. 'dp' → logprob: -6.120546340942383

Token 2145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026309238746762276
    2. 'in' → logprob: -3.6513092517852783
    3. 'n' → logprob: -12.7763090133667
    4. 'range' → logprob: -13.1513090133667
    5. ' ' → logprob: -14.1513090133667
    6. ',' → logprob: -14.6513090133667
    7. '(' → logprob: -14.7763090133667
    8. '(range' → logprob: -14.7763090133667
    9. '```' → logprob: -14.9013090133667
    10. '
' → logprob: -15.2763090133667

Token 2146: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00462284917011857
    2. ' range' → logprob: -5.379622936248779
    3. '(range' → logprob: -13.254622459411621
    4. '```' → logprob: -15.379622459411621
    5. '
' → logprob: -15.879622459411621
    6. '(' → logprob: -16.004623413085938
    7. '   ' → logprob: -16.504623413085938
    8. 'mask' → logprob: -16.754623413085938
    9. ' ' → logprob: -16.879623413085938
    10. 'n' → logprob: -16.879623413085938

Token 2147: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06970564275979996
    2. '(n' → logprob: -3.3197057247161865
    3. 'n' → logprob: -3.5697057247161865
    4. '(range' → logprob: -6.569705486297607
    5. ' range' → logprob: -6.694705486297607
    6. '(' → logprob: -7.944705486297607
    7. 'mask' → logprob: -13.069705963134766
    8. '
' → logprob: -13.319705963134766
    9. '   ' → logprob: -13.319705963134766
    10. ' (' → logprob: -13.569705963134766

Token 2148: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00833288673311472
    2. '):' → logprob: -4.8833327293396
    3. ']):
' → logprob: -8.008333206176758
    4. ')' → logprob: -8.633333206176758
    5. ']:
' → logprob: -10.008333206176758
    6. 'if' → logprob: -10.633333206176758
    7. ']):' → logprob: -10.883333206176758
    8. '):
' → logprob: -11.008333206176758
    9. ')]' → logprob: -11.508333206176758
    10. '```' → logprob: -11.508333206176758

Token 2149: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28380075097084045
    2. ' if' → logprob: -2.0338008403778076
    3. 'if' → logprob: -3.0338008403778076
    4. '                       ' → logprob: -3.5338008403778076
    5. '                   ' → logprob: -4.6588006019592285
    6. '```' → logprob: -4.7838006019592285
    7. '                               ' → logprob: -5.1588006019592285
    8. '           ' → logprob: -5.1588006019592285
    9. '<|end|>' → logprob: -6.0338006019592285
    10. '                           ' → logprob: -6.2838006019592285

Token 2150: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22595511376857758
    2. ' if' → logprob: -1.6009551286697388
    3. '                   ' → logprob: -8.35095500946045
    4. '               ' → logprob: -8.47595500946045
    5. '@if' → logprob: -10.35095500946045
    6. '                       ' → logprob: -10.97595500946045
    7. 'If' → logprob: -11.47595500946045
    8. '```' → logprob: -11.97595500946045
    9. '	if' → logprob: -12.10095500946045
    10. ' ' → logprob: -12.60095500946045

Token 2151: ' dp' (ID: 21546)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.16370916366577148
    2. ' (' → logprob: -1.9137091636657715
    3. '((' → logprob: -6.1637091636657715
    4. '(i' → logprob: -6.6637091636657715
    5. ' ((' → logprob: -10.03870964050293
    6. '(' → logprob: -11.16370964050293
    7. ' i' → logprob: -11.53870964050293
    8. '(dp' → logprob: -11.91370964050293
    9. 'i' → logprob: -12.03870964050293
    10. '(ans' → logprob: -12.41370964050293

Token 2152: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009933913825079799
    2. 'mask' → logprob: -7.250993251800537
    3. '(mask' → logprob: -8.500993728637695
    4. '[i' → logprob: -9.875993728637695
    5. ' mask' → logprob: -11.625993728637695
    6. '][' → logprob: -12.375993728637695
    7. '_mask' → logprob: -12.625993728637695
    8. '	mask' → logprob: -12.625993728637695
    9. '```' → logprob: -13.250993728637695
    10. '[m' → logprob: -13.500993728637695

Token 2153: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.00025526012177579105
    2. 'len' → logprob: -8.750255584716797
    3. '(mask' → logprob: -9.875255584716797
    4. '1' → logprob: -11.375255584716797
    5. ' mask' → logprob: -11.500255584716797
    6. 'i' → logprob: -12.125255584716797
    7. 'n' → logprob: -12.625255584716797
    8. '(' → logprob: -12.750255584716797
    9. '	mask' → logprob: -13.000255584716797
    10. '```' → logprob: -13.250255584716797

Token 2154: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008178464486263692
    2. '[i' → logprob: -7.125817775726318
    3. '[' → logprob: -12.875818252563477
    4. ' ][' → logprob: -13.250818252563477
    5. '```' → logprob: -13.375818252563477
    6. ']][' → logprob: -13.750818252563477
    7. ']' → logprob: -14.000818252563477
    8. ']>' → logprob: -14.375818252563477
    9. '"][' → logprob: -14.375818252563477
    10. '>[' → logprob: -14.500818252563477

Token 2155: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2664456789934775e-06
    2. ' i' → logprob: -14.500000953674316
    3. '```' → logprob: -15.125000953674316
    4. '[i' → logprob: -15.375000953674316
    5. '[' → logprob: -15.875000953674316
    6. '<|end|>' → logprob: -17.625001907348633
    7. '][' → logprob: -18.250001907348633
    8. '...' → logprob: -18.500001907348633
    9. '
' → logprob: -18.875001907348633
    10. '0' → logprob: -19.375001907348633

Token 2156: ']!=' (ID: 85780)
  Prédit: ']!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.9201919436454773
    2. ']>' → logprob: -1.045192003250122
    3. ']' → logprob: -2.170192003250122
    4. ']==' → logprob: -3.045192003250122
    5. ']<' → logprob: -3.295192003250122
    6. '[i' → logprob: -3.295192003250122
    7. ']>=' → logprob: -4.670191764831543
    8. '][' → logprob: -5.920191764831543
    9. ']<=' → logprob: -6.545191764831543
    10. ']+' → logprob: -8.545191764831543

Token 2157: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.8444881536415778e-05
    2. '
' → logprob: -10.625028610229492
    3. ' ' → logprob: -13.500028610229492
    4. '```' → logprob: -13.875028610229492
    5. '100' → logprob: -14.375028610229492
    6. 'float' → logprob: -15.125028610229492
    7. '0' → logprob: -15.750028610229492
    8. '

' → logprob: -15.875028610229492
    9. '1' → logprob: -16.375028610229492
    10. '`' → logprob: -16.625028610229492

Token 2158: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1828823685646057
    2. '9' → logprob: -1.807882308959961
    3. '```' → logprob: -5.807882308959961
    4. '^' → logprob: -10.307882308959961
    5. '``' → logprob: -10.432882308959961
    6. '*' → logprob: -10.932882308959961
    7. '+' → logprob: -11.432882308959961
    8. '
' → logprob: -11.682882308959961
    9. '***' → logprob: -11.682882308959961
    10. '\xe2\x81' → logprob: -11.807882308959961

Token 2159: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.2200749754119897e-06
    2. '```' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '-' → logprob: -15.500001907348633
    5. '``' → logprob: -16.250001907348633
    6. '
' → logprob: -16.375001907348633
    7. '**' → logprob: -16.625001907348633
    8. '999' → logprob: -16.875001907348633
    9. '^' → logprob: -17.375001907348633
    10. '19' → logprob: -18.062501907348633

Token 2160: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029051920399069786
    2. 'and' → logprob: -4.404051780700684
    3. ':
' → logprob: -5.029051780700684
    4. '                   ' → logprob: -5.404051780700684
    5. '                       ' → logprob: -5.404051780700684
    6. ':' → logprob: -7.904051780700684
    7. '               ' → logprob: -8.154051780700684
    8. '                           ' → logprob: -9.404051780700684
    9. '```' → logprob: -10.779051780700684
    10. '>' → logprob: -10.904051780700684

Token 2161: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6966363191604614
    2. '                   ' → logprob: -0.8216363191604614
    3. '                               ' → logprob: -3.321636199951172
    4. ' and' → logprob: -4.946636199951172
    5. '                           ' → logprob: -5.321636199951172
    6. '               ' → logprob: -5.446636199951172
    7. ' if' → logprob: -5.446636199951172
    8. '           ' → logprob: -7.196636199951172
    9. '       ' → logprob: -7.321636199951172
    10. '                                           ' → logprob: -7.321636199951172

Token 2162: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7061122059822083
    2. ' if' → logprob: -0.8311122059822083
    3. 'if' (adapté à ' if') → logprob: -2.9561121463775635
    4. '                   ' → logprob: -4.581112384796143
    5. '                               ' → logprob: -5.831112384796143
    6. '                           ' → logprob: -6.831112384796143
    7. '               ' → logprob: -6.831112384796143
    8. '           ' → logprob: -6.831112384796143
    9. '       ' → logprob: -7.331112384796143
    10. '   ' → logprob: -7.456112384796143

Token 2163: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.717246413230896
    2. 'val' → logprob: -1.342246413230896
    3. ' dp' → logprob: -1.967246413230896
    4. 'dp' → logprob: -2.2172465324401855
    5. ' ans' → logprob: -6.9672465324401855
    6. 'ans' → logprob: -6.9672465324401855
    7. '(dp' → logprob: -11.717246055603027
    8. ' ' → logprob: -14.592246055603027
    9. '(ans' → logprob: -14.592246055603027
    10. '	dp' → logprob: -14.592246055603027

Token 2164: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0013173815095797181
    2. ' >' → logprob: -7.001317501068115
    3. '>
' → logprob: -8.251317024230957
    4. '
' → logprob: -9.751317024230957
    5. '>=' → logprob: -11.001317024230957
    6. 'val' → logprob: -11.126317024230957
    7. '<' → logprob: -11.626317024230957
    8. '```' → logprob: -11.876317024230957
    9. '[val' → logprob: -11.876317024230957
    10. ' val' → logprob: -12.126317024230957

Token 2165: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -8.537868779967539e-06
    2. ' ans' → logprob: -11.750008583068848
    3. '
' → logprob: -14.500008583068848
    4. '	ans' → logprob: -16.25000762939453
    5. '(ans' → logprob: -17.12500762939453
    6. '_ans' → logprob: -18.12500762939453
    7. 'answer' → logprob: -18.25000762939453
    8. '0' → logprob: -19.25000762939453
    9. 'Ans' → logprob: -19.62500762939453
    10. '```' → logprob: -20.50000762939453

Token 2166: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18178130686283112
    2. '                       ' → logprob: -2.05678129196167
    3. ':' → logprob: -3.30678129196167
    4. '                   ' → logprob: -7.18178129196167
    5. 'ans' → logprob: -8.306781768798828
    6. '):
' → logprob: -8.681781768798828
    7. '=' → logprob: -8.806781768798828
    8. '                           ' → logprob: -8.931781768798828
    9. '                      ' → logprob: -9.306781768798828
    10. '                               ' → logprob: -9.681781768798828

Token 2167: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.14586423337459564
    2. ' ans' → logprob: -2.395864248275757
    3. 'ans' → logprob: -3.770864248275757
    4. '                   ' → logprob: -5.020864009857178
    5. '```' → logprob: -5.270864009857178
    6. '                               ' → logprob: -5.645864009857178
    7. '                           ' → logprob: -6.270864009857178
    8. '                        ' → logprob: -7.145864009857178
    9. '(ans' → logprob: -7.145864009857178
    10. '                    ' → logprob: -8.020864486694336

Token 2168: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0024994369596242905
    2. ' ans' → logprob: -6.002499580383301
    3. '```' → logprob: -11.3774995803833
    4. '                       ' → logprob: -13.0024995803833
    5. '_ans' → logprob: -13.1274995803833
    6. 'val' → logprob: -13.1274995803833
    7. '(ans' → logprob: -13.2524995803833
    8. '                           ' → logprob: -13.6274995803833
    9. 'dp' → logprob: -13.7524995803833
    10. '                   ' → logprob: -14.0024995803833

Token 2169: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003385614836588502
    2. ' =' → logprob: -8.000338554382324
    3. '=
' → logprob: -13.375338554382324
    4. '=max' → logprob: -15.125338554382324
    5. '=

' → logprob: -15.750338554382324
    6. '=value' → logprob: -15.750338554382324
    7. '=v' → logprob: -16.00033950805664
    8. '＝' → logprob: -16.00033950805664
    9. '=int' → logprob: -16.12533950805664
    10. '=b' → logprob: -16.62533950805664

Token 2170: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.0325924449716695e-05
    2. ' val' → logprob: -11.50001049041748
    3. 'ans' → logprob: -16.000009536743164
    4. '	val' → logprob: -19.375009536743164
    5. '_val' → logprob: -19.875009536743164
    6. '```' → logprob: -19.875009536743164
    7. '[val' → logprob: -20.500009536743164
    8. '(val' → logprob: -20.875009536743164
    9. ',val' → logprob: -21.625009536743164
    10. '
' → logprob: -21.750009536743164

Token 2171: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17479711771011353
    2. '<|end|>' → logprob: -2.7997970581054688
    3. '```' → logprob: -2.9247970581054688
    4. '                        
' → logprob: -4.799797058105469
    5. ' 
' → logprob: -5.049797058105469
    6. '=' → logprob: -5.674797058105469
    7. '<|end|>' → logprob: -5.799797058105469
    8. '       ' → logprob: -6.049797058105469
    9. '                            
' → logprob: -6.174797058105469
    10. '                               ' → logprob: -6.299797058105469

Token 2172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20260430872440338
    2. '   ' → logprob: -2.577604293823242
    3. '
' → logprob: -2.702604293823242
    4. '```' → logprob: -3.827604293823242
    5. '           ' → logprob: -5.452604293823242
    6. '                               ' → logprob: -6.077604293823242
    7. '    
' → logprob: -6.202604293823242
    8. '                       ' → logprob: -6.577604293823242
    9. 'print' → logprob: -6.577604293823242
    10. '               ' → logprob: -6.702604293823242

Token 2173: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7556028962135315
    2. '```' → logprob: -0.8806028962135315
    3. '``' → logprob: -3.2556028366088867
    4. '       ' → logprob: -3.3806028366088867
    5. 'print' (adapté à ' print') → logprob: -3.7556028366088867
    6. '<|end|>' → logprob: -4.630602836608887
    7. 'return' → logprob: -5.630602836608887
    8. '
' → logprob: -6.130602836608887
    9. ')
' → logprob: -7.255602836608887
    10. ')' → logprob: -7.255602836608887

Token 2174: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.908022285439074e-05
    2. 'ans' → logprob: -10.000059127807617
    3. '(' → logprob: -11.375059127807617
    4. '()' → logprob: -13.250059127807617
    5. ' (' → logprob: -15.625059127807617
    6. '	ans' → logprob: -16.500059127807617
    7. '```' → logprob: -17.625059127807617
    8. '(
' → logprob: -17.750059127807617
    9. ' ans' → logprob: -17.875059127807617
    10. '(`' → logprob: -18.000059127807617

Token 2175: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.47495681833243e-05
    2. '())' → logprob: -11.875024795532227
    3. '`)' → logprob: -12.125024795532227
    4. ')
' → logprob: -12.625024795532227
    5. '()' → logprob: -12.750024795532227
    6. '   ' → logprob: -13.250024795532227
    7. ')`' → logprob: -13.375024795532227
    8. ' )' → logprob: -14.000024795532227
    9. '```' → logprob: -14.750024795532227
    10. '       ' → logprob: -15.625024795532227

Token 2176: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2177: '()' (ID: 416)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9422962069511414
    2. '   ' → logprob: -1.1922962665557861
    3. '<|end|>' → logprob: -2.817296266555786
    4. '#' → logprob: -3.067296266555786
    5. '(' → logprob: -3.192296266555786
    6. 'def' → logprob: -3.317296266555786
    7. '_' → logprob: -3.317296266555786
    8. '[' → logprob: -3.942296266555786
    9. '```' → logprob: -4.192296028137207
    10. '()' → logprob: -4.317296028137207


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2175
Tokens correctement prédits (1ère position, stricte): 865
Tokens correctement prédits (1ère position, avec adaptation): 931
Tokens correctement prédits (top 10): 1588
Précision stricte (1ère position): 39.77%
Précision adaptée (1ère position): 42.80%
Précision (top 10): 73.01%
================================================================================
