================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    import sys
    sys.setrecursionlimit(10**7)

    def dfs(u):
        nonlocal idx
        visited[u] = True
        on_stack[u] = True
        stack.append(u)
        v = graph[u]
        if not visited[v]:
            dfs(v)
        elif on_stack[v]:
            # cycle detected
            cycle_nodes = 0
            for i in range(len(stack)-1, -1, -1):
                cycle_nodes +=1
                if stack[i] == v:
                    break
            nonlocal cycle_count
            cycle_count += 1
        on_stack[u] = False
        stack.pop()

    for line in sys.stdin:
        N = line.strip()
        if N == '0':
            break
        N = int(N)
        graph = [0]*(N*N)
        for i in range(N):
            data = sys.stdin.readline().strip().split()
            for j in range(N):
                x = int(data[2*j])
                y = int(data[2*j+1])
                graph[i*N+j] = x*N + y

        visited = [False]*(N*N)
        on_stack = [False]*(N*N)
        stack = []
        cycle_count = 0
        for u in range(N*N):
            if not visited[u]:
                dfs(u)
        print(cycle_count)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2743290662765503
    2. '\n' → logprob: -1.7743290662765503
    3. '   ' → logprob: -3.52432918548584
    4. '(' → logprob: -4.39932918548584
    5. ' 
' → logprob: -5.14932918548584
    6. '    
' → logprob: -5.27432918548584
    7. ' ' → logprob: -5.52432918548584
    8. ''' → logprob: -5.64932918548584
    9. '    ' → logprob: -6.39932918548584
    10. '```' → logprob: -6.39932918548584

Token 4: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5992159247398376
    2. '   ' → logprob: -1.4742159843444824
    3. 'pass' → logprob: -2.0992159843444824
    4. 'return' → logprob: -2.8492159843444824
    5. '#' → logprob: -4.224215984344482
    6. 'p' → logprob: -5.224215984344482
    7. '```' → logprob: -5.724215984344482
    8. 'r' → logprob: -5.724215984344482
    9. 'a' → logprob: -5.974215984344482
    10. '\' → logprob: -5.974215984344482

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03986188396811485
    2. ' sys' → logprob: -3.4148619174957275
    3. ' math' → logprob: -5.664861679077148
    4. ' ' → logprob: -6.414861679077148
    5. ' numpy' → logprob: -7.539861679077148
    6. ' json' → logprob: -8.414861679077148
    7. ' random' → logprob: -9.664861679077148
    8. ' tensorflow' → logprob: -9.664861679077148
    9. 'os' → logprob: -10.539861679077148
    10. ' space' → logprob: -10.664861679077148

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2155410647392273
    2. '\n' → logprob: -3.340541124343872
    3. 'newline' → logprob: -3.465541124343872
    4. '\' → logprob: -3.840541124343872
    5. '<|end|>' → logprob: -3.840541124343872
    6. '.readline' → logprob: -4.215540885925293
    7. 'import' → logprob: -4.340540885925293
    8. '```' → logprob: -4.590540885925293
    9. '   ' → logprob: -4.715540885925293
    10. '[' → logprob: -5.465540885925293

Token 7: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 8: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34991130232810974
    2. ' ' → logprob: -2.3499112129211426
    3. '    ' → logprob: -2.3499112129211426
    4. '\n' → logprob: -3.7249112129211426
    5. '\' → logprob: -4.099911212921143
    6. '.' → logprob: -4.724911212921143
    7. '[' → logprob: -4.724911212921143
    8. 'import' → logprob: -4.849911212921143
    9. '  ' → logprob: -5.224911212921143
    10. 'newline' → logprob: -5.224911212921143

Token 9: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -4.2987729102605954e-05
    2. ' .' → logprob: -10.625042915344238
    3. '.exit' → logprob: -12.250042915344238
    4. '.readline' → logprob: -13.125042915344238
    5. '.argv' → logprob: -13.125042915344238
    6. '.import' → logprob: -13.500042915344238
    7. '.stdout' → logprob: -13.875042915344238
    8. '.stdin' → logprob: -13.875042915344238
    9. '.`' → logprob: -14.000042915344238
    10. '.user' → logprob: -14.500042915344238

Token 10: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7038337588310242
    2. 'trace' → logprob: -1.578833818435669
    3. '_trace' → logprob: -1.953833818435669
    4. '_version' → logprob: -3.328833818435669
    5. 'ex' → logprob: -4.20383358001709
    6. '_ex' → logprob: -4.32883358001709
    7. 'rec' → logprob: -4.45383358001709
    8. 's' → logprob: -4.70383358001709
    9. '_encoding' → logprob: -4.70383358001709
    10. '_limit' → logprob: -4.95383358001709

Token 11: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003574887989088893
    2. '_limit' → logprob: -6.628574848175049
    3. '_' → logprob: -7.128574848175049
    4. 'urs' → logprob: -7.753574848175049
    5. 'limit' → logprob: -8.128575325012207
    6. 'ur' → logprob: -8.378575325012207
    7. 'ursive' → logprob: -8.753575325012207
    8. 'ut' → logprob: -9.253575325012207
    9. 'urse' → logprob: -9.628575325012207
    10. 't' → logprob: -10.003575325012207

Token 12: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.07941889017820358
    2. '_limit' → logprob: -2.579418897628784
    3. 'lim' → logprob: -8.704419136047363
    4. '_depth' → logprob: -8.704419136047363
    5. 'depth' → logprob: -9.329419136047363
    6. ' limit' → logprob: -10.329419136047363
    7. '_lim' → logprob: -10.329419136047363
    8. 'Limit' → logprob: -10.954419136047363
    9. '_' → logprob: -11.954419136047363
    10. 'error' → logprob: -12.329419136047363

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.4849443838757e-06
    2. '(

' → logprob: -13.500004768371582
    3. ' (' → logprob: -13.750004768371582
    4. '("("' → logprob: -14.000004768371582
    5. '(
' → logprob: -14.250004768371582
    6. '((' → logprob: -15.500004768371582
    7. '('' → logprob: -16.000003814697266
    8. '()' → logprob: -16.625003814697266
    9. '(
' → logprob: -18.250003814697266
    10. ')' → logprob: -18.375003814697266

Token 14: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.029773982241749763
    2. '100' → logprob: -3.5297739505767822
    3. ' ' → logprob: -11.029773712158203
    4. '1' → logprob: -12.154773712158203
    5. '   ' → logprob: -14.279773712158203
    6. '500' → logprob: -14.529773712158203
    7. '300' → logprob: -15.154773712158203
    8. '200' → logprob: -15.654773712158203
    9. '  ' → logprob: -15.904773712158203
    10. '999' → logprob: -16.029773712158203

Token 15: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1475066840648651
    2. '00' → logprob: -2.1475067138671875
    3. '000' → logprob: -3.8975067138671875
    4. '**' → logprob: -10.397506713867188
    5. '4' → logprob: -10.647506713867188
    6. '2' → logprob: -11.022506713867188
    7. '3' → logprob: -13.522506713867188
    8. '6' → logprob: -13.647506713867188
    9. '5' → logprob: -13.772506713867188
    10. ''' → logprob: -14.647506713867188

Token 16: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0006828876794315875
    2. '6' → logprob: -7.875682830810547
    3. '8' → logprob: -8.625682830810547
    4. '9' → logprob: -9.000682830810547
    5. ' ' → logprob: -17.750682830810547
    6. '```' → logprob: -18.000682830810547
    7. '5' → logprob: -20.000682830810547
    8. '}' → logprob: -20.000682830810547
    9. '**' → logprob: -20.125682830810547
    10. ')' → logprob: -20.500682830810547

Token 17: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -14.500001907348633
    4. '))' → logprob: -16.000001907348633
    5. ' ' → logprob: -17.625001907348633
    6. '```' → logprob: -18.125001907348633
    7. '   ' → logprob: -18.250001907348633
    8. ')))' → logprob: -18.625001907348633
    9. '),' → logprob: -18.625001907348633
    10. ')

' → logprob: -18.875001907348633

Token 18: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.6446602940559387
    2. '   ' → logprob: -1.269660234451294
    3. '
' → logprob: -1.894660234451294
    4. '\n' → logprob: -4.144660472869873
    5. '\' → logprob: -4.269660472869873
    6. ' 
' → logprob: -5.519660472869873
    7. '```' → logprob: -5.894660472869873
    8. '  
' → logprob: -6.644660472869873
    9. '   
' → logprob: -6.644660472869873
    10. '    ' → logprob: -7.144660472869873

Token 19: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3802194595336914
    2. 'n' → logprob: -1.2552194595336914
    3. 'a' → logprob: -5.130219459533691
    4. 'i' → logprob: -5.505219459533691
    5. 'x' → logprob: -5.630219459533691
    6. 'try' → logprob: -5.880219459533691
    7. ' ' → logprob: -6.005219459533691
    8. '    ' → logprob: -6.130219459533691
    9. '    
' → logprob: -6.380219459533691
    10. '#' → logprob: -6.505219459533691

Token 20: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.6617769002914429
    2. ' factorial' → logprob: -1.0367769002914429
    3. ' f' → logprob: -2.6617770195007324
    4. ' solve' → logprob: -3.0367770195007324
    5. ' fibonacci' → logprob: -5.786777019500732
    6. ' factor' → logprob: -6.161777019500732
    7. ' ' → logprob: -6.536777019500732
    8. ' helper' → logprob: -7.036777019500732
    9. ' fib' → logprob: -7.036777019500732
    10. 'dfs' → logprob: -7.411777019500732

Token 21: '(u' (ID: 17057)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008983965963125229
    2. '_' → logprob: -4.883984088897705
    3. ' (' → logprob: -6.758984088897705
    4. '(node' → logprob: -10.258983612060547
    5. '_(' → logprob: -10.508983612060547
    6. '(_' → logprob: -11.258983612060547
    7. ')' → logprob: -11.258983612060547
    8. '_space' → logprob: -11.508983612060547
    9. ' ' → logprob: -11.633983612060547
    10. '_tree' → logprob: -11.883983612060547

Token 22: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07930006831884384
    2. '):' → logprob: -2.5793001651763916
    3. ')' → logprob: -8.454299926757812
    4. ' ,' → logprob: -9.454299926757812
    5. ',u' → logprob: -9.829299926757812
    6. ':' → logprob: -10.079299926757812
    7. ' ):' → logprob: -11.579299926757812
    8. 'u' → logprob: -11.579299926757812
    9. '):
' → logprob: -14.079299926757812
    10. ',
' → logprob: -14.579299926757812

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2656937837600708
    2. ':' → logprob: -1.5156937837600708
    3. '):' → logprob: -5.265693664550781
    4. '\' → logprob: -6.140693664550781
    5. '   ' → logprob: -6.390693664550781
    6. '<|end|>' → logprob: -7.015693664550781
    7. '    ' → logprob: -7.265693664550781
    8. '(' → logprob: -7.265693664550781
    9. ')' → logprob: -7.390693664550781
    10. '():' → logprob: -8.015693664550781

Token 24: ' non' (ID: 2893)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6322658658027649
    2. '    ' → logprob: -1.6322658061981201
    3. ' ' → logprob: -2.38226580619812
    4. '        ' → logprob: -2.50726580619812
    5. '   ' → logprob: -2.75726580619812
    6. ':' → logprob: -4.757266044616699
    7. '\' → logprob: -4.757266044616699
    8. ' :' → logprob: -5.757266044616699
    9. '(' → logprob: -5.882266044616699
    10. '\n' → logprob: -6.132266044616699

Token 25: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.00035488870344124734
    2. 'e' → logprob: -8.750354766845703
    3. 'l' → logprob: -8.750354766845703
    4. 'locals' → logprob: -10.375354766845703
    5. ' local' → logprob: -12.250354766845703
    6. 'lo' → logprob: -13.875354766845703
    7. 'loc' → logprob: -15.375354766845703
    8. 'd' → logprob: -15.875354766845703
    9. ' ' → logprob: -15.875354766845703
    10. '_local' → logprob: -16.000354766845703

Token 26: ' idx' (ID: 14016)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.2560153603553772
    2. ' u' → logprob: -2.1310153007507324
    3. ' graph' → logprob: -3.5060153007507324
    4. 'visited' → logprob: -3.6310153007507324
    5. ' ' → logprob: -4.131015300750732
    6. ' stack' → logprob: -4.631015300750732
    7. ' v' → logprob: -5.381015300750732
    8. 'u' → logprob: -5.506015300750732
    9. ' answer' → logprob: -5.631015300750732
    10. ' depth' → logprob: -5.881015300750732

Token 27: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48305007815361023
    2. ':' → logprob: -1.9830501079559326
    3. '   ' → logprob: -3.3580501079559326
    4. '
' → logprob: -3.4830501079559326
    5. '\' → logprob: -3.4830501079559326
    6. ')' → logprob: -3.6080501079559326
    7. ' ' → logprob: -3.8580501079559326
    8. 'u' → logprob: -4.2330498695373535
    9. ',' → logprob: -4.2330498695373535
    10. '\n' → logprob: -4.3580498695373535

Token 28: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01279368530958891
    2. '       ' → logprob: -5.63779354095459
    3. '<|end|>' → logprob: -6.26279354095459
    4. '):' → logprob: -6.38779354095459
    5. '   ' → logprob: -6.51279354095459
    6. ')' → logprob: -6.63779354095459
    7. ':
' → logprob: -7.01279354095459
    8. ',' → logprob: -7.38779354095459
    9. '
' → logprob: -8.38779354095459
    10. '\n' → logprob: -8.51279354095459

Token 29: ' visited' (ID: 18416)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0656861811876297
    2. 'for' → logprob: -3.6906862258911133
    3. '   ' → logprob: -3.8156862258911133
    4. ',' → logprob: -4.940686225891113
    5. ')' → logprob: -6.190686225891113
    6. 'if' → logprob: -6.690686225891113
    7. ' for' → logprob: -6.690686225891113
    8. 'u' → logprob: -7.065686225891113
    9. '[' → logprob: -7.440686225891113
    10. 'idx' → logprob: -7.815686225891113

Token 30: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.11333014070987701
    2. '[' → logprob: -2.238330125808716
    3. '.add' → logprob: -8.613329887390137
    4. '.setdefault' → logprob: -8.738329887390137
    5. '```' → logprob: -9.988329887390137
    6. '[]' → logprob: -10.363329887390137
    7. '[user' → logprob: -10.613329887390137
    8. 'u' → logprob: -11.363329887390137
    9. '[...]' → logprob: -11.863329887390137
    10. ' ' → logprob: -12.238329887390137

Token 31: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006128363311290741
    2. ']=' → logprob: -7.625612735748291
    3. ' ]' → logprob: -9.25061321258545
    4. '[' → logprob: -11.12561321258545
    5. ')' → logprob: -12.12561321258545
    6. '=' → logprob: -12.12561321258545
    7. ']==' → logprob: -13.25061321258545
    8. ' =' → logprob: -14.75061321258545
    9. '[u' → logprob: -15.50061321258545
    10. '])' → logprob: -15.62561321258545

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741162061691284
    2. '=' → logprob: -0.9741162061691284
    3. '[' → logprob: -10.349116325378418
    4. '=True' → logprob: -12.849116325378418
    5. ' |=' → logprob: -13.349116325378418
    6. ']' → logprob: -14.599116325378418
    7. ' ' → logprob: -14.599116325378418
    8. ')' → logprob: -14.724116325378418
    9. '+=' → logprob: -14.849116325378418
    10. ' +=' → logprob: -15.599116325378418

Token 33: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10023017972707748
    2. ' True' → logprob: -2.3502302169799805
    3. '1' → logprob: -10.72523021697998
    4. 'False' → logprob: -14.22523021697998
    5. ' ' → logprob: -14.85023021697998
    6. '0' → logprob: -15.60023021697998
    7. '(True' → logprob: -15.72523021697998
    8. '=True' → logprob: -15.85023021697998
    9. '   ' → logprob: -16.600229263305664
    10. 'Tr' → logprob: -17.100229263305664

Token 34: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46001294255256653
    2. '<|end|>' → logprob: -1.0850129127502441
    3. ')' → logprob: -4.710012912750244
    4. '   ' → logprob: -5.085012912750244
    5. '
' → logprob: -5.210012912750244
    6. ',' → logprob: -5.460012912750244
    7. '<|end|>' → logprob: -6.960012912750244
    8. '    
' → logprob: -6.960012912750244
    9. '        
' → logprob: -7.335012912750244
    10. '        ' → logprob: -7.710012912750244

Token 36: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36974036693573
    2. '   ' → logprob: -1.86974036693573
    3. ' for' → logprob: -2.1197404861450195
    4. 'idx' → logprob: -4.6197404861450195
    5. '       ' → logprob: -5.1197404861450195
    6. ')' → logprob: -5.3697404861450195
    7. 'stack' → logprob: -5.6197404861450195
    8. ':' → logprob: -5.7447404861450195
    9. ',' → logprob: -6.2447404861450195
    10. ' stack' → logprob: -7.1197404861450195

Token 37: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.48444294929504395
    2. 'stack' → logprob: -1.109442949295044
    3. 'e' → logprob: -3.484442949295044
    4. 'Stack' → logprob: -4.484442710876465
    5. ' stack' → logprob: -4.859442710876465
    6. '_path' → logprob: -6.609442710876465
    7. 'path' → logprob: -6.734442710876465
    8. '[u' → logprob: -7.109442710876465
    9. '[e' → logprob: -8.109442710876465
    10. 'ce' → logprob: -8.734442710876465

Token 38: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -7.541112427134067e-05
    2. '[' → logprob: -9.500075340270996
    3. '```' → logprob: -15.125075340270996
    4. ' [' → logprob: -16.750076293945312
    5. 'u' → logprob: -17.000076293945312
    6. '[]' → logprob: -17.000076293945312
    7. '[user' → logprob: -17.750076293945312
    8. '\[' → logprob: -17.875076293945312
    9. '[:]' → logprob: -18.125076293945312
    10. ']' → logprob: -18.375076293945312

Token 39: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010334034450352192
    2. ' ]' → logprob: -7.001033306121826
    3. ']=' → logprob: -9.126033782958984
    4. '=' → logprob: -11.626033782958984
    5. ' =' → logprob: -12.876033782958984
    6. ')' → logprob: -14.376033782958984
    7. '[' → logprob: -14.501033782958984
    8. ' ' → logprob: -16.001033782958984
    9. '   ' → logprob: -16.251033782958984
    10. ']==' → logprob: -16.376033782958984

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269988715648651
    2. '=' → logprob: -2.1269989013671875
    3. '[' → logprob: -9.876998901367188
    4. ' ' → logprob: -11.876998901367188
    5. '=True' → logprob: -12.126998901367188
    6. '    ' → logprob: -13.501998901367188
    7. ' |=' → logprob: -13.501998901367188
    8. ']' → logprob: -13.626998901367188
    9. ')' → logprob: -14.126998901367188
    10. '[:]' → logprob: -14.126998901367188

Token 41: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.3868711292743683
    2. 'True' → logprob: -1.136871099472046
    3. ' Tru' → logprob: -17.136871337890625
    4. '(True' → logprob: -17.386871337890625
    5. '=True' → logprob: -17.761871337890625
    6. '1' → logprob: -18.761871337890625
    7. ' ' → logprob: -18.886871337890625
    8. 'Tr' → logprob: -19.136871337890625
    9. '   ' → logprob: -20.011871337890625
    10. 'T' → logprob: -20.136871337890625

Token 42: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7572700381278992
    2. '
' → logprob: -1.382270097732544
    3. '<|end|>' → logprob: -1.882270097732544
    4. '\n' → logprob: -2.757270097732544
    5. '\' → logprob: -4.132269859313965
    6. '   ' → logprob: -4.382269859313965
    7. '    
' → logprob: -4.882269859313965
    8. '        
' → logprob: -4.882269859313965
    9. 'newline' → logprob: -5.007269859313965
    10. ')' → logprob: -5.757269859313965

Token 44: ' stack' (ID: 10825)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29827070236206055
    2. ' for' → logprob: -1.6732707023620605
    3. '   ' → logprob: -2.6732707023620605
    4. '       ' → logprob: -7.0482707023620605
    5. 'idx' → logprob: -9.673271179199219
    6. '```' → logprob: -10.048271179199219
    7. ' ' → logprob: -10.298271179199219
    8. ')' → logprob: -10.423271179199219
    9. 'stack' (adapté à ' stack') → logprob: -10.548271179199219
    10. '	for' → logprob: -10.798271179199219

Token 45: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0906413272023201
    2. '.' → logprob: -2.4656412601470947
    3. '[' → logprob: -6.465641498565674
    4. ' .' → logprob: -9.465641021728516
    5. '.extend' → logprob: -11.215641021728516
    6. '[-' → logprob: -11.340641021728516
    7. '[:]' → logprob: -11.840641021728516
    8. '.push' → logprob: -12.090641021728516
    9. '[]' → logprob: -12.465641021728516
    10. '.add' → logprob: -12.965641021728516

Token 46: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.00015872348740231246
    2. '(' → logprob: -8.750158309936523
    3. '((' → logprob: -15.875158309936523
    4. 'u' → logprob: -17.500158309936523
    5. '(user' → logprob: -17.750158309936523
    6. '(U' → logprob: -18.000158309936523
    7. '(i' → logprob: -18.125158309936523
    8. '(n' → logprob: -19.000158309936523
    9. '(a' → logprob: -19.000158309936523
    10. '("("' → logprob: -19.000158309936523

Token 47: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010711929644457996
    2. ')
' → logprob: -9.250106811523438
    3. '   ' → logprob: -12.250106811523438
    4. '       ' → logprob: -12.750106811523438
    5. ' )' → logprob: -13.125106811523438
    6. '`)' → logprob: -15.125106811523438
    7. '
' → logprob: -15.625106811523438
    8. '),' → logprob: -15.875106811523438
    9. ')`' → logprob: -16.250106811523438
    10. '))' → logprob: -16.500106811523438

Token 48: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6619970798492432
    2. '<|end|>' → logprob: -1.1619970798492432
    3. '\n' → logprob: -2.911997079849243
    4. '       ' → logprob: -2.911997079849243
    5. '    
' → logprob: -4.036996841430664
    6. '  
' → logprob: -4.536996841430664
    7. ' 
' → logprob: -4.661996841430664
    8. '   ' → logprob: -4.786996841430664
    9. 'newline' → logprob: -5.786996841430664
    10. '\' → logprob: -5.911996841430664

Token 49: ' v' (ID: 323)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4525613486766815
    2. 'for' → logprob: -1.952561378479004
    3. ' for' → logprob: -2.202561378479004
    4. '\n' → logprob: -3.327561378479004
    5. '   ' → logprob: -3.827561378479004
    6. ' 
' → logprob: -4.327561378479004
    7. '       ' → logprob: -4.452561378479004
    8. '    
' → logprob: -4.452561378479004
    9. '<|end|>' → logprob: -4.702561378479004
    10. '  
' → logprob: -5.827561378479004

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13319624960422516
    2. '=' → logprob: -2.5081963539123535
    3. 's' → logprob: -3.3831963539123535
    4. 'al' → logprob: -5.6331963539123535
    5. ' in' → logprob: -6.0081963539123535
    6. ' ' → logprob: -6.1331963539123535
    7. '   ' → logprob: -8.133195877075195
    8. ',' → logprob: -8.758195877075195
    9. 'a' → logprob: -9.508195877075195
    10. 'is' → logprob: -9.508195877075195

Token 51: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.22106510400772095
    2. 'g' → logprob: -2.721065044403076
    3. 'edges' → logprob: -2.971065044403076
    4. 'adj' → logprob: -3.471065044403076
    5. 'G' → logprob: -4.346065044403076
    6. 'to' → logprob: -4.596065044403076
    7. 'next' → logprob: -4.721065044403076
    8. ' graph' → logprob: -4.721065044403076
    9. 'neighbors' → logprob: -6.221065044403076
    10. 'edge' → logprob: -7.096065044403076

Token 52: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.306760805164231e-05
    2. '[v' → logprob: -11.50001335144043
    3. '[' → logprob: -13.75001335144043
    4. '```' → logprob: -14.00001335144043
    5. 'u' → logprob: -14.62501335144043
    6. '\[' → logprob: -16.25001335144043
    7. '   ' → logprob: -16.62501335144043
    8. ' [' → logprob: -16.62501335144043
    9. '[user' → logprob: -16.87501335144043
    10. '[node' → logprob: -17.12501335144043

Token 53: ']
' (ID: 1592)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04813588783144951
    2. ')' → logprob: -3.298135995864868
    3. '[v' → logprob: -5.673135757446289
    4. '[u' → logprob: -5.673135757446289
    5. ']' → logprob: -6.423135757446289
    6. '])' → logprob: -7.423135757446289
    7. '][' → logprob: -7.798135757446289
    8. '   ' → logprob: -8.923135757446289
    9. ')[' → logprob: -9.298135757446289
    10. '[next' → logprob: -9.423135757446289

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3194410800933838
    2. '<|end|>' → logprob: -1.6944410800933838
    3. ' if' → logprob: -3.569441080093384
    4. 'if' → logprob: -4.069440841674805
    5. '
' → logprob: -4.069440841674805
    6. '[' → logprob: -4.569440841674805
    7. '<|end|>' → logprob: -4.944440841674805
    8. ')' → logprob: -5.319440841674805
    9. ' ' → logprob: -6.194440841674805
    10. '   ' → logprob: -7.944440841674805

Token 55: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9484626650810242
    2. '       ' → logprob: -1.823462724685669
    3. 'if' (adapté à ' if') → logprob: -1.948462724685669
    4. '<|end|>' → logprob: -1.948462724685669
    5. '
' → logprob: -2.198462724685669
    6. ' ' → logprob: -3.448462724685669
    7. '<|end|>' → logprob: -4.94846248626709
    8. '        ' → logprob: -5.82346248626709
    9. ' 
' → logprob: -6.19846248626709
    10. '   ' → logprob: -6.19846248626709

Token 56: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.27889809012413025
    2. 'v' → logprob: -2.278898000717163
    3. ' v' → logprob: -2.403898000717163
    4. 'not' → logprob: -3.153898000717163
    5. 'visited' → logprob: -5.778898239135742
    6. ' visited' → logprob: -5.903898239135742
    7. ' on' → logprob: -6.653898239135742
    8. 'on' → logprob: -8.028898239135742
    9. ' ' → logprob: -8.278898239135742
    10. '   ' → logprob: -10.153898239135742

Token 57: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.029765412211418152
    2. 'visited' → logprob: -3.5297653675079346
    3. ' v' → logprob: -11.654765129089355
    4. 'v' → logprob: -13.404765129089355
    5. 'Visited' → logprob: -13.529765129089355
    6. ' ' → logprob: -13.779765129089355
    7. '   ' → logprob: -14.779765129089355
    8. ' visit' → logprob: -15.029765129089355
    9. ' visite' → logprob: -15.154765129089355
    10. ' ' → logprob: -15.279765129089355

Token 58: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -11.875007629394531
    3. 'v' → logprob: -14.125007629394531
    4. '[u' → logprob: -16.37500762939453
    5. '```' → logprob: -16.75000762939453
    6. ' [' → logprob: -17.37500762939453
    7. '(v' → logprob: -17.50000762939453
    8. '[V' → logprob: -17.62500762939453
    9. '[
' → logprob: -17.87500762939453
    10. '<v' → logprob: -18.25000762939453

Token 59: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.003909795545041561
    2. ']' → logprob: -5.753909587860107
    3. '):' → logprob: -8.003910064697266
    4. ':' → logprob: -8.878910064697266
    5. ']:
' → logprob: -9.128910064697266
    6. ' ]' → logprob: -9.503910064697266
    7. ']):' → logprob: -10.753910064697266
    8. '[' → logprob: -11.003910064697266
    9. '']:' → logprob: -11.378910064697266
    10. '"]:' → logprob: -11.753910064697266

Token 60: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1047833114862442
    2. '           ' → logprob: -2.979783296585083
    3. '       ' → logprob: -4.104783535003662
    4. '<|end|>' → logprob: -4.354783535003662
    5. ':
' → logprob: -4.979783535003662
    6. '):' → logprob: -5.604783535003662
    7. '<|end|>' → logprob: -6.104783535003662
    8. ' and' → logprob: -6.979783535003662
    9. '
' → logprob: -6.979783535003662
    10. ')' → logprob: -6.979783535003662

Token 61: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.5968631505966187
    2. 'dfs' (adapté à ' dfs') → logprob: -1.8468631505966187
    3. '\n' → logprob: -2.096863269805908
    4. '           ' → logprob: -2.846863269805908
    5. ' 
' → logprob: -3.846863269805908
    6. '
' → logprob: -3.971863269805908
    7. '               ' → logprob: -4.096863269805908
    8. '            
' → logprob: -4.596863269805908
    9. '       ' → logprob: -4.721863269805908
    10. ' ' → logprob: -4.721863269805908

Token 62: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.014165272004902363
    2. '(' → logprob: -4.26416540145874
    3. ' (' → logprob: -14.014164924621582
    4. '((' → logprob: -15.014164924621582
    5. '(
' → logprob: -15.264164924621582
    6. '(u' → logprob: -16.1391658782959
    7. '(

' → logprob: -17.0141658782959
    8. '```' → logprob: -17.2641658782959
    9. '(iv' → logprob: -17.8891658782959
    10. '()' → logprob: -17.8891658782959

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7848862373502925e-05
    2. ' )' → logprob: -11.125027656555176
    3. ')
' → logprob: -12.000027656555176
    4. ')v' → logprob: -12.375027656555176
    5. '(' → logprob: -14.375027656555176
    6. '))' → logprob: -14.500027656555176
    7. '   ' → logprob: -15.125027656555176
    8. '(v' → logprob: -15.250027656555176
    9. ')`' → logprob: -15.500027656555176
    10. ' ' → logprob: -15.625027656555176

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3454223871231079
    2. 'elif' → logprob: -2.2204222679138184
    3. ' elif' → logprob: -2.3454222679138184
    4. '<|end|>' → logprob: -2.5954222679138184
    5. ' else' → logprob: -5.470422267913818
    6. 'else' → logprob: -5.970422267913818
    7. '	elif' → logprob: -6.220422267913818
    8. '<|end|>' → logprob: -6.470422267913818
    9. '   ' → logprob: -6.595422267913818
    10. '
' → logprob: -8.095422744750977

Token 65: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.19170957803726196
    2. 'elif' (adapté à ' elif') → logprob: -2.066709518432617
    3. '<|end|>' → logprob: -3.941709518432617
    4. ' else' → logprob: -4.066709518432617
    5. '       ' → logprob: -4.941709518432617
    6. '	elif' → logprob: -5.941709518432617
    7. 'else' → logprob: -6.941709518432617
    8. '<|end|>' → logprob: -7.816709518432617
    9. '   ' → logprob: -10.191709518432617
    10. ')' → logprob: -10.691709518432617

Token 66: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.0001825642102630809
    2. 'on' → logprob: -8.625182151794434
    3. ' ' → logprob: -13.750182151794434
    4. '    ' → logprob: -14.250182151794434
    5. ' ' → logprob: -14.250182151794434
    6. '	on' → logprob: -15.625182151794434
    7. 'v' → logprob: -16.25018310546875
    8. '   ' → logprob: -16.62518310546875
    9. '(on' → logprob: -16.75018310546875
    10. ' v' → logprob: -17.12518310546875

Token 67: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.002139078453183174
    2. '_' → logprob: -6.377139091491699
    3. '_s' → logprob: -8.5021390914917
    4. ' _' → logprob: -9.3771390914917
    5. '_st' → logprob: -9.8771390914917
    6. '_sn' → logprob: -10.6271390914917
    7. '[_' → logprob: -11.0021390914917
    8. '```' → logprob: -11.5021390914917
    9. '<|end|>' → logprob: -11.8771390914917
    10. '_STACK' → logprob: -13.0021390914917

Token 68: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.939851037808694e-05
    2. '[' → logprob: -10.500029563903809
    3. 'v' → logprob: -14.375029563903809
    4. ' [' → logprob: -14.625029563903809
    5. '[u' → logprob: -14.625029563903809
    6. '```' → logprob: -16.375028610229492
    7. '[V' → logprob: -17.125028610229492
    8. '[
' → logprob: -17.125028610229492
    9. '[t' → logprob: -17.875028610229492
    10. '

' → logprob: -17.875028610229492

Token 69: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.40826788544654846
    2. ']' → logprob: -1.158267855644226
    3. '):' → logprob: -4.033267974853516
    4. '[' → logprob: -6.783267974853516
    5. ']):' → logprob: -7.533267974853516
    6. ']==' → logprob: -7.783267974853516
    7. ')' → logprob: -7.908267974853516
    8. ' ]' → logprob: -8.158267974853516
    9. ']:
' → logprob: -8.158267974853516
    10. ':' → logprob: -9.408267974853516

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005519277416169643
    2. '<|end|>' → logprob: -6.130519390106201
    3. 'idx' → logprob: -7.005519390106201
    4. ':' → logprob: -7.255519390106201
    5. '       ' → logprob: -7.380519390106201
    6. '               ' → logprob: -8.380518913269043
    7. '<|end|>' → logprob: -8.755518913269043
    8. ':
' → logprob: -9.130518913269043
    9. ',' → logprob: -9.630518913269043
    10. '#' → logprob: -9.755518913269043

Token 71: ' #' (ID: 1069)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.6118237376213074
    2. 'idx' → logprob: -1.1118237972259521
    3. '           ' → logprob: -2.986823797225952
    4. ' while' → logprob: -3.236823797225952
    5. ' index' → logprob: -4.861823558807373
    6. '   ' → logprob: -5.111823558807373
    7. 'index' → logprob: -5.236823558807373
    8. 'while' → logprob: -5.361823558807373
    9. ' start' → logprob: -5.736823558807373
    10. ' cycle' → logprob: -5.861823558807373

Token 72: ' cycle' (ID: 15839)
  Prédit: ' cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.577654242515564
    2. ' start' → logprob: -2.3276543617248535
    3. 'cycle' → logprob: -2.3276543617248535
    4. ' idx' → logprob: -2.5776543617248535
    5. 'start' → logprob: -2.8276543617248535
    6. 'idx' → logprob: -2.9526543617248535
    7. '#' → logprob: -3.7026543617248535
    8. ' index' → logprob: -4.8276543617248535
    9. 'index' → logprob: -4.9526543617248535
    10. ' #' → logprob: -5.4526543617248535

Token 73: ' detected' (ID: 28357)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.18583893775939941
    2. ' =' → logprob: -1.9358389377593994
    3. 'start' → logprob: -4.93583869934082
    4. '_nodes' → logprob: -5.43583869934082
    5. '_idx' → logprob: -5.56083869934082
    6. '=' → logprob: -5.68583869934082
    7. '_index' → logprob: -5.81083869934082
    8. ':' → logprob: -6.56083869934082
    9. '_' → logprob: -7.56083869934082
    10. 's' → logprob: -8.18583869934082

Token 74: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5713026523590088
    2. '<|end|>' → logprob: -1.0713026523590088
    3. '<|end|>' → logprob: -3.071302652359009
    4. 'idx' → logprob: -3.946302652359009
    5. '       ' → logprob: -5.07130241394043
    6. ':' → logprob: -5.19630241394043
    7. '
' → logprob: -5.44630241394043
    8. ' idx' → logprob: -5.69630241394043
    9. 'index' → logprob: -6.82130241394043
    10. '               ' → logprob: -7.19630241394043

Token 75: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27703002095222473
    2. '<|end|>' → logprob: -1.9020299911499023
    3. '<|end|>' → logprob: -3.4020299911499023
    4. '
' → logprob: -3.5270299911499023
    5. '       ' → logprob: -4.652029991149902
    6. 'idx' → logprob: -4.902029991149902
    7. '               ' → logprob: -5.652029991149902
    8. ' idx' → logprob: -5.902029991149902
    9. 'index' → logprob: -6.902029991149902
    10. '   ' → logprob: -7.152029991149902

Token 76: ' cycle' (ID: 15839)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.9955114722251892
    2. 'start' → logprob: -1.120511531829834
    3. 'cycle' (adapté à ' cycle') → logprob: -2.370511531829834
    4. ' cycle' → logprob: -2.745511531829834
    5. ' idx' → logprob: -2.995511531829834
    6. ' start' → logprob: -3.120511531829834
    7. ' while' → logprob: -4.370511531829834
    8. '   ' → logprob: -4.620511531829834
    9. 'while' → logprob: -4.620511531829834
    10. 'index' → logprob: -5.120511531829834

Token 77: '_nodes' (ID: 34593)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.007539675571024418
    2. ' =' → logprob: -5.382539749145508
    3. '_nodes' → logprob: -6.507539749145508
    4. 'start' → logprob: -7.632539749145508
    5. '_idx' → logprob: -8.257539749145508
    6. '=' → logprob: -8.507539749145508
    7. '_index' → logprob: -8.882539749145508
    8. '_' → logprob: -9.007539749145508
    9. 'Start' → logprob: -9.882539749145508
    10. '_indices' → logprob: -9.882539749145508

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16141065955162048
    2. '=' → logprob: -1.9114106893539429
    3. '_index' → logprob: -7.536410808563232
    4. '_idx' → logprob: -7.786410808563232
    5. '_start' → logprob: -9.036410331726074
    6. '.extend' → logprob: -10.411410331726074
    7. 'start' → logprob: -10.786410331726074
    8. 'index' → logprob: -10.911410331726074
    9. 'idx' → logprob: -10.911410331726074
    10. '.' → logprob: -12.036410331726074

Token 79: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.038320541381836
    2. '[]' → logprob: -1.163320541381836
    3. ' stack' → logprob: -1.663320541381836
    4. ' [' → logprob: -2.538320541381836
    5. 'stack' → logprob: -3.163320541381836
    6. '[' → logprob: -4.663320541381836
    7. ' set' → logprob: -4.913320541381836
    8. 'set' → logprob: -5.538320541381836
    9. '   ' → logprob: -7.788320541381836
    10. ' ' → logprob: -8.163320541381836

Token 80: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.28627243638038635
    2. 'stack' → logprob: -1.536272406578064
    3. '[' → logprob: -3.5362725257873535
    4. ' []' → logprob: -6.9112725257873535
    5. ' stack' → logprob: -6.9112725257873535
    6. 'set' → logprob: -7.4112725257873535
    7. '[]
' → logprob: -7.9112725257873535
    8. '   ' → logprob: -8.536272048950195
    9. '	stack' → logprob: -8.536272048950195
    10. '[
' → logprob: -8.911272048950195

Token 81: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6525036096572876
    2. '           ' → logprob: -1.0275036096572876
    3. '<|end|>' → logprob: -2.402503490447998
    4. 'while' → logprob: -4.777503490447998
    5. '<|end|>' → logprob: -5.152503490447998
    6. '               ' → logprob: -6.027503490447998
    7. '
' → logprob: -6.152503490447998
    8. ' while' → logprob: -6.277503490447998
    9. '+' → logprob: -6.402503490447998
    10. '   ' → logprob: -6.527503490447998

Token 82: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0983312577009201
    2. '       ' → logprob: -2.5983312129974365
    3. '<|end|>' → logprob: -4.848331451416016
    4. 'while' → logprob: -5.348331451416016
    5. '               ' → logprob: -5.973331451416016
    6. 'for' → logprob: -7.348331451416016
    7. '<|end|>' → logprob: -7.348331451416016
    8. '```' → logprob: -7.598331451416016
    9. '   ' → logprob: -7.723331451416016
    10. ' while' → logprob: -7.848331451416016

Token 83: ' for' (ID: 395)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0884014368057251
    2. 'for' (adapté à ' for') → logprob: -2.8384013175964355
    3. 'while' → logprob: -4.5884013175964355
    4. 'w' → logprob: -4.9634013175964355
    5. 'idx' → logprob: -5.5884013175964355
    6. 'current' → logprob: -6.3384013175964355
    7. 'j' → logprob: -6.7134013175964355
    8. '           ' → logprob: -7.3384013175964355
    9. 'pos' → logprob: -7.7134013175964355
    10. 'x' → logprob: -7.8384013175964355

Token 84: ' i' (ID: 575)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.1352688074111938
    2. 'node' → logprob: -1.1352688074111938
    3. 'x' → logprob: -1.6352688074111938
    4. 'i' → logprob: -2.1352686882019043
    5. ' node' → logprob: -3.5102686882019043
    6. ' i' → logprob: -5.385268688201904
    7. 'n' → logprob: -5.385268688201904
    8. ' w' → logprob: -5.635268688201904
    9. ' x' → logprob: -6.635268688201904
    10. '_node' → logprob: -9.385269165039062

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016089623793959618
    2. 'in' → logprob: -4.14108943939209
    3. ' ' → logprob: -10.39108943939209
    4. ',' → logprob: -12.14108943939209
    5. '   ' → logprob: -12.51608943939209
    6. '	in' → logprob: -12.76608943939209
    7. '  ' → logprob: -13.01608943939209
    8. ' i' → logprob: -13.01608943939209
    9. '<|end|>' → logprob: -13.51608943939209
    10. ' ,' → logprob: -13.64108943939209

Token 86: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4163319766521454
    2. ' range' → logprob: -1.1663320064544678
    3. 'stack' → logprob: -4.416331768035889
    4. 're' → logprob: -4.666331768035889
    5. ' stack' → logprob: -5.166331768035889
    6. ' reversed' → logprob: -6.416331768035889
    7. '   ' → logprob: -9.666332244873047
    8. ' ' → logprob: -10.041332244873047
    9. 'reverse' → logprob: -11.041332244873047
    10. '	range' → logprob: -11.166332244873047

Token 87: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.33172598481178284
    2. 'len' → logprob: -1.3317259550094604
    3. ' len' → logprob: -4.45672607421875
    4. '(stack' → logprob: -5.58172607421875
    5. 'stack' → logprob: -6.20672607421875
    6. ' stack' → logprob: -7.83172607421875
    7. '[len' → logprob: -9.33172607421875
    8. '   ' → logprob: -9.58172607421875
    9. '	len' → logprob: -9.58172607421875
    10. 'idx' → logprob: -9.95672607421875

Token 88: '(stack' (ID: 52691)
  Prédit: '(stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -0.00014644917973782867
    2. 'stack' → logprob: -8.875146865844727
    3. '(' → logprob: -12.750146865844727
    4. ' stack' → logprob: -13.000146865844727
    5. '	stack' → logprob: -14.250146865844727
    6. '(st' → logprob: -14.875146865844727
    7. ')' → logprob: -16.000146865844727
    8. '(Stack' → logprob: -16.500146865844727
    9. '_stack' → logprob: -17.000146865844727
    10. '.stack' → logprob: -17.000146865844727

Token 89: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.6250430345535278
    2. ')' → logprob: -1.2500430345535278
    3. ')):' → logprob: -2.3750429153442383
    4. '-' → logprob: -2.6250429153442383
    5. '))' → logprob: -5.625042915344238
    6. '):' → logprob: -5.750042915344238
    7. ')):
' → logprob: -5.750042915344238
    8. ' -' → logprob: -6.125042915344238
    9. ' ' → logprob: -8.875042915344238
    10. '()-' → logprob: -9.250042915344238

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00045379105722531676
    2. ' ' → logprob: -8.00045394897461
    3. '2' → logprob: -9.25045394897461
    4. '-' → logprob: -10.87545394897461
    5. ' -' → logprob: -13.00045394897461
    6. '   ' → logprob: -14.75045394897461
    7. '```' → logprob: -15.25045394897461
    8. '  ' → logprob: -15.93795394897461
    9. '

' → logprob: -16.12545394897461
    10. '
' → logprob: -16.12545394897461

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013863088097423315
    2. ',-' → logprob: -6.7513861656188965
    3. ' ,' → logprob: -8.501386642456055
    4. ' ,-' → logprob: -12.626386642456055
    5. '-' → logprob: -13.251386642456055
    6. ' -' → logprob: -13.501386642456055
    7. '         ' → logprob: -13.626386642456055
    8. '```' → logprob: -14.251386642456055
    9. '	' → logprob: -14.501386642456055
    10. ',
' → logprob: -14.626386642456055

Token 92: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868909478187561
    2. '-' → logprob: -1.1368908882141113
    3. ' ' → logprob: -11.51189136505127
    4. '0' → logprob: -12.88689136505127
    5. '         ' → logprob: -14.01189136505127
    6. '   ' → logprob: -14.01189136505127
    7. '    ' → logprob: -14.26189136505127
    8. '...' → logprob: -14.38689136505127
    9. '-u' → logprob: -14.38689136505127
    10. '  ' → logprob: -14.63689136505127

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '```' → logprob: -14.00000286102295
    3. ' ' → logprob: -14.12500286102295
    4. '   ' → logprob: -14.50000286102295
    5. '2' → logprob: -16.125001907348633
    6. '  ' → logprob: -16.625001907348633
    7. '１' → logprob: -17.375001907348633
    8. '۱' → logprob: -17.625001907348633
    9. '    ' → logprob: -17.812501907348633
    10. '

' → logprob: -17.812501907348633

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000820230518002063
    2. ',-' → logprob: -7.250820159912109
    3. '-' → logprob: -9.37582015991211
    4. ' ,' → logprob: -11.62582015991211
    5. ' -' → logprob: -12.25082015991211
    6. '```' → logprob: -12.62582015991211
    7. '   ' → logprob: -12.87582015991211
    8. ' ,-' → logprob: -13.50082015991211
    9. '1' → logprob: -13.62582015991211
    10. '<|end|>' → logprob: -14.25082015991211

Token 95: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08896160125732422
    2. ' -' → logprob: -2.463961601257324
    3. ' ' → logprob: -11.588961601257324
    4. '```' → logprob: -12.463961601257324
    5. ')' → logprob: -13.213961601257324
    6. '   ' → logprob: -13.713961601257324
    7. ',' → logprob: -14.088961601257324
    8. ',-' → logprob: -14.463961601257324
    9. '                   ' → logprob: -14.588961601257324
    10. '0' → logprob: -14.588961601257324

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9623810658231378e-05
    2. ' ' → logprob: -11.000020027160645
    3. ' -' → logprob: -13.875020027160645
    4. '   ' → logprob: -14.125020027160645
    5. '-' → logprob: -14.500020027160645
    6. '```' → logprob: -15.375020027160645
    7. ')' → logprob: -15.875020027160645
    8. '  ' → logprob: -16.500019073486328
    9. '):
' → logprob: -16.937519073486328
    10. ',' → logprob: -16.937519073486328

Token 97: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04313221201300621
    2. '):
' → logprob: -3.2931323051452637
    3. ',' → logprob: -6.043132305145264
    4. ':' → logprob: -6.668132305145264
    5. ')' → logprob: -7.168132305145264
    6. '       ' → logprob: -8.918131828308105
    7. '):
' → logprob: -9.043131828308105
    8. '   ' → logprob: -9.168131828308105
    9. ' ):' → logprob: -9.418131828308105
    10. '):

' → logprob: -10.043131828308105

Token 98: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' cycle' (ID: 15839)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3663138449192047
    2. '                   ' → logprob: -2.116313934326172
    3. ' if' → logprob: -2.241313934326172
    4. '           ' → logprob: -3.241313934326172
    5. '<|end|>' → logprob: -4.866313934326172
    6. '                ' → logprob: -5.116313934326172
    7. 'token' → logprob: -5.491313934326172
    8. ' token' → logprob: -5.491313934326172
    9. 'if' → logprob: -5.991313934326172
    10. '   ' → logprob: -5.991313934326172

Token 100: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.0022544567473232746
    2. '_' → logprob: -6.502254486083984
    3. '_stack' → logprob: -7.877254486083984
    4. '_tokens' → logprob: -8.752254486083984
    5. '   ' → logprob: -10.502254486083984
    6. ' _' → logprob: -10.752254486083984
    7. '_n' → logprob: -10.877254486083984
    8. ' ' → logprob: -11.002254486083984
    9. 's' → logprob: -11.127254486083984
    10. '_node' → logprob: -11.252254486083984

Token 101: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3362180292606354
    2. ' =' → logprob: -1.711217999458313
    3. ' ==' → logprob: -2.8362181186676025
    4. '==' → logprob: -3.4612181186676025
    5. ' +=' → logprob: -4.836217880249023
    6. '+=' → logprob: -5.461217880249023
    7. '<|end|>' → logprob: -6.961217880249023
    8. ' ' → logprob: -7.086217880249023
    9. '   ' → logprob: -8.461217880249023
    10. '==
' → logprob: -9.086217880249023

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.62502098083496
    4. '  ' → logprob: -20.25002098083496
    5. '```' → logprob: -20.37502098083496
    6. '+' → logprob: -20.75002098083496
    7. '
' → logprob: -21.37502098083496
    8. '<|end|>' → logprob: -21.62502098083496
    9. ' ' → logprob: -22.12502098083496
    10. '۱' → logprob: -22.31252098083496

Token 103: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025769274681806564
    2. '<|end|>' → logprob: -4.025769233703613
    3. '           ' → logprob: -5.400769233703613
    4. ' if' → logprob: -6.525769233703613
    5. '
' → logprob: -7.900769233703613
    6. '<|end|>' → logprob: -8.025769233703613
    7. '                ' → logprob: -8.650769233703613
    8. '       ' → logprob: -8.650769233703613
    9. ' ' → logprob: -9.150769233703613
    10. '                   ' → logprob: -9.400769233703613

Token 104: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05181306228041649
    2. ' if' → logprob: -3.3018131256103516
    3. '<|end|>' → logprob: -5.301813125610352
    4. 'if' → logprob: -5.426813125610352
    5. '           ' → logprob: -6.426813125610352
    6. '
' → logprob: -6.801813125610352
    7. '                ' → logprob: -8.051813125610352
    8. '<|end|>' → logprob: -8.301813125610352
    9. '       ' → logprob: -8.426813125610352
    10. '                   ' → logprob: -8.801813125610352

Token 105: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0318194143474102
    2. '           ' → logprob: -3.7818193435668945
    3. ' if' → logprob: -5.4068193435668945
    4. '               ' → logprob: -5.6568193435668945
    5. '   ' → logprob: -8.281819343566895
    6. '       ' → logprob: -8.406819343566895
    7. '	if' → logprob: -9.906819343566895
    8. '```' → logprob: -10.906819343566895
    9. '                   ' → logprob: -12.406819343566895
    10. 'print' → logprob: -12.906819343566895

Token 106: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.5759748220443726
    2. ' stack' → logprob: -0.8259748220443726
    3. '(stack' → logprob: -10.950974464416504
    4. '	stack' → logprob: -10.950974464416504
    5. '.stack' → logprob: -15.575974464416504
    6. 'stackoverflow' → logprob: -16.82597541809082
    7. '   ' → logprob: -17.32597541809082
    8. ' ' → logprob: -17.32597541809082
    9. '_stack' → logprob: -17.95097541809082
    10. 'graph' → logprob: -18.32597541809082

Token 107: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4855663721391466e-05
    2. '[' → logprob: -11.750015258789062
    3. '```' → logprob: -12.250015258789062
    4. '[
' → logprob: -14.125015258789062
    5. '[I' → logprob: -14.875015258789062
    6. ' [' → logprob: -15.375015258789062
    7. '[s' → logprob: -15.625015258789062
    8. '[index' → logprob: -16.375015258789062
    9. '[idx' → logprob: -16.500015258789062
    10. '`' → logprob: -16.500015258789062

Token 108: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1178308054804802
    2. '==' → logprob: -2.242830753326416
    3. ']==' → logprob: -5.867830753326416
    4. ')' → logprob: -6.992830753326416
    5. ']' → logprob: -7.117830753326416
    6. ')==' → logprob: -7.867830753326416
    7. '=' → logprob: -10.617831230163574
    8. ' =' → logprob: -12.242831230163574
    9. '[' → logprob: -12.367831230163574
    10. ' ' → logprob: -12.367831230163574

Token 109: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17986652255058289
    2. ' ==' → logprob: -1.8048665523529053
    3. '=' → logprob: -10.054866790771484
    4. ']==' → logprob: -10.054866790771484
    5. ')==' → logprob: -10.679866790771484
    6. '==
' → logprob: -12.179866790771484
    7. ')' → logprob: -12.804866790771484
    8. '[' → logprob: -13.804866790771484
    9. '===' → logprob: -13.804866790771484
    10. '()==' → logprob: -14.054866790771484

Token 110: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005233763717114925
    2. ' v' → logprob: -5.2552337646484375
    3. ')v' → logprob: -18.755233764648438
    4. '	v' → logprob: -19.005233764648438
    5. '[v' → logprob: -19.005233764648438
    6. 'vq' → logprob: -20.255233764648438
    7. '   ' → logprob: -21.005233764648438
    8. '$v' → logprob: -21.380233764648438
    9. '<v' → logprob: -21.755233764648438
    10. '(v' → logprob: -22.130233764648438

Token 111: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3276621699333191
    2. ':' → logprob: -1.3276622295379639
    3. '                   ' → logprob: -4.452661991119385
    4. '               ' → logprob: -6.327661991119385
    5. '           ' → logprob: -7.577661991119385
    6. '):
' → logprob: -9.077662467956543
    7. '                       ' → logprob: -9.702662467956543
    8. ' :
' → logprob: -10.327662467956543
    9. ':

' → logprob: -10.452662467956543
    10. ':
' → logprob: -10.577662467956543

Token 112: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006312219891697168
    2. '               ' → logprob: -6.256312370300293
    3. ' break' → logprob: -6.256312370300293
    4. 'break' → logprob: -6.506312370300293
    5. '           ' → logprob: -7.506312370300293
    6. '                    
' → logprob: -9.006312370300293
    7. '
' → logprob: -9.381312370300293
    8. '                       ' → logprob: -9.631312370300293
    9. '   ' → logprob: -10.756312370300293
    10. '	break' → logprob: -10.881312370300293

Token 113: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.20444734394550323
    2. ' break' → logprob: -1.9544473886489868
    3. '                   ' → logprob: -3.2044472694396973
    4. '               ' → logprob: -6.579447269439697
    5. '                       ' → logprob: -7.204447269439697
    6. '	break' → logprob: -8.454447746276855
    7. '           ' → logprob: -8.454447746276855
    8. '       ' → logprob: -9.704447746276855
    9. '   ' → logprob: -10.829447746276855
    10. '
' → logprob: -11.829447746276855

Token 114: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35732653737068176
    2. '           ' → logprob: -1.6073265075683594
    3. '       ' → logprob: -2.4823265075683594
    4. '   ' → logprob: -6.107326507568359
    5. '            
' → logprob: -6.232326507568359
    6. '    
' → logprob: -6.482326507568359
    7. '               ' → logprob: -6.732326507568359
    8. '```' → logprob: -6.732326507568359
    9. '        
' → logprob: -6.857326507568359
    10. ')' → logprob: -6.857326507568359

Token 115: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44004255533218384
    2. '       ' → logprob: -1.190042495727539
    3. ')' → logprob: -4.190042495727539
    4. '<|end|>' → logprob: -4.190042495727539
    5. '           ' → logprob: -5.440042495727539
    6. '   ' → logprob: -5.815042495727539
    7. '    
' → logprob: -6.315042495727539
    8. '        
' → logprob: -6.315042495727539
    9. '\n' → logprob: -6.690042495727539
    10. '' → logprob: -6.815042495727539

Token 116: ' non' (ID: 2893)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28702378273010254
    2. '           ' → logprob: -2.1620237827301025
    3. 'idx' → logprob: -2.7870237827301025
    4. '   ' → logprob: -3.2870237827301025
    5. 'return' → logprob: -4.662023544311523
    6. ')' → logprob: -4.787023544311523
    7. ' for' → logprob: -5.537023544311523
    8. ' idx' → logprob: -6.162023544311523
    9. ' return' → logprob: -6.287023544311523
    10. 'for' → logprob: -6.287023544311523

Token 117: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -3.292907877039397e-06
    2. 'l' → logprob: -13.00000286102295
    3. ' local' → logprob: -14.25000286102295
    4. 'locals' → logprob: -15.87500286102295
    5. 'lo' → logprob: -16.250003814697266
    6. 'loc' → logprob: -16.500003814697266
    7. 'ocal' → logprob: -18.875003814697266
    8. '	local' → logprob: -19.000003814697266
    9. '   ' → logprob: -19.125003814697266
    10. 'o' → logprob: -19.750003814697266

Token 118: ' cycle' (ID: 15839)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.31129053235054016
    2. ' idx' → logprob: -1.8112905025482178
    3. 'ans' → logprob: -3.4362905025482178
    4. 'cycle' → logprob: -3.9362905025482178
    5. 'answer' → logprob: -4.436290740966797
    6. ' cycle' → logprob: -4.561290740966797
    7. 'result' → logprob: -4.686290740966797
    8. 'count' → logprob: -5.061290740966797
    9. ' ans' → logprob: -5.436290740966797
    10. ' answer' → logprob: -5.936290740966797

Token 119: '_count' (ID: 7536)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.46331164240837097
    2. '_size' → logprob: -1.5883116722106934
    3. '_length' → logprob: -2.0883116722106934
    4. '_count' → logprob: -3.4633116722106934
    5. '_len' → logprob: -4.838311672210693
    6. 'size' → logprob: -6.963311672210693
    7. 's' → logprob: -7.463311672210693
    8. '_sizes' → logprob: -7.838311672210693
    9. '_' → logprob: -7.963311672210693
    10. '_start' → logprob: -8.588311195373535

Token 120: '
' (ID: 198)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.15884380042552948
    2. '+=' → logprob: -2.158843755722046
    3. '
' → logprob: -4.908843994140625
    4. '[' → logprob: -5.158843994140625
    5. '<|end|>' → logprob: -5.658843994140625
    6. ' ' → logprob: -6.158843994140625
    7. '           ' → logprob: -6.158843994140625
    8. '+' → logprob: -6.408843994140625
    9. '    ' → logprob: -6.533843994140625
    10. '            ' → logprob: -6.658843994140625

Token 121: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006842299364507198
    2. '
' → logprob: -5.631842136383057
    3. '<|end|>' → logprob: -6.381842136383057
    4. ' +=' → logprob: -7.506842136383057
    5. '            
' → logprob: -8.256842613220215
    6. '<|end|>' → logprob: -8.506842613220215
    7. ' =' → logprob: -8.881842613220215
    8. '            ' → logprob: -9.131842613220215
    9. '               ' → logprob: -9.756842613220215
    10. '+' → logprob: -10.381842613220215

Token 122: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' (adapté à ' cycle') → logprob: -0.16465866565704346
    2. ' cycle' → logprob: -1.9146586656570435
    3. '       ' → logprob: -6.164658546447754
    4. '           ' → logprob: -6.164658546447754
    5. '   ' → logprob: -8.539658546447754
    6. '_cycle' → logprob: -11.914658546447754
    7. ' ' → logprob: -12.414658546447754
    8. '
' → logprob: -13.289658546447754
    9. 'count' → logprob: -13.414658546447754
    10. '               ' → logprob: -13.664658546447754

Token 123: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -13.875000953674316
    3. '_c' → logprob: -15.375000953674316
    4. '_co' → logprob: -17.125001907348633
    5. '_cont' → logprob: -18.000001907348633
    6. 'count' → logprob: -18.625001907348633
    7. '_counter' → logprob: -18.875001907348633
    8. ' _' → logprob: -19.000001907348633
    9. '_counts' → logprob: -19.125001907348633
    10. '_code' → logprob: -19.500001907348633

Token 124: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2015325278043747
    2. '+=' → logprob: -1.7015324831008911
    3. '+' → logprob: -9.076532363891602
    4. '=' → logprob: -12.576532363891602
    5. ' +' → logprob: -14.701532363891602
    6. ']+=' → logprob: -14.701532363891602
    7. ' =' → logprob: -14.826532363891602
    8. '+=(' → logprob: -16.0765323638916
    9. '+='' → logprob: -16.5765323638916
    10. '+="' → logprob: -16.8265323638916

Token 125: ' ' (ID: 220)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.16024789214134216
    2. ' cycle' → logprob: -1.9102479219436646
    3. '1' → logprob: -11.160247802734375
    4. 'cycl' → logprob: -12.535247802734375
    5. ' ' → logprob: -13.160247802734375
    6. 'cy' → logprob: -13.535247802734375
    7. 'cycles' → logprob: -14.410247802734375
    8. 'c' → logprob: -14.660247802734375
    9. '   ' → logprob: -15.035247802734375
    10. '-cycle' → logprob: -15.035247802734375

Token 126: '1' (ID: 16)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.002032611286267638
    2. ' cycle' → logprob: -6.25203275680542
    3. '1' → logprob: -9.252032279968262
    4. 'cy' → logprob: -13.002032279968262
    5. 'cycl' → logprob: -13.002032279968262
    6. ' ' → logprob: -13.127032279968262
    7. '   ' → logprob: -14.752032279968262
    8. 'cycles' → logprob: -15.127032279968262
    9. 'c' → logprob: -15.502032279968262
    10. '-cycle' → logprob: -15.502032279968262

Token 127: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5131762027740479
    2. '
' → logprob: -1.0131762027740479
    3. '           ' → logprob: -4.138175964355469
    4. '<|end|>' → logprob: -4.138175964355469
    5. '   ' → logprob: -6.513175964355469
    6. 'return' → logprob: -6.638175964355469
    7. '    
' → logprob: -7.763175964355469
    8. '        
' → logprob: -7.888175964355469
    9. 'newline' → logprob: -8.013175964355469
    10. '<|end|>' → logprob: -8.013175964355469

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7172579765319824
    2. '
' → logprob: -0.9672579765319824
    3. '           ' → logprob: -2.4672579765319824
    4. '<|end|>' → logprob: -3.3422579765319824
    5. '   ' → logprob: -5.967257976531982
    6. '<|end|>' → logprob: -6.467257976531982
    7. '    
' → logprob: -6.592257976531982
    8. 'return' → logprob: -6.717257976531982
    9. '        
' → logprob: -6.842257976531982
    10. '```' → logprob: -7.467257976531982

Token 129: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.876241147518158
    2. 'on' (adapté à ' on') → logprob: -1.1262412071228027
    3. ' on' → logprob: -2.1262412071228027
    4. '   ' → logprob: -2.2512412071228027
    5. '
' → logprob: -4.876241207122803
    6. 'stack' → logprob: -5.376241207122803
    7. '           ' → logprob: -5.501241207122803
    8. 'else' → logprob: -5.501241207122803
    9. '    
' → logprob: -5.626241207122803
    10. 'for' → logprob: -5.626241207122803

Token 130: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -12.625003814697266
    3. '_st' → logprob: -16.000003814697266
    4. '_s' → logprob: -16.000003814697266
    5. 'stack' → logprob: -16.875003814697266
    6. ' _' → logprob: -16.875003814697266
    7. '_queue' → logprob: -18.250003814697266
    8. '_STACK' → logprob: -18.375003814697266
    9. '_
' → logprob: -19.125003814697266
    10. '_mask' → logprob: -19.250003814697266

Token 131: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -12.87500286102295
    3. '[v' → logprob: -15.37500286102295
    4. '[user' → logprob: -17.750003814697266
    5. '```' → logprob: -18.625003814697266
    6. 'u' → logprob: -18.875003814697266
    7. '[:]' → logprob: -18.875003814697266
    8. '[s' → logprob: -19.000003814697266
    9. '\[' → logprob: -19.250003814697266
    10. ' [' → logprob: -20.375003814697266

Token 132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00017076305812224746
    2. '[u' → logprob: -8.750170707702637
    3. ']=' → logprob: -11.375170707702637
    4. '[' → logprob: -14.625170707702637
    5. 'u' → logprob: -16.000171661376953
    6. ']
' → logprob: -16.250171661376953
    7. ' ]' → logprob: -16.750171661376953
    8. '=' → logprob: -17.125171661376953
    9. ']==' → logprob: -18.000171661376953
    10. '`]' → logprob: -18.500171661376953

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04349304735660553
    2. ' =' → logprob: -3.1684930324554443
    3. '=False' → logprob: -8.543493270874023
    4. '[' → logprob: -8.918493270874023
    5. ']' → logprob: -9.168493270874023
    6. '[u' → logprob: -10.043493270874023
    7. 'False' → logprob: -11.793493270874023
    8. ')' → logprob: -11.918493270874023
    9. ']=' → logprob: -14.043493270874023
    10. '=True' → logprob: -14.543493270874023

Token 134: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001584850688232109
    2. ' False' → logprob: -8.750158309936523
    3. '(False' → logprob: -19.125158309936523
    4. '   ' → logprob: -21.000158309936523
    5. 'F' → logprob: -21.250158309936523
    6. '=False' → logprob: -21.875158309936523
    7. '0' → logprob: -23.500158309936523
    8. '.False' → logprob: -23.875158309936523
    9. '_false' → logprob: -24.000158309936523
    10. 'True' → logprob: -24.500158309936523

Token 135: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.0034068014938384295
    2. 'idx' → logprob: -5.878407001495361
    3. '   ' → logprob: -7.878407001495361
    4. ' stack' → logprob: -8.878406524658203
    5. '	stack' → logprob: -9.753406524658203
    6. '       ' → logprob: -11.503406524658203
    7. 'index' → logprob: -12.128406524658203
    8. ' idx' → logprob: -13.253406524658203
    9. '<|end|>' → logprob: -13.503406524658203
    10. '.stack' → logprob: -13.878406524658203

Token 138: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0003407071635592729
    2. '.' → logprob: -8.000340461730957
    3. '.remove' → logprob: -12.875340461730957
    4. '.append' → logprob: -13.125340461730957
    5. 'pop' → logprob: -14.375340461730957
    6. ' .' → logprob: -16.125341415405273
    7. '.Pop' → logprob: -16.625341415405273
    8. '.p' → logprob: -18.125341415405273
    9. '	pop' → logprob: -19.000341415405273
    10. '_pop' → logprob: -19.375341415405273

Token 139: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00013464801304508
    2. '(' → logprob: -9.000134468078613
    3. '()
' → logprob: -11.625134468078613
    4. '()`' → logprob: -13.750134468078613
    5. '()

' → logprob: -14.750134468078613
    6. '()]' → logprob: -15.875134468078613
    7. '().' → logprob: -15.875134468078613
    8. '();' → logprob: -16.62513542175293
    9. '`()' → logprob: -16.62513542175293
    10. '())' → logprob: -16.62513542175293

Token 140: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: ' for' (ID: 395)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5734676718711853
    2. 'graph' → logprob: -1.57346773147583
    3. 'idx' → logprob: -1.94846773147583
    4. '   ' → logprob: -2.69846773147583
    5. 'visited' → logprob: -4.82346773147583
    6. '    
' → logprob: -5.32346773147583
    7. 'N' → logprob: -6.44846773147583
    8. ' n' → logprob: -6.69846773147583
    9. 'cycle' → logprob: -7.44846773147583
    10. 'for' (adapté à ' for') → logprob: -7.57346773147583

Token 142: ' line' (ID: 2543)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15179520845413208
    2. ' u' → logprob: -2.9017951488494873
    3. ' _' → logprob: -3.2767951488494873
    4. ' node' → logprob: -3.6517951488494873
    5. 'i' → logprob: -4.401795387268066
    6. ' v' → logprob: -5.401795387268066
    7. '_' → logprob: -6.526795387268066
    8. 'u' → logprob: -6.651795387268066
    9. ' n' → logprob: -6.901795387268066
    10. 'node' → logprob: -7.276795387268066

Token 143: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014587931334972382
    2. 'in' → logprob: -4.264587879180908
    3. 's' → logprob: -8.014588356018066
    4. ' ' → logprob: -10.889588356018066
    5. '_' → logprob: -11.264588356018066
    6. ' =' → logprob: -11.889588356018066
    7. '   ' → logprob: -12.139588356018066
    8. '[' → logprob: -12.139588356018066
    9. '=' → logprob: -12.264588356018066
    10. 'import' → logprob: -12.389588356018066

Token 144: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00863217655569315
    2. ' sys' → logprob: -4.758632183074951
    3. 'stdin' → logprob: -12.133631706237793
    4. 'open' → logprob: -12.883631706237793
    5. 'input' → logprob: -13.133631706237793
    6. 'import' → logprob: -13.383631706237793
    7. 'iter' → logprob: -13.383631706237793
    8. '```' → logprob: -13.508631706237793
    9. '=sys' → logprob: -14.008631706237793
    10. '(sys' → logprob: -14.133631706237793

Token 145: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0012979733292013407
    2. '.' → logprob: -7.626297950744629
    3. 'stdin' → logprob: -7.626297950744629
    4. '.readline' → logprob: -8.501297950744629
    5. '(stdin' → logprob: -9.501297950744629
    6. '().' → logprob: -11.376297950744629
    7. ' stdin' → logprob: -11.501297950744629
    8. '.readlines' → logprob: -11.876297950744629
    9. '.argv' → logprob: -12.376297950744629
    10. '.stdout' → logprob: -12.876297950744629

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009215504862368107
    2. '.strip' → logprob: -5.509215354919434
    3. '():' → logprob: -6.009215354919434
    4. '.readline' → logprob: -6.259215354919434
    5. ':
' → logprob: -8.009215354919434
    6. '   ' → logprob: -9.259215354919434
    7. '.rstrip' → logprob: -9.634215354919434
    8. ' :' → logprob: -9.759215354919434
    9. ' in' → logprob: -9.759215354919434
    10. 'strip' → logprob: -11.134215354919434

Token 147: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19237561523914337
    2. '   ' → logprob: -2.942375659942627
    3. ' n' → logprob: -3.067375659942627
    4. ' ' → logprob: -3.942375659942627
    5. '<|end|>' → logprob: -4.192375659942627
    6. '        
' → logprob: -4.817375659942627
    7. ',' → logprob: -5.317375659942627
    8. ' strip' → logprob: -5.442375659942627
    9. '    ' → logprob: -5.567375659942627
    10. '.strip' → logprob: -5.817375659942627

Token 148: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16751617193222046
    2. ' n' → logprob: -1.9175162315368652
    3. '   ' → logprob: -5.542516231536865
    4. 't' → logprob: -6.917516231536865
    5. 'N' (adapté à ' N') → logprob: -7.042516231536865
    6. ' t' → logprob: -7.417516231536865
    7. 'T' → logprob: -8.542515754699707
    8. ' T' → logprob: -8.792515754699707
    9. '       ' → logprob: -9.667515754699707
    10. '```' → logprob: -9.792515754699707

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11289385706186295
    2. '=' → logprob: -2.23789381980896
    3. ',' → logprob: -9.987894058227539
    4. '=int' → logprob: -11.112894058227539
    5. ' ' → logprob: -11.737894058227539
    6. ')' → logprob: -14.362894058227539
    7. ' =
' → logprob: -14.487894058227539
    8. ' ,' → logprob: -14.862894058227539
    9. ' ' → logprob: -15.487894058227539
    10. '=line' → logprob: -15.612894058227539

Token 150: ' line' (ID: 2543)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02324605919420719
    2. ' int' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.648245811462402
    4. '[int' → logprob: -15.648245811462402
    5. '=int' → logprob: -15.898245811462402
    6. 'len' → logprob: -15.898245811462402
    7. '<int' → logprob: -17.14824676513672
    8. '(int' → logprob: -17.39824676513672
    9. '   ' → logprob: -17.64824676513672
    10. '  ' → logprob: -18.02324676513672

Token 151: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.05461514741182327
    2. '.rstrip' → logprob: -3.0546152591705322
    3. '.' → logprob: -5.679615020751953
    4. '.split' → logprob: -6.554615020751953
    5. '.readline' → logprob: -7.054615020751953
    6. 'strip' → logprob: -9.804615020751953
    7. 'rstrip' → logprob: -10.054615020751953
    8. ')' → logprob: -10.054615020751953
    9. '.index' → logprob: -10.304615020751953
    10. '<|end|>' → logprob: -10.554615020751953

Token 152: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5238733291625977
    2. '().' → logprob: -0.8988733291625977
    3. '(' → logprob: -8.648873329162598
    4. '()
' → logprob: -9.398873329162598
    5. '().'' → logprob: -9.398873329162598
    6. '()==' → logprob: -9.523873329162598
    7. '.' → logprob: -9.648873329162598
    8. '('' → logprob: -9.648873329162598
    9. '()='' → logprob: -10.023873329162598
    10. '();' → logprob: -11.023873329162598

Token 153: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3239094614982605
    2. ' if' → logprob: -1.9489095211029053
    3. '<|end|>' → logprob: -2.9489095211029053
    4. '<|end|>' → logprob: -4.073909282684326
    5. '
' → logprob: -4.573909282684326
    6. ' and' → logprob: -4.823909282684326
    7. '   ' → logprob: -4.823909282684326
    8. ':' → logprob: -5.073909282684326
    9. 'and' → logprob: -5.073909282684326
    10. ')' → logprob: -5.448909282684326

Token 154: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3859398663043976
    2. 'if' (adapté à ' if') → logprob: -1.2609398365020752
    3. '<|end|>' → logprob: -3.885939836502075
    4. '
' → logprob: -4.635940074920654
    5. '<|end|>' → logprob: -5.885940074920654
    6. ' ' → logprob: -6.385940074920654
    7. ' 
' → logprob: -7.135940074920654
    8. ';if' → logprob: -8.385939598083496
    9. ' and' → logprob: -8.510939598083496
    10. ')' → logprob: -8.760939598083496

Token 155: ' N' (ID: 478)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0009448148775845766
    2. ' N' → logprob: -7.3759446144104
    3. 'not' → logprob: -8.250945091247559
    4. 'N' → logprob: -10.000945091247559
    5. ' ' → logprob: -11.375945091247559
    6. ' ' → logprob: -16.000944137573242
    7. '   ' → logprob: -16.750944137573242
    8. '```' → logprob: -17.625944137573242
    9. '.' → logprob: -17.750944137573242
    10. '!' → logprob: -18.125944137573242

Token 156: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16115456819534302
    2. '==' → logprob: -1.9111545085906982
    3. '=' → logprob: -7.786154747009277
    4. ' =' → logprob: -8.536154747009277
    5. '.is' → logprob: -9.911154747009277
    6. ' ' → logprob: -10.036154747009277
    7. ')' → logprob: -10.286154747009277
    8. 'is' → logprob: -10.536154747009277
    9. ':' → logprob: -10.786154747009277
    10. 'and' → logprob: -10.911154747009277

Token 157: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.33411523699760437
    2. '""' → logprob: -1.4591152667999268
    3. ''' → logprob: -3.7091152667999268
    4. '"' → logprob: -3.9591152667999268
    5. '"":' → logprob: -4.834115028381348
    6. ' ''' → logprob: -11.584115028381348
    7. ':' → logprob: -11.709115028381348
    8. ' ""' → logprob: -12.459115028381348
    9. ' '' → logprob: -12.459115028381348
    10. ''q' → logprob: -12.709115028381348

Token 158: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5893890261650085
    2. '':' → logprob: -0.9643890261650085
    3. '''' → logprob: -2.8393890857696533
    4. '"":' → logprob: -6.089388847351074
    5. '':
' → logprob: -6.339388847351074
    6. ' '':
' → logprob: -7.839388847351074
    7. '0' → logprob: -7.964388847351074
    8. '"' → logprob: -8.714388847351074
    9. ''):' → logprob: -8.714388847351074
    10. '""' → logprob: -8.964388847351074

Token 159: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.4680575132369995
    2. ':' → logprob: -1.3430575132369995
    3. '':
' → logprob: -2.468057632446289
    4. ':
' → logprob: -3.593057632446289
    5. ''' → logprob: -8.968057632446289
    6. ':return' → logprob: -8.968057632446289
    7. '':
' → logprob: -9.593057632446289
    8. '):
' → logprob: -10.718057632446289
    9. '):' → logprob: -10.843057632446289
    10. '   ' → logprob: -10.968057632446289

Token 160: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020984072238206863
    2. '       ' → logprob: -3.895984172821045
    3. '   ' → logprob: -8.645983695983887
    4. ' break' → logprob: -9.020983695983887
    5. ':' → logprob: -9.895983695983887
    6. ':
' → logprob: -11.270983695983887
    7. '		' → logprob: -11.520983695983887
    8. '<|end|>' → logprob: -11.645983695983887
    9. '	       ' → logprob: -11.770983695983887
    10. '	break' → logprob: -12.020983695983887

Token 161: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8801153898239136
    2. ' break' → logprob: -1.0051153898239136
    3. 'break' (adapté à ' break') → logprob: -1.6301153898239136
    4. '       ' → logprob: -4.005115509033203
    5. '               ' → logprob: -6.130115509033203
    6. 'return' → logprob: -7.005115509033203
    7. '	break' → logprob: -7.255115509033203
    8. '
' → logprob: -7.505115509033203
    9. ' return' → logprob: -8.130115509033203
    10. '```' → logprob: -8.255115509033203

Token 162: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1510593593120575
    2. '       ' → logprob: -2.77605938911438
    3. '<|end|>' → logprob: -2.90105938911438
    4. '        
' → logprob: -4.401059150695801
    5. '    
' → logprob: -5.526059150695801
    6. ',' → logprob: -6.776059150695801
    7. 'N' → logprob: -6.901059150695801
    8. ' N' → logprob: -6.901059150695801
    9. '<|end|>' → logprob: -7.026059150695801
    10. '   ' → logprob: -7.526059150695801

Token 163: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15469394624233246
    2. '<|end|>' → logprob: -2.154693841934204
    3. '       ' → logprob: -4.529694080352783
    4. '    
' → logprob: -5.404694080352783
    5. '        
' → logprob: -5.654694080352783
    6. '  
' → logprob: -6.279694080352783
    7. '<|end|>' → logprob: -6.529694080352783
    8. '   ' → logprob: -6.654694080352783
    9. '\n' → logprob: -6.904694080352783
    10. ' 
' → logprob: -7.029694080352783

Token 164: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.08147680014371872
    2. ' N' → logprob: -2.5814766883850098
    3. 'n' → logprob: -6.58147668838501
    4. ' =' → logprob: -7.20647668838501
    5. ' n' → logprob: -8.456477165222168
    6. '=' → logprob: -8.706477165222168
    7. '       ' → logprob: -10.581477165222168
    8. '        
' → logprob: -11.206477165222168
    9. '=N' → logprob: -11.331477165222168
    10. ' 
' → logprob: -11.956477165222168

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327879428863525
    2. '=' → logprob: -1.3132787942886353
    3. '=int' → logprob: -11.063279151916504
    4. ',' → logprob: -15.063279151916504
    5. ' ' → logprob: -15.188279151916504
    6. ' =
' → logprob: -15.563279151916504
    7. '=N' → logprob: -15.813279151916504
    8. ')' → logprob: -16.188278198242188
    9. '＝' → logprob: -16.438278198242188
    10. '=
' → logprob: -16.438278198242188

Token 166: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12692810595035553
    2. ' int' → logprob: -2.1269280910491943
    3. '[int' → logprob: -20.501928329467773
    4. '(int' → logprob: -21.001928329467773
    5. '=int' → logprob: -21.251928329467773
    6. ' ' → logprob: -21.501928329467773
    7. '<int' → logprob: -21.751928329467773
    8. '	int' → logprob: -23.001928329467773
    9. ':int' → logprob: -23.126928329467773
    10. ',int' → logprob: -24.876928329467773

Token 167: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.000158842682139948
    2. '(' → logprob: -8.75015926361084
    3. 'N' → logprob: -16.125158309936523
    4. '(
' → logprob: -16.250158309936523
    5. '()' → logprob: -16.750158309936523
    6. '((' → logprob: -18.750158309936523
    7. '(line' → logprob: -19.125158309936523
    8. ' (' → logprob: -19.125158309936523
    9. '(n' → logprob: -19.250158309936523
    10. '(S' → logprob: -19.500158309936523

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038104258477687836
    2. ')
' → logprob: -3.288104295730591
    3. ' )' → logprob: -10.163104057312012
    4. '*' → logprob: -12.163104057312012
    5. ')
' → logprob: -12.788104057312012
    6. ' )
' → logprob: -12.913104057312012
    7. '       ' → logprob: -13.288104057312012
    8. ')`' → logprob: -13.288104057312012
    9. '[' → logprob: -13.413104057312012
    10. ')

' → logprob: -13.538104057312012

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.528603196144104
    2. 'graph' → logprob: -1.028603196144104
    3. ' graph' → logprob: -3.0286030769348145
    4. '
' → logprob: -6.2786030769348145
    5. '	graph' → logprob: -6.2786030769348145
    6. '        
' → logprob: -8.403603553771973
    7. '   ' → logprob: -8.528603553771973
    8. '(graph' → logprob: -9.028603553771973
    9. '_graph' → logprob: -9.903603553771973
    10. ',' → logprob: -9.903603553771973

Token 170: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.00464882655069232
    2. 'edges' → logprob: -6.629648685455322
    3. ' graph' → logprob: -7.379648685455322
    4. 'data' → logprob: -7.629648685455322
    5. '       ' → logprob: -8.25464916229248
    6. 'arr' → logprob: -8.37964916229248
    7. 'for' → logprob: -8.37964916229248
    8. 'visited' → logprob: -8.37964916229248
    9. 'line' → logprob: -8.75464916229248
    10. 'idx' → logprob: -8.87964916229248

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2811955213546753
    2. '=' → logprob: -1.4061955213546753
    3. '[' → logprob: -10.156195640563965
    4. '<|end|>' → logprob: -13.656195640563965
    5. ']' → logprob: -13.781195640563965
    6. '[:]' → logprob: -14.281195640563965
    7. ' =[' → logprob: -14.406195640563965
    8. '=[]' → logprob: -14.531195640563965
    9. ',' → logprob: -14.531195640563965
    10. ')' → logprob: -14.656195640563965

Token 172: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00987673457711935
    2. ' [' → logprob: -5.259876728057861
    3. '[]' → logprob: -6.384876728057861
    4. '[list' → logprob: -6.884876728057861
    5. '[-' → logprob: -7.384876728057861
    6. '[u' → logprob: -7.759876728057861
    7. '{}' → logprob: -8.50987720489502
    8. '[i' → logprob: -8.88487720489502
    9. '[n' → logprob: -9.00987720489502
    10. '[int' → logprob: -9.00987720489502

Token 173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017054134514182806
    2. '-' → logprob: -6.501705646514893
    3. 'int' → logprob: -8.751705169677734
    4. ' ' → logprob: -10.501705169677734
    5. 'None' → logprob: -11.751705169677734
    6. ' -' → logprob: -12.126705169677734
    7. '   ' → logprob: -13.876705169677734
    8. ']' → logprob: -14.251705169677734
    9. ' int' → logprob: -14.251705169677734
    10. 'i' → logprob: -14.876705169677734

Token 174: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018282802775502205
    2. ']*(' → logprob: -4.143282890319824
    3. ' for' → logprob: -6.393282890319824
    4. ']+' → logprob: -7.893282890319824
    5. 'for' → logprob: -9.143282890319824
    6. ' ]' → logprob: -9.893282890319824
    7. ']*' → logprob: -10.143282890319824
    8. ',' → logprob: -13.268282890319824
    9. '0' → logprob: -14.768282890319824
    10. '
' → logprob: -15.393282890319824

Token 175: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002526376338209957
    2. ' N' → logprob: -8.375252723693848
    3. '(N' → logprob: -10.750252723693848
    4. ' ' → logprob: -15.375252723693848
    5. '   ' → logprob: -15.625252723693848
    6. '(' → logprob: -16.75025177001953
    7. '2' → logprob: -17.12525177001953
    8. '[N' → logprob: -17.12525177001953
    9. ' (' → logprob: -17.62525177001953
    10. '	N' → logprob: -18.00025177001953

Token 176: '*N' (ID: 107360)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0631573423743248
    2. ')' → logprob: -2.813157320022583
    3. ' +' → logprob: -6.813157558441162
    4. ')
' → logprob: -10.313157081604004
    5. ' )' → logprob: -10.688157081604004
    6. '+)' → logprob: -11.563157081604004
    7. 'N' → logprob: -11.813157081604004
    8. '+
' → logprob: -12.313157081604004
    9. ' N' → logprob: -13.313157081604004
    10. '1' → logprob: -13.313157081604004

Token 177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018412714824080467
    2. '+' → logprob: -4.0184125900268555
    3. '<|end|>' → logprob: -9.143412590026855
    4. ')
' → logprob: -9.643412590026855
    5. ' +' → logprob: -9.768412590026855
    6. ' )' → logprob: -11.518412590026855
    7. '+)' → logprob: -11.643412590026855
    8. '*' → logprob: -12.018412590026855
    9. '<|end|>' → logprob: -13.518412590026855
    10. ')+' → logprob: -13.768412590026855

Token 178: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6145427227020264
    2. ' for' → logprob: -0.8645427227020264
    3. '<|end|>' → logprob: -3.8645427227020264
    4. 'idx' → logprob: -4.9895429611206055
    5. 'index' → logprob: -5.6145429611206055
    6. 'i' → logprob: -6.4895429611206055
    7. ' idx' → logprob: -6.6145429611206055
    8. 'continue' → logprob: -7.6145429611206055
    9. '   ' → logprob: -7.8645429611206055
    10. '       ' → logprob: -7.8645429611206055

Token 180: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20275741815567017
    2. 'i' → logprob: -1.7027573585510254
    3. ' _' → logprob: -6.827757358551025
    4. '_' → logprob: -8.452757835388184
    5. '_i' → logprob: -10.202757835388184
    6. ' idx' → logprob: -12.202757835388184
    7. '	i' → logprob: -13.702757835388184
    8. 'idx' → logprob: -14.202757835388184
    9. ' ' → logprob: -14.327757835388184
    10. 'row' → logprob: -14.577757835388184

Token 181: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018235279247164726
    2. 'in' → logprob: -4.018235206604004
    3. 'n' → logprob: -9.893235206604004
    4. ' ' → logprob: -11.143235206604004
    5. '_' → logprob: -11.643235206604004
    6. 'range' → logprob: -12.643235206604004
    7. '  ' → logprob: -13.518235206604004
    8. ',' → logprob: -13.643235206604004
    9. '(' → logprob: -13.893235206604004
    10. '	in' → logprob: -14.143235206604004

Token 182: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048289015889168
    2. ' range' → logprob: -4.511048316955566
    3. '	range' → logprob: -15.636048316955566
    4. ' ' → logprob: -15.761048316955566
    5. 'rang' → logprob: -16.51104736328125
    6. '(range' → logprob: -17.38604736328125
    7. '  ' → logprob: -17.38604736328125
    8. 'r' → logprob: -17.38604736328125
    9. 'ran' → logprob: -17.63604736328125
    10. 'ra' → logprob: -18.63604736328125

Token 183: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0009003812447190285
    2. '(' → logprob: -7.1259002685546875
    3. ' (' → logprob: -9.875900268554688
    4. 'N' → logprob: -10.250900268554688
    5. ' N' → logprob: -12.500900268554688
    6. '(n' → logprob: -12.875900268554688
    7. '<|end|>' → logprob: -13.500900268554688
    8. ' ' → logprob: -15.125900268554688
    9. '<|end|>' → logprob: -15.125900268554688
    10. '((' → logprob: -15.750900268554688

Token 184: '):
' (ID: 1883)
  Prédit: '*N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.47958314418792725
    2. '*' → logprob: -1.3545831441879272
    3. '):' → logprob: -2.104583263397217
    4. ' *' → logprob: -7.479583263397217
    5. '**' → logprob: -8.729582786560059
    6. ')' → logprob: -9.229582786560059
    7. '):
' → logprob: -9.229582786560059
    8. '*A' → logprob: -10.729582786560059
    9. ' ):' → logprob: -11.229582786560059
    10. '*M' → logprob: -11.604582786560059

Token 185: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6275767683982849
    2. ' for' → logprob: -0.8775767683982849
    3. '   ' → logprob: -4.00257682800293
    4. '       ' → logprob: -4.87757682800293
    5. '<|end|>' → logprob: -5.12757682800293
    6. ' line' → logprob: -5.25257682800293
    7. 'for' → logprob: -5.37757682800293
    8. ' ' → logprob: -7.00257682800293
    9. ' tokens' → logprob: -7.37757682800293
    10. ',' → logprob: -7.37757682800293

Token 186: ' data' (ID: 1238)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.4501560926437378
    2. 'graph' → logprob: -1.5751560926437378
    3. ' line' → logprob: -1.5751560926437378
    4. ' graph' → logprob: -1.8251560926437378
    5. 'row' → logprob: -2.8251562118530273
    6. ' row' → logprob: -2.9501562118530273
    7. 'for' → logprob: -4.325156211853027
    8. ' for' → logprob: -4.575156211853027
    9. 'data' (adapté à ' data') → logprob: -4.700156211853027
    10. 'arr' → logprob: -5.075156211853027

Token 187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.69322270154953
    2. ' =' → logprob: -0.69322270154953
    3. '=line' → logprob: -10.818222999572754
    4. '.extend' → logprob: -11.068222999572754
    5. ' +=' → logprob: -11.568222999572754
    6. '+=' → logprob: -12.068222999572754
    7. 'line' → logprob: -12.693222999572754
    8. '=input' → logprob: -12.693222999572754
    9. '   ' → logprob: -12.818222999572754
    10. '.=' → logprob: -13.193222999572754

Token 188: ' sys' (ID: 12228)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.018160827457904816
    2. ' list' → logprob: -4.018160820007324
    3. 'input' → logprob: -11.518160820007324
    4. '[' → logprob: -14.393160820007324
    5. 'sys' → logprob: -15.643160820007324
    6. ' input' → logprob: -16.39316177368164
    7. 'line' → logprob: -16.76816177368164
    8. '[list' → logprob: -16.76816177368164
    9. ' [' → logprob: -17.51816177368164
    10. '	list' → logprob: -17.64316177368164

Token 189: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00018887832993641496
    2. 'stdin' → logprob: -8.875188827514648
    3. '.stdout' → logprob: -10.375188827514648
    4. '.argv' → logprob: -11.125188827514648
    5. '.readline' → logprob: -13.625188827514648
    6. '.stderr' → logprob: -14.000188827514648
    7. '.' → logprob: -14.375188827514648
    8. 'in' → logprob: -16.50018882751465
    9. 's' → logprob: -16.75018882751465
    10. '(stdin' → logprob: -16.87518882751465

Token 190: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.1472419600977446e-06
    2. '.' → logprob: -13.750000953674316
    3. '().' → logprob: -16.875001907348633
    4. '.readlines' → logprob: -17.750001907348633
    5. ' readline' → logprob: -18.875001907348633
    6. '.next' → logprob: -19.250001907348633
    7. '.read' → logprob: -19.625001907348633
    8. '.rstrip' → logprob: -20.000001907348633
    9. '.stdin' → logprob: -20.375001907348633
    10. '.randint' → logprob: -20.750001907348633

Token 191: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011755822924897075
    2. '()' → logprob: -6.751175403594971
    3. '()
' → logprob: -13.126175880432129
    4. ' ().' → logprob: -13.376175880432129
    5. '(' → logprob: -14.126175880432129
    6. '()).' → logprob: -15.376175880432129
    7. '()[' → logprob: -15.501175880432129
    8. '())' → logprob: -16.126174926757812
    9. '.strip' → logprob: -16.501174926757812
    10. ' ()' → logprob: -16.626174926757812

Token 192: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.02984420768916607
    2. 'split' → logprob: -3.529844284057617
    3. 'rstrip' → logprob: -9.279844284057617
    4. ' strip' → logprob: -15.029844284057617
    5. ' split' → logprob: -15.779844284057617
    6. 'str' → logprob: -18.529844284057617
    7. '.strip' → logprob: -19.529844284057617
    8. 'spl' → logprob: -19.904844284057617
    9. '(strip' → logprob: -20.154844284057617
    10. 'stripe' → logprob: -20.154844284057617

Token 193: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014173968695104122
    2. '()' → logprob: -4.264173984527588
    3. '()
' → logprob: -13.01417350769043
    4. '().'' → logprob: -13.13917350769043
    5. '()='' → logprob: -14.01417350769043
    6. '(' → logprob: -14.63917350769043
    7. '()]' → logprob: -14.63917350769043
    8. '()==' → logprob: -14.76417350769043
    9. '())' → logprob: -14.88917350769043
    10. 'split' → logprob: -14.88917350769043

Token 194: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. ' split' → logprob: -13.750000953674316
    3. 'spl' → logprob: -16.125001907348633
    4. '(split' → logprob: -18.125001907348633
    5. 'rstrip' → logprob: -18.250001907348633
    6. ' ' → logprob: -20.125001907348633
    7. '.split' → logprob: -20.500001907348633
    8. 'plit' → logprob: -21.125001907348633
    9. 'rs' → logprob: -21.500001907348633
    10. 's' → logprob: -21.500001907348633

Token 195: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003570343542378396
    2. '(' → logprob: -8.500356674194336
    3. '()
' → logprob: -9.875356674194336
    4. '('' → logprob: -10.250356674194336
    5. '()]' → logprob: -10.750356674194336
    6. '<|end|>' → logprob: -10.875356674194336
    7. '())' → logprob: -12.125356674194336
    8. '()[' → logprob: -12.500356674194336
    9. ' ()' → logprob: -12.750356674194336
    10. '(),' → logprob: -13.125356674194336

Token 196: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5106556415557861
    2. '           ' → logprob: -1.0106556415557861
    3. '<|end|>' → logprob: -3.885655641555786
    4. ' for' → logprob: -4.510655403137207
    5. 'for' → logprob: -7.010655403137207
    6. '<|end|>' → logprob: -7.260655403137207
    7. '   ' → logprob: -7.385655403137207
    8. '	       ' → logprob: -8.010655403137207
    9. '	   ' → logprob: -8.135655403137207
    10. '	' → logprob: -8.260655403137207

Token 197: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.35541754961013794
    2. ' for' → logprob: -1.2304174900054932
    3. '       ' → logprob: -5.105417728424072
    4. '           ' → logprob: -7.855417728424072
    5. '   ' → logprob: -8.730417251586914
    6. 'graph' → logprob: -8.855417251586914
    7. 'data' → logprob: -9.230417251586914
    8. ' data' → logprob: -10.355417251586914
    9. ' graph' → logprob: -10.355417251586914
    10. '	for' → logprob: -10.980417251586914

Token 198: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.1602400690317154
    2. 'j' → logprob: -1.9102400541305542
    3. ' range' → logprob: -11.660240173339844
    4. ' ' → logprob: -12.410240173339844
    5. 'i' → logprob: -13.910240173339844
    6. ' i' → logprob: -14.785240173339844
    7. 'range' → logprob: -14.785240173339844
    8. '_j' → logprob: -15.035240173339844
    9. '0' → logprob: -15.785240173339844
    10. 'int' → logprob: -15.910240173339844

Token 199: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24263373017311096
    2. 'in' → logprob: -2.242633819580078
    3. '<|end|>' → logprob: -2.242633819580078
    4. ' ' → logprob: -6.117633819580078
    5. '<|end|>' → logprob: -7.742633819580078
    6. '(' → logprob: -8.867633819580078
    7. ' j' → logprob: -9.492633819580078
    8. '0' → logprob: -10.492633819580078
    9. ' (' → logprob: -10.742633819580078
    10. '_in' → logprob: -10.867633819580078

Token 200: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06202627718448639
    2. ' range' → logprob: -2.812026262283325
    3. '<|end|>' → logprob: -10.312026023864746
    4. '(range' → logprob: -10.937026023864746
    5. '	range' → logprob: -12.187026023864746
    6. ' ' → logprob: -13.562026023864746
    7. ' xrange' → logprob: -14.937026023864746
    8. '_range' → logprob: -15.062026023864746
    9. '.range' → logprob: -15.812026023864746
    10. '0' → logprob: -15.937026023864746

Token 201: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.007907073013484478
    2. '(' → logprob: -5.257906913757324
    3. 'N' → logprob: -6.007906913757324
    4. ' (' → logprob: -9.382906913757324
    5. '(len' → logprob: -9.757906913757324
    6. ' N' → logprob: -10.507906913757324
    7. '1' → logprob: -10.757906913757324
    8. '(n' → logprob: -11.882906913757324
    9. '(int' → logprob: -13.007906913757324
    10. 'range' → logprob: -13.382906913757324

Token 202: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06298677623271942
    2. ')' → logprob: -3.1879868507385254
    3. '):
' → logprob: -3.9379868507385254
    4. '+' → logprob: -9.937986373901367
    5. '*' → logprob: -10.562986373901367
    6. '           ' → logprob: -10.562986373901367
    7. '<|end|>' → logprob: -10.562986373901367
    8. ':' → logprob: -10.812986373901367
    9. ',' → logprob: -10.812986373901367
    10. '**' → logprob: -10.937986373901367

Token 203: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0473485104739666
    2. '<|end|>' → logprob: -3.4223484992980957
    3. ' ' → logprob: -5.547348499298096
    4. '           ' → logprob: -6.047348499298096
    5. '0' → logprob: -6.797348499298096
    6. '(graph' → logprob: -7.172348499298096
    7. ' graph' → logprob: -7.297348499298096
    8. ':' → logprob: -7.547348499298096
    9. ',' → logprob: -7.672348499298096
    10. ')' → logprob: -7.672348499298096

Token 204: ' x' (ID: 1215)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.14291490614414215
    2. 'graph' → logprob: -2.0179150104522705
    3. '	graph' → logprob: -8.517914772033691
    4. '_graph' → logprob: -10.892914772033691
    5. '                   ' → logprob: -11.142914772033691
    6. '   ' → logprob: -13.767914772033691
    7. '(graph' → logprob: -13.892914772033691
    8. '.graph' → logprob: -14.142914772033691
    9. ' ' → logprob: -14.267914772033691
    10. ' idx' → logprob: -14.892914772033691

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28560712933540344
    2. ' =' → logprob: -1.410607099533081
    3. '=int' → logprob: -6.28560733795166
    4. '[' → logprob: -7.03560733795166
    5. '[int' → logprob: -7.28560733795166
    6. ']' → logprob: -8.53560733795166
    7. '=
' → logprob: -8.91060733795166
    8. ')' → logprob: -9.28560733795166
    9. '<|end|>' → logprob: -9.28560733795166
    10. ']=' → logprob: -9.66060733795166

Token 206: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005530327325686812
    2. ' int' → logprob: -7.500553131103516
    3. 'data' → logprob: -20.250553131103516
    4. '   ' → logprob: -20.250553131103516
    5. '[int' → logprob: -20.375553131103516
    6. '  ' → logprob: -20.500553131103516
    7. '(int' → logprob: -20.625553131103516
    8. ' ' → logprob: -21.250553131103516
    9. '<int' → logprob: -22.125553131103516
    10. '0' → logprob: -22.125553131103516

Token 207: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.0025609112344682217
    2. '(' → logprob: -6.252561092376709
    3. 'data' → logprob: -7.377561092376709
    4. ')data' → logprob: -13.25256061553955
    5. '(
' → logprob: -13.37756061553955
    6. '[data' → logprob: -13.75256061553955
    7. ' data' → logprob: -14.12756061553955
    8. '()' → logprob: -14.75256061553955
    9. '<|end|>' → logprob: -14.87756061553955
    10. ')' → logprob: -15.37756061553955

Token 208: '[' (ID: 58)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.41866585687967e-06
    2. '[' → logprob: -12.750008583068848
    3. '])' → logprob: -13.625008583068848
    4. ')' → logprob: -13.750008583068848
    5. ' [' → logprob: -13.875008583068848
    6. 'j' → logprob: -14.250008583068848
    7. '[
' → logprob: -15.250008583068848
    8. '[i' → logprob: -15.750008583068848
    9. '(j' → logprob: -15.750008583068848
    10. '   ' → logprob: -15.875008583068848

Token 209: '2' (ID: 17)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001899959403090179
    2. ' j' → logprob: -6.6269001960754395
    3. '[j' → logprob: -7.5019001960754395
    4. '0' → logprob: -12.001899719238281
    5. '])' → logprob: -12.251899719238281
    6. '	j' → logprob: -13.126899719238281
    7. '_j' → logprob: -13.126899719238281
    8. ')' → logprob: -13.376899719238281
    9. '   ' → logprob: -13.501899719238281
    10. ' ' → logprob: -13.626899719238281

Token 210: '*j' (ID: 138193)
  Prédit: '*j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*j' → logprob: -0.0009390931227244437
    2. ' *' → logprob: -7.375938892364502
    3. '*' → logprob: -8.75093936920166
    4. '])' → logprob: -9.25093936920166
    5. 'j' → logprob: -10.12593936920166
    6. '*i' → logprob: -12.00093936920166
    7. ' j' → logprob: -12.50093936920166
    8. '+j' → logprob: -12.87593936920166
    9. '[j' → logprob: -13.87593936920166
    10. '*(' → logprob: -14.00093936920166

Token 211: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.04352318122982979
    2. '+' → logprob: -3.793523073196411
    3. '])
' → logprob: -3.918523073196411
    4. ' ])' → logprob: -9.793522834777832
    5. ' +' → logprob: -10.418522834777832
    6. '   ' → logprob: -10.918522834777832
    7. ']' → logprob: -11.043522834777832
    8. '])-' → logprob: -11.418522834777832
    9. '])+' → logprob: -11.543522834777832
    10. ')]' → logprob: -11.543522834777832

Token 212: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010502622462809086
    2. '<|end|>' → logprob: -5.385502815246582
    3. ')' → logprob: -5.635502815246582
    4. '
' → logprob: -7.135502815246582
    5. '                
' → logprob: -7.760502815246582
    6. ')
' → logprob: -8.135502815246582
    7. ' 
' → logprob: -9.010502815246582
    8. '           ' → logprob: -9.135502815246582
    9. '<|end|>' → logprob: -9.635502815246582
    10. '			' → logprob: -9.760502815246582

Token 213: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.6738141179084778
    2. 'graph' → logprob: -1.548814058303833
    3. ' y' → logprob: -1.923814058303833
    4. ' graph' → logprob: -2.798814058303833
    5. ' ' → logprob: -3.673814058303833
    6. '               ' → logprob: -4.423814296722412
    7. '<|end|>' → logprob: -4.423814296722412
    8. '                ' → logprob: -5.048814296722412
    9. ')' → logprob: -5.423814296722412
    10. '	graph' → logprob: -6.673814296722412

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.387094646692276
    2. '=' → logprob: -1.1370946168899536
    3. '=int' → logprob: -9.137094497680664
    4. '[' → logprob: -9.387094497680664
    5. '[int' → logprob: -11.762094497680664
    6. ':' → logprob: -11.887094497680664
    7. '=
' → logprob: -12.762094497680664
    8. '   ' → logprob: -13.262094497680664
    9. ')' → logprob: -13.762094497680664
    10. '<|end|>' → logprob: -13.762094497680664

Token 215: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011711753904819489
    2. ' int' → logprob: -6.751171112060547
    3. 'data' → logprob: -15.126171112060547
    4. '[int' → logprob: -15.501171112060547
    5. '<int' → logprob: -15.751171112060547
    6. '(int' → logprob: -16.001171112060547
    7. '2' → logprob: -16.626171112060547
    8. ':int' → logprob: -17.001171112060547
    9. ' ' → logprob: -17.501171112060547
    10. '=int' → logprob: -17.751171112060547

Token 216: '(data' (ID: 4819)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04577958211302757
    2. '(int' → logprob: -3.4207794666290283
    3. '(' → logprob: -4.545779705047607
    4. '(data' → logprob: -7.295779705047607
    5. ' int' → logprob: -7.545779705047607
    6. 'data' → logprob: -9.04577922821045
    7. '[int' → logprob: -9.29577922821045
    8. '=int' → logprob: -11.42077922821045
    9. '2' → logprob: -12.42077922821045
    10. ' (' → logprob: -12.92077922821045

Token 217: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1844443529844284
    2. '2' → logprob: -1.8094443082809448
    3. '+' → logprob: -6.559444427490234
    4. '])' → logprob: -6.684444427490234
    5. '(' → logprob: -6.809444427490234
    6. '*' → logprob: -7.684444427490234
    7. ']' → logprob: -8.434444427490234
    8. '{' → logprob: -9.684444427490234
    9. ')' → logprob: -10.059444427490234
    10. '[j' → logprob: -10.309444427490234

Token 218: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016015714034438133
    2. '(' → logprob: -5.016015529632568
    3. '1' → logprob: -5.016015529632568
    4. 'j' → logprob: -6.016015529632568
    5. ' ' → logprob: -9.641016006469727
    6. '
' → logprob: -10.391016006469727
    7. '0' → logprob: -10.641016006469727
    8. 'i' → logprob: -10.891016006469727
    9. '+' → logprob: -11.641016006469727
    10. ' (' → logprob: -11.766016006469727

Token 219: '*j' (ID: 138193)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.25196290016174316
    2. '*j' → logprob: -1.5019629001617432
    3. '*' → logprob: -11.626962661743164
    4. 'y' → logprob: -11.876962661743164
    5. '*y' → logprob: -12.251962661743164
    6. '_j' → logprob: -12.251962661743164
    7. '*i' → logprob: -13.001962661743164
    8. ' j' → logprob: -13.126962661743164
    9. 'i' → logprob: -13.501962661743164
    10. '[j' → logprob: -14.501962661743164

Token 220: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001156770158559084
    2. '])' → logprob: -6.876156806945801
    3. ' +' → logprob: -9.2511568069458
    4. '+j' → logprob: -11.0011568069458
    5. '])
' → logprob: -12.6261568069458
    6. '1' → logprob: -13.2511568069458
    7. ']' → logprob: -13.5011568069458
    8. ')])' → logprob: -13.7511568069458
    9. '+
' → logprob: -14.2511568069458
    10. ']+' → logprob: -14.5011568069458

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '0' → logprob: -16.25
    4. 'j' → logprob: -17.5
    5. 'y' → logprob: -18.5
    6. ']' → logprob: -18.75
    7. '+' → logprob: -19.125
    8. '
' → logprob: -19.25
    9. '```' → logprob: -20.125
    10. 'i' → logprob: -20.5

Token 222: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1973230242729187
    2. '])' → logprob: -2.0723230838775635
    3. ')
' → logprob: -3.0723230838775635
    4. ')]' → logprob: -6.197322845458984
    5. ')])' → logprob: -6.197322845458984
    6. '])
' → logprob: -6.572322845458984
    7. ']' → logprob: -7.072322845458984
    8. '               ' → logprob: -7.822322845458984
    9. '           ' → logprob: -10.197322845458984
    10. ']
' → logprob: -10.447322845458984

Token 223: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010273151099681854
    2. ')' → logprob: -4.885272979736328
    3. '<|end|>' → logprob: -6.635272979736328
    4. '                
' → logprob: -7.385272979736328
    5. ')
' → logprob: -9.010272979736328
    6. '#' → logprob: -9.260272979736328
    7. ',' → logprob: -9.260272979736328
    8. '			' → logprob: -9.760272979736328
    9. '
' → logprob: -9.760272979736328
    10. ' 
' → logprob: -10.510272979736328

Token 224: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.2581455409526825
    2. ' graph' → logprob: -1.5081455707550049
    3. '               ' → logprob: -5.258145332336426
    4. '	graph' → logprob: -7.383145332336426
    5. '       ' → logprob: -8.508145332336426
    6. '
' → logprob: -9.383145332336426
    7. '(graph' → logprob: -10.008145332336426
    8. 'index' → logprob: -11.758145332336426
    9. '_graph' → logprob: -12.258145332336426
    10. '                
' → logprob: -12.383145332336426

Token 225: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1368660181760788
    2. '[' → logprob: -2.3868660926818848
    3. '[N' → logprob: -3.5118660926818848
    4. '[x' → logprob: -5.261866092681885
    5. '[j' → logprob: -7.261866092681885
    6. '[(' → logprob: -8.886865615844727
    7. '[y' → logprob: -9.761865615844727
    8. '[int' → logprob: -11.261865615844727
    9. '[u' → logprob: -11.261865615844727
    10. '[data' → logprob: -11.511865615844727

Token 226: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.032732389867305756
    2. ' *' → logprob: -3.6577324867248535
    3. '*' → logprob: -5.4077324867248535
    4. '*(' → logprob: -6.4077324867248535
    5. '*j' → logprob: -9.032732009887695
    6. ']' → logprob: -9.282732009887695
    7. '*i' → logprob: -10.782732009887695
    8. '*y' → logprob: -11.532732009887695
    9. '*n' → logprob: -11.532732009887695
    10. 'N' → logprob: -11.782732009887695

Token 227: '+j' (ID: 71365)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11474315822124481
    2. ' +' → logprob: -2.364743232727051
    3. '+j' → logprob: -4.239743232727051
    4. '+
' → logprob: -11.86474323272705
    5. '+x' → logprob: -12.11474323272705
    6. '+y' → logprob: -12.61474323272705
    7. '+i' → logprob: -13.23974323272705
    8. '+k' → logprob: -14.48974323272705
    9. ' +
' → logprob: -14.86474323272705
    10. ' plus' → logprob: -15.48974323272705

Token 228: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0027144034393131733
    2. ']=' → logprob: -6.00271463394165
    3. '=' → logprob: -8.377714157104492
    4. ' =' → logprob: -12.752714157104492
    5. ' ]' → logprob: -12.877714157104492
    6. ']=(' → logprob: -13.002714157104492
    7. ')' → logprob: -14.377714157104492
    8. ']
' → logprob: -16.002714157104492
    9. '[' → logprob: -16.752714157104492
    10. 'x' → logprob: -17.127714157104492

Token 229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. '=x' → logprob: -18.128177642822266
    4. '=int' → logprob: -18.753177642822266
    5. '=y' → logprob: -19.003177642822266
    6. '=}' → logprob: -19.003177642822266
    7. '.=' → logprob: -19.253177642822266
    8. ',' → logprob: -19.378177642822266
    9. '＝' → logprob: -19.503177642822266
    10. ')' → logprob: -19.503177642822266

Token 230: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.36021164059638977
    2. 'y' → logprob: -1.4852116107940674
    3. '(x' → logprob: -2.9852116107940674
    4. '(y' → logprob: -3.7352116107940674
    5. ' y' → logprob: -7.4852118492126465
    6. ' x' → logprob: -8.110211372375488
    7. ' (' → logprob: -8.110211372375488
    8. '(' → logprob: -8.860211372375488
    9. '   ' → logprob: -9.235211372375488
    10. '((' → logprob: -9.360211372375488

Token 231: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.0005541055579669774
    2. '*y' → logprob: -7.875554084777832
    3. ' *' → logprob: -9.250554084777832
    4. '*n' → logprob: -10.250554084777832
    5. '*' → logprob: -10.500554084777832
    6. '*i' → logprob: -12.375554084777832
    7. '*j' → logprob: -12.625554084777832
    8. 'N' → logprob: -12.625554084777832
    9. '*(' → logprob: -13.500554084777832
    10. '*M' → logprob: -14.375554084777832

Token 232: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0063482229597866535
    2. ' +' → logprob: -5.131348133087158
    3. '+y' → logprob: -7.881348133087158
    4. '+j' → logprob: -10.256348609924316
    5. 'plus' → logprob: -12.756348609924316
    6. '+k' → logprob: -14.256348609924316
    7. '+x' → logprob: -14.381348609924316
    8. ' plus' → logprob: -14.631348609924316
    9. '+i' → logprob: -14.756348609924316
    10. '＋' → logprob: -15.131348609924316

Token 233: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.4121114822482923e-06
    2. ' y' → logprob: -12.625003814697266
    3. '	y' → logprob: -20.375003814697266
    4. '   ' → logprob: -21.000003814697266
    5. 'yj' → logprob: -21.125003814697266
    6. '                   ' → logprob: -21.375003814697266
    7. 'j' → logprob: -22.000003814697266
    8. '(y' → logprob: -22.500003814697266
    9. ' ' → logprob: -22.500003814697266
    10. 'x' → logprob: -22.500003814697266

Token 234: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053213171660900116
    2. '<|end|>' → logprob: -3.053213119506836
    3. '       ' → logprob: -6.928213119506836
    4. '   ' → logprob: -7.178213119506836
    5. '    
' → logprob: -7.428213119506836
    6. '\n' → logprob: -7.553213119506836
    7. '        
' → logprob: -7.803213119506836
    8. '' → logprob: -8.053213119506836
    9. 'newline' → logprob: -8.053213119506836
    10. '```' → logprob: -8.928213119506836

Token 235: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1839848905801773
    2. 'visited' → logprob: -1.8089848756790161
    3. '        
' → logprob: -6.183984756469727
    4. '       ' → logprob: -6.683984756469727
    5. '    
' → logprob: -8.058984756469727
    6. ' visited' → logprob: -8.808984756469727
    7. '<|end|>' → logprob: -8.808984756469727
    8. '   ' → logprob: -9.058984756469727
    9. '            
' → logprob: -9.308984756469727
    10. '```' → logprob: -10.433984756469727

Token 236: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -8.149051427608356e-05
    2. 'idx' → logprob: -9.875081062316895
    3. '       ' → logprob: -10.500081062316895
    4. ' visited' → logprob: -14.250081062316895
    5. '   ' → logprob: -14.250081062316895
    6. 'cycle' → logprob: -14.500081062316895
    7. '        
' → logprob: -15.625081062316895
    8. 'index' → logprob: -15.875081062316895
    9. '```' → logprob: -15.875081062316895
    10. '
' → logprob: -16.12508201599121

Token 237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740826487541199
    2. ' =' → logprob: -0.9740826487541199
    3. '=[' → logprob: -13.099082946777344
    4. '[' → logprob: -13.224082946777344
    5. ',' → logprob: -14.224082946777344
    6. ' =[' → logprob: -14.599082946777344
    7. '[:]' → logprob: -15.474082946777344
    8. '=[]' → logprob: -15.724082946777344
    9. '＝' → logprob: -15.724082946777344
    10. ']' → logprob: -16.599082946777344

Token 238: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0445127372804563e-05
    2. ' [' → logprob: -11.50001049041748
    3. '[N' → logprob: -15.75001049041748
    4. '   ' → logprob: -15.87501049041748
    5. '[u' → logprob: -17.500009536743164
    6. '[len' → logprob: -18.250009536743164
    7. '[node' → logprob: -19.375009536743164
    8. '[n' → logprob: -19.500009536743164
    9. '[i' → logprob: -19.500009536743164
    10. ' ' → logprob: -20.375009536743164

Token 239: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.512236498361744e-07
    2. ' False' → logprob: -14.500000953674316
    3. '(False' → logprob: -20.125
    4. '0' → logprob: -21.125
    5. '   ' → logprob: -21.125
    6. '=False' → logprob: -23.125
    7. '.False' → logprob: -24.625
    8. '[' → logprob: -25.0
    9. 'false' → logprob: -25.75
    10. '```' → logprob: -25.875

Token 240: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02006189525127411
    2. ']*' → logprob: -4.02006196975708
    3. ']*(' → logprob: -6.27006196975708
    4. ' ]' → logprob: -11.645061492919922
    5. ' for' → logprob: -12.645061492919922
    6. ']+' → logprob: -12.770061492919922
    7. '   ' → logprob: -13.770061492919922
    8. '*' → logprob: -13.770061492919922
    9. ',' → logprob: -14.645061492919922
    10. 'for' → logprob: -15.770061492919922

Token 241: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.2200749754119897e-06
    2. ' N' → logprob: -13.125001907348633
    3. '   ' → logprob: -15.750001907348633
    4. 'len' → logprob: -19.375001907348633
    5. '	N' → logprob: -20.000001907348633
    6. '(N' → logprob: -20.375001907348633
    7. '  ' → logprob: -20.500001907348633
    8. 'Nx' → logprob: -21.750001907348633
    9. 'n' → logprob: -22.125001907348633
    10. ' ' → logprob: -22.125001907348633

Token 242: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -6.511406809295295e-06
    2. '*' → logprob: -12.250006675720215
    3. ' *' → logprob: -13.750006675720215
    4. '**' → logprob: -15.125006675720215
    5. 'N' → logprob: -15.250006675720215
    6. '2' → logprob: -16.6250057220459
    7. '*M' → logprob: -16.7500057220459
    8. '*n' → logprob: -18.1250057220459
    9. '```' → logprob: -18.8750057220459
    10. '*K' → logprob: -18.8750057220459

Token 243: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759753584861755
    2. ')
' → logprob: -0.8259753584861755
    3. '       ' → logprob: -10.45097541809082
    4. ' )
' → logprob: -12.57597541809082
    5. ')
' → logprob: -13.45097541809082
    6. ' )' → logprob: -13.95097541809082
    7. '   ' → logprob: -14.45097541809082
    8. ')

' → logprob: -15.57597541809082
    9. '
' → logprob: -16.07597541809082
    10. '),' → logprob: -16.45097541809082

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09786622226238251
    2. 'on' → logprob: -2.7228662967681885
    3. ' on' → logprob: -3.5978662967681885
    4. '   ' → logprob: -9.84786605834961
    5. '
' → logprob: -10.09786605834961
    6. ' cycle' → logprob: -10.34786605834961
    7. 'cycle' → logprob: -11.47286605834961
    8. '	on' → logprob: -12.47286605834961
    9. '           ' → logprob: -12.59786605834961
    10. '```' → logprob: -12.59786605834961

Token 245: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' (adapté à ' on') → logprob: -0.0016592320753261447
    2. 'cycle' → logprob: -6.626659393310547
    3. 'idx' → logprob: -8.251659393310547
    4. 'stack' → logprob: -10.001659393310547
    5. ' on' → logprob: -11.626659393310547
    6. 'visited' → logprob: -12.001659393310547
    7. 'index' → logprob: -12.251659393310547
    8. '   ' → logprob: -13.001659393310547
    9. 'for' → logprob: -13.501659393310547
    10. '```' → logprob: -14.876659393310547

Token 246: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -7.684157026233152e-05
    2. '_' → logprob: -9.500077247619629
    3. ' _' → logprob: -14.875077247619629
    4. '_s' → logprob: -15.000077247619629
    5. '_line' → logprob: -15.125077247619629
    6. '_st' → logprob: -15.500077247619629
    7. '[_' → logprob: -15.875077247619629
    8. '```' → logprob: -15.875077247619629
    9. '[' → logprob: -16.250076293945312
    10. 'stack' → logprob: -16.375076293945312

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20289143919944763
    2. ' =' → logprob: -1.70289146900177
    3. '=[' → logprob: -6.5778913497924805
    4. '[' → logprob: -9.45289134979248
    5. ' =[' → logprob: -12.32789134979248
    6. '[u' → logprob: -13.95289134979248
    7. ')' → logprob: -14.57789134979248
    8. '=[]' → logprob: -14.70289134979248
    9. '   ' → logprob: -14.82789134979248
    10. '=True' → logprob: -15.07789134979248

Token 248: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020389800192788243
    2. ' [' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.875204086303711
    4. ' ' → logprob: -16.50020408630371
    5. 'False' → logprob: -16.62520408630371
    6. '  ' → logprob: -19.50020408630371
    7. ' ' → logprob: -19.62520408630371
    8. '(False' → logprob: -20.37520408630371
    9. '[N' → logprob: -20.37520408630371
    10. '    ' → logprob: -20.75020408630371

Token 249: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.6312321753939614e-05
    2. '[' → logprob: -10.250036239624023
    3. ' False' → logprob: -14.000036239624023
    4. '(False' → logprob: -16.750036239624023
    5. '.False' → logprob: -20.500036239624023
    6. '=False' → logprob: -20.875036239624023
    7. '   ' → logprob: -22.125036239624023
    8. ']' → logprob: -22.625036239624023
    9. '0' → logprob: -23.375036239624023
    10. '
' → logprob: -23.625036239624023

Token 250: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.0005346827092580497
    2. ']*' → logprob: -7.875534534454346
    3. ']' → logprob: -9.125535011291504
    4. ')*(' → logprob: -10.125535011291504
    5. '](' → logprob: -12.500535011291504
    6. '   ' → logprob: -13.625535011291504
    7. '*(' → logprob: -14.750535011291504
    8. ']+' → logprob: -15.750535011291504
    9. '```' → logprob: -16.500534057617188
    10. ' ]' → logprob: -17.000534057617188

Token 251: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00013250234769657254
    2. ' N' → logprob: -9.00013256072998
    3. '(N' → logprob: -11.75013256072998
    4. '   ' → logprob: -14.50013256072998
    5. '(' → logprob: -15.00013256072998
    6. ' (' → logprob: -16.250131607055664
    7. '       ' → logprob: -16.250131607055664
    8. '[N' → logprob: -16.250131607055664
    9. '	N' → logprob: -17.375131607055664
    10. ')' → logprob: -17.375131607055664

Token 252: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -4.127333340875339e-06
    2. '*' → logprob: -12.875003814697266
    3. '*M' → logprob: -15.125003814697266
    4. '*S' → logprob: -15.125003814697266
    5. '*n' → logprob: -15.625003814697266
    6. ')' → logprob: -15.875003814697266
    7. '*C' → logprob: -15.875003814697266
    8. '*u' → logprob: -16.125003814697266
    9. '*T' → logprob: -16.250003814697266
    10. 'N' → logprob: -16.375003814697266

Token 253: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38821712136268616
    2. ')
' → logprob: -1.1382170915603638
    3. '       ' → logprob: -6.638216972351074
    4. ' )' → logprob: -11.638216972351074
    5. ' )
' → logprob: -11.888216972351074
    6. '
' → logprob: -12.513216972351074
    7. ')
' → logprob: -12.638216972351074
    8. ']' → logprob: -12.888216972351074
    9. ']
' → logprob: -13.388216972351074
    10. '[' → logprob: -13.388216972351074

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13857266306877136
    2. 'stack' → logprob: -2.3885726928710938
    3. 'cycle' → logprob: -3.7635726928710938
    4. ' cycle' → logprob: -5.263572692871094
    5. 'idx' → logprob: -5.513572692871094
    6. '   ' → logprob: -5.763572692871094
    7. ' stack' → logprob: -6.888572692871094
    8. '```' → logprob: -8.138572692871094
    9. '	stack' → logprob: -8.388572692871094
    10. '
' → logprob: -9.013572692871094

Token 255: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.323097288608551
    2. 'cycle' → logprob: -1.4480972290039062
    3. 'idx' → logprob: -3.1980972290039062
    4. 'index' → logprob: -9.323097229003906
    5. '```' → logprob: -10.198097229003906
    6. ' cycle' → logprob: -10.573097229003906
    7. '       ' → logprob: -10.573097229003906
    8. ' stack' → logprob: -11.448097229003906
    9. '   ' → logprob: -11.448097229003906
    10. ' idx' → logprob: -12.198097229003906

Token 256: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03427727520465851
    2. ' =' → logprob: -3.6592772006988525
    3. '=[]' → logprob: -5.159277439117432
    4. '.' → logprob: -6.409277439117432
    5. '[:]' → logprob: -8.034276962280273
    6. '.append' → logprob: -8.784276962280273
    7. '.=' → logprob: -9.659276962280273
    8. '[]' → logprob: -12.784276962280273
    9. '.clear' → logprob: -13.159276962280273
    10. '=[]
' → logprob: -13.409276962280273

Token 257: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.7120533811976202e-05
    2. ' []' → logprob: -11.750017166137695
    3. '[]}' → logprob: -11.875017166137695
    4. '[]
' → logprob: -13.250017166137695
    5. '[]>' → logprob: -15.375017166137695
    6. '[' → logprob: -15.625017166137695
    7. '[]

' → logprob: -16.250017166137695
    8. '[]"' → logprob: -17.125017166137695
    9. '[],' → logprob: -17.375017166137695
    10. '[])' → logprob: -17.375017166137695

Token 258: '       ' (ID: 309)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.17148031294345856
    2. 'cycle' → logprob: -2.546480417251587
    3. '       ' → logprob: -2.796480417251587
    4. '
' → logprob: -4.296480178833008
    5. ' cycle' → logprob: -6.671480178833008
    6. 'index' → logprob: -6.796480178833008
    7. '   ' → logprob: -7.296480178833008
    8. ' idx' → logprob: -7.546480178833008
    9. '        
' → logprob: -7.796480178833008
    10. '```' → logprob: -8.421480178833008

Token 259: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' (adapté à ' cycle') → logprob: -0.6385085582733154
    2. 'idx' → logprob: -0.7635085582733154
    3. '       ' → logprob: -5.6385087966918945
    4. ' cycle' → logprob: -6.5135087966918945
    5. ' idx' → logprob: -7.2635087966918945
    6. 'index' → logprob: -9.763508796691895
    7. '   ' → logprob: -10.263508796691895
    8. '```' → logprob: -11.013508796691895
    9. '        
' → logprob: -12.138508796691895
    10. '0' → logprob: -12.263508796691895

Token 260: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.320199877838604e-07
    2. '_counts' → logprob: -15.375
    3. '_' → logprob: -16.0
    4. '_counter' → logprob: -18.75
    5. 'count' → logprob: -20.0
    6. '_length' → logprob: -20.125
    7. '_c' → logprob: -20.25
    8. '_cont' → logprob: -20.375
    9. '_total' → logprob: -20.75
    10. '_co' → logprob: -20.75

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692831456661224
    2. '=' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.251928329467773
    4. '0' → logprob: -16.251928329467773
    5. ' +=' → logprob: -16.876928329467773
    6. ' =)' → logprob: -17.751928329467773
    7. ' =
' → logprob: -18.001928329467773
    8. ',' → logprob: -18.626928329467773
    9. ')' → logprob: -19.376928329467773
    10. '+=' → logprob: -19.876928329467773

Token 262: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.50002670288086
    4. '<|end|>' → logprob: -17.87502670288086
    5. '  ' → logprob: -19.50002670288086
    6. '۰' → logprob: -19.50002670288086
    7. '000' → logprob: -20.12502670288086
    8. '00' → logprob: -21.00002670288086
    9. '    ' → logprob: -21.00002670288086
    10. '[' → logprob: -21.50002670288086

Token 263: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '1' → logprob: -16.375001907348633
    4. '```' → logprob: -17.687501907348633
    5. '000' → logprob: -17.750001907348633
    6. '[' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.062501907348633
    8. '100' → logprob: -18.312501907348633
    9. '10' → logprob: -18.437501907348633
    10. 'len' → logprob: -18.500001907348633

Token 264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01007726788520813
    2. ' for' → logprob: -5.010077476501465
    3. 'for' → logprob: -6.010077476501465
    4. '<|end|>' → logprob: -7.510077476501465
    5. '
' → logprob: -9.010077476501465
    6. '   ' → logprob: -9.135077476501465
    7. '        
' → logprob: -9.635077476501465
    8. '<|end|>' → logprob: -11.010077476501465
    9. '	for' → logprob: -11.885077476501465
    10. '	' → logprob: -12.260077476501465

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008036340586841106
    2. ' for' → logprob: -5.008036136627197
    3. '<|end|>' → logprob: -7.383036136627197
    4. 'for' → logprob: -8.008036613464355
    5. '   ' → logprob: -8.133036613464355
    6. '        
' → logprob: -10.508036613464355
    7. '
' → logprob: -11.383036613464355
    8. '<|end|>' → logprob: -11.883036613464355
    9. '```' → logprob: -12.633036613464355
    10. ' ' → logprob: -12.758036613464355

Token 266: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5645663738250732
    2. ' for' → logprob: -1.1895663738250732
    3. 'for' (adapté à ' for') → logprob: -2.0645663738250732
    4. '   ' → logprob: -9.564566612243652
    5. 'idx' → logprob: -10.189566612243652
    6. '<|end|>' → logprob: -10.939566612243652
    7. '```' → logprob: -11.189566612243652
    8. ' idx' → logprob: -11.564566612243652
    9. '        
' → logprob: -12.064566612243652
    10. ' ' → logprob: -12.564566612243652

Token 267: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.38743817806243896
    2. 'i' → logprob: -1.387438178062439
    3. ' u' → logprob: -3.1374382972717285
    4. ' i' → logprob: -3.8874382972717285
    5. ' node' → logprob: -5.5124382972717285
    6. 'node' → logprob: -5.8874382972717285
    7. 'v' → logprob: -7.3874382972717285
    8. ' v' → logprob: -8.76243782043457
    9. 'x' → logprob: -11.51243782043457
    10. 'k' → logprob: -13.76243782043457

Token 268: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02630506083369255
    2. 'in' → logprob: -3.6513049602508545
    3. ' ' → logprob: -12.901305198669434
    4. 'import' → logprob: -14.526305198669434
    5. 'range' → logprob: -15.401305198669434
    6. '0' → logprob: -15.526305198669434
    7. '   ' → logprob: -15.776305198669434
    8. 'In' → logprob: -15.901305198669434
    9. '	in' → logprob: -15.901305198669434
    10. 's' → logprob: -16.026304244995117

Token 269: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '(range' → logprob: -18.500036239624023
    4. '	range' → logprob: -21.125036239624023
    5. '   ' → logprob: -22.000036239624023
    6. '.range' → logprob: -23.500036239624023
    7. '  ' → logprob: -24.000036239624023
    8. '0' → logprob: -24.250036239624023
    9. ' ' → logprob: -24.375036239624023
    10. '```' → logprob: -24.750036239624023

Token 270: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0017741884803399444
    2. '(' → logprob: -6.876774311065674
    3. 'N' → logprob: -7.376774311065674
    4. '0' → logprob: -9.126773834228516
    5. '(len' → logprob: -12.376773834228516
    6. '   ' → logprob: -13.376773834228516
    7. 'len' → logprob: -14.501773834228516
    8. '(n' → logprob: -15.501773834228516
    9. ' (' → logprob: -16.001773834228516
    10. '((' → logprob: -16.501773834228516

Token 271: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -6.659005157416686e-05
    2. '*' → logprob: -9.750066757202148
    3. ' *' → logprob: -12.750066757202148
    4. 'N' → logprob: -13.625066757202148
    5. '):' → logprob: -14.000066757202148
    6. '*n' → logprob: -14.250066757202148
    7. ')' → logprob: -14.500066757202148
    8. '*K' → logprob: -14.875066757202148
    9. '**' → logprob: -15.125066757202148
    10. '*(' → logprob: -15.375066757202148

Token 272: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038091402500867844
    2. '):
' → logprob: -3.2880914211273193
    3. ':' → logprob: -10.038091659545898
    4. ' ):' → logprob: -12.413091659545898
    5. ':
' → logprob: -14.288091659545898
    6. ')' → logprob: -14.538091659545898
    7. '):
' → logprob: -14.663091659545898
    8. ']:' → logprob: -16.0380916595459
    9. ' ):
' → logprob: -16.1630916595459
    10. '():' → logprob: -16.2880916595459

Token 273: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16701261699199677
    2. ' if' → logprob: -2.0420126914978027
    3. ' dfs' → logprob: -4.667012691497803
    4. '       ' → logprob: -5.417012691497803
    5. 'if' → logprob: -5.792012691497803
    6. '   ' → logprob: -6.042012691497803
    7. 'dfs' → logprob: -6.167012691497803
    8. '```' → logprob: -7.167012691497803
    9. '            
' → logprob: -8.167012214660645
    10. '<|end|>' → logprob: -8.417012214660645

Token 274: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3245009481906891
    2. 'if' (adapté à ' if') → logprob: -1.3245009183883667
    3. '           ' → logprob: -5.074501037597656
    4. ' not' → logprob: -5.449501037597656
    5. 'not' → logprob: -7.574501037597656
    6. '               ' → logprob: -10.574501037597656
    7. '       ' → logprob: -11.074501037597656
    8. ' ' → logprob: -11.199501037597656
    9. ' 
' → logprob: -11.449501037597656
    10. '            ' → logprob: -11.574501037597656

Token 275: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6931484341621399
    2. 'not' → logprob: -0.6931484341621399
    3. '   ' → logprob: -13.943148612976074
    4. '(not' → logprob: -15.693148612976074
    5. '	not' → logprob: -16.068147659301758
    6. '!' → logprob: -17.318147659301758
    7. 'visited' → logprob: -17.818147659301758
    8. ':not' → logprob: -18.818147659301758
    9. '           ' → logprob: -19.318147659301758
    10. '```' → logprob: -19.693147659301758

Token 276: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3868710398674011
    2. ' visited' → logprob: -1.136871099472046
    3. ' ' → logprob: -18.511871337890625
    4. 'Visited' → logprob: -18.636871337890625
    5. 'vis' → logprob: -20.636871337890625
    6. 'visit' → logprob: -20.886871337890625
    7. ' ' → logprob: -21.136871337890625
    8. 'visible' → logprob: -21.636871337890625
    9. '   ' → logprob: -22.261871337890625
    10. '<|end|>' → logprob: -22.386871337890625

Token 277: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -11.750007629394531
    3. ' [' → logprob: -16.25000762939453
    4. 'u' → logprob: -17.75000762939453
    5. '(u' → logprob: -18.25000762939453
    6. '[user' → logprob: -20.37500762939453
    7. '```' → logprob: -21.25000762939453
    8. '[
' → logprob: -21.25000762939453
    9. '[i' → logprob: -21.75000762939453
    10. '<u' → logprob: -21.75000762939453

Token 278: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7020125985145569
    2. '):' → logprob: -0.7020125985145569
    3. ']:' → logprob: -5.452012538909912
    4. '):
' → logprob: -5.577012538909912
    5. ':
' → logprob: -7.327012538909912
    6. ']:
' → logprob: -10.57701301574707
    7. '():' → logprob: -10.95201301574707
    8. ' ):' → logprob: -10.95201301574707
    9. ')' → logprob: -11.45201301574707
    10. '}:' → logprob: -11.82701301574707

Token 279: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09246751666069031
    2. ':
' → logprob: -2.4674675464630127
    3. '               ' → logprob: -6.342467308044434
    4. '           ' → logprob: -7.467467308044434
    5. '):' → logprob: -7.717467308044434
    6. '():
' → logprob: -8.467467308044434
    7. '):
' → logprob: -8.967467308044434
    8. '():' → logprob: -9.342467308044434
    9. ' :' → logprob: -9.467467308044434
    10. ' and' → logprob: -9.967467308044434

Token 280: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.014169389382004738
    2. ' dfs' → logprob: -4.264169216156006
    3. '               ' → logprob: -12.514169692993164
    4. 'df' → logprob: -13.764169692993164
    5. '                   ' → logprob: -14.514169692993164
    6. 'd' → logprob: -15.264169692993164
    7. '                ' → logprob: -16.514169692993164
    8. '           ' → logprob: -16.764169692993164
    9. 'def' → logprob: -16.889169692993164
    10. 'DFS' → logprob: -17.139169692993164

Token 281: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.000553151941858232
    2. '(' → logprob: -7.500553131103516
    3. '(user' → logprob: -16.125553131103516
    4. '((' → logprob: -16.750553131103516
    5. 'u' → logprob: -17.500553131103516
    6. ' (' → logprob: -17.750553131103516
    7. '(ui' → logprob: -18.500553131103516
    8. '(up' → logprob: -18.750553131103516
    9. '(
' → logprob: -19.125553131103516
    10. '(U' → logprob: -19.250553131103516

Token 282: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.684157026233152e-05
    2. '(u' → logprob: -9.625077247619629
    3. 'u' → logprob: -11.750077247619629
    4. '[u' → logprob: -14.000077247619629
    5. ')
' → logprob: -14.125077247619629
    6. ')`' → logprob: -14.625077247619629
    7. '))' → logprob: -15.000077247619629
    8. ' )' → logprob: -15.125077247619629
    9. '(' → logprob: -15.875077247619629
    10. '())' → logprob: -18.625076293945312

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5291121602058411
    2. '   ' → logprob: -1.2791121006011963
    3. '
' → logprob: -2.1541121006011963
    4. '<|end|>' → logprob: -4.904112339019775
    5. '        
' → logprob: -5.529112339019775
    6. '    
' → logprob: -5.654112339019775
    7. '```' → logprob: -7.904112339019775
    8. '  
' → logprob: -7.904112339019775
    9. '           ' → logprob: -9.029111862182617
    10. '<|end|>' → logprob: -9.529111862182617

Token 284: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5052757859230042
    2. 'print' (adapté à ' print') → logprob: -1.0052757263183594
    3. '   ' → logprob: -3.5052757263183594
    4. ' print' → logprob: -7.380275726318359
    5. '        
' → logprob: -10.50527572631836
    6. '```' → logprob: -11.00527572631836
    7. '    
' → logprob: -11.88027572631836
    8. '
' → logprob: -12.75527572631836
    9. '	print' → logprob: -14.13027572631836
    10. '#print' → logprob: -15.50527572631836

Token 285: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -14.75000286102295
    4. '(f' → logprob: -15.75000286102295
    5. '(len' → logprob: -16.750003814697266
    6. 'cycle' → logprob: -17.125003814697266
    7. '((' → logprob: -17.625003814697266
    8. '('' → logprob: -17.625003814697266
    9. '(count' → logprob: -18.250003814697266
    10. '(C' → logprob: -18.375003814697266

Token 286: 'ycle' (ID: 13317)
  Prédit: 'ycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ycle' → logprob: -3.8889261304575484e-06
    2. 'cle' → logprob: -12.750003814697266
    3. 'cycle' → logprob: -15.000003814697266
    4. 'yle' → logprob: -15.250003814697266
    5. 'YCLE' → logprob: -15.625003814697266
    6. 'ycl' → logprob: -16.875003814697266
    7. 'ycles' → logprob: -17.125003814697266
    8. 'y' → logprob: -17.125003814697266
    9. 'le' → logprob: -17.375003814697266
    10. '[' → logprob: -17.625003814697266

Token 287: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: 0.0
    2. 'count' → logprob: -18.0
    3. '_' → logprob: -19.0
    4. '_cnt' → logprob: -20.375
    5. '_cont' → logprob: -20.625
    6. '_counts' → logprob: -21.375
    7. '_cycle' → logprob: -21.5
    8. '_c' → logprob: -21.625
    9. 'ount' → logprob: -21.75
    10. ' _' → logprob: -21.75

Token 288: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.259079363080673e-05
    2. '*' → logprob: -12.375012397766113
    3. '())' → logprob: -12.875012397766113
    4. ')
' → logprob: -13.375012397766113
    5. '()' → logprob: -13.625012397766113
    6. ' )' → logprob: -14.125012397766113
    7. '**' → logprob: -15.000012397766113
    8. ')#' → logprob: -15.250012397766113
    9. '))' → logprob: -15.500012397766113
    10. '*)' → logprob: -15.500012397766113

Token 289: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011071168817579746
    2. '__' → logprob: -4.51107120513916
    3. '_' → logprob: -10.88607120513916
    4. '___' → logprob: -13.76107120513916
    5. '_name' → logprob: -13.76107120513916
    6. 'name' → logprob: -14.13607120513916
    7. ' ___' → logprob: -14.38607120513916
    8. ' ' → logprob: -14.76107120513916
    9. ' "__' → logprob: -15.13607120513916
    10. ' ' → logprob: -15.38607120513916

Token 291: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.013012451119720936
    2. '==' → logprob: -4.763012409210205
    3. ' ==' → logprob: -5.638012409210205
    4. '__.__' → logprob: -7.763012409210205
    5. '=="' → logprob: -9.388012886047363
    6. ' __' → logprob: -9.763012886047363
    7. '__.' → logprob: -10.138012886047363
    8. '.__' → logprob: -10.263012886047363
    9. '()==' → logprob: -10.513012886047363
    10. 'name' → logprob: -10.763012886047363

Token 292: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.7120533811976202e-05
    2. '==' → logprob: -11.625017166137695
    3. '__.__' → logprob: -12.000017166137695
    4. '_' → logprob: -14.375017166137695
    5. ' ==' → logprob: -14.625017166137695
    6. '___' → logprob: -15.250017166137695
    7. '__.' → logprob: -15.250017166137695
    8. '____' → logprob: -16.125017166137695
    9. '__('' → logprob: -16.125017166137695
    10. '=="' → logprob: -17.250017166137695

Token 293: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3645746111869812
    2. '__' → logprob: -1.239574670791626
    3. '==' → logprob: -4.239574432373047
    4. '=="' → logprob: -7.864574432373047
    5. '=='' → logprob: -7.989574432373047
    6. '__.__' → logprob: -8.239574432373047
    7. ''' → logprob: -8.614574432373047
    8. '.__' → logprob: -9.239574432373047
    9. '"' → logprob: -9.489574432373047
    10. '_' → logprob: -10.364574432373047

Token 294: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029757438227534294
    2. ''' → logprob: -3.529757499694824
    3. '__' → logprob: -12.404757499694824
    4. ' "__' → logprob: -13.029757499694824
    5. ''"' → logprob: -15.404757499694824
    6. '"'' → logprob: -16.529756546020508
    7. '"user' → logprob: -16.529756546020508
    8. '"name' → logprob: -16.654756546020508
    9. ' '__' → logprob: -17.154756546020508
    10. '"class' → logprob: -17.654756546020508

Token 295: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2536267042160034
    2. '__' → logprob: -1.5036267042160034
    3. 'name' → logprob: -7.003626823425293
    4. ''' → logprob: -7.253626823425293
    5. '_main' → logprob: -10.628626823425293
    6. '"' → logprob: -11.003626823425293
    7. '__':
' → logprob: -11.253626823425293
    8. ''name' → logprob: -11.753626823425293
    9. '('__' → logprob: -12.253626823425293
    10. ' '__' → logprob: -12.378626823425293

Token 296: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.048671167343854904
    2. '__' → logprob: -3.048671245574951
    3. '__":
' → logprob: -9.923670768737793
    4. '__:' → logprob: -10.798670768737793
    5. '__.' → logprob: -11.923670768737793
    6. '':' → logprob: -12.923670768737793
    7. '__.__' → logprob: -13.673670768737793
    8. ':' → logprob: -13.923670768737793
    9. '()' → logprob: -14.298670768737793
    10. '('__' → logprob: -14.298670768737793

Token 297: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.024487584829330444
    2. 'main' → logprob: -3.8994874954223633
    3. '   ' → logprob: -6.024487495422363
    4. '	main' → logprob: -6.524487495422363
    5. '<|end|>' → logprob: -11.274487495422363
    6. ' ' → logprob: -11.399487495422363
    7. '(main' → logprob: -11.899487495422363
    8. '_main' → logprob: -12.149487495422363
    9. ' ' → logprob: -12.274487495422363
    10. '    
' → logprob: -12.399487495422363

Token 298: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.2729995988775045e-06
    2. ' main' → logprob: -12.000006675720215
    3. '	main' → logprob: -18.2500057220459
    4. '   ' → logprob: -20.0000057220459
    5. '_main' → logprob: -22.3750057220459
    6. 'import' → logprob: -23.0000057220459
    7. 'Main' → logprob: -23.2500057220459
    8. '(main' → logprob: -23.6250057220459
    9. '.main' → logprob: -24.1250057220459
    10. 'mainwindow' → logprob: -24.1250057220459

Token 299: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 297
Tokens correctement prédits (1ère position, stricte): 138
Tokens correctement prédits (1ère position, avec adaptation): 154
Tokens correctement prédits (top 10): 260
Précision stricte (1ère position): 46.46%
Précision adaptée (1ère position): 51.85%
Précision (top 10): 87.54%
================================================================================
