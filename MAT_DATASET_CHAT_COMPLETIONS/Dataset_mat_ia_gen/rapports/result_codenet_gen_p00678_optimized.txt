================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def dist(x1, y1, x2, y2):
    return math.hypot(x1 - x2, y1 - y2)

def can(x, y, sweets, t):
    # vérifier si max(distance/speed) <= t pour toutes les douceurs
    for (sx, sy, v) in sweets:
        if dist(x, y, sx, sy) / v > t:
            return False
    return True

def solve(sweets):
    # recherche binaire sur le temps minimal t
    left, right = 0.0, 150.0
    for _ in range(60):
        mid = (left + right) / 2
        found = False
        # On va chercher un point (x,y) tel que max dist/speed <= mid
        # La solution optimale se trouve à l'intersection de cercles dilatés
        # Pour simplifier on fait une recherche sur un maillage
        # mais ici on peut chercher sur des cercles de rayon mid*v autour des douceurs.
        # On essaye les points sur ces cercles intersections
        candidates = []
        for i, (x1, y1, v1) in enumerate(sweets):
            r1 = mid * v1
            candidates.append((x1, y1))
            for j in range(i + 1, len(sweets)):
                x2, y2, v2 = sweets[j]
                r2 = mid * v2
                d = dist(x1, y1, x2, y2)
                # si aucune intersection possible
                if d > r1 + r2 or d < abs(r1 - r2):
                    continue
                if d == 0 and r1 == r2:
                    # cercles égaux, prendre centre
                    candidates.append((x1, y1))
                    continue
                a = (r1*r1 - r2*r2 + d*d) / (2*d)
                h = math.sqrt(max(0.0, r1*r1 - a*a))
                xm = x1 + a*(x2 - x1)/d
                ym = y1 + a*(y2 - y1)/d
                xs1 = xm + h*(y2 - y1)/d
                ys1 = ym - h*(x2 - x1)/d
                xs2 = xm - h*(y2 - y1)/d
                ys2 = ym + h*(x2 - x1)/d
                candidates.append((xs1, ys1))
                candidates.append((xs2, ys2))
        # tester tous les candidats
        for cx, cy in candidates:
            if can(cx, cy, sweets, mid):
                found = True
                break
        if found:
            right = mid
        else:
            left = mid
    return right

input = sys.stdin.readline
while True:
    N = int(input())
    if N == 0:
        break
    sweets = [tuple(map(int, input().split())) for _ in range(N)]
    ans = solve(sweets)
    print(f"{ans:.8f}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3437388837337494
    2. '.' → logprob: -1.5937389135360718
    3. '<|end|>' → logprob: -2.9687387943267822
    4. '\' → logprob: -4.468739032745361
    5. 'import' → logprob: -5.093739032745361
    6. 'newline' → logprob: -5.093739032745361
    7. '<|end|>' → logprob: -5.968739032745361
    8. '' → logprob: -5.968739032745361
    9. '\r' → logprob: -6.093739032745361
    10. '
' → logprob: -6.343739032745361

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0001601539261173457
    2. 'os' → logprob: -8.750160217285156
    3. ' math' → logprob: -14.250160217285156
    4. '"os' → logprob: -15.125160217285156
    5. ' re' → logprob: -15.250160217285156
    6. ' json' → logprob: -15.875160217285156
    7. ' ' → logprob: -16.250160217285156
    8. '	os' → logprob: -16.500160217285156
    9. ' o' → logprob: -16.625160217285156
    10. '_os' → logprob: -16.750160217285156

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1023242399096489
    2. '\' → logprob: -3.6023242473602295
    3. '\n' → logprob: -3.9773242473602295
    4. 'import' → logprob: -4.35232400894165
    5. '<|end|>' → logprob: -4.60232400894165
    6. '```' → logprob: -4.72732400894165
    7. '
' → logprob: -4.85232400894165
    8. '

' → logprob: -5.47732400894165
    9. '' → logprob: -6.60232400894165
    10. '<|end|>' → logprob: -6.60232400894165

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22251643240451813
    2. '```' → logprob: -2.9725165367126465
    3. '\' → logprob: -3.0975165367126465
    4. '\n' → logprob: -3.2225165367126465
    5. 'import' → logprob: -3.4725165367126465
    6. ',' → logprob: -4.5975165367126465
    7. 'def' → logprob: -5.7225165367126465
    8. '*' → logprob: -5.8475165367126465
    9. '#' → logprob: -5.8475165367126465
    10. '(' → logprob: -6.2225165367126465

Token 7: ' dist' (ID: 3601)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023089634254574776
    2. ' calculate' → logprob: -4.273089408874512
    3. ' factorial' → logprob: -5.773089408874512
    4. ' space' → logprob: -6.148089408874512
    5. '_' → logprob: -7.023089408874512
    6. ' math' → logprob: -7.648089408874512
    7. ' compute' → logprob: -7.898089408874512
    8. ' e' → logprob: -8.023089408874512
    9. ' calc' → logprob: -9.023089408874512
    10. ' my' → logprob: -9.023089408874512

Token 8: '(x' (ID: 4061)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.060455191880464554
    2. '(' → logprob: -3.185455083847046
    3. '(a' → logprob: -4.185455322265625
    4. 'a' → logprob: -7.060455322265625
    5. '_' → logprob: -7.560455322265625
    6. ' an' → logprob: -8.435455322265625
    7. 'ANCE' → logprob: -8.435455322265625
    8. 'anc' → logprob: -9.435455322265625
    9. 'an' → logprob: -9.685455322265625
    10. '```' → logprob: -9.935455322265625

Token 9: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006937717087566853
    2. '1' → logprob: -5.506937503814697
    3. ',y' → logprob: -6.631937503814697
    4. ' ,' → logprob: -6.756937503814697
    5. ')' → logprob: -8.756937980651855
    6. '_,' → logprob: -9.256937980651855
    7. '2' → logprob: -10.756937980651855
    8. '[' → logprob: -10.756937980651855
    9. '_' → logprob: -10.881937980651855
    10. ',x' → logprob: -11.506937980651855

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001867326645879075
    2. ' ,' → logprob: -8.875186920166016
    3. ',x' → logprob: -10.000186920166016
    4. ',y' → logprob: -14.500186920166016
    5. ',
' → logprob: -15.500186920166016
    6. ',p' → logprob: -15.625186920166016
    7. '_,' → logprob: -15.875186920166016
    8. '<|end|>' → logprob: -16.250186920166016
    9. '‌,' → logprob: -16.250186920166016
    10. ',

' → logprob: -16.500186920166016

Token 11: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3001832962036133
    2. 'y' → logprob: -2.3001832962036133
    3. ' ' → logprob: -2.3001832962036133
    4. 'x' → logprob: -3.5501832962036133
    5. ' x' → logprob: -3.8001832962036133
    6. '<|end|>' → logprob: -5.050183296203613
    7. ',' → logprob: -7.675183296203613
    8. ' ,' → logprob: -7.800183296203613
    9. '<|end|>' → logprob: -8.675183296203613
    10. ')' → logprob: -8.925183296203613

Token 12: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00978170707821846
    2. ',' → logprob: -4.634781837463379
    3. '2' → logprob: -11.009781837463379
    4. ' ,' → logprob: -12.509781837463379
    5. ' ' → logprob: -13.009781837463379
    6. ')' → logprob: -14.009781837463379
    7. '_' → logprob: -14.259781837463379
    8. '_,' → logprob: -14.384781837463379
    9. ',x' → logprob: -15.009781837463379
    10. '\xe2\x82' → logprob: -15.134781837463379

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9027791495318525e-05
    2. '):' → logprob: -11.500019073486328
    3. ')' → logprob: -12.625019073486328
    4. ' ,' → logprob: -12.875019073486328
    5. ',x' → logprob: -13.125019073486328
    6. ',
' → logprob: -14.500019073486328
    7. '```' → logprob: -16.250019073486328
    8. ',

' → logprob: -16.375019073486328
    9. ',)' → logprob: -16.750019073486328
    10. '),' → logprob: -17.000019073486328

Token 14: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07889242470264435
    2. 'x' → logprob: -2.578892469406128
    3. ' ' → logprob: -13.328892707824707
    4. ',' → logprob: -14.203892707824707
    5. ' ,' → logprob: -15.953892707824707
    6. '	x' → logprob: -16.57889175415039
    7. ',x' → logprob: -17.07889175415039
    8. ' ' → logprob: -17.45389175415039
    9. '```' → logprob: -17.45389175415039
    10. ')' → logprob: -17.95389175415039

Token 15: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.339776832144707e-05
    2. ',' → logprob: -9.500082969665527
    3. '1' → logprob: -12.250082969665527
    4. '4' → logprob: -13.125082969665527
    5. ' ' → logprob: -14.125082969665527
    6. '₂' → logprob: -14.250082969665527
    7. ')' → logprob: -16.500083923339844
    8. ' ,' → logprob: -16.625083923339844
    9. '```' → logprob: -17.250083923339844
    10. '3' → logprob: -17.375083923339844

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ' ,' → logprob: -12.500006675720215
    3. ')' → logprob: -13.125006675720215
    4. ',y' → logprob: -14.875006675720215
    5. '),' → logprob: -16.1250057220459
    6. '‌,' → logprob: -16.3750057220459
    7. ',)' → logprob: -16.5000057220459
    8. ',
' → logprob: -17.0000057220459
    9. ',

' → logprob: -17.2500057220459
    10. '):' → logprob: -17.3750057220459

Token 17: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.057594504207372665
    2. ' ' → logprob: -3.3075945377349854
    3. 'y' → logprob: -4.057594299316406
    4. ' )' → logprob: -6.932594299316406
    5. ')' → logprob: -7.307594299316406
    6. ' x' → logprob: -8.557594299316406
    7. ' ' → logprob: -9.932594299316406
    8. ' ,' → logprob: -10.057594299316406
    9. '<|end|>' → logprob: -10.307594299316406
    10. '  ' → logprob: -10.557594299316406

Token 18: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003659929847344756
    2. '1' → logprob: -5.628659725189209
    3. ')' → logprob: -10.253660202026367
    4. ',' → logprob: -11.003660202026367
    5. ' ' → logprob: -12.628660202026367
    6. '3' → logprob: -13.628660202026367
    7. '):' → logprob: -13.878660202026367
    8. '₂' → logprob: -14.003660202026367
    9. '_' → logprob: -14.378660202026367
    10. '```' → logprob: -14.503660202026367

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036279852502048016
    2. ')' → logprob: -5.628627777099609
    3. ':' → logprob: -11.12862777709961
    4. ' ):' → logprob: -11.87862777709961
    5. '):
' → logprob: -12.12862777709961
    6. ''):' → logprob: -15.12862777709961
    7. '   ' → logprob: -15.75362777709961
    8. ')：' → logprob: -16.25362777709961
    9. ' ' → logprob: -16.87862777709961
    10. '}:' → logprob: -17.25362777709961

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022671823389828205
    2. ':' → logprob: -6.252267360687256
    3. ' return' → logprob: -9.127266883850098
    4. '    ' → logprob: -9.502266883850098
    5. ' ' → logprob: -9.627266883850098
    6. '  ' → logprob: -11.127266883850098
    7. ''' → logprob: -11.752266883850098
    8. 'return' → logprob: -11.752266883850098
    9. ':return' → logprob: -11.752266883850098
    10. '```' → logprob: -11.877266883850098

Token 21: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15640889108181
    2. ' return' → logprob: -2.2814087867736816
    3. 'return' (adapté à ' return') → logprob: -3.9064087867736816
    4. '    ' → logprob: -4.281408786773682
    5. ' ' → logprob: -5.281408786773682
    6. 'r' → logprob: -6.781408786773682
    7. ''' → logprob: -7.656408786773682
    8. '       ' → logprob: -7.906408786773682
    9. '"' → logprob: -8.03140926361084
    10. ' r' → logprob: -8.28140926361084

Token 22: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.024242796003818512
    2. ' ((' → logprob: -3.774242877960205
    3. 'math' → logprob: -7.649242877960205
    4. '(math' → logprob: -8.149242401123047
    5. ' ' → logprob: -9.274242401123047
    6. ' (' → logprob: -9.399242401123047
    7. ' int' → logprob: -10.649242401123047
    8. '((' → logprob: -11.149242401123047
    9. ' (((' → logprob: -11.774242401123047
    10. ' ' → logprob: -12.649242401123047

Token 23: '.h' (ID: 1508)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.3875395655632019
    2. '.' → logprob: -1.1375396251678467
    3. '.dist' → logprob: -8.012539863586426
    4. '.s' → logprob: -8.262539863586426
    5. '.atan' → logprob: -10.637539863586426
    6. '.h' → logprob: -11.012539863586426
    7. '.Sqrt' → logprob: -11.637539863586426
    8. '.pi' → logprob: -11.762539863586426
    9. '.pow' → logprob: -12.012539863586426
    10. ' .' → logprob: -12.512539863586426

Token 24: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -3.054500666621607e-06
    2. 'y' → logprob: -13.12500286102295
    3. 'hyp' → logprob: -14.37500286102295
    4. 'sqrt' → logprob: -15.87500286102295
    5. 'e' → logprob: -15.87500286102295
    6. 'a' → logprob: -16.250003814697266
    7. 'ype' → logprob: -17.250003814697266
    8. 'av' → logprob: -18.000003814697266
    9. 'yper' → logprob: -18.250003814697266
    10. 'eu' → logprob: -18.500003814697266

Token 25: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0009246804984286427
    2. 'o' → logprob: -7.000924587249756
    3. 'otp' → logprob: -12.250925064086914
    4. 'otl' → logprob: -13.000925064086914
    5. '.ot' → logprob: -13.750925064086914
    6. 'от' → logprob: -13.875925064086914
    7. '```' → logprob: -14.000925064086914
    8. '``' → logprob: -14.500925064086914
    9. 'ots' → logprob: -14.625925064086914
    10. '0' → logprob: -14.750925064086914

Token 26: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10094122588634491
    2. '(x' → logprob: -2.3509411811828613
    3. '((' → logprob: -7.225941181182861
    4. ' (' → logprob: -12.35094165802002
    5. '(
' → logprob: -13.97594165802002
    6. '(y' → logprob: -14.60094165802002
    7. '(abs' → logprob: -14.85094165802002
    8. '("("' → logprob: -15.72594165802002
    9. '(

' → logprob: -15.85094165802002
    10. '('' → logprob: -16.225940704345703

Token 27: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.038043782114982605
    2. '1' → logprob: -3.288043737411499
    3. ' -' → logprob: -13.788043975830078
    4. '_' → logprob: -14.038043975830078
    5. '₂' → logprob: -15.413043975830078
    6. '```' → logprob: -15.788043975830078
    7. ' ' → logprob: -16.163043975830078
    8. '' → logprob: -17.788043975830078
    9. '-' → logprob: -17.788043975830078
    10. '[' → logprob: -18.163043975830078

Token 28: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0789034515619278
    2. '-' → logprob: -2.5789034366607666
    3. '-x' → logprob: -11.328903198242188
    4. ',' → logprob: -14.078903198242188
    5. ' ' → logprob: -14.703903198242188
    6. ' –' → logprob: -15.203903198242188
    7. ' -
' → logprob: -17.328903198242188
    8. '   ' → logprob: -17.453903198242188
    9. '_' → logprob: -17.453903198242188
    10. ' ' → logprob: -17.828903198242188

Token 29: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6931540966033936
    2. ' x' → logprob: -0.6931540966033936
    3. '	x' → logprob: -12.318154335021973
    4. ' ' → logprob: -13.818154335021973
    5. ')x' → logprob: -14.568154335021973
    6. '<|end|>' → logprob: -14.693154335021973
    7. '(x' → logprob: -15.818154335021973
    8. ')' → logprob: -17.068153381347656
    9. ',x' → logprob: -17.193153381347656
    10. '$x' → logprob: -17.318153381347656

Token 30: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '1' → logprob: -16.2500057220459
    4. '3' → logprob: -16.5000057220459
    5. '```' → logprob: -16.6250057220459
    6. '₂' → logprob: -17.0000057220459
    7. '  ' → logprob: -18.1250057220459
    8. '２' → logprob: -18.5625057220459
    9. '   ' → logprob: -18.6250057220459
    10. '۲' → logprob: -19.2500057220459

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007195804500952363
    2. ' ,' → logprob: -7.2507195472717285
    3. ',y' → logprob: -12.250720024108887
    4. '),' → logprob: -13.000720024108887
    5. ',
' → logprob: -13.250720024108887
    6. ')' → logprob: -15.000720024108887
    7. ',

' → logprob: -16.25071907043457
    8. '`,' → logprob: -16.50071907043457
    9. '，' → logprob: -17.00071907043457
    10. ' ' → logprob: -17.12571907043457

Token 32: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.04300353676080704
    2. 'y' → logprob: -3.168003559112549
    3. ' ' → logprob: -13.04300308227539
    4. ' ' → logprob: -13.66800308227539
    5. '	y' → logprob: -14.54300308227539
    6. '(y' → logprob: -16.04300308227539
    7. ' (' → logprob: -16.04300308227539
    8. 'x' → logprob: -16.41800308227539
    9. ' x' → logprob: -16.41800308227539
    10. ')' → logprob: -16.91800308227539

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00761455949395895
    2. '2' → logprob: -4.882614612579346
    3. '-' → logprob: -12.632614135742188
    4. ' -' → logprob: -13.382614135742188
    5. '_' → logprob: -14.007614135742188
    6. ')' → logprob: -14.257614135742188
    7. '```' → logprob: -14.507614135742188
    8. '3' → logprob: -14.632614135742188
    9. ',' → logprob: -14.882614135742188
    10. ' ' → logprob: -15.132614135742188

Token 34: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0011727249948307872
    2. '-' → logprob: -6.7511725425720215
    3. '<|end|>' → logprob: -14.25117301940918
    4. ')' → logprob: -14.50117301940918
    5. ' ' → logprob: -14.62617301940918
    6. ',' → logprob: -15.12617301940918
    7. '<|end|>' → logprob: -15.62617301940918
    8. ' -
' → logprob: -15.87617301940918
    9. ' ' → logprob: -16.25117301940918
    10. ' –' → logprob: -17.00117301940918

Token 35: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.029750604182481766
    2. ' y' → logprob: -3.5297505855560303
    3. '	y' → logprob: -16.27975082397461
    4. 'x' → logprob: -16.90475082397461
    5. ')y' → logprob: -17.27975082397461
    6. ''y' → logprob: -18.02975082397461
    7. ' ' → logprob: -18.15475082397461
    8. '<|end|>' → logprob: -18.52975082397461
    9. '*y' → logprob: -19.27975082397461
    10. ')' → logprob: -19.65475082397461

Token 36: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1606796234846115
    2. '1' → logprob: -2.285679578781128
    3. ')' → logprob: -3.160679578781128
    4. '-' → logprob: -5.660679817199707
    5. ',' → logprob: -7.535679817199707
    6. ' -' → logprob: -8.910679817199707
    7. '<|end|>' → logprob: -10.285679817199707
    8. '_' → logprob: -10.410679817199707
    9. ' ' → logprob: -10.785679817199707
    10. ' )' → logprob: -11.285679817199707

Token 37: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -14.875000953674316
    3. ' )' → logprob: -15.625000953674316
    4. ')
' → logprob: -18.0
    5. '),' → logprob: -18.75
    6. ')))' → logprob: -19.375
    7. '')' → logprob: -19.5
    8. ')**' → logprob: -19.75
    9. ')`' → logprob: -19.75
    10. '}' → logprob: -20.0

Token 38: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05640913173556328
    2. 'd' → logprob: -3.8064091205596924
    3. '

' → logprob: -4.5564093589782715
    4. '\n' → logprob: -4.9314093589782715
    5. 'def' → logprob: -4.9314093589782715
    6. '\' → logprob: -6.0564093589782715
    7. '```' → logprob: -6.6814093589782715
    8. '' → logprob: -7.4314093589782715
    9. 'x' → logprob: -7.4314093589782715
    10. ' 
' → logprob: -7.5564093589782715

Token 39: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33729737997055054
    2. ' space' → logprob: -1.4622974395751953
    3. ' calculate' → logprob: -3.8372974395751953
    4. ' compute' → logprob: -4.962297439575195
    5. ' area' → logprob: -5.462297439575195
    6. ' find' → logprob: -5.587297439575195
    7. ' s' → logprob: -6.212297439575195
    8. ' a' → logprob: -6.337297439575195
    9. ' main' → logprob: -6.462297439575195
    10. ' solve' → logprob: -6.462297439575195

Token 40: '(x' (ID: 4061)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015950803644955158
    2. ' _' → logprob: -7.0015950202941895
    3. ' ' → logprob: -7.5015950202941895
    4. '_space' → logprob: -10.626595497131348
    5. 'I' → logprob: -10.876595497131348
    6. '_jump' → logprob: -10.876595497131348
    7. 'A' → logprob: -12.001595497131348
    8. '_accept' → logprob: -12.626595497131348
    9. '_s' → logprob: -12.876595497131348
    10. '_i' → logprob: -12.876595497131348

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10612630844116211
    2. ' ,' → logprob: -2.481126308441162
    3. '1' → logprob: -4.856126308441162
    4. ',y' → logprob: -5.606126308441162
    5. ')' → logprob: -5.856126308441162
    6. ' )' → logprob: -6.981126308441162
    7. '2' → logprob: -7.731126308441162
    8. ' ' → logprob: -7.856126308441162
    9. '_' → logprob: -8.73112678527832
    10. ',x' → logprob: -9.48112678527832

Token 42: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2519400119781494
    2. 'y' → logprob: -1.5019400119781494
    3. ' ' → logprob: -12.12693977355957
    4. '	y' → logprob: -13.37693977355957
    5. ')' → logprob: -13.50193977355957
    6. '<|end|>' → logprob: -13.87693977355957
    7. ')y' → logprob: -14.75193977355957
    8. '<|end|>' → logprob: -15.12693977355957
    9. ' )' → logprob: -15.56443977355957
    10. '   ' → logprob: -16.06443977355957

Token 43: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.577117383480072
    2. ',' → logprob: -1.0771174430847168
    3. ')' → logprob: -2.327117443084717
    4. ' ,' → logprob: -8.952116966247559
    5. ' ):' → logprob: -9.202116966247559
    6. '),' → logprob: -10.827116966247559
    7. ' )' → logprob: -11.077116966247559
    8. ':' → logprob: -11.327116966247559
    9. '):
' → logprob: -11.327116966247559
    10. ' ' → logprob: -12.452116966247559

Token 44: ' sweets' (ID: 107803)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.11200517416000366
    2. 'r' → logprob: -2.3620052337646484
    3. ' d' → logprob: -6.112005233764648
    4. ' x' → logprob: -6.362005233764648
    5. ' R' → logprob: -6.487005233764648
    6. ' radius' → logprob: -6.987005233764648
    7. ' n' → logprob: -7.237005233764648
    8. ' z' → logprob: -7.612005233764648
    9. 'x' → logprob: -7.737005233764648
    10. ' p' → logprob: -7.862005233764648

Token 45: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15885886549949646
    2. ',' → logprob: -2.0338587760925293
    3. ')' → logprob: -4.158858776092529
    4. ' ):' → logprob: -8.908859252929688
    5. 's' → logprob: -9.158859252929688
    6. '):
' → logprob: -10.658859252929688
    7. ' ,' → logprob: -10.658859252929688
    8. ':' → logprob: -10.783859252929688
    9. '[]):' → logprob: -11.033859252929688
    10. '[' → logprob: -11.033859252929688

Token 46: ' t' (ID: 260)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.6096652150154114
    2. ' k' → logprob: -2.3596651554107666
    3. ' radius' → logprob: -2.4846651554107666
    4. 'r' → logprob: -2.8596651554107666
    5. ' d' → logprob: -3.3596651554107666
    6. ' s' → logprob: -3.8596651554107666
    7. ' n' → logprob: -3.9846651554107666
    8. 'k' → logprob: -3.9846651554107666
    9. 's' → logprob: -4.359665393829346
    10. ' R' → logprob: -4.734665393829346

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3605417013168335
    2. ')' → logprob: -1.9855417013168335
    3. 'ime' → logprob: -2.485541820526123
    4. ',' → logprob: -2.735541820526123
    5. ' ):' → logprob: -4.485541820526123
    6. ' )' → logprob: -6.235541820526123
    7. 's' → logprob: -6.235541820526123
    8. 'e' → logprob: -7.610541820526123
    9. 'imes' → logprob: -8.110541343688965
    10. '=' → logprob: -8.360541343688965

Token 48: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055277492851018906
    2. ' :' → logprob: -3.4302775859832764
    3. '):' → logprob: -4.180277347564697
    4. '   ' → logprob: -5.430277347564697
    5. ' ' → logprob: -8.055277824401855
    6. ' ):' → logprob: -8.305277824401855
    7. ',' → logprob: -8.430277824401855
    8. '<|end|>' → logprob: -8.430277824401855
    9. ')' → logprob: -8.555277824401855
    10. '    ' → logprob: -8.680277824401855

Token 49: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4557158350944519
    2. '   ' → logprob: -2.2057158946990967
    3. ':' → logprob: -2.5807158946990967
    4. ')' → logprob: -2.5807158946990967
    5. '<|end|>' → logprob: -3.2057158946990967
    6. ' for' → logprob: -4.330715656280518
    7. '    ' → logprob: -4.455715656280518
    8. '  ' → logprob: -4.580715656280518
    9. ' :' → logprob: -4.830715656280518
    10. ' )' → logprob: -5.830715656280518

Token 50: ' vérifier' (ID: 93671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02823047898709774
    2. ')' → logprob: -4.403230667114258
    3. '    ' → logprob: -5.153230667114258
    4. '<|end|>' → logprob: -5.528230667114258
    5. '  ' → logprob: -6.903230667114258
    6. '   ' → logprob: -7.028230667114258
    7. ' )' → logprob: -7.153230667114258
    8. 's' → logprob: -7.278230667114258
    9. 'x' → logprob: -7.778230667114258
    10. '_' → logprob: -8.278230667114258

Token 51: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12944059073925018
    2. ' if' → logprob: -2.2544405460357666
    3. '<|end|>' → logprob: -4.879440784454346
    4. ',' → logprob: -6.379440784454346
    5. ' ,' → logprob: -7.004440784454346
    6. ' )' → logprob: -7.129440784454346
    7. ')' → logprob: -7.254440784454346
    8. ' whether' → logprob: -7.254440784454346
    9. '  ' → logprob: -7.379440784454346
    10. 's' → logprob: -7.504440784454346

Token 52: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26767367124557495
    2. ' all' → logprob: -3.2676737308502197
    3. ' on' → logprob: -3.6426737308502197
    4. ' (' → logprob: -3.8926737308502197
    5. ' x' → logprob: -4.017673492431641
    6. ' sweets' → logprob: -4.017673492431641
    7. 's' → logprob: -4.392673492431641
    8. ' len' → logprob: -4.767673492431641
    9. ' any' → logprob: -4.767673492431641
    10. ' ' → logprob: -5.017673492431641

Token 53: '(distance' (ID: 105203)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.8358137011528015
    2. ' dist' → logprob: -1.7108137607574463
    3. ' distance' → logprob: -2.2108137607574463
    4. 'dist' → logprob: -2.5858137607574463
    5. '_dist' → logprob: -2.8358137607574463
    6. '_' → logprob: -2.9608137607574463
    7. 'distance' → logprob: -3.7108137607574463
    8. ' ' → logprob: -4.335813522338867
    9. 'imum' → logprob: -4.585813522338867
    10. '(distance' → logprob: -5.085813522338867

Token 54: '/s' (ID: 5031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5083249807357788
    2. '(' → logprob: -1.5083249807357788
    3. 's' → logprob: -2.0083250999450684
    4. '(s' → logprob: -3.6333250999450684
    5. '(x' → logprob: -5.133325099945068
    6. ',' → logprob: -6.383325099945068
    7. ' ' → logprob: -6.883325099945068
    8. '<|end|>' → logprob: -6.883325099945068
    9. ' )' → logprob: -7.008325099945068
    10. 'entre' → logprob: -7.383325099945068

Token 55: 'peed' (ID: 6919)
  Prédit: 'peed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peed' → logprob: -0.2986883521080017
    2. ')' → logprob: -1.5486884117126465
    3. 't' → logprob: -4.2986884117126465
    4. 'e' → logprob: -5.0486884117126465
    5. ' )' → logprob: -5.0486884117126465
    6. 'up' → logprob: -5.1736884117126465
    7. 'u' → logprob: -5.7986884117126465
    8. ')t' → logprob: -6.7986884117126465
    9. '_' → logprob: -7.0486884117126465
    10. 'eed' → logprob: -7.1736884117126465

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.833997905254364
    2. ' <=' → logprob: -0.833997905254364
    3. ' )' → logprob: -2.208997964859009
    4. '<=' → logprob: -4.33399772644043
    5. ' ' → logprob: -5.70899772644043
    6. ')<=' → logprob: -5.83399772644043
    7. ',' → logprob: -7.08399772644043
    8. ' ' → logprob: -7.83399772644043
    9. ' *' → logprob: -8.33399772644043
    10. '*' → logprob: -8.58399772644043

Token 57: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1857503354549408
    2. ' ' → logprob: -1.9357503652572632
    3. '<=' → logprob: -4.810750484466553
    4. ' ==' → logprob: -5.560750484466553
    5. ')' → logprob: -5.685750484466553
    6. '  ' → logprob: -5.935750484466553
    7. ' >=' → logprob: -6.560750484466553
    8. '   ' → logprob: -6.810750484466553
    9. ' *' → logprob: -7.185750484466553
    10. '<|end|>' → logprob: -7.560750484466553

Token 58: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.14375166594982147
    2. 't' → logprob: -2.018751621246338
    3. ' ' → logprob: -7.518751621246338
    4. 's' → logprob: -8.393752098083496
    5. '1' → logprob: -8.768752098083496
    6. ' ' → logprob: -9.393752098083496
    7. ' s' → logprob: -10.018752098083496
    8. '0' → logprob: -12.268752098083496
    9. '`t' → logprob: -12.643752098083496
    10. '5' → logprob: -13.456252098083496

Token 59: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03214048966765404
    2. '   ' → logprob: -4.532140254974365
    3. '<|end|>' → logprob: -4.907140254974365
    4. ' :' → logprob: -5.907140254974365
    5. '):' → logprob: -6.032140254974365
    6. ':return' → logprob: -6.157140254974365
    7. ')' → logprob: -6.282140254974365
    8. ' ' → logprob: -6.782140254974365
    9. ':
' → logprob: -6.907140254974365
    10. '
' → logprob: -7.532140254974365

Token 60: ' toutes' (ID: 17502)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.09296602010726929
    2. ' ' → logprob: -3.717966079711914
    3. ' i' → logprob: -4.467966079711914
    4. 'all' → logprob: -4.592966079711914
    5. ' chaque' → logprob: -4.592966079711914
    6. ' toutes' → logprob: -4.967966079711914
    7. ' ' → logprob: -5.217966079711914
    8. ' every' → logprob: -5.467966079711914
    9. ' each' → logprob: -5.467966079711914
    10. ' a' → logprob: -5.592966079711914

Token 61: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' douce' (ID: 69777)
  Prédit: ' sweet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sweet' → logprob: -1.0583150386810303
    2. ' sweets' → logprob: -1.0583150386810303
    3. 's' → logprob: -1.9333150386810303
    4. 'sweet' → logprob: -2.9333150386810303
    5. ' s' → logprob: -3.0583150386810303
    6. ' ' → logprob: -4.308315277099609
    7. ')' → logprob: -4.558315277099609
    8. '<|end|>' → logprob: -5.058315277099609
    9. '	s' → logprob: -6.058315277099609
    10. '_s' → logprob: -6.245815277099609

Token 63: 'urs' (ID: 1628)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01663258671760559
    2. 'urs' → logprob: -4.391632556915283
    3. 'r' → logprob: -6.141632556915283
    4. 'ur' → logprob: -7.141632556915283
    5. 'u' → logprob: -8.141633033752441
    6. 'rs' → logprob: -8.141633033752441
    7. ' ' → logprob: -8.391633033752441
    8. '   ' → logprob: -8.891633033752441
    9. ')' → logprob: -9.891633033752441
    10. 'ss' → logprob: -10.516633033752441

Token 64: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017218854278326035
    2. '   ' → logprob: -4.892219066619873
    3. ' :' → logprob: -5.642219066619873
    4. '):' → logprob: -6.392219066619873
    5. '<|end|>' → logprob: -6.642219066619873
    6. ':return' → logprob: -7.017219066619873
    7. ':
' → logprob: -7.767219066619873
    8. ',' → logprob: -8.017218589782715
    9. ' ' → logprob: -8.142218589782715
    10. '  ' → logprob: -8.267218589782715

Token 65: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010317382402718067
    2. '):' → logprob: -7.626031875610352
    3. '   ' → logprob: -8.501031875610352
    4. ' :' → logprob: -8.876031875610352
    5. ':
' → logprob: -9.501031875610352
    6. ')' → logprob: -10.001031875610352
    7. ':return' → logprob: -10.626031875610352
    8. ',' → logprob: -11.001031875610352
    9. ' ' → logprob: -11.251031875610352
    10. '.' → logprob: -12.376031875610352

Token 66: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01134123932570219
    2. ' :' → logprob: -5.011341094970703
    3. ' ' → logprob: -6.261341094970703
    4. '):' → logprob: -7.011341094970703
    5. '<|end|>' → logprob: -7.261341094970703
    6. ')' → logprob: -8.136341094970703
    7. '   ' → logprob: -8.636341094970703
    8. '.' → logprob: -9.136341094970703
    9. '  ' → logprob: -9.261341094970703
    10. ' ):' → logprob: -9.636341094970703

Token 67: ' (' (ID: 350)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.563543975353241
    2. ' sx' → logprob: -1.0635440349578857
    3. ' sw' → logprob: -4.063543796539307
    4. ' ' → logprob: -4.313543796539307
    5. ' sweet' → logprob: -4.438543796539307
    6. ' (' → logprob: -4.688543796539307
    7. ' i' → logprob: -4.938543796539307
    8. 'sx' → logprob: -5.063543796539307
    9. ' x' → logprob: -5.188543796539307
    10. 's' → logprob: -5.438543796539307

Token 68: 'sx' (ID: 102754)
  Prédit: 'sx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.09596754610538483
    2. 'x' → logprob: -3.2209675312042236
    3. 'xs' → logprob: -3.7209675312042236
    4. 's' → logprob: -4.095967769622803
    5. ' sx' → logprob: -5.845967769622803
    6. 'xi' → logprob: -5.970967769622803
    7. ')' → logprob: -6.470967769622803
    8. 'dx' → logprob: -7.595967769622803
    9. 'sweet' → logprob: -7.595967769622803
    10. 'a' → logprob: -7.720967769622803

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014271405525505543
    2. 'x' → logprob: -7.126427173614502
    3. ' ,' → logprob: -7.876427173614502
    4. 's' → logprob: -8.626426696777344
    5. ')' → logprob: -10.626426696777344
    6. ',s' → logprob: -11.251426696777344
    7. ',x' → logprob: -11.376426696777344
    8. '_x' → logprob: -11.876426696777344
    9. '_' → logprob: -13.876426696777344
    10. ',)' → logprob: -14.001426696777344

Token 70: ' sy' (ID: 6157)
  Prédit: ' sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sy' → logprob: -0.0701373815536499
    2. 'sy' → logprob: -2.6951375007629395
    3. '_sy' → logprob: -9.195137023925781
    4. '<|end|>' → logprob: -9.820137023925781
    5. 's' → logprob: -10.820137023925781
    6. '.sy' → logprob: -11.570137023925781
    7. ' ' → logprob: -12.445137023925781
    8. ')' → logprob: -12.695137023925781
    9. 'syz' → logprob: -12.820137023925781
    10. ' ' → logprob: -13.320137023925781

Token 71: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039085377007722855
    2. ',' → logprob: -3.2890853881835938
    3. '),' → logprob: -7.164085388183594
    4. ' in' → logprob: -9.164085388183594
    5. ' )' → logprob: -9.414085388183594
    6. 'in' → logprob: -10.664085388183594
    7. ',)' → logprob: -10.664085388183594
    8. ' ,' → logprob: -11.039085388183594
    9. 's' → logprob: -11.289085388183594
    10. ' ' → logprob: -12.914085388183594

Token 72: ' v' (ID: 323)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9412898421287537
    2. ' d' → logprob: -2.1912899017333984
    3. ' time' → logprob: -2.1912899017333984
    4. ' st' → logprob: -2.3162899017333984
    5. ' v' → logprob: -2.9412899017333984
    6. ' speed' → logprob: -3.0662899017333984
    7. 's' → logprob: -3.4412899017333984
    8. ' sp' → logprob: -3.4412899017333984
    9. 'd' → logprob: -3.9412899017333984
    10. ' ts' → logprob: -4.191289901733398

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011990397470071912
    2. 'el' → logprob: -7.126199245452881
    3. ',' → logprob: -8.626198768615723
    4. 's' → logprob: -9.501198768615723
    5. ' )' → logprob: -10.126198768615723
    6. 'e' → logprob: -10.751198768615723
    7. 'alue' → logprob: -11.126198768615723
    8. '),' → logprob: -11.126198768615723
    9. 'al' → logprob: -11.376198768615723
    10. ')s' → logprob: -11.751198768615723

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20688311755657196
    2. 'in' → logprob: -1.7068830728530884
    3. ')' → logprob: -5.456882953643799
    4. ',' → logprob: -7.081882953643799
    5. ' )' → logprob: -9.206883430480957
    6. 's' → logprob: -9.206883430480957
    7. ' ,' → logprob: -9.956883430480957
    8. ' ' → logprob: -10.331883430480957
    9. '<|end|>' → logprob: -11.206883430480957
    10. '	in' → logprob: -11.456883430480957

Token 75: ' sweets' (ID: 107803)
  Prédit: ' sweets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sweets' → logprob: -0.011104532517492771
    2. 's' → logprob: -4.511104583740234
    3. ' sweet' → logprob: -11.011104583740234
    4. ' ' → logprob: -11.261104583740234
    5. 'sweet' → logprob: -11.511104583740234
    6. ' s' → logprob: -12.011104583740234
    7. '	s' → logprob: -12.136104583740234
    8. 'weets' → logprob: -13.136104583740234
    9. ' sweetness' → logprob: -13.636104583740234
    10. '[s' → logprob: -14.261104583740234

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013596400385722518
    2. '):' → logprob: -6.626359462738037
    3. ' :' → logprob: -10.876359939575195
    4. ',' → logprob: -12.126359939575195
    5. ':**' → logprob: -12.501359939575195
    6. '<|end|>' → logprob: -13.251359939575195
    7. ':
' → logprob: -13.876359939575195
    8. '>:' → logprob: -14.376359939575195
    9. ')' → logprob: -14.626359939575195
    10. ']:' → logprob: -15.126359939575195

Token 77: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029886675998568535
    2. '       ' → logprob: -4.404886722564697
    3. '):' → logprob: -4.779886722564697
    4. '<|end|>' → logprob: -5.529886722564697
    5. ',' → logprob: -5.654886722564697
    6. ')' → logprob: -7.529886722564697
    7. '   ' → logprob: -8.279886245727539
    8. '<|end|>' → logprob: -9.154886245727539
    9. ':
' → logprob: -9.529886245727539
    10. ' :' → logprob: -9.654886245727539

Token 78: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.05656201392412186
    2. ' ' → logprob: -2.9315619468688965
    3. 'dist' → logprob: -6.6815619468688965
    4. ' ' → logprob: -8.931562423706055
    5. '	dist' → logprob: -9.931562423706055
    6. ' (' → logprob: -9.931562423706055
    7. ' max' → logprob: -10.306562423706055
    8. '(dist' → logprob: -10.306562423706055
    9. ' math' → logprob: -10.556562423706055
    10. ' d' → logprob: -10.556562423706055

Token 80: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6334179043769836
    2. '(' → logprob: -0.7584179043769836
    3. '<|end|>' → logprob: -7.383418083190918
    4. '(s' → logprob: -8.758418083190918
    5. '(
' → logprob: -11.258418083190918
    6. '((' → logprob: -11.508418083190918
    7. ' (' → logprob: -12.633418083190918
    8. ')' → logprob: -12.758418083190918
    9. 'x' → logprob: -13.008418083190918
    10. '(xs' → logprob: -13.133418083190918

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005326962564140558
    2. ',s' → logprob: -5.755326747894287
    3. ' ,' → logprob: -7.005326747894287
    4. '<|end|>' → logprob: -7.755326747894287
    5. ',y' → logprob: -8.130327224731445
    6. ',x' → logprob: -8.130327224731445
    7. '(s' → logprob: -9.380327224731445
    8. ' ' → logprob: -9.755327224731445
    9. '(x' → logprob: -10.130327224731445
    10. '(' → logprob: -10.630327224731445

Token 82: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.007096354383975267
    2. ' y' → logprob: -5.007096290588379
    3. '<|end|>' → logprob: -8.757096290588379
    4. 'sx' → logprob: -8.882096290588379
    5. 's' → logprob: -9.507096290588379
    6. ' ' → logprob: -13.132096290588379
    7. '	y' → logprob: -13.382096290588379
    8. ' sx' → logprob: -13.757096290588379
    9. 'sy' → logprob: -13.882096290588379
    10. ''y' → logprob: -14.007096290588379

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007687077857553959
    2. ' ,' → logprob: -5.007687091827393
    3. ',s' → logprob: -7.007687091827393
    4. '<|end|>' → logprob: -10.257686614990234
    5. ',x' → logprob: -10.632686614990234
    6. ' ' → logprob: -13.007686614990234
    7. ',S' → logprob: -13.757686614990234
    8. ')' → logprob: -14.007686614990234
    9. '(s' → logprob: -14.882686614990234
    10. 's' → logprob: -15.132686614990234

Token 84: ' sx' (ID: 39428)
  Prédit: ' sx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sx' → logprob: -0.07119038701057434
    2. 'sx' → logprob: -2.696190357208252
    3. 's' → logprob: -6.946190357208252
    4. ' ' → logprob: -8.94619083404541
    5. ' s' → logprob: -9.44619083404541
    6. ')' → logprob: -11.07119083404541
    7. ' ' → logprob: -11.07119083404541
    8. '	s' → logprob: -11.19619083404541
    9. ' )' → logprob: -11.94619083404541
    10. ' 
' → logprob: -12.19619083404541

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6338634490966797
    2. ')' → logprob: -0.7588634490966797
    3. ' ,' → logprob: -7.50886344909668
    4. ' )' → logprob: -7.63386344909668
    5. ')>' → logprob: -8.88386344909668
    6. ')**' → logprob: -10.75886344909668
    7. ' ' → logprob: -11.00886344909668
    8. '),' → logprob: -11.38386344909668
    9. '<|end|>' → logprob: -11.75886344909668
    10. ',)' → logprob: -12.00886344909668

Token 86: ' sy' (ID: 6157)
  Prédit: ' sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sy' → logprob: -0.47409170866012573
    2. 'sy' → logprob: -0.9740917086601257
    3. '_sy' → logprob: -11.974091529846191
    4. '.sy' → logprob: -12.599091529846191
    5. ' ' → logprob: -13.224091529846191
    6. 's' → logprob: -13.349091529846191
    7. 'syz' → logprob: -15.099091529846191
    8. ' s' → logprob: -15.474091529846191
    9. 'Sy' → logprob: -15.474091529846191
    10. ' ' → logprob: -15.849091529846191

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008968721143901348
    2. ')/' → logprob: -4.883968830108643
    3. ' )' → logprob: -6.758968830108643
    4. ')>' → logprob: -9.133968353271484
    5. ' /' → logprob: -10.008968353271484
    6. '/' → logprob: -10.633968353271484
    7. ')/(' → logprob: -12.008968353271484
    8. '/)' → logprob: -12.758968353271484
    9. '>' → logprob: -12.883968353271484
    10. ' >' → logprob: -12.883968353271484

Token 88: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.10059105604887009
    2. ' /' → logprob: -2.350590944290161
    3. '>' → logprob: -8.350590705871582
    4. ' >' → logprob: -9.475590705871582
    5. '/>' → logprob: -10.475590705871582
    6. ' ' → logprob: -11.100590705871582
    7. '/s' → logprob: -11.725590705871582
    8. '/v' → logprob: -11.850590705871582
    9. ' />' → logprob: -12.100590705871582
    10. ' ' → logprob: -13.350590705871582

Token 89: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02975071594119072
    2. ' v' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.65475082397461
    4. '	v' → logprob: -16.90475082397461
    5. '<|end|>' → logprob: -17.27975082397461
    6. 's' → logprob: -18.77975082397461
    7. ')v' → logprob: -18.77975082397461
    8. '
' → logprob: -19.27975082397461
    9. ' vmax' → logprob: -19.40475082397461
    10. 'vq' → logprob: -19.52975082397461

Token 90: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.010975540615618229
    2. ' ' → logprob: -5.010975360870361
    3. '>' → logprob: -5.510975360870361
    4. '<|end|>' → logprob: -9.13597583770752
    5. ')' → logprob: -9.38597583770752
    6. ')>' → logprob: -12.76097583770752
    7. '<|end|>' → logprob: -12.76097583770752
    8. '  ' → logprob: -13.01097583770752
    9. ' )' → logprob: -13.13597583770752
    10. '">' → logprob: -14.26097583770752

Token 91: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.00043674863991327584
    2. 't' → logprob: -8.000436782836914
    3. ' ' → logprob: -9.250436782836914
    4. ' ' → logprob: -12.250436782836914
    5. '	t' → logprob: -16.000436782836914
    6. 's' → logprob: -16.500436782836914
    7. ' s' → logprob: -16.875436782836914
    8. '<|end|>' → logprob: -16.875436782836914
    9. ' ‌' → logprob: -17.125436782836914
    10. ' 
' → logprob: -17.625436782836914

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024259560741484165
    2. ' :' → logprob: -6.5024261474609375
    3. ':return' → logprob: -7.5024261474609375
    4. ':
' → logprob: -8.002426147460938
    5. '):' → logprob: -11.002426147460938
    6. ' :
' → logprob: -12.002426147460938
    7. ' return' → logprob: -12.627426147460938
    8. '   ' → logprob: -12.877426147460938
    9. ')' → logprob: -13.002426147460938
    10. ' ' → logprob: -13.002426147460938

Token 93: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6384267210960388
    2. ' ' → logprob: -1.6384267807006836
    3. ' return' → logprob: -2.1384267807006836
    4. '       ' → logprob: -3.3884267807006836
    5. ':' → logprob: -3.6384267807006836
    6. '
' → logprob: -3.7634267807006836
    7. '1' → logprob: -4.263426780700684
    8. ' :' → logprob: -4.638426780700684
    9. 'return' → logprob: -4.888426780700684
    10. '           ' → logprob: -5.013426780700684

Token 94: ' return' (ID: 622)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3000886142253876
    2. ' return' → logprob: -1.55008864402771
    3. 'return' (adapté à ' return') → logprob: -3.17508864402771
    4. ' ' → logprob: -6.425088405609131
    5. 'r' → logprob: -6.550088405609131
    6. '
' → logprob: -7.425088405609131
    7. ' 

' → logprob: -7.675088405609131
    8. '       ' → logprob: -8.050088882446289
    9. '	return' → logprob: -8.675088882446289
    10. ' ' → logprob: -8.925088882446289

Token 95: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6931481957435608
    2. 'False' → logprob: -0.6931481957435608
    3. ' ' → logprob: -14.443148612976074
    4. 'F' → logprob: -15.193148612976074
    5. ' True' → logprob: -17.068147659301758
    6. 'True' → logprob: -17.318147659301758
    7. ' F' → logprob: -17.693147659301758
    8. ' ' → logprob: -18.443147659301758
    9. '(False' → logprob: -18.693147659301758
    10. '  ' → logprob: -19.818147659301758

Token 96: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15405750274658203
    2. '   ' → logprob: -2.029057502746582
    3. 'return' → logprob: -5.654057502746582
    4. '<|end|>' → logprob: -6.279057502746582
    5. '    
' → logprob: -6.654057502746582
    6. ' 
' → logprob: -6.904057502746582
    7. '\n' → logprob: -7.029057502746582
    8. ' return' → logprob: -7.279057502746582
    9. '  
' → logprob: -7.529057502746582
    10. '	return' → logprob: -7.779057502746582

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12628330290317535
    2. '
' → logprob: -2.2512834072113037
    3. 'return' → logprob: -4.876283168792725
    4. ' return' → logprob: -6.501283168792725
    5. '    
' → logprob: -6.626283168792725
    6. '	return' → logprob: -7.501283168792725
    7. '  
' → logprob: -7.751283168792725
    8. ' 
' → logprob: -8.126283645629883
    9. '<|end|>' → logprob: -8.376283645629883
    10. '  ' → logprob: -8.751283645629883

Token 98: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14345860481262207
    2. 'return' (adapté à ' return') → logprob: -2.518458604812622
    3. '
' → logprob: -3.393458604812622
    4. ' return' → logprob: -4.643458366394043
    5. 'True' → logprob: -5.643458366394043
    6. '	return' → logprob: -6.893458366394043
    7. '  
' → logprob: -6.893458366394043
    8. '    
' → logprob: -7.268458366394043
    9. '  ' → logprob: -7.518458366394043
    10. ' ' → logprob: -7.643458366394043

Token 99: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.12692810595035553
    2. 'True' → logprob: -2.1269280910491943
    3. ' ' → logprob: -18.001928329467773
    4. ' Tru' → logprob: -18.751928329467773
    5. '(True' → logprob: -19.501928329467773
    6. '=True' → logprob: -19.751928329467773
    7. ' ' → logprob: -20.876928329467773
    8. '.True' → logprob: -22.501928329467773
    9. ' 
' → logprob: -22.626928329467773
    10. '   ' → logprob: -22.626928329467773

Token 100: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0904914140701294
    2. ' ' → logprob: -1.5904914140701294
    3. '\n' → logprob: -2.09049129486084
    4. ' 
' → logprob: -2.46549129486084
    5. '

' → logprob: -2.96549129486084
    6. '<|end|>' → logprob: -2.96549129486084
    7. 'n' → logprob: -3.21549129486084
    8. '\' → logprob: -3.21549129486084
    9. ' 

' → logprob: -3.96549129486084
    10. '#' → logprob: -4.59049129486084

Token 101: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.28738370537757874
    2. 'def' → logprob: -1.5373836755752563
    3. '#' → logprob: -4.162383556365967
    4. '\' → logprob: -4.912383556365967
    5. '
' → logprob: -5.162383556365967
    6. '

' → logprob: -5.912383556365967
    7. '' → logprob: -7.162383556365967
    8. 'n' → logprob: -7.287383556365967
    9. 'i' → logprob: -8.412384033203125
    10. '\n' → logprob: -8.537384033203125

Token 102: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10889312624931335
    2. ' binary' → logprob: -2.8588931560516357
    3. ' solve' → logprob: -3.8588931560516357
    4. ' find' → logprob: -4.233892917633057
    5. ' max' → logprob: -6.108892917633057
    6. ' best' → logprob: -6.358892917633057
    7. ' search' → logprob: -6.983892917633057
    8. ' space' → logprob: -6.983892917633057
    9. ' check' → logprob: -7.358892917633057
    10. ' can' → logprob: -7.608892917633057

Token 103: '(s' (ID: 1858)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.021572938188910484
    2. '(' → logprob: -3.8965728282928467
    3. '(x' → logprob: -7.896573066711426
    4. '()' → logprob: -8.021573066711426
    5. ' ():' → logprob: -8.396573066711426
    6. '(t' → logprob: -10.271573066711426
    7. '(s' → logprob: -11.021573066711426
    8. ' (' → logprob: -11.021573066711426
    9. '(a' → logprob: -11.646573066711426
    10. '()(' → logprob: -12.021573066711426

Token 104: 'weets' (ID: 41143)
  Prédit: 'weets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weets' → logprob: -0.0066946460865437984
    2. 'w' → logprob: -6.506694793701172
    3. ')' → logprob: -6.756694793701172
    4. 'we' → logprob: -7.006694793701172
    5. 'x' → logprob: -7.256694793701172
    6. 'n' → logprob: -7.506694793701172
    7. '=' → logprob: -7.631694793701172
    8. 's' → logprob: -8.131694793701172
    9. ',' → logprob: -8.381694793701172
    10. '))' → logprob: -9.006694793701172

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0165486391633749
    2. ',' → logprob: -4.1415486335754395
    3. ' ):' → logprob: -8.641549110412598
    4. ':' → logprob: -8.891549110412598
    5. '):
' → logprob: -9.141549110412598
    6. ')' → logprob: -9.641549110412598
    7. '[]):' → logprob: -12.266549110412598
    8. ' :' → logprob: -12.516549110412598
    9. '   ' → logprob: -12.641549110412598
    10. ']:' → logprob: -12.766549110412598

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016800228506326675
    2. '    
' → logprob: -5.266800403594971
    3. ' 
' → logprob: -5.391800403594971
    4. '
' → logprob: -6.141800403594971
    5. ' import' → logprob: -6.266800403594971
    6. '<|end|>' → logprob: -7.141800403594971
    7. '    ' → logprob: -7.516800403594971
    8. '```' → logprob: -8.391799926757812
    9. '  
' → logprob: -8.891799926757812
    10. ' ' → logprob: -8.891799926757812

Token 107: ' #' (ID: 1069)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.40882226824760437
    2. ' left' → logprob: -1.7838222980499268
    3. '   ' → logprob: -2.4088222980499268
    4. 'low' → logprob: -3.5338222980499268
    5. ' lo' → logprob: -4.158822059631348
    6. 'left' → logprob: -4.408822059631348
    7. ' l' → logprob: -4.908822059631348
    8. ' n' → logprob: -6.033822059631348
    9. ' lows' → logprob: -6.158822059631348
    10. ' lef' → logprob: -6.533822059631348

Token 108: ' recherche' (ID: 24975)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.819159746170044
    2. ' left' → logprob: -1.194159746170044
    3. ' n' → logprob: -1.819159746170044
    4. ' lo' → logprob: -3.944159746170044
    5. 'left' → logprob: -4.194159507751465
    6. ' l' → logprob: -4.194159507751465
    7. ' x' → logprob: -4.694159507751465
    8. 'low' → logprob: -4.819159507751465
    9. ' L' → logprob: -5.444159507751465
    10. '   ' → logprob: -5.444159507751465

Token 109: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2332623153924942
    2. ' ' → logprob: -2.483262300491333
    3. '<|end|>' → logprob: -3.358262300491333
    4. '  ' → logprob: -3.858262300491333
    5. 'def' → logprob: -4.358262538909912
    6. ' x' → logprob: -4.608262538909912
    7. '    ' → logprob: -4.608262538909912
    8. ' d' → logprob: -5.358262538909912
    9. '<|end|>' → logprob: -5.358262538909912
    10. 'x' → logprob: -5.858262538909912

Token 110: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4048752784729004
    2. 'i' → logprob: -1.5298752784729004
    3. 'inary' → logprob: -2.2798752784729004
    4. 'inaire' → logprob: -5.0298752784729
    5. ' in' → logprob: -6.6548752784729
    6. 'iné' → logprob: -6.7798752784729
    7. 'y' → logprob: -6.9048752784729
    8. '   ' → logprob: -7.5298752784729
    9. ' i' → logprob: -7.6548752784729
    10. 'ina' → logprob: -7.7798752784729

Token 111: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7468993067741394
    2. ':' → logprob: -1.3718993663787842
    3. '    ' → logprob: -2.746899366378784
    4. '<|end|>' → logprob: -2.746899366378784
    5. ' ' → logprob: -2.871899366378784
    6. ' :' → logprob: -2.996899366378784
    7. ' 
' → logprob: -4.496899127960205
    8. '    
' → logprob: -4.871899127960205
    9. ' :
' → logprob: -5.746899127960205
    10. '  ' → logprob: -5.996899127960205

Token 112: ' le' (ID: 505)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.022047316655516624
    2. 't' → logprob: -4.272047519683838
    3. ' ' → logprob: -5.147047519683838
    4. ' la' → logprob: -7.022047519683838
    5. ' l' → logprob: -8.02204704284668
    6. ' le' → logprob: -8.02204704284668
    7. ' the' → logprob: -9.39704704284668
    8. 'l' → logprob: -9.89704704284668
    9. ' les' → logprob: -10.27204704284668
    10. '<|end|>' → logprob: -10.27204704284668

Token 113: ' temps' (ID: 11160)
  Prédit: ' temps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temps' → logprob: -0.47057032585144043
    2. ' t' → logprob: -1.0955703258514404
    3. 'temps' → logprob: -3.8455703258514404
    4. 't' → logprob: -4.0955705642700195
    5. ' ' → logprob: -6.2205705642700195
    6. ' time' → logprob: -7.5955705642700195
    7. ' temp' → logprob: -9.09557056427002
    8. 'temp' → logprob: -10.09557056427002
    9. '```' → logprob: -10.59557056427002
    10. '  ' → logprob: -10.72057056427002

Token 114: ' minimal' (ID: 19957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018405575305223465
    2. '    
' → logprob: -5.393405437469482
    3. '    ' → logprob: -5.768405437469482
    4. ',' → logprob: -6.018405437469482
    5. ' ' → logprob: -6.268405437469482
    6. '<|end|>' → logprob: -6.268405437469482
    7. ':' → logprob: -6.768405437469482
    8. '
' → logprob: -6.893405437469482
    9. ' 
' → logprob: -7.268405437469482
    10. '  ' → logprob: -7.643405437469482

Token 115: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5374862551689148
    2. ' ' → logprob: -2.1624863147735596
    3. '<|end|>' → logprob: -2.1624863147735596
    4. ':' → logprob: -2.4124863147735596
    5. '    ' → logprob: -3.7874863147735596
    6. ',' → logprob: -4.0374860763549805
    7. '    
' → logprob: -4.0374860763549805
    8. ' 
' → logprob: -4.6624860763549805
    9. ' :' → logprob: -4.9124860763549805
    10. '
' → logprob: -5.2874860763549805

Token 116: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022843334823846817
    2. '<|end|>' → logprob: -5.022843360900879
    3. ' ' → logprob: -5.397843360900879
    4. '    
' → logprob: -5.522843360900879
    5. '    ' → logprob: -6.022843360900879
    6. ':' → logprob: -7.022843360900879
    7. ',' → logprob: -7.147843360900879
    8. ' 
' → logprob: -7.272843360900879
    9. '
' → logprob: -7.397843360900879
    10. '  ' → logprob: -7.397843360900879

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040558572858572006
    2. '    ' → logprob: -4.665558338165283
    3. '    
' → logprob: -4.915558338165283
    4. ' ' → logprob: -5.040558338165283
    5. ' 
' → logprob: -5.290558338165283
    6. ':' → logprob: -5.665558338165283
    7. ',' → logprob: -6.040558338165283
    8. '
' → logprob: -6.290558338165283
    9. '     
' → logprob: -6.290558338165283
    10. ' ,' → logprob: -7.915558338165283

Token 118: ' left' (ID: 3561)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.18897059559822083
    2. ' l' → logprob: -2.6889705657958984
    3. ' lo' → logprob: -3.1889705657958984
    4. ' left' → logprob: -3.1889705657958984
    5. 'low' → logprob: -4.188970565795898
    6. ' 
' → logprob: -6.563970565795898
    7. 'l' → logprob: -6.688970565795898
    8. ' L' → logprob: -6.938970565795898
    9. 'left' (adapté à ' left') → logprob: -7.063970565795898
    10. 'lo' → logprob: -7.313970565795898

Token 119: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0682077705860138
    2. '=' → logprob: -2.8182077407836914
    3. ',' → logprob: -5.568207740783691
    4. ' ' → logprob: -6.193207740783691
    5. '<|end|>' → logprob: -8.443207740783691
    6. ' ,' → logprob: -10.068207740783691
    7. ':' → logprob: -10.068207740783691
    8. ' =
' → logprob: -10.318207740783691
    9. '<|end|>' → logprob: -11.193207740783691
    10. ')' → logprob: -13.193207740783691

Token 120: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.02993989735841751
    2. 'right' → logprob: -3.529939889907837
    3. ' ' → logprob: -9.029939651489258
    4. ' =' → logprob: -10.654939651489258
    5. '<|end|>' → logprob: -11.279939651489258
    6. '	right' → logprob: -11.529939651489258
    7. '=' → logprob: -11.529939651489258
    8. '0' → logprob: -12.654939651489258
    9. ' 
' → logprob: -12.654939651489258
    10. '[right' → logprob: -13.029939651489258

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012539202347397804
    2. '=' → logprob: -4.387539386749268
    3. ' ' → logprob: -10.76253890991211
    4. '<|end|>' → logprob: -12.51253890991211
    5. ' =
' → logprob: -13.13753890991211
    6. ',' → logprob: -13.38753890991211
    7. ':' → logprob: -14.13753890991211
    8. ' =)' → logprob: -16.88753890991211
    9. '=int' → logprob: -17.01253890991211
    10. ' ,' → logprob: -17.01253890991211

Token 122: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5801974534988403
    2. '0' → logprob: -0.8301974534988403
    3. '10' → logprob: -5.705197334289551
    4. '1' → logprob: -7.205197334289551
    5. '100' → logprob: -8.95519733428955
    6. '<|end|>' → logprob: -10.83019733428955
    7. ' ' → logprob: -10.95519733428955
    8. ' max' → logprob: -12.58019733428955
    9. 'max' → logprob: -12.95519733428955
    10. ' 
' → logprob: -13.83019733428955

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002845768758561462
    2. ' ' → logprob: -8.875284194946289
    3. '1' → logprob: -9.000284194946289
    4. '10' → logprob: -11.000284194946289
    5. '100' → logprob: -12.500284194946289
    6. '   ' → logprob: -15.000284194946289
    7. 'max' → logprob: -15.500284194946289
    8. '  ' → logprob: -16.56278419494629
    9. ' ' → logprob: -16.56278419494629
    10. '=' → logprob: -16.87528419494629

Token 124: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30896952748298645
    2. '<|end|>' → logprob: -1.683969497680664
    3. '.' → logprob: -2.808969497680664
    4. ' ' → logprob: -4.683969497680664
    5. '=' → logprob: -5.183969497680664
    6. ' ,' → logprob: -6.058969497680664
    7. '<|end|>' → logprob: -7.183969497680664
    8. ' =' → logprob: -7.433969497680664
    9. '0' → logprob: -7.933969497680664
    10. ',
' → logprob: -8.183969497680664

Token 125: '0' (ID: 15)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.7242266535758972
    2. '10' → logprob: -1.224226713180542
    3. '100' → logprob: -2.724226713180542
    4. '5' → logprob: -3.724226713180542
    5. '1' → logprob: -3.724226713180542
    6. '7' → logprob: -4.099226474761963
    7. '+' → logprob: -4.099226474761963
    8. '18' → logprob: -4.349226474761963
    9. '6' → logprob: -4.349226474761963
    10. '15' → logprob: -4.474226474761963

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22948601841926575
    2. ' ,' → logprob: -1.6044859886169434
    3. ' ' → logprob: -6.229485988616943
    4. '100' → logprob: -6.979485988616943
    5. '1' → logprob: -7.729485988616943
    6. ' ,
' → logprob: -8.229486465454102
    7. '10' → logprob: -8.479486465454102
    8. ',
' → logprob: -8.729486465454102
    9. ',float' → logprob: -10.729486465454102
    10. '<|end|>' → logprob: -10.729486465454102

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7503637671470642
    2. ' ' → logprob: -0.7503637671470642
    3. '10' → logprob: -3.500363826751709
    4. '100' → logprob: -3.750363826751709
    5. ' max' → logprob: -6.375363826751709
    6. 'max' → logprob: -8.50036334991455
    7. ' ' → logprob: -12.87536334991455
    8. '  ' → logprob: -13.87536334991455
    9. '2' → logprob: -14.00036334991455
    10. '<|end|>' → logprob: -14.12536334991455

Token 128: '150' (ID: 5215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012843120843172073
    2. '10' → logprob: -4.512843132019043
    3. '100' → logprob: -6.387843132019043
    4. ' ' → logprob: -9.762843132019043
    5. 'max' → logprob: -9.887843132019043
    6. 'float' → logprob: -13.762843132019043
    7. '2' → logprob: -13.887843132019043
    8. ' max' → logprob: -14.887843132019043
    9. '200' → logprob: -15.137843132019043
    10. '   ' → logprob: -15.762843132019043

Token 129: '.' (ID: 13)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02043209969997406
    2. '.' → logprob: -4.770431995391846
    3. '00' → logprob: -5.020431995391846
    4. '000' → logprob: -5.270431995391846
    5. '1' → logprob: -13.020432472229004
    6. '*' → logprob: -14.270432472229004
    7. ' ' → logprob: -14.770432472229004
    8. '5' → logprob: -15.020432472229004
    9. '_' → logprob: -15.395432472229004
    10. '2' → logprob: -15.520432472229004

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8455476760864258
    2. '5' → logprob: -0.9705476760864258
    3. '6' → logprob: -2.220547676086426
    4. '1' → logprob: -2.845547676086426
    5. '2' → logprob: -4.595547676086426
    6. '4' → logprob: -5.720547676086426
    7. '7' → logprob: -5.720547676086426
    8. '9' → logprob: -6.220547676086426
    9. '3' → logprob: -6.345547676086426
    10. '<|end|>' → logprob: -6.845547676086426

Token 131: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05895974487066269
    2. '\n' → logprob: -3.308959722518921
    3. '  
' → logprob: -5.3089599609375
    4. '    
' → logprob: -5.3089599609375
    5. ' 
' → logprob: -5.3089599609375
    6. '0' → logprob: -6.1839599609375
    7. '

' → logprob: -6.9339599609375
    8. '   ' → logprob: -7.6839599609375
    9. '
' → logprob: -7.8089599609375
    10. ' ' → logprob: -7.8089599609375

Token 132: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2541212737560272
    2. '    
' → logprob: -1.8791213035583496
    3. '   ' → logprob: -3.2541213035583496
    4. '  
' → logprob: -4.50412130355835
    5. '\n' → logprob: -4.75412130355835
    6. ' 
' → logprob: -4.75412130355835
    7. '   
' → logprob: -5.62912130355835
    8. '0' → logprob: -8.129120826721191
    9. '     
' → logprob: -8.504120826721191
    10. '' → logprob: -8.754120826721191

Token 133: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0832079648971558
    2. ' while' → logprob: -1.5832079648971558
    3. 'while' → logprob: -1.5832079648971558
    4. '
' → logprob: -1.8332079648971558
    5. ' 
' → logprob: -3.2082080841064453
    6. '    
' → logprob: -3.7082080841064453
    7. ' ' → logprob: -4.583208084106445
    8. ' for' → logprob: -5.208208084106445
    9. 'for' (adapté à ' for') → logprob: -5.583208084106445
    10. '  
' → logprob: -6.333208084106445

Token 134: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.00016754455282352865
    2. ' ' → logprob: -9.250167846679688
    3. ' i' → logprob: -10.250167846679688
    4. '_' → logprob: -10.250167846679688
    5. ' ' → logprob: -15.375167846679688
    6. ' _
' → logprob: -15.375167846679688
    7. ' __' → logprob: -16.250167846679688
    8. ' ‌' → logprob: -16.500167846679688
    9. ' ▁' → logprob: -17.625167846679688
    10. ' ​' → logprob: -18.625167846679688

Token 135: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007731672842055559
    2. 'in' → logprob: -5.5077314376831055
    3. ' ' → logprob: -5.6327314376831055
    4. '<|end|>' → logprob: -10.007731437683105
    5. '  ' → logprob: -11.507731437683105
    6. ' i' → logprob: -12.757731437683105
    7. '	in' → logprob: -13.007731437683105
    8. '_' → logprob: -13.882731437683105
    9. ' 
' → logprob: -14.445231437683105
    10. '_in' → logprob: -14.507731437683105

Token 136: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004078878089785576
    2. 'range' → logprob: -5.5040788650512695
    3. '	range' → logprob: -15.50407886505127
    4. ' ' → logprob: -15.62907886505127
    5. '(range' → logprob: -16.504079818725586
    6. ' xrange' → logprob: -16.754079818725586
    7. '_range' → logprob: -19.129079818725586
    8. '  ' → logprob: -19.379079818725586
    9. '```' → logprob: -20.504079818725586
    10. '   ' → logprob: -21.129079818725586

Token 137: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031711759511381388
    2. ' ' → logprob: -6.003170967102051
    3. ' (' → logprob: -7.378170967102051
    4. '40' → logprob: -10.25317096710205
    5. '100' → logprob: -11.62817096710205
    6. '50' → logprob: -12.00317096710205
    7. '30' → logprob: -12.25317096710205
    8. '<|end|>' → logprob: -12.37817096710205
    9. '20' → logprob: -12.50317096710205
    10. '36' → logprob: -13.00317096710205

Token 138: '60' (ID: 1910)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.07330144941806793
    2. '50' → logprob: -3.4483015537261963
    3. ' ' → logprob: -3.6983015537261963
    4. '60' → logprob: -4.323301315307617
    5. '40' → logprob: -7.698301315307617
    6. '200' → logprob: -9.323301315307617
    7. '70' → logprob: -9.948301315307617
    8. '300' → logprob: -10.073301315307617
    9. '80' → logprob: -10.323301315307617
    10. '500' → logprob: -10.323301315307617

Token 139: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08103463798761368
    2. ':' → logprob: -3.5810346603393555
    3. '):
' → logprob: -3.9560346603393555
    4. '   ' → logprob: -4.3310346603393555
    5. ')' → logprob: -4.5810346603393555
    6. ' ):' → logprob: -5.2060346603393555
    7. ' ' → logprob: -7.5810346603393555
    8. '<|end|>' → logprob: -7.9560346603393555
    9. ' :' → logprob: -8.206034660339355
    10. '    ' → logprob: -8.206034660339355

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05956439673900604
    2. '<|end|>' → logprob: -2.9345643520355225
    3. ':' → logprob: -6.184564590454102
    4. '   ' → logprob: -7.434564590454102
    5. '<|end|>' → logprob: -7.434564590454102
    6. ' ' → logprob: -7.809564590454102
    7. '        
' → logprob: -8.059564590454102
    8. ')' → logprob: -8.809564590454102
    9. '    ' → logprob: -9.434564590454102
    10. '
' → logprob: -9.434564590454102

Token 141: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.523673951625824
    2. ' mid' → logprob: -0.898673951625824
    3. '   ' → logprob: -8.523674011230469
    4. 'm' → logprob: -8.773674011230469
    5. 'middle' → logprob: -9.398674011230469
    6. ' middle' → logprob: -10.648674011230469
    7. ' midpoint' → logprob: -10.648674011230469
    8. '       ' → logprob: -10.898674011230469
    9. '_mid' → logprob: -11.398674011230469
    10. '    ' → logprob: -11.398674011230469

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016973933205008507
    2. '=' → logprob: -4.141973972320557
    3. '<|end|>' → logprob: -7.516973972320557
    4. ' ' → logprob: -8.141973495483398
    5. ')' → logprob: -9.391973495483398
    6. ',' → logprob: -11.641973495483398
    7. 'space' → logprob: -13.016973495483398
    8. '<|end|>' → logprob: -13.141973495483398
    9. '.' → logprob: -13.891973495483398
    10. 's' → logprob: -13.891973495483398

Token 143: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02066555991768837
    2. '(left' → logprob: -3.8956656455993652
    3. '(right' → logprob: -9.645665168762207
    4. ' ' → logprob: -10.145665168762207
    5. '(' → logprob: -11.395665168762207
    6. '(l' → logprob: -13.520665168762207
    7. '(mid' → logprob: -14.020665168762207
    8. '(lhs' → logprob: -14.020665168762207
    9. '(s' → logprob: -14.520665168762207
    10. '[left' → logprob: -14.520665168762207

Token 144: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0007114782347343862
    2. ' left' → logprob: -7.250711441040039
    3. 'right' → logprob: -14.125711441040039
    4. 'lef' → logprob: -15.000711441040039
    5. ' lef' → logprob: -15.250711441040039
    6. '	left' → logprob: -16.12571144104004
    7. '(left' → logprob: -17.25071144104004
    8. '[left' → logprob: -17.75071144104004
    9. '_left' → logprob: -18.00071144104004
    10. ' ' → logprob: -18.37571144104004

Token 145: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022524237632751
    2. '+' → logprob: -1.91022527217865
    3. '<|end|>' → logprob: -14.160224914550781
    4. ' plus' → logprob: -15.660224914550781
    5. ' ' → logprob: -15.910224914550781
    6. ' ' → logprob: -16.41022491455078
    7. ' +
' → logprob: -17.03522491455078
    8. '+r' → logprob: -18.78522491455078
    9. '＋' → logprob: -18.91022491455078
    10. '+b' → logprob: -19.03522491455078

Token 146: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.3868720829486847
    2. 'right' → logprob: -1.1368720531463623
    3. ' ' → logprob: -14.136872291564941
    4. '	right' → logprob: -15.011872291564941
    5. '
' → logprob: -18.011871337890625
    6. '[right' → logprob: -18.386871337890625
    7. '_right' → logprob: -19.386871337890625
    8. '   ' → logprob: -19.386871337890625
    9. ',right' → logprob: -19.761871337890625
    10. '.right' → logprob: -19.886871337890625

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011033779446734115
    2. ' )' → logprob: -9.500110626220703
    3. ')/' → logprob: -10.250110626220703
    4. '）' → logprob: -18.875110626220703
    5. ' ' → logprob: -20.125110626220703
    6. '   ' → logprob: -20.250110626220703
    7. ' ' → logprob: -20.250110626220703
    8. ')//' → logprob: -20.500110626220703
    9. ')
' → logprob: -20.625110626220703
    10. ']' → logprob: -20.875110626220703

Token 148: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.1427077054977417
    2. ' /' → logprob: -2.0177078247070312
    3. ')' → logprob: -11.392707824707031
    4. ')/' → logprob: -11.892707824707031
    5. '<|end|>' → logprob: -12.392707824707031
    6. ' ' → logprob: -12.517707824707031
    7. '0' → logprob: -13.267707824707031
    8. '*' → logprob: -13.892707824707031
    9. '```' → logprob: -13.892707824707031
    10. ' ' → logprob: -14.267707824707031

Token 149: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009757150895893574
    2. ' ' → logprob: -4.634757041931152
    3. '```' → logprob: -14.634757041931152
    4. '   ' → logprob: -15.134757041931152
    5. '
' → logprob: -15.822257041931152
    6. '  ' → logprob: -16.50975799560547
    7. '

' → logprob: -16.88475799560547
    8. ' ' → logprob: -17.00975799560547
    9. '۲' → logprob: -17.13475799560547
    10. '<|end|>' → logprob: -18.00975799560547

Token 150: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000712074339389801
    2. ' ' → logprob: -7.250711917877197
    3. '   ' → logprob: -13.500712394714355
    4. '```' → logprob: -14.875712394714355
    5. '  ' → logprob: -15.750712394714355
    6. '    ' → logprob: -17.06321144104004
    7. '۲' → logprob: -17.25071144104004
    8. '     ' → logprob: -17.43821144104004
    9. '２' → logprob: -18.18821144104004
    10. '
' → logprob: -18.43821144104004

Token 151: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24368135631084442
    2. ' found' → logprob: -1.9936813116073608
    3. '<|end|>' → logprob: -3.7436814308166504
    4. 'found' → logprob: -4.24368143081665
    5. '        
' → logprob: -4.61868143081665
    6. ' x' → logprob: -5.24368143081665
    7. '   ' → logprob: -5.36868143081665
    8. ' if' → logprob: -5.74368143081665
    9. ' for' → logprob: -5.86868143081665
    10. '
' → logprob: -5.99368143081665

Token 153: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.2798444330692291
    2. ' found' → logprob: -1.7798444032669067
    3. ' if' → logprob: -3.6548445224761963
    4. 'if' → logprob: -3.9048445224761963
    5. '       ' → logprob: -4.779844284057617
    6. ' can' → logprob: -5.029844284057617
    7. ' feasible' → logprob: -5.654844284057617
    8. 'possible' → logprob: -5.654844284057617
    9. ' possible' → logprob: -6.279844284057617
    10. 'can' → logprob: -6.654844284057617

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005258689634501934
    2. '=' → logprob: -7.750525951385498
    3. ' ' → logprob: -9.37552547454834
    4. ',' → logprob: -12.25052547454834
    5. '=False' → logprob: -13.62552547454834
    6. ' =
' → logprob: -14.00052547454834
    7. ':' → logprob: -14.00052547454834
    8. '_' → logprob: -14.12552547454834
    9. '<|end|>' → logprob: -14.37552547454834
    10. '=True' → logprob: -14.50052547454834

Token 155: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5759397745132446
    2. 'False' → logprob: -0.8259397745132446
    3. '(False' → logprob: -15.950940132141113
    4. ' True' → logprob: -15.950940132141113
    5. 'True' → logprob: -16.325939178466797
    6. '=False' → logprob: -17.200939178466797
    7. ' any' → logprob: -18.200939178466797
    8. ' ' → logprob: -18.700939178466797
    9. '   ' → logprob: -19.700939178466797
    10. 'any' → logprob: -20.075939178466797

Token 156: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4894908368587494
    2. '<|end|>' → logprob: -1.2394908666610718
    3. ' for' → logprob: -2.8644907474517822
    4. '
' → logprob: -3.9894907474517822
    5. '        
' → logprob: -4.489490985870361
    6. ' ' → logprob: -5.364490985870361
    7. '<|end|>' → logprob: -6.614490985870361
    8. '  
' → logprob: -6.864490985870361
    9. ' 
' → logprob: -6.989490985870361
    10. 'for' → logprob: -7.364490985870361

Token 158: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5293890833854675
    2. '       ' → logprob: -0.9043890833854675
    3. 'for' → logprob: -5.154388904571533
    4. '        
' → logprob: -8.404389381408691
    5. '<|end|>' → logprob: -9.404389381408691
    6. ' ' → logprob: -9.529389381408691
    7. '
' → logprob: -10.279389381408691
    8. '	for' → logprob: -11.279389381408691
    9. '   ' → logprob: -11.529389381408691
    10. ',' → logprob: -12.029389381408691

Token 159: ' On' (ID: 2160)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6933659315109253
    2. 'for' → logprob: -0.6933659315109253
    3. '       ' → logprob: -9.068366050720215
    4. '   ' → logprob: -9.318366050720215
    5. '#' → logprob: -11.818366050720215
    6. '	for' → logprob: -12.818366050720215
    7. '    ' → logprob: -13.318366050720215
    8. ' #' → logprob: -13.693366050720215
    9. '        
' → logprob: -15.693366050720215
    10. '
' → logprob: -15.818366050720215

Token 160: ' va' (ID: 3423)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.026353826746344566
    2. 'for' → logprob: -3.6513538360595703
    3. '   ' → logprob: -10.90135383605957
    4. '       ' → logprob: -11.65135383605957
    5. '    ' → logprob: -11.90135383605957
    6. '	for' → logprob: -12.52635383605957
    7. ' ' → logprob: -13.52635383605957
    8. ' ' → logprob: -13.77635383605957
    9. ' ,' → logprob: -13.77635383605957
    10. 'import' → logprob: -13.90135383605957

Token 161: ' chercher' (ID: 79602)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26252231001853943
    2. ' essayer' → logprob: -2.7625222206115723
    3. ' tester' → logprob: -2.7625222206115723
    4. ' test' → logprob: -3.1375222206115723
    5. ' chercher' → logprob: -3.6375222206115723
    6. 'for' → logprob: -4.762522220611572
    7. '   ' → logprob: -4.887522220611572
    8. ' try' → logprob: -5.262522220611572
    9. ' explorer' → logprob: -5.387522220611572
    10. ' rechercher' → logprob: -6.137522220611572

Token 162: ' un' (ID: 537)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03490061312913895
    2. 'for' → logprob: -3.909900665283203
    3. ' x' → logprob: -4.659900665283203
    4. '       ' → logprob: -6.659900665283203
    5. '   ' → logprob: -6.909900665283203
    6. 'x' → logprob: -7.534900665283203
    7. ' y' → logprob: -8.159900665283203
    8. ' ' → logprob: -8.659900665283203
    9. ' un' → logprob: -8.659900665283203
    10. ' des' → logprob: -8.909900665283203

Token 163: ' point' (ID: 2438)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.029414284974336624
    2. 'x' → logprob: -4.029414176940918
    3. ' ' → logprob: -5.279414176940918
    4. ' (' → logprob: -6.654414176940918
    5. '       ' → logprob: -7.029414176940918
    6. '(x' → logprob: -7.279414176940918
    7. ' point' → logprob: -7.654414176940918
    8. ' for' → logprob: -7.779414176940918
    9. ' espace' → logprob: -8.779414176940918
    10. 'e' → logprob: -9.029414176940918

Token 164: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0862025022506714
    2. ' ' → logprob: -1.4612025022506714
    3. ' (' → logprob: -1.5862025022506714
    4. '<|end|>' → logprob: -2.211202621459961
    5. '(x' → logprob: -3.586202621459961
    6. ' in' → logprob: -3.836202621459961
    7. 'x' → logprob: -3.961202621459961
    8. ' for' → logprob: -4.086202621459961
    9. ',' → logprob: -5.086202621459961
    10. '<|end|>' → logprob: -5.711202621459961

Token 165: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.728214681148529
    2. ' x' → logprob: -0.728214681148529
    3. ')' → logprob: -3.603214740753174
    4. ')x' → logprob: -6.478214740753174
    5. ' for' → logprob: -6.603214740753174
    6. ' ' → logprob: -6.978214740753174
    7. ',' → logprob: -7.103214740753174
    8. 'for' → logprob: -7.603214740753174
    9. '0' → logprob: -7.728214740753174
    10. ' )' → logprob: -8.228214263916016

Token 166: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004956577904522419
    2. ',y' → logprob: -5.5049567222595215
    3. ' ,' → logprob: -7.6299567222595215
    4. ')' → logprob: -8.754956245422363
    5. '       ' → logprob: -8.879956245422363
    6. ' y' → logprob: -10.754956245422363
    7. '=' → logprob: -11.004956245422363
    8. ' =' → logprob: -11.129956245422363
    9. '        ' → logprob: -11.629956245422363
    10. '_,' → logprob: -11.879956245422363

Token 167: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12028630077838898
    2. ' )' → logprob: -2.620286226272583
    3. '       ' → logprob: -3.870286226272583
    4. ',' → logprob: -4.370286464691162
    5. '        ' → logprob: -6.245286464691162
    6. ' dans' → logprob: -6.495286464691162
    7. ' ,' → logprob: -6.870286464691162
    8. 'import' → logprob: -7.620286464691162
    9. '   ' → logprob: -8.245285987854004
    10. '           ' → logprob: -8.370285987854004

Token 168: ' tel' (ID: 10716)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06625679135322571
    2. ',' → logprob: -3.9412567615509033
    3. ' dans' → logprob: -5.066256999969482
    4. '<|end|>' → logprob: -5.066256999969482
    5. ':' → logprob: -5.191256999969482
    6. ' for' → logprob: -5.566256999969482
    7. ' ' → logprob: -5.691256999969482
    8. '	' → logprob: -6.066256999969482
    9. '        
' → logprob: -6.691256999969482
    10. '        ' → logprob: -6.816256999969482

Token 169: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.2285589873790741
    2. 'que' → logprob: -1.8535590171813965
    3. ' that' → logprob: -3.4785590171813965
    4. 'that' → logprob: -4.3535590171813965
    5. '       ' → logprob: -6.3535590171813965
    6. '#' → logprob: -7.2285590171813965
    7. ' ' → logprob: -8.103558540344238
    8. '<|end|>' → logprob: -8.228558540344238
    9. 'import' → logprob: -8.728558540344238
    10. '        ' → logprob: -8.728558540344238

Token 170: ' max' (ID: 2999)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.9463770389556885
    2. ' for' → logprob: -1.3213770389556885
    3. ' can' → logprob: -1.5713770389556885
    4. 'for' → logprob: -2.4463770389556885
    5. ' found' → logprob: -3.6963770389556885
    6. 'found' → logprob: -4.071376800537109
    7. '       ' → logprob: -5.696376800537109
    8. '           ' → logprob: -6.946376800537109
    9. '
' → logprob: -7.446376800537109
    10. 'dist' → logprob: -7.571376800537109

Token 171: ' dist' (ID: 3601)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.5217519998550415
    2. '(' → logprob: -2.021751880645752
    3. '(
' → logprob: -2.021751880645752
    4. '(distance' → logprob: -2.146751880645752
    5. '(dist' → logprob: -2.271751880645752
    6. 'dist' → logprob: -2.271751880645752
    7. '_distance' → logprob: -2.521751880645752
    8. '(abs' → logprob: -3.396751880645752
    9. '(x' → logprob: -4.021751880645752
    10. '(s' → logprob: -4.271751880645752

Token 172: '/s' (ID: 5031)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3051415979862213
    2. '       ' → logprob: -2.6801416873931885
    3. '(' → logprob: -3.1801416873931885
    4. ' (' → logprob: -3.3051416873931885
    5. '/' → logprob: -3.6801416873931885
    6. '=' → logprob: -3.6801416873931885
    7. '(s' → logprob: -4.055141448974609
    8. ' /' → logprob: -4.305141448974609
    9. '           ' → logprob: -4.930141448974609
    10. 'x' → logprob: -5.430141448974609

Token 173: 'peed' (ID: 6919)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9238812923431396
    2. '(x' → logprob: -0.9238812923431396
    3. 'peed' → logprob: -2.7988812923431396
    4. '(' → logprob: -3.5488812923431396
    5. '       ' → logprob: -3.9238812923431396
    6. '(s' → logprob: -4.298881530761719
    7. 'v' → logprob: -4.673881530761719
    8. ')' → logprob: -4.673881530761719
    9. '2' → logprob: -4.923881530761719
    10. '   ' → logprob: -5.048881530761719

Token 174: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.09365414828062057
    2. '<=' → logprob: -3.093654155731201
    3. '(x' → logprob: -3.593654155731201
    4. ')' → logprob: -5.093654155731201
    5. '       ' → logprob: -5.718654155731201
    6. ')<=' → logprob: -6.468654155731201
    7. '(s' → logprob: -6.968654155731201
    8. ' ' → logprob: -7.343654155731201
    9. '           ' → logprob: -7.468654155731201
    10. '(' → logprob: -7.593654155731201

Token 175: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.38687923550605774
    2. ' mid' → logprob: -1.1368792057037354
    3. '(mid' → logprob: -12.636878967285156
    4. '[mid' → logprob: -13.636878967285156
    5. ' t' → logprob: -13.761878967285156
    6. 't' → logprob: -13.886878967285156
    7. ' ' → logprob: -14.261878967285156
    8. '_mid' → logprob: -14.761878967285156
    9. '
' → logprob: -15.886878967285156
    10. ' ' → logprob: -16.136878967285156

Token 176: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07679203152656555
    2. '
' → logprob: -3.826792001724243
    3. '<|end|>' → logprob: -3.951792001724243
    4. '        
' → logprob: -4.326792240142822
    5. ',' → logprob: -5.201792240142822
    6. ' for' → logprob: -5.701792240142822
    7. ':' → logprob: -6.201792240142822
    8. '  
' → logprob: -6.701792240142822
    9. '		
' → logprob: -6.826792240142822
    10. '   ' → logprob: -6.826792240142822

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003845328465104103
    2. ' for' → logprob: -6.87884521484375
    3. '
' → logprob: -7.00384521484375
    4. '        
' → logprob: -7.00384521484375
    5. ',' → logprob: -8.12884521484375
    6. '<|end|>' → logprob: -8.50384521484375
    7. '	' → logprob: -8.87884521484375
    8. '  
' → logprob: -9.50384521484375
    9. '   ' → logprob: -10.25384521484375
    10. 'for' → logprob: -10.37884521484375

Token 178: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22931449115276337
    2. ' for' → logprob: -2.1043145656585693
    3. '       ' → logprob: -2.6043145656585693
    4. 'x' → logprob: -5.85431432723999
    5. '#' (adapté à ' #') → logprob: -6.10431432723999
    6. 'xmin' → logprob: -6.85431432723999
    7. 'import' → logprob: -7.22931432723999
    8. 'low' → logprob: -7.72931432723999
    9. 'step' → logprob: -7.85431432723999
    10. '
' → logprob: -8.104314804077148

Token 179: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2267838567495346
    2. ' for' → logprob: -1.6017838716506958
    3. 'import' → logprob: -7.726783752441406
    4. '#' → logprob: -7.726783752441406
    5. '
' → logprob: -8.851783752441406
    6. 'x' → logprob: -9.601783752441406
    7. '       ' → logprob: -9.726783752441406
    8. ' #' → logprob: -10.351783752441406
    9. ' xs' → logprob: -10.476783752441406
    10. 'xs' → logprob: -10.601783752441406

Token 180: ' solution' (ID: 7578)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6338154673576355
    2. ' for' → logprob: -0.7588154673576355
    3. 'import' → logprob: -8.13381576538086
    4. 'def' → logprob: -8.13381576538086
    5. '
' → logprob: -8.88381576538086
    6. '   ' → logprob: -9.25881576538086
    7. '#' → logprob: -9.38381576538086
    8. ' def' → logprob: -9.63381576538086
    9. 'x' → logprob: -10.63381576538086
    10. ' #' → logprob: -10.75881576538086

Token 181: ' optimale' (ID: 72604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3249423503875732
    2. ' for' → logprob: -1.9499423503875732
    3. ':' → logprob: -2.1999423503875732
    4. ' n' → logprob: -2.5749423503875732
    5. 'import' → logprob: -2.5749423503875732
    6. ' is' → logprob: -2.8249423503875732
    7. '   ' → logprob: -3.1999423503875732
    8. 'for' → logprob: -3.4499423503875732
    9. ' est' → logprob: -4.199942588806152
    10. 'n' → logprob: -4.199942588806152

Token 182: ' se' (ID: 458)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.2418560981750488
    2. ' doit' → logprob: -2.116856098175049
    3. ' is' → logprob: -2.241856098175049
    4. '<|end|>' → logprob: -2.616856098175049
    5. ' se' → logprob: -2.741856098175049
    6. ' must' → logprob: -2.991856098175049
    7. '       ' → logprob: -3.241856098175049
    8. 'est' → logprob: -3.491856098175049
    9. ':' → logprob: -3.991856098175049
    10. ',' → logprob: -4.116856098175049

Token 183: ' trouve' (ID: 30913)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.12369973212480545
    2. 'sit' → logprob: -2.49869966506958
    3. ' trouve' → logprob: -3.74869966506958
    4. 'tro' → logprob: -6.49869966506958
    5. 'it' → logprob: -6.62369966506958
    6. 'rait' → logprob: -6.74869966506958
    7. ' situe' → logprob: -6.87369966506958
    8. 't' → logprob: -6.99869966506958
    9. '
' → logprob: -7.37369966506958
    10. '{' → logprob: -7.87369966506958

Token 184: ' à' (ID: 1221)
  Prédit: ' souvent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' souvent' → logprob: -0.8733009696006775
    2. ' probablement' → logprob: -0.8733009696006775
    3. ' dans' → logprob: -2.4983010292053223
    4. ' généralement' → logprob: -4.623301029205322
    5. ' au' → logprob: -4.623301029205322
    6. ' à' → logprob: -4.998301029205322
    7. ' sur' → logprob: -4.998301029205322
    8. ' at' → logprob: -5.123301029205322
    9. ' sûrement' → logprob: -5.373301029205322
    10. ' peut' → logprob: -5.498301029205322

Token 185: ' l' (ID: 305)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -2.000220537185669
    2. 'l' → logprob: -2.125220537185669
    3. 'x' → logprob: -2.250220537185669
    4. ' une' → logprob: -2.750220537185669
    5. ' la' → logprob: -2.750220537185669
    6. 'une' → logprob: -2.875220537185669
    7. ' l' → logprob: -2.875220537185669
    8. 'un' → logprob: -3.125220537185669
    9. 'intersection' → logprob: -3.125220537185669
    10. ' (' → logprob: -3.500220537185669

Token 186: ''inter' (ID: 55731)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8661843538284302
    2. ''intérieur' → logprob: -1.2411843538284302
    3. ''inter' → logprob: -2.3661842346191406
    4. 'e' → logprob: -2.8661842346191406
    5. 'intersection' → logprob: -2.9911842346191406
    6. 'inter' → logprob: -3.8661842346191406
    7. ''un' → logprob: -4.241184234619141
    8. 'es' → logprob: -4.241184234619141
    9. ''une' → logprob: -4.866184234619141
    10. 'im' → logprob: -4.991184234619141

Token 187: 'section' (ID: 6471)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6202552318572998
    2. 'section' → logprob: -1.2452552318572998
    3. 'ieur' → logprob: -2.1202552318573
    4. 'face' → logprob: -3.1202552318573
    5. 'sections' → logprob: -5.495255470275879
    6. 'faces' → logprob: -6.745255470275879
    7. 'ior' → logprob: -6.870255470275879
    8. 'ie' → logprob: -6.995255470275879
    9. 'ieurs' → logprob: -8.120255470275879
    10. 'ection' → logprob: -8.370255470275879

Token 188: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ' cer' (ID: 10816)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.036386530846357346
    2. ' two' → logprob: -4.411386489868164
    3. 'de' → logprob: -4.536386489868164
    4. 'cir' → logprob: -6.161386489868164
    5. ' circles' → logprob: -6.536386489868164
    6. ' trois' → logprob: -6.661386489868164
    7. ' ' → logprob: -6.911386489868164
    8. 'two' → logprob: -7.036386489868164
    9. ' spheres' → logprob: -7.286386489868164
    10. ' cercle' → logprob: -7.411386489868164

Token 190: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.0003978992172051221
    2. 'cle' → logprob: -8.375397682189941
    3. 'cl' → logprob: -9.375397682189941
    4. 'c' → logprob: -10.750397682189941
    5. '#' → logprob: -12.000397682189941
    6. 'cules' → logprob: -12.000397682189941
    7. '```' → logprob: -12.000397682189941
    8. 'les' → logprob: -12.500397682189941
    9. '
' → logprob: -12.750397682189941
    10. '1' → logprob: -13.000397682189941

Token 191: ' dil' (ID: 13812)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061328258365392685
    2. ',' → logprob: -3.436328172683716
    3. '        
' → logprob: -4.936328411102295
    4. ' (' → logprob: -5.811328411102295
    5. ' ,' → logprob: -5.936328411102295
    6. '(' → logprob: -6.061328411102295
    7. 'import' → logprob: -6.186328411102295
    8. ' or' → logprob: -6.561328411102295
    9. '...' → logprob: -6.686328411102295
    10. ' for' → logprob: -7.186328411102295

Token 192: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.024972787126898766
    2. 'ated' → logprob: -4.524972915649414
    3. 'ates' → logprob: -5.649972915649414
    4. 't' → logprob: -5.774972915649414
    5. 'atables' → logprob: -6.399972915649414
    6. 'ater' → logprob: -6.649972915649414
    7. 'até' → logprob: -7.024972915649414
    8. 'a' → logprob: -8.212472915649414
    9. 'ate' → logprob: -8.274972915649414
    10. 'es' → logprob: -8.337472915649414

Token 193: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.05896514281630516
    2. 'es' → logprob: -3.5589652061462402
    3. 'ées' → logprob: -3.6839652061462402
    4. 'ed' → logprob: -6.93396520614624
    5. 'é' → logprob: -7.05896520614624
    6. 'ation' → logprob: -7.80896520614624
    7. 'e' → logprob: -7.80896520614624
    8. 'ees' → logprob: -9.058964729309082
    9. 'ée' → logprob: -9.183964729309082
    10. '   ' → logprob: -9.746464729309082

Token 194: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01868489943444729
    2. ',' → logprob: -4.2686848640441895
    3. 'import' → logprob: -6.8936848640441895
    4. '        
' → logprob: -7.3936848640441895
    5. ' or' → logprob: -8.143685340881348
    6. '.' → logprob: -8.268685340881348
    7. ' ,' → logprob: -8.268685340881348
    8. ' for' → logprob: -8.393685340881348
    9. '...' → logprob: -8.518685340881348
    10. ' (' → logprob: -8.518685340881348

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007453641388565302
    2. '<|end|>' → logprob: -5.382453441619873
    3. '        
' → logprob: -6.382453441619873
    4. ',' → logprob: -7.882453441619873
    5. ' for' → logprob: -9.132453918457031
    6. '   ' → logprob: -9.132453918457031
    7. '	' → logprob: -9.382453918457031
    8. '        ' → logprob: -9.632453918457031
    9. '
' → logprob: -10.132453918457031
    10. '<|end|>' → logprob: -10.257453918457031

Token 196: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35255709290504456
    2. ' for' → logprob: -1.3525570631027222
    3. 'for' → logprob: -3.7275571823120117
    4. '        
' → logprob: -5.477557182312012
    5. '        ' → logprob: -6.227557182312012
    6. 'import' → logprob: -6.227557182312012
    7. '<|end|>' → logprob: -6.727557182312012
    8. ' x' → logprob: -6.852557182312012
    9. ' points' → logprob: -7.352557182312012
    10. 'x' → logprob: -7.477557182312012

Token 197: ' Pour' (ID: 13931)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19123932719230652
    2. ' for' → logprob: -2.316239356994629
    3. ' pass' → logprob: -4.191239356994629
    4. '#' → logprob: -4.566239356994629
    5. 'for' → logprob: -4.691239356994629
    6. ' x' → logprob: -4.941239356994629
    7. '        ' → logprob: -4.941239356994629
    8. 'import' → logprob: -5.566239356994629
    9. '        
' → logprob: -5.816239356994629
    10. 'x' → logprob: -5.941239356994629

Token 198: ' simpl' (ID: 15693)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1015807390213013
    2. ' x' → logprob: -1.6015807390213013
    3. ' sx' → logprob: -1.7265807390213013
    4. 'sx' → logprob: -1.7265807390213013
    5. ' _' → logprob: -3.1015806198120117
    6. ' i' → logprob: -3.3515806198120117
    7. 'i' → logprob: -3.9765806198120117
    8. '_x' → logprob: -5.476580619812012
    9. '_' → logprob: -5.476580619812012
    10. ' cx' → logprob: -7.726580619812012

Token 199: 'ifier' (ID: 4550)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8653409481048584
    2. 'ic' → logprob: -1.3653409481048584
    3. 'es' → logprob: -1.8653409481048584
    4. 'ité' → logprob: -2.1153409481048584
    5. 'ifier' → logprob: -4.3653411865234375
    6. 'ification' → logprob: -5.1153411865234375
    7. 'icit' → logprob: -5.2403411865234375
    8. 'ity' → logprob: -5.6153411865234375
    9. '```' → logprob: -5.6153411865234375
    10. 'icity' → logprob: -6.2403411865234375

Token 200: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.272090345621109
    2. ' ,' → logprob: -1.6470903158187866
    3. ' on' → logprob: -4.272090435028076
    4. '        ' → logprob: -4.397090435028076
    5. '       ' → logprob: -4.772090435028076
    6. ' for' → logprob: -5.397090435028076
    7. 'import' → logprob: -6.397090435028076
    8. '           ' → logprob: -7.397090435028076
    9. '    ' → logprob: -7.897090435028076
    10. '#' → logprob: -7.897090435028076

Token 201: ' fait' (ID: 7473)
  Prédit: ' fera'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fera' → logprob: -1.8919912576675415
    2. ' va' → logprob: -2.266991138458252
    3. ' can' → logprob: -2.391991138458252
    4. ' peux' → logprob: -2.766991138458252
    5. ' continue' → logprob: -2.891991138458252
    6. ' use' → logprob: -2.891991138458252
    7. 'for' → logprob: -3.016991138458252
    8. ' peut' → logprob: -3.141991138458252
    9. 'expl' → logprob: -3.266991138458252
    10. ' for' → logprob: -3.266991138458252

Token 202: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8651227951049805
    2. 'une' → logprob: -0.9901227951049805
    3. ' un' → logprob: -1.9901227951049805
    4. 'un' → logprob: -3.3651227951049805
    5. 'import' → logprob: -4.1151227951049805
    6. '   ' → logprob: -5.2401227951049805
    7. ' random' → logprob: -5.6151227951049805
    8. 'random' → logprob: -6.2401227951049805
    9. 'for' → logprob: -6.7401227951049805
    10. ' ' → logprob: -6.9901227951049805

Token 203: ' recherche' (ID: 24975)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8426727056503296
    2. ' for' → logprob: -1.7176727056503296
    3. 'import' → logprob: -1.7176727056503296
    4. ' grid' → logprob: -2.217672824859619
    5. 'grid' → logprob: -2.842672824859619
    6. 'def' → logprob: -4.342672824859619
    7. ' import' → logprob: -4.717672824859619
    8. '
' → logprob: -5.342672824859619
    9. ' grille' → logprob: -5.967672824859619
    10. 'from' → logprob: -6.217672824859619

Token 204: ' sur' (ID: 1512)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -1.3021094799041748
    2. ' grid' → logprob: -1.3021094799041748
    3. ' sur' → logprob: -2.302109479904175
    4. ' lin' → logprob: -2.302109479904175
    5. ' en' → logprob: -2.802109479904175
    6. '       ' → logprob: -3.302109479904175
    7. '   ' → logprob: -3.302109479904175
    8. ' brute' → logprob: -4.052109718322754
    9. 'import' → logprob: -4.302109718322754
    10. ' au' → logprob: -4.552109718322754

Token 205: ' un' (ID: 537)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22434484958648682
    2. ' x' → logprob: -1.7243448495864868
    3. ' ' → logprob: -5.224344730377197
    4. '-' → logprob: -5.974344730377197
    5. ' -' → logprob: -6.099344730377197
    6. ' un' → logprob: -6.224344730377197
    7. ' la' → logprob: -6.349344730377197
    8. ' une' → logprob: -6.474344730377197
    9. 'l' → logprob: -6.599344730377197
    10. 'le' → logprob: -6.724344730377197

Token 206: ' ma' (ID: 831)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.43558308482170105
    2. ' grid' → logprob: -1.3105831146240234
    3. 'gr' → logprob: -3.0605831146240234
    4. ' ' → logprob: -4.685583114624023
    5. 'x' → logprob: -5.060583114624023
    6. 'quadr' → logprob: -5.060583114624023
    7. ' grille' → logprob: -5.685583114624023
    8. '   ' → logprob: -6.060583114624023
    9. 'ma' → logprob: -6.560583114624023
    10. 'e' → logprob: -6.810583114624023

Token 207: 'illage' (ID: 44473)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8224856853485107
    2. 'sh' → logprob: -1.4474856853485107
    3. 'tr' → logprob: -2.1974856853485107
    4. 'illage' → logprob: -2.5724856853485107
    5. 'tric' → logprob: -3.0724856853485107
    6. 't' → logprob: -3.3224856853485107
    7. 'll' → logprob: -4.19748592376709
    8. '#' → logprob: -5.32248592376709
    9. 'grid' → logprob: -5.44748592376709
    10. 'l' → logprob: -5.69748592376709

Token 208: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004354633390903473
    2. '        
' → logprob: -6.504354476928711
    3. '        ' → logprob: -6.879354476928711
    4. ',' → logprob: -7.504354476928711
    5. '
' → logprob: -8.129354476928711
    6. '<|end|>' → logprob: -8.379354476928711
    7. '   ' → logprob: -8.754354476928711
    8. ' ' → logprob: -9.504354476928711
    9. '    ' → logprob: -9.879354476928711
    10. '      ' → logprob: -10.254354476928711

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002003218833124265
    2. '        
' → logprob: -9.000200271606445
    3. '           ' → logprob: -10.750200271606445
    4. ',' → logprob: -11.000200271606445
    5. '
' → logprob: -11.750200271606445
    6. '        ' → logprob: -12.000200271606445
    7. ' for' → logprob: -12.250200271606445
    8. 'import' → logprob: -12.625200271606445
    9. '	' → logprob: -12.875200271606445
    10. '   ' → logprob: -13.250200271606445

Token 210: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008223525248467922
    2. ' for' → logprob: -5.258223533630371
    3. 'for' → logprob: -6.133223533630371
    4. 'x' → logprob: -8.633223533630371
    5. 'import' → logprob: -8.758223533630371
    6. ' x' → logprob: -9.383223533630371
    7. '           ' → logprob: -9.758223533630371
    8. '   ' → logprob: -10.258223533630371
    9. '      ' → logprob: -10.508223533630371
    10. '        ' → logprob: -10.758223533630371

Token 211: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46094971895217896
    2. ' for' → logprob: -2.210949659347534
    3. 'for' → logprob: -2.835949659347534
    4. 'xmin' → logprob: -3.210949659347534
    5. ' step' → logprob: -3.335949659347534
    6. 'step' → logprob: -3.585949659347534
    7. 'min' → logprob: -3.835949659347534
    8. ' min' → logprob: -4.085949897766113
    9. ' xmin' → logprob: -4.210949897766113
    10. ' xs' → logprob: -4.460949897766113

Token 212: ' ici' (ID: 27994)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.405831903219223
    2. ' for' → logprob: -2.405831813812256
    3. ' on' → logprob: -2.780831813812256
    4. ' x' → logprob: -3.030831813812256
    5. ' continue' → logprob: -3.530831813812256
    6. '   ' → logprob: -3.780831813812256
    7. 'import' → logprob: -4.780831813812256
    8. ' pass' → logprob: -4.905831813812256
    9. '        ' → logprob: -5.030831813812256
    10. ' ' → logprob: -5.030831813812256

Token 213: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37809422612190247
    2. ',' → logprob: -1.62809419631958
    3. '        ' → logprob: -3.12809419631958
    4. ':' → logprob: -4.00309419631958
    5. '    ' → logprob: -4.50309419631958
    6. ' :' → logprob: -4.62809419631958
    7. ' ,' → logprob: -4.75309419631958
    8. '   ' → logprob: -5.00309419631958
    9. '           ' → logprob: -5.50309419631958
    10. '        
' → logprob: -5.87809419631958

Token 214: ' peut' (ID: 9216)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.3926566541194916
    2. ' continue' → logprob: -2.0176565647125244
    3. '   ' → logprob: -2.1426565647125244
    4. ' can' → logprob: -3.6426565647125244
    5. 'continue' → logprob: -5.2676568031311035
    6. ' for' → logprob: -5.5176568031311035
    7. ' manque' → logprob: -5.7676568031311035
    8. ' peut' → logprob: -5.7676568031311035
    9. '       ' → logprob: -5.8926568031311035
    10. ' n' → logprob: -5.8926568031311035

Token 215: ' chercher' (ID: 79602)
  Prédit: ' essayer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' essayer' → logprob: -1.0830039978027344
    2. ' utiliser' → logprob: -1.4580039978027344
    3. 'import' → logprob: -2.4580039978027344
    4. 'contin' → logprob: -2.8330039978027344
    5. 'faire' → logprob: -2.8330039978027344
    6. ' faire' → logprob: -2.9580039978027344
    7. ' continuer' → logprob: -2.9580039978027344
    8. 'util' → logprob: -3.4580039978027344
    9. ' also' → logprob: -5.083003997802734
    10. ''utiliser' → logprob: -5.083003997802734

Token 216: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -1.4515938758850098
    2. ' x' → logprob: -1.9515938758850098
    3. 'x' → logprob: -2.2015938758850098
    4. ' un' → logprob: -2.5765938758850098
    5. ' dans' → logprob: -2.5765938758850098
    6. ' ' → logprob: -2.7015938758850098
    7. ' une' → logprob: -3.2015938758850098
    8. 'import' → logprob: -3.4515938758850098
    9. ' des' → logprob: -3.5765938758850098
    10. ' for' → logprob: -3.8265938758850098

Token 217: ' des' (ID: 731)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.939424991607666
    2. ' un' → logprob: -1.314424991607666
    3. 'x' → logprob: -2.064424991607666
    4. ' x' → logprob: -2.814424991607666
    5. ' ' → logprob: -2.939424991607666
    6. ' les' → logprob: -3.314424991607666
    7. 'import' → logprob: -4.439424991607666
    8. ' la' → logprob: -4.439424991607666
    9. '100' → logprob: -5.314424991607666
    10. ' xrange' → logprob: -5.314424991607666

Token 218: ' cer' (ID: 10816)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.14792688190937042
    2. 'points' → logprob: -2.2729268074035645
    3. 'gr' → logprob: -5.1479268074035645
    4. ' lignes' → logprob: -5.2729268074035645
    5. ' coordonnées' → logprob: -5.5229268074035645
    6. ' coins' → logprob: -5.8979268074035645
    7. 'import' → logprob: -6.3979268074035645
    8. 's' → logprob: -6.3979268074035645
    9. 'coins' → logprob: -6.6479268074035645
    10. 'interval' → logprob: -6.7729268074035645

Token 219: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.14447878301143646
    2. 'r' → logprob: -3.5194787979125977
    3. 'points' → logprob: -3.6444787979125977
    4. 'rt' → logprob: -4.644478797912598
    5. 'les' → logprob: -4.644478797912598
    6. 'il' → logprob: -4.769478797912598
    7. 'l' → logprob: -4.769478797912598
    8. 'ils' → logprob: -5.144478797912598
    9. 'rc' → logprob: -5.394478797912598
    10. 'nt' → logprob: -5.519478797912598

Token 220: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009687275625765324
    2. '        
' → logprob: -5.759687423706055
    3. '
' → logprob: -5.884687423706055
    4. '        ' → logprob: -6.384687423706055
    5. ',' → logprob: -7.509687423706055
    6. '<|end|>' → logprob: -7.759687423706055
    7. ' for' → logprob: -8.759687423706055
    8. '   ' → logprob: -8.884687423706055
    9. ' ' → logprob: -9.009687423706055
    10. '      ' → logprob: -9.384687423706055

Token 221: ' rayon' (ID: 80967)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.4144131541252136
    2. 'r' → logprob: -2.0394132137298584
    3. ' rayon' → logprob: -2.4144132137298584
    4. 'radius' → logprob: -3.2894132137298584
    5. 'cent' → logprob: -4.164412975311279
    6. 'points' → logprob: -4.289412975311279
    7. 's' → logprob: -4.414412975311279
    8. 'center' → logprob: -5.164412975311279
    9. '100' → logprob: -5.414412975311279
    10. 'for' → logprob: -5.539412975311279

Token 222: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.7997435331344604
    2. ' mid' → logprob: -1.4247435331344604
    3. ' right' → logprob: -2.17474365234375
    4. 'right' → logprob: -2.67474365234375
    5. ' max' → logprob: -3.29974365234375
    6. '0' → logprob: -3.79974365234375
    7. 'max' → logprob: -4.04974365234375
    8. '=' → logprob: -4.29974365234375
    9. ' ' → logprob: -4.54974365234375
    10. '150' → logprob: -4.92474365234375

Token 223: '*v' (ID: 130438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3888779282569885
    2. '   ' → logprob: -2.0138778686523438
    3. ',' → logprob: -2.1388778686523438
    4. ' ,' → logprob: -4.263877868652344
    5. ' around' → logprob: -4.888877868652344
    6. 'import' → logprob: -4.888877868652344
    7. '    ' → logprob: -5.388877868652344
    8. ' and' → logprob: -5.638877868652344
    9. '        ' → logprob: -5.638877868652344
    10. '...' → logprob: -5.763877868652344

Token 224: ' autour' (ID: 39420)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049508675932884216
    2. '
' → logprob: -3.549508571624756
    3. '        
' → logprob: -4.424508571624756
    4. '        ' → logprob: -6.049508571624756
    5. ',' → logprob: -6.424508571624756
    6. '   ' → logprob: -7.299508571624756
    7. ' for' → logprob: -7.924508571624756
    8. 'import' → logprob: -8.174509048461914
    9. '<|end|>' → logprob: -8.174509048461914
    10. '    ' → logprob: -8.424509048461914

Token 225: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7804433703422546
    2. '   ' → logprob: -1.5304434299468994
    3. ' des' → logprob: -2.1554434299468994
    4. 'de' → logprob: -2.6554434299468994
    5. 'des' → logprob: -3.1554434299468994
    6. '       ' → logprob: -3.5304434299468994
    7. '(s' → logprob: -3.6554434299468994
    8. 's' → logprob: -4.65544319152832
    9. ' (' → logprob: -4.90544319152832
    10. '(' → logprob: -5.03044319152832

Token 226: ' douce' (ID: 69777)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.4164956212043762
    2. 's' → logprob: -1.7914955615997314
    3. ' (' → logprob: -2.6664955615997314
    4. 'sx' → logprob: -2.9164955615997314
    5. '(x' → logprob: -3.7914955615997314
    6. 'x' → logprob: -4.7914958000183105
    7. ' sx' → logprob: -4.9164958000183105
    8. 'sweet' → logprob: -5.7914958000183105
    9. '(' → logprob: -6.2914958000183105
    10. '(cx' → logprob: -6.7914958000183105

Token 227: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.0029738990124315023
    2. 'rs' → logprob: -6.252974033355713
    3. 's' → logprob: -7.377974033355713
    4. 'ss' → logprob: -9.377973556518555
    5. 'ors' → logprob: -10.127973556518555
    6. 'eurs' → logprob: -10.127973556518555
    7. 'ur' → logprob: -10.252973556518555
    8. '#' → logprob: -10.252973556518555
    9. '(' → logprob: -10.377973556518555
    10. 'ers' → logprob: -10.877973556518555

Token 228: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008065433241426945
    2. '
' → logprob: -5.133065223693848
    3. '        
' → logprob: -6.633065223693848
    4. '<|end|>' → logprob: -7.883065223693848
    5. ',' → logprob: -8.633065223693848
    6. '           ' → logprob: -10.133065223693848
    7. '  
' → logprob: -10.383065223693848
    8. '   ' → logprob: -10.508065223693848
    9. ' for' → logprob: -10.758065223693848
    10. '	' → logprob: -11.508065223693848

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003677990287542343
    2. '
' → logprob: -6.503677845001221
    3. '        
' → logprob: -6.753677845001221
    4. ' for' → logprob: -7.753677845001221
    5. '           ' → logprob: -9.378678321838379
    6. '        ' → logprob: -9.378678321838379
    7. 'for' → logprob: -9.503678321838379
    8. '<|end|>' → logprob: -9.753678321838379
    9. '   ' → logprob: -10.253678321838379
    10. '' → logprob: -10.253678321838379

Token 230: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10380972176790237
    2. ' for' → logprob: -2.4788098335266113
    3. 'for' → logprob: -4.978809833526611
    4. ' points' → logprob: -5.228809833526611
    5. 'points' → logprob: -6.228809833526611
    6. 'x' → logprob: -9.228809356689453
    7. 'n' → logprob: -9.728809356689453
    8. '           ' → logprob: -10.103809356689453
    9. '   ' → logprob: -10.228809356689453
    10. 's' → logprob: -10.228809356689453

Token 231: ' On' (ID: 2160)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9259824156761169
    2. 'for' → logprob: -1.3009824752807617
    3. '       ' → logprob: -1.5509824752807617
    4. ' points' → logprob: -2.8009824752807617
    5. 'points' → logprob: -2.9259824752807617
    6. ' candidates' → logprob: -6.800982475280762
    7. ' xs' → logprob: -7.425982475280762
    8. 'xs' → logprob: -7.550982475280762
    9. 'grid' → logprob: -7.800982475280762
    10. ' grid' → logprob: -8.550982475280762

Token 232: ' essay' (ID: 9635)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24729683995246887
    2. 'for' → logprob: -1.6222968101501465
    3. 'import' → logprob: -4.4972968101501465
    4. ' continue' → logprob: -5.3722968101501465
    5. ' import' → logprob: -6.4972968101501465
    6. '    ' → logprob: -7.2472968101501465
    7. '   ' → logprob: -7.2472968101501465
    8. 'continue' → logprob: -7.3722968101501465
    9. '       ' → logprob: -7.4972968101501465
    10. ' can' → logprob: -7.4972968101501465

Token 233: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4610152244567871
    2. 'ne' → logprob: -1.961015224456787
    3. 'ner' → logprob: -2.336015224456787
    4. 'er' → logprob: -2.836015224456787
    5. 'de' → logprob: -3.586015224456787
    6. 'n' → logprob: -3.836015224456787
    7. 'le' → logprob: -4.711015224456787
    8. 'd' → logprob: -5.461015224456787
    9. 'ue' → logprob: -5.961015224456787
    10. 'ons' → logprob: -6.961015224456787

Token 234: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06896744668483734
    2. '       ' → logprob: -2.943967342376709
    3. 'import' → logprob: -5.443967342376709
    4. 'for' → logprob: -5.943967342376709
    5. ' for' → logprob: -6.068967342376709
    6. ':' → logprob: -6.943967342376709
    7. '    ' → logprob: -7.068967342376709
    8. ' ' → logprob: -7.568967342376709
    9. '        
' → logprob: -7.693967342376709
    10. 'x' → logprob: -8.068967819213867

Token 235: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -1.1156973838806152
    2. 'for' → logprob: -1.3656973838806152
    3. ' for' → logprob: -1.4906973838806152
    4. 'sx' → logprob: -2.6156973838806152
    5. 'points' → logprob: -3.1156973838806152
    6. ' sx' → logprob: -3.7406973838806152
    7. 's' → logprob: -4.240697383880615
    8. 'x' → logprob: -4.365697383880615
    9. ' sweets' → logprob: -5.115697383880615
    10. ' positions' → logprob: -5.365697383880615

Token 236: ' sur' (ID: 1512)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.3479233980178833
    2. ' =' → logprob: -1.4729233980178833
    3. ' (' → logprob: -1.7229233980178833
    4. ' on' → logprob: -2.0979232788085938
    5. '(' → logprob: -3.0979232788085938
    6. 'import' → logprob: -3.3479232788085938
    7. '   ' → logprob: -3.4729232788085938
    8. '       ' → logprob: -4.347923278808594
    9. 's' → logprob: -4.722923278808594
    10. ' in' → logprob: -4.972923278808594

Token 237: ' ces' (ID: 10532)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8475167751312256
    2. ' range' → logprob: -1.3475167751312256
    3. 's' → logprob: -2.5975167751312256
    4. ' each' → logprob: -3.4725167751312256
    5. ' la' → logprob: -3.4725167751312256
    6. ' les' → logprob: -3.8475167751312256
    7. 'each' → logprob: -3.8475167751312256
    8. ' the' → logprob: -3.8475167751312256
    9. 'the' → logprob: -3.9725167751312256
    10. ' ' → logprob: -4.097517013549805

Token 238: ' cer' (ID: 10816)
  Prédit: ' cer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cer' → logprob: -0.05757097899913788
    2. 'cer' → logprob: -3.4325709342956543
    3. ' cercle' → logprob: -4.557570934295654
    4. 'c' → logprob: -5.557570934295654
    5. 'cir' → logprob: -5.807570934295654
    6. ' circles' → logprob: -6.057570934295654
    7. ' ' → logprob: -6.932570934295654
    8. ' c' → logprob: -7.057570934295654
    9. 's' → logprob: -8.057571411132812
    10. 'r' → logprob: -8.432571411132812

Token 239: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -8.537868779967539e-06
    2. 'cl' → logprob: -11.875008583068848
    3. 'les' → logprob: -14.000008583068848
    4. 'cle' → logprob: -14.625008583068848
    5. 'c' → logprob: -16.12500762939453
    6. 'icles' → logprob: -16.87500762939453
    7. '```' → logprob: -17.00000762939453
    8. '   ' → logprob: -17.62500762939453
    9. 'ques' → logprob: -17.87500762939453
    10. '``' → logprob: -18.25000762939453

Token 240: ' intersections' (ID: 143513)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015248550102114677
    2. ',' → logprob: -5.140248775482178
    3. ':' → logprob: -5.265248775482178
    4. ' for' → logprob: -6.640248775482178
    5. '<|end|>' → logprob: -6.890248775482178
    6. '   ' → logprob: -7.640248775482178
    7. '.' → logprob: -7.765248775482178
    8. '        
' → logprob: -8.89024829864502
    9. 'for' → logprob: -8.89024829864502
    10. '...' → logprob: -9.14024829864502

Token 241: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02022511698305607
    2. ':' → logprob: -4.8952250480651855
    3. ',' → logprob: -5.2702250480651855
    4. '        
' → logprob: -6.1452250480651855
    5. '<|end|>' → logprob: -6.6452250480651855
    6. '.' → logprob: -6.7702250480651855
    7. '   ' → logprob: -7.5202250480651855
    8. ' for' → logprob: -7.5202250480651855
    9. '
' → logprob: -7.8952250480651855
    10. ' :' → logprob: -8.770225524902344

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005125218303874135
    2. '        
' → logprob: -8.50051212310791
    3. ',' → logprob: -9.00051212310791
    4. '<|end|>' → logprob: -9.25051212310791
    5. '           ' → logprob: -10.87551212310791
    6. ':' → logprob: -11.12551212310791
    7. ' for' → logprob: -11.25051212310791
    8. '
' → logprob: -11.62551212310791
    9. '<|end|>' → logprob: -12.50051212310791
    10. '.' → logprob: -12.75051212310791

Token 243: ' candidates' (ID: 18116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30636972188949585
    2. ' points' → logprob: -2.0563697814941406
    3. ' for' → logprob: -2.3063697814941406
    4. 'points' → logprob: -3.6813697814941406
    5. 'for' → logprob: -5.306369781494141
    6. '        
' → logprob: -6.681369781494141
    7. 'n' → logprob: -7.056369781494141
    8. 's' → logprob: -7.681369781494141
    9. '        ' → logprob: -7.806369781494141
    10. 'import' → logprob: -8.05636978149414

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076081594452261925
    2. '=' → logprob: -4.882607936859131
    3. ' ' → logprob: -13.757608413696289
    4. '=[]' → logprob: -14.882608413696289
    5. ',' → logprob: -15.007608413696289
    6. ':' → logprob: -16.38260841369629
    7. '.' → logprob: -17.13260841369629
    8. 's' → logprob: -17.25760841369629
    9. ' =[' → logprob: -17.25760841369629
    10. ' =
' → logprob: -17.50760841369629

Token 245: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.002543678041547537
    2. ' []' → logprob: -6.0025434494018555
    3. 'set' → logprob: -9.752543449401855
    4. '[]
' → logprob: -11.752543449401855
    5. ' set' → logprob: -13.752543449401855
    6. '[(' → logprob: -14.627543449401855
    7. '[' → logprob: -15.127543449401855
    8. '[]

' → logprob: -16.752544403076172
    9. '[]}' → logprob: -16.877544403076172
    10. ' []
' → logprob: -17.377544403076172

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007737740525044501
    2. ' for' → logprob: -7.875773906707764
    3. '<|end|>' → logprob: -8.500773429870605
    4. 'for' → logprob: -9.375773429870605
    5. ',' → logprob: -10.500773429870605
    6. '        
' → logprob: -10.500773429870605
    7. '   ' → logprob: -11.750773429870605
    8. ')' → logprob: -11.750773429870605
    9. '<|end|>' → logprob: -12.000773429870605
    10. '           ' → logprob: -12.125773429870605

Token 247: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018411779776215553
    2. ' for' → logprob: -4.018411636352539
    3. 'n' → logprob: -8.518411636352539
    4. 'points' → logprob: -10.643411636352539
    5. '       ' → logprob: -11.143411636352539
    6. '   ' → logprob: -11.768411636352539
    7. 'import' → logprob: -11.893411636352539
    8. '#' → logprob: -13.393411636352539
    9. '	for' → logprob: -13.518411636352539
    10. 's' → logprob: -13.768411636352539

Token 248: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.5469224452972412
    2. 'i' → logprob: -1.6719224452972412
    3. '(s' → logprob: -1.6719224452972412
    4. ' sx' → logprob: -1.7969224452972412
    5. 'sx' → logprob: -1.9219224452972412
    6. ' (' → logprob: -2.546922445297241
    7. '(i' → logprob: -4.79692268371582
    8. 's' → logprob: -5.29692268371582
    9. '(' → logprob: -6.54692268371582
    10. 'sweet' → logprob: -6.67192268371582

Token 249: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05493205040693283
    2. 'in' → logprob: -3.179932117462158
    3. ',' → logprob: -4.554932117462158
    4. ' ' → logprob: -7.304932117462158
    5. ' ,' → logprob: -7.429932117462158
    6. 's' → logprob: -10.304931640625
    7. ',s' → logprob: -11.304931640625
    8. 'n' → logprob: -11.554931640625
    9. 'range' → logprob: -12.304931640625
    10. '0' → logprob: -12.929931640625

Token 250: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.05099004879593849
    2. ' (' → logprob: -3.050990104675293
    3. '(si' → logprob: -6.425990104675293
    4. 's' → logprob: -8.300990104675293
    5. '(x' → logprob: -8.550990104675293
    6. '(cx' → logprob: -9.675990104675293
    7. '(_,' → logprob: -9.675990104675293
    8. ' ' → logprob: -10.050990104675293
    9. 'sx' → logprob: -10.300990104675293
    10. '(i' → logprob: -10.550990104675293

Token 251: 'x' (ID: 87)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.0003048378275707364
    2. 'x' → logprob: -8.87530517578125
    3. ' sx' → logprob: -9.25030517578125
    4. 's' → logprob: -10.12530517578125
    5. 'xi' → logprob: -10.75030517578125
    6. 'cx' → logprob: -12.50030517578125
    7. 'si' → logprob: -14.37530517578125
    8. 'ix' → logprob: -14.37530517578125
    9. 'xs' → logprob: -14.62530517578125
    10. 'px' → logprob: -14.87530517578125

Token 252: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23419539630413055
    2. 'i' → logprob: -2.1091954708099365
    3. 's' → logprob: -2.7341954708099365
    4. '_i' → logprob: -3.9841954708099365
    5. '1' → logprob: -6.484195232391357
    6. '_s' → logprob: -6.734195232391357
    7. ',i' → logprob: -8.109195709228516
    8. ' ,' → logprob: -8.484195709228516
    9. 'sx' → logprob: -8.859195709228516
    10. '0' → logprob: -8.984195709228516

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.690834273584187e-05
    2. ' ,' → logprob: -10.37503719329834
    3. ',y' → logprob: -12.50003719329834
    4. 's' → logprob: -14.12503719329834
    5. '_,' → logprob: -15.00003719329834
    6. 'y' → logprob: -15.12503719329834
    7. '1' → logprob: -16.000036239624023
    8. ',s' → logprob: -16.125036239624023
    9. ',
' → logprob: -16.375036239624023
    10. 'x' → logprob: -16.625036239624023

Token 254: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.043016545474529266
    2. ' y' → logprob: -3.1680164337158203
    3. '   ' → logprob: -11.91801643371582
    4. ' ' → logprob: -12.41801643371582
    5. '	y' → logprob: -13.29301643371582
    6. '    ' → logprob: -13.66801643371582
    7. '  ' → logprob: -14.16801643371582
    8. ')' → logprob: -14.16801643371582
    9. ',' → logprob: -14.54301643371582
    10. '    
' → logprob: -14.79301643371582

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001640876434976235
    2. ',' → logprob: -8.750164031982422
    3. ')' → logprob: -12.875164031982422
    4. 's' → logprob: -14.000164031982422
    5. ' ' → logprob: -14.625164031982422
    6. '```' → logprob: -14.875164031982422
    7. 'i' → logprob: -15.125164031982422
    8. '
' → logprob: -15.375164031982422
    9. '_' → logprob: -15.625164031982422
    10. '0' → logprob: -16.125164031982422

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005709059187211096
    2. ')' → logprob: -7.875570774078369
    3. ' ,' → logprob: -8.875571250915527
    4. '),' → logprob: -10.250571250915527
    5. '_,' → logprob: -12.500571250915527
    6. ',x' → logprob: -12.625571250915527
    7. '   ' → logprob: -12.875571250915527
    8. ',)' → logprob: -13.625571250915527
    9. ',y' → logprob: -13.750571250915527
    10. ' )' → logprob: -14.750571250915527

Token 257: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.012519069947302341
    2. ' v' → logprob: -4.387518882751465
    3. '   ' → logprob: -12.887518882751465
    4. ')' → logprob: -13.137518882751465
    5. '	v' → logprob: -13.262518882751465
    6. ' ' → logprob: -13.512518882751465
    7. ')v' → logprob: -14.512518882751465
    8. '  ' → logprob: -15.512518882751465
    9. '```' → logprob: -15.637518882751465
    10. 'vi' → logprob: -15.762518882751465

Token 258: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.895480277715251e-06
    2. ')=' → logprob: -11.750008583068848
    3. ' )' → logprob: -14.125008583068848
    4. ' in' → logprob: -16.625009536743164
    5. 'in' → logprob: -17.250009536743164
    6. '))' → logprob: -17.875009536743164
    7. ')
' → logprob: -18.125009536743164
    8. '_)' → logprob: -18.250009536743164
    9. 's' → logprob: -18.500009536743164
    10. '   ' → logprob: -18.875009536743164

Token 259: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4021237802808173e-05
    2. ' )' → logprob: -11.375014305114746
    3. ')=' → logprob: -13.250014305114746
    4. ' in' → logprob: -14.875014305114746
    5. 'in' → logprob: -15.500014305114746
    6. ')
' → logprob: -16.00001335144043
    7. '   ' → logprob: -17.00001335144043
    8. '))' → logprob: -17.25001335144043
    9. ' ' → logprob: -17.62501335144043
    10. ',)' → logprob: -17.87501335144043

Token 260: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14334572851657867
    2. 'in' → logprob: -2.018345832824707
    3. ')' → logprob: -7.768345832824707
    4. '   ' → logprob: -8.518345832824707
    5. ' ' → logprob: -10.768345832824707
    6. '  ' → logprob: -12.018345832824707
    7. '    ' → logprob: -12.643345832824707
    8. '
' → logprob: -12.893345832824707
    9. 's' → logprob: -13.018345832824707
    10. '	in' → logprob: -13.268345832824707

Token 261: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.16026484966278076
    2. 'enumer' → logprob: -1.9102648496627808
    3. 's' → logprob: -10.16026496887207
    4. 'en' → logprob: -14.28526496887207
    5. ')' → logprob: -15.03526496887207
    6. '   ' → logprob: -15.78526496887207
    7. ' ' → logprob: -15.91026496887207
    8. ' enumer' → logprob: -16.03526496887207
    9. '```' → logprob: -16.03526496887207
    10. 'in' → logprob: -16.16026496887207

Token 262: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18104492127895355
    2. ' sweets' → logprob: -1.8060449361801147
    3. ')' → logprob: -7.181045055389404
    4. ' s' → logprob: -8.181044578552246
    5. ')s' → logprob: -8.681044578552246
    6. '(s' → logprob: -10.181044578552246
    7. 'sweet' → logprob: -11.306044578552246
    8. ' sweet' → logprob: -11.931044578552246
    9. '):
' → logprob: -12.556044578552246
    10. '_s' → logprob: -12.556044578552246

Token 263: 'weets' (ID: 41143)
  Prédit: 'weets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weets' → logprob: -0.0006520323222503066
    2. 's' → logprob: -7.375651836395264
    3. ' sweets' → logprob: -11.375652313232422
    4. 'we' → logprob: -12.000652313232422
    5. 'w' → logprob: -12.375652313232422
    6. 'e' → logprob: -13.500652313232422
    7. 'weet' → logprob: -15.250652313232422
    8. ')' → logprob: -15.375652313232422
    9. 'wee' → logprob: -15.875652313232422
    10. 'ects' → logprob: -16.250652313232422

Token 264: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5759832262992859
    2. '):' → logprob: -0.8259832262992859
    3. '):
' → logprob: -10.575983047485352
    4. ':' → logprob: -11.700983047485352
    5. '   ' → logprob: -12.075983047485352
    6. ')' → logprob: -13.075983047485352
    7. '):

' → logprob: -13.950983047485352
    8. ' ):' → logprob: -14.825983047485352
    9. '       ' → logprob: -14.950983047485352
    10. ' ):
' → logprob: -15.200983047485352

Token 265: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5914620161056519
    2. '       ' → logprob: -1.4664620161056519
    3. ':' → logprob: -1.7164620161056519
    4. ':
' → logprob: -3.4664621353149414
    5. ',' → logprob: -5.716462135314941
    6. '):
' → logprob: -8.091462135314941
    7. '
' → logprob: -8.216462135314941
    8. '	       ' → logprob: -8.341462135314941
    9. ' for' → logprob: -8.716462135314941
    10. '<|end|>' → logprob: -9.466462135314941

Token 266: ' r' (ID: 428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10112129151821136
    2. ' for' → logprob: -3.226121187210083
    3. 'r' (adapté à ' r') → logprob: -3.851121187210083
    4. '       ' → logprob: -4.351121425628662
    5. '           ' → logprob: -4.476121425628662
    6. '   ' → logprob: -5.601121425628662
    7. 'c' → logprob: -5.851121425628662
    8. 'radius' → logprob: -6.476121425628662
    9. 'theta' → logprob: -7.101121425628662
    10. 'points' → logprob: -7.476121425628662

Token 267: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12698134779930115
    2. '=' → logprob: -2.126981258392334
    3. 'adius' → logprob: -10.626981735229492
    4. '1' → logprob: -11.126981735229492
    5. ' ' → logprob: -12.376981735229492
    6. ',' → logprob: -12.626981735229492
    7. '=int' → logprob: -13.376981735229492
    8. '=r' → logprob: -13.751981735229492
    9. ')' → logprob: -14.001981735229492
    10. '   ' → logprob: -14.751981735229492

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889717072248459
    2. ' =' → logprob: -2.57889723777771
    3. ')' → logprob: -13.453897476196289
    4. '=r' → logprob: -13.453897476196289
    5. '=int' → logprob: -13.828897476196289
    6. ',' → logprob: -14.078897476196289
    7. ' ' → logprob: -14.953897476196289
    8. '=
' → logprob: -15.203897476196289
    9. '=v' → logprob: -15.453897476196289
    10. '=cut' → logprob: -15.453897476196289

Token 269: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.014165272004902363
    2. ' mid' → logprob: -4.26416540145874
    3. 'v' → logprob: -13.639164924621582
    4. 'm' → logprob: -15.139164924621582
    5. ' v' → logprob: -15.514164924621582
    6. 'mi' → logprob: -16.7641658782959
    7. '[mid' → logprob: -16.8891658782959
    8. '   ' → logprob: -17.1391658782959
    9. '(mid' → logprob: -17.1391658782959
    10. ' ' → logprob: -18.1391658782959

Token 270: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.012196095660328865
    2. '*v' → logprob: -4.887196063995361
    3. ' *' → logprob: -5.387196063995361
    4. '*
' → logprob: -12.76219654083252
    5. '*r' → logprob: -14.88719654083252
    6. '**' → logprob: -15.38719654083252
    7. '*q' → logprob: -16.012195587158203
    8. '*s' → logprob: -16.137195587158203
    9. '*u' → logprob: -16.137195587158203
    10. '*c' → logprob: -16.262195587158203

Token 271: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.000488110730657354
    2. ' v' → logprob: -7.62548828125
    3. '	v' → logprob: -17.25048828125
    4. '*v' → logprob: -18.75048828125
    5. ')v' → logprob: -18.87548828125
    6. ' ' → logprob: -19.00048828125
    7. '   ' → logprob: -19.12548828125
    8. '
' → logprob: -19.37548828125
    9. '(v' → logprob: -20.12548828125
    10. '$v' → logprob: -20.25048828125

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '[i' → logprob: -16.875
    4. 's' → logprob: -18.875
    5. 'i' → logprob: -19.25
    6. '   ' → logprob: -19.5
    7. '[' → logprob: -19.625
    8. '```' → logprob: -19.75
    9. '
' → logprob: -19.875
    10. 'alue' → logprob: -20.4375

Token 273: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000984935206361115
    2. '
' → logprob: -7.375985145568848
    3. '       ' → logprob: -8.125985145568848
    4. ',' → logprob: -10.500985145568848
    5. '            
' → logprob: -11.500985145568848
    6. '   ' → logprob: -12.250985145568848
    7. 'for' → logprob: -13.000985145568848
    8. '
' → logprob: -13.250985145568848
    9. '        
' → logprob: -13.375985145568848
    10. '  
' → logprob: -13.500985145568848

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005012048059143126
    2. '       ' → logprob: -8.50050163269043
    3. ',' → logprob: -9.37550163269043
    4. ' for' → logprob: -9.37550163269043
    5. '
' → logprob: -9.75050163269043
    6. '<|end|>' → logprob: -11.25050163269043
    7. 'for' → logprob: -11.37550163269043
    8. '            
' → logprob: -11.75050163269043
    9. ':' → logprob: -11.87550163269043
    10. '   ' → logprob: -12.12550163269043

Token 275: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.65882408618927
    2. 'for' → logprob: -0.78382408618927
    3. 'theta' → logprob: -4.2838239669799805
    4. 'points' → logprob: -5.5338239669799805
    5. 'angle' → logprob: -6.2838239669799805
    6. 'import' → logprob: -6.4088239669799805
    7. 'steps' → logprob: -6.5338239669799805
    8. 'angles' → logprob: -6.5338239669799805
    9. 'step' → logprob: -7.7838239669799805
    10. 'num' → logprob: -8.03382396697998

Token 276: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002599557163193822
    2. '.' → logprob: -6.127599716186523
    3. '.extend' → logprob: -7.877599716186523
    4. ' .' → logprob: -10.627599716186523
    5. ' +=' → logprob: -12.377599716186523
    6. '.ap' → logprob: -13.252599716186523
    7. '.app' → logprob: -13.627599716186523
    8. ' =' → logprob: -13.752599716186523
    9. '=' → logprob: -13.877599716186523
    10. '+=' → logprob: -14.377599716186523

Token 277: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.22723311185836792
    2. '(' → logprob: -2.2272331714630127
    3. '(x' → logprob: -2.3522331714630127
    4. ' (' → logprob: -8.977232933044434
    5. '[(' → logprob: -9.977232933044434
    6. '(
' → logprob: -10.352232933044434
    7. '(y' → logprob: -10.477232933044434
    8. '   ' → logprob: -10.852232933044434
    9. '([' → logprob: -11.227232933044434
    10. '
' → logprob: -12.602232933044434

Token 278: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.15441757265944e-05
    2. ' x' → logprob: -10.375031471252441
    3. '(x' → logprob: -15.500031471252441
    4. '   ' → logprob: -17.375032424926758
    5. '
' → logprob: -18.125032424926758
    6. '[x' → logprob: -19.125032424926758
    7. ' ' → logprob: -19.250032424926758
    8. 'int' → logprob: -19.375032424926758
    9. '	x' → logprob: -19.375032424926758
    10. ')x' → logprob: -19.375032424926758

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ',' → logprob: -13.500001907348633
    3. '```' → logprob: -15.250001907348633
    4. 'r' → logprob: -15.875001907348633
    5. '
' → logprob: -15.875001907348633
    6. '１' → logprob: -17.500001907348633
    7. '१' → logprob: -17.500001907348633
    8. 's' → logprob: -17.812501907348633
    9. ' ' → logprob: -17.875001907348633
    10. ')' → logprob: -17.875001907348633

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004347279202193022
    2. ' ,' → logprob: -6.379347324371338
    3. ' +' → logprob: -7.004347324371338
    4. '+' → logprob: -7.129347324371338
    5. '+r' → logprob: -7.879347324371338
    6. ' -' → logprob: -8.50434684753418
    7. '-' → logprob: -9.00434684753418
    8. ',y' → logprob: -9.25434684753418
    9. ',r' → logprob: -10.00434684753418
    10. 'r' → logprob: -10.75434684753418

Token 281: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2254382073879242
    2. ' y' → logprob: -1.6004382371902466
    3. ' ' → logprob: -11.225438117980957
    4. '   ' → logprob: -12.350438117980957
    5. '0' → logprob: -13.850438117980957
    6. '(y' → logprob: -13.850438117980957
    7. '	y' → logprob: -13.850438117980957
    8. '  ' → logprob: -14.412938117980957
    9. '    ' → logprob: -14.537938117980957
    10. '
' → logprob: -14.662938117980957

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004232139326632023
    2. '-r' → logprob: -5.879231929779053
    3. '-' → logprob: -7.629231929779053
    4. ' -' → logprob: -7.754231929779053
    5. 'r' → logprob: -8.254232406616211
    6. '+r' → logprob: -8.629232406616211
    7. ' ' → logprob: -11.129232406616211
    8. ',' → logprob: -11.504232406616211
    9. ',r' → logprob: -11.504232406616211
    10. '+' → logprob: -11.504232406616211

Token 283: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03388715162873268
    2. '))
' → logprob: -3.4088871479034424
    3. ' ))' → logprob: -8.908886909484863
    4. '))

' → logprob: -9.408886909484863
    5. ' ))
' → logprob: -11.533886909484863
    6. ')' → logprob: -12.283886909484863
    7. '))
' → logprob: -13.158886909484863
    8. '   ' → logprob: -13.408886909484863
    9. ',))
' → logprob: -13.658886909484863
    10. ',' → logprob: -13.908886909484863

Token 284: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020412947051227093
    2. '       ' → logprob: -6.752041339874268
    3. '
' → logprob: -7.752041339874268
    4. '<|end|>' → logprob: -8.25204086303711
    5. ',' → logprob: -9.62704086303711
    6. ')' → logprob: -9.87704086303711
    7. ' for' → logprob: -11.50204086303711
    8. '            
' → logprob: -12.00204086303711
    9. '<|end|>' → logprob: -12.00204086303711
    10. '        
' → logprob: -12.00204086303711

Token 285: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6275145411491394
    2. 'for' (adapté à ' for') → logprob: -1.1275146007537842
    3. 'import' → logprob: -2.252514600753784
    4. ' for' → logprob: -3.377514600753784
    5. '       ' → logprob: -6.377514362335205
    6. 'from' → logprob: -7.377514362335205
    7. ' import' → logprob: -8.377514839172363
    8. '   ' → logprob: -9.002514839172363
    9. 'r' → logprob: -9.877514839172363
    10. '
' → logprob: -10.252514839172363

Token 286: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029896501451730728
    2. ' j' → logprob: -3.5298964977264404
    3. '(j' → logprob: -9.77989673614502
    4. 'x' → logprob: -10.40489673614502
    5. '(x' → logprob: -10.40489673614502
    6. ' (' → logprob: -12.02989673614502
    7. '	j' → logprob: -12.27989673614502
    8. '   ' → logprob: -12.40489673614502
    9. 'i' → logprob: -12.77989673614502
    10. ' ' → logprob: -12.90489673614502

Token 287: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022292865440249443
    2. 'in' → logprob: -4.0222930908203125
    3. ',' → logprob: -5.5222930908203125
    4. ' ,' → logprob: -9.147293090820312
    5. ' ' → logprob: -10.522293090820312
    6. ' i' → logprob: -13.397293090820312
    7. 'i' → logprob: -14.272293090820312
    8. ',i' → logprob: -15.147293090820312
    9. '1' → logprob: -15.272293090820312
    10. '	in' → logprob: -15.272293090820312

Token 288: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196802109479904
    2. ' range' → logprob: -2.8119680881500244
    3. '(range' → logprob: -15.561967849731445
    4. ' ' → logprob: -16.311967849731445
    5. '	range' → logprob: -17.311967849731445
    6. '  ' → logprob: -18.061967849731445
    7. '   ' → logprob: -18.186967849731445
    8. ' xrange' → logprob: -19.061967849731445
    9. 'rang' → logprob: -19.311967849731445
    10. '    ' → logprob: -20.561967849731445

Token 289: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00464076129719615
    2. '(len' → logprob: -5.379640579223633
    3. '(j' → logprob: -11.254640579223633
    4. '(' → logprob: -12.004640579223633
    5. 'i' → logprob: -14.129640579223633
    6. 'len' → logprob: -14.629640579223633
    7. ' (' → logprob: -16.129640579223633
    8. ' i' → logprob: -16.254640579223633
    9. '(n' → logprob: -17.629640579223633
    10. '[i' → logprob: -18.129640579223633

Token 290: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5056860446929932
    2. '):
' → logprob: -1.5056860446929932
    3. '):' → logprob: -2.130686044692993
    4. '0' → logprob: -3.505686044692993
    5. '           ' → logprob: -4.630685806274414
    6. ' +' → logprob: -5.255685806274414
    7. '   ' → logprob: -5.505685806274414
    8. 'i' → logprob: -6.255685806274414
    9. '       ' → logprob: -6.380685806274414
    10. '1' → logprob: -6.630685806274414

Token 291: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '
' → logprob: -18.000003814697266
    4. 'len' → logprob: -18.250003814697266
    5. '0' → logprob: -18.625003814697266
    6. '   ' → logprob: -19.625003814697266
    7. '2' → logprob: -20.875003814697266
    8. '

' → logprob: -21.500003814697266
    9. '```' → logprob: -22.250003814697266
    10. ',' → logprob: -22.250003814697266

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '0' → logprob: -17.375003814697266
    4. '
' → logprob: -17.500003814697266
    5. 'len' → logprob: -18.125003814697266
    6. '2' → logprob: -19.000003814697266
    7. '   ' → logprob: -19.375003814697266
    8. '

' → logprob: -19.875003814697266
    9. '```' → logprob: -20.250003814697266
    10. '3' → logprob: -21.125003814697266

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7252845029579476e-05
    2. ' ,' → logprob: -10.875027656555176
    3. ',len' → logprob: -11.750027656555176
    4. '‌,' → logprob: -16.87502670288086
    5. ' ' → logprob: -17.12502670288086
    6. 'len' → logprob: -17.37502670288086
    7. '(),' → logprob: -17.37502670288086
    8. '_,' → logprob: -17.50002670288086
    9. ',
' → logprob: -17.62502670288086
    10. '1' → logprob: -17.75002670288086

Token 294: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00407923199236393
    2. ' len' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.12907886505127
    4. '(len' → logprob: -16.254079818725586
    5. '
' → logprob: -17.879079818725586
    6. ' ' → logprob: -18.254079818725586
    7. 'n' → logprob: -18.254079818725586
    8. '       ' → logprob: -19.254079818725586
    9. '	len' → logprob: -19.379079818725586
    10. '  ' → logprob: -19.629079818725586

Token 295: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.4617256056226324e-05
    2. 's' → logprob: -11.250014305114746
    3. '(' → logprob: -13.750014305114746
    4. ' (' → logprob: -15.125014305114746
    5. ')' → logprob: -16.250015258789062
    6. ')s' → logprob: -17.375015258789062
    7. '(
' → logprob: -18.250015258789062
    8. '

' → logprob: -18.625015258789062
    9. '```' → logprob: -19.000015258789062
    10. '
' → logprob: -19.125015258789062

Token 296: 'weets' (ID: 41143)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0032045694533735514
    2. '(s' → logprob: -5.753204345703125
    3. ')' → logprob: -11.128204345703125
    4. ' sweets' → logprob: -12.128204345703125
    5. 'c' → logprob: -13.128204345703125
    6. ')s' → logprob: -13.253204345703125
    7. 'weets' → logprob: -13.753204345703125
    8. 'sweet' → logprob: -14.503204345703125
    9. '(' → logprob: -14.753204345703125
    10. '_s' → logprob: -15.878204345703125

Token 297: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.001983118010684848
    2. '):' → logprob: -6.251983165740967
    3. ' ):
' → logprob: -10.501982688903809
    4. ')):
' → logprob: -10.751982688903809
    5. '):
' → logprob: -13.376982688903809
    6. '):

' → logprob: -13.376982688903809
    7. '   ' → logprob: -14.376982688903809
    8. ' ' → logprob: -14.501982688903809
    9. '()):
' → logprob: -15.001982688903809
    10. ' ):' → logprob: -15.126982688903809

Token 298: '               ' (ID: 506)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8842266798019409
    2. '               ' → logprob: -1.259226679801941
    3. ',' → logprob: -2.3842267990112305
    4. ' ' → logprob: -2.5092267990112305
    5. '           ' → logprob: -3.1342267990112305
    6. '(x' → logprob: -3.3842267990112305
    7. '(' → logprob: -4.3842267990112305
    8. ' x' → logprob: -4.5092267990112305
    9. ' ,' → logprob: -4.6342267990112305
    10. '   ' → logprob: -5.8842267990112305

Token 299: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1744081825017929
    2. 'x' (adapté à ' x') → logprob: -1.924408197402954
    3. '(x' → logprob: -4.799407958984375
    4. ' (' → logprob: -5.174407958984375
    5. '                   ' → logprob: -9.424407958984375
    6. '   ' → logprob: -9.549407958984375
    7. '               ' → logprob: -11.299407958984375
    8. ' ' → logprob: -11.799407958984375
    9. '(' → logprob: -12.299407958984375
    10. '	x' → logprob: -12.799407958984375

Token 300: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.4656579120783135e-05
    2. ',' → logprob: -10.750044822692871
    3. 'j' → logprob: -11.000044822692871
    4. ' ' → logprob: -12.500044822692871
    5. '```' → logprob: -13.625044822692871
    6. '1' → logprob: -14.750044822692871
    7. ' ,' → logprob: -15.125044822692871
    8. '
' → logprob: -15.125044822692871
    9. ',j' → logprob: -15.125044822692871
    10. '_,' → logprob: -16.375043869018555

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.126521035796031e-05
    2. ',y' → logprob: -9.375091552734375
    3. ' ,' → logprob: -12.125091552734375
    4. '=' → logprob: -15.250091552734375
    5. ',
' → logprob: -15.375091552734375
    6. 'y' → logprob: -15.875091552734375
    7. ',j' → logprob: -16.125091552734375
    8. '<|end|>' → logprob: -16.625091552734375
    9. ',s' → logprob: -17.750091552734375
    10. '‌,' → logprob: -18.000091552734375

Token 302: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07889022678136826
    2. 'y' → logprob: -2.578890323638916
    3. ',y' → logprob: -15.828889846801758
    4. '<|end|>' → logprob: -16.078889846801758
    5. ' ' → logprob: -16.453889846801758
    6. ',' → logprob: -16.578889846801758
    7. '	y' → logprob: -16.828889846801758
    8. '    ' → logprob: -17.578889846801758
    9. ''y' → logprob: -18.828889846801758
    10. 's' → logprob: -19.328889846801758

Token 303: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017111169872805476
    2. ',' → logprob: -6.501710891723633
    3. 's' → logprob: -8.751710891723633
    4. '1' → logprob: -10.751710891723633
    5. 'j' → logprob: -11.501710891723633
    6. ' ' → logprob: -12.126710891723633
    7. '   ' → logprob: -12.751710891723633
    8. 'y' → logprob: -13.251710891723633
    9. '    ' → logprob: -13.626710891723633
    10. ' ,' → logprob: -13.751710891723633

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001963881659321487
    2. '=' → logprob: -8.62519645690918
    3. ' ,' → logprob: -11.50019645690918
    4. ' =' → logprob: -12.62519645690918
    5. ',v' → logprob: -12.87519645690918
    6. '_,' → logprob: -15.25019645690918
    7. ',s' → logprob: -16.12519645690918
    8. ',y' → logprob: -16.25019645690918
    9. ')' → logprob: -16.50019645690918
    10. ',j' → logprob: -16.75019645690918

Token 305: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.008614808320999146
    2. ' v' → logprob: -4.758615016937256
    3. '	v' → logprob: -15.258614540100098
    4. '=v' → logprob: -17.883615493774414
    5. ',v' → logprob: -18.758615493774414
    6. ' ' → logprob: -18.758615493774414
    7. 'vj' → logprob: -19.258615493774414
    8. '   ' → logprob: -19.508615493774414
    9. '_v' → logprob: -19.758615493774414
    10. '  ' → logprob: -19.758615493774414

Token 306: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '=' → logprob: -16.125
    3. ' =' → logprob: -16.375
    4. 'j' → logprob: -16.625
    5. ',' → logprob: -16.875
    6. '   ' → logprob: -17.125
    7. ' ' → logprob: -17.5
    8. '
' → logprob: -17.875
    9. '1' → logprob: -18.375
    10. '```' → logprob: -18.75

Token 307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760068297386169
    2. ' =' → logprob: -0.8260068297386169
    3. ')' → logprob: -9.826006889343262
    4. ' ' → logprob: -12.451006889343262
    5. '   ' → logprob: -12.951006889343262
    6. ',' → logprob: -13.201006889343262
    7. '=x' → logprob: -13.201006889343262
    8. ')=' → logprob: -13.826006889343262
    9. '=(' → logprob: -14.076006889343262
    10. '=s' → logprob: -15.201006889343262

Token 308: ' sweets' (ID: 107803)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.061992332339286804
    2. ' sweets' → logprob: -2.8119924068450928
    3. '   ' → logprob: -12.186992645263672
    4. 'sweet' → logprob: -12.436992645263672
    5. ' sweet' → logprob: -12.561992645263672
    6. '(s' → logprob: -12.936992645263672
    7. ' s' → logprob: -13.561992645263672
    8. ' swe' → logprob: -13.686992645263672
    9. ' ' → logprob: -13.686992645263672
    10. '	s' → logprob: -13.811992645263672

Token 309: '[j' (ID: 7895)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21992912888526917
    2. '[j' → logprob: -2.2199292182922363
    3. ' =' → logprob: -2.4699292182922363
    4. '=j' → logprob: -5.594929218292236
    5. '   ' → logprob: -9.094928741455078
    6. '           ' → logprob: -9.344928741455078
    7. ')' → logprob: -9.969928741455078
    8. ' ' → logprob: -10.094928741455078
    9. '=s' → logprob: -10.344928741455078
    10. '       ' → logprob: -10.344928741455078

Token 310: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2938362956047058
    2. ' =' → logprob: -1.9188363552093506
    3. ']' → logprob: -2.4188363552093506
    4. '=' → logprob: -4.9188361167907715
    5. ')=' → logprob: -5.7938361167907715
    6. ']=' → logprob: -6.0438361167907715
    7. '           ' → logprob: -6.4188361167907715
    8. '   ' → logprob: -6.5438361167907715
    9. '       ' → logprob: -7.2938361167907715
    10. ',' → logprob: -7.2938361167907715

Token 311: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02735430933535099
    2. 'r' → logprob: -4.6523542404174805
    3. ',' → logprob: -4.9023542404174805
    4. '
' → logprob: -5.1523542404174805
    5. '                
' → logprob: -6.2773542404174805
    6. ' r' → logprob: -7.4023542404174805
    7. ',
' → logprob: -7.5273542404174805
    8. '           ' → logprob: -7.7773542404174805
    9. '```' → logprob: -8.27735424041748
    10. ')' → logprob: -9.65235424041748

Token 312: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.336421936750412
    2. 'd' → logprob: -1.3364219665527344
    3. ' d' → logprob: -4.711421966552734
    4. 'dist' → logprob: -5.336421966552734
    5. ' r' → logprob: -5.711421966552734
    6. ' dist' → logprob: -5.836421966552734
    7. '   ' → logprob: -7.211421966552734
    8. 'R' → logprob: -7.461421966552734
    9. '           ' → logprob: -7.711421966552734
    10. '       ' → logprob: -7.711421966552734

Token 313: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.572941179503687e-05
    2. '1' → logprob: -10.750045776367188
    3. ' =' → logprob: -11.625045776367188
    4. '=' → logprob: -11.875045776367188
    5. ' ' → logprob: -12.125045776367188
    6. '
' → logprob: -14.500045776367188
    7. ',' → logprob: -14.625045776367188
    8. '```' → logprob: -14.625045776367188
    9. 'j' → logprob: -14.875045776367188
    10. '   ' → logprob: -14.875045776367188

Token 314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132627606391907
    2. ' =' → logprob: -1.313262701034546
    3. ',' → logprob: -14.188262939453125
    4. ' ' → logprob: -15.563262939453125
    5. ')' → logprob: -17.063262939453125
    6. '=r' → logprob: -17.438262939453125
    7. '＝' → logprob: -17.938262939453125
    8. '>' → logprob: -18.063262939453125
    9. '=}' → logprob: -18.188262939453125
    10. '=
' → logprob: -18.563262939453125

Token 315: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.3868820369243622
    2. ' mid' → logprob: -1.1368820667266846
    3. '(mid' → logprob: -11.511881828308105
    4. '[mid' → logprob: -14.011881828308105
    5. 'm' → logprob: -16.511882781982422
    6. '.mid' → logprob: -17.761882781982422
    7. ' ' → logprob: -17.761882781982422
    8. '_mid' → logprob: -17.886882781982422
    9. ' mids' → logprob: -18.386882781982422
    10. 'midt' → logprob: -18.636882781982422

Token 316: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1278388649225235
    2. ' *' → logprob: -2.1278388500213623
    3. '*v' → logprob: -7.002839088439941
    4. ' ' → logprob: -15.002839088439941
    5. '**' → logprob: -15.627839088439941
    6. '*
' → logprob: -15.877839088439941
    7. '*r' → logprob: -16.252838134765625
    8. ' ' → logprob: -17.127838134765625
    9. '*u' → logprob: -17.377838134765625
    10. 'v' → logprob: -17.502838134765625

Token 317: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0015023599844425917
    2. ' v' → logprob: -6.501502513885498
    3. ' ' → logprob: -16.751502990722656
    4. '	v' → logprob: -18.376502990722656
    5. '(v' → logprob: -18.876502990722656
    6. '   ' → logprob: -19.501502990722656
    7. 'r' → logprob: -19.501502990722656
    8. '
' → logprob: -19.751502990722656
    9. ')v' → logprob: -19.751502990722656
    10. 'vj' → logprob: -19.876502990722656

Token 318: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.750001907348633
    3. 'j' → logprob: -15.375001907348633
    4. '```' → logprob: -15.625001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '_' → logprob: -17.687501907348633
    7. '[' → logprob: -17.687501907348633
    8. '
' → logprob: -18.250001907348633
    9. '২' → logprob: -18.437501907348633
    10. '۲' → logprob: -18.625001907348633

Token 319: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019472485408186913
    2. '
' → logprob: -4.519472599029541
    3. 'distance' → logprob: -5.644472599029541
    4. ',' → logprob: -6.269472599029541
    5. '                
' → logprob: -6.644472599029541
    6. ',
' → logprob: -7.769472599029541
    7. ')' → logprob: -8.019472122192383
    8. 'import' → logprob: -8.144472122192383
    9. '.' → logprob: -8.769472122192383
    10. ' distance' → logprob: -9.019472122192383

Token 320: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006977856624871492
    2. '
' → logprob: -5.3819780349731445
    3. 'distance' → logprob: -6.7569780349731445
    4. '                
' → logprob: -7.0069780349731445
    5. ' distance' → logprob: -9.506978034973145
    6. ',' → logprob: -10.006978034973145
    7. ',
' → logprob: -10.256978034973145
    8. 'dist' → logprob: -10.756978034973145
    9. 'import' → logprob: -10.881978034973145
    10. 'x' → logprob: -10.881978034973145

Token 321: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.00047714399988763034
    2. 'dx' → logprob: -8.250476837158203
    3. '   ' → logprob: -9.625476837158203
    4. 'dist' → logprob: -9.625476837158203
    5. ' d' → logprob: -9.750476837158203
    6. 'if' → logprob: -11.625476837158203
    7. 'D' → logprob: -11.750476837158203
    8. '
' → logprob: -13.125476837158203
    9. '#' → logprob: -13.500476837158203
    10. '       ' → logprob: -13.500476837158203

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31337690353393555
    2. '=' → logprob: -1.3133769035339355
    3. 'ist' → logprob: -9.438377380371094
    4. 'x' → logprob: -11.063377380371094
    5. 'istance' → logprob: -11.438377380371094
    6. ' ' → logprob: -12.438377380371094
    7. '	' → logprob: -14.188377380371094
    8. '=x' → logprob: -14.813377380371094
    9. '=sys' → logprob: -14.938377380371094
    10. ',' → logprob: -14.938377380371094

Token 323: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0012716623023152351
    2. 'math' → logprob: -7.251271724700928
    3. ' dist' → logprob: -7.501271724700928
    4. ' math' → logprob: -11.62627124786377
    5. '(dist' → logprob: -16.626272201538086
    6. '	dist' → logprob: -18.001272201538086
    7. 'dis' → logprob: -18.751272201538086
    8. ' ' → logprob: -19.501272201538086
    9. 'distance' → logprob: -19.626272201538086
    10. '(math' → logprob: -20.001272201538086

Token 324: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.018178271129727364
    2. '(' → logprob: -4.018178462982178
    3. '(
' → logprob: -10.76817798614502
    4. ' (' → logprob: -12.14317798614502
    5. 'x' → logprob: -13.26817798614502
    6. '(

' → logprob: -16.393178939819336
    7. '((' → logprob: -16.643178939819336
    8. '(int' → logprob: -18.143178939819336
    9. '(
' → logprob: -18.393178939819336
    10. ',' → logprob: -18.768178939819336

Token 325: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.33318787813186646
    2. '(x' → logprob: -1.5831878185272217
    3. '1' → logprob: -2.5831878185272217
    4. ' x' → logprob: -6.583188056945801
    5. '(' → logprob: -7.333188056945801
    6. ',x' → logprob: -8.7081880569458
    7. 's' → logprob: -8.7081880569458
    8. ',' → logprob: -9.9581880569458
    9. '(
' → logprob: -10.4581880569458
    10. ' (' → logprob: -11.2081880569458

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019532525911927223
    2. ' ,' → logprob: -6.501953125
    3. ',x' → logprob: -8.001953125
    4. ',y' → logprob: -9.876953125
    5. '<|end|>' → logprob: -10.626953125
    6. ' x' → logprob: -11.126953125
    7. 'x' → logprob: -11.626953125
    8. ' ' → logprob: -11.876953125
    9. '(x' → logprob: -12.376953125
    10. '(' → logprob: -14.001953125

Token 327: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.25192946195602417
    2. ' y' → logprob: -1.501929521560669
    3. ',y' → logprob: -15.62692928314209
    4. '	y' → logprob: -16.501930236816406
    5. ' ' → logprob: -16.876930236816406
    6. ',' → logprob: -17.626930236816406
    7. 'x' → logprob: -17.751930236816406
    8. ''y' → logprob: -18.251930236816406
    9. ')y' → logprob: -18.876930236816406
    10. '<|end|>' → logprob: -19.001930236816406

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7973297238349915
    2. '2' → logprob: -1.0473296642303467
    3. 'y' → logprob: -1.7973296642303467
    4. ',' → logprob: -3.6723296642303467
    5. ' y' → logprob: -5.172329902648926
    6. 'x' → logprob: -7.672329902648926
    7. ' ' → logprob: -7.797329902648926
    8. ',y' → logprob: -7.922329902648926
    9. '```' → logprob: -8.922329902648926
    10. '   ' → logprob: -8.922329902648926

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.980854959692806e-05
    2. ',x' → logprob: -10.125069618225098
    3. ' ,' → logprob: -10.500069618225098
    4. ',
' → logprob: -13.375069618225098
    5. 'x' → logprob: -15.125069618225098
    6. ',y' → logprob: -15.750069618225098
    7. ' x' → logprob: -16.375070571899414
    8. ',

' → logprob: -17.250070571899414
    9. ',
' → logprob: -17.375070571899414
    10. '(x' → logprob: -17.625070571899414

Token 330: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00033546582562848926
    2. ' x' → logprob: -8.000335693359375
    3. '	x' → logprob: -19.625335693359375
    4. '<|end|>' → logprob: -19.750335693359375
    5. ')x' → logprob: -20.000335693359375
    6. '(x' → logprob: -20.500335693359375
    7. ' ' → logprob: -20.875335693359375
    8. '"x' → logprob: -21.000335693359375
    9. ')' → logprob: -22.750335693359375
    10. ',x' → logprob: -23.125335693359375

Token 331: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.87501335144043
    3. ',' → logprob: -12.25001335144043
    4. '```' → logprob: -14.25001335144043
    5. ' ,' → logprob: -15.37501335144043
    6. '   ' → logprob: -16.12501335144043
    7. '[' → logprob: -17.31251335144043
    8. '
' → logprob: -17.37501335144043
    9. '``' → logprob: -17.37501335144043
    10. '  ' → logprob: -17.43751335144043

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.873571692267433e-05
    2. ' ,' → logprob: -9.625068664550781
    3. ',y' → logprob: -12.875068664550781
    4. ',x' → logprob: -16.25006866455078
    5. ' ' → logprob: -18.50006866455078
    6. ')' → logprob: -18.50006866455078
    7. ',
' → logprob: -18.75006866455078
    8. '_,' → logprob: -19.00006866455078
    9. 'x' → logprob: -19.50006866455078
    10. '   ' → logprob: -19.50006866455078

Token 333: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20141461491584778
    2. ' y' → logprob: -1.7014145851135254
    3. '   ' → logprob: -14.451415061950684
    4. ' ' → logprob: -14.951415061950684
    5. '	y' → logprob: -15.076415061950684
    6. 'x' → logprob: -16.201414108276367
    7. '    ' → logprob: -16.326414108276367
    8. '  ' → logprob: -17.826414108276367
    9. ''y' → logprob: -17.826414108276367
    10. '<|end|>' → logprob: -18.326414108276367

Token 334: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. ',' → logprob: -15.375000953674316
    4. '1' → logprob: -17.000001907348633
    5. '```' → logprob: -17.375001907348633
    6. 'y' → logprob: -17.625001907348633
    7. ')' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.500001907348633
    9. '۲' → logprob: -18.500001907348633
    10. '₂' → logprob: -20.062501907348633

Token 335: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12708590924739838
    2. ')
' → logprob: -2.1270859241485596
    3. ' )' → logprob: -9.50208568572998
    4. ' )
' → logprob: -10.12708568572998
    5. ')
' → logprob: -10.12708568572998
    6. ')

' → logprob: -13.50208568572998
    7. '               ' → logprob: -15.25208568572998
    8. ')<' → logprob: -15.50208568572998
    9. ',' → logprob: -15.62708568572998
    10. ')`
' → logprob: -15.62708568572998

Token 336: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018696174956858158
    2. ' if' → logprob: -7.2518696784973145
    3. '       ' → logprob: -8.001869201660156
    4. ',' → logprob: -8.501869201660156
    5. '                
' → logprob: -8.626869201660156
    6. '<|end|>' → logprob: -8.626869201660156
    7. ')' → logprob: -9.501869201660156
    8. 'if' → logprob: -9.501869201660156
    9. '                ' → logprob: -11.126869201660156
    10. '           ' → logprob: -11.501869201660156

Token 337: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43319520354270935
    2. 'if' → logprob: -1.0581952333450317
    3. '               ' → logprob: -5.558195114135742
    4. '       ' → logprob: -7.433195114135742
    5. '```' → logprob: -11.808195114135742
    6. '	if' → logprob: -12.183195114135742
    7. '                
' → logprob: -12.308195114135742
    8. ')' → logprob: -12.433195114135742
    9. '   ' → logprob: -12.933195114135742
    10. ',' → logprob: -13.183195114135742

Token 338: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008626867085695267
    2. ' if' → logprob: -4.758626937866211
    3. '               ' → logprob: -11.633626937866211
    4. '                
' → logprob: -14.133626937866211
    5. '```' → logprob: -14.508626937866211
    6. '   ' → logprob: -14.508626937866211
    7. '#' → logprob: -14.633626937866211
    8. 'If' → logprob: -14.633626937866211
    9. '
' → logprob: -15.383626937866211
    10. '           ' → logprob: -16.00862693786621

Token 339: ' aucune' (ID: 51173)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002335804980248213
    2. ' d' → logprob: -6.127336025238037
    3. 'r' → logprob: -9.502335548400879
    4. '   ' → logprob: -9.877335548400879
    5. 'abs' → logprob: -11.377335548400879
    6. ' ' → logprob: -12.377335548400879
    7. 'not' → logprob: -12.627335548400879
    8. ' not' → logprob: -13.002335548400879
    9. ' r' → logprob: -13.877335548400879
    10. '	d' → logprob: -14.127335548400879

Token 340: ' intersection' (ID: 42002)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7755666375160217
    2. ' ' → logprob: -2.275566577911377
    3. 'abs' → logprob: -3.025566577911377
    4. 'intersection' → logprob: -3.150566577911377
    5. 'if' → logprob: -3.275566577911377
    6. 'd' → logprob: -3.275566577911377
    7. 'diff' → logprob: -3.525566577911377
    8. 'n' → logprob: -3.650566577911377
    9. ' >' → logprob: -4.025566577911377
    10. 'range' → logprob: -4.025566577911377

Token 341: ' possible' (ID: 4149)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.660042405128479
    2. '>=' → logprob: -1.910042405128479
    3. ' ==' → logprob: -2.2850422859191895
    4. '==' → logprob: -2.5350422859191895
    5. '>' → logprob: -2.7850422859191895
    6. ' >' → logprob: -2.7850422859191895
    7. '=' → logprob: -4.2850422859191895
    8. ' <=' → logprob: -4.7850422859191895
    9. ' or' → logprob: -5.7850422859191895
    10. '<=' → logprob: -5.9100422859191895

Token 342: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3621532917022705
    2. 'if' → logprob: -1.8621532917022705
    3. ' or' → logprob: -1.9871532917022705
    4. ':' → logprob: -2.6121532917022705
    5. '               ' → logprob: -2.7371532917022705
    6. '==' → logprob: -2.9871532917022705
    7. ' >=' → logprob: -2.9871532917022705
    8. ',' → logprob: -3.1121532917022705
    9. '>=' → logprob: -3.4871532917022705
    10. '=' → logprob: -3.4871532917022705

Token 343: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08725108951330185
    2. ' if' → logprob: -3.0872511863708496
    3. 'if' → logprob: -3.5872511863708496
    4. ',' → logprob: -5.96225118637085
    5. '==' → logprob: -6.33725118637085
    6. '           ' → logprob: -6.58725118637085
    7. ':' → logprob: -6.96225118637085
    8. ' ==' → logprob: -7.21225118637085
    9. '                   ' → logprob: -7.46225118637085
    10. '=' → logprob: -7.46225118637085

Token 344: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2900410294532776
    2. ' if' → logprob: -1.5400409698486328
    3. '               ' → logprob: -3.290040969848633
    4. '                   ' → logprob: -10.040040969848633
    5. '                ' → logprob: -10.540040969848633
    6. '                
' → logprob: -10.915040969848633
    7. '           ' → logprob: -11.040040969848633
    8. ' ' → logprob: -12.165040969848633
    9. '   ' → logprob: -12.165040969848633
    10. ',' → logprob: -12.290040969848633

Token 345: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.043100133538246155
    2. ' d' → logprob: -3.168100118637085
    3. 'r' → logprob: -9.293100357055664
    4. ' r' → logprob: -12.543100357055664
    5. '	d' → logprob: -13.293100357055664
    6. '   ' → logprob: -13.293100357055664
    7. '>d' → logprob: -13.793100357055664
    8. ' ' → logprob: -14.543100357055664
    9. '(d' → logprob: -15.168100357055664
    10. '>' → logprob: -17.043100357055664

Token 346: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.34854352474212646
    2. ' >' → logprob: -1.2235435247421265
    3. ' ' → logprob: -9.473543167114258
    4. '">' → logprob: -11.473543167114258
    5. '>=' → logprob: -12.473543167114258
    6. '=' → logprob: -13.098543167114258
    7. '&gt' → logprob: -13.473543167114258
    8. '==' → logprob: -13.973543167114258
    9. ' >=' → logprob: -14.348543167114258
    10. ''>' → logprob: -15.223543167114258

Token 347: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008618946187198162
    2. ' r' → logprob: -4.7586188316345215
    3. '(r' → logprob: -12.38361930847168
    4. ' (' → logprob: -16.00861930847168
    5. '	r' → logprob: -16.25861930847168
    6. '(' → logprob: -16.88361930847168
    7. '_r' → logprob: -17.50861930847168
    8. '=r' → logprob: -18.63361930847168
    9. ' ' → logprob: -19.00861930847168
    10. '[r' → logprob: -20.00861930847168

Token 348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. 'r' → logprob: -13.500001907348633
    3. '2' → logprob: -17.250001907348633
    4. '```' → logprob: -17.750001907348633
    5. '(r' → logprob: -18.750001907348633
    6. '[r' → logprob: -19.625001907348633
    7. 's' → logprob: -20.000001907348633
    8. '``' → logprob: -20.375001907348633
    9. 'a' → logprob: -21.125001907348633
    10. '{' → logprob: -21.375001907348633

Token 349: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25283917784690857
    2. '+' → logprob: -1.502839207649231
    3. '+r' → logprob: -7.002839088439941
    4. ' ' → logprob: -16.127840042114258
    5. ' plus' → logprob: -16.752840042114258
    6. ' ' → logprob: -16.877840042114258
    7. '＋' → logprob: -17.377840042114258
    8. ' +
' → logprob: -17.752840042114258
    9. '```' → logprob: -18.002840042114258
    10. '+
' → logprob: -18.627840042114258

Token 350: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0040785204619169235
    2. ' r' → logprob: -5.504078388214111
    3. '	r' → logprob: -17.379077911376953
    4. 'd' → logprob: -18.379077911376953
    5. '+r' → logprob: -19.379077911376953
    6. '_r' → logprob: -19.879077911376953
    7. '   ' → logprob: -19.879077911376953
    8. ' ' → logprob: -20.004077911376953
    9. '```' → logprob: -20.629077911376953
    10. '-r' → logprob: -21.254077911376953

Token 351: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. 'r' → logprob: -15.125
    3. ' ' → logprob: -17.625
    4. '２' → logprob: -18.375
    5. '```' → logprob: -18.625
    6. '۲' → logprob: -19.0
    7. '₂' → logprob: -19.25
    8. ' r' → logprob: -19.8125
    9. 'c' → logprob: -20.4375
    10. '   ' → logprob: -20.8125

Token 352: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3570677638053894
    2. ':
' → logprob: -1.7320678234100342
    3. ' or' → logprob: -2.232067823410034
    4. '   ' → logprob: -4.482067584991455
    5. '           ' → logprob: -6.482067584991455
    6. '                   ' → logprob: -7.107067584991455
    7. '               ' → logprob: -7.232067584991455
    8. ' :' → logprob: -7.982067584991455
    9. ' continue' → logprob: -7.982067584991455
    10. ' ' → logprob: -8.482068061828613

Token 353: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0040785204619169235
    2. ' d' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.629077911376953
    4. '	d' → logprob: -17.504077911376953
    5. '
' → logprob: -18.754077911376953
    6. ' ' → logprob: -19.254077911376953
    7. '  ' → logprob: -20.379077911376953
    8. '>d' → logprob: -20.754077911376953
    9. '       ' → logprob: -21.254077911376953
    10. '\
' → logprob: -21.254077911376953

Token 354: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.42874011397361755
    2. ' <' → logprob: -1.05374014377594
    3. ' ' → logprob: -10.803740501403809
    4. '[' → logprob: -13.428740501403809
    5. '<class' → logprob: -13.428740501403809
    6. 'a' → logprob: -13.678740501403809
    7. '```' → logprob: -13.678740501403809
    8. '0' → logprob: -13.803740501403809
    9. '<com' → logprob: -13.803740501403809
    10. '==' → logprob: -14.053740501403809

Token 355: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00014084660506341606
    2. ' abs' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.375141143798828
    4. '(abs' → logprob: -15.625141143798828
    5. 'math' → logprob: -15.875141143798828
    6. ' ' → logprob: -17.375141143798828
    7. '
' → logprob: -18.250141143798828
    8. '```' → logprob: -18.375141143798828
    9. 'fabs' → logprob: -18.375141143798828
    10. '.abs' → logprob: -18.875141143798828

Token 356: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.259079363080673e-05
    2. '(' → logprob: -11.625012397766113
    3. 'r' → logprob: -12.625012397766113
    4. ' (' → logprob: -15.500012397766113
    5. 'd' → logprob: -16.25001335144043
    6. '(
' → logprob: -17.37501335144043
    7. '	r' → logprob: -18.62501335144043
    8. '((' → logprob: -19.00001335144043
    9. '[r' → logprob: -19.12501335144043
    10. 'diff' → logprob: -20.37501335144043

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. '2' → logprob: -12.250005722045898
    3. 'r' → logprob: -15.250005722045898
    4. ' ' → logprob: -17.2500057220459
    5. '[' → logprob: -17.5000057220459
    6. '<|end|>' → logprob: -17.6875057220459
    7. ' r' → logprob: -17.7500057220459
    8. 's' → logprob: -17.8125057220459
    9. 't' → logprob: -18.1875057220459
    10. '```' → logprob: -18.3750057220459

Token 358: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3869544267654419
    2. '-' → logprob: -1.136954426765442
    3. '-r' → logprob: -9.636954307556152
    4. ' ' → logprob: -11.011954307556152
    5. '	' → logprob: -14.011954307556152
    6. '   ' → logprob: -15.636954307556152
    7. '[' → logprob: -16.01195526123047
    8. ',' → logprob: -16.01195526123047
    9. '1' → logprob: -16.13695526123047
    10. ' ' → logprob: -16.38695526123047

Token 359: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000805341056548059
    2. ' r' → logprob: -7.125805377960205
    3. '	r' → logprob: -14.625804901123047
    4. '   ' → logprob: -15.750804901123047
    5. '_r' → logprob: -16.000804901123047
    6. ' ' → logprob: -16.625804901123047
    7. '       ' → logprob: -17.125804901123047
    8. '(r' → logprob: -18.500804901123047
    9. 'd' → logprob: -18.875804901123047
    10. '           ' → logprob: -19.000804901123047

Token 360: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005664954078383744
    2. '1' → logprob: -7.500566482543945
    3. '```' → logprob: -12.500566482543945
    4. 'r' → logprob: -13.000566482543945
    5. '[' → logprob: -13.500566482543945
    6. 'd' → logprob: -13.750566482543945
    7. 's' → logprob: -14.375566482543945
    8. ')' → logprob: -14.625566482543945
    9. 'i' → logprob: -14.625566482543945
    10. '   ' → logprob: -14.750566482543945

Token 361: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5706237554550171
    2. '):' → logprob: -0.9456237554550171
    3. ':' → logprob: -3.6956238746643066
    4. ' or' → logprob: -4.445623874664307
    5. ':
' → logprob: -5.945623874664307
    6. ' ):
' → logprob: -6.070623874664307
    7. ')' → logprob: -6.195623874664307
    8. ' ):' → logprob: -6.570623874664307
    9. '   ' → logprob: -7.695623874664307
    10. '       ' → logprob: -8.570623397827148

Token 362: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7660393714904785
    2. '           ' → logprob: -0.8910393714904785
    3. '                   ' → logprob: -2.5160393714904785
    4. 'continue' → logprob: -3.6410393714904785
    5. ' continue' → logprob: -4.1410393714904785
    6. '       ' → logprob: -6.8910393714904785
    7. '   ' → logprob: -7.2660393714904785
    8. '	continue' → logprob: -8.89103889465332
    9. '                       ' → logprob: -9.64103889465332
    10. '
' → logprob: -9.89103889465332

Token 363: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2085789293050766
    2. ' continue' → logprob: -1.7085789442062378
    3. '               ' → logprob: -5.708579063415527
    4. '                   ' → logprob: -6.208579063415527
    5. '   ' → logprob: -6.958579063415527
    6. '           ' → logprob: -7.583579063415527
    7. '	continue' → logprob: -8.333579063415527
    8. '       ' → logprob: -9.208579063415527
    9. '                       ' → logprob: -11.708579063415527
    10. '_continue' → logprob: -13.708579063415527

Token 364: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19741861522197723
    2. '
' → logprob: -1.9474185705184937
    3. '                
' → logprob: -3.322418689727783
    4. '  
' → logprob: -9.072418212890625
    5. '    
' → logprob: -10.322418212890625
    6. '				
' → logprob: -10.447418212890625
    7. ' 
' → logprob: -10.572418212890625
    8. '\n' → logprob: -10.697418212890625
    9. '            
' → logprob: -10.822418212890625
    10. '
' → logprob: -10.947418212890625

Token 365: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07323619723320007
    2. '                
' → logprob: -2.6982362270355225
    3. '
' → logprob: -5.823235988616943
    4. '               
' → logprob: -10.198236465454102
    5. '  
' → logprob: -10.323236465454102
    6. '            
' → logprob: -10.323236465454102
    7. '                

' → logprob: -10.323236465454102
    8. '                    
' → logprob: -10.573236465454102
    9. '```' → logprob: -10.823236465454102
    10. '
                
' → logprob: -10.823236465454102

Token 366: ' if' (ID: 538)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25744369626045227
    2. 'if' (adapté à ' if') → logprob: -1.8824436664581299
    3. 'else' → logprob: -3.00744366645813
    4. '#' → logprob: -4.382443904876709
    5. '   ' → logprob: -4.757443904876709
    6. '
' → logprob: -7.132443904876709
    7. 'elif' → logprob: -7.132443904876709
    8. ' if' → logprob: -7.757443904876709
    9. '               ' → logprob: -8.00744342803955
    10. 'dx' → logprob: -8.38244342803955

Token 367: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.22563743591308594
    2. 'd' → logprob: -1.600637435913086
    3. ' abs' → logprob: -8.850637435913086
    4. 'abs' → logprob: -9.725637435913086
    5. ' ' → logprob: -11.600637435913086
    6. ' math' → logprob: -12.225637435913086
    7. '0' → logprob: -13.100637435913086
    8. '	d' → logprob: -13.100637435913086
    9. '   ' → logprob: -13.475637435913086
    10. ' ' → logprob: -14.350637435913086

Token 368: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759498476982117
    2. ' ==' → logprob: -0.8259498476982117
    3. '=' → logprob: -12.325949668884277
    4. '==
' → logprob: -12.575949668884277
    5. ' =' → logprob: -14.075949668884277
    6. '0' → logprob: -14.575949668884277
    7. ')==' → logprob: -14.700949668884277
    8. ' ' → logprob: -15.450949668884277
    9. ']==' → logprob: -15.950949668884277
    10. '===' → logprob: -16.200950622558594

Token 369: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007101670489646494
    2. ' ' → logprob: -7.2507100105285645
    3. 'r' → logprob: -16.375709533691406
    4. ' ' → logprob: -16.875709533691406
    5. '   ' → logprob: -17.188209533691406
    6. '۰' → logprob: -17.875709533691406
    7. '  ' → logprob: -17.938209533691406
    8. ' r' → logprob: -17.938209533691406
    9. 'abs' → logprob: -18.750709533691406
    10. '
' → logprob: -19.250709533691406

Token 370: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004353181866463274
    2. ' ' → logprob: -7.7504353523254395
    3. 'r' → logprob: -12.375434875488281
    4. '(r' → logprob: -16.31293487548828
    5. ' r' → logprob: -16.31293487548828
    6. 'abs' → logprob: -16.68793487548828
    7. '۰' → logprob: -17.06293487548828
    8. 'd' → logprob: -17.18793487548828
    9. '(' → logprob: -17.37543487548828
    10. '   ' → logprob: -17.37543487548828

Token 371: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012760380282998085
    2. ':
' → logprob: -4.387760162353516
    3. ' and' → logprob: -9.262760162353516
    4. '   ' → logprob: -10.012760162353516
    5. '                   ' → logprob: -10.137760162353516
    6. ' :' → logprob: -10.637760162353516
    7. 'and' → logprob: -11.637760162353516
    8. '.' → logprob: -11.637760162353516
    9. ',' → logprob: -11.762760162353516
    10. '               ' → logprob: -12.137760162353516

Token 372: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0005769816925749183
    2. 'abs' → logprob: -7.500576972961426
    3. ' r' → logprob: -10.750576972961426
    4. '   ' → logprob: -13.750576972961426
    5. ' abs' → logprob: -14.375576972961426
    6. '(r' → logprob: -14.750576972961426
    7. 'math' → logprob: -15.625576972961426
    8. '0' → logprob: -16.250577926635742
    9. '(abs' → logprob: -16.250577926635742
    10. 'fabs' → logprob: -16.750577926635742

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. 'r' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '```' → logprob: -17.0
    5. '<|end|>' → logprob: -17.625
    6. '<|end|>' → logprob: -18.75
    7. '' → logprob: -19.0
    8. '=' → logprob: -19.125
    9. '   ' → logprob: -19.375
    10. '2' → logprob: -19.375

Token 374: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0010835404973477125
    2. ' ==' → logprob: -7.0010833740234375
    3. '=' → logprob: -8.751083374023438
    4. '==
' → logprob: -11.626083374023438
    5. '>=' → logprob: -12.501083374023438
    6. '===' → logprob: -14.626083374023438
    7. '!=' → logprob: -14.876083374023438
    8. '>' → logprob: -16.376083374023438
    9. ' ' → logprob: -17.251083374023438
    10. ']==' → logprob: -17.376083374023438

Token 375: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.253090865968261e-06
    2. ' r' → logprob: -11.625009536743164
    3. '0' → logprob: -15.500009536743164
    4. '	r' → logprob: -19.250009536743164
    5. ' ' → logprob: -19.375009536743164
    6. '   ' → logprob: -21.500009536743164
    7. '=r' → logprob: -22.500009536743164
    8. 'd' → logprob: -22.875009536743164
    9. '_r' → logprob: -23.625009536743164
    10. '  ' → logprob: -24.750009536743164

Token 376: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6443357467651367
    2. '1' → logprob: -0.8943357467651367
    3. '0' → logprob: -2.7693357467651367
    4. ' r' → logprob: -6.019335746765137
    5. ' ' → logprob: -7.394335746765137
    6. '2' → logprob: -8.144335746765137
    7. '	r' → logprob: -11.144335746765137
    8. '   ' → logprob: -11.269335746765137
    9. '=r' → logprob: -12.019335746765137
    10. ')' → logprob: -12.144335746765137

Token 377: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22551071643829346
    2. ':
' → logprob: -1.6005107164382935
    3. '                   ' → logprob: -9.725510597229004
    4. ':
' → logprob: -11.975510597229004
    5. '           ' → logprob: -12.100510597229004
    6. '   ' → logprob: -12.100510597229004
    7. '               ' → logprob: -12.225510597229004
    8. ':return' → logprob: -12.850510597229004
    9. ',' → logprob: -13.100510597229004
    10. '):
' → logprob: -13.100510597229004

Token 378: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0027046618051826954
    2. '           ' → logprob: -6.002704620361328
    3. '               ' → logprob: -9.252704620361328
    4. ' continue' → logprob: -10.002704620361328
    5. 'continue' → logprob: -10.002704620361328
    6. 'for' → logprob: -11.377704620361328
    7. '#' → logprob: -11.377704620361328
    8. '                       ' → logprob: -12.377704620361328
    9. '                  ' → logprob: -12.877704620361328
    10. ' for' → logprob: -12.877704620361328

Token 379: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6839759945869446
    2. '   ' → logprob: -1.0589759349822998
    3. '                   ' → logprob: -2.1839759349823
    4. ' continue' → logprob: -3.5589759349823
    5. 'for' → logprob: -6.058976173400879
    6. '               ' → logprob: -6.183976173400879
    7. '#' (adapté à ' #') → logprob: -6.683976173400879
    8. ' ' → logprob: -7.308976173400879
    9. '                       ' → logprob: -8.433976173400879
    10. '       ' → logprob: -8.683976173400879

Token 380: ' cer' (ID: 10816)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4071328043937683
    2. 'for' → logprob: -1.782132863998413
    3. '#' → logprob: -1.907132863998413
    4. ' continue' → logprob: -4.532132625579834
    5. '                   ' → logprob: -6.407132625579834
    6. ' #' → logprob: -6.657132625579834
    7. 'break' → logprob: -6.657132625579834
    8. ' for' → logprob: -6.907132625579834
    9. '   ' → logprob: -7.032132625579834
    10. 'import' → logprob: -8.282133102416992

Token 381: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.11305251717567444
    2. 'cle' → logprob: -2.2380526065826416
    3. 'c' → logprob: -9.613052368164062
    4. 'cl' → logprob: -9.738052368164062
    5. 'le' → logprob: -9.988052368164062
    6. '```' → logprob: -11.238052368164062
    7. 'icles' → logprob: -11.863052368164062
    8. 'l' → logprob: -12.238052368164062
    9. 'clé' → logprob: -12.488052368164062
    10. 'e' → logprob: -12.613052368164062

Token 382: ' ég' (ID: 33150)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.0793375968933105
    2. 'contin' → logprob: -1.7043375968933105
    3. 'inter' → logprob: -2.3293375968933105
    4. '                   ' → logprob: -2.8293375968933105
    5. 'continue' → logprob: -3.0793375968933105
    6. 't' → logprob: -3.3293375968933105
    7. 'in' → logprob: -3.5793375968933105
    8. ' continue' → logprob: -3.9543375968933105
    9. ' are' → logprob: -3.9543375968933105
    10. 's' → logprob: -4.2043375968933105

Token 383: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -5.931863051955588e-05
    2. 'al' → logprob: -10.750059127807617
    3. 'a' → logprob: -11.125059127807617
    4. 'ale' → logprob: -11.625059127807617
    5. 'als' → logprob: -12.125059127807617
    6. 'ales' → logprob: -12.250059127807617
    7. '```' → logprob: -13.875059127807617
    8. '**' → logprob: -15.375059127807617
    9. 'au' → logprob: -15.375059127807617
    10. 'Aux' → logprob: -15.750059127807617

Token 384: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04968847334384918
    2. '                       ' → logprob: -3.4246885776519775
    3. ' continue' → logprob: -4.799688339233398
    4. '           ' → logprob: -5.799688339233398
    5. 'continue' → logprob: -6.299688339233398
    6. ',' → logprob: -6.674688339233398
    7. '               ' → logprob: -7.049688339233398
    8. ':' → logprob: -8.799688339233398
    9. '                    
' → logprob: -8.924688339233398
    10. '       ' → logprob: -9.299688339233398

Token 385: ' prendre' (ID: 24257)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7260287404060364
    2. '                   ' → logprob: -0.9760287404060364
    3. ' continue' → logprob: -2.1010286808013916
    4. '                       ' → logprob: -5.351028919219971
    5. 'for' → logprob: -5.601028919219971
    6. '   ' → logprob: -5.726028919219971
    7. '#' → logprob: -6.101028919219971
    8. '               ' → logprob: -6.851028919219971
    9. ' for' → logprob: -6.976028919219971
    10. ' #' → logprob: -8.601028442382812

Token 386: ' centre' (ID: 13268)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08194907009601593
    2. '(x' → logprob: -3.08194899559021
    3. 'continue' → logprob: -4.706949234008789
    4. '(c' → logprob: -4.706949234008789
    5. 'for' → logprob: -5.081949234008789
    6. '#' → logprob: -5.456949234008789
    7. 'x' → logprob: -6.206949234008789
    8. ' candidates' → logprob: -7.331949234008789
    9. 'points' → logprob: -7.831949234008789
    10. '(points' → logprob: -8.581949234008789

Token 387: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19872523844242096
    2. 'continue' → logprob: -2.1987252235412598
    3. '               ' → logprob: -3.6987252235412598
    4. ',' → logprob: -4.32372522354126
    5. '(x' → logprob: -5.57372522354126
    6. ' continue' → logprob: -5.57372522354126
    7. '                       ' → logprob: -6.07372522354126
    8. '           ' → logprob: -6.07372522354126
    9. '(' → logprob: -6.19872522354126
    10. '                    
' → logprob: -6.32372522354126

Token 388: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004312380217015743
    2. ' continue' → logprob: -5.879312515258789
    3. 'continue' → logprob: -6.879312515258789
    4. ',' → logprob: -8.504312515258789
    5. '               ' → logprob: -8.754312515258789
    6. '           ' → logprob: -10.254312515258789
    7. '                    
' → logprob: -10.504312515258789
    8. '                       ' → logprob: -10.504312515258789
    9. ' (' → logprob: -11.754312515258789
    10. '(' → logprob: -13.004312515258789

Token 389: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03906932845711708
    2. ' candidates' → logprob: -3.414069414138794
    3. '                   ' → logprob: -6.289069175720215
    4. 'return' → logprob: -6.664069175720215
    5. 'continue' → logprob: -6.914069175720215
    6. '   ' → logprob: -7.789069175720215
    7. ' c' → logprob: -8.414069175720215
    8. ' return' → logprob: -8.539069175720215
    9. '               ' → logprob: -8.539069175720215
    10. ' continue' → logprob: -9.164069175720215

Token 390: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00021069261129014194
    2. '.extend' → logprob: -8.750210762023926
    3. '.' → logprob: -9.875210762023926
    4. '.app' → logprob: -15.000210762023926
    5. '.ap' → logprob: -15.125210762023926
    6. 'append' → logprob: -16.62520980834961
    7. ' .' → logprob: -17.37520980834961
    8. '+=' → logprob: -18.37520980834961
    9. '.
' → logprob: -18.87520980834961
    10. '+=(' → logprob: -19.87520980834961

Token 391: '((' (ID: 2054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.263858437538147
    2. '((' → logprob: -1.513858437538147
    3. ' (' → logprob: -4.638858318328857
    4. '(' → logprob: -6.138858318328857
    5. '(s' → logprob: -11.138858795166016
    6. ' ((' → logprob: -11.638858795166016
    7. '(
' → logprob: -13.013858795166016
    8. '   ' → logprob: -13.513858795166016
    9. '(X' → logprob: -13.513858795166016
    10. '(sys' → logprob: -14.263858795166016

Token 392: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00040481300675310194
    2. '(x' → logprob: -7.8754048347473145
    3. ' x' → logprob: -10.750404357910156
    4. ' (' → logprob: -12.750404357910156
    5. '(' → logprob: -16.125404357910156
    6. '
' → logprob: -16.250404357910156
    7. '   ' → logprob: -16.625404357910156
    8. ' ' → logprob: -16.750404357910156
    9. '((' → logprob: -16.750404357910156
    10. '(
' → logprob: -18.750404357910156

Token 393: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. 'x' → logprob: -12.750005722045898
    3. '2' → logprob: -13.375005722045898
    4. ' x' → logprob: -14.125005722045898
    5. ' ' → logprob: -15.875005722045898
    6. ',' → logprob: -16.8750057220459
    7. '```' → logprob: -17.5000057220459
    8. 's' → logprob: -17.8125057220459
    9. '(x' → logprob: -18.0625057220459
    10. '   ' → logprob: -18.5625057220459

Token 394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000432695698691532
    2. ' ,' → logprob: -7.87543249130249
    3. ',y' → logprob: -9.875432968139648
    4. ',x' → logprob: -14.750432968139648
    5. ',
' → logprob: -15.625432968139648
    6. ' ' → logprob: -15.750432968139648
    7. '   ' → logprob: -16.62543296813965
    8. ',j' → logprob: -16.75043296813965
    9. ',p' → logprob: -17.00043296813965
    10. '+' → logprob: -17.12543296813965

Token 395: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04858771339058876
    2. ' y' → logprob: -3.0485877990722656
    3. ' ' → logprob: -15.798587799072266
    4. '	y' → logprob: -15.798587799072266
    5. '    ' → logprob: -17.673587799072266
    6. ''y' → logprob: -18.423587799072266
    7. 'yj' → logprob: -18.673587799072266
    8. '   ' → logprob: -18.673587799072266
    9. ',y' → logprob: -18.798587799072266
    10. 'x' → logprob: -18.798587799072266

Token 396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019495772721711546
    2. ')' → logprob: -9.875194549560547
    3. '))' → logprob: -10.125194549560547
    4. ' ' → logprob: -10.250194549560547
    5. '```' → logprob: -10.500194549560547
    6. ',' → logprob: -10.750194549560547
    7. 'y' → logprob: -11.375194549560547
    8. '[' → logprob: -13.500194549560547
    9. '<|end|>' → logprob: -13.500194549560547
    10. '   ' → logprob: -13.750194549560547

Token 397: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20293065905570984
    2. '))
' → logprob: -1.7029306888580322
    3. '                   ' → logprob: -6.702930450439453
    4. '               ' → logprob: -8.452930450439453
    5. '                       ' → logprob: -10.452930450439453
    6. '           ' → logprob: -10.827930450439453
    7. '))
' → logprob: -11.327930450439453
    8. ',' → logprob: -12.827930450439453
    9. ' ))' → logprob: -12.952930450439453
    10. '                           ' → logprob: -13.327930450439453

Token 398: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3869592249393463
    2. '               ' → logprob: -1.136959195137024
    3. '           ' → logprob: -10.511959075927734
    4. 'else' → logprob: -10.761959075927734
    5. 'continue' → logprob: -11.261959075927734
    6. ',' → logprob: -11.886959075927734
    7. '                       ' → logprob: -12.136959075927734
    8. ' continue' → logprob: -12.886959075927734
    9. 'import' → logprob: -13.261959075927734
    10. '       ' → logprob: -13.261959075927734

Token 399: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8578290939331055
    2. 'continue' (adapté à ' continue') → logprob: -1.1078290939331055
    3. '               ' → logprob: -1.8578290939331055
    4. ' continue' → logprob: -2.6078290939331055
    5. 'else' → logprob: -4.2328290939331055
    6. ' else' → logprob: -7.3578290939331055
    7. '           ' → logprob: -8.232829093933105
    8. '
' → logprob: -8.232829093933105
    9. '                       ' → logprob: -9.607829093933105
    10. '       ' → logprob: -9.982829093933105

Token 400: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00919849332422018
    2. '                
' → logprob: -4.8841986656188965
    3. '
' → logprob: -6.6341986656188965
    4. '```' → logprob: -9.634198188781738
    5. 'd' → logprob: -10.134198188781738
    6. 'import' → logprob: -10.384198188781738
    7. '                ' → logprob: -10.884198188781738
    8. 's' → logprob: -10.884198188781738
    9. '                    
' → logprob: -11.009198188781738
    10. 'distance' → logprob: -11.384198188781738

Token 401: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1321699619293213
    2. '
' → logprob: -2.3821699619293213
    3. '                
' → logprob: -3.5071699619293213
    4. '  
' → logprob: -7.632169723510742
    5. 'import' → logprob: -9.132169723510742
    6. 'd' → logprob: -9.132169723510742
    7. '
' → logprob: -9.382169723510742
    8. '    
' → logprob: -9.382169723510742
    9. 's' → logprob: -9.507169723510742
    10. 'x' → logprob: -9.632169723510742

Token 402: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.1313658207654953
    2. 'else' → logprob: -2.2563657760620117
    3. '#' → logprob: -4.256365776062012
    4. 'px' → logprob: -6.881365776062012
    5. ' else' → logprob: -7.506365776062012
    6. ' a' → logprob: -7.631365776062012
    7. 'dx' → logprob: -7.631365776062012
    8. 'cos' → logprob: -7.881365776062012
    9. '
' → logprob: -8.381365776062012
    10. '   ' → logprob: -8.506365776062012

Token 403: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005946459714323282
    2. '=' → logprob: -5.130946636199951
    3. ' ' → logprob: -11.505946159362793
    4. ' =
' → logprob: -12.505946159362793
    5. ',' → logprob: -13.130946159362793
    6. ' =(' → logprob: -13.380946159362793
    7. '	' → logprob: -15.755946159362793
    8. ' ,' → logprob: -16.25594711303711
    9. ' =
' → logprob: -16.50594711303711
    10. ' ' → logprob: -17.25594711303711

Token 404: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.015116692520678043
    2. ' (' → logprob: -4.3901166915893555
    3. '(' → logprob: -6.0151166915893555
    4. '(r' → logprob: -9.640116691589355
    5. '(dx' → logprob: -9.640116691589355
    6. '(dist' → logprob: -11.390116691589355
    7. '(x' → logprob: -12.015116691589355
    8. '((' → logprob: -12.765116691589355
    9. '(D' → logprob: -13.515116691589355
    10. '(diff' → logprob: -13.890116691589355

Token 405: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0027547108475118876
    2. 'd' → logprob: -6.1277546882629395
    3. '(r' → logprob: -7.5027546882629395
    4. ' r' → logprob: -11.377755165100098
    5. '(d' → logprob: -12.002755165100098
    6. ' (' → logprob: -15.877755165100098
    7. ' d' → logprob: -15.877755165100098
    8. '(
' → logprob: -18.25275421142578
    9. '((' → logprob: -18.37775421142578
    10. '	r' → logprob: -18.37775421142578

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. 'r' → logprob: -14.125000953674316
    3. '```' → logprob: -15.375000953674316
    4. '**' → logprob: -15.625000953674316
    5. '_' → logprob: -16.000001907348633
    6. '
' → logprob: -17.000001907348633
    7. '[' → logprob: -17.125001907348633
    8. 'd' → logprob: -17.125001907348633
    9. ' ' → logprob: -17.625001907348633
    10. 'a' → logprob: -17.625001907348633

Token 407: '*r' (ID: 92096)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0003764535649679601
    2. '2' → logprob: -8.37537670135498
    3. '*' → logprob: -9.50037670135498
    4. '*r' → logprob: -9.87537670135498
    5. ' **' → logprob: -12.00037670135498
    6. '*d' → logprob: -12.12537670135498
    7. '²' → logprob: -13.00037670135498
    8. '*a' → logprob: -13.00037670135498
    9. '1' → logprob: -14.25037670135498
    10. '_squared' → logprob: -14.25037670135498

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014525714504998177
    2. '2' → logprob: -9.750144958496094
    3. 'r' → logprob: -9.875144958496094
    4. '**' → logprob: -10.875144958496094
    5. '```' → logprob: -12.250144958496094
    6. '+' → logprob: -12.375144958496094
    7. ' ' → logprob: -12.750144958496094
    8. 'a' → logprob: -13.625144958496094
    9. '*r' → logprob: -13.625144958496094
    10. '*' → logprob: -14.625144958496094

Token 409: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4288361370563507
    2. '-' → logprob: -1.6788361072540283
    3. '+' → logprob: -2.3038361072540283
    4. ' +' → logprob: -2.8038361072540283
    5. ')' → logprob: -7.428836345672607
    6. 'd' → logprob: -7.928836345672607
    7. ' ' → logprob: -8.17883586883545
    8. ',' → logprob: -9.17883586883545
    9. '=' → logprob: -9.42883586883545
    10. ' d' → logprob: -9.55383586883545

Token 410: ' r' (ID: 428)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16175052523612976
    2. ' d' → logprob: -1.9117505550384521
    3. '(d' → logprob: -6.536750316619873
    4. ' (' → logprob: -10.161750793457031
    5. 'r' → logprob: -10.661750793457031
    6. ')d' → logprob: -11.786750793457031
    7. ' r' → logprob: -13.036750793457031
    8. ' ' → logprob: -13.161750793457031
    9. '(' → logprob: -14.161750793457031
    10. '(r' → logprob: -14.286750793457031

Token 411: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. '²' → logprob: -15.125000953674316
    3. '[' → logprob: -15.625000953674316
    4. '```' → logprob: -15.625000953674316
    5. '**' → logprob: -16.000001907348633
    6. 'a' → logprob: -16.250001907348633
    7. 'r' → logprob: -16.750001907348633
    8. '۲' → logprob: -16.750001907348633
    9. '₂' → logprob: -17.125001907348633
    10. ' ' → logprob: -17.125001907348633

Token 412: '*r' (ID: 92096)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04315550625324249
    2. ' +' → logprob: -3.1681554317474365
    3. '2' → logprob: -9.668155670166016
    4. '+r' → logprob: -10.543155670166016
    5. ')' → logprob: -10.668155670166016
    6. '1' → logprob: -10.793155670166016
    7. ' ' → logprob: -11.793155670166016
    8. '+b' → logprob: -12.418155670166016
    9. ' plus' → logprob: -13.293155670166016
    10. '+
' → logprob: -13.543155670166016

Token 413: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -12.000011444091797
    3. '*' → logprob: -12.875011444091797
    4. '1' → logprob: -14.000011444091797
    5. '```' → logprob: -14.125011444091797
    6. ')' → logprob: -14.625011444091797
    7. 'a' → logprob: -16.250011444091797
    8. '(' → logprob: -16.375011444091797
    9. '**' → logprob: -16.875011444091797
    10. 'r' → logprob: -16.875011444091797

Token 414: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519381642341614
    2. ' +' → logprob: -1.5019381046295166
    3. ')' → logprob: -12.126937866210938
    4. '+d' → logprob: -13.376937866210938
    5. ' plus' → logprob: -14.251937866210938
    6. '```' → logprob: -14.751937866210938
    7. 'plus' → logprob: -15.001937866210938
    8. '=' → logprob: -16.376937866210938
    9. '+b' → logprob: -16.501937866210938
    10. ' ' → logprob: -16.501937866210938

Token 415: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006715967319905758
    2. ' d' → logprob: -5.006715774536133
    3. '(d' → logprob: -14.756715774536133
    4. '2' → logprob: -15.881715774536133
    5. ')d' → logprob: -16.756715774536133
    6. ' ' → logprob: -17.006715774536133
    7. '	d' → logprob: -17.506715774536133
    8. 'dist' → logprob: -18.881715774536133
    9. ' (' → logprob: -19.006715774536133
    10. '(' → logprob: -19.506715774536133

Token 416: '*d' (ID: 81685)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3317461609840393
    2. '*' → logprob: -1.7067461013793945
    3. '**' → logprob: -2.8317461013793945
    4. '*d' → logprob: -3.9567461013793945
    5. '2' → logprob: -4.4567461013793945
    6. ')/(' → logprob: -5.2067461013793945
    7. '²' → logprob: -6.3317461013793945
    8. ')/' → logprob: -6.3317461013793945
    9. 'd' → logprob: -7.0817461013793945
    10. ')*' → logprob: -8.331746101379395

Token 417: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003110327525064349
    2. ' )' → logprob: -8.250310897827148
    3. ')/(' → logprob: -10.000310897827148
    4. ')/' → logprob: -13.000310897827148
    5. '")' → logprob: -14.125310897827148
    6. '   ' → logprob: -14.500310897827148
    7. '')' → logprob: -15.375310897827148
    8. ')
' → logprob: -16.00031089782715
    9. '*' → logprob: -16.37531089782715
    10. 'd' → logprob: -16.87531089782715

Token 418: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3534772992134094
    2. '/' → logprob: -1.2284772396087646
    3. '/d' → logprob: -5.478477478027344
    4. '/(' → logprob: -7.353477478027344
    5. ')' → logprob: -9.228477478027344
    6. 'd' → logprob: -10.353477478027344
    7. '/
' → logprob: -10.728477478027344
    8. '*' → logprob: -11.103477478027344
    9. ' /(' → logprob: -11.353477478027344
    10. '   ' → logprob: -11.853477478027344

Token 419: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020389800192788243
    2. ' (' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.00020408630371
    4. '(double' → logprob: -16.75020408630371
    5. '(int' → logprob: -17.00020408630371
    6. '(float' → logprob: -17.37520408630371
    7. ' ' → logprob: -17.87520408630371
    8. '(
' → logprob: -18.12520408630371
    9. ',' → logprob: -18.75020408630371
    10. '(None' → logprob: -19.12520408630371

Token 420: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.522638169466518e-05
    2. ' (' → logprob: -10.625024795532227
    3. '2' → logprob: -14.000024795532227
    4. ' ' → logprob: -16.875024795532227
    5. '   ' → logprob: -18.875024795532227
    6. '(
' → logprob: -19.250024795532227
    7. ',' → logprob: -19.625024795532227
    8. '(float' → logprob: -20.000024795532227
    9. '(double' → logprob: -20.125024795532227
    10. '(int' → logprob: -20.375024795532227

Token 421: '*d' (ID: 81685)
  Prédit: '*d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.09878980368375778
    2. ' *' → logprob: -2.598789691925049
    3. '*' → logprob: -3.973789691925049
    4. 'd' → logprob: -7.098789691925049
    5. ' d' → logprob: -9.598790168762207
    6. '
' → logprob: -12.723790168762207
    7. ' ' → logprob: -13.348790168762207
    8. '*
' → logprob: -14.098790168762207
    9. ' 
' → logprob: -14.473790168762207
    10. '  
' → logprob: -14.723790168762207

Token 422: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010848517995327711
    2. ' )' → logprob: -6.876084804534912
    3. '<|end|>' → logprob: -10.62608528137207
    4. ')
' → logprob: -10.87608528137207
    5. ',' → logprob: -12.87608528137207
    6. '),' → logprob: -14.00108528137207
    7. '               ' → logprob: -14.37608528137207
    8. '*' → logprob: -14.37608528137207
    9. ')*' → logprob: -14.37608528137207
    10. '<|end|>' → logprob: -15.00108528137207

Token 423: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3830772340297699
    2. 'h' → logprob: -1.7580772638320923
    3. 'dx' → logprob: -3.3830771446228027
    4. ' h' → logprob: -4.008077144622803
    5. 'import' → logprob: -4.008077144622803
    6. 'b' → logprob: -4.133077144622803
    7. ' dx' → logprob: -4.258077144622803
    8. 'px' → logprob: -4.633077144622803
    9. 'dp' → logprob: -5.508077144622803
    10. ' b' → logprob: -5.508077144622803

Token 424: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.008799755945801735
    2. ' h' → logprob: -5.3837995529174805
    3. 'b' → logprob: -5.5087995529174805
    4. ' b' → logprob: -9.38379955291748
    5. '   ' → logprob: -11.13379955291748
    6. 'tmp' → logprob: -12.38379955291748
    7. '```' → logprob: -12.75879955291748
    8. '	h' → logprob: -12.88379955291748
    9. 'x' → logprob: -13.13379955291748
    10. 'import' → logprob: -13.25879955291748

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196768581867218
    2. '=' → logprob: -2.811967611312866
    3. ' =
' → logprob: -16.561967849731445
    4. ' ' → logprob: -18.561967849731445
    5. ' =
' → logprob: -18.561967849731445
    6. '＝' → logprob: -19.311967849731445
    7. '=
' → logprob: -19.436967849731445
    8. '=s' → logprob: -19.686967849731445
    9. 's' → logprob: -19.811967849731445
    10. ',' → logprob: -19.811967849731445

Token 426: ' math' (ID: 13324)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.25462451577186584
    2. 'math' → logprob: -1.5046244859695435
    3. ' math' → logprob: -6.004624366760254
    4. ' (' → logprob: -9.129624366760254
    5. '(' → logprob: -9.379624366760254
    6. '(m' → logprob: -11.379624366760254
    7. '(r' → logprob: -11.504624366760254
    8. '   ' → logprob: -12.879624366760254
    9. '(pow' → logprob: -13.379624366760254
    10. '((' → logprob: -13.504624366760254

Token 427: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0008065330912359059
    2. 'sqrt' → logprob: -7.1258063316345215
    3. '.sin' → logprob: -14.37580680847168
    4. '.' → logprob: -14.50080680847168
    5. '.h' → logprob: -15.00080680847168
    6. ' sqrt' → logprob: -15.12580680847168
    7. '```' → logprob: -15.75080680847168
    8. '√' → logprob: -16.12580680847168
    9. '.Sqrt' → logprob: -16.75080680847168
    10. '.pow' → logprob: -17.37580680847168

Token 428: '(max' (ID: 17178)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.008825987577438354
    2. '(max' → logprob: -4.758825778961182
    3. 'max' → logprob: -9.25882625579834
    4. '(abs' → logprob: -9.38382625579834
    5. 'r' → logprob: -10.63382625579834
    6. '(' → logprob: -12.00882625579834
    7. ' max' → logprob: -13.88382625579834
    8. 'abs' → logprob: -14.75882625579834
    9. '((' → logprob: -15.50882625579834
    10. '   ' → logprob: -15.50882625579834

Token 429: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.8219583075260743e-05
    2. '(r' → logprob: -10.250038146972656
    3. '0' → logprob: -12.875038146972656
    4. ' (' → logprob: -15.875038146972656
    5. '(
' → logprob: -16.250038146972656
    6. '((' → logprob: -16.250038146972656
    7. '(a' → logprob: -16.250038146972656
    8. 'a' → logprob: -20.000038146972656
    9. '(h' → logprob: -20.000038146972656
    10. 'r' → logprob: -20.250038146972656

Token 430: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.104087233543396
    2. '(' → logprob: -2.3540873527526855
    3. '(r' → logprob: -5.6040873527526855
    4. ' ' → logprob: -8.729086875915527
    5. 'r' → logprob: -11.229086875915527
    6. ' (' → logprob: -12.229086875915527
    7. '   ' → logprob: -12.854086875915527
    8. '(
' → logprob: -12.979086875915527
    9. '((' → logprob: -13.604086875915527
    10. ')' → logprob: -14.354086875915527

Token 431: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003825293097179383
    2. ',r' → logprob: -8.500382423400879
    3. '.' → logprob: -9.375382423400879
    4. ' ,' → logprob: -9.500382423400879
    5. '0' → logprob: -11.500382423400879
    6. '.,' → logprob: -12.375382423400879
    7. '(r' → logprob: -13.125382423400879
    8. ',(' → logprob: -13.750382423400879
    9. '(' → logprob: -14.125382423400879
    10. ',
' → logprob: -14.625382423400879

Token 432: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09095212817192078
    2. '0' → logprob: -2.590952157974243
    3. '(r' → logprob: -4.590951919555664
    4. '1' → logprob: -6.840951919555664
    5. ' r' → logprob: -7.465951919555664
    6. ')' → logprob: -9.715951919555664
    7. ' ' → logprob: -10.215951919555664
    8. 'a' → logprob: -10.215951919555664
    9. '(' → logprob: -11.090951919555664
    10. '   ' → logprob: -11.215951919555664

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003619217313826084
    2. ',r' → logprob: -8.000362396240234
    3. ' ,' → logprob: -10.875362396240234
    4. ',d' → logprob: -13.125362396240234
    5. ',a' → logprob: -13.125362396240234
    6. ',h' → logprob: -13.500362396240234
    7. ',float' → logprob: -14.125362396240234
    8. ',(' → logprob: -14.625362396240234
    9. ',
' → logprob: -15.250362396240234
    10. ',double' → logprob: -15.500362396240234

Token 434: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011086373589932919
    2. ' r' → logprob: -4.511086463928223
    3. '(r' → logprob: -10.511086463928223
    4. '   ' → logprob: -12.136086463928223
    5. ' ' → logprob: -12.136086463928223
    6. '  ' → logprob: -15.261086463928223
    7. '	r' → logprob: -15.261086463928223
    8. ' (' → logprob: -16.261085510253906
    9. ')' → logprob: -18.261085510253906
    10. '    ' → logprob: -18.511085510253906

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. 'a' → logprob: -14.500001907348633
    3. '**' → logprob: -14.625001907348633
    4. 'r' → logprob: -15.000001907348633
    5. ' ' → logprob: -15.625001907348633
    6. '```' → logprob: -15.625001907348633
    7. '*r' → logprob: -16.750001907348633
    8. '１' → logprob: -17.750001907348633
    9. '_' → logprob: -17.875001907348633
    10. '*' → logprob: -18.125001907348633

Token 436: '*r' (ID: 92096)
  Prédit: '*r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*r' → logprob: -9.090760431718081e-05
    2. '*h' → logprob: -10.125090599060059
    3. '*' → logprob: -10.875090599060059
    4. '**' → logprob: -11.000090599060059
    5. 'r' → logprob: -11.750090599060059
    6. ' *' → logprob: -12.500090599060059
    7. '*a' → logprob: -13.375090599060059
    8. '2' → logprob: -14.125090599060059
    9. '_r' → logprob: -14.125090599060059
    10. '```' → logprob: -16.375091552734375

Token 437: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.945094355614856e-05
    2. '*' → logprob: -10.250069618225098
    3. '```' → logprob: -11.125069618225098
    4. '1' → logprob: -11.875069618225098
    5. ' ' → logprob: -12.000069618225098
    6. '**' → logprob: -13.375069618225098
    7. '   ' → logprob: -13.750069618225098
    8. '
' → logprob: -13.750069618225098
    9. '*r' → logprob: -14.875069618225098
    10. '
' → logprob: -14.875069618225098

Token 438: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05493948981165886
    2. '-' → logprob: -2.9299395084381104
    3. ')' → logprob: -10.179939270019531
    4. ' ' → logprob: -11.429939270019531
    5. 'a' → logprob: -12.804939270019531
    6. '-a' → logprob: -12.929939270019531
    7. ',' → logprob: -14.179939270019531
    8. '	' → logprob: -14.304939270019531
    9. '   ' → logprob: -15.429939270019531
    10. '*' → logprob: -15.429939270019531

Token 439: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005233763717114925
    2. ' a' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.880233764648438
    4. '	a' → logprob: -18.505233764648438
    5. '(a' → logprob: -19.505233764648438
    6. '   ' → logprob: -19.505233764648438
    7. '  ' → logprob: -20.630233764648438
    8. '
' → logprob: -21.130233764648438
    9. '```' → logprob: -22.255233764648438
    10. '[a' → logprob: -23.380233764648438

Token 440: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -5.3596853831550106e-05
    2. '**' → logprob: -10.500053405761719
    3. '*' → logprob: -10.875053405761719
    4. '*r' → logprob: -12.750053405761719
    5. 'a' → logprob: -12.875053405761719
    6. ' *' → logprob: -13.625053405761719
    7. '2' → logprob: -15.500053405761719
    8. '*u' → logprob: -17.00005340576172
    9. '*b' → logprob: -17.37505340576172
    10. '*t' → logprob: -17.50005340576172

Token 441: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3134194314479828
    2. '))
' → logprob: -1.3134194612503052
    3. '))
' → logprob: -9.063419342041016
    4. '))

' → logprob: -10.563419342041016
    5. ' ))
' → logprob: -11.688419342041016
    6. ' ))' → logprob: -12.188419342041016
    7. '               ' → logprob: -14.188419342041016
    8. ')' → logprob: -14.438419342041016
    9. '   ' → logprob: -15.188419342041016
    10. '       ' → logprob: -15.438419342041016

Token 442: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028288885951042175
    2. 'x' → logprob: -6.752829074859619
    3. '                
' → logprob: -7.627829074859619
    4. ' x' → logprob: -8.502828598022461
    5. '<|end|>' → logprob: -8.877828598022461
    6. '           ' → logprob: -9.252828598022461
    7. '       ' → logprob: -9.377828598022461
    8. '	       ' → logprob: -9.502828598022461
    9. '		       ' → logprob: -9.627828598022461
    10. '	           ' → logprob: -9.627828598022461

Token 443: ' xm' (ID: 119718)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.031713638454675674
    2. 'cx' → logprob: -4.656713485717773
    3. ' px' → logprob: -4.906713485717773
    4. '               ' → logprob: -5.031713485717773
    5. 'x' → logprob: -6.156713485717773
    6. 'Px' → logprob: -6.906713485717773
    7. '   ' → logprob: -6.906713485717773
    8. 'mx' → logprob: -7.406713485717773
    9. '_px' → logprob: -7.531713485717773
    10. 'dx' → logprob: -7.906713485717773

Token 444: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975071594119072
    2. ' =' → logprob: -3.5297508239746094
    3. ',' → logprob: -16.02975082397461
    4. '=x' → logprob: -16.27975082397461
    5. '=int' → logprob: -17.90475082397461
    6. '1' → logprob: -17.90475082397461
    7. '＝' → logprob: -18.02975082397461
    8. '=
' → logprob: -18.15475082397461
    9. ' ' → logprob: -18.15475082397461
    10. '=

' → logprob: -18.90475082397461

Token 445: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.306760805164231e-05
    2. ' x' → logprob: -11.25001335144043
    3. '(x' → logprob: -17.00001335144043
    4. '   ' → logprob: -18.37501335144043
    5. ' ' → logprob: -20.00001335144043
    6. '	x' → logprob: -20.37501335144043
    7. '```' → logprob: -22.00001335144043
    8. '"x' → logprob: -22.12501335144043
    9. '_x' → logprob: -22.37501335144043
    10. '<x' → logprob: -22.62501335144043

Token 446: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. 'x' → logprob: -15.375000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '```' → logprob: -16.5
    5. ' x' → logprob: -17.625
    6. '[' → logprob: -18.125
    7. '_' → logprob: -18.875
    8. '\xe2\x82' → logprob: -19.375
    9. '(x' → logprob: -19.375
    10. '`' → logprob: -19.625

Token 447: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687217235565186
    2. ' +' → logprob: -1.1368721723556519
    3. '+
' → logprob: -15.136872291564941
    4. '+x' → logprob: -15.261872291564941
    5. ' +
' → logprob: -15.761872291564941
    6. ' plus' → logprob: -16.011871337890625
    7. '+(' → logprob: -16.261871337890625
    8. '+a' → logprob: -16.511871337890625
    9. ' ' → logprob: -17.136871337890625
    10. '=' → logprob: -17.386871337890625

Token 448: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06379415094852448
    2. ' a' → logprob: -3.3137941360473633
    3. '(a' → logprob: -4.313794136047363
    4. ' (' → logprob: -4.563794136047363
    5. '(x' → logprob: -6.438794136047363
    6. '(' → logprob: -10.938794136047363
    7. ' ' → logprob: -13.563794136047363
    8. '((' → logprob: -14.313794136047363
    9. '	a' → logprob: -15.313794136047363
    10. '_a' → logprob: -16.06379508972168

Token 449: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.06164516508579254
    2. '*' → logprob: -2.936645269393921
    3. ' *' → logprob: -5.061645030975342
    4. '*((' → logprob: -8.1866455078125
    5. '(x' → logprob: -9.8116455078125
    6. '*d' → logprob: -10.1866455078125
    7. '*x' → logprob: -10.8116455078125
    8. '/d' → logprob: -12.1866455078125
    9. '(dx' → logprob: -12.8116455078125
    10. ' ' → logprob: -14.1866455078125

Token 450: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.251963347196579
    2. 'x' → logprob: -1.5019633769989014
    3. ' (' → logprob: -10.37696361541748
    4. ' x' → logprob: -13.12696361541748
    5. ',x' → logprob: -15.25196361541748
    6. '{x' → logprob: -15.87696361541748
    7. '	x' → logprob: -16.001962661743164
    8. '(' → logprob: -16.126962661743164
    9. '   ' → logprob: -16.251962661743164
    10. '_x' → logprob: -16.501962661743164

Token 451: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' -' → logprob: -14.375000953674316
    3. ' ' → logprob: -16.125001907348633
    4. '```' → logprob: -16.250001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '(x' → logprob: -17.937501907348633
    7. 'x' → logprob: -18.000001907348633
    8. '
' → logprob: -18.625001907348633
    9. '₂' → logprob: -18.625001907348633
    10. '۲' → logprob: -18.687501907348633

Token 452: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.038056179881095886
    2. '-' → logprob: -3.2880561351776123
    3. '-x' → logprob: -11.413056373596191
    4. 'x' → logprob: -13.038056373596191
    5. ' ' → logprob: -13.788056373596191
    6. ',' → logprob: -15.788056373596191
    7. '```' → logprob: -15.913056373596191
    8. ' x' → logprob: -16.663055419921875
    9. '   ' → logprob: -16.788055419921875
    10. ' -
' → logprob: -17.038055419921875

Token 453: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00014132341311778873
    2. ' x' → logprob: -8.875141143798828
    3. '1' → logprob: -13.750141143798828
    4. ')x' → logprob: -15.875141143798828
    5. '<|end|>' → logprob: -16.500141143798828
    6. ')' → logprob: -16.625141143798828
    7. '	x' → logprob: -17.500141143798828
    8. ' ' → logprob: -18.625141143798828
    9. '(x' → logprob: -19.125141143798828
    10. '"x' → logprob: -19.125141143798828

Token 454: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.500000953674316
    3. '<|end|>' → logprob: -16.125
    4. ')' → logprob: -16.375
    5. '[' → logprob: -16.5
    6. ',' → logprob: -17.5
    7. ' ' → logprob: -17.875
    8. '  ' → logprob: -19.875
    9. '   ' → logprob: -19.9375
    10. '১' → logprob: -20.0625

Token 455: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07889870554208755
    2. ')/' → logprob: -2.5788986682891846
    3. ')/(' → logprob: -12.328898429870605
    4. ' )' → logprob: -12.453898429870605
    5. '/' → logprob: -15.078898429870605
    6. '/d' → logprob: -16.078899383544922
    7. ')
' → logprob: -16.453899383544922
    8. 'd' → logprob: -17.078899383544922
    9. '/)' → logprob: -17.703899383544922
    10. 'def' → logprob: -18.078899383544922

Token 456: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.15310683415737e-05
    2. ' d' → logprob: -10.750021934509277
    3. '	d' → logprob: -19.37502098083496
    4. '
' → logprob: -19.62502098083496
    5. ')d' → logprob: -19.75002098083496
    6. '>d' → logprob: -20.00002098083496
    7. '   ' → logprob: -20.75002098083496
    8. ' ' → logprob: -21.50002098083496
    9. '```' → logprob: -21.87502098083496
    10. '*d' → logprob: -22.50002098083496

Token 457: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 458: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22952887415885925
    2. '<|end|>' → logprob: -2.6045289039611816
    3. '                
' → logprob: -3.2295289039611816
    4. ' 
' → logprob: -3.3545289039611816
    5. '
' → logprob: -3.8545289039611816
    6. ' ' → logprob: -5.229528903961182
    7. '                               ' → logprob: -5.229528903961182
    8. 'm' → logprob: -5.604528903961182
    9. '  
' → logprob: -5.604528903961182
    10. '                ' → logprob: -6.104528903961182

Token 459: ' ym' (ID: 30097)
  Prédit: 'ym'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ym' (adapté à ' ym') → logprob: -0.016066748648881912
    2. ' ym' → logprob: -4.141066551208496
    3. 'ys' → logprob: -12.016066551208496
    4. 'yp' → logprob: -12.141066551208496
    5. 'yh' → logprob: -12.766066551208496
    6. 'yb' → logprob: -12.891066551208496
    7. 'yn' → logprob: -13.141066551208496
    8. '(' → logprob: -13.141066551208496
    9. '   ' → logprob: -13.141066551208496
    10. ' ' → logprob: -13.516066551208496

Token 460: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4298372268676758
    2. ' =' → logprob: -1.0548372268676758
    3. ' +' → logprob: -7.054837226867676
    4. '+' → logprob: -8.429837226867676
    5. ' +=' → logprob: -10.804837226867676
    6. ',' → logprob: -11.304837226867676
    7. ' ' → logprob: -11.679837226867676
    8. '<|end|>' → logprob: -12.554837226867676
    9. 'm' → logprob: -12.929837226867676
    10. ')' → logprob: -13.304837226867676

Token 461: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12692831456661224
    2. ' y' → logprob: -2.1269283294677734
    3. '	y' → logprob: -15.751928329467773
    4. '   ' → logprob: -16.876928329467773
    5. '(y' → logprob: -18.376928329467773
    6. ''y' → logprob: -19.126928329467773
    7. 'ys' → logprob: -19.751928329467773
    8. '‘y' → logprob: -20.376928329467773
    9. 'yb' → logprob: -20.501928329467773
    10. ' ' → logprob: -20.501928329467773

Token 462: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3135751485824585
    2. ' +' → logprob: -1.3135751485824585
    3. 'm' → logprob: -8.31357479095459
    4. '-' → logprob: -10.06357479095459
    5. ' +
' → logprob: -11.43857479095459
    6. ' ' → logprob: -12.81357479095459
    7. ' -' → logprob: -13.06357479095459
    8. 'y' → logprob: -13.06357479095459
    9. '+
' → logprob: -13.06357479095459
    10. '+m' → logprob: -13.31357479095459

Token 463: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47407785058021545
    2. '+' → logprob: -0.9740778207778931
    3. '+h' → logprob: -15.599078178405762
    4. '+a' → logprob: -15.724078178405762
    5. ' +
' → logprob: -16.099077224731445
    6. '+
' → logprob: -16.599077224731445
    7. '<|end|>' → logprob: -16.599077224731445
    8. ' ' → logprob: -16.849077224731445
    9. ' plus' → logprob: -17.224077224731445
    10. ' -' → logprob: -17.349077224731445

Token 464: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.054258737713098526
    2. 'h' → logprob: -3.1792588233947754
    3. ' a' → logprob: -4.554258823394775
    4. ' h' → logprob: -7.304258823394775
    5. '   ' → logprob: -14.554258346557617
    6. '	a' → logprob: -15.429258346557617
    7. '	h' → logprob: -15.679258346557617
    8. '```' → logprob: -15.679258346557617
    9. ' ' → logprob: -15.929258346557617
    10. 'b' → logprob: -15.929258346557617

Token 465: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.005318550392985344
    2. '*' → logprob: -5.255318641662598
    3. '(y' → logprob: -9.630318641662598
    4. '(x' → logprob: -12.005318641662598
    5. ' *' → logprob: -12.130318641662598
    6. '*((' → logprob: -12.255318641662598
    7. '*y' → logprob: -14.005318641662598
    8. '(' → logprob: -14.005318641662598
    9. ' (' → logprob: -14.380318641662598
    10. '(s' → logprob: -15.880318641662598

Token 466: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001830410328693688
    2. '(y' → logprob: -8.62518310546875
    3. ' y' → logprob: -12.75018310546875
    4. 'x' → logprob: -15.37518310546875
    5. '   ' → logprob: -15.75018310546875
    6. '	y' → logprob: -16.75018310546875
    7. '```' → logprob: -17.87518310546875
    8. 'd' → logprob: -18.50018310546875
    9. ' (' → logprob: -18.62518310546875
    10. '
' → logprob: -18.87518310546875

Token 467: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007439678534865379
    2. ' -' → logprob: -5.382439613342285
    3. '-' → logprob: -5.882439613342285
    4. 'y' → logprob: -11.632439613342285
    5. ' ' → logprob: -11.757439613342285
    6. '   ' → logprob: -12.632439613342285
    7. '_' → logprob: -13.382439613342285
    8. 'm' → logprob: -13.882439613342285
    9. '₂' → logprob: -14.382439613342285
    10. '    ' → logprob: -14.757439613342285

Token 468: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.388174444437027
    2. '-' → logprob: -1.1381744146347046
    3. '(y' → logprob: -7.013174533843994
    4. '-y' → logprob: -8.513174057006836
    5. ' (' → logprob: -9.638174057006836
    6. '(' → logprob: -9.888174057006836
    7. 'y' → logprob: -10.263174057006836
    8. '(x' → logprob: -11.763174057006836
    9. ',' → logprob: -11.763174057006836
    10. '-(' → logprob: -12.013174057006836

Token 469: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001833088113926351
    2. ' y' → logprob: -6.376832962036133
    3. 'd' → logprob: -9.126832962036133
    4. '(y' → logprob: -11.126832962036133
    5. 'x' → logprob: -12.501832962036133
    6. '   ' → logprob: -13.501832962036133
    7. ' ' → logprob: -14.501832962036133
    8. '1' → logprob: -14.876832962036133
    9. '```' → logprob: -14.876832962036133
    10. '	y' → logprob: -15.251832962036133

Token 470: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001676852349191904
    2. '1' → logprob: -7.2516770362854
    3. 'd' → logprob: -7.8766770362854
    4. '```' → logprob: -8.001676559448242
    5. 'x' → logprob: -9.126676559448242
    6. '/d' → logprob: -10.251676559448242
    7. '-' → logprob: -10.376676559448242
    8. ' ' → logprob: -11.126676559448242
    9. '(' → logprob: -11.251676559448242
    10. ')' → logprob: -11.751676559448242

Token 471: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.11354267597198486
    2. '/d' → logprob: -2.4885425567626953
    3. '/' → logprob: -4.113542556762695
    4. ')' → logprob: -4.863542556762695
    5. 'd' → logprob: -8.988542556762695
    6. ']/' → logprob: -10.113542556762695
    7. ' /' → logprob: -10.363542556762695
    8. '```' → logprob: -11.363542556762695
    9. '   ' → logprob: -12.363542556762695
    10. ')/(' → logprob: -13.113542556762695

Token 472: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0280383548888494e-06
    2. ' d' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.375001907348633
    4. '```' → logprob: -17.375001907348633
    5. 'dist' → logprob: -18.125001907348633
    6. '
' → logprob: -18.125001907348633
    7. ')d' → logprob: -18.375001907348633
    8. '2' → logprob: -18.500001907348633
    9. '	d' → logprob: -18.750001907348633
    10. '
' → logprob: -18.875001907348633

Token 473: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008997896686196327
    2. '
' → logprob: -5.508997917175293
    3. '                
' → logprob: -7.008997917175293
    4. ')' → logprob: -7.258997917175293
    5. '<|end|>' → logprob: -7.633997917175293
    6. ',' → logprob: -7.883997917175293
    7. '                               ' → logprob: -8.008997917175293
    8. '			' → logprob: -8.133997917175293
    9. ',
' → logprob: -8.383997917175293
    10. '           ' → logprob: -8.508997917175293

Token 474: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005060606170445681
    2. ',' → logprob: -6.25506067276001
    3. '                
' → logprob: -6.75506067276001
    4. ',
' → logprob: -8.130060195922852
    5. '                ' → logprob: -8.630060195922852
    6. '\n' → logprob: -8.755060195922852
    7. '\' → logprob: -9.005060195922852
    8. '\x' → logprob: -9.005060195922852
    9. '```' → logprob: -9.130060195922852
    10. '
' → logprob: -9.255060195922852

Token 475: ' xs' (ID: 26642)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.8720189929008484
    2. 'xs' (adapté à ' xs') → logprob: -1.3720190525054932
    3. 'x' → logprob: -1.8720190525054932
    4. ' candidates' → logprob: -2.872019052505493
    5. 'c' → logprob: -3.372019052505493
    6. 'cx' → logprob: -3.872019052505493
    7. '               ' → logprob: -3.872019052505493
    8. 'xp' → logprob: -4.997018814086914
    9. 'offset' → logprob: -5.122018814086914
    10. 'rx' → logprob: -5.247018814086914

Token 476: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002170601626858115
    2. ' =' → logprob: -6.377170562744141
    3. '1' → logprob: -7.752170562744141
    4. 'm' → logprob: -10.25217056274414
    5. '=[' → logprob: -13.62717056274414
    6. '[' → logprob: -14.62717056274414
    7. '.append' → logprob: -15.25217056274414
    8. '=(' → logprob: -15.62717056274414
    9. '-' → logprob: -15.62717056274414
    10. '=[]' → logprob: -15.75217056274414

Token 477: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001228561857715249
    2. ' =' → logprob: -6.751228332519531
    3. ',' → logprob: -9.751228332519531
    4. '=

' → logprob: -16.62622833251953
    5. '=
' → logprob: -18.12622833251953
    6. '＝' → logprob: -19.12622833251953
    7. '=}' → logprob: -19.37622833251953
    8. '=int' → logprob: -19.75122833251953
    9. ' ,' → logprob: -20.12622833251953
    10. ' ' → logprob: -20.37622833251953

Token 478: ' xm' (ID: 119718)
  Prédit: 'ym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ym' → logprob: -0.5765542387962341
    2. 'xm' → logprob: -0.8265542387962341
    3. ' xm' → logprob: -7.826554298400879
    4. ' ym' → logprob: -8.826554298400879
    5. 'int' → logprob: -9.826554298400879
    6. '   ' → logprob: -11.701554298400879
    7. 'float' → logprob: -13.701554298400879
    8. 'ys' → logprob: -14.201554298400879
    9. 'yp' → logprob: -14.326554298400879
    10. ' ' → logprob: -14.451554298400879

Token 479: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16024930775165558
    2. ' +' → logprob: -1.9102493524551392
    3. '+h' → logprob: -11.660249710083008
    4. ',' → logprob: -12.035249710083008
    5. '=' → logprob: -12.660249710083008
    6. '+
' → logprob: -12.910249710083008
    7. '-' → logprob: -13.035249710083008
    8. '+y' → logprob: -14.035249710083008
    9. '+=' → logprob: -14.910249710083008
    10. '<|end|>' → logprob: -14.910249710083008

Token 480: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0008370272698812187
    2. ' h' → logprob: -7.1258368492126465
    3. '-' → logprob: -11.125837326049805
    4. '(h' → logprob: -11.250837326049805
    5. '-h' → logprob: -13.250837326049805
    6. '   ' → logprob: -13.875837326049805
    7. '(-' → logprob: -14.375837326049805
    8. ' -' → logprob: -15.125837326049805
    9. '(' → logprob: -15.375837326049805
    10. ' ' → logprob: -15.750837326049805

Token 481: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.23508583009243011
    2. '*(' → logprob: -1.7350858449935913
    3. '*(-' → logprob: -3.9850857257843018
    4. ' *' → logprob: -4.235085964202881
    5. '*((' → logprob: -10.235085487365723
    6. '*y' → logprob: -12.360085487365723
    7. '*-' → logprob: -13.610085487365723
    8. '*[' → logprob: -15.610085487365723
    9. '*s' → logprob: -15.735085487365723
    10. '*object' → logprob: -15.985085487365723

Token 482: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.067840576171875
    2. '-(' → logprob: -1.067840576171875
    3. '(y' → logprob: -1.192840576171875
    4. ' (' → logprob: -5.192840576171875
    5. '-' → logprob: -5.942840576171875
    6. ' -(' → logprob: -8.067840576171875
    7. ' y' → logprob: -8.942840576171875
    8. '(' → logprob: -8.942840576171875
    9. ' -' → logprob: -9.317840576171875
    10. '(-(' → logprob: -9.317840576171875

Token 483: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6942684650421143
    2. '2' → logprob: -0.6942684650421143
    3. 'x' → logprob: -6.819268226623535
    4. 'y' → logprob: -11.569268226623535
    5. '<|end|>' → logprob: -12.694268226623535
    6. ' -' → logprob: -12.819268226623535
    7. ' x' → logprob: -12.819268226623535
    8. ' ' → logprob: -12.944268226623535
    9. '```' → logprob: -13.194268226623535
    10. '_' → logprob: -14.256768226623535

Token 484: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01815696805715561
    2. '-' → logprob: -4.018157005310059
    3. '-x' → logprob: -12.518157005310059
    4. ' ' → logprob: -13.893157005310059
    5. '<|end|>' → logprob: -14.518157005310059
    6. '1' → logprob: -14.768157005310059
    7. '-y' → logprob: -15.268157005310059
    8. 'x' → logprob: -15.393157005310059
    9. ' y' → logprob: -15.518157005310059
    10. '_' → logprob: -15.643157005310059

Token 485: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.027239929884672165
    2. 'x' → logprob: -3.777240037918091
    3. ' y' → logprob: -5.527239799499512
    4. 'ym' → logprob: -13.277239799499512
    5. ' x' → logprob: -13.527239799499512
    6. 'ys' → logprob: -13.652239799499512
    7. 'yst' → logprob: -13.902239799499512
    8. 'yl' → logprob: -14.027239799499512
    9. '	y' → logprob: -14.027239799499512
    10. '   ' → logprob: -14.527239799499512

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004635422490537167
    2. 'x' → logprob: -5.379635334014893
    3. ' x' → logprob: -11.75463581085205
    4. 'y' → logprob: -12.50463581085205
    5. ' ' → logprob: -13.62963581085205
    6. '<|end|>' → logprob: -15.12963581085205
    7. ' y' → logprob: -15.25463581085205
    8. 's' → logprob: -15.31713581085205
    9. '```' → logprob: -15.50463581085205
    10. '[' → logprob: -15.62963581085205

Token 487: ')/' (ID: 11876)
  Prédit: '/d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/d' → logprob: -0.27692899107933044
    2. ')/' → logprob: -1.5269290208816528
    3. ')' → logprob: -3.7769289016723633
    4. ' /' → logprob: -6.651928901672363
    5. '/' → logprob: -7.651928901672363
    6. ')/(' → logprob: -11.026928901672363
    7. 'd' → logprob: -12.276928901672363
    8. ']/' → logprob: -12.651928901672363
    9. '"/' → logprob: -13.901928901672363
    10. ' )' → logprob: -13.901928901672363

Token 488: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.088346359931165e-07
    2. ' d' → logprob: -14.000000953674316
    3. 'dist' → logprob: -17.25
    4. '   ' → logprob: -19.375
    5. '	d' → logprob: -19.375
    6. '
' → logprob: -20.5
    7. ')d' → logprob: -20.75
    8. ' ' → logprob: -21.125
    9. '>d' → logprob: -21.25
    10. '```' → logprob: -21.25

Token 489: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06440964341163635
    2. ',
' → logprob: -3.0644097328186035
    3. '               ' → logprob: -4.6894097328186035
    4. '<|end|>' → logprob: -5.3144097328186035
    5. ')' → logprob: -8.189409255981445
    6. ' ,' → logprob: -8.439409255981445
    7. '                               ' → logprob: -8.689409255981445
    8. '<|end|>' → logprob: -8.689409255981445
    9. '
' → logprob: -8.939409255981445
    10. '```' → logprob: -9.189409255981445

Token 490: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5408603549003601
    2. '               ' → logprob: -1.5408604145050049
    3. '<|end|>' → logprob: -2.290860414505005
    4. ',
' → logprob: -3.665860414505005
    5. ' 
' → logprob: -4.165860176086426
    6. '                
' → logprob: -4.415860176086426
    7. '-' → logprob: -4.665860176086426
    8. '                               ' → logprob: -5.165860176086426
    9. ',' → logprob: -5.290860176086426
    10. '\
' → logprob: -6.040860176086426

Token 491: ' ys' (ID: 67301)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9368237257003784
    2. '<|end|>' → logprob: -1.3118237257003784
    3. 's' → logprob: -1.6868237257003784
    4. ',' → logprob: -2.186823844909668
    5. '0' → logprob: -4.186823844909668
    6. 'xs' → logprob: -5.061823844909668
    7. ' ' → logprob: -5.561823844909668
    8. 'x' → logprob: -5.811823844909668
    9. ')' → logprob: -6.436823844909668
    10. '(xs' → logprob: -6.811823844909668

Token 492: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.341585636138916
    2. '1' → logprob: -1.466585636138916
    3. '=' → logprob: -2.841585636138916
    4. ' =' → logprob: -8.966585159301758
    5. 'xm' → logprob: -9.466585159301758
    6. 'м' → logprob: -10.591585159301758
    7. 'x' → logprob: -11.341585159301758
    8. 's' → logprob: -11.341585159301758
    9. '=m' → logprob: -11.341585159301758
    10. ',' → logprob: -11.841585159301758

Token 493: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. '=
' → logprob: -18.503177642822266
    4. ',' → logprob: -19.253177642822266
    5. '=

' → logprob: -19.503177642822266
    6. '＝' → logprob: -20.003177642822266
    7. '=x' → logprob: -20.128177642822266
    8. '=}' → logprob: -21.003177642822266
    9. '=s' → logprob: -21.128177642822266
    10. ')' → logprob: -21.253177642822266

Token 494: ' ym' (ID: 30097)
  Prédit: 'ym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ym' → logprob: -5.836499985889532e-05
    2. ' ym' → logprob: -9.7500581741333
    3. 'Ym' → logprob: -18.875059127807617
    4. 'ymi' → logprob: -19.000059127807617
    5. 'ymm' → logprob: -19.250059127807617
    6. 'ymph' → logprob: -20.125059127807617
    7. 'xm' → logprob: -20.250059127807617
    8. 'yg' → logprob: -20.250059127807617
    9. 'ymy' → logprob: -20.375059127807617
    10. 'ymal' → logprob: -21.000059127807617

Token 495: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008632414974272251
    2. ' -' → logprob: -4.758632183074951
    3. '+' → logprob: -11.38363265991211
    4. '-h' → logprob: -12.00863265991211
    5. '−' → logprob: -15.63363265991211
    6. '-
' → logprob: -15.88363265991211
    7. ' +' → logprob: -16.13363265991211
    8. '+h' → logprob: -17.50863265991211
    9. '-ħ' → logprob: -18.38363265991211
    10. '\-' → logprob: -18.63363265991211

Token 496: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00020354038861114532
    2. ' h' → logprob: -8.500203132629395
    3. '	h' → logprob: -19.62520408630371
    4. '   ' → logprob: -21.75020408630371
    5. '(h' → logprob: -23.50020408630371
    6. '_h' → logprob: -25.50020408630371
    7. '<h' → logprob: -25.50020408630371
    8. '    ' → logprob: -25.62520408630371
    9. '"h' → logprob: -25.62520408630371
    10. '  ' → logprob: -26.00020408630371

Token 497: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.0008576238178648055
    2. '(x' → logprob: -7.625857830047607
    3. '*' → logprob: -8.00085735321045
    4. ' *' → logprob: -10.50085735321045
    5. ' (' → logprob: -13.00085735321045
    6. '(y' → logprob: -13.50085735321045
    7. '*((' → logprob: -13.50085735321045
    8. ' *(' → logprob: -14.25085735321045
    9. '(' → logprob: -14.62585735321045
    10. '<|end|>' → logprob: -15.00085735321045

Token 498: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0002651503309607506
    2. ' (' → logprob: -8.250265121459961
    3. '*(' → logprob: -12.750265121459961
    4. 'x' → logprob: -14.375265121459961
    5. '   ' → logprob: -15.500265121459961
    6. '(y' → logprob: -16.25026512145996
    7. '(' → logprob: -16.75026512145996
    8. '(xs' → logprob: -17.37526512145996
    9. ')' → logprob: -17.50026512145996
    10. '((' → logprob: -18.37526512145996

Token 499: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.226628895296017e-06
    2. '1' → logprob: -11.875007629394531
    3. '۲' → logprob: -16.37500762939453
    4. '<|end|>' → logprob: -16.62500762939453
    5. '₂' → logprob: -17.50000762939453
    6. ')' → logprob: -18.00000762939453
    7. ' ' → logprob: -18.06250762939453
    8. '```' → logprob: -18.06250762939453
    9. '২' → logprob: -18.31250762939453
    10. '
' → logprob: -18.37500762939453

Token 500: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6932151913642883
    2. ' -' → logprob: -0.6932151913642883
    3. '1' → logprob: -9.693215370178223
    4. '<|end|>' → logprob: -13.068215370178223
    5. ',' → logprob: -13.443215370178223
    6. ' ' → logprob: -13.568215370178223
    7. '_' → logprob: -14.818215370178223
    8. '-x' → logprob: -15.068215370178223
    9. '[' → logprob: -15.693215370178223
    10. 'x' → logprob: -15.693215370178223

Token 501: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.7610454708337784e-05
    2. ' x' → logprob: -10.500027656555176
    3. 'y' → logprob: -16.75002670288086
    4. '(x' → logprob: -18.75002670288086
    5. '	x' → logprob: -19.37502670288086
    6. ')x' → logprob: -19.50002670288086
    7. '
' → logprob: -20.00002670288086
    8. '   ' → logprob: -20.25002670288086
    9. '"x' → logprob: -20.25002670288086
    10. ''x' → logprob: -20.37502670288086

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. 'x' → logprob: -14.875000953674316
    3. ')' → logprob: -16.0
    4. ' ' → logprob: -16.125
    5. 'y' → logprob: -17.125
    6. ',' → logprob: -17.375
    7. '```' → logprob: -17.375
    8. 'm' → logprob: -18.3125
    9. 's' → logprob: -18.9375
    10. '(' → logprob: -19.1875

Token 503: ')/' (ID: 11876)
  Prédit: '/d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/d' → logprob: -0.4746382534503937
    2. ')/' → logprob: -0.9746382236480713
    3. ')' → logprob: -7.97463846206665
    4. '/' → logprob: -8.474637985229492
    5. ' /' → logprob: -12.224637985229492
    6. ']/' → logprob: -13.474637985229492
    7. 'd' → logprob: -14.224637985229492
    8. ')d' → logprob: -15.099637985229492
    9. '1' → logprob: -15.349637985229492
    10. '```' → logprob: -15.599637985229492

Token 504: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -6.704273118884885e-07
    2. ' d' → logprob: -14.500000953674316
    3. '
' → logprob: -17.375
    4. '	d' → logprob: -17.875
    5. '   ' → logprob: -18.125
    6. '```' → logprob: -18.625
    7. ')d' → logprob: -18.875
    8. ' ' → logprob: -19.0
    9. '1' → logprob: -19.625
    10. ''d' → logprob: -20.0

Token 505: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1296616643667221
    2. '
' → logprob: -2.8796615600585938
    3. '                
' → logprob: -3.0046615600585938
    4. ')
' → logprob: -5.004661560058594
    5. 's' → logprob: -5.504661560058594
    6. ')' → logprob: -6.879661560058594
    7. 'xs' → logprob: -7.129661560058594
    8. ',
' → logprob: -7.879661560058594
    9. '\n' → logprob: -8.254661560058594
    10. '\
' → logprob: -8.379661560058594

Token 506: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020293107256293297
    2. '                
' → logprob: -4.520293235778809
    3. 'xs' → logprob: -5.645293235778809
    4. '
' → logprob: -5.895293235778809
    5. 's' → logprob: -6.270293235778809
    6. ',
' → logprob: -8.395293235778809
    7. ')
' → logprob: -8.770293235778809
    8. '(xs' → logprob: -9.020293235778809
    9. '           ' → logprob: -9.520293235778809
    10. '              ' → logprob: -10.395293235778809

Token 507: ' xs' (ID: 26642)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.46258747577667236
    2. '
' → logprob: -2.337587356567383
    3. '               ' → logprob: -2.462587356567383
    4. ' candidates' → logprob: -2.462587356567383
    5. ')
' → logprob: -2.962587356567383
    6. 'xs' (adapté à ' xs') → logprob: -3.462587356567383
    7. ',
' → logprob: -4.712587356567383
    8. '                
' → logprob: -5.462587356567383
    9. '(
' → logprob: -6.837587356567383
    10. ')' → logprob: -6.962587356567383

Token 508: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25516968965530396
    2. '1' → logprob: -1.5051696300506592
    3. 's' → logprob: -5.755169868469238
    4. '0' → logprob: -9.630169868469238
    5. '=' → logprob: -13.255169868469238
    6. ' ' → logprob: -14.380169868469238
    7. '_' → logprob: -15.005169868469238
    8. ''s' → logprob: -15.630169868469238
    9. ' =' → logprob: -15.755169868469238
    10. ',' → logprob: -16.505168914794922

Token 509: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407710552215576
    2. '=' → logprob: -0.9740771055221558
    3. ',' → logprob: -16.599077224731445
    4. ' ' → logprob: -18.349077224731445
    5. 's' → logprob: -19.224077224731445
    6. ' =
' → logprob: -19.224077224731445
    7. '＝' → logprob: -19.474077224731445
    8. ')' → logprob: -19.849077224731445
    9. 'x' → logprob: -20.349077224731445
    10. '=
' → logprob: -20.474077224731445

Token 510: ' xm' (ID: 119718)
  Prédit: 'xm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xm' → logprob: -0.16022412478923798
    2. ' xm' → logprob: -1.9102240800857544
    3. 'x' → logprob: -18.16022491455078
    4. ' ' → logprob: -19.28522491455078
    5. ' x' → logprob: -20.16022491455078
    6. 'Xm' → logprob: -20.41022491455078
    7. '(x' → logprob: -20.53522491455078
    8. 'xs' → logprob: -20.91022491455078
    9. 'xu' → logprob: -20.91022491455078
    10. 'xml' → logprob: -21.16022491455078

Token 511: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759419202804565
    2. '-' → logprob: -0.8259419202804565
    3. ' ' → logprob: -14.325942039489746
    4. '<|end|>' → logprob: -14.450942039489746
    5. '+' → logprob: -15.200942039489746
    6. '−' → logprob: -15.325942039489746
    7. '```' → logprob: -15.950942039489746
    8. ',' → logprob: -15.950942039489746
    9. ' ' → logprob: -16.32594108581543
    10. ')' → logprob: -16.45094108581543

Token 512: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.014163628220558167
    2. ' h' → logprob: -4.264163494110107
    3. '<|end|>' → logprob: -16.389163970947266
    4. 's' → logprob: -17.264163970947266
    5. '	h' → logprob: -18.014163970947266
    6. 'hs' → logprob: -18.264163970947266
    7. ' ' → logprob: -18.389163970947266
    8. '1' → logprob: -18.889163970947266
    9. ' s' → logprob: -20.389163970947266
    10. ' 
' → logprob: -20.764163970947266

Token 513: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -4.3226136767771095e-05
    2. '*' → logprob: -10.250042915344238
    3. ' *' → logprob: -12.000042915344238
    4. ' *(' → logprob: -14.375042915344238
    5. '(' → logprob: -14.875042915344238
    6. '<|end|>' → logprob: -15.000042915344238
    7. '*((' → logprob: -15.125042915344238
    8. ' (' → logprob: -16.625043869018555
    9. ']*(' → logprob: -17.750043869018555
    10. '(y' → logprob: -17.875043869018555

Token 514: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0028363727033138275
    2. 'y' → logprob: -5.877836227416992
    3. ' (' → logprob: -10.627836227416992
    4. 'h' → logprob: -12.127836227416992
    5. '(' → logprob: -14.127836227416992
    6. '*(' → logprob: -14.627836227416992
    7. ' y' → logprob: -15.377836227416992
    8. '*y' → logprob: -16.377836227416992
    9. '(x' → logprob: -16.502836227416992
    10. '[y' → logprob: -16.752836227416992

Token 515: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00048417699872516096
    2. '*(' → logprob: -8.250484466552734
    3. '(' → logprob: -9.000484466552734
    4. '
' → logprob: -10.750484466552734
    5. '1' → logprob: -11.000484466552734
    6. '(x' → logprob: -11.125484466552734
    7. ' ' → logprob: -12.250484466552734
    8. '   ' → logprob: -12.312984466552734
    9. '*' → logprob: -12.437984466552734
    10. ' -' → logprob: -12.875484466552734

Token 516: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04859543219208717
    2. '-' → logprob: -3.048595428466797
    3. ' ' → logprob: -12.423595428466797
    4. '-y' → logprob: -12.798595428466797
    5. ' y' → logprob: -14.923595428466797
    6. ',' → logprob: -15.798595428466797
    7. '+' → logprob: -15.923595428466797
    8. '   ' → logprob: -15.923595428466797
    9. 'y' → logprob: -16.673595428466797
    10. '-x' → logprob: -16.923595428466797

Token 517: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005679258611053228
    2. ' y' → logprob: -8.000568389892578
    3. 'ys' → logprob: -8.750568389892578
    4. '1' → logprob: -9.875568389892578
    5. 'ym' → logprob: -11.125568389892578
    6. '(y' → logprob: -12.125568389892578
    7. 'yl' → logprob: -14.875568389892578
    8. '(' → logprob: -15.000568389892578
    9. ' ys' → logprob: -15.250568389892578
    10. 'yst' → logprob: -15.375568389892578

Token 518: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -13.875003814697266
    3. 'ys' → logprob: -13.875003814697266
    4. 'x' → logprob: -14.937503814697266
    5. 'm' → logprob: -15.625003814697266
    6. 'y' → logprob: -15.750003814697266
    7. '   ' → logprob: -15.875003814697266
    8. 's' → logprob: -16.000003814697266
    9. '
' → logprob: -16.937503814697266
    10. '           ' → logprob: -17.187503814697266

Token 519: ')/' (ID: 11876)
  Prédit: '/d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/d' → logprob: -0.008676380850374699
    2. ')/' → logprob: -4.758676528930664
    3. '/' → logprob: -9.758676528930664
    4. ')' → logprob: -12.758676528930664
    5. ' /' → logprob: -14.008676528930664
    6. ']/' → logprob: -16.008676528930664
    7. ')d' → logprob: -16.758676528930664
    8. 'd' → logprob: -17.008676528930664
    9. '}/' → logprob: -17.008676528930664
    10. '```' → logprob: -18.133676528930664

Token 520: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5048530030981055e-06
    2. ' d' → logprob: -13.750001907348633
    3. '2' → logprob: -16.250001907348633
    4. '1' → logprob: -16.375001907348633
    5. '	d' → logprob: -17.250001907348633
    6. '>d' → logprob: -17.250001907348633
    7. '```' → logprob: -17.250001907348633
    8. ')d' → logprob: -17.375001907348633
    9. '0' → logprob: -17.625001907348633
    10. '   ' → logprob: -17.750001907348633

Token 521: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005411977414041758
    2. ',' → logprob: -5.8804121017456055
    3. '
' → logprob: -6.6304121017456055
    4. '<|end|>' → logprob: -7.6304121017456055
    5. ',
' → logprob: -8.630412101745605
    6. '                ' → logprob: -8.880412101745605
    7. '                
' → logprob: -9.130412101745605
    8. '
' → logprob: -9.130412101745605
    9. '              ' → logprob: -9.630412101745605
    10. '			' → logprob: -9.755412101745605

Token 522: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024876687675714493
    2. ',' → logprob: -6.627487659454346
    3. '                ' → logprob: -7.877487659454346
    4. '
' → logprob: -8.377488136291504
    5. '                
' → logprob: -8.877488136291504
    6. '              ' → logprob: -9.002488136291504
    7. ',
' → logprob: -9.627488136291504
    8. 'ys' → logprob: -9.752488136291504
    9. '             ' → logprob: -10.502488136291504
    10. '
' → logprob: -10.752488136291504

Token 523: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' (adapté à ' ys') → logprob: -0.03808600828051567
    2. ' ys' → logprob: -3.2880859375
    3. 'xs' → logprob: -10.4130859375
    4. ' xs' → logprob: -11.7880859375
    5. 's' → logprob: -12.2880859375
    6. ' ' → logprob: -14.0380859375
    7. 'ms' → logprob: -15.5380859375
    8. 'ks' → logprob: -15.5380859375
    9. 'hs' → logprob: -16.0380859375
    10. 'rs' → logprob: -16.1630859375

Token 524: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6748589873313904
    2. '=' → logprob: -1.0498590469360352
    3. 's' → logprob: -2.424859046936035
    4. 'm' → logprob: -3.299859046936035
    5. 'xm' → logprob: -5.299859046936035
    6. '+' → logprob: -5.549859046936035
    7. '1' → logprob: -5.799859046936035
    8. ' =' → logprob: -6.799859046936035
    9. '=m' → logprob: -7.799859046936035
    10. 'xs' → logprob: -7.924859046936035

Token 525: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. ' xm' → logprob: -16.788042068481445
    4. '=s' → logprob: -17.163042068481445
    5. 'xm' → logprob: -17.288042068481445
    6. 's' → logprob: -17.413042068481445
    7. '=
' → logprob: -19.163042068481445
    8. '=x' → logprob: -19.413042068481445
    9. '=

' → logprob: -19.413042068481445
    10. '=m' → logprob: -19.538042068481445

Token 526: ' ym' (ID: 30097)
  Prédit: 'ym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ym' → logprob: -0.0009115827269852161
    2. ' ym' → logprob: -7.000911712646484
    3. 'ys' → logprob: -16.375911712646484
    4. 'xm' → logprob: -17.875911712646484
    5. 'ymi' → logprob: -20.000911712646484
    6. 'ymm' → logprob: -20.375911712646484
    7. 'yg' → logprob: -20.500911712646484
    8. 'Ym' → logprob: -20.750911712646484
    9. 'sym' → logprob: -21.375911712646484
    10. 'ysm' → logprob: -21.500911712646484

Token 527: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740855395793915
    2. '+' → logprob: -0.9740855693817139
    3. '+s' → logprob: -12.224085807800293
    4. '+h' → logprob: -13.224085807800293
    5. ' +
' → logprob: -14.599085807800293
    6. '+x' → logprob: -14.599085807800293
    7. ' -' → logprob: -14.849085807800293
    8. '+
' → logprob: -14.974085807800293
    9. '＋' → logprob: -16.724084854125977
    10. ' ' → logprob: -16.974084854125977

Token 528: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.02324547804892063
    2. ' h' → logprob: -3.7732455730438232
    3. '	h' → logprob: -18.148244857788086
    4. '(h' → logprob: -21.148244857788086
    5. '_h' → logprob: -21.273244857788086
    6. ' ' → logprob: -21.898244857788086
    7. '   ' → logprob: -22.898244857788086
    8. '<h' → logprob: -23.398244857788086
    9. '[h' → logprob: -23.773244857788086
    10. '"h' → logprob: -23.898244857788086

Token 529: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.004568019416183233
    2. '(x' → logprob: -5.504568099975586
    3. '*' → logprob: -7.879568099975586
    4. '(h' → logprob: -9.629568099975586
    5. '*h' → logprob: -10.379568099975586
    6. 'h' → logprob: -11.254568099975586
    7. ' *' → logprob: -14.379568099975586
    8. ' (' → logprob: -14.754568099975586
    9. ' *(' → logprob: -16.379568099975586
    10. '(' → logprob: -16.379568099975586

Token 530: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4747292697429657
    2. '(x' → logprob: -0.9747292995452881
    3. 'h' → logprob: -7.349729061126709
    4. '1' → logprob: -12.849729537963867
    5. ' x' → logprob: -12.974729537963867
    6. '   ' → logprob: -12.974729537963867
    7. ' (' → logprob: -13.974729537963867
    8. '	x' → logprob: -14.724729537963867
    9. ' ' → logprob: -15.974729537963867
    10. 's' → logprob: -16.349729537963867

Token 531: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04065072163939476
    2. '1' → logprob: -3.7906506061553955
    3. '-' → logprob: -4.665650844573975
    4. ' -' → logprob: -4.915650844573975
    5. ')' → logprob: -8.665650367736816
    6. ' ' → logprob: -10.040650367736816
    7. '[' → logprob: -10.040650367736816
    8. '```' → logprob: -10.165650367736816
    9. '   ' → logprob: -10.290650367736816
    10. '  ' → logprob: -10.415650367736816

Token 532: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006728395354002714
    2. '-' → logprob: -5.006728172302246
    3. ' ' → logprob: -12.131728172302246
    4. '-x' → logprob: -12.631728172302246
    5. '<|end|>' → logprob: -13.381728172302246
    6. ',' → logprob: -13.506728172302246
    7. '	' → logprob: -14.881728172302246
    8. ' x' → logprob: -15.381728172302246
    9. '>' → logprob: -16.006729125976562
    10. '   ' → logprob: -16.006729125976562

Token 533: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00032747918157838285
    2. ' x' → logprob: -8.125327110290527
    3. '1' → logprob: -10.375327110290527
    4. '(x' → logprob: -16.375328063964844
    5. ' ' → logprob: -17.000328063964844
    6. ')x' → logprob: -17.250328063964844
    7. 'y' → logprob: -17.625328063964844
    8. '	x' → logprob: -17.875328063964844
    9. '```' → logprob: -18.125328063964844
    10. '   ' → logprob: -18.625328063964844

Token 534: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' -' → logprob: -16.25
    3. '-' → logprob: -16.75
    4. '<|end|>' → logprob: -16.75
    5. ' ' → logprob: -17.375
    6. '```' → logprob: -17.625
    7. '<|end|>' → logprob: -18.125
    8. ',' → logprob: -18.3125
    9. '2' → logprob: -18.3125
    10. ')' → logprob: -18.6875

Token 535: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.011489023454487324
    2. '/d' → logprob: -4.511488914489746
    3. ')' → logprob: -7.761488914489746
    4. '/' → logprob: -11.886488914489746
    5. ')/(' → logprob: -13.011488914489746
    6. '   ' → logprob: -13.386488914489746
    7. ' )' → logprob: -13.886488914489746
    8. '```' → logprob: -13.886488914489746
    9. ' /' → logprob: -14.011488914489746
    10. '	' → logprob: -15.511488914489746

Token 536: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.466968650580384e-05
    2. '1' → logprob: -10.500054359436035
    3. '2' → logprob: -10.750054359436035
    4. ' d' → logprob: -13.000054359436035
    5. '0' → logprob: -13.500054359436035
    6. '```' → logprob: -14.000054359436035
    7. ')d' → logprob: -15.000054359436035
    8. ' ' → logprob: -15.125054359436035
    9. '   ' → logprob: -16.37505531311035
    10. '	d' → logprob: -16.37505531311035

Token 537: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012743073515594006
    2. '
' → logprob: -5.13774299621582
    3. ')' → logprob: -5.51274299621582
    4. '       ' → logprob: -7.26274299621582
    5. '                
' → logprob: -7.88774299621582
    6. ')
' → logprob: -8.01274299621582
    7. '<|end|>' → logprob: -8.01274299621582
    8. '           ' → logprob: -8.13774299621582
    9. ',' → logprob: -8.51274299621582
    10. '		       ' → logprob: -9.26274299621582

Token 538: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06985706090927124
    2. '
' → logprob: -3.069857120513916
    3. '       ' → logprob: -4.069857120513916
    4. '                
' → logprob: -6.819857120513916
    5. 'for' → logprob: -7.319857120513916
    6. ' for' → logprob: -7.319857120513916
    7. '```' → logprob: -8.069856643676758
    8. '<|end|>' → logprob: -8.319856643676758
    9. '        
' → logprob: -8.444856643676758
    10. '
' → logprob: -9.319856643676758

Token 539: ' candidates' (ID: 18116)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022921759635210037
    2. '       ' → logprob: -4.272921562194824
    3. ' for' → logprob: -5.772921562194824
    4. '                
' → logprob: -6.272921562194824
    5. 'for' → logprob: -7.022921562194824
    6. ' candidates' → logprob: -7.272921562194824
    7. '
' → logprob: -8.147921562194824
    8. '        
' → logprob: -8.272921562194824
    9. ')' → logprob: -8.397921562194824
    10. '           ' → logprob: -8.522921562194824

Token 540: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007878457196056843
    2. '.extend' → logprob: -5.007878303527832
    3. '.' → logprob: -6.757878303527832
    4. ' .' → logprob: -15.382878303527832
    5. '.app' → logprob: -15.757878303527832
    6. ' +=' → logprob: -15.882878303527832
    7. '.ap' → logprob: -16.25787925720215
    8. '+=' → logprob: -16.75787925720215
    9. '.push' → logprob: -18.00787925720215
    10. '.add' → logprob: -18.00787925720215

Token 541: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -4.060365608893335e-05
    2. '(' → logprob: -10.125041007995605
    3. '(xs' → logprob: -15.000041007995605
    4. '(((' → logprob: -16.87504005432129
    5. '(
' → logprob: -17.12504005432129
    6. ' ((' → logprob: -17.25004005432129
    7. '[(' → logprob: -18.25004005432129
    8. '(x' → logprob: -19.00004005432129
    9. ' ' → logprob: -19.00004005432129
    10. '(('' → logprob: -19.62504005432129

Token 542: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -3.054500666621607e-06
    2. ' xs' → logprob: -12.75000286102295
    3. '(xs' → logprob: -16.250003814697266
    4. '-xs' → logprob: -22.625003814697266
    5. 'x' → logprob: -23.250003814697266
    6. '   ' → logprob: -24.375003814697266
    7. ' ' → logprob: -25.625003814697266
    8. 'xx' → logprob: -25.625003814697266
    9. 'sx' → logprob: -25.875003814697266
    10. 'XS' → logprob: -26.750003814697266

Token 543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -16.5
    3. '2' → logprob: -18.375
    4. ' ' → logprob: -19.625
    5. '１' → logprob: -20.125
    6. '   ' → logprob: -20.25
    7. '```' → logprob: -20.25
    8. '১' → logprob: -20.5
    9. '१' → logprob: -20.75
    10. ',' → logprob: -20.875

Token 544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.392202976712724e-06
    2. ' ,' → logprob: -12.000006675720215
    3. ',
' → logprob: -16.2500057220459
    4. '‌,' → logprob: -17.5000057220459
    5. ',y' → logprob: -17.6250057220459
    6. ')' → logprob: -18.1250057220459
    7. ',

' → logprob: -18.2500057220459
    8. '<|end|>' → logprob: -19.1250057220459
    9. '),' → logprob: -19.3750057220459
    10. '،' → logprob: -19.5000057220459

Token 545: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.0009115827269852161
    2. ' ys' → logprob: -7.000911712646484
    3. '
' → logprob: -17.750911712646484
    4. 'ysi' → logprob: -18.250911712646484
    5. ' ' → logprob: -18.625911712646484
    6. 'yses' → logprob: -19.500911712646484
    7. '
' → logprob: -20.000911712646484
    8. '' → logprob: -20.125911712646484
    9. 'Ys' → logprob: -20.125911712646484
    10. 'ysy' → logprob: -20.125911712646484

Token 546: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 's' → logprob: -20.875
    3. '2' → logprob: -21.625
    4. '１' → logprob: -21.625
    5. '۱' → logprob: -22.375
    6. '১' → logprob: -22.375
    7. '```' → logprob: -23.0
    8. '१' → logprob: -23.25
    9. 'ys' → logprob: -24.0
    10. '_' → logprob: -24.375

Token 547: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03806616738438606
    2. '))' → logprob: -3.2880661487579346
    3. '))
' → logprob: -11.538065910339355
    4. ')
' → logprob: -12.163065910339355
    5. ')}' → logprob: -12.538065910339355
    6. '               ' → logprob: -12.913065910339355
    7. ')))' → logprob: -13.663065910339355
    8. '),' → logprob: -13.913065910339355
    9. ' )' → logprob: -14.538065910339355
    10. ',' → logprob: -15.038065910339355

Token 548: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.877503907773644e-05
    2. ')' → logprob: -10.250099182128906
    3. ' candidates' → logprob: -11.000099182128906
    4. 'c' → logprob: -11.250099182128906
    5. ',c' → logprob: -12.500099182128906
    6. '           ' → logprob: -12.625099182128906
    7. ',' → logprob: -12.750099182128906
    8. 'tokens' → logprob: -12.750099182128906
    9. '                
' → logprob: -12.875099182128906
    10. '<|end|>' → logprob: -12.875099182128906

Token 549: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3591403067111969
    2. '               ' → logprob: -1.3591402769088745
    3. '(c' → logprob: -3.359140396118164
    4. ' candidates' → logprob: -4.609140396118164
    5. ' (' → logprob: -9.484140396118164
    6. '           ' → logprob: -11.734140396118164
    7. '_candidates' → logprob: -11.859140396118164
    8. 'cand' → logprob: -12.359140396118164
    9. ' candidats' → logprob: -12.484140396118164
    10. 'Candidates' → logprob: -12.984140396118164

Token 550: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001194990472868085
    2. '.' → logprob: -6.751194953918457
    3. ').' → logprob: -11.876194953918457
    4. '<|end|>' → logprob: -12.501194953918457
    5. '.app' → logprob: -12.626194953918457
    6. '.setdefault' → logprob: -13.001194953918457
    7. ' .' → logprob: -13.126194953918457
    8. '.add' → logprob: -13.126194953918457
    9. '.extend' → logprob: -13.876194953918457
    10. '].' → logprob: -14.126194953918457

Token 551: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.7432603272027336e-06
    2. ' ((' → logprob: -14.000001907348633
    3. '(xs' → logprob: -14.500001907348633
    4. '(' → logprob: -15.875001907348633
    5. '(x' → logprob: -16.250001907348633
    6. '(
' → logprob: -16.375001907348633
    7. ' ' → logprob: -18.375001907348633
    8. '>((' → logprob: -18.500001907348633
    9. ' (' → logprob: -18.875001907348633
    10. ')((' → logprob: -19.250001907348633

Token 552: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -5.438573680294212e-06
    2. '(xs' → logprob: -12.250005722045898
    3. ' xs' → logprob: -14.250005722045898
    4. '-xs' → logprob: -21.6250057220459
    5. '   ' → logprob: -23.6250057220459
    6. 'x' → logprob: -23.8750057220459
    7. ' ' → logprob: -24.3750057220459
    8. 'XS' → logprob: -24.6250057220459
    9. 'Xs' → logprob: -25.2500057220459
    10. '               ' → logprob: -25.7500057220459

Token 553: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -15.625
    3. '```' → logprob: -18.5
    4. 's' → logprob: -19.5
    5. '
' → logprob: -19.75
    6. '۲' → logprob: -19.875
    7. ',' → logprob: -20.0
    8. ' ' → logprob: -20.25
    9. '₂' → logprob: -20.375
    10. '２' → logprob: -20.375

Token 554: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4855663721391466e-05
    2. ' ,' → logprob: -11.125015258789062
    3. ',
' → logprob: -18.000015258789062
    4. '(xs' → logprob: -18.000015258789062
    5. '،' → logprob: -18.250015258789062
    6. ',y' → logprob: -18.250015258789062
    7. '‌,' → logprob: -18.250015258789062
    8. '_,' → logprob: -18.875015258789062
    9. ' (' → logprob: -19.125015258789062
    10. '(' → logprob: -19.125015258789062

Token 555: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.0024758970830589533
    2. ' ys' → logprob: -6.002475738525391
    3. 'yses' → logprob: -16.00247573852539
    4. 'ysi' → logprob: -16.00247573852539
    5. 'ysy' → logprob: -17.37747573852539
    6. 'ysin' → logprob: -18.37747573852539
    7. ' ' → logprob: -19.00247573852539
    8. 'ysm' → logprob: -19.75247573852539
    9. 'ysg' → logprob: -19.87747573852539
    10. 'yes' → logprob: -20.00247573852539

Token 556: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.5
    3. '
' → logprob: -18.875
    4. ' ' → logprob: -18.875
    5. '```' → logprob: -18.875
    6. '-' → logprob: -19.375
    7. '+' → logprob: -19.625
    8. '(' → logprob: -19.75
    9. '   ' → logprob: -19.875
    10. '

' → logprob: -20.125

Token 557: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043043080950155854
    2. '               ' → logprob: -8.0004301071167
    3. '           ' → logprob: -9.3754301071167
    4. ')
' → logprob: -11.8754301071167
    5. '))' → logprob: -13.3754301071167
    6. '       ' → logprob: -14.0004301071167
    7. ' )' → logprob: -14.6254301071167
    8. '   ' → logprob: -16.250431060791016
    9. '                   ' → logprob: -16.750431060791016
    10. '),' → logprob: -17.125431060791016

Token 558: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001084971008822322
    2. '
' → logprob: -7.001084804534912
    3. '        
' → logprob: -9.75108528137207
    4. '   ' → logprob: -10.00108528137207
    5. '	' → logprob: -10.37608528137207
    6. ' for' → logprob: -11.25108528137207
    7. '           ' → logprob: -11.75108528137207
    8. '	   ' → logprob: -12.50108528137207
    9. 'for' → logprob: -13.00108528137207
    10. '	       ' → logprob: -13.12608528137207

Token 559: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016669693868607283
    2. ' for' → logprob: -6.626667022705078
    3. 'for' → logprob: -9.126667022705078
    4. '   ' → logprob: -9.626667022705078
    5. '<|end|>' → logprob: -9.876667022705078
    6. '        
' → logprob: -10.126667022705078
    7. '
' → logprob: -11.126667022705078
    8. '	' → logprob: -11.126667022705078
    9. '           ' → logprob: -11.626667022705078
    10. '```' → logprob: -12.251667022705078

Token 560: ' tester' (ID: 51819)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8651152849197388
    2. 'for' → logprob: -1.2401152849197388
    3. ' for' → logprob: -1.2401152849197388
    4. ' found' → logprob: -8.61511516571045
    5. 'found' → logprob: -9.49011516571045
    6. '           ' → logprob: -11.11511516571045
    7. '   ' → logprob: -11.49011516571045
    8. '        
' → logprob: -12.49011516571045
    9. '	for' → logprob: -12.61511516571045
    10. '               ' → logprob: -13.36511516571045

Token 561: ' tous' (ID: 10688)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6671722531318665
    2. 'for' → logprob: -0.7921722531318665
    3. '       ' → logprob: -3.6671721935272217
    4. ' if' → logprob: -5.292172431945801
    5. 'if' → logprob: -6.417172431945801
    6. ' each' → logprob: -7.417172431945801
    7. ' candidates' → logprob: -8.5421724319458
    8. '   ' → logprob: -8.6671724319458
    9. 'points' → logprob: -8.7921724319458
    10. ' points' → logprob: -9.1671724319458

Token 562: ' les' (ID: 1341)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.733672559261322
    2. '(candidate' → logprob: -1.3586726188659668
    3. 'candidate' → logprob: -2.358672618865967
    4. 'c' → logprob: -2.358672618865967
    5. '(x' → logprob: -3.608672618865967
    6. '((' → logprob: -4.483672618865967
    7. '(p' → logprob: -4.858672618865967
    8. ' (' → logprob: -4.858672618865967
    9. '(point' → logprob: -5.233672618865967
    10. 'cand' → logprob: -5.983672618865967

Token 563: ' candidats' (ID: 100182)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8433533906936646
    2. 'candidate' → logprob: -0.9683533906936646
    3. '(x' → logprob: -2.718353271484375
    4. '(c' → logprob: -2.968353271484375
    5. 'cand' → logprob: -3.593353271484375
    6. 'pt' → logprob: -4.468353271484375
    7. 'p' → logprob: -4.593353271484375
    8. ' candidates' → logprob: -5.343353271484375
    9. '(candidate' → logprob: -5.343353271484375
    10. 'point' → logprob: -5.593353271484375

Token 564: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013815441634505987
    2. ' for' → logprob: -6.8763813972473145
    3. 'for' → logprob: -8.001381874084473
    4. '<|end|>' → logprob: -11.751381874084473
    5. '           ' → logprob: -12.501381874084473
    6. '   ' → logprob: -14.001381874084473
    7. '        
' → logprob: -14.751381874084473
    8. ',' → logprob: -15.251381874084473
    9. '	for' → logprob: -16.126380920410156
    10. '      ' → logprob: -16.126380920410156

Token 565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009532357566058636
    2. ' for' → logprob: -5.384532451629639
    3. '<|end|>' → logprob: -5.384532451629639
    4. 'for' → logprob: -8.75953197479248
    5. '<|end|>' → logprob: -10.00953197479248
    6. '   ' → logprob: -10.13453197479248
    7. '        
' → logprob: -11.00953197479248
    8. ')' → logprob: -11.50953197479248
    9. '           ' → logprob: -11.63453197479248
    10. ':' → logprob: -11.75953197479248

Token 566: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6941432952880859
    2. '       ' → logprob: -0.9441432952880859
    3. 'for' (adapté à ' for') → logprob: -2.194143295288086
    4. ' found' → logprob: -11.069143295288086
    5. '   ' → logprob: -11.819143295288086
    6. 'found' → logprob: -12.694143295288086
    7. '	for' → logprob: -13.444143295288086
    8. '           ' → logprob: -13.819143295288086
    9. '<|end|>' → logprob: -14.444143295288086
    10. '```' → logprob: -14.944143295288086

Token 567: ' cx' (ID: 44448)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03766316547989845
    2. 'x' → logprob: -3.537663221359253
    3. '(cx' → logprob: -5.412662982940674
    4. ' (' → logprob: -5.787662982940674
    5. 'cx' → logprob: -8.787663459777832
    6. '(' → logprob: -9.537663459777832
    7. ' x' → logprob: -10.037663459777832
    8. '(c' → logprob: -10.037663459777832
    9. '(px' → logprob: -10.787663459777832
    10. '(xx' → logprob: -12.287663459777832

Token 568: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016110755677800626
    2. ',c' → logprob: -9.000161170959473
    3. ' ,' → logprob: -10.250161170959473
    4. '_,' → logprob: -14.250161170959473
    5. ',y' → logprob: -14.750161170959473
    6. ',x' → logprob: -15.000161170959473
    7. ',C' → logprob: -15.375161170959473
    8. '‌,' → logprob: -15.750161170959473
    9. ',user' → logprob: -16.000160217285156
    10. 's' → logprob: -16.500160217285156

Token 569: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.00026181264547631145
    2. ' cy' → logprob: -8.250262260437012
    3. 'cyj' → logprob: -15.000262260437012
    4. '.cy' → logprob: -16.000261306762695
    5. 'cs' → logprob: -17.750261306762695
    6. ' ' → logprob: -18.750261306762695
    7. 'cych' → logprob: -18.750261306762695
    8. 'cx' → logprob: -19.000261306762695
    9. 'c' → logprob: -19.625261306762695
    10. 'cz' → logprob: -19.750261306762695

Token 570: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0265666376799345
    2. 'in' → logprob: -3.651566743850708
    3. ',' → logprob: -8.276566505432129
    4. 's' → logprob: -12.151566505432129
    5. ' ,' → logprob: -13.026566505432129
    6. ',c' → logprob: -13.901566505432129
    7. ' ' → logprob: -14.401566505432129
    8. '    ' → logprob: -14.401566505432129
    9. '   ' → logprob: -14.401566505432129
    10. ')' → logprob: -15.151566505432129

Token 571: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.935296834039036e-06
    2. ' candidates' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.750003814697266
    4. '_candidates' → logprob: -20.375003814697266
    5. 'candidate' → logprob: -21.750003814697266
    6. 'cand' → logprob: -21.875003814697266
    7. '
' → logprob: -22.625003814697266
    8. ' ' → logprob: -23.250003814697266
    9. ' c' → logprob: -23.625003814697266
    10. ' candidats' → logprob: -23.625003814697266

Token 572: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01418442651629448
    2. ':
' → logprob: -4.514184474945068
    3. '           ' → logprob: -6.514184474945068
    4. '       ' → logprob: -6.889184474945068
    5. '<|end|>' → logprob: -8.13918399810791
    6. ',' → logprob: -9.88918399810791
    7. '<|end|>' → logprob: -9.88918399810791
    8. '):' → logprob: -10.01418399810791
    9. '):
' → logprob: -10.63918399810791
    10. ' :' → logprob: -10.88918399810791

Token 573: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017557187005877495
    2. ' if' → logprob: -4.392557144165039
    3. '       ' → logprob: -5.642557144165039
    4. '<|end|>' → logprob: -6.892557144165039
    5. '
' → logprob: -8.642557144165039
    6. 'if' → logprob: -8.767557144165039
    7. '```' → logprob: -10.392557144165039
    8. '<|end|>' → logprob: -10.517557144165039
    9. '               ' → logprob: -10.767557144165039
    10. '            
' → logprob: -11.142557144165039

Token 574: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2393273264169693
    2. '           ' → logprob: -1.614327311515808
    3. 'if' (adapté à ' if') → logprob: -4.364327430725098
    4. '
' → logprob: -7.239327430725098
    5. '               ' → logprob: -9.114327430725098
    6. '<|end|>' → logprob: -9.739327430725098
    7. '	       ' → logprob: -9.739327430725098
    8. '       ' → logprob: -10.114327430725098
    9. ' 
' → logprob: -10.364327430725098
    10. '            
' → logprob: -11.364327430725098

Token 575: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.25192990899086
    2. ' can' → logprob: -1.5019298791885376
    3. '	can' → logprob: -14.876930236816406
    4. '   ' → logprob: -15.376930236816406
    5. '(can' → logprob: -16.126930236816406
    6. '           ' → logprob: -17.126930236816406
    7. ' ' → logprob: -17.251930236816406
    8. '.can' → logprob: -17.251930236816406
    9. '_can' → logprob: -18.126930236816406
    10. ' all' → logprob: -18.501930236816406

Token 576: '(cx' (ID: 116103)
  Prédit: '(cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cx' → logprob: -0.024395333603024483
    2. ' (' → logprob: -3.774395227432251
    3. '(' → logprob: -6.77439546585083
    4. '(c' → logprob: -12.274394989013672
    5. '(
' → logprob: -14.024394989013672
    6. ' cx' → logprob: -15.024394989013672
    7. '(x' → logprob: -15.399394989013672
    8. '(cid' → logprob: -16.524394989013672
    9. '(

' → logprob: -16.774394989013672
    10. 'cx' → logprob: -16.774394989013672

Token 577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002647927321959287
    2. ' ,' → logprob: -8.250265121459961
    3. ',c' → logprob: -13.000265121459961
    4. ',y' → logprob: -14.125265121459961
    5. '<|end|>' → logprob: -14.750265121459961
    6. ',
' → logprob: -16.25026512145996
    7. '‌,' → logprob: -16.62526512145996
    8. ',user' → logprob: -18.00026512145996
    9. ' ' → logprob: -18.12526512145996
    10. '‍,' → logprob: -18.75026512145996

Token 578: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -8.673547563375905e-05
    2. ' cy' → logprob: -9.375086784362793
    3. 'cyj' → logprob: -13.375086784362793
    4. '.cy' → logprob: -16.125085830688477
    5. ' ' → logprob: -16.250085830688477
    6. 'cych' → logprob: -17.125085830688477
    7. 'c' → logprob: -17.250085830688477
    8. '   ' → logprob: -18.125085830688477
    9. 'cx' → logprob: -18.250085830688477
    10. 'cycl' → logprob: -18.625085830688477

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012668977724388242
    2. ' ,' → logprob: -6.751266956329346
    3. ',c' → logprob: -9.376266479492188
    4. ',s' → logprob: -12.126266479492188
    5. 's' → logprob: -12.251266479492188
    6. 'c' → logprob: -14.126266479492188
    7. '_,' → logprob: -15.626266479492188
    8. '           ' → logprob: -15.626266479492188
    9. ',m' → logprob: -16.001266479492188
    10. ',
' → logprob: -16.251266479492188

Token 580: ' sweets' (ID: 107803)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002194159897044301
    2. ' sweets' → logprob: -6.127193927764893
    3. 'sweet' → logprob: -12.25219440460205
    4. '   ' → logprob: -13.00219440460205
    5. ' sweet' → logprob: -15.25219440460205
    6. '       ' → logprob: -15.25219440460205
    7. ')' → logprob: -15.50219440460205
    8. '
' → logprob: -15.62719440460205
    9. '```' → logprob: -15.75219440460205
    10. '[s' → logprob: -15.87719440460205

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.56102097814437e-05
    2. ' ,' → logprob: -10.000045776367188
    3. '           ' → logprob: -16.625045776367188
    4. ',
' → logprob: -17.375045776367188
    5. '‌,' → logprob: -18.625045776367188
    6. '   ' → logprob: -18.750045776367188
    7. '       ' → logprob: -19.125045776367188
    8. '),' → logprob: -19.375045776367188
    9. '```' → logprob: -19.500045776367188
    10. '_,' → logprob: -19.625045776367188

Token 582: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.011047814972698689
    2. ' mid' → logprob: -4.511047840118408
    3. '           ' → logprob: -18.13604736328125
    4. '[mid' → logprob: -18.88604736328125
    5. '
' → logprob: -19.01104736328125
    6. '(mid' → logprob: -19.26104736328125
    7. '_mid' → logprob: -19.88604736328125
    8. '   ' → logprob: -19.88604736328125
    9. '       ' → logprob: -20.13604736328125
    10. ' ' → logprob: -20.26104736328125

Token 583: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16029642522335052
    2. '):' → logprob: -1.9102964401245117
    3. ':' → logprob: -10.410296440124512
    4. '):
' → logprob: -10.910296440124512
    5. ' ):
' → logprob: -11.660296440124512
    6. '       ' → logprob: -12.285296440124512
    7. ' ):' → logprob: -12.535296440124512
    8. ':
' → logprob: -12.785296440124512
    9. '           ' → logprob: -13.410296440124512
    10. ')' → logprob: -13.785296440124512

Token 584: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008218993316404521
    2. '           ' → logprob: -8.000822067260742
    3. '
' → logprob: -8.625822067260742
    4. ' found' → logprob: -8.750822067260742
    5. 'found' → logprob: -9.375822067260742
    6. '                
' → logprob: -10.375822067260742
    7. '(found' → logprob: -12.750822067260742
    8. ':
' → logprob: -12.875822067260742
    9. '):
' → logprob: -12.875822067260742
    10. '            
' → logprob: -13.000822067260742

Token 585: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.029947178438305855
    2. ' found' → logprob: -3.529947280883789
    3. '               ' → logprob: -8.779947280883789
    4. 'right' → logprob: -10.404947280883789
    5. '           ' → logprob: -12.029947280883789
    6. 'left' → logprob: -12.654947280883789
    7. '
' → logprob: -13.654947280883789
    8. ' right' → logprob: -13.779947280883789
    9. '                   ' → logprob: -15.029947280883789
    10. '	found' → logprob: -15.029947280883789

Token 586: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07998710125684738
    2. '=' → logprob: -2.579987049102783
    3. '=True' → logprob: -6.829987049102783
    4. ' ' → logprob: -11.454987525939941
    5. ' =
' → logprob: -13.329987525939941
    6. ' True' → logprob: -14.079987525939941
    7. '=true' → logprob: -14.204987525939941
    8. '=False' → logprob: -14.204987525939941
    9. '    ' → logprob: -14.954987525939941
    10. 'True' → logprob: -15.079987525939941

Token 587: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.47407710552215576
    2. ' True' → logprob: -0.9740771055221558
    3. '=True' → logprob: -16.724077224731445
    4. '(True' → logprob: -17.224077224731445
    5. 'true' → logprob: -19.724077224731445
    6. '   ' → logprob: -20.599077224731445
    7. ' true' → logprob: -21.099077224731445
    8. '_true' → logprob: -21.849077224731445
    9. ' Tru' → logprob: -21.849077224731445
    10. ' ' → logprob: -21.974077224731445

Token 588: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017163509037345648
    2. '
' → logprob: -7.126716136932373
    3. '                
' → logprob: -7.751716136932373
    4. '       ' → logprob: -8.126716613769531
    5. '           ' → logprob: -9.751716613769531
    6. '    
' → logprob: -10.251716613769531
    7. '        
' → logprob: -10.626716613769531
    8. '<|end|>' → logprob: -11.501716613769531
    9. '  
' → logprob: -11.626716613769531
    10. '            
' → logprob: -11.751716613769531

Token 589: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015196226304396987
    2. '       ' → logprob: -6.501519680023193
    3. '           ' → logprob: -11.251519203186035
    4. '
' → logprob: -13.751519203186035
    5. '                
' → logprob: -14.626519203186035
    6. ' break' → logprob: -14.751519203186035
    7. '   ' → logprob: -14.876519203186035
    8. '```' → logprob: -15.001519203186035
    9. '			' → logprob: -15.126519203186035
    10. ',' → logprob: -15.126519203186035

Token 590: ' break' (ID: 2338)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.42865049839019775
    2. 'right' → logprob: -1.1786504983901978
    3. '               ' → logprob: -3.678650379180908
    4. ' break' → logprob: -4.553650379180908
    5. 'break' (adapté à ' break') → logprob: -5.303650379180908
    6. ' left' → logprob: -9.428650856018066
    7. 'left' → logprob: -10.303650856018066
    8. '           ' → logprob: -10.928650856018066
    9. '   ' → logprob: -12.303650856018066
    10. '	right' → logprob: -12.428650856018066

Token 591: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004326976370066404
    2. '        
' → logprob: -6.254326820373535
    3. '
' → logprob: -6.504326820373535
    4. '    
' → logprob: -8.004326820373535
    5. '   ' → logprob: -8.379326820373535
    6. '           ' → logprob: -9.004326820373535
    7. '            
' → logprob: -10.004326820373535
    8. '                
' → logprob: -10.379326820373535
    9. '  
' → logprob: -10.629326820373535
    10. ' 
' → logprob: -10.629326820373535

Token 592: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034686902072280645
    2. '        
' → logprob: -6.6284685134887695
    3. '   ' → logprob: -7.1284685134887695
    4. '
' → logprob: -7.5034685134887695
    5. '           ' → logprob: -7.7534685134887695
    6. '               ' → logprob: -8.87846851348877
    7. '    
' → logprob: -9.25346851348877
    8. '                
' → logprob: -10.50346851348877
    9. '            
' → logprob: -10.75346851348877
    10. '  
' → logprob: -11.25346851348877

Token 593: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.024038314819336
    2. 'if' (adapté à ' if') → logprob: -1.024038314819336
    3. ' if' → logprob: -1.274038314819336
    4. '   ' → logprob: -6.274038314819336
    5. '
' → logprob: -9.274038314819336
    6. '	if' → logprob: -11.524038314819336
    7. '           ' → logprob: -11.649038314819336
    8. 'right' → logprob: -12.774038314819336
    9. '        
' → logprob: -12.774038314819336
    10. '	' → logprob: -13.149038314819336

Token 594: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.000158842682139948
    2. 'found' → logprob: -8.75015926361084
    3. '(found' → logprob: -16.375158309936523
    4. '	found' → logprob: -16.625158309936523
    5. ' not' → logprob: -17.000158309936523
    6. ' ' → logprob: -17.250158309936523
    7. ' ' → logprob: -18.250158309936523
    8. 'Found' → logprob: -19.250158309936523
    9. '_found' → logprob: -19.375158309936523
    10. ' f' → logprob: -20.125158309936523

Token 595: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01661863550543785
    2. ':
' → logprob: -4.141618728637695
    3. ' :' → logprob: -8.641618728637695
    4. ' ==' → logprob: -9.016618728637695
    5. '<|end|>' → logprob: -9.641618728637695
    6. '==' → logprob: -10.141618728637695
    7. ' =' → logprob: -10.266618728637695
    8. ' :
' → logprob: -10.391618728637695
    9. '=' → logprob: -10.516618728637695
    10. ')' → logprob: -10.641618728637695

Token 596: '           ' (ID: 352)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.22861921787261963
    2. '       ' → logprob: -2.22861909866333
    3. ' right' → logprob: -2.47861909866333
    4. '           ' → logprob: -4.60361909866333
    5. '	right' → logprob: -6.10361909866333
    6. '
' → logprob: -8.978619575500488
    7. ':right' → logprob: -9.228619575500488
    8. ',right' → logprob: -9.353619575500488
    9. '[right' → logprob: -9.478619575500488
    10. '.right' → logprob: -9.603619575500488

Token 597: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.20151440799236298
    2. ' right' → logprob: -1.7015143632888794
    3. '	right' → logprob: -9.70151424407959
    4. '           ' → logprob: -10.70151424407959
    5. '_right' → logprob: -11.95151424407959
    6. '   ' → logprob: -12.70151424407959
    7. '.right' → logprob: -12.82651424407959
    8. '[right' → logprob: -13.45151424407959
    9. '       ' → logprob: -13.57651424407959
    10. ',right' → logprob: -13.95151424407959

Token 598: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868725895881653
    2. ' =' → logprob: -1.1368725299835205
    3. '=end' → logprob: -14.386872291564941
    4. '<|end|>' → logprob: -14.636872291564941
    5. '=cut' → logprob: -15.761872291564941
    6. '＝' → logprob: -16.511873245239258
    7. '=line' → logprob: -16.761873245239258
    8. ' ' → logprob: -17.136873245239258
    9. ',' → logprob: -17.136873245239258
    10. '.=' → logprob: -17.261873245239258

Token 599: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.3868711292743683
    2. ' mid' → logprob: -1.136871099472046
    3. '[mid' → logprob: -16.761871337890625
    4. '(mid' → logprob: -17.136871337890625
    5. '_mid' → logprob: -18.511871337890625
    6. ' midpoint' → logprob: -18.636871337890625
    7. 'middle' → logprob: -20.511871337890625
    8. 'm' → logprob: -20.886871337890625
    9. ' middle' → logprob: -21.136871337890625
    10. '.mid' → logprob: -21.386871337890625

Token 600: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7036044597625732
    2. ' else' → logprob: -1.2036044597625732
    3. ' 
' → logprob: -2.0786044597625732
    4. '
' → logprob: -2.7036044597625732
    5. '       ' → logprob: -5.203604698181152
    6. '    
' → logprob: -5.703604698181152
    7. '  
' → logprob: -6.453604698181152
    8. ' ' → logprob: -7.453604698181152
    9. '   
' → logprob: -7.453604698181152
    10. '<|end|>' → logprob: -7.953604698181152

Token 601: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.552049994468689
    2. '       ' → logprob: -1.552049994468689
    3. ' else' → logprob: -1.552049994468689
    4. '
' → logprob: -8.42704963684082
    5. '   ' → logprob: -8.42704963684082
    6. ' 
' → logprob: -10.05204963684082
    7. '	else' → logprob: -10.17704963684082
    8. '    
' → logprob: -10.67704963684082
    9. '```' → logprob: -10.67704963684082
    10. '	' → logprob: -11.05204963684082

Token 602: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.025775669142603874
    2. ' else' → logprob: -4.15077543258667
    3. '       ' → logprob: -4.65077543258667
    4. '	else' → logprob: -9.275775909423828
    5. '   ' → logprob: -10.400775909423828
    6. '	' → logprob: -11.275775909423828
    7. '```' → logprob: -14.275775909423828
    8. '  ' → logprob: -14.650775909423828
    9. ' ' → logprob: -15.150775909423828
    10. '
' → logprob: -15.650775909423828

Token 603: ':
' (ID: 734)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.19786804914474487
    2. '           ' → logprob: -2.1978681087493896
    3. 'left' → logprob: -3.0728681087493896
    4. ':
' → logprob: -4.1978678703308105
    5. ':left' → logprob: -5.8228678703308105
    6. ':' → logprob: -6.5728678703308105
    7. '[left' → logprob: -6.6978678703308105
    8. '	left' → logprob: -7.3228678703308105
    9. '   ' → logprob: -8.322868347167969
    10. ' :
' → logprob: -8.947868347167969

Token 604: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24195627868175507
    2. ' left' → logprob: -2.2419562339782715
    3. 'left' → logprob: -2.4919562339782715
    4. '       ' → logprob: -4.2419562339782715
    5. '   ' → logprob: -4.8669562339782715
    6. '	left' → logprob: -5.9919562339782715
    7. '	       ' → logprob: -7.4919562339782715
    8. '		' → logprob: -7.7419562339782715
    9. '	   ' → logprob: -9.24195671081543
    10. '[left' → logprob: -9.49195671081543

Token 605: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.000460935989394784
    2. ' left' → logprob: -7.750461101531982
    3. '	left' → logprob: -10.500460624694824
    4. '   ' → logprob: -13.625460624694824
    5. '[left' → logprob: -14.250460624694824
    6. '           ' → logprob: -15.250460624694824
    7. '       ' → logprob: -15.500460624694824
    8. ':left' → logprob: -15.875460624694824
    9. '.left' → logprob: -15.875460624694824
    10. '_left' → logprob: -16.12546157836914

Token 606: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602243334054947
    2. ' =' → logprob: -1.9102243185043335
    3. ' +=' → logprob: -16.53522491455078
    4. '+=' → logprob: -17.16022491455078
    5. ' ' → logprob: -18.41022491455078
    6. '＝' → logprob: -18.53522491455078
    7. '.=' → logprob: -19.16022491455078
    8. ',' → logprob: -19.91022491455078
    9. '*=' → logprob: -20.03522491455078
    10. '=

' → logprob: -20.41022491455078

Token 607: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.2519293427467346
    2. ' mid' → logprob: -1.5019292831420898
    3. '(mid' → logprob: -16.001930236816406
    4. '[mid' → logprob: -16.251930236816406
    5. '_mid' → logprob: -17.001930236816406
    6. ' midpoint' → logprob: -17.376930236816406
    7. 'middle' → logprob: -18.126930236816406
    8. '.mid' → logprob: -18.376930236816406
    9. ' middle' → logprob: -19.001930236816406
    10. ' ' → logprob: -19.626930236816406

Token 608: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7016096711158752
    2. ' ' → logprob: -1.3266096115112305
    3. '
' → logprob: -2.3266096115112305
    4. ' mid' → logprob: -2.8266096115112305
    5. ' +' → logprob: -3.8266096115112305
    6. '       ' → logprob: -4.0766096115112305
    7. '+' → logprob: -4.2016096115112305
    8. '=' → logprob: -5.4516096115112305
    9. '(mid' → logprob: -5.5766096115112305
    10. ' =' → logprob: -5.8266096115112305

Token 609: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007942587835714221
    2. 'return' → logprob: -7.500794410705566
    3. ' return' → logprob: -8.625794410705566
    4. '	return' → logprob: -10.000794410705566
    5. '    
' → logprob: -11.250794410705566
    6. '
' → logprob: -13.500794410705566
    7. '       ' → logprob: -14.500794410705566
    8. '```' → logprob: -14.625794410705566
    9. '<|end|>' → logprob: -16.00079345703125
    10. '  
' → logprob: -16.12579345703125

Token 610: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10107602924108505
    2. '   ' → logprob: -2.351076126098633
    3. ' return' → logprob: -7.101076126098633
    4. '```' → logprob: -10.101076126098633
    5. '	return' → logprob: -13.226076126098633
    6. 'print' → logprob: -13.351076126098633
    7. '
' → logprob: -15.476076126098633
    8. '       ' → logprob: -17.101076126098633
    9. '``' → logprob: -17.226076126098633
    10. 'eturn' → logprob: -17.351076126098633

Token 611: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.06220877543091774
    2. ' right' → logprob: -2.812208890914917
    3. 'left' → logprob: -8.937209129333496
    4. '(right' → logprob: -9.187209129333496
    5. ' left' → logprob: -12.562209129333496
    6. ' (' → logprob: -12.812209129333496
    7. '(left' → logprob: -14.187209129333496
    8. '[right' → logprob: -15.937209129333496
    9. '_right' → logprob: -16.31220817565918
    10. '	right' → logprob: -16.56220817565918

Token 612: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 613: 'input' (ID: 2586)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5151849985122681
    2. 'print' → logprob: -2.0151848793029785
    3. '<|end|>' → logprob: -2.2651848793029785
    4. '```' → logprob: -2.3901848793029785
    5. 'if' → logprob: -3.1401848793029785
    6. 'def' → logprob: -4.1401848793029785
    7. 'import' → logprob: -4.7651848793029785
    8. 'n' → logprob: -6.0151848793029785
    9. 's' → logprob: -6.1401848793029785
    10. '
' → logprob: -8.140185356140137

Token 614: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.031653810292482376
    2. '_data' → logprob: -3.531653881072998
    3. ' =' → logprob: -8.03165340423584
    4. 'data' → logprob: -8.15665340423584
    5. '_lines' → logprob: -8.15665340423584
    6. '().' → logprob: -8.28165340423584
    7. '_' → logprob: -8.40665340423584
    8. 's' → logprob: -8.90665340423584
    9. '(' → logprob: -9.40665340423584
    10. '=' → logprob: -9.78165340423584

Token 615: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.21405845880508423
    2. 'sys' → logprob: -1.7140583992004395
    3. 'input' → logprob: -4.9640583992004395
    4. ' input' → logprob: -5.2140583992004395
    5. '=sys' → logprob: -9.839058876037598
    6. ' lambda' → logprob: -10.964058876037598
    7. '(sys' → logprob: -10.964058876037598
    8. 'lambda' → logprob: -11.089058876037598
    9. '	sys' → logprob: -11.714058876037598
    10. '[]' → logprob: -11.964058876037598

Token 616: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6950324773788452
    2. '.stdin' → logprob: -0.6950324773788452
    3. '.stdout' → logprob: -6.945032596588135
    4. '.argv' → logprob: -7.820032596588135
    5. '.input' → logprob: -8.570032119750977
    6. '.std' → logprob: -9.070032119750977
    7. '.readline' → logprob: -9.570032119750977
    8. ' .' → logprob: -10.070032119750977
    9. '._' → logprob: -10.320032119750977
    10. 'stdin' → logprob: -11.570032119750977

Token 617: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.20354901254177094
    2. '.' → logprob: -1.7035490274429321
    3. '.read' → logprob: -6.828548908233643
    4. '.readlines' → logprob: -6.953548908233643
    5. '.stdin' → logprob: -9.8285493850708
    6. 'read' → logprob: -11.2035493850708
    7. 'def' → logprob: -11.7035493850708
    8. '.buffer' → logprob: -11.9535493850708
    9. 'for' → logprob: -12.8285493850708
    10. '._' → logprob: -13.4535493850708

Token 618: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5893818736076355
    2. '()
' → logprob: -1.0893819332122803
    3. 'n' → logprob: -2.7143819332122803
    4. '
' → logprob: -4.214381694793701
    5. 's' → logprob: -4.339381694793701
    6. 'for' → logprob: -5.589381694793701
    7. '()

' → logprob: -5.964381694793701
    8. 'while' → logprob: -6.339381694793701
    9. 'num' → logprob: -6.464381694793701
    10. 'def' → logprob: -6.714381694793701

Token 619: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002301323926076293
    2. 'def' → logprob: -6.127301216125488
    3. 't' → logprob: -10.252301216125488
    4. 'N' → logprob: -10.502301216125488
    5. '
' → logprob: -11.377301216125488
    6. 's' → logprob: -11.502301216125488
    7. 'num' → logprob: -11.752301216125488
    8. ' n' → logprob: -11.752301216125488
    9. 'for' → logprob: -12.627301216125488
    10. '_n' → logprob: -12.627301216125488

Token 620: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.029930291697382927
    2. 'True' → logprob: -3.529930353164673
    3. '(True' → logprob: -8.904930114746094
    4. '1' → logprob: -11.154930114746094
    5. ' ' → logprob: -11.279930114746094
    6. ' line' → logprob: -11.404930114746094
    7. 's' → logprob: -13.279930114746094
    8. '=True' → logprob: -13.404930114746094
    9. ' =' → logprob: -14.654930114746094
    10. ' s' → logprob: -15.029930114746094

Token 621: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004449939355254173
    2. ':
' → logprob: -6.254449844360352
    3. '():' → logprob: -6.504449844360352
    4. ' :' → logprob: -7.129449844360352
    5. '():
' → logprob: -8.879449844360352
    6. '   ' → logprob: -10.004449844360352
    7. ' :
' → logprob: -11.629449844360352
    8. ' line' → logprob: -12.254449844360352
    9. ',' → logprob: -12.379449844360352
    10. '(' → logprob: -12.629449844360352

Token 622: '   ' (ID: 271)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.006398326717317104
    2. 'line' → logprob: -5.6313982009887695
    3. '   ' → logprob: -6.1313982009887695
    4. ' l' → logprob: -7.6313982009887695
    5. '	line' → logprob: -9.38139820098877
    6. ' try' → logprob: -11.38139820098877
    7. 'l' → logprob: -11.63139820098877
    8. ' s' → logprob: -11.75639820098877
    9. ' ligne' → logprob: -12.13139820098877
    10. 'try' → logprob: -12.38139820098877

Token 623: ' N' (ID: 478)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.25514060258865356
    2. 'n' → logprob: -1.5051405429840088
    3. ' line' → logprob: -6.505140781402588
    4. 'N' (adapté à ' N') → logprob: -6.505140781402588
    5. 'l' → logprob: -8.75514030456543
    6. 'L' → logprob: -10.13014030456543
    7. 'try' → logprob: -11.50514030456543
    8. ' n' → logprob: -12.38014030456543
    9. 's' → logprob: -14.38014030456543
    10. '	line' → logprob: -14.63014030456543

Token 624: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134046792984009
    2. '=' → logprob: -1.3134046792984009
    3. ' ' → logprob: -8.93840503692627
    4. '=int' → logprob: -12.68840503692627
    5. '=input' → logprob: -13.43840503692627
    6. '_' → logprob: -13.81340503692627
    7. ',' → logprob: -13.81340503692627
    8. '  ' → logprob: -13.93840503692627
    9. '   ' → logprob: -14.43840503692627
    10. ' =
' → logprob: -14.56340503692627

Token 625: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.032150764018297195
    2. 'input' → logprob: -3.7821507453918457
    3. ' int' → logprob: -4.907150745391846
    4. ' input' → logprob: -6.532150745391846
    5. '=int' → logprob: -11.532151222229004
    6. 'sys' → logprob: -13.407151222229004
    7. '=input' → logprob: -13.532151222229004
    8. '(int' → logprob: -13.782151222229004
    9. '[int' → logprob: -14.407151222229004
    10. ' ' → logprob: -14.532151222229004

Token 626: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01458723470568657
    2. '()' → logprob: -4.63958740234375
    3. 'input' → logprob: -5.63958740234375
    4. '(' → logprob: -7.38958740234375
    5. '(sys' → logprob: -7.38958740234375
    6. 'sys' → logprob: -10.63958740234375
    7. ' (' → logprob: -13.76458740234375
    8. '()
' → logprob: -13.76458740234375
    9. '=input' → logprob: -13.76458740234375
    10. ' input' → logprob: -14.26458740234375

Token 627: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.015286230482161045
    2. '().' → logprob: -4.765286445617676
    3. '()' → logprob: -5.015286445617676
    4. '())
' → logprob: -11.765286445617676
    5. ' ())' → logprob: -13.015286445617676
    6. '()
' → logprob: -13.890286445617676
    7. '();)' → logprob: -14.515286445617676
    8. '()]' → logprob: -14.765286445617676
    9. '())

' → logprob: -15.015286445617676
    10. '(' → logprob: -15.015286445617676

Token 628: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5308319926261902
    2. '   ' → logprob: -1.405832052230835
    3. '<|end|>' → logprob: -2.280832052230835
    4. 'if' → logprob: -2.780832052230835
    5. '	if' → logprob: -7.405831813812256
    6. 'try' → logprob: -7.405831813812256
    7. ' ' → logprob: -7.780831813812256
    8. '<|end|>' → logprob: -8.405832290649414
    9. '  ' → logprob: -8.905832290649414
    10. ',' → logprob: -9.280832290649414

Token 629: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014170913025736809
    2. ' if' → logprob: -4.264171123504639
    3. '<|end|>' → logprob: -12.01417064666748
    4. '   ' → logprob: -13.88917064666748
    5. '	if' → logprob: -15.01417064666748
    6. 'If' → logprob: -16.389171600341797
    7. '```' → logprob: -16.889171600341797
    8. 'break' → logprob: -18.139171600341797
    9. ';if' → logprob: -18.139171600341797
    10. 'try' → logprob: -18.139171600341797

Token 630: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2016272395849228
    2. ' N' → logprob: -1.701627254486084
    3. ' not' → logprob: -8.451626777648926
    4. 'not' → logprob: -14.826626777648926
    5. ' ' → logprob: -18.201627731323242
    6. '	N' → logprob: -18.451627731323242
    7. ' ' → logprob: -19.451627731323242
    8. '_N' → logprob: -20.076627731323242
    9. '(N' → logprob: -20.326627731323242
    10. '>N' → logprob: -20.451627731323242

Token 631: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20210157334804535
    2. '==' → logprob: -1.7021015882492065
    3. ' <=' → logprob: -8.202101707458496
    4. '<=' → logprob: -8.202101707458496
    5. '=' → logprob: -9.577101707458496
    6. '0' → logprob: -10.452101707458496
    7. ' ' → logprob: -10.952101707458496
    8. '()==' → logprob: -11.702101707458496
    9. ')==' → logprob: -12.202101707458496
    10. ')' → logprob: -12.577101707458496

Token 632: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '  ' → logprob: -21.000017166137695
    4. '۰' → logprob: -21.500017166137695
    5. '=' → logprob: -22.000017166137695
    6. '   ' → logprob: -22.500017166137695
    7. '-' → logprob: -22.750017166137695
    8. ' ' → logprob: -23.375017166137695
    9. '```' → logprob: -23.375017166137695
    10. '    ' → logprob: -23.625017166137695

Token 633: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '-' → logprob: -20.750001907348633
    4. '=' → logprob: -21.750001907348633
    5. '۰' → logprob: -21.875001907348633
    6. '  ' → logprob: -22.000001907348633
    7. '   ' → logprob: -22.000001907348633
    8. '```' → logprob: -22.875001907348633
    9. ' ' → logprob: -23.375001907348633
    10. 'EOF' → logprob: -23.625001907348633

Token 634: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.046400755643844604
    2. ':
' → logprob: -3.296400785446167
    3. '   ' → logprob: -4.796400547027588
    4. '.' → logprob: -11.046401023864746
    5. '	break' → logprob: -11.546401023864746
    6. '       ' → logprob: -11.546401023864746
    7. ':return' → logprob: -12.296401023864746
    8. '  ' → logprob: -12.421401023864746
    9. ' break' → logprob: -12.546401023864746
    10. ' :' → logprob: -12.796401023864746

Token 635: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018180379644036293
    2. '       ' → logprob: -4.0181803703308105
    3. '	break' → logprob: -11.393180847167969
    4. '   ' → logprob: -12.018180847167969
    5. ' break' → logprob: -12.143180847167969
    6. 'break' → logprob: -12.518180847167969
    7. '	' → logprob: -14.018180847167969
    8. '           ' → logprob: -14.393180847167969
    9. ' ' → logprob: -14.768180847167969
    10. '     ' → logprob: -14.893180847167969

Token 636: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06256459653377533
    2. ' break' → logprob: -2.8125646114349365
    3. '	break' → logprob: -7.812564373016357
    4. '   ' → logprob: -8.562564849853516
    5. '
' → logprob: -14.312564849853516
    6. '_break' → logprob: -15.187564849853516
    7. 'b' → logprob: -16.937564849853516
    8. ' ' → logprob: -17.437564849853516
    9. '    
' → logprob: -17.437564849853516
    10. '```' → logprob: -17.437564849853516

Token 637: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3870753049850464
    2. '   ' → logprob: -1.1370753049850464
    3. '    
' → logprob: -9.262075424194336
    4. '<|end|>' → logprob: -10.512075424194336
    5. '	s' → logprob: -10.637075424194336
    6. ' sweets' → logprob: -11.012075424194336
    7. '```' → logprob: -11.512075424194336
    8. '_s' → logprob: -12.012075424194336
    9. '(s' → logprob: -12.262075424194336
    10. '  ' → logprob: -12.262075424194336

Token 638: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016132906079292297
    2. '   ' → logprob: -4.141132831573486
    3. '    
' → logprob: -10.391133308410645
    4. ' sweets' → logprob: -11.141133308410645
    5. '	s' → logprob: -11.141133308410645
    6. '<|end|>' → logprob: -11.641133308410645
    7. 'points' → logprob: -12.016133308410645
    8. '```' → logprob: -12.141133308410645
    9. 'data' → logprob: -12.891133308410645
    10. '
' → logprob: -12.891133308410645

Token 639: ' sweets' (ID: 107803)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0004207826859783381
    2. '   ' → logprob: -8.375420570373535
    3. ' sweets' → logprob: -8.625420570373535
    4. 'sweet' → logprob: -11.750420570373535
    5. '```' → logprob: -14.000420570373535
    6. 'data' → logprob: -14.750420570373535
    7. 'points' → logprob: -15.125420570373535
    8. '	s' → logprob: -15.750420570373535
    9. '    
' → logprob: -16.12542152404785
    10. ' s' → logprob: -16.12542152404785

Token 640: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132895827293396
    2. '=' → logprob: -1.3132896423339844
    3. '=[]' → logprob: -10.938289642333984
    4. 's' → logprob: -12.688289642333984
    5. ',' → logprob: -12.688289642333984
    6. '   ' → logprob: -13.438289642333984
    7. '.' → logprob: -14.188289642333984
    8. ')' → logprob: -15.313289642333984
    9. '[]' → logprob: -15.313289642333984
    10. ' ' → logprob: -15.938289642333984

Token 641: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3190811574459076
    2. '[]' → logprob: -1.31908118724823
    3. '[]
' → logprob: -5.3190813064575195
    4. '[s' → logprob: -8.06908130645752
    5. '[int' → logprob: -9.31908130645752
    6. '[p' → logprob: -9.94408130645752
    7. '[n' → logprob: -9.94408130645752
    8. '[input' → logprob: -10.69408130645752
    9. '[str' → logprob: -10.81908130645752
    10. '[user' → logprob: -10.94408130645752

Token 642: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0005575587856583297
    2. ' tuple' → logprob: -7.5005574226379395
    3. '(tuple' → logprob: -12.750557899475098
    4. '   ' → logprob: -13.625557899475098
    5. '
' → logprob: -15.250557899475098
    6. ']' → logprob: -16.25055694580078
    7. 'list' → logprob: -17.50055694580078
    8. ')' → logprob: -18.62555694580078
    9. ' ' → logprob: -18.62555694580078
    10. '*' → logprob: -18.87555694580078

Token 643: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -8.180258191714529e-06
    2. 'map' → logprob: -11.750008583068848
    3. '(' → logprob: -15.500008583068848
    4. '(float' → logprob: -17.75000762939453
    5. ' map' → logprob: -18.12500762939453
    6. '	map' → logprob: -19.37500762939453
    7. '.map' → logprob: -19.50000762939453
    8. '(
' → logprob: -20.00000762939453
    9. '(int' → logprob: -20.37500762939453
    10. ',map' → logprob: -20.62500762939453

Token 644: '(int' (ID: 2742)
  Prédit: '(float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.47495293617248535
    2. '(int' → logprob: -0.9749529361724854
    3. 'float' → logprob: -7.349952697753906
    4. 'int' → logprob: -9.349952697753906
    5. '(' → logprob: -9.599952697753906
    6. '(input' → logprob: -9.724952697753906
    7. ',float' → logprob: -11.474952697753906
    8. '```' → logprob: -12.849952697753906
    9. 'input' → logprob: -13.474952697753906
    10. '(
' → logprob: -14.099952697753906

Token 645: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.03933640941977501
    2. ',' → logprob: -3.2893364429473877
    3. 'input' → logprob: -7.039336204528809
    4. '(input' → logprob: -7.789336204528809
    5. ' input' → logprob: -13.914336204528809
    6. '(),' → logprob: -14.414336204528809
    7. '[input' → logprob: -14.414336204528809
    8. ' ,' → logprob: -15.164336204528809
    9. ',int' → logprob: -15.414336204528809
    10. '=input' → logprob: -15.414336204528809

Token 646: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -7.493430894101039e-05
    2. ' input' → logprob: -9.500075340270996
    3. '(input' → logprob: -21.62507438659668
    4. ',input' → logprob: -22.50007438659668
    5. '	input' → logprob: -22.87507438659668
    6. ' ' → logprob: -23.00007438659668
    7. '
' → logprob: -23.00007438659668
    8. '   ' → logprob: -23.37507438659668
    9. 'output' → logprob: -23.62507438659668
    10. '<input' → logprob: -24.12507438659668

Token 647: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -15.875
    3. '.readline' → logprob: -17.125
    4. '(' → logprob: -17.875
    5. '.split' → logprob: -18.875
    6. '()))' → logprob: -20.0
    7. '.strip' → logprob: -20.0
    8. ' ().' → logprob: -20.25
    9. '()
' → logprob: -20.5
    10. '   ' → logprob: -20.75

Token 648: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10106547176837921
    2. 'strip' → logprob: -2.3510653972625732
    3. 'rstrip' → logprob: -7.101065635681152
    4. 'read' → logprob: -10.351065635681152
    5. ' split' → logprob: -13.726065635681152
    6. '().' → logprob: -14.601065635681152
    7. ' strip' → logprob: -15.351065635681152
    8. '(split' → logprob: -15.476065635681152
    9. '.readline' → logprob: -16.226064682006836
    10. 'decode' → logprob: -17.101064682006836

Token 649: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.16060510277748108
    2. '))' → logprob: -1.9106050729751587
    3. '()' → logprob: -8.535605430603027
    4. '().' → logprob: -9.035605430603027
    5. '()))
' → logprob: -9.910605430603027
    6. '(' → logprob: -12.535605430603027
    7. ' ))' → logprob: -12.910605430603027
    8. '())' → logprob: -13.160605430603027
    9. '))
' → logprob: -13.410605430603027
    10. '))]
' → logprob: -13.535605430603027

Token 650: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11208244413137436
    2. ' for' → logprob: -2.4870824813842773
    3. 'for' → logprob: -4.237082481384277
    4. ')' → logprob: -4.987082481384277
    5. '   ' → logprob: -7.487082481384277
    6. '())' → logprob: -7.862082481384277
    7. '(' → logprob: -7.862082481384277
    8. '(N' → logprob: -8.862082481384277
    9. ' ' → logprob: -10.612082481384277
    10. '()]' → logprob: -10.737082481384277

Token 651: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006772888009436429
    2. '_range' → logprob: -7.875677108764648
    3. 'range' → logprob: -8.375677108764648
    4. ' range' → logprob: -9.625677108764648
    5. ' _' → logprob: -15.250677108764648
    6. '_in' → logprob: -16.25067710876465
    7. '_i' → logprob: -16.37567710876465
    8. '_=' → logprob: -17.00067710876465
    9. 'in' → logprob: -17.12567710876465
    10. '(range' → logprob: -17.37567710876465

Token 652: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011720098555088043
    2. ' range' → logprob: -6.751172065734863
    3. '(range' → logprob: -14.001172065734863
    4. 'in' → logprob: -14.376172065734863
    5. 'ran' → logprob: -15.876172065734863
    6. ' in' → logprob: -16.251171112060547
    7. '	range' → logprob: -16.626171112060547
    8. 'rang' → logprob: -17.501171112060547
    9. ')' → logprob: -17.876171112060547
    10. 'r' → logprob: -18.251171112060547

Token 653: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0325924449716695e-05
    2. ' range' → logprob: -11.50001049041748
    3. '(range' → logprob: -15.75001049041748
    4. '	range' → logprob: -18.625009536743164
    5. '   ' → logprob: -19.375009536743164
    6. '
' → logprob: -20.375009536743164
    7. 'ra' → logprob: -20.500009536743164
    8. 'rang' → logprob: -20.750009536743164
    9. 'ran' → logprob: -20.875009536743164
    10. 'r' → logprob: -20.875009536743164

Token 654: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0005533903022296727
    2. 'N' → logprob: -7.500553607940674
    3. '(' → logprob: -14.625553131103516
    4. '(n' → logprob: -17.750553131103516
    5. '	N' → logprob: -18.500553131103516
    6. ' N' → logprob: -20.375553131103516
    7. '(
' → logprob: -20.375553131103516
    8. '[N' → logprob: -20.875553131103516
    9. '_N' → logprob: -21.375553131103516
    10. ' (' → logprob: -21.750553131103516

Token 655: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.153795766294934e-06
    2. ']' → logprob: -12.625005722045898
    3. ')' → logprob: -13.000005722045898
    4. '))' → logprob: -15.875005722045898
    5. '()]' → logprob: -15.875005722045898
    6. ' )' → logprob: -16.8750057220459
    7. ')])' → logprob: -16.8750057220459
    8. ')]
' → logprob: -17.0000057220459
    9. '())' → logprob: -17.3750057220459
    10. '])]' → logprob: -17.5000057220459

Token 656: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0275276992470026
    2. ' print' → logprob: -4.152527809143066
    3. '   ' → logprob: -4.652527809143066
    4. 'result' → logprob: -6.777527809143066
    5. '
' → logprob: -7.652527809143066
    6. ' result' → logprob: -8.902527809143066
    7. 't' → logprob: -9.527527809143066
    8. '```' → logprob: -10.027527809143066
    9. '	print' → logprob: -12.152527809143066
    10. '    
' → logprob: -12.277527809143066

Token 657: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018677101470530033
    2. 'result' → logprob: -6.501867771148682
    3. 'res' → logprob: -8.501867294311523
    4. 't' → logprob: -9.126867294311523
    5. 'r' → logprob: -10.626867294311523
    6. 'ans' (adapté à ' ans') → logprob: -11.251867294311523
    7. 'pr' → logprob: -11.876867294311523
    8. 'answer' → logprob: -12.501867294311523
    9. ' print' → logprob: -13.001867294311523
    10. 'prin' → logprob: -14.126867294311523

Token 658: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022758185863495
    2. '=' → logprob: -1.9102275371551514
    3. ' ' → logprob: -13.66022777557373
    4. ')' → logprob: -14.28522777557373
    5. ',' → logprob: -14.41022777557373
    6. ' ' → logprob: -16.035226821899414
    7. ':' → logprob: -16.035226821899414
    8. '.' → logprob: -16.160226821899414
    9. '  ' → logprob: -16.160226821899414
    10. '_' → logprob: -16.160226821899414

Token 659: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.008618239313364029
    2. ' solve' → logprob: -4.758618354797363
    3. 'round' → logprob: -13.508618354797363
    4. '   ' → logprob: -14.258618354797363
    5. ' ' → logprob: -14.633618354797363
    6. '(s' → logprob: -15.508618354797363
    7. 'float' → logprob: -15.633618354797363
    8. 'sol' → logprob: -15.883618354797363
    9. '.solve' → logprob: -16.008617401123047
    10. '  ' → logprob: -16.008617401123047

Token 660: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.3782830137643032e-05
    2. ' (' → logprob: -11.50001335144043
    3. '(' → logprob: -12.62501335144043
    4. 's' → logprob: -15.00001335144043
    5. '(ans' → logprob: -18.12501335144043
    6. '(
' → logprob: -18.87501335144043
    7. '((' → logprob: -19.37501335144043
    8. ' ' → logprob: -19.75001335144043
    9. '(f' → logprob: -20.62501335144043
    10. '```' → logprob: -20.75001335144043

Token 661: 'weets' (ID: 41143)
  Prédit: 'weets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weets' → logprob: -0.6476629972457886
    2. 'ents' → logprob: -1.2726629972457886
    3. 'ets' → logprob: -2.022663116455078
    4. 'e' → logprob: -3.022663116455078
    5. 'ants' → logprob: -4.897663116455078
    6. 'ights' → logprob: -6.397663116455078
    7. 'w' → logprob: -6.522663116455078
    8. '(' → logprob: -6.897663116455078
    9. '(e' → logprob: -7.147663116455078
    10. 'ts' → logprob: -8.147663116455078

Token 662: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.018163522705435753
    2. ')' → logprob: -4.018163681030273
    3. ')
' → logprob: -12.143163681030273
    4. ' )
' → logprob: -12.518163681030273
    5. 'print' → logprob: -13.018163681030273
    6. '   ' → logprob: -13.143163681030273
    7. ')

' → logprob: -15.268163681030273
    8. '
' → logprob: -16.143163681030273
    9. '())
' → logprob: -17.143163681030273
    10. '()
' → logprob: -17.268163681030273

Token 663: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5356048941612244
    2. '   ' → logprob: -0.9106048941612244
    3. '```' → logprob: -4.660604953765869
    4. '
' → logprob: -6.535604953765869
    5. '	print' → logprob: -7.035604953765869
    6. ' print' → logprob: -7.785604953765869
    7. '<|end|>' → logprob: -9.410604476928711
    8. '``' → logprob: -10.035604476928711
    9. '    
' → logprob: -10.160604476928711
    10. '#print' → logprob: -11.910604476928711

Token 664: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0008829995640553534
    2. '   ' → logprob: -7.750883102416992
    3. ' print' → logprob: -7.750883102416992
    4. '```' → logprob: -10.750883102416992
    5. '
' → logprob: -15.250883102416992
    6. '	print' → logprob: -15.875883102416992
    7. 'printf' → logprob: -16.750883102416992
    8. '``' → logprob: -17.000883102416992
    9. '    
' → logprob: -18.875883102416992
    10. '#print' → logprob: -19.250883102416992

Token 665: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.013345040380954742
    2. '("{' → logprob: -4.638345241546631
    3. '(round' → logprob: -6.638345241546631
    4. '("%.' → logprob: -6.638345241546631
    5. '(' → logprob: -7.763345241546631
    6. '("' → logprob: -8.263344764709473
    7. '(format' → logprob: -9.138344764709473
    8. '(ans' → logprob: -9.138344764709473
    9. '('{' → logprob: -10.263344764709473
    10. 'f' → logprob: -11.013344764709473

Token 666: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.6695124506950378
    2. '{' → logprob: -0.9195124506950378
    3. '("{' → logprob: -2.4195125102996826
    4. '{"' → logprob: -8.794512748718262
    5. '("%.' → logprob: -9.294512748718262
    6. '({' → logprob: -9.919512748718262
    7. '(f' → logprob: -10.419512748718262
    8. ''{' → logprob: -11.044512748718262
    9. '('{' → logprob: -11.794512748718262
    10. 'f' → logprob: -11.919512748718262

Token 667: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -5.512236498361744e-07
    2. ' ans' → logprob: -14.625000953674316
    3. '(ans' → logprob: -18.125
    4. '	ans' → logprob: -19.25
    5. '   ' → logprob: -19.375
    6. 'round' → logprob: -20.625
    7. ' ' → logprob: -21.0
    8. '0' → logprob: -21.125
    9. '1' → logprob: -21.125
    10. 'answer' → logprob: -21.125

Token 668: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.001021970878355205
    2. ' :.' → logprob: -7.376021862030029
    3. ':' → logprob: -7.876021862030029
    4. ' :' → logprob: -11.251022338867188
    5. ' .' → logprob: -14.001022338867188
    6. '.' → logprob: -14.251022338867188
    7. ':e' → logprob: -14.626022338867188
    8. ' ' → logprob: -15.376022338867188
    9. '}' → logprob: -15.626022338867188
    10. ':f' → logprob: -16.251022338867188

Token 669: '8' (ID: 23)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.8065345287322998
    2. '6' → logprob: -1.1815345287322998
    3. '9' → logprob: -1.9315345287322998
    4. '8' → logprob: -2.6815345287323
    5. '10' → logprob: -3.5565345287323
    6. '12' → logprob: -5.681534767150879
    7. '15' → logprob: -7.681534767150879
    8. '3' → logprob: -8.306534767150879
    9. '5' → logprob: -8.431534767150879
    10. '11' → logprob: -8.681534767150879

Token 670: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.3856492842023727e-06
    2. 'lf' → logprob: -14.375000953674316
    3. '6' → logprob: -15.000000953674316
    4. 'e' → logprob: -15.500000953674316
    5. 'g' → logprob: -16.500001907348633
    6. 'Lf' → logprob: -18.500001907348633
    7. '}' → logprob: -18.750001907348633
    8. '7' → logprob: -20.125001907348633
    9. '```' → logprob: -20.375001907348633
    10. '{' → logprob: -21.500001907348633

Token 671: '}")' (ID: 122365)
  Prédit: '}")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.0032493663020431995
    2. '")' → logprob: -5.753249168395996
    3. ')")' → logprob: -9.628249168395996
    4. '}' → logprob: -12.753249168395996
    5. '}")
' → logprob: -13.003249168395996
    6. ' }' → logprob: -15.253249168395996
    7. ')' → logprob: -15.753249168395996
    8. '}"' → logprob: -17.003250122070312
    9. '})' → logprob: -17.253250122070312
    10. '"}' → logprob: -17.503250122070312


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 669
Tokens correctement prédits (1ère position, stricte): 283
Tokens correctement prédits (1ère position, avec adaptation): 302
Tokens correctement prédits (top 10): 568
Précision stricte (1ère position): 42.30%
Précision adaptée (1ère position): 45.14%
Précision (top 10): 84.90%
================================================================================
