================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict
from typing import Dict, Set, List


class StringTransformer:
    def __init__(self, n: int, s: str, t: str):
        self.length = n
        self.s = s
        self.t = t
        self.alphabet = [chr(i) for i in range(ord('a'), ord('z') + 1)]
        self.graph = CharMappingGraph(self.alphabet)
    
    def minimal_replacements(self) -> int:
        # Step 1: Jennifer rearranges s arbitrarily
        # Since Jennifer can rearrange arbitrarily,
        # just sort s and t's frequency sets match to minimize replacements.
        s_freq = FrequencyProfile(self.s)
        t_freq = FrequencyProfile(self.t)
        
        # Find which characters in s correspond to which characters in t
        # frequency-wise after optimal rearrangement (only counts per letter matter)
        
        # Construct character map edges by frequencies:
        # For each letter in s frequency profile that has frequency f,
        # connect it to letters in t frequency profile with frequency f,
        # because Jennifer can reorder s, and Marian can swap letters globally,
        # so actual mapping reduces to matching frequencies to minimize replacements.
        
        freq_to_chars_s = s_freq.inverse_profile()
        freq_to_chars_t = t_freq.inverse_profile()

        # Create edges between chars with same frequency
        for freq in freq_to_chars_s:
            chars_s = freq_to_chars_s[freq]
            chars_t = freq_to_chars_t.get(freq, set())
            for cs in chars_s:
                for ct in chars_t:
                    self.graph.add_edge(cs, ct)

        # Marian can swap letters to identify connected components => merge chars
        # final minimal replacements = number of connected components - number of matches
        # Actually, replacements correspond to the number of connected components - number of matched chars
        
        # But problem is actually simpler:
        # After Jennifer sorts S arbitrarily,
        # Marian swaps letters to make character sets match as closely as possible,
        # Karin then replaces chars that cannot be matched.
        # This reduces to counting connected components in the character mapping graph
        # and minimal replacements = number_of_unique_characters_in_T - number_of_connected_components

        # So build undirected graph from pairs (s_char, t_char) at same position
        pairs = list(zip(self.s, self.t))
        for cs, ct in pairs:
            self.graph.add_bi_edge(cs, ct)

        connected_components = self.graph.count_connected_components()
        unique_in_t = len(set(self.t))

        # minimal replacements = component count - number of connected components reducing to
        # replacement count = connected_components - 1 (generally in union-find approach)
        # We interpret as minimal number of replacements is (unique chars in T) - (number of connected components)

        # Correction: As per editorial reasoning below:
        # replacements = number of components - 1 (only if no isolated chars)
        # But we want minimal characters replacements after these swaps
        # Actually minimal replacements = number_of_unique_characters_in_T - number_of_connected_components
        # Because each cc corresponds to a merged character group we can swap to one unified character
        # Final characters in T minus connected components will be required replacements

        return unique_in_t - connected_components


class FrequencyProfile:
    def __init__(self, string: str):
        self.counts: Dict[str, int] = defaultdict(int)
        for c in string:
            self.counts[c] += 1

    def inverse_profile(self) -> Dict[int, Set[str]]:
        freq_map = defaultdict(set)
        for c, f in self.counts.items():
            freq_map[f].add(c)
        return freq_map


class CharMappingGraph:
    def __init__(self, alphabet: List[str]):
        self.adj: Dict[str, Set[str]] = {c: set() for c in alphabet}
        self.visited: Set[str] = set()
    
    def add_edge(self, u: str, v: str) -> None:
        # Directed edge for frequency-matching abstraction (not used directly)
        if u != v:
            self.adj[u].add(v)
    
    def add_bi_edge(self, u: str, v: str) -> None:
        if u != v:
            self.adj[u].add(v)
            self.adj[v].add(u)
    
    def _dfs(self, node: str) -> None:
        self.visited.add(node)
        for neighbor in self.adj[node]:
            if neighbor not in self.visited:
                self._dfs(neighbor)
    
    def count_connected_components(self) -> int:
        count = 0
        self.visited.clear()
        nodes_with_edges_or_letters = {c for c in self.adj if self.adj[c] or any(c == x for x in self.adj)}
        # Actually we consider all characters occurring in s or t for components:
        for node in self.adj:
            if (node not in self.visited) and (self.adj[node] or True):
                self._dfs(node)
                count += 1
        return count


def main():
    import sys
    input = sys.stdin.readline

    n = int(input())
    s = input().rstrip()
    t = input().rstrip()

    transformer = StringTransformer(n, s, t)
    result = transformer.minimal_replacements()
    print(result)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.9342921376228333
    2. 'default' → logprob: -1.3092920780181885
    3. 'deque' → logprob: -1.6842920780181885
    4. ' defaultdict' → logprob: -2.6842920780181885
    5. 'Counter' → logprob: -2.8092920780181885
    6. ' abc' → logprob: -4.559292316436768
    7. ' Counter' → logprob: -5.434292316436768
    8. 'named' → logprob: -5.559292316436768
    9. ' deque' → logprob: -6.559292316436768
    10. '```' → logprob: -6.684292316436768

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001962297596037388
    2. '(
' → logprob: -6.626962184906006
    3. '\(' → logprob: -8.251962661743164
    4. '\' → logprob: -9.126962661743164
    5. '\n' → logprob: -9.626962661743164
    6. 'newline' → logprob: -10.126962661743164
    7. '(

' → logprob: -10.376962661743164
    8. '```' → logprob: -10.376962661743164
    9. '()' → logprob: -11.251962661743164
    10. '.' → logprob: -11.376962661743164

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9097185134887695
    2. '
' → logprob: -1.5347185134887695
    3. 'd' → logprob: -2.5347185134887695
    4. '\n' → logprob: -2.5347185134887695
    5. 'def' → logprob: -3.0347185134887695
    6. '\' → logprob: -3.0347185134887695
    7. '' → logprob: -3.7847185134887695
    8. '(
' → logprob: -4.0347185134887695
    9. '

' → logprob: -4.1597185134887695
    10. ',' → logprob: -4.4097185134887695

Token 6: ' typing' (ID: 34152)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5964924097061157
    2. ' itertools' → logprob: -1.0964924097061157
    3. ' typing' → logprob: -2.846492290496826
    4. 'collections' → logprob: -3.721492290496826
    5. ' functools' → logprob: -5.221492290496826
    6. ' ' → logprob: -5.471492290496826
    7. ' sys' → logprob: -5.471492290496826
    8. ' os' → logprob: -5.471492290496826
    9. ' json' → logprob: -5.596492290496826
    10. ' math' → logprob: -5.721492290496826

Token 7: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6260559558868408
    2. ' import' → logprob: -1.0010559558868408
    3. '.' → logprob: -2.501055955886841
    4. '```' → logprob: -5.126055717468262
    5. '<|end|>' → logprob: -6.001055717468262
    6. '_' → logprob: -6.126055717468262
    7. '[' → logprob: -6.626055717468262
    8. '_import' → logprob: -6.751055717468262
    9. '.import' → logprob: -7.251055717468262
    10. ' ' → logprob: -8.126055717468262

Token 8: ' Dict' (ID: 55179)
  Prédit: 'Default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Default' → logprob: -0.6243410706520081
    2. 'Dict' → logprob: -1.2493410110473633
    3. 'List' → logprob: -2.3743410110473633
    4. 'Any' → logprob: -3.1243410110473633
    5. 'default' → logprob: -3.6243410110473633
    6. '```' → logprob: -5.874341011047363
    7. ' defaultdict' → logprob: -5.874341011047363
    8. 'Optional' → logprob: -6.124341011047363
    9. ' Default' → logprob: -6.624341011047363
    10. ' List' → logprob: -7.374341011047363

Token 9: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6575713753700256
    2. '

' → logprob: -1.1575713157653809
    3. ',' → logprob: -2.407571315765381
    4. '```' → logprob: -3.532571315765381
    5. 'import' → logprob: -4.032571315765381
    6. '\n' → logprob: -5.032571315765381
    7. '<|end|>' → logprob: -5.282571315765381
    8. 'class' → logprob: -5.532571315765381
    9. 'def' → logprob: -6.032571315765381
    10. '<|end|>' → logprob: -6.157571315765381

Token 10: ' Set' (ID: 3957)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.5303019285202026
    2. ' List' → logprob: -1.2803019285202026
    3. 'Any' → logprob: -2.780302047729492
    4. 'Default' → logprob: -3.155302047729492
    5. ' Default' → logprob: -5.030302047729492
    6. 'Set' → logprob: -5.155302047729492
    7. 'default' → logprob: -5.155302047729492
    8. ' Any' → logprob: -5.405302047729492
    9. 'Iterable' → logprob: -6.155302047729492
    10. ' defaultdict' → logprob: -6.530302047729492

Token 11: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3323271572589874
    2. '
' → logprob: -1.332327127456665
    3. 'class' → logprob: -5.207327365875244
    4. ',' → logprob: -5.707327365875244
    5. '
' → logprob: -5.832327365875244
    6. '```' → logprob: -6.082327365875244
    7. '\n' → logprob: -6.582327365875244
    8. '


' → logprob: -7.207327365875244
    9. ',

' → logprob: -7.957327365875244
    10. 'import' → logprob: -7.957327365875244

Token 12: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.032158270478248596
    2. 'List' → logprob: -3.532158374786377
    3. ' Iterable' → logprob: -7.282158374786377
    4. ' defaultdict' → logprob: -7.532158374786377
    5. ' Tuple' → logprob: -7.907158374786377
    6. 'Iterable' → logprob: -8.032157897949219
    7. ' Union' → logprob: -8.782157897949219
    8. ' Any' → logprob: -9.907157897949219
    9. ' Callable' → logprob: -10.282157897949219
    10. ' Default' → logprob: -10.407157897949219

Token 13: '


' (ID: 2499)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3849785029888153
    2. '
' → logprob: -2.0099785327911377
    3. 'class' → logprob: -2.2599785327911377
    4. '```' → logprob: -2.6349785327911377
    5. '``' → logprob: -5.884978294372559
    6. '\n' → logprob: -6.009978294372559
    7. '
' → logprob: -6.384978294372559
    8. ',' → logprob: -7.509978294372559
    9. '\' → logprob: -8.009978294372559
    10. '


' → logprob: -8.009978294372559

Token 14: 'class' (ID: 1444)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5722019672393799
    2. 'class' → logprob: -1.0722019672393799
    3. 'def' → logprob: -2.44720196723938
    4. 'c' → logprob: -5.322201728820801
    5. 'D' → logprob: -7.447201728820801
    6. 'default' → logprob: -7.572201728820801
    7. 'de' → logprob: -7.947201728820801
    8. '```' → logprob: -8.4472017288208
    9. '`' → logprob: -9.6972017288208
    10. 'b' → logprob: -9.8222017288208

Token 15: ' String' (ID: 1189)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003893184242770076
    2. ' My' → logprob: -6.5038933753967285
    3. ' defaultdict' → logprob: -7.6288933753967285
    4. ' ' → logprob: -8.00389289855957
    5. ' Trie' → logprob: -8.12889289855957
    6. ' Multi' → logprob: -8.62889289855957
    7. ' Token' → logprob: -8.75389289855957
    8. ' Default' → logprob: -8.75389289855957
    9. ' Data' → logprob: -9.00389289855957
    10. ' A' → logprob: -9.12889289855957

Token 16: 'Transformer' (ID: 48916)
  Prédit: 'Processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.9683351516723633
    2. 'Indexer' → logprob: -2.0933351516723633
    3. 'Set' → logprob: -2.3433351516723633
    4. ':' → logprob: -2.4683351516723633
    5. 'Splitter' → logprob: -2.5933351516723633
    6. 'Matcher' → logprob: -3.0933351516723633
    7. 'Manipulator' → logprob: -3.0933351516723633
    8. 'Tokenizer' → logprob: -4.093335151672363
    9. 'Hasher' → logprob: -4.468335151672363
    10. 'Helper' → logprob: -4.593335151672363

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017427700804546475
    2. '(' → logprob: -6.376742839813232
    3. '():' → logprob: -10.626742362976074
    4. ' :' → logprob: -12.626742362976074
    5. '):' → logprob: -12.876742362976074
    6. '```' → logprob: -13.126742362976074
    7. ':**' → logprob: -13.251742362976074
    8. '(Abstract' → logprob: -13.751742362976074
    9. '(:' → logprob: -14.001742362976074
    10. ':
' → logprob: -14.251742362976074

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054611872881650925
    2. ':' → logprob: -3.054611921310425
    3. '    
' → logprob: -5.804611682891846
    4. '(' → logprob: -6.679611682891846
    5. '():' → logprob: -7.804611682891846
    6. ' def' → logprob: -7.804611682891846
    7. 'def' → logprob: -8.179612159729004
    8. '```' → logprob: -8.179612159729004
    9. ':
' → logprob: -9.179612159729004
    10. '(object' → logprob: -10.304612159729004

Token 19: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1419667750597
    2. ' def' → logprob: -2.3919668197631836
    3. 'def' (adapté à ' def') → logprob: -3.6419668197631836
    4. '```' → logprob: -4.766966819763184
    5. '    ' → logprob: -6.266966819763184
    6. '(' → logprob: -6.516966819763184
    7. '    
' → logprob: -6.766966819763184
    8. '_' → logprob: -8.016966819763184
    9. ' ' → logprob: -8.141966819763184
    10. '\' → logprob: -8.266966819763184

Token 20: ' __' (ID: 2516)
  Prédit: 'itialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itialize' → logprob: -0.17319679260253906
    2. 'it' → logprob: -2.298196792602539
    3. 'ialize' → logprob: -3.798196792602539
    4. '__' → logprob: -4.798196792602539
    5. 'italize' → logprob: -5.173196792602539
    6. 'itial' → logprob: -5.173196792602539
    7. 'itize' → logprob: -5.298196792602539
    8. 't' → logprob: -5.548196792602539
    9. ' __' → logprob: -5.548196792602539
    10. 'ine' → logprob: -7.048196792602539

Token 21: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. ' init' → logprob: -14.500000953674316
    3. 'ini' → logprob: -16.125
    4. '	init' → logprob: -20.625
    5. '_init' → logprob: -20.75
    6. 'i' → logprob: -21.0
    7. 'in' → logprob: -21.125
    8. 'int' → logprob: -21.375
    9. 'inite' → logprob: -21.375
    10. '   ' → logprob: -21.875

Token 22: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.003774670185521245
    2. '__' → logprob: -5.753774642944336
    3. '(self' → logprob: -8.128774642944336
    4. '__(
' → logprob: -8.378774642944336
    5. '__((' → logprob: -10.628774642944336
    6. '(' → logprob: -10.878774642944336
    7. '__(*' → logprob: -11.878774642944336
    8. '__('' → logprob: -12.253774642944336
    9. '```' → logprob: -12.503774642944336
    10. 'self' → logprob: -13.128774642944336

Token 23: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004084097687155008
    2. ' self' → logprob: -5.50408411026001
    3. ')' → logprob: -12.254083633422852
    4. ' ' → logprob: -14.629083633422852
    5. '_self' → logprob: -15.629083633422852
    6. '(self' → logprob: -16.00408363342285
    7. '	self' → logprob: -16.25408363342285
    8. '   ' → logprob: -16.62908363342285
    9. ',' → logprob: -17.75408363342285
    10. ' ' → logprob: -17.87908363342285

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014837427996098995
    2. 'self' → logprob: -4.389837265014648
    3. ' ,' → logprob: -6.264837265014648
    4. ',self' → logprob: -8.639837265014648
    5. ' self' → logprob: -9.514837265014648
    6. ')' → logprob: -9.639837265014648
    7. '):' → logprob: -10.014837265014648
    8. '_self' → logprob: -10.764837265014648
    9. '(self' → logprob: -11.514837265014648
    10. ' )' → logprob: -12.139837265014648

Token 25: ' n' (ID: 297)
  Prédit: ' rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rules' → logprob: -0.9974190592765808
    2. ' self' → logprob: -1.7474191188812256
    3. 'self' → logprob: -2.1224191188812256
    4. '   ' → logprob: -2.6224191188812256
    5. ' word' → logprob: -2.9974191188812256
    6. 'rules' → logprob: -3.1224191188812256
    7. 'trans' → logprob: -3.3724191188812256
    8. ' mapping' → logprob: -3.3724191188812256
    9. ' mappings' → logprob: -3.4974191188812256
    10. 'mapping' → logprob: -4.7474188804626465

Token 26: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00445207767188549
    2. '_' → logprob: -6.004452228546143
    3. ':int' → logprob: -7.254452228546143
    4. ')' → logprob: -8.504451751708984
    5. '_:' → logprob: -8.504451751708984
    6. '):' → logprob: -8.629451751708984
    7. 'gram' → logprob: -8.629451751708984
    8. ' :' → logprob: -9.504451751708984
    9. 'um' → logprob: -9.504451751708984
    10. 'e' → logprob: -9.629451751708984

Token 27: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31331199407577515
    2. ' int' → logprob: -1.31331205368042
    3. ')' → logprob: -10.813311576843262
    4. '=int' → logprob: -11.938311576843262
    5. 't' → logprob: -12.063311576843262
    6. ' str' → logprob: -12.188311576843262
    7. ':int' → logprob: -12.688311576843262
    8. ' )' → logprob: -12.938311576843262
    9. '[int' → logprob: -13.063311576843262
    10. ' ' → logprob: -13.313311576843262

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6115037798881531
    2. '):' → logprob: -0.8615037798881531
    3. ')' → logprob: -3.361503839492798
    4. ':' → logprob: -9.611503601074219
    5. '   ' → logprob: -9.861503601074219
    6. ' ,' → logprob: -10.361503601074219
    7. '):
' → logprob: -10.861503601074219
    8. ')->' → logprob: -10.986503601074219
    9. ',int' → logprob: -11.111503601074219
    10. ',n' → logprob: -11.361503601074219

Token 29: ' s' (ID: 265)
  Prédit: ' strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.58919358253479
    2. ' alphabet' → logprob: -2.83919358253479
    3. ' mappings' → logprob: -2.96419358253479
    4. ' words' → logprob: -3.08919358253479
    5. ' mapping' → logprob: -3.08919358253479
    6. ' allowed' → logprob: -3.33919358253479
    7. ' transformations' → logprob: -3.71419358253479
    8. ' initial' → logprob: -3.71419358253479
    9. ' rules' → logprob: -3.83919358253479
    10. 'strings' → logprob: -4.589193344116211

Token 30: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024223909713327885
    2. 'tr' → logprob: -6.502422332763672
    3. 'tring' → logprob: -7.377422332763672
    4. 't' → logprob: -9.252422332763672
    5. 'trs' → logprob: -9.752422332763672
    6. '_:' → logprob: -10.127422332763672
    7. ':str' → logprob: -10.127422332763672
    8. ' :' → logprob: -10.752422332763672
    9. ':)' → logprob: -11.252422332763672
    10. ')' → logprob: -11.752422332763672

Token 31: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.3631848096847534
    2. ' str' → logprob: -1.6131848096847534
    3. 'tr' → logprob: -2.488184928894043
    4. 'List' → logprob: -3.988184928894043
    5. ' List' → logprob: -6.738184928894043
    6. 'Set' → logprob: -7.238184928894043
    7. ')' → logprob: -7.613184928894043
    8. 'Str' → logprob: -7.863184928894043
    9. '[str' → logprob: -8.363184928894043
    10. 't' → logprob: -8.988184928894043

Token 32: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05546924099326134
    2. ')' → logprob: -3.555469274520874
    3. ',' → logprob: -3.680469274520874
    4. ':' → logprob: -8.930469512939453
    5. '   ' → logprob: -11.055469512939453
    6. ' ):' → logprob: -11.180469512939453
    7. '):
' → logprob: -11.430469512939453
    8. ' ,' → logprob: -13.680469512939453
    9. ' )' → logprob: -14.055469512939453
    10. '),' → logprob: -14.180469512939453

Token 33: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.0090932846069336
    2. 'm' → logprob: -2.5090932846069336
    3. 't' → logprob: -2.7590932846069336
    4. ' transformations' → logprob: -2.7590932846069336
    5. ' m' → logprob: -3.2590932846069336
    6. '   ' → logprob: -3.3840932846069336
    7. 'transform' → logprob: -3.3840932846069336
    8. ' d' → logprob: -3.5090932846069336
    9. ' mapping' → logprob: -3.8840932846069336
    10. ' k' → logprob: -3.8840932846069336

Token 34: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.466968650580384e-05
    2. ')' → logprob: -10.750054359436035
    3. ' :' → logprob: -11.500054359436035
    4. '):' → logprob: -11.500054359436035
    5. ':str' → logprob: -11.500054359436035
    6. 's' → logprob: -13.750054359436035
    7. '_:' → logprob: -15.000054359436035
    8. '):
' → logprob: -15.375054359436035
    9. 'ype' → logprob: -15.625054359436035
    10. ' ):' → logprob: -15.875054359436035

Token 35: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.14369963109493256
    2. 'str' → logprob: -2.0186996459960938
    3. ':str' → logprob: -7.768699645996094
    4. ')' → logprob: -7.893699645996094
    5. '   ' → logprob: -9.518699645996094
    6. ':' → logprob: -10.268699645996094
    7. '[str' → logprob: -10.393699645996094
    8. 's' → logprob: -11.393699645996094
    9. ' ' → logprob: -11.393699645996094
    10. 'List' → logprob: -11.893699645996094

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023098846431821585
    2. ')' → logprob: -6.127309799194336
    3. ':' → logprob: -9.502309799194336
    4. '):
' → logprob: -10.502309799194336
    5. ',' → logprob: -11.502309799194336
    6. '   ' → logprob: -11.752309799194336
    7. ' ):' → logprob: -12.627309799194336
    8. '       ' → logprob: -14.377309799194336
    9. '):
' → logprob: -15.627309799194336
    10. ''):' → logprob: -16.127309799194336

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004299540014471859
    2. 'self' → logprob: -8.0004301071167
    3. '```' → logprob: -9.7504301071167
    4. ':' → logprob: -11.7504301071167
    5. '   ' → logprob: -12.0004301071167
    6. ' self' → logprob: -12.6254301071167
    7. '\' → logprob: -12.7504301071167
    8. '      ' → logprob: -13.1254301071167
    9. '        
' → logprob: -13.1254301071167
    10. 'newline' → logprob: -13.2504301071167

Token 38: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.010780861601233482
    2. '       ' → logprob: -5.0107808113098145
    3. ' self' → logprob: -5.5107808113098145
    4. '   ' → logprob: -11.760781288146973
    5. 'n' → logprob: -13.260781288146973
    6. 'def' → logprob: -13.635781288146973
    7. '```' → logprob: -14.010781288146973
    8. '
' → logprob: -14.260781288146973
    9. '	self' → logprob: -14.635781288146973
    10. '        
' → logprob: -15.010781288146973

Token 39: '.length' (ID: 3116)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.048867467790842056
    2. '.' → logprob: -3.2988674640655518
    3. ' .' → logprob: -4.548867702484131
    4. '._' → logprob: -8.923867225646973
    5. '.s' → logprob: -11.173867225646973
    6. 'n' → logprob: -12.048867225646973
    7. ' n' → logprob: -12.423867225646973
    8. '.__' → logprob: -12.673867225646973
    9. ' ' → logprob: -12.798867225646973
    10. '.nt' → logprob: -12.798867225646973

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014185951091349125
    2. '=' → logprob: -4.264185905456543
    3. ' ' → logprob: -11.389185905456543
    4. ')' → logprob: -12.389185905456543
    5. '   ' → logprob: -12.639185905456543
    6. '=int' → logprob: -13.889185905456543
    7. ':' → logprob: -14.264185905456543
    8. ',' → logprob: -14.639185905456543
    9. '    ' → logprob: -14.764185905456543
    10. '  ' → logprob: -15.264185905456543

Token 41: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12692894041538239
    2. 'n' → logprob: -2.1269290447235107
    3. '	n' → logprob: -14.25192928314209
    4. ')n' → logprob: -16.501928329467773
    5. ' ' → logprob: -16.751928329467773
    6. 'length' → logprob: -16.876928329467773
    7. 'len' → logprob: -17.376928329467773
    8. '_n' → logprob: -17.501928329467773
    9. ' ' → logprob: -17.501928329467773
    10. '```' → logprob: -18.126928329467773

Token 42: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002704423386603594
    2. '<|end|>' → logprob: -6.627704620361328
    3. 'self' → logprob: -6.752704620361328
    4. '
' → logprob: -9.377704620361328
    5. '        
' → logprob: -10.002704620361328
    6. ' self' → logprob: -10.502704620361328
    7. '        ' → logprob: -11.377704620361328
    8. '<|end|>' → logprob: -11.752704620361328
    9. ',' → logprob: -12.002704620361328
    10. '      ' → logprob: -12.127704620361328

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011807394213974476
    2. '<|end|>' → logprob: -5.011807441711426
    3. '
' → logprob: -5.886807441711426
    4. 'self' → logprob: -6.636807441711426
    5. '        
' → logprob: -8.261807441711426
    6. ' ' → logprob: -8.511807441711426
    7. ' self' → logprob: -8.886807441711426
    8. '  
' → logprob: -9.511807441711426
    9. '   ' → logprob: -9.636807441711426
    10. '```' → logprob: -10.011807441711426

Token 44: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007092684507369995
    2. ' self' → logprob: -5.007092475891113
    3. '       ' → logprob: -8.007092475891113
    4. 's' → logprob: -10.132092475891113
    5. ' ' → logprob: -13.257092475891113
    6. ' s' → logprob: -14.507092475891113
    7. '	self' → logprob: -14.632092475891113
    8. '```' → logprob: -14.632092475891113
    9. 'from' → logprob: -14.882092475891113
    10. '   ' → logprob: -15.257092475891113

Token 45: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.003721576649695635
    2. '.source' → logprob: -6.128721714019775
    3. '.original' → logprob: -7.628721714019775
    4. ' .' → logprob: -7.878721714019775
    5. '.' → logprob: -8.128721237182617
    6. '._' → logprob: -9.503721237182617
    7. '.initial' → logprob: -9.503721237182617
    8. '.string' → logprob: -9.753721237182617
    9. 's' → logprob: -10.378721237182617
    10. '.t' → logprob: -10.503721237182617

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04303561523556709
    2. '=' → logprob: -3.1680355072021484
    3. ' ' → logprob: -10.418035507202148
    4. ',' → logprob: -12.918035507202148
    5. ')' → logprob: -13.293035507202148
    6. '    ' → logprob: -14.918035507202148
    7. '[' → logprob: -15.043035507202148
    8. 's' → logprob: -15.168035507202148
    9. '  ' → logprob: -15.543035507202148
    10. '.' → logprob: -15.793035507202148

Token 47: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20141451060771942
    2. 's' → logprob: -1.7014144659042358
    3. ' ' → logprob: -14.826414108276367
    4. ' ' → logprob: -14.951414108276367
    5. '	s' → logprob: -15.576414108276367
    6. '_s' → logprob: -16.076414108276367
    7. '(s' → logprob: -16.951414108276367
    8. ''s' → logprob: -17.451414108276367
    9. 't' → logprob: -18.263914108276367
    10. '"' → logprob: -18.326414108276367

Token 48: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004480692732613534
    2. 'self' → logprob: -7.875448226928711
    3. '<|end|>' → logprob: -10.125448226928711
    4. ' self' → logprob: -11.625448226928711
    5. '
' → logprob: -12.125448226928711
    6. '        
' → logprob: -12.375448226928711
    7. '<|end|>' → logprob: -13.250448226928711
    8. '   ' → logprob: -13.250448226928711
    9. '      ' → logprob: -13.375448226928711
    10. ' ' → logprob: -13.750448226928711

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023917861108202487
    2. 'self' → logprob: -8.500239372253418
    3. '        
' → logprob: -10.875239372253418
    4. ' self' → logprob: -12.125239372253418
    5. '<|end|>' → logprob: -12.750239372253418
    6. '      ' → logprob: -13.000239372253418
    7. '   ' → logprob: -13.375239372253418
    8. ',' → logprob: -14.125239372253418
    9. ' ' → logprob: -14.125239372253418
    10. '
' → logprob: -14.625239372253418

Token 50: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12400190532207489
    2. '       ' → logprob: -2.499001979827881
    3. ' self' → logprob: -3.374001979827881
    4. ' ' → logprob: -9.249001502990723
    5. '   ' → logprob: -10.374001502990723
    6. 't' → logprob: -10.999001502990723
    7. '	self' → logprob: -11.499001502990723
    8. '      ' → logprob: -11.749001502990723
    9. '        
' → logprob: -11.999001502990723
    10. 's' → logprob: -12.124001502990723

Token 51: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.1824205070734024
    2. '.' → logprob: -1.8074204921722412
    3. 't' → logprob: -6.30742073059082
    4. ' .' → logprob: -7.93242073059082
    5. '.s' → logprob: -8.05742073059082
    6. '.target' → logprob: -10.30742073059082
    7. '_t' → logprob: -10.30742073059082
    8. '._' → logprob: -11.18242073059082
    9. ' t' → logprob: -11.30742073059082
    10. 's' → logprob: -11.30742073059082

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.59352046251297
    2. ' =' → logprob: -0.84352046251297
    3. '<|end|>' → logprob: -4.093520641326904
    4. ' ' → logprob: -7.843520641326904
    5. '<|end|>' → logprob: -8.093520164489746
    6. ')' → logprob: -10.593520164489746
    7. ' =
' → logprob: -12.343520164489746
    8. '  ' → logprob: -12.843520164489746
    9. '=
' → logprob: -13.343520164489746
    10. ',' → logprob: -13.468520164489746

Token 53: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.11294007301330566
    2. 't' → logprob: -2.2379400730133057
    3. 's' → logprob: -9.612939834594727
    4. ' ' → logprob: -10.362939834594727
    5. ' ' → logprob: -11.612939834594727
    6. ' s' → logprob: -12.112939834594727
    7. '	t' → logprob: -14.487939834594727
    8. '`t' → logprob: -14.612939834594727
    9. '"' → logprob: -14.737939834594727
    10. '`' → logprob: -14.862939834594727

Token 54: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2545246183872223
    2. '       ' → logprob: -1.5045245885849
    3. '        
' → logprob: -6.8795247077941895
    4. '<|end|>' → logprob: -7.3795247077941895
    5. 'self' → logprob: -8.129524230957031
    6. '    
' → logprob: -8.754524230957031
    7. ' 
' → logprob: -9.254524230957031
    8. '  
' → logprob: -9.379524230957031
    9. 'def' → logprob: -9.754524230957031
    10. '   ' → logprob: -10.129524230957031

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01102081872522831
    2. '
' → logprob: -4.636020660400391
    3. 'self' → logprob: -7.261020660400391
    4. '        
' → logprob: -8.26102066040039
    5. 'def' → logprob: -9.38602066040039
    6. '   ' → logprob: -9.76102066040039
    7. '    
' → logprob: -10.01102066040039
    8. ' self' → logprob: -10.01102066040039
    9. '```' → logprob: -10.88602066040039
    10. '      ' → logprob: -11.63602066040039

Token 56: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3271174728870392
    2. 'self' (adapté à ' self') → logprob: -1.3271174430847168
    3. ' self' → logprob: -4.452117443084717
    4. 'def' → logprob: -6.327117443084717
    5. '   ' → logprob: -8.327117919921875
    6. '      ' → logprob: -10.952117919921875
    7. ' ' → logprob: -11.202117919921875
    8. '	self' → logprob: -11.827117919921875
    9. '
' → logprob: -12.077117919921875
    10. '     ' → logprob: -12.452117919921875

Token 57: '.al' (ID: 19517)
  Prédit: '.graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.6880441904067993
    2. '.mapping' → logprob: -2.0630440711975098
    3. '.char' → logprob: -2.5630440711975098
    4. '._' → logprob: -2.5630440711975098
    5. '.transform' → logprob: -3.5630440711975098
    6. '.ch' → logprob: -3.5630440711975098
    7. '_graph' → logprob: -3.8130440711975098
    8. '.transforms' → logprob: -4.31304407119751
    9. '.transitions' → logprob: -4.43804407119751
    10. '.matches' → logprob: -4.93804407119751

Token 58: 'phabet' (ID: 29466)
  Prédit: 'ph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ph' → logprob: -0.4403838515281677
    2. 'pha' → logprob: -1.4403839111328125
    3. 'phabet' → logprob: -2.6903839111328125
    4. 'low' → logprob: -3.3153839111328125
    5. 'p' → logprob: -4.6903839111328125
    6. 'phal' → logprob: -6.4403839111328125
    7. 'ter' → logprob: -6.6903839111328125
    8. 'l' → logprob: -6.6903839111328125
    9. 'phas' → logprob: -7.0653839111328125
    10. 'tered' → logprob: -8.440383911132812

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3054478168487549
    2. '=' → logprob: -1.4304478168487549
    3. '_counts' → logprob: -4.430447578430176
    4. ':' → logprob: -4.930447578430176
    5. '_count' → logprob: -6.305447578430176
    6. '_freq' → logprob: -6.930447578430176
    7. '_map' → logprob: -7.430447578430176
    8. '_to' → logprob: -7.680447578430176
    9. '_size' → logprob: -7.930447578430176
    10. '_frequency' → logprob: -8.805447578430176

Token 60: ' [' (ID: 723)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.4387054145336151
    2. 'set' → logprob: -1.0637054443359375
    3. '"' → logprob: -5.8137054443359375
    4. ' ' → logprob: -6.6887054443359375
    5. ' "' → logprob: -6.6887054443359375
    6. ' '' → logprob: -6.6887054443359375
    7. ' [' → logprob: -7.1887054443359375
    8. ' defaultdict' → logprob: -7.3137054443359375
    9. ' {' → logprob: -7.9387054443359375
    10. ' list' → logprob: -8.188705444335938

Token 61: 'chr' (ID: 33902)
  Prédit: 'chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.00045081099960952997
    2. ' chr' → logprob: -7.750450611114502
    3. '(chr' → logprob: -11.12545108795166
    4. 'c' → logprob: -12.50045108795166
    5. 'ch' → logprob: -15.00045108795166
    6. '_chr' → logprob: -15.25045108795166
    7. '   ' → logprob: -15.25045108795166
    8. ' ' → logprob: -15.37545108795166
    9. 'False' → logprob: -16.250450134277344
    10. 'str' → logprob: -16.250450134277344

Token 62: '(i' (ID: 3649)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.5551091432571411
    2. '(' → logprob: -1.0551091432571411
    3. '(i' → logprob: -2.5551090240478516
    4. '(x' → logprob: -9.305109024047852
    5. '(a' → logprob: -10.055109024047852
    6. '(o' → logprob: -11.555109024047852
    7. '97' → logprob: -12.180109024047852
    8. '(code' → logprob: -14.055109024047852
    9. '(j' → logprob: -14.430109024047852
    10. '(c' → logprob: -14.805109024047852

Token 63: ')' (ID: 8)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.3852728307247162
    2. '(' → logprob: -1.2602728605270386
    3. '97' → logprob: -3.385272741317749
    4. 'ord' → logprob: -6.510272979736328
    5. ' ord' → logprob: -8.635272979736328
    6. '   ' → logprob: -9.010272979736328
    7. '65' → logprob: -9.010272979736328
    8. ' ' → logprob: -9.385272979736328
    9. 'range' → logprob: -9.510272979736328
    10. '32' → logprob: -10.510272979736328

Token 64: ' for' (ID: 395)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.912925660610199
    2. ' for' → logprob: -1.0379257202148438
    3. '(' → logprob: -2.1629257202148438
    4. 'for' → logprob: -2.9129257202148438
    5. '97' → logprob: -3.0379257202148438
    6. 'ord' → logprob: -4.787925720214844
    7. ' ' → logprob: -5.412925720214844
    8. 'range' → logprob: -5.787925720214844
    9. ' ord' → logprob: -6.037925720214844
    10. '   ' → logprob: -6.037925720214844

Token 65: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0016556596383452415
    2. 'range' → logprob: -6.501655578613281
    3. ' ' → logprob: -9.126655578613281
    4. '(range' → logprob: -10.501655578613281
    5. ' xrange' → logprob: -12.126655578613281
    6. '	range' → logprob: -12.626655578613281
    7. '_range' → logprob: -12.751655578613281
    8. '(' → logprob: -13.376655578613281
    9. ' ord' → logprob: -13.376655578613281
    10. '(ord' → logprob: -13.876655578613281

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23712870478630066
    2. 'range' → logprob: -1.862128734588623
    3. ' range' → logprob: -2.987128734588623
    4. 'in' → logprob: -5.362128734588623
    5. '(range' → logprob: -7.737128734588623
    6. ' ' → logprob: -8.987128257751465
    7. '_range' → logprob: -10.987128257751465
    8. ' xrange' → logprob: -11.612128257751465
    9. '(ord' → logprob: -11.737128257751465
    10. '	range' → logprob: -11.987128257751465

Token 67: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10021260380744934
    2. 'range' → logprob: -2.350212574005127
    3. '(range' → logprob: -12.225213050842285
    4. 'ord' → logprob: -14.350213050842285
    5. '(ord' → logprob: -15.850213050842285
    6. '	range' → logprob: -15.975213050842285
    7. '_range' → logprob: -16.60021209716797
    8. '97' → logprob: -16.72521209716797
    9. ' ord' → logprob: -16.85021209716797
    10. '   ' → logprob: -18.10021209716797

Token 68: '(ord' (ID: 199585)
  Prédit: '(ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.3870752155780792
    2. '(' → logprob: -1.1370751857757568
    3. '97' → logprob: -8.512075424194336
    4. 'ord' → logprob: -12.762075424194336
    5. ' ord' → logprob: -15.887075424194336
    6. '65' → logprob: -16.512075424194336
    7. ' (' → logprob: -17.137075424194336
    8. '(o' → logprob: -18.137075424194336
    9. '   ' → logprob: -18.637075424194336
    10. ' ' → logprob: -19.012075424194336

Token 69: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.002074955962598324
    2. '(' → logprob: -6.252074718475342
    3. '(ord' → logprob: -9.0020751953125
    4. '("' → logprob: -10.7520751953125
    5. ' ('' → logprob: -14.1270751953125
    6. '(a' → logprob: -14.8770751953125
    7. 'ord' → logprob: -15.6270751953125
    8. '(\'' → logprob: -15.8770751953125
    9. 'a' → logprob: -16.0020751953125
    10. '("("' → logprob: -16.3770751953125

Token 70: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0003862245939671993
    2. ''a' → logprob: -7.8753862380981445
    3. 'а' → logprob: -12.250386238098145
    4. ''' → logprob: -14.750386238098145
    5. '97' → logprob: -15.250386238098145
    6. ' a' → logprob: -15.375386238098145
    7. '`' → logprob: -16.125385284423828
    8. '	a' → logprob: -16.500385284423828
    9. '('' → logprob: -16.750385284423828
    10. '_a' → logprob: -16.875385284423828

Token 71: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.01540842279791832
    2. 'a' → logprob: -4.765408515930176
    3. '),' → logprob: -5.265408515930176
    4. ''a' → logprob: -7.265408515930176
    5. ''' → logprob: -8.015408515930176
    6. '```' → logprob: -8.890408515930176
    7. ''),'' → logprob: -9.015408515930176
    8. '',' → logprob: -9.890408515930176
    9. '''' → logprob: -10.140408515930176
    10. 'b' → logprob: -10.640408515930176

Token 72: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.062226030975580215
    2. ' ord' → logprob: -2.8122260570526123
    3. '(ord' → logprob: -8.312226295471191
    4. ' ' → logprob: -12.187226295471191
    5. '   ' → logprob: -12.562226295471191
    6. '    ' → logprob: -13.687226295471191
    7. 'ordin' → logprob: -14.312226295471191
    8. 'ordinal' → logprob: -14.312226295471191
    9. '123' → logprob: -14.437226295471191
    10. '_ord' → logprob: -15.062226295471191

Token 73: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0006148627726361156
    2. '(' → logprob: -7.500614643096924
    3. '(ord' → logprob: -9.750615119934082
    4. ''' → logprob: -13.500615119934082
    5. ' ('' → logprob: -14.000615119934082
    6. 'a' → logprob: -15.000615119934082
    7. '(
' → logprob: -15.250615119934082
    8. '(('' → logprob: -15.750615119934082
    9. '(\'' → logprob: -15.750615119934082
    10. '("' → logprob: -15.750615119934082

Token 74: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.003179975086823106
    2. ''z' → logprob: -5.753180027008057
    3. '{' → logprob: -13.878179550170898
    4. '{'' → logprob: -14.128179550170898
    5. '‘z' → logprob: -15.378179550170898
    6. ''' → logprob: -16.1281795501709
    7. '	z' → logprob: -16.7531795501709
    8. 'm' → logprob: -16.8781795501709
    9. ''s' → logprob: -17.0031795501709
    10. 'za' → logprob: -17.5031795501709

Token 75: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0003246183041483164
    2. ')' → logprob: -9.000324249267578
    3. '")+' → logprob: -9.125324249267578
    4. ')+' → logprob: -9.500324249267578
    5. 'z' → logprob: -12.125324249267578
    6. 'a' → logprob: -12.250324249267578
    7. ''+' → logprob: -13.000324249267578
    8. '")' → logprob: -13.375324249267578
    9. ''' → logprob: -13.375324249267578
    10. '1' → logprob: -14.750324249267578

Token 76: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05550261586904526
    2. ' +' → logprob: -2.9305026531219482
    3. ')' → logprob: -7.555502414703369
    4. ')+' → logprob: -9.305502891540527
    5. ' ' → logprob: -13.430502891540527
    6. ')]' → logprob: -13.680502891540527
    7. '1' → logprob: -14.055502891540527
    8. '   ' → logprob: -14.430502891540527
    9. '```' → logprob: -14.805502891540527
    10. '))' → logprob: -14.805502891540527

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -18.126171112060547
    4. '  ' → logprob: -18.376171112060547
    5. '```' → logprob: -19.001171112060547
    6. '27' → logprob: -20.126171112060547
    7. '' → logprob: -20.126171112060547
    8. ')' → logprob: -20.376171112060547
    9. '26' → logprob: -20.376171112060547
    10. ' ' → logprob: -20.626171112060547

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -16.25001335144043
    4. '   ' → logprob: -17.00001335144043
    5. ')' → logprob: -17.25001335144043
    6. '0' → logprob: -17.50001335144043
    7. '26' → logprob: -17.87501335144043
    8. '27' → logprob: -18.62501335144043
    9. '  ' → logprob: -18.62501335144043
    10. '' → logprob: -18.62501335144043

Token 79: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.15310683415737e-05
    2. ']' → logprob: -11.000021934509277
    3. ' )' → logprob: -13.000021934509277
    4. ')' → logprob: -13.500021934509277
    5. ' ]' → logprob: -14.500021934509277
    6. '])]' → logprob: -15.875021934509277
    7. '')]' → logprob: -15.875021934509277
    8. ')])' → logprob: -16.12502098083496
    9. ')]
' → logprob: -16.37502098083496
    10. '])' → logprob: -16.87502098083496

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28188252449035645
    2. '
' → logprob: -1.4068825244903564
    3. '        
' → logprob: -8.531882286071777
    4. '<|end|>' → logprob: -9.156882286071777
    5. ',' → logprob: -9.281882286071777
    6. 'def' → logprob: -9.906882286071777
    7. '  
' → logprob: -10.031882286071777
    8. ' 
' → logprob: -10.031882286071777
    9. 'self' → logprob: -10.156882286071777
    10. '   ' → logprob: -10.406882286071777

Token 81: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024184269830584526
    2. 'self' (adapté à ' self') → logprob: -4.024184226989746
    3. ' self' → logprob: -5.774184226989746
    4. '
' → logprob: -5.899184226989746
    5. '   ' → logprob: -10.274184226989746
    6. '        
' → logprob: -10.274184226989746
    7. 'def' → logprob: -10.524184226989746
    8. ' ' → logprob: -10.774184226989746
    9. '<|end|>' → logprob: -11.524184226989746
    10. '	self' → logprob: -12.149184226989746

Token 82: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.5547158718109131
    2. '.mapping' → logprob: -2.804715871810913
    3. '.transform' → logprob: -3.179715871810913
    4. '.transitions' → logprob: -3.179715871810913
    5. 'graph' → logprob: -3.429715871810913
    6. 'transform' → logprob: -3.554715871810913
    7. '.char' → logprob: -3.679715871810913
    8. '.trans' → logprob: -4.304716110229492
    9. '_graph' → logprob: -4.304716110229492
    10. '.' → logprob: -4.304716110229492

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008719408884644508
    2. '=' → logprob: -4.758719444274902
    3. ':' → logprob: -9.258719444274902
    4. ' :' → logprob: -11.633719444274902
    5. ' ' → logprob: -14.758719444274902
    6. '[' → logprob: -15.883719444274902
    7. 's' → logprob: -17.008718490600586
    8. '  ' → logprob: -17.321218490600586
    9. ')' → logprob: -17.446218490600586
    10. '	' → logprob: -18.508718490600586

Token 84: ' Char' (ID: 9331)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.42883506417274475
    2. 'default' → logprob: -1.0538350343704224
    3. ' default' → logprob: -9.803834915161133
    4. ' {' → logprob: -10.553834915161133
    5. '{' → logprob: -11.053834915161133
    6. '(default' → logprob: -11.803834915161133
    7. '"default' → logprob: -11.803834915161133
    8. ' [' → logprob: -11.928834915161133
    9. ' ' → logprob: -12.178834915161133
    10. '.default' → logprob: -12.678834915161133

Token 85: 'Mapping' (ID: 8146)
  Prédit: 'Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.8332120776176453
    2. 't' → logprob: -1.20821213722229
    3. 'To' → logprob: -2.33321213722229
    4. 'acter' → logprob: -2.58321213722229
    5. '_to' → logprob: -3.45821213722229
    6. 'graph' → logprob: -3.58321213722229
    7. 'Dict' → logprob: -4.333211898803711
    8. ' defaultdict' → logprob: -5.583211898803711
    9. '_graph' → logprob: -6.083211898803711
    10. '['' → logprob: -6.083211898803711

Token 86: 'Graph' (ID: 9922)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03796792030334473
    2. 'default' → logprob: -3.5379679203033447
    3. '(default' → logprob: -5.662967681884766
    4. ' defaultdict' → logprob: -6.662967681884766
    5. 's' → logprob: -6.787967681884766
    6. 'Set' → logprob: -7.787967681884766
    7. 'Default' → logprob: -8.287967681884766
    8. 'Map' → logprob: -8.412967681884766
    9. 'Graph' → logprob: -8.537967681884766
    10. '()]' → logprob: -8.912967681884766

Token 87: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00041327282087877393
    2. '()(' → logprob: -9.125412940979004
    3. '(default' → logprob: -9.250412940979004
    4. '(' → logprob: -10.000412940979004
    5. 'default' → logprob: -10.125412940979004
    6. '()]' → logprob: -10.375412940979004
    7. ']()' → logprob: -10.750412940979004
    8. '()
' → logprob: -11.000412940979004
    9. ' defaultdict' → logprob: -11.875412940979004
    10. 'def' → logprob: -12.000412940979004

Token 88: '.al' (ID: 19517)
  Prédit: '.al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.al' → logprob: -0.017677241936326027
    2. '.graph' → logprob: -5.142677307128906
    3. '.length' → logprob: -5.267677307128906
    4. '.' → logprob: -5.517677307128906
    5. 'alphabet' → logprob: -6.767677307128906
    6. ')' → logprob: -7.517677307128906
    7. '.s' → logprob: -7.892677307128906
    8. '.n' → logprob: -8.892677307128906
    9. '.alpha' → logprob: -9.642677307128906
    10. ' .' → logprob: -10.017677307128906

Token 89: 'phabet' (ID: 29466)
  Prédit: 'phabet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phabet' → logprob: -0.01190128829330206
    2. 'ph' → logprob: -4.761901378631592
    3. 'pha' → logprob: -5.886901378631592
    4. 'p' → logprob: -8.886900901794434
    5. '```' → logprob: -9.011900901794434
    6. 'aph' → logprob: -10.011900901794434
    7. 'phas' → logprob: -10.636900901794434
    8. 'phal' → logprob: -10.761900901794434
    9. 'g' → logprob: -11.261900901794434
    10. ')' → logprob: -11.386900901794434

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.44312788406387e-05
    2. ' )' → logprob: -10.250054359436035
    3. ',' → logprob: -11.375054359436035
    4. ')
' → logprob: -12.500054359436035
    5. '))' → logprob: -13.750054359436035
    6. '       ' → logprob: -13.750054359436035
    7. '),' → logprob: -15.750054359436035
    8. ',)' → logprob: -15.750054359436035
    9. '])' → logprob: -15.875054359436035
    10. '   ' → logprob: -15.875054359436035

Token 91: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21934880316257477
    2. '<|end|>' → logprob: -1.7193487882614136
    3. '   ' → logprob: -5.094348907470703
    4. '       ' → logprob: -5.469348907470703
    5. 'def' → logprob: -6.719348907470703
    6. '    
' → logprob: -6.719348907470703
    7. '<|end|>' → logprob: -6.969348907470703
    8. ' 
' → logprob: -6.969348907470703
    9. '  
' → logprob: -7.344348907470703
    10. ' ' → logprob: -7.719348907470703

Token 92: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6028220653533936
    2. 'def' → logprob: -1.2278220653533936
    3. '   ' → logprob: -2.1028220653533936
    4. '<|end|>' → logprob: -4.102822303771973
    5. ' def' → logprob: -4.227822303771973
    6. '    
' → logprob: -5.727822303771973
    7. '<|end|>' → logprob: -7.102822303771973
    8. '

' → logprob: -7.352822303771973
    9. '  
' → logprob: -7.602822303771973
    10. '```' → logprob: -8.227822303771973

Token 93: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00034118397161364555
    2. ' def' → logprob: -8.000341415405273
    3. '   ' → logprob: -12.375341415405273
    4. '<|end|>' → logprob: -14.375341415405273
    5. '
' → logprob: -14.625341415405273
    6. '    
' → logprob: -15.750341415405273
    7. '	def' → logprob: -16.375341415405273
    8. ' ' → logprob: -16.500341415405273
    9. 'class' → logprob: -16.875341415405273
    10. 'de' → logprob: -16.875341415405273

Token 94: ' minimal' (ID: 19957)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24175335466861725
    2. '_' → logprob: -2.241753339767456
    3. ' _' → logprob: -2.366753339767456
    4. ' transform' → logprob: -5.241753578186035
    5. ' space' → logprob: -6.116753578186035
    6. '_transform' → logprob: -6.241753578186035
    7. ' def' → logprob: -6.741753578186035
    8. ' a' → logprob: -7.991753578186035
    9. ' t' → logprob: -8.116753578186035
    10. 'transform' → logprob: -8.241753578186035

Token 95: '_re' (ID: 3067)
  Prédit: '_trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_trans' → logprob: -0.4702664315700531
    2. '_transform' → logprob: -1.3452664613723755
    3. '_' → logprob: -3.220266342163086
    4. '_changes' → logprob: -3.720266342163086
    5. '_cost' → logprob: -4.095266342163086
    6. '_sw' → logprob: -4.720266342163086
    7. '_operations' → logprob: -4.845266342163086
    8. '_distance' → logprob: -4.970266342163086
    9. '_steps' → logprob: -5.595266342163086
    10. '_moves' → logprob: -5.970266342163086

Token 96: 'placements' (ID: 72793)
  Prédit: 'placement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.633987307548523
    2. 'placements' → logprob: -0.883987307548523
    3. 'place' → logprob: -3.7589874267578125
    4. 'm' → logprob: -4.3839874267578125
    5. 'arr' → logprob: -5.0089874267578125
    6. 'moves' → logprob: -6.0089874267578125
    7. 'writes' → logprob: -6.2589874267578125
    8. 'plac' → logprob: -6.5089874267578125
    9. 'write' → logprob: -6.6339874267578125
    10. 'places' → logprob: -6.8839874267578125

Token 97: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002484573284164071
    2. '(' → logprob: -6.1274847984313965
    3. ' (' → logprob: -8.127484321594238
    4. '(s' → logprob: -13.127484321594238
    5. '   ' → logprob: -13.877484321594238
    6. ' ' → logprob: -14.627484321594238
    7. '(
' → logprob: -15.127484321594238
    8. 'self' → logprob: -15.877484321594238
    9. '       ' → logprob: -16.252485275268555
    10. ' self' → logprob: -16.252485275268555

Token 98: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23699922859668732
    2. ')' → logprob: -1.986999273300171
    3. '):' → logprob: -2.736999273300171
    4. 'self' → logprob: -4.861999034881592
    5. ' ,' → logprob: -7.861999034881592
    6. ')->' → logprob: -8.11199951171875
    7. '):
' → logprob: -8.73699951171875
    8. '   ' → logprob: -8.98699951171875
    9. ' )' → logprob: -9.36199951171875
    10. '       ' → logprob: -9.61199951171875

Token 99: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014329778496176004
    2. '(' → logprob: -6.7514328956604
    3. ':' → logprob: -8.376433372497559
    4. '(s' → logprob: -11.376433372497559
    5. ' (' → logprob: -12.001433372497559
    6. '(
' → logprob: -12.501433372497559
    7. '():' → logprob: -13.001433372497559
    8. ' ->' → logprob: -13.126433372497559
    9. 'self' → logprob: -13.251433372497559
    10. ':self' → logprob: -14.001433372497559

Token 100: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3874805271625519
    2. ' int' → logprob: -1.1374804973602295
    3. 'List' → logprob: -8.387480735778809
    4. ' List' → logprob: -8.512480735778809
    5. ' None' → logprob: -9.637480735778809
    6. 'None' → logprob: -10.012480735778809
    7. ' Optional' → logprob: -10.637480735778809
    8. 'Optional' → logprob: -10.887480735778809
    9. '   ' → logprob: -11.512480735778809
    10. '[int' → logprob: -12.012480735778809

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005351595464162529
    2. '):' → logprob: -8.500535011291504
    3. ':
' → logprob: -9.125535011291504
    4. '(self' → logprob: -9.375535011291504
    5. '       ' → logprob: -9.875535011291504
    6. ' :' → logprob: -10.625535011291504
    7. '():' → logprob: -10.750535011291504
    8. '(' → logprob: -11.125535011291504
    9. '   ' → logprob: -11.750535011291504
    10. ':self' → logprob: -12.250535011291504

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028456486761569977
    2. '
' → logprob: -6.002845764160156
    3. '        
' → logprob: -8.252845764160156
    4. '        ' → logprob: -10.127845764160156
    5. '      ' → logprob: -11.252845764160156
    6. ' 
' → logprob: -11.752845764160156
    7. '```' → logprob: -11.752845764160156
    8. '    ' → logprob: -11.877845764160156
    9. '   ' → logprob: -12.377845764160156
    10. '  
' → logprob: -12.377845764160156

Token 103: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8319814801216125
    2. 'result' → logprob: -1.5819814205169678
    3. 're' → logprob: -1.8319814205169678
    4. 'total' → logprob: -2.8319814205169678
    5. 'cost' → logprob: -3.5819814205169678
    6. ' total' → logprob: -3.9569814205169678
    7. 'count' → logprob: -3.9569814205169678
    8. ' result' → logprob: -4.331981658935547
    9. 'replacement' → logprob: -4.581981658935547
    10. ' replacements' → logprob: -4.581981658935547

Token 104: ' Step' (ID: 22291)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.297010064125061
    2. ' total' → logprob: -2.0470099449157715
    3. ' result' → logprob: -2.1720099449157715
    4. 'result' → logprob: -2.5470099449157715
    5. ' replacements' → logprob: -2.7970099449157715
    6. 'visited' → logprob: -3.1720099449157715
    7. ' visited' → logprob: -3.2970099449157715
    8. ' n' → logprob: -3.5470099449157715
    9. ' cost' → logprob: -3.7970099449157715
    10. 'total' → logprob: -4.0470099449157715

Token 105: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5013794302940369
    2. '        ' → logprob: -1.2513794898986816
    3. ' ' → logprob: -3.2513794898986816
    4. '    ' → logprob: -3.6263794898986816
    5. '1' → logprob: -3.7513794898986816
    6. ' =' → logprob: -5.376379489898682
    7. '0' → logprob: -5.876379489898682
    8. '   ' → logprob: -6.376379489898682
    9. '=' → logprob: -6.626379489898682
    10. ' by' → logprob: -6.751379489898682

Token 106: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022607244551181793
    2. '=' → logprob: -4.772607326507568
    3. '1' → logprob: -5.272607326507568
    4. 'result' → logprob: -5.397607326507568
    5. 'count' → logprob: -6.397607326507568
    6. ' ' → logprob: -6.772607326507568
    7. '#' → logprob: -7.897607326507568
    8. '       ' → logprob: -8.27260684967041
    9. 'for' → logprob: -8.64760684967041
    10. 'def' → logprob: -9.27260684967041

Token 107: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6250290870666504
    2. 'total' → logprob: -2.1250290870666504
    3. 're' → logprob: -2.2500290870666504
    4. 'result' → logprob: -2.6250290870666504
    5. ' total' → logprob: -2.7500290870666504
    6. 'count' → logprob: -3.5000290870666504
    7. ' replacements' → logprob: -3.6250290870666504
    8. ' result' → logprob: -5.00002908706665
    9. 'res' → logprob: -5.12502908706665
    10. ' if' → logprob: -5.25002908706665

Token 108: ' Jennifer' (ID: 45750)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.6425504684448242
    2. 're' → logprob: -1.8925504684448242
    3. 'total' → logprob: -2.142550468444824
    4. 'count' → logprob: -2.392550468444824
    5. '       ' → logprob: -2.517550468444824
    6. ' replacements' → logprob: -2.517550468444824
    7. 'result' → logprob: -2.892550468444824
    8. 'replace' → logprob: -3.142550468444824
    9. 'replacement' → logprob: -3.642550468444824
    10. 'if' → logprob: -3.892550468444824

Token 109: ' rearr' (ID: 98785)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -1.1463189125061035
    2. 's' → logprob: -1.2713189125061035
    3. 'def' → logprob: -2.1463189125061035
    4. ' wants' → logprob: -3.2713189125061035
    5. ' def' → logprob: -3.6463189125061035
    6. ' =' → logprob: -3.6463189125061035
    7. ' s' → logprob: -3.8963189125061035
    8. ''' → logprob: -4.3963189125061035
    9. ' to' → logprob: -4.5213189125061035
    10. ' and' → logprob: -4.5213189125061035

Token 110: 'anges' (ID: 8273)
  Prédit: 'angement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angement' → logprob: -0.7591055631637573
    2. 'ange' → logprob: -1.6341055631637573
    3. 'anging' → logprob: -1.6341055631637573
    4. 'angements' → logprob: -3.009105682373047
    5. 'anged' → logprob: -3.259105682373047
    6. 'ang' → logprob: -4.759105682373047
    7. 'ge' → logprob: -4.759105682373047
    8. 'gement' → logprob: -4.884105682373047
    9. '   ' → logprob: -5.384105682373047
    10. '```' → logprob: -6.071605682373047

Token 111: ' s' (ID: 265)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9699363112449646
    2. 's' → logprob: -2.4699363708496094
    3. 'the' → logprob: -2.4699363708496094
    4. ' replacements' → logprob: -2.4699363708496094
    5. '<|end|>' → logprob: -2.9699363708496094
    6. 'self' → logprob: -3.0949363708496094
    7. '(self' → logprob: -3.5949363708496094
    8. '()' → logprob: -3.8449363708496094
    9. ' self' → logprob: -4.094936370849609
    10. '_tokens' → logprob: -4.094936370849609

Token 112: ' arbitr' (ID: 31157)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6937170624732971
    2. 'for' → logprob: -2.3187170028686523
    3. ' for' → logprob: -2.6937170028686523
    4. '=' → logprob: -3.0687170028686523
    5. '_' → logprob: -3.5687170028686523
    6. '       ' → logprob: -3.8187170028686523
    7. ',' → logprob: -3.8187170028686523
    8. 's' → logprob: -3.9437170028686523
    9. ' to' → logprob: -4.068717002868652
    10. '_to' → logprob: -4.068717002868652

Token 113: 'arily' (ID: 10581)
  Prédit: 'ary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -0.32006821036338806
    2. 'arily' → logprob: -1.3200682401657104
    3. 'arly' → logprob: -6.570068359375
    4. 'aly' → logprob: -7.195068359375
    5. 'ar' → logprob: -7.445068359375
    6. '       ' → logprob: -7.570068359375
    7. '   ' → logprob: -7.945068359375
    8. 'ly' → logprob: -8.007568359375
    9. 'ay' → logprob: -8.132568359375
    10. '```' → logprob: -8.195068359375

Token 114: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1632361263036728
    2. '<|end|>' → logprob: -2.038236141204834
    3. '
' → logprob: -5.413236141204834
    4. '<|end|>' → logprob: -5.538236141204834
    5. '        ' → logprob: -5.913236141204834
    6. '        
' → logprob: -6.038236141204834
    7. ' ' → logprob: -6.538236141204834
    8. ',' → logprob: -6.663236141204834
    9. '   ' → logprob: -7.038236141204834
    10. '    ' → logprob: -7.913236141204834

Token 116: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35832828283309937
    2. 'result' → logprob: -2.233328342437744
    3. 'total' → logprob: -3.233328342437744
    4. 'count' → logprob: -3.858328342437744
    5. 're' → logprob: -3.983328342437744
    6. 's' → logprob: -4.233328342437744
    7. '        
' → logprob: -4.358328342437744
    8. ' total' → logprob: -4.608328342437744
    9. 'n' → logprob: -4.858328342437744
    10. '
' → logprob: -4.983328342437744

Token 117: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.81511390209198
    2. 're' → logprob: -2.4401140213012695
    3. '#' → logprob: -2.6901140213012695
    4. 'total' → logprob: -2.8151140213012695
    5. 'result' → logprob: -3.3151140213012695
    6. 'cost' → logprob: -3.5651140213012695
    7. 'replacement' → logprob: -3.6901140213012695
    8. 'min' → logprob: -3.8151140213012695
    9. 'needed' → logprob: -3.9401140213012695
    10. 'count' → logprob: -3.9401140213012695

Token 118: ' Jennifer' (ID: 45750)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.6212923526763916
    2. ' rearr' → logprob: -1.7462923526763916
    3. ' s' → logprob: -1.9962923526763916
    4. ' we' → logprob: -2.2462923526763916
    5. 's' → logprob: -2.4962923526763916
    6. ' the' → logprob: -3.1212923526763916
    7. ' characters' → logprob: -3.3712923526763916
    8. 'we' → logprob: -3.6212923526763916
    9. ' both' → logprob: -3.6212923526763916
    10. 're' → logprob: -3.9962923526763916

Token 119: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.005170073825865984
    2. 'can' → logprob: -5.630169868469238
    3. ' wants' → logprob: -7.380169868469238
    4. ' has' → logprob: -8.880169868469238
    5. ' is' → logprob: -8.880169868469238
    6. ''s' → logprob: -9.005169868469238
    7. 's' → logprob: -9.380169868469238
    8. '_can' → logprob: -9.630169868469238
    9. '   ' → logprob: -9.880169868469238
    10. ' knows' → logprob: -10.130169868469238

Token 120: ' rearr' (ID: 98785)
  Prédit: ' rearr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rearr' → logprob: -0.20126168429851532
    2. ' reorder' → logprob: -1.8262616395950317
    3. 're' → logprob: -5.076261520385742
    4. ' choose' → logprob: -5.951261520385742
    5. ' replace' → logprob: -6.576261520385742
    6. ' use' → logprob: -6.576261520385742
    7. ' re' → logprob: -6.826261520385742
    8. ' perm' → logprob: -7.326261520385742
    9. ' create' → logprob: -7.326261520385742
    10. 'replace' → logprob: -7.451261520385742

Token 121: 'ange' (ID: 1052)
  Prédit: 'ange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.09109655022621155
    2. 'range' → logprob: -3.7160966396331787
    3. '   ' → logprob: -4.0910964012146
    4. 'nge' → logprob: -4.7160964012146
    5. 'age' → logprob: -4.9660964012146
    6. 'anged' → logprob: -5.5910964012146
    7. 'anging' → logprob: -5.7160964012146
    8. 'a' → logprob: -5.8410964012146
    9. 'angement' → logprob: -6.2160964012146
    10. 'enge' → logprob: -6.2785964012146

Token 122: ' arbitr' (ID: 31157)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7643910646438599
    2. 's' → logprob: -1.1393910646438599
    3. ' the' → logprob: -2.0143909454345703
    4. 'self' → logprob: -3.5143909454345703
    5. ' self' → logprob: -3.6393909454345703
    6. 'the' → logprob: -4.01439094543457
    7. ' characters' → logprob: -6.76439094543457
    8. '<|end|>' → logprob: -6.88939094543457
    9. ' any' → logprob: -7.26439094543457
    10. ' tokens' → logprob: -7.38939094543457

Token 123: 'arily' (ID: 10581)
  Prédit: 'arily'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arily' → logprob: -0.9363809823989868
    2. 'ary' → logprob: -1.8113809823989868
    3. '       ' → logprob: -2.3113808631896973
    4. '   ' → logprob: -2.8113808631896973
    5. 'itr' → logprob: -2.8113808631896973
    6. 'age' → logprob: -3.3113808631896973
    7. 'bitr' → logprob: -3.3113808631896973
    8. 's' → logprob: -3.6863808631896973
    9. '```' → logprob: -3.9363808631896973
    10. 'bitrary' → logprob: -4.186380863189697

Token 124: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017304863780736923
    2. ' ,' → logprob: -4.14230489730835
    3. '       ' → logprob: -7.26730489730835
    4. ',
' → logprob: -8.642304420471191
    5. 'self' → logprob: -8.892304420471191
    6. '<|end|>' → logprob: -9.892304420471191
    7. ',self' → logprob: -10.267304420471191
    8. ' and' → logprob: -10.892304420471191
    9. ' s' → logprob: -10.892304420471191
    10. '        ' → logprob: -10.892304420471191

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1027311384677887
    2. '        ' → logprob: -2.602731227874756
    3. ' ' → logprob: -4.352731227874756
    4. ' the' → logprob: -6.102731227874756
    5. ' we' → logprob: -6.227731227874756
    6. '<|end|>' → logprob: -6.477731227874756
    7. ' if' → logprob: -6.727731227874756
    8. '#' → logprob: -7.727731227874756
    9. '    ' → logprob: -7.852731227874756
    10. ' that' → logprob: -7.977731227874756

Token 126: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09786222130060196
    2. ' if' → logprob: -3.9728622436523438
    3. ' we' → logprob: -4.222862243652344
    4. '#' (adapté à ' #') → logprob: -4.347862243652344
    5. 'we' → logprob: -4.347862243652344
    6. ' the' → logprob: -4.722862243652344
    7. ' #' → logprob: -5.347862243652344
    8. '        ' → logprob: -5.722862243652344
    9. 'if' → logprob: -5.847862243652344
    10. 'result' → logprob: -5.847862243652344

Token 127: ' just' (ID: 1327)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1962406635284424
    2. ' return' → logprob: -1.3212406635284424
    3. 'return' → logprob: -2.0712406635284424
    4. ' if' → logprob: -2.3212406635284424
    5. '#' → logprob: -3.0712406635284424
    6. ' we' → logprob: -3.3212406635284424
    7. ' the' → logprob: -3.4462406635284424
    8. ' for' → logprob: -3.9462406635284424
    9. 'we' → logprob: -4.321240425109863
    10. ' #' → logprob: -4.571240425109863

Token 128: ' sort' (ID: 4506)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.14311029016971588
    2. ' check' → logprob: -3.3931102752685547
    3. ' compare' → logprob: -3.7681102752685547
    4. 'count' → logprob: -3.8931102752685547
    5. ' consider' → logprob: -4.143110275268555
    6. ' calculate' → logprob: -4.268110275268555
    7. ' need' → logprob: -4.518110275268555
    8. ' sum' → logprob: -5.268110275268555
    9. ' compute' → logprob: -5.643110275268555
    10. ' use' → logprob: -7.018110275268555

Token 129: ' s' (ID: 265)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03245050460100174
    2. '(' → logprob: -3.7824504375457764
    3. 's' → logprob: -5.7824506759643555
    4. '<|end|>' → logprob: -6.2824506759643555
    5. '(s' → logprob: -6.4074506759643555
    6. 'self' → logprob: -6.5324506759643555
    7. ' self' → logprob: -7.4074506759643555
    8. '()' → logprob: -8.657450675964355
    9. '(
' → logprob: -9.532450675964355
    10. ' (' → logprob: -9.782450675964355

Token 130: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9083057045936584
    2. '()' → logprob: -1.1583056449890137
    3. ')' → logprob: -1.9083056449890137
    4. ',' → logprob: -3.5333056449890137
    5. ' and' → logprob: -3.6583056449890137
    6. '.' → logprob: -4.033305644989014
    7. '.sort' → logprob: -4.408305644989014
    8. '<|end|>' → logprob: -5.158305644989014
    9. '<|end|>' → logprob: -5.158305644989014
    10. '[:]' → logprob: -5.158305644989014

Token 131: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.022763056680560112
    2. 't' → logprob: -3.8977630138397217
    3. 'self' → logprob: -7.022763252258301
    4. ' self' → logprob: -7.147763252258301
    5. 's' → logprob: -8.3977632522583
    6. ' s' → logprob: -8.7727632522583
    7. ' ' → logprob: -10.1477632522583
    8. '<|end|>' → logprob: -10.3977632522583
    9. ' ' → logprob: -10.6477632522583
    10. 'sorted' → logprob: -11.5227632522583

Token 132: ''s' (ID: 885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7378756403923035
    2. '
' → logprob: -2.2378756999969482
    3. '<|end|>' → logprob: -2.2378756999969482
    4. ',' → logprob: -2.7378756999969482
    5. '<|end|>' → logprob: -3.1128756999969482
    6. '.' → logprob: -3.3628756999969482
    7. '()' → logprob: -3.4878756999969482
    8. '.sort' → logprob: -3.4878756999969482
    9. ')' → logprob: -3.9878756999969482
    10. '[' → logprob: -4.237875461578369

Token 133: ' frequency' (ID: 19813)
  Prédit: ' characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' characters' → logprob: -0.17720593512058258
    2. ' tokens' → logprob: -2.177206039428711
    3. 'tokens' → logprob: -4.302206039428711
    4. ' strings' → logprob: -4.427206039428711
    5. 's' → logprob: -5.427206039428711
    6. 'characters' → logprob: -5.802206039428711
    7. '_chars' → logprob: -6.052206039428711
    8. ' letters' → logprob: -6.177206039428711
    9. ' chars' → logprob: -6.302206039428711
    10. '<|end|>' → logprob: -6.552206039428711

Token 134: ' sets' (ID: 11982)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03685611113905907
    2. ')' → logprob: -4.036856174468994
    3. '_counts' → logprob: -5.411856174468994
    4. '_' → logprob: -5.786856174468994
    5. '<|end|>' → logprob: -5.911856174468994
    6. ' s' → logprob: -6.286856174468994
    7. ' ' → logprob: -6.411856174468994
    8. 'es' → logprob: -6.786856174468994
    9. '_counter' → logprob: -6.911856174468994
    10. '.' → logprob: -8.161855697631836

Token 135: ' match' (ID: 3981)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17835576832294464
    2. '        ' → logprob: -3.4283556938171387
    3. '()' → logprob: -3.6783556938171387
    4. ')' → logprob: -3.8033556938171387
    5. ',' → logprob: -3.8033556938171387
    6. '<|end|>' → logprob: -4.053355693817139
    7. '.' → logprob: -4.553355693817139
    8. '(' → logprob: -4.803355693817139
    9. 's' → logprob: -5.803355693817139
    10. '
' → logprob: -5.928355693817139

Token 136: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8609964847564697
    2. ',' → logprob: -1.2359964847564697
    3. ':' → logprob: -2.1109964847564697
    4. '.' → logprob: -3.1109964847564697
    5. '(' → logprob: -3.2359964847564697
    6. '   ' → logprob: -3.8609964847564697
    7. ' ' → logprob: -4.360996246337891
    8. '
' → logprob: -4.985996246337891
    9. '    ' → logprob: -5.110996246337891
    10. '        ' → logprob: -5.235996246337891

Token 137: ' minimize' (ID: 41776)
  Prédit: ' determine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' determine' → logprob: -1.6649165153503418
    2. 'get' → logprob: -2.289916515350342
    3. ' check' → logprob: -2.414916515350342
    4. 'count' → logprob: -2.914916515350342
    5. ' make' → logprob: -3.039916515350342
    6. ' achieve' → logprob: -3.164916515350342
    7. 'make' → logprob: -3.289916515350342
    8. 'check' → logprob: -3.414916515350342
    9. 'det' → logprob: -3.539916515350342
    10. ' ensure' → logprob: -3.539916515350342

Token 138: ' replacements' (ID: 92347)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5781950354576111
    2. '<|end|>' → logprob: -1.9531950950622559
    3. ' ' → logprob: -2.078195095062256
    4. '()' → logprob: -3.578195095062256
    5. ' replacements' → logprob: -3.578195095062256
    6. '       ' → logprob: -4.203195095062256
    7. ' tokens' → logprob: -4.328195095062256
    8. '    ' → logprob: -4.328195095062256
    9. 'the' → logprob: -4.328195095062256
    10. '<|end|>' → logprob: -4.328195095062256

Token 139: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10871178656816483
    2. '
' → logprob: -2.4837117195129395
    3. '        
' → logprob: -5.3587117195129395
    4. '<|end|>' → logprob: -5.3587117195129395
    5. '        ' → logprob: -6.1087117195129395
    6. ',' → logprob: -6.3587117195129395
    7. 's' → logprob: -7.1087117195129395
    8. '<|end|>' → logprob: -7.1087117195129395
    9. '()' → logprob: -7.2337117195129395
    10. 'def' → logprob: -7.2337117195129395

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02996349334716797
    2. '        
' → logprob: -4.779963493347168
    3. '<|end|>' → logprob: -5.029963493347168
    4. '
' → logprob: -5.154963493347168
    5. '        ' → logprob: -6.529963493347168
    6. ' 
' → logprob: -6.654963493347168
    7. '\' → logprob: -6.654963493347168
    8. '  
' → logprob: -6.779963493347168
    9. '    
' → logprob: -7.529963493347168
    10. ' ' → logprob: -7.529963493347168

Token 141: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24233637750148773
    2. '
' → logprob: -2.4923362731933594
    3. '        
' → logprob: -2.7423362731933594
    4. 's' (adapté à ' s') → logprob: -3.3673362731933594
    5. '        ' → logprob: -4.117336273193359
    6. ' s' → logprob: -5.367336273193359
    7. '  
' → logprob: -6.367336273193359
    8. 'frequency' → logprob: -6.367336273193359
    9. ' 
' → logprob: -6.492336273193359
    10. 'return' → logprob: -7.367336273193359

Token 142: '_freq' (ID: 51889)
  Prédit: '_freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_freq' → logprob: -0.22563409805297852
    2. '_counter' → logprob: -2.2256340980529785
    3. '_counts' → logprob: -2.7256340980529785
    4. '_count' → logprob: -3.8506340980529785
    5. '_' → logprob: -5.4756340980529785
    6. '_chars' → logprob: -6.6006340980529785
    7. '_sorted' → logprob: -7.6006340980529785
    8. '_f' → logprob: -7.9756340980529785
    9. '_frequency' → logprob: -7.9756340980529785
    10. '_list' → logprob: -8.47563362121582

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03412255272269249
    2. '=' → logprob: -3.4091224670410156
    3. ',' → logprob: -8.034122467041016
    4. ' ' → logprob: -9.659122467041016
    5. 's' → logprob: -10.534122467041016
    6. ')' → logprob: -11.159122467041016
    7. '   ' → logprob: -11.659122467041016
    8. '  ' → logprob: -11.659122467041016
    9. ':' → logprob: -11.784122467041016
    10. '_' → logprob: -12.159122467041016

Token 144: ' Frequency' (ID: 79273)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.02649594284594059
    2. ' defaultdict' → logprob: -3.651495933532715
    3. ' default' → logprob: -9.401495933532715
    4. '{' → logprob: -9.526495933532715
    5. '   ' → logprob: -11.776495933532715
    6. '[' → logprob: -11.901495933532715
    7. '.default' → logprob: -12.151495933532715
    8. ' ' → logprob: -12.526495933532715
    9. '(default' → logprob: -12.526495933532715
    10. '"default' → logprob: -12.901495933532715

Token 145: 'Profile' (ID: 9120)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.0015907963970676064
    2. 'Dict' → logprob: -7.251590728759766
    3. 'default' → logprob: -8.626590728759766
    4. ' Counter' → logprob: -8.626590728759766
    5. ' defaultdict' → logprob: -9.126590728759766
    6. '(default' → logprob: -9.251590728759766
    7. '.Counter' → logprob: -9.876590728759766
    8. 'Analyzer' → logprob: -10.001590728759766
    9. '(C' → logprob: -10.126590728759766
    10. 's' → logprob: -10.501590728759766

Token 146: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003037843620404601
    2. '(' → logprob: -5.878037929534912
    3. '()' → logprob: -9.003037452697754
    4. '(default' → logprob: -10.378037452697754
    5. '({' → logprob: -11.128037452697754
    6. 'self' → logprob: -11.253037452697754
    7. '([' → logprob: -11.753037452697754
    8. '(len' → logprob: -11.753037452697754
    9. '(dict' → logprob: -11.753037452697754
    10. '(s' → logprob: -12.003037452697754

Token 147: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.0015423574950546026
    2. 's' → logprob: -7.001542568206787
    3. '.' → logprob: -7.501542568206787
    4. ' .' → logprob: -9.501542091369629
    5. ').' → logprob: -13.376542091369629
    6. '.t' → logprob: -14.251542091369629
    7. '.length' → logprob: -14.626542091369629
    8. ' s' → logprob: -15.626542091369629
    9. '_s' → logprob: -15.876542091369629
    10. ' ' → logprob: -16.251543045043945

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001212614355608821
    2. ' )' → logprob: -6.8762125968933105
    3. ').' → logprob: -8.876213073730469
    4. ')
' → logprob: -10.751213073730469
    5. ' ' → logprob: -11.751213073730469
    6. '())' → logprob: -13.126213073730469
    7. '))' → logprob: -13.626213073730469
    8. ',' → logprob: -14.251213073730469
    9. '')' → logprob: -14.251213073730469
    10. '.' → logprob: -14.501213073730469

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1979835331439972
    2. '
' → logprob: -2.822983503341675
    3. '<|end|>' → logprob: -2.947983503341675
    4. '.' → logprob: -3.822983503341675
    5. '()' → logprob: -4.947983741760254
    6. ')' → logprob: -5.072983741760254
    7. '        
' → logprob: -5.197983741760254
    8. 't' → logprob: -5.322983741760254
    9. '<|end|>' → logprob: -5.822983741760254
    10. '        ' → logprob: -5.947983741760254

Token 150: ' t' (ID: 260)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9174925088882446
    2. ' t' → logprob: -1.1674925088882446
    3. 't' (adapté à ' t') → logprob: -1.2924925088882446
    4. '        ' → logprob: -5.917492389678955
    5. '        
' → logprob: -6.042492389678955
    6. '
' → logprob: -6.167492389678955
    7. ' 
' → logprob: -6.167492389678955
    8. '.t' → logprob: -6.792492389678955
    9. '   ' → logprob: -7.042492389678955
    10. ' ' → logprob: -7.042492389678955

Token 151: '_freq' (ID: 51889)
  Prédit: '_freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_freq' → logprob: -0.00012570773833431304
    2. '_' → logprob: -9.125125885009766
    3. ' _' → logprob: -12.000125885009766
    4. '_FREQ' → logprob: -12.750125885009766
    5. 'Freq' → logprob: -12.875125885009766
    6. '_f' → logprob: -13.375125885009766
    7. ' =' → logprob: -13.625125885009766
    8. '._' → logprob: -13.750125885009766
    9. '_frequency' → logprob: -14.500125885009766
    10. '=_' → logprob: -15.250125885009766

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133643567562103
    2. '=' → logprob: -1.3133643865585327
    3. ')' → logprob: -9.313364028930664
    4. ' ' → logprob: -12.188364028930664
    5. '.' → logprob: -13.813364028930664
    6. '   ' → logprob: -13.813364028930664
    7. '[' → logprob: -14.313364028930664
    8. ' )' → logprob: -14.688364028930664
    9. '  ' → logprob: -14.813364028930664
    10. ':' → logprob: -14.938364028930664

Token 153: ' Frequency' (ID: 79273)
  Prédit: 'Frequency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Frequency' → logprob: -0.048595547676086426
    2. ' Frequency' → logprob: -3.048595428466797
    3. '(F' → logprob: -12.548595428466797
    4. ' ' → logprob: -14.173595428466797
    5. '       ' → logprob: -14.173595428466797
    6. 'F' → logprob: -14.298595428466797
    7. '_frequency' → logprob: -14.548595428466797
    8. ' frequency' → logprob: -14.548595428466797
    9. 'Freq' → logprob: -15.048595428466797
    10. '   ' → logprob: -15.173595428466797

Token 154: 'Profile' (ID: 9120)
  Prédit: 'Profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Profile' → logprob: -8.77627644513268e-06
    2. 'Frequency' → logprob: -11.875008583068848
    3. '(Profile' → logprob: -14.750008583068848
    4. '_Profile' → logprob: -14.875008583068848
    5. 'profile' → logprob: -15.000008583068848
    6. ' Profile' → logprob: -15.875008583068848
    7. '_profile' → logprob: -15.875008583068848
    8. 'Profiles' → logprob: -16.250009536743164
    9. 'Freq' → logprob: -16.625009536743164
    10. '.Profile' → logprob: -17.250009536743164

Token 155: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002991160727106035
    2. '(' → logprob: -8.125299453735352
    3. '(
' → logprob: -13.500299453735352
    4. ' (' → logprob: -14.000299453735352
    5. 'self' → logprob: -14.000299453735352
    6. '(s' → logprob: -17.12529945373535
    7. ' self' → logprob: -17.50029945373535
    8. ')' → logprob: -18.00029945373535
    9. '	self' → logprob: -18.00029945373535
    10. '(this' → logprob: -18.50029945373535

Token 156: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -1.0921942703134846e-05
    2. '.' → logprob: -12.00001049041748
    3. '.s' → logprob: -13.25001049041748
    4. 't' → logprob: -13.50001049041748
    5. ' .' → logprob: -14.25001049041748
    6. ').' → logprob: -14.75001049041748
    7. ')' → logprob: -15.50001049041748
    8. '	t' → logprob: -17.000011444091797
    9. '   ' → logprob: -17.250011444091797
    10. 'self' → logprob: -17.375011444091797

Token 157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.745069499127567e-05
    2. ')
' → logprob: -9.62508773803711
    3. '       ' → logprob: -11.50008773803711
    4. ' )' → logprob: -11.62508773803711
    5. '())' → logprob: -14.75008773803711
    6. ')

' → logprob: -15.12508773803711
    7. ')
' → logprob: -15.37508773803711
    8. ')`' → logprob: -15.37508773803711
    9. '))' → logprob: -15.50008773803711
    10. ').' → logprob: -15.50008773803711

Token 158: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.049150560051202774
    2. '<|end|>' → logprob: -3.7991504669189453
    3. '       ' → logprob: -3.9241504669189453
    4. '        
' → logprob: -5.424150466918945
    5. '  
' → logprob: -7.549150466918945
    6. '<|end|>' → logprob: -8.424150466918945
    7. ' 
' → logprob: -8.549150466918945
    8. '    
' → logprob: -9.299150466918945
    9. '        ' → logprob: -9.424150466918945
    10. '
' → logprob: -9.549150466918945

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03511149063706398
    2. 'result' → logprob: -4.410111427307129
    3. ' if' → logprob: -4.785111427307129
    4. ' result' → logprob: -5.785111427307129
    5. 'if' → logprob: -5.910111427307129
    6. 'diff' → logprob: -6.410111427307129
    7. ' replacements' → logprob: -7.160111427307129
    8. 'return' → logprob: -7.285111427307129
    9. 'total' → logprob: -7.535111427307129
    10. 'count' → logprob: -7.660111427307129

Token 160: ' #' (ID: 1069)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.0134360790252686
    2. 'if' → logprob: -1.2634360790252686
    3. 'total' → logprob: -1.5134360790252686
    4. 'result' → logprob: -3.6384360790252686
    5. 'min' → logprob: -3.8884360790252686
    6. 'for' → logprob: -3.8884360790252686
    7. 'replacement' → logprob: -4.388436317443848
    8. '       ' → logprob: -4.513436317443848
    9. 'changes' → logprob: -5.263436317443848
    10. 'diff' → logprob: -5.263436317443848

Token 161: ' Find' (ID: 9764)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.1297497749328613
    2. 'total' → logprob: -1.2547497749328613
    3. 'if' → logprob: -2.0047497749328613
    4. 'min' → logprob: -3.2547497749328613
    5. ' replacements' → logprob: -3.2547497749328613
    6. 'replacement' → logprob: -3.2547497749328613
    7. 'result' → logprob: -3.3797497749328613
    8. '#' → logprob: -4.004749774932861
    9. ' total' → logprob: -4.129749774932861
    10. 'cost' → logprob: -4.629749774932861

Token 162: ' which' (ID: 1118)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8272313475608826
    2. ' minimal' → logprob: -0.8272313475608826
    3. ' total' → logprob: -3.3272314071655273
    4. ' minimum' → logprob: -3.4522314071655273
    5. ' min' → logprob: -4.202231407165527
    6. ' replacements' → logprob: -4.202231407165527
    7. ' sum' → logprob: -5.327231407165527
    8. 'the' → logprob: -6.077231407165527
    9. 'minimal' → logprob: -6.077231407165527
    10. 'min' → logprob: -6.202231407165527

Token 163: ' characters' (ID: 9862)
  Prédit: ' characters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' characters' → logprob: -0.1141132116317749
    2. 'characters' → logprob: -2.9891133308410645
    3. 'chars' → logprob: -3.8641133308410645
    4. ' chars' → logprob: -4.4891133308410645
    5. ' letters' → logprob: -4.4891133308410645
    6. '_chars' → logprob: -5.2391133308410645
    7. 'tokens' → logprob: -6.4891133308410645
    8. '_char' → logprob: -6.4891133308410645
    9. ' tokens' → logprob: -6.4891133308410645
    10. ' keys' → logprob: -7.1141133308410645

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4752970039844513
    2. ' are' → logprob: -1.600296974182129
    3. ' need' → logprob: -2.725296974182129
    4. ' can' → logprob: -3.225296974182129
    5. ' to' → logprob: -3.475296974182129
    6. 'in' → logprob: -4.600296974182129
    7. ' have' → logprob: -4.975296974182129
    8. 'need' → logprob: -5.600296974182129
    9. 'are' → logprob: -5.850296974182129
    10. ' appear' → logprob: -5.975296974182129

Token 165: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7943695187568665
    2. ' t' → logprob: -1.7943694591522217
    3. 'self' → logprob: -1.7943694591522217
    4. 's' → logprob: -2.2943694591522217
    5. ' self' → logprob: -2.6693694591522217
    6. 't' → logprob: -3.2943694591522217
    7. 'range' → logprob: -6.044369697570801
    8. ' range' → logprob: -6.169369697570801
    9. ' the' → logprob: -6.294369697570801
    10. 'set' → logprob: -7.669369697570801

Token 166: ' correspond' (ID: 11095)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.9685936570167542
    2. ' have' → logprob: -1.2185935974121094
    3. ' and' → logprob: -1.7185935974121094
    4. ' need' → logprob: -2.3435935974121094
    5. '_freq' → logprob: -4.968593597412109
    6. ' can' → logprob: -5.218593597412109
    7. ' to' → logprob: -5.468593597412109
    8. '       ' → logprob: -5.468593597412109
    9. ',' → logprob: -5.718593597412109
    10. 'and' → logprob: -5.843593597412109

Token 167: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.009680893272161484
    2. 'to' → logprob: -4.88468074798584
    3. '<|end|>' → logprob: -6.88468074798584
    4. '<|end|>' → logprob: -7.25968074798584
    5. '    ' → logprob: -8.75968074798584
    6. ' in' → logprob: -9.88468074798584
    7. '        ' → logprob: -10.63468074798584
    8. 's' → logprob: -10.88468074798584
    9. ' and' → logprob: -11.38468074798584
    10. 'ingly' → logprob: -11.38468074798584

Token 168: ' which' (ID: 1118)
  Prédit: ' which'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.23700298368930817
    2. ' t' → logprob: -2.4870030879974365
    3. ' characters' → logprob: -2.4870030879974365
    4. 'which' → logprob: -3.8620030879974365
    5. 't' → logprob: -4.487002849578857
    6. ' those' → logprob: -5.112002849578857
    7. 'characters' → logprob: -5.737002849578857
    8. ' the' → logprob: -6.737002849578857
    9. 'those' → logprob: -8.112003326416016
    10. ' s' → logprob: -8.237003326416016

Token 169: ' characters' (ID: 9862)
  Prédit: ' characters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' characters' → logprob: -0.07824467122554779
    2. 'characters' → logprob: -2.828244686126709
    3. ' in' → logprob: -4.828244686126709
    4. ' ones' → logprob: -5.578244686126709
    5. '<|end|>' → logprob: -5.703244686126709
    6. ' to' → logprob: -8.45324420928955
    7. ' tokens' → logprob: -8.57824420928955
    8. 'tokens' → logprob: -8.70324420928955
    9. 's' → logprob: -9.45324420928955
    10. '<|end|>' → logprob: -9.57824420928955

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1126909926533699
    2. '<|end|>' → logprob: -2.6126909255981445
    3. ' to' → logprob: -3.6126909255981445
    4. '<|end|>' → logprob: -5.4876909255981445
    5. 'to' → logprob: -7.1126909255981445
    6. 'in' → logprob: -7.4876909255981445
    7. ',' → logprob: -8.362690925598145
    8. ' based' → logprob: -9.487690925598145
    9. 's' → logprob: -9.737690925598145
    10. '       ' → logprob: -9.987690925598145

Token 171: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.4937727749347687
    2. 't' → logprob: -0.9937727451324463
    3. 'self' → logprob: -3.9937727451324463
    4. ' self' → logprob: -6.868772983551025
    5. ' the' → logprob: -11.493772506713867
    6. 's' → logprob: -12.493772506713867
    7. '`t' → logprob: -12.493772506713867
    8. 'set' → logprob: -13.056272506713867
    9. 'the' → logprob: -13.618772506713867
    10. '
' → logprob: -13.806272506713867

Token 172: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3523448705673218
    2. ' ' → logprob: -1.6023448705673218
    3. ',' → logprob: -2.3523449897766113
    4. '<|end|>' → logprob: -2.3523449897766113
    5. '        
' → logprob: -2.4773449897766113
    6. '        ' → logprob: -2.4773449897766113
    7. '
' → logprob: -2.7273449897766113
    8. '.' → logprob: -2.9773449897766113
    9. ':' → logprob: -4.102344989776611
    10. '<|end|>' → logprob: -4.602344989776611

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1202210858464241
    2. '        ' → logprob: -2.9952211380004883
    3. ',' → logprob: -3.4952211380004883
    4. '        
' → logprob: -3.9952211380004883
    5. '.' → logprob: -5.745221138000488
    6. '<|end|>' → logprob: -5.870221138000488
    7. ' ' → logprob: -6.370221138000488
    8. ':' → logprob: -6.870221138000488
    9. ' to' → logprob: -7.120221138000488
    10. '#' → logprob: -7.495221138000488

Token 174: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5308637022972107
    2. ' replacements' → logprob: -2.0308637619018555
    3. 'result' → logprob: -2.6558637619018555
    4. 'mapping' → logprob: -3.2808637619018555
    5. ' mapping' → logprob: -3.6558637619018555
    6. ' result' → logprob: -3.6558637619018555
    7. '        
' → logprob: -3.9058637619018555
    8. ' #' → logprob: -4.4058637619018555
    9. '#' (adapté à ' #') → logprob: -4.5308637619018555
    10. 'replacement' → logprob: -4.6558637619018555

Token 175: ' frequency' (ID: 19813)
  Prédit: ' replacements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' replacements' → logprob: -0.8774857521057129
    2. ' mapping' → logprob: -1.252485752105713
    3. 'mapping' → logprob: -2.752485752105713
    4. '       ' → logprob: -3.002485752105713
    5. ' mappings' → logprob: -3.627485752105713
    6. ' replacement' → logprob: -4.002485752105713
    7. ' result' → logprob: -4.002485752105713
    8. 'replacement' → logprob: -4.252485752105713
    9. ' for' → logprob: -4.502485752105713
    10. ' possible' → logprob: -4.502485752105713

Token 176: '-wise' (ID: 85729)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9344281554222107
    2. '_map' → logprob: -1.5594282150268555
    3. '_diff' → logprob: -1.9344282150268555
    4. '_s' → logprob: -2.4344282150268555
    5. '_mapping' → logprob: -3.5594282150268555
    6. '_profile' → logprob: -3.8094282150268555
    7. '_sets' → logprob: -3.8094282150268555
    8. '_' → logprob: -3.9344282150268555
    9. 'diff' → logprob: -4.5594282150268555
    10. '_matches' → logprob: -4.5594282150268555

Token 177: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7320000529289246
    2. '        
' → logprob: -1.7320001125335693
    3. '        ' → logprob: -2.1070001125335693
    4. '
' → logprob: -3.1070001125335693
    5. '.' → logprob: -3.2320001125335693
    6. ',' → logprob: -3.2320001125335693
    7. '<|end|>' → logprob: -3.6070001125335693
    8. ' ' → logprob: -3.7320001125335693
    9. ' 
' → logprob: -4.48199987411499
    10. '<|end|>' → logprob: -5.23199987411499

Token 178: ' optimal' (ID: 24174)
  Prédit: ' sorting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sorting' → logprob: -0.039694856852293015
    2. 'sorting' → logprob: -3.4146947860717773
    3. ' matching' → logprob: -5.914694786071777
    4. ' rearr' → logprob: -6.414694786071777
    5. ' s' → logprob: -7.789694786071777
    6. 's' → logprob: -7.914694786071777
    7. ' aligning' → logprob: -8.414694786071777
    8. 'matching' → logprob: -9.289694786071777
    9. ' frequency' → logprob: -9.664694786071777
    10. 'sorted' → logprob: -9.789694786071777

Token 179: ' rearr' (ID: 98785)
  Prédit: ' matching'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matching' → logprob: -0.9382186532020569
    2. ' rearr' → logprob: -1.438218593597412
    3. ' sorting' → logprob: -1.938218593597412
    4. 'matching' → logprob: -2.438218593597412
    5. 'sorting' → logprob: -2.813218593597412
    6. 're' → logprob: -2.938218593597412
    7. 'mapping' → logprob: -4.313218593597412
    8. ' mapping' → logprob: -5.438218593597412
    9. ' re' → logprob: -6.313218593597412
    10. ' alignment' → logprob: -6.313218593597412

Token 180: 'angement' (ID: 58322)
  Prédit: 'angement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angement' → logprob: -0.0032095611095428467
    2. '   ' → logprob: -7.253209590911865
    3. 'anging' → logprob: -7.253209590911865
    4. 'ang' → logprob: -7.878209590911865
    5. 'angements' → logprob: -8.003209114074707
    6. 'ange' → logprob: -8.003209114074707
    7. '       ' → logprob: -8.753209114074707
    8. 'gement' → logprob: -9.003209114074707
    9. '```' → logprob: -9.878209114074707
    10. 'ement' → logprob: -10.128209114074707

Token 181: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4904273450374603
    2. '
' → logprob: -1.7404273748397827
    3. '        
' → logprob: -1.7404273748397827
    4. '<|end|>' → logprob: -4.115427494049072
    5. ',' → logprob: -5.365427494049072
    6. '        ' → logprob: -5.865427494049072
    7. '.' → logprob: -6.115427494049072
    8. '<|end|>' → logprob: -6.365427494049072
    9. '#' → logprob: -6.490427494049072
    10. 's' → logprob: -6.615427494049072

Token 182: 'only' (ID: 7393)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4404470920562744
    2. '#' → logprob: -1.8154470920562744
    3. ')
' → logprob: -2.8154470920562744
    4. '       ' → logprob: -3.8154470920562744
    5. ' )' → logprob: -3.9404470920562744
    6. 's' → logprob: -5.065446853637695
    7. ' s' → logprob: -5.440446853637695
    8. ' for' → logprob: -5.565446853637695
    9. ' assuming' → logprob: -5.565446853637695
    10. 'self' → logprob: -5.690446853637695

Token 183: ' counts' (ID: 28991)
  Prédit: ' replacements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' replacements' → logprob: -0.9873320460319519
    2. ' considering' → logprob: -2.1123321056365967
    3. 'replacement' → logprob: -2.9873321056365967
    4. ')' → logprob: -2.9873321056365967
    5. ' if' → logprob: -3.1123321056365967
    6. 'consider' → logprob: -3.2373321056365967
    7. 'if' → logprob: -3.2373321056365967
    8. ' replacing' → logprob: -3.3623321056365967
    9. ' consider' → logprob: -3.8623321056365967
    10. ' replacement' → logprob: -3.8623321056365967

Token 184: ' per' (ID: 777)
  Prédit: ' replacements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' replacements' → logprob: -0.912469744682312
    2. ')' → logprob: -1.412469744682312
    3. ' the' → logprob: -2.2874698638916016
    4. ' of' → logprob: -2.5374698638916016
    5. ' for' → logprob: -3.1624698638916016
    6. ' unique' → logprob: -3.5374698638916016
    7. ' )' → logprob: -3.7874698638916016
    8. ' necessary' → logprob: -4.537469863891602
    9. ' self' → logprob: -4.912469863891602
    10. ' as' → logprob: -5.037469863891602

Token 185: ' letter' (ID: 10263)
  Prédit: ' character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.40884238481521606
    2. 'character' → logprob: -1.1588423252105713
    3. 'char' → logprob: -4.28384256362915
    4. ' frequency' → logprob: -6.15884256362915
    5. 'frequency' → logprob: -6.28384256362915
    6. ' char' → logprob: -7.53384256362915
    7. ' characters' → logprob: -7.53384256362915
    8. 'characters' → logprob: -7.65884256362915
    9. 'class' → logprob: -8.033842086791992
    10. 'token' → logprob: -8.283842086791992

Token 186: ' matter' (ID: 7165)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15189261734485626
    2. ' )' → logprob: -2.40189266204834
    3. ').' → logprob: -3.77689266204834
    4. ' match' → logprob: -4.65189266204834
    5. 'match' → logprob: -5.40189266204834
    6. 's' → logprob: -5.52689266204834
    7. ',' → logprob: -5.77689266204834
    8. ' are' → logprob: -6.77689266204834
    9. '       ' → logprob: -6.90189266204834
    10. ' ).' → logprob: -7.15189266204834

Token 187: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04157410189509392
    2. ' )' → logprob: -3.916574001312256
    3. ').' → logprob: -4.416574001312256
    4. '       ' → logprob: -5.166574001312256
    5. ',' → logprob: -6.166574001312256
    6. '):' → logprob: -8.666574478149414
    7. ' ).' → logprob: -8.666574478149414
    8. '.' → logprob: -9.291574478149414
    9. ')
' → logprob: -9.291574478149414
    10. '),' → logprob: -9.416574478149414

Token 188: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1312297284603119
    2. '        
' → logprob: -2.5062296390533447
    3. '        ' → logprob: -3.6312296390533447
    4. ',' → logprob: -6.006229877471924
    5. '.' → logprob: -6.006229877471924
    6. '<|end|>' → logprob: -6.256229877471924
    7. ' ' → logprob: -6.381229877471924
    8. ')' → logprob: -6.506229877471924
    9. '
' → logprob: -7.256229877471924
    10. '    ' → logprob: -7.631229877471924

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009203456342220306
    2. '        
' → logprob: -5.1342034339904785
    3. '        ' → logprob: -7.5092034339904785
    4. 'result' → logprob: -7.8842034339904785
    5. '#' → logprob: -8.134203910827637
    6. ' result' → logprob: -8.384203910827637
    7. 'mapping' → logprob: -8.759203910827637
    8. ' mapping' → logprob: -9.009203910827637
    9. '
' → logprob: -9.259203910827637
    10. ' replacements' → logprob: -9.259203910827637

Token 190: ' #' (ID: 1069)
  Prédit: 'mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mapping' → logprob: -0.34797635674476624
    2. ' mapping' → logprob: -2.0979764461517334
    3. 'replacement' → logprob: -2.7229764461517334
    4. ' replacements' → logprob: -4.222976207733154
    5. '       ' → logprob: -4.347976207733154
    6. 'result' → logprob: -4.722976207733154
    7. ' replacement' → logprob: -4.847976207733154
    8. '#' (adapté à ' #') → logprob: -4.972976207733154
    9. 'possible' → logprob: -5.347976207733154
    10. 're' → logprob: -5.472976207733154

Token 191: ' Construct' (ID: 36230)
  Prédit: 'mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mapping' → logprob: -1.48195219039917
    2. 'possible' → logprob: -1.85695219039917
    3. ' mapping' → logprob: -2.23195219039917
    4. '#' → logprob: -2.35695219039917
    5. 'replacement' → logprob: -2.60695219039917
    6. ' possible' → logprob: -3.10695219039917
    7. 'matches' → logprob: -3.23195219039917
    8. 'for' → logprob: -4.23195219039917
    9. ' min' → logprob: -4.23195219039917
    10. ' replacements' → logprob: -4.23195219039917

Token 192: ' character' (ID: 5855)
  Prédit: ' mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mapping' → logprob: -1.076172947883606
    2. 'mapping' → logprob: -1.326172947883606
    3. ' a' → logprob: -2.0761728286743164
    4. ' frequency' → logprob: -3.0761728286743164
    5. '       ' → logprob: -3.3261728286743164
    6. ' cost' → logprob: -3.5761728286743164
    7. 'match' → logprob: -3.9511728286743164
    8. ' the' → logprob: -4.076172828674316
    9. 'replacement' → logprob: -4.076172828674316
    10. ' replacement' → logprob: -4.701172828674316

Token 193: ' map' (ID: 4014)
  Prédit: '_mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mapping' → logprob: -1.0518592596054077
    2. ' mapping' → logprob: -1.4268592596054077
    3. ' mappings' → logprob: -2.4268593788146973
    4. 'mapping' → logprob: -2.6768593788146973
    5. '_m' → logprob: -2.9268593788146973
    6. '_map' → logprob: -3.5518593788146973
    7. ' frequency' → logprob: -3.6768593788146973
    8. '_count' → logprob: -3.8018593788146973
    9. '_counts' → logprob: -3.9268593788146973
    10. 'm' → logprob: -4.051859378814697

Token 194: ' edges' (ID: 22569)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10386334359645844
    2. '       ' → logprob: -2.85386323928833
    3. '=' → logprob: -4.10386323928833
    4. 's' → logprob: -4.85386323928833
    5. ':' → logprob: -5.35386323928833
    6. ' for' → logprob: -6.22886323928833
    7. '_map' → logprob: -6.72886323928833
    8. '(self' → logprob: -6.85386323928833
    9. ',' → logprob: -7.22886323928833
    10. '_mapping' → logprob: -7.35386323928833

Token 195: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24495723843574524
    2. ' =' → logprob: -2.369957208633423
    3. '<|end|>' → logprob: -2.494957208633423
    4. ':' → logprob: -4.369957447052002
    5. '<|end|>' → logprob: -5.119957447052002
    6. '        
' → logprob: -5.619957447052002
    7. ' for' → logprob: -5.744957447052002
    8. '        ' → logprob: -5.869957447052002
    9. '[' → logprob: -5.994957447052002
    10. ',' → logprob: -6.244957447052002

Token 196: ' frequencies' (ID: 64338)
  Prédit: ' comparing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comparing' → logprob: -0.3592205345630646
    2. ' matching' → logprob: -2.484220504760742
    3. ' self' → logprob: -3.359220504760742
    4. 'self' → logprob: -3.609220504760742
    5. ' iter' → logprob: -3.609220504760742
    6. ' adding' → logprob: -3.609220504760742
    7. ' frequency' → logprob: -3.859220504760742
    8. ' character' → logprob: -5.234220504760742
    9. ' analyzing' → logprob: -5.234220504760742
    10. ' the' → logprob: -5.359220504760742

Token 197: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31070783734321594
    2. '<|end|>' → logprob: -1.6857078075408936
    3. '        ' → logprob: -3.5607078075408936
    4. '        
' → logprob: -3.6857078075408936
    5. '<|end|>' → logprob: -4.685708045959473
    6. ':' → logprob: -5.060708045959473
    7. '.' → logprob: -5.810708045959473
    8. ',' → logprob: -6.060708045959473
    9. ' =' → logprob: -6.435708045959473
    10. ' ' → logprob: -6.685708045959473

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041947174817323685
    2. ' for' → logprob: -3.29194712638855
    3. 'for' → logprob: -6.166947364807129
    4. '        
' → logprob: -6.916947364807129
    5. ' freq' → logprob: -9.041947364807129
    6. '        ' → logprob: -9.166947364807129
    7. '#' → logprob: -10.166947364807129
    8. ' self' → logprob: -10.166947364807129
    9. '      ' → logprob: -10.416947364807129
    10. ' #' → logprob: -10.541947364807129

Token 199: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5922648310661316
    2. 'for' → logprob: -1.0922648906707764
    3. '       ' → logprob: -3.0922648906707764
    4. ' pass' → logprob: -3.3422648906707764
    5. ' s' → logprob: -5.342264652252197
    6. '#' (adapté à ' #') → logprob: -5.467264652252197
    7. ' freq' → logprob: -5.592264652252197
    8. 's' → logprob: -5.842264652252197
    9. 'pass' → logprob: -5.842264652252197
    10. 'mapping' → logprob: -6.592264652252197

Token 200: ' For' (ID: 2214)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27848005294799805
    2. 'for' → logprob: -2.528480052947998
    3. ' pass' → logprob: -2.528480052947998
    4. '       ' → logprob: -3.028480052947998
    5. ' freq' → logprob: -4.528480052947998
    6. ' s' → logprob: -5.153480052947998
    7. '#' → logprob: -5.778480052947998
    8. 'pass' → logprob: -5.903480052947998
    9. ' frequencies' → logprob: -6.278480052947998
    10. '        ' → logprob: -6.278480052947998

Token 201: ' each' (ID: 2454)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.28349992632865906
    2. ' char' → logprob: -2.2834999561309814
    3. ' ch' → logprob: -2.5334999561309814
    4. 'c' → logprob: -3.6584999561309814
    5. 'char' → logprob: -4.033499717712402
    6. ' s' → logprob: -4.533499717712402
    7. ' i' → logprob: -5.408499717712402
    8. 'ch' → logprob: -5.533499717712402
    9. 's' → logprob: -7.283499717712402
    10. ' freq' → logprob: -7.533499717712402

Token 202: ' letter' (ID: 10263)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7631311416625977
    2. ' char' → logprob: -1.3881311416625977
    3. ' ch' → logprob: -1.5131311416625977
    4. 'c' → logprob: -3.6381311416625977
    5. 'char' → logprob: -3.7631311416625977
    6. 'ch' → logprob: -5.013131141662598
    7. ' s' → logprob: -5.263131141662598
    8. ' i' → logprob: -6.638131141662598
    9. ' source' → logprob: -8.138131141662598
    10. 's' → logprob: -8.388131141662598

Token 203: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12303575873374939
    2. ',' → logprob: -2.8730356693267822
    3. ' ,' → logprob: -3.1230356693267822
    4. ' ' → logprob: -4.998035907745361
    5. ':' → logprob: -5.873035907745361
    6. 'in' → logprob: -5.873035907745361
    7. ' :' → logprob: -6.748035907745361
    8. ' s' → logprob: -8.123035430908203
    9. ' c' → logprob: -8.123035430908203
    10. '  ' → logprob: -8.873035430908203

Token 204: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08055984228849411
    2. ' self' → logprob: -2.580559730529785
    3. 'set' → logprob: -7.080559730529785
    4. ' set' → logprob: -7.580559730529785
    5. 's' → logprob: -9.205559730529785
    6. ' s' → logprob: -9.455559730529785
    7. ''s' → logprob: -10.205559730529785
    8. 'range' → logprob: -10.330559730529785
    9. ' range' → logprob: -11.205559730529785
    10. ''' → logprob: -11.455559730529785

Token 205: ' frequency' (ID: 19813)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20660023391246796
    2. ',' → logprob: -2.3316001892089844
    3. '       ' → logprob: -3.3316001892089844
    4. ' :' → logprob: -3.7066001892089844
    5. ' ,' → logprob: -4.831600189208984
    6. ':
' → logprob: -4.831600189208984
    7. ' in' → logprob: -5.956600189208984
    8. '):' → logprob: -6.456600189208984
    9. 'for' → logprob: -6.831600189208984
    10. '   ' → logprob: -6.831600189208984

Token 206: ' profile' (ID: 8855)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43640071153640747
    2. 's' → logprob: -2.4364006519317627
    3. '       ' → logprob: -2.4364006519317627
    4. ',' → logprob: -3.1864006519317627
    5. '.items' → logprob: -3.6864006519317627
    6. '.values' → logprob: -4.061400890350342
    7. '.' → logprob: -4.061400890350342
    8. '_counts' → logprob: -4.311400890350342
    9. '_items' → logprob: -4.686400890350342
    10. '.keys' → logprob: -4.811400890350342

Token 207: ' that' (ID: 484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.258110374212265
    2. ',' → logprob: -2.383110284805298
    3. '       ' → logprob: -2.633110284805298
    4. ' for' → logprob: -3.633110284805298
    5. 'for' → logprob: -4.508110523223877
    6. ':
' → logprob: -5.008110523223877
    7. ' ,' → logprob: -5.383110523223877
    8. '.items' → logprob: -5.633110523223877
    9. '.keys' → logprob: -5.758110523223877
    10. ' :' → logprob: -6.383110523223877

Token 208: ' has' (ID: 853)
  Prédit: ' has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.167986199259758
    2. ' appears' → logprob: -2.9179861545562744
    3. 'has' → logprob: -3.4179861545562744
    4. 'appe' → logprob: -3.7929861545562744
    5. 'exists' → logprob: -4.6679863929748535
    6. ' is' → logprob: -4.9179863929748535
    7. ' occurs' → logprob: -5.2929863929748535
    8. 's' → logprob: -5.4179863929748535
    9. ' exists' → logprob: -5.6679863929748535
    10. '<|end|>' → logprob: -5.9179863929748535

Token 209: ' frequency' (ID: 19813)
  Prédit: ' non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' non' → logprob: -1.2570229768753052
    2. ' a' → logprob: -1.3820229768753052
    3. 'non' → logprob: -2.2570228576660156
    4. ' s' → logprob: -2.3820228576660156
    5. 's' → logprob: -2.5070228576660156
    6. 'count' → logprob: -2.8820228576660156
    7. '>' → logprob: -3.3820228576660156
    8. ' positive' → logprob: -3.6320228576660156
    9. ' count' → logprob: -3.6320228576660156
    10. 'a' → logprob: -4.257022857666016

Token 210: ' f' (ID: 285)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.12080356478691101
    2. '>' → logprob: -2.2458035945892334
    3. ' greater' → logprob: -5.745803356170654
    4. 's' → logprob: -6.870803356170654
    5. ' in' → logprob: -7.120803356170654
    6. ' not' → logprob: -7.495803356170654
    7. 'greater' → logprob: -7.620803356170654
    8. ',' → logprob: -7.620803356170654
    9. ' more' → logprob: -8.370803833007812
    10. '   ' → logprob: -8.995803833007812

Token 211: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3804122507572174
    2. ':' → logprob: -1.630412220954895
    3. ' ,' → logprob: -3.1304123401641846
    4. 'requencies' → logprob: -4.3804121017456055
    5. '=' → logprob: -4.6304121017456055
    6. ' =' → logprob: -5.1304121017456055
    7. 'requency' → logprob: -5.1304121017456055
    8. 'or' → logprob: -5.1304121017456055
    9. ' :' → logprob: -5.5054121017456055
    10. ' ' → logprob: -5.6304121017456055

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24985754489898682
    2. '<|end|>' → logprob: -2.2498574256896973
    3. '#' → logprob: -2.9998574256896973
    4. '        ' → logprob: -3.9998574256896973
    5. ' #' → logprob: -4.874857425689697
    6. ' ' → logprob: -4.999857425689697
    7. '<|end|>' → logprob: -4.999857425689697
    8. '           ' → logprob: -5.499857425689697
    9. ' for' → logprob: -5.874857425689697
    10. '   ' → logprob: -6.249857425689697

Token 213: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.1082738637924194
    2. ' for' → logprob: -1.1082738637924194
    3. '       ' → logprob: -1.6082738637924194
    4. 'for' → logprob: -2.733273983001709
    5. ' #' → logprob: -2.983273983001709
    6. ' ' → logprob: -4.983273983001709
    7. '        ' → logprob: -5.108273983001709
    8. '           ' → logprob: -6.358273983001709
    9. ',' → logprob: -6.983273983001709
    10. ' ' → logprob: -6.983273983001709

Token 214: ' connect' (ID: 4837)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8745154738426208
    2. ' for' → logprob: -0.9995154738426208
    3. '#' → logprob: -1.6245155334472656
    4. '       ' → logprob: -4.124515533447266
    5. ' #' → logprob: -7.624515533447266
    6. 'if' → logprob: -8.249515533447266
    7. ' if' → logprob: -8.249515533447266
    8. 's' → logprob: -8.624515533447266
    9. 'self' → logprob: -9.499515533447266
    10. 'we' → logprob: -10.249515533447266

Token 215: ' it' (ID: 480)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9428694844245911
    2. ' the' → logprob: -1.4428694248199463
    3. ' self' → logprob: -1.9428694248199463
    4. 'self' → logprob: -2.6928694248199463
    5. 's' → logprob: -2.8178694248199463
    6. ' itself' → logprob: -4.067869663238525
    7. 'the' → logprob: -4.317869663238525
    8. ' that' → logprob: -4.817869663238525
    9. ' c' → logprob: -5.067869663238525
    10. ' ' → logprob: -5.192869663238525

Token 216: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.037443287670612335
    2. ' with' → logprob: -4.162443161010742
    3. ' in' → logprob: -4.912443161010742
    4. 's' → logprob: -6.287443161010742
    5. 'self' → logprob: -6.412443161010742
    6. '<|end|>' → logprob: -6.412443161010742
    7. '_to' → logprob: -6.537443161010742
    8. ' =' → logprob: -6.662443161010742
    9. ',' → logprob: -6.662443161010742
    10. ')' → logprob: -7.162443161010742

Token 217: ' letters' (ID: 18151)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.19392910599708557
    2. ' letters' → logprob: -2.5689291954040527
    3. ' all' → logprob: -3.1939291954040527
    4. 'each' → logprob: -3.1939291954040527
    5. ' every' → logprob: -5.193929195404053
    6. ' the' → logprob: -5.318929195404053
    7. 'letters' → logprob: -5.818929195404053
    8. 'all' → logprob: -6.068929195404053
    9. 'the' → logprob: -8.193928718566895
    10. ' any' → logprob: -8.193928718566895

Token 218: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04556627571582794
    2. 'in' → logprob: -3.5455663204193115
    3. '<|end|>' → logprob: -4.670566082000732
    4. '<|end|>' → logprob: -5.920566082000732
    5. ' with' → logprob: -7.045566082000732
    6. 'with' → logprob: -7.545566082000732
    7. '_in' → logprob: -7.795566082000732
    8. '       ' → logprob: -8.29556655883789
    9. ' ' → logprob: -8.29556655883789
    10. '        ' → logprob: -9.04556655883789

Token 219: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3160364329814911
    2. 't' → logprob: -1.3160364627838135
    3. 'self' → logprob: -6.066036224365234
    4. ' the' → logprob: -8.441036224365234
    5. ' self' → logprob: -8.941036224365234
    6. 'the' → logprob: -9.941036224365234
    7. '_t' → logprob: -11.691036224365234
    8. ' frequency' → logprob: -12.316036224365234
    9. '
' → logprob: -12.503536224365234
    10. '   ' → logprob: -12.503536224365234

Token 220: ' frequency' (ID: 19813)
  Prédit: '_freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_freq' → logprob: -0.0123185645788908
    2. '       ' → logprob: -5.5123186111450195
    3. 'that' → logprob: -6.2623186111450195
    4. 'with' → logprob: -6.3873186111450195
    5. ' that' → logprob: -6.8873186111450195
    6. 'frequency' → logprob: -7.2623186111450195
    7. 'freq' → logprob: -7.5123186111450195
    8. ')' → logprob: -8.26231861114502
    9. ' with' → logprob: -8.26231861114502
    10. '_frequency' → logprob: -8.26231861114502

Token 221: ' profile' (ID: 8855)
  Prédit: 'profile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profile' → logprob: -0.5306351184844971
    2. '_profile' → logprob: -1.030635118484497
    3. '       ' → logprob: -3.030635118484497
    4. ' profile' → logprob: -5.155634880065918
    5. '   ' → logprob: -9.155634880065918
    6. 'profiles' → logprob: -9.405634880065918
    7. '_profiles' → logprob: -9.530634880065918
    8. '
' → logprob: -9.530634880065918
    9. '           ' → logprob: -9.655634880065918
    10. 'Profile' → logprob: -9.655634880065918

Token 222: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.3055740296840668
    2. ' that' → logprob: -2.3055739402770996
    3. 'with' → logprob: -2.4305739402770996
    4. '       ' → logprob: -2.6805739402770996
    5. 'that' → logprob: -5.3055739402771
    6. '        ' → logprob: -7.9305739402771
    7. ',' → logprob: -8.055574417114258
    8. '        
' → logprob: -8.680574417114258
    9. ' for' → logprob: -8.680574417114258
    10. ' whose' → logprob: -8.930574417114258

Token 223: ' frequency' (ID: 19813)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4024183452129364
    2. 'the' → logprob: -1.7774183750152588
    3. ' frequency' → logprob: -2.152418375015259
    4. ' that' → logprob: -3.902418375015259
    5. 'frequency' → logprob: -3.902418375015259
    6. 'that' → logprob: -6.65241813659668
    7. ' f' → logprob: -6.90241813659668
    8. ' same' → logprob: -7.02741813659668
    9. 'f' → logprob: -7.02741813659668
    10. 'same' → logprob: -7.90241813659668

Token 224: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.04076574742794037
    2. 'f' → logprob: -3.2907657623291016
    3. ' equal' → logprob: -6.665765762329102
    4. ' ' → logprob: -7.415765762329102
    5. ' s' → logprob: -9.165765762329102
    6. ' =' → logprob: -9.415765762329102
    7. 's' → logprob: -9.415765762329102
    8. 'equal' → logprob: -9.540765762329102
    9. ' ' → logprob: -9.790765762329102
    10. '        ' → logprob: -10.040765762329102

Token 225: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25750932097435
    2. '.' → logprob: -2.507509231567383
    3. '        
' → logprob: -3.382509231567383
    4. '
' → logprob: -3.507509231567383
    5. ',' → logprob: -3.757509231567383
    6. ':' → logprob: -4.007509231567383
    7. 's' → logprob: -4.632509231567383
    8. '        ' → logprob: -4.882509231567383
    9. '<|end|>' → logprob: -5.632509231567383
    10. ')' → logprob: -5.882509231567383

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04061798378825188
    2. '        
' → logprob: -4.165617942810059
    3. '        ' → logprob: -4.415617942810059
    4. ' and' → logprob: -5.540617942810059
    5. '           ' → logprob: -5.915617942810059
    6. ' ' → logprob: -6.915617942810059
    7. '<|end|>' → logprob: -7.290617942810059
    8. ' with' → logprob: -7.665617942810059
    9. '.' → logprob: -7.915617942810059
    10. '#' → logprob: -7.915617942810059

Token 227: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6747934222221375
    2. '        
' → logprob: -1.6747934818267822
    3. ' with' → logprob: -3.0497934818267822
    4. ' and' → logprob: -3.1747934818267822
    5. ' but' → logprob: -3.1747934818267822
    6. '        ' → logprob: -3.4247934818267822
    7. '#' (adapté à ' #') → logprob: -3.6747934818267822
    8. 'with' → logprob: -3.7997934818267822
    9. '           ' → logprob: -4.174793243408203
    10. '    
' → logprob: -4.924793243408203

Token 228: ' because' (ID: 2236)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13612012565135956
    2. '        
' → logprob: -3.011120080947876
    3. '#' → logprob: -3.636120080947876
    4. ' and' → logprob: -4.261120319366455
    5. ' for' → logprob: -4.886120319366455
    6. ' with' → logprob: -5.261120319366455
    7. 'and' → logprob: -5.886120319366455
    8. '        ' → logprob: -5.886120319366455
    9. 'for' → logprob: -6.261120319366455
    10. 'with' → logprob: -6.386120319366455

Token 229: ' Jennifer' (ID: 45750)
  Prédit: ' there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' there' → logprob: -1.3923461437225342
    2. ' for' → logprob: -1.8923461437225342
    3. ' they' → logprob: -2.267346143722534
    4. ' we' → logprob: -2.517346143722534
    5. ' if' → logprob: -2.642346143722534
    6. ' the' → logprob: -2.767346143722534
    7. ' s' → logprob: -3.392346143722534
    8. '#' → logprob: -3.517346143722534
    9. ' only' → logprob: -3.767346143722534
    10. ' a' → logprob: -4.392346382141113

Token 230: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.030947327613830566
    2. 'can' → logprob: -3.655947208404541
    3. ' wants' → logprob: -6.905947208404541
    4. ''s' → logprob: -6.905947208404541
    5. ' may' → logprob: -7.905947208404541
    6. ' could' → logprob: -7.905947208404541
    7. '#' → logprob: -8.4059476852417
    8. '_can' → logprob: -8.5309476852417
    9. ' has' → logprob: -8.6559476852417
    10. '<|end|>' → logprob: -8.6559476852417

Token 231: ' reorder' (ID: 167322)
  Prédit: ' rearr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rearr' → logprob: -0.18200768530368805
    2. ' only' → logprob: -3.4320077896118164
    3. 're' → logprob: -3.5570077896118164
    4. ' arbitr' → logprob: -3.9320077896118164
    5. ' reorder' → logprob: -3.9320077896118164
    6. 'replace' → logprob: -4.057007789611816
    7. ' replace' → logprob: -4.807007789611816
    8. ' choose' → logprob: -5.057007789611816
    9. ' map' → logprob: -5.182007789611816
    10. ' match' → logprob: -5.432007789611816

Token 232: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7763762474060059
    2. 's' → logprob: -1.5263762474060059
    3. ' them' → logprob: -1.5263762474060059
    4. ' the' → logprob: -3.401376247406006
    5. ' to' → logprob: -4.526376247406006
    6. 'self' → logprob: -4.651376247406006
    7. '       ' → logprob: -4.776376247406006
    8. 'them' → logprob: -4.776376247406006
    9. 'the' → logprob: -5.276376247406006
    10. ' self' → logprob: -5.651376247406006

Token 233: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8512603044509888
    2. ' to' → logprob: -1.7262603044509888
    3. ' and' → logprob: -2.226260185241699
    4. '        
' → logprob: -2.351260185241699
    5. ',' → logprob: -2.726260185241699
    6. '.' → logprob: -3.976260185241699
    7. '
' → logprob: -4.476260185241699
    8. ''s' → logprob: -4.851260185241699
    9. ' ,' → logprob: -4.851260185241699
    10. ' frequencies' → logprob: -4.976260185241699

Token 234: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.140972301363945
    2. '#' → logprob: -3.015972375869751
    3. ' and' → logprob: -3.890972375869751
    4. ' so' → logprob: -3.890972375869751
    5. '        
' → logprob: -4.015972137451172
    6. 'and' → logprob: -4.640972137451172
    7. ' but' → logprob: -5.890972137451172
    8. '           ' → logprob: -6.515972137451172
    9. '<|end|>' → logprob: -6.515972137451172
    10. '
' → logprob: -6.765972137451172

Token 235: ' Marian' (ID: 147977)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1528794765472412
    2. '#' → logprob: -1.9028794765472412
    3. ' for' → logprob: -2.027879476547241
    4. ' the' → logprob: -2.152879476547241
    5. ' there' → logprob: -3.402879476547241
    6. 'for' → logprob: -3.527879476547241
    7. 'self' → logprob: -4.02787971496582
    8. 's' → logprob: -4.15287971496582
    9. ' we' → logprob: -4.15287971496582
    10. '        
' → logprob: -4.15287971496582

Token 236: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.057524506002664566
    2. 'can' → logprob: -3.0575244426727295
    3. ' wants' → logprob: -5.807524681091309
    4. '#' → logprob: -6.807524681091309
    5. ''s' → logprob: -7.682524681091309
    6. ' ' → logprob: -7.682524681091309
    7. ' could' → logprob: -7.807524681091309
    8. '   ' → logprob: -7.932524681091309
    9. ' may' → logprob: -8.057524681091309
    10. '
' → logprob: -8.057524681091309

Token 237: ' swap' (ID: 25489)
  Prédit: 'replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'replace' → logprob: -0.7019422650337219
    2. ' only' → logprob: -1.3269422054290771
    3. ' replace' → logprob: -2.451942205429077
    4. 'only' → logprob: -3.326942205429077
    5. 'choose' → logprob: -4.326942443847656
    6. 'change' → logprob: -4.451942443847656
    7. ' choose' → logprob: -4.576942443847656
    8. ' change' → logprob: -4.576942443847656
    9. ' substitute' → logprob: -4.826942443847656
    10. ' map' → logprob: -4.826942443847656

Token 238: ' letters' (ID: 18151)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11018357425928116
    2. ' s' → logprob: -2.6101834774017334
    3. ' edges' → logprob: -4.2351837158203125
    4. '       ' → logprob: -5.8601837158203125
    5. '   ' → logprob: -6.1101837158203125
    6. ' between' → logprob: -6.9851837158203125
    7. ')' → logprob: -7.2351837158203125
    8. '(s' → logprob: -7.2351837158203125
    9. ''s' → logprob: -7.3601837158203125
    10. 'self' → logprob: -7.4851837158203125

Token 239: ' globally' (ID: 43727)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4558459222316742
    2. '.' → logprob: -2.455845832824707
    3. '        
' → logprob: -2.580845832824707
    4. ',' → logprob: -3.330845832824707
    5. '<|end|>' → logprob: -3.330845832824707
    6. 's' → logprob: -3.705845832824707
    7. '
' → logprob: -4.455845832824707
    8. ' ' → logprob: -4.455845832824707
    9. '        ' → logprob: -4.580845832824707
    10. ' in' → logprob: -4.830845832824707

Token 240: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6612862348556519
    2. '.' → logprob: -1.0362862348556519
    3. '        
' → logprob: -3.0362863540649414
    4. '<|end|>' → logprob: -3.1612863540649414
    5. ',' → logprob: -4.286286354064941
    6. '        ' → logprob: -4.661286354064941
    7. '<|end|>' → logprob: -6.036286354064941
    8. ' .' → logprob: -6.536286354064941
    9. ':' → logprob: -6.536286354064941
    10. ' for' → logprob: -6.536286354064941

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009440605528652668
    2. '#' → logprob: -5.1344404220581055
    3. '        
' → logprob: -6.7594404220581055
    4. '        ' → logprob: -7.7594404220581055
    5. '           ' → logprob: -8.259440422058105
    6. '   ' → logprob: -8.509440422058105
    7. ' so' → logprob: -8.509440422058105
    8. ' and' → logprob: -8.634440422058105
    9. '<|end|>' → logprob: -9.009440422058105
    10. 'and' → logprob: -9.259440422058105

Token 242: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5595471262931824
    2. '#' (adapté à ' #') → logprob: -0.9345471262931824
    3. ' so' → logprob: -3.809547185897827
    4. '        
' → logprob: -5.559546947479248
    5. '        ' → logprob: -6.184546947479248
    6. '           ' → logprob: -6.434546947479248
    7. ' ' → logprob: -6.559546947479248
    8. ' #' → logprob: -7.184546947479248
    9. '   ' → logprob: -7.309546947479248
    10. ' and' → logprob: -7.684546947479248

Token 243: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1316884458065033
    2. '       ' → logprob: -2.131688356399536
    3. ' for' → logprob: -6.756688594818115
    4. ' #' → logprob: -7.006688594818115
    5. 'for' → logprob: -7.381688594818115
    6. '        
' → logprob: -7.631688594818115
    7. ' and' → logprob: -8.631688117980957
    8. 'self' → logprob: -8.881688117980957
    9. 'continue' → logprob: -9.006688117980957
    10. '   ' → logprob: -9.256688117980957

Token 244: ' actual' (ID: 6290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0918158292770386
    2. ' for' → logprob: -1.0918158292770386
    3. ' the' → logprob: -2.341815948486328
    4. '#' → logprob: -2.591815948486328
    5. 'for' → logprob: -3.216815948486328
    6. ' we' → logprob: -3.841815948486328
    7. 'the' → logprob: -4.341815948486328
    8. ' there' → logprob: -4.841815948486328
    9. '        ' → logprob: -4.841815948486328
    10. ' #' → logprob: -5.091815948486328

Token 245: ' mapping' (ID: 22573)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.7408078908920288
    2. ' mapping' → logprob: -1.7408078908920288
    3. ' replacements' → logprob: -1.9908078908920288
    4. 'mapping' → logprob: -2.6158080101013184
    5. ' mappings' → logprob: -2.9908080101013184
    6. 'edges' → logprob: -2.9908080101013184
    7. '#' → logprob: -3.4908080101013184
    8. 'self' → logprob: -3.6158080101013184
    9. '       ' → logprob: -3.7408080101013184
    10. ' matching' → logprob: -3.7408080101013184

Token 246: ' reduces' (ID: 38566)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.854188859462738
    2. ' is' → logprob: -1.4791889190673828
    3. ' =' → logprob: -2.229188919067383
    4. '       ' → logprob: -2.479188919067383
    5. '#' → logprob: -3.729188919067383
    6. '.' → logprob: -3.854188919067383
    7. ')' → logprob: -4.104188919067383
    8. '   ' → logprob: -4.479188919067383
    9. ' ' → logprob: -4.604188919067383
    10. ' can' → logprob: -4.604188919067383

Token 247: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.14821380376815796
    2. 'to' → logprob: -2.5232138633728027
    3. '       ' → logprob: -3.2732138633728027
    4. ' the' → logprob: -4.523213863372803
    5. 'self' → logprob: -5.898213863372803
    6. '   ' → logprob: -6.148213863372803
    7. 'the' → logprob: -6.773213863372803
    8. ' self' → logprob: -7.023213863372803
    9. '           ' → logprob: -8.273213386535645
    10. 'down' → logprob: -8.773213386535645

Token 248: ' matching' (ID: 20238)
  Prédit: ' matching'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matching' → logprob: -0.5720970034599304
    2. 'matching' → logprob: -1.5720970630645752
    3. 'finding' → logprob: -2.572097063064575
    4. 'checking' → logprob: -3.572097063064575
    5. 'min' → logprob: -4.197096824645996
    6. ' building' → logprob: -4.322096824645996
    7. ' checking' → logprob: -4.447096824645996
    8. ' minimizing' → logprob: -4.447096824645996
    9. ' finding' → logprob: -4.572096824645996
    10. ' counting' → logprob: -4.572096824645996

Token 249: ' frequencies' (ID: 64338)
  Prédit: ' frequencies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' frequencies' → logprob: -0.08766668289899826
    2. ' frequency' → logprob: -3.5876667499542236
    3. 'frequency' → logprob: -4.5876665115356445
    4. ' the' → logprob: -5.0876665115356445
    5. ' letters' → logprob: -5.3376665115356445
    6. ' s' → logprob: -5.3376665115356445
    7. '<|end|>' → logprob: -5.5876665115356445
    8. 's' → logprob: -5.5876665115356445
    9. 'fre' → logprob: -5.7126665115356445
    10. ' of' → logprob: -5.7126665115356445

Token 250: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3472970426082611
    2. '        
' → logprob: -1.9722970724105835
    3. '        ' → logprob: -3.597296953201294
    4. '.' → logprob: -3.597296953201294
    5. '<|end|>' → logprob: -3.847296953201294
    6. '
' → logprob: -3.847296953201294
    7. ',' → logprob: -4.222297191619873
    8. ':' → logprob: -4.597297191619873
    9. ')' → logprob: -4.847297191619873
    10. '<|end|>' → logprob: -5.847297191619873

Token 251: ' minimize' (ID: 41776)
  Prédit: ' minimize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimize' → logprob: -0.3906841576099396
    2. ' letters' → logprob: -2.265684127807617
    3. 'min' → logprob: -2.640684127807617
    4. ' frequencies' → logprob: -3.890684127807617
    5. ' find' → logprob: -4.265684127807617
    6. ' achieve' → logprob: -4.390684127807617
    7. 'ach' → logprob: -4.765684127807617
    8. ' each' → logprob: -5.015684127807617
    9. ' characters' → logprob: -5.265684127807617
    10. 'letters' → logprob: -5.265684127807617

Token 252: ' replacements' (ID: 92347)
  Prédit: ' replacements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' replacements' → logprob: -0.040442150086164474
    2. 'replacement' → logprob: -4.915441989898682
    3. 're' → logprob: -5.040441989898682
    4. ' the' → logprob: -5.040441989898682
    5. ' replacement' → logprob: -5.040441989898682
    6. ' changes' → logprob: -6.665441989898682
    7. ' mism' → logprob: -6.665441989898682
    8. 'dif' → logprob: -6.915441989898682
    9. 'cost' → logprob: -6.915441989898682
    10. 'changes' → logprob: -7.040441989898682

Token 253: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16126883029937744
    2. '        
' → logprob: -2.286268711090088
    3. '.' → logprob: -4.036268711090088
    4. '        ' → logprob: -4.661268711090088
    5. '
' → logprob: -5.411268711090088
    6. ',' → logprob: -5.411268711090088
    7. '<|end|>' → logprob: -5.786268711090088
    8. ':' → logprob: -6.036268711090088
    9. '<|end|>' → logprob: -6.786268711090088
    10. '        
        
' → logprob: -7.286268711090088

Token 254: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048072487115859985
    2. '        
' → logprob: -3.173072576522827
    3. '        ' → logprob: -6.048072338104248
    4. ' ' → logprob: -7.798072338104248
    5. '        
        
' → logprob: -7.923072338104248
    6. '\' → logprob: -8.423072814941406
    7. '#' → logprob: -8.673072814941406
    8. ',' → logprob: -8.798072814941406
    9. '<|end|>' → logprob: -8.798072814941406
    10. '    ' → logprob: -8.923072814941406

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025385001674294472
    2. '        
' → logprob: -4.525384902954102
    3. '        ' → logprob: -5.150384902954102
    4. ' ' → logprob: -6.275384902954102
    5. '<|end|>' → logprob: -6.275384902954102
    6. ',' → logprob: -7.525384902954102
    7. ')' → logprob: -7.775384902954102
    8. '      ' → logprob: -7.900384902954102
    9. '#' → logprob: -7.900384902954102
    10. '   ' → logprob: -8.150384902954102

Token 256: ' freq' (ID: 42078)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9942148327827454
    2. '       ' → logprob: -1.2442147731781006
    3. 'for' → logprob: -1.3692147731781006
    4. 's' → logprob: -3.1192147731781006
    5. ' s' → logprob: -3.8692147731781006
    6. '#' → logprob: -4.86921501159668
    7. '        
' → logprob: -5.61921501159668
    8. 'return' → logprob: -5.99421501159668
    9. 'result' → logprob: -6.61921501159668
    10. ' return' → logprob: -6.99421501159668

Token 257: '_to' (ID: 5089)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3454258441925049
    2. '_s' → logprob: -1.3454258441925049
    3. '_to' → logprob: -4.345425605773926
    4. 's' → logprob: -4.845425605773926
    5. '_map' → logprob: -5.095425605773926
    6. ' =' → logprob: -5.845425605773926
    7. '=' → logprob: -7.845425605773926
    8. '_mapping' → logprob: -7.970425605773926
    9. ' _' → logprob: -8.345425605773926
    10. ')' → logprob: -8.595425605773926

Token 258: '_chars' (ID: 94246)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.3785032033920288
    2. 's' → logprob: -1.5035032033920288
    3. '_chars' → logprob: -2.6285033226013184
    4. '_letters' → logprob: -4.128503322601318
    5. 'chars' → logprob: -6.378503322601318
    6. 'letters' → logprob: -6.503503322601318
    7. '_nodes' → logprob: -7.753503322601318
    8. '_set' → logprob: -8.87850284576416
    9. '_char' → logprob: -9.00350284576416
    10. 'set' → logprob: -9.37850284576416

Token 259: '_s' (ID: 1278)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5795624852180481
    2. '_s' → logprob: -0.8295624852180481
    3. '=' → logprob: -5.954562664031982
    4. ':' → logprob: -7.579562664031982
    5. '_' → logprob: -8.454562187194824
    6. 's' → logprob: -8.454562187194824
    7. '   ' → logprob: -10.829562187194824
    8. '_self' → logprob: -10.829562187194824
    9. 'S' → logprob: -11.204562187194824
    10. '_in' → logprob: -11.329562187194824

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14300398528575897
    2. '=' → logprob: -2.0180039405822754
    3. ':' → logprob: -8.268004417419434
    4. 's' → logprob: -9.768004417419434
    5. '[' → logprob: -11.893004417419434
    6. '.setdefault' → logprob: -12.893004417419434
    7. ' :' → logprob: -13.143004417419434
    8. ' ' → logprob: -13.643004417419434
    9. ' s' → logprob: -14.643004417419434
    10. '_' → logprob: -14.643004417419434

Token 261: ' s' (ID: 265)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0052422950975596905
    2. ' defaultdict' → logprob: -5.255242347717285
    3. ' default' → logprob: -12.005242347717285
    4. 'Default' → logprob: -13.755242347717285
    5. '(default' → logprob: -14.380242347717285
    6. '.default' → logprob: -15.380242347717285
    7. '{' → logprob: -16.13024139404297
    8. '       ' → logprob: -16.50524139404297
    9. '   ' → logprob: -16.50524139404297
    10. '"default' → logprob: -16.50524139404297

Token 262: '_freq' (ID: 51889)
  Prédit: '_freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_freq' → logprob: -0.0015987720107659698
    2. '._' → logprob: -6.751598834991455
    3. '.freq' → logprob: -8.126598358154297
    4. 'freq' → logprob: -10.376598358154297
    5. '.' → logprob: -10.501598358154297
    6. 'Freq' → logprob: -11.001598358154297
    7. '.s' → logprob: -11.626598358154297
    8. '.get' → logprob: -11.626598358154297
    9. '_.' → logprob: -11.876598358154297
    10. '_FREQ' → logprob: -12.251598358154297

Token 263: '.inverse' (ID: 176558)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -1.2113999128341675
    2. '.reverse' → logprob: -1.3363999128341675
    3. '.freq' → logprob: -2.211400032043457
    4. '.groupby' → logprob: -2.461400032043457
    5. '.inverse' → logprob: -2.836400032043457
    6. '.' → logprob: -3.461400032043457
    7. '.to' → logprob: -3.586400032043457
    8. '.group' → logprob: -3.711400032043457
    9. '.frequency' → logprob: -3.961400032043457
    10. '.keys' → logprob: -4.711400032043457

Token 264: '_profile' (ID: 30184)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.3877550959587097
    2. '_mapping' → logprob: -2.1377551555633545
    3. '_chars' → logprob: -2.2627551555633545
    4. 's' → logprob: -3.3877551555633545
    5. '_' → logprob: -3.7627551555633545
    6. '()' → logprob: -4.262754917144775
    7. '<|end|>' → logprob: -5.262754917144775
    8. '_freq' → logprob: -5.637754917144775
    9. '_maps' → logprob: -6.137754917144775
    10. ')' → logprob: -6.137754917144775

Token 265: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002488737925887108
    2. '()
' → logprob: -6.627488613128662
    3. '[' → logprob: -7.502488613128662
    4. '       ' → logprob: -8.12748908996582
    5. '.setdefault' → logprob: -9.50248908996582
    6. '()[' → logprob: -9.87748908996582
    7. '<|end|>' → logprob: -10.37748908996582
    8. ' ()' → logprob: -10.62748908996582
    9. '=' → logprob: -11.00248908996582
    10. '   ' → logprob: -11.50248908996582

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08238127827644348
    2. ' =' → logprob: -3.207381248474121
    3. '()' → logprob: -3.832381248474121
    4. '=' → logprob: -4.832381248474121
    5. '        
' → logprob: -5.707381248474121
    6. ':' → logprob: -6.707381248474121
    7. '<|end|>' → logprob: -6.707381248474121
    8. ')' → logprob: -7.582381248474121
    9. ' ' → logprob: -7.832381248474121
    10. 'def' → logprob: -7.957381248474121

Token 267: ' freq' (ID: 42078)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.56232750415802
    2. '       ' → logprob: -1.81232750415802
    3. '        
' → logprob: -2.0623273849487305
    4. '=' → logprob: -2.5623273849487305
    5. '_freq' → logprob: -3.3123273849487305
    6. ' ' → logprob: -5.3123273849487305
    7. '
' → logprob: -5.4373273849487305
    8. 'freq' (adapté à ' freq') → logprob: -5.4373273849487305
    9. '<|end|>' → logprob: -6.3123273849487305
    10. ' freq' → logprob: -6.4373273849487305

Token 268: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0008633419638499618
    2. '_' → logprob: -7.625863552093506
    3. ' =' → logprob: -8.500863075256348
    4. '=' → logprob: -9.875863075256348
    5. 'To' → logprob: -10.500863075256348
    6. ' _' → logprob: -10.750863075256348
    7. 'to' → logprob: -10.875863075256348
    8. '=_' → logprob: -12.000863075256348
    9. '_s' → logprob: -12.125863075256348
    10. '       ' → logprob: -12.250863075256348

Token 269: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.0010362643515691161
    2. 'chars' → logprob: -6.876036167144775
    3. ' chars' → logprob: -13.501036643981934
    4. 's' → logprob: -14.501036643981934
    5. 'char' → logprob: -15.001036643981934
    6. '_char' → logprob: -15.626036643981934
    7. ' _' → logprob: -15.626036643981934
    8. 'Chars' → logprob: -15.751036643981934
    9. '
' → logprob: -15.876036643981934
    10. '_' → logprob: -15.876036643981934

Token 270: '_t' (ID: 838)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0017188541823998094
    2. '_' → logprob: -7.001718997955322
    3. '_t' → logprob: -7.376718997955322
    4. 's' → logprob: -8.876718521118164
    5. 't' → logprob: -11.251718521118164
    6. ' _' → logprob: -11.501718521118164
    7. 'self' → logprob: -11.876718521118164
    8. '_self' → logprob: -13.501718521118164
    9. '('_' → logprob: -13.751718521118164
    10. '   ' → logprob: -14.251718521118164

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42871689796447754
    2. '=' → logprob: -1.0537168979644775
    3. 's' → logprob: -12.553716659545898
    4. '[' → logprob: -12.803716659545898
    5. ' ' → logprob: -12.803716659545898
    6. ')' → logprob: -13.178716659545898
    7. ':' → logprob: -13.303716659545898
    8. '.setdefault' → logprob: -14.428716659545898
    9. '(' → logprob: -14.678716659545898
    10. '   ' → logprob: -14.803716659545898

Token 272: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.632609486579895
    2. 't' → logprob: -0.757609486579895
    3. '	t' → logprob: -12.632609367370605
    4. '   ' → logprob: -13.382609367370605
    5. '       ' → logprob: -13.507609367370605
    6. ' ' → logprob: -13.632609367370605
    7. '`t' → logprob: -13.882609367370605
    8. '{' → logprob: -14.632609367370605
    9. '  ' → logprob: -15.257609367370605
    10. ' ' → logprob: -15.632609367370605

Token 273: '_freq' (ID: 51889)
  Prédit: '_freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_freq' → logprob: -0.00013965457037556916
    2. 'freq' → logprob: -9.250139236450195
    3. 't' → logprob: -10.375139236450195
    4. '_t' → logprob: -11.750139236450195
    5. '_' → logprob: -13.500139236450195
    6. 'Freq' → logprob: -13.875139236450195
    7. '_FREQ' → logprob: -14.125139236450195
    8. '.freq' → logprob: -14.625139236450195
    9. '._' → logprob: -15.625139236450195
    10. '```' → logprob: -16.000139236450195

Token 274: '.inverse' (ID: 176558)
  Prédit: '.inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inverse' → logprob: -0.0016827977960929275
    2. '.' → logprob: -6.876682758331299
    3. 'inverse' → logprob: -7.751682758331299
    4. '()' → logprob: -9.501683235168457
    5. '.setdefault' → logprob: -9.626683235168457
    6. ')' → logprob: -10.876683235168457
    7. '_inverse' → logprob: -11.376683235168457
    8. '().' → logprob: -12.001683235168457
    9. '.reverse' → logprob: -12.001683235168457
    10. ' .' → logprob: -12.126683235168457

Token 275: '_profile' (ID: 30184)
  Prédit: '_profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profile' → logprob: -5.7530574849806726e-05
    2. 'profile' → logprob: -11.500057220458984
    3. '_prof' → logprob: -11.500057220458984
    4. '_to' → logprob: -11.625057220458984
    5. '_pro' → logprob: -11.875057220458984
    6. '_profiles' → logprob: -12.125057220458984
    7. '_freq' → logprob: -12.750057220458984
    8. '"profile' → logprob: -12.750057220458984
    9. ' _' → logprob: -13.125057220458984
    10. '_' → logprob: -13.250057220458984

Token 276: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00036810929304920137
    2. '()
' → logprob: -8.000368118286133
    3. '       ' → logprob: -10.875368118286133
    4. '()\' → logprob: -12.750368118286133
    5. '()]' → logprob: -12.875368118286133
    6. '()

' → logprob: -13.250368118286133
    7. ' ()' → logprob: -14.000368118286133
    8. '())' → logprob: -14.125368118286133
    9. ')' → logprob: -14.125368118286133
    10. '(' → logprob: -14.250368118286133

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013737361878156662
    2. '        
' → logprob: -4.388737201690674
    3. '
' → logprob: -7.763737201690674
    4. '        ' → logprob: -8.888737678527832
    5. ',' → logprob: -9.388737678527832
    6. '  
' → logprob: -9.638737678527832
    7. '   ' → logprob: -9.763737678527832
    8. '           ' → logprob: -10.138737678527832
    9. '```' → logprob: -10.138737678527832
    10. '      ' → logprob: -10.263737678527832

Token 278: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.19413843750953674
    2. '       ' → logprob: -2.194138526916504
    3. 'for' → logprob: -4.069138526916504
    4. 'res' → logprob: -4.069138526916504
    5. ' result' → logprob: -4.569138526916504
    6. 'mapping' → logprob: -5.444138526916504
    7. 're' → logprob: -5.694138526916504
    8. 'replacement' → logprob: -5.819138526916504
    9. 'all' → logprob: -6.819138526916504
    10. ' for' → logprob: -6.819138526916504

Token 279: ' Create' (ID: 6585)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5556228756904602
    2. 'mapping' → logprob: -1.5556228160858154
    3. 'for' → logprob: -2.0556228160858154
    4. 'replacement' → logprob: -3.5556228160858154
    5. '       ' → logprob: -3.9306228160858154
    6. 'possible' → logprob: -5.3056230545043945
    7. 'matches' → logprob: -5.5556230545043945
    8. 'min' → logprob: -5.5556230545043945
    9. '#' → logprob: -5.8056230545043945
    10. 'all' → logprob: -5.9306230545043945

Token 280: ' edges' (ID: 22569)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1956846714019775
    2. ' matches' → logprob: -2.3206846714019775
    3. ' mapping' → logprob: -2.4456846714019775
    4. 'for' → logprob: -2.5706846714019775
    5. ' defaultdict' → logprob: -2.8206846714019775
    6. '       ' → logprob: -3.0706846714019775
    7. ' possible' → logprob: -3.1956846714019775
    8. ' edges' → logprob: -3.1956846714019775
    9. 'mapping' → logprob: -3.4456846714019775
    10. ' mappings' → logprob: -3.5706846714019775

Token 281: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48154357075691223
    2. ' for' → logprob: -1.3565435409545898
    3. 'for' → logprob: -2.10654354095459
    4. '        
' → logprob: -6.48154354095459
    5. ' between' → logprob: -7.85654354095459
    6. ' =' → logprob: -8.35654354095459
    7. ' in' → logprob: -8.73154354095459
    8. 'self' → logprob: -9.35654354095459
    9. 's' → logprob: -9.48154354095459
    10. '=' → logprob: -9.73154354095459

Token 282: ' chars' (ID: 47991)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.6594602465629578
    2. 'for' → logprob: -1.7844603061676025
    3. ' freq' → logprob: -1.7844603061676025
    4. ' for' → logprob: -2.4094603061676025
    5. ' all' → logprob: -4.409460067749023
    6. ' frequencies' → logprob: -4.784460067749023
    7. ' s' → logprob: -5.159460067749023
    8. 'f' → logprob: -5.284460067749023
    9. 'fre' → logprob: -5.534460067749023
    10. ' chars' → logprob: -5.659460067749023

Token 283: ' with' (ID: 483)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6380226016044617
    2. '       ' → logprob: -1.2630226612091064
    3. 'for' → logprob: -2.0130226612091064
    4. ' in' → logprob: -3.7630226612091064
    5. 's' → logprob: -4.263022422790527
    6. ' s' → logprob: -4.763022422790527
    7. '_s' → logprob: -6.263022422790527
    8. '        ' → logprob: -6.638022422790527
    9. ' =' → logprob: -6.888022422790527
    10. '<|end|>' → logprob: -7.263022422790527

Token 284: ' same' (ID: 2684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7300698161125183
    2. 'same' → logprob: -1.355069875717163
    3. ' the' → logprob: -1.605069875717163
    4. ' same' → logprob: -3.355069875717163
    5. 'each' → logprob: -5.480069637298584
    6. ' matching' → logprob: -5.605069637298584
    7. ' identical' → logprob: -5.855069637298584
    8. 'equal' → logprob: -5.980069637298584
    9. 'matching' → logprob: -6.480069637298584
    10. 'freq' → logprob: -6.730069637298584

Token 285: ' frequency' (ID: 19813)
  Prédit: ' frequency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' frequency' → logprob: -0.5092277526855469
    2. ' freq' → logprob: -1.8842277526855469
    3. ' frequencies' → logprob: -2.009227752685547
    4. 'frequency' → logprob: -3.009227752685547
    5. 'freq' → logprob: -3.259227752685547
    6. '_freq' → logprob: -4.009227752685547
    7. '_frequency' → logprob: -6.384227752685547
    8. 'fre' → logprob: -6.634227752685547
    9. '   ' → logprob: -7.259227752685547
    10. '    ' → logprob: -7.259227752685547

Token 286: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07836714386940002
    2. ' for' → logprob: -2.828367233276367
    3. '        
' → logprob: -4.578367233276367
    4. 'for' → logprob: -6.328367233276367
    5. '<|end|>' → logprob: -6.578367233276367
    6. ':' → logprob: -7.578367233276367
    7. '.' → logprob: -7.828367233276367
    8. '        ' → logprob: -7.953367233276367
    9. ',' → logprob: -8.078367233276367
    10. '
' → logprob: -8.328367233276367

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013808627612888813
    2. ' for' → logprob: -4.763808727264404
    3. 'for' → logprob: -5.763808727264404
    4. '        
' → logprob: -6.263808727264404
    5. ',' → logprob: -9.888808250427246
    6. '<|end|>' → logprob: -10.388808250427246
    7. '
' → logprob: -11.763808250427246
    8. '.' → logprob: -11.763808250427246
    9. ':' → logprob: -12.513808250427246
    10. 's' → logprob: -12.763808250427246

Token 288: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.168147012591362
    2. ' for' → logprob: -2.043147087097168
    3. 'for' (adapté à ' for') → logprob: -3.793147087097168
    4. '        
' → logprob: -6.168147087097168
    5. '
' → logprob: -7.918147087097168
    6. ' 
' → logprob: -10.418147087097168
    7. '```' → logprob: -10.668147087097168
    8. '  
' → logprob: -10.918147087097168
    9. '    
' → logprob: -11.168147087097168
    10. '<|end|>' → logprob: -11.418147087097168

Token 289: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.5079659223556519
    2. ' freq' → logprob: -1.0079659223556519
    3. 'f' → logprob: -3.8829660415649414
    4. ' f' → logprob: -4.382966041564941
    5. '   ' → logprob: -9.257966041564941
    6. ' frequency' → logprob: -9.757966041564941
    7. 'frequency' → logprob: -9.757966041564941
    8. ' ' → logprob: -12.007966041564941
    9. '(freq' → logprob: -12.132966041564941
    10. '	f' → logprob: -12.257966041564941

Token 290: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010347836650907993
    2. 'in' → logprob: -4.635347843170166
    3. '_in' → logprob: -8.135347366333008
    4. ',' → logprob: -8.260347366333008
    5. ' ,' → logprob: -11.010347366333008
    6. ' ' → logprob: -11.635347366333008
    7. '	in' → logprob: -13.010347366333008
    8. '   ' → logprob: -13.260347366333008
    9. 's' → logprob: -13.510347366333008
    10. ',in' → logprob: -13.885347366333008

Token 291: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.6387774348258972
    2. 'freq' → logprob: -0.7637774348258972
    3. ' set' → logprob: -5.888777256011963
    4. 'set' → logprob: -6.263777256011963
    5. '(freq' → logprob: -6.888777256011963
    6. 'range' → logprob: -9.263777732849121
    7. ' range' → logprob: -9.388777732849121
    8. 'sorted' → logprob: -9.513777732849121
    9. ' list' → logprob: -9.513777732849121
    10. 'list' → logprob: -10.263777732849121

Token 292: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.05899885296821594
    2. '_s' → logprob: -3.3089988231658936
    3. ':' → logprob: -4.808999061584473
    4. '_freq' → logprob: -5.933999061584473
    5. 's' → logprob: -6.308999061584473
    6. 'to' → logprob: -6.433999061584473
    7. '       ' → logprob: -6.433999061584473
    8. ' in' → logprob: -6.558999061584473
    9. '   ' → logprob: -6.683999061584473
    10. 'in' → logprob: -7.558999061584473

Token 293: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.0700199082493782
    2. 'chars' → logprob: -2.6950199604034424
    3. 's' → logprob: -10.445019721984863
    4. 'freq' → logprob: -10.570019721984863
    5. ' chars' → logprob: -11.945019721984863
    6. '_freq' → logprob: -12.195019721984863
    7. 'Chars' → logprob: -12.945019721984863
    8. '_keys' → logprob: -12.945019721984863
    9. '(chars' → logprob: -13.195019721984863
    10. 'char' → logprob: -13.445019721984863

Token 294: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.001409401185810566
    2. 's' → logprob: -6.626409530639648
    3. ':' → logprob: -10.751409530639648
    4. ' s' → logprob: -11.376409530639648
    5. '       ' → logprob: -11.626409530639648
    6. '   ' → logprob: -11.876409530639648
    7. '_' → logprob: -12.501409530639648
    8. '_freq' → logprob: -12.626409530639648
    9. ' _' → logprob: -12.751409530639648
    10. '.keys' → logprob: -12.751409530639648

Token 295: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023953964933753014
    2. ':
' → logprob: -3.773953914642334
    3. '[' → logprob: -7.648953914642334
    4. ' :' → logprob: -9.148954391479492
    5. '):' → logprob: -10.523954391479492
    6. '.keys' → logprob: -10.773954391479492
    7. '       ' → logprob: -11.023954391479492
    8. '):
' → logprob: -11.773954391479492
    9. '['' → logprob: -11.898954391479492
    10. '[:' → logprob: -12.023954391479492

Token 296: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019849021919071674
    2. ':' → logprob: -7.3769850730896
    3. '       ' → logprob: -8.001984596252441
    4. '            ' → logprob: -8.126984596252441
    5. ' if' → logprob: -8.251984596252441
    6. ' for' → logprob: -8.626984596252441
    7. '        ' → logprob: -9.376984596252441
    8. '    ' → logprob: -10.001984596252441
    9. ',' → logprob: -10.376984596252441
    10. '   ' → logprob: -10.626984596252441

Token 297: ' chars' (ID: 47991)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20510904490947723
    2. '           ' → logprob: -2.330109119415283
    3. ' for' → logprob: -2.580109119415283
    4. 'if' → logprob: -4.830109119415283
    5. 'for' → logprob: -5.955109119415283
    6. ' s' → logprob: -7.330109119415283
    7. '               ' → logprob: -7.955109119415283
    8. ' chars' → logprob: -8.080108642578125
    9. '            ' → logprob: -8.705108642578125
    10. 's' → logprob: -9.205108642578125

Token 298: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.03873738273978233
    2. ' =' → logprob: -3.7887372970581055
    3. '_in' → logprob: -4.2887372970581055
    4. '_t' → logprob: -7.6637372970581055
    5. '=' → logprob: -7.9137372970581055
    6. 's' → logprob: -8.288737297058105
    7. 'in' → logprob: -8.538737297058105
    8. ' in' → logprob: -8.913737297058105
    9. '_' → logprob: -9.413737297058105
    10. '   ' → logprob: -10.038737297058105

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1131170243024826
    2. '=' → logprob: -2.238116979598999
    3. '_set' → logprob: -9.488117218017578
    4. ' ' → logprob: -9.863117218017578
    5. '_freq' → logprob: -10.363117218017578
    6. '_chars' → logprob: -10.613117218017578
    7. '[' → logprob: -11.238117218017578
    8. '_' → logprob: -11.238117218017578
    9. 'for' → logprob: -11.363117218017578
    10. ':' → logprob: -11.488117218017578

Token 300: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.01815052703022957
    2. 'freq' → logprob: -4.018150329589844
    3. '(freq' → logprob: -14.518150329589844
    4. '.freq' → logprob: -16.643150329589844
    5. ' frequency' → logprob: -17.143150329589844
    6. '_freq' → logprob: -17.643150329589844
    7. 'Freq' → logprob: -20.268150329589844
    8. 'frequency' → logprob: -20.268150329589844
    9. ' fre' → logprob: -20.518150329589844
    10. ' ' → logprob: -20.518150329589844

Token 301: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -9.13388703338569e-06
    2. '_s' → logprob: -12.125009536743164
    3. 'To' → logprob: -13.625009536743164
    4. 'to' → logprob: -14.625009536743164
    5. '_freq' → logprob: -14.625009536743164
    6. '_for' → logprob: -14.875009536743164
    7. 'freq' → logprob: -15.250009536743164
    8. ']' → logprob: -16.000009536743164
    9. '_chars' → logprob: -16.125009536743164
    10. 's' → logprob: -16.375009536743164

Token 302: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.11290546506643295
    2. 'chars' → logprob: -2.237905502319336
    3. 'freq' → logprob: -10.112905502319336
    4. 'Chars' → logprob: -10.862905502319336
    5. ' chars' → logprob: -11.112905502319336
    6. 'char' → logprob: -12.487905502319336
    7. '[' → logprob: -14.112905502319336
    8. 's' → logprob: -14.362905502319336
    9. '(chars' → logprob: -14.362905502319336
    10. 'default' → logprob: -15.112905502319336

Token 303: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.026742948219180107
    2. 's' → logprob: -3.651742935180664
    3. '[f' → logprob: -8.276742935180664
    4. 'freq' → logprob: -8.776742935180664
    5. '[' → logprob: -11.776742935180664
    6. '[s' → logprob: -12.026742935180664
    7. '
' → logprob: -12.776742935180664
    8. '(freq' → logprob: -13.151742935180664
    9. '```' → logprob: -13.401742935180664
    10. '   ' → logprob: -13.401742935180664

Token 304: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -1.6047699318733066e-05
    2. ' [' → logprob: -11.125016212463379
    3. '[' → logprob: -14.125016212463379
    4. '(freq' → logprob: -15.750016212463379
    5. 'freq' → logprob: -15.875016212463379
    6. '.get' → logprob: -16.500015258789062
    7. '[
' → logprob: -16.500015258789062
    8. '   ' → logprob: -17.375015258789062
    9. '       ' → logprob: -17.750015258789062
    10. '[token' → logprob: -18.375015258789062

Token 305: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.0003087678924202919
    2. 'freq' → logprob: -8.125308990478516
    3. 'rec' → logprob: -12.500308990478516
    4. ']' → logprob: -13.500308990478516
    5. '(freq' → logprob: -13.875308990478516
    6. 'eq' → logprob: -14.000308990478516
    7. 'requency' → logprob: -14.250308990478516
    8. '```' → logprob: -14.750308990478516
    9. '   ' → logprob: -14.875308990478516
    10. 'recv' → logprob: -15.000308990478516

Token 306: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.634014368057251
    2. ']' → logprob: -0.759014368057251
    3. ' ]
' → logprob: -7.759014129638672
    4. ' ]' → logprob: -8.009014129638672
    5. '           ' → logprob: -8.259014129638672
    6. ']
' → logprob: -8.634014129638672
    7. '       ' → logprob: -9.759014129638672
    8. ']

' → logprob: -10.259014129638672
    9. '   ' → logprob: -10.634014129638672
    10. ']:
' → logprob: -10.759014129638672

Token 307: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00301989889703691
    2. ' chars' → logprob: -6.2530198097229
    3. ' for' → logprob: -8.128020286560059
    4. ' =' → logprob: -8.753020286560059
    5. ',' → logprob: -9.253020286560059
    6. 'chars' → logprob: -9.253020286560059
    7. '_chars' → logprob: -9.378020286560059
    8. '            ' → logprob: -9.878020286560059
    9. '(chars' → logprob: -10.003020286560059
    10. '=' → logprob: -10.003020286560059

Token 308: ' chars' (ID: 47991)
  Prédit: ' chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chars' → logprob: -0.2590245008468628
    2. 'chars' (adapté à ' chars') → logprob: -1.5090245008468628
    3. '           ' → logprob: -5.009024620056152
    4. '_chars' → logprob: -8.634024620056152
    5. '(chars' → logprob: -9.384024620056152
    6. ' for' → logprob: -10.259024620056152
    7. '   ' → logprob: -10.884024620056152
    8. 'Chars' → logprob: -11.134024620056152
    9. '       ' → logprob: -11.134024620056152
    10. '               ' → logprob: -11.759024620056152

Token 309: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.629921436891891e-05
    2. '_' → logprob: -11.37502670288086
    3. '_s' → logprob: -11.37502670288086
    4. 't' → logprob: -14.12502670288086
    5. ' =' → logprob: -14.37502670288086
    6. '   ' → logprob: -14.87502670288086
    7. ' _' → logprob: -15.00002670288086
    8. '=' → logprob: -15.00002670288086
    9. '           ' → logprob: -15.12502670288086
    10. '       ' → logprob: -15.75002670288086

Token 310: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022522509098053
    2. '=' → logprob: -2.3502252101898193
    3. ' ' → logprob: -11.350225448608398
    4. '<|end|>' → logprob: -13.350225448608398
    5. ':' → logprob: -13.475225448608398
    6. '           ' → logprob: -13.600225448608398
    7. '            ' → logprob: -14.725225448608398
    8. ' =
' → logprob: -15.225225448608398
    9. '        ' → logprob: -15.475225448608398
    10. ')' → logprob: -15.475225448608398

Token 311: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.01815076172351837
    2. 'freq' → logprob: -4.018150806427002
    3. '(freq' → logprob: -14.143150329589844
    4. '.freq' → logprob: -17.393150329589844
    5. '_freq' → logprob: -18.268150329589844
    6. 'Freq' → logprob: -18.518150329589844
    7. ' frequency' → logprob: -18.518150329589844
    8. '       ' → logprob: -19.643150329589844
    9. 'set' → logprob: -20.268150329589844
    10. ' ' → logprob: -20.518150329589844

Token 312: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -6.349075556499884e-05
    2. 'freq' → logprob: -10.0000638961792
    3. 'to' → logprob: -11.6250638961792
    4. 't' → logprob: -12.7500638961792
    5. 'To' → logprob: -12.8750638961792
    6. '_t' → logprob: -13.2500638961792
    7. '_freq' → logprob: -14.5000638961792
    8. 's' → logprob: -15.2500638961792
    9. '```' → logprob: -15.6250638961792
    10. '       ' → logprob: -15.8750638961792

Token 313: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.0024678094778209925
    2. 'chars' → logprob: -6.252467632293701
    3. 't' → logprob: -8.00246810913086
    4. '_t' → logprob: -9.37746810913086
    5. 'freq' → logprob: -10.37746810913086
    6. '_to' → logprob: -10.37746810913086
    7. 'to' → logprob: -10.62746810913086
    8. 'Chars' → logprob: -10.87746810913086
    9. '
' → logprob: -13.00246810913086
    10. 's' → logprob: -13.12746810913086

Token 314: '_t' (ID: 838)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.3705103397369385
    2. 't' → logprob: -1.2455103397369385
    3. 'get' → logprob: -4.495510101318359
    4. '_t' → logprob: -4.995510101318359
    5. '[f' → logprob: -6.370510101318359
    6. 's' → logprob: -6.495510101318359
    7. 'freq' → logprob: -8.12051010131836
    8. '.setdefault' → logprob: -8.62051010131836
    9. '(freq' → logprob: -10.24551010131836
    10. '_get' → logprob: -10.62051010131836

Token 315: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.004079828038811684
    2. '[f' → logprob: -5.504079818725586
    3. '.' → logprob: -14.254079818725586
    4. 'get' → logprob: -14.629079818725586
    5. '.setdefault' → logprob: -16.129079818725586
    6. ' .' → logprob: -16.129079818725586
    7. 'freq' → logprob: -17.129079818725586
    8. '(freq' → logprob: -17.379079818725586
    9. '   ' → logprob: -19.504079818725586
    10. '       ' → logprob: -19.629079818725586

Token 316: '(freq' (ID: 157195)
  Prédit: '(freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(freq' → logprob: -3.531315314830863e-06
    2. 'freq' → logprob: -12.625003814697266
    3. '(' → logprob: -16.000003814697266
    4. '(
' → logprob: -18.750003814697266
    5. ' freq' → logprob: -19.500003814697266
    6. ' (' → logprob: -19.500003814697266
    7. '(f' → logprob: -21.375003814697266
    8. '(fid' → logprob: -21.750003814697266
    9. '_freq' → logprob: -22.125003814697266
    10. '(fname' → logprob: -22.250003814697266

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003166353271808475
    2. ')' → logprob: -8.375316619873047
    3. ' ,' → logprob: -9.875316619873047
    4. ']' → logprob: -10.625316619873047
    5. ',None' → logprob: -11.875316619873047
    6. '<|end|>' → logprob: -14.000316619873047
    7. '           ' → logprob: -14.125316619873047
    8. ',['' → logprob: -15.250316619873047
    9. ',set' → logprob: -15.750316619873047
    10. '',' → logprob: -15.875316619873047

Token 318: ' set' (ID: 920)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.30789485573768616
    2. 'set' → logprob: -1.5578948259353638
    3. ' [])' → logprob: -3.6828949451446533
    4. '[]' → logprob: -3.6828949451446533
    5. ' set' → logprob: -5.557894706726074
    6. '[])
' → logprob: -8.807894706726074
    7. ')' → logprob: -9.932894706726074
    8. ' []' → logprob: -10.932894706726074
    9. '[]
' → logprob: -11.057894706726074
    10. ' [])
' → logprob: -11.807894706726074

Token 319: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0037562556099146605
    2. '()' → logprob: -5.753756046295166
    3. '())
' → logprob: -7.503756046295166
    4. '()
' → logprob: -11.878756523132324
    5. ')' → logprob: -12.128756523132324
    6. '();)' → logprob: -12.378756523132324
    7. '())

' → logprob: -13.003756523132324
    8. '()){' → logprob: -13.253756523132324
    9. '(),' → logprob: -13.878756523132324
    10. '():' → logprob: -14.128756523132324

Token 320: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005493374192155898
    2. '
' → logprob: -8.62554931640625
    3. ':' → logprob: -9.37554931640625
    4. '               ' → logprob: -9.50054931640625
    5. '            
' → logprob: -9.50054931640625
    6. '       ' → logprob: -10.25054931640625
    7. '<|end|>' → logprob: -10.62554931640625
    8. ',' → logprob: -11.00054931640625
    9. ' for' → logprob: -11.00054931640625
    10. '  
' → logprob: -11.37554931640625

Token 321: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8610410094261169
    2. ' for' → logprob: -0.8610410094261169
    3. 'for' (adapté à ' for') → logprob: -1.9860410690307617
    4. '               ' → logprob: -4.111041069030762
    5. '
' → logprob: -7.736041069030762
    6. '       ' → logprob: -9.361041069030762
    7. '            
' → logprob: -9.361041069030762
    8. ' if' → logprob: -9.486041069030762
    9. 'if' → logprob: -9.611041069030762
    10. 'self' → logprob: -10.486041069030762

Token 322: ' cs' (ID: 14980)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2629380226135254
    2. 'cs' → logprob: -1.7629380226135254
    3. 'char' → logprob: -3.1379380226135254
    4. 'ch' → logprob: -5.012938022613525
    5. 'u' → logprob: -5.512938022613525
    6. ' c' → logprob: -5.637938022613525
    7. ' cs' → logprob: -6.637938022613525
    8. 's' → logprob: -8.387937545776367
    9. 'src' → logprob: -8.762937545776367
    10. ' char' → logprob: -9.012937545776367

Token 323: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03323550894856453
    2. 'in' → logprob: -4.033235549926758
    3. '_' → logprob: -4.908235549926758
    4. 's' → logprob: -5.658235549926758
    5. '_s' → logprob: -6.033235549926758
    6. ' ' → logprob: -7.033235549926758
    7. '_in' → logprob: -7.408235549926758
    8. ' s' → logprob: -9.283235549926758
    9. ' _' → logprob: -9.533235549926758
    10. '  ' → logprob: -10.283235549926758

Token 324: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.22553201019763947
    2. ' chars' → logprob: -1.600532054901123
    3. '(chars' → logprob: -9.850531578063965
    4. '           ' → logprob: -10.600531578063965
    5. 'cs' → logprob: -11.225531578063965
    6. '_chars' → logprob: -11.475531578063965
    7. '   ' → logprob: -11.975531578063965
    8. '       ' → logprob: -12.725531578063965
    9. '               ' → logprob: -13.475531578063965
    10. 'char' → logprob: -13.475531578063965

Token 325: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00016265720478259027
    2. 's' → logprob: -8.875163078308105
    3. '           ' → logprob: -11.500163078308105
    4. '_' → logprob: -12.375163078308105
    5. ' _' → logprob: -12.875163078308105
    6. '_t' → logprob: -13.875163078308105
    7. '               ' → logprob: -14.125163078308105
    8. ')' → logprob: -14.250163078308105
    9. ' s' → logprob: -14.375163078308105
    10. '   ' → logprob: -14.375163078308105

Token 326: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05587177351117134
    2. ':
' → logprob: -2.9308717250823975
    3. '               ' → logprob: -7.680871963500977
    4. '           ' → logprob: -8.305871963500977
    5. ' :' → logprob: -8.680871963500977
    6. '):
' → logprob: -10.555871963500977
    7. ' for' → logprob: -10.805871963500977
    8. ' :
' → logprob: -11.305871963500977
    9. ')' → logprob: -11.805871963500977
    10. ':
' → logprob: -11.930871963500977

Token 327: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02124015800654888
    2. ' for' → logprob: -3.896240234375
    3. 'for' → logprob: -7.521240234375
    4. ':' → logprob: -10.021240234375
    5. '                ' → logprob: -10.396240234375
    6. '                
' → logprob: -11.021240234375
    7. '           ' → logprob: -11.396240234375
    8. ' in' → logprob: -12.146240234375
    9. ' :' → logprob: -12.146240234375
    10. ',' → logprob: -12.146240234375

Token 328: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05145655944943428
    2. '                   ' → logprob: -3.8014564514160156
    3. '               ' → logprob: -4.301456451416016
    4. 'for' (adapté à ' for') → logprob: -4.426456451416016
    5. ' self' → logprob: -6.301456451416016
    6. 'self' → logprob: -9.176456451416016
    7. ':' → logprob: -9.301456451416016
    8. ' in' → logprob: -10.051456451416016
    9. '	for' → logprob: -10.176456451416016
    10. '                       ' → logprob: -10.426456451416016

Token 329: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.10020732134580612
    2. ' ct' → logprob: -2.3502073287963867
    3. '	ct' → logprob: -14.475207328796387
    4. '(ct' → logprob: -16.85020637512207
    5. ' ' → logprob: -17.10020637512207
    6. '_ct' → logprob: -18.47520637512207
    7. 'ctp' → logprob: -18.60020637512207
    8. '   ' → logprob: -18.85020637512207
    9. 'cts' → logprob: -19.47520637512207
    10. ' ' → logprob: -19.60020637512207

Token 330: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006731711328029633
    2. 'in' → logprob: -5.0067315101623535
    3. ' ' → logprob: -12.131731986999512
    4. '               ' → logprob: -12.631731986999512
    5. '                   ' → logprob: -13.006731986999512
    6. '                ' → logprob: -13.256731986999512
    7. '	in' → logprob: -14.381731986999512
    8. '                    ' → logprob: -14.756731986999512
    9. '                       ' → logprob: -15.131731986999512
    10. '                        ' → logprob: -15.506731986999512

Token 331: ' chars' (ID: 47991)
  Prédit: ' chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chars' → logprob: -0.2519712448120117
    2. 'chars' → logprob: -1.5019712448120117
    3. '(chars' → logprob: -10.376971244812012
    4. '_chars' → logprob: -12.751971244812012
    5. 'cs' → logprob: -13.126971244812012
    6. ' ' → logprob: -13.126971244812012
    7. 'Chars' → logprob: -13.876971244812012
    8. '   ' → logprob: -14.376971244812012
    9. 'char' → logprob: -14.501971244812012
    10. 'ct' → logprob: -14.876971244812012

Token 332: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0014890312450006604
    2. 't' → logprob: -6.626489162445068
    3. 's' → logprob: -8.87648868560791
    4. '_s' → logprob: -12.00148868560791
    5. '_to' → logprob: -12.37648868560791
    6. '           ' → logprob: -12.62648868560791
    7. '_' → logprob: -14.00148868560791
    8. '   ' → logprob: -14.00148868560791
    9. 'T' → logprob: -14.00148868560791
    10. 'to' → logprob: -14.37648868560791

Token 333: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.42063313722610474
    2. ':' → logprob: -1.17063307762146
    3. ':
' → logprob: -3.54563307762146
    4. '                       ' → logprob: -6.420633316040039
    5. ',' → logprob: -7.170633316040039
    6. ' :' → logprob: -7.920633316040039
    7. '):
' → logprob: -7.920633316040039
    8. '               ' → logprob: -8.170633316040039
    9. '):' → logprob: -8.670633316040039
    10. '                    ' → logprob: -8.670633316040039

Token 334: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00010580805974313989
    2. '                       ' → logprob: -10.125105857849121
    3. 'self' → logprob: -10.625105857849121
    4. ' self' → logprob: -10.750105857849121
    5. '               ' → logprob: -12.250105857849121
    6. '                    
' → logprob: -12.625105857849121
    7. ',' → logprob: -12.750105857849121
    8. '                  ' → logprob: -13.250105857849121
    9. '                    ' → logprob: -13.375105857849121
    10. '                           ' → logprob: -13.750105857849121

Token 335: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2509203255176544
    2. ' self' → logprob: -1.625920295715332
    3. '                       ' → logprob: -4.000920295715332
    4. '                   ' → logprob: -5.000920295715332
    5. '   ' → logprob: -9.875920295715332
    6. '               ' → logprob: -10.750920295715332
    7. '       ' → logprob: -10.875920295715332
    8. '           ' → logprob: -11.625920295715332
    9. ',' → logprob: -12.125920295715332
    10. '(self' → logprob: -12.375920295715332

Token 336: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.00016623330884613097
    2. '.' → logprob: -8.750165939331055
    3. ' .' → logprob: -12.125165939331055
    4. '	graph' → logprob: -13.750165939331055
    5. 'graph' → logprob: -14.125165939331055
    6. '.grid' → logprob: -16.250165939331055
    7. ' graph' → logprob: -16.500165939331055
    8. '.Graph' → logprob: -16.500165939331055
    9. '.graphics' → logprob: -16.750165939331055
    10. '   ' → logprob: -17.125165939331055

Token 337: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0024217949248850346
    2. '.' → logprob: -6.127421855926514
    3. ' .' → logprob: -9.252421379089355
    4. '   ' → logprob: -9.627421379089355
    5. '.insert' → logprob: -10.752421379089355
    6. '.create' → logprob: -11.502421379089355
    7. '.connect' → logprob: -11.502421379089355
    8. '.append' → logprob: -11.752421379089355
    9. ').' → logprob: -12.252421379089355
    10. '.build' → logprob: -13.127421379089355

Token 338: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -4.227250610711053e-05
    2. '_mapping' → logprob: -10.750041961669922
    3. 'edge' → logprob: -11.375041961669922
    4. '_connection' → logprob: -13.000041961669922
    5. ' edge' → logprob: -13.125041961669922
    6. 'Edge' → logprob: -13.875041961669922
    7. '_char' → logprob: -14.625041961669922
    8. '(edge' → logprob: -14.625041961669922
    9. '_node' → logprob: -14.750041961669922
    10. '_' → logprob: -15.125041961669922

Token 339: '(cs' (ID: 89621)
  Prédit: '(cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -0.0006400037091225386
    2. '(' → logprob: -7.375639915466309
    3. '(
' → logprob: -12.125639915466309
    4. ' (' → logprob: -12.500639915466309
    5. '(Cs' → logprob: -12.500639915466309
    6. '(ci' → logprob: -16.125640869140625
    7. '(C' → logprob: -16.375640869140625
    8. '(

' → logprob: -16.625640869140625
    9. '((' → logprob: -16.750640869140625
    10. '(cp' → logprob: -16.875640869140625

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010459087789058685
    2. ' ,' → logprob: -6.8760457038879395
    3. ',
' → logprob: -12.126046180725098
    4. '<|end|>' → logprob: -13.001046180725098
    5. '‌,' → logprob: -13.501046180725098
    6. ')' → logprob: -14.001046180725098
    7. ',c' → logprob: -14.126046180725098
    8. '                   ' → logprob: -14.751046180725098
    9. '               ' → logprob: -14.876046180725098
    10. '   ' → logprob: -15.501046180725098

Token 341: ' ct' (ID: 40541)
  Prédit: ' ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ct' → logprob: -0.3132924735546112
    2. 'ct' → logprob: -1.3132925033569336
    3. '	ct' → logprob: -11.063292503356934
    4. '(ct' → logprob: -11.188292503356934
    5. '_ct' → logprob: -14.813292503356934
    6. '.ct' → logprob: -15.063292503356934
    7. ' ' → logprob: -15.813292503356934
    8. ')' → logprob: -16.063291549682617
    9. ' CT' → logprob: -16.063291549682617
    10. ' ctypes' → logprob: -17.188291549682617

Token 342: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.947715832618997e-05
    2. ')
' → logprob: -9.875089645385742
    3. ' )' → logprob: -10.625089645385742
    4. '                   ' → logprob: -12.250089645385742
    5. '<|end|>' → logprob: -13.000089645385742
    6. '               ' → logprob: -13.125089645385742
    7. '')' → logprob: -13.375089645385742
    8. '       ' → logprob: -13.875089645385742
    9. '           ' → logprob: -14.875089645385742
    10. '   ' → logprob: -15.375089645385742

Token 343: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24616794288158417
    2. '<|end|>' → logprob: -1.8711678981781006
    3. '       ' → logprob: -2.9961678981781006
    4. '        
' → logprob: -4.49616813659668
    5. 'return' → logprob: -6.49616813659668
    6. '<|end|>' → logprob: -8.12116813659668
    7. '

' → logprob: -8.49616813659668
    8. '\n' → logprob: -8.62116813659668
    9. '    
' → logprob: -8.62116813659668
    10. '  
' → logprob: -8.74616813659668

Token 345: ' Marian' (ID: 147977)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.030625471845269203
    2. ' return' → logprob: -4.155625343322754
    3. 'result' → logprob: -5.030625343322754
    4. '       ' → logprob: -5.655625343322754
    5. '#' → logprob: -6.655625343322754
    6. 'replacement' → logprob: -6.655625343322754
    7. 're' → logprob: -7.780625343322754
    8. 'visited' → logprob: -8.155625343322754
    9. ' replacements' → logprob: -8.280625343322754
    10. 'total' → logprob: -9.030625343322754

Token 346: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.2651818990707397
    2. '.' → logprob: -1.5151818990707397
    3. '.can' → logprob: -2.0151820182800293
    4. ''s' → logprob: -3.3901820182800293
    5. ' continues' → logprob: -3.3901820182800293
    6. '.swap' → logprob: -3.3901820182800293
    7. ' .' → logprob: -3.6401820182800293
    8. '.replace' → logprob: -3.6401820182800293
    9. '   ' → logprob: -3.6401820182800293
    10. '.graph' → logprob: -4.140182018280029

Token 347: ' swap' (ID: 25489)
  Prédit: 'perform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perform' → logprob: -1.426313042640686
    2. ' perform' → logprob: -1.926313042640686
    3. 'swap' → logprob: -2.1763129234313965
    4. ' use' → logprob: -2.6763129234313965
    5. ' swap' → logprob: -2.8013129234313965
    6. 'use' → logprob: -3.3013129234313965
    7. ' now' → logprob: -3.4263129234313965
    8. 'replace' → logprob: -3.4263129234313965
    9. '   ' → logprob: -3.5513129234313965
    10. 'choose' → logprob: -3.9263129234313965

Token 348: ' letters' (ID: 18151)
  Prédit: ' characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' characters' → logprob: -0.9370416402816772
    2. ' any' → logprob: -1.0620416402816772
    3. ' letters' → logprob: -2.187041759490967
    4. 'characters' → logprob: -2.812041759490967
    5. 'any' → logprob: -2.937041759490967
    6. ' globally' → logprob: -3.937041759490967
    7. 'letters' → logprob: -5.437041759490967
    8. ' nodes' → logprob: -5.937041759490967
    9. ' arbitrary' → logprob: -6.062041759490967
    10. ' vertices' → logprob: -6.562041759490967

Token 349: ' to' (ID: 316)
  Prédit: ' globally'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' globally' → logprob: -0.507637619972229
    2. ' arbitr' → logprob: -1.007637619972229
    3. ' to' → logprob: -4.7576375007629395
    4. 'ar' → logprob: -5.2576375007629395
    5. ' any' → logprob: -5.5076375007629395
    6. '       ' → logprob: -5.6326375007629395
    7. '   ' → logprob: -6.2576375007629395
    8. ' arbitrary' → logprob: -6.8826375007629395
    9. 'any' → logprob: -7.0076375007629395
    10. 'glob' → logprob: -7.1326375007629395

Token 350: ' identify' (ID: 11410)
  Prédit: ' minimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimize' → logprob: -0.22316114604473114
    2. 'reduce' → logprob: -2.223161220550537
    3. ' reduce' → logprob: -2.973161220550537
    4. 'min' → logprob: -4.098161220550537
    5. ' further' → logprob: -5.098161220550537
    6. '       ' → logprob: -6.348161220550537
    7. ' min' → logprob: -6.473161220550537
    8. 'transform' → logprob: -6.473161220550537
    9. ' transform' → logprob: -6.598161220550537
    10. ' achieve' → logprob: -6.723161220550537

Token 351: ' connected' (ID: 12079)
  Prédit: ' connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connected' → logprob: -0.7494170069694519
    2. ' components' → logprob: -2.1244170665740967
    3. 'connected' → logprob: -2.6244170665740967
    4. ' all' → logprob: -2.7494170665740967
    5. ' characters' → logprob: -2.8744170665740967
    6. ' the' → logprob: -3.6244170665740967
    7. 'components' → logprob: -3.6244170665740967
    8. ' groups' → logprob: -3.7494170665740967
    9. ' which' → logprob: -3.8744170665740967
    10. ' and' → logprob: -3.9994170665740967

Token 352: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.12803931534290314
    2. ' components' → logprob: -2.1280393600463867
    3. 'component' → logprob: -7.253039360046387
    4. '_components' → logprob: -7.878039360046387
    5. '_component' → logprob: -11.378039360046387
    6. ' component' → logprob: -12.128039360046387
    7. '-components' → logprob: -13.378039360046387
    8. '.components' → logprob: -13.503039360046387
    9. '
' → logprob: -14.378039360046387
    10. '   ' → logprob: -14.378039360046387

Token 353: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10562285780906677
    2. '
' → logprob: -3.2306227684020996
    3. ',' → logprob: -3.9806227684020996
    4. ' and' → logprob: -3.9806227684020996
    5. ' in' → logprob: -4.9806227684021
    6. '        
' → logprob: -5.1056227684021
    7. ' to' → logprob: -5.6056227684021
    8. '.' → logprob: -5.7306227684021
    9. ',
' → logprob: -7.2306227684021
    10. ' for' → logprob: -7.8556227684021

Token 354: ' merge' (ID: 20345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6381516456604004
    2. 'visited' → logprob: -2.6381516456604004
    3. ' return' → logprob: -2.7631516456604004
    4. ' total' → logprob: -2.8881516456604004
    5. 'total' → logprob: -2.8881516456604004
    6. 'result' → logprob: -3.1381516456604004
    7. 'components' → logprob: -3.2631516456604004
    8. '       ' → logprob: -3.3881516456604004
    9. 'replacement' → logprob: -4.0131516456604
    10. ' replacements' → logprob: -4.1381516456604

Token 355: ' chars' (ID: 47991)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -2.073169469833374
    2. ' sets' → logprob: -2.323169469833374
    3. 'nodes' → logprob: -2.323169469833374
    4. ' all' → logprob: -2.448169469833374
    5. 'characters' → logprob: -2.698169469833374
    6. ' nodes' → logprob: -2.823169469833374
    7. 'vertices' → logprob: -2.948169469833374
    8. ' connected' → logprob: -2.948169469833374
    9. 'all' → logprob: -3.198169469833374
    10. ' components' → logprob: -3.448169469833374

Token 356: '
' (ID: 198)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4157356321811676
    2. '       ' → logprob: -2.0407357215881348
    3. '()' → logprob: -3.6657357215881348
    4. ' into' → logprob: -3.6657357215881348
    5. '
' → logprob: -3.9157357215881348
    6. '(self' → logprob: -3.9157357215881348
    7. 'in' → logprob: -4.165735721588135
    8. ' within' → logprob: -4.165735721588135
    9. ' and' → logprob: -4.290735721588135
    10. 's' → logprob: -4.665735721588135

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16983996331691742
    2. '
' → logprob: -1.9198399782180786
    3. '        
' → logprob: -4.794839859008789
    4. '    
' → logprob: -7.919839859008789
    5. '  
' → logprob: -8.044839859008789
    6. ',' → logprob: -8.794839859008789
    7. '.' → logprob: -10.044839859008789
    8. ' 
' → logprob: -10.169839859008789
    9. ' and' → logprob: -10.294839859008789
    10. '\n' → logprob: -10.419839859008789

Token 358: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5998559594154358
    2. '       ' → logprob: -0.8498559594154358
    3. 'self' → logprob: -4.349855899810791
    4. '        
' → logprob: -4.974855899810791
    5. ' self' → logprob: -6.724855899810791
    6. '  
' → logprob: -7.599855899810791
    7. '    
' → logprob: -7.849855899810791
    8. '\n' → logprob: -8.22485637664795
    9. '```' → logprob: -8.34985637664795
    10. ' 
' → logprob: -8.84985637664795

Token 359: ' final' (ID: 1721)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9573616981506348
    2. '       ' → logprob: -1.3323616981506348
    3. ' self' → logprob: -1.4573616981506348
    4. 'return' → logprob: -2.7073616981506348
    5. ' return' → logprob: -3.8323616981506348
    6. 'components' → logprob: -4.707361698150635
    7. 'for' → logprob: -5.207361698150635
    8. ' for' → logprob: -5.707361698150635
    9. 'result' → logprob: -5.707361698150635
    10. ' components' → logprob: -5.707361698150635

Token 360: ' minimal' (ID: 19957)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.7984042167663574
    2. '_cost' → logprob: -1.6734042167663574
    3. ' replacements' → logprob: -2.5484042167663574
    4. '_count' → logprob: -2.7984042167663574
    5. '_result' → logprob: -2.9234042167663574
    6. '_score' → logprob: -3.1734042167663574
    7. 'cost' → logprob: -4.173404216766357
    8. ' cost' → logprob: -4.173404216766357
    9. 'return' → logprob: -4.798404216766357
    10. 'replacement' → logprob: -4.923404216766357

Token 361: ' replacements' (ID: 92347)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.006186045240610838
    2. '_' → logprob: -5.506186008453369
    3. 're' → logprob: -7.256186008453369
    4. ' replacements' → logprob: -7.756186008453369
    5. '   ' → logprob: -8.006186485290527
    6. ' _' → logprob: -8.506186485290527
    7. '_replace' → logprob: -9.131186485290527
    8. '_cost' → logprob: -9.381186485290527
    9. 'replacement' → logprob: -9.506186485290527
    10. '       ' → logprob: -10.131186485290527

Token 362: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3919956386089325
    2. ' =' → logprob: -1.2669956684112549
    3. 'return' → logprob: -3.891995668411255
    4. ' return' → logprob: -4.641995429992676
    5. '=' → logprob: -4.891995429992676
    6. 'result' → logprob: -7.016995429992676
    7. 'count' → logprob: -7.016995429992676
    8. '        
' → logprob: -7.641995429992676
    9. '
' → logprob: -7.766995429992676
    10. ' is' → logprob: -7.891995429992676

Token 363: ' number' (ID: 2086)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.17331595718860626
    2. 'sum' → logprob: -1.9233160018920898
    3. ' self' → logprob: -5.42331600189209
    4. '0' → logprob: -5.67331600189209
    5. ' sum' → logprob: -5.79831600189209
    6. 'max' → logprob: -6.67331600189209
    7. 'len' → logprob: -7.92331600189209
    8. '   ' → logprob: -8.79831600189209
    9. '       ' → logprob: -9.17331600189209
    10. 'min' → logprob: -9.92331600189209

Token 364: ' of' (ID: 328)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.6663905382156372
    2. '(' → logprob: -1.1663905382156372
    3. '(self' → logprob: -2.2913904190063477
    4. 'of' → logprob: -3.4163904190063477
    5. ' of' → logprob: -3.9163904190063477
    6. '(sum' → logprob: -4.791390419006348
    7. '(
' → logprob: -5.541390419006348
    8. 'len' → logprob: -6.166390419006348
    9. ' (' → logprob: -6.291390419006348
    10. '_of' → logprob: -6.291390419006348

Token 365: ' connected' (ID: 12079)
  Prédit: ' connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connected' → logprob: -1.2516722679138184
    2. 'connected' → logprob: -1.3766722679138184
    3. 'components' → logprob: -1.8766722679138184
    4. 'self' → logprob: -2.0016722679138184
    5. ' components' → logprob: -2.7516722679138184
    6. ' self' → logprob: -3.7516722679138184
    7. ' characters' → logprob: -4.001672267913818
    8. 'characters' → logprob: -4.376672267913818
    9. ' disconnected' → logprob: -5.001672267913818
    10. 'un' → logprob: -5.126672267913818

Token 366: ' components' (ID: 10674)
  Prédit: '_components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.004056433215737343
    2. ' components' → logprob: -6.004056453704834
    3. 'components' → logprob: -6.754056453704834
    4. '_component' → logprob: -8.004055976867676
    5. '_' → logprob: -9.504055976867676
    6. ' _' → logprob: -13.004055976867676
    7. '_comp' → logprob: -14.629055976867676
    8. '_nodes' → logprob: -14.754055976867676
    9. '   ' → logprob: -15.004055976867676
    10. ' ' → logprob: -15.254055976867676

Token 367: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7314794063568115
    2. '()' → logprob: -1.1064794063568115
    3. ' -' → logprob: -2.6064794063568115
    4. ' +' → logprob: -3.3564794063568115
    5. '
' → logprob: -3.7314794063568115
    6. ' ' → logprob: -4.231479644775391
    7. '(self' → logprob: -5.231479644775391
    8. ' =' → logprob: -5.356479644775391
    9. '()
' → logprob: -5.356479644775391
    10. '   ' → logprob: -5.606479644775391

Token 368: ' number' (ID: 2086)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005257952958345413
    2. ' ' → logprob: -5.255258083343506
    3. 'len' → logprob: -11.380257606506348
    4. ' len' → logprob: -12.505257606506348
    5. 'self' → logprob: -12.630257606506348
    6. '   ' → logprob: -13.130257606506348
    7. 'number' → logprob: -13.380257606506348
    8. '       ' → logprob: -14.630257606506348
    9. ' self' → logprob: -15.255257606506348
    10. '```' → logprob: -15.505257606506348

Token 369: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7224868535995483
    2. 'of' → logprob: -0.7224868535995483
    3. '_of' → logprob: -3.722486972808838
    4. 'Of' → logprob: -6.347486972808838
    5. '<|end|>' → logprob: -6.472486972808838
    6. ')' → logprob: -8.09748649597168
    7. '
' → logprob: -8.47248649597168
    8. 'self' → logprob: -9.09748649597168
    9. '```' → logprob: -9.22248649597168
    10. 's' → logprob: -9.22248649597168

Token 370: ' matches' (ID: 15248)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.218971848487854
    2. 'connected' → logprob: -1.468971848487854
    3. ' connected' → logprob: -2.0939717292785645
    4. 'components' → logprob: -2.0939717292785645
    5. ' self' → logprob: -3.2189717292785645
    6. ' components' → logprob: -3.3439717292785645
    7. 'nodes' → logprob: -3.7189717292785645
    8. ' nodes' → logprob: -3.9689717292785645
    9. 's' → logprob: -3.9689717292785645
    10. 'characters' → logprob: -4.0939717292785645

Token 371: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21342289447784424
    2. '
' → logprob: -1.8384228944778442
    3. '        
' → logprob: -3.9634227752685547
    4. '```' → logprob: -5.838422775268555
    5. ' 
' → logprob: -5.963422775268555
    6. '  
' → logprob: -5.963422775268555
    7. '<|end|>' → logprob: -6.963422775268555
    8. 'return' → logprob: -6.963422775268555
    9. '   ' → logprob: -7.088422775268555
    10. '    
' → logprob: -7.338422775268555

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008364692330360413
    2. '
' → logprob: -5.508364677429199
    3. '        
' → logprob: -6.258364677429199
    4. '```' → logprob: -6.883364677429199
    5. 'return' → logprob: -7.258364677429199
    6. ' return' → logprob: -8.3833646774292
    7. '<|end|>' → logprob: -9.5083646774292
    8. '   ' → logprob: -10.0083646774292
    9. '  
' → logprob: -10.1333646774292
    10. '    
' → logprob: -10.7583646774292

Token 373: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7446901202201843
    2. 'return' → logprob: -0.7446901202201843
    3. ' return' → logprob: -3.119690179824829
    4. 'result' → logprob: -5.99468994140625
    5. '
' → logprob: -6.11968994140625
    6. '        
' → logprob: -7.24468994140625
    7. '```' → logprob: -7.99468994140625
    8. ' result' → logprob: -9.74468994140625
    9. 'components' → logprob: -9.86968994140625
    10. ' 
' → logprob: -10.74468994140625

Token 374: ' Actually' (ID: 50557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6603229641914368
    2. 'return' → logprob: -0.7853229641914368
    3. ' return' → logprob: -3.660322904586792
    4. 'result' → logprob: -6.785323143005371
    5. 'components' → logprob: -8.660323143005371
    6. '
' → logprob: -9.410323143005371
    7. '        
' → logprob: -9.910323143005371
    8. 'connected' → logprob: -10.410323143005371
    9. ' result' → logprob: -10.535323143005371
    10. 'count' → logprob: -10.535323143005371

Token 375: ',' (ID: 11)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.28826290369033813
    2. 'return' → logprob: -1.5382628440856934
    3. '       ' → logprob: -3.6632628440856934
    4. ' ' → logprob: -5.413262844085693
    5. '        ' → logprob: -6.788262844085693
    6. 'self' → logprob: -7.163262844085693
    7. ' self' → logprob: -7.288262844085693
    8. ' ' → logprob: -7.288262844085693
    9. '    ' → logprob: -7.538262844085693
    10. 'result' → logprob: -8.413263320922852

Token 376: ' replacements' (ID: 92347)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2925863265991211
    2. 'return' → logprob: -1.792586326599121
    3. ' replacements' → logprob: -3.167586326599121
    4. '       ' → logprob: -4.292586326599121
    5. ' result' → logprob: -4.417586326599121
    6. ' #' → logprob: -5.667586326599121
    7. 'result' → logprob: -5.667586326599121
    8. ' total' → logprob: -5.792586326599121
    9. ' replacement' → logprob: -6.542586326599121
    10. ' connected' → logprob: -6.542586326599121

Token 377: ' correspond' (ID: 11095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.347747802734375
    2. '_needed' → logprob: -1.597747802734375
    3. '=' → logprob: -2.597747802734375
    4. '_required' → logprob: -4.847747802734375
    5. '_count' → logprob: -5.347747802734375
    6. 'needed' → logprob: -5.847747802734375
    7. ' needed' → logprob: -7.222747802734375
    8. ' are' → logprob: -9.097747802734375
    9. '   ' → logprob: -9.222747802734375
    10. 'count' → logprob: -9.847747802734375

Token 378: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.06993243098258972
    2. 'to' → logprob: -2.819932460784912
    3. '_to' → logprob: -5.194932460784912
    4. '=' → logprob: -6.444932460784912
    5. ' =' → logprob: -8.194931983947754
    6. '_' → logprob: -8.194931983947754
    7. '<|end|>' → logprob: -8.944931983947754
    8. '<|end|>' → logprob: -10.569931983947754
    9. 'To' → logprob: -11.319931983947754
    10. '	to' → logprob: -11.944931983947754

Token 379: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1741445064544678
    2. ' self' → logprob: -1.4241445064544678
    3. ' len' → logprob: -1.6741445064544678
    4. 'self' → logprob: -2.0491445064544678
    5. 'len' → logprob: -2.5491445064544678
    6. ' sum' → logprob: -3.7991445064544678
    7. 'the' → logprob: -3.9241445064544678
    8. 'sum' → logprob: -4.799144744873047
    9. ' connected' → logprob: -6.549144744873047
    10. ' ' → logprob: -7.049144744873047

Token 380: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.2576456665992737
    2. ' number' → logprob: -2.507645606994629
    3. 'sum' → logprob: -2.757645606994629
    4. 'total' → logprob: -3.632645606994629
    5. ' sum' → logprob: -4.257645606994629
    6. 'size' → logprob: -4.382645606994629
    7. ' total' → logprob: -4.882645606994629
    8. 'minimum' → logprob: -5.257645606994629
    9. 'len' → logprob: -5.632645606994629
    10. 'count' → logprob: -5.757645606994629

Token 381: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.15550918877124786
    2. 'of' → logprob: -2.1555092334747314
    3. '_' → logprob: -4.780508995056152
    4. '
' → logprob: -4.905508995056152
    5. ' ' → logprob: -5.780508995056152
    6. '_of' → logprob: -6.030508995056152
    7. '[' → logprob: -7.030508995056152
    8. '  ' → logprob: -7.155508995056152
    9. ' 
' → logprob: -7.155508995056152
    10. '\' → logprob: -7.780508995056152

Token 382: ' connected' (ID: 12079)
  Prédit: ' connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connected' → logprob: -1.4184966087341309
    2. 'self' → logprob: -1.5434966087341309
    3. 'connected' → logprob: -1.5434966087341309
    4. 'components' → logprob: -2.418496608734131
    5. ' self' → logprob: -3.043496608734131
    6. ' edges' → logprob: -3.668496608734131
    7. ' characters' → logprob: -3.668496608734131
    8. ' components' → logprob: -3.668496608734131
    9. 'characters' → logprob: -3.668496608734131
    10. 'edges' → logprob: -3.918496608734131

Token 383: ' components' (ID: 10674)
  Prédit: ' components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' components' → logprob: -0.2724834978580475
    2. 'components' → logprob: -1.522483468055725
    3. '_components' → logprob: -3.8974835872650146
    4. 'component' → logprob: -10.772483825683594
    5. '_component' → logprob: -11.147483825683594
    6. '
' → logprob: -12.272483825683594
    7. ' component' → logprob: -12.397483825683594
    8. '_' → logprob: -13.272483825683594
    9. ' componentes' → logprob: -13.647483825683594
    10. ' ' → logprob: -13.897483825683594

Token 384: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05673998221755028
    2. '
' → logprob: -3.1817400455474854
    3. '        
' → logprob: -4.806739807128906
    4. 'return' → logprob: -5.806739807128906
    5. '<|end|>' → logprob: -7.306739807128906
    6. ' return' → logprob: -8.306739807128906
    7. '   ' → logprob: -8.431739807128906
    8. '  
' → logprob: -8.431739807128906
    9. '    
' → logprob: -8.431739807128906
    10. '```' → logprob: -8.681739807128906

Token 385: ' number' (ID: 2086)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6211717128753662
    2. '1' → logprob: -0.8711717128753662
    3. ' len' → logprob: -3.746171712875366
    4. 'self' → logprob: -4.746171951293945
    5. 'sum' → logprob: -4.746171951293945
    6. ' sum' → logprob: -6.621171951293945
    7. ' self' → logprob: -6.996171951293945
    8. '(len' → logprob: -7.746171951293945
    9. ' ' → logprob: -8.121171951293945
    10. ' (' → logprob: -10.246171951293945

Token 386: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.5856671929359436
    2. '_of' → logprob: -1.4606671333312988
    3. ' of' → logprob: -1.5856671333312988
    4. '
' → logprob: -5.585667133331299
    5. 'self' → logprob: -7.460667133331299
    6. 'Of' → logprob: -7.835667133331299
    7. '   ' → logprob: -8.085667610168457
    8. 'ofs' → logprob: -8.335667610168457
    9. '[' → logprob: -8.460667610168457
    10. 's' → logprob: -8.710667610168457

Token 387: ' matched' (ID: 31366)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.8505584597587585
    2. ' matches' → logprob: -1.8505585193634033
    3. 'edges' → logprob: -2.2255585193634033
    4. 'matched' → logprob: -2.4755585193634033
    5. ' edges' → logprob: -2.7255585193634033
    6. ' matched' → logprob: -3.6005585193634033
    7. 'nodes' → logprob: -3.9755585193634033
    8. 'characters' → logprob: -4.100558280944824
    9. ' nodes' → logprob: -4.225558280944824
    10. ' characters' → logprob: -4.600558280944824

Token 388: ' chars' (ID: 47991)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.8888508677482605
    2. '_nodes' → logprob: -1.2638509273529053
    3. '_pairs' → logprob: -2.0138509273529053
    4. '_components' → logprob: -3.0138509273529053
    5. '_edges' → logprob: -3.5138509273529053
    6. '_letters' → logprob: -3.7638509273529053
    7. ')' → logprob: -4.013850688934326
    8. '_tokens' → logprob: -4.888850688934326
    9. '_char' → logprob: -4.888850688934326
    10. '
' → logprob: -5.388850688934326

Token 389: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33480599522590637
    2. '
' → logprob: -1.584805965423584
    3. 'return' → logprob: -2.709805965423584
    4. '        
' → logprob: -4.709805965423584
    5. ' return' → logprob: -6.209805965423584
    6. '<|end|>' → logprob: -7.834805965423584
    7. 'def' → logprob: -8.084806442260742
    8. '```' → logprob: -8.584806442260742
    9. '   ' → logprob: -8.834806442260742
    10. 'result' → logprob: -9.334806442260742

Token 390: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033872056752443314
    2. 'return' → logprob: -3.908872127532959
    3. '        
' → logprob: -5.033872127532959
    4. '
' → logprob: -5.283872127532959
    5. ' return' → logprob: -7.908872127532959
    6. '```' → logprob: -8.2838716506958
    7. '   ' → logprob: -8.7838716506958
    8. 'def' → logprob: -9.1588716506958
    9. '    
' → logprob: -9.4088716506958
    10. '           ' → logprob: -9.7838716506958

Token 391: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002831030637025833
    2. '       ' → logprob: -6.002830982208252
    3. 'components' → logprob: -9.00283145904541
    4. 'result' → logprob: -9.25283145904541
    5. 're' → logprob: -9.50283145904541
    6. ' return' → logprob: -10.62783145904541
    7. 'connected' → logprob: -11.12783145904541
    8. 'visited' → logprob: -12.00283145904541
    9. 'replacement' → logprob: -12.37783145904541
    10. 'matches' → logprob: -12.87783145904541

Token 392: ' But' (ID: 3072)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.015257819555699825
    2. 're' → logprob: -5.765257835388184
    3. 'components' → logprob: -5.765257835388184
    4. 'connected' → logprob: -6.015257835388184
    5. '       ' → logprob: -6.390257835388184
    6. 'result' → logprob: -6.765257835388184
    7. 'visited' → logprob: -7.015257835388184
    8. 'matches' → logprob: -7.640257835388184
    9. 'replacement' → logprob: -7.765257835388184
    10. 'def' → logprob: -7.765257835388184

Token 393: ' problem' (ID: 4792)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6177211403846741
    2. 'return' → logprob: -1.3677210807800293
    3. ' return' → logprob: -1.7427210807800293
    4. '#' → logprob: -4.492721080780029
    5. ' #' → logprob: -5.617721080780029
    6. 'result' → logprob: -5.617721080780029
    7. ' connected' → logprob: -5.867721080780029
    8. 'connected' → logprob: -6.242721080780029
    9. ' result' → logprob: -6.367721080780029
    10. ' the' → logprob: -6.742721080780029

Token 394: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8249695301055908
    2. ' is' → logprob: -0.8249695301055908
    3. '.' → logprob: -3.449969530105591
    4. ' remains' → logprob: -3.574969530105591
    5. ' continues' → logprob: -4.199969291687012
    6. '   ' → logprob: -4.574969291687012
    7. 'is' → logprob: -4.824969291687012
    8. '#' → logprob: -5.324969291687012
    9. '       ' → logprob: -5.324969291687012
    10. 'atic' → logprob: -5.949969291687012

Token 395: ' actually' (ID: 4771)
  Prédit: ' incomplete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' incomplete' → logprob: -0.7624295353889465
    2. ' that' → logprob: -1.2624294757843018
    3. ' how' → logprob: -2.1374294757843018
    4. 'that' → logprob: -3.3874294757843018
    5. ' to' → logprob: -3.5124294757843018
    6. ' not' → logprob: -4.262429714202881
    7. ' still' → logprob: -4.887429714202881
    8. 'to' → logprob: -5.012429714202881
    9. ' complex' → logprob: -5.137429714202881
    10. 'self' → logprob: -5.512429714202881

Token 396: ' simpler' (ID: 48697)
  Prédit: ' incomplete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' incomplete' → logprob: -1.3785440921783447
    2. 'to' → logprob: -1.8785440921783447
    3. 'unfinished' → logprob: -2.0035440921783447
    4. 'NP' → logprob: -2.2535440921783447
    5. 'not' → logprob: -2.6285440921783447
    6. 'that' → logprob: -3.2535440921783447
    7. 'in' → logprob: -3.3785440921783447
    8. ' to' → logprob: -3.5035440921783447
    9. ' NP' → logprob: -3.7535440921783447
    10. 'finding' → logprob: -3.8785440921783447

Token 397: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011474530212581158
    2. '        
' → logprob: -4.886474609375
    3. 'return' → logprob: -6.136474609375
    4. '
' → logprob: -6.636474609375
    5. '        ' → logprob: -9.011474609375
    6. ' return' → logprob: -9.886474609375
    7. '```' → logprob: -10.386474609375
    8. '<|end|>' → logprob: -10.511474609375
    9. ',' → logprob: -10.886474609375
    10. '#' → logprob: -10.886474609375

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05919560790061951
    2. 'return' → logprob: -3.4341955184936523
    3. ' return' → logprob: -3.6841955184936523
    4. '```' → logprob: -10.559195518493652
    5. '        
' → logprob: -10.684195518493652
    6. '#' → logprob: -11.184195518493652
    7. 'count' → logprob: -11.934195518493652
    8. 'result' → logprob: -12.059195518493652
    9. ' pass' → logprob: -12.309195518493652
    10. '        ' → logprob: -12.309195518493652

Token 399: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9232184886932373
    2. '       ' → logprob: -1.0482184886932373
    3. ' return' → logprob: -1.4232184886932373
    4. '#' (adapté à ' #') → logprob: -5.423218727111816
    5. ' total' → logprob: -6.673218727111816
    6. ' #' → logprob: -7.048218727111816
    7. ' replacements' → logprob: -7.048218727111816
    8. 'result' → logprob: -7.173218727111816
    9. 'replacement' → logprob: -7.298218727111816
    10. ' connected' → logprob: -7.798218727111816

Token 400: ' After' (ID: 6311)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.22640939056873322
    2. ' return' → logprob: -1.9764094352722168
    3. '       ' → logprob: -2.976409435272217
    4. '#' → logprob: -5.976409435272217
    5. ' total' → logprob: -6.476409435272217
    6. 'total' → logprob: -6.726409435272217
    7. ' replacements' → logprob: -6.726409435272217
    8. 're' → logprob: -6.851409435272217
    9. 'count' → logprob: -6.976409435272217
    10. 'replacement' → logprob: -7.226409435272217

Token 401: ' Jennifer' (ID: 45750)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.2482197284698486
    2. 'all' → logprob: -1.3732197284698486
    3. 'sorting' → logprob: -1.8732197284698486
    4. 'building' → logprob: -2.9982197284698486
    5. 'matching' → logprob: -3.1232197284698486
    6. 'Jennifer' → logprob: -3.3732197284698486
    7. 'construct' → logprob: -3.9982197284698486
    8. '#' → logprob: -4.3732194900512695
    9. 'the' → logprob: -4.4982194900512695
    10. ' rearr' → logprob: -4.4982194900512695

Token 402: ' sorts' (ID: 31041)
  Prédit: ' rearr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rearr' → logprob: -0.5554559230804443
    2. 're' → logprob: -1.0554559230804443
    3. ' re' → logprob: -3.6804559230804443
    4. ' and' → logprob: -4.430456161499023
    5. 'arr' → logprob: -4.430456161499023
    6. ''s' → logprob: -4.555456161499023
    7. ' sorts' → logprob: -5.055456161499023
    8. 'and' → logprob: -5.930456161499023
    9. ' optim' → logprob: -6.805456161499023
    10. 'optim' → logprob: -6.930456161499023

Token 403: ' S' (ID: 336)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6518987417221069
    2. ' s' → logprob: -2.1518988609313965
    3. ' and' → logprob: -2.4018988609313965
    4. 'self' → logprob: -2.4018988609313965
    5. 'and' → logprob: -2.7768988609313965
    6. ' both' → logprob: -2.9018988609313965
    7. 'both' → logprob: -3.6518988609313965
    8. 'the' → logprob: -4.5268988609313965
    9. ' the' → logprob: -5.0268988609313965
    10. '(self' → logprob: -5.2768988609313965

Token 404: ' arbitr' (ID: 31157)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20435455441474915
    2. 'and' → logprob: -2.0793545246124268
    3. ',' → logprob: -2.8293545246124268
    4. ' ,' → logprob: -7.704354763031006
    5. ' into' → logprob: -9.454354286193848
    6. ' to' → logprob: -9.454354286193848
    7. 's' → logprob: -11.329354286193848
    8. 'to' → logprob: -11.454354286193848
    9. '.' → logprob: -11.454354286193848
    10. ' the' → logprob: -11.454354286193848

Token 405: 'arily' (ID: 10581)
  Prédit: 'arily'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arily' → logprob: -0.871052086353302
    2. 'ary' → logprob: -1.1210520267486572
    3. 'age' → logprob: -2.1210520267486572
    4. 'anged' → logprob: -2.9960520267486572
    5. 'range' → logprob: -3.9960520267486572
    6. 'sorted' → logprob: -4.871052265167236
    7. 'ange' → logprob: -4.996052265167236
    8. 'aged' → logprob: -5.246052265167236
    9. 's' → logprob: -5.246052265167236
    10. 'bitr' → logprob: -5.496052265167236

Token 406: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3049769997596741
    2. 'and' → logprob: -2.3049769401550293
    3. ',
' → logprob: -2.6799769401550293
    4. ' and' → logprob: -2.8049769401550293
    5. '       ' → logprob: -4.304976940155029
    6. 's' → logprob: -4.304976940155029
    7. '#' → logprob: -6.429976940155029
    8. 'self' → logprob: -7.054976940155029
    9. 'to' → logprob: -7.554976940155029
    10. ' to' → logprob: -7.554976940155029

Token 407: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08050771802663803
    2. '       ' → logprob: -2.705507755279541
    3. 'return' → logprob: -4.705507755279541
    4. 'the' → logprob: -7.205507755279541
    5. ' #' → logprob: -8.705507278442383
    6. ' the' → logprob: -8.830507278442383
    7. 'and' → logprob: -9.205507278442383
    8. ' return' → logprob: -9.205507278442383
    9. '   ' → logprob: -9.580507278442383
    10. ' and' → logprob: -10.205507278442383

Token 408: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.12242410331964493
    2. '       ' → logprob: -2.8724241256713867
    3. 'return' → logprob: -2.8724241256713867
    4. ' return' → logprob: -6.872424125671387
    5. ' #' → logprob: -7.497424125671387
    6. '   ' → logprob: -9.122424125671387
    7. 'and' → logprob: -9.372424125671387
    8. 'the' → logprob: -9.372424125671387
    9. 'for' → logprob: -9.872424125671387
    10. 'replace' → logprob: -10.247424125671387

Token 409: ' Marian' (ID: 147977)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8445706963539124
    2. 'return' → logprob: -1.5945706367492676
    3. ' minimal' → logprob: -2.5945706367492676
    4. 'minimal' → logprob: -2.8445706367492676
    5. ' replacements' → logprob: -2.8445706367492676
    6. 're' → logprob: -3.0945706367492676
    7. 'the' → logprob: -3.4695706367492676
    8. ' return' → logprob: -4.219570636749268
    9. ' #' → logprob: -4.719570636749268
    10. ' the' → logprob: -4.719570636749268

Token 410: ' swaps' (ID: 150699)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.43925613164901733
    2. 'can' → logprob: -1.064256191253662
    3. ' swaps' → logprob: -5.689256191253662
    4. ''s' → logprob: -6.064256191253662
    5. 's' → logprob: -6.564256191253662
    6. '   ' → logprob: -7.439256191253662
    7. ' uses' → logprob: -8.314255714416504
    8. 're' → logprob: -8.814255714416504
    9. ' will' → logprob: -8.814255714416504
    10. '_can' → logprob: -8.939255714416504

Token 411: ' letters' (ID: 18151)
  Prédit: ' letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letters' → logprob: -0.6024234890937805
    2. ' characters' → logprob: -1.4774234294891357
    3. 'characters' → logprob: -2.7274234294891357
    4. 'letters' → logprob: -2.8524234294891357
    5. 's' → logprob: -3.3524234294891357
    6. ' s' → logprob: -3.9774234294891357
    7. ' the' → logprob: -4.102423667907715
    8. 'self' → logprob: -5.102423667907715
    9. 'the' → logprob: -5.102423667907715
    10. ' self' → logprob: -5.602423667907715

Token 412: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0044301748275757
    2. ' to' → logprob: -1.0044301748275757
    3. '
' → logprob: -2.7544302940368652
    4. ' globally' → logprob: -2.7544302940368652
    5. 'to' → logprob: -3.2544302940368652
    6. '        
' → logprob: -3.7544302940368652
    7. '   ' → logprob: -4.004430294036865
    8. ' in' → logprob: -4.504430294036865
    9. ',' → logprob: -4.879430294036865
    10. 's' → logprob: -5.504430294036865

Token 413: ' make' (ID: 1520)
  Prédit: ' minimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimize' → logprob: -0.5548948049545288
    2. 'min' → logprob: -1.5548948049545288
    3. 'make' → logprob: -1.9298948049545288
    4. 'match' → logprob: -3.6798949241638184
    5. ' match' → logprob: -4.054894924163818
    6. ' make' → logprob: -4.554894924163818
    7. 'align' → logprob: -5.054894924163818
    8. ' map' → logprob: -6.804894924163818
    9. ' align' → logprob: -6.804894924163818
    10. ' perfectly' → logprob: -6.929894924163818

Token 414: ' character' (ID: 5855)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2630313038825989
    2. 'self' → logprob: -2.263031244277954
    3. 'S' → logprob: -3.138031244277954
    4. ' s' → logprob: -3.388031244277954
    5. 't' → logprob: -3.763031244277954
    6. 'the' → logprob: -5.263031482696533
    7. 'them' → logprob: -5.638031482696533
    8. 'sure' → logprob: -5.638031482696533
    9. ' S' → logprob: -5.763031482696533
    10. ' t' → logprob: -6.138031482696533

Token 415: ' sets' (ID: 11982)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28329935669898987
    2. ' counts' → logprob: -2.533299446105957
    3. 'counts' → logprob: -2.533299446105957
    4. ' frequencies' → logprob: -3.533299446105957
    5. ' replacements' → logprob: -4.283299446105957
    6. ' by' → logprob: -5.283299446105957
    7. ' sets' → logprob: -5.408299446105957
    8. 'matches' → logprob: -5.408299446105957
    9. 'sets' → logprob: -5.533299446105957
    10. ' mappings' → logprob: -5.533299446105957

Token 416: ' match' (ID: 3981)
  Prédit: ' equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' equal' → logprob: -1.0116499662399292
    2. ' identical' → logprob: -1.3866499662399292
    3. ' match' → logprob: -1.5116499662399292
    4. 'match' → logprob: -2.6366500854492188
    5. 'equal' → logprob: -3.0116500854492188
    6. ' consistent' → logprob: -4.386650085449219
    7. '       ' → logprob: -5.261650085449219
    8. ' matching' → logprob: -5.511650085449219
    9. ' compatible' → logprob: -6.261650085449219
    10. ' into' → logprob: -6.386650085449219

Token 417: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051756810396909714
    2. '        
' → logprob: -3.3017568588256836
    3. '<|end|>' → logprob: -5.176756858825684
    4. '
' → logprob: -5.926756858825684
    5. ',' → logprob: -6.426756858825684
    6. '.' → logprob: -7.301756858825684
    7. '#' → logprob: -7.676756858825684
    8. '        
        
' → logprob: -8.426756858825684
    9. 'return' → logprob: -8.426756858825684
    10. ' and' → logprob: -8.551756858825684

Token 418: ' closely' (ID: 23595)
  Prédit: 'much'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'much' → logprob: -0.09440764784812927
    2. 'clos' → logprob: -3.719407558441162
    3. 'best' → logprob: -3.719407558441162
    4. 'close' → logprob: -4.094407558441162
    5. 'possible' → logprob: -4.594407558441162
    6. 'well' → logprob: -4.719407558441162
    7. ' much' → logprob: -5.719407558441162
    8. 'perfect' → logprob: -6.344407558441162
    9. ' closely' → logprob: -8.21940803527832
    10. '```' → logprob: -9.21940803527832

Token 419: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.06171946972608566
    2. 'possible' → logprob: -2.9367194175720215
    3. ' as' → logprob: -5.1867194175720215
    4. '       ' → logprob: -7.0617194175720215
    5. ' possible' → logprob: -8.31171989440918
    6. '           ' → logprob: -9.93671989440918
    7. '   ' → logprob: -10.06171989440918
    8. '_possible' → logprob: -12.06171989440918
    9. '
' → logprob: -12.31171989440918
    10. '#' → logprob: -12.43671989440918

Token 420: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.0005547016044147313
    2. ' possible' → logprob: -7.50055456161499
    3. '```' → logprob: -14.125555038452148
    4. '
' → logprob: -14.500555038452148
    5. '_possible' → logprob: -15.375555038452148
    6. 'poss' → logprob: -15.750555038452148
    7. '   ' → logprob: -16.62555503845215
    8. ' posible' → logprob: -17.87555503845215
    9. 'Possible' → logprob: -18.75055503845215
    10. '    
' → logprob: -18.87555503845215

Token 421: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020262964069843292
    2. '<|end|>' → logprob: -4.270263195037842
    3. '        
' → logprob: -5.645263195037842
    4. '
' → logprob: -6.395263195037842
    5. 'return' → logprob: -8.270262718200684
    6. '<|end|>' → logprob: -8.770262718200684
    7. '#' → logprob: -9.895262718200684
    8. '```' → logprob: -9.895262718200684
    9. '        ' → logprob: -10.020262718200684
    10. '   ' → logprob: -10.020262718200684

Token 422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010199295356869698
    2. '#' → logprob: -4.635199069976807
    3. '           ' → logprob: -8.635199546813965
    4. 'return' → logprob: -9.510199546813965
    5. '   ' → logprob: -10.260199546813965
    6. '```' → logprob: -10.260199546813965
    7. ' and' → logprob: -10.635199546813965
    8. 'and' → logprob: -10.885199546813965
    9. ' #' → logprob: -11.385199546813965
    10. ' to' → logprob: -11.635199546813965

Token 423: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3290499150753021
    2. '       ' → logprob: -1.3290499448776245
    3. 'return' → logprob: -4.204050064086914
    4. 'and' → logprob: -8.579050064086914
    5. '        
' → logprob: -8.829050064086914
    6. '
' → logprob: -9.079050064086914
    7. ' return' → logprob: -9.454050064086914
    8. ' and' → logprob: -9.704050064086914
    9. '   ' → logprob: -9.829050064086914
    10. ' #' → logprob: -10.704050064086914

Token 424: ' Karin' (ID: 155447)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3836149573326111
    2. '       ' → logprob: -1.7586150169372559
    3. 'return' → logprob: -2.008615016937256
    4. ' return' → logprob: -4.633615016937256
    5. '
' → logprob: -6.758615016937256
    6. ' #' → logprob: -7.258615016937256
    7. 'result' → logprob: -8.258614540100098
    8. '   ' → logprob: -8.883614540100098
    9. '        
' → logprob: -9.883614540100098
    10. '```' → logprob: -10.633614540100098

Token 425: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34512779116630554
    2. '#' → logprob: -2.345127820968628
    3. '        
' → logprob: -3.470127820968628
    4. '   ' → logprob: -3.595127820968628
    5. '
' → logprob: -3.595127820968628
    6. ''s' → logprob: -4.095127582550049
    7. 'return' → logprob: -4.470127582550049
    8. ' return' → logprob: -4.970127582550049
    9. '<|end|>' → logprob: -5.220127582550049
    10. 'def' → logprob: -5.220127582550049

Token 426: ' replaces' (ID: 82503)
  Prédit: ' returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' returns' → logprob: -1.7339857816696167
    2. 'counts' → logprob: -1.9839857816696167
    3. ' can' → logprob: -2.2339859008789062
    4. 'returns' → logprob: -2.3589859008789062
    5. ' counts' → logprob: -2.4839859008789062
    6. ' calculates' → logprob: -2.8589859008789062
    7. ' replaces' → logprob: -3.2339859008789062
    8. '       ' → logprob: -3.2339859008789062
    9. 'can' → logprob: -3.3589859008789062
    10. '   ' → logprob: -3.4839859008789062

Token 427: ' chars' (ID: 47991)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6805004477500916
    2. ' characters' → logprob: -1.6805005073547363
    3. 's' → logprob: -2.9305005073547363
    4. 'self' → logprob: -3.3055005073547363
    5. 'characters' → logprob: -3.3055005073547363
    6. ' self' → logprob: -3.4305005073547363
    7. ' remaining' → logprob: -3.8055005073547363
    8. 'the' → logprob: -4.055500507354736
    9. ' all' → logprob: -4.055500507354736
    10. ' tokens' → logprob: -4.305500507354736

Token 428: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050531599670648575
    2. '        
' → logprob: -3.5505316257476807
    3. '
' → logprob: -4.175531387329102
    4. ' to' → logprob: -6.675531387329102
    5. '#' → logprob: -6.925531387329102
    6. '<|end|>' → logprob: -7.925531387329102
    7. ',' → logprob: -8.175531387329102
    8. 'def' → logprob: -8.300531387329102
    9. '```' → logprob: -8.425531387329102
    10. '.' → logprob: -8.675531387329102

Token 429: ' cannot' (ID: 6284)
  Prédit: 'cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cannot' → logprob: -0.34472259879112244
    2. 'are' → logprob: -2.9697225093841553
    3. ' cannot' → logprob: -2.9697225093841553
    4. ' are' → logprob: -3.3447225093841553
    5. 'do' → logprob: -3.3447225093841553
    6. 'remain' → logprob: -3.4697225093841553
    7. 'don't' → logprob: -3.5947225093841553
    8. 'can't' → logprob: -4.094722747802734
    9. ' remain' → logprob: -4.594722747802734
    10. ' don't' → logprob: -4.844722747802734

Token 430: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.2018039971590042
    2. 'be' → logprob: -1.7018040418624878
    3. 'match' → logprob: -8.326804161071777
    4. ' match' → logprob: -9.451804161071777
    5. '	be' → logprob: -10.951804161071777
    6. '_be' → logprob: -11.076804161071777
    7. '```' → logprob: -12.076804161071777
    8. 'matched' → logprob: -12.326804161071777
    9. '<|end|>' → logprob: -12.701804161071777
    10. ')' → logprob: -13.076804161071777

Token 431: ' matched' (ID: 31366)
  Prédit: 'matched'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matched' → logprob: -0.10327184945344925
    2. ' matched' → logprob: -2.478271961212158
    3. 'mapped' → logprob: -4.603271961212158
    4. 'perfect' → logprob: -6.853271961212158
    5. 'merged' → logprob: -6.853271961212158
    6. 'aligned' → logprob: -7.478271961212158
    7. ' mapped' → logprob: -7.478271961212158
    8. ' perfectly' → logprob: -8.478271484375
    9. 'paired' → logprob: -8.853271484375
    10. 'trans' → logprob: -8.978271484375

Token 432: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14840157330036163
    2. '        
' → logprob: -2.1484014987945557
    3. '
' → logprob: -4.023401737213135
    4. 'return' → logprob: -7.523401737213135
    5. '```' → logprob: -7.523401737213135
    6. '        
        
' → logprob: -7.773401737213135
    7. '<|end|>' → logprob: -7.898401737213135
    8. '  
' → logprob: -8.398401260375977
    9. '#' → logprob: -8.773401260375977
    10. '    
' → logprob: -9.023401260375977

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034344769082963467
    2. '<|end|>' → logprob: -5.878434658050537
    3. '        
' → logprob: -8.003434181213379
    4. 'return' → logprob: -9.003434181213379
    5. '   ' → logprob: -10.253434181213379
    6. '        ' → logprob: -10.378434181213379
    7. '```' → logprob: -10.878434181213379
    8. '
' → logprob: -11.128434181213379
    9. '      ' → logprob: -11.503434181213379
    10. '<|end|>' → logprob: -11.628434181213379

Token 434: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06591600924730301
    2. 'return' → logprob: -2.815916061401367
    3. 'result' → logprob: -5.815916061401367
    4. ' return' → logprob: -8.190916061401367
    5. '        
' → logprob: -8.315916061401367
    6. '
' → logprob: -8.815916061401367
    7. 'count' → logprob: -9.190916061401367
    8. '```' → logprob: -10.190916061401367
    9. '   ' → logprob: -10.815916061401367
    10. 'replacement' → logprob: -11.315916061401367

Token 435: ' This' (ID: 1328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34425389766693115
    2. 'return' → logprob: -1.3442538976669312
    3. ' return' → logprob: -4.219254016876221
    4. 'result' → logprob: -4.969254016876221
    5. 're' → logprob: -6.094254016876221
    6. 'replacement' → logprob: -6.344254016876221
    7. 'replace' → logprob: -6.594254016876221
    8. 'total' → logprob: -7.219254016876221
    9. '        
' → logprob: -7.219254016876221
    10. ' replacements' → logprob: -7.969254016876221

Token 436: ' reduces' (ID: 38566)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7903773188591003
    2. ' is' → logprob: -1.9153773784637451
    3. 'return' → logprob: -2.290377378463745
    4. '
' → logprob: -3.040377378463745
    5. ' return' → logprob: -3.040377378463745
    6. '   ' → logprob: -3.540377378463745
    7. ' line' → logprob: -3.665377378463745
    8. '#' → logprob: -3.665377378463745
    9. '        
' → logprob: -4.290377140045166
    10. ' will' → logprob: -4.665377140045166

Token 437: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.025826893746852875
    2. 'to' → logprob: -3.775826930999756
    3. ' the' → logprob: -6.275826930999756
    4. '   ' → logprob: -8.400826454162598
    5. ' minimal' → logprob: -9.525826454162598
    6. ' self' → logprob: -9.525826454162598
    7. '       ' → logprob: -9.775826454162598
    8. 'self' → logprob: -9.900826454162598
    9. 'the' → logprob: -10.150826454162598
    10. '
' → logprob: -10.275826454162598

Token 438: ' counting' (ID: 43276)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5319878458976746
    2. 'self' → logprob: -1.1569879055023193
    3. 'sum' → logprob: -3.5319879055023193
    4. 'the' → logprob: -3.6569879055023193
    5. 'max' → logprob: -3.7819879055023193
    6. ' self' → logprob: -5.15698766708374
    7. 'min' → logprob: -5.53198766708374
    8. ' len' → logprob: -5.78198766708374
    9. '0' → logprob: -6.28198766708374
    10. ' the' → logprob: -6.90698766708374

Token 439: ' connected' (ID: 12079)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0275466442108154
    2. 'self' → logprob: -1.2775466442108154
    3. ' the' → logprob: -1.9025466442108154
    4. ' len' → logprob: -2.9025466442108154
    5. 'the' → logprob: -2.9025466442108154
    6. ' self' → logprob: -3.4025466442108154
    7. ' connected' → logprob: -3.6525466442108154
    8. 'connected' → logprob: -4.0275468826293945
    9. 'sum' → logprob: -4.4025468826293945
    10. ' sum' → logprob: -6.0275468826293945

Token 440: ' components' (ID: 10674)
  Prédit: '_components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.009927020408213139
    2. ' components' → logprob: -5.134926795959473
    3. 'components' → logprob: -5.884926795959473
    4. '_' → logprob: -6.884926795959473
    5. '_component' → logprob: -8.634926795959473
    6. '_tokens' → logprob: -13.009926795959473
    7. ' _' → logprob: -13.134926795959473
    8. '   ' → logprob: -13.759926795959473
    9. '_comp' → logprob: -14.259926795959473
    10. '_com' → logprob: -14.884926795959473

Token 441: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049574919044971466
    2. '
' → logprob: -3.549574851989746
    3. '        
' → logprob: -4.299574851989746
    4. 'return' → logprob: -5.424574851989746
    5. ',' → logprob: -8.674574851989746
    6. '        ' → logprob: -8.674574851989746
    7. ' return' → logprob: -8.799574851989746
    8. 'def' → logprob: -9.049574851989746
    9. '  
' → logprob: -9.174574851989746
    10. '```' → logprob: -9.174574851989746

Token 442: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012705997563898563
    2. ' self' → logprob: -4.3877058029174805
    3. 'the' → logprob: -8.88770580291748
    4. ' the' → logprob: -10.13770580291748
    5. '
' → logprob: -11.51270580291748
    6. '```' → logprob: -12.01270580291748
    7. 'graph' → logprob: -14.01270580291748
    8. '`' → logprob: -14.38770580291748
    9. '[self' → logprob: -14.88770580291748
    10. '(self' → logprob: -15.76270580291748

Token 443: ' character' (ID: 5855)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4205760955810547
    2. 'graph' → logprob: -1.2955760955810547
    3. ' graph' → logprob: -2.9205760955810547
    4. ' self' → logprob: -4.170576095581055
    5. '
' → logprob: -9.295576095581055
    6. '```' → logprob: -9.545576095581055
    7. '_graph' → logprob: -10.545576095581055
    8. 'Graph' → logprob: -11.795576095581055
    9. '	graph' → logprob: -11.795576095581055
    10. '`' → logprob: -11.920576095581055

Token 444: ' mapping' (ID: 22573)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -1.0164837837219238
    2. 'graph' → logprob: -1.0164837837219238
    3. '_mapping' → logprob: -2.266483783721924
    4. ' mapping' → logprob: -2.641483783721924
    5. 'mapping' → logprob: -2.641483783721924
    6. '_graph' → logprob: -3.641483783721924
    7. 's' → logprob: -7.266483783721924
    8. '_map' → logprob: -7.266483783721924
    9. 'Mapping' → logprob: -8.016483306884766
    10. '   ' → logprob: -8.016483306884766

Token 445: ' graph' (ID: 7465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11329129338264465
    2. 'class' → logprob: -2.8632912635803223
    3. '
' → logprob: -3.7382912635803223
    4. 'graph' → logprob: -5.613291263580322
    5. 'return' → logprob: -5.613291263580322
    6. '        
' → logprob: -6.113291263580322
    7. '   ' → logprob: -6.238291263580322
    8. 'def' → logprob: -6.238291263580322
    9. ',' → logprob: -6.363291263580322
    10. 'from' → logprob: -6.613291263580322

Token 446: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08417198061943054
    2. '
' → logprob: -3.209172010421753
    3. '        
' → logprob: -3.709172010421753
    4. 'return' → logprob: -4.209171772003174
    5. '    
' → logprob: -8.459172248840332
    6. '  
' → logprob: -9.084172248840332
    7. ' return' → logprob: -9.084172248840332
    8. ',' → logprob: -9.834172248840332
    9. '       
' → logprob: -10.209172248840332
    10. 'count' → logprob: -10.209172248840332

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06542124599218369
    2. '
' → logprob: -3.1904213428497314
    3. '        
' → logprob: -4.190421104431152
    4. '<|end|>' → logprob: -6.065421104431152
    5. ',' → logprob: -6.815421104431152
    6. '```' → logprob: -7.565421104431152
    7. '  
' → logprob: -7.690421104431152
    8. '    
' → logprob: -7.940421104431152
    9. ' and' → logprob: -8.065421104431152
    10. '.' → logprob: -8.190421104431152

Token 448: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04697722569108009
    2. '
' → logprob: -3.4219772815704346
    3. '        
' → logprob: -4.7969770431518555
    4. '<|end|>' → logprob: -6.4219770431518555
    5. '   ' → logprob: -7.5469770431518555
    6. ',' → logprob: -7.7969770431518555
    7. '  
' → logprob: -7.9219770431518555
    8. '    
' → logprob: -8.046977043151855
    9. 'return' → logprob: -8.046977043151855
    10. '```' → logprob: -8.546977043151855

Token 449: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03244093060493469
    2. 'return' → logprob: -3.5324409008026123
    3. ' return' → logprob: -6.282441139221191
    4. '
' → logprob: -7.907441139221191
    5. '   ' → logprob: -9.032441139221191
    6. '        
' → logprob: -9.032441139221191
    7. 'result' → logprob: -9.157441139221191
    8. 'count' → logprob: -10.282441139221191
    9. '```' → logprob: -11.407441139221191
    10. 'components' → logprob: -11.657441139221191

Token 450: ' minimal' (ID: 19957)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04475468024611473
    2. ' return' → logprob: -3.29475474357605
    3. ' returning' → logprob: -5.044754505157471
    4. '
' → logprob: -8.544754981994629
    5. '       ' → logprob: -11.169754981994629
    6. '   ' → logprob: -11.544754981994629
    7. '```' → logprob: -12.044754981994629
    8. '_return' → logprob: -12.169754981994629
    9. ' returns' → logprob: -12.419754981994629
    10. ':return' → logprob: -12.919754981994629

Token 451: ' replacements' (ID: 92347)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.3228299915790558
    2. ' replacements' → logprob: -1.3228299617767334
    3. '_' → logprob: -5.3228302001953125
    4. 're' → logprob: -5.8228302001953125
    5. '   ' → logprob: -7.5728302001953125
    6. ' replacement' → logprob: -7.8228302001953125
    7. 'replacement' → logprob: -8.197830200195312
    8. ' _' → logprob: -8.572830200195312
    9. '       ' → logprob: -9.697830200195312
    10. '_replace' → logprob: -9.822830200195312

Token 452: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02680342271924019
    2. '
' → logprob: -4.401803493499756
    3. ' =' → logprob: -5.151803493499756
    4. '        
' → logprob: -6.026803493499756
    5. '.' → logprob: -6.276803493499756
    6. 'return' → logprob: -6.776803493499756
    7. '()' → logprob: -6.901803493499756
    8. '=' → logprob: -7.776803493499756
    9. '()
' → logprob: -7.776803493499756
    10. '(' → logprob: -8.276803016662598

Token 453: ' number' (ID: 2086)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07709721475839615
    2. 'self' → logprob: -3.077097177505493
    3. ' len' → logprob: -4.077097415924072
    4. 'sum' → logprob: -5.327097415924072
    5. 'max' → logprob: -5.702097415924072
    6. ' self' → logprob: -6.077097415924072
    7. ' sum' → logprob: -7.827097415924072
    8. ' max' → logprob: -8.702096939086914
    9. '
' → logprob: -10.202096939086914
    10. '(len' → logprob: -10.202096939086914

Token 454: '_of' (ID: 8023)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -1.1219353675842285
    2. '(self' → logprob: -1.2469353675842285
    3. '(' → logprob: -1.6219353675842285
    4. ' of' → logprob: -2.3719353675842285
    5. 'of' → logprob: -2.6219353675842285
    6. '_of' → logprob: -4.9969353675842285
    7. ' (' → logprob: -5.1219353675842285
    8. '(
' → logprob: -5.8719353675842285
    9. ' ' → logprob: -6.7469353675842285
    10. 'len' → logprob: -6.8719353675842285

Token 455: '_unique' (ID: 51840)
  Prédit: '_connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_connected' → logprob: -0.6758841872215271
    2. 'connected' → logprob: -1.5508842468261719
    3. '_components' → logprob: -1.9258842468261719
    4. ' connected' → logprob: -2.550884246826172
    5. 'components' → logprob: -3.300884246826172
    6. ' components' → logprob: -4.675884246826172
    7. 'self' → logprob: -5.175884246826172
    8. ' self' → logprob: -6.425884246826172
    9. '_nodes' → logprob: -7.300884246826172
    10. '_' → logprob: -7.925884246826172

Token 456: '_char' (ID: 23398)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.06650064885616302
    2. '_char' → logprob: -2.816500663757324
    3. '_letters' → logprob: -5.691500663757324
    4. '_nodes' → logprob: -8.316500663757324
    5. '_' → logprob: -8.316500663757324
    6. '_components' → logprob: -8.566500663757324
    7. 'chars' → logprob: -9.191500663757324
    8. 'characters' → logprob: -9.441500663757324
    9. '```' → logprob: -9.941500663757324
    10. '_tokens' → logprob: -10.066500663757324

Token 457: 'acters' (ID: 8385)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018156031146645546
    2. 'acters' → logprob: -4.018156051635742
    3. 'es' → logprob: -12.768156051635742
    4. '_s' → logprob: -13.393156051635742
    5. 'istics' → logprob: -15.268156051635742
    6. '_counts' → logprob: -15.393156051635742
    7. 'ities' → logprob: -15.518156051635742
    8. 'ity' → logprob: -15.893156051635742
    9. '_chars' → logprob: -15.893156051635742
    10. 'actors' → logprob: -16.018156051635742

Token 458: '_in' (ID: 2267)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3131335973739624
    2. ' -' → logprob: -1.8131335973739624
    3. '
' → logprob: -3.188133716583252
    4. '        ' → logprob: -4.688133716583252
    5. '<|end|>' → logprob: -4.688133716583252
    6. ' +' → logprob: -4.813133716583252
    7. '()' → logprob: -4.938133716583252
    8. ' ' → logprob: -5.438133716583252
    9. '        
' → logprob: -5.688133716583252
    10. '(self' → logprob: -5.813133716583252

Token 459: '_T' (ID: 2154)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09648466110229492
    2. 's' → logprob: -2.596484661102295
    3. 't' → logprob: -4.596484661102295
    4. ' self' → logprob: -4.971484661102295
    5. ' s' → logprob: -8.346485137939453
    6. 'set' → logprob: -10.096485137939453
    7. '```' → logprob: -10.346485137939453
    8. '(self' → logprob: -10.471485137939453
    9. ' t' → logprob: -10.846485137939453
    10. '_s' → logprob: -10.971485137939453

Token 460: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14735546708106995
    2. '
' → logprob: -2.772355556488037
    3. '<|end|>' → logprob: -2.897355556488037
    4. '        
' → logprob: -5.397355556488037
    5. 'return' → logprob: -5.522355556488037
    6. ' +' → logprob: -6.022355556488037
    7. '<|end|>' → logprob: -6.522355556488037
    8. ')' → logprob: -6.772355556488037
    9. '+' → logprob: -6.772355556488037
    10. ' return' → logprob: -6.897355556488037

Token 461: ' number' (ID: 2086)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07691191136837006
    2. 'self' → logprob: -3.3269119262695312
    3. ' len' → logprob: -3.7019119262695312
    4. 'number' → logprob: -5.201911926269531
    5. 'sum' → logprob: -5.326911926269531
    6. ' self' → logprob: -6.576911926269531
    7. '1' → logprob: -7.451911926269531
    8. '(len' → logprob: -7.701911926269531
    9. ' sum' → logprob: -8.201911926269531
    10. ' number' → logprob: -8.701911926269531

Token 462: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.6283668875694275
    2. 'of' → logprob: -1.5033669471740723
    3. '_' → logprob: -2.3783669471740723
    4. '(self' → logprob: -3.1283669471740723
    5. '(len' → logprob: -3.2533669471740723
    6. 'self' → logprob: -3.3783669471740723
    7. '(' → logprob: -3.8783669471740723
    8. '.' → logprob: -5.628366947174072
    9. '(
' → logprob: -6.378366947174072
    10. '_self' → logprob: -6.753366947174072

Token 463: '_connected' (ID: 112270)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4739963114261627
    2. 'connected' → logprob: -2.47399640083313
    3. '_connected' → logprob: -2.84899640083313
    4. '_matches' → logprob: -3.09899640083313
    5. 'matches' → logprob: -3.47399640083313
    6. 's' → logprob: -3.59899640083313
    7. 'matched' → logprob: -3.59899640083313
    8. 'components' → logprob: -3.59899640083313
    9. 'graph' → logprob: -3.84899640083313
    10. '_components' → logprob: -4.348996162414551

Token 464: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.000510260637383908
    2. '_' → logprob: -8.250510215759277
    3. '_component' → logprob: -8.750510215759277
    4. 'components' → logprob: -9.375510215759277
    5. ' components' → logprob: -12.625510215759277
    6. '_com' → logprob: -14.500510215759277
    7. ' _' → logprob: -14.625510215759277
    8. 'Components' → logprob: -15.000510215759277
    9. '_comp' → logprob: -15.375510215759277
    10. '_
' → logprob: -15.750510215759277

Token 465: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10018651187419891
    2. 'return' → logprob: -2.600186586380005
    3. '
' → logprob: -4.475186347961426
    4. ' return' → logprob: -6.225186347961426
    5. '        
' → logprob: -6.225186347961426
    6. '<|end|>' → logprob: -6.600186347961426
    7. 'def' → logprob: -6.975186347961426
    8. 'number' → logprob: -6.975186347961426
    9. '```' → logprob: -7.100186347961426
    10. ',' → logprob: -8.100186347961426

Token 466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015387180261313915
    2. 'return' → logprob: -4.265387058258057
    3. '        
' → logprob: -7.140387058258057
    4. ' return' → logprob: -8.515387535095215
    5. '        ' → logprob: -10.265387535095215
    6. '```' → logprob: -10.765387535095215
    7. '<|end|>' → logprob: -11.015387535095215
    8. '  
' → logprob: -11.015387535095215
    9. ')' → logprob: -11.140387535095215
    10. '   ' → logprob: -11.265387535095215

Token 467: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24182114005088806
    2. '       ' → logprob: -1.6168211698532104
    3. ' return' → logprob: -4.8668212890625
    4. 'unique' → logprob: -4.8668212890625
    5. 'num' → logprob: -8.4918212890625
    6. ' unique' → logprob: -8.9918212890625
    7. 'number' → logprob: -9.3668212890625
    8. 'self' → logprob: -9.3668212890625
    9. 'count' → logprob: -10.1168212890625
    10. '        
' → logprob: -10.2418212890625

Token 468: ' So' (ID: 2632)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.7786575555801392
    2. 'return' → logprob: -0.9036575555801392
    3. 'num' → logprob: -2.1536574363708496
    4. '       ' → logprob: -5.15365743637085
    5. 'number' → logprob: -5.15365743637085
    6. '   ' → logprob: -6.52865743637085
    7. 'connected' → logprob: -6.52865743637085
    8. ' unique' → logprob: -6.90365743637085
    9. ' return' → logprob: -7.02865743637085
    10. 'count' → logprob: -7.40365743637085

Token 469: ' build' (ID: 3024)
  Prédit: ' unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' unique' → logprob: -1.1456571817398071
    2. ' return' → logprob: -1.5206571817398071
    3. '       ' → logprob: -1.6456571817398071
    4. 'return' → logprob: -1.8956571817398071
    5. 'unique' → logprob: -2.3956570625305176
    6. ' number' → logprob: -5.020657062530518
    7. ' result' → logprob: -5.270657062530518
    8. 'num' → logprob: -5.520657062530518
    9. ' num' → logprob: -5.645657062530518
    10. ' t' → logprob: -6.270657062530518

Token 470: ' und' (ID: 844)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.9898152947425842
    2. 'connected' → logprob: -1.1148152351379395
    3. 'the' → logprob: -2.2398152351379395
    4. '       ' → logprob: -2.6148152351379395
    5. 'self' → logprob: -2.7398152351379395
    6. ' connected' → logprob: -4.4898152351379395
    7. 'graph' → logprob: -5.2398152351379395
    8. 'component' → logprob: -5.3648152351379395
    9. 'number' → logprob: -5.3648152351379395
    10. ' components' → logprob: -5.7398152351379395

Token 471: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -0.005303130950778723
    2. 'er' → logprob: -5.255302906036377
    3. 'efined' → logprob: -11.130303382873535
    4. '       ' → logprob: -11.130303382873535
    5. 'graph' → logprob: -11.130303382873535
    6. 'erd' → logprob: -11.880303382873535
    7. 'ers' → logprob: -12.255303382873535
    8. '```' → logprob: -12.630303382873535
    9. '   ' → logprob: -12.755303382873535
    10. 'erground' → logprob: -13.005303382873535

Token 472: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.18184331059455872
    2. '_graph' → logprob: -2.1818432807922363
    3. '_' → logprob: -3.6818432807922363
    4. 'graph' → logprob: -3.9318432807922363
    5. ' _' → logprob: -5.181843280792236
    6. ' ' → logprob: -6.681843280792236
    7. '_edges' → logprob: -7.431843280792236
    8. ' self' → logprob: -7.556843280792236
    9. '	graph' → logprob: -9.181843757629395
    10. ' edges' → logprob: -9.431843757629395

Token 473: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18621878325939178
    2. ':' → logprob: -3.186218738555908
    3. '<|end|>' → logprob: -3.186218738555908
    4. '
' → logprob: -3.686218738555908
    5. ' =' → logprob: -4.436218738555908
    6. '()
' → logprob: -5.061218738555908
    7. '(self' → logprob: -5.061218738555908
    8. ':
' → logprob: -5.061218738555908
    9. '        
' → logprob: -5.186218738555908
    10. '.' → logprob: -5.311218738555908

Token 474: ' pairs' (ID: 24702)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.42221328616142273
    2. 'freq' → logprob: -2.172213315963745
    3. 'edges' → logprob: -2.547213315963745
    4. 's' → logprob: -3.172213315963745
    5. ' edges' → logprob: -3.422213315963745
    6. ' self' → logprob: -3.922213315963745
    7. 'the' → logprob: -4.172213077545166
    8. 'frequency' → logprob: -4.797213077545166
    9. ' s' → logprob: -4.922213077545166
    10. ' the' → logprob: -5.297213077545166

Token 475: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16837924718856812
    2. ':' → logprob: -3.168379306793213
    3. '.' → logprob: -3.918379306793213
    4. '<|end|>' → logprob: -3.918379306793213
    5. ')' → logprob: -4.293379306793213
    6. '(self' → logprob: -4.418379306793213
    7. '        
' → logprob: -4.668379306793213
    8. '<|end|>' → logprob: -5.293379306793213
    9. ' and' → logprob: -5.418379306793213
    10. ',' → logprob: -5.543379306793213

Token 476: 's' (ID: 82)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.19650506973266602
    2. ')' → logprob: -2.071505069732666
    3. '(cs' → logprob: -3.946505069732666
    4. 's' → logprob: -4.946505069732666
    5. 'self' → logprob: -5.071505069732666
    6. ' cs' → logprob: -5.446505069732666
    7. '       ' → logprob: -6.196505069732666
    8. ' (' → logprob: -6.196505069732666
    9. '           ' → logprob: -6.446505069732666
    10. '               ' → logprob: -6.446505069732666

Token 477: '_char' (ID: 23398)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025405338034033775
    2. ' ,' → logprob: -4.275405406951904
    3. ')' → logprob: -5.775405406951904
    4. '_chars' → logprob: -6.150405406951904
    5. '[i' → logprob: -6.900405406951904
    6. 's' → logprob: -7.150405406951904
    7. '),' → logprob: -7.525405406951904
    8. ' and' → logprob: -7.775405406951904
    9. '.' → logprob: -7.900405406951904
    10. '[' → logprob: -8.150404930114746

Token 478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034024056512862444
    2. ' ,' → logprob: -6.253402233123779
    3. ')' → logprob: -7.253402233123779
    4. ',
' → logprob: -8.128402709960938
    5. '),' → logprob: -9.003402709960938
    6. '           ' → logprob: -9.378402709960938
    7. '               ' → logprob: -9.628402709960938
    8. '       ' → logprob: -9.753402709960938
    9. ' and' → logprob: -9.753402709960938
    10. '
' → logprob: -11.503402709960938

Token 479: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.011056075803935528
    2. ' t' → logprob: -4.511055946350098
    3. '       ' → logprob: -13.011055946350098
    4. '`t' → logprob: -13.386055946350098
    5. '   ' → logprob: -13.511055946350098
    6. ')t' → logprob: -14.136055946350098
    7. ')' → logprob: -14.636055946350098
    8. ' ' → logprob: -15.011055946350098
    9. '           ' → logprob: -15.136055946350098
    10. '	t' → logprob: -15.261055946350098

Token 480: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.010096261277794838
    2. ',' → logprob: -5.135096073150635
    3. ')' → logprob: -6.260096073150635
    4. '_chars' → logprob: -7.135096073150635
    5. ')_' → logprob: -7.635096073150635
    6. '_,' → logprob: -8.260096549987793
    7. '_' → logprob: -8.385096549987793
    8. 'char' → logprob: -8.760096549987793
    9. '),' → logprob: -10.135096549987793
    10. ',_' → logprob: -10.385096549987793

Token 481: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006694764830172062
    2. ')
' → logprob: -5.631694793701172
    3. '       ' → logprob: -6.256694793701172
    4. '):' → logprob: -7.131694793701172
    5. '):
' → logprob: -9.131694793701172
    6. ',' → logprob: -9.506694793701172
    7. ' )' → logprob: -10.256694793701172
    8. ').' → logprob: -10.381694793701172
    9. '           ' → logprob: -10.881694793701172
    10. '   ' → logprob: -11.256694793701172

Token 482: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36668434739112854
    2. '
' → logprob: -1.4916843175888062
    3. '<|end|>' → logprob: -3.7416844367980957
    4. ')' → logprob: -4.491684436798096
    5. '        
' → logprob: -4.491684436798096
    6. '.' → logprob: -4.491684436798096
    7. 'return' → logprob: -5.741684436798096
    8. 'def' → logprob: -5.991684436798096
    9. 'self' → logprob: -6.116684436798096
    10. ',' → logprob: -6.116684436798096

Token 483: ' same' (ID: 2684)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.9382691383361816
    2. 'self' → logprob: -2.3132691383361816
    3. 'same' → logprob: -2.3132691383361816
    4. 'least' → logprob: -2.4382691383361816
    5. 'frequency' → logprob: -2.5632691383361816
    6. 'the' → logprob: -3.4382691383361816
    7. ' each' → logprob: -3.5632691383361816
    8. 'freq' → logprob: -3.5632691383361816
    9. 'edges' → logprob: -3.8132691383361816
    10. 'both' → logprob: -4.063269138336182

Token 484: ' position' (ID: 4010)
  Prédit: 'frequency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frequency' → logprob: -0.440234512090683
    2. ' frequency' → logprob: -1.0652345418930054
    3. 'freq' → logprob: -4.815234661102295
    4. ' frequencies' → logprob: -6.565234661102295
    5. 'fre' → logprob: -7.315234661102295
    6. ' freq' → logprob: -7.815234661102295
    7. '_frequency' → logprob: -7.815234661102295
    8. '
' → logprob: -8.565234184265137
    9. '_freq' → logprob: -8.815234184265137
    10. '   ' → logprob: -10.440234184265137

Token 485: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030128566548228264
    2. 'for' → logprob: -5.030128479003906
    3. ' for' → logprob: -5.030128479003906
    4. '        
' → logprob: -5.030128479003906
    5. '
' → logprob: -5.155128479003906
    6. '.' → logprob: -7.155128479003906
    7. ':' → logprob: -7.405128479003906
    8. 'def' → logprob: -7.655128479003906
    9. '   ' → logprob: -7.780128479003906
    10. 's' → logprob: -8.155128479003906

Token 487: ' pairs' (ID: 24702)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14730526506900787
    2. 'for' → logprob: -2.3973052501678467
    3. ' for' → logprob: -3.3973052501678467
    4. '
' → logprob: -5.897305488586426
    5. '        
' → logprob: -6.022305488586426
    6. 's' → logprob: -6.272305488586426
    7. 'self' → logprob: -7.397305488586426
    8. 'return' → logprob: -7.647305488586426
    9. 'result' → logprob: -7.647305488586426
    10. 'positions' → logprob: -7.647305488586426

Token 488: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10082580149173737
    2. '=' → logprob: -2.350825786590576
    3. '       ' → logprob: -8.850826263427734
    4. 's' → logprob: -9.100826263427734
    5. '_' → logprob: -9.225826263427734
    6. ':' → logprob: -9.600826263427734
    7. ')' → logprob: -10.100826263427734
    8. '()' → logprob: -10.600826263427734
    9. '   ' → logprob: -10.600826263427734
    10. ',' → logprob: -10.975826263427734

Token 489: ' list' (ID: 1562)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.6213220357894897
    2. 'list' → logprob: -0.8713220357894897
    3. 'zip' → logprob: -3.1213221549987793
    4. '[
' → logprob: -9.496321678161621
    5. ' list' → logprob: -9.871321678161621
    6. '[' → logprob: -10.496321678161621
    7. '[]' → logprob: -10.496321678161621
    8. ' zip' → logprob: -10.621321678161621
    9. ' [(' → logprob: -10.996321678161621
    10. '(zip' → logprob: -10.996321678161621

Token 490: '(zip' (ID: 87520)
  Prédit: '(zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.00012368128227535635
    2. 'zip' → logprob: -9.000123977661133
    3. ' zip' → logprob: -16.500123977661133
    4. '(' → logprob: -17.625123977661133
    5. '.zip' → logprob: -18.000123977661133
    6. '((' → logprob: -18.000123977661133
    7. '(en' → logprob: -19.125123977661133
    8. '(
' → logprob: -19.500123977661133
    9. '(range' → logprob: -19.500123977661133
    10. '(z' → logprob: -20.000123977661133

Token 491: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005274549592286348
    2. 'self' → logprob: -5.255274772644043
    3. '(' → logprob: -11.005274772644043
    4. '(sorted' → logprob: -11.130274772644043
    5. '(s' → logprob: -12.505274772644043
    6. '       ' → logprob: -13.005274772644043
    7. 'sorted' → logprob: -13.880274772644043
    8. ' self' → logprob: -13.880274772644043
    9. '(
' → logprob: -14.505274772644043
    10. '   ' → logprob: -14.630274772644043

Token 492: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.004366151988506317
    2. 's' → logprob: -5.754365921020508
    3. 'self' → logprob: -6.754365921020508
    4. '.' → logprob: -11.129365921020508
    5. ' .' → logprob: -12.629365921020508
    6. '.self' → logprob: -14.379365921020508
    7. '.t' → logprob: -14.504365921020508
    8. ').' → logprob: -14.504365921020508
    9. '   ' → logprob: -14.629365921020508
    10. ' self' → logprob: -14.754365921020508

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009136092266999185
    2. ',self' → logprob: -7.250913619995117
    3. ' ,' → logprob: -8.750913619995117
    4. 'self' → logprob: -10.250913619995117
    5. ',
' → logprob: -11.875913619995117
    6. '
' → logprob: -14.375913619995117
    7. ' self' → logprob: -14.750913619995117
    8. '(self' → logprob: -15.125913619995117
    9. '',' → logprob: -15.125913619995117
    10. '   ' → logprob: -15.125913619995117

Token 494: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.623244553338736e-05
    2. ' self' → logprob: -9.625065803527832
    3. '       ' → logprob: -17.00006675720215
    4. '   ' → logprob: -17.50006675720215
    5. '[self' → logprob: -17.50006675720215
    6. '           ' → logprob: -18.00006675720215
    7. '(self' → logprob: -18.12506675720215
    8. '
' → logprob: -18.25006675720215
    9. '	self' → logprob: -19.00006675720215
    10. ' ' → logprob: -19.12506675720215

Token 495: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -3.3213025744771585e-05
    2. 'self' → logprob: -10.500033378601074
    3. '.' → logprob: -13.125033378601074
    4. ' self' → logprob: -14.125033378601074
    5. ' .' → logprob: -14.500033378601074
    6. '   ' → logprob: -14.750033378601074
    7. '.self' → logprob: -14.875033378601074
    8. '.s' → logprob: -15.000033378601074
    9. '
' → logprob: -15.125033378601074
    10. ')' → logprob: -15.750033378601074

Token 496: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0012232051230967045
    2. '))
' → logprob: -6.751223087310791
    3. ' ))' → logprob: -10.50122356414795
    4. '       ' → logprob: -10.75122356414795
    5. ')' → logprob: -13.62622356414795
    6. '))

' → logprob: -14.00122356414795
    7. ',' → logprob: -14.87622356414795
    8. '   ' → logprob: -15.00122356414795
    9. ')))' → logprob: -15.00122356414795
    10. ' ' → logprob: -15.25122356414795

Token 497: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08503307402133942
    2. '
' → logprob: -2.5850331783294678
    3. ')' → logprob: -6.335032939910889
    4. '        
' → logprob: -6.710032939910889
    5. ')
' → logprob: -7.210032939910889
    6. 'for' → logprob: -7.210032939910889
    7. ':' → logprob: -7.460032939910889
    8. ' for' → logprob: -8.460033416748047
    9. ':
' → logprob: -8.960033416748047
    10. ' =' → logprob: -9.085033416748047

Token 498: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36092859506607056
    2. 'for' (adapté à ' for') → logprob: -1.8609285354614258
    3. ' for' → logprob: -2.235928535461426
    4. '
' → logprob: -3.235928535461426
    5. '        
' → logprob: -6.860928535461426
    6. '  
' → logprob: -9.985928535461426
    7. '```' → logprob: -10.360928535461426
    8. 'self' → logprob: -10.485928535461426
    9. '    
' → logprob: -10.860928535461426
    10. ' 
' → logprob: -11.360928535461426

Token 499: ' cs' (ID: 14980)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0652683675289154
    2. 'sc' → logprob: -3.5652682781219482
    3. 'cs' → logprob: -4.190268516540527
    4. '(s' → logprob: -4.815268516540527
    5. 'i' → logprob: -5.190268516540527
    6. 'c' → logprob: -6.315268516540527
    7. ' s' → logprob: -6.940268516540527
    8. 'u' → logprob: -7.440268516540527
    9. '(cs' → logprob: -7.440268516540527
    10. '(sc' → logprob: -7.690268516540527

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002334568416699767
    2. ' ,' → logprob: -8.37523365020752
    3. '_,' → logprob: -14.62523365020752
    4. ',c' → logprob: -14.87523365020752
    5. 'cs' → logprob: -15.00023365020752
    6. ',
' → logprob: -15.12523365020752
    7. ',_' → logprob: -15.37523365020752
    8. ',p' → logprob: -15.37523365020752
    9. '‌,' → logprob: -15.37523365020752
    10. ',t' → logprob: -15.62523365020752

Token 501: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -1.3306015716807451e-05
    2. ' ct' → logprob: -11.25001335144043
    3. '	ct' → logprob: -15.50001335144043
    4. '_ct' → logprob: -17.62501335144043
    5. '(ct' → logprob: -18.50001335144043
    6. 'cts' → logprob: -18.62501335144043
    7. '.ct' → logprob: -21.25001335144043
    8. 'ctp' → logprob: -22.12501335144043
    9. 'CT' → logprob: -22.50001335144043
    10. 't' → logprob: -22.62501335144043

Token 502: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002570187207311392
    2. 'in' → logprob: -6.002570152282715
    3. ':' → logprob: -9.627570152282715
    4. ',' → logprob: -11.627570152282715
    5. ')' → logprob: -12.127570152282715
    6. '):' → logprob: -12.627570152282715
    7. ' ' → logprob: -13.002570152282715
    8. '.' → logprob: -13.627570152282715
    9. '   ' → logprob: -13.752570152282715
    10. ':
' → logprob: -14.002570152282715

Token 503: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.007614201866090298
    2. ' pairs' → logprob: -4.8826141357421875
    3. 'self' → logprob: -12.382614135742188
    4. 'p' → logprob: -13.882614135742188
    5. ' ' → logprob: -14.007614135742188
    6. '_pairs' → logprob: -14.132614135742188
    7. 'pair' → logprob: -14.382614135742188
    8. '   ' → logprob: -14.507614135742188
    9. '    ' → logprob: -16.757614135742188
    10. '  ' → logprob: -16.757614135742188

Token 504: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026791462674736977
    2. ':
' → logprob: -3.776791572570801
    3. '           ' → logprob: -5.901791572570801
    4. '):' → logprob: -7.901791572570801
    5. '):
' → logprob: -8.4017915725708
    6. ',' → logprob: -9.6517915725708
    7. '       ' → logprob: -10.2767915725708
    8. ')' → logprob: -11.1517915725708
    9. '=' → logprob: -11.1517915725708
    10. '.' → logprob: -11.1517915725708

Token 505: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011706985533237457
    2. '               ' → logprob: -7.251170635223389
    3. ' self' → logprob: -8.251171112060547
    4. 'self' → logprob: -9.126171112060547
    5. '   ' → logprob: -10.126171112060547
    6. '       ' → logprob: -11.251171112060547
    7. ' if' → logprob: -11.376171112060547
    8. ':' → logprob: -12.001171112060547
    9. '                   ' → logprob: -12.501171112060547
    10. ':
' → logprob: -12.626171112060547

Token 506: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009357591043226421
    2. ' self' → logprob: -7.0009355545043945
    3. '               ' → logprob: -10.750935554504395
    4. '           ' → logprob: -12.875935554504395
    5. '                   ' → logprob: -15.125935554504395
    6. '   ' → logprob: -16.50093650817871
    7. 'if' → logprob: -17.87593650817871
    8. '	self' → logprob: -18.37593650817871
    9. '       ' → logprob: -19.12593650817871
    10. '[self' → logprob: -19.37593650817871

Token 507: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -5.478889215737581e-05
    2. '.' → logprob: -9.875054359436035
    3. 'graph' → logprob: -13.000054359436035
    4. '	graph' → logprob: -14.375054359436035
    5. ' .' → logprob: -15.500054359436035
    6. '.graphics' → logprob: -16.50005531311035
    7. '   ' → logprob: -17.50005531311035
    8. ' graph' → logprob: -17.75005531311035
    9. '`.' → logprob: -17.75005531311035
    10. '
' → logprob: -17.75005531311035

Token 508: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0011729635298252106
    2. '.' → logprob: -6.75117301940918
    3. ' .' → logprob: -13.12617301940918
    4. '   ' → logprob: -14.37617301940918
    5. '.append' → logprob: -16.62617301940918
    6. ').' → logprob: -16.87617301940918
    7. 'add' → logprob: -17.12617301940918
    8. '.Add' → logprob: -17.87617301940918
    9. '.create' → logprob: -18.12617301940918
    10. '].' → logprob: -18.87617301940918

Token 509: '_b' (ID: 1535)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edge' → logprob: -2.339278580620885e-06
    2. 'edge' → logprob: -14.000001907348633
    3. '_' → logprob: -14.250001907348633
    4. '_node' → logprob: -14.750001907348633
    5. '_pair' → logprob: -15.500001907348633
    6. '_edges' → logprob: -16.750001907348633
    7. '_vertex' → logprob: -17.250001907348633
    8. '_link' → logprob: -17.875001907348633
    9. 'Edge' → logprob: -17.875001907348633
    10. '_EDGE' → logprob: -18.000001907348633

Token 510: 'i' (ID: 72)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.11387526988983154
    2. 'i' → logprob: -2.488875389099121
    3. 'oth' → logprob: -4.613875389099121
    4. 'idir' → logprob: -4.988875389099121
    5. 'dge' → logprob: -5.238875389099121
    6. 'edge' → logprob: -6.613875389099121
    7. 'idge' → logprob: -7.738875389099121
    8. 'idi' → logprob: -8.738875389099121
    9. 'd' → logprob: -8.738875389099121
    10. 'ide' → logprob: -9.113875389099121

Token 511: '_edge' (ID: 43226)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.6648895740509033
    2. 'direction' → logprob: -1.4148895740509033
    3. '_edge' → logprob: -1.5398895740509033
    4. '_direction' → logprob: -4.914889335632324
    5. 'dge' → logprob: -5.289889335632324
    6. 'd' → logprob: -5.539889335632324
    7. 'irectional' → logprob: -5.789889335632324
    8. 'direct' → logprob: -5.789889335632324
    9. '_' → logprob: -5.914889335632324
    10. 'nd' → logprob: -7.289889335632324

Token 512: '(cs' (ID: 89621)
  Prédit: '(cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -1.981667537620524e-06
    2. '(ct' → logprob: -14.500001907348633
    3. '(Cs' → logprob: -14.625001907348633
    4. 'f' → logprob: -16.125001907348633
    5. '(' → logprob: -16.250001907348633
    6. 's' → logprob: -16.375001907348633
    7. '(ci' → logprob: -16.375001907348633
    8. 'd' → logprob: -16.750001907348633
    9. '(ss' → logprob: -17.000001907348633
    10. '	cs' → logprob: -17.125001907348633

Token 513: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8325677703833207e-05
    2. ' ,' → logprob: -10.500028610229492
    3. ',
' → logprob: -15.125028610229492
    4. 'ct' → logprob: -16.000028610229492
    5. '`,' → logprob: -16.000028610229492
    6. '‌,' → logprob: -16.125028610229492
    7. '   ' → logprob: -16.875028610229492
    8. ')' → logprob: -17.625028610229492
    9. '<|end|>' → logprob: -17.750028610229492
    10. '',' → logprob: -18.125028610229492

Token 514: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.01815216802060604
    2. ' ct' → logprob: -4.018152236938477
    3. '	ct' → logprob: -13.518152236938477
    4. '(ct' → logprob: -15.143152236938477
    5. '_ct' → logprob: -15.143152236938477
    6. ' ' → logprob: -15.893152236938477
    7. 'cts' → logprob: -16.768152236938477
    8. 'cs' → logprob: -17.143152236938477
    9. ' CT' → logprob: -17.268152236938477
    10. '.ct' → logprob: -17.518152236938477

Token 515: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001052103703841567
    2. ')
' → logprob: -7.001051902770996
    3. '<|end|>' → logprob: -9.251051902770996
    4. '       ' → logprob: -10.251051902770996
    5. ')return' → logprob: -12.626051902770996
    6. '
' → logprob: -13.376051902770996
    7. ')

' → logprob: -13.751051902770996
    8. '()' → logprob: -13.751051902770996
    9. '<|end|>' → logprob: -14.751051902770996
    10. '())' → logprob: -14.751051902770996

Token 516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41738492250442505
    2. '
' → logprob: -1.1673848628997803
    3. 'return' → logprob: -3.6673848628997803
    4. '        
' → logprob: -5.917385101318359
    5. ' return' → logprob: -7.042385101318359
    6. '```' → logprob: -7.542385101318359
    7. '<|end|>' → logprob: -8.16738510131836
    8. '  
' → logprob: -10.79238510131836
    9. '    
' → logprob: -11.16738510131836
    10. '
' → logprob: -11.41738510131836

Token 517: ' connected' (ID: 12079)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06028887256979942
    2. '       ' → logprob: -2.935288906097412
    3. '
' → logprob: -6.060288906097412
    4. ' return' → logprob: -6.935288906097412
    5. 'result' → logprob: -7.185288906097412
    6. 'components' → logprob: -7.935288906097412
    7. 'self' → logprob: -8.185288429260254
    8. 'connected' (adapté à ' connected') → logprob: -8.310288429260254
    9. '        
' → logprob: -8.935288429260254
    10. 'count' → logprob: -9.060288429260254

Token 518: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -6.0033853515051305e-05
    2. 'components' → logprob: -10.750060081481934
    3. '_component' → logprob: -10.750060081481934
    4. '_' → logprob: -11.750060081481934
    5. '_com' → logprob: -12.375060081481934
    6. '_nodes' → logprob: -13.125060081481934
    7. ' =' → logprob: -14.875060081481934
    8. 's' → logprob: -14.875060081481934
    9. ' components' → logprob: -14.875060081481934
    10. 'ness' → logprob: -15.250060081481934

Token 519: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.716081440448761
    2. 's' → logprob: -1.7160813808441162
    3. '_count' → logprob: -1.7160813808441162
    4. '=' → logprob: -1.9660813808441162
    5. '()' → logprob: -4.841081619262695
    6. '_counts' → logprob: -6.841081619262695
    7. '_' → logprob: -6.966081619262695
    8. '_size' → logprob: -7.466081619262695
    9. '=[]' → logprob: -7.841081619262695
    10. '_sizes' → logprob: -8.841081619262695

Token 520: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029937004670500755
    2. ' self' → logprob: -3.5299370288848877
    3. 'len' → logprob: -8.654936790466309
    4. ' len' → logprob: -11.779936790466309
    5. '       ' → logprob: -12.654936790466309
    6. '   ' → logprob: -13.654936790466309
    7. '	self' → logprob: -16.154937744140625
    8. '[self' → logprob: -16.154937744140625
    9. '           ' → logprob: -16.404937744140625
    10. '    ' → logprob: -17.904937744140625

Token 521: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -1.4021237802808173e-05
    2. '.' → logprob: -11.625014305114746
    3. 'graph' → logprob: -12.875014305114746
    4. '	graph' → logprob: -13.375014305114746
    5. ' .' → logprob: -14.625014305114746
    6. '   ' → logprob: -16.12501335144043
    7. '._' → logprob: -16.25001335144043
    8. '
' → logprob: -16.37501335144043
    9. '_.' → logprob: -17.12501335144043
    10. '.al' → logprob: -17.37501335144043

Token 522: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.011988811194896698
    2. '.get' → logprob: -5.011988639831543
    3. '.connected' → logprob: -5.261988639831543
    4. '.number' → logprob: -10.261988639831543
    5. '.num' → logprob: -10.761988639831543
    6. '.find' → logprob: -11.761988639831543
    7. 'count' → logprob: -12.136988639831543
    8. '.compute' → logprob: -13.761988639831543
    9. '.components' → logprob: -13.886988639831543
    10. '.calculate' → logprob: -13.886988639831543

Token 523: '_connected' (ID: 112270)
  Prédit: '_components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.5896092057228088
    2. '_connected' → logprob: -0.8396092057228088
    3. '()' → logprob: -4.589609146118164
    4. '_nodes' → logprob: -6.214609146118164
    5. '_' → logprob: -7.214609146118164
    6. 'ed' → logprob: -7.714609146118164
    7. '_cc' → logprob: -9.339609146118164
    8. '_connections' → logprob: -9.339609146118164
    9. '_clusters' → logprob: -11.589609146118164
    10. 's' → logprob: -11.714609146118164

Token 524: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -5.9153885558771435e-06
    2. 'components' → logprob: -12.125005722045898
    3. '_' → logprob: -15.875005722045898
    4. ' components' → logprob: -16.3750057220459
    5. 'Components' → logprob: -16.6250057220459
    6. 'ness' → logprob: -17.7500057220459
    7. '_component' → logprob: -18.1250057220459
    8. '_nodes' → logprob: -18.3750057220459
    9. '()' → logprob: -18.8750057220459
    10. 's' → logprob: -19.0000057220459

Token 525: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.961759259458631e-06
    2. ' ()' → logprob: -13.375004768371582
    3. '()
' → logprob: -13.750004768371582
    4. '(' → logprob: -14.250004768371582
    5. '()`' → logprob: -14.375004768371582
    6. '().' → logprob: -15.625004768371582
    7. '()

' → logprob: -15.750004768371582
    8. '()>' → logprob: -16.0000057220459
    9. '()?' → logprob: -16.0000057220459
    10. '())' → logprob: -16.2500057220459

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011104060336947441
    2. 'return' → logprob: -4.636104106903076
    3. '
' → logprob: -7.011104106903076
    4. ' return' → logprob: -8.011103630065918
    5. '```' → logprob: -9.511103630065918
    6. '        
' → logprob: -10.511103630065918
    7. ',' → logprob: -13.261103630065918
    8. ')' → logprob: -13.636103630065918
    9. '<|end|>' → logprob: -13.636103630065918
    10. '           ' → logprob: -13.886103630065918

Token 527: ' unique' (ID: 5746)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.029860058799386024
    2. '       ' → logprob: -3.654860019683838
    3. ' return' → logprob: -5.654860019683838
    4. '```' → logprob: -11.029860496520996
    5. 'result' → logprob: -11.404860496520996
    6. '
' → logprob: -11.404860496520996
    7. 'unique' (adapté à ' unique') → logprob: -12.279860496520996
    8. 're' → logprob: -12.904860496520996
    9. 'replacement' → logprob: -13.279860496520996
    10. 'replace' → logprob: -13.654860496520996

Token 528: '_in' (ID: 2267)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.3136359453201294
    2. '_char' → logprob: -1.3136359453201294
    3. '_letters' → logprob: -8.56363582611084
    4. '_unique' → logprob: -9.93863582611084
    5. '_in' → logprob: -10.06363582611084
    6. '_t' → logprob: -11.06363582611084
    7. '_targets' → logprob: -11.56363582611084
    8. '```' → logprob: -11.68863582611084
    9. 'characters' → logprob: -11.81363582611084
    10. '_tokens' → logprob: -11.81363582611084

Token 529: '_t' (ID: 838)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.42183229327201843
    2. 't' → logprob: -1.5468323230743408
    3. '_t' → logprob: -2.171832323074341
    4. ' =' → logprob: -4.546832084655762
    5. '=' → logprob: -5.671832084655762
    6. ' self' → logprob: -7.046832084655762
    7. 'T' → logprob: -7.046832084655762
    8. '=self' → logprob: -7.671832084655762
    9. 'set' → logprob: -7.671832084655762
    10. '=set' → logprob: -9.046832084655762

Token 530: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0548994354903698
    2. '=' → logprob: -2.9298994541168213
    3. '_chars' → logprob: -12.054899215698242
    4. 's' → logprob: -12.429899215698242
    5. '=set' → logprob: -12.679899215698242
    6. ':' → logprob: -14.179899215698242
    7. '=len' → logprob: -14.179899215698242
    8. ' ' → logprob: -14.429899215698242
    9. '```' → logprob: -14.929899215698242
    10. '   ' → logprob: -15.054899215698242

Token 531: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001502598519437015
    2. ' len' → logprob: -6.501502513885498
    3. 'set' → logprob: -15.501502990722656
    4. '	len' → logprob: -18.751502990722656
    5. '   ' → logprob: -19.001502990722656
    6. '(len' → logprob: -19.376502990722656
    7. '=len' → logprob: -20.126502990722656
    8. ' ' → logprob: -21.376502990722656
    9. ' set' → logprob: -21.876502990722656
    10. 'sum' → logprob: -21.876502990722656

Token 532: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.00012678056373260915
    2. 'set' → logprob: -9.000126838684082
    3. '(self' → logprob: -12.625126838684082
    4. '(' → logprob: -17.500125885009766
    5. '({' → logprob: -17.625125885009766
    6. '=set' → logprob: -19.125125885009766
    7. '([' → logprob: -20.125125885009766
    8. ' set' → logprob: -20.250125885009766
    9. '	set' → logprob: -20.250125885009766
    10. '(unique' → logprob: -20.500125885009766

Token 533: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. 'self' → logprob: -15.0
    3. '(' → logprob: -16.625
    4. '[self' → logprob: -19.25
    5. ' (' → logprob: -20.5
    6. '(
' → logprob: -20.75
    7. '	self' → logprob: -21.125
    8. '=self' → logprob: -21.25
    9. '```' → logprob: -21.25
    10. ',self' → logprob: -21.5

Token 534: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -1.0921942703134846e-05
    2. '.' → logprob: -12.37501049041748
    3. ' .' → logprob: -12.37501049041748
    4. 't' → logprob: -13.00001049041748
    5. ').' → logprob: -15.87501049041748
    6. '.graph' → logprob: -18.750011444091797
    7. 'self' → logprob: -18.875011444091797
    8. ')' → logprob: -19.625011444091797
    9. '`.' → logprob: -19.625011444091797
    10. '   ' → logprob: -19.750011444091797

Token 535: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0014835550682619214
    2. '))
' → logprob: -7.12648344039917
    3. ')' → logprob: -7.62648344039917
    4. '()))' → logprob: -9.126483917236328
    5. ' ))' → logprob: -9.876483917236328
    6. ')))' → logprob: -10.876483917236328
    7. ' ' → logprob: -12.626483917236328
    8. '   ' → logprob: -12.751483917236328
    9. '       ' → logprob: -13.126483917236328
    10. '()' → logprob: -13.876483917236328

Token 536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002858881198335439
    2. 'return' → logprob: -8.625286102294922
    3. '
' → logprob: -9.625286102294922
    4. '```' → logprob: -10.875286102294922
    5. ' return' → logprob: -11.375286102294922
    6. '        
' → logprob: -11.875286102294922
    7. '   ' → logprob: -13.500286102294922
    8. '           ' → logprob: -14.125286102294922
    9. '<|end|>' → logprob: -15.500286102294922
    10. '               ' → logprob: -16.125286102294922

Token 537: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04874950274825096
    2. '       ' → logprob: -3.0487494468688965
    3. ' return' → logprob: -9.048749923706055
    4. '
' → logprob: -10.048749923706055
    5. '        
' → logprob: -14.923749923706055
    6. '```' → logprob: -15.048749923706055
    7. '   ' → logprob: -15.673749923706055
    8. '	return' → logprob: -15.923749923706055
    9. 'result' → logprob: -15.923749923706055
    10. 'ret' → logprob: -17.048749923706055

Token 538: ' minimal' (ID: 19957)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03859034925699234
    2. '       ' → logprob: -3.288590431213379
    3. ' return' → logprob: -7.538590431213379
    4. 'result' → logprob: -11.288590431213379
    5. '
' → logprob: -13.538590431213379
    6. '   ' → logprob: -14.413590431213379
    7. '```' → logprob: -14.413590431213379
    8. 're' → logprob: -14.538590431213379
    9. 'ret' → logprob: -15.288590431213379
    10. '	return' → logprob: -15.413590431213379

Token 539: ' replacements' (ID: 92347)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.000920869642868638
    2. '_' → logprob: -7.00092077255249
    3. '_replace' → logprob: -12.625921249389648
    4. 're' → logprob: -13.000921249389648
    5. ' _' → logprob: -13.000921249389648
    6. '_return' → logprob: -14.000921249389648
    7. '_result' → logprob: -15.750921249389648
    8. 'Re' → logprob: -15.875921249389648
    9. ' replacements' → logprob: -15.875921249389648
    10. '   ' → logprob: -16.12592124938965

Token 540: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0386991947889328
    2. '=' → logprob: -3.288699150085449
    3. 'return' → logprob: -7.663699150085449
    4. ' return' → logprob: -9.03869915008545
    5. ' ' → logprob: -10.78869915008545
    6. '   ' → logprob: -10.91369915008545
    7. '       ' → logprob: -11.78869915008545
    8. '
' → logprob: -11.91369915008545
    9. '    ' → logprob: -13.03869915008545
    10. '_return' → logprob: -13.28869915008545

Token 541: ' component' (ID: 6392)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7185081839561462
    2. 'unique' → logprob: -0.7185081839561462
    3. ' unique' → logprob: -4.218508243560791
    4. ' max' → logprob: -4.593508243560791
    5. 'connected' → logprob: -8.718507766723633
    6. ' connected' → logprob: -10.218507766723633
    7. '   ' → logprob: -13.218507766723633
    8. '(unique' → logprob: -14.468507766723633
    9. 'min' → logprob: -14.718507766723633
    10. ' ' → logprob: -14.968507766723633

Token 542: ' count' (ID: 3605)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00042447797022759914
    2. 'count' → logprob: -8.7504243850708
    3. 'connected' → logprob: -9.1254243850708
    4. '_' → logprob: -9.2504243850708
    5. '_count' → logprob: -10.8754243850708
    6. '_connected' → logprob: -11.6254243850708
    7. 'number' → logprob: -11.8754243850708
    8. '_s' → logprob: -12.3754243850708
    9. ' s' → logprob: -12.6254243850708
    10. '   ' → logprob: -12.6254243850708

Token 543: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06868301331996918
    2. '-' → logprob: -3.318682909011841
    3. ' ' → logprob: -4.69368314743042
    4. ' +' → logprob: -4.81868314743042
    5. '=' → logprob: -5.19368314743042
    6. ' *' → logprob: -6.19368314743042
    7. '+' → logprob: -6.31868314743042
    8. ' =' → logprob: -6.81868314743042
    9. '_' → logprob: -7.31868314743042
    10. '*' → logprob: -7.56868314743042

Token 544: ' number' (ID: 2086)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.026363704353570938
    2. ' unique' → logprob: -3.6513636112213135
    3. '1' → logprob: -10.276363372802734
    4. '   ' → logprob: -11.026363372802734
    5. '```' → logprob: -12.401363372802734
    6. '(unique' → logprob: -12.776363372802734
    7. 'connected' → logprob: -13.526363372802734
    8. '_unique' → logprob: -13.651363372802734
    9. '       ' → logprob: -14.151363372802734
    10. '`' → logprob: -14.526363372802734

Token 545: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.8583939671516418
    2. '_of' → logprob: -0.9833939671516418
    3. '_unique' → logprob: -1.858393907546997
    4. 'unique' → logprob: -3.733393907546997
    5. '_' → logprob: -4.608394145965576
    6. ' of' → logprob: -5.358394145965576
    7. '_connected' → logprob: -6.483394145965576
    8. '(unique' → logprob: -6.733394145965576
    9. 'o' → logprob: -7.108394145965576
    10. 's' → logprob: -7.233394145965576

Token 546: ' connected' (ID: 12079)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.03457510843873024
    2. ' unique' → logprob: -3.5345752239227295
    3. 'connected' → logprob: -5.53457498550415
    4. 'components' → logprob: -8.034575462341309
    5. ' connected' → logprob: -8.284575462341309
    6. '1' → logprob: -9.409575462341309
    7. ' ' → logprob: -10.159575462341309
    8. '_unique' → logprob: -10.284575462341309
    9. ' components' → logprob: -10.284575462341309
    10. '```' → logprob: -10.909575462341309

Token 547: ' components' (ID: 10674)
  Prédit: '_components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.011326966807246208
    2. 'components' → logprob: -4.636326789855957
    3. '_unique' → logprob: -7.636326789855957
    4. ' components' → logprob: -7.761326789855957
    5. '_char' → logprob: -8.511326789855957
    6. '_chars' → logprob: -9.136326789855957
    7. 's' → logprob: -9.136326789855957
    8. '_' → logprob: -9.386326789855957
    9. 'characters' → logprob: -9.511326789855957
    10. '```' → logprob: -10.886326789855957

Token 548: ' reducing' (ID: 25040)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8732038140296936
    2. '=' → logprob: -1.1232037544250488
    3. '_unique' → logprob: -2.623203754425049
    4. ' -' → logprob: -2.873203754425049
    5. '_' → logprob: -3.998203754425049
    6. ')' → logprob: -4.123203754425049
    7. 'unique' → logprob: -4.498203754425049
    8. '```' → logprob: -4.748203754425049
    9. 'return' → logprob: -4.873203754425049
    10. '-' → logprob: -4.873203754425049

Token 549: ' to' (ID: 316)
  Prédit: '_unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_unique' → logprob: -0.5128777623176575
    2. 'unique' → logprob: -1.8878777027130127
    3. '_components' → logprob: -3.0128777027130127
    4. ' unique' → logprob: -3.6378777027130127
    5. ' ' → logprob: -3.7628777027130127
    6. '_in' → logprob: -3.8878777027130127
    7. ')' → logprob: -4.137877941131592
    8. '_connected' → logprob: -4.137877941131592
    9. 'components' → logprob: -4.512877941131592
    10. '   ' → logprob: -4.762877941131592

Token 550: '
' (ID: 198)
  Prédit: ' unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' unique' → logprob: -0.6598273515701294
    2. 'unique' → logprob: -1.0348273515701294
    3. ' max' → logprob: -2.53482723236084
    4. 'max' → logprob: -3.03482723236084
    5. '```' → logprob: -9.15982723236084
    6. ' connected' → logprob: -9.40982723236084
    7. '0' → logprob: -10.15982723236084
    8. ' min' → logprob: -10.40982723236084
    9. ' minimal' → logprob: -10.65982723236084
    10. 'connected' → logprob: -11.15982723236084

Token 551: '       ' (ID: 309)
  Prédit: ' unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' unique' → logprob: -0.23128052055835724
    2. 'unique' → logprob: -2.231280565261841
    3. ' max' → logprob: -2.606280565261841
    4. 'max' → logprob: -3.731280565261841
    5. ' connected' → logprob: -6.981280326843262
    6. '   ' → logprob: -9.356280326843262
    7. '```' → logprob: -9.356280326843262
    8. 'connected' → logprob: -9.481280326843262
    9. ' min' → logprob: -10.856280326843262
    10. '`' → logprob: -11.481280326843262

Token 552: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.686130166053772
    2. 'unique' → logprob: -1.311130166053772
    3. ' max' → logprob: -2.0611300468444824
    4. ' unique' → logprob: -2.3111300468444824
    5. '```' → logprob: -9.06113052368164
    6. ' connected' → logprob: -9.18613052368164
    7. '`' → logprob: -9.31113052368164
    8. '
' → logprob: -10.06113052368164
    9. 'connected' → logprob: -10.06113052368164
    10. '   ' → logprob: -10.68613052368164

Token 553: ' replacement' (ID: 19207)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.38679105043411255
    2. 'max' → logprob: -1.2617909908294678
    3. 'return' → logprob: -4.011791229248047
    4. ' unique' → logprob: -4.261791229248047
    5. ' max' → logprob: -5.511791229248047
    6. '```' → logprob: -7.511791229248047
    7. '   ' → logprob: -8.136791229248047
    8. ' return' → logprob: -9.011791229248047
    9. '       ' → logprob: -9.261791229248047
    10. '`' → logprob: -9.886791229248047

Token 554: ' count' (ID: 3605)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009171743295155466
    2. ' =' → logprob: -7.750916957855225
    3. '_s' → logprob: -8.500917434692383
    4. ' s' → logprob: -8.875917434692383
    5. '_count' → logprob: -9.125917434692383
    6. '=' → logprob: -11.500917434692383
    7. '_needed' → logprob: -11.750917434692383
    8. 'count' → logprob: -12.375917434692383
    9. '   ' → logprob: -13.250917434692383
    10. ' ' → logprob: -13.250917434692383

Token 555: ' =' (ID: 314)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12292508035898209
    2. '       ' → logprob: -2.747925043106079
    3. ' return' → logprob: -3.372925043106079
    4. '
' → logprob: -4.872925281524658
    5. ' =' → logprob: -5.497925281524658
    6. '=' → logprob: -6.122925281524658
    7. 'unique' → logprob: -6.497925281524658
    8. ' unique' → logprob: -7.247925281524658
    9. '_return' → logprob: -8.1229248046875
    10. '   ' → logprob: -8.6229248046875

Token 556: ' connected' (ID: 12079)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.1525699347257614
    2. 'max' → logprob: -2.1525700092315674
    3. ' unique' → logprob: -3.7775700092315674
    4. ' max' → logprob: -6.027569770812988
    5. '   ' → logprob: -11.277569770812988
    6. '```' → logprob: -12.527569770812988
    7. '`' → logprob: -12.902569770812988
    8. 'connected' → logprob: -12.902569770812988
    9. '(unique' → logprob: -13.902569770812988
    10. '
' → logprob: -14.027569770812988

Token 557: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -6.52788148727268e-05
    2. '_' → logprob: -10.500064849853516
    3. '_component' → logprob: -10.625064849853516
    4. 'components' → logprob: -13.000064849853516
    5. 'Components' → logprob: -13.000064849853516
    6. '\' → logprob: -13.500064849853516
    7. '_comp' → logprob: -13.625064849853516
    8. ' components' → logprob: -13.750064849853516
    9. 's' → logprob: -13.875064849853516
    10. '_connected' → logprob: -14.500064849853516

Token 558: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6772398948669434
    2. 'return' → logprob: -1.6772398948669434
    3. '       ' → logprob: -1.8022398948669434
    4. '<|end|>' → logprob: -2.9272398948669434
    5. ' return' → logprob: -3.5522398948669434
    6. ' +' → logprob: -4.552239894866943
    7. ' -' → logprob: -4.677239894866943
    8. '+' → logprob: -4.927239894866943
    9. '   ' → logprob: -5.052239894866943
    10. '-' → logprob: -5.302239894866943

Token 559: ' ' (ID: 220)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.0023654208052903414
    2. ' unique' → logprob: -6.252365589141846
    3. '1' → logprob: -7.752365589141846
    4. '   ' → logprob: -12.627365112304688
    5. '
' → logprob: -14.002365112304688
    6. '(unique' → logprob: -14.002365112304688
    7. ' ' → logprob: -14.127365112304688
    8. '```' → logprob: -14.877365112304688
    9. 'len' → logprob: -15.127365112304688
    10. '_unique' → logprob: -15.377365112304688

Token 560: '1' (ID: 16)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.0002570481738075614
    2. ' unique' → logprob: -8.75025749206543
    3. '1' → logprob: -9.25025749206543
    4. '
' → logprob: -14.12525749206543
    5. '   ' → logprob: -14.37525749206543
    6. '```' → logprob: -15.25025749206543
    7. '(unique' → logprob: -15.37525749206543
    8. 'len' → logprob: -15.37525749206543
    9. ' ' → logprob: -16.25025749206543
    10. 'uniq' → logprob: -17.00025749206543

Token 561: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8906396627426147
    2. '       ' → logprob: -0.8906396627426147
    3. '<|end|>' → logprob: -2.3906397819519043
    4. 'return' → logprob: -2.7656397819519043
    5. ' return' → logprob: -4.890639781951904
    6. '   ' → logprob: -5.515639781951904
    7. ')' → logprob: -6.015639781951904
    8. ' ' → logprob: -6.265639781951904
    9. '<|end|>' → logprob: -6.640639781951904
    10. '```' → logprob: -7.015639781951904

Token 562: 'gener' (ID: 65361)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040903981775045395
    2. '<|end|>' → logprob: -3.2909040451049805
    3. '
' → logprob: -6.7909040451049805
    4. '```' → logprob: -6.9159040451049805
    5. '<|end|>' → logprob: -7.7909040451049805
    6. ')return' → logprob: -9.54090404510498
    7. '}' → logprob: -9.91590404510498
    8. ' )' → logprob: -10.04090404510498
    9. '+' → logprob: -10.04090404510498
    10. ')
' → logprob: -10.91590404510498

Token 563: 'ally' (ID: 2146)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.024710213765501976
    2. 'ated' → logprob: -3.774710178375244
    3. 'ally' → logprob: -6.774710178375244
    4. 'ate' → logprob: -8.774710655212402
    5. 'ating' → logprob: -9.524710655212402
    6. 'ation' → logprob: -10.524710655212402
    7. 'a' → logprob: -11.149710655212402
    8. 'at' → logprob: -11.274710655212402
    9. 'aled' → logprob: -11.274710655212402
    10. ')' → logprob: -12.149710655212402

Token 564: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0333498939871788
    2. '<|end|>' → logprob: -3.9083499908447266
    3. '
' → logprob: -5.533349990844727
    4. '+' → logprob: -5.658349990844727
    5. ' +' → logprob: -5.783349990844727
    6. ' if' → logprob: -7.783349990844727
    7. '<|end|>' → logprob: -7.783349990844727
    8. ' )' → logprob: -8.283349990844727
    9. '```' → logprob: -8.283349990844727
    10. ')
' → logprob: -8.533349990844727

Token 565: ' union' (ID: 22208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8291451334953308
    2. ' self' → logprob: -1.8291451930999756
    3. ')' → logprob: -1.9541451930999756
    4. '```' → logprob: -2.8291451930999756
    5. ' range' → logprob: -3.2041451930999756
    6. ' the' → logprob: -3.4541451930999756
    7. ' unique' → logprob: -3.4541451930999756
    8. 'unique' → logprob: -3.7041451930999756
    9. '1' → logprob: -3.9541451930999756
    10. 'range' → logprob: -4.8291449546813965

Token 566: '-find' (ID: 168817)
  Prédit: '-find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-find' → logprob: -0.033929675817489624
    2. '_find' → logprob: -3.7839295864105225
    3. 'find' → logprob: -4.908929824829102
    4. 'Find' → logprob: -6.033929824829102
    5. '-' → logprob: -8.158929824829102
    6. ' find' → logprob: -8.658929824829102
    7. '-F' → logprob: -8.908929824829102
    8. ' -' → logprob: -9.158929824829102
    9. ')' → logprob: -10.283929824829102
    10. 'n' → logprob: -10.408929824829102

Token 567: ' approach' (ID: 7139)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005658217705786228
    2. '()' → logprob: -5.505658149719238
    3. ')
' → logprob: -8.005658149719238
    4. '(' → logprob: -8.130658149719238
    5. '```' → logprob: -8.130658149719238
    6. ']' → logprob: -9.505658149719238
    7. '   ' → logprob: -9.505658149719238
    8. '<|end|>' → logprob: -9.630658149719238
    9. '.' → logprob: -9.755658149719238
    10. '+' → logprob: -9.755658149719238

Token 568: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009863162413239479
    2. '
' → logprob: -5.384863376617432
    3. '<|end|>' → logprob: -5.759863376617432
    4. '```' → logprob: -7.509863376617432
    5. ')
' → logprob: -8.009862899780273
    6. '<|end|>' → logprob: -8.634862899780273
    7. '       ' → logprob: -8.759862899780273
    8. ' )' → logprob: -8.884862899780273
    9. '   ' → logprob: -9.259862899780273
    10. '+' → logprob: -9.259862899780273

Token 569: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9070028066635132
    2. 'return' → logprob: -1.2820028066635132
    3. '       ' → logprob: -1.5320028066635132
    4. ' return' → logprob: -2.4070029258728027
    5. '```' → logprob: -5.032002925872803
    6. '        
' → logprob: -6.407002925872803
    7. '<|end|>' → logprob: -6.782002925872803
    8. ' 
' → logprob: -7.032002925872803
    9. '	return' → logprob: -7.532002925872803
    10. ')' → logprob: -7.782002925872803

Token 570: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39405912160873413
    2. '       ' → logprob: -1.144059181213379
    3. ' return' → logprob: -5.019059181213379
    4. '
' → logprob: -7.769059181213379
    5. '```' → logprob: -9.269059181213379
    6. '        
' → logprob: -10.894059181213379
    7. '   ' → logprob: -11.644059181213379
    8. '	return' → logprob: -13.394059181213379
    9. '_return' → logprob: -13.894059181213379
    10. 'result' → logprob: -14.144059181213379

Token 571: ' We' (ID: 1416)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12722741067409515
    2. '       ' → logprob: -2.127227306365967
    3. ' return' → logprob: -8.252227783203125
    4. '```' → logprob: -10.377227783203125
    5. '   ' → logprob: -12.502227783203125
    6. '
' → logprob: -13.002227783203125
    7. 're' → logprob: -14.627227783203125
    8. 'result' → logprob: -15.127227783203125
    9. '        
' → logprob: -15.252227783203125
    10. '	return' → logprob: -15.627227783203125

Token 572: ' interpret' (ID: 18135)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0801674127578735
    2. ' continue' → logprob: -1.2051674127578735
    3. ' need' → logprob: -2.330167293548584
    4. ' ' → logprob: -2.330167293548584
    5. '_' → logprob: -3.455167293548584
    6. ' =' → logprob: -3.955167293548584
    7. '
' → logprob: -3.955167293548584
    8. '   ' → logprob: -4.330167293548584
    9. ' want' → logprob: -4.705167293548584
    10. ' return' → logprob: -4.705167293548584

Token 573: ' as' (ID: 472)
  Prédit: ' connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connected' → logprob: -0.35035440325737
    2. ' self' → logprob: -2.3503544330596924
    3. 'self' → logprob: -2.8503544330596924
    4. 'connected' → logprob: -3.3503544330596924
    5. ' ' → logprob: -3.9753544330596924
    6. '_connected' → logprob: -4.100354194641113
    7. '
' → logprob: -4.225354194641113
    8. '_' → logprob: -4.475354194641113
    9. ' _' → logprob: -4.725354194641113
    10. ' the' → logprob: -5.225354194641113

Token 574: ' minimal' (ID: 19957)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.817395031452179
    2. 'unique' → logprob: -1.0673949718475342
    3. 'return' → logprob: -1.6923949718475342
    4. ' max' → logprob: -4.567395210266113
    5. ' unique' → logprob: -4.692395210266113
    6. 'connected' → logprob: -5.192395210266113
    7. ' return' → logprob: -6.692395210266113
    8. 'replacement' → logprob: -6.942395210266113
    9. 'len' → logprob: -7.067395210266113
    10. ' connected' → logprob: -7.067395210266113

Token 575: ' number' (ID: 2086)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0008112939540296793
    2. '_' → logprob: -7.2508111000061035
    3. ' _' → logprob: -10.000811576843262
    4. ' replacements' → logprob: -10.750811576843262
    5. 're' → logprob: -10.875811576843262
    6. '_replace' → logprob: -11.750811576843262
    7. '```' → logprob: -13.125811576843262
    8. 'Re' → logprob: -13.750811576843262
    9. '   ' → logprob: -13.875811576843262
    10. '
' → logprob: -14.875811576843262

Token 576: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.330971896648407
    2. '(' → logprob: -1.3309719562530518
    3. '(
' → logprob: -5.330971717834473
    4. 'of' → logprob: -5.580971717834473
    5. '('_' → logprob: -6.830971717834473
    6. '"' → logprob: -7.080971717834473
    7. '```' → logprob: -7.455971717834473
    8. '#' → logprob: -7.455971717834473
    9. '(_' → logprob: -7.705971717834473
    10. '(_)' → logprob: -7.705971717834473

Token 577: ' replacements' (ID: 92347)
  Prédit: ' replacements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' replacements' → logprob: -0.00958277378231287
    2. 're' → logprob: -4.759582996368408
    3. '_re' → logprob: -7.134582996368408
    4. 'replacement' → logprob: -9.50958251953125
    5. ' replacement' → logprob: -10.00958251953125
    6. ' replacing' → logprob: -11.38458251953125
    7. ' steps' → logprob: -11.63458251953125
    8. ' replaces' → logprob: -12.00958251953125
    9. ' transformations' → logprob: -12.00958251953125
    10. ' characters' → logprob: -12.38458251953125

Token 578: ' is' (ID: 382)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10420185327529907
    2. 'return' → logprob: -3.1042017936706543
    3. '       ' → logprob: -3.6042017936706543
    4. ' 
' → logprob: -4.854201793670654
    5. ' return' → logprob: -5.479201793670654
    6. '        
' → logprob: -5.604201793670654
    7. '   ' → logprob: -5.979201793670654
    8. '    
' → logprob: -6.604201793670654
    9. '```' → logprob: -6.604201793670654
    10. '  
' → logprob: -6.729201793670654

Token 579: ' (' (ID: 350)
  Prédit: ' connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connected' → logprob: -0.028446238487958908
    2. 'connected' → logprob: -3.6534461975097656
    3. 'max' → logprob: -7.278446197509766
    4. ' unique' → logprob: -7.278446197509766
    5. ' max' → logprob: -7.403446197509766
    6. 'unique' → logprob: -9.528446197509766
    7. 'len' → logprob: -10.278446197509766
    8. ' len' → logprob: -11.028446197509766
    9. '   ' → logprob: -11.653446197509766
    10. 'self' → logprob: -11.778446197509766

Token 580: 'unique' (ID: 22365)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.40910592675209045
    2. ' connected' → logprob: -1.784105896949768
    3. 'unique' → logprob: -1.909105896949768
    4. ' unique' → logprob: -4.4091057777404785
    5. 'max' → logprob: -5.0341057777404785
    6. ' max' → logprob: -7.9091057777404785
    7. '
' → logprob: -8.159106254577637
    8. '   ' → logprob: -8.784106254577637
    9. 'len' → logprob: -9.784106254577637
    10. 'self' → logprob: -11.784106254577637

Token 581: ' chars' (ID: 47991)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.009204510599374771
    2. '_' → logprob: -4.759204387664795
    3. '_chars' → logprob: -8.134204864501953
    4. ')' → logprob: -8.884204864501953
    5. ' in' → logprob: -10.634204864501953
    6. ' _' → logprob: -10.634204864501953
    7. '_char' → logprob: -10.759204864501953
    8. 'in' → logprob: -10.884204864501953
    9. '_tokens' → logprob: -11.634204864501953
    10. 'In' → logprob: -11.759204864501953

Token 582: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.49618807435035706
    2. ' in' → logprob: -1.2461880445480347
    3. '_in' → logprob: -3.121188163757324
    4. ')' → logprob: -3.621188163757324
    5. ' -' → logprob: -3.996188163757324
    6. '-' → logprob: -4.371188163757324
    7. '   ' → logprob: -7.621188163757324
    8. ' ' → logprob: -8.121188163757324
    9. '_' → logprob: -8.371188163757324
    10. '(' → logprob: -8.996188163757324

Token 583: ' T' (ID: 353)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9778014421463013
    2. 't' → logprob: -1.2278014421463013
    3. ' self' → logprob: -1.6028014421463013
    4. ' t' → logprob: -2.1028013229370117
    5. '_t' → logprob: -5.227801322937012
    6. 'T' → logprob: -7.102801322937012
    7. ')' → logprob: -7.727801322937012
    8. ' T' → logprob: -8.227801322937012
    9. ' the' → logprob: -8.727801322937012
    10. ' ' → logprob: -9.102801322937012

Token 584: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14885221421718597
    2. ')' → logprob: -2.1488521099090576
    3. '-' → logprob: -3.8988521099090576
    4. ' ' → logprob: -6.898852348327637
    5. ' )' → logprob: -7.898852348327637
    6. '   ' → logprob: -11.398852348327637
    7. '  ' → logprob: -11.898852348327637
    8. ')-' → logprob: -12.398852348327637
    9. '    ' → logprob: -13.148852348327637
    10. ',' → logprob: -13.148852348327637

Token 585: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7655436992645264
    2. '<|end|>' → logprob: -1.5155436992645264
    3. '
' → logprob: -2.3905436992645264
    4. ' +' → logprob: -2.6405436992645264
    5. ')' → logprob: -2.8905436992645264
    6. ' ' → logprob: -3.5155436992645264
    7. '-' → logprob: -3.6405436992645264
    8. '       ' → logprob: -4.2655439376831055
    9. '+' → logprob: -4.6405439376831055
    10. '   ' → logprob: -5.6405439376831055

Token 586: ' (' (ID: 350)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.38692009449005127
    2. ' connected' → logprob: -1.1369200944900513
    3. 'self' → logprob: -10.761919975280762
    4. '_connected' → logprob: -11.011919975280762
    5. '1' → logprob: -11.761919975280762
    6. ' self' → logprob: -13.886919975280762
    7. '   ' → logprob: -14.136919975280762
    8. '.connected' → logprob: -14.386919975280762
    9. ' ' → logprob: -14.886919975280762
    10. 'len' → logprob: -15.761919975280762

Token 587: 'number' (ID: 8096)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.0040838588029146194
    2. ' connected' → logprob: -5.504083633422852
    3. 'self' → logprob: -12.254083633422852
    4. '_connected' → logprob: -14.754083633422852
    5. '
' → logprob: -16.37908363342285
    6. ')' → logprob: -16.50408363342285
    7. ' self' → logprob: -16.75408363342285
    8. '.connected' → logprob: -17.12908363342285
    9. '   ' → logprob: -17.50408363342285
    10. '       ' → logprob: -18.12908363342285

Token 588: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.009076228365302086
    2. 'of' → logprob: -5.009076118469238
    3. ' of' → logprob: -6.509076118469238
    4. '_connected' → logprob: -7.259076118469238
    5. '_' → logprob: -8.884076118469238
    6. ')' → logprob: -11.509076118469238
    7. '	of' → logprob: -12.884076118469238
    8. 'Of' → logprob: -12.884076118469238
    9. 'connected' → logprob: -13.009076118469238
    10. '   ' → logprob: -13.384076118469238

Token 589: ' connected' (ID: 12079)
  Prédit: ' connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connected' → logprob: -0.6967480182647705
    2. 'connected' → logprob: -0.6967480182647705
    3. '_connected' → logprob: -5.946747779846191
    4. ' components' → logprob: -8.196747779846191
    5. 'components' → logprob: -8.321747779846191
    6. 'self' → logprob: -8.446747779846191
    7. ' self' → logprob: -8.821747779846191
    8. '.connected' → logprob: -10.821747779846191
    9. ' ' → logprob: -10.946747779846191
    10. ')' → logprob: -11.196747779846191

Token 590: ' components' (ID: 10674)
  Prédit: '_components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.0017462196992710233
    2. '_' → logprob: -6.37674617767334
    3. ' _' → logprob: -11.37674617767334
    4. ')_' → logprob: -11.75174617767334
    5. ')' → logprob: -12.37674617767334
    6. '_component' → logprob: -12.87674617767334
    7. '_parts' → logprob: -13.00174617767334
    8. 'components' → logprob: -13.12674617767334
    9. '_s' → logprob: -13.12674617767334
    10. ' components' → logprob: -13.50174617767334

Token 591: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020754072815179825
    2. '       ' → logprob: -4.770753860473633
    3. ' +' → logprob: -4.895753860473633
    4. '   ' → logprob: -6.270753860473633
    5. '
' → logprob: -7.145753860473633
    6. '+' → logprob: -7.520753860473633
    7. ' )' → logprob: -7.895753860473633
    8. ')
' → logprob: -8.520753860473633
    9. '```' → logprob: -8.895753860473633
    10. '<|end|>' → logprob: -8.895753860473633

Token 592: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026229120790958405
    2. 'return' → logprob: -4.276228904724121
    3. '
' → logprob: -4.526228904724121
    4. ' return' → logprob: -7.151228904724121
    5. '        
' → logprob: -8.526228904724121
    6. '   ' → logprob: -9.401228904724121
    7. '```' → logprob: -10.026228904724121
    8. '	return' → logprob: -11.651228904724121
    9. ')' → logprob: -11.901228904724121
    10. ' 
' → logprob: -12.026228904724121

Token 593: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011117025278508663
    2. '       ' → logprob: -4.511116981506348
    3. '```' → logprob: -10.261116981506348
    4. ' return' → logprob: -10.761116981506348
    5. 're' → logprob: -11.886116981506348
    6. 'replacement' → logprob: -13.261116981506348
    7. '
' → logprob: -13.386116981506348
    8. 'replace' → logprob: -13.886116981506348
    9. 'result' → logprob: -14.011116981506348
    10. 'ret' → logprob: -14.886116981506348

Token 594: ' Correction' (ID: 134873)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007430446334183216
    2. '       ' → logprob: -5.257430553436279
    3. 'replacement' → logprob: -6.257430553436279
    4. 're' → logprob: -8.632430076599121
    5. ' return' → logprob: -10.007430076599121
    6. '```' → logprob: -10.382430076599121
    7. 'result' → logprob: -11.632430076599121
    8. 'replace' → logprob: -11.882430076599121
    9. '   ' → logprob: -12.882430076599121
    10. 'minimal' → logprob: -13.132430076599121

Token 595: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08962967246770859
    2. '
' → logprob: -2.714629650115967
    3. 'return' → logprob: -4.964629650115967
    4. '        
' → logprob: -5.339629650115967
    5. ' =' → logprob: -5.589629650115967
    6. '=' → logprob: -7.089629650115967
    7. ':' → logprob: -7.589629650115967
    8. 'result' → logprob: -7.839629650115967
    9. '<|end|>' → logprob: -7.839629650115967
    10. ' return' → logprob: -7.964629650115967

Token 596: ' As' (ID: 1877)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24394021928310394
    2. ' return' → logprob: -2.1189401149749756
    3. '       ' → logprob: -2.6189401149749756
    4. 'replacement' → logprob: -4.243940353393555
    5. 're' → logprob: -5.618940353393555
    6. ' replacement' → logprob: -6.743940353393555
    7. ' replacements' → logprob: -6.743940353393555
    8. 'result' → logprob: -6.868940353393555
    9. '
' → logprob: -7.368940353393555
    10. ' minimal' → logprob: -7.493940353393555

Token 597: ' per' (ID: 777)
  Prédit: ' per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' per' → logprob: -1.5124555826187134
    2. 'unique' → logprob: -1.6374555826187134
    3. ' unique' → logprob: -1.6374555826187134
    4. ' replacements' → logprob: -2.762455463409424
    5. '       ' → logprob: -3.137455463409424
    6. '   ' → logprob: -3.262455463409424
    7. ' the' → logprob: -3.637455463409424
    8. ' replacement' → logprob: -3.637455463409424
    9. ' self' → logprob: -3.762455463409424
    10. 'self' → logprob: -3.762455463409424

Token 598: ' editorial' (ID: 37857)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.452950656414032
    2. 'problem' → logprob: -1.4529507160186768
    3. 'previous' → logprob: -3.7029507160186768
    4. ' problem' → logprob: -3.8279507160186768
    5. 'your' → logprob: -4.077950477600098
    6. ' the' → logprob: -4.202950477600098
    7. 'unique' → logprob: -4.327950477600098
    8. 'code' → logprob: -4.452950477600098
    9. 'comments' → logprob: -5.202950477600098
    10. ' your' → logprob: -5.577950477600098

Token 599: ' reasoning' (ID: 57927)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7079139947891235
    2. 'return' → logprob: -1.3329139947891235
    3. '
' → logprob: -1.7079139947891235
    4. ' return' → logprob: -2.832913875579834
    5. '        
' → logprob: -6.582913875579834
    6. 'replacement' → logprob: -7.457913875579834
    7. ':return' → logprob: -8.082914352416992
    8. ',' → logprob: -8.332914352416992
    9. 'self' → logprob: -8.832914352416992
    10. ' replacement' → logprob: -9.082914352416992

Token 600: ' below' (ID: 4895)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06775793433189392
    2. 'return' → logprob: -2.9427578449249268
    3. ' return' → logprob: -4.692758083343506
    4. '
' → logprob: -5.817758083343506
    5. '```' → logprob: -7.567758083343506
    6. '        
' → logprob: -10.067757606506348
    7. 'replacement' → logprob: -10.942757606506348
    8. 'replace' → logprob: -11.442757606506348
    9. 'self' → logprob: -11.817757606506348
    10. '``' → logprob: -12.192757606506348

Token 601: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052768170833587646
    2. '
' → logprob: -3.5527682304382324
    3. 'return' → logprob: -3.9277682304382324
    4. ' return' → logprob: -6.177768230438232
    5. '        
' → logprob: -7.052768230438232
    6. '```' → logprob: -9.177767753601074
    7. '#' → logprob: -13.052767753601074
    8. '``' → logprob: -13.552767753601074
    9. 'replace' → logprob: -13.552767753601074
    10. '        ' → logprob: -13.677767753601074

Token 602: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004529569298028946
    2. 'return' → logprob: -5.7545294761657715
    3. ' return' → logprob: -6.6295294761657715
    4. '```' → logprob: -11.87952995300293
    5. 're' → logprob: -12.12952995300293
    6. '
' → logprob: -12.12952995300293
    7. 'replacement' → logprob: -12.62952995300293
    8. ' replacement' → logprob: -12.62952995300293
    9. 'replace' → logprob: -13.62952995300293
    10. 'result' → logprob: -13.62952995300293

Token 603: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4344961643218994
    2. '       ' → logprob: -1.1844961643218994
    3. ' return' → logprob: -3.3094961643218994
    4. 're' → logprob: -5.30949592590332
    5. 'replacement' → logprob: -5.55949592590332
    6. ' replacements' → logprob: -7.55949592590332
    7. ' replacement' → logprob: -7.93449592590332
    8. 'result' → logprob: -9.18449592590332
    9. 'replace' → logprob: -9.30949592590332
    10. '
' → logprob: -10.93449592590332

Token 604: ' replacements' (ID: 92347)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06078121438622475
    2. '       ' → logprob: -2.935781240463257
    3. 're' → logprob: -6.185781002044678
    4. 'replacement' → logprob: -6.185781002044678
    5. ' return' → logprob: -6.560781002044678
    6. 'result' → logprob: -9.435781478881836
    7. '
' → logprob: -9.560781478881836
    8. 'replace' → logprob: -9.685781478881836
    9. ' replacements' → logprob: -10.435781478881836
    10. 'minimal' → logprob: -10.435781478881836

Token 605: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10025196522474289
    2. '=' → logprob: -2.3502519130706787
    3. '_needed' → logprob: -11.475252151489258
    4. '_count' → logprob: -11.850252151489258
    5. ' +=' → logprob: -12.725252151489258
    6. '<|end|>' → logprob: -12.850252151489258
    7. '_' → logprob: -13.100252151489258
    8. ' ' → logprob: -13.350252151489258
    9. 'return' → logprob: -13.475252151489258
    10. '   ' → logprob: -13.475252151489258

Token 606: ' number' (ID: 2086)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.16367051005363464
    2. ' unique' → logprob: -2.038670539855957
    3. 'max' → logprob: -4.038670539855957
    4. ' max' → logprob: -6.038670539855957
    5. 'len' → logprob: -7.413670539855957
    6. '   ' → logprob: -9.288670539855957
    7. ' len' → logprob: -9.913670539855957
    8. '       ' → logprob: -11.663670539855957
    9. ' ' → logprob: -11.913670539855957
    10. '(unique' → logprob: -12.788670539855957

Token 607: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.705750584602356
    2. '(unique' → logprob: -1.080750584602356
    3. 'unique' → logprob: -2.5807504653930664
    4. '_unique' → logprob: -2.9557504653930664
    5. '_in' → logprob: -4.205750465393066
    6. 'of' → logprob: -4.455750465393066
    7. ' of' → logprob: -5.580750465393066
    8. ' unique' → logprob: -6.580750465393066
    9. '
' → logprob: -6.705750465393066
    10. '       ' → logprob: -6.830750465393066

Token 608: ' components' (ID: 10674)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.15527108311653137
    2. ' unique' → logprob: -2.780271053314209
    3. 'connected' → logprob: -2.780271053314209
    4. ' connected' → logprob: -4.655271053314209
    5. '_unique' → logprob: -5.655271053314209
    6. 'components' → logprob: -5.780271053314209
    7. 'set' → logprob: -6.780271053314209
    8. ' components' → logprob: -7.280271053314209
    9. '_connected' → logprob: -7.405271053314209
    10. 'characters' → logprob: -8.405271530151367

Token 609: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06755036860704422
    2. '
' → logprob: -3.1925504207611084
    3. 'return' → logprob: -4.192550182342529
    4. '<|end|>' → logprob: -6.317550182342529
    5. ' return' → logprob: -6.442550182342529
    6. '        
' → logprob: -6.567550182342529
    7. ' +' → logprob: -6.817550182342529
    8. '-' → logprob: -6.942550182342529
    9. '+' → logprob: -7.567550182342529
    10. '```' → logprob: -7.817550182342529

Token 610: ' ' (ID: 220)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.12488745898008347
    2. ' unique' → logprob: -2.749887466430664
    3. 'len' → logprob: -2.999887466430664
    4. '1' → logprob: -6.374887466430664
    5. ' len' → logprob: -6.374887466430664
    6. '   ' → logprob: -8.874887466430664
    7. '(unique' → logprob: -9.999887466430664
    8. 'set' → logprob: -10.999887466430664
    9. '_unique' → logprob: -11.249887466430664
    10. ' ' → logprob: -11.374887466430664

Token 611: '1' (ID: 16)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.19617140293121338
    2. '1' → logprob: -2.446171283721924
    3. 'len' → logprob: -2.446171283721924
    4. ' unique' → logprob: -5.446171283721924
    5. ' len' → logprob: -8.446171760559082
    6. 'set' → logprob: -8.821171760559082
    7. ' ' → logprob: -9.696171760559082
    8. '(unique' → logprob: -10.446171760559082
    9. '   ' → logprob: -10.571171760559082
    10. '(' → logprob: -11.071171760559082

Token 612: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05051663890480995
    2. '
' → logprob: -3.8005166053771973
    3. 'return' → logprob: -3.8005166053771973
    4. '        
' → logprob: -6.550516605377197
    5. ' return' → logprob: -7.175516605377197
    6. ' +' → logprob: -7.300516605377197
    7. '+' → logprob: -7.425516605377197
    8. '```' → logprob: -8.300517082214355
    9. '   ' → logprob: -9.050517082214355
    10. ')' → logprob: -9.300517082214355

Token 613: 'only' (ID: 7393)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003877627197653055
    2. '       ' → logprob: -5.878877639770508
    3. '   ' → logprob: -8.003877639770508
    4. '1' → logprob: -8.253877639770508
    5. '```' → logprob: -9.253877639770508
    6. ')
' → logprob: -9.378877639770508
    7. ' )' → logprob: -9.503877639770508
    8. '
' → logprob: -9.628877639770508
    9. 'return' → logprob: -9.878877639770508
    10. '#' → logprob: -10.378877639770508

Token 614: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048180531710386276
    2. '
' → logprob: -3.92318058013916
    3. '       ' → logprob: -4.67318058013916
    4. 'self' → logprob: -5.54818058013916
    5. '<|end|>' → logprob: -5.54818058013916
    6. ')
' → logprob: -7.04818058013916
    7. ' )' → logprob: -7.17318058013916
    8. '```' → logprob: -7.17318058013916
    9. '   ' → logprob: -7.29818058013916
    10. ' self' → logprob: -7.29818058013916

Token 615: ' no' (ID: 860)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.420980453491211
    2. ' self' → logprob: -1.545980453491211
    3. ' len' → logprob: -1.670980453491211
    4. 'len' → logprob: -2.045980453491211
    5. ' unique' → logprob: -2.420980453491211
    6. 'unique' → logprob: -2.795980453491211
    7. ' all' → logprob: -3.170980453491211
    8. ' replacements' → logprob: -4.670980453491211
    9. ' connected' → logprob: -5.420980453491211
    10. ' the' → logprob: -5.420980453491211

Token 616: ' isolated' (ID: 42329)
  Prédit: ' unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unique' → logprob: -1.5353028774261475
    2. ' self' → logprob: -2.4103028774261475
    3. ' duplicates' → logprob: -2.5353028774261475
    4. ' more' → logprob: -2.7853028774261475
    5. ' isolated' → logprob: -2.9103028774261475
    6. 'self' → logprob: -2.9103028774261475
    7. ' characters' → logprob: -3.0353028774261475
    8. ' replacements' → logprob: -3.0353028774261475
    9. ' replacement' → logprob: -3.5353028774261475
    10. 'unique' → logprob: -3.5353028774261475

Token 617: ' chars' (ID: 47991)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.48407161235809326
    2. ' node' → logprob: -1.8590716123580933
    3. ' characters' → logprob: -2.859071731567383
    4. ' vertices' → logprob: -2.984071731567383
    5. ')' → logprob: -3.359071731567383
    6. ' character' → logprob: -4.234071731567383
    7. 'nodes' → logprob: -4.359071731567383
    8. '_' → logprob: -4.734071731567383
    9. ' components' → logprob: -4.984071731567383
    10. ' vertex' → logprob: -4.984071731567383

Token 618: ')
' (ID: 446)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7501051425933838
    2. '       ' → logprob: -0.8751051425933838
    3. ')' → logprob: -2.875105142593384
    4. '        
' → logprob: -4.750104904174805
    5. ' =' → logprob: -4.875104904174805
    6. ')
' → logprob: -5.125104904174805
    7. ' if' → logprob: -5.250104904174805
    8. '   ' → logprob: -5.375104904174805
    9. ' +' → logprob: -5.750104904174805
    10. '<|end|>' → logprob: -5.875104904174805

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004047413822263479
    2. '
' → logprob: -6.129047393798828
    3. 'return' → logprob: -7.254047393798828
    4. '        
' → logprob: -7.254047393798828
    5. '```' → logprob: -9.129047393798828
    6. '   ' → logprob: -9.254047393798828
    7. ' return' → logprob: -9.254047393798828
    8. '           ' → logprob: -9.754047393798828
    9. '        ' → logprob: -11.254047393798828
    10. '	' → logprob: -11.754047393798828

Token 620: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011539128609001637
    2. 'return' → logprob: -6.876153945922852
    3. ' return' → logprob: -9.751153945922852
    4. '	' → logprob: -11.501153945922852
    5. '
' → logprob: -11.501153945922852
    6. '```' → logprob: -11.626153945922852
    7. '   ' → logprob: -11.751153945922852
    8. '        
' → logprob: -11.876153945922852
    9. ')' → logprob: -12.251153945922852
    10. '<|end|>' → logprob: -12.501153945922852

Token 621: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12714669108390808
    2. 'return' → logprob: -2.1271467208862305
    3. '```' → logprob: -9.00214672088623
    4. ' return' → logprob: -9.50214672088623
    5. '   ' → logprob: -11.62714672088623
    6. '        
' → logprob: -13.12714672088623
    7. 're' → logprob: -13.25214672088623
    8. '           ' → logprob: -13.37714672088623
    9. '
' → logprob: -13.37714672088623
    10. 'result' → logprob: -14.25214672088623

Token 622: ' we' (ID: 581)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.369468092918396
    2. 'return' → logprob: -1.369468092918396
    3. '       ' → logprob: -3.2444682121276855
    4. ' replacements' → logprob: -4.6194682121276855
    5. ' if' → logprob: -5.9944682121276855
    6. '
' → logprob: -6.1194682121276855
    7. ' replacement' → logprob: -8.369467735290527
    8. 'replacement' → logprob: -8.619467735290527
    9. 're' → logprob: -8.744467735290527
    10. 'if' → logprob: -8.869467735290527

Token 623: ' want' (ID: 1682)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.574303388595581
    2. '       ' → logprob: -1.824303388595581
    3. ' continue' → logprob: -1.949303388595581
    4. ' can' → logprob: -3.324303388595581
    5. '   ' → logprob: -4.32430362701416
    6. ' have' → logprob: -4.32430362701416
    7. ' should' → logprob: -4.69930362701416
    8. ' return' → logprob: -4.82430362701416
    9. 'need' → logprob: -4.82430362701416
    10. '#' → logprob: -4.94930362701416

Token 624: ' minimal' (ID: 19957)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1833688020706177
    2. ' replacements' → logprob: -1.6833688020706177
    3. ' to' → logprob: -2.058368682861328
    4. 'unique' → logprob: -2.683368682861328
    5. ' minimal' → logprob: -2.808368682861328
    6. ' max' → logprob: -3.183368682861328
    7. 'replacement' → logprob: -3.183368682861328
    8. 'self' → logprob: -3.308368682861328
    9. ' unique' → logprob: -3.433368682861328
    10. 'minimal' → logprob: -3.433368682861328

Token 625: ' characters' (ID: 9862)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.09745245426893234
    2. ' replacements' → logprob: -3.472452402114868
    3. '_' → logprob: -3.597452402114868
    4. '       ' → logprob: -3.972452402114868
    5. 're' → logprob: -5.097452640533447
    6. '   ' → logprob: -5.722452640533447
    7. ' _' → logprob: -5.972452640533447
    8. '
' → logprob: -6.847452640533447
    9. '_return' → logprob: -7.472452640533447
    10. 'return' → logprob: -7.972452640533447

Token 626: ' replacements' (ID: 92347)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1606629639863968
    2. '
' → logprob: -2.160662889480591
    3. '        
' → logprob: -3.910662889480591
    4. 'return' → logprob: -5.03566312789917
    5. '```' → logprob: -6.66066312789917
    6. ' =' → logprob: -7.16066312789917
    7. ' return' → logprob: -7.16066312789917
    8. '        ' → logprob: -7.41066312789917
    9. '   ' → logprob: -7.66066312789917
    10. ')' → logprob: -7.91066312789917

Token 627: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031431347131729126
    2. '
' → logprob: -4.031431198120117
    3. 'return' → logprob: -4.531431198120117
    4. '        
' → logprob: -6.531431198120117
    5. ' return' → logprob: -7.406431198120117
    6. '```' → logprob: -8.281431198120117
    7. '   ' → logprob: -10.531431198120117
    8. '           ' → logprob: -11.906431198120117
    9. '<|end|>' → logprob: -11.906431198120117
    10. ')' → logprob: -12.031431198120117

Token 628: ' these' (ID: 1879)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.578926682472229
    2. 'return' → logprob: -1.703926682472229
    3. 'all' → logprob: -1.828926682472229
    4. ' the' → logprob: -1.953926682472229
    5. ' all' → logprob: -2.3289265632629395
    6. 'self' → logprob: -2.7039265632629395
    7. ' completing' → logprob: -3.8289265632629395
    8. ' rearr' → logprob: -4.2039265632629395
    9. 'def' → logprob: -4.5789265632629395
    10. ' self' → logprob: -4.8289265632629395

Token 629: ' swaps' (ID: 150699)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43654727935791016
    2. 'return' → logprob: -1.9365472793579102
    3. ' return' → logprob: -2.43654727935791
    4. '
' → logprob: -2.56154727935791
    5. '        
' → logprob: -4.18654727935791
    6. '   ' → logprob: -4.43654727935791
    7. '```' → logprob: -4.93654727935791
    8. ' 
' → logprob: -6.31154727935791
    9. ' replacements' → logprob: -6.68654727935791
    10. ' =' → logprob: -6.93654727935791

Token 630: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08371984213590622
    2. '
' → logprob: -2.8337197303771973
    3. 'return' → logprob: -4.208719730377197
    4. '        
' → logprob: -5.458719730377197
    5. '```' → logprob: -6.458719730377197
    6. ' return' → logprob: -7.583719730377197
    7. '<|end|>' → logprob: -9.458720207214355
    8. '   ' → logprob: -9.958720207214355
    9. '#' → logprob: -10.833720207214355
    10. '  
' → logprob: -11.458720207214355

Token 631: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014936764491721988
    2. 'return' → logprob: -6.876493453979492
    3. '
' → logprob: -8.751493453979492
    4. ' return' → logprob: -8.876493453979492
    5. '        
' → logprob: -9.501493453979492
    6. '```' → logprob: -9.501493453979492
    7. '   ' → logprob: -12.376493453979492
    8. '           ' → logprob: -12.751493453979492
    9. '<|end|>' → logprob: -13.876493453979492
    10. '	' → logprob: -14.376493453979492

Token 632: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004866430535912514
    2. 'return' → logprob: -5.504866600036621
    3. '
' → logprob: -7.754866600036621
    4. '```' → logprob: -8.629866600036621
    5. ' return' → logprob: -9.254866600036621
    6. '        
' → logprob: -9.629866600036621
    7. '   ' → logprob: -11.629866600036621
    8. '           ' → logprob: -12.629866600036621
    9. '``' → logprob: -13.754866600036621
    10. '	' → logprob: -14.754866600036621

Token 633: ' Actually' (ID: 50557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3136827349662781
    2. '       ' → logprob: -1.3136827945709229
    3. ' return' → logprob: -8.438682556152344
    4. '```' → logprob: -9.063682556152344
    5. '
' → logprob: -9.813682556152344
    6. 're' → logprob: -11.063682556152344
    7. '   ' → logprob: -11.938682556152344
    8. '        
' → logprob: -12.188682556152344
    9. 'result' → logprob: -12.938682556152344
    10. 'ret' → logprob: -13.938682556152344

Token 634: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8286529183387756
    2. 'return' → logprob: -1.0786528587341309
    3. ' return' → logprob: -1.5786528587341309
    4. '
' → logprob: -4.328652858734131
    5. ' replacements' → logprob: -5.703652858734131
    6. 'replacement' → logprob: -9.078653335571289
    7. ' replacement' → logprob: -9.328653335571289
    8. '        
' → logprob: -9.453653335571289
    9. 're' → logprob: -9.578653335571289
    10. '   ' → logprob: -9.828653335571289

Token 635: ' replacements' (ID: 92347)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.002313453471288085
    2. '_' → logprob: -6.252313613891602
    3. ' replacements' → logprob: -8.252313613891602
    4. 're' → logprob: -9.877313613891602
    5. '       ' → logprob: -10.502313613891602
    6. ' _' → logprob: -10.627313613891602
    7. '```' → logprob: -12.002313613891602
    8. '   ' → logprob: -12.127313613891602
    9. '_replace' → logprob: -13.252313613891602
    10. '
' → logprob: -13.252313613891602

Token 636: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03029477410018444
    2. '=' → logprob: -3.53029465675354
    3. ' +=' → logprob: -8.405294418334961
    4. ' ' → logprob: -8.905294418334961
    5. '<|end|>' → logprob: -9.780294418334961
    6. ')' → logprob: -10.405294418334961
    7. '   ' → logprob: -10.905294418334961
    8. 'import' → logprob: -11.405294418334961
    9. '_' → logprob: -11.530294418334961
    10. ':' → logprob: -12.155294418334961

Token 637: ' number' (ID: 2086)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.5978120565414429
    2. 'max' → logprob: -1.4728120565414429
    3. ' unique' → logprob: -1.8478120565414429
    4. ' max' → logprob: -2.8478121757507324
    5. 'len' → logprob: -5.597812175750732
    6. ' len' → logprob: -7.847812175750732
    7. '
' → logprob: -7.972812175750732
    8. '0' → logprob: -8.722811698913574
    9. '   ' → logprob: -8.847811698913574
    10. 'min' → logprob: -9.222811698913574

Token 638: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.5165501236915588
    2. 'of' → logprob: -1.141550064086914
    3. '_' → logprob: -2.766550064086914
    4. ' of' → logprob: -4.641550064086914
    5. '
' → logprob: -5.516550064086914
    6. '_tokens' → logprob: -6.891550064086914
    7. '```' → logprob: -7.141550064086914
    8. ')' → logprob: -7.266550064086914
    9. 'Of' → logprob: -7.391550064086914
    10. '   ' → logprob: -7.891550064086914

Token 639: '_unique' (ID: 51840)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.8671691417694092
    2. '_unique' → logprob: -0.8671691417694092
    3. 'connected' → logprob: -2.742169141769409
    4. 'components' → logprob: -3.242169141769409
    5. '_connected' → logprob: -3.992169141769409
    6. 'characters' → logprob: -4.492169380187988
    7. '_components' → logprob: -4.867169380187988
    8. ' unique' → logprob: -4.992169380187988
    9. 'set' → logprob: -5.992169380187988
    10. '
' → logprob: -6.117169380187988

Token 640: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.38512736558914185
    2. '_chars' → logprob: -1.385127305984497
    3. '_' → logprob: -3.010127305984497
    4. '_in' → logprob: -4.010127544403076
    5. '_s' → logprob: -7.635127544403076
    6. '_character' → logprob: -7.760127544403076
    7. 'characters' → logprob: -8.260127067565918
    8. ' _' → logprob: -9.010127067565918
    9. '```' → logprob: -9.010127067565918
    10. 's' → logprob: -9.510127067565918

Token 641: 'acters' (ID: 8385)
  Prédit: 'acters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -0.01723502203822136
    2. 'ters' → logprob: -4.392234802246094
    3. 's' → logprob: -5.392234802246094
    4. 'aters' → logprob: -9.392234802246094
    5. 't' → logprob: -10.267234802246094
    6. '_in' → logprob: -11.517234802246094
    7. 'characters' → logprob: -12.017234802246094
    8. 'ers' → logprob: -12.392234802246094
    9. '_chars' → logprob: -12.392234802246094
    10. '```' → logprob: -12.392234802246094

Token 642: '_in' (ID: 2267)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5632965564727783
    2. ' -' → logprob: -1.4382965564727783
    3. ')' → logprob: -2.4382965564727783
    4. ' _' → logprob: -3.8132965564727783
    5. '   ' → logprob: -4.188296318054199
    6. '       ' → logprob: -4.313296318054199
    7. '_in' → logprob: -4.688296318054199
    8. '-' → logprob: -4.813296318054199
    9. '
' → logprob: -4.938296318054199
    10. ' ' → logprob: -4.938296318054199

Token 643: '_T' (ID: 2154)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.645836591720581
    2. 'self' → logprob: -0.895836591720581
    3. 'T' → logprob: -3.145836591720581
    4. 't' → logprob: -4.02083683013916
    5. ' self' → logprob: -5.39583683013916
    6. '_T' → logprob: -6.77083683013916
    7. '(self' → logprob: -8.52083683013916
    8. '_self' → logprob: -8.64583683013916
    9. ' t' → logprob: -9.02083683013916
    10. ' T' → logprob: -9.27083683013916

Token 644: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 645: ' number' (ID: 2086)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.01418724749237299
    2. ' connected' → logprob: -4.264187335968018
    3. 'self' → logprob: -10.76418685913086
    4. ' self' → logprob: -14.13918685913086
    5. '_connected' → logprob: -14.51418685913086
    6. 'number' → logprob: -14.63918685913086
    7. '   ' → logprob: -15.01418685913086
    8. 'unique' → logprob: -16.13918685913086
    9. '.connected' → logprob: -16.38918685913086
    10. ' ' → logprob: -16.76418685913086

Token 646: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.16810359060764313
    2. '_connected' → logprob: -2.2931036949157715
    3. '_components' → logprob: -3.6681036949157715
    4. 'of' → logprob: -3.7931036949157715
    5. 'connected' → logprob: -6.7931036949157715
    6. '_' → logprob: -7.0431036949157715
    7. 'Connected' → logprob: -7.2931036949157715
    8. 'Of' → logprob: -7.5431036949157715
    9. '('_' → logprob: -7.7931036949157715
    10. '.' → logprob: -7.7931036949157715

Token 647: '_connected' (ID: 112270)
  Prédit: '_connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connected' → logprob: -0.168244868516922
    2. 'connected' → logprob: -1.9182448387145996
    3. '_components' → logprob: -4.9182448387146
    4. 'components' → logprob: -7.9182448387146
    5. 'graph' → logprob: -9.168245315551758
    6. ' connected' → logprob: -9.918245315551758
    7. 'self' → logprob: -10.293245315551758
    8. '_connections' → logprob: -10.543245315551758
    9. '
' → logprob: -11.543245315551758
    10. '_' → logprob: -11.543245315551758

Token 648: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.0005052540800534189
    2. '_' → logprob: -7.625505447387695
    3. '_chars' → logprob: -13.125505447387695
    4. 'components' → logprob: -13.125505447387695
    5. '_component' → logprob: -13.125505447387695
    6. '_parts' → logprob: -13.250505447387695
    7. '_char' → logprob: -13.250505447387695
    8. ' _' → logprob: -13.250505447387695
    9. 's' → logprob: -13.625505447387695
    10. '_connections' → logprob: -14.000505447387695

Token 649: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16829703748226166
    2. '
' → logprob: -2.168297052383423
    3. 'return' → logprob: -3.293297052383423
    4. '        
' → logprob: -6.418296813964844
    5. ' return' → logprob: -6.668296813964844
    6. '   ' → logprob: -9.668296813964844
    7. '<|end|>' → logprob: -9.668296813964844
    8. '```' → logprob: -10.043296813964844
    9. '	return' → logprob: -10.418296813964844
    10. '+' → logprob: -10.418296813964844

Token 650: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04008535295724869
    2. 'return' → logprob: -3.6650853157043457
    3. '
' → logprob: -4.415085315704346
    4. ' return' → logprob: -7.165085315704346
    5. '        
' → logprob: -7.790085315704346
    6. '   ' → logprob: -9.040085792541504
    7. '<|end|>' → logprob: -9.040085792541504
    8. '	' → logprob: -10.290085792541504
    9. '	return' → logprob: -10.415085792541504
    10. '```' → logprob: -10.915085792541504

Token 651: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13064022362232208
    2. 'return' → logprob: -2.1306402683258057
    3. '
' → logprob: -6.005640029907227
    4. ' return' → logprob: -7.005640029907227
    5. '```' → logprob: -8.755640029907227
    6. '   ' → logprob: -9.505640029907227
    7. '        
' → logprob: -9.630640029907227
    8. ')' → logprob: -11.755640029907227
    9. 'self' → logprob: -12.630640029907227
    10. '	' → logprob: -13.005640029907227

Token 652: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1176193356513977
    2. 'return' → logprob: -2.242619276046753
    3. '
' → logprob: -5.617619514465332
    4. ' return' → logprob: -6.992619514465332
    5. '        
' → logprob: -8.617619514465332
    6. '   ' → logprob: -10.742619514465332
    7. '```' → logprob: -11.617619514465332
    8. '           ' → logprob: -12.867619514465332
    9. '      ' → logprob: -13.117619514465332
    10. '	return' → logprob: -13.492619514465332

Token 653: ' each' (ID: 2454)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10178012400865555
    2. ' return' → logprob: -2.4767801761627197
    3. '       ' → logprob: -4.476779937744141
    4. 'replacement' → logprob: -7.726779937744141
    5. 'self' → logprob: -8.85177993774414
    6. 'unique' → logprob: -8.85177993774414
    7. '
' → logprob: -8.85177993774414
    8. ' replacements' → logprob: -9.10177993774414
    9. 'the' → logprob: -9.60177993774414
    10. ' the' → logprob: -9.72677993774414

Token 654: ' cc' (ID: 22988)
  Prédit: ' connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connected' → logprob: -0.5332991480827332
    2. 'component' → logprob: -2.158299207687378
    3. 'connected' → logprob: -2.408299207687378
    4. ' component' → logprob: -2.783299207687378
    5. ' character' → logprob: -3.158299207687378
    6. '_connected' → logprob: -3.908299207687378
    7. '_' → logprob: -4.033298969268799
    8. 'character' → logprob: -4.158298969268799
    9. ' unique' → logprob: -4.283298969268799
    10. '_unique' → logprob: -4.908298969268799

Token 655: ' corresponds' (ID: 66938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9013115763664246
    2. '   ' → logprob: -1.9013116359710693
    3. ' represents' → logprob: -2.5263116359710693
    4. '.' → logprob: -2.7763116359710693
    5. '_count' → logprob: -3.4013116359710693
    6. '=' → logprob: -3.4013116359710693
    7. '_' → logprob: -3.6513116359710693
    8. 's' → logprob: -3.6513116359710693
    9. '_counts' → logprob: -3.7763116359710693
    10. ' is' → logprob: -4.15131139755249

Token 656: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03172910585999489
    2. 'to' → logprob: -3.656729221343994
    3. ')' → logprob: -6.031729221343994
    4. '_to' → logprob: -6.281729221343994
    5. '_' → logprob: -8.031728744506836
    6. '=' → logprob: -8.156728744506836
    7. '<|end|>' → logprob: -8.781728744506836
    8. ' =' → logprob: -8.781728744506836
    9. '   ' → logprob: -9.656728744506836
    10. '<|end|>' → logprob: -10.906728744506836

Token 657: ' a' (ID: 261)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -1.3349815607070923
    2. ' merging' → logprob: -1.3349815607070923
    3. ' a' → logprob: -1.4599815607070923
    4. 'a' → logprob: -1.7099815607070923
    5. 'one' → logprob: -3.4599814414978027
    6. ' characters' → logprob: -4.959981441497803
    7. ' merged' → logprob: -4.959981441497803
    8. 'merged' → logprob: -5.959981441497803
    9. ' an' → logprob: -6.084981441497803
    10. ' at' → logprob: -6.709981441497803

Token 658: ' merged' (ID: 49536)
  Prédit: 'replacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'replacement' → logprob: -0.8833800554275513
    2. 'component' → logprob: -2.0083799362182617
    3. ' replacement' → logprob: -2.6333799362182617
    4. ' group' → logprob: -2.8833799362182617
    5. 'group' → logprob: -3.0083799362182617
    6. ' component' → logprob: -3.2583799362182617
    7. ' character' → logprob: -3.3833799362182617
    8. 'character' → logprob: -3.3833799362182617
    9. 'cluster' → logprob: -3.5083799362182617
    10. 'set' → logprob: -3.6333799362182617

Token 659: ' character' (ID: 5855)
  Prédit: ' character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.4625631272792816
    2. '_char' → logprob: -2.3375630378723145
    3. ' component' → logprob: -2.9625630378723145
    4. '_chars' → logprob: -2.9625630378723145
    5. '_character' → logprob: -3.7125630378723145
    6. '_unique' → logprob: -4.0875630378723145
    7. 'character' → logprob: -4.0875630378723145
    8. ')' → logprob: -4.0875630378723145
    9. '_' → logprob: -4.2125630378723145
    10. ' _' → logprob: -4.3375630378723145

Token 660: ' group' (ID: 3566)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3373015224933624
    2. '
' → logprob: -1.46230149269104
    3. 'return' → logprob: -3.33730149269104
    4. '        
' → logprob: -4.337301731109619
    5. ' return' → logprob: -5.962301731109619
    6. '<|end|>' → logprob: -6.962301731109619
    7. '```' → logprob: -7.587301731109619
    8. '   ' → logprob: -8.087301254272461
    9. ')' → logprob: -8.212301254272461
    10. '    
' → logprob: -8.837301254272461

Token 661: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03990301489830017
    2. '
' → logprob: -3.539902925491333
    3. 'return' → logprob: -5.164903163909912
    4. '        
' → logprob: -6.289903163909912
    5. ' return' → logprob: -7.664903163909912
    6. '<|end|>' → logprob: -7.789903163909912
    7. '```' → logprob: -7.789903163909912
    8. ')' → logprob: -8.039902687072754
    9. '   ' → logprob: -8.289902687072754
    10. 'def' → logprob: -8.539902687072754

Token 662: ' can' (ID: 665)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.86760675907135
    2. ' can' → logprob: -1.99260675907135
    3. '       ' → logprob: -2.2426066398620605
    4. '.' → logprob: -2.2426066398620605
    5. ' will' → logprob: -2.7426066398620605
    6. 'continue' → logprob: -2.8676066398620605
    7. '   ' → logprob: -2.9926066398620605
    8. 'can' → logprob: -3.1176066398620605
    9. 'need' → logprob: -3.2426066398620605
    10. ' need' → logprob: -3.3676066398620605

Token 663: ' swap' (ID: 25489)
  Prédit: 'replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'replace' → logprob: -0.04344991594552994
    2. ' replace' → logprob: -3.668449878692627
    3. 'perform' → logprob: -5.543449878692627
    4. 'use' → logprob: -6.918449878692627
    5. 'make' → logprob: -7.043449878692627
    6. ' map' → logprob: -7.168449878692627
    7. ')' → logprob: -7.168449878692627
    8. 'convert' → logprob: -7.418449878692627
    9. ' perform' → logprob: -7.543449878692627
    10. 'subtract' → logprob: -7.543449878692627

Token 664: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2310071885585785
    2. '
' → logprob: -1.6060072183609009
    3. '        
' → logprob: -5.481007099151611
    4. 'return' → logprob: -7.106007099151611
    5. '```' → logprob: -8.85600757598877
    6. '   ' → logprob: -9.48100757598877
    7. '    
' → logprob: -9.60600757598877
    8. ' return' → logprob: -9.85600757598877
    9. '  
' → logprob: -10.23100757598877
    10. '           ' → logprob: -10.35600757598877

Token 665: ' one' (ID: 1001)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3253764808177948
    2. ')' → logprob: -2.325376510620117
    3. 'return' → logprob: -2.700376510620117
    4. ' return' → logprob: -2.825376510620117
    5. '
' → logprob: -3.700376510620117
    6. '   ' → logprob: -4.200376510620117
    7. '<|end|>' → logprob: -5.825376510620117
    8. '        
' → logprob: -6.075376510620117
    9. '```' → logprob: -6.325376510620117
    10. '.' → logprob: -6.950376510620117

Token 666: ' unified' (ID: 75979)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8999438285827637
    2. ')' → logprob: -1.6499438285827637
    3. '
' → logprob: -2.2749438285827637
    4. '.' → logprob: -2.2749438285827637
    5. 'def' → logprob: -2.8999438285827637
    6. '<|end|>' → logprob: -3.1499438285827637
    7. '```' → logprob: -3.7749438285827637
    8. ')
' → logprob: -4.274943828582764
    9. '   ' → logprob: -4.274943828582764
    10. '        
' → logprob: -5.024943828582764

Token 667: ' character' (ID: 5855)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8141979575157166
    2. ')' → logprob: -1.1891980171203613
    3. '_' → logprob: -2.9391980171203613
    4. '       ' → logprob: -3.3141980171203613
    5. '_chars' → logprob: -3.4391980171203613
    6. '_char' → logprob: -3.4391980171203613
    7. '
' → logprob: -3.4391980171203613
    8. 'def' → logprob: -4.689198017120361
    9. '_character' → logprob: -4.814198017120361
    10. ' character' → logprob: -5.564198017120361

Token 668: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059069760143756866
    2. '
' → logprob: -3.184069871902466
    3. '        
' → logprob: -4.684069633483887
    4. 'return' → logprob: -5.559069633483887
    5. '<|end|>' → logprob: -6.434069633483887
    6. ' return' → logprob: -8.059069633483887
    7. ')' → logprob: -8.684069633483887
    8. '   ' → logprob: -8.934069633483887
    9. '```' → logprob: -9.184069633483887
    10. '    
' → logprob: -9.559069633483887

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1010143980383873
    2. '
' → logprob: -2.6010143756866455
    3. '        
' → logprob: -4.226014614105225
    4. '```' → logprob: -6.351014614105225
    5. '    
' → logprob: -6.976014614105225
    6. '  
' → logprob: -6.976014614105225
    7. '   ' → logprob: -7.101014614105225
    8. '<|end|>' → logprob: -7.476014614105225
    9. 'return' → logprob: -7.601014614105225
    10. ')' → logprob: -7.601014614105225

Token 670: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08657340705394745
    2. '
' → logprob: -2.711573362350464
    3. '        
' → logprob: -4.836573600769043
    4. 'return' → logprob: -5.336573600769043
    5. '<|end|>' → logprob: -6.961573600769043
    6. ')' → logprob: -7.336573600769043
    7. '```' → logprob: -7.586573600769043
    8. '   ' → logprob: -8.086573600769043
    9. ' return' → logprob: -8.461573600769043
    10. '  
' → logprob: -8.711573600769043

Token 671: ' Final' (ID: 12625)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12889458239078522
    2. 'return' → logprob: -2.378894567489624
    3. '
' → logprob: -3.878894567489624
    4. ' return' → logprob: -5.503894805908203
    5. '```' → logprob: -6.503894805908203
    6. '        
' → logprob: -6.628894805908203
    7. '   ' → logprob: -8.378894805908203
    8. ')' → logprob: -9.128894805908203
    9. 'def' → logprob: -9.503894805908203
    10. '<|end|>' → logprob: -10.128894805908203

Token 672: ' characters' (ID: 9862)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6413633227348328
    2. 'return' → logprob: -1.3913633823394775
    3. '       ' → logprob: -2.2663633823394775
    4. ' replacements' → logprob: -3.1413633823394775
    5. '_re' → logprob: -3.5163633823394775
    6. '   ' → logprob: -4.016363143920898
    7. '_return' → logprob: -4.516363143920898
    8. '
' → logprob: -4.766363143920898
    9. ' result' → logprob: -6.016363143920898
    10. 'result' → logprob: -6.641363143920898

Token 673: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4013258218765259
    2. '   ' → logprob: -2.9013257026672363
    3. '       ' → logprob: -3.0263257026672363
    4. ' in' → logprob: -3.1513257026672363
    5. '=' → logprob: -3.2763257026672363
    6. 's' → logprob: -3.2763257026672363
    7. '_count' → logprob: -4.151325702667236
    8. '
' → logprob: -4.776325702667236
    9. ' that' → logprob: -4.776325702667236
    10. ' are' → logprob: -4.901325702667236

Token 674: ' T' (ID: 353)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3407391309738159
    2. 'T' → logprob: -1.590739130973816
    3. 'self' → logprob: -3.3407392501831055
    4. ' t' → logprob: -4.0907392501831055
    5. 'the' → logprob: -4.4657392501831055
    6. ' T' → logprob: -4.5907392501831055
    7. 's' → logprob: -5.9657392501831055
    8. ' the' → logprob: -6.3407392501831055
    9. 'replacement' → logprob: -6.7157392501831055
    10. ' self' → logprob: -6.8407392501831055

Token 675: ' minus' (ID: 40335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9253999590873718
    2. '
' → logprob: -1.8004000186920166
    3. '   ' → logprob: -1.8004000186920166
    4. ')' → logprob: -2.3004000186920166
    5. '.' → logprob: -3.5504000186920166
    6. '```' → logprob: -3.6754000186920166
    7. ':' → logprob: -3.9254000186920166
    8. ' =' → logprob: -3.9254000186920166
    9. 'def' → logprob: -4.5503997802734375
    10. '<|end|>' → logprob: -5.0503997802734375

Token 676: ' connected' (ID: 12079)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.10028409957885742
    2. ' connected' → logprob: -2.3502840995788574
    3. 'self' → logprob: -9.600284576416016
    4. '   ' → logprob: -12.600284576416016
    5. ' self' → logprob: -12.600284576416016
    6. 'number' → logprob: -13.975284576416016
    7. '_connected' → logprob: -14.225284576416016
    8. '       ' → logprob: -14.725284576416016
    9. 'the' → logprob: -15.100284576416016
    10. 'unique' → logprob: -15.850284576416016

Token 677: ' components' (ID: 10674)
  Prédit: '_components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.000680265249684453
    2. '_' → logprob: -7.500680446624756
    3. 'components' → logprob: -9.375679969787598
    4. '_char' → logprob: -10.500679969787598
    5. ' components' → logprob: -12.375679969787598
    6. '_component' → logprob: -13.000679969787598
    7. '_chars' → logprob: -13.250679969787598
    8. '```' → logprob: -13.500679969787598
    9. ' _' → logprob: -13.875679969787598
    10. '   ' → logprob: -14.375679969787598

Token 678: ' will' (ID: 738)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023524967953562737
    2. 'return' → logprob: -4.273524761199951
    3. '
' → logprob: -5.148524761199951
    4. '        
' → logprob: -6.273524761199951
    5. ' return' → logprob: -7.273524761199951
    6. ')' → logprob: -8.39852523803711
    7. '```' → logprob: -8.64852523803711
    8. '   ' → logprob: -9.14852523803711
    9. '<|end|>' → logprob: -9.14852523803711
    10. ',' → logprob: -10.64852523803711

Token 679: ' be' (ID: 413)
  Prédit: ' give'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' give' → logprob: -0.7346963882446289
    2. ' return' → logprob: -1.859696388244629
    3. ' provide' → logprob: -2.109696388244629
    4. ' be' → logprob: -2.859696388244629
    5. ' result' → logprob: -2.859696388244629
    6. ' ' → logprob: -3.609696388244629
    7. ' continue' → logprob: -3.859696388244629
    8. ' yield' → logprob: -4.484696388244629
    9. ' _' → logprob: -4.859696388244629
    10. '   ' → logprob: -5.359696388244629

Token 680: ' required' (ID: 3759)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2977211475372314
    2. ' self' → logprob: -1.2977211475372314
    3. 'self' → logprob: -1.7977211475372314
    4. '+' → logprob: -2.7977211475372314
    5. ' ' → logprob: -3.0477211475372314
    6. ' +' → logprob: -3.0477211475372314
    7. ' the' → logprob: -3.2977211475372314
    8. ' -' → logprob: -3.5477211475372314
    9. ' minimal' → logprob: -4.047720909118652
    10. 'the' → logprob: -4.297720909118652

Token 681: ' replacements' (ID: 92347)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3332594633102417
    2. '
' → logprob: -1.4582594633102417
    3. 'return' → logprob: -3.5832595825195312
    4. '        
' → logprob: -4.333259582519531
    5. ' return' → logprob: -5.208259582519531
    6. '<|end|>' → logprob: -6.708259582519531
    7. ')' → logprob: -7.583259582519531
    8. '```' → logprob: -7.833259582519531
    9. '   ' → logprob: -7.958259582519531
    10. 'def' → logprob: -8.208259582519531

Token 682: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1386314034461975
    2. '
' → logprob: -2.2636313438415527
    3. 'return' → logprob: -4.013631343841553
    4. '        
' → logprob: -6.013631343841553
    5. '   ' → logprob: -6.638631343841553
    6. 'def' → logprob: -6.888631343841553
    7. ' return' → logprob: -7.013631343841553
    8. '```' → logprob: -8.013631820678711
    9. '<|end|>' → logprob: -8.388631820678711
    10. ')' → logprob: -8.513631820678711

Token 683: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010517130605876446
    2. 'return' → logprob: -4.635517120361328
    3. '```' → logprob: -8.010517120361328
    4. ' return' → logprob: -9.010517120361328
    5. 'def' → logprob: -9.260517120361328
    6. '
' → logprob: -9.635517120361328
    7. '   ' → logprob: -9.760517120361328
    8. '        
' → logprob: -10.010517120361328
    9. ')' → logprob: -11.510517120361328
    10. '<|end|>' → logprob: -11.760517120361328

Token 684: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16050955653190613
    2. 'return' (adapté à ' return') → logprob: -1.9105095863342285
    3. ' return' → logprob: -8.78550910949707
    4. '
' → logprob: -9.91050910949707
    5. '```' → logprob: -10.03550910949707
    6. '        
' → logprob: -10.91050910949707
    7. 're' → logprob: -11.53550910949707
    8. '   ' → logprob: -12.16050910949707
    9. 'result' → logprob: -13.53550910949707
    10. 'ret' → logprob: -14.28550910949707

Token 685: ' unique' (ID: 5746)
  Prédit: ' unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unique' → logprob: -0.04063137620687485
    2. 'unique' → logprob: -3.6656312942504883
    3. ' max' → logprob: -4.540631294250488
    4. ' len' → logprob: -6.415631294250488
    5. 'max' → logprob: -6.415631294250488
    6. 'len' → logprob: -8.290631294250488
    7. ' self' → logprob: -11.415631294250488
    8. '       ' → logprob: -11.665631294250488
    9. '(unique' → logprob: -12.165631294250488
    10. '_unique' → logprob: -12.415631294250488

Token 686: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0008486981969326735
    2. '_' → logprob: -7.375848770141602
    3. '_chars' → logprob: -10.125848770141602
    4. '('_' → logprob: -10.875848770141602
    5. '_tokens' → logprob: -10.875848770141602
    6. '```' → logprob: -11.000848770141602
    7. '_to' → logprob: -11.250848770141602
    8. ''_' → logprob: -11.250848770141602
    9. ' _' → logprob: -11.500848770141602
    10. '_components' → logprob: -11.500848770141602

Token 687: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -3.1424973713001236e-05
    2. '_' → logprob: -11.125031471252441
    3. '_in' → logprob: -11.625031471252441
    4. 't' → logprob: -12.000031471252441
    5. 'in' → logprob: -15.000031471252441
    6. '   ' → logprob: -15.375031471252441
    7. '```' → logprob: -15.750031471252441
    8. ' _' → logprob: -15.875031471252441
    9. 'self' → logprob: -16.375030517578125
    10. ''_' → logprob: -16.875030517578125

Token 688: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.010555706918239594
    2. '-' → logprob: -4.635555744171143
    3. ' ' → logprob: -7.885555744171143
    4. ')' → logprob: -9.010555267333984
    5. '   ' → logprob: -9.260555267333984
    6. '<|end|>' → logprob: -9.635555267333984
    7. '  ' → logprob: -10.385555267333984
    8. '_' → logprob: -10.635555267333984
    9. '    ' → logprob: -11.010555267333984
    10. ' ' → logprob: -11.010555267333984

Token 689: ' connected' (ID: 12079)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.006145634688436985
    2. 'self' → logprob: -5.256145477294922
    3. ' connected' → logprob: -7.006145477294922
    4. ' self' → logprob: -12.381145477294922
    5. '   ' → logprob: -14.881145477294922
    6. '_connected' → logprob: -15.381145477294922
    7. '.connected' → logprob: -16.131145477294922
    8. '       ' → logprob: -16.506145477294922
    9. '```' → logprob: -17.131145477294922
    10. '-connected' → logprob: -17.756145477294922

Token 690: '_components' (ID: 55324)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.4190910756587982
    2. 'ted' → logprob: -1.6690911054611206
    3. '_components' → logprob: -1.9190911054611206
    4. 'ected' → logprob: -5.04409122467041
    5. '_connected' → logprob: -8.04409122467041
    6. 't' → logprob: -9.41909122467041
    7. '_tokens' → logprob: -9.54409122467041
    8. '```' → logprob: -10.16909122467041
    9. 'ent' → logprob: -10.29409122467041
    10. 'ents' → logprob: -10.41909122467041

Token 691: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5292397737503052
    2. 'class' → logprob: -0.9042397737503052
    3. '

' → logprob: -6.029239654541016
    4. '```' → logprob: -6.279239654541016
    5. '<|end|>' → logprob: -7.279239654541016
    6. '    
' → logprob: -8.279239654541016
    7. ' class' → logprob: -8.654239654541016
    8. '\n' → logprob: -8.779239654541016
    9. '#' → logprob: -9.404239654541016
    10. '<|end|>' → logprob: -9.654239654541016

Token 692: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0030781254172325134
    2. '
' → logprob: -5.878077983856201
    3. ' class' → logprob: -8.87807846069336
    4. '```' → logprob: -9.87807846069336
    5. '#' → logprob: -10.00307846069336
    6. '<class' → logprob: -11.37807846069336
    7. '

' → logprob: -12.25307846069336
    8. '\n' → logprob: -12.25307846069336
    9. ':' → logprob: -12.87807846069336
    10. '   ' → logprob: -13.12807846069336

Token 693: ' Frequency' (ID: 79273)
  Prédit: ' Char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Char' → logprob: -0.04947487264871597
    2. 'Char' → logprob: -3.1744749546051025
    3. ' Frequency' → logprob: -5.924474716186523
    4. 'Frequency' → logprob: -6.049474716186523
    5. ' defaultdict' → logprob: -7.299474716186523
    6. 'default' → logprob: -7.799474716186523
    7. 'def' → logprob: -8.924474716186523
    8. 'class' → logprob: -9.799474716186523
    9. 'Default' → logprob: -10.049474716186523
    10. 'Freq' → logprob: -11.174474716186523

Token 694: 'Profile' (ID: 9120)
  Prédit: 'Profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Profile' → logprob: -1.0280383548888494e-06
    2. 'Profiler' → logprob: -14.375000953674316
    3. 'profile' → logprob: -16.125001907348633
    4. 'Profil' → logprob: -16.250001907348633
    5. 'Profiles' → logprob: -16.500001907348633
    6. '_profile' → logprob: -18.000001907348633
    7. '_Profile' → logprob: -18.250001907348633
    8. '-profile' → logprob: -18.750001907348633
    9. 'Pro' → logprob: -19.125001907348633
    10. ' Profile' → logprob: -19.375001907348633

Token 695: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005387356504797935
    2. ':
' → logprob: -7.6255388259887695
    3. '(' → logprob: -10.62553882598877
    4. ':def' → logprob: -11.12553882598877
    5. '(object' → logprob: -11.87553882598877
    6. '():' → logprob: -14.12553882598877
    7. ' :' → logprob: -14.25053882598877
    8. '):' → logprob: -14.25053882598877
    9. ':

' → logprob: -14.37553882598877
    10. '{' → logprob: -14.62553882598877

Token 696: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00047702479059807956
    2. 'def' → logprob: -7.750476837158203
    3. '```' → logprob: -10.500476837158203
    4. ' def' → logprob: -11.000476837158203
    5. '	def' → logprob: -14.375476837158203
    6. '   ' → logprob: -14.750476837158203
    7. 'from' → logprob: -14.875476837158203
    8. '[' → logprob: -16.125476837158203
    9. '    
' → logprob: -16.125476837158203
    10. 'class' → logprob: -16.500476837158203

Token 697: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6942346096038818
    2. 'def' (adapté à ' def') → logprob: -0.9442346096038818
    3. '   ' → logprob: -2.194234609603882
    4. 'class' → logprob: -9.569234848022461
    5. '	def' → logprob: -10.569234848022461
    6. 'from' → logprob: -10.944234848022461
    7. '```' → logprob: -12.694234848022461
    8. ' ' → logprob: -13.194234848022461
    9. '    
' → logprob: -14.194234848022461
    10. ':def' → logprob: -14.319234848022461

Token 698: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009089815430343151
    2. 'init' → logprob: -4.759089946746826
    3. 'def' → logprob: -8.884089469909668
    4. '```' → logprob: -9.134089469909668
    5. '_init' → logprob: -9.259089469909668
    6. ' __' → logprob: -9.259089469909668
    7. '___' → logprob: -10.259089469909668
    8. '.__' → logprob: -13.509089469909668
    9. '____' → logprob: -14.259089469909668
    10. '`' → logprob: -15.884089469909668

Token 699: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. '_init' → logprob: -15.75
    3. ' init' → logprob: -15.875
    4. '```' → logprob: -16.25
    5. 'def' → logprob: -16.75
    6. '__' → logprob: -19.375
    7. '(init' → logprob: -19.625
    8. '	init' → logprob: -20.5
    9. 'inite' → logprob: -20.625
    10. '.init' → logprob: -20.75

Token 700: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3552241325378418
    2. '__(' → logprob: -1.2302241325378418
    3. '(' → logprob: -5.605224132537842
    4. 'self' → logprob: -6.730224132537842
    5. ' (' → logprob: -6.855224132537842
    6. '__' → logprob: -7.980224132537842
    7. '__(
' → logprob: -8.480224609375
    8. '   ' → logprob: -8.730224609375
    9. '_(' → logprob: -10.355224609375
    10. 'def' → logprob: -10.605224609375

Token 701: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4259644558478612e-05
    2. ' self' → logprob: -11.250014305114746
    3. '   ' → logprob: -13.875014305114746
    4. '       ' → logprob: -16.50001335144043
    5. '
' → logprob: -16.62501335144043
    6. '(self' → logprob: -18.37501335144043
    7. ')' → logprob: -18.37501335144043
    8. 's' → logprob: -18.50001335144043
    9. ',' → logprob: -19.00001335144043
    10. '```' → logprob: -20.00001335144043

Token 702: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09920322895050049
    2. 'self' → logprob: -2.599203109741211
    3. '(self' → logprob: -3.974203109741211
    4. '   ' → logprob: -7.849203109741211
    5. ' ,' → logprob: -7.974203109741211
    6. ',self' → logprob: -8.224203109741211
    7. ' self' → logprob: -8.974203109741211
    8. ' (' → logprob: -9.224203109741211
    9. '__(' → logprob: -10.099203109741211
    10. '(' → logprob: -10.974203109741211

Token 703: ' string' (ID: 1621)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002541178371757269
    2. 's' → logprob: -6.2525410652160645
    3. ' self' → logprob: -7.5025410652160645
    4. 'string' → logprob: -10.877541542053223
    5. '   ' → logprob: -11.127541542053223
    6. 'str' → logprob: -12.002541542053223
    7. ')' → logprob: -12.127541542053223
    8. 'text' → logprob: -12.377541542053223
    9. '       ' → logprob: -12.627541542053223
    10. ' s' → logprob: -12.627541542053223

Token 704: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03966987505555153
    2. '):' → logprob: -3.664669990539551
    3. '):
' → logprob: -4.414669990539551
    4. '   ' → logprob: -7.289669990539551
    5. '       ' → logprob: -7.914669990539551
    6. 'self' → logprob: -9.78966999053955
    7. ' :' → logprob: -10.78966999053955
    8. '(self' → logprob: -11.03966999053955
    9. ':str' → logprob: -11.16466999053955
    10. '):
' → logprob: -12.03966999053955

Token 705: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00033558503491804004
    2. ' str' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.750335693359375
    4. '[str' → logprob: -17.250335693359375
    5. ')' → logprob: -17.375335693359375
    6. '	str' → logprob: -18.000335693359375
    7. ':str' → logprob: -18.125335693359375
    8. 's' → logprob: -19.500335693359375
    9. '       ' → logprob: -19.750335693359375
    10. 'self' → logprob: -20.000335693359375

Token 706: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5782883167266846
    2. '):' → logprob: -0.8282883167266846
    3. '   ' → logprob: -6.8282880783081055
    4. '       ' → logprob: -7.3282880783081055
    5. ')' → logprob: -7.7032880783081055
    6. '):
' → logprob: -8.828288078308105
    7. ':' → logprob: -12.703288078308105
    8. ' ):' → logprob: -13.328288078308105
    9. ' ):
' → logprob: -13.328288078308105
    10. '    ' → logprob: -14.953288078308105

Token 707: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02239440381526947
    2. 'from' → logprob: -4.397394180297852
    3. 'self' → logprob: -4.647394180297852
    4. '   ' → logprob: -8.772394180297852
    5. '```' → logprob: -9.897394180297852
    6. 'def' → logprob: -10.522394180297852
    7. ' from' → logprob: -11.647394180297852
    8. ' self' → logprob: -11.897394180297852
    9. ' ' → logprob: -14.397394180297852
    10. '	' → logprob: -15.272394180297852

Token 708: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004201986361294985
    2. 'from' → logprob: -5.504201889038086
    3. '       ' → logprob: -9.004201889038086
    4. '   ' → logprob: -14.629201889038086
    5. ' self' → logprob: -15.254201889038086
    6. ' from' → logprob: -18.629201889038086
    7. '	self' → logprob: -18.754201889038086
    8. 'def' → logprob: -19.379201889038086
    9. '           ' → logprob: -20.504201889038086
    10. '(self' → logprob: -20.879201889038086

Token 709: '.count' (ID: 14019)
  Prédit: '.freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.freq' → logprob: -0.43709540367126465
    2. '.frequency' → logprob: -1.1870954036712646
    3. '.string' → logprob: -3.0620954036712646
    4. '.str' → logprob: -7.812095642089844
    5. 'string' → logprob: -7.937095642089844
    6. '.profile' → logprob: -8.312095642089844
    7. '.counter' → logprob: -8.312095642089844
    8. 'frequency' → logprob: -8.312095642089844
    9. '.fre' → logprob: -8.812095642089844
    10. '.char' → logprob: -9.062095642089844

Token 710: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.055904801934957504
    2. '=' → logprob: -3.0559048652648926
    3. ' =' → logprob: -4.930904865264893
    4. ':' → logprob: -9.680904388427734
    5. '   ' → logprob: -12.055904388427734
    6. 'self' → logprob: -14.430904388427734
    7. '       ' → logprob: -14.805904388427734
    8. 'd' → logprob: -15.180904388427734
    9. ' ' → logprob: -15.305904388427734
    10. '[' → logprob: -15.680904388427734

Token 711: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005931401159614325
    2. ' =' → logprob: -5.130931377410889
    3. '={}' → logprob: -13.880931854248047
    4. ' ' → logprob: -14.505931854248047
    5. ':' → logprob: -14.505931854248047
    6. '   ' → logprob: -15.380931854248047
    7. ')' → logprob: -15.505931854248047
    8. '{' → logprob: -15.630931854248047
    9. '[' → logprob: -16.755931854248047
    10. '={' → logprob: -17.255931854248047

Token 712: ' Dict' (ID: 55179)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.10110479593276978
    2. 'Dict' → logprob: -2.351104736328125
    3. 'Default' → logprob: -7.101104736328125
    4. ' defaultdict' → logprob: -10.351104736328125
    5. 'dict' → logprob: -10.726104736328125
    6. '=' → logprob: -11.351104736328125
    7. '(default' → logprob: -13.226104736328125
    8. '{' → logprob: -13.476104736328125
    9. '.default' → logprob: -14.351104736328125
    10. ' Dict' → logprob: -14.351104736328125

Token 713: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.1472419600977446e-06
    2. '[int' → logprob: -14.375000953674316
    3. 'str' → logprob: -15.125000953674316
    4. '[' → logprob: -15.375000953674316
    5. '   ' → logprob: -18.250001907348633
    6. '=str' → logprob: -19.500001907348633
    7. '(str' → logprob: -19.500001907348633
    8. ' str' → logprob: -20.125001907348633
    9. '<char' → logprob: -20.375001907348633
    10. ' =' → logprob: -20.625001907348633

Token 714: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025212035980075598
    2. ',int' → logprob: -6.00252103805542
    3. 'int' → logprob: -10.377521514892578
    4. ' ,' → logprob: -11.877521514892578
    5. '[int' → logprob: -11.877521514892578
    6. '   ' → logprob: -15.002521514892578
    7. ']int' → logprob: -16.252521514892578
    8. '(int' → logprob: -16.502521514892578
    9. ':int' → logprob: -17.127521514892578
    10. ' int' → logprob: -17.752521514892578

Token 715: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.080963092041202e-06
    2. ' int' → logprob: -12.250004768371582
    3. '[int' → logprob: -15.875004768371582
    4. 'Set' → logprob: -16.5000057220459
    5. ']int' → logprob: -17.8750057220459
    6. '   ' → logprob: -18.5000057220459
    7. '<int' → logprob: -18.6250057220459
    8. '	int' → logprob: -18.6250057220459
    9. 'List' → logprob: -18.6250057220459
    10. '```' → logprob: -19.2500057220459

Token 716: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006230841390788555
    2. ']=' → logprob: -7.5006232261657715
    3. '=' → logprob: -9.750622749328613
    4. ' ]' → logprob: -11.500622749328613
    5. '[' → logprob: -14.375622749328613
    6. ']={' → logprob: -15.375622749328613
    7. ' =' → logprob: -15.625622749328613
    8. ')' → logprob: -15.875622749328613
    9. '']' → logprob: -16.50062370300293
    10. '   ' → logprob: -16.50062370300293

Token 717: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163863845169544
    2. ' =' → logprob: -4.264163970947266
    3. ' ' → logprob: -16.139163970947266
    4. '[' → logprob: -16.139163970947266
    5. ')=' → logprob: -17.264163970947266
    6. '=self' → logprob: -17.639163970947266
    7. '={}' → logprob: -17.889163970947266
    8. '＝' → logprob: -18.014163970947266
    9. ')' → logprob: -18.139163970947266
    10. ']=' → logprob: -18.514163970947266

Token 718: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -4.668304245569743e-05
    2. ' defaultdict' → logprob: -10.000046730041504
    3. '{}' → logprob: -13.875046730041504
    4. '(default' → logprob: -16.375045776367188
    5. '"default' → logprob: -16.750045776367188
    6. '{' → logprob: -16.750045776367188
    7. '{}
' → logprob: -17.000045776367188
    8. '.default' → logprob: -17.375045776367188
    9. ' default' → logprob: -17.625045776367188
    10. ''default' → logprob: -18.250045776367188

Token 719: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011527570895850658
    2. 'int' → logprob: -4.5115275382995605
    3. '(lambda' → logprob: -7.7615275382995605
    4. '<int' → logprob: -10.636528015136719
    5. '[int' → logprob: -11.386528015136719
    6. '(<' → logprob: -11.511528015136719
    7. 'lambda' → logprob: -11.886528015136719
    8. '```' → logprob: -14.511528015136719
    9. '   ' → logprob: -14.886528015136719
    10. '(' → logprob: -15.636528015136719

Token 720: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029811009764671326
    2. ')' → logprob: -3.529810905456543
    3. ')

' → logprob: -10.279810905456543
    4. '       ' → logprob: -11.404810905456543
    5. ')
' → logprob: -12.029810905456543
    6. ' )
' → logprob: -12.029810905456543
    7. '   ' → logprob: -13.279810905456543
    8. ',' → logprob: -15.404810905456543
    9. '')
' → logprob: -15.529810905456543
    10. '())
' → logprob: -15.654810905456543

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02463926188647747
    2. 'for' → logprob: -4.149639129638672
    3. ' for' → logprob: -4.774639129638672
    4. '   ' → logprob: -9.024639129638672
    5. ' ' → logprob: -13.024639129638672
    6. '	for' → logprob: -13.899639129638672
    7. '```' → logprob: -13.899639129638672
    8. '<|end|>' → logprob: -14.149639129638672
    9. '	' → logprob: -14.649639129638672
    10. '	   ' → logprob: -15.524639129638672

Token 722: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000835120037663728
    2. '       ' → logprob: -7.250834941864014
    3. ' for' → logprob: -9.000835418701172
    4. '   ' → logprob: -13.875835418701172
    5. '```' → logprob: -14.500835418701172
    6. '	for' → logprob: -15.500835418701172
    7. ' ' → logprob: -17.625835418701172
    8. '           ' → logprob: -18.250835418701172
    9. '
' → logprob: -18.250835418701172
    10. 'char' → logprob: -18.375835418701172

Token 723: ' c' (ID: 274)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.31817626953125
    2. 'char' → logprob: -1.31817626953125
    3. 'c' → logprob: -5.31817626953125
    4. ' ch' → logprob: -14.06817626953125
    5. ' char' → logprob: -16.06817626953125
    6. ' c' → logprob: -19.69317626953125
    7. '_char' → logprob: -19.69317626953125
    8. 'chr' → logprob: -21.31817626953125
    9. 'character' → logprob: -21.56817626953125
    10. '	ch' → logprob: -21.69317626953125

Token 724: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008622255176305771
    2. 'in' → logprob: -4.758622169494629
    3. 'n' → logprob: -13.008622169494629
    4. ' ' → logprob: -13.258622169494629
    5. '   ' → logprob: -13.508622169494629
    6. 'import' → logprob: -14.258622169494629
    7. '    ' → logprob: -15.508622169494629
    8. 's' → logprob: -15.633622169494629
    9. '_in' → logprob: -15.633622169494629
    10. ' i' → logprob: -15.758622169494629

Token 725: ' string' (ID: 1621)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.0001584850688232109
    2. ' string' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.000158309936523
    4. ' ' → logprob: -19.000158309936523
    5. 'tring' → logprob: -20.875158309936523
    6. '	string' → logprob: -21.625158309936523
    7. '<string' → logprob: -22.125158309936523
    8. '  ' → logprob: -22.250158309936523
    9. '[string' → logprob: -22.250158309936523
    10. 'String' → logprob: -22.375158309936523

Token 726: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32263240218162537
    2. ':
' → logprob: -1.3226324319839478
    3. '           ' → logprob: -4.822632312774658
    4. '       ' → logprob: -7.572632312774658
    5. '   ' → logprob: -8.072632789611816
    6. ' :' → logprob: -8.822632789611816
    7. 'self' → logprob: -9.072632789611816
    8. ' :
' → logprob: -9.572632789611816
    9. ':self' → logprob: -10.197632789611816
    10. ' self' → logprob: -10.822632789611816

Token 727: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01380027737468481
    2. 'self' → logprob: -5.013800144195557
    3. '   ' → logprob: -5.513800144195557
    4. ' self' → logprob: -6.013800144195557
    5. '       ' → logprob: -7.763800144195557
    6. ' ' → logprob: -9.763800621032715
    7. '```' → logprob: -10.013800621032715
    8. '               ' → logprob: -10.513800621032715
    9. '	       ' → logprob: -12.013800621032715
    10. '  ' → logprob: -12.513800621032715

Token 728: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0015990104293450713
    2. ' self' → logprob: -6.501598834991455
    3. '           ' → logprob: -9.251599311828613
    4. '   ' → logprob: -14.501599311828613
    5. '       ' → logprob: -16.626598358154297
    6. '               ' → logprob: -16.751598358154297
    7. ' ' → logprob: -17.126598358154297
    8. '
' → logprob: -18.001598358154297
    9. '	self' → logprob: -18.126598358154297
    10. '```' → logprob: -18.751598358154297

Token 729: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.008965650573372841
    2. 'counts' → logprob: -4.758965492248535
    3. 'count' → logprob: -8.008965492248535
    4. '[count' → logprob: -11.758965492248535
    5. ' counts' → logprob: -12.258965492248535
    6. ' .' → logprob: -12.383965492248535
    7. '_counts' → logprob: -13.383965492248535
    8. '.' → logprob: -15.883965492248535
    9. '	count' → logprob: -15.883965492248535
    10. '```' → logprob: -16.50896644592285

Token 730: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.9424725148128346e-05
    2. '[c' → logprob: -10.125049591064453
    3. '[s' → logprob: -11.750049591064453
    4. 'c' → logprob: -14.375049591064453
    5. 'counts' → logprob: -14.750049591064453
    6. '[' → logprob: -15.625049591064453
    7. 'с' → logprob: -16.375049591064453
    8. 'sc' → logprob: -16.375049591064453
    9. '{s' → logprob: -17.500049591064453
    10. '```' → logprob: -17.625049591064453

Token 731: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.375001907348633
    3. 'c' → logprob: -14.750001907348633
    4. ' [' → logprob: -16.375001907348633
    5. '[
' → logprob: -16.375001907348633
    6. '[self' → logprob: -16.875001907348633
    7. '
' → logprob: -17.750001907348633
    8. '```' → logprob: -17.875001907348633
    9. '   ' → logprob: -18.875001907348633
    10. '	c' → logprob: -19.125001907348633

Token 732: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.40276187658309937
    2. ']+=' → logprob: -1.1527619361877441
    3. ']' → logprob: -4.402761936187744
    4. ' +=' → logprob: -5.652761936187744
    5. '[' → logprob: -12.027761459350586
    6. ' ]' → logprob: -12.902761459350586
    7. '```' → logprob: -13.652761459350586
    8. '   ' → logprob: -14.027761459350586
    9. ')' → logprob: -14.152761459350586
    10. '           ' → logprob: -14.277761459350586

Token 733: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005235190503299236
    2. ' +=' → logprob: -5.255235195159912
    3. ']+=' → logprob: -13.505234718322754
    4. '   ' → logprob: -17.50523567199707
    5. '```' → logprob: -19.00523567199707
    6. '[' → logprob: -19.88023567199707
    7. '+' → logprob: -20.38023567199707
    8. '=' → logprob: -20.50523567199707
    9. '    ' → logprob: -20.50523567199707
    10. '+="' → logprob: -20.88023567199707

Token 734: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -19.875059127807617
    4. '```' → logprob: -20.875059127807617
    5. '  ' → logprob: -23.375059127807617
    6. '           ' → logprob: -24.500059127807617
    7. '0' → logprob: -24.500059127807617
    8. '    ' → logprob: -24.625059127807617
    9. '
' → logprob: -24.750059127807617
    10. '       ' → logprob: -24.875059127807617

Token 735: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '```' → logprob: -24.375
    4. '   ' → logprob: -24.875
    5. '
' → logprob: -26.125
    6. '`' → logprob: -26.5
    7. '  ' → logprob: -26.875
    8. '１' → logprob: -26.875
    9. '۱' → logprob: -26.875
    10. '0' → logprob: -27.0

Token 736: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26458948850631714
    2. '
' → logprob: -1.764589548110962
    3. 'def' → logprob: -3.389589548110962
    4. '    
' → logprob: -3.764589548110962
    5. ' def' → logprob: -6.264589309692383
    6. '        
' → logprob: -6.639589309692383
    7. ' 
' → logprob: -7.639589309692383
    8. '<|end|>' → logprob: -8.014589309692383
    9. '```' → logprob: -9.514589309692383
    10. '  
' → logprob: -9.764589309692383

Token 737: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7091548442840576
    2. '
' → logprob: -0.8341548442840576
    3. 'def' → logprob: -2.8341548442840576
    4. ' def' → logprob: -4.959155082702637
    5. '    
' → logprob: -5.084155082702637
    6. '        
' → logprob: -6.959155082702637
    7. '<|end|>' → logprob: -7.709155082702637
    8. '```' → logprob: -9.334155082702637
    9. '

' → logprob: -9.584155082702637
    10. ' 
' → logprob: -10.334155082702637

Token 738: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009122979827225208
    2. ' def' → logprob: -7.000912189483643
    3. '
' → logprob: -14.5009126663208
    4. '   ' → logprob: -15.6259126663208
    5. '	def' → logprob: -17.375911712646484
    6. '```' → logprob: -17.625911712646484
    7. ' ' → logprob: -18.375911712646484
    8. '<|end|>' → logprob: -18.875911712646484
    9. '    
' → logprob: -19.375911712646484
    10. 'Def' → logprob: -19.500911712646484

Token 739: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.10324378311634064
    2. ' inverse' → logprob: -2.353243827819824
    3. 'def' → logprob: -5.853243827819824
    4. ' def' → logprob: -8.853243827819824
    5. 'reverse' → logprob: -11.728243827819824
    6. '_inverse' → logprob: -12.853243827819824
    7. '.inverse' → logprob: -13.228243827819824
    8. 'invert' → logprob: -13.228243827819824
    9. 'get' → logprob: -13.478243827819824
    10. 'Inverse' → logprob: -13.728243827819824

Token 740: '_profile' (ID: 30184)
  Prédit: '_profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profile' → logprob: -0.0002019907406065613
    2. '_' → logprob: -9.500202178955078
    3. '_profiles' → logprob: -10.375202178955078
    4. 'def' → logprob: -10.500202178955078
    5. '_prof' → logprob: -11.000202178955078
    6. '_map' → logprob: -11.125202178955078
    7. '_pro' → logprob: -11.500202178955078
    8. 's' → logprob: -11.750202178955078
    9. '```' → logprob: -11.750202178955078
    10. ' _' → logprob: -13.500202178955078

Token 741: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000116655595775228
    2. '(' → logprob: -9.125116348266602
    3. ' (' → logprob: -12.875116348266602
    4. '()' → logprob: -12.875116348266602
    5. '(s' → logprob: -13.125116348266602
    6. '(
' → logprob: -15.625116348266602
    7. 'self' → logprob: -15.625116348266602
    8. 's' → logprob: -16.7501163482666
    9. '(sel' → logprob: -16.7501163482666
    10. '()(' → logprob: -17.3751163482666

Token 742: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.635191023349762
    2. ')' → logprob: -0.760191023349762
    3. '()' → logprob: -6.635190963745117
    4. 'self' → logprob: -7.260190963745117
    5. ')(' → logprob: -7.760190963745117
    6. '(' → logprob: -10.385190963745117
    7. ')return' → logprob: -10.760190963745117
    8. '())' → logprob: -10.885190963745117
    9. ' )' → logprob: -10.885190963745117
    10. '):
' → logprob: -12.135190963745117

Token 743: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.14685970544815063
    2. '(self' → logprob: -2.646859645843506
    3. ' ->' → logprob: -3.396859645843506
    4. ')' → logprob: -3.521859645843506
    5. 'self' → logprob: -6.646859645843506
    6. ')->' → logprob: -7.271859645843506
    7. '       ' → logprob: -8.396860122680664
    8. '(' → logprob: -8.521860122680664
    9. '   ' → logprob: -9.021860122680664
    10. ' self' → logprob: -9.646860122680664

Token 744: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.0004565327544696629
    2. 'Default' → logprob: -8.000456809997559
    3. 'default' → logprob: -9.500456809997559
    4. ' Dict' → logprob: -10.000456809997559
    5. 'dict' → logprob: -14.000456809997559
    6. ' default' → logprob: -18.250455856323242
    7. '   ' → logprob: -18.625455856323242
    8. '_dict' → logprob: -18.875455856323242
    9. ' Default' → logprob: -19.000455856323242
    10. '(default' → logprob: -19.250455856323242

Token 745: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.2729995988775045e-06
    2. 'int' → logprob: -12.000006675720215
    3. '[Int' → logprob: -17.1250057220459
    4. '<int' → logprob: -17.6250057220459
    5. '(int' → logprob: -19.0000057220459
    6. '   ' → logprob: -20.2500057220459
    7. '[' → logprob: -20.8750057220459
    8. '[str' → logprob: -21.1250057220459
    9. '[
' → logprob: -21.6250057220459
    10. '```' → logprob: -21.7500057220459

Token 746: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005095454398542643
    2. '[' → logprob: -8.125509262084961
    3. 'Set' → logprob: -8.875509262084961
    4. ' ,' → logprob: -9.625509262084961
    5. ':Set' → logprob: -12.875509262084961
    6. ',set' → logprob: -13.625509262084961
    7. ' Set' → logprob: -13.875509262084961
    8. '   ' → logprob: -14.000509262084961
    9. '(Set' → logprob: -14.125509262084961
    10. ':' → logprob: -14.250509262084961

Token 747: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -1.1041145626222715e-05
    2. ' Set' → logprob: -12.000011444091797
    3. 'set' → logprob: -12.250011444091797
    4. '   ' → logprob: -18.125011444091797
    5. '	Set' → logprob: -18.375011444091797
    6. 'List' → logprob: -19.000011444091797
    7. '_set' → logprob: -19.625011444091797
    8. '_Set' → logprob: -20.250011444091797
    9. ' set' → logprob: -21.000011444091797
    10. '       ' → logprob: -21.250011444091797

Token 748: '[str' (ID: 33439)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.575946569442749
    2. '[str' → logprob: -0.825946569442749
    3. 'int' → logprob: -12.575946807861328
    4. '```' → logprob: -13.450946807861328
    5. ']' → logprob: -14.075946807861328
    6. '[' → logprob: -14.325946807861328
    7. 'str' → logprob: -14.950946807861328
    8. ']int' → logprob: -15.450946807861328
    9. '<int' → logprob: -16.450946807861328
    10. '][' → logprob: -17.200946807861328

Token 749: ']]:
' (ID: 183340)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.13837410509586334
    2. ']:
' → logprob: -2.138374090194702
    3. ']' → logprob: -4.513374328613281
    4. ']:
' → logprob: -8.638374328613281
    5. ']:

' → logprob: -9.013374328613281
    6. ']>' → logprob: -10.263374328613281
    7. ' ]' → logprob: -10.638374328613281
    8. ']]:
' → logprob: -10.763374328613281
    9. ']=' → logprob: -11.638374328613281
    10. '>' → logprob: -11.638374328613281

Token 750: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015656208619475365
    2. ':' → logprob: -4.765655994415283
    3. '=' → logprob: -5.765655994415283
    4. '{' → logprob: -7.265655994415283
    5. ' =' → logprob: -7.265655994415283
    6. ':
' → logprob: -8.015656471252441
    7. '   ' → logprob: -8.265656471252441
    8. ' defaultdict' → logprob: -8.265656471252441
    9. '):
' → logprob: -8.765656471252441
    10. ' return' → logprob: -8.890656471252441

Token 751: ' freq' (ID: 42078)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004609557334333658
    2. 'result' → logprob: -6.00460958480835
    3. 'return' → logprob: -6.50460958480835
    4. ' defaultdict' → logprob: -8.379609107971191
    5. ' return' → logprob: -8.754609107971191
    6. ' result' → logprob: -9.129609107971191
    7. 'default' → logprob: -10.129609107971191
    8. 'd' → logprob: -10.754609107971191
    9. 'dict' → logprob: -11.004609107971191
    10. '{' → logprob: -11.379609107971191

Token 752: '_map' (ID: 11824)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09068716317415237
    2. ' =' → logprob: -2.4656872749328613
    3. '_to' → logprob: -7.340687274932861
    4. ':' → logprob: -7.340687274932861
    5. '       ' → logprob: -8.590686798095703
    6. '   ' → logprob: -8.715686798095703
    7. '_' → logprob: -11.090686798095703
    8. '{' → logprob: -11.215686798095703
    9. 'return' → logprob: -11.215686798095703
    10. '```' → logprob: -12.090686798095703

Token 753: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043854113668203354
    2. ' =' → logprob: -3.168853998184204
    3. '       ' → logprob: -8.043853759765625
    4. '   ' → logprob: -8.918853759765625
    5. '[' → logprob: -8.918853759765625
    6. '.setdefault' → logprob: -9.543853759765625
    7. ':' → logprob: -9.668853759765625
    8. '=self' → logprob: -10.293853759765625
    9. '[self' → logprob: -10.793853759765625
    10. '{' → logprob: -10.793853759765625

Token 754: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0002613358374219388
    2. ' defaultdict' → logprob: -8.250261306762695
    3. ' default' → logprob: -17.125261306762695
    4. '.default' → logprob: -18.500261306762695
    5. '(default' → logprob: -18.500261306762695
    6. '"default' → logprob: -18.625261306762695
    7. '   ' → logprob: -19.875261306762695
    8. '{}' → logprob: -20.000261306762695
    9. 'Default' → logprob: -20.125261306762695
    10. ''default' → logprob: -20.750261306762695

Token 755: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.038055144250392914
    2. 'set' → logprob: -3.288055181503296
    3. '<' → logprob: -12.663055419921875
    4. '```' → logprob: -12.663055419921875
    5. ':set' → logprob: -12.788055419921875
    6. '[' → logprob: -13.288055419921875
    7. '=set' → logprob: -13.663055419921875
    8. ',set' → logprob: -14.913055419921875
    9. '.set' → logprob: -15.288055419921875
    10. '(lambda' → logprob: -15.288055419921875

Token 756: ')
' (ID: 446)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6353939771652222
    2. '()' → logprob: -0.8853939771652222
    3. ')
' → logprob: -3.5103940963745117
    4. ')' → logprob: -4.135394096374512
    5. '())
' → logprob: -4.885394096374512
    6. '[int' → logprob: -5.760394096374512
    7. '())' → logprob: -8.010394096374512
    8. '(int' → logprob: -8.135394096374512
    9. '   ' → logprob: -9.135394096374512
    10. '()]' → logprob: -9.385394096374512

Token 757: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04188532382249832
    2. ' for' → logprob: -3.4168853759765625
    3. 'for' → logprob: -4.9168853759765625
    4. '```' → logprob: -8.041885375976562
    5. '[' → logprob: -8.541885375976562
    6. '   ' → logprob: -8.666885375976562
    7. '        
' → logprob: -9.666885375976562
    8. '           ' → logprob: -10.416885375976562
    9. '[
' → logprob: -11.291885375976562
    10. ' ' → logprob: -11.666885375976562

Token 758: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.597542405128479
    2. 'for' (adapté à ' for') → logprob: -0.847542405128479
    3. '       ' → logprob: -3.8475422859191895
    4. '   ' → logprob: -10.972542762756348
    5. '```' → logprob: -11.597542762756348
    6. '
' → logprob: -12.097542762756348
    7. '        
' → logprob: -13.097542762756348
    8. '	for' → logprob: -13.347542762756348
    9. '           ' → logprob: -13.472542762756348
    10. ' ' → logprob: -14.222542762756348

Token 759: ' c' (ID: 274)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.20904889702796936
    2. 'c' → logprob: -1.709048867225647
    3. 'ch' → logprob: -5.959048748016357
    4. ' c' → logprob: -5.959048748016357
    5. ' char' → logprob: -6.209048748016357
    6. 'k' → logprob: -7.834048748016357
    7. 'key' → logprob: -10.834049224853516
    8. ' ch' → logprob: -11.834049224853516
    9. ' k' → logprob: -13.209049224853516
    10. 'character' → logprob: -13.209049224853516

Token 760: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0343497171998024
    2. ' in' → logprob: -4.0343499183654785
    3. ' ,' → logprob: -4.1593499183654785
    4. 'in' → logprob: -8.15934944152832
    5. 's' → logprob: -10.28434944152832
    6. ',c' → logprob: -10.40934944152832
    7. ',self' → logprob: -10.53434944152832
    8. 'self' → logprob: -11.40934944152832
    9. ',count' → logprob: -11.40934944152832
    10. ' ' → logprob: -11.90934944152832

Token 761: ' f' (ID: 285)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6211077570915222
    2. 'freq' → logprob: -1.371107816696167
    3. 'cnt' → logprob: -1.621107816696167
    4. 'f' → logprob: -4.871107578277588
    5. ' freq' → logprob: -6.621107578277588
    6. ' cnt' → logprob: -6.621107578277588
    7. ' count' → logprob: -7.121107578277588
    8. ' f' → logprob: -11.871108055114746
    9. 'v' → logprob: -14.621108055114746
    10. 'fq' → logprob: -14.871108055114746

Token 762: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693220376968384
    2. 'in' → logprob: -2.126932144165039
    3. ' ' → logprob: -12.626932144165039
    4. ',' → logprob: -15.626932144165039
    5. '	in' → logprob: -15.751932144165039
    6. 's' → logprob: -16.00193214416504
    7. '  ' → logprob: -16.25193214416504
    8. 'i' → logprob: -16.62693214416504
    9. 'n' → logprob: -16.75193214416504
    10. '_in' → logprob: -17.12693214416504

Token 763: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019293478690087795
    2. ' self' → logprob: -6.25192928314209
    3. '(self' → logprob: -14.50192928314209
    4. '[self' → logprob: -16.126930236816406
    5. '	self' → logprob: -17.251930236816406
    6. '```' → logprob: -18.001930236816406
    7. '   ' → logprob: -18.251930236816406
    8. '       ' → logprob: -18.376930236816406
    9. '{' → logprob: -18.876930236816406
    10. ' ' → logprob: -19.001930236816406

Token 764: '.count' (ID: 14019)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.020861366763710976
    2. 'count' → logprob: -4.2708611488342285
    3. '.count' → logprob: -5.0208611488342285
    4. '_counts' → logprob: -9.895861625671387
    5. ' counts' → logprob: -11.270861625671387
    6. '.items' → logprob: -11.395861625671387
    7. '[count' → logprob: -14.020861625671387
    8. '```' → logprob: -14.395861625671387
    9. '   ' → logprob: -15.520861625671387
    10. ':' → logprob: -15.645861625671387

Token 765: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19716350734233856
    2. ' in' → logprob: -2.0721635818481445
    3. '.items' → logprob: -3.4471635818481445
    4. '_counts' → logprob: -4.4471635818481445
    5. 'items' → logprob: -6.1971635818481445
    6. 'counts' → logprob: -6.1971635818481445
    7. '_items' → logprob: -6.6971635818481445
    8. '_freq' → logprob: -7.4471635818481445
    9. '.iteritems' → logprob: -7.5721635818481445
    10. 'cts' → logprob: -7.6971635818481445

Token 766: '.items' (ID: 19607)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17721989750862122
    2. 'in' → logprob: -1.9272198677062988
    3. '_freq' → logprob: -5.427219867706299
    4. 'freq' → logprob: -5.427219867706299
    5. '   ' → logprob: -5.802219867706299
    6. '.items' → logprob: -6.552219867706299
    7. 'items' → logprob: -7.802219867706299
    8. ' ' → logprob: -7.927219867706299
    9. '(freq' → logprob: -7.927219867706299
    10. '       ' → logprob: -8.052220344543457

Token 767: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.12716002762317657
    2. '():
' → logprob: -2.12716007232666
    3. '()' → logprob: -8.50216007232666
    4. ':' → logprob: -11.12716007232666
    5. '():
' → logprob: -12.00216007232666
    6. ' ():' → logprob: -12.87716007232666
    7. '(' → logprob: -13.37716007232666
    8. '():

' → logprob: -13.50216007232666
    9. '()):
' → logprob: -14.12716007232666
    10. ':
' → logprob: -14.87716007232666

Token 768: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5953229069709778
    2. ' freq' → logprob: -0.8453229069709778
    3. 'freq' → logprob: -3.970322847366333
    4. '(freq' → logprob: -8.470322608947754
    5. '```' → logprob: -9.720322608947754
    6. ' frequency' → logprob: -11.095322608947754
    7. '.freq' → logprob: -11.470322608947754
    8. '	       ' → logprob: -11.720322608947754
    9. '_freq' → logprob: -11.845322608947754
    10. '   ' → logprob: -12.970322608947754

Token 769: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.03805319964885712
    2. 'freq' (adapté à ' freq') → logprob: -3.288053274154663
    3. '           ' → logprob: -12.163053512573242
    4. '(freq' → logprob: -12.538053512573242
    5. ' frequency' → logprob: -13.288053512573242
    6. '.freq' → logprob: -14.288053512573242
    7. '_freq' → logprob: -15.288053512573242
    8. 'frequency' → logprob: -16.038053512573242
    9. 'fre' → logprob: -16.163053512573242
    10. ' fre' → logprob: -17.413053512573242

Token 770: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -5.550411151489243e-05
    2. 'freq' → logprob: -10.500055313110352
    3. '_freq' → logprob: -11.625055313110352
    4. '   ' → logprob: -11.750055313110352
    5. '[f' → logprob: -11.875055313110352
    6. '=' → logprob: -13.375055313110352
    7. '```' → logprob: -15.000055313110352
    8. '[' → logprob: -15.250055313110352
    9. '=f' → logprob: -15.375055313110352
    10. ' =' → logprob: -15.375055313110352

Token 771: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -2.935296834039036e-06
    2. 'f' → logprob: -13.37500286102295
    3. '[' → logprob: -13.87500286102295
    4. ' f' → logprob: -15.50000286102295
    5. ' [' → logprob: -16.000003814697266
    6. '	f' → logprob: -19.375003814697266
    7. '   ' → logprob: -19.500003814697266
    8. '
' → logprob: -20.000003814697266
    9. '[int' → logprob: -20.375003814697266
    10. '[
' → logprob: -21.125003814697266

Token 772: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.059232354164123535
    2. '.add' → logprob: -3.059232234954834
    3. '.' → logprob: -4.934232234954834
    4. ' .' → logprob: -5.934232234954834
    5. ' ].' → logprob: -7.934232234954834
    6. ']' → logprob: -9.434232711791992
    7. '}.' → logprob: -9.559232711791992
    8. 'add' → logprob: -9.809232711791992
    9. '.insert' → logprob: -9.934232711791992
    10. ').' → logprob: -10.059232711791992

Token 773: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.9361264946837764e-07
    2. '.add' → logprob: -15.75
    3. ' add' → logprob: -17.0
    4. '_add' → logprob: -21.25
    5. 'adde' → logprob: -21.25
    6. '```' → logprob: -21.625
    7. 'append' → logprob: -21.75
    8. '	add' → logprob: -22.375
    9. ')add' → logprob: -23.25
    10. 'addle' → logprob: -24.0

Token 774: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.4741035997867584
    2. 'c' → logprob: -0.974103569984436
    3. ' c' → logprob: -10.599103927612305
    4. '(' → logprob: -14.099103927612305
    5. ')c' → logprob: -14.724103927612305
    6. '(
' → logprob: -14.974103927612305
    7. '	c' → logprob: -16.224103927612305
    8. '```' → logprob: -17.599103927612305
    9. ' (' → logprob: -17.974103927612305
    10. '   ' → logprob: -18.724103927612305

Token 775: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002531310310587287
    2. ')
' → logprob: -6.0025315284729
    3. '       ' → logprob: -10.002531051635742
    4. ' )' → logprob: -12.627531051635742
    5. ')
' → logprob: -12.877531051635742
    6. ')return' → logprob: -12.877531051635742
    7. 'return' → logprob: -14.502531051635742
    8. ')`' → logprob: -14.627531051635742
    9. '   ' → logprob: -15.377531051635742
    10. ')

' → logprob: -15.502531051635742

Token 776: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002262186724692583
    2. 'return' → logprob: -6.127262115478516
    3. '
' → logprob: -10.252262115478516
    4. ' return' → logprob: -10.627262115478516
    5. '   ' → logprob: -11.752262115478516
    6. '```' → logprob: -12.002262115478516
    7. '	' → logprob: -14.002262115478516
    8. '	return' → logprob: -14.252262115478516
    9. '           ' → logprob: -14.627262115478516
    10. '<|end|>' → logprob: -15.002262115478516

Token 777: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5780178308486938
    2. '       ' → logprob: -0.8280178308486938
    3. ' return' → logprob: -6.203017711639404
    4. '
' → logprob: -10.703018188476562
    5. '   ' → logprob: -10.953018188476562
    6. '	return' → logprob: -11.953018188476562
    7. '```' → logprob: -13.328018188476562
    8. ':return' → logprob: -13.578018188476562
    9. ' ' → logprob: -13.828018188476562
    10. '{return' → logprob: -14.453018188476562

Token 778: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.0052342405542731285
    2. ' freq' → logprob: -5.255234241485596
    3. '(freq' → logprob: -15.005233764648438
    4. 'dict' → logprob: -15.630233764648438
    5. 'frequency' → logprob: -17.630233764648438
    6. 'fre' → logprob: -18.255233764648438
    7. '   ' → logprob: -19.130233764648438
    8. '.freq' → logprob: -19.630233764648438
    9. ' dict' → logprob: -19.755233764648438
    10. '_freq' → logprob: -19.880233764648438

Token 779: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0001749351795297116
    2. 'freq' → logprob: -8.750174522399902
    3. '_freq' → logprob: -11.750174522399902
    4. 'o' → logprob: -12.750174522399902
    5. '(freq' → logprob: -13.500174522399902
    6. 'map' → logprob: -14.375174522399902
    7. 'q' → logprob: -14.375174522399902
    8. 'u' → logprob: -14.500174522399902
    9. 'ap' → logprob: -15.125174522399902
    10. 'emap' → logprob: -15.250174522399902

Token 780: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.002522865077480674
    2. '
' → logprob: -6.002522945404053
    3. '

' → logprob: -10.627522468566895
    4. '```' → logprob: -10.877522468566895
    5. '<class' → logprob: -13.752522468566895
    6. '<|end|>' → logprob: -14.127522468566895
    7. '    
' → logprob: -14.127522468566895
    8. ' class' → logprob: -14.502522468566895
    9. '  
' → logprob: -15.252522468566895
    10. 'from' → logprob: -15.377522468566895

Token 781: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.012786151841282845
    2. '```' → logprob: -4.387786388397217
    3. '
' → logprob: -9.512785911560059
    4. '<class' → logprob: -9.887785911560059
    5. ' class' → logprob: -10.137785911560059
    6. '``' → logprob: -10.512785911560059
    7. '<|end|>' → logprob: -10.637785911560059
    8. '

' → logprob: -11.137785911560059
    9. '[class' → logprob: -11.637785911560059
    10. '(
' → logprob: -11.762785911560059

Token 782: ' Char' (ID: 9331)
  Prédit: ' Char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Char' → logprob: -0.4288140833377838
    2. 'Char' → logprob: -1.0538140535354614
    3. '_char' → logprob: -10.053813934326172
    4. 'Union' → logprob: -10.428813934326172
    5. ' Union' → logprob: -11.053813934326172
    6. 'char' → logprob: -11.928813934326172
    7. 'default' → logprob: -12.553813934326172
    8. 'String' → logprob: -12.553813934326172
    9. 'Default' → logprob: -13.053813934326172
    10. 'Graph' → logprob: -13.803813934326172

Token 783: 'Mapping' (ID: 8146)
  Prédit: 'Mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mapping' → logprob: -2.2200749754119897e-06
    2. ' Mapping' → logprob: -13.750001907348633
    3. '_mapping' → logprob: -14.625001907348633
    4. 'mapping' → logprob: -15.375001907348633
    5. 'M' → logprob: -16.000001907348633
    6. '_MAPPING' → logprob: -16.000001907348633
    7. '.Mapping' → logprob: -16.875001907348633
    8. 'Map' → logprob: -17.000001907348633
    9. 'Graph' → logprob: -18.125001907348633
    10. 'apping' → logprob: -18.250001907348633

Token 784: 'Graph' (ID: 9922)
  Prédit: 'Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -4.320199877838604e-07
    2. 'graph' → logprob: -16.0
    3. '_graph' → logprob: -16.25
    4. '(Graph' → logprob: -17.0
    5. ' Graph' → logprob: -17.375
    6. 'Graphs' → logprob: -17.625
    7. ' graph' → logprob: -17.875
    8. ':' → logprob: -18.0
    9. '.Graph' → logprob: -19.25
    10. '```' → logprob: -19.625

Token 785: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016051027923822403
    2. ':
' → logprob: -4.141050815582275
    3. ':def' → logprob: -11.891051292419434
    4. '():' → logprob: -12.766051292419434
    5. '```' → logprob: -13.016051292419434
    6. '(object' → logprob: -13.516051292419434
    7. ':

' → logprob: -14.266051292419434
    8. '{' → logprob: -14.516051292419434
    9. '   ' → logprob: -14.891051292419434
    10. '):' → logprob: -15.016051292419434

Token 786: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07706741988658905
    2. ':
' → logprob: -2.9520673751831055
    3. ':' → logprob: -4.0770673751831055
    4. 'default' → logprob: -6.5770673751831055
    5. 'def' → logprob: -6.7020673751831055
    6. '```' → logprob: -6.9520673751831055
    7. '):
' → logprob: -8.202067375183105
    8. '    
' → logprob: -8.202067375183105
    9. '
' → logprob: -8.202067375183105
    10. ' defaultdict' → logprob: -8.577067375183105

Token 787: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5041826367378235
    2. 'class' → logprob: -1.1291825771331787
    3. 'def' (adapté à ' def') → logprob: -3.1291825771331787
    4. ':
' → logprob: -3.8791825771331787
    5. ':' → logprob: -5.254182815551758
    6. 'from' → logprob: -6.879182815551758
    7. '```' → logprob: -7.504182815551758
    8. ' def' → logprob: -7.629182815551758
    9. '
' → logprob: -8.254182815551758
    10. 'object' → logprob: -8.379182815551758

Token 788: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09852700680494308
    2. 'object' → logprob: -2.723526954650879
    3. '```' → logprob: -4.723526954650879
    4. ' __' → logprob: -4.848526954650879
    5. 'def' → logprob: -5.223526954650879
    6. '   ' → logprob: -6.973526954650879
    7. '
' → logprob: -6.973526954650879
    8. ':' → logprob: -7.098526954650879
    9. ' def' → logprob: -7.348526954650879
    10. 'init' → logprob: -7.598526954650879

Token 789: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.05499910004437e-05
    2. '__' → logprob: -10.250090599060059
    3. '```' → logprob: -10.750090599060059
    4. '_init' → logprob: -11.250090599060059
    5. 'def' → logprob: -12.125090599060059
    6. 'Init' → logprob: -12.625090599060059
    7. 'it' → logprob: -13.125090599060059
    8. 'dict' → logprob: -13.125090599060059
    9. 'class' → logprob: -13.125090599060059
    10. '(init' → logprob: -13.500090599060059

Token 790: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6967020630836487
    2. '__(' → logprob: -0.6967020630836487
    3. ' (' → logprob: -6.196702003479004
    4. '__(
' → logprob: -7.571702003479004
    5. '__' → logprob: -7.946702003479004
    6. '(' → logprob: -8.071702003479004
    7. 'self' → logprob: -8.821702003479004
    8. '__((' → logprob: -9.821702003479004
    9. '_(' → logprob: -10.321702003479004
    10. ' self' → logprob: -10.571702003479004

Token 791: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012082771718269214
    2. ')' → logprob: -9.375121116638184
    3. ' self' → logprob: -10.500121116638184
    4. '
' → logprob: -12.375121116638184
    5. '):
' → logprob: -12.875121116638184
    6. '   ' → logprob: -14.125121116638184
    7. '(self' → logprob: -15.375121116638184
    8. ')
' → logprob: -15.625121116638184
    9. ' ' → logprob: -16.375120162963867
    10. '       ' → logprob: -16.375120162963867

Token 792: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03853437677025795
    2. 'self' → logprob: -3.28853440284729
    3. '   ' → logprob: -8.538534164428711
    4. '(self' → logprob: -9.538534164428711
    5. 'alphabet' → logprob: -9.538534164428711
    6. ' ,' → logprob: -9.788534164428711
    7. ',self' → logprob: -10.038534164428711
    8. '
' → logprob: -10.913534164428711
    9. ' self' → logprob: -11.788534164428711
    10. ' (' → logprob: -12.038534164428711

Token 793: ' alphabet' (ID: 47840)
  Prédit: 'alphabet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alphabet' → logprob: -0.07092468440532684
    2. 'nodes' → logprob: -3.070924758911133
    3. 'vertices' → logprob: -4.570924758911133
    4. 'chars' → logprob: -4.820924758911133
    5. ' alphabet' → logprob: -5.945924758911133
    6. 'characters' → logprob: -7.445924758911133
    7. ' nodes' → logprob: -8.320924758911133
    8. 'letters' → logprob: -9.445924758911133
    9. 'charset' → logprob: -10.195924758911133
    10. 'self' → logprob: -10.320924758911133

Token 794: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08272099494934082
    2. '):' → logprob: -2.582720994949341
    3. '):
' → logprob: -5.582720756530762
    4. ' :' → logprob: -10.832720756530762
    5. ')' → logprob: -11.582720756530762
    6. '```' → logprob: -11.707720756530762
    7. '   ' → logprob: -11.957720756530762
    8. '_:' → logprob: -12.457720756530762
    9. ':list' → logprob: -12.957720756530762
    10. '):
' → logprob: -12.957720756530762

Token 795: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.023497842252254486
    2. 'list' → logprob: -3.7734978199005127
    3. 'Set' → logprob: -8.773497581481934
    4. '[List' → logprob: -9.648497581481934
    5. ' List' → logprob: -10.898497581481934
    6. ' list' → logprob: -12.273497581481934
    7. 'set' → logprob: -12.273497581481934
    8. ')' → logprob: -12.773497581481934
    9. '_list' → logprob: -14.148497581481934
    10. '[str' → logprob: -14.773497581481934

Token 796: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.875
    3. 'str' → logprob: -17.0
    4. ':' → logprob: -17.375
    5. ':str' → logprob: -17.625
    6. '):' → logprob: -17.75
    7. '[
' → logprob: -18.625
    8. '```' → logprob: -19.125
    9. ')' → logprob: -19.25
    10. '=str' → logprob: -20.25

Token 797: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13800105452537537
    2. '):' → logprob: -2.138000965118408
    3. ']):
' → logprob: -4.638000965118408
    4. ']):' → logprob: -7.138000965118408
    5. '   ' → logprob: -8.138001441955566
    6. '       ' → logprob: -9.013001441955566
    7. ')' → logprob: -9.763001441955566
    8. '):
' → logprob: -10.138001441955566
    9. ']:' → logprob: -12.013001441955566
    10. ']' → logprob: -12.013001441955566

Token 798: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002943479048553854
    2. 'self' → logprob: -8.37529468536377
    3. '   ' → logprob: -10.00029468536377
    4. ' self' → logprob: -11.25029468536377
    5. ')' → logprob: -13.50029468536377
    6. '```' → logprob: -13.62529468536377
    7. '):
' → logprob: -14.37529468536377
    8. ' ' → logprob: -14.62529468536377
    9. '
' → logprob: -14.87529468536377
    10. '      ' → logprob: -15.12529468536377

Token 799: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.023627208545804024
    2. '       ' → logprob: -3.773627281188965
    3. ' self' → logprob: -8.023627281188965
    4. '   ' → logprob: -9.898627281188965
    5. 'def' → logprob: -13.773627281188965
    6. '	self' → logprob: -13.898627281188965
    7. '{
' → logprob: -14.898627281188965
    8. '
' → logprob: -15.148627281188965
    9. '{' → logprob: -15.523627281188965
    10. '```' → logprob: -15.648627281188965

Token 800: '.ad' (ID: 19775)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.3593659996986389
    2. '.parents' → logprob: -2.359365940093994
    3. '.al' → logprob: -2.859365940093994
    4. '.nodes' → logprob: -2.984365940093994
    5. '.ad' → logprob: -3.234365940093994
    6. '.graph' → logprob: -3.359365940093994
    7. '.vertices' → logprob: -3.984365940093994
    8. '._' → logprob: -6.359365940093994
    9. '_nodes' → logprob: -7.109365940093994
    10. '.characters' → logprob: -7.234365940093994

Token 801: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008617881685495377
    2. 'jac' → logprob: -4.758617877960205
    3. 'js' → logprob: -12.883618354797363
    4. 'jc' → logprob: -15.133618354797363
    5. '[j' → logprob: -15.508618354797363
    6. 'ja' → logprob: -15.883618354797363
    7. 'jf' → logprob: -16.633617401123047
    8. '_j' → logprob: -16.758617401123047
    9. 'd' → logprob: -17.133617401123047
    10. 'jm' → logprob: -17.758617401123047

Token 802: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.032101478427648544
    2. 'acency' → logprob: -3.9071013927459717
    3. '[' → logprob: -5.282101631164551
    4. ' =' → logprob: -5.407101631164551
    5. ':' → logprob: -6.657101631164551
    6. '_list' → logprob: -8.15710163116455
    7. 'acent' → logprob: -9.03210163116455
    8. '[u' → logprob: -9.28210163116455
    9. '.setdefault' → logprob: -10.53210163116455
    10. '[:]' → logprob: -11.40710163116455

Token 803: ' Dict' (ID: 55179)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.13452395796775818
    2. 'Dict' → logprob: -2.134523868560791
    3. 'Default' → logprob: -4.884523868560791
    4. 'dict' → logprob: -13.00952434539795
    5. ' Dict' → logprob: -14.25952434539795
    6. '=' → logprob: -14.50952434539795
    7. 'DEFAULT' → logprob: -15.25952434539795
    8. '{' → logprob: -15.25952434539795
    9. '(default' → logprob: -15.25952434539795
    10. ' default' → logprob: -15.75952434539795

Token 804: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -3.7697225252486533e-06
    2. 'str' → logprob: -12.500003814697266
    3. '[' → logprob: -18.000003814697266
    4. '[int' → logprob: -19.250003814697266
    5. '=str' → logprob: -19.625003814697266
    6. '(str' → logprob: -20.000003814697266
    7. ':str' → logprob: -20.250003814697266
    8. '```' → logprob: -20.875003814697266
    9. '   ' → logprob: -21.250003814697266
    10. ' str' → logprob: -21.875003814697266

Token 805: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.685467764735222e-05
    2. ',List' → logprob: -10.125086784362793
    3. '=' → logprob: -11.000086784362793
    4. ' ,' → logprob: -11.375086784362793
    5. '[List' → logprob: -11.750086784362793
    6. ',set' → logprob: -12.000086784362793
    7. ']' → logprob: -13.375086784362793
    8. '[' → logprob: -13.750086784362793
    9. '   ' → logprob: -14.625086784362793
    10. ' =' → logprob: -14.750086784362793

Token 806: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.00024596223374828696
    2. 'set' → logprob: -8.500246047973633
    3. 'List' → logprob: -10.125246047973633
    4. ' Set' → logprob: -13.000246047973633
    5. '_set' → logprob: -16.875246047973633
    6. '	Set' → logprob: -17.000246047973633
    7. '_Set' → logprob: -18.375246047973633
    8. '   ' → logprob: -18.375246047973633
    9. 'SET' → logprob: -19.375246047973633
    10. 'list' → logprob: -19.500246047973633

Token 807: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -2.696889623621246e-06
    2. 'str' → logprob: -13.00000286102295
    3. ']' → logprob: -15.12500286102295
    4. '(str' → logprob: -16.750001907348633
    5. '[int' → logprob: -18.125001907348633
    6. '```' → logprob: -18.875001907348633
    7. '=str' → logprob: -19.125001907348633
    8. '[' → logprob: -19.500001907348633
    9. ',str' → logprob: -20.125001907348633
    10. ':str' → logprob: -20.250001907348633

Token 808: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.16058114171028137
    2. ']' → logprob: -1.910581111907959
    3. ']=' → logprob: -8.285581588745117
    4. ']]=' → logprob: -9.410581588745117
    5. ')]' → logprob: -11.410581588745117
    6. '']]' → logprob: -12.535581588745117
    7. ' ]]' → logprob: -13.285581588745117
    8. ']]]' → logprob: -13.535581588745117
    9. '>]' → logprob: -13.785581588745117
    10. ' ]' → logprob: -13.910581588745117

Token 809: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. ' ' → logprob: -16.16022491455078
    4. '＝' → logprob: -18.41022491455078
    5. ')' → logprob: -18.53522491455078
    6. '=[]' → logprob: -18.91022491455078
    7. ']' → logprob: -19.16022491455078
    8. '={}' → logprob: -19.53522491455078
    9. '        ' → logprob: -19.91022491455078
    10. '   ' → logprob: -20.16022491455078

Token 810: ' {' (ID: 354)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.004078878089785576
    2. '{' → logprob: -5.5040788650512695
    3. ' {' → logprob: -15.50407886505127
    4. ' defaultdict' → logprob: -15.50407886505127
    5. '"default' → logprob: -17.879079818725586
    6. '(default' → logprob: -18.004079818725586
    7. '.default' → logprob: -18.254079818725586
    8. ' default' → logprob: -19.129079818725586
    9. 'Default' → logprob: -20.504079818725586
    10. ''default' → logprob: -20.754079818725586

Token 811: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3004764914512634
    2. 'ch' → logprob: -1.5504765510559082
    3. 'char' → logprob: -3.050476551055908
    4. 'a' → logprob: -10.42547607421875
    5. 'letter' → logprob: -11.55047607421875
    6. 'chr' → logprob: -11.80047607421875
    7. 'k' → logprob: -13.30047607421875
    8. '   ' → logprob: -13.42547607421875
    9. ' c' → logprob: -14.30047607421875
    10. ' ch' → logprob: -14.42547607421875

Token 812: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011083307676017284
    2. ':set' → logprob: -4.511083126068115
    3. ' :' → logprob: -10.886083602905273
    4. ':c' → logprob: -12.011083602905273
    5. ':{' → logprob: -12.636083602905273
    6. ':{}' → logprob: -13.261083602905273
    7. ':[' → logprob: -13.511083602905273
    8. ':Set' → logprob: -13.636083602905273
    9. '=set' → logprob: -13.761083602905273
    10. ':list' → logprob: -14.261083602905273

Token 813: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00026181264547631145
    2. ' set' → logprob: -8.250262260437012
    3. '(set' → logprob: -15.750262260437012
    4. '{' → logprob: -16.000261306762695
    5. '=set' → logprob: -16.250261306762695
    6. '   ' → logprob: -16.625261306762695
    7. ' ' → logprob: -16.750261306762695
    8. '	set' → logprob: -17.000261306762695
    9. '       ' → logprob: -17.875261306762695
    10. ')set' → logprob: -18.125261306762695

Token 814: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.141186450899113e-05
    2. '()}' → logprob: -11.125020980834961
    3. '()
' → logprob: -12.375020980834961
    4. 'for' → logprob: -13.250020980834961
    5. '()]' → logprob: -15.625020980834961
    6. '(),' → logprob: -15.750020980834961
    7. '()=>' → logprob: -16.62502098083496
    8. ' ()' → logprob: -17.12502098083496
    9. '()

' → logprob: -17.12502098083496
    10. '[]' → logprob: -17.12502098083496

Token 815: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12694333493709564
    2. 'for' → logprob: -2.126943349838257
    3. '       ' → logprob: -12.001943588256836
    4. ' ' → logprob: -13.126943588256836
    5. '   ' → logprob: -13.376943588256836
    6. '        ' → logprob: -13.501943588256836
    7. '    ' → logprob: -13.876943588256836
    8. '           ' → logprob: -14.126943588256836
    9. '()' → logprob: -14.251943588256836
    10. '	for' → logprob: -14.251943588256836

Token 816: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005234121344983578
    2. ' c' → logprob: -5.255234241485596
    3. '	c' → logprob: -15.505233764648438
    4. '   ' → logprob: -17.755233764648438
    5. ' ' → logprob: -18.005233764648438
    6. ')c' → logprob: -18.005233764648438
    7. 'alphabet' → logprob: -18.630233764648438
    8. '_' → logprob: -19.130233764648438
    9. ' ' → logprob: -19.255233764648438
    10. 'cation' → logprob: -19.505233764648438

Token 817: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2821844518184662
    2. 'in' → logprob: -1.4071844816207886
    3. 'c' → logprob: -6.907184600830078
    4. ' c' → logprob: -10.907184600830078
    5. ' ' → logprob: -12.157184600830078
    6. 'n' → logprob: -13.282184600830078
    7. ')' → logprob: -13.407184600830078
    8. 's' → logprob: -13.407184600830078
    9. ',' → logprob: -14.407184600830078
    10. '}' → logprob: -14.407184600830078

Token 818: ' alphabet' (ID: 47840)
  Prédit: 'alphabet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alphabet' → logprob: -0.0009404043667018414
    2. 'self' → logprob: -7.500940322875977
    3. ' alphabet' → logprob: -7.875940322875977
    4. 'al' → logprob: -12.000940322875977
    5. ' self' → logprob: -14.125940322875977
    6. 'alph' → logprob: -15.625940322875977
    7. 'alpha' → logprob: -15.875940322875977
    8. '   ' → logprob: -16.125940322875977
    9. '(al' → logprob: -16.625940322875977
    10. '```' → logprob: -17.500940322875977

Token 819: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.012603833340108395
    2. '   ' → logprob: -4.637603759765625
    3. '       ' → logprob: -5.887603759765625
    4. ' }' → logprob: -9.637603759765625
    5. '}
' → logprob: -13.762603759765625
    6. ')' → logprob: -13.762603759765625
    7. '	' → logprob: -14.137603759765625
    8. '    ' → logprob: -14.262603759765625
    9. '           ' → logprob: -15.012603759765625
    10. ',' → logprob: -15.262603759765625

Token 820: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07529494166374207
    2. '    
' → logprob: -3.0752949714660645
    3. '
' → logprob: -4.0752949714660645
    4. 'def' → logprob: -4.9502949714660645
    5. '        
' → logprob: -6.9502949714660645
    6. '       ' → logprob: -7.5752949714660645
    7. '```' → logprob: -7.7002949714660645
    8. ' def' → logprob: -8.825294494628906
    9. '<|end|>' → logprob: -9.325294494628906
    10. '	def' → logprob: -10.575294494628906

Token 821: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3789956271648407
    2. 'def' → logprob: -1.378995656967163
    3. '   ' → logprob: -3.128995656967163
    4. '       ' → logprob: -4.003995418548584
    5. '
' → logprob: -6.753995418548584
    6. ' self' → logprob: -8.628995895385742
    7. '```' → logprob: -8.878995895385742
    8. '    
' → logprob: -9.753995895385742
    9. ' def' → logprob: -10.253995895385742
    10. '        
' → logprob: -11.003995895385742

Token 822: '.vis' (ID: 15800)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.006770672742277384
    2. 'parent' → logprob: -5.506770610809326
    3. '.parents' → logprob: -6.131770610809326
    4. '.vis' → logprob: -7.881770610809326
    5. 'parents' → logprob: -9.631771087646484
    6. 'visited' → logprob: -10.506771087646484
    7. '._' → logprob: -11.506771087646484
    8. '.par' → logprob: -11.631771087646484
    9. '.size' → logprob: -12.131771087646484
    10. '.rank' → logprob: -12.381771087646484

Token 823: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -1.8074162653647363e-05
    2. 'isted' → logprob: -11.500018119812012
    3. '_' → logprob: -12.750018119812012
    4. '=' → logprob: -13.875018119812012
    5. '[' → logprob: -14.000018119812012
    6. 'ITED' → logprob: -14.250018119812012
    7. '```' → logprob: -14.250018119812012
    8. '`' → logprob: -15.500018119812012
    9. '   ' → logprob: -15.500018119812012
    10. '
' → logprob: -15.500018119812012

Token 824: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5086061358451843
    2. ':' → logprob: -1.008606195449829
    3. ' =' → logprob: -3.383606195449829
    4. ' :' → logprob: -11.63360595703125
    5. '=set' → logprob: -12.50860595703125
    6. ' ' → logprob: -13.88360595703125
    7. '   ' → logprob: -14.13360595703125
    8. ':Set' → logprob: -15.50860595703125
    9. ':set' → logprob: -16.25860595703125
    10. '  ' → logprob: -16.25860595703125

Token 825: ' Set' (ID: 3957)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.004373036324977875
    2. 'Set' → logprob: -5.504373073577881
    3. 'Dict' → logprob: -8.879372596740723
    4. ' set' → logprob: -8.879372596740723
    5. '{}' → logprob: -12.004372596740723
    6. 'dict' → logprob: -12.379372596740723
    7. '{' → logprob: -12.379372596740723
    8. '=set' → logprob: -14.254372596740723
    9. '   ' → logprob: -14.754372596740723
    10. ' Set' → logprob: -15.504372596740723

Token 826: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.010478435084223747
    2. ' =' → logprob: -4.635478496551514
    3. '=' → logprob: -7.510478496551514
    4. '=str' → logprob: -9.510478019714355
    5. '=set' → logprob: -9.885478019714355
    6. ')' → logprob: -11.760478019714355
    7. '   ' → logprob: -12.010478019714355
    8. 'import' → logprob: -12.010478019714355
    9. '       ' → logprob: -12.260478019714355
    10. '(str' → logprob: -12.385478019714355

Token 827: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0431138351559639
    2. ' =' → logprob: -3.168113946914673
    3. ']' → logprob: -10.043113708496094
    4. ')' → logprob: -10.043113708496094
    5. '=set' → logprob: -11.418113708496094
    6. ' ' → logprob: -11.543113708496094
    7. ']=' → logprob: -12.543113708496094
    8. '}' → logprob: -13.543113708496094
    9. ')=' → logprob: -14.418113708496094
    10. '>' → logprob: -14.793113708496094

Token 828: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006750543136149645
    2. ' =' → logprob: -5.006750583648682
    3. '=set' → logprob: -10.256750106811523
    4. ' ' → logprob: -17.256750106811523
    5. '=
' → logprob: -18.381750106811523
    6. '<|end|>' → logprob: -18.881750106811523
    7. '=

' → logprob: -19.381750106811523
    8. ')' → logprob: -19.506750106811523
    9. '=create' → logprob: -19.506750106811523
    10. '=}' → logprob: -19.881750106811523

Token 829: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00862521305680275
    2. ' set' → logprob: -4.758625030517578
    3. '=set' → logprob: -11.508625030517578
    4. '(set' → logprob: -15.008625030517578
    5. '	set' → logprob: -15.258625030517578
    6. ')set' → logprob: -17.133625030517578
    7. '   ' → logprob: -18.258625030517578
    8. '{' → logprob: -18.258625030517578
    9. ' ' → logprob: -19.008625030517578
    10. '.set' → logprob: -19.508625030517578

Token 830: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.362912654876709
    2. '<|end|>' → logprob: -2.487912654876709
    3. '   ' → logprob: -2.612912654876709
    4. 'def' → logprob: -2.862912654876709
    5. '
' → logprob: -2.987912654876709
    6. '()
' → logprob: -4.362912654876709
    7. '(' → logprob: -4.737912654876709
    8. '       ' → logprob: -5.112912654876709
    9. '    
' → logprob: -5.862912654876709
    10. '(self' → logprob: -5.862912654876709

Token 831: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6737055778503418
    2. '
' → logprob: -0.7987055778503418
    3. '    
' → logprob: -3.298705577850342
    4. 'def' → logprob: -5.923705577850342
    5. '```' → logprob: -8.0487060546875
    6. '        
' → logprob: -8.5487060546875
    7. ' def' → logprob: -9.7987060546875
    8. '<|end|>' → logprob: -10.2987060546875
    9. '

' → logprob: -10.7987060546875
    10. '  
' → logprob: -11.2987060546875

Token 832: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3874779939651489
    2. 'def' → logprob: -1.137477993965149
    3. ' def' → logprob: -8.01247787475586
    4. '
' → logprob: -8.26247787475586
    5. '    
' → logprob: -11.01247787475586
    6. '        
' → logprob: -14.76247787475586
    7. '	def' → logprob: -15.13747787475586
    8. ' ' → logprob: -16.38747787475586
    9. '

' → logprob: -16.63747787475586
    10. '       ' → logprob: -16.63747787475586

Token 833: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.5776860184123507e-06
    2. ' def' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.37500286102295
    4. 'de' → logprob: -19.375001907348633
    5. '
' → logprob: -21.500001907348633
    6. '	def' → logprob: -21.750001907348633
    7. '    
' → logprob: -22.250001907348633
    8. '```' → logprob: -23.125001907348633
    9. ' ' → logprob: -24.250001907348633
    10. '  ' → logprob: -25.000001907348633

Token 834: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.00045605594641529024
    2. ' add' → logprob: -7.750455856323242
    3. '_add' → logprob: -10.875455856323242
    4. 'dfs' → logprob: -12.625455856323242
    5. 'has' → logprob: -13.625455856323242
    6. 'count' → logprob: -14.125455856323242
    7. '	add' → logprob: -15.250455856323242
    8. 'reset' → logprob: -15.375455856323242
    9. 'visited' → logprob: -15.875455856323242
    10. '.add' → logprob: -16.250455856323242

Token 835: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.14794395864009857
    2. '_b' → logprob: -2.1479439735412598
    3. '_' → logprob: -3.8979439735412598
    4. '_line' → logprob: -8.147943496704102
    5. '_a' → logprob: -10.022943496704102
    6. '_space' → logprob: -10.772943496704102
    7. '_node' → logprob: -10.897943496704102
    8. '_token' → logprob: -11.022943496704102
    9. ' _' → logprob: -11.147943496704102
    10. '_bid' → logprob: -11.397943496704102

Token 836: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06262293457984924
    2. '(self' → logprob: -2.8126230239868164
    3. ' (' → logprob: -7.687623023986816
    4. '(
' → logprob: -9.187623023986816
    5. '(a' → logprob: -9.562623023986816
    6. '(c' → logprob: -11.812623023986816
    7. '(s' → logprob: -11.812623023986816
    8. '('' → logprob: -13.187623023986816
    9. '(

' → logprob: -13.437623023986816
    10. ' ' → logprob: -13.437623023986816

Token 837: ',' (ID: 11)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.96153724193573
    2. '(' → logprob: -1.21153724193573
    3. '(self' → logprob: -1.33653724193573
    4. '(a' → logprob: -3.4615373611450195
    5. ')(' → logprob: -3.9615373611450195
    6. ')' → logprob: -5.7115373611450195
    7. '(s' → logprob: -6.5865373611450195
    8. '(c' → logprob: -6.5865373611450195
    9. ' ' → logprob: -9.21153736114502
    10. ' )(' → logprob: -9.46153736114502

Token 838: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6460497379302979
    2. ' u' → logprob: -0.7710497379302979
    3. 'a' → logprob: -4.646049499511719
    4. ' a' → logprob: -6.146049499511719
    5. 'c' → logprob: -7.271049499511719
    6. ' c' → logprob: -8.521049499511719
    7. 'self' → logprob: -8.646049499511719
    8. ' self' → logprob: -9.146049499511719
    9. 'cs' → logprob: -9.396049499511719
    10. 'src' → logprob: -9.521049499511719

Token 839: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003683924674987793
    2. ' ,' → logprob: -5.628684043884277
    3. ',u' → logprob: -9.753684043884277
    4. '   ' → logprob: -11.253684043884277
    5. ':' → logprob: -11.503684043884277
    6. 'u' → logprob: -14.628684043884277
    7. '‌,' → logprob: -15.003684043884277
    8. '  ' → logprob: -15.253684043884277
    9. ' ' → logprob: -15.253684043884277
    10. '    ' → logprob: -15.253684043884277

Token 840: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.26553839445114136
    2. ' str' → logprob: -1.7655384540557861
    3. 'u' → logprob: -3.015538454055786
    4. ' u' → logprob: -4.890538215637207
    5. ''' → logprob: -5.765538215637207
    6. ' ' → logprob: -7.015538215637207
    7. ')' → logprob: -7.015538215637207
    8. '"' → logprob: -9.015538215637207
    9. ''s' → logprob: -9.015538215637207
    10. ':str' → logprob: -9.140538215637207

Token 841: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043102685594931245
    2. ' ,' → logprob: -7.750431060791016
    3. ',u' → logprob: -15.750431060791016
    4. '   ' → logprob: -16.625431060791016
    5. '‌,' → logprob: -17.375431060791016
    6. ',v' → logprob: -18.000431060791016
    7. ',b' → logprob: -18.000431060791016
    8. ')' → logprob: -18.250431060791016
    9. ',c' → logprob: -18.750431060791016
    10. ':' → logprob: -18.750431060791016

Token 842: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.16022443771362305
    2. 'v' → logprob: -1.910224437713623
    3. '	v' → logprob: -15.785224914550781
    4. ')v' → logprob: -16.16022491455078
    5. ')' → logprob: -17.41022491455078
    6. '"' → logprob: -17.53522491455078
    7. ' ' → logprob: -18.16022491455078
    8. ''' → logprob: -18.16022491455078
    9. '[v' → logprob: -18.28522491455078
    10. ' '' → logprob: -18.41022491455078

Token 843: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07022129744291306
    2. ':' → logprob: -2.820221185684204
    3. '):' → logprob: -4.820221424102783
    4. '):
' → logprob: -9.320220947265625
    5. ',' → logprob: -9.820220947265625
    6. '   ' → logprob: -12.195220947265625
    7. ' )' → logprob: -13.070220947265625
    8. ')->' → logprob: -13.695220947265625
    9. '')' → logprob: -15.195220947265625
    10. '),' → logprob: -15.320220947265625

Token 844: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0005561320576816797
    2. ' str' → logprob: -7.500555992126465
    3. ')' → logprob: -12.750555992126465
    4. '[str' → logprob: -16.62555694580078
    5. ':str' → logprob: -17.62555694580078
    6. '	str' → logprob: -17.87555694580078
    7. '_str' → logprob: -18.37555694580078
    8. 'Str' → logprob: -18.62555694580078
    9. ' ' → logprob: -18.62555694580078
    10. 's' → logprob: -19.75055694580078

Token 845: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018195947632193565
    2. '):' → logprob: -4.018196105957031
    3. '):
' → logprob: -10.018196105957031
    4. ' )' → logprob: -14.768196105957031
    5. ')->' → logprob: -14.768196105957031
    6. '):
' → logprob: -15.393196105957031
    7. '   ' → logprob: -16.64319610595703
    8. ':' → logprob: -16.64319610595703
    9. ')`' → logprob: -16.76819610595703
    10. '):

' → logprob: -17.39319610595703

Token 846: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007030184497125447
    2. '):' → logprob: -8.000702857971191
    3. ':
' → logprob: -8.375702857971191
    4. ' :' → logprob: -9.875702857971191
    5. '   ' → logprob: -10.375702857971191
    6. '):
' → logprob: -11.125702857971191
    7. '{' → logprob: -11.875702857971191
    8. '       ' → logprob: -12.250702857971191
    9. '.' → logprob: -12.500702857971191
    10. ',' → logprob: -12.625702857971191

Token 847: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.22698499262332916
    2. ' None' → logprob: -1.601984977722168
    3. ' ' → logprob: -7.476984977722168
    4. '   ' → logprob: -7.726984977722168
    5. ':' → logprob: -7.976984977722168
    6. '1' → logprob: -9.976984977722168
    7. ')' → logprob: -10.351984977722168
    8. '_None' → logprob: -10.726984977722168
    9. '  ' → logprob: -10.976984977722168
    10. 'No' → logprob: -11.351984977722168

Token 848: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1254967749118805
    2. ':
' → logprob: -2.6254968643188477
    3. '       ' → logprob: -3.1254968643188477
    4. '):
' → logprob: -7.000496864318848
    5. '   ' → logprob: -7.875496864318848
    6. '):' → logprob: -8.375496864318848
    7. ',' → logprob: -10.875496864318848
    8. '<|end|>' → logprob: -10.875496864318848
    9. '```' → logprob: -11.000496864318848
    10. ')' → logprob: -11.625496864318848

Token 849: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0039830622263252735
    2. 'self' → logprob: -6.003983020782471
    3. ' self' → logprob: -7.503983020782471
    4. '   ' → logprob: -7.628983020782471
    5. '```' → logprob: -7.878983020782471
    6. '[self' → logprob: -10.753983497619629
    7. ' ' → logprob: -11.128983497619629
    8. '	self' → logprob: -11.753983497619629
    9. '           ' → logprob: -12.128983497619629
    10. '        
' → logprob: -12.128983497619629

Token 850: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5506605505943298
    2. '       ' → logprob: -1.0506606101989746
    3. ' self' → logprob: -2.6756606101989746
    4. '   ' → logprob: -5.925660610198975
    5. '```' → logprob: -6.425660610198975
    6. 'if' → logprob: -8.175660133361816
    7. '
' → logprob: -8.675660133361816
    8. ' if' → logprob: -10.550660133361816
    9. '[self' → logprob: -10.550660133361816
    10. '	self' → logprob: -10.675660133361816

Token 851: ' Directed' (ID: 126065)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.062261082231998444
    2. 'if' → logprob: -2.8122611045837402
    3. 'pass' → logprob: -8.437260627746582
    4. '#' → logprob: -10.312260627746582
    5. '   ' → logprob: -10.562260627746582
    6. ' self' → logprob: -11.937260627746582
    7. '       ' → logprob: -12.562260627746582
    8. 'return' → logprob: -12.687260627746582
    9. ' if' → logprob: -13.312260627746582
    10. '```' → logprob: -13.687260627746582

Token 852: ' edge' (ID: 11165)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.069714307785034
    2. ' self' → logprob: -2.069714307785034
    3. 'self' → logprob: -2.194714307785034
    4. 'u' → logprob: -2.194714307785034
    5. ' u' → logprob: -2.444714307785034
    6. ')' → logprob: -2.569714307785034
    7. ':' → logprob: -2.569714307785034
    8. ' ' → logprob: -2.944714307785034
    9. 'def' → logprob: -2.944714307785034
    10. ' )' → logprob: -3.444714307785034

Token 853: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4127817153930664
    2. '   ' → logprob: -1.5377817153930664
    3. '[u' → logprob: -3.5377817153930664
    4. '       ' → logprob: -3.7877817153930664
    5. '):' → logprob: -3.7877817153930664
    6. ')' → logprob: -4.662781715393066
    7. '(u' → logprob: -4.662781715393066
    8. 'self' → logprob: -5.287781715393066
    9. ':
' → logprob: -5.412781715393066
    10. '[' → logprob: -5.662781715393066

Token 854: ' frequency' (ID: 19813)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.01163539569824934
    2. ' u' → logprob: -4.7616353034973145
    3. 'self' → logprob: -6.2616353034973145
    4. 'v' → logprob: -7.7616353034973145
    5. 'replacement' → logprob: -8.136635780334473
    6. 'mapping' → logprob: -9.636635780334473
    7. '[u' → logprob: -9.761635780334473
    8. ' self' → logprob: -9.886635780334473
    9. ' adjacency' → logprob: -10.011635780334473
    10. 'adj' → logprob: -10.261635780334473

Token 855: '-m' (ID: 2126)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16847896575927734
    2. '   ' → logprob: -2.0434789657592773
    3. '       ' → logprob: -5.043478965759277
    4. ':' → logprob: -5.793478965759277
    5. ' ' → logprob: -5.793478965759277
    6. ' if' → logprob: -6.418478965759277
    7. '<|end|>' → logprob: -6.418478965759277
    8. ' )' → logprob: -6.543478965759277
    9. '(u' → logprob: -6.543478965759277
    10. 'u' → logprob: -7.043478965759277

Token 856: 'atching' (ID: 42443)
  Prédit: 'atching'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atching' → logprob: -0.5835424065589905
    2. 'apping' → logprob: -1.0835423469543457
    3. 'atch' → logprob: -2.3335423469543457
    4. 'ap' → logprob: -6.083542346954346
    5. 'atches' → logprob: -6.333542346954346
    6. 'at' → logprob: -6.958542346954346
    7. 'atched' → logprob: -7.083542346954346
    8. 'apped' → logprob: -8.458542823791504
    9. 'a' → logprob: -8.458542823791504
    10. 'ath' → logprob: -8.958542823791504

Token 857: ' abstraction' (ID: 129564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.520471453666687
    2. '       ' → logprob: -1.020471453666687
    3. ':' → logprob: -3.6454715728759766
    4. ')' → logprob: -5.145471572875977
    5. '):' → logprob: -5.395471572875977
    6. '<|end|>' → logprob: -6.020471572875977
    7. '
' → logprob: -6.770471572875977
    8. 'self' → logprob: -7.270471572875977
    9. '    ' → logprob: -7.395471572875977
    10. ' ' → logprob: -7.645471572875977

Token 858: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8469654321670532
    2. '       ' → logprob: -1.0969654321670532
    3. ':' → logprob: -2.0969653129577637
    4. '):' → logprob: -3.2219653129577637
    5. ')' → logprob: -3.4719653129577637
    6. 'self' → logprob: -4.471965312957764
    7. '
' → logprob: -4.596965312957764
    8. '):
' → logprob: -5.471965312957764
    9. '    
' → logprob: -6.221965312957764
    10. ':
' → logprob: -6.221965312957764

Token 859: 'not' (ID: 2878)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7051644325256348
    2. 'if' → logprob: -1.4551644325256348
    3. ')' → logprob: -2.4551644325256348
    4. ' if' → logprob: -2.7051644325256348
    5. ' self' → logprob: -2.8301644325256348
    6. ' pass' → logprob: -3.7051644325256348
    7. 'pass' → logprob: -3.7051644325256348
    8. 'return' → logprob: -5.330164432525635
    9. '   ' → logprob: -6.205164432525635
    10. ' )' → logprob: -6.455164432525635

Token 860: ' used' (ID: 2061)
  Prédit: 'necessarily'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'necessarily' → logprob: -1.1499348878860474
    2. 'used' → logprob: -1.5249348878860474
    3. 'self' → logprob: -1.7749348878860474
    4. 's' → logprob: -2.649934768676758
    5. 'bid' → logprob: -3.024934768676758
    6. 'sym' → logprob: -3.024934768676758
    7. 'implemented' → logprob: -4.274934768676758
    8. ')' → logprob: -4.274934768676758
    9. ' used' → logprob: -4.399934768676758
    10. 'adding' → logprob: -4.649934768676758

Token 861: ' directly' (ID: 8516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013248002156615257
    2. ' )' → logprob: -4.388247966766357
    3. ')
' → logprob: -7.763247966766357
    4. '   ' → logprob: -9.138248443603516
    5. ' )
' → logprob: -9.763248443603516
    6. '):' → logprob: -10.013248443603516
    7. ' ' → logprob: -10.888248443603516
    8. 'self' → logprob: -10.888248443603516
    9. '       ' → logprob: -11.013248443603516
    10. ' in' → logprob: -11.013248443603516

Token 862: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38100141286849976
    2. '):' → logprob: -1.2560014724731445
    3. '):
' → logprob: -3.7560014724731445
    4. '       ' → logprob: -5.3810014724731445
    5. '   ' → logprob: -6.1310014724731445
    6. ')
' → logprob: -6.5060014724731445
    7. 'self' → logprob: -9.381001472473145
    8. ' )' → logprob: -9.506001472473145
    9. ',' → logprob: -9.631001472473145
    10. ' ' → logprob: -10.756001472473145

Token 863: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4647212624549866
    2. '       ' → logprob: -1.0897212028503418
    3. ':' → logprob: -3.839721202850342
    4. '):' → logprob: -5.714721202850342
    5. ')' → logprob: -6.089721202850342
    6. '():' → logprob: -6.964721202850342
    7. '        
' → logprob: -7.214721202850342
    8. '    ' → logprob: -7.214721202850342
    9. '(' → logprob: -7.339721202850342
    10. '<|end|>' → logprob: -7.339721202850342

Token 864: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18161799013614655
    2. 'self' → logprob: -2.1816179752349854
    3. '   ' → logprob: -3.6816179752349854
    4. 'pass' → logprob: -4.1816182136535645
    5. ' pass' → logprob: -5.1816182136535645
    6. 'return' → logprob: -5.8066182136535645
    7. ' self' → logprob: -6.6816182136535645
    8. '<|end|>' → logprob: -6.8066182136535645
    9. ')' → logprob: -7.5566182136535645
    10. '    ' → logprob: -8.306617736816406

Token 865: ' u' (ID: 337)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.018268287181854248
    2. 'u' → logprob: -4.01826810836792
    3. ' v' → logprob: -9.143268585205078
    4. ' u' → logprob: -12.018268585205078
    5. 'not' → logprob: -13.268268585205078
    6. 'self' → logprob: -14.268268585205078
    7. '	v' → logprob: -14.268268585205078
    8. '   ' → logprob: -14.830768585205078
    9. ')v' → logprob: -15.205768585205078
    10. '(v' → logprob: -15.955768585205078

Token 866: ' !=' (ID: 1666)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.13344694674015045
    2. '!=' → logprob: -2.6334469318389893
    3. 'not' → logprob: -3.5084469318389893
    4. ' !=' → logprob: -3.8834469318389893
    5. ' in' → logprob: -6.258447170257568
    6. 'in' → logprob: -8.13344669342041
    7. '==' → logprob: -9.00844669342041
    8. ']!=' → logprob: -9.63344669342041
    9. ']' → logprob: -9.75844669342041
    10. ' ==' → logprob: -10.63344669342041

Token 867: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.8889261304575484e-06
    2. ' v' → logprob: -12.500003814697266
    3. '	v' → logprob: -16.750003814697266
    4. ' ' → logprob: -16.750003814697266
    5. 'u' → logprob: -16.875003814697266
    6. ')v' → logprob: -18.000003814697266
    7. '   ' → logprob: -18.250003814697266
    8. ''' → logprob: -19.625003814697266
    9. '_v' → logprob: -19.750003814697266
    10. 'None' → logprob: -19.750003814697266

Token 868: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.39154478907585144
    2. ':' → logprob: -1.2665448188781738
    3. ' and' → logprob: -3.266544818878174
    4. 'and' → logprob: -6.016544818878174
    5. '       ' → logprob: -7.391544818878174
    6. '           ' → logprob: -8.016544342041016
    7. '):
' → logprob: -8.141544342041016
    8. '   ' → logprob: -8.516544342041016
    9. '):' → logprob: -10.141544342041016
    10. ')' → logprob: -10.141544342041016

Token 869: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2419152855873108
    2. '           ' → logprob: -1.741915225982666
    3. ' self' → logprob: -4.116915225982666
    4. 'self' → logprob: -4.241915225982666
    5. '   ' → logprob: -4.741915225982666
    6. '```' → logprob: -10.116915702819824
    7. ':' → logprob: -10.241915702819824
    8. '	self' → logprob: -10.491915702819824
    9. '	       ' → logprob: -10.616915702819824
    10. ' ' → logprob: -10.866915702819824

Token 870: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004453855101019144
    2. ' self' → logprob: -6.004453659057617
    3. '           ' → logprob: -6.254453659057617
    4. '       ' → logprob: -10.254453659057617
    5. '   ' → logprob: -11.129453659057617
    6. '               ' → logprob: -12.504453659057617
    7. ' ' → logprob: -15.754453659057617
    8. '	self' → logprob: -15.879453659057617
    9. '```' → logprob: -16.254453659057617
    10. '[self' → logprob: -16.754453659057617

Token 871: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -1.6240566083070007e-06
    2. '.' → logprob: -14.125001907348633
    3. 'adj' → logprob: -14.250001907348633
    4. ' .' → logprob: -15.875001907348633
    5. '.al' → logprob: -17.375001907348633
    6. ').' → logprob: -17.750001907348633
    7. '.graph' → logprob: -17.875001907348633
    8. '   ' → logprob: -18.125001907348633
    9. '.add' → logprob: -18.500001907348633
    10. '.Ad' → logprob: -18.750001907348633

Token 872: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.014684110297821e-06
    2. 'd' → logprob: -11.625008583068848
    3. 'c' → logprob: -17.625009536743164
    4. '[' → logprob: -18.250009536743164
    5. 'jac' → logprob: -18.500009536743164
    6. '[j' → logprob: -19.125009536743164
    7. 'dj' → logprob: -19.375009536743164
    8. 'f' → logprob: -20.375009536743164
    9. '
' → logprob: -20.875009536743164
    10. 'm' → logprob: -21.000009536743164

Token 873: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.750000953674316
    3. '[v' → logprob: -15.000000953674316
    4. '[c' → logprob: -17.250001907348633
    5. 'u' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.500001907348633
    7. '```' → logprob: -18.875001907348633
    8. ' [' → logprob: -19.375001907348633
    9. '\[' → logprob: -20.000001907348633
    10. '       ' → logprob: -20.000001907348633

Token 874: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -2.165027217415627e-05
    2. '[u' → logprob: -11.875021934509277
    3. '.add' → logprob: -12.000021934509277
    4. ']' → logprob: -12.250021934509277
    5. ' ].' → logprob: -12.750021934509277
    6. '.' → logprob: -14.625021934509277
    7. '[' → logprob: -15.750021934509277
    8. '][' → logprob: -16.00002098083496
    9. '[v' → logprob: -17.25002098083496
    10. ').' → logprob: -18.12502098083496

Token 875: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: 0.0
    2. ' add' → logprob: -19.5
    3. '.add' → logprob: -19.875
    4. '	add' → logprob: -22.125
    5. '_add' → logprob: -23.125
    6. 'append' → logprob: -23.5
    7. 'Add' → logprob: -24.375
    8. 'update' → logprob: -24.625
    9. ')add' → logprob: -25.0
    10. 'adde' → logprob: -25.125

Token 876: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -6.2729995988775045e-06
    2. 'v' → logprob: -12.375006675720215
    3. '(' → logprob: -13.125006675720215
    4. ' v' → logprob: -18.8750057220459
    5. '	v' → logprob: -19.2500057220459
    6. '(
' → logprob: -19.5000057220459
    7. ' (' → logprob: -20.3750057220459
    8. ')v' → logprob: -20.5000057220459
    9. '(V' → logprob: -21.0000057220459
    10. '(u' → logprob: -21.2500057220459

Token 877: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.253713218029588e-05
    2. ')
' → logprob: -10.500062942504883
    3. '<|end|>' → logprob: -10.625062942504883
    4. '       ' → logprob: -12.250062942504883
    5. ' )' → logprob: -12.500062942504883
    6. ')return' → logprob: -14.375062942504883
    7. '           ' → logprob: -14.375062942504883
    8. '   ' → logprob: -15.625062942504883
    9. ')#' → logprob: -15.625062942504883
    10. '')' → logprob: -15.875062942504883

Token 878: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 879: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0209373235702515
    2. '   ' → logprob: -1.1459373235702515
    3. '    
' → logprob: -1.8959373235702515
    4. '
' → logprob: -1.8959373235702515
    5. 'def' → logprob: -4.520937442779541
    6. '<|end|>' → logprob: -6.145937442779541
    7. ' def' → logprob: -6.395937442779541
    8. ' 
' → logprob: -7.020937442779541
    9. '  
' → logprob: -7.145937442779541
    10. '	def' → logprob: -7.145937442779541

Token 880: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6034557223320007
    2. '
' → logprob: -1.1034557819366455
    3. 'def' (adapté à ' def') → logprob: -2.3534557819366455
    4. '    
' → logprob: -4.103455543518066
    5. ' def' → logprob: -4.728455543518066
    6. '```' → logprob: -7.603455543518066
    7. '	def' → logprob: -8.978455543518066
    8. '        
' → logprob: -9.228455543518066
    9. ' ' → logprob: -9.478455543518066
    10. ' 
' → logprob: -9.728455543518066

Token 881: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0007117166533134878
    2. ' add' → logprob: -7.250711917877197
    3. 'def' → logprob: -13.625711441040039
    4. '_add' → logprob: -15.125711441040039
    5. '.add' → logprob: -16.00071144104004
    6. 'Add' → logprob: -16.00071144104004
    7. '	add' → logprob: -17.12571144104004
    8. 'adde' → logprob: -17.75071144104004
    9. ')add' → logprob: -18.12571144104004
    10. 'remove' → logprob: -18.12571144104004

Token 882: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.0280383548888494e-06
    2. '_bid' → logprob: -14.750000953674316
    3. '"_' → logprob: -16.000001907348633
    4. ')_' → logprob: -16.125001907348633
    5. '_' → logprob: -16.500001907348633
    6. '_a' → logprob: -16.875001907348633
    7. ' _' → logprob: -17.250001907348633
    8. ''_' → logprob: -17.375001907348633
    9. '##_' → logprob: -17.375001907348633
    10. 'b' → logprob: -17.625001907348633

Token 883: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001411900855600834
    2. '_i' → logprob: -6.6264119148254395
    3. '_' → logprob: -10.001411437988281
    4. '_edge' → logprob: -10.251411437988281
    5. '_b' → logprob: -13.251411437988281
    6. 'id' → logprob: -13.376411437988281
    7. '_id' → logprob: -15.001411437988281
    8. 'и' → logprob: -15.251411437988281
    9. '­i' → logprob: -15.251411437988281
    10. '_bid' → logprob: -15.376411437988281

Token 884: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -9.388769103679806e-05
    2. 'dge' → logprob: -9.875093460083008
    3. 'd' → logprob: -11.250093460083008
    4. 'r' → logprob: -11.875093460083008
    5. '_line' → logprob: -12.125093460083008
    6. '_' → logprob: -12.125093460083008
    7. 'f' → logprob: -13.250093460083008
    8. '-edge' → logprob: -13.625093460083008
    9. 'edge' → logprob: -13.875093460083008
    10. 'def' → logprob: -13.875093460083008

Token 885: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.750003814697266
    3. ' (' → logprob: -15.375003814697266
    4. '(
' → logprob: -16.125003814697266
    5. '(s' → logprob: -16.250003814697266
    6. 'self' → logprob: -17.125003814697266
    7. '   ' → logprob: -18.000003814697266
    8. '(sel' → logprob: -18.125003814697266
    9. ' self' → logprob: -19.375003814697266
    10. '	self' → logprob: -19.750003814697266

Token 886: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0035165678709745407
    2. '(' → logprob: -5.878516674041748
    3. ')(' → logprob: -8.00351619720459
    4. ')' → logprob: -8.75351619720459
    5. ' (' → logprob: -9.00351619720459
    6. '(u' → logprob: -9.50351619720459
    7. '(s' → logprob: -11.50351619720459
    8. ',' → logprob: -12.12851619720459
    9. 'self' → logprob: -13.12851619720459
    10. ' ' → logprob: -13.62851619720459

Token 887: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.46576470136642456
    2. ' u' → logprob: -1.2157647609710693
    3. 'self' → logprob: -2.9657647609710693
    4. ' self' → logprob: -3.7157647609710693
    5. '   ' → logprob: -13.465764999389648
    6. 's' → logprob: -13.715764999389648
    7. '	u' → logprob: -14.340764999389648
    8. ' s' → logprob: -14.840764999389648
    9. '(self' → logprob: -16.59076499938965
    10. ' ' → logprob: -16.59076499938965

Token 888: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004256000276654959
    2. ':' → logprob: -5.504255771636963
    3. ' ,' → logprob: -8.754256248474121
    4. '   ' → logprob: -11.379256248474121
    5. ' :' → logprob: -12.504256248474121
    6. ':str' → logprob: -12.504256248474121
    7. ',u' → logprob: -15.379256248474121
    8. ' ' → logprob: -15.504256248474121
    9. 'u' → logprob: -16.254255294799805
    10. ',v' → logprob: -16.879255294799805

Token 889: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.16022808849811554
    2. 'str' → logprob: -1.9102281332015991
    3. 's' → logprob: -13.03522777557373
    4. 'self' → logprob: -14.78522777557373
    5. '(str' → logprob: -15.41022777557373
    6. 'v' → logprob: -15.53522777557373
    7. ':str' → logprob: -15.53522777557373
    8. '=str' → logprob: -15.78522777557373
    9. ',' → logprob: -15.91022777557373
    10. '   ' → logprob: -16.160228729248047

Token 890: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9623810658231378e-05
    2. ' ,' → logprob: -10.875020027160645
    3. '   ' → logprob: -15.250020027160645
    4. ',v' → logprob: -15.750020027160645
    5. ',str' → logprob: -16.500019073486328
    6. ',u' → logprob: -16.625019073486328
    7. 'u' → logprob: -17.125019073486328
    8. ' ' → logprob: -17.250019073486328
    9. 's' → logprob: -17.250019073486328
    10. 'v' → logprob: -17.500019073486328

Token 891: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.048587486147880554
    2. ' v' → logprob: -3.0485875606536865
    3. '   ' → logprob: -16.673587799072266
    4. '	v' → logprob: -17.173587799072266
    5. '    ' → logprob: -18.923587799072266
    6. ')v' → logprob: -18.923587799072266
    7. ' ' → logprob: -19.048587799072266
    8. 'u' → logprob: -19.298587799072266
    9. ' ' → logprob: -19.423587799072266
    10. ')' → logprob: -19.923587799072266

Token 892: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5766373872756958
    2. ',' → logprob: -0.8266373872756958
    3. ')' → logprob: -8.076637268066406
    4. ':str' → logprob: -8.826637268066406
    5. ' ,' → logprob: -9.076637268066406
    6. '   ' → logprob: -9.326637268066406
    7. ' :' → logprob: -10.451637268066406
    8. '):' → logprob: -12.576637268066406
    9. ' ' → logprob: -13.076637268066406
    10. '       ' → logprob: -14.826637268066406

Token 893: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.07920239120721817
    2. ' str' → logprob: -2.57920241355896
    3. ')' → logprob: -8.329202651977539
    4. 'v' → logprob: -9.954202651977539
    5. ' v' → logprob: -11.454202651977539
    6. ' ' → logprob: -12.454202651977539
    7. 'u' → logprob: -12.579202651977539
    8. ' u' → logprob: -13.204202651977539
    9. ':str' → logprob: -14.079202651977539
    10. '[str' → logprob: -14.204202651977539

Token 894: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. '):' → logprob: -12.750004768371582
    3. ' )' → logprob: -13.750004768371582
    4. '   ' → logprob: -14.375004768371582
    5. '):
' → logprob: -14.500004768371582
    6. ' ' → logprob: -17.8750057220459
    7. ',' → logprob: -18.3750057220459
    8. '`)' → logprob: -18.7500057220459
    9. ':' → logprob: -18.8750057220459
    10. ')`' → logprob: -19.5000057220459

Token 895: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4700040817260742
    2. ')' → logprob: -1.0950040817260742
    3. '(self' → logprob: -4.470004081726074
    4. ':
' → logprob: -4.595004081726074
    5. '   ' → logprob: -4.720004081726074
    6. '       ' → logprob: -5.845004081726074
    7. '->' → logprob: -5.845004081726074
    8. ' ->' → logprob: -5.845004081726074
    9. '(' → logprob: -8.095004081726074
    10. '):
' → logprob: -8.470004081726074

Token 896: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.029782310128211975
    2. ' None' → logprob: -3.529782295227051
    3. ' ' → logprob: -10.90478229522705
    4. 'set' → logprob: -11.52978229522705
    5. '(None' → logprob: -13.02978229522705
    6. '   ' → logprob: -14.65478229522705
    7. ' set' → logprob: -14.77978229522705
    8. '[' → logprob: -15.90478229522705
    9. '  ' → logprob: -16.029783248901367
    10. 'No' → logprob: -16.279783248901367

Token 897: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8669208288192749
    2. ':
' → logprob: -1.241920828819275
    3. '       ' → logprob: -1.241920828819275
    4. '   ' → logprob: -6.7419209480285645
    5. '):
' → logprob: -7.9919209480285645
    6. '<|end|>' → logprob: -8.116920471191406
    7. '():
' → logprob: -9.241920471191406
    8. '):' → logprob: -10.241920471191406
    9. '```' → logprob: -10.741920471191406
    10. ',' → logprob: -11.366920471191406

Token 898: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.246537173457909e-06
    2. '```' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.000003814697266
    4. ',' → logprob: -16.500003814697266
    5. '           ' → logprob: -16.625003814697266
    6. 'self' → logprob: -16.875003814697266
    7. ' self' → logprob: -17.250003814697266
    8. '
' → logprob: -17.250003814697266
    9. '#' → logprob: -17.500003814697266
    10. '{
' → logprob: -17.625003814697266

Token 899: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010818595997989178
    2. 'self' → logprob: -4.7608184814453125
    3. ' self' → logprob: -6.6358184814453125
    4. ' if' → logprob: -7.7608184814453125
    5. 'if' (adapté à ' if') → logprob: -7.8858184814453125
    6. '```' → logprob: -10.010818481445312
    7. '
' → logprob: -10.760818481445312
    8. '   ' → logprob: -11.135818481445312
    9. '	self' → logprob: -13.385818481445312
    10. ' ' → logprob: -13.635818481445312

Token 900: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.02324652671813965
    2. ' u' → logprob: -3.7732465267181396
    3. '   ' → logprob: -14.523246765136719
    4. '	u' → logprob: -15.023246765136719
    5. ' ' → logprob: -16.77324676513672
    6. '(u' → logprob: -16.89824676513672
    7. '_u' → logprob: -17.77324676513672
    8. ' ' → logprob: -18.02324676513672
    9. ''u' → logprob: -18.39824676513672
    10. '[u' → logprob: -18.52324676513672

Token 901: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.02056875079870224
    2. '!=' → logprob: -3.89556884765625
    3. ' not' → logprob: -11.02056884765625
    4. '   ' → logprob: -12.64556884765625
    5. ' ' → logprob: -12.89556884765625
    6. ' !' → logprob: -13.64556884765625
    7. ')!=' → logprob: -13.64556884765625
    8. '()!=' → logprob: -14.77056884765625
    9. '!='' → logprob: -14.77056884765625
    10. ' in' → logprob: -15.27056884765625

Token 902: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002475777640938759
    2. ' v' → logprob: -6.002475738525391
    3. 'u' → logprob: -16.12747573852539
    4. '	v' → logprob: -17.75247573852539
    5. ' ' → logprob: -19.62747573852539
    6. '_v' → logprob: -20.12747573852539
    7. '   ' → logprob: -20.50247573852539
    8. '-v' → logprob: -20.62747573852539
    9. ''' → logprob: -21.12747573852539
    10. '=v' → logprob: -21.25247573852539

Token 903: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.026793675497174263
    2. ':' → logprob: -3.6517937183380127
    3. '):
' → logprob: -8.026793479919434
    4. '       ' → logprob: -8.901793479919434
    5. ' :
' → logprob: -11.276793479919434
    6. '           ' → logprob: -11.901793479919434
    7. ' and' → logprob: -12.651793479919434
    8. '):' → logprob: -13.026793479919434
    9. ':
' → logprob: -13.276793479919434
    10. ':

' → logprob: -13.776793479919434

Token 904: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026367725804448128
    2. 'self' → logprob: -6.002636909484863
    3. ' self' → logprob: -8.877636909484863
    4. '           ' → logprob: -11.252636909484863
    5. '   ' → logprob: -12.377636909484863
    6. '```' → logprob: -12.502636909484863
    7. '	self' → logprob: -15.377636909484863
    8. '[self' → logprob: -16.127635955810547
    9. '      ' → logprob: -17.002635955810547
    10. '#' → logprob: -17.127635955810547

Token 905: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00020687808864749968
    2. ' self' → logprob: -8.50020694732666
    3. '       ' → logprob: -13.37520694732666
    4. '           ' → logprob: -13.37520694732666
    5. '               ' → logprob: -16.000205993652344
    6. '   ' → logprob: -16.125205993652344
    7. '
' → logprob: -17.250205993652344
    8. '	self' → logprob: -17.625205993652344
    9. '```' → logprob: -18.625205993652344
    10. '[self' → logprob: -19.375205993652344

Token 906: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -1.5332478142227046e-05
    2. 'adj' → logprob: -11.375015258789062
    3. ' .' → logprob: -13.000015258789062
    4. '   ' → logprob: -14.625015258789062
    5. '.' → logprob: -14.750015258789062
    6. 'self' → logprob: -15.500015258789062
    7. 'ad' → logprob: -16.000015258789062
    8. '
' → logprob: -17.000015258789062
    9. '.al' → logprob: -17.125015258789062
    10. '#ad' → logprob: -17.500015258789062

Token 907: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001334559783572331
    2. 'd' → logprob: -9.125133514404297
    3. 'jac' → logprob: -11.750133514404297
    4. '[self' → logprob: -12.500133514404297
    5. '[' → logprob: -12.625133514404297
    6. '[j' → logprob: -12.750133514404297
    7. '_edge' → logprob: -13.500133514404297
    8. 'c' → logprob: -14.125133514404297
    9. '(self' → logprob: -14.500133514404297
    10. '[u' → logprob: -14.750133514404297

Token 908: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.125000953674316
    3. 'u' → logprob: -15.875000953674316
    4. '           ' → logprob: -16.000001907348633
    5. '       ' → logprob: -17.375001907348633
    6. '[self' → logprob: -17.625001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '[v' → logprob: -18.375001907348633
    9. '```' → logprob: -18.500001907348633
    10. '(u' → logprob: -19.000001907348633

Token 909: '].' (ID: 1651)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -6.253713218029588e-05
    2. '][' → logprob: -10.000062942504883
    3. '].' → logprob: -11.750062942504883
    4. 'u' → logprob: -12.000062942504883
    5. '[' → logprob: -13.375062942504883
    6. '[v' → logprob: -13.625062942504883
    7. ']' → logprob: -16.250062942504883
    8. '[c' → logprob: -16.500062942504883
    9. '   ' → logprob: -16.625062942504883
    10. '.setdefault' → logprob: -17.625062942504883

Token 910: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.001511408481746912
    2. '[u' → logprob: -6.751511573791504
    3. 'u' → logprob: -8.251511573791504
    4. 'v' → logprob: -9.876511573791504
    5. '[v' → logprob: -10.501511573791504
    6. '[' → logprob: -14.876511573791504
    7. '.add' → logprob: -15.126511573791504
    8. 'Add' → logprob: -15.876511573791504
    9. '_add' → logprob: -16.001510620117188
    10. 'set' → logprob: -16.126510620117188

Token 911: '(v' (ID: 6932)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0013499957276508212
    2. ' v' → logprob: -6.751349925994873
    3. '(v' → logprob: -8.626350402832031
    4. ')v' → logprob: -15.376350402832031
    5. '	v' → logprob: -16.25135040283203
    6. '[v' → logprob: -16.37635040283203
    7. '   ' → logprob: -17.00135040283203
    8. ',v' → logprob: -17.87635040283203
    9. '(' → logprob: -18.12635040283203
    10. ' (' → logprob: -19.00135040283203

Token 912: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5861824154853821
    2. '           ' → logprob: -1.3361823558807373
    3. ')
' → logprob: -1.7111823558807373
    4. '       ' → logprob: -10.711182594299316
    5. 'self' → logprob: -11.961182594299316
    6. '),' → logprob: -11.961182594299316
    7. ')
' → logprob: -12.086182594299316
    8. ');' → logprob: -13.086182594299316
    9. ');
' → logprob: -13.586182594299316
    10. '               ' → logprob: -13.836182594299316

Token 913: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16057483851909637
    2. '       ' → logprob: -1.9105747938156128
    3. '```' → logprob: -8.785574913024902
    4. 'self' → logprob: -8.910574913024902
    5. '   ' → logprob: -9.910574913024902
    6. '               ' → logprob: -12.160574913024902
    7. ' and' → logprob: -13.160574913024902
    8. ' self' → logprob: -13.160574913024902
    9. 'and' → logprob: -13.910574913024902
    10. ',' → logprob: -14.035574913024902

Token 914: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00021486106561496854
    2. ' self' → logprob: -8.500214576721191
    3. '           ' → logprob: -11.875214576721191
    4. '       ' → logprob: -12.375214576721191
    5. '	self' → logprob: -16.625215530395508
    6. '   ' → logprob: -16.875215530395508
    7. '[self' → logprob: -17.625215530395508
    8. '               ' → logprob: -18.250215530395508
    9. ' ' → logprob: -19.250215530395508
    10. '(self' → logprob: -19.750215530395508

Token 915: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -5.860340752406046e-05
    2. 'adj' → logprob: -9.7500581741333
    3. '.' → logprob: -16.625059127807617
    4. ' .' → logprob: -17.000059127807617
    5. ' adj' → logprob: -17.000059127807617
    6. 'ad' → logprob: -17.250059127807617
    7. '_adj' → logprob: -18.125059127807617
    8. 'Adj' → logprob: -18.250059127807617
    9. '#ad' → logprob: -18.375059127807617
    10. '
' → logprob: -18.375059127807617

Token 916: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.4974866644479334e-05
    2. 'd' → logprob: -11.500015258789062
    3. '[u' → logprob: -12.875015258789062
    4. 'jac' → logprob: -13.750015258789062
    5. '[j' → logprob: -14.500015258789062
    6. 'c' → logprob: -15.625015258789062
    7. 'js' → logprob: -16.125015258789062
    8. '[self' → logprob: -16.500015258789062
    9. 'dj' → logprob: -16.500015258789062
    10. '[v' → logprob: -16.625015258789062

Token 917: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00020973898062948138
    2. '[u' → logprob: -8.50020980834961
    3. '[' → logprob: -12.75020980834961
    4. 'v' → logprob: -12.75020980834961
    5. '```' → logprob: -16.25020980834961
    6. '(v' → logprob: -17.12520980834961
    7. '=v' → logprob: -17.12520980834961
    8. '[val' → logprob: -17.25020980834961
    9. '	v' → logprob: -17.50020980834961
    10. '[V' → logprob: -17.50020980834961

Token 918: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.18110160529613495
    2. '.add' → logprob: -1.9311015605926514
    3. '[u' → logprob: -4.0561017990112305
    4. '.' → logprob: -5.8061017990112305
    5. ' .' → logprob: -8.93110179901123
    6. '[c' → logprob: -9.30610179901123
    7. '[' → logprob: -10.93110179901123
    8. '.ad' → logprob: -11.05610179901123
    9. '}.' → logprob: -11.18110179901123
    10. ').' → logprob: -11.30610179901123

Token 919: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: 0.0
    2. ' add' → logprob: -18.0
    3. 'ad' → logprob: -19.375
    4. 'adj' → logprob: -19.875
    5. '.add' → logprob: -20.0
    6. 'append' → logprob: -21.25
    7. '_add' → logprob: -21.625
    8. 'addi' → logprob: -21.625
    9. 'adde' → logprob: -22.125
    10. '(add' → logprob: -22.25

Token 920: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -2.451116051815916e-05
    2. 'u' → logprob: -10.625024795532227
    3. '(' → logprob: -16.125024795532227
    4. '[u' → logprob: -18.750024795532227
    5. '(
' → logprob: -19.875024795532227
    6. '	u' → logprob: -20.250024795532227
    7. ' (' → logprob: -21.500024795532227
    8. '   ' → logprob: -21.625024795532227
    9. '(v' → logprob: -21.875024795532227
    10. ' u' → logprob: -21.875024795532227

Token 921: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.3458322731312364e-06
    2. ')
' → logprob: -12.500007629394531
    3. '<|end|>' → logprob: -13.250007629394531
    4. '       ' → logprob: -13.500007629394531
    5. ' )' → logprob: -15.875007629394531
    6. '}' → logprob: -15.875007629394531
    7. ')return' → logprob: -16.37500762939453
    8. '   ' → logprob: -16.87500762939453
    9. '```' → logprob: -18.25000762939453
    10. ')}' → logprob: -18.50000762939453

Token 922: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6997334361076355
    2. '   ' → logprob: -0.8247334361076355
    3. '```' → logprob: -2.9497334957122803
    4. '    
' → logprob: -5.449733257293701
    5. 'def' → logprob: -5.574733257293701
    6. ' def' → logprob: -5.949733257293701
    7. '\n' → logprob: -7.449733257293701
    8. '``' → logprob: -8.19973373413086
    9. '\' → logprob: -8.57473373413086
    10. '[' → logprob: -8.82473373413086

Token 923: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09072461724281311
    2. 'def' → logprob: -2.4657247066497803
    3. '```' → logprob: -6.465724468231201
    4. ' def' → logprob: -8.71572494506836
    5. '
' → logprob: -10.09072494506836
    6. '    
' → logprob: -11.59072494506836
    7. '	def' → logprob: -11.96572494506836
    8. ' ' → logprob: -13.34072494506836
    9. '  ' → logprob: -13.46572494506836
    10. '`' → logprob: -14.34072494506836

Token 924: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.166338137816638e-05
    2. ' def' → logprob: -10.750031471252441
    3. '   ' → logprob: -11.500031471252441
    4. '	def' → logprob: -17.500032424926758
    5. '
' → logprob: -18.375032424926758
    6. '```' → logprob: -19.250032424926758
    7. '    
' → logprob: -20.250032424926758
    8. '  ' → logprob: -21.250032424926758
    9. 'Def' → logprob: -21.875032424926758
    10. '       ' → logprob: -22.750032424926758

Token 925: ' _' (ID: 1175)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.24174943566322327
    2. 'def' → logprob: -2.2417495250701904
    3. 'dfs' → logprob: -2.4917495250701904
    4. '_count' → logprob: -3.7417495250701904
    5. ' dfs' → logprob: -6.741749286651611
    6. '_def' → logprob: -7.741749286651611
    7. ' count' → logprob: -8.36674976348877
    8. '_d' → logprob: -9.36674976348877
    9. ' def' → logprob: -9.74174976348877
    10. '_depth' → logprob: -13.24174976348877

Token 926: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0005594660760834813
    2. 'def' → logprob: -7.500559329986572
    3. ' dfs' → logprob: -12.12555980682373
    4. '_def' → logprob: -15.00055980682373
    5. '_d' → logprob: -15.50055980682373
    6. '_depth' → logprob: -15.87555980682373
    7. 'df' → logprob: -16.250558853149414
    8. 'depth' → logprob: -16.500558853149414
    9. 'visited' → logprob: -16.750558853149414
    10. '_visit' → logprob: -17.250558853149414

Token 927: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0032093229237943888
    2. '(' → logprob: -5.753209114074707
    3. ' (' → logprob: -10.878209114074707
    4. 'self' → logprob: -12.003209114074707
    5. '(node' → logprob: -13.128209114074707
    6. '(s' → logprob: -13.378209114074707
    7. 'def' → logprob: -13.378209114074707
    8. '(u' → logprob: -14.503209114074707
    9. '   ' → logprob: -15.253209114074707
    10. '(
' → logprob: -15.503209114074707

Token 928: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010299502173438668
    2. '(node' → logprob: -8.001029968261719
    3. '(s' → logprob: -8.376029968261719
    4. '(' → logprob: -8.501029968261719
    5. '(u' → logprob: -8.751029968261719
    6. 'def' → logprob: -10.001029968261719
    7. 'self' → logprob: -10.251029968261719
    8. ' (' → logprob: -12.376029968261719
    9. '(v' → logprob: -13.001029968261719
    10. '_(' → logprob: -13.376029968261719

Token 929: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.30172765254974365
    2. ' node' → logprob: -2.051727771759033
    3. 'u' → logprob: -2.301727771759033
    4. 'self' → logprob: -3.551727771759033
    5. 'v' → logprob: -6.551727771759033
    6. ' u' → logprob: -7.176727771759033
    7. ' self' → logprob: -7.426727771759033
    8. 'start' → logprob: -8.301727294921875
    9. '   ' → logprob: -9.301727294921875
    10. ' v' → logprob: -10.676727294921875

Token 930: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4764934182167053
    2. '(self' → logprob: -0.9764934182167053
    3. 'self' → logprob: -6.2264933586120605
    4. ':' → logprob: -8.976493835449219
    5. '   ' → logprob: -9.101493835449219
    6. ' (' → logprob: -9.226493835449219
    7. ')' → logprob: -10.851493835449219
    8. ',self' → logprob: -11.101493835449219
    9. ' self' → logprob: -11.226493835449219
    10. ')(' → logprob: -11.226493835449219

Token 931: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -5.2762428822461516e-05
    2. 'self' → logprob: -10.000052452087402
    3. ' str' → logprob: -11.875052452087402
    4. '[str' → logprob: -15.250052452087402
    5. '```' → logprob: -18.00005340576172
    6. '	str' → logprob: -18.50005340576172
    7. '   ' → logprob: -18.62505340576172
    8. ')' → logprob: -18.75005340576172
    9. ':str' → logprob: -19.00005340576172
    10. 's' → logprob: -19.50005340576172

Token 932: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0053152237087488174
    2. ')' → logprob: -5.25531530380249
    3. '):' → logprob: -9.880314826965332
    4. '   ' → logprob: -11.255314826965332
    5. '):
' → logprob: -11.380314826965332
    6. '       ' → logprob: -12.630314826965332
    7. 'self' → logprob: -13.630314826965332
    8. ',node' → logprob: -14.380314826965332
    9. ' ,' → logprob: -14.880314826965332
    10. ':' → logprob: -15.630314826965332

Token 933: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11962304264307022
    2. '       ' → logprob: -2.3696229457855225
    3. ':
' → logprob: -4.869623184204102
    4. ',' → logprob: -5.619623184204102
    5. '(self' → logprob: -5.869623184204102
    6. '   ' → logprob: -6.244623184204102
    7. ')' → logprob: -6.994623184204102
    8. '->' → logprob: -7.369623184204102
    9. ' ->' → logprob: -7.494623184204102
    10. '):
' → logprob: -7.869623184204102

Token 934: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.000646433443762362
    2. 'Set' → logprob: -8.250646591186523
    3. ' None' → logprob: -8.500646591186523
    4. '   ' → logprob: -8.750646591186523
    5. 'void' → logprob: -11.125646591186523
    6. '(None' → logprob: -12.750646591186523
    7. '    
' → logprob: -13.375646591186523
    8. 'none' → logprob: -14.000646591186523
    9. '
' → logprob: -14.875646591186523
    10. '```' → logprob: -14.875646591186523

Token 935: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024165883660316467
    2. ':' → logprob: -3.8991658687591553
    3. ':
' → logprob: -5.649166107177734
    4. ',' → logprob: -9.774166107177734
    5. '):
' → logprob: -10.649166107177734
    6. '   ' → logprob: -12.149166107177734
    7. '<|end|>' → logprob: -12.774166107177734
    8. '        
' → logprob: -13.774166107177734
    9. '```' → logprob: -13.774166107177734
    10. ')' → logprob: -13.774166107177734

Token 936: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.198043699143454e-05
    2. '```' → logprob: -9.500091552734375
    3. '   ' → logprob: -11.500091552734375
    4. 'self' → logprob: -12.375091552734375
    5. ' self' → logprob: -14.125091552734375
    6. '           ' → logprob: -14.375091552734375
    7. '	' → logprob: -14.625091552734375
    8. '``' → logprob: -15.250091552734375
    9. '`' → logprob: -15.500091552734375
    10. '	   ' → logprob: -15.750091552734375

Token 937: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014409461291506886
    2. '```' → logprob: -7.37644100189209
    3. 'self' (adapté à ' self') → logprob: -7.87644100189209
    4. '   ' → logprob: -8.12644100189209
    5. ' for' → logprob: -10.12644100189209
    6. 'for' → logprob: -10.50144100189209
    7. 'stack' → logprob: -10.62644100189209
    8. ' self' → logprob: -10.62644100189209
    9. '
' → logprob: -11.12644100189209
    10. '``' → logprob: -12.87644100189209

Token 938: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -1.9862216504407115e-05
    2. 'visited' → logprob: -10.875020027160645
    3. '.' → logprob: -14.250020027160645
    4. '.visit' → logprob: -17.125019073486328
    5. '.stack' → logprob: -17.500019073486328
    6. '.ad' → logprob: -17.500019073486328
    7. 'vis' → logprob: -17.625019073486328
    8. '   ' → logprob: -17.750019073486328
    9. '```' → logprob: -17.750019073486328
    10. ' .' → logprob: -18.000019073486328

Token 939: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.00010485442908247933
    2. 'it' → logprob: -9.250104904174805
    3. 'isted' → logprob: -11.750104904174805
    4. '_' → logprob: -15.625104904174805
    5. '_it' → logprob: -15.750104904174805
    6. '
' → logprob: -16.125104904174805
    7. 'ITED' → logprob: -16.125104904174805
    8. 'itted' → logprob: -16.750104904174805
    9. 'ite' → logprob: -16.875104904174805
    10. 'its' → logprob: -16.875104904174805

Token 940: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0004920298233628273
    2. '.' → logprob: -7.625492095947266
    3. 'add' → logprob: -12.500492095947266
    4. ' .' → logprob: -15.375492095947266
    5. '   ' → logprob: -17.500492095947266
    6. '	add' → logprob: -17.875492095947266
    7. ')add' → logprob: -18.000492095947266
    8. ' add' → logprob: -18.125492095947266
    9. '.update' → logprob: -18.250492095947266
    10. '.append' → logprob: -19.000492095947266

Token 941: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. 'node' → logprob: -16.500003814697266
    4. '[node' → logprob: -19.500003814697266
    5. ' node' → logprob: -20.125003814697266
    6. '(token' → logprob: -20.375003814697266
    7. ' (' → logprob: -20.375003814697266
    8. '=node' → logprob: -20.375003814697266
    9. ',node' → logprob: -20.500003814697266
    10. '(
' → logprob: -20.875003814697266

Token 942: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001589618914294988
    2. ')' → logprob: -9.25015926361084
    3. ')
' → logprob: -9.87515926361084
    4. '
' → logprob: -12.00015926361084
    5. ',' → logprob: -13.37515926361084
    6. '   ' → logprob: -13.75015926361084
    7. 'for' → logprob: -13.75015926361084
    8. '           ' → logprob: -14.50015926361084
    9. '):
' → logprob: -14.75015926361084
    10. 'self' → logprob: -16.125158309936523

Token 943: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.76628842484206e-05
    2. ' for' → logprob: -10.625067710876465
    3. 'for' → logprob: -10.750067710876465
    4. '   ' → logprob: -11.500067710876465
    5. '
' → logprob: -12.000067710876465
    6. '```' → logprob: -12.125067710876465
    7. '           ' → logprob: -15.625067710876465
    8. ' ' → logprob: -17.87506675720215
    9. '	' → logprob: -18.12506675720215
    10. 'self' → logprob: -18.50006675720215

Token 944: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.7491250875755213e-05
    2. '       ' → logprob: -11.000027656555176
    3. ' for' → logprob: -11.500027656555176
    4. '```' → logprob: -14.500027656555176
    5. '   ' → logprob: -17.12502670288086
    6. '	for' → logprob: -17.87502670288086
    7. '
' → logprob: -18.25002670288086
    8. '           ' → logprob: -21.25002670288086
    9. '        
' → logprob: -21.37502670288086
    10. '``' → logprob: -22.37502670288086

Token 945: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.004836653359234333
    2. 'nei' → logprob: -5.754836559295654
    3. 'nbr' → logprob: -7.254836559295654
    4. ' neighbor' → logprob: -7.504836559295654
    5. 'ne' → logprob: -8.004837036132812
    6. ' nei' → logprob: -9.754837036132812
    7. ' neigh' → logprob: -12.754837036132812
    8. ' neighbour' → logprob: -12.754837036132812
    9. 'n' → logprob: -13.004837036132812
    10. 'adj' → logprob: -16.004837036132812

Token 946: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054916251450777054
    2. 'in' → logprob: -2.9299161434173584
    3. '	in' → logprob: -10.429916381835938
    4. ' ' → logprob: -13.804916381835938
    5. '_in' → logprob: -14.179916381835938
    6. '<|end|>' → logprob: -14.554916381835938
    7. '[in' → logprob: -15.054916381835938
    8. '<|end|>' → logprob: -15.429916381835938
    9. 's' → logprob: -15.554916381835938
    10. 'n' → logprob: -15.679916381835938

Token 947: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0325924449716695e-05
    2. ' self' → logprob: -11.50001049041748
    3. '[self' → logprob: -16.625009536743164
    4. '(self' → logprob: -18.000009536743164
    5. '   ' → logprob: -18.750009536743164
    6. '       ' → logprob: -19.250009536743164
    7. '	self' → logprob: -19.750009536743164
    8. '
' → logprob: -20.750009536743164
    9. '           ' → logprob: -21.000009536743164
    10. '=self' → logprob: -21.375009536743164

Token 948: '.ad' (ID: 19775)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.1809023767709732
    2. '.ad' → logprob: -2.1809024810791016
    3. 'self' → logprob: -3.4309024810791016
    4. '[node' → logprob: -3.9309024810791016
    5. 'adj' → logprob: -8.305902481079102
    6. '[' → logprob: -8.930902481079102
    7. ' self' → logprob: -9.055902481079102
    8. '.self' → logprob: -10.305902481079102
    9. '.' → logprob: -11.680902481079102
    10. '_adj' → logprob: -12.430902481079102

Token 949: 'j' (ID: 73)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.6277318000793457
    2. 'j' → logprob: -1.6277318000793457
    3. '[self' → logprob: -1.8777318000793457
    4. '[' → logprob: -2.2527318000793457
    5. 'self' → logprob: -5.502731800079346
    6. 'js' → logprob: -5.752731800079346
    7. '       ' → logprob: -6.877731800079346
    8. '[j' → logprob: -7.002731800079346
    9. '           ' → logprob: -7.377731800079346
    10. '[u' → logprob: -7.627731800079346

Token 950: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -5.512236498361744e-07
    2. 'node' → logprob: -15.000000953674316
    3. '[' → logprob: -15.750000953674316
    4. '(node' → logprob: -18.375
    5. '[n' → logprob: -19.25
    6. '[user' → logprob: -19.625
    7. '[
' → logprob: -20.0
    8. '```' → logprob: -20.375
    9. '[next' → logprob: -21.0
    10. ',node' → logprob: -21.375

Token 951: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3928415775299072
    2. ':
' → logprob: -1.1428415775299072
    3. '):
' → logprob: -5.517841339111328
    4. '):' → logprob: -7.017841339111328
    5. '           ' → logprob: -7.642841339111328
    6. '       ' → logprob: -7.767841339111328
    7. ')' → logprob: -10.267841339111328
    8. '   ' → logprob: -11.017841339111328
    9. ']:
' → logprob: -11.267841339111328
    10. '<|end|>' → logprob: -11.267841339111328

Token 952: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001137947037932463
    2. 'self' → logprob: -10.000113487243652
    3. '```' → logprob: -10.125113487243652
    4. '               ' → logprob: -11.000113487243652
    5. '       ' → logprob: -12.000113487243652
    6. '
' → logprob: -13.375113487243652
    7. '   ' → logprob: -13.375113487243652
    8. ' self' → logprob: -13.875113487243652
    9. '            
' → logprob: -15.250113487243652
    10. 'if' → logprob: -15.625113487243652

Token 953: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6865745186805725
    2. 'if' (adapté à ' if') → logprob: -0.9365745186805725
    3. '           ' → logprob: -2.3115744590759277
    4. '               ' → logprob: -5.186574459075928
    5. 'If' → logprob: -11.311574935913086
    6. '```' → logprob: -11.686574935913086
    7. '   ' → logprob: -11.936574935913086
    8. '	if' → logprob: -12.561574935913086
    9. '            ' → logprob: -13.686574935913086
    10. '
' → logprob: -13.811574935913086

Token 954: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -5.836499985889532e-05
    2. ' neighbor' → logprob: -9.7500581741333
    3. 'ne' → logprob: -17.750059127807617
    4. '           ' → logprob: -19.125059127807617
    5. '                   ' → logprob: -20.125059127807617
    6. 'neighbors' → logprob: -20.125059127807617
    7. '   ' → logprob: -20.875059127807617
    8. 'not' → logprob: -21.000059127807617
    9. '               ' → logprob: -21.000059127807617
    10. '
' → logprob: -21.125059127807617

Token 955: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00861468818038702
    2. 'not' → logprob: -4.758614540100098
    3. '	not' → logprob: -16.258615493774414
    4. '_not' → logprob: -17.633615493774414
    5. ':not' → logprob: -17.758615493774414
    6. 'Not' → logprob: -19.008615493774414
    7. '.not' → logprob: -19.508615493774414
    8. '   ' → logprob: -20.133615493774414
    9. '(not' → logprob: -20.383615493774414
    10. 'if' → logprob: -20.508615493774414

Token 956: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38705843687057495
    2. ' in' → logprob: -1.1370584964752197
    3. 'self' → logprob: -8.76205825805664
    4. '       ' → logprob: -11.13705825805664
    5. '           ' → logprob: -11.63705825805664
    6. '   ' → logprob: -12.76205825805664
    7. 'not' → logprob: -13.26205825805664
    8. '```' → logprob: -14.63705825805664
    9. ' self' → logprob: -14.88705825805664
    10. '  ' → logprob: -15.01205825805664

Token 957: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.5491004129871726e-05
    2. ' self' → logprob: -10.000045776367188
    3. '(self' → logprob: -19.500045776367188
    4. '	self' → logprob: -19.625045776367188
    5. '[self' → logprob: -20.125045776367188
    6. '       ' → logprob: -20.375045776367188
    7. '   ' → logprob: -20.875045776367188
    8. '{' → logprob: -21.250045776367188
    9. '=self' → logprob: -21.250045776367188
    10. '           ' → logprob: -21.375045776367188

Token 958: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.005281069315969944
    2. 'visited' → logprob: -5.2552809715271
    3. 'self' → logprob: -10.255281448364258
    4. '.' → logprob: -11.505281448364258
    5. 'vis' → logprob: -13.630281448364258
    6. '.self' → logprob: -15.505281448364258
    7. '.visible' → logprob: -15.880281448364258
    8. '       ' → logprob: -16.630281448364258
    9. '.visit' → logprob: -16.630281448364258
    10. ' visited' → logprob: -17.005281448364258

Token 959: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.0009660111390985548
    2. 'ted' → logprob: -7.0009660720825195
    3. '_' → logprob: -10.75096607208252
    4. 'isted' → logprob: -11.50096607208252
    5. '[' → logprob: -12.62596607208252
    6. '```' → logprob: -12.87596607208252
    7. '`' → logprob: -13.00096607208252
    8. '
' → logprob: -13.12596607208252
    9. '   ' → logprob: -13.12596607208252
    10. ')' → logprob: -13.37596607208252

Token 960: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3414734899997711
    2. ':
' → logprob: -1.5914734601974487
    3. ':' → logprob: -2.4664735794067383
    4. '):
' → logprob: -7.591473579406738
    5. '):' → logprob: -9.591473579406738
    6. ')' → logprob: -9.716473579406738
    7. '           ' → logprob: -9.716473579406738
    8. '                   ' → logprob: -11.091473579406738
    9. '       ' → logprob: -11.216473579406738
    10. '                       ' → logprob: -11.341473579406738

Token 961: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.360996485454962e-05
    2. 'self' → logprob: -10.0000638961792
    3. ' self' → logprob: -11.3750638961792
    4. '           ' → logprob: -12.2500638961792
    5. '                   ' → logprob: -13.7500638961792
    6. '```' → logprob: -14.7500638961792
    7. '   ' → logprob: -16.250062942504883
    8. '       ' → logprob: -16.375062942504883
    9. '              ' → logprob: -16.875062942504883
    10. '                       ' → logprob: -16.875062942504883

Token 962: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00032759839086793363
    2. ' self' → logprob: -8.500328063964844
    3. '               ' → logprob: -9.000328063964844
    4. '                   ' → logprob: -14.375328063964844
    5. '   ' → logprob: -17.625328063964844
    6. '	self' → logprob: -18.375328063964844
    7. '           ' → logprob: -18.500328063964844
    8. '(self' → logprob: -18.750328063964844
    9. '       ' → logprob: -19.750328063964844
    10. '                ' → logprob: -20.625328063964844

Token 963: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.001360593712888658
    2. '_d' → logprob: -6.6263604164123535
    3. '.' → logprob: -10.501360893249512
    4. '.d' → logprob: -13.501360893249512
    5. '_' → logprob: -13.626360893249512
    6. ' .' → logprob: -13.876360893249512
    7. '
' → logprob: -14.501360893249512
    8. '.\' → logprob: -14.501360893249512
    9. '   ' → logprob: -14.751360893249512
    10. '_graph' → logprob: -15.001360893249512

Token 964: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.9361264946837764e-07
    2. ' dfs' → logprob: -16.5
    3. 'df' → logprob: -19.5
    4. '_' → logprob: -22.0
    5. '_d' → logprob: -22.0
    6. 'dfa' → logprob: -22.0
    7. 'depth' → logprob: -22.125
    8. 'DFS' → logprob: -22.125
    9. '```' → logprob: -22.125
    10. 'def' → logprob: -22.25

Token 965: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -3.690834273584187e-05
    2. '(' → logprob: -10.25003719329834
    3. 'neighbor' → logprob: -13.62503719329834
    4. '(node' → logprob: -15.00003719329834
    5. ' (' → logprob: -17.750036239624023
    6. '(next' → logprob: -17.750036239624023
    7. '(
' → logprob: -18.500036239624023
    8. '(friend' → logprob: -18.500036239624023
    9. 'ne' → logprob: -18.750036239624023
    10. '(n' → logprob: -18.875036239624023

Token 966: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -0.00029637437546625733
    2. 'ight' → logprob: -8.625296592712402
    3. 'igh' → logprob: -9.125296592712402
    4. 'gh' → logprob: -12.750296592712402
    5. 'i' → logprob: -13.625296592712402
    6. 'neighbor' → logprob: -13.625296592712402
    7. '(' → logprob: -14.625296592712402
    8. 'e' → logprob: -14.750296592712402
    9. 'ighbors' → logprob: -15.000296592712402
    10. 'or' → logprob: -15.875296592712402

Token 967: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ')
' → logprob: -14.12500286102295
    3. ' )' → logprob: -14.50000286102295
    4. '()' → logprob: -15.25000286102295
    5. '       ' → logprob: -15.25000286102295
    6. '())' → logprob: -15.37500286102295
    7. '(' → logprob: -16.000001907348633
    8. '   ' → logprob: -16.125001907348633
    9. '<|end|>' → logprob: -16.125001907348633
    10. '(node' → logprob: -17.125001907348633

Token 968: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07336337864398956
    2. '
' → logprob: -2.9483633041381836
    3. '    
' → logprob: -4.323363304138184
    4. ' def' → logprob: -6.323363304138184
    5. 'def' → logprob: -6.323363304138184
    6. '```' → logprob: -7.448363304138184
    7. '<|end|>' → logprob: -7.948363304138184
    8. '        
' → logprob: -8.573363304138184
    9. ' 
' → logprob: -8.948363304138184
    10. '  
' → logprob: -9.323363304138184

Token 969: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40875622630119324
    2. 'def' → logprob: -1.1587562561035156
    3. '
' → logprob: -4.408756256103516
    4. ' def' → logprob: -5.033756256103516
    5. '    
' → logprob: -6.283756256103516
    6. '```' → logprob: -6.908756256103516
    7. '  
' → logprob: -10.158756256103516
    8. ' ' → logprob: -11.033756256103516
    9. '	def' → logprob: -11.408756256103516
    10. ' 
' → logprob: -11.908756256103516

Token 970: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.306760805164231e-05
    2. ' def' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.37501335144043
    4. '
' → logprob: -18.75001335144043
    5. '	def' → logprob: -20.87501335144043
    6. '    
' → logprob: -21.87501335144043
    7. 'Def' → logprob: -23.50001335144043
    8. '_def' → logprob: -23.87501335144043
    9. '```' → logprob: -24.75001335144043
    10. '.def' → logprob: -24.87501335144043

Token 971: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0206720617134124e-05
    2. ' count' → logprob: -11.50001049041748
    3. '   ' → logprob: -19.750009536743164
    4. 'reset' → logprob: -19.875009536743164
    5. 'clear' → logprob: -20.250009536743164
    6. '
' → logprob: -22.250009536743164
    7. ' ' → logprob: -22.250009536743164
    8. '	count' → logprob: -22.250009536743164
    9. '  ' → logprob: -22.750009536743164
    10. 'def' → logprob: -23.500009536743164

Token 972: '_connected' (ID: 112270)
  Prédit: '_connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connected' → logprob: -0.0009595814626663923
    2. '_' → logprob: -7.125959396362305
    3. '_connections' → logprob: -10.125959396362305
    4. '_remaining' → logprob: -10.875959396362305
    5. '_completed' → logprob: -11.500959396362305
    6. '_tokens' → logprob: -11.625959396362305
    7. '_visible' → logprob: -11.625959396362305
    8. '_CONNECTED' → logprob: -11.750959396362305
    9. '_complete' → logprob: -12.000959396362305
    10. '_components' → logprob: -12.000959396362305

Token 973: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -3.7697225252486533e-06
    2. '_connections' → logprob: -14.250003814697266
    3. '_nodes' → logprob: -14.375003814697266
    4. '_' → logprob: -14.500003814697266
    5. '_com' → logprob: -14.625003814697266
    6. 'components' → logprob: -14.750003814697266
    7. '_parts' → logprob: -14.875003814697266
    8. '_component' → logprob: -15.125003814697266
    9. '_clusters' → logprob: -16.000003814697266
    10. '_comp' → logprob: -16.250003814697266

Token 974: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00408053956925869
    2. '(' → logprob: -5.504080772399902
    3. ' (' → logprob: -14.004080772399902
    4. '(
' → logprob: -14.254080772399902
    5. '()' → logprob: -15.004080772399902
    6. '   ' → logprob: -15.754080772399902
    7. 'self' → logprob: -16.254079818725586
    8. '(Self' → logprob: -17.004079818725586
    9. ' ' → logprob: -17.254079818725586
    10. '       ' → logprob: -17.879079818725586

Token 975: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03443656489253044
    2. '(self' → logprob: -3.5344364643096924
    3. 'self' → logprob: -5.4094367027282715
    4. '   ' → logprob: -8.909436225891113
    5. ')(' → logprob: -10.909436225891113
    6. '       ' → logprob: -11.159436225891113
    7. ' ' → logprob: -12.034436225891113
    8. '(' → logprob: -12.159436225891113
    9. '()' → logprob: -12.159436225891113
    10. '):' → logprob: -12.409436225891113

Token 976: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0018161940388381481
    2. '(' → logprob: -7.376816272735596
    3. 'self' → logprob: -7.626816272735596
    4. '   ' → logprob: -7.626816272735596
    5. '       ' → logprob: -8.876815795898438
    6. '->' → logprob: -11.001815795898438
    7. ' ->' → logprob: -11.251815795898438
    8. ' self' → logprob: -11.501815795898438
    9. '(
' → logprob: -11.751815795898438
    10. '```' → logprob: -11.751815795898438

Token 977: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007121934904716909
    2. ' int' → logprob: -7.2507123947143555
    3. '(int' → logprob: -13.125712394714355
    4. '   ' → logprob: -15.875712394714355
    5. ' ' → logprob: -17.37571144104004
    6. '```' → logprob: -17.50071144104004
    7. '[int' → logprob: -17.50071144104004
    8. 'def' → logprob: -18.75071144104004
    9. ' (' → logprob: -19.12571144104004
    10. 'Int' → logprob: -19.50071144104004

Token 978: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.010544264689087868
    2. '(' → logprob: -4.885544300079346
    3. '(
' → logprob: -6.010544300079346
    4. '   ' → logprob: -8.510543823242188
    5. '       ' → logprob: -8.885543823242188
    6. 'self' → logprob: -9.260543823242188
    7. '```' → logprob: -11.635543823242188
    8. ' self' → logprob: -11.885543823242188
    9. '[self' → logprob: -12.260543823242188
    10. '[' → logprob: -12.260543823242188

Token 979: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041696816333569586
    2. '```' → logprob: -8.12541675567627
    3. '
' → logprob: -9.50041675567627
    4. '        
' → logprob: -10.37541675567627
    5. '   ' → logprob: -12.62541675567627
    6. '    
' → logprob: -13.00041675567627
    7. 'n' → logprob: -13.50041675567627
    8. '    ' → logprob: -14.12541675567627
    9. 'tokens' → logprob: -14.25041675567627
    10. '[' → logprob: -14.37541675567627

Token 980: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.009869883768260479
    2. '       ' → logprob: -4.7598700523376465
    3. 'components' → logprob: -7.3848700523376465
    4. 'cnt' → logprob: -8.259869575500488
    5. 'counter' → logprob: -8.759869575500488
    6. 'result' → logprob: -9.384869575500488
    7. ' count' → logprob: -9.634869575500488
    8. '```' → logprob: -10.759869575500488
    9. 'cc' → logprob: -11.509869575500488
    10. 'visited' → logprob: -12.134869575500488

Token 981: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132821023464203
    2. ' =' → logprob: -1.3132821321487427
    3. '       ' → logprob: -12.188282012939453
    4. '=self' → logprob: -12.438282012939453
    5. '        ' → logprob: -12.938282012939453
    6. '   ' → logprob: -13.063282012939453
    7. '(self' → logprob: -13.188282012939453
    8. ' +=' → logprob: -13.563282012939453
    9. '    ' → logprob: -13.688282012939453
    10. 'self' → logprob: -14.188282012939453

Token 982: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -21.250059127807617
    4. '       ' → logprob: -24.125059127807617
    5. '۰' → logprob: -24.250059127807617
    6. '```' → logprob: -25.625059127807617
    7. ' ' → logprob: -26.000059127807617
    8. '  ' → logprob: -26.500059127807617
    9. '000' → logprob: -26.875059127807617
    10. '2' → logprob: -27.000059127807617

Token 983: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. 'len' → logprob: -19.0
    4. 'sum' → logprob: -20.25
    5. '   ' → logprob: -21.875
    6. '=' → logprob: -22.0
    7. 'zero' → logprob: -22.125
    8. 'self' → logprob: -22.5
    9. '1' → logprob: -22.75
    10. '
' → logprob: -22.75

Token 984: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02151973731815815
    2. '       ' → logprob: -4.021519660949707
    3. '  
' → logprob: -6.396519660949707
    4. '
' → logprob: -7.521519660949707
    5. '        
' → logprob: -7.896519660949707
    6. ' 
' → logprob: -8.021519660949707
    7. '    
' → logprob: -9.146519660949707
    8. ' for' → logprob: -9.521519660949707
    9. '' → logprob: -9.896519660949707
    10. '   
' → logprob: -10.146519660949707

Token 985: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001831565605243668
    2. 'for' → logprob: -9.00018310546875
    3. ' for' → logprob: -10.00018310546875
    4. '
' → logprob: -12.00018310546875
    5. '```' → logprob: -12.25018310546875
    6. '        
' → logprob: -13.50018310546875
    7. '   ' → logprob: -14.12518310546875
    8. '	' → logprob: -14.37518310546875
    9. '           ' → logprob: -15.00018310546875
    10. 'self' → logprob: -16.00018310546875

Token 986: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015273597091436386
    2. 'self' (adapté à ' self') → logprob: -6.751527309417725
    3. ' for' → logprob: -8.001527786254883
    4. '       ' → logprob: -10.751527786254883
    5. ' self' → logprob: -14.876527786254883
    6. '
' → logprob: -15.501527786254883
    7. '```' → logprob: -15.876527786254883
    8. 'visited' → logprob: -16.251527786254883
    9. '        
' → logprob: -17.501527786254883
    10. '	for' → logprob: -17.501527786254883

Token 987: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -5.512236498361744e-07
    2. '.ad' → logprob: -15.125000953674316
    3. ' .' → logprob: -16.625
    4. '.visible' → logprob: -17.25
    5. 'visited' → logprob: -17.625
    6. '.' → logprob: -18.25
    7. '.visit' → logprob: -18.375
    8. '   ' → logprob: -19.625
    9. '.used' → logprob: -20.0
    10. '```' → logprob: -20.125

Token 988: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -9.968312951968983e-06
    2. 'isted' → logprob: -11.750009536743164
    3. 'ITED' → logprob: -14.375009536743164
    4. '_' → logprob: -14.875009536743164
    5. 'it' → logprob: -15.125009536743164
    6. '```' → logprob: -15.375009536743164
    7. 'ted' → logprob: -15.750009536743164
    8. '
' → logprob: -16.375009536743164
    9. 'eted' → logprob: -16.500009536743164
    10. 'ied' → logprob: -17.000009536743164

Token 989: '.clear' (ID: 13562)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011321783997118473
    2. '.clear' → logprob: -5.011322021484375
    3. ' =' → logprob: -5.386322021484375
    4. '=set' → logprob: -11.261322021484375
    5. 'clear' → logprob: -13.386322021484375
    6. '.' → logprob: -13.636322021484375
    7. '=
' → logprob: -14.261322021484375
    8. '.=' → logprob: -14.386322021484375
    9. ' =
' → logprob: -17.261322021484375
    10. '=

' → logprob: -17.761322021484375

Token 990: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21850726008415222
    2. '
' → logprob: -1.7185072898864746
    3. 'for' → logprob: -5.093507289886475
    4. '()
' → logprob: -5.218507289886475
    5. '()' → logprob: -6.343507289886475
    6. '<|end|>' → logprob: -6.593507289886475
    7. '        
' → logprob: -7.093507289886475
    8. ' for' → logprob: -7.843507289886475
    9. ')
' → logprob: -8.093506813049316
    10. ')' → logprob: -8.843506813049316

Token 991: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19398556649684906
    2. ' for' → logprob: -2.1939854621887207
    3. '
' → logprob: -3.0689854621887207
    4. 'for' → logprob: -4.068985462188721
    5. '   ' → logprob: -7.318985462188721
    6. '        
' → logprob: -7.818985462188721
    7. '    
' → logprob: -10.068985939025879
    8. '<|end|>' → logprob: -10.318985939025879
    9. '  
' → logprob: -10.443985939025879
    10. ' ' → logprob: -10.818985939025879

Token 992: ' nodes' (ID: 15749)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.380904672667384e-05
    2. '       ' → logprob: -11.000033378601074
    3. ' for' → logprob: -11.000033378601074
    4. '
' → logprob: -15.125033378601074
    5. '```' → logprob: -16.25003433227539
    6. '   ' → logprob: -18.37503433227539
    7. '        
' → logprob: -19.00003433227539
    8. '	for' → logprob: -20.87503433227539
    9. '           ' → logprob: -21.37503433227539
    10. '``' → logprob: -22.00003433227539

Token 993: '_with' (ID: 14161)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21467620134353638
    2. '=' → logprob: -1.7146761417388916
    3. ' in' → logprob: -5.339676380157471
    4. 'for' → logprob: -5.714676380157471
    5. ':' → logprob: -6.089676380157471
    6. ' for' → logprob: -7.089676380157471
    7. '.' → logprob: -7.089676380157471
    8. ')' → logprob: -7.964676380157471
    9. '<|end|>' → logprob: -8.089675903320312
    10. 'in' → logprob: -8.339675903320312

Token 994: '_edges' (ID: 68870)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.8031404614448547
    2. 'len' → logprob: -1.30314040184021
    3. 'edges' → logprob: -2.55314040184021
    4. 'adj' → logprob: -2.55314040184021
    5. 'any' → logprob: -3.05314040184021
    6. 'non' → logprob: -3.30314040184021
    7. 'connections' → logprob: -3.55314040184021
    8. 'self' → logprob: -5.428140640258789
    9. ' edges' → logprob: -6.303140640258789
    10. ' len' → logprob: -6.303140640258789

Token 995: '_or' (ID: 15400)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22542992234230042
    2. '=' → logprob: -1.600429892539978
    3. 'for' → logprob: -11.47542953491211
    4. ':' → logprob: -13.22542953491211
    5. '=set' → logprob: -13.72542953491211
    6. '<|end|>' → logprob: -14.10042953491211
    7. '=[' → logprob: -14.47542953491211
    8. '=[]' → logprob: -15.22542953491211
    9. ' for' → logprob: -15.22542953491211
    10. '```' → logprob: -15.35042953491211

Token 996: '_letters' (ID: 175934)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6673190593719482
    2. 'self' → logprob: -0.9173190593719482
    3. 'any' → logprob: -2.6673190593719482
    4. ' self' → logprob: -6.292319297790527
    5. '[self' → logprob: -6.417319297790527
    6. '(self' → logprob: -6.542319297790527
    7. 'adj' → logprob: -6.667319297790527
    8. 'True' → logprob: -6.792319297790527
    9. '(len' → logprob: -6.917319297790527
    10. 'edges' → logprob: -7.042319297790527

Token 997: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020549364387989044
    2. '=' → logprob: -3.8955492973327637
    3. ':' → logprob: -12.145549774169922
    4. '   ' → logprob: -14.145549774169922
    5. 'for' → logprob: -15.020549774169922
    6. ' =
' → logprob: -15.020549774169922
    7. '=set' → logprob: -15.645549774169922
    8. ' ' → logprob: -15.895549774169922
    9. '       ' → logprob: -15.895549774169922
    10. '=
' → logprob: -16.645549774169922

Token 998: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5020819902420044
    2. 'set' → logprob: -1.0020819902420044
    3. '{k' → logprob: -4.127081871032715
    4. '[c' → logprob: -5.377081871032715
    5. '{s' → logprob: -5.502081871032715
    6. '[' → logprob: -6.877081871032715
    7. '{x' → logprob: -7.877081871032715
    8. ' {' → logprob: -8.002081871032715
    9. '[k' → logprob: -8.127081871032715
    10. ' set' → logprob: -8.502081871032715

Token 999: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15654681622982025
    2. 'node' → logprob: -2.4065468311309814
    3. 'k' → logprob: -2.9065468311309814
    4. 'key' → logprob: -10.406546592712402
    5. 'ch' → logprob: -10.656546592712402
    6. '
' → logprob: -10.906546592712402
    7. 'char' → logprob: -11.406546592712402
    8. ' c' → logprob: -11.531546592712402
    9. ' node' → logprob: -11.656546592712402
    10. 'u' → logprob: -12.406546592712402

Token 1000: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759410858154297
    2. ' for' → logprob: -0.8259410858154297
    3. '
' → logprob: -13.95094108581543
    4. ' ' → logprob: -15.95094108581543
    5. '	for' → logprob: -15.95094108581543
    6. ':' → logprob: -16.07594108581543
    7. '           ' → logprob: -16.20094108581543
    8. 'self' → logprob: -16.57594108581543
    9. 'c' → logprob: -16.70094108581543
    10. '       ' → logprob: -16.82594108581543

Token 1001: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008626987226307392
    2. 'self' → logprob: -4.758626937866211
    3. ' c' → logprob: -12.383626937866211
    4. ' self' → logprob: -12.758626937866211
    5. 'k' → logprob: -13.508626937866211
    6. '
' → logprob: -13.633626937866211
    7. ',' → logprob: -14.883626937866211
    8. '[c' → logprob: -15.008626937866211
    9. ',c' → logprob: -15.571126937866211
    10. 'range' → logprob: -15.758626937866211

Token 1002: ' in' (ID: 306)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001127955736592412
    2. 'self' → logprob: -7.12612771987915
    3. ',' → logprob: -8.501128196716309
    4. 'in' → logprob: -9.376128196716309
    5. ' c' → logprob: -11.001128196716309
    6. ' in' → logprob: -11.501128196716309
    7. ',c' → logprob: -12.126128196716309
    8. ' self' → logprob: -13.126128196716309
    9. '
' → logprob: -14.751128196716309
    10. ',self' → logprob: -15.626128196716309

Token 1003: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06222524493932724
    2. 'c' → logprob: -2.812225341796875
    3. ' self' → logprob: -8.312225341796875
    4. ' c' → logprob: -12.312225341796875
    5. '(self' → logprob: -12.562225341796875
    6. '[self' → logprob: -13.312225341796875
    7. 'range' → logprob: -14.062225341796875
    8. '[c' → logprob: -14.187225341796875
    9. '
' → logprob: -14.937225341796875
    10. '(c' → logprob: -16.437225341796875

Token 1004: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.08685661107301712
    2. '.al' → logprob: -2.5868566036224365
    3. 'self' → logprob: -5.836856842041016
    4. 'alphabet' → logprob: -5.961856842041016
    5. 'adj' → logprob: -6.086856842041016
    6. 'al' → logprob: -9.711856842041016
    7. '.s' → logprob: -11.336856842041016
    8. '.self' → logprob: -11.461856842041016
    9. '.graph' → logprob: -11.711856842041016
    10. 'alp' → logprob: -11.711856842041016

Token 1005: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6657341718673706
    2. 'self' → logprob: -0.9157341718673706
    3. 'f' → logprob: -2.54073429107666
    4. 'c' → logprob: -5.41573429107666
    5. '[self' → logprob: -7.04073429107666
    6. '(self' → logprob: -7.41573429107666
    7. 'ct' → logprob: -8.41573429107666
    8. 'jf' → logprob: -8.66573429107666
    9. '...' → logprob: -8.79073429107666
    10. 'lf' → logprob: -8.91573429107666

Token 1006: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3133118152618408
    2. 'if' → logprob: -1.3133118152618408
    3. 'in' → logprob: -11.188311576843262
    4. '.keys' → logprob: -11.313311576843262
    5. 'c' → logprob: -11.563311576843262
    6. ' in' → logprob: -11.688311576843262
    7. '}' → logprob: -12.938311576843262
    8. ' ' → logprob: -13.563311576843262
    9. '   ' → logprob: -13.813311576843262
    10. 'keys' → logprob: -14.438311576843262

Token 1007: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003084905445575714
    2. 'len' → logprob: -5.878085136413574
    3. ' self' → logprob: -8.253085136413574
    4. '(self' → logprob: -11.253085136413574
    5. ' len' → logprob: -13.128085136413574
    6. '
' → logprob: -13.253085136413574
    7. '(len' → logprob: -13.378085136413574
    8. 'bool' → logprob: -13.878085136413574
    9. '[self' → logprob: -16.378084182739258
    10. '   ' → logprob: -16.878084182739258

Token 1008: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.015501043759286404
    2. 'self' → logprob: -4.265501022338867
    3. 'adj' → logprob: -7.515501022338867
    4. 'len' → logprob: -7.765501022338867
    5. '.len' → logprob: -8.890501022338867
    6. ' or' → logprob: -9.765501022338867
    7. '.' → logprob: -10.515501022338867
    8. '.self' → logprob: -10.515501022338867
    9. '[self' → logprob: -10.765501022338867
    10. '_adj' → logprob: -10.890501022338867

Token 1009: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0038361826445907354
    2. 'c' → logprob: -5.628836154937744
    3. 'len' → logprob: -8.878836631774902
    4. 'd' → logprob: -10.628836631774902
    5. 'jac' → logprob: -11.253836631774902
    6. 'self' → logprob: -11.628836631774902
    7. 'r' → logprob: -11.628836631774902
    8. '[self' → logprob: -12.253836631774902
    9. 'js' → logprob: -12.503836631774902
    10. '[c' → logprob: -12.503836631774902

Token 1010: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -2.5776860184123507e-06
    2. 'c' → logprob: -13.00000286102295
    3. '[' → logprob: -16.000001907348633
    4. '
' → logprob: -16.875001907348633
    5. '[u' → logprob: -17.375001907348633
    6. '(c' → logprob: -17.375001907348633
    7. '[self' → logprob: -17.875001907348633
    8. '[
' → logprob: -18.500001907348633
    9. '```' → logprob: -18.750001907348633
    10. '}[' → logprob: -19.625001907348633

Token 1011: ']' (ID: 60)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -6.480199954239652e-05
    2. ' or' → logprob: -9.875064849853516
    3. 'c' → logprob: -11.500064849853516
    4. 'or' → logprob: -13.375064849853516
    5. '|' → logprob: -14.625064849853516
    6. '
' → logprob: -15.000064849853516
    7. '[self' → logprob: -15.000064849853516
    8. '}' → logprob: -15.875064849853516
    9. '```' → logprob: -16.125064849853516
    10. '[' → logprob: -16.250064849853516

Token 1012: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.34872138500213623
    2. 'or' → logprob: -1.2237213850021362
    3. '|' → logprob: -8.473721504211426
    4. '.' → logprob: -11.223721504211426
    5. '!=' → logprob: -11.223721504211426
    6. '.union' → logprob: -11.473721504211426
    7. '
' → logprob: -12.473721504211426
    8. '```' → logprob: -12.598721504211426
    9. ')' → logprob: -12.848721504211426
    10. 'is' → logprob: -13.348721504211426

Token 1013: ' any' (ID: 1062)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.18491142988204956
    2. 'self' → logprob: -2.5599114894866943
    3. 'True' → logprob: -2.9349114894866943
    4. 'any' → logprob: -3.4349114894866943
    5. 'len' → logprob: -5.809911251068115
    6. 'not' → logprob: -6.434911251068115
    7. '(c' → logprob: -8.059911727905273
    8. '(True' → logprob: -8.434911727905273
    9. '
' → logprob: -8.809911727905273
    10. ' True' → logprob: -9.059911727905273

Token 1014: '(c' (ID: 2410)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.3869904577732086
    2. 'n' → logprob: -2.636990547180176
    3. 'self' → logprob: -2.886990547180176
    4. 'True' → logprob: -3.261990547180176
    5. '(ne' → logprob: -3.261990547180176
    6. '(n' → logprob: -3.511990547180176
    7. 'c' → logprob: -3.886990547180176
    8. 'nbr' → logprob: -4.386990547180176
    9. '(True' → logprob: -4.511990547180176
    10. 'v' → logprob: -4.636990547180176

Token 1015: ' ==' (ID: 951)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12924452126026154
    2. ' in' → logprob: -2.129244565963745
    3. 'for' → logprob: -7.129244327545166
    4. 'not' → logprob: -7.504244327545166
    5. '==' → logprob: -7.754244327545166
    6. ' not' → logprob: -8.754244804382324
    7. ' for' → logprob: -9.254244804382324
    8. ' ==' → logprob: -9.879244804382324
    9. ')' → logprob: -10.254244804382324
    10. '_in' → logprob: -10.379244804382324

Token 1016: ' x' (ID: 1215)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -1.1804075241088867
    2. 'v' → logprob: -1.5554075241088867
    3. 'n' → logprob: -2.0554075241088867
    4. 'self' → logprob: -2.3054075241088867
    5. 'c' → logprob: -2.4304075241088867
    6. 'node' → logprob: -3.1804075241088867
    7. 'nbr' → logprob: -3.5554075241088867
    8. 'key' → logprob: -3.6804075241088867
    9. 'True' → logprob: -3.8054075241088867
    10. 'k' → logprob: -4.680407524108887

Token 1017: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.031999945640564
    2. ' or' → logprob: -1.281999945640564
    3. ' for' → logprob: -1.406999945640564
    4. 'or' → logprob: -2.2820000648498535
    5. 'in' → logprob: -4.5320000648498535
    6. ' in' → logprob: -4.7820000648498535
    7. ' ' → logprob: -11.031999588012695
    8. ')' → logprob: -11.031999588012695
    9. 'r' → logprob: -11.156999588012695
    10. '   ' → logprob: -11.406999588012695

Token 1018: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6370652318000793
    2. 'v' → logprob: -1.6370651721954346
    3. 'neighbors' → logprob: -2.6370651721954346
    4. 'neighbor' → logprob: -3.0120651721954346
    5. 'adj' → logprob: -3.7620651721954346
    6. 'row' → logprob: -4.137065410614014
    7. 'node' → logprob: -4.137065410614014
    8. 'y' → logprob: -4.262065410614014
    9. 'x' → logprob: -4.637065410614014
    10. 'key' → logprob: -4.637065410614014

Token 1019: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1031278744339943
    2. 'in' → logprob: -2.353127956390381
    3. 'x' → logprob: -6.728127956390381
    4. 'self' → logprob: -7.603127956390381
    5. 'c' → logprob: -7.978127956390381
    6. 's' → logprob: -8.853127479553223
    7. 'v' → logprob: -8.853127479553223
    8. ' x' → logprob: -9.603127479553223
    9. 'n' → logprob: -9.978127479553223
    10. ' self' → logprob: -10.103127479553223

Token 1020: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010929794982075691
    2. ' self' → logprob: -5.260929584503174
    3. '[self' → logprob: -6.135929584503174
    4. '(self' → logprob: -6.510929584503174
    5. 'list' → logprob: -6.760929584503174
    6. 's' → logprob: -9.385930061340332
    7. '[c' → logprob: -9.385930061340332
    8. '[s' → logprob: -9.510930061340332
    9. ' [' → logprob: -9.635930061340332
    10. 'c' → logprob: -9.635930061340332

Token 1021: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.6551070809364319
    2. 'self' → logprob: -1.155107021331787
    3. 'adj' → logprob: -2.030107021331787
    4. 'c' → logprob: -4.030107021331787
    5. '.s' → logprob: -4.905107021331787
    6. '.c' → logprob: -5.155107021331787
    7. 's' → logprob: -6.905107021331787
    8. '.keys' → logprob: -8.155107498168945
    9. 'ad' → logprob: -8.280107498168945
    10. '
' → logprob: -8.405107498168945

Token 1022: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.34884610772132874
    2. 'self' → logprob: -1.2238460779190063
    3. ' self' → logprob: -9.223846435546875
    4. 'f' → logprob: -9.473846435546875
    5. 'g' → logprob: -10.098846435546875
    6. 'c' → logprob: -10.223846435546875
    7. 'jac' → logprob: -10.348846435546875
    8. '(self' → logprob: -10.473846435546875
    9. '[self' → logprob: -10.848846435546875
    10. 'js' → logprob: -11.098846435546875

Token 1023: ')}
' (ID: 19324)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09096431732177734
    2. ')}' → logprob: -2.7159643173217773
    3. '.keys' → logprob: -4.840964317321777
    4. '})' → logprob: -5.590964317321777
    5. '])' → logprob: -5.965964317321777
    6. ')]' → logprob: -6.715964317321777
    7. '):' → logprob: -7.215964317321777
    8. ']' → logprob: -7.215964317321777
    9. ')])' → logprob: -7.215964317321777
    10. '.values' → logprob: -7.465964317321777

Token 1024: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015219183638691902
    2. ':
' → logprob: -5.390219211578369
    3. '
' → logprob: -6.140219211578369
    4. ')
' → logprob: -6.765219211578369
    5. ')' → logprob: -6.890219211578369
    6. 'for' → logprob: -6.890219211578369
    7. ' for' → logprob: -7.140219211578369
    8. ':' → logprob: -7.265219211578369
    9. ' |' → logprob: -7.265219211578369
    10. ' if' → logprob: -7.390219211578369

Token 1025: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.902733325958252
    2. ' for' → logprob: -1.152733325958252
    3. 'for' → logprob: -1.277733325958252
    4. '
' → logprob: -10.402732849121094
    5. '   ' → logprob: -10.652732849121094
    6. '```' → logprob: -10.902732849121094
    7. '        
' → logprob: -12.152732849121094
    8. '	for' → logprob: -12.402732849121094
    9. '           ' → logprob: -12.527732849121094
    10. 'nodes' → logprob: -13.277732849121094

Token 1026: ' Actually' (ID: 50557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013397627510130405
    2. '       ' → logprob: -5.013397693634033
    3. ' for' → logprob: -5.013397693634033
    4. 'nodes' → logprob: -12.013397216796875
    5. '
' → logprob: -12.513397216796875
    6. '```' → logprob: -14.388397216796875
    7. '   ' → logprob: -14.513397216796875
    8. '	for' → logprob: -15.263397216796875
    9. '        
' → logprob: -15.513397216796875
    10. 'count' → logprob: -16.638397216796875

Token 1027: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24906815588474274
    2. '       ' → logprob: -2.124068260192871
    3. ' for' → logprob: -2.749068260192871
    4. 'count' → logprob: -3.499068260192871
    5. 'nodes' → logprob: -5.249068260192871
    6. ' nodes' → logprob: -7.624068260192871
    7. '
' → logprob: -8.249068260192871
    8. 'return' → logprob: -8.499068260192871
    9. 'range' → logprob: -8.874068260192871
    10. ' count' → logprob: -8.999068260192871

Token 1028: ' consider' (ID: 3331)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0425288677215576
    2. ':' → logprob: -1.5425288677215576
    3. ' =' → logprob: -1.5425288677215576
    4. '       ' → logprob: -1.9175288677215576
    5. 'continue' → logprob: -3.4175288677215576
    6. '   ' → logprob: -5.292529106140137
    7. ' continue' → logprob: -5.292529106140137
    8. 'for' → logprob: -5.417529106140137
    9. ':
' → logprob: -5.792529106140137
    10. ' need' → logprob: -5.792529106140137

Token 1029: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1274312734603882
    2. 'all' → logprob: -1.3774312734603882
    3. 'c' → logprob: -1.5024312734603882
    4. 'for' → logprob: -2.6274313926696777
    5. 'set' → logprob: -2.7524313926696777
    6. 'list' → logprob: -3.5024313926696777
    7. 'len' → logprob: -4.127431392669678
    8. ' all' → logprob: -4.877431392669678
    9. 'node' → logprob: -5.627431392669678
    10. ' c' → logprob: -6.752431392669678

Token 1030: ' characters' (ID: 9862)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5751262307167053
    2. 'c' → logprob: -1.0751261711120605
    3. 'keys' → logprob: -3.0751261711120605
    4. 'for' → logprob: -3.3251261711120605
    5. 'nodes' → logprob: -5.8251261711120605
    6. 'node' → logprob: -6.0751261711120605
    7. ' for' → logprob: -6.5751261711120605
    8. '       ' → logprob: -6.9501261711120605
    9. 'key' → logprob: -6.9501261711120605
    10. ' self' → logprob: -7.2001261711120605

Token 1031: ' occurring' (ID: 51667)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09201845526695251
    2. ':' → logprob: -3.5920183658599854
    3. ':
' → logprob: -4.0920186042785645
    4. ' =' → logprob: -4.3420186042785645
    5. 'for' → logprob: -4.8420186042785645
    6. ' in' → logprob: -4.9670186042785645
    7. ' for' → logprob: -5.2170186042785645
    8. '
' → logprob: -5.3420186042785645
    9. '.keys' → logprob: -6.9670186042785645
    10. '.' → logprob: -7.4670186042785645

Token 1032: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.035621121525764465
    2. ' in' → logprob: -3.660621166229248
    3. ':' → logprob: -5.660621166229248
    4. '
' → logprob: -6.160621166229248
    5. '       ' → logprob: -7.160621166229248
    6. 'as' → logprob: -7.785621166229248
    7. ' =' → logprob: -7.910621166229248
    8. '```' → logprob: -8.03562068939209
    9. '=' → logprob: -8.16062068939209
    10. '.' → logprob: -8.28562068939209

Token 1033: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.363617962459102e-05
    2. 'range' → logprob: -10.875083923339844
    3. ' self' → logprob: -11.000083923339844
    4. '
' → logprob: -11.375083923339844
    5. 'the' → logprob: -11.375083923339844
    6. '(self' → logprob: -11.875083923339844
    7. '[self' → logprob: -12.125083923339844
    8. 's' → logprob: -12.250083923339844
    9. '{' → logprob: -12.625083923339844
    10. '```' → logprob: -13.750083923339844

Token 1034: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11667833477258682
    2. ' or' → logprob: -2.741678237915039
    3. '
' → logprob: -3.741678237915039
    4. 'for' → logprob: -5.741678237915039
    5. 'or' → logprob: -5.866678237915039
    6. '.union' → logprob: -5.991678237915039
    7. '.keys' → logprob: -6.491678237915039
    8. ' for' → logprob: -6.491678237915039
    9. '        
' → logprob: -6.616678237915039
    10. 'self' → logprob: -6.741678237915039

Token 1035: ' t' (ID: 260)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20159119367599487
    2. 't' → logprob: -1.7015912532806396
    3. ' self' → logprob: -9.076591491699219
    4. '
' → logprob: -10.576591491699219
    5. '       ' → logprob: -11.076591491699219
    6. '   ' → logprob: -11.576591491699219
    7. ' t' → logprob: -11.826591491699219
    8. '_t' → logprob: -13.451591491699219
    9. '`t' → logprob: -13.701591491699219
    10. '           ' → logprob: -14.451591491699219

Token 1036: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030118150170892477
    2. 'for' → logprob: -7.128011703491211
    3. 'all' → logprob: -7.378011703491211
    4. 'nodes' → logprob: -7.503011703491211
    5. ' for' → logprob: -8.253011703491211
    6. 's' → logprob: -9.003011703491211
    7. 'chars' → logprob: -9.128011703491211
    8. '
' → logprob: -9.253011703491211
    9. '        
' → logprob: -9.878011703491211
    10. ',' → logprob: -10.003011703491211

Token 1037: ' components' (ID: 10674)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.6813936233520508
    2. 'c' → logprob: -1.3063936233520508
    3. 'dfs' → logprob: -2.306393623352051
    4. 'count' → logprob: -3.181393623352051
    5. 'self' → logprob: -3.306393623352051
    6. 'component' → logprob: -3.681393623352051
    7. 'cc' → logprob: -4.306393623352051
    8. '_' → logprob: -7.056393623352051
    9. 'visited' → logprob: -7.181393623352051
    10. 'connected' → logprob: -7.181393623352051

Token 1038: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016546061262488365
    2. 'nodes' → logprob: -5.141546249389648
    3. 'for' → logprob: -5.391546249389648
    4. ' for' → logprob: -6.516546249389648
    5. 'count' → logprob: -6.766546249389648
    6. 'all' → logprob: -6.891546249389648
    7. '
' → logprob: -7.766546249389648
    8. ' nodes' → logprob: -8.266546249389648
    9. ':' → logprob: -8.641546249389648
    10. '```' → logprob: -8.766546249389648

Token 1039: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031224898993968964
    2. 'all' → logprob: -3.9062249660491943
    3. 'nodes' → logprob: -5.156224727630615
    4. 'for' → logprob: -6.406224727630615
    5. 'chars' → logprob: -6.781224727630615
    6. ' all' → logprob: -8.156225204467773
    7. '```' → logprob: -8.156225204467773
    8. ' for' → logprob: -8.531225204467773
    9. ' nodes' → logprob: -8.531225204467773
    10. 'count' → logprob: -8.781225204467773

Token 1040: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12413216382265091
    2. 'all' → logprob: -2.4991321563720703
    3. 'nodes' → logprob: -3.7491321563720703
    4. 'chars' → logprob: -5.49913215637207
    5. 'for' (adapté à ' for') → logprob: -6.12413215637207
    6. 'count' → logprob: -6.24913215637207
    7. 'letters' → logprob: -7.37413215637207
    8. 'return' → logprob: -7.87413215637207
    9. 'characters' → logprob: -8.24913215637207
    10. ' nodes' → logprob: -8.49913215637207

Token 1041: ' node' (ID: 4596)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.055790483951568604
    2. 'node' → logprob: -2.930790424346924
    3. ' node' → logprob: -7.805790424346924
    4. ' c' → logprob: -8.055790901184082
    5. '   ' → logprob: -9.305790901184082
    6. 'char' → logprob: -9.430790901184082
    7. '```' → logprob: -12.430790901184082
    8. 'ch' → logprob: -13.680790901184082
    9. '       ' → logprob: -13.680790901184082
    10. '`' → logprob: -14.055790901184082

Token 1042: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013603554107248783
    2. 'in' → logprob: -6.6263604164123535
    3. '       ' → logprob: -10.501359939575195
    4. '        ' → logprob: -13.126359939575195
    5. '           ' → logprob: -13.376359939575195
    6. '   ' → logprob: -13.876359939575195
    7. '_in' → logprob: -14.751359939575195
    8. '    ' → logprob: -14.876359939575195
    9. '	in' → logprob: -14.876359939575195
    10. ' ' → logprob: -15.001359939575195

Token 1043: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09881798923015594
    2. 'list' → logprob: -3.098818063735962
    3. 'set' → logprob: -3.473818063735962
    4. '(self' → logprob: -4.348817825317383
    5. 'sorted' → logprob: -5.973817825317383
    6. ' self' → logprob: -7.223817825317383
    7. '[self' → logprob: -7.348817825317383
    8. '(list' → logprob: -8.348817825317383
    9. ' list' → logprob: -8.473817825317383
    10. '(set' → logprob: -8.723817825317383

Token 1044: '.ad' (ID: 19775)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3294488191604614
    2. ' in' → logprob: -1.4544488191604614
    3. 'in' → logprob: -3.204448699951172
    4. 'c' → logprob: -7.079448699951172
    5. ' self' → logprob: -7.079448699951172
    6. '   ' → logprob: -7.079448699951172
    7. '.ad' → logprob: -7.329448699951172
    8. ':' → logprob: -7.579448699951172
    9. ':
' → logprob: -7.954448699951172
    10. 'ad' → logprob: -8.079448699951172

Token 1045: 'j' (ID: 73)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04498855397105217
    2. 'j' → logprob: -3.1699886322021484
    3. ' self' → logprob: -7.169988632202148
    4. '[self' → logprob: -7.794988632202148
    5. '(self' → logprob: -8.044988632202148
    6. 'adj' → logprob: -8.044988632202148
    7. '{' → logprob: -10.044988632202148
    8. 'f' → logprob: -10.294988632202148
    9. 'aj' → logprob: -10.669988632202148
    10. '```' → logprob: -11.544988632202148

Token 1046: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.39391636848449707
    2. ':' → logprob: -1.143916368484497
    3. '.keys' → logprob: -5.393916130065918
    4. '       ' → logprob: -6.268916130065918
    5. '):
' → logprob: -7.893916130065918
    6. '           ' → logprob: -9.518916130065918
    7. ' if' → logprob: -9.643916130065918
    8. '   ' → logprob: -11.268916130065918
    9. '):' → logprob: -11.518916130065918
    10. 'if' → logprob: -11.643916130065918

Token 1047: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1799488663673401
    2. '       ' → logprob: -1.8049488067626953
    3. ' if' → logprob: -9.304948806762695
    4. '   ' → logprob: -9.679948806762695
    5. '```' → logprob: -10.554948806762695
    6. 'if' → logprob: -12.429948806762695
    7. '<|end|>' → logprob: -12.554948806762695
    8. '               ' → logprob: -12.554948806762695
    9. '	       ' → logprob: -12.679948806762695
    10. '          ' → logprob: -12.929948806762695

Token 1048: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04231083765625954
    2. 'if' (adapté à ' if') → logprob: -3.542310953140259
    3. ' if' → logprob: -4.41731071472168
    4. '               ' → logprob: -8.41731071472168
    5. '       ' → logprob: -9.04231071472168
    6. '   ' → logprob: -9.91731071472168
    7. '	       ' → logprob: -11.41731071472168
    8. '```' → logprob: -12.16731071472168
    9. ' ' → logprob: -12.91731071472168
    10. '          ' → logprob: -13.66731071472168

Token 1049: ' (' (ID: 350)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.9146995327901095e-05
    2. ' node' → logprob: -10.875019073486328
    3. 'not' → logprob: -16.250019073486328
    4. '(node' → logprob: -17.375019073486328
    5. '           ' → logprob: -17.875019073486328
    6. '
' → logprob: -18.250019073486328
    7. '	node' → logprob: -18.750019073486328
    8. '[node' → logprob: -18.750019073486328
    9. '   ' → logprob: -18.875019073486328
    10. 'self' → logprob: -19.125019073486328

Token 1050: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.00037228144356049597
    2. 'len' → logprob: -8.500371932983398
    3. '(node' → logprob: -9.625371932983398
    4. 'not' → logprob: -9.625371932983398
    5. 'self' → logprob: -10.750371932983398
    6. ' node' → logprob: -12.000371932983398
    7. 'c' → logprob: -13.000371932983398
    8. '
' → logprob: -13.625371932983398
    9. '           ' → logprob: -13.750371932983398
    10. '   ' → logprob: -14.000371932983398

Token 1051: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.251936137676239
    2. 'not' → logprob: -1.5019361972808838
    3. ')' → logprob: -12.376935958862305
    4. '               ' → logprob: -14.001935958862305
    5. '           ' → logprob: -14.001935958862305
    6. ' in' → logprob: -14.501935958862305
    7. '	not' → logprob: -16.251935958862305
    8. ' and' → logprob: -16.501935958862305
    9. ',' → logprob: -16.501935958862305
    10. ':not' → logprob: -16.876935958862305

Token 1052: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5764883160591125
    2. 'in' → logprob: -0.8264883160591125
    3. 'self' → logprob: -7.826488494873047
    4. '       ' → logprob: -9.451488494873047
    5. 'not' → logprob: -10.576488494873047
    6. '           ' → logprob: -10.701488494873047
    7. ')' → logprob: -11.826488494873047
    8. ' not' → logprob: -12.076488494873047
    9. '   ' → logprob: -12.951488494873047
    10. ' self' → logprob: -12.951488494873047

Token 1053: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018339496455155313
    2. ' self' → logprob: -8.62518310546875
    3. '{' → logprob: -13.75018310546875
    4. '           ' → logprob: -14.50018310546875
    5. ')' → logprob: -14.75018310546875
    6. '   ' → logprob: -14.87518310546875
    7. '       ' → logprob: -15.00018310546875
    8. 'visited' → logprob: -15.00018310546875
    9. '(self' → logprob: -15.50018310546875
    10. '[self' → logprob: -16.12518310546875

Token 1054: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.011202964931726456
    2. 'visited' → logprob: -4.511202812194824
    3. 'self' → logprob: -9.386202812194824
    4. '.' → logprob: -9.761202812194824
    5. '.graph' → logprob: -11.636202812194824
    6. '.self' → logprob: -13.886202812194824
    7. 'vis' → logprob: -14.136202812194824
    8. ' .' → logprob: -14.261202812194824
    9. 'graph' → logprob: -14.511202812194824
    10. '.visible' → logprob: -14.886202812194824

Token 1055: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -2.522638169466518e-05
    2. 'isted' → logprob: -11.125024795532227
    3. '_' → logprob: -11.875024795532227
    4. ')' → logprob: -13.750024795532227
    5. '   ' → logprob: -15.125024795532227
    6. '[' → logprob: -15.125024795532227
    7. 'ted' → logprob: -15.375024795532227
    8. '`' → logprob: -15.500024795532227
    9. '```' → logprob: -15.500024795532227
    10. '-' → logprob: -15.625024795532227

Token 1056: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.641277015209198
    2. ' and' → logprob: -1.7662770748138428
    3. ')' → logprob: -1.8912770748138428
    4. '):' → logprob: -2.2662770748138428
    5. 'and' → logprob: -3.3912770748138428
    6. '               ' → logprob: -4.391276836395264
    7. '           ' → logprob: -7.016276836395264
    8. ':' → logprob: -8.266277313232422
    9. ':
' → logprob: -8.516277313232422
    10. '                   ' → logprob: -8.891277313232422

Token 1057: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4818941652774811
    2. 'and' → logprob: -1.3568941354751587
    3. '               ' → logprob: -2.1068942546844482
    4. '           ' → logprob: -6.356894016265869
    5. ':' → logprob: -7.231894016265869
    6. ':
' → logprob: -7.231894016265869
    7. '       ' → logprob: -10.356894493103027
    8. '```' → logprob: -10.481894493103027
    9. '                   ' → logprob: -10.731894493103027
    10. '                       ' → logprob: -10.856894493103027

Token 1058: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05688212811946869
    2. '(node' → logprob: -3.30688214302063
    3. '(len' → logprob: -4.056881904602051
    4. ' (' → logprob: -7.306881904602051
    5. '((' → logprob: -8.30688190460205
    6. '(any' → logprob: -8.80688190460205
    7. '(True' → logprob: -9.18188190460205
    8. '(
' → logprob: -9.93188190460205
    9. '(' → logprob: -10.30688190460205
    10. '(not' → logprob: -10.68188190460205

Token 1059: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09683824330568314
    2. '(self' → logprob: -2.5968382358551025
    3. '(node' → logprob: -5.346838474273682
    4. 'len' → logprob: -5.346838474273682
    5. 'node' → logprob: -5.346838474273682
    6. '(len' → logprob: -5.721838474273682
    7. '((' → logprob: -10.221837997436523
    8. '(' → logprob: -10.346837997436523
    9. '(True' → logprob: -10.346837997436523
    10. ' self' → logprob: -10.596837997436523

Token 1060: '.ad' (ID: 19775)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.02530817687511444
    2. '.ad' → logprob: -3.775308132171631
    3. '.al' → logprob: -6.775308132171631
    4. 's' → logprob: -7.900308132171631
    5. 'adj' → logprob: -8.275308609008789
    6. '.graph' → logprob: -9.150308609008789
    7. '.' → logprob: -10.275308609008789
    8. 'al' → logprob: -10.525308609008789
    9. '.node' → logprob: -10.525308609008789
    10. 'graph' → logprob: -11.025308609008789

Token 1061: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005992617807351053
    2. '[node' → logprob: -8.375598907470703
    3. 'jac' → logprob: -8.750598907470703
    4. 'js' → logprob: -10.250598907470703
    5. 'node' → logprob: -10.375598907470703
    6. '   ' → logprob: -10.625598907470703
    7. 'dj' → logprob: -10.625598907470703
    8. '_node' → logprob: -10.875598907470703
    9. '       ' → logprob: -10.875598907470703
    10. 'adj' → logprob: -12.000598907470703

Token 1062: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.9361264946837764e-07
    2. 'node' → logprob: -16.875
    3. '```' → logprob: -17.75
    4. '[' → logprob: -18.125
    5. '(node' → logprob: -18.125
    6. '[
' → logprob: -19.125
    7. '[user' → logprob: -19.125
    8. ')' → logprob: -19.125
    9. '[token' → logprob: -19.375
    10. '[u' → logprob: -19.875

Token 1063: ']' (ID: 60)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.027348505333065987
    2. 'or' → logprob: -3.652348518371582
    3. ')' → logprob: -7.152348518371582
    4. '               ' → logprob: -9.277348518371582
    5. '           ' → logprob: -9.402348518371582
    6. '):
' → logprob: -10.152348518371582
    7. '):' → logprob: -11.402348518371582
    8. '	or' → logprob: -12.277348518371582
    9. ''or' → logprob: -12.652348518371582
    10. '       ' → logprob: -12.652348518371582

Token 1064: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.16108953952789307
    2. 'or' → logprob: -1.911089539527893
    3. '               ' → logprob: -7.9110894203186035
    4. '           ' → logprob: -8.036089897155762
    5. ')' → logprob: -9.036089897155762
    6. '):
' → logprob: -11.536089897155762
    7. ':' → logprob: -11.661089897155762
    8. '!=' → logprob: -11.911089897155762
    9. '	or' → logprob: -12.536089897155762
    10. '                   ' → logprob: -12.536089897155762

Token 1065: ' True' (ID: 6432)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.13235074281692505
    2. 'True' → logprob: -2.5073506832122803
    3. 'self' → logprob: -4.257350921630859
    4. '(node' → logprob: -4.257350921630859
    5. 'any' → logprob: -5.007350921630859
    6. '(True' → logprob: -5.507350921630859
    7. ' node' → logprob: -6.757350921630859
    8. 'len' → logprob: -7.257350921630859
    9. ' True' → logprob: -7.757350921630859
    10. '
' → logprob: -8.63235092163086

Token 1066: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018674839287996292
    2. '):' → logprob: -4.018674850463867
    3. '           ' → logprob: -8.518674850463867
    4. '               ' → logprob: -8.518674850463867
    5. ':' → logprob: -10.393674850463867
    6. ':
' → logprob: -10.768674850463867
    7. ' or' → logprob: -10.768674850463867
    8. '       ' → logprob: -10.768674850463867
    9. ')' → logprob: -11.518674850463867
    10. '):

' → logprob: -11.893674850463867

Token 1067: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5251227617263794
    2. '           ' → logprob: -0.9001227617263794
    3. '```' → logprob: -7.02512264251709
    4. ':' → logprob: -7.52512264251709
    5. '       ' → logprob: -7.77512264251709
    6. ':
' → logprob: -9.15012264251709
    7. '                   ' → logprob: -11.77512264251709
    8. '                       ' → logprob: -11.90012264251709
    9. '              ' → logprob: -12.65012264251709
    10. '   ' → logprob: -12.65012264251709

Token 1068: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03334666043519974
    2. 'self' (adapté à ' self') → logprob: -4.158346652984619
    3. '                   ' → logprob: -4.283346652984619
    4. '               ' → logprob: -5.908346652984619
    5. ' self' → logprob: -7.658346652984619
    6. 'count' → logprob: -9.533347129821777
    7. '```' → logprob: -10.283347129821777
    8. '       ' → logprob: -10.408347129821777
    9. '   ' → logprob: -10.908347129821777
    10. '                       ' → logprob: -11.783347129821777

Token 1069: '._' (ID: 2697)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.08366304636001587
    2. '._' → logprob: -2.833662986755371
    3. '   ' → logprob: -4.333662986755371
    4. '       ' → logprob: -5.333662986755371
    5. '           ' → logprob: -6.708662986755371
    6. '.' → logprob: -7.583662986755371
    7. '_' → logprob: -7.833662986755371
    8. '.d' → logprob: -7.958662986755371
    9. ' _' → logprob: -8.458662986755371
    10. '```' → logprob: -8.833662986755371

Token 1070: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.9361264946837764e-07
    2. ' dfs' → logprob: -16.625
    3. 'DFS' → logprob: -18.75
    4. 'df' → logprob: -18.75
    5. 'for' → logprob: -19.625
    6. '
' → logprob: -19.875
    7. 'ds' → logprob: -20.25
    8. 'd' → logprob: -20.75
    9. 'depth' → logprob: -20.875
    10. 'visit' → logprob: -21.125

Token 1071: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -5.200166469876422e-06
    2. 'node' → logprob: -12.500004768371582
    3. '(' → logprob: -13.625004768371582
    4. '(
' → logprob: -16.0000057220459
    5. '[node' → logprob: -17.8750057220459
    6. '               ' → logprob: -18.3750057220459
    7. ' (' → logprob: -18.5000057220459
    8. ',node' → logprob: -18.7500057220459
    9. '(n' → logprob: -19.3750057220459
    10. '```' → logprob: -19.5000057220459

Token 1072: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009510025265626609
    2. '       ' → logprob: -7.500950813293457
    3. '           ' → logprob: -8.750950813293457
    4. '               ' → logprob: -9.000950813293457
    5. ')
' → logprob: -10.000950813293457
    6. '<|end|>' → logprob: -10.375950813293457
    7. ' )' → logprob: -11.375950813293457
    8. '                   ' → logprob: -12.125950813293457
    9. '<|end|>' → logprob: -12.375950813293457
    10. ')return' → logprob: -12.375950813293457

Token 1073: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013926070183515549
    2. '           ' → logprob: -4.388926029205322
    3. '                   ' → logprob: -6.763926029205322
    4. '       ' → logprob: -8.63892650604248
    5. '```' → logprob: -10.01392650604248
    6. '                       ' → logprob: -11.26392650604248
    7. '
' → logprob: -11.38892650604248
    8. '<|end|>' → logprob: -12.13892650604248
    9. '              ' → logprob: -13.26392650604248
    10. '   ' → logprob: -13.76392650604248

Token 1074: ' count' (ID: 3605)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7105363011360168
    2. 'count' (adapté à ' count') → logprob: -0.7105363011360168
    3. '                   ' → logprob: -4.585536479949951
    4. '           ' → logprob: -5.210536479949951
    5. ' count' → logprob: -6.710536479949951
    6. '[count' → logprob: -9.210536003112793
    7. '
' → logprob: -9.210536003112793
    8. '                       ' → logprob: -10.585536003112793
    9. '   ' → logprob: -10.835536003112793
    10. '(count' → logprob: -10.835536003112793

Token 1075: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005246798973530531
    2. ' +=' → logprob: -5.255246639251709
    3. '=' → logprob: -11.505247116088867
    4. '+' → logprob: -12.755247116088867
    5. ']+=' → logprob: -17.005247116088867
    6. '```' → logprob: -17.630247116088867
    7. '   ' → logprob: -18.380247116088867
    8. '+="' → logprob: -18.380247116088867
    9. '+=(' → logprob: -19.630247116088867
    10. '       ' → logprob: -19.755247116088867

Token 1076: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -20.750085830688477
    4. ' ' → logprob: -22.250085830688477
    5. '```' → logprob: -22.250085830688477
    6. '  ' → logprob: -23.125085830688477
    7. '
' → logprob: -23.375085830688477
    8. '۱' → logprob: -23.625085830688477
    9. '    ' → logprob: -24.000085830688477
    10. '１' → logprob: -24.000085830688477

Token 1077: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '```' → logprob: -21.125
    4. '   ' → logprob: -22.125
    5. '`' → logprob: -24.125
    6. '۱' → logprob: -24.375
    7. '+' → logprob: -24.5
    8. '１' → logprob: -24.625
    9. '
' → logprob: -25.25
    10. '  ' → logprob: -25.5

Token 1078: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021509946964215487
    2. '
' → logprob: -9.125215530395508
    3. 'return' → logprob: -10.125215530395508
    4. '	' → logprob: -10.250215530395508
    5. '        
' → logprob: -11.500215530395508
    6. '<|end|>' → logprob: -11.875215530395508
    7. '   ' → logprob: -12.875215530395508
    8. ' return' → logprob: -13.125215530395508
    9. '	return' → logprob: -13.375215530395508
    10. '               ' → logprob: -13.375215530395508

Token 1079: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09469224512577057
    2. '
' → logprob: -2.4696922302246094
    3. '        
' → logprob: -5.594692230224609
    4. '<|end|>' → logprob: -7.344692230224609
    5. 'return' → logprob: -7.594692230224609
    6. ' return' → logprob: -9.21969223022461
    7. '	' → logprob: -9.46969223022461
    8. '  
' → logprob: -9.46969223022461
    9. '```' → logprob: -9.59469223022461
    10. '	return' → logprob: -9.59469223022461

Token 1080: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011033779446734115
    2. 'return' (adapté à ' return') → logprob: -9.500110626220703
    3. '	' → logprob: -11.750110626220703
    4. '   ' → logprob: -11.875110626220703
    5. '
' → logprob: -12.250110626220703
    6. '<|end|>' → logprob: -12.375110626220703
    7. '```' → logprob: -12.375110626220703
    8. '	return' → logprob: -13.375110626220703
    9. '           ' → logprob: -13.375110626220703
    10. ' return' → logprob: -13.500110626220703

Token 1081: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.128163257315464e-07
    2. ' count' → logprob: -15.25
    3. '
' → logprob: -25.0
    4. '(count' → logprob: -25.5
    5. '[count' → logprob: -25.875
    6. '	count' → logprob: -26.25
    7. '   ' → logprob: -26.625
    8. '1' → logprob: -26.875
    9. 'code' → logprob: -27.375
    10. '```' → logprob: -27.625

Token 1082: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1083: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1084: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.27053841948509216
    2. ' solve' → logprob: -1.5205384492874146
    3. ' solution' → logprob: -4.770538330078125
    4. ' process' → logprob: -5.395538330078125
    5. ' minimal' → logprob: -5.770538330078125
    6. ' calculate' → logprob: -7.895538330078125
    7. 'solve' → logprob: -7.895538330078125
    8. ' analyze' → logprob: -8.270538330078125
    9. ' run' → logprob: -8.395538330078125
    10. ' parse' → logprob: -8.520538330078125

Token 1085: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0016487567918375134
    2. '():
' → logprob: -6.501648902893066
    3. '()' → logprob: -8.876648902893066
    4. ' ():' → logprob: -12.251648902893066
    5. '(' → logprob: -14.376648902893066
    6. '():
' → logprob: -14.501648902893066
    7. '():

' → logprob: -15.626648902893066
    8. '().' → logprob: -15.751648902893066
    9. '```' → logprob: -16.25164794921875
    10. '()>' → logprob: -16.50164794921875

Token 1086: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9204952120780945
    2. '   ' → logprob: -1.0454952716827393
    3. ' import' → logprob: -2.5454952716827393
    4. 'n' → logprob: -2.6704952716827393
    5. ' n' → logprob: -2.9204952716827393
    6. '```' → logprob: -3.0454952716827393
    7. ' if' → logprob: -7.79549503326416
    8. 'if' → logprob: -8.42049503326416
    9. '	import' → logprob: -9.29549503326416
    10. 'def' → logprob: -9.29549503326416

Token 1087: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5599040389060974
    2. 'import' (adapté à ' import') → logprob: -1.3099040985107422
    3. ' n' → logprob: -2.059904098510742
    4. ' import' → logprob: -3.559904098510742
    5. '   ' → logprob: -5.934904098510742
    6. '```' → logprob: -8.184904098510742
    7. 't' → logprob: -10.559904098510742
    8. 'if' → logprob: -11.309904098510742
    9. 'def' → logprob: -11.934904098510742
    10. '	n' → logprob: -12.309904098510742

Token 1088: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -6.704273118884885e-07
    2. ' sys' → logprob: -14.250000953674316
    3. '=sys' → logprob: -19.75
    4. 'io' → logprob: -21.25
    5. '```' → logprob: -21.25
    6. '(sys' → logprob: -21.875
    7. '	sys' → logprob: -22.0
    8. '
' → logprob: -23.625
    9. '_sys' → logprob: -23.75
    10. 'math' → logprob: -24.375

Token 1089: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7098484635353088
    2. 'n' → logprob: -1.709848403930664
    3. 'input' → logprob: -1.709848403930664
    4. '
' → logprob: -2.584848403930664
    5. ' input' → logprob: -3.084848403930664
    6. ' n' → logprob: -4.584848403930664
    7. ' readline' → logprob: -5.834848403930664
    8. 'data' → logprob: -5.834848403930664
    9. '```' → logprob: -5.834848403930664
    10. '    
' → logprob: -6.084848403930664

Token 1090: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3251686096191406
    2. 'input' → logprob: -1.9501686096191406
    3. ' input' → logprob: -2.2001686096191406
    4. 'n' → logprob: -4.075168609619141
    5. ' n' → logprob: -6.075168609619141
    6. 'data' → logprob: -6.075168609619141
    7. 'def' → logprob: -6.575168609619141
    8. ' readline' → logprob: -7.325168609619141
    9. '```' → logprob: -8.07516860961914
    10. ' data' → logprob: -8.07516860961914

Token 1091: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.030513552948832512
    2. '   ' → logprob: -3.5305135250091553
    3. ' input' → logprob: -7.780513763427734
    4. 'data' → logprob: -8.155513763427734
    5. '```' → logprob: -10.530513763427734
    6. 'n' → logprob: -10.780513763427734
    7. 'def' → logprob: -12.280513763427734
    8. '	input' → logprob: -13.030513763427734
    9. '
' → logprob: -13.655513763427734
    10. 'read' → logprob: -14.530513763427734

Token 1092: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10249026119709015
    2. '_line' → logprob: -2.727490186691284
    3. '_data' → logprob: -4.602490425109863
    4. '().' → logprob: -4.602490425109863
    5. '=' → logprob: -5.602490425109863
    6. ' =' → logprob: -5.852490425109863
    7. '_lines' → logprob: -6.102490425109863
    8. '.readline' → logprob: -6.602490425109863
    9. '_' → logprob: -7.602490425109863
    10. '.' → logprob: -8.352490425109863

Token 1093: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0009126556105911732
    2. ' sys' → logprob: -7.000912666320801
    3. '=sys' → logprob: -13.7509126663208
    4. '	sys' → logprob: -16.500911712646484
    5. 'input' → logprob: -17.000911712646484
    6. '(sys' → logprob: -18.250911712646484
    7. 'lambda' → logprob: -18.500911712646484
    8. 'stdin' → logprob: -20.875911712646484
    9. '   ' → logprob: -21.375911712646484
    10. '_sys' → logprob: -21.500911712646484

Token 1094: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.6716729402542114
    2. '().' → logprob: -0.9216729402542114
    3. '.readline' → logprob: -2.546672821044922
    4. '.' → logprob: -5.421672821044922
    5. 'stdin' → logprob: -5.421672821044922
    6. 'import' → logprob: -6.796672821044922
    7. '   ' → logprob: -7.421672821044922
    8. '(stdin' → logprob: -7.796672821044922
    9. '.read' → logprob: -7.921672821044922
    10. '.stdout' → logprob: -8.296672821044922

Token 1095: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.005269214976578951
    2. 'read' → logprob: -5.3802690505981445
    3. '.read' → logprob: -8.255269050598145
    4. '_read' → logprob: -8.630269050598145
    5. '.readlines' → logprob: -9.880269050598145
    6. '().' → logprob: -10.880269050598145
    7. 'rea' → logprob: -11.005269050598145
    8. '.' → logprob: -11.130269050598145
    9. '<|end|>' → logprob: -11.255269050598145
    10. '=input' → logprob: -11.505269050598145

Token 1096: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2162964642047882
    2. '
' → logprob: -1.7162964344024658
    3. 'n' → logprob: -4.466296672821045
    4. '(n' → logprob: -6.466296672821045
    5. '    
' → logprob: -7.466296672821045
    6. 'def' → logprob: -7.466296672821045
    7. '()
' → logprob: -8.091296195983887
    8. '()' → logprob: -9.091296195983887
    9. '```' → logprob: -10.216296195983887
    10. 't' → logprob: -10.466296195983887

Token 1097: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04927142709493637
    2. 'n' → logprob: -3.04927134513855
    3. 't' → logprob: -7.549271583557129
    4. '
' → logprob: -9.299271583557129
    5. '```' → logprob: -10.549271583557129
    6. 'def' → logprob: -11.049271583557129
    7. '    
' → logprob: -11.174271583557129
    8. ' n' → logprob: -12.299271583557129
    9. '	n' → logprob: -12.674271583557129
    10. '(n' → logprob: -14.174271583557129

Token 1098: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -6.742448022123426e-05
    2. 't' → logprob: -10.500067710876465
    3. '   ' → logprob: -10.625067710876465
    4. 'q' → logprob: -11.375067710876465
    5. ' n' → logprob: -13.000067710876465
    6. 'num' → logprob: -14.125067710876465
    7. 'T' → logprob: -15.000067710876465
    8. '```' → logprob: -15.375067710876465
    9. 'N' → logprob: -15.625067710876465
    10. '
' → logprob: -15.875067710876465

Token 1099: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2602269649505615
    2. '=' → logprob: -1.7602269649505615
    3. ',' → logprob: -2.8852269649505615
    4. '=int' → logprob: -7.260227203369141
    5. '   ' → logprob: -7.760227203369141
    6. ' ,' → logprob: -9.51022720336914
    7. ' ' → logprob: -10.76022720336914
    8. '    ' → logprob: -11.88522720336914
    9. ',n' → logprob: -12.13522720336914
    10. ')' → logprob: -12.13522720336914

Token 1100: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019286326132714748
    2. ' int' → logprob: -6.251928806304932
    3. '[int' → logprob: -19.501928329467773
    4. '=int' → logprob: -19.751928329467773
    5. '(int' → logprob: -20.626928329467773
    6. '   ' → logprob: -21.126928329467773
    7. '<int' → logprob: -21.251928329467773
    8. 'n' → logprob: -21.501928329467773
    9. ' ' → logprob: -21.751928329467773
    10. '  ' → logprob: -22.501928329467773

Token 1101: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2818692922592163
    2. '()' → logprob: -2.031869411468506
    3. '(' → logprob: -2.281869411468506
    4. 'input' → logprob: -4.406869411468506
    5. '(
' → logprob: -8.781868934631348
    6. '(sys' → logprob: -10.906868934631348
    7. '())' → logprob: -11.031868934631348
    8. '()
' → logprob: -11.531868934631348
    9. ' ()' → logprob: -11.906868934631348
    10. '(n' → logprob: -12.031868934631348

Token 1102: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.015750085934996605
    2. '().' → logprob: -4.265749931335449
    3. '()' → logprob: -6.515749931335449
    4. '())
' → logprob: -9.26574993133545
    5. ')' → logprob: -11.89074993133545
    6. '(' → logprob: -13.64074993133545
    7. '()
' → logprob: -13.76574993133545
    8. ' ())' → logprob: -14.14074993133545
    9. '())

' → logprob: -14.64074993133545
    10. '();)' → logprob: -16.140750885009766

Token 1103: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011234324425458908
    2. '   ' → logprob: -4.511234283447266
    3. ' s' → logprob: -8.636234283447266
    4. '    
' → logprob: -12.886234283447266
    5. '_s' → logprob: -13.136234283447266
    6. '
' → logprob: -13.136234283447266
    7. '(s' → logprob: -14.261234283447266
    8. '	s' → logprob: -14.636234283447266
    9. '`s' → logprob: -14.886234283447266
    10. '```' → logprob: -15.136234283447266

Token 1104: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -1.4140441635390744e-05
    2. ' s' → logprob: -11.500014305114746
    3. '_s' → logprob: -12.875014305114746
    4. '   ' → logprob: -13.500014305114746
    5. '	s' → logprob: -19.50001335144043
    6. '```' → logprob: -20.50001335144043
    7. '.s' → logprob: -20.75001335144043
    8. '(s' → logprob: -21.12501335144043
    9. '_' → logprob: -21.12501335144043
    10. '    
' → logprob: -21.50001335144043

Token 1105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4321116507053375
    2. '=' → logprob: -1.0571116209030151
    3. '()' → logprob: -5.807111740112305
    4. ')' → logprob: -8.932111740112305
    5. '   ' → logprob: -8.932111740112305
    6. '(' → logprob: -9.807111740112305
    7. 's' → logprob: -10.807111740112305
    8. ',' → logprob: -11.807111740112305
    9. '())' → logprob: -11.932111740112305
    10. '=input' → logprob: -12.057111740112305

Token 1106: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00861456897109747
    2. ' input' → logprob: -4.758614540100098
    3. '(input' → logprob: -16.883615493774414
    4. '=input' → logprob: -17.258615493774414
    5. '	input' → logprob: -20.258615493774414
    6. '<input' → logprob: -20.508615493774414
    7. '   ' → logprob: -21.258615493774414
    8. '.input' → logprob: -21.508615493774414
    9. ',input' → logprob: -21.758615493774414
    10. 's' → logprob: -22.133615493774414

Token 1107: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0013001153711229563
    2. '()' → logprob: -6.75130033493042
    3. '.strip' → logprob: -9.876299858093262
    4. '.rstrip' → logprob: -9.876299858093262
    5. '()
' → logprob: -11.001299858093262
    6. 'rstrip' → logprob: -12.251299858093262
    7. '[:-' → logprob: -13.626299858093262
    8. '(strip' → logprob: -13.876299858093262
    9. '```' → logprob: -14.376299858093262
    10. '   ' → logprob: -14.501299858093262

Token 1108: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.07889044284820557
    2. 'rstrip' → logprob: -2.578890323638916
    3. 'read' → logprob: -14.578890800476074
    4. ' strip' → logprob: -15.203890800476074
    5. '_strip' → logprob: -17.828889846801758
    6. '.rstrip' → logprob: -18.328889846801758
    7. 'rst' → logprob: -18.328889846801758
    8. '.strip' → logprob: -19.078889846801758
    9. 'rs' → logprob: -19.328889846801758
    10. '(strip' → logprob: -19.328889846801758

Token 1109: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.16143549978733063
    2. '()' → logprob: -1.9114354848861694
    3. '()\' → logprob: -6.786435604095459
    4. '('\' → logprob: -10.1614351272583
    5. '()
' → logprob: -10.7864351272583
    6. '(' → logprob: -12.1614351272583
    7. '())
' → logprob: -12.6614351272583
    8. '()

' → logprob: -12.9114351272583
    9. '   ' → logprob: -12.9114351272583
    10. '
' → logprob: -13.0364351272583

Token 1110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5764052271842957
    2. 't' → logprob: -0.8264052271842957
    3. ' t' → logprob: -7.951405048370361
    4. '	t' → logprob: -9.20140552520752
    5. '`t' → logprob: -11.95140552520752
    6. '
' → logprob: -12.57640552520752
    7. '    
' → logprob: -13.95140552520752
    8. '\t' → logprob: -14.45140552520752
    9. '       ' → logprob: -14.95140552520752
    10. '_t' → logprob: -15.57640552520752

Token 1111: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0007231564959511161
    2. '   ' → logprob: -7.250723361968994
    3. ' t' → logprob: -11.250722885131836
    4. '	t' → logprob: -15.625722885131836
    5. '`t' → logprob: -16.625722885131836
    6. '
' → logprob: -18.250722885131836
    7. '       ' → logprob: -18.375722885131836
    8. '  ' → logprob: -19.500722885131836
    9. '    
' → logprob: -19.750722885131836
    10. ' ' → logprob: -20.625722885131836

Token 1112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519313097000122
    2. ' =' → logprob: -1.5019313097000122
    3. '   ' → logprob: -14.376931190490723
    4. '=input' → logprob: -14.376931190490723
    5. '=
' → logprob: -14.876931190490723
    6. ')' → logprob: -15.876931190490723
    7. 's' → logprob: -16.00193214416504
    8. ' =
' → logprob: -16.00193214416504
    9. '=line' → logprob: -16.75193214416504
    10. '<|end|>' → logprob: -16.87693214416504

Token 1113: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006715370807796717
    2. ' input' → logprob: -5.006715297698975
    3. '(input' → logprob: -17.631715774536133
    4. '   ' → logprob: -18.256715774536133
    5. 's' → logprob: -19.756715774536133
    6. '=input' → logprob: -19.756715774536133
    7. '	input' → logprob: -20.631715774536133
    8. 'output' → logprob: -20.756715774536133
    9. '<input' → logprob: -21.131715774536133
    10. ' ' → logprob: -21.506715774536133

Token 1114: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.546478935983032e-05
    2. '()' → logprob: -11.125025749206543
    3. '.rstrip' → logprob: -11.875025749206543
    4. '()
' → logprob: -12.625025749206543
    5. 'rstrip' → logprob: -15.625025749206543
    6. '.readline' → logprob: -16.750024795532227
    7. ' ().' → logprob: -16.875024795532227
    8. '().
' → logprob: -18.250024795532227
    9. '()

' → logprob: -19.750024795532227
    10. '
' → logprob: -19.750024795532227

Token 1115: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.00026181264547631145
    2. 'strip' → logprob: -8.250262260437012
    3. '.rstrip' → logprob: -14.500262260437012
    4. '```' → logprob: -19.125261306762695
    5. '
' → logprob: -21.250261306762695
    6. '`' → logprob: -23.000261306762695
    7. 's' → logprob: -23.125261306762695
    8. 'read' → logprob: -23.250261306762695
    9. 'replace' → logprob: -23.500261306762695
    10. 'split' → logprob: -23.500261306762695

Token 1116: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.173397958278656
    2. '
' → logprob: -2.298398017883301
    3. 'transform' → logprob: -2.923398017883301
    4. ' transformer' → logprob: -5.923398017883301
    5. '    
' → logprob: -6.673398017883301
    6. 'st' → logprob: -7.423398017883301
    7. 'trans' → logprob: -8.2983980178833
    8. 'string' → logprob: -9.9233980178833
    9. 'tr' → logprob: -9.9233980178833
    10. '  
' → logprob: -10.0483980178833

Token 1117: '   ' (ID: 271)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.06120257452130318
    2. '   ' → logprob: -3.0612025260925293
    3. ' transformer' → logprob: -4.436202526092529
    4. 'st' → logprob: -7.561202526092529
    5. 'trans' → logprob: -9.686203002929688
    6. 'result' → logprob: -9.811203002929688
    7. 'obj' → logprob: -11.186203002929688
    8. 'solver' → logprob: -11.686203002929688
    9. '```' → logprob: -11.811203002929688
    10. 'tr' → logprob: -11.936203002929688

Token 1118: ' transformer' (ID: 59595)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.00023619852436240762
    2. 'solver' → logprob: -8.500236511230469
    3. 'st' → logprob: -10.750236511230469
    4. ' transformer' → logprob: -12.250236511230469
    5. '   ' → logprob: -12.250236511230469
    6. 'trans' → logprob: -14.000236511230469
    7. 'solution' → logprob: -15.375236511230469
    8. 'string' → logprob: -15.500236511230469
    9. 'resolver' → logprob: -16.12523651123047
    10. 'result' → logprob: -16.37523651123047

Token 1119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6484323143959045
    2. '=' → logprob: -1.0234322547912598
    3. '.' → logprob: -2.1484322547912598
    4. '.transform' → logprob: -7.77343225479126
    5. '   ' → logprob: -8.523432731628418
    6. '.=' → logprob: -9.773432731628418
    7. '<|end|>' → logprob: -9.898432731628418
    8. ' .' → logprob: -10.148432731628418
    9. '_' → logprob: -10.273432731628418
    10. ')' → logprob: -10.523432731628418

Token 1120: ' String' (ID: 1189)
  Prédit: 'String'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -0.0001234428636962548
    2. ' String' → logprob: -9.000123023986816
    3. '_String' → logprob: -19.875123977661133
    4. 'Strings' → logprob: -23.000123977661133
    5. '_string' → logprob: -24.250123977661133
    6. 'Str' → logprob: -24.625123977661133
    7. '[String' → logprob: -24.875123977661133
    8. '	String' → logprob: -25.125123977661133
    9. '   ' → logprob: -25.750123977661133
    10. '/String' → logprob: -26.500123977661133

Token 1121: 'Transformer' (ID: 48916)
  Prédit: 'Transformer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Transformer' → logprob: -1.9361264946837764e-07
    2. 'transform' → logprob: -16.5
    3. '(transform' → logprob: -18.0
    4. ' transformer' → logprob: -19.625
    5. '`' → logprob: -20.0
    6. '```' → logprob: -20.125
    7. 'Transform' → logprob: -21.0
    8. ' Transformer' → logprob: -21.875
    9. '
' → logprob: -22.125
    10. '(
' → logprob: -22.25

Token 1122: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004842696245759726
    2. '(' → logprob: -5.379842758178711
    3. '(
' → logprob: -8.629842758178711
    4. ' (' → logprob: -10.754842758178711
    5. 'n' → logprob: -11.629842758178711
    6. '   ' → logprob: -12.129842758178711
    7. 'transform' → logprob: -12.504842758178711
    8. '(transform' → logprob: -13.504842758178711
    9. '(s' → logprob: -14.004842758178711
    10. 'String' → logprob: -14.504842758178711

Token 1123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.999452772201039e-05
    2. ',s' → logprob: -10.500029563903809
    3. 's' → logprob: -13.500029563903809
    4. ' ,' → logprob: -14.375029563903809
    5. ')' → logprob: -15.375029563903809
    6. '   ' → logprob: -16.500030517578125
    7. ',
' → logprob: -17.125030517578125
    8. ',n' → logprob: -18.500030517578125
    9. ',t' → logprob: -18.875030517578125
    10. ' ' → logprob: -19.750030517578125

Token 1124: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.941850526549388e-06
    2. ' s' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.50000762939453
    4. '`s' → logprob: -21.12500762939453
    5. '	s' → logprob: -22.50000762939453
    6. '
' → logprob: -22.87500762939453
    7. '```' → logprob: -22.87500762939453
    8. '  ' → logprob: -23.00000762939453
    9. '    ' → logprob: -24.00000762939453
    10. '_s' → logprob: -24.37500762939453

Token 1125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.60414821645827e-06
    2. ' ,' → logprob: -13.250004768371582
    3. ',t' → logprob: -13.375004768371582
    4. ',
' → logprob: -14.125004768371582
    5. '   ' → logprob: -14.875004768371582
    6. ')' → logprob: -17.000003814697266
    7. '‌,' → logprob: -17.125003814697266
    8. '<|end|>' → logprob: -18.250003814697266
    9. ',",' → logprob: -18.500003814697266
    10. '<|end|>' → logprob: -19.375003814697266

Token 1126: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006715370807796717
    2. ' t' → logprob: -5.006715297698975
    3. '`t' → logprob: -17.381715774536133
    4. '
' → logprob: -17.506715774536133
    5. '	t' → logprob: -18.256715774536133
    6. '   ' → logprob: -18.881715774536133
    7. ')t' → logprob: -19.381715774536133
    8. ' ' → logprob: -20.506715774536133
    9. '
' → logprob: -20.756715774536133
    10. '```' → logprob: -21.256715774536133

Token 1127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26896458864212036
    2. '   ' → logprob: -1.5189645290374756
    3. ')
' → logprob: -4.143964767456055
    4. ').' → logprob: -7.643964767456055
    5. '
' → logprob: -8.643964767456055
    6. 'minimal' → logprob: -9.018964767456055
    7. '    
' → logprob: -9.143964767456055
    8. '<|end|>' → logprob: -9.768964767456055
    9. ' minimal' → logprob: -10.768964767456055
    10. '<|end|>' → logprob: -11.518964767456055

Token 1128: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16075360774993896
    2. '   ' → logprob: -1.910753607749939
    3. 'result' → logprob: -7.7857537269592285
    4. '```' → logprob: -9.41075325012207
    5. ' print' → logprob: -11.16075325012207
    6. '
' → logprob: -11.53575325012207
    7. 'return' → logprob: -13.16075325012207
    8. '    
' → logprob: -13.28575325012207
    9. '	print' → logprob: -13.78575325012207
    10. '``' → logprob: -14.16075325012207

Token 1129: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.225939872208983e-05
    2. '   ' → logprob: -11.000032424926758
    3. '```' → logprob: -11.500032424926758
    4. ' print' → logprob: -12.500032424926758
    5. 'result' (adapté à ' result') → logprob: -13.500032424926758
    6. '
' → logprob: -15.500032424926758
    7. '``' → logprob: -17.500032424926758
    8. 'return' → logprob: -17.750032424926758
    9. '	print' → logprob: -18.250032424926758
    10. '    
' → logprob: -18.500032424926758

Token 1130: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8868744969367981
    2. ' =' → logprob: -1.0118744373321533
    3. '=' → logprob: -1.6368744373321533
    4. '   ' → logprob: -3.7618744373321533
    5. '<|end|>' → logprob: -6.261874675750732
    6. '```' → logprob: -7.011874675750732
    7. ' ' → logprob: -7.011874675750732
    8. '.=' → logprob: -7.011874675750732
    9. ' .' → logprob: -7.886874675750732
    10. '<|end|>' → logprob: -8.261874198913574

Token 1131: ' transformer' (ID: 59595)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.004078758880496025
    2. ' transformer' → logprob: -5.5040788650512695
    3. ' transform' → logprob: -15.37907886505127
    4. '(transform' → logprob: -16.254077911376953
    5. '	transform' → logprob: -19.504077911376953
    6. 'trans' → logprob: -19.754077911376953
    7. '.transform' → logprob: -20.254077911376953
    8. '_transform' → logprob: -20.504077911376953
    9. ' transformers' → logprob: -20.504077911376953
    10. '```' → logprob: -20.629077911376953

Token 1132: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -0.0001454955490771681
    2. 'minimal' → logprob: -9.00014591217041
    3. '.' → logprob: -10.75014591217041
    4. 'min' → logprob: -15.37514591217041
    5. ' minimal' → logprob: -15.62514591217041
    6. '.minimum' → logprob: -16.000144958496094
    7. '.m' → logprob: -16.250144958496094
    8. ' .' → logprob: -17.625144958496094
    9. '	min' → logprob: -17.625144958496094
    10. '.Min' → logprob: -17.750144958496094

Token 1133: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -7.896309739408025e-07
    2. 'inal' → logprob: -14.500000953674316
    3. 'mal' → logprob: -16.75
    4. 'al' → logprob: -17.0
    5. '_re' → logprob: -17.875
    6. 'eral' → logprob: -18.375
    7. 'iminal' → logprob: -18.5
    8. 'imals' → logprob: -18.75
    9. 'IMAL' → logprob: -18.875
    10. 'ial' → logprob: -19.375

Token 1134: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -3.173704271830502e-06
    2. 're' → logprob: -13.50000286102295
    3. '_replace' → logprob: -13.50000286102295
    4. '_' → logprob: -15.50000286102295
    5. 'replace' → logprob: -16.875003814697266
    6. '\' → logprob: -17.375003814697266
    7. ' replacements' → logprob: -17.750003814697266
    8. 'replacement' → logprob: -17.750003814697266
    9. '
' → logprob: -17.875003814697266
    10. '_r' → logprob: -18.250003814697266

Token 1135: 'placements' (ID: 72793)
  Prédit: 'placements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placements' → logprob: -1.2664456789934775e-06
    2. 're' → logprob: -14.250000953674316
    3. 'plac' → logprob: -14.375000953674316
    4. 'placement' → logprob: -17.625001907348633
    5. 'places' → logprob: -17.750001907348633
    6. 'place' → logprob: -18.750001907348633
    7. 'pl' → logprob: -18.750001907348633
    8. ' placements' → logprob: -19.250001907348633
    9. ' replacements' → logprob: -19.250001907348633
    10. 'pla' → logprob: -19.750001907348633

Token 1136: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4517683684825897
    2. '()' → logprob: -1.326768398284912
    3. '()
' → logprob: -3.201768398284912
    4. '(' → logprob: -3.451768398284912
    5. '(
' → logprob: -4.201768398284912
    6. 'print' → logprob: -6.326768398284912
    7. '```' → logprob: -6.451768398284912
    8. '[' → logprob: -6.701768398284912
    9. '[]' → logprob: -6.951768398284912
    10. '
' → logprob: -6.951768398284912

Token 1137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32377758622169495
    2. 'print' → logprob: -1.3237775564193726
    3. '```' → logprob: -4.573777675628662
    4. '
' → logprob: -9.323777198791504
    5. '``' → logprob: -10.948777198791504
    6. '    
' → logprob: -11.073777198791504
    7. ' print' → logprob: -11.448777198791504
    8. 'return' → logprob: -12.448777198791504
    9. '`' → logprob: -12.823777198791504
    10. '	print' → logprob: -14.573777198791504

Token 1138: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.885492621222511e-05
    2. '   ' → logprob: -9.750068664550781
    3. '```' → logprob: -12.000068664550781
    4. '
' → logprob: -12.500068664550781
    5. ' print' → logprob: -14.375068664550781
    6. '``' → logprob: -17.37506866455078
    7. '	print' → logprob: -18.00006866455078
    8. '    
' → logprob: -18.75006866455078
    9. '`' → logprob: -20.00006866455078
    10. '#print' → logprob: -21.00006866455078

Token 1139: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0001422770437784493
    2. '(' → logprob: -9.250142097473145
    3. 'result' → logprob: -10.000142097473145
    4. '('' → logprob: -15.000142097473145
    5. '(f' → logprob: -15.125142097473145
    6. ' result' → logprob: -16.37514305114746
    7. '(results' → logprob: -17.50014305114746
    8. '("' → logprob: -17.75014305114746
    9. '(
' → logprob: -17.87514305114746
    10. ' (' → logprob: -18.50014305114746

Token 1140: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001443035143893212
    2. '())' → logprob: -9.250144004821777
    3. '()' → logprob: -10.000144004821777
    4. ')
' → logprob: -13.125144004821777
    5. ' )' → logprob: -15.375144004821777
    6. '   ' → logprob: -15.500144004821777
    7. '`)' → logprob: -15.500144004821777
    8. '```' → logprob: -16.500144958496094
    9. '')' → logprob: -16.750144958496094
    10. '()
' → logprob: -17.125144958496094

Token 1141: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1142: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.038117457181215286
    2. ' __' → logprob: -3.2881174087524414
    3. 'name' → logprob: -9.538117408752441
    4. '_name' → logprob: -13.288117408752441
    5. '___' → logprob: -13.663117408752441
    6. 'True' → logprob: -14.663117408752441
    7. '```' → logprob: -15.913117408752441
    8. 'Name' → logprob: -16.288118362426758
    9. '/__' → logprob: -16.413118362426758
    10. ' ' → logprob: -16.788118362426758

Token 1143: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004419674631208181
    2. ' ==' → logprob: -5.879419803619385
    3. '==' → logprob: -6.629419803619385
    4. 'name' → logprob: -8.879419326782227
    5. '=="' → logprob: -9.379419326782227
    6. ' __' → logprob: -9.879419326782227
    7. '=='' → logprob: -11.879419326782227
    8. '_name' → logprob: -13.129419326782227
    9. '```' → logprob: -13.379419326782227
    10. 'if' → logprob: -13.629419326782227

Token 1144: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.017047418281435966
    2. '==' → logprob: -4.14204740524292
    3. ' ==' → logprob: -7.14204740524292
    4. '=="' → logprob: -8.642047882080078
    5. '=='' → logprob: -10.892047882080078
    6. '__.__' → logprob: -11.392047882080078
    7. '_' → logprob: -12.767047882080078
    8. '__
' → logprob: -13.392047882080078
    9. '==
' → logprob: -13.517047882080078
    10. '__":
' → logprob: -13.767047882080078

Token 1145: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1314031332731247
    2. ' ==' → logprob: -2.1314032077789307
    3. '__' → logprob: -6.006402969360352
    4. '=="' → logprob: -6.506402969360352
    5. '=='' → logprob: -7.631402969360352
    6. '==
' → logprob: -11.506402969360352
    7. '=' → logprob: -11.756402969360352
    8. '===' → logprob: -13.631402969360352
    9. '"' → logprob: -13.756402969360352
    10. 'main' → logprob: -13.881402969360352

Token 1146: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07890014350414276
    2. ''' → logprob: -2.578900098800659
    3. '__' → logprob: -11.578900337219238
    4. ' "__' → logprob: -13.953900337219238
    5. ' '__' → logprob: -17.203899383544922
    6. ''"' → logprob: -17.703899383544922
    7. '"name' → logprob: -18.203899383544922
    8. 'main' → logprob: -18.703899383544922
    9. '"class' → logprob: -19.078899383544922
    10. '   ' → logprob: -19.203899383544922

Token 1147: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7599564790725708
    2. ''' → logprob: -1.0099564790725708
    3. '__' → logprob: -2.0099563598632812
    4. '"' → logprob: -3.3849563598632812
    5. 'name' → logprob: -9.009956359863281
    6. ''name' → logprob: -10.259956359863281
    7. ''m' → logprob: -11.134956359863281
    8. ' '__' → logprob: -11.634956359863281
    9. '___' → logprob: -11.884956359863281
    10. ''s' → logprob: -12.884956359863281

Token 1148: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.13123096525669098
    2. '__' → logprob: -2.1312310695648193
    3. '__':
' → logprob: -5.50623083114624
    4. '__.' → logprob: -9.131231307983398
    5. '__.__' → logprob: -10.006231307983398
    6. '__
' → logprob: -10.131231307983398
    7. '__["' → logprob: -10.381231307983398
    8. '.' → logprob: -12.881231307983398
    9. '__
' → logprob: -13.631231307983398
    10. '.__' → logprob: -14.631231307983398

Token 1149: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.009020227938890457
    2. '   ' → logprob: -4.7590203285217285
    3. '	main' → logprob: -8.00901985168457
    4. ' main' → logprob: -9.63401985168457
    5. '__' → logprob: -12.25901985168457
    6. '_main' → logprob: -13.38401985168457
    7. '    
' → logprob: -14.50901985168457
    8. '```' → logprob: -14.75901985168457
    9. '(main' → logprob: -15.50901985168457
    10. '  ' → logprob: -16.38401985168457

Token 1150: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. '   ' → logprob: -18.0
    4. '	main' → logprob: -19.0
    5. 'import' → logprob: -20.75
    6. '(main' → logprob: -23.875
    7. '.main' → logprob: -24.75
    8. '
' → logprob: -25.125
    9. '_main' → logprob: -25.75
    10. '```' → logprob: -25.75

Token 1151: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1149
Tokens correctement prédits (1ère position, stricte): 427
Tokens correctement prédits (1ère position, avec adaptation): 458
Tokens correctement prédits (top 10): 848
Précision stricte (1ère position): 37.16%
Précision adaptée (1ère position): 39.86%
Précision (top 10): 73.80%
================================================================================
