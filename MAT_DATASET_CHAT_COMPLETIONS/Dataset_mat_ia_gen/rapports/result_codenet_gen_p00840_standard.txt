================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from math import inf

def solve(r, stones):
    n = len(stones)
    W = stones
    total_states = 1 << n
    memo = [{} for _ in range(total_states)]
    # memo[mask]: dict weight -> width

    # Initialize: single stones
    for i, w in enumerate(W):
        memo[1 << i][w] = 0.0

    for mask in range(1, total_states):
        if bin(mask).count('1') == 1:
            continue
        submask = (mask - 1) & mask
        while submask:
            left = submask
            right = mask ^ left
            if right == 0:
                submask = (submask - 1) & mask
                continue

            for wL, widthL in memo[left].items():
                for wR, widthR in memo[right].items():
                    Wsum = wL + wR
                    # Calculate distances a and b
                    a = wR / Wsum
                    b = wL / Wsum
                    width = widthL + widthR + a + b
                    # Insert (Wsum, width) into memo[mask], keep only widest for each weight
                    d = memo[mask]
                    if wL+wR not in d or d[wL+wR] < width:
                        d[wL+wR] = width
            submask = (submask - 1) & mask
        # Keep only max width per weight in memo[mask]
        # No need because previous update already keeps max

    # Extract max width among all weights in memo[total_states-1] not exceeding r
    res = -1
    for width in memo[total_states-1].values():
        if width < r and width > res:
            res = width
    return res

def main():
    input = iter(stdin.read().strip().split())
    T = int(next(input))
    for _ in range(T):
        r = float(next(input))
        s = int(next(input))
        stones = [int(next(input)) for __ in range(s)]
        ans = solve(r, stones)
        if ans < 0:
            print(-1)
        else:
            print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.16638539731502533
    2. ' argv' → logprob: -2.2913854122161865
    3. 'exit' → logprob: -3.5413854122161865
    4. ' exit' → logprob: -3.9163854122161865
    5. 'stdout' → logprob: -6.791385173797607
    6. 'import' → logprob: -6.916385173797607
    7. 'path' → logprob: -7.916385173797607
    8. 'stdin' → logprob: -8.166385650634766
    9. ' import' → logprob: -8.791385650634766
    10. '.argv' → logprob: -9.291385650634766

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018917826935648918
    2. '.readline' → logprob: -4.393918037414551
    3. '\n' → logprob: -5.643918037414551
    4. '```' → logprob: -7.393918037414551
    5. '.read' → logprob: -7.643918037414551
    6. '\' → logprob: -7.893918037414551
    7. 'newline' → logprob: -7.893918037414551
    8. '
' → logprob: -8.39391803741455
    9. 'import' → logprob: -8.51891803741455
    10. ',' → logprob: -8.51891803741455

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05745134875178337
    2. '.readline' → logprob: -3.3074512481689453
    3. '\n' → logprob: -4.807451248168945
    4. 'newline' → logprob: -6.057451248168945
    5. '.read' → logprob: -6.307451248168945
    6. 'import' → logprob: -6.307451248168945
    7. '
' → logprob: -7.057451248168945
    8. '```' → logprob: -7.057451248168945
    9. 'print' → logprob: -7.057451248168945
    10. ',' → logprob: -7.432451248168945

Token 6: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0096635352820158
    2. 'os' → logprob: -5.3846635818481445
    3. ' sys' → logprob: -5.6346635818481445
    4. ' io' → logprob: -6.7596635818481445
    5. ' typing' → logprob: -9.634663581848145
    6. ' math' → logprob: -9.759663581848145
    7. 'sys' → logprob: -10.134663581848145
    8. 'io' → logprob: -10.634663581848145
    9. ' string' → logprob: -10.884663581848145
    10. ' stdout' → logprob: -11.134663581848145

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.009335620328783989
    2. 'import' → logprob: -4.884335517883301
    3. ' ' → logprob: -6.384335517883301
    4. '<|end|>' → logprob: -11.5093355178833
    5. '	import' → logprob: -11.6343355178833
    6. ' imports' → logprob: -12.3843355178833
    7. '_import' → logprob: -12.5093355178833
    8. ' importar' → logprob: -12.6343355178833
    9. ' sqrt' → logprob: -13.2593355178833
    10. '<|end|>' → logprob: -13.5093355178833

Token 8: ' inf' (ID: 5603)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.5088397264480591
    2. 'sqrt' → logprob: -1.133839726448059
    3. ' gcd' → logprob: -3.2588396072387695
    4. ' ceil' → logprob: -4.1338396072387695
    5. ' factorial' → logprob: -5.0088396072387695
    6. ' inf' → logprob: -5.5088396072387695
    7. 'log' → logprob: -5.8838396072387695
    8. ' pi' → logprob: -6.1338396072387695
    9. 'ceil' → logprob: -6.1338396072387695
    10. 'pi' → logprob: -7.1338396072387695

Token 9: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6344637274742126
    2. '
' → logprob: -0.8844637274742126
    3. '\n' → logprob: -4.134463787078857
    4. '```' → logprob: -4.384463787078857
    5. '' → logprob: -4.634463787078857
    6. '<|end|>' → logprob: -5.509463787078857
    7. '\' → logprob: -5.634463787078857
    8. ',' → logprob: -5.759463787078857
    9. 'import' → logprob: -6.509463787078857
    10. '`' → logprob: -7.009463787078857

Token 10: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11507364362478256
    2. '\' → logprob: -2.9900736808776855
    3. '```' → logprob: -4.1150736808776855
    4. '
' → logprob: -4.6150736808776855
    5. '`' → logprob: -4.7400736808776855
    6. '\n' → logprob: -4.8650736808776855
    7. 'd' → logprob: -4.8650736808776855
    8. 'for' → logprob: -5.8650736808776855
    9. '``' → logprob: -6.9900736808776855
    10. '    
' → logprob: -7.7400736808776855

Token 11: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0021067210473120213
    2. ' f' → logprob: -7.502106666564941
    3. ' max' → logprob: -7.752106666564941
    4. ' space' → logprob: -8.502106666564941
    5. ' min' → logprob: -8.627106666564941
    6. ' shortest' → logprob: -8.752106666564941
    7. ' find' → logprob: -9.002106666564941
    8. ' lowest' → logprob: -9.377106666564941
    9. ' read' → logprob: -9.627106666564941
    10. ' dfs' → logprob: -9.752106666564941

Token 12: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008693399839103222
    2. '():' → logprob: -5.758693218231201
    3. '_' → logprob: -5.883693218231201
    4. '```' → logprob: -6.633693218231201
    5. ':' → logprob: -7.758693218231201
    6. '(:' → logprob: -9.00869369506836
    7. '<|end|>' → logprob: -9.25869369506836
    8. '):' → logprob: -9.38369369506836
    9. ' (' → logprob: -9.63369369506836
    10. '("("' → logprob: -9.88369369506836

Token 13: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09775444120168686
    2. 'adius' → logprob: -3.22275447845459
    3. ',' → logprob: -3.84775447845459
    4. 'e' → logprob: -4.09775447845459
    5. 'ead' → logprob: -4.59775447845459
    6. 'oot' → logprob: -6.59775447845459
    7. ':' → logprob: -7.09775447845459
    8. 'ad' → logprob: -7.47275447845459
    9. 'a' → logprob: -7.97275447845459
    10. ')' → logprob: -8.22275447845459

Token 14: ' stones' (ID: 38940)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.47980591654777527
    2. ' c' → logprob: -2.2298059463500977
    3. 'k' → logprob: -2.9798059463500977
    4. 'h' → logprob: -3.6048059463500977
    5. 'd' → logprob: -3.6048059463500977
    6. 't' → logprob: -3.9798059463500977
    7. 'g' → logprob: -4.104805946350098
    8. 'n' → logprob: -4.229805946350098
    9. 'l' → logprob: -4.229805946350098
    10. 'b' → logprob: -4.479805946350098

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02109554223716259
    2. ',' → logprob: -4.2710957527160645
    3. ')' → logprob: -5.0210957527160645
    4. ':' → logprob: -8.396095275878906
    5. '[' → logprob: -10.271095275878906
    6. '):
' → logprob: -10.771095275878906
    7. ' ):' → logprob: -12.146095275878906
    8. 's' → logprob: -12.396095275878906
    9. '=' → logprob: -12.896095275878906
    10. ']:' → logprob: -13.021095275878906

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2448773831129074
    2. '\n' → logprob: -2.744877338409424
    3. '```' → logprob: -2.869877338409424
    4. '    ' → logprob: -3.244877338409424
    5. '\' → logprob: -3.619877338409424
    6. ':' → logprob: -4.869877338409424
    7. '    
' → logprob: -5.119877338409424
    8. '' → logprob: -5.619877338409424
    9. '`' → logprob: -6.119877338409424
    10. ' ' → logprob: -6.244877338409424

Token 17: ' n' (ID: 297)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.24712862074375153
    2. ' ' → logprob: -2.37212872505188
    3. 'n' (adapté à ' n') → logprob: -3.49712872505188
    4. '     
' → logprob: -3.74712872505188
    5. '    ' → logprob: -3.99712872505188
    6. '\' → logprob: -4.122128486633301
    7. '\n' → logprob: -4.622128486633301
    8. ' n' → logprob: -5.247128486633301
    9. '   ' → logprob: -5.497128486633301
    10. '    
' → logprob: -5.622128486633301

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05506022647023201
    2. '=' → logprob: -2.9300601482391357
    3. ',' → logprob: -9.805060386657715
    4. ')' → logprob: -9.930060386657715
    5. ' ' → logprob: -10.430060386657715
    6. '_' → logprob: -11.430060386657715
    7. '=int' → logprob: -11.555060386657715
    8. ' =)' → logprob: -12.055060386657715
    9. ' )' → logprob: -12.680060386657715
    10. ' ,' → logprob: -12.680060386657715

Token 19: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0003995680599473417
    2. 'len' → logprob: -8.000399589538574
    3. ' r' → logprob: -9.875399589538574
    4. ' ' → logprob: -11.875399589538574
    5. '=len' → logprob: -12.500399589538574
    6. '(len' → logprob: -14.125399589538574
    7. '	len' → logprob: -15.500399589538574
    8. ' n' → logprob: -15.625399589538574
    9. '0' → logprob: -15.625399589538574
    10. ' stones' → logprob: -15.750399589538574

Token 20: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.006442157551646233
    2. '(' → logprob: -5.256442070007324
    3. '(r' → logprob: -6.881442070007324
    4. '(s' → logprob: -8.631442070007324
    5. '(points' → logprob: -14.381442070007324
    6. 'stones' → logprob: -14.756442070007324
    7. ' stones' → logprob: -15.131442070007324
    8. '(stor' → logprob: -15.631442070007324
    9. '(`' → logprob: -16.00644302368164
    10. ' (' → logprob: -16.00644302368164

Token 21: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -1.8670179997570813e-05
    2. ')' → logprob: -11.500019073486328
    3. '```' → logprob: -13.250019073486328
    4. '   ' → logprob: -13.625019073486328
    5. ' ones' → logprob: -13.750019073486328
    6. 'stones' → logprob: -13.875019073486328
    7. 'one' → logprob: -14.125019073486328
    8. 'o' → logprob: -14.375019073486328
    9. 'on' → logprob: -15.000019073486328
    10. '>' → logprob: -15.250019073486328

Token 22: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1994775377388578e-05
    2. '   ' → logprob: -12.125012397766113
    3. ')
' → logprob: -12.375012397766113
    4. ' )' → logprob: -14.250012397766113
    5. '`)' → logprob: -14.750012397766113
    6. ' ' → logprob: -15.875012397766113
    7. '),' → logprob: -16.000011444091797
    8. '))' → logprob: -16.250011444091797
    9. '')' → logprob: -16.375011444091797
    10. ')`' → logprob: -16.500011444091797

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.357145756483078
    2. '
' → logprob: -2.1071457862854004
    3. '    
' → logprob: -2.1071457862854004
    4. 'dp' → logprob: -3.8571457862854004
    5. ' 
' → logprob: -4.6071457862854
    6. '   
' → logprob: -5.1071457862854
    7. ' dp' → logprob: -5.6071457862854
    8. '  
' → logprob: -5.8571457862854
    9. '```' → logprob: -6.3571457862854
    10. ' ' → logprob: -6.4821457862854

Token 24: ' W' (ID: 486)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.05901750922203064
    2. 'dp' → logprob: -2.9340174198150635
    3. ' dist' → logprob: -6.684017658233643
    4. ' max' → logprob: -7.309017658233643
    5. 'dist' → logprob: -7.934017658233643
    6. ' d' → logprob: -8.184017181396484
    7. ' prev' → logprob: -8.184017181396484
    8. ' DP' → logprob: -8.434017181396484
    9. '   ' → logprob: -8.934017181396484
    10. ' best' → logprob: -9.059017181396484

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020838255062699318
    2. '=' → logprob: -3.8958382606506348
    3. 'e' → logprob: -10.145837783813477
    4. '   ' → logprob: -10.520837783813477
    5. 'IDTH' → logprob: -10.645837783813477
    6. ' ' → logprob: -10.645837783813477
    7. 'hile' → logprob: -10.895837783813477
    8. 'ith' → logprob: -11.020837783813477
    9. ' =[' → logprob: -11.020837783813477
    10. '=[' → logprob: -11.145837783813477

Token 26: ' stones' (ID: 38940)
  Prédit: ' inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inf' → logprob: -0.2097867876291275
    2. ' [' → logprob: -2.459786891937256
    3. 'inf' → logprob: -3.209786891937256
    4. ' ' → logprob: -4.209786891937256
    5. ' r' → logprob: -4.209786891937256
    6. '[' → logprob: -4.334786891937256
    7. ' stones' → logprob: -4.459786891937256
    8. ' [[' → logprob: -5.959786891937256
    9. 'r' → logprob: -6.084786891937256
    10. ' n' → logprob: -7.334786891937256

Token 27: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1266501247882843
    2. '[:]' → logprob: -2.501650094985962
    3. '+' → logprob: -3.751650094985962
    4. '[-' → logprob: -5.376650333404541
    5. '.copy' → logprob: -6.001650333404541
    6. ' +' → logprob: -6.126650333404541
    7. '[:' → logprob: -6.876650333404541
    8. '[len' → logprob: -7.376650333404541
    9. '[n' → logprob: -7.626650333404541
    10. '[::-' → logprob: -7.751650333404541

Token 28: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5831050872802734
    2. '   ' → logprob: -1.3331050872802734
    3. ',' → logprob: -3.2081050872802734
    4. ')' → logprob: -3.4581050872802734
    5. '+' → logprob: -3.5831050872802734
    6. ' +' → logprob: -4.333105087280273
    7. '[:]' → logprob: -4.833105087280273
    8. '.' → logprob: -4.958105087280273
    9. ' ' → logprob: -5.458105087280273
    10. '
' → logprob: -5.708105087280273

Token 29: ' total' (ID: 3609)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7369604706764221
    2. '_' → logprob: -2.4869604110717773
    3. ' dp' → logprob: -2.6119604110717773
    4. '_dp' → logprob: -2.6119604110717773
    5. ' =' → logprob: -2.7369604110717773
    6. '   ' → logprob: -2.9869604110717773
    7. 'dist' → logprob: -3.2369604110717773
    8. ')' → logprob: -3.9869604110717773
    9. ',' → logprob: -3.9869604110717773
    10. '
' → logprob: -4.111960411071777

Token 30: '_states' (ID: 53795)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6743732690811157
    2. ' =' → logprob: -0.9243732690811157
    3. '_weight' → logprob: -3.174373149871826
    4. '=' → logprob: -3.924373149871826
    5. '_sum' → logprob: -4.174373149871826
    6. '_cost' → logprob: -5.049373149871826
    7. ' _' → logprob: -6.299373149871826
    8. '_space' → logprob: -6.424373149871826
    9. '_weights' → logprob: -6.674373149871826
    10. '_w' → logprob: -6.924373149871826

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005331113003194332
    2. '=' → logprob: -5.255331039428711
    3. ' ' → logprob: -9.380331039428711
    4. ',' → logprob: -12.380331039428711
    5. ')' → logprob: -12.755331039428711
    6. '_' → logprob: -13.630331039428711
    7. '  ' → logprob: -13.880331039428711
    8. 's' → logprob: -14.005331039428711
    9. ' =
' → logprob: -14.880331039428711
    10. '```' → logprob: -15.255331039428711

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3743780851364136
    2. ' n' → logprob: -2.124378204345703
    3. '1' → logprob: -2.249378204345703
    4. '2' → logprob: -3.374378204345703
    5. ' (' → logprob: -3.749378204345703
    6. 'n' → logprob: -4.249378204345703
    7. ' inf' → logprob: -5.249378204345703
    8. '10' → logprob: -5.874378204345703
    9. 'inf' → logprob: -5.999378204345703
    10. '(' → logprob: -6.999378204345703

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.37617841362953186
    2. '2' → logprob: -2.376178503036499
    3. '(' → logprob: -2.626178503036499
    4. '3' → logprob: -3.001178503036499
    5. 'n' → logprob: -3.251178503036499
    6. ' ' → logprob: -3.876178503036499
    7. '(n' → logprob: -4.50117826461792
    8. ' (' → logprob: -4.62617826461792
    9. 'inf' → logprob: -4.62617826461792
    10. ' n' → logprob: -6.00117826461792

Token 34: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.031380053609609604
    2. '<<' → logprob: -3.5313799381256104
    3. ' ' → logprob: -6.5313801765441895
    4. ' <<=' → logprob: -9.531379699707031
    5. '<|end|>' → logprob: -10.531379699707031
    6. '0' → logprob: -10.656379699707031
    7. ' <' → logprob: -11.281379699707031
    8. '<' → logprob: -11.781379699707031
    9. ' <<<' → logprob: -12.031379699707031
    10. ' <<
' → logprob: -12.406379699707031

Token 35: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001173321157693863
    2. ' n' → logprob: -6.751173496246338
    3. '	n' → logprob: -13.00117301940918
    4. '(n' → logprob: -15.12617301940918
    5. '20' → logprob: -15.25117301940918
    6. '   ' → logprob: -16.25117301940918
    7. '```' → logprob: -17.12617301940918
    8. '<n' → logprob: -17.25117301940918
    9. ')n' → logprob: -17.37617301940918
    10. '_n' → logprob: -17.37617301940918

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07173865288496017
    2. ' 
' → logprob: -3.4467387199401855
    3. '  
' → logprob: -4.8217387199401855
    4. '   ' → logprob: -4.9467387199401855
    5. ' ' → logprob: -4.9467387199401855
    6. '    
' → logprob: -5.4467387199401855
    7. '\n' → logprob: -5.9467387199401855
    8. '' → logprob: -5.9467387199401855
    9. '   
' → logprob: -7.1967387199401855
    10. '
' → logprob: -7.4467387199401855

Token 37: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2900547683238983
    2. '   ' → logprob: -2.1650547981262207
    3. '    
' → logprob: -2.9150547981262207
    4. ' 
' → logprob: -3.1650547981262207
    5. '  
' → logprob: -4.040054798126221
    6. '   
' → logprob: -5.415054798126221
    7. ' ' → logprob: -5.790054798126221
    8. '\n' → logprob: -5.790054798126221
    9. ',' → logprob: -5.915054798126221
    10. '' → logprob: -6.665054798126221

Token 38: ' memo' (ID: 46393)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6509900093078613
    2. ' dp' → logprob: -0.7759900093078613
    3. '   ' → logprob: -4.775990009307861
    4. ' DP' → logprob: -5.775990009307861
    5. 'dist' → logprob: -6.150990009307861
    6. 'DP' → logprob: -6.275990009307861
    7. ' dist' → logprob: -7.025990009307861
    8. '
' → logprob: -7.650990009307861
    9. '_dp' → logprob: -8.650989532470703
    10. '    
' → logprob: -8.775989532470703

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007756514940410852
    2. '=' → logprob: -5.13275671005249
    3. '[' → logprob: -6.38275671005249
    4. ' ' → logprob: -9.132756233215332
    5. '  ' → logprob: -11.507756233215332
    6. '<|end|>' → logprob: -12.632756233215332
    7. ']' → logprob: -12.757756233215332
    8. ')' → logprob: -12.882756233215332
    9. '[]' → logprob: -13.507756233215332
    10. '   ' → logprob: -13.757756233215332

Token 40: ' [{}' (ID: 170238)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.12186124175786972
    2. ' {}' → logprob: -2.746861219406128
    3. '{}' → logprob: -3.496861219406128
    4. '[' → logprob: -4.496861457824707
    5. ' [-' → logprob: -4.871861457824707
    6. '[-' → logprob: -7.246861457824707
    7. ' {' → logprob: -7.621861457824707
    8. '{' → logprob: -8.496861457824707
    9. '[in' → logprob: -10.121861457824707
    10. ' ' → logprob: -10.621861457824707

Token 41: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7647993564605713
    2. ' for' → logprob: -0.8897993564605713
    3. ',' → logprob: -2.6397993564605713
    4. 'for' → logprob: -3.6397993564605713
    5. ')' → logprob: -4.264799118041992
    6. '   ' → logprob: -5.264799118041992
    7. ' ' → logprob: -6.639799118041992
    8. '}' → logprob: -6.764799118041992
    9. 'def' → logprob: -6.764799118041992
    10. '    ' → logprob: -7.139799118041992

Token 42: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5155096054077148
    2. '_' → logprob: -1.8905096054077148
    3. ' range' → logprob: -2.015509605407715
    4. '(' → logprob: -2.640509605407715
    5. '(range' → logprob: -3.265509605407715
    6. 'range' → logprob: -5.140509605407715
    7. '(_' → logprob: -6.265509605407715
    8. ' ' → logprob: -7.390509605407715
    9. '_range' → logprob: -8.265509605407715
    10. ' (' → logprob: -8.265509605407715

Token 43: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009224193054251373
    2. ' range' → logprob: -7.750922203063965
    3. '(range' → logprob: -8.125922203063965
    4. 'n' → logprob: -8.875922203063965
    5. 'in' → logprob: -10.125922203063965
    6. '(n' → logprob: -11.250922203063965
    7. '(' → logprob: -14.375922203063965
    8. 'W' → logprob: -14.750922203063965
    9. ' in' → logprob: -15.250922203063965
    10. 'r' → logprob: -15.500922203063965

Token 44: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759541392326355
    2. 'range' → logprob: -0.8259541392326355
    3. '(range' → logprob: -11.32595443725586
    4. ' ' → logprob: -14.07595443725586
    5. '   ' → logprob: -14.45095443725586
    6. '	range' → logprob: -14.95095443725586
    7. 'n' → logprob: -15.45095443725586
    8. ']' → logprob: -15.45095443725586
    9. '[' → logprob: -16.07595443725586
    10. '  ' → logprob: -16.57595443725586

Token 45: '(total' (ID: 39744)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02384117618203163
    2. '(total' → logprob: -3.773841142654419
    3. '(' → logprob: -7.898841381072998
    4. 'n' → logprob: -9.14884090423584
    5. 'total' → logprob: -9.39884090423584
    6. ' (' → logprob: -11.02384090423584
    7. '](' → logprob: -12.27384090423584
    8. '((' → logprob: -12.52384090423584
    9. '(r' → logprob: -12.89884090423584
    10. ' n' → logprob: -13.27384090423584

Token 46: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.0002562137378845364
    2. ')]' → logprob: -9.375256538391113
    3. '_' → logprob: -9.750256538391113
    4. ')' → logprob: -10.125256538391113
    5. 'states' → logprob: -10.500256538391113
    6. 'States' → logprob: -11.250256538391113
    7. '```' → logprob: -11.750256538391113
    8. '_)' → logprob: -12.125256538391113
    9. '   ' → logprob: -13.125256538391113
    10. ')])' → logprob: -13.250256538391113

Token 47: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004070778959430754
    2. ']' → logprob: -8.250407218933105
    3. ' )' → logprob: -9.250407218933105
    4. ')' → logprob: -11.125407218933105
    5. '}]' → logprob: -11.250407218933105
    6. ' ]' → logprob: -11.375407218933105
    7. ' }]' → logprob: -12.750407218933105
    8. ')]
' → logprob: -13.375407218933105
    9. '])' → logprob: -13.625407218933105
    10. '])]' → logprob: -14.000407218933105

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24236266314983368
    2. '
' → logprob: -1.99236261844635
    3. 'def' → logprob: -3.3673627376556396
    4. '    
' → logprob: -3.8673627376556396
    5. ' for' → logprob: -4.8673624992370605
    6. ' 
' → logprob: -5.3673624992370605
    7. ')' → logprob: -6.6173624992370605
    8. ' def' → logprob: -6.6173624992370605
    9. 'for' → logprob: -6.8673624992370605
    10. 'dp' → logprob: -6.8673624992370605

Token 49: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4828754663467407
    2. 'def' → logprob: -1.6078754663467407
    3. '
' → logprob: -2.107875347137451
    4. ' for' → logprob: -2.482875347137451
    5. 'for' → logprob: -2.732875347137451
    6. ']' → logprob: -2.732875347137451
    7. '[' → logprob: -2.857875347137451
    8. ' def' → logprob: -3.732875347137451
    9. ' ' → logprob: -3.857875347137451
    10. '[r' → logprob: -4.357875347137451

Token 50: ' memo' (ID: 46393)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.290159672498703
    2. 'for' → logprob: -1.6651597023010254
    3. ' def' → logprob: -3.9151597023010254
    4. 'def' → logprob: -4.415159702301025
    5. '   ' → logprob: -4.790159702301025
    6. ' r' → logprob: -5.540159702301025
    7. ' return' → logprob: -5.665159702301025
    8. ' ' → logprob: -6.040159702301025
    9. ']' → logprob: -6.290159702301025
    10. ' dp' → logprob: -6.540159702301025

Token 51: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4767441749572754
    2. '[' → logprob: -1.2267441749572754
    3. '=' → logprob: -3.7267441749572754
    4. '[(' → logprob: -4.351744174957275
    5. 'def' → logprob: -5.101744174957275
    6. '   ' → logprob: -5.351744174957275
    7. ' ' → logprob: -5.726744174957275
    8. ']' → logprob: -5.726744174957275
    9. ' for' → logprob: -6.351744174957275
    10. '0' → logprob: -6.351744174957275

Token 52: 'mask' (ID: 22527)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3462234437465668
    2. 'state' → logprob: -2.4712233543395996
    3. 'r' → logprob: -2.7212233543395996
    4. 'mask' → logprob: -3.4712233543395996
    5. 'w' → logprob: -3.8462233543395996
    6. 's' → logprob: -4.0962233543396
    7. 'current' → logprob: -5.2212233543396
    8. 'cur' → logprob: -5.2212233543396
    9. '][' → logprob: -5.2212233543396
    10. 'k' → logprob: -5.4712233543396

Token 53: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12013313919305801
    2. '][' → logprob: -2.2451331615448
    3. '].' → logprob: -6.245132923126221
    4. '[' → logprob: -6.495132923126221
    5. ' ]' → logprob: -6.495132923126221
    6. ']:' → logprob: -7.495132923126221
    7. ']=' → logprob: -8.245133399963379
    8. '][]' → logprob: -8.745133399963379
    9. ' ][' → logprob: -8.745133399963379
    10. ']={' → logprob: -8.995133399963379

Token 54: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.1973235607147217
    2. ' {}' → logprob: -1.6973235607147217
    3. '{' → logprob: -1.9473235607147217
    4. ' {' → logprob: -2.4473235607147217
    5. ' key' → logprob: -2.9473235607147217
    6. 'mask' → logprob: -3.4473235607147217
    7. ' mask' → logprob: -3.8223235607147217
    8. ' keys' → logprob: -3.9473235607147217
    9. ' next' → logprob: -4.197323799133301
    10. '#' → logprob: -4.572323799133301

Token 55: ' weight' (ID: 6049)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.3625308871269226
    2. ' of' → logprob: -2.8625309467315674
    3. ' =' → logprob: -3.1125309467315674
    4. ':' → logprob: -3.2375309467315674
    5. '[int' → logprob: -3.9875309467315674
    6. ' for' → logprob: -4.112530708312988
    7. ' that' → logprob: -4.112530708312988
    8. '{' → logprob: -4.237530708312988
    9. ' mapping' → logprob: -4.237530708312988
    10. 'def' → logprob: -4.737530708312988

Token 56: ' ->' (ID: 2747)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9234227538108826
    2. ']' → logprob: -1.0484228134155273
    3. ' for' → logprob: -2.6734228134155273
    4. ')' → logprob: -3.0484228134155273
    5. '=' → logprob: -3.6734228134155273
    6. 'def' → logprob: -3.9234228134155273
    7. ':' → logprob: -4.048422813415527
    8. 'for' → logprob: -4.173422813415527
    9. ',' → logprob: -4.423422813415527
    10. '   ' → logprob: -4.673422813415527

Token 57: ' width' (ID: 4345)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.9805814027786255
    2. ' steps' → logprob: -2.105581283569336
    3. ' int' → logprob: -2.480581283569336
    4. ' bool' → logprob: -2.730581283569336
    5. 'steps' → logprob: -2.855581283569336
    6. ' minimal' → logprob: -2.980581283569336
    7. 'cost' → logprob: -2.980581283569336
    8. ' True' → logprob: -3.105581283569336
    9. 'bool' → logprob: -3.480581283569336
    10. 'int' → logprob: -3.605581283569336

Token 58: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053251929581165314
    2. 'def' → logprob: -4.05325174331665
    3. '
' → logprob: -4.55325174331665
    4. ' for' → logprob: -4.67825174331665
    5. ')' → logprob: -5.67825174331665
    6. ']' → logprob: -6.30325174331665
    7. '    
' → logprob: -6.42825174331665
    8. 'for' → logprob: -6.42825174331665
    9. '<|end|>' → logprob: -6.42825174331665
    10. ' =' → logprob: -7.42825174331665

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006635675206780434
    2. '    
' → logprob: -6.631635665893555
    3. ' for' → logprob: -7.006635665893555
    4. '```' → logprob: -7.006635665893555
    5. ' ' → logprob: -7.256635665893555
    6. '[' → logprob: -7.631635665893555
    7. ':' → logprob: -8.256635665893555
    8. '\n' → logprob: -8.506635665893555
    9. ' 
' → logprob: -8.506635665893555
    10. 'def' → logprob: -8.506635665893555

Token 60: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022296134382486343
    2. ' for' → logprob: -4.147295951843262
    3. '   ' → logprob: -5.647295951843262
    4. 'def' → logprob: -6.272295951843262
    5. 'dp' → logprob: -7.272295951843262
    6. 'res' → logprob: -9.897295951843262
    7. 'result' → logprob: -10.897295951843262
    8. 'prev' → logprob: -11.272295951843262
    9. 'best' → logprob: -11.772295951843262
    10. 'answer' → logprob: -11.897295951843262

Token 61: ' Initialize' (ID: 19496)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5204096436500549
    2. 'for' → logprob: -1.8954095840454102
    3. ' def' → logprob: -2.52040958404541
    4. '   ' → logprob: -2.77040958404541
    5. ' dp' → logprob: -3.14540958404541
    6. 'def' → logprob: -3.39540958404541
    7. 'dp' → logprob: -3.77040958404541
    8. ' stack' → logprob: -5.89540958404541
    9. ' queue' → logprob: -7.02040958404541
    10. 'stack' → logprob: -7.39540958404541

Token 62: ':' (ID: 25)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31328070163726807
    2. 'for' → logprob: -1.688280701637268
    3. '   ' → logprob: -3.0632805824279785
    4. 'memo' → logprob: -4.0632805824279785
    5. ' memo' → logprob: -4.1882805824279785
    6. 'dp' → logprob: -6.6882805824279785
    7. '[' → logprob: -7.4382805824279785
    8. ' dp' → logprob: -7.8132805824279785
    9. '```' → logprob: -7.8132805824279785
    10. ' ' → logprob: -8.063281059265137

Token 63: ' single' (ID: 4590)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17210395634174347
    2. 'for' → logprob: -2.5471038818359375
    3. '   ' → logprob: -3.2971038818359375
    4. ' memo' → logprob: -3.4221038818359375
    5. 'memo' → logprob: -4.6721038818359375
    6. '```' → logprob: -8.297103881835938
    7. ' ' → logprob: -8.922103881835938
    8. ' dp' → logprob: -9.734603881835938
    9. '    ' → logprob: -10.109603881835938
    10. '0' → logprob: -10.234603881835938

Token 64: ' stones' (ID: 38940)
  Prédit: ' stones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stones' → logprob: -0.4565982222557068
    2. ' stone' → logprob: -2.2065982818603516
    3. 'tons' → logprob: -2.8315982818603516
    4. 'stones' → logprob: -2.9565982818603516
    5. ' states' → logprob: -3.4565982818603516
    6. '_' → logprob: -3.7065982818603516
    7. 'stone' → logprob: -3.7065982818603516
    8. '-' → logprob: -4.081598281860352
    9. 's' → logprob: -4.706598281860352
    10. '   ' → logprob: -5.206598281860352

Token 65: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24248391389846802
    2. '   ' → logprob: -1.8674838542938232
    3. 'for' → logprob: -2.8674838542938232
    4. '    
' → logprob: -6.617484092712402
    5. '	for' → logprob: -7.617484092712402
    6. '[' → logprob: -7.867484092712402
    7. '
' → logprob: -8.242484092712402
    8. '<|end|>' → logprob: -8.367484092712402
    9. ' with' → logprob: -8.492484092712402
    10. '  ' → logprob: -8.867484092712402

Token 66: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3368847966194153
    2. 'for' → logprob: -1.9618847370147705
    3. '   ' → logprob: -2.0868847370147705
    4. '<|end|>' → logprob: -4.83688497543335
    5. '    
' → logprob: -5.33688497543335
    6. '
' → logprob: -5.83688497543335
    7. '  
' → logprob: -6.08688497543335
    8. '	for' → logprob: -7.08688497543335
    9. '```' → logprob: -7.46188497543335
    10. '[' → logprob: -7.58688497543335

Token 67: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3490186929702759
    2. ' for' → logprob: -1.3490186929702759
    3. '   ' → logprob: -3.3490185737609863
    4. '	for' → logprob: -12.349019050598145
    5. ' ' → logprob: -13.599019050598145
    6. '```' → logprob: -15.224019050598145
    7. '  ' → logprob: -15.349019050598145
    8. '    
' → logprob: -15.724019050598145
    9. '
' → logprob: -17.349018096923828
    10. '<|end|>' → logprob: -17.974018096923828

Token 68: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.030307598412036896
    2. 'i' → logprob: -3.5303075313568115
    3. ' mask' → logprob: -8.28030776977539
    4. ' w' → logprob: -9.15530776977539
    5. 'mask' → logprob: -10.15530776977539
    6. ' idx' → logprob: -10.53030776977539
    7. 'w' → logprob: -10.65530776977539
    8. '(i' → logprob: -11.15530776977539
    9. ' s' → logprob: -11.28030776977539
    10. ' ' → logprob: -11.28030776977539

Token 69: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016482388600707054
    2. 'in' → logprob: -4.141482353210449
    3. ',' → logprob: -8.01648235321045
    4. ' ' → logprob: -9.64148235321045
    5. '  ' → logprob: -10.76648235321045
    6. '   ' → logprob: -10.76648235321045
    7. '```' → logprob: -13.14148235321045
    8. ' ,' → logprob: -13.39148235321045
    9. 'range' → logprob: -13.64148235321045
    10. ')' → logprob: -13.64148235321045

Token 70: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2919795513153076
    2. ' w' → logprob: -1.4169795513153076
    3. 'weight' → logprob: -5.041979789733887
    4. ' weight' → logprob: -6.416979789733887
    5. ' stone' → logprob: -6.916979789733887
    6. 'stone' → logprob: -7.291979789733887
    7. '(w' → logprob: -7.541979789733887
    8. ' (' → logprob: -9.166979789733887
    9. 'wt' → logprob: -9.291979789733887
    10. ' wt' → logprob: -9.791979789733887

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0679628774523735
    2. ',' → logprob: -2.817962884902954
    3. 'in' → logprob: -5.192962646484375
    4. 't' → logprob: -8.942962646484375
    5. 'idth' → logprob: -9.817962646484375
    6. 'e' → logprob: -9.942962646484375
    7. 'w' → logprob: -10.317962646484375
    8. 'i' → logprob: -10.942962646484375
    9. 'ght' → logprob: -10.942962646484375
    10. 'alue' → logprob: -10.942962646484375

Token 72: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0788901224732399
    2. ' enumerate' → logprob: -2.578890085220337
    3. 'en' → logprob: -15.453889846801758
    4. 'enum' → logprob: -16.578889846801758
    5. '```' → logprob: -18.203889846801758
    6. ' ' → logprob: -18.953889846801758
    7. 'Enumer' → logprob: -19.203889846801758
    8. '.enumer' → logprob: -19.328889846801758
    9. '(en' → logprob: -19.578889846801758
    10. ' enumer' → logprob: -19.578889846801758

Token 73: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.03871558979153633
    2. '(st' → logprob: -3.2887156009674072
    3. 'W' → logprob: -8.038715362548828
    4. '(w' → logprob: -8.288715362548828
    5. '(' → logprob: -10.538715362548828
    6. ' W' → logprob: -11.163715362548828
    7. '(weights' → logprob: -11.163715362548828
    8. '(range' → logprob: -11.288715362548828
    9. 'stones' → logprob: -11.788715362548828
    10. '(s' → logprob: -12.288715362548828

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04366355761885643
    2. '):
' → logprob: -3.168663501739502
    3. '):
' → logprob: -8.04366397857666
    4. ' ):' → logprob: -8.54366397857666
    5. ')' → logprob: -9.04366397857666
    6. ' ):
' → logprob: -11.54366397857666
    7. ':' → logprob: -11.66866397857666
    8. '   ' → logprob: -12.16866397857666
    9. '):

' → logprob: -13.16866397857666
    10. ',' → logprob: -13.91866397857666

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004200444091111422
    2. ':' → logprob: -6.129200458526611
    3. '   ' → logprob: -6.504200458526611
    4. ',' → logprob: -9.004199981689453
    5. '<|end|>' → logprob: -9.754199981689453
    6. ' memo' → logprob: -9.879199981689453
    7. '        
' → logprob: -10.004199981689453
    8. '      ' → logprob: -10.254199981689453
    9. '):' → logprob: -10.379199981689453
    10. ':
' → logprob: -10.629199981689453

Token 76: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.3711441457271576
    2. 'memo' (adapté à ' memo') → logprob: -1.49614417552948
    3. '   ' → logprob: -2.4961440563201904
    4. '       ' → logprob: -5.9961442947387695
    5. ' if' → logprob: -7.4961442947387695
    6. 'if' → logprob: -8.37114429473877
    7. 'm' → logprob: -9.24614429473877
    8. '    ' → logprob: -9.49614429473877
    9. ' ' → logprob: -9.62114429473877
    10. '```' → logprob: -10.37114429473877

Token 77: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007111206650733948
    2. '[i' → logprob: -7.250710964202881
    3. ')[' → logprob: -14.875711441040039
    4. ' [' → logprob: -15.125711441040039
    5. '[{' → logprob: -15.875711441040039
    6. '[[' → logprob: -16.00071144104004
    7. '][' → logprob: -16.25071144104004
    8. '```' → logprob: -16.50071144104004
    9. '\[' → logprob: -17.50071144104004
    10. '}[' → logprob: -17.87571144104004

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11345934122800827
    2. '(' → logprob: -2.238459348678589
    3. '{' → logprob: -8.363459587097168
    4. 'i' → logprob: -9.113459587097168
    5. '0' → logprob: -9.363459587097168
    6. ' ' → logprob: -9.738459587097168
    7. ' (' → logprob: -10.113459587097168
    8. '[' → logprob: -10.613459587097168
    9. ')(' → logprob: -10.613459587097168
    10. '(i' → logprob: -10.988459587097168

Token 79: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.3514532744884491
    2. ' <<' → logprob: -1.2264533042907715
    3. '|' → logprob: -6.2264533042907715
    4. ' |' → logprob: -7.4764533042907715
    5. '[i' → logprob: -9.101452827453613
    6. '<' → logprob: -9.601452827453613
    7. ']' → logprob: -9.726452827453613
    8. ')' → logprob: -10.226452827453613
    9. '[' → logprob: -10.351452827453613
    10. ' ' → logprob: -10.601452827453613

Token 80: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.518582762917504e-05
    2. ' i' → logprob: -9.37508487701416
    3. '<|end|>' → logprob: -15.75008487701416
    4. '   ' → logprob: -16.500085830688477
    5. '	i' → logprob: -17.125085830688477
    6. ')i' → logprob: -17.500085830688477
    7. ' ' → logprob: -17.625085830688477
    8. '{i' → logprob: -18.125085830688477
    9. '(i' → logprob: -18.375085830688477
    10. '[i' → logprob: -18.500085830688477

Token 81: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.016348591074347496
    2. ']' → logprob: -4.141348361968994
    3. ' ][' → logprob: -8.391348838806152
    4. ']={' → logprob: -10.516348838806152
    5. ']=' → logprob: -11.391348838806152
    6. '[i' → logprob: -11.516348838806152
    7. '[w' → logprob: -11.766348838806152
    8. ' ]' → logprob: -12.016348838806152
    9. '   ' → logprob: -12.141348838806152
    10. '[' → logprob: -12.141348838806152

Token 82: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00027444821898825467
    2. ' w' → logprob: -8.250274658203125
    3. '   ' → logprob: -12.375274658203125
    4. 'W' → logprob: -12.750274658203125
    5. '0' → logprob: -13.500274658203125
    6. ']' → logprob: -13.625274658203125
    7. ' ' → logprob: -13.750274658203125
    8. 'i' → logprob: -14.250274658203125
    9. ''w' → logprob: -15.500274658203125
    10. '	w' → logprob: -15.875274658203125

Token 83: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009273029863834381
    2. ' ]' → logprob: -7.375927448272705
    3. ']=' → logprob: -8.125926971435547
    4. ' ' → logprob: -13.625926971435547
    5. ' =' → logprob: -13.750926971435547
    6. '=' → logprob: -14.000926971435547
    7. '`]' → logprob: -14.625926971435547
    8. '   ' → logprob: -16.063426971435547
    9. '()]' → logprob: -16.063426971435547
    10. '[' → logprob: -16.250926971435547

Token 84: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193455815315247
    2. ' =' → logprob: -1.50193452835083
    3. ']' → logprob: -13.001935005187988
    4. ']=' → logprob: -13.751935005187988
    5. ' ' → logprob: -14.501935005187988
    6. '[' → logprob: -14.626935005187988
    7. '=i' → logprob: -15.751935005187988
    8. '=min' → logprob: -16.376934051513672
    9. '=

' → logprob: -16.501934051513672
    10. '=float' → logprob: -16.501934051513672

Token 85: ' ' (ID: 220)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.19088205695152283
    2. '1' → logprob: -1.9408820867538452
    3. '0' → logprob: -3.6908819675445557
    4. 'W' → logprob: -6.190882205963135
    5. ' w' → logprob: -6.440882205963135
    6. ' ' → logprob: -6.940882205963135
    7. 'r' → logprob: -8.440881729125977
    8. 'i' → logprob: -8.940881729125977
    9. 'inf' → logprob: -8.940881729125977
    10. 'max' → logprob: -10.940881729125977

Token 86: '0' (ID: 15)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.24343840777873993
    2. '1' → logprob: -1.8684383630752563
    3. '0' → logprob: -2.868438482284546
    4. 'W' → logprob: -5.743438243865967
    5. 'inf' → logprob: -7.743438243865967
    6. ' w' → logprob: -7.868438243865967
    7. 'i' → logprob: -8.118438720703125
    8. 'r' → logprob: -8.368438720703125
    9. ' ' → logprob: -8.368438720703125
    10. '(w' → logprob: -11.555938720703125

Token 87: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30142080783843994
    2. '5' → logprob: -1.55142080783844
    3. '1' → logprob: -3.9264206886291504
    4. '<|end|>' → logprob: -4.42642068862915
    5. ' ' → logprob: -6.17642068862915
    6. '2' → logprob: -6.30142068862915
    7. 'py' → logprob: -6.30142068862915
    8. 'rstrip' → logprob: -6.30142068862915
    9. '7' → logprob: -6.55142068862915
    10. '25' → logprob: -6.67642068862915

Token 89: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7454242706298828
    2. '   ' → logprob: -0.9954242706298828
    3. '<|end|>' → logprob: -2.495424270629883
    4. '    
' → logprob: -3.620424270629883
    5. '\n' → logprob: -3.745424270629883
    6. ' 
' → logprob: -4.995424270629883
    7. ' for' → logprob: -4.995424270629883
    8. ' ' → logprob: -6.120424270629883
    9. '  
' → logprob: -6.120424270629883
    10. '<|end|>' → logprob: -7.245424270629883

Token 91: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5284742712974548
    2. '   ' → logprob: -1.6534743309020996
    3. 'for' (adapté à ' for') → logprob: -1.7784743309020996
    4. '
' → logprob: -4.1534743309021
    5. '    
' → logprob: -4.2784743309021
    6. 'def' → logprob: -4.7784743309021
    7. '<|end|>' → logprob: -5.0284743309021
    8. ' 
' → logprob: -6.5284743309021
    9. ' ' → logprob: -6.5284743309021
    10. '  
' → logprob: -7.2784743309021

Token 92: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.042155876755714417
    2. ' size' → logprob: -3.6671559810638428
    3. ' length' → logprob: -4.792155742645264
    4. 'mask' → logprob: -6.292155742645264
    5. ' _' → logprob: -6.667155742645264
    6. ' state' → logprob: -7.042155742645264
    7. ' width' → logprob: -7.542155742645264
    8. ' s' → logprob: -7.667155742645264
    9. ' bit' → logprob: -7.917155742645264
    10. ' layer' → logprob: -7.917155742645264

Token 93: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043027736246585846
    2. 'in' → logprob: -3.168027639389038
    3. '   ' → logprob: -11.793027877807617
    4. '	in' → logprob: -12.668027877807617
    5. ',' → logprob: -12.793027877807617
    6. '_in' → logprob: -12.918027877807617
    7. '1' → logprob: -12.918027877807617
    8. ' ' → logprob: -13.043027877807617
    9. '+' → logprob: -13.293027877807617
    10. 'In' → logprob: -13.543027877807617

Token 94: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00038134094211272895
    2. 'range' → logprob: -7.8753814697265625
    3. '(range' → logprob: -14.250381469726562
    4. '	range' → logprob: -15.125381469726562
    5. ' ' → logprob: -15.750381469726562
    6. ' ran' → logprob: -18.375381469726562
    7. ' xrange' → logprob: -18.375381469726562
    8. ' rang' → logprob: -18.625381469726562
    9. '   ' → logprob: -18.750381469726562
    10. ' ra' → logprob: -18.875381469726562

Token 95: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007803345564752817
    2. '(total' → logprob: -4.882803440093994
    3. ' (' → logprob: -8.632802963256836
    4. '(len' → logprob: -11.632802963256836
    5. '   ' → logprob: -12.882802963256836
    6. '1' → logprob: -13.257802963256836
    7. '(mask' → logprob: -13.382802963256836
    8. '(
' → logprob: -13.507802963256836
    9. ' ' → logprob: -13.882802963256836
    10. '(n' → logprob: -14.132802963256836

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3485988974571228
    2. 'total' → logprob: -1.2235989570617676
    3. ' total' → logprob: -9.84859848022461
    4. '   ' → logprob: -10.22359848022461
    5. '(total' → logprob: -10.47359848022461
    6. ' ' → logprob: -11.22359848022461
    7. '(' → logprob: -11.34859848022461
    8. '2' → logprob: -12.22359848022461
    9. ')' → logprob: -13.47359848022461
    10. '3' → logprob: -13.97359848022461

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001863549230620265
    2. ' ,' → logprob: -6.376863479614258
    3. ',total' → logprob: -9.001863479614258
    4. '+' → logprob: -10.626863479614258
    5. ' +' → logprob: -12.626863479614258
    6. '1' → logprob: -13.001863479614258
    7. ')' → logprob: -13.501863479614258
    8. ',
' → logprob: -13.626863479614258
    9. ',len' → logprob: -13.626863479614258
    10. '   ' → logprob: -14.126863479614258

Token 98: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.002827223390340805
    2. ' total' → logprob: -5.877827167510986
    3. '   ' → logprob: -10.752827644348145
    4. '1' → logprob: -14.627827644348145
    5. ' ' → logprob: -15.377827644348145
    6. '	total' → logprob: -16.502826690673828
    7. 'tot' → logprob: -17.002826690673828
    8. '  ' → logprob: -17.502826690673828
    9. '           ' → logprob: -17.627826690673828
    10. '       ' → logprob: -17.752826690673828

Token 99: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.003834160277619958
    2. '_mask' → logprob: -6.128834247589111
    3. '_masks' → logprob: -6.628834247589111
    4. 'mask' → logprob: -9.003833770751953
    5. 's' → logprob: -9.753833770751953
    6. '_state' → logprob: -10.003833770751953
    7. 'States' → logprob: -10.378833770751953
    8. '<<' → logprob: -10.753833770751953
    9. '_' → logprob: -11.003833770751953
    10. 'states' → logprob: -12.003833770751953

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012529428116977215
    2. '):
' → logprob: -4.387529373168945
    3. ' ):' → logprob: -11.512529373168945
    4. '):
' → logprob: -12.887529373168945
    5. '}:' → logprob: -13.137529373168945
    6. ':' → logprob: -13.262529373168945
    7. ')' → logprob: -13.387529373168945
    8. '):

' → logprob: -14.512529373168945
    9. ']:' → logprob: -14.512529373168945
    10. '>:' → logprob: -15.762529373168945

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1073814406991005
    2. ':' → logprob: -2.3573813438415527
    3. '   ' → logprob: -5.357381343841553
    4. '        
' → logprob: -7.857381343841553
    5. ':
' → logprob: -7.982381343841553
    6. ' ' → logprob: -8.232381820678711
    7. '<|end|>' → logprob: -8.232381820678711
    8. '):' → logprob: -8.607381820678711
    9. '```' → logprob: -8.857381820678711
    10. ' :' → logprob: -9.107381820678711

Token 102: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3145524263381958
    2. '       ' → logprob: -1.6895524263381958
    3. 'for' → logprob: -2.8145523071289062
    4. ' if' → logprob: -3.9395523071289062
    5. ' sub' → logprob: -6.314552307128906
    6. 'if' (adapté à ' if') → logprob: -6.939552307128906
    7. '   ' → logprob: -7.189552307128906
    8. ' weight' → logprob: -8.189552307128906
    9. 'sub' → logprob: -8.314552307128906
    10. ' w' → logprob: -8.314552307128906

Token 103: ' bin' (ID: 6958)
  Prédit: ' bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bin' → logprob: -0.9849615097045898
    2. ' len' → logprob: -1.1099615097045898
    3. 'bin' → logprob: -1.9849615097045898
    4. 'len' → logprob: -2.10996150970459
    5. ' mask' → logprob: -3.73496150970459
    6. 'mask' → logprob: -4.48496150970459
    7. 'memo' → logprob: -7.23496150970459
    8. ' memo' → logprob: -7.35996150970459
    9. '(len' → logprob: -7.98496150970459
    10. ' ' → logprob: -8.10996150970459

Token 104: '(mask' (ID: 80748)
  Prédit: '(mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -5.0020742492051795e-05
    2. '(' → logprob: -10.000049591064453
    3. '[' → logprob: -12.875049591064453
    4. '(count' → logprob: -14.000049591064453
    5. 'mask' → logprob: -14.500049591064453
    6. '(m' → logprob: -15.375049591064453
    7. '(bin' → logprob: -16.500049591064453
    8. '(pop' → logprob: -16.625049591064453
    9. '	mask' → logprob: -16.625049591064453
    10. '(
' → logprob: -17.250049591064453

Token 105: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.000229046301683411
    2. ')' → logprob: -9.500228881835938
    3. '.count' → logprob: -10.125228881835938
    4. '').' → logprob: -10.500228881835938
    5. '().' → logprob: -10.625228881835938
    6. '()).' → logprob: -10.750228881835938
    7. 'count' → logprob: -11.625228881835938
    8. '```' → logprob: -12.000228881835938
    9. '(' → logprob: -12.375228881835938
    10. '}.' → logprob: -12.750228881835938

Token 106: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -2.339278580620885e-06
    2. ' count' → logprob: -13.000001907348633
    3. '```' → logprob: -17.375001907348633
    4. 'bit' → logprob: -18.250001907348633
    5. 'counts' → logprob: -18.875001907348633
    6. '   ' → logprob: -19.625001907348633
    7. '	count' → logprob: -19.750001907348633
    8. 'startswith' → logprob: -19.875001907348633
    9. '(count' → logprob: -20.250001907348633
    10. '.count' → logprob: -20.250001907348633

Token 107: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.015733664855360985
    2. '(' → logprob: -4.26573371887207
    3. '("' → logprob: -6.51573371887207
    4. '("("' → logprob: -9.51573371887207
    5. ''' → logprob: -12.01573371887207
    6. '(
' → logprob: -12.39073371887207
    7. '(`' → logprob: -13.26573371887207
    8. '(',' → logprob: -14.89073371887207
    9. '(

' → logprob: -15.01573371887207
    10. '(('' → logprob: -15.01573371887207

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '('' → logprob: -13.750001907348633
    3. '0' → logprob: -14.750001907348633
    4. ')' → logprob: -16.125001907348633
    5. '')' → logprob: -16.500001907348633
    6. '(' → logprob: -17.000001907348633
    7. ' ' → logprob: -17.750001907348633
    8. '2' → logprob: -18.125001907348633
    9. '
' → logprob: -19.125001907348633
    10. '

' → logprob: -19.250001907348633

Token 109: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47512149810791016
    2. '')' → logprob: -0.9751214981079102
    3. ' )' → logprob: -7.35012149810791
    4. '()' → logprob: -8.60012149810791
    5. '>' → logprob: -9.97512149810791
    6. ')>' → logprob: -10.10012149810791
    7. ' ')' → logprob: -10.35012149810791
    8. ' >' → logprob: -10.72512149810791
    9. '")' → logprob: -11.10012149810791
    10. ''' → logprob: -11.35012149810791

Token 110: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9310467839241028
    2. ' <' → logprob: -1.056046724319458
    3. '<' → logprob: -2.181046724319458
    4. ' >' → logprob: -2.181046724319458
    5. ' >=' → logprob: -3.931046724319458
    6. '>=' → logprob: -5.056046962738037
    7. ' <=' → logprob: -5.681046962738037
    8. '<=' → logprob: -6.681046962738037
    9. ' ==' → logprob: -7.431046962738037
    10. '==' → logprob: -7.806046962738037

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05492865666747093
    2. ' ' → logprob: -2.9299285411834717
    3. '2' → logprob: -10.05492877960205
    4. '   ' → logprob: -13.55492877960205
    5. '  ' → logprob: -14.05492877960205
    6. '    ' → logprob: -14.86742877960205
    7. '>' → logprob: -15.92992877960205
    8. '```' → logprob: -16.117427825927734
    9. ' n' → logprob: -16.242427825927734
    10. 'n' → logprob: -16.429927825927734

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010664248111424968
    2. ' ' → logprob: -9.375106811523438
    3. 'n' → logprob: -11.500106811523438
    4. '2' → logprob: -11.500106811523438
    5. '   ' → logprob: -15.062606811523438
    6. ' n' → logprob: -15.437606811523438
    7. '>' → logprob: -16.062606811523438
    8. 's' → logprob: -16.312606811523438
    9. 'r' → logprob: -16.437606811523438
    10. '(n' → logprob: -16.562606811523438

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03623662143945694
    2. ':
' → logprob: -3.411236524581909
    3. '       ' → logprob: -6.036236763000488
    4. '           ' → logprob: -8.911236763000488
    5. ' continue' → logprob: -10.411236763000488
    6. '   ' → logprob: -11.286236763000488
    7. 'continue' → logprob: -12.036236763000488
    8. ' :' → logprob: -13.411236763000488
    9. ':return' → logprob: -13.411236763000488
    10. ',' → logprob: -13.536236763000488

Token 114: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07557627558708191
    2. '           ' → logprob: -3.2005763053894043
    3. ':' → logprob: -3.9505763053894043
    4. ' continue' → logprob: -4.950576305389404
    5. '
' → logprob: -5.950576305389404
    6. ':
' → logprob: -6.700576305389404
    7. 'continue' → logprob: -7.075576305389404
    8. ',' → logprob: -8.575575828552246
    9. '   ' → logprob: -9.075575828552246
    10. '        
' → logprob: -9.200575828552246

Token 115: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9060006737709045
    2. ' continue' → logprob: -0.9060006737709045
    3. 'continue' (adapté à ' continue') → logprob: -1.6560006141662598
    4. '	continue' → logprob: -7.90600061416626
    5. '   ' → logprob: -8.156001091003418
    6. '           ' → logprob: -9.031001091003418
    7. '_continue' → logprob: -11.406001091003418
    8. '
' → logprob: -11.781001091003418
    9. 'contin' → logprob: -11.781001091003418
    10. '               ' → logprob: -11.906001091003418

Token 116: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4029845595359802
    2. '       ' → logprob: -1.277984619140625
    3. '<|end|>' → logprob: -3.652984619140625
    4. '        
' → logprob: -4.527984619140625
    5. '    
' → logprob: -5.277984619140625
    6. '  
' → logprob: -5.527984619140625
    7. '   ' → logprob: -5.777984619140625
    8. ' 
' → logprob: -6.277984619140625
    9. '\n' → logprob: -7.027984619140625
    10. '<|end|>' → logprob: -7.902984619140625

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5345847010612488
    2. '
' → logprob: -1.0345847606658936
    3. '   ' → logprob: -3.6595847606658936
    4. '<|end|>' → logprob: -4.5345845222473145
    5. '        
' → logprob: -4.6595845222473145
    6. '    
' → logprob: -5.2845845222473145
    7. '  
' → logprob: -5.7845845222473145
    8. ' 
' → logprob: -6.1595845222473145
    9. '\n' → logprob: -7.9095845222473145
    10. ')' → logprob: -7.9095845222473145

Token 118: ' sub' (ID: 1543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9619184136390686
    2. 'for' → logprob: -1.2119183540344238
    3. ' for' → logprob: -1.2119183540344238
    4. '
' → logprob: -4.836918354034424
    5. '        
' → logprob: -4.961918354034424
    6. '   ' → logprob: -5.211918354034424
    7. ')' → logprob: -7.586918354034424
    8. '  
' → logprob: -7.836918354034424
    9. ' 
' → logprob: -8.086918830871582
    10. '    ' → logprob: -8.336918830871582

Token 119: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.23432837426662445
    2. 'sets' → logprob: -1.8593283891677856
    3. 'm' → logprob: -2.984328269958496
    4. 'set' → logprob: -6.359328269958496
    5. '_masks' → logprob: -7.734328269958496
    6. 'states' → logprob: -9.234328269958496
    7. '_mask' → logprob: -9.359328269958496
    8. 's' → logprob: -9.609328269958496
    9. ' =' → logprob: -9.859328269958496
    10. '   ' → logprob: -10.734328269958496

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014163747429847717
    2. '=' → logprob: -4.264163970947266
    3. ' =
' → logprob: -16.639163970947266
    4. ' ' → logprob: -17.264163970947266
    5. '=
' → logprob: -17.389163970947266
    6. '=sub' → logprob: -17.639163970947266
    7. 'mask' → logprob: -17.889163970947266
    8. ' ' → logprob: -18.014163970947266
    9. 's' → logprob: -18.389163970947266
    10. ' =(' → logprob: -18.514163970947266

Token 121: ' (' (ID: 350)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -1.0630885362625122
    2. 'mask' → logprob: -1.1880885362625122
    3. ' (' → logprob: -1.6880885362625122
    4. ' mask' → logprob: -1.8130885362625122
    5. '(' → logprob: -7.563088417053223
    6. '((' → logprob: -7.813088417053223
    7. ' ((' → logprob: -8.063088417053223
    8. '1' → logprob: -8.313088417053223
    9. '0' → logprob: -9.188088417053223
    10. ' ' → logprob: -9.938088417053223

Token 122: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.00026848804554902017
    2. ' mask' → logprob: -8.750268936157227
    3. '(mask' → logprob: -9.125268936157227
    4. ')' → logprob: -15.125268936157227
    5. '   ' → logprob: -15.250268936157227
    6. ' ' → logprob: -15.625268936157227
    7. '	mask' → logprob: -15.750268936157227
    8. ' (' → logprob: -16.500268936157227
    9. '(' → logprob: -16.750268936157227
    10. '
' → logprob: -17.250268936157227

Token 123: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13118089735507965
    2. ' -' → logprob: -2.131181001663208
    3. ')' → logprob: -5.506180763244629
    4. '   ' → logprob: -9.381180763244629
    5. ' )' → logprob: -10.756180763244629
    6. ' ' → logprob: -11.381180763244629
    7. '1' → logprob: -11.631180763244629
    8. ')-' → logprob: -11.756180763244629
    9. '>>' → logprob: -12.006180763244629
    10. '```' → logprob: -12.006180763244629

Token 124: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008060562540777028
    2. ' ' → logprob: -7.125805854797363
    3. ')' → logprob: -14.000805854797363
    4. '(mask' → logprob: -15.625805854797363
    5. 'mask' → logprob: -15.625805854797363
    6. ' mask' → logprob: -16.25080680847168
    7. '(' → logprob: -16.62580680847168
    8. ' ' → logprob: -16.87580680847168
    9. '
' → logprob: -16.87580680847168
    10. ' (' → logprob: -17.25080680847168

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.77627644513268e-06
    2. 'mask' → logprob: -12.750008583068848
    3. '(mask' → logprob: -12.875008583068848
    4. ' ' → logprob: -13.125008583068848
    5. 'sub' → logprob: -14.750008583068848
    6. '(' → logprob: -14.875008583068848
    7. ')' → logprob: -15.375008583068848
    8. '
' → logprob: -16.250009536743164
    9. '(sub' → logprob: -16.500009536743164
    10. '0' → logprob: -17.000009536743164

Token 126: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028688274323940277
    2. ')&' → logprob: -6.00286865234375
    3. '&' → logprob: -8.25286865234375
    4. ')
' → logprob: -9.75286865234375
    5. ' )' → logprob: -10.00286865234375
    6. ' &' → logprob: -12.25286865234375
    7. ')>>' → logprob: -12.37786865234375
    8. '<|end|>' → logprob: -12.37786865234375
    9. '&
' → logprob: -12.62786865234375
    10. '
' → logprob: -13.12786865234375

Token 127: ' &' (ID: 827)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.043004799634218216
    2. 'mask' → logprob: -3.1680047512054443
    3. '	mask' → logprob: -12.543004989624023
    4. '(mask' → logprob: -13.668004989624023
    5. ' ' → logprob: -14.918004989624023
    6. '_mask' → logprob: -15.043004989624023
    7. ' ' → logprob: -16.168004989624023
    8. 'm' → logprob: -16.543004989624023
    9. '
' → logprob: -17.293004989624023
    10. '   ' → logprob: -18.418004989624023

Token 129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37685924768447876
    2. '<|end|>' → logprob: -1.251859188079834
    3. '<|end|>' → logprob: -3.876859188079834
    4. '       ' → logprob: -6.001859188079834
    5. '  
' → logprob: -6.376859188079834
    6. '+' → logprob: -7.126859188079834
    7. ' 
' → logprob: -7.626859188079834
    8. '    
' → logprob: -7.876859188079834
    9. '\n' → logprob: -8.251859664916992
    10. '        
' → logprob: -8.376859664916992

Token 130: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.35178759694099426
    2. ' while' → logprob: -1.4767875671386719
    3. '       ' → logprob: -2.726787567138672
    4. '<|end|>' → logprob: -6.851787567138672
    5. '   ' → logprob: -7.101787567138672
    6. '	while' → logprob: -7.476787567138672
    7. ')' → logprob: -9.101787567138672
    8. '
' → logprob: -9.976787567138672
    9. 'While' → logprob: -9.976787567138672
    10. ' ' → logprob: -10.226787567138672

Token 132: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.011067395098507404
    2. 'sub' → logprob: -4.5110673904418945
    3. '(sub' → logprob: -10.886067390441895
    4. ' True' → logprob: -14.261067390441895
    5. '	sub' → logprob: -16.13606834411621
    6. '_sub' → logprob: -17.01106834411621
    7. '[sub' → logprob: -17.13606834411621
    8. 'True' → logprob: -17.51106834411621
    9. '=sub' → logprob: -18.13606834411621
    10. ' ' → logprob: -18.63606834411621

Token 133: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.00018077615823131055
    2. '_mask' → logprob: -8.750181198120117
    3. 'm' → logprob: -11.000181198120117
    4. '(mask' → logprob: -13.750181198120117
    5. '	mask' → logprob: -13.750181198120117
    6. 'mas' → logprob: -13.875181198120117
    7. ' mask' → logprob: -14.250181198120117
    8. '_m' → logprob: -14.750181198120117
    9. 'ma' → logprob: -15.250181198120117
    10. 'map' → logprob: -15.750181198120117

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9558773636817932
    2. '=' → logprob: -1.0808773040771484
    3. ':
' → logprob: -2.4558773040771484
    4. '!=' → logprob: -2.4558773040771484
    5. '>' → logprob: -2.8308773040771484
    6. ' !=' → logprob: -4.455877304077148
    7. ' =' → logprob: -4.580877304077148
    8. ' >' → logprob: -4.830877304077148
    9. '<|end|>' → logprob: -6.330877304077148
    10. 'and' → logprob: -6.455877304077148

Token 135: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7719756960868835
    2. '           ' → logprob: -1.0219757556915283
    3. '<|end|>' → logprob: -2.3969757556915283
    4. ':' → logprob: -3.7719757556915283
    5. '<|end|>' → logprob: -4.146975517272949
    6. '
' → logprob: -4.271975517272949
    7. '        
' → logprob: -4.521975517272949
    8. ',' → logprob: -5.146975517272949
    9. ' for' → logprob: -5.521975517272949
    10. '```' → logprob: -5.646975517272949

Token 136: ' left' (ID: 3561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14743180572986603
    2. ',' → logprob: -2.6474318504333496
    3. '=' → logprob: -2.7724318504333496
    4. ' ,' → logprob: -6.27243185043335
    5. '_mask' → logprob: -7.77243185043335
    6. '_weight' → logprob: -8.272431373596191
    7. '_' → logprob: -8.272431373596191
    8. '_width' → logprob: -8.647431373596191
    9. '_space' → logprob: -8.897431373596191
    10. ' ' → logprob: -9.022431373596191

Token 138: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.2519473433494568
    2. 'sub' → logprob: -1.5019474029541016
    3. 'mask' → logprob: -11.751947402954102
    4. ' mask' → logprob: -12.376947402954102
    5. '(sub' → logprob: -12.876947402954102
    6. ' ' → logprob: -13.751947402954102
    7. '[sub' → logprob: -14.001947402954102
    8. '	sub' → logprob: -14.626947402954102
    9. ' ' → logprob: -15.001947402954102
    10. '=sub' → logprob: -15.251947402954102

Token 139: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.0445127372804563e-05
    2. '_mask' → logprob: -12.00001049041748
    3. 'm' → logprob: -13.25001049041748
    4. 'mas' → logprob: -14.00001049041748
    5. 'mark' → logprob: -15.00001049041748
    6. 'max' → logprob: -15.12501049041748
    7. '(mask' → logprob: -15.37501049041748
    8. 'sub' → logprob: -15.75001049041748
    9. 'maks' → logprob: -15.75001049041748
    10. ' mask' → logprob: -16.250009536743164

Token 140: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0890500545501709
    2. '<|end|>' → logprob: -2.714050054550171
    3. ',' → logprob: -4.83905029296875
    4. '
' → logprob: -5.58905029296875
    5. '<|end|>' → logprob: -6.21405029296875
    6. ',
' → logprob: -6.83905029296875
    7. ' ' → logprob: -6.96405029296875
    8. '            
' → logprob: -7.96405029296875
    9. ' and' → logprob: -8.08905029296875
    10. ' right' → logprob: -8.21405029296875

Token 142: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.31353312730789185
    2. ' right' → logprob: -1.313533067703247
    3. '           ' → logprob: -8.313532829284668
    4. '	right' → logprob: -11.688532829284668
    5. '.right' → logprob: -12.688532829284668
    6. ',right' → logprob: -12.688532829284668
    7. '            ' → logprob: -12.813532829284668
    8. '               ' → logprob: -12.938532829284668
    9. '```' → logprob: -13.188532829284668
    10. 'Right' → logprob: -13.688532829284668

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246875032782555
    2. '=' → logprob: -3.7732467651367188
    3. ' =
' → logprob: -13.523246765136719
    4. '=
' → logprob: -16.77324676513672
    5. ' ' → logprob: -17.02324676513672
    6. ',' → logprob: -17.64824676513672
    7. ')' → logprob: -19.14824676513672
    8. '.' → logprob: -19.39824676513672
    9. ' =
' → logprob: -20.14824676513672
    10. '=

' → logprob: -20.27324676513672

Token 144: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.126975879073143
    2. 'mask' → logprob: -2.1269757747650146
    3. '(mask' → logprob: -10.001976013183594
    4. '	mask' → logprob: -13.251976013183594
    5. ' ' → logprob: -14.626976013183594
    6. '_mask' → logprob: -16.251976013183594
    7. ' ' → logprob: -17.001976013183594
    8. '.mask' → logprob: -17.376976013183594
    9. '-mask' → logprob: -18.376976013183594
    10. 'masked' → logprob: -18.376976013183594

Token 145: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.002589096548035741
    2. '^' → logprob: -6.627589225769043
    3. ' -' → logprob: -7.002589225769043
    4. ' ' → logprob: -8.377589225769043
    5. '-' → logprob: -9.752589225769043
    6. ' ' → logprob: -10.377589225769043
    7. ' &' → logprob: -11.752589225769043
    8. ' ^
' → logprob: -11.752589225769043
    9. ' ^=' → logprob: -12.002589225769043
    10. '           ' → logprob: -12.377589225769043

Token 146: ' left' (ID: 3561)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.057334963232278824
    2. 'left' → logprob: -3.1823348999023438
    3. ' sub' → logprob: -4.307334899902344
    4. ' left' → logprob: -7.182334899902344
    5. 'mask' → logprob: -13.057334899902344
    6. '	sub' → logprob: -14.432334899902344
    7. ' ' → logprob: -14.807334899902344
    8. '(sub' → logprob: -15.057334899902344
    9. '   ' → logprob: -15.682334899902344
    10. '[sub' → logprob: -15.682334899902344

Token 147: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.953761875629425
    2. '<|end|>' → logprob: -1.2037618160247803
    3. '           ' → logprob: -1.3287618160247803
    4. '<|end|>' → logprob: -3.0787618160247803
    5. '            
' → logprob: -5.828762054443359
    6. '  
' → logprob: -8.70376205444336
    7. '\n' → logprob: -9.20376205444336
    8. ' 
' → logprob: -9.57876205444336
    9. '```' → logprob: -9.70376205444336
    10. ',' → logprob: -9.95376205444336

Token 148: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1430213451385498
    2. '<|end|>' → logprob: -2.26802134513855
    3. '            
' → logprob: -4.643021583557129
    4. '
' → logprob: -4.643021583557129
    5. '<|end|>' → logprob: -4.768021583557129
    6. '  
' → logprob: -7.643021583557129
    7. ' 
' → logprob: -8.393021583557129
    8. ',' → logprob: -8.893021583557129
    9. '               ' → logprob: -9.018021583557129
    10. '            ' → logprob: -9.268021583557129

Token 149: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6246616840362549
    2. ' for' → logprob: -1.2496616840362549
    3. 'for' → logprob: -1.7496616840362549
    4. ' if' → logprob: -6.749661445617676
    5. '            
' → logprob: -6.749661445617676
    6. 'if' (adapté à ' if') → logprob: -7.624661445617676
    7. 'min' → logprob: -8.874661445617676
    8. '            ' → logprob: -8.999661445617676
    9. 'dp' → logprob: -8.999661445617676
    10. ' new' → logprob: -9.249661445617676

Token 150: ' right' (ID: 1849)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4993475377559662
    2. 'right' → logprob: -1.2493475675582886
    3. ' left' → logprob: -2.999347448348999
    4. ' right' → logprob: -3.374347448348999
    5. 'len' → logprob: -4.874347686767578
    6. 'memo' → logprob: -4.999347686767578
    7. ' memo' → logprob: -6.499347686767578
    8. 'all' → logprob: -6.874347686767578
    9. ' all' → logprob: -6.999347686767578
    10. 'mask' → logprob: -7.124347686767578

Token 151: ' ==' (ID: 951)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030621424317359924
    2. 'in' → logprob: -3.7806215286254883
    3. ':' → logprob: -5.155621528625488
    4. '<|end|>' → logprob: -6.780621528625488
    5. ' and' → logprob: -9.405621528625488
    6. ' !=' → logprob: -9.655621528625488
    7. '!=' → logprob: -9.780621528625488
    8. '<|end|>' → logprob: -10.030621528625488
    9. '):' → logprob: -10.155621528625488
    10. '>:' → logprob: -10.280621528625488

Token 152: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '           ' → logprob: -19.50002098083496
    4. '۰' → logprob: -19.62502098083496
    5. '

' → logprob: -19.87502098083496
    6. '
' → logprob: -19.87502098083496
    7. '   ' → logprob: -20.00002098083496
    8. 'mask' → logprob: -20.87502098083496
    9. '    ' → logprob: -21.12502098083496
    10. ' ' → logprob: -21.62502098083496

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -19.000036239624023
    4. 'mask' → logprob: -19.375036239624023
    5. '۰' → logprob: -19.875036239624023
    6. '```' → logprob: -20.750036239624023
    7. '           ' → logprob: -21.000036239624023
    8. 'empty' → logprob: -21.500036239624023
    9. '    ' → logprob: -21.625036239624023
    10. ' mask' → logprob: -21.625036239624023

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3139907717704773
    2. ' or' → logprob: -2.063990831375122
    3. ':
' → logprob: -2.063990831375122
    4. '               ' → logprob: -4.313990592956543
    5. ' and' → logprob: -6.563990592956543
    6. '           ' → logprob: -7.688990592956543
    7. ' :' → logprob: -9.438990592956543
    8. ',' → logprob: -9.563990592956543
    9. '<|end|>' → logprob: -10.313990592956543
    10. ':

' → logprob: -10.438990592956543

Token 155: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001194990472868085
    2. '                
' → logprob: -7.251194953918457
    3. '           ' → logprob: -8.876194953918457
    4. '
' → logprob: -9.126194953918457
    5. '```' → logprob: -9.501194953918457
    6. '            
' → logprob: -10.126194953918457
    7. '<|end|>' → logprob: -10.126194953918457
    8. '    
' → logprob: -11.876194953918457
    9. '{
' → logprob: -12.001194953918457
    10. '                ' → logprob: -12.126194953918457

Token 156: ' sub' (ID: 1543)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02221999131143093
    2. ' sub' → logprob: -4.272220134735107
    3. ' break' → logprob: -5.397220134735107
    4. ' continue' → logprob: -6.772220134735107
    5. ' pass' → logprob: -7.272220134735107
    6. '   ' → logprob: -7.772220134735107
    7. '           ' → logprob: -7.772220134735107
    8. 'sub' (adapté à ' sub') → logprob: -8.39721965789795
    9. '                   ' → logprob: -9.14721965789795
    10. '                ' → logprob: -9.52221965789795

Token 157: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.003884750185534358
    2. 'sub' → logprob: -6.878884792327881
    3. '_mask' → logprob: -6.878884792327881
    4. 'bit' → logprob: -8.003884315490723
    5. 'split' → logprob: -8.003884315490723
    6. 'map' → logprob: -9.003884315490723
    7. 'block' → logprob: -9.003884315490723
    8. 'tab' → logprob: -9.128884315490723
    9. '	mask' → logprob: -9.378884315490723
    10. '           ' → logprob: -9.503884315490723

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25741881132125854
    2. ' =' → logprob: -1.5074188709259033
    3. ' -=' → logprob: -5.757418632507324
    4. '-=' → logprob: -6.132418632507324
    5. ' &=' → logprob: -9.507418632507324
    6. '+=' → logprob: -10.757418632507324
    7. ' +=' → logprob: -11.382418632507324
    8. ' ' → logprob: -11.507418632507324
    9. 'break' → logprob: -11.757418632507324
    10. ' >>=' → logprob: -12.632418632507324

Token 159: ' (' (ID: 350)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.09472402185201645
    2. ' (' → logprob: -2.46972393989563
    3. '(mask' → logprob: -5.594724178314209
    4. '(right' → logprob: -6.969724178314209
    5. '(left' → logprob: -7.094724178314209
    6. '(next' → logprob: -9.21972370147705
    7. '(' → logprob: -10.09472370147705
    8. ' ' → logprob: -10.34472370147705
    9. '(substr' → logprob: -10.71972370147705
    10. '(prev' → logprob: -11.21972370147705

Token 160: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.07943309098482132
    2. '(sub' → logprob: -2.5794332027435303
    3. 'mask' → logprob: -8.20443344116211
    4. 'left' → logprob: -8.82943344116211
    5. ' sub' → logprob: -9.70443344116211
    6. '(mask' → logprob: -10.45443344116211
    7. ' (' → logprob: -11.20443344116211
    8. '(left' → logprob: -11.82943344116211
    9. '[sub' → logprob: -12.45443344116211
    10. '	sub' → logprob: -13.45443344116211

Token 161: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0021333713084459305
    2. '-' → logprob: -6.752133369445801
    3. 'sub' → logprob: -7.502133369445801
    4. '(mask' → logprob: -8.2521333694458
    5. '(sub' → logprob: -10.2521333694458
    6. '_mask' → logprob: -10.5021333694458
    7. ' -' → logprob: -11.3771333694458
    8. '((' → logprob: -11.5021333694458
    9. '   ' → logprob: -11.8771333694458
    10. '```' → logprob: -12.0021333694458

Token 162: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01815052703022957
    2. ' -' → logprob: -4.018150329589844
    3. 'sub' → logprob: -15.518150329589844
    4. '```' → logprob: -15.768150329589844
    5. ' ' → logprob: -16.393150329589844
    6. ' ' → logprob: -16.518150329589844
    7. '   ' → logprob: -17.393150329589844
    8. '(sub' → logprob: -17.393150329589844
    9. '-sub' → logprob: -18.268150329589844
    10. '     ' → logprob: -18.643150329589844

Token 163: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.908022285439074e-05
    2. ' ' → logprob: -9.750059127807617
    3. ')' → logprob: -14.375059127807617
    4. '
' → logprob: -16.750059127807617
    5. '```' → logprob: -17.125059127807617
    6. '           ' → logprob: -17.250059127807617
    7. '   ' → logprob: -17.375059127807617
    8. '                   ' → logprob: -18.750059127807617
    9. ' ' → logprob: -19.062559127807617
    10. ' )' → logprob: -19.125059127807617

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.500027656555176
    3. ')' → logprob: -14.875027656555176
    4. '```' → logprob: -17.875028610229492
    5. '
' → logprob: -18.000028610229492
    6. '   ' → logprob: -18.312528610229492
    7. '<|end|>' → logprob: -18.812528610229492
    8. ' )' → logprob: -19.250028610229492
    9. 'mask' → logprob: -19.312528610229492
    10. '           ' → logprob: -19.500028610229492

Token 165: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028386341873556376
    2. ')&' → logprob: -5.877838611602783
    3. ' )' → logprob: -10.627839088439941
    4. '&' → logprob: -12.127839088439941
    5. ' &' → logprob: -12.752839088439941
    6. ')
' → logprob: -15.002839088439941
    7. '           ' → logprob: -15.127839088439941
    8. '
' → logprob: -16.377838134765625
    9. '&)' → logprob: -16.377838134765625
    10. ' ' → logprob: -17.002838134765625

Token 166: ' &' (ID: 827)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005360163748264313
    2. '           ' → logprob: -5.630360126495361
    3. '<|end|>' → logprob: -6.880360126495361
    4. '<|end|>' → logprob: -8.50536060333252
    5. '                   ' → logprob: -9.38036060333252
    6. ';' → logprob: -9.63036060333252
    7. 'continue' → logprob: -9.75536060333252
    8. ' continue' → logprob: -9.88036060333252
    9. '
' → logprob: -9.88036060333252
    10. ' ' → logprob: -10.13036060333252

Token 167: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.005233882926404476
    2. ' mask' → logprob: -5.2552337646484375
    3. '(mask' → logprob: -17.255233764648438
    4. '	mask' → logprob: -18.005233764648438
    5. '   ' → logprob: -21.005233764648438
    6. '
' → logprob: -21.505233764648438
    7. ' ' → logprob: -21.630233764648438
    8. '_mask' → logprob: -22.255233764648438
    9. 'm' → logprob: -22.255233764648438
    10. 'MASK' → logprob: -22.880233764648438

Token 168: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004688034241553396
    2. '           ' → logprob: -7.750468730926514
    3. '       ' → logprob: -11.125469207763672
    4. 'continue' → logprob: -12.125469207763672
    5. '<|end|>' → logprob: -12.250469207763672
    6. ' continue' → logprob: -12.375469207763672
    7. '                   ' → logprob: -13.125469207763672
    8. '   ' → logprob: -13.750469207763672
    9. '	           ' → logprob: -13.875469207763672
    10. ' ' → logprob: -14.125469207763672

Token 169: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013773757964372635
    2. '               ' → logprob: -6.751377582550049
    3. '<|end|>' → logprob: -9.12637710571289
    4. '<|end|>' → logprob: -10.50137710571289
    5. '            
' → logprob: -10.87637710571289
    6. '```' → logprob: -10.87637710571289
    7. '       ' → logprob: -11.25137710571289
    8. 'else' → logprob: -12.87637710571289
    9. '                   ' → logprob: -13.12637710571289
    10. 'import' → logprob: -13.25137710571289

Token 170: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003714569378644228
    2. 'continue' (adapté à ' continue') → logprob: -6.128714561462402
    3. ' continue' → logprob: -6.878714561462402
    4. '           ' → logprob: -7.628714561462402
    5. '	continue' → logprob: -12.878714561462402
    6. '       ' → logprob: -12.878714561462402
    7. '                   ' → logprob: -13.128714561462402
    8. '_continue' → logprob: -13.878714561462402
    9. ' ' → logprob: -14.378714561462402
    10. '	           ' → logprob: -14.628714561462402

Token 171: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001716827624477446
    2. '            
' → logprob: -7.126716613769531
    3. '
' → logprob: -8.001716613769531
    4. '<|end|>' → logprob: -8.001716613769531
    5. '<|end|>' → logprob: -9.501716613769531
    6. ' for' → logprob: -10.126716613769531
    7. 'for' → logprob: -10.126716613769531
    8. '  
' → logprob: -10.626716613769531
    9. ' 
' → logprob: -11.376716613769531
    10. '```' → logprob: -11.501716613769531

Token 172: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001086874515749514
    2. '
' → logprob: -7.626086711883545
    3. '            
' → logprob: -8.126087188720703
    4. ' for' → logprob: -9.126087188720703
    5. 'for' → logprob: -9.126087188720703
    6. '<|end|>' → logprob: -10.751087188720703
    7. ' 
' → logprob: -11.001087188720703
    8. '  
' → logprob: -11.376087188720703
    9. '```' → logprob: -11.751087188720703
    10. '       ' → logprob: -12.251087188720703

Token 173: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6551759243011475
    2. '           ' → logprob: -0.7801759243011475
    3. ' for' → logprob: -3.9051759243011475
    4. '            
' → logprob: -7.405176162719727
    5. '
' → logprob: -7.530176162719727
    6. 'left' → logprob: -7.655176162719727
    7. 'new' → logprob: -7.905176162719727
    8. '   ' → logprob: -10.530176162719727
    9. '       ' → logprob: -10.655176162719727
    10. '#' → logprob: -10.905176162719727

Token 174: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.2080631256103516
    2. 'w' → logprob: -1.3330631256103516
    3. ' wl' → logprob: -1.9580631256103516
    4. 'wl' → logprob: -2.4580631256103516
    5. ' lw' → logprob: -2.5830631256103516
    6. ' weight' → logprob: -2.9580631256103516
    7. 'weight' → logprob: -3.0830631256103516
    8. 'lw' → logprob: -4.083063125610352
    9. 'left' → logprob: -5.083063125610352
    10. ' left' → logprob: -5.583063125610352

Token 175: 'L' (ID: 43)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.008501344360411167
    2. '_l' → logprob: -5.2585015296936035
    3. 'left' → logprob: -6.5085015296936035
    4. ',' → logprob: -7.5085015296936035
    5. ' in' → logprob: -7.6335015296936035
    6. 'l' → logprob: -8.133501052856445
    7. '1' → logprob: -8.633501052856445
    8. ',left' → logprob: -9.133501052856445
    9. '_in' → logprob: -9.633501052856445
    10. 't' → logprob: -10.758501052856445

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016465501859784126
    2. ' ,' → logprob: -4.766465663909912
    3. ',w' → logprob: -5.016465663909912
    4. ' in' → logprob: -7.391465663909912
    5. ',in' → logprob: -8.891465187072754
    6. ',W' → logprob: -9.266465187072754
    7. ',left' → logprob: -9.391465187072754
    8. 'in' → logprob: -9.391465187072754
    9. ',right' → logprob: -10.266465187072754
    10. ',L' → logprob: -10.391465187072754

Token 177: ' width' (ID: 4345)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.692749559879303
    2. 'w' → logprob: -1.8177495002746582
    3. ' width' → logprob: -1.8177495002746582
    4. 'width' → logprob: -2.442749500274658
    5. ' wd' → logprob: -3.817749500274658
    6. ' wl' → logprob: -4.442749500274658
    7. 'wl' → logprob: -4.942749500274658
    8. ' d' → logprob: -5.317749500274658
    9. ' WL' → logprob: -5.317749500274658
    10. 'WL' → logprob: -5.692749500274658

Token 178: 'L' (ID: 43)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008274479769170284
    2. 'in' → logprob: -4.883274555206299
    3. 's' → logprob: -7.383274555206299
    4. '_in' → logprob: -10.25827407836914
    5. ',' → logprob: -12.13327407836914
    6. 'width' → logprob: -13.75827407836914
    7. 'es' → logprob: -14.25827407836914
    8. '1' → logprob: -14.50827407836914
    9. '_' → logprob: -14.75827407836914
    10. '_width' → logprob: -14.88327407836914

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03044394589960575
    2. 'in' → logprob: -3.5304439067840576
    3. ',' → logprob: -7.280444145202637
    4. ' ' → logprob: -13.905444145202637
    5. 's' → logprob: -14.030444145202637
    6. ',in' → logprob: -14.530444145202637
    7. '	in' → logprob: -14.780444145202637
    8. '_in' → logprob: -15.030444145202637
    9. ' ,' → logprob: -15.155444145202637
    10. '.' → logprob: -15.280444145202637

Token 180: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.03365710750222206
    2. ' memo' → logprob: -3.4086570739746094
    3. 'm' → logprob: -12.28365707397461
    4. 'memory' → logprob: -13.15865707397461
    5. 'mem' → logprob: -13.40865707397461
    6. '.memo' → logprob: -14.03365707397461
    7. '
' → logprob: -14.78365707397461
    8. '```' → logprob: -15.03365707397461
    9. ' in' → logprob: -15.40865707397461
    10. ' ' → logprob: -15.53365707397461

Token 181: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.00012308525037951767
    2. '[' → logprob: -9.125123023986816
    3. '[sub' → logprob: -11.250123023986816
    4. 'left' → logprob: -14.375123023986816
    5. '[right' → logprob: -16.125123977661133
    6. '[m' → logprob: -16.125123977661133
    7. '[mid' → logprob: -16.375123977661133
    8. 'mask' → logprob: -16.625123977661133
    9. '[mem' → logprob: -16.750123977661133
    10. '```' → logprob: -17.875123977661133

Token 182: '].' (ID: 1651)
  Prédit: '.items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.06119988113641739
    2. '].' → logprob: -2.936199903488159
    3. 'items' → logprob: -5.18619966506958
    4. '.' → logprob: -8.561200141906738
    5. ':].' → logprob: -8.936200141906738
    6. '}.' → logprob: -9.061200141906738
    7. ':' → logprob: -9.436200141906738
    8. ' items' → logprob: -9.686200141906738
    9. ']:' → logprob: -10.436200141906738
    10. '       ' → logprob: -11.061200141906738

Token 183: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -1.7432603272027336e-06
    2. ' items' → logprob: -13.500001907348633
    3. '.items' → logprob: -15.250001907348633
    4. '_items' → logprob: -20.000001907348633
    5. '```' → logprob: -20.250001907348633
    6. '	items' → logprob: -20.375001907348633
    7. 'values' → logprob: -22.375001907348633
    8. ' ' → logprob: -22.375001907348633
    9. 'item' → logprob: -22.500001907348633
    10. '(items' → logprob: -22.750001907348633

Token 184: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005751936114393175
    2. '():
' → logprob: -7.500575065612793
    3. ':' → logprob: -11.375575065612793
    4. ' ():' → logprob: -11.875575065612793
    5. '()' → logprob: -13.000575065612793
    6. '(' → logprob: -13.875575065612793
    7. '):' → logprob: -15.375575065612793
    8. '():
' → logprob: -15.875575065612793
    9. '();' → logprob: -17.00057601928711
    10. '():

' → logprob: -17.00057601928711

Token 185: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1536712497472763
    2. ' ' → logprob: -2.4036712646484375
    3. '<|end|>' → logprob: -3.6536712646484375
    4. '                ' → logprob: -4.5286712646484375
    5. ' for' → logprob: -5.5286712646484375
    6. '            ' → logprob: -5.7786712646484375
    7. ' ' → logprob: -6.4036712646484375
    8. '           ' → logprob: -6.4036712646484375
    9. '        ' → logprob: -6.6536712646484375
    10. '                
' → logprob: -6.9036712646484375

Token 186: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17645487189292908
    2. '               ' → logprob: -2.176454782485962
    3. '                   ' → logprob: -3.551454782485962
    4. '                ' → logprob: -4.676455020904541
    5. 'for' (adapté à ' for') → logprob: -4.801455020904541
    6. ' ' → logprob: -7.426455020904541
    7. '           ' → logprob: -7.426455020904541
    8. '            ' → logprob: -8.426454544067383
    9. '   ' → logprob: -9.301454544067383
    10. '<|end|>' → logprob: -9.426454544067383

Token 187: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.06995721906423569
    2. 'w' → logprob: -2.6949572563171387
    3. ',w' → logprob: -12.31995677947998
    4. ',' → logprob: -12.81995677947998
    5. '(w' → logprob: -12.81995677947998
    6. '_w' → logprob: -13.19495677947998
    7. ' ' → logprob: -13.31995677947998
    8. ''w' → logprob: -13.44495677947998
    9. '	w' → logprob: -14.06995677947998
    10. 'weight' → logprob: -14.44495677947998

Token 188: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -9.150362166110426e-05
    2. ',' → logprob: -9.375091552734375
    3. ',R' → logprob: -12.875091552734375
    4. ' R' → logprob: -13.500091552734375
    5. '```' → logprob: -14.250091552734375
    6. 'w' → logprob: -14.500091552734375
    7. 'M' → logprob: -15.375091552734375
    8. 'S' → logprob: -15.625091552734375
    9. '_,' → logprob: -15.750091552734375
    10. 'K' → logprob: -16.000091552734375

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009171743295155466
    2. ' ,' → logprob: -7.000916957855225
    3. ' in' → logprob: -12.750917434692383
    4. ',width' → logprob: -13.375917434692383
    5. ',
' → logprob: -15.125917434692383
    6. ',value' → logprob: -15.375917434692383
    7. '<|end|>' → logprob: -15.375917434692383
    8. ',w' → logprob: -15.875917434692383
    9. '‌,' → logprob: -16.125917434692383
    10. 's' → logprob: -16.250917434692383

Token 190: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.20143750309944153
    2. 'width' → logprob: -1.7014374732971191
    3. ' ' → logprob: -11.326437950134277
    4. ',width' → logprob: -12.951437950134277
    5. 'Width' → logprob: -13.326437950134277
    6. '(width' → logprob: -13.576437950134277
    7. '_width' → logprob: -13.826437950134277
    8. ';width' → logprob: -13.826437950134277
    9. '<|end|>' → logprob: -14.201437950134277
    10. ' widths' → logprob: -14.326437950134277

Token 191: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -6.158350151963532e-05
    2. ',' → logprob: -9.750061988830566
    3. ' R' → logprob: -12.875061988830566
    4. ' ' → logprob: -14.875061988830566
    5. ' in' → logprob: -15.750061988830566
    6. ',R' → logprob: -15.750061988830566
    7. 'r' → logprob: -17.12506103515625
    8. ')' → logprob: -17.87506103515625
    9. '```' → logprob: -18.12506103515625
    10. ' ,' → logprob: -18.12506103515625

Token 192: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009336447343230247
    2. 'in' → logprob: -4.759336471557617
    3. ',' → logprob: -7.259336471557617
    4. ' ' → logprob: -12.009336471557617
    5. '<|end|>' → logprob: -12.759336471557617
    6. ' ,' → logprob: -13.009336471557617
    7. '	in' → logprob: -13.509336471557617
    8. 's' → logprob: -13.759336471557617
    9. ')' → logprob: -14.134336471557617
    10. 'In' → logprob: -14.259336471557617

Token 193: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.47414037585258484
    2. ' memo' → logprob: -0.9741404056549072
    3. ' ' → logprob: -11.224140167236328
    4. 'm' → logprob: -11.224140167236328
    5. '.memo' → logprob: -11.224140167236328
    6. '   ' → logprob: -12.099140167236328
    7. '[m' → logprob: -12.474140167236328
    8. '  ' → logprob: -13.224140167236328
    9. '    ' → logprob: -13.224140167236328
    10. '     ' → logprob: -13.474140167236328

Token 194: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -2.5941604690160602e-05
    2. '[' → logprob: -10.625025749206543
    3. 'right' → logprob: -13.625025749206543
    4. '[
' → logprob: -16.00002670288086
    5. ' [' → logprob: -16.62502670288086
    6. '[r' → logprob: -17.25002670288086
    7. '[left' → logprob: -18.00002670288086
    8. ',right' → logprob: -18.25002670288086
    9. '```' → logprob: -18.25002670288086
    10. ':right' → logprob: -18.62502670288086

Token 195: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.009301720187067986
    2. '.items' → logprob: -5.384301662445068
    3. 'items' → logprob: -6.509301662445068
    4. '().' → logprob: -6.759301662445068
    5. '()].' → logprob: -6.884301662445068
    6. ']' → logprob: -7.634301662445068
    7. ').' → logprob: -9.009302139282227
    8. ']:' → logprob: -9.134302139282227
    9. ''].' → logprob: -9.634302139282227
    10. ' items' → logprob: -9.759302139282227

Token 196: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -5.438573680294212e-06
    2. '.items' → logprob: -12.625005722045898
    3. ' items' → logprob: -13.125005722045898
    4. '	items' → logprob: -17.5000057220459
    5. 'keys' → logprob: -19.2500057220459
    6. ' ' → logprob: -19.3750057220459
    7. '(items' → logprob: -19.7500057220459
    8. '```' → logprob: -19.8750057220459
    9. 'tems' → logprob: -20.2500057220459
    10. '_items' → logprob: -20.5000057220459

Token 197: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.20235224068164825
    2. '():
' → logprob: -1.7023522853851318
    3. '()' → logprob: -7.077352046966553
    4. ' ():' → logprob: -10.077352523803711
    5. '():
' → logprob: -10.452352523803711
    6. '():

' → logprob: -11.702352523803711
    7. '(' → logprob: -11.952352523803711
    8. ':' → logprob: -12.702352523803711
    9. '()>' → logprob: -13.452352523803711
    10. '()):
' → logprob: -14.077352523803711

Token 198: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.043237823992967606
    2. '               ' → logprob: -4.543237686157227
    3. '<|end|>' → logprob: -4.918237686157227
    4. '                ' → logprob: -5.418237686157227
    5. '                           ' → logprob: -5.543237686157227
    6. '                    ' → logprob: -5.793237686157227
    7. ',' → logprob: -5.793237686157227
    8. '           ' → logprob: -5.918237686157227
    9. '                    
' → logprob: -6.543237686157227
    10. ' ' → logprob: -6.668237686157227

Token 199: ' W' (ID: 486)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8288503289222717
    2. '                   ' → logprob: -1.453850269317627
    3. ' if' → logprob: -2.328850269317627
    4. ' new' → logprob: -2.328850269317627
    5. '#' → logprob: -4.453850269317627
    6. 'if' → logprob: -4.578850269317627
    7. '                        
' → logprob: -4.578850269317627
    8. ' width' → logprob: -4.703850269317627
    9. ' max' → logprob: -4.828850269317627
    10. ' w' → logprob: -5.078850269317627

Token 200: 'sum' (ID: 12298)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0847041606903076
    2. '_new' → logprob: -1.2097041606903076
    3. '=' → logprob: -2.0847041606903076
    4. '_sum' → logprob: -2.9597041606903076
    5. '_total' → logprob: -2.9597041606903076
    6. '_comb' → logprob: -3.3347041606903076
    7. 'new' → logprob: -3.4597041606903076
    8. 'sum' → logprob: -4.084704399108887
    9. '_' → logprob: -4.334704399108887
    10. 'total' → logprob: -4.959704399108887

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935622096061707
    2. ' =' → logprob: -0.6935622096061707
    3. '=w' → logprob: -7.818562030792236
    4. ',' → logprob: -11.818562507629395
    5. '=W' → logprob: -13.568562507629395
    6. ')' → logprob: -13.568562507629395
    7. 'w' → logprob: -14.443562507629395
    8. '.' → logprob: -15.318562507629395
    9. ' ' → logprob: -15.443562507629395
    10. ' w' → logprob: -15.693562507629395

Token 202: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3133031725883484
    2. ' w' → logprob: -1.3133032321929932
    3. '(w' → logprob: -10.938302993774414
    4. '=w' → logprob: -11.438302993774414
    5. 'abs' → logprob: -12.688302993774414
    6. '_w' → logprob: -13.188302993774414
    7. '	w' → logprob: -13.188302993774414
    8. ' ' → logprob: -13.438302993774414
    9. '<w' → logprob: -14.313302993774414
    10. '+w' → logprob: -14.938302993774414

Token 203: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00011117222311440855
    2. 'w' → logprob: -9.37511157989502
    3. ' L' → logprob: -11.37511157989502
    4. 'W' → logprob: -12.12511157989502
    5. '+' → logprob: -12.75011157989502
    6. ' +' → logprob: -13.87511157989502
    7. '[' → logprob: -14.00011157989502
    8. '[L' → logprob: -14.25011157989502
    9. 's' → logprob: -14.37511157989502
    10. '[w' → logprob: -14.37511157989502

Token 204: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3598085343837738
    2. ' +' → logprob: -1.2348085641860962
    3. '+w' → logprob: -4.484808444976807
    4. '+r' → logprob: -11.859808921813965
    5. '+
' → logprob: -12.109808921813965
    6. '*' → logprob: -12.859808921813965
    7. ' +
' → logprob: -13.734808921813965
    8. 'w' → logprob: -14.109808921813965
    9. '*w' → logprob: -14.734808921813965
    10. '-' → logprob: -14.984808921813965

Token 205: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.008615754544734955
    2. ' w' → logprob: -4.758615970611572
    3. 'W' → logprob: -13.883615493774414
    4. '	w' → logprob: -16.383615493774414
    5. '_w' → logprob: -16.633615493774414
    6. ''w' → logprob: -16.758615493774414
    7. ' ' → logprob: -17.133615493774414
    8. '<|end|>' → logprob: -17.133615493774414
    9. '+w' → logprob: -18.383615493774414
    10. '=w' → logprob: -19.008615493774414

Token 206: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -2.8087270038668066e-05
    2. 'w' → logprob: -11.125027656555176
    3. '<|end|>' → logprob: -11.625027656555176
    4. 'L' → logprob: -13.250027656555176
    5. ' R' → logprob: -13.625027656555176
    6. '_R' → logprob: -14.500027656555176
    7. '[' → logprob: -15.750027656555176
    8. 'W' → logprob: -15.875027656555176
    9. ')' → logprob: -16.375028610229492
    10. '&R' → logprob: -16.625028610229492

Token 207: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.29488515853881836
    2. '<|end|>' → logprob: -1.9198851585388184
    3. ',' → logprob: -3.1698851585388184
    4. '+' → logprob: -3.5448851585388184
    5. ')' → logprob: -4.919885158538818
    6. '                    ' → logprob: -5.169885158538818
    7. '*' → logprob: -5.669885158538818
    8. ' +' → logprob: -5.669885158538818
    9. '                    
' → logprob: -5.794885158538818
    10. '#' → logprob: -6.044885158538818

Token 208: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06231832131743431
    2. '                    
' → logprob: -3.8123183250427246
    3. ' ' → logprob: -4.312318325042725
    4. '                    ' → logprob: -4.437318325042725
    5. '<|end|>' → logprob: -5.437318325042725
    6. '
' → logprob: -6.437318325042725
    7. ' 
' → logprob: -6.687318325042725
    8. '                     
' → logprob: -7.062318325042725
    9. '               ' → logprob: -7.312318325042725
    10. ',' → logprob: -7.437318325042725

Token 209: ' #' (ID: 1069)
  Prédit: ' width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' width' → logprob: -1.5898053646087646
    2. 'width' → logprob: -1.7148053646087646
    3. ' if' → logprob: -1.8398053646087646
    4. '                   ' → logprob: -1.9648053646087646
    5. 'if' → logprob: -2.2148053646087646
    6. ' max' → logprob: -3.0898053646087646
    7. ' new' → logprob: -3.7148053646087646
    8. ' d' → logprob: -4.089805603027344
    9. 'd' → logprob: -4.339805603027344
    10. 'max' → logprob: -4.589805603027344

Token 210: ' Calculate' (ID: 38942)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7657859325408936
    2. 'width' → logprob: -1.5157859325408936
    3. 'if' → logprob: -2.3907859325408936
    4. 'dist' → logprob: -3.5157859325408936
    5. 'd' → logprob: -3.6407859325408936
    6. 'offset' → logprob: -4.140786170959473
    7. 'max' → logprob: -4.140786170959473
    8. ' new' → logprob: -4.140786170959473
    9. 'w' → logprob: -4.265786170959473
    10. 'cost' → logprob: -4.640786170959473

Token 211: ' distances' (ID: 48294)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.9545001983642578
    2. ' width' → logprob: -0.9545001983642578
    3. ' max' → logprob: -2.454500198364258
    4. 'width' → logprob: -2.954500198364258
    5. 'new' → logprob: -3.829500198364258
    6. ' dist' → logprob: -4.704500198364258
    7. ' spacing' → logprob: -5.204500198364258
    8. ' d' → logprob: -5.329500198364258
    9. ' w' → logprob: -5.454500198364258
    10. ' center' → logprob: -5.579500198364258

Token 212: ' a' (ID: 261)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010919421911239624
    2. '                    
' → logprob: -5.385919570922852
    3. '                    ' → logprob: -5.760919570922852
    4. ',' → logprob: -6.760919570922852
    5. '               ' → logprob: -7.760919570922852
    6. '<|end|>' → logprob: -8.385919570922852
    7. ' ' → logprob: -8.885919570922852
    8. ' =' → logprob: -9.010919570922852
    9. '                     
' → logprob: -9.260919570922852
    10. '           ' → logprob: -9.510919570922852

Token 213: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0321832112967968
    2. '=' → logprob: -3.5321831703186035
    3. ' ' → logprob: -6.6571831703186035
    4. ',' → logprob: -7.7821831703186035
    5. 'b' → logprob: -8.657183647155762
    6. '_' → logprob: -9.407183647155762
    7. '  ' → logprob: -9.407183647155762
    8. 'verage' → logprob: -9.532183647155762
    9. ' +=' → logprob: -10.157183647155762
    10. '_b' → logprob: -10.407183647155762

Token 214: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07895137369632721
    2. ' b' → logprob: -2.578951358795166
    3. 'r' → logprob: -10.578951835632324
    4. 'd' → logprob: -11.203951835632324
    5. ' d' → logprob: -11.953951835632324
    6. ' ' → logprob: -12.328951835632324
    7. ' r' → logprob: -12.453951835632324
    8. 'a' → logprob: -13.078951835632324
    9. '```' → logprob: -13.828951835632324
    10. ' W' → logprob: -13.953951835632324

Token 215: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.028025679290294647
    2. '                    
' → logprob: -4.0280256271362305
    3. '                    ' → logprob: -5.5280256271362305
    4. 'a' → logprob: -6.1530256271362305
    5. ',' → logprob: -7.0280256271362305
    6. '               ' → logprob: -7.9030256271362305
    7. '                        
' → logprob: -8.40302562713623
    8. '                     
' → logprob: -8.40302562713623
    9. '                   
' → logprob: -8.65302562713623
    10. '<|end|>' → logprob: -8.90302562713623

Token 216: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008181075565516949
    2. '                    
' → logprob: -5.133181095123291
    3. '                    ' → logprob: -6.633181095123291
    4. '               ' → logprob: -8.758180618286133
    5. 'a' → logprob: -8.883180618286133
    6. ',' → logprob: -9.383180618286133
    7. '       ' → logprob: -9.633180618286133
    8. '           ' → logprob: -9.883180618286133
    9. '<|end|>' → logprob: -9.883180618286133
    10. ' ' → logprob: -10.008180618286133

Token 217: ' a' (ID: 261)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15738385915756226
    2. 'a' (adapté à ' a') → logprob: -2.282383918762207
    3. ' a' → logprob: -3.282383918762207
    4. '                    ' → logprob: -5.907383918762207
    5. '           ' → logprob: -7.157383918762207
    6. '               ' → logprob: -7.657383918762207
    7. '                    
' → logprob: -8.157383918762207
    8. 'b' → logprob: -8.157383918762207
    9. '       ' → logprob: -8.532383918762207
    10. '```' → logprob: -8.657383918762207

Token 218: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11285137385129929
    2. '=' → logprob: -2.23785138130188
    3. ',' → logprob: -10.7378511428833
    4. '_space' → logprob: -13.1128511428833
    5. ' =
' → logprob: -13.1128511428833
    6. ' ' → logprob: -13.6128511428833
    7. 'space' → logprob: -14.6128511428833
    8. 'a' → logprob: -15.1128511428833
    9. '1' → logprob: -15.8628511428833
    10. '_' → logprob: -15.9878511428833

Token 219: ' w' (ID: 286)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.7523915767669678
    2. '(width' → logprob: -2.0023915767669678
    3. ' (' → logprob: -2.1273915767669678
    4. 'w' → logprob: -2.1273915767669678
    5. '(W' → logprob: -2.6273915767669678
    6. 'width' → logprob: -3.6273915767669678
    7. 'W' → logprob: -4.252391815185547
    8. ' w' → logprob: -4.502391815185547
    9. ' W' → logprob: -4.877391815185547
    10. '((' → logprob: -4.877391815185547

Token 220: 'R' (ID: 49)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -5.431207682704553e-05
    2. 'R' → logprob: -9.875054359436035
    3. '[' → logprob: -13.625054359436035
    4. ' L' → logprob: -14.500054359436035
    5. '<|end|>' → logprob: -15.125054359436035
    6. 'a' → logprob: -15.250054359436035
    7. '[L' → logprob: -16.00005340576172
    8. 'l' → logprob: -16.00005340576172
    9. '```' → logprob: -16.62505340576172
    10. 'w' → logprob: -16.62505340576172

Token 221: ' /' (ID: 820)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3146510422229767
    2. '*' → logprob: -1.3146510124206543
    3. '*w' → logprob: -7.689651012420654
    4. ' /' → logprob: -8.064651489257812
    5. '*a' → logprob: -8.689651489257812
    6. '*r' → logprob: -8.814651489257812
    7. '*(' → logprob: -8.814651489257812
    8. '/' → logprob: -9.189651489257812
    9. '*s' → logprob: -11.689651489257812
    10. '*b' → logprob: -11.689651489257812

Token 222: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.17373497784137726
    2. '(W' → logprob: -1.9237350225448608
    3. '(' → logprob: -4.42373514175415
    4. ' (' → logprob: -7.17373514175415
    5. ' W' → logprob: -7.79873514175415
    6. '(w' → logprob: -8.923734664916992
    7. '(r' → logprob: -9.298734664916992
    8. '   ' → logprob: -12.048734664916992
    9. ' ' → logprob: -12.548734664916992
    10. '2' → logprob: -13.048734664916992

Token 223: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.023251185193657875
    2. 'W' → logprob: -3.8982512950897217
    3. '(W' → logprob: -6.023251056671143
    4. '(sum' → logprob: -8.6482515335083
    5. '(' → logprob: -10.0232515335083
    6. 'Sum' → logprob: -10.6482515335083
    7. '_sum' → logprob: -11.3982515335083
    8. '   ' → logprob: -12.3982515335083
    9. ' sum' → logprob: -12.5232515335083
    10. '[' → logprob: -12.5232515335083

Token 224: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.025395574048161507
    2. ' 
' → logprob: -5.400395393371582
    3. ' ' → logprob: -5.775395393371582
    4. '<|end|>' → logprob: -5.775395393371582
    5. '                    
' → logprob: -6.150395393371582
    6. '                    ' → logprob: -6.400395393371582
    7. ',' → logprob: -6.400395393371582
    8. '+' → logprob: -6.400395393371582
    9. ' +' → logprob: -6.775395393371582
    10. '                     
' → logprob: -6.900395393371582

Token 225: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.021923929452896118
    2. '                    
' → logprob: -4.021924018859863
    3. ' 
' → logprob: -7.021924018859863
    4. '
' → logprob: -7.021924018859863
    5. '                    ' → logprob: -7.896924018859863
    6. '                     
' → logprob: -8.146924018859863
    7. ',' → logprob: -8.521924018859863
    8. '                   
' → logprob: -8.646924018859863
    9. '                        
' → logprob: -9.021924018859863
    10. '           ' → logprob: -9.396924018859863

Token 226: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.3426491618156433
    2. ' b' → logprob: -1.467649221420288
    3. '                   ' → logprob: -2.842649221420288
    4. '                    ' → logprob: -7.217648983001709
    5. '                    
' → logprob: -7.842648983001709
    6. ' ' → logprob: -9.717649459838867
    7. '               ' → logprob: -10.217649459838867
    8. '           ' → logprob: -10.717649459838867
    9. ' 
' → logprob: -11.092649459838867
    10. '       ' → logprob: -11.217649459838867

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009762583300471306
    2. '=' → logprob: -4.634762763977051
    3. '=w' → logprob: -12.88476276397705
    4. ' ' → logprob: -13.13476276397705
    5. '<|end|>' → logprob: -13.75976276397705
    6. 'w' → logprob: -14.75976276397705
    7. ')' → logprob: -15.13476276397705
    8. 'a' → logprob: -16.259761810302734
    9. ' =
' → logprob: -16.259761810302734
    10. ',' → logprob: -17.009761810302734

Token 228: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.11292068660259247
    2. ' w' → logprob: -2.2379207611083984
    3. '1' → logprob: -9.487920761108398
    4. 'W' → logprob: -11.487920761108398
    5. ' ' → logprob: -12.112920761108398
    6. '0' → logprob: -12.987920761108398
    7. 'a' → logprob: -13.362920761108398
    8. ' W' → logprob: -14.112920761108398
    9. ' a' → logprob: -15.237920761108398
    10. '(w' → logprob: -15.362920761108398

Token 229: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.843177233240567e-05
    2. 'R' → logprob: -12.250018119812012
    3. 'l' → logprob: -12.750018119812012
    4. ' L' → logprob: -12.875018119812012
    5. '   ' → logprob: -13.500018119812012
    6. 'a' → logprob: -13.625018119812012
    7. 'w' → logprob: -13.875018119812012
    8. '```' → logprob: -14.000018119812012
    9. '
' → logprob: -14.875018119812012
    10. '_L' → logprob: -14.937518119812012

Token 230: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3868767023086548
    2. '/' → logprob: -1.1368767023086548
    3. ' /
' → logprob: -13.261877059936523
    4. ' ' → logprob: -13.386877059936523
    5. ')' → logprob: -15.011877059936523
    6. '/(' → logprob: -15.261877059936523
    7. '+' → logprob: -15.261877059936523
    8. '=' → logprob: -15.511877059936523
    9. ' /=' → logprob: -15.761877059936523
    10. '/
' → logprob: -15.761877059936523

Token 231: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0024756586644798517
    2. ' W' → logprob: -6.002475738525391
    3. ' ' → logprob: -19.62747573852539
    4. '                   ' → logprob: -19.87747573852539
    5. '   ' → logprob: -19.87747573852539
    6. 'w' → logprob: -20.00247573852539
    7. '[' → logprob: -20.25247573852539
    8. '(W' → logprob: -20.37747573852539
    9. '_W' → logprob: -20.87747573852539
    10. '	W' → logprob: -20.87747573852539

Token 232: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.2664456789934775e-06
    2. ' sum' → logprob: -14.500000953674316
    3. 'W' → logprob: -15.500000953674316
    4. 'Sum' → logprob: -15.750000953674316
    5. '_sum' → logprob: -16.500001907348633
    6. '(sum' → logprob: -16.750001907348633
    7. 'sup' → logprob: -17.125001907348633
    8. 's' → logprob: -17.125001907348633
    9. 'S' → logprob: -17.250001907348633
    10. '   ' → logprob: -17.875001907348633

Token 233: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01773509941995144
    2. '                    
' → logprob: -4.892735004425049
    3. '<|end|>' → logprob: -5.142735004425049
    4. '
' → logprob: -6.392735004425049
    5. ',' → logprob: -7.392735004425049
    6. '                    ' → logprob: -7.892735004425049
    7. '               ' → logprob: -8.267735481262207
    8. '                   
' → logprob: -8.767735481262207
    9. ' 
' → logprob: -9.017735481262207
    10. '                        
' → logprob: -9.142735481262207

Token 234: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.042040567845106125
    2. '                    
' → logprob: -3.6670405864715576
    3. '
' → logprob: -4.2920403480529785
    4. ' 
' → logprob: -8.042040824890137
    5. '                    ' → logprob: -8.417040824890137
    6. '                   
' → logprob: -8.542040824890137
    7. '                        
' → logprob: -8.667040824890137
    8. '               ' → logprob: -8.917040824890137
    9. '                     
' → logprob: -9.042040824890137
    10. '<|end|>' → logprob: -9.167040824890137

Token 235: ' width' (ID: 4345)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.719316303730011
    2. 'width' (adapté à ' width') → logprob: -1.7193162441253662
    3. '                   ' → logprob: -1.8443162441253662
    4. ' new' → logprob: -2.219316244125366
    5. ' width' → logprob: -3.969316244125366
    6. 'dist' → logprob: -5.094316482543945
    7. 'total' → logprob: -5.094316482543945
    8. 'w' → logprob: -5.219316482543945
    9. 'combined' → logprob: -5.219316482543945
    10. 'max' → logprob: -5.719316482543945

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07988432049751282
    2. '=' → logprob: -2.5798842906951904
    3. '_new' → logprob: -7.3298845291137695
    4. ' +' → logprob: -9.45488452911377
    5. '+' → logprob: -9.57988452911377
    6. 'new' → logprob: -10.07988452911377
    7. ' +=' → logprob: -10.07988452911377
    8. '_' → logprob: -10.20488452911377
    9. 'New' → logprob: -10.95488452911377
    10. ' new' → logprob: -11.57988452911377

Token 237: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.26507294178009033
    2. 'max' → logprob: -1.5150729417800903
    3. ' width' → logprob: -5.390072822570801
    4. 'a' → logprob: -5.640072822570801
    5. ' max' → logprob: -5.890072822570801
    6. '1' → logprob: -7.640072822570801
    7. 'w' → logprob: -8.0150728225708
    8. 'r' → logprob: -8.3900728225708
    9. '(width' → logprob: -8.3900728225708
    10. '0' → logprob: -8.5150728225708

Token 238: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.7709680795669556
    2. ' +' → logprob: -0.7709680795669556
    3. '+' → logprob: -2.645967960357666
    4. '[' → logprob: -6.020967960357666
    5. ' L' → logprob: -8.395968437194824
    6. 'R' → logprob: -8.395968437194824
    7. ' ' → logprob: -8.770968437194824
    8. ',' → logprob: -9.145968437194824
    9. '   ' → logprob: -9.270968437194824
    10. ' +
' → logprob: -9.520968437194824

Token 239: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932374238967896
    2. ' +' → logprob: -0.6932374238967896
    3. '+a' → logprob: -10.3182373046875
    4. ' +
' → logprob: -11.0682373046875
    5. '+
' → logprob: -11.0682373046875
    6. '+b' → logprob: -11.1932373046875
    7. '                   ' → logprob: -12.0682373046875
    8. '+w' → logprob: -13.4432373046875
    9. '+r' → logprob: -14.4432373046875
    10. ' +
' → logprob: -14.5682373046875

Token 240: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.04259682074189186
    2. ' width' → logprob: -3.4175968170166016
    3. 'w' → logprob: -5.042596817016602
    4. 'a' → logprob: -6.542596817016602
    5. 'max' → logprob: -7.917596817016602
    6. 'W' → logprob: -8.417596817016602
    7. 'b' → logprob: -9.042596817016602
    8. ' w' → logprob: -9.417596817016602
    9. ' max' → logprob: -10.042596817016602
    10. ' a' → logprob: -10.042596817016602

Token 241: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00035727277281694114
    2. 'L' → logprob: -8.500357627868652
    3. ' +' → logprob: -9.250357627868652
    4. '+' → logprob: -10.500357627868652
    5. ',' → logprob: -11.500357627868652
    6. ' R' → logprob: -12.500357627868652
    7. ')' → logprob: -13.000357627868652
    8. '   ' → logprob: -13.000357627868652
    9. ' ' → logprob: -13.000357627868652
    10. '  ' → logprob: -13.125357627868652

Token 242: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6945412158966064
    2. ' +' → logprob: -0.6945412158966064
    3. '                   ' → logprob: -6.694540977478027
    4. '+a' → logprob: -9.944540977478027
    5. '+r' → logprob: -11.194540977478027
    6. '+
' → logprob: -11.319540977478027
    7. '<|end|>' → logprob: -11.694540977478027
    8. '+s' → logprob: -11.819540977478027
    9. '[' → logprob: -11.944540977478027
    10. ' +
' → logprob: -12.194540977478027

Token 243: ' a' (ID: 261)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.49916934967041016
    2. '2' → logprob: -0.9991693496704102
    3. '1' → logprob: -3.99916934967041
    4. 'a' → logprob: -5.62416934967041
    5. ' r' → logprob: -6.49916934967041
    6. ' ' → logprob: -7.12416934967041
    7. 'abs' → logprob: -8.49916934967041
    8. '   ' → logprob: -9.99916934967041
    9. ' a' → logprob: -10.12416934967041
    10. '(r' → logprob: -10.49916934967041

Token 244: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.615779459476471
    2. ' +' → logprob: -1.2407793998718262
    3. '*' → logprob: -2.615779399871826
    4. '+b' → logprob: -3.240779399871826
    5. '<|end|>' → logprob: -3.615779399871826
    6. '*b' → logprob: -4.115779399871826
    7. ' *' → logprob: -4.490779399871826
    8. '<|end|>' → logprob: -6.740779399871826
    9. '+r' → logprob: -7.615779399871826
    10. 'b' → logprob: -7.990779399871826

Token 245: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1002078503370285
    2. ' b' → logprob: -2.350207805633545
    3. ' ' → logprob: -14.225208282470703
    4. '1' → logprob: -14.475208282470703
    5. ' ' → logprob: -19.225208282470703
    6. '	b' → logprob: -19.225208282470703
    7. '0' → logprob: -19.225208282470703
    8. 'a' → logprob: -19.475208282470703
    9. '2' → logprob: -19.600208282470703
    10. '    ' → logprob: -19.975208282470703

Token 246: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21769455075263977
    2. '
' → logprob: -1.8426945209503174
    3. '                    
' → logprob: -3.7176945209503174
    4. '           ' → logprob: -5.0926947593688965
    5. '<|end|>' → logprob: -6.5926947593688965
    6. '               ' → logprob: -7.0926947593688965
    7. ' 
' → logprob: -7.0926947593688965
    8. '            
' → logprob: -7.3426947593688965
    9. '                        
' → logprob: -7.4676947593688965
    10. '
' → logprob: -7.7176947593688965

Token 247: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5564801096916199
    2. '
' → logprob: -1.1814801692962646
    3. '                    
' → logprob: -2.9314801692962646
    4. '<|end|>' → logprob: -3.8064801692962646
    5. '\n' → logprob: -4.3064799308776855
    6. ' 
' → logprob: -5.3064799308776855
    7. '                        
' → logprob: -5.9314799308776855
    8. '               ' → logprob: -5.9314799308776855
    9. ' if' → logprob: -6.1814799308776855
    10. '                           ' → logprob: -6.1814799308776855

Token 248: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5449337959289551
    2. '                   ' → logprob: -1.169933795928955
    3. 'if' → logprob: -2.294933795928955
    4. '                    
' → logprob: -5.794933795928955
    5. '
' → logprob: -6.294933795928955
    6. ' key' → logprob: -6.544933795928955
    7. ' for' → logprob: -7.294933795928955
    8. 'for' → logprob: -8.294933319091797
    9. '           ' → logprob: -8.419933319091797
    10. '               ' → logprob: -8.419933319091797

Token 249: ' Insert' (ID: 34954)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0809565857052803
    2. 'for' → logprob: -3.8309566974639893
    3. 'prev' → logprob: -4.33095645904541
    4. ' if' → logprob: -4.33095645904541
    5. 'existing' → logprob: -4.83095645904541
    6. 'old' → logprob: -5.08095645904541
    7. '                   ' → logprob: -5.08095645904541
    8. 'current' → logprob: -5.70595645904541
    9. 'key' → logprob: -6.45595645904541
    10. 'cur' → logprob: -6.95595645904541

Token 250: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.33981621265411377
    2. ' if' → logprob: -1.4648162126541138
    3. ' existing' → logprob: -3.714816093444824
    4. 'if' → logprob: -4.464816093444824
    5. ' for' → logprob: -4.589816093444824
    6. '
' → logprob: -5.964816093444824
    7. '                    
' → logprob: -6.089816093444824
    8. 'existing' → logprob: -6.214816093444824
    9. ' keys' → logprob: -7.214816093444824
    10. 'for' → logprob: -7.339816093444824

Token 251: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0013528565177693963
    2. 'w' → logprob: -6.876352787017822
    3. ' W' → logprob: -8.25135326385498
    4. 'width' → logprob: -11.25135326385498
    5. '                   ' → logprob: -11.50135326385498
    6. ')' → logprob: -12.00135326385498
    7. 'int' → logprob: -12.00135326385498
    8. '
' → logprob: -12.12635326385498
    9. 'if' → logprob: -12.37635326385498
    10. '   ' → logprob: -12.87635326385498

Token 252: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -4.008129963040119e-06
    2. ')' → logprob: -13.250003814697266
    3. ',' → logprob: -13.500003814697266
    4. ' sum' → logprob: -15.250003814697266
    5. ',sum' → logprob: -15.250003814697266
    6. '_sum' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.625003814697266
    8. '(sum' → logprob: -17.000003814697266
    9. 's' → logprob: -17.125003814697266
    10. '  ' → logprob: -17.875003814697266

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023168133571743965
    2. ')' → logprob: -4.523168087005615
    3. ' ,' → logprob: -4.523168087005615
    4. ',
' → logprob: -7.273168087005615
    5. ' in' → logprob: -9.023168563842773
    6. ']' → logprob: -9.398168563842773
    7. ',)' → logprob: -9.648168563842773
    8. ' )' → logprob: -10.023168563842773
    9. '                   ' → logprob: -10.148168563842773
    10. ' into' → logprob: -10.398168563842773

Token 254: ' width' (ID: 4345)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.39870744943618774
    2. ' min' → logprob: -1.648707389831543
    3. 'width' → logprob: -2.398707389831543
    4. ' width' → logprob: -3.523707389831543
    5. 'max' → logprob: -4.648707389831543
    6. ')' → logprob: -5.398707389831543
    7. ' max' → logprob: -6.273707389831543
    8. 'w' → logprob: -10.648707389831543
    9. ' )' → logprob: -10.773707389831543
    10. '{' → logprob: -11.461207389831543

Token 255: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06608351320028305
    2. ',' → logprob: -2.9410834312438965
    3. ' )' → logprob: -5.3160834312438965
    4. ')
' → logprob: -6.0660834312438965
    5. ']' → logprob: -7.0660834312438965
    6. ',
' → logprob: -7.1910834312438965
    7. '])' → logprob: -7.5660834312438965
    8. '                   ' → logprob: -7.9410834312438965
    9. '):
' → logprob: -8.441083908081055
    10. '),' → logprob: -9.066083908081055

Token 256: ' into' (ID: 1511)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016626957803964615
    2. '                    
' → logprob: -5.516626834869385
    3. '
' → logprob: -5.641626834869385
    4. ',' → logprob: -6.266626834869385
    5. ' into' → logprob: -6.266626834869385
    6. '           ' → logprob: -6.891626834869385
    7. '               ' → logprob: -7.266626834869385
    8. ')' → logprob: -7.391626834869385
    9. ' in' → logprob: -7.641626834869385
    10. ' if' → logprob: -8.016627311706543

Token 257: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.10077688097953796
    2. ' memo' → logprob: -2.3507769107818604
    3. '                   ' → logprob: -8.600776672363281
    4. '
' → logprob: -9.225776672363281
    5. 'if' → logprob: -9.850776672363281
    6. '{' → logprob: -10.350776672363281
    7. '               ' → logprob: -10.475776672363281
    8. '{
' → logprob: -10.600776672363281
    9. '                    
' → logprob: -11.100776672363281
    10. '                       ' → logprob: -11.100776672363281

Token 258: '[' (ID: 58)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0713275894522667
    2. '[' → logprob: -3.3213276863098145
    3. '[token' → logprob: -4.1963276863098145
    4. '           ' → logprob: -4.5713276863098145
    5. '.setdefault' → logprob: -6.0713276863098145
    6. '               ' → logprob: -6.1963276863098145
    7. '                    
' → logprob: -7.4463276863098145
    8. '[m' → logprob: -8.071327209472656
    9. '[next' → logprob: -8.196327209472656
    10. '                       ' → logprob: -8.321327209472656

Token 259: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.4498052223643754e-05
    2. '[' → logprob: -11.500014305114746
    3. ' mask' → logprob: -12.375014305114746
    4. '
' → logprob: -17.000015258789062
    5. '   ' → logprob: -17.250015258789062
    6. '(mask' → logprob: -18.000015258789062
    7. '	mask' → logprob: -18.000015258789062
    8. '_mask' → logprob: -19.875015258789062
    9. '][' → logprob: -20.000015258789062
    10. ')' → logprob: -20.500015258789062

Token 260: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0850257873535156
    2. '                   ' → logprob: -1.3350257873535156
    3. ',' → logprob: -1.8350257873535156
    4. '.setdefault' → logprob: -1.8350257873535156
    5. ')' → logprob: -3.2100257873535156
    6. '[' → logprob: -4.710025787353516
    7. ':' → logprob: -5.710025787353516
    8. '],' → logprob: -5.835025787353516
    9. '):
' → logprob: -5.960025787353516
    10. '].' → logprob: -5.960025787353516

Token 261: ' keep' (ID: 3357)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007995541207492352
    2. '                       ' → logprob: -5.88299560546875
    3. '
' → logprob: -6.25799560546875
    4. '                    
' → logprob: -7.25799560546875
    5. 'existing' → logprob: -7.88299560546875
    6. 'if' → logprob: -7.88299560546875
    7. '               ' → logprob: -8.00799560546875
    8. '           ' → logprob: -8.00799560546875
    9. 'prev' → logprob: -8.38299560546875
    10. '                    ' → logprob: -8.63299560546875

Token 262: ' only' (ID: 1606)
  Prédit: ' only'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.5438482761383057
    2. 'only' → logprob: -0.9188482761383057
    3. 'memo' → logprob: -5.668848037719727
    4. 'min' → logprob: -5.793848037719727
    5. '                   ' → logprob: -5.793848037719727
    6. ' the' → logprob: -6.668848037719727
    7. ' memo' → logprob: -6.668848037719727
    8. ')' → logprob: -6.668848037719727
    9. 'minimal' → logprob: -6.668848037719727
    10. 'the' → logprob: -6.793848037719727

Token 263: ' widest' (ID: 122664)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.5853525400161743
    2. 'the' → logprob: -1.7103525400161743
    3. 'best' → logprob: -2.0853524208068848
    4. ' keys' → logprob: -2.3353524208068848
    5. 'keys' → logprob: -2.4603524208068848
    6. 'if' → logprob: -2.5853524208068848
    7. '                       ' → logprob: -2.9603524208068848
    8. 'minimal' → logprob: -3.2103524208068848
    9. 'entries' → logprob: -3.8353524208068848
    10. 'those' → logprob: -3.9603524208068848

Token 264: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7096154093742371
    2. ',' → logprob: -1.4596154689788818
    3. 'if' → logprob: -3.084615468978882
    4. '                   ' → logprob: -3.209615468978882
    5. '           ' → logprob: -3.584615468978882
    6. ')' → logprob: -3.584615468978882
    7. ' keys' → logprob: -3.834615468978882
    8. '=' → logprob: -4.459615230560303
    9. '   ' → logprob: -4.584615230560303
    10. '               ' → logprob: -4.834615230560303

Token 265: ' each' (ID: 2454)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.056806109845638275
    2. ' W' → logprob: -2.9318060874938965
    3. 'w' → logprob: -6.3068060874938965
    4. ' w' → logprob: -10.556806564331055
    5. 'width' → logprob: -10.931806564331055
    6. '   ' → logprob: -11.056806564331055
    7. '```' → logprob: -12.181806564331055
    8. ' ' → logprob: -12.431806564331055
    9. ' the' → logprob: -12.431806564331055
    10. 'each' → logprob: -12.556806564331055

Token 266: ' weight' (ID: 6049)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.3134094774723053
    2. ' W' → logprob: -1.313409447669983
    3. 'w' → logprob: -9.063409805297852
    4. ' w' → logprob: -11.313409805297852
    5. '                   ' → logprob: -11.938409805297852
    6. '```' → logprob: -12.438409805297852
    7. '    ' → logprob: -13.563409805297852
    8. '               ' → logprob: -13.688409805297852
    9. '           ' → logprob: -13.688409805297852
    10. ' ' → logprob: -14.438409805297852

Token 267: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018656350672245026
    2. '           ' → logprob: -4.768656253814697
    3. '
' → logprob: -6.018656253814697
    4. ',' → logprob: -6.018656253814697
    5. '               ' → logprob: -6.268656253814697
    6. '                    
' → logprob: -6.643656253814697
    7. '       ' → logprob: -7.018656253814697
    8. ',
' → logprob: -8.268656730651855
    9. '                       ' → logprob: -9.518656730651855
    10. '                    ' → logprob: -9.643656730651855

Token 268: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.021283794194459915
    2. '                    
' → logprob: -4.7712836265563965
    3. '           ' → logprob: -5.0212836265563965
    4. '               ' → logprob: -6.6462836265563965
    5. ',' → logprob: -7.0212836265563965
    6. '                    ' → logprob: -7.2712836265563965
    7. '       ' → logprob: -7.6462836265563965
    8. '
' → logprob: -7.7712836265563965
    9. ' 
' → logprob: -7.7712836265563965
    10. ' ' → logprob: -8.396284103393555

Token 269: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36267536878585815
    2. ' if' → logprob: -1.362675428390503
    3. '                   ' → logprob: -3.362675428390503
    4. 'existing' → logprob: -5.237675189971924
    5. 'prev' → logprob: -5.487675189971924
    6. ' existing' → logprob: -6.112675189971924
    7. 'current' → logprob: -7.362675189971924
    8. 'old' → logprob: -8.112675666809082
    9. '           ' → logprob: -8.112675666809082
    10. ' prev' → logprob: -8.737675666809082

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40261173248291016
    2. 'ict' → logprob: -1.1526117324829102
    3. 'ic' → logprob: -4.90261173248291
    4. '=' → logprob: -5.40261173248291
    5. 'ct' → logprob: -7.27761173248291
    6. 'e' → logprob: -7.65261173248291
    7. 'ata' → logprob: -7.65261173248291
    8. '_' → logprob: -7.90261173248291
    9. 'p' → logprob: -7.90261173248291
    10. '[' → logprob: -8.02761173248291

Token 271: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.0005558936391025782
    2. ' memo' → logprob: -7.500555992126465
    3. 'm' → logprob: -13.000555992126465
    4. '   ' → logprob: -15.250555992126465
    5. 'mem' → logprob: -15.500555992126465
    6. ' ' → logprob: -15.875555992126465
    7. '.memo' → logprob: -16.75055503845215
    8. 'mime' → logprob: -17.87555503845215
    9. '
' → logprob: -17.87555503845215
    10. 'memory' → logprob: -18.00055503845215

Token 272: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. '[m' → logprob: -14.625001907348633
    3. '[mem' → logprob: -14.875001907348633
    4. '[
' → logprob: -15.375001907348633
    5. 'mask' → logprob: -15.375001907348633
    6. '<|end|>' → logprob: -15.375001907348633
    7. ' [' → logprob: -16.000001907348633
    8. ')[' → logprob: -17.250001907348633
    9. '```' → logprob: -17.375001907348633
    10. '[token' → logprob: -17.750001907348633

Token 273: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.12500286102295
    3. ' mask' → logprob: -14.12500286102295
    4. '
' → logprob: -18.500001907348633
    5. '(mask' → logprob: -18.500001907348633
    6. '	mask' → logprob: -18.500001907348633
    7. 'm' → logprob: -19.750001907348633
    8. '_mask' → logprob: -20.625001907348633
    9. '   ' → logprob: -21.000001907348633
    10. ']' → logprob: -21.375001907348633

Token 274: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00331650348380208
    2. ']
' → logprob: -5.753316402435303
    3. ']

' → logprob: -9.878316879272461
    4. '.setdefault' → logprob: -10.753316879272461
    5. '<|end|>' → logprob: -11.253316879272461
    6. '
' → logprob: -12.128316879272461
    7. ' ]' → logprob: -12.253316879272461
    8. '][' → logprob: -12.378316879272461
    9. '])' → logprob: -12.378316879272461
    10. ']
' → logprob: -12.503316879272461

Token 275: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0027738476637750864
    2. 'if' → logprob: -7.502773761749268
    3. ' if' → logprob: -7.627773761749268
    4. '           ' → logprob: -7.627773761749268
    5. '       ' → logprob: -7.877773761749268
    6. '               ' → logprob: -8.127774238586426
    7. '   ' → logprob: -9.002774238586426
    8. 'for' → logprob: -9.127774238586426
    9. '```' → logprob: -9.627774238586426
    10. '                    
' → logprob: -9.877774238586426

Token 276: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01012293342500925
    2. ' if' → logprob: -4.760122776031494
    3. '                   ' → logprob: -6.635122776031494
    4. 'prev' → logprob: -8.885123252868652
    5. 'existing' → logprob: -11.385123252868652
    6. 'old' → logprob: -11.510123252868652
    7. '```' → logprob: -11.510123252868652
    8. '               ' → logprob: -12.635123252868652
    9. '                    
' → logprob: -12.635123252868652
    10. 'key' → logprob: -12.760123252868652

Token 277: ' w' (ID: 286)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.08143272995948792
    2. ' W' → logprob: -2.581432819366455
    3. '(W' → logprob: -6.956432819366455
    4. ' (' → logprob: -7.331432819366455
    5. 'w' → logprob: -7.456432819366455
    6. '(' → logprob: -8.956432342529297
    7. '   ' → logprob: -8.956432342529297
    8. '(w' → logprob: -10.331432342529297
    9. ' ' → logprob: -10.956432342529297
    10. ' w' → logprob: -11.081432342529297

Token 278: 'L' (ID: 43)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.23891890048980713
    2. 'W' → logprob: -1.6139189004898071
    3. 'S' → logprob: -4.863918781280518
    4. '_sum' → logprob: -5.613918781280518
    5. 'L' → logprob: -6.988918781280518
    6. 's' → logprob: -7.488918781280518
    7. 'w' → logprob: -8.238919258117676
    8. 'Sum' → logprob: -9.113919258117676
    9. ' sum' → logprob: -10.113919258117676
    10. 'in' → logprob: -10.988919258117676

Token 279: '+w' (ID: 155687)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.46734875440597534
    2. ' not' → logprob: -1.0923488140106201
    3. '+' → logprob: -3.84234881401062
    4. ' +' → logprob: -5.592348575592041
    5. 'in' → logprob: -5.717348575592041
    6. ']' → logprob: -6.092348575592041
    7. ' !=' → logprob: -6.217348575592041
    8. 'not' → logprob: -6.342348575592041
    9. ' ==' → logprob: -6.842348575592041
    10. '==' → logprob: -7.092348575592041

Token 280: 'R' (ID: 49)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00303249410353601
    2. 'R' → logprob: -6.378032684326172
    3. 'um' → logprob: -8.128032684326172
    4. ' not' → logprob: -8.628032684326172
    5. 'in' → logprob: -8.878032684326172
    6. ' sum' → logprob: -9.003032684326172
    7. 's' → logprob: -9.128032684326172
    8. 'S' → logprob: -9.128032684326172
    9. 'Sum' → logprob: -9.628032684326172
    10. 'W' → logprob: -9.753032684326172

Token 281: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.15301144123077393
    2. ' in' → logprob: -2.0280113220214844
    3. 'in' → logprob: -5.278011322021484
    4. ']' → logprob: -5.903011322021484
    5. 'not' → logprob: -6.028011322021484
    6. ')' → logprob: -11.403011322021484
    7. '>' → logprob: -11.403011322021484
    8. ' ]' → logprob: -12.528011322021484
    9. ' ' → logprob: -12.903011322021484
    10. ' >' → logprob: -13.903011322021484

Token 282: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2015974223613739
    2. 'in' → logprob: -1.7015974521636963
    3. ')' → logprob: -9.826597213745117
    4. ' ' → logprob: -9.826597213745117
    5. '<|end|>' → logprob: -10.201597213745117
    6. ']' → logprob: -11.451597213745117
    7. '  ' → logprob: -11.826597213745117
    8. ' not' → logprob: -12.201597213745117
    9. '<|end|>' → logprob: -12.326597213745117
    10. '=' → logprob: -13.451597213745117

Token 283: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06196869537234306
    2. ' d' → logprob: -2.8119688034057617
    3. ')d' → logprob: -14.686968803405762
    4. ' ' → logprob: -15.811968803405762
    5. '>d' → logprob: -16.186967849731445
    6. '	d' → logprob: -16.686967849731445
    7. ')' → logprob: -16.936967849731445
    8. '_d' → logprob: -16.936967849731445
    9. '
' → logprob: -17.186967849731445
    10. ' or' → logprob: -18.186967849731445

Token 284: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.009828811511397362
    2. 'or' → logprob: -4.634829044342041
    3. ':' → logprob: -10.384828567504883
    4. '<|end|>' → logprob: -10.884828567504883
    5. '	or' → logprob: -11.259828567504883
    6. ')' → logprob: -12.759828567504883
    7. ']' → logprob: -13.259828567504883
    8. ' ' → logprob: -13.884828567504883
    9. '.keys' → logprob: -14.259828567504883
    10. ':
' → logprob: -14.884828567504883

Token 285: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5355761647224426
    2. 'width' → logprob: -0.9105761647224426
    3. ' width' → logprob: -5.035576343536377
    4. ' d' → logprob: -6.035576343536377
    5. '                       ' → logprob: -6.410576343536377
    6. '                   ' → logprob: -6.535576343536377
    7. '   ' → logprob: -9.160575866699219
    8. 'w' → logprob: -9.410575866699219
    9. '                           ' → logprob: -9.785575866699219
    10. '       ' → logprob: -10.910575866699219

Token 286: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.023645829409360886
    2. '[' → logprob: -3.8986458778381348
    3. 'w' → logprob: -6.773645877838135
    4. '<w' → logprob: -7.273645877838135
    5. '[d' → logprob: -7.648645877838135
    6. 'W' → logprob: -7.898645877838135
    7. 'd' → logprob: -9.023645401000977
    8. '>w' → logprob: -9.898645401000977
    9. '<W' → logprob: -10.148645401000977
    10. '```' → logprob: -10.398645401000977

Token 287: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.014261290431022644
    2. 'sum' → logprob: -4.264261245727539
    3. 'Sum' → logprob: -10.514261245727539
    4. 'w' → logprob: -10.764261245727539
    5. 'S' → logprob: -11.014261245727539
    6. 'W' → logprob: -11.514261245727539
    7. '_sum' → logprob: -12.139261245727539
    8. '[w' → logprob: -12.139261245727539
    9. '[' → logprob: -13.389261245727539
    10. ']' → logprob: -13.514261245727539

Token 288: '+w' (ID: 155687)
  Prédit: '+w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+w' → logprob: -0.00014442270912695676
    2. '+' → logprob: -9.000144004821777
    3. 'w' → logprob: -11.750144004821777
    4. '[w' → logprob: -12.375144004821777
    5. ']+' → logprob: -12.750144004821777
    6. ' +' → logprob: -12.750144004821777
    7. '+r' → logprob: -14.000144004821777
    8. '<w' → logprob: -14.500144004821777
    9. ']' → logprob: -15.375144004821777
    10. '][' → logprob: -15.500144004821777

Token 289: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.005519157741218805
    2. 'w' → logprob: -5.255519390106201
    3. '+w' → logprob: -8.630518913269043
    4. '+' → logprob: -9.255518913269043
    5. ' R' → logprob: -13.130518913269043
    6. '   ' → logprob: -13.755518913269043
    7. ' w' → logprob: -13.755518913269043
    8. ' +' → logprob: -13.880518913269043
    9. ' ' → logprob: -14.130518913269043
    10. '=w' → logprob: -14.380518913269043

Token 290: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0708312839269638
    2. ' >' → logprob: -3.070831298828125
    3. ']' → logprob: -3.945831298828125
    4. ']>' → logprob: -5.945831298828125
    5. '[' → logprob: -11.070831298828125
    6. '>w' → logprob: -12.195831298828125
    7. '>d' → logprob: -12.445831298828125
    8. ' ]' → logprob: -12.570831298828125
    9. ']>=' → logprob: -13.195831298828125
    10. '>]' → logprob: -13.195831298828125

Token 291: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10053132474422455
    2. ' >' → logprob: -2.3505313396453857
    3. '<' → logprob: -8.600531578063965
    4. '>d' → logprob: -9.725531578063965
    5. ' <' → logprob: -9.850531578063965
    6. '>w' → logprob: -11.475531578063965
    7. '>
' → logprob: -12.475531578063965
    8. '[' → logprob: -13.225531578063965
    9. '>b' → logprob: -13.475531578063965
    10. '><' → logprob: -13.725531578063965

Token 292: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.12693272531032562
    2. ' width' → logprob: -2.1269326210021973
    3. '   ' → logprob: -13.626933097839355
    4. '    ' → logprob: -13.876933097839355
    5. '	width' → logprob: -13.876933097839355
    6. '(width' → logprob: -14.501933097839355
    7. ' ' → logprob: -15.626933097839355
    8. ',width' → logprob: -16.00193214416504
    9. '-width' → logprob: -16.12693214416504
    10. '  ' → logprob: -16.62693214416504

Token 293: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06616897881031036
    2. ':
' → logprob: -3.441169023513794
    3. '                       ' → logprob: -3.691169023513794
    4. ' :' → logprob: -5.441168785095215
    5. '                   ' → logprob: -7.191168785095215
    6. ' :
' → logprob: -7.816168785095215
    7. '                           ' → logprob: -8.066168785095215
    8. '):' → logprob: -8.191168785095215
    9. '):
' → logprob: -8.566168785095215
    10. '                               ' → logprob: -8.941168785095215

Token 294: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01505175232887268
    2. '                   ' → logprob: -5.51505184173584
    3. ' d' → logprob: -5.64005184173584
    4. 'd' → logprob: -5.89005184173584
    5. '                           ' → logprob: -5.89005184173584
    6. '                               ' → logprob: -7.26505184173584
    7. '               ' → logprob: -8.01505184173584
    8. '                        
' → logprob: -8.26505184173584
    9. '       ' → logprob: -8.64005184173584
    10. '           ' → logprob: -8.76505184173584

Token 295: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.6137933135032654
    2. ' d' → logprob: -0.9887933135032654
    3. '                       ' → logprob: -2.61379337310791
    4. '                           ' → logprob: -4.48879337310791
    5. '                   ' → logprob: -7.11379337310791
    6. '                               ' → logprob: -7.98879337310791
    7. '           ' → logprob: -8.48879337310791
    8. '               ' → logprob: -8.61379337310791
    9. '                        
' → logprob: -8.86379337310791
    10. '   ' → logprob: -9.36379337310791

Token 296: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.00011772842844948173
    2. '[' → logprob: -9.250117301940918
    3. 'w' → logprob: -11.875117301940918
    4. '[d' → logprob: -12.125117301940918
    5. '=w' → logprob: -12.625117301940918
    6. '=' → logprob: -14.000117301940918
    7. ' [' → logprob: -14.125117301940918
    8. '[m' → logprob: -14.375117301940918
    9. '[
' → logprob: -14.875117301940918
    10. '<w' → logprob: -15.250117301940918

Token 297: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00011391390580683947
    2. '[w' → logprob: -9.625113487243652
    3. 'l' → logprob: -10.625113487243652
    4. 'w' → logprob: -11.875113487243652
    5. 'sum' → logprob: -12.000113487243652
    6. '[L' → logprob: -12.125113487243652
    7. '[' → logprob: -14.250113487243652
    8. '                   ' → logprob: -14.625113487243652
    9. 'W' → logprob: -14.750113487243652
    10. ']' → logprob: -15.000113487243652

Token 298: '+w' (ID: 155687)
  Prédit: '+w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+w' → logprob: -0.00462688785046339
    2. '+' → logprob: -5.504626750946045
    3. ' +' → logprob: -7.879626750946045
    4. 'w' → logprob: -9.129627227783203
    5. ']' → logprob: -10.254627227783203
    6. '[w' → logprob: -11.254627227783203
    7. '=w' → logprob: -13.004627227783203
    8. ']+' → logprob: -13.379627227783203
    9. '+s' → logprob: -13.879627227783203
    10. '+
' → logprob: -13.879627227783203

Token 299: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.006173367146402597
    2. '+' → logprob: -5.631173133850098
    3. '+w' → logprob: -6.006173133850098
    4. 'w' → logprob: -9.631173133850098
    5. '+r' → logprob: -10.381173133850098
    6. ' R' → logprob: -13.506173133850098
    7. ' +' → logprob: -14.006173133850098
    8. '[R' → logprob: -14.131173133850098
    9. '+
' → logprob: -14.131173133850098
    10. 'sum' → logprob: -14.256173133850098

Token 300: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2507992684841156
    2. '=' → logprob: -1.875799298286438
    3. ']=' → logprob: -3.1257991790771484
    4. ' =' → logprob: -3.7507991790771484
    5. ' ]' → logprob: -6.750799179077148
    6. ')' → logprob: -11.500799179077148
    7. ')=' → logprob: -13.375799179077148
    8. ']+=' → logprob: -13.875799179077148
    9. '']=' → logprob: -14.250799179077148
    10. ' ' → logprob: -14.250799179077148

Token 301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687145709991455
    2. ' =' → logprob: -1.1368714570999146
    3. '=d' → logprob: -15.261871337890625
    4. '=w' → logprob: -16.386871337890625
    5. ']=' → logprob: -16.636871337890625
    6. ')' → logprob: -17.386871337890625
    7. ')=' → logprob: -17.636871337890625
    8. ']' → logprob: -17.636871337890625
    9. '=s' → logprob: -18.386871337890625
    10. ',' → logprob: -18.886871337890625

Token 302: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.2519293427467346
    2. ' width' → logprob: -1.5019292831420898
    3. '                        ' → logprob: -15.87692928314209
    4. '	width' → logprob: -16.251930236816406
    5. '(width' → logprob: -17.376930236816406
    6. '                       ' → logprob: -17.376930236816406
    7. ',width' → logprob: -17.376930236816406
    8. '.width' → logprob: -18.751930236816406
    9. ';width' → logprob: -18.751930236816406
    10. '                    ' → logprob: -19.001930236816406

Token 303: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7215473651885986
    2. '           ' → logprob: -0.7215473651885986
    3. '<|end|>' → logprob: -4.0965471267700195
    4. '                   ' → logprob: -5.8465471267700195
    5. '            
' → logprob: -6.3465471267700195
    6. '<|end|>' → logprob: -6.8465471267700195
    7. '```' → logprob: -6.9715471267700195
    8. '                        
' → logprob: -7.0965471267700195
    9. '               ' → logprob: -7.0965471267700195
    10. '                    
' → logprob: -7.8465471267700195

Token 304: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4336748719215393
    2. '
' → logprob: -1.5586748123168945
    3. '<|end|>' → logprob: -2.5586748123168945
    4. '                   ' → logprob: -3.6836748123168945
    5. '               ' → logprob: -4.8086748123168945
    6. '                        
' → logprob: -4.9336748123168945
    7. '            
' → logprob: -5.1836748123168945
    8. '                    
' → logprob: -5.4336748123168945
    9. '<|end|>' → logprob: -5.6836748123168945
    10. '\n' → logprob: -6.1836748123168945

Token 305: ' sub' (ID: 1543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.204720582696609e-05
    2. 'sub' (adapté à ' sub') → logprob: -10.125052452087402
    3. '
' → logprob: -12.500052452087402
    4. '       ' → logprob: -13.250052452087402
    5. '            
' → logprob: -13.250052452087402
    6. '          ' → logprob: -13.750052452087402
    7. '               ' → logprob: -14.000052452087402
    8. '                   ' → logprob: -14.500052452087402
    9. '```' → logprob: -14.625052452087402
    10. ' sub' → logprob: -15.000052452087402

Token 306: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -3.128163257315464e-07
    2. '_mask' → logprob: -15.375
    3. 'sub' → logprob: -16.875
    4. 'm' → logprob: -17.875
    5. 'emask' → logprob: -18.125
    6. 'mas' → logprob: -18.25
    7. 'sm' → logprob: -19.25
    8. 'mass' → logprob: -20.125
    9. '	mask' → logprob: -20.25
    10. 'masked' → logprob: -20.375

Token 307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '＝' → logprob: -17.913042068481445
    4. '=}' → logprob: -19.163042068481445
    5. '.=' → logprob: -19.288042068481445
    6. '=
' → logprob: -19.288042068481445
    7. '=(' → logprob: -19.288042068481445
    8. '   ' → logprob: -19.788042068481445
    9. ' ' → logprob: -21.538042068481445
    10. '-=' → logprob: -21.913042068481445

Token 308: ' (' (ID: 350)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.20164009928703308
    2. ' (' → logprob: -1.7016401290893555
    3. '(mask' → logprob: -10.076640129089355
    4. '(next' → logprob: -10.201640129089355
    5. ' ' → logprob: -10.451640129089355
    6. '(st' → logprob: -10.701640129089355
    7. '(substr' → logprob: -10.826640129089355
    8. '   ' → logprob: -11.451640129089355
    9. '(' → logprob: -11.951640129089355
    10. '(previous' → logprob: -12.201640129089355

Token 309: 'sub' (ID: 3834)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.12693849205970764
    2. 'sub' → logprob: -2.126938581466675
    3. '[sub' → logprob: -12.126938819885254
    4. ' (' → logprob: -12.876938819885254
    5. ' sub' → logprob: -13.376938819885254
    6. '{sub' → logprob: -15.126938819885254
    7. '	sub' → logprob: -15.376938819885254
    8. '=sub' → logprob: -15.501938819885254
    9. '.sub' → logprob: -16.626937866210938
    10. '_sub' → logprob: -16.876937866210938

Token 310: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.12126923352479935
    2. '(mask' → logprob: -2.9962692260742188
    3. '(sub' → logprob: -3.1212692260742188
    4. ' (' → logprob: -4.746269226074219
    5. 'sub' → logprob: -5.246269226074219
    6. '-' → logprob: -5.621269226074219
    7. '(' → logprob: -7.121269226074219
    8. '_mask' → logprob: -7.621269226074219
    9. '1' → logprob: -7.746269226074219
    10. '((' → logprob: -8.371269226074219

Token 311: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.39110276103019714
    2. ' -' → logprob: -1.1411027908325195
    3. ' (' → logprob: -5.6411027908325195
    4. '(sub' → logprob: -7.5161027908325195
    5. '(' → logprob: -9.51610279083252
    6. ' ' → logprob: -10.51610279083252
    7. '(s' → logprob: -11.14110279083252
    8. ')' → logprob: -13.14110279083252
    9. '=' → logprob: -13.51610279083252
    10. '   ' → logprob: -13.64110279083252

Token 312: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. ')' → logprob: -17.379077911376953
    4. '```' → logprob: -18.129077911376953
    5. '   ' → logprob: -19.129077911376953
    6. ' ' → logprob: -19.504077911376953
    7. '<|end|>' → logprob: -19.504077911376953
    8. '
' → logprob: -19.629077911376953
    9. '  ' → logprob: -21.004077911376953
    10. '１' → logprob: -21.254077911376953

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. ')' → logprob: -16.62510871887207
    4. '   ' → logprob: -17.50010871887207
    5. '```' → logprob: -17.75010871887207
    6. '
' → logprob: -18.37510871887207
    7. '  ' → logprob: -19.62510871887207
    8. '１' → logprob: -20.00010871887207
    9. '    ' → logprob: -20.31260871887207
    10. '۱' → logprob: -20.50010871887207

Token 314: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000504062045365572
    2. ')&' → logprob: -8.000504493713379
    3. ' )' → logprob: -8.750504493713379
    4. '&' → logprob: -11.750504493713379
    5. ' &' → logprob: -13.375504493713379
    6. ' ' → logprob: -15.125504493713379
    7. ')
' → logprob: -17.000503540039062
    8. '&)' → logprob: -17.250503540039062
    9. '&gt' → logprob: -17.375503540039062
    10. ' ' → logprob: -17.500503540039062

Token 315: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.5759730339050293
    2. '&' → logprob: -0.8259730339050293
    3. ')&' → logprob: -11.450973510742188
    4. ' &
' → logprob: -11.575973510742188
    5. '&amp' → logprob: -11.825973510742188
    6. '&
' → logprob: -12.575973510742188
    7. ')' → logprob: -13.950973510742188
    8. '&nbsp' → logprob: -14.700973510742188
    9. ' &)' → logprob: -15.325973510742188
    10. '&s' → logprob: -15.450973510742188

Token 316: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -7.517272024415433e-05
    2. ' mask' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.375075340270996
    4. '(mask' → logprob: -18.12507438659668
    5. '	mask' → logprob: -18.37507438659668
    6. ' ' → logprob: -20.25007438659668
    7. 'm' → logprob: -20.37507438659668
    8. 'mas' → logprob: -21.12507438659668
    9. '
' → logprob: -21.25007438659668
    10. '  ' → logprob: -21.75007438659668

Token 317: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2843813896179199
    2. '<|end|>' → logprob: -1.65938138961792
    3. '   ' → logprob: -3.15938138961792
    4. '    
' → logprob: -4.65938138961792
    5. '

' → logprob: -6.65938138961792
    6. '```' → logprob: -6.90938138961792
    7. '  
' → logprob: -7.53438138961792
    8. 'return' → logprob: -7.53438138961792
    9. 'def' → logprob: -7.90938138961792
    10. '<|end|>' → logprob: -8.159381866455078

Token 319: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 320: ' Keep' (ID: 16835)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3322698771953583
    2. '#' → logprob: -1.9572699069976807
    3. 'import' → logprob: -2.9572699069976807
    4. 'pass' → logprob: -3.9572699069976807
    5. 'for' → logprob: -4.082269668579102
    6. ' for' → logprob: -4.457269668579102
    7. ' pass' → logprob: -4.832269668579102
    8. ' #' → logprob: -5.082269668579102
    9. '
' → logprob: -5.332269668579102
    10. '    
' → logprob: -5.332269668579102

Token 321: ' only' (ID: 1606)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8266884088516235
    2. 'min' → logprob: -2.076688289642334
    3. 'keys' → logprob: -2.076688289642334
    4. ' =' → logprob: -2.326688289642334
    5. '_keys' → logprob: -2.326688289642334
    6. ' keys' → logprob: -2.701688289642334
    7. '       ' → logprob: -2.951688289642334
    8. '{' → logprob: -3.201688289642334
    9. '=' → logprob: -3.451688289642334
    10. 'tokens' → logprob: -3.826688289642334

Token 322: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04675314202904701
    2. '{' → logprob: -3.796753168106079
    3. ' max' → logprob: -4.5467529296875
    4. '{k' → logprob: -5.2967529296875
    5. 'min' → logprob: -5.5467529296875
    6. '   ' → logprob: -6.7967529296875
    7. 'k' → logprob: -7.7967529296875
    8. '{
' → logprob: -7.9217529296875
    9. 'keys' → logprob: -8.2967529296875
    10. 'd' → logprob: -8.5467529296875

Token 323: ' width' (ID: 4345)
  Prédit: '_key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_key' → logprob: -1.9265958070755005
    2. 'd' → logprob: -2.051595687866211
    3. '_width' → logprob: -2.426595687866211
    4. '_keys' → logprob: -2.426595687866211
    5. '_items' → logprob: -2.551595687866211
    6. '_values' → logprob: -2.551595687866211
    7. 'width' → logprob: -2.676595687866211
    8. '   ' → logprob: -2.676595687866211
    9. 'items' → logprob: -2.926595687866211
    10. 'values' → logprob: -3.051595687866211

Token 324: ' per' (ID: 777)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8463443517684937
    2. ' =' → logprob: -1.7213443517684937
    3. '   ' → logprob: -2.596344470977783
    4. ',' → logprob: -2.721344470977783
    5. '       ' → logprob: -2.846344470977783
    6. '=' → logprob: -2.971344470977783
    7. '
' → logprob: -3.721344470977783
    8. '        
' → logprob: -3.846344470977783
    9. 'd' → logprob: -4.346344470977783
    10. 'for' → logprob: -4.596344470977783

Token 325: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.5019012093544006
    2. 'w' → logprob: -1.1269011497497559
    3. ' weight' → logprob: -3.001901149749756
    4. ' w' → logprob: -4.126901149749756
    5. 'memo' → logprob: -6.001901149749756
    6. 'width' → logprob: -7.376901149749756
    7. 'key' → logprob: -7.876901149749756
    8. 'mask' → logprob: -8.001901626586914
    9. 'each' → logprob: -8.876901626586914
    10. ' memo' → logprob: -9.251901626586914

Token 326: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06707379966974258
    2. '   ' → logprob: -2.9420738220214844
    3. '
' → logprob: -5.317073822021484
    4. '        
' → logprob: -5.942073822021484
    5. ',' → logprob: -6.067073822021484
    6. '<|end|>' → logprob: -7.567073822021484
    7. ' for' → logprob: -8.317073822021484
    8. 'd' → logprob: -8.317073822021484
    9. '```' → logprob: -8.692073822021484
    10. '    
' → logprob: -8.817073822021484

Token 327: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.11425858736038208
    2. ' memo' → logprob: -3.1142585277557373
    3. 'd' → logprob: -3.3642585277557373
    4. '{' → logprob: -4.114258766174316
    5. ' d' → logprob: -5.114258766174316
    6. '   ' → logprob: -5.364258766174316
    7. ' ' → logprob: -7.489258766174316
    8. 'list' → logprob: -7.864258766174316
    9. 'mask' → logprob: -7.989258766174316
    10. ' {' → logprob: -8.489258766174316

Token 328: '[' (ID: 58)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7588422298431396
    2. '   ' → logprob: -1.0088422298431396
    3. ' =' → logprob: -2.5088422298431396
    4. '
' → logprob: -3.6338422298431396
    5. '=' → logprob: -4.258842468261719
    6. ' for' → logprob: -4.383842468261719
    7. ',' → logprob: -4.758842468261719
    8. '        
' → logprob: -5.008842468261719
    9. '<|end|>' → logprob: -5.758842468261719
    10. '.keys' → logprob: -6.508842468261719

Token 329: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0004926258116029203
    2. '[' → logprob: -7.625492572784424
    3. ' mask' → logprob: -12.500493049621582
    4. '	mask' → logprob: -15.000493049621582
    5. '(mask' → logprob: -15.500493049621582
    6. ']' → logprob: -16.750492095947266
    7. '   ' → logprob: -17.125492095947266
    8. ')' → logprob: -17.125492095947266
    9. '_mask' → logprob: -17.500492095947266
    10. '
' → logprob: -18.125492095947266

Token 330: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.801100492477417
    2. ')' → logprob: -1.176100492477417
    3. ']' → logprob: -2.051100492477417
    4. '       ' → logprob: -2.426100492477417
    5. ',' → logprob: -4.551100730895996
    6. ')]' → logprob: -5.426100730895996
    7. '<|end|>' → logprob: -5.801100730895996
    8. ')
' → logprob: -6.051100730895996
    9. ' ' → logprob: -6.926100730895996
    10. '}' → logprob: -7.426100730895996

Token 331: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7804432511329651
    2. '       ' → logprob: -0.9054432511329651
    3. '
' → logprob: -2.2804431915283203
    4. '<|end|>' → logprob: -4.40544319152832
    5. '        
' → logprob: -4.65544319152832
    6. ',' → logprob: -5.53044319152832
    7. '```' → logprob: -5.78044319152832
    8. '    
' → logprob: -6.15544319152832
    9. '    ' → logprob: -7.40544319152832
    10. ' ' → logprob: -7.53044319152832

Token 332: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3523156940937042
    2. 'd' → logprob: -1.9773156642913818
    3. '   ' → logprob: -3.602315664291382
    4. 'keys' → logprob: -3.727315664291382
    5. 'temp' → logprob: -3.977315664291382
    6. 'new' → logprob: -4.227315902709961
    7. 'items' → logprob: -4.227315902709961
    8. 'for' → logprob: -4.227315902709961
    9. ' for' → logprob: -4.602315902709961
    10. ' new' → logprob: -4.977315902709961

Token 333: ' No' (ID: 3004)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.2599276304244995
    2. 'new' → logprob: -1.6349276304244995
    3. ' keys' → logprob: -2.259927749633789
    4. '       ' → logprob: -2.384927749633789
    5. 'keys' → logprob: -2.509927749633789
    6. ' items' → logprob: -3.009927749633789
    7. 'items' → logprob: -3.259927749633789
    8. 'weights' → logprob: -3.509927749633789
    9. 'd' → logprob: -3.759927749633789
    10. ' weights' → logprob: -4.509927749633789

Token 334: ' need' (ID: 1309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' because' (ID: 2236)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: ' previous' (ID: 5880)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0030030012130737
    2. 'the' → logprob: -1.6280030012130737
    3. 'memo' → logprob: -1.7530030012130737
    4. 'we' → logprob: -3.2530031204223633
    5. '   ' → logprob: -3.2530031204223633
    6. ' memo' → logprob: -3.3780031204223633
    7. 'dict' → logprob: -3.6280031204223633
    8. ' we' → logprob: -3.7530031204223633
    9. '#' → logprob: -3.8780031204223633
    10. 'd' → logprob: -4.503003120422363

Token 337: ' update' (ID: 4027)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: ' already' (ID: 4279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 339: ' keeps' (ID: 18295)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: ' max' (ID: 2999)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.13903813064098358
    2. 'max' → logprob: -2.6390380859375
    3. ' only' → logprob: -3.1390380859375
    4. 'the' → logprob: -4.3890380859375
    5. 'maximum' → logprob: -6.5140380859375
    6. ' the' → logprob: -7.8890380859375
    7. 'best' → logprob: -8.5140380859375
    8. ' max' → logprob: -9.0140380859375
    9. 'optimal' → logprob: -9.1390380859375
    10. ' maximum' → logprob: -10.0140380859375

Token 341: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 342: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -1.2190958261489868
    2. 'res' → logprob: -1.4690958261489868
    3. 'min' → logprob: -1.4690958261489868
    4. 'result' → logprob: -2.2190957069396973
    5. 'answer' → logprob: -2.8440957069396973
    6. 'ans' → logprob: -3.0940957069396973
    7. 'max' → logprob: -4.469095706939697
    8. '   ' → logprob: -4.969095706939697
    9. 'return' → logprob: -5.469095706939697
    10. 'results' → logprob: -5.969095706939697

Token 344: ' Extract' (ID: 39239)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.8857667446136475
    2. 'res' → logprob: -1.2607667446136475
    3. 'ans' → logprob: -1.7607667446136475
    4. 'result' → logprob: -2.7607667446136475
    5. 'answer' → logprob: -3.2607667446136475
    6. 'min' → logprob: -4.510766983032227
    7. 'max' → logprob: -5.260766983032227
    8. '   ' → logprob: -5.510766983032227
    9. ' best' → logprob: -5.885766983032227
    10. 'results' → logprob: -6.135766983032227

Token 345: ' max' (ID: 2999)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.6294508576393127
    2. 'result' → logprob: -1.879450798034668
    3. 'res' → logprob: -2.129450798034668
    4. 'answer' → logprob: -2.879450798034668
    5. 'ans' → logprob: -3.004450798034668
    6. ' best' → logprob: -3.379450798034668
    7. '   ' → logprob: -3.879450798034668
    8. ' res' → logprob: -4.754450798034668
    9. 'min' → logprob: -5.004450798034668
    10. ' result' → logprob: -5.254450798034668

Token 346: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.20865081250667572
    2. 'max' → logprob: -2.208650827407837
    3. ' width' → logprob: -3.833650827407837
    4. 'result' → logprob: -4.208650588989258
    5. 'ans' → logprob: -4.458650588989258
    6. 'answer' → logprob: -4.833650588989258
    7. '(max' → logprob: -5.458650588989258
    8. ' max' → logprob: -5.458650588989258
    9. 'best' → logprob: -5.958650588989258
    10. 'res' → logprob: -6.083650588989258

Token 347: ' among' (ID: 6200)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32658693194389343
    2. 'max' → logprob: -1.7015869617462158
    3. 'result' → logprob: -2.826586961746216
    4. 'ans' → logprob: -4.326586723327637
    5. '
' → logprob: -4.451586723327637
    6. 'answer' → logprob: -5.576586723327637
    7. 'res' → logprob: -6.576586723327637
    8. ',' → logprob: -6.826586723327637
    9. ' max' → logprob: -6.951586723327637
    10. ' ans' → logprob: -7.076586723327637

Token 348: ' all' (ID: 722)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.004642779938876629
    2. ' memo' → logprob: -5.629642963409424
    3. 'all' → logprob: -8.129642486572266
    4. 'width' → logprob: -8.379642486572266
    5. '   ' → logprob: -9.004642486572266
    6. 'd' → logprob: -9.004642486572266
    7. 'max' → logprob: -9.754642486572266
    8. 'w' → logprob: -10.004642486572266
    9. 'm' → logprob: -10.129642486572266
    10. 'values' → logprob: -10.379642486572266

Token 349: ' weights' (ID: 28460)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -1.0594204664230347
    2. '   ' → logprob: -1.4344204664230347
    3. 'max' → logprob: -2.309420585632324
    4. 'result' → logprob: -2.684420585632324
    5. 'd' → logprob: -2.809420585632324
    6. 'best' → logprob: -3.434420585632324
    7. 'memo' → logprob: -3.434420585632324
    8. 'weights' → logprob: -3.559420585632324
    9. 'results' → logprob: -4.184420585632324
    10. 'keys' → logprob: -4.559420585632324

Token 350: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1504758596420288
    2. 'max' → logprob: -2.4004759788513184
    3. 'result' → logprob: -3.4004759788513184
    4. 'ans' → logprob: -4.525475978851318
    5. 'answer' → logprob: -5.900475978851318
    6. 'res' → logprob: -6.650475978851318
    7. 'best' → logprob: -8.90047550201416
    8. '```' → logprob: -8.90047550201416
    9. '
' → logprob: -9.40047550201416
    10. ' max' → logprob: -9.65047550201416

Token 351: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.00500177126377821
    2. ' memo' → logprob: -5.880001544952393
    3. '   ' → logprob: -6.130001544952393
    4. 'm' → logprob: -11.88000202178955
    5. ' ' → logprob: -12.63000202178955
    6. '
' → logprob: -13.25500202178955
    7. '    
' → logprob: -13.38000202178955
    8. '  ' → logprob: -13.88000202178955
    9. '```' → logprob: -14.38000202178955
    10. '[m' → logprob: -14.38000202178955

Token 352: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04570953920483589
    2. '[r' → logprob: -3.2957096099853516
    3. '[-' → logprob: -5.045709609985352
    4. 'mask' → logprob: -7.545709609985352
    5. 'r' → logprob: -7.795709609985352
    6. '[m' → logprob: -9.295709609985352
    7. '[max' → logprob: -9.545709609985352
    8. '[last' → logprob: -10.670709609985352
    9. '[result' → logprob: -11.045709609985352
    10. '   ' → logprob: -11.045709609985352

Token 353: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.005312023684382439
    2. '(total' → logprob: -5.505311965942383
    3. '[' → logprob: -7.755311965942383
    4. '[-' → logprob: -8.130311965942383
    5. 'mask' → logprob: -8.255311965942383
    6. ' total' → logprob: -9.005311965942383
    7. '   ' → logprob: -9.880311965942383
    8. '-' → logprob: -10.255311965942383
    9. '(' → logprob: -11.755311965942383
    10. 'range' → logprob: -12.005311965942383

Token 354: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.9146995327901095e-05
    2. 'States' → logprob: -11.125019073486328
    3. '_state' → logprob: -13.250019073486328
    4. '_mask' → logprob: -14.125019073486328
    5. '_' → logprob: -14.250019073486328
    6. 'states' → logprob: -14.750019073486328
    7. '
' → logprob: -15.125019073486328
    8. '_masks' → logprob: -15.500019073486328
    9. '[' → logprob: -16.500019073486328
    10. ' States' → logprob: -16.750019073486328

Token 355: '-' (ID: 12)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.12765485048294067
    2. '-' → logprob: -2.127654790878296
    3. '[' → logprob: -7.502655029296875
    4. ' -' → logprob: -8.877655029296875
    5. '[n' → logprob: -10.502655029296875
    6. '{-' → logprob: -13.002655029296875
    7. '[m' → logprob: -13.252655029296875
    8. '[r' → logprob: -14.502655029296875
    9. ']' → logprob: -14.627655029296875
    10. '
' → logprob: -14.877655029296875

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '
' → logprob: -13.62500286102295
    3. ' ' → logprob: -13.75000286102295
    4. '{' → logprob: -15.50000286102295
    5. '-' → logprob: -15.87500286102295
    6. '   ' → logprob: -16.750001907348633
    7. ']' → logprob: -18.000001907348633
    8. '{
' → logprob: -18.000001907348633
    9. '```' → logprob: -18.000001907348633
    10. '`' → logprob: -19.000001907348633

Token 357: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.24928726255893707
    2. ']' → logprob: -1.7492872476577759
    3. '])' → logprob: -3.6242873668670654
    4. '[' → logprob: -3.9992873668670654
    5. '][' → logprob: -7.499287128448486
    6. ']
' → logprob: -7.499287128448486
    7. '[-' → logprob: -8.999287605285645
    8. ']:' → logprob: -9.374287605285645
    9. ']}' → logprob: -9.874287605285645
    10. '])
' → logprob: -10.249287605285645

Token 358: ' not' (ID: 625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02703561633825302
    2. 'max' → logprob: -4.152035713195801
    3. ' max' → logprob: -5.777035713195801
    4. '    
' → logprob: -5.902035713195801
    5. '
' → logprob: -6.402035713195801
    6. ',' → logprob: -7.027035713195801
    7. 'width' → logprob: -7.277035713195801
    8. 'result' → logprob: -7.277035713195801
    9. '```' → logprob: -8.6520357131958
    10. '(max' → logprob: -9.2770357131958

Token 359: ' exceeding' (ID: 85205)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0862356498837471
    2. '>' → logprob: -3.336235761642456
    3. ' exceeding' → logprob: -3.586235761642456
    4. 'greater' → logprob: -4.211235523223877
    5. '   ' → logprob: -6.586235523223877
    6. ' greater' → logprob: -6.961235523223877
    7. '    ' → logprob: -7.586235523223877
    8. '
' → logprob: -7.836235523223877
    9. 'inf' → logprob: -8.586236000061035
    10. ' >' → logprob: -8.586236000061035

Token 360: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014396192505955696
    2. ' r' → logprob: -4.2643961906433105
    3. 'inf' → logprob: -8.514396667480469
    4. ' inf' → logprob: -10.889396667480469
    5. ' ' → logprob: -12.764396667480469
    6. '
' → logprob: -12.889396667480469
    7. '2' → logprob: -13.139396667480469
    8. '   ' → logprob: -13.139396667480469
    9. '1' → logprob: -13.139396667480469
    10. '0' → logprob: -14.764396667480469

Token 361: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.502353310585022
    2. '
' → logprob: -1.002353310585022
    3. '    
' → logprob: -4.752353191375732
    4. 'max' → logprob: -4.752353191375732
    5. ' max' → logprob: -5.377353191375732
    6. ',' → logprob: -6.002353191375732
    7. ',
' → logprob: -7.877353191375732
    8. ' =' → logprob: -8.00235366821289
    9. '```' → logprob: -8.12735366821289
    10. '  
' → logprob: -8.37735366821289

Token 362: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7503368258476257
    2. '   ' → logprob: -1.3753368854522705
    3. 'max' → logprob: -2.1253368854522705
    4. 'best' → logprob: -2.6253368854522705
    5. '
' → logprob: -3.6253368854522705
    6. 'answer' → logprob: -4.750336647033691
    7. '```' → logprob: -4.750336647033691
    8. 'ans' → logprob: -5.250336647033691
    9. ' result' → logprob: -5.250336647033691
    10. '`
' → logprob: -5.250336647033691

Token 363: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2778974771499634
    2. 'ans' → logprob: -1.6528974771499634
    3. 'res' (adapté à ' res') → logprob: -1.7778974771499634
    4. 'best' → logprob: -1.9028974771499634
    5. 'answer' → logprob: -2.152897357940674
    6. 'max' → logprob: -2.902897357940674
    7. '   ' → logprob: -3.902897357940674
    8. 'return' → logprob: -4.277897357940674
    9. ' ans' → logprob: -6.027897357940674
    10. ' best' → logprob: -6.652897357940674

Token 364: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47414135932922363
    2. '=' → logprob: -0.9741413593292236
    3. '=max' → logprob: -10.349141120910645
    4. '   ' → logprob: -10.724141120910645
    5. 'max' → logprob: -12.474141120910645
    6. 's' → logprob: -13.974141120910645
    7. '_' → logprob: -14.099141120910645
    8. ' =
' → logprob: -14.099141120910645
    9. ',' → logprob: -14.224141120910645
    10. '=r' → logprob: -14.474141120910645

Token 365: ' -' (ID: 533)
  Prédit: '-inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-inf' → logprob: -0.20758968591690063
    2. 'max' → logprob: -2.582589626312256
    3. '0' → logprob: -3.082589626312256
    4. '-max' → logprob: -3.457589626312256
    5. ' -' → logprob: -3.582589626312256
    6. 'inf' → logprob: -6.082589626312256
    7. '-in' → logprob: -6.582589626312256
    8. ' max' → logprob: -6.832589626312256
    9. '-' → logprob: -6.957589626312256
    10. '-width' → logprob: -7.457589626312256

Token 366: '1' (ID: 16)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0003034074034076184
    2. '1' → logprob: -8.125303268432617
    3. 'float' → logprob: -12.000303268432617
    4. 'r' → logprob: -14.875303268432617
    5. ' inf' → logprob: -15.250303268432617
    6. 'int' → logprob: -16.000303268432617
    7. 'math' → logprob: -16.500303268432617
    8. '0' → logprob: -16.625303268432617
    9. '
' → logprob: -17.000303268432617
    10. '-inf' → logprob: -17.500303268432617

Token 367: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10355562716722488
    2. ' for' → logprob: -3.228555679321289
    3. '   ' → logprob: -4.228555679321289
    4. 'for' → logprob: -4.353555679321289
    5. ',' → logprob: -4.603555679321289
    6. '=' → logprob: -4.978555679321289
    7. '<|end|>' → logprob: -4.978555679321289
    8. '
' → logprob: -5.978555679321289
    9. ' 
' → logprob: -7.478555679321289
    10. ' ' → logprob: -7.478555679321289

Token 368: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6063829660415649
    2. ' =' → logprob: -1.106382966041565
    3. 'for' → logprob: -2.2313828468322754
    4. '=' → logprob: -4.606382846832275
    5. '```' → logprob: -5.981382846832275
    6. ',' → logprob: -6.606382846832275
    7. ' ' → logprob: -7.231382846832275
    8. '<|end|>' → logprob: -8.106383323669434
    9. ' ,' → logprob: -8.231383323669434
    10. ' ' → logprob: -8.481383323669434

Token 369: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05423885956406593
    2. ' for' → logprob: -3.054238796234131
    3. '   ' → logprob: -5.179238796234131
    4. '
' → logprob: -13.054239273071289
    5. 'd' → logprob: -15.429239273071289
    6. '```' → logprob: -15.554239273071289
    7. '	for' → logprob: -15.679239273071289
    8. ' ' → logprob: -15.804239273071289
    9. '    ' → logprob: -16.42923927307129
    10. '    
' → logprob: -16.55423927307129

Token 370: ' width' (ID: 4345)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.13574156165122986
    2. 'weight' → logprob: -2.1357414722442627
    3. 'width' → logprob: -5.010741710662842
    4. ' w' → logprob: -6.885741710662842
    5. 'W' → logprob: -7.510741710662842
    6. ' weight' → logprob: -7.885741710662842
    7. 'wt' → logprob: -9.885741233825684
    8. 'key' → logprob: -10.385741233825684
    9. ' width' → logprob: -10.510741233825684
    10. '_w' → logprob: -11.510741233825684

Token 371: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004205544013530016
    2. ' in' → logprob: -6.129205703735352
    3. ' ,' → logprob: -6.754205703735352
    4. ',w' → logprob: -7.504205703735352
    5. 'in' → logprob: -8.629205703735352
    6. ',value' → logprob: -10.004205703735352
    7. 'w' → logprob: -11.129205703735352
    8. ',width' → logprob: -11.129205703735352
    9. ',d' → logprob: -12.004205703735352
    10. '_,' → logprob: -12.129205703735352

Token 372: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.002477081725373864
    2. ' memo' → logprob: -6.002477169036865
    3. 'mem' → logprob: -14.502476692199707
    4. '   ' → logprob: -15.127476692199707
    5. 'm' → logprob: -15.502476692199707
    6. 'memory' → logprob: -16.002477645874023
    7. ' ' → logprob: -16.127477645874023
    8. '.memo' → logprob: -16.502477645874023
    9. 'memor' → logprob: -17.502477645874023
    10. 'mime' → logprob: -17.752477645874023

Token 373: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4744337797164917
    2. '[-' → logprob: -0.9744337797164917
    3. '[len' → logprob: -8.474433898925781
    4. 'total' → logprob: -8.974433898925781
    5. '[r' → logprob: -12.224433898925781
    6. '[T' → logprob: -12.474433898925781
    7. '[(' → logprob: -12.974433898925781
    8. '(total' → logprob: -13.224433898925781
    9. '[target' → logprob: -13.349433898925781
    10. '[size' → logprob: -13.599433898925781

Token 374: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0834457129240036
    2. '[' → logprob: -2.7084457874298096
    3. '[-' → logprob: -4.8334455490112305
    4. '(total' → logprob: -5.8334455490112305
    5. '-' → logprob: -6.2084455490112305
    6. '[r' → logprob: -9.08344554901123
    7. '(' → logprob: -9.20844554901123
    8. 'r' → logprob: -9.33344554901123
    9. '
' → logprob: -9.58344554901123
    10. ' total' → logprob: -9.70844554901123

Token 375: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.0748562440276146
    2. '[-' → logprob: -3.3248562812805176
    3. '[' → logprob: -4.074856281280518
    4. '-' → logprob: -5.324856281280518
    5. 'total' → logprob: -5.449856281280518
    6. 'States' → logprob: -5.449856281280518
    7. 'states' → logprob: -5.949856281280518
    8. '[(' → logprob: -7.324856281280518
    9. '_total' → logprob: -8.19985580444336
    10. 'r' → logprob: -8.32485580444336

Token 376: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01947762817144394
    2. '[-' → logprob: -4.019477844238281
    3. ' -' → logprob: -6.644477844238281
    4. '[' → logprob: -10.769477844238281
    5. '{-' → logprob: -13.519477844238281
    6. '   ' → logprob: -13.644477844238281
    7. 's' → logprob: -15.144477844238281
    8. 'r' → logprob: -15.519477844238281
    9. '][-' → logprob: -15.769477844238281
    10. '```' → logprob: -15.894477844238281

Token 377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03369676321744919
    2. '-' → logprob: -3.4086966514587402
    3. 'r' → logprob: -11.533697128295898
    4. ' -' → logprob: -11.783697128295898
    5. ' ' → logprob: -11.908697128295898
    6. '
' → logprob: -12.033697128295898
    7. '(' → logprob: -12.158697128295898
    8. '{' → logprob: -12.283697128295898
    9. 'res' → logprob: -12.783697128295898
    10. '   ' → logprob: -13.533697128295898

Token 378: '].' (ID: 1651)
  Prédit: '.values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.202674001455307
    2. '].' → logprob: -1.7026740312576294
    3. '.' → logprob: -6.70267391204834
    4. ' .' → logprob: -11.32767391204834
    5. '}.' → logprob: -11.82767391204834
    6. 'values' → logprob: -12.20267391204834
    7. ').' → logprob: -12.82767391204834
    8. '().' → logprob: -13.20267391204834
    9. ' ].' → logprob: -13.45267391204834
    10. '>.' → logprob: -14.32767391204834

Token 379: 'values' (ID: 7222)
  Prédit: 'values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -8.65707261255011e-06
    2. 'items' → logprob: -12.250008583068848
    3. '.values' → logprob: -12.500008583068848
    4. ' values' → logprob: -16.000009536743164
    5. 'value' → logprob: -19.000009536743164
    6. '	values' → logprob: -19.750009536743164
    7. '_values' → logprob: -22.500009536743164
    8. 'keys' → logprob: -23.250009536743164
    9. 'VALUES' → logprob: -23.500009536743164
    10. '```' → logprob: -23.500009536743164

Token 380: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.12714679539203644
    2. '():
' → logprob: -2.1271467208862305
    3. ':' → logprob: -8.62714672088623
    4. '():
' → logprob: -10.87714672088623
    5. '()' → logprob: -11.12714672088623
    6. '   ' → logprob: -12.62714672088623
    7. ':
' → logprob: -13.75214672088623
    8. ' ():' → logprob: -14.37714672088623
    9. '()>' → logprob: -14.50214672088623
    10. '():

' → logprob: -15.00214672088623

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021401476114988327
    2. ' if' → logprob: -6.252140045166016
    3. '   ' → logprob: -9.502140045166016
    4. '<|end|>' → logprob: -9.627140045166016
    5. 'if' → logprob: -10.127140045166016
    6. ',' → logprob: -12.127140045166016
    7. '           ' → logprob: -12.127140045166016
    8. '    ' → logprob: -12.502140045166016
    9. '<|end|>' → logprob: -13.127140045166016
    10. '     ' → logprob: -13.127140045166016

Token 382: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8271642923355103
    2. ' if' → logprob: -0.8271642923355103
    3. 'if' (adapté à ' if') → logprob: -2.0771641731262207
    4. '           ' → logprob: -9.077164649963379
    5. '   ' → logprob: -10.952164649963379
    6. '	if' → logprob: -12.702164649963379
    7. '
' → logprob: -13.827164649963379
    8. '<|end|>' → logprob: -14.202164649963379
    9. '```' → logprob: -14.577164649963379
    10. ' ' → logprob: -14.702164649963379

Token 383: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.023247109726071358
    2. ' width' → logprob: -3.773247003555298
    3. '   ' → logprob: -14.523246765136719
    4. '       ' → logprob: -15.023246765136719
    5. '(width' → logprob: -15.023246765136719
    6. '	width' → logprob: -15.398246765136719
    7. '           ' → logprob: -15.898246765136719
    8. '    ' → logprob: -16.39824676513672
    9. ',width' → logprob: -17.52324676513672
    10. ';width' → logprob: -17.64824676513672

Token 384: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04303984344005585
    2. '<=' → logprob: -3.1680397987365723
    3. ')<=' → logprob: -10.54304027557373
    4. '<|end|>' → logprob: -11.54304027557373
    5. ' ≤' → logprob: -13.79304027557373
    6. ']<=' → logprob: -13.79304027557373
    7. ' ' → logprob: -14.29304027557373
    8. ' <=",' → logprob: -14.66804027557373
    9. ')' → logprob: -14.91804027557373
    10. ' ' → logprob: -15.04304027557373

Token 385: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.900623619556427
    2. ' r' → logprob: -0.900623619556427
    3. '=' → logprob: -1.7756235599517822
    4. '=r' → logprob: -4.025623798370361
    5. ' =' → logprob: -9.150623321533203
    6. '	r' → logprob: -11.400623321533203
    7. '   ' → logprob: -11.525623321533203
    8. '    ' → logprob: -13.525623321533203
    9. '=
' → logprob: -13.650623321533203
    10. ' ' → logprob: -13.650623321533203

Token 386: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.458604097366333
    2. '           ' → logprob: -1.458604097366333
    3. ':' → logprob: -2.458604097366333
    4. ':
' → logprob: -3.208604097366333
    5. 'and' → logprob: -5.083603858947754
    6. '       ' → logprob: -6.208603858947754
    7. ' or' → logprob: -8.583603858947754
    8. '               ' → logprob: -8.833603858947754
    9. ' :' → logprob: -8.958603858947754
    10. '          ' → logprob: -9.083603858947754

Token 387: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.44723060727119446
    2. 'width' → logprob: -1.072230577468872
    3. '(width' → logprob: -4.697230815887451
    4. ' (' → logprob: -4.947230815887451
    5. '       ' → logprob: -6.947230815887451
    6. '(' → logprob: -7.697230815887451
    7. 'res' → logprob: -8.322230339050293
    8. ' res' → logprob: -8.947230339050293
    9. '(res' → logprob: -9.447230339050293
    10. '           ' → logprob: -9.447230339050293

Token 388: ' >' (ID: 1424)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18303991854190826
    2. '>' → logprob: -3.058039903640747
    3. '+' → logprob: -3.183039903640747
    4. ' >' → logprob: -3.433039903640747
    5. ' >=' → logprob: -4.433040142059326
    6. '>=' → logprob: -4.683040142059326
    7. ' <=' → logprob: -5.058040142059326
    8. ' =' → logprob: -5.558040142059326
    9. '<=' → logprob: -5.683040142059326
    10. ' +' → logprob: -5.808040142059326

Token 389: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.07889463007450104
    2. ' res' → logprob: -2.57889461517334
    3. '
' → logprob: -12.95389461517334
    4. '   ' → logprob: -13.32889461517334
    5. '	res' → logprob: -14.07889461517334
    6. '_res' → logprob: -18.203895568847656
    7. ' ' → logprob: -18.203895568847656
    8. '       ' → logprob: -18.453895568847656
    9. 'ans' → logprob: -18.578895568847656
    10. ' 
' → logprob: -18.703895568847656

Token 390: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7793861031532288
    2. ':
' → logprob: -0.7793861031532288
    3. '           ' → logprob: -2.529386043548584
    4. '       ' → logprob: -6.779386043548584
    5. '=' → logprob: -7.529386043548584
    6. '):
' → logprob: -8.404386520385742
    7. ',' → logprob: -8.529386520385742
    8. '<|end|>' → logprob: -8.779386520385742
    9. ' :
' → logprob: -8.779386520385742
    10. ' =' → logprob: -9.029386520385742

Token 391: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010565068805590272
    2. '       ' → logprob: -7.126056671142578
    3. ' res' → logprob: -8.626056671142578
    4. 'res' → logprob: -10.626056671142578
    5. '               ' → logprob: -11.251056671142578
    6. '   ' → logprob: -11.626056671142578
    7. '	       ' → logprob: -11.626056671142578
    8. '
' → logprob: -12.001056671142578
    9. '		' → logprob: -12.001056671142578
    10. '          ' → logprob: -14.251056671142578

Token 392: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.008895701728761196
    2. ' res' → logprob: -4.7588958740234375
    3. '               ' → logprob: -9.133895874023438
    4. '           ' → logprob: -9.133895874023438
    5. '       ' → logprob: -9.758895874023438
    6. '   ' → logprob: -11.883895874023438
    7. '	res' → logprob: -15.133895874023438
    8. '_res' → logprob: -16.633895874023438
    9. '                   ' → logprob: -16.633895874023438
    10. ' ' → logprob: -17.508895874023438

Token 393: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602262556552887
    2. '=' → logprob: -1.9102262258529663
    3. ' =
' → logprob: -13.285225868225098
    4. '=
' → logprob: -15.285225868225098
    5. ' =)' → logprob: -16.410226821899414
    6. '＝' → logprob: -16.910226821899414
    7. ' ' → logprob: -17.285226821899414
    8. '=res' → logprob: -17.535226821899414
    9. '	' → logprob: -18.160226821899414
    10. ' ' → logprob: -18.410226821899414

Token 394: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.00033546582562848926
    2. ' width' → logprob: -8.000335693359375
    3. '
' → logprob: -17.625335693359375
    4. '	width' → logprob: -18.500335693359375
    5. '(width' → logprob: -19.125335693359375
    6. '           ' → logprob: -19.625335693359375
    7. 'wide' → logprob: -19.750335693359375
    8. '_width' → logprob: -19.875335693359375
    9. ',width' → logprob: -20.500335693359375
    10. '   ' → logprob: -20.625335693359375

Token 395: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5630670785903931
    2. '
' → logprob: -0.9380670785903931
    3. '<|end|>' → logprob: -4.1880669593811035
    4. '    
' → logprob: -4.3130669593811035
    5. '  
' → logprob: -5.3130669593811035
    6. ' 
' → logprob: -6.3130669593811035
    7. ',' → logprob: -7.1880669593811035
    8. ' return' → logprob: -7.5630669593811035
    9. ')' → logprob: -7.6880669593811035
    10. ',
' → logprob: -8.063067436218262

Token 396: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2049659788608551
    2. '   ' → logprob: -2.2049660682678223
    3. '<|end|>' → logprob: -3.7049660682678223
    4. ' 
' → logprob: -4.079966068267822
    5. ' return' → logprob: -4.454966068267822
    6. '  
' → logprob: -4.704966068267822
    7. '    
' → logprob: -4.954966068267822
    8. 'return' → logprob: -6.704966068267822
    9. ',' → logprob: -7.454966068267822
    10. ')' → logprob: -7.454966068267822

Token 397: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6686310768127441
    2. '   ' → logprob: -1.1686310768127441
    3. ' return' → logprob: -2.168631076812744
    4. 'return' (adapté à ' return') → logprob: -3.918631076812744
    5. ' 
' → logprob: -4.418631076812744
    6. '    
' → logprob: -4.543631076812744
    7. '<|end|>' → logprob: -5.043631076812744
    8. '  
' → logprob: -5.668631076812744
    9. '	return' → logprob: -6.168631076812744
    10. ' ' → logprob: -6.168631076812744

Token 398: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.07888978719711304
    2. ' res' → logprob: -2.578889846801758
    3. '	res' → logprob: -17.578889846801758
    4. 'round' → logprob: -18.453889846801758
    5. '(res' → logprob: -18.703889846801758
    6. '_res' → logprob: -19.328889846801758
    7. 'int' → logprob: -19.453889846801758
    8. '$res' → logprob: -19.578889846801758
    9. 'float' → logprob: -19.703889846801758
    10. 'max' → logprob: -19.703889846801758

Token 399: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 400: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0021313487086445093
    2. 'main' → logprob: -6.502131462097168
    3. ' solve' → logprob: -8.252131462097168
    4. ' input' → logprob: -8.502131462097168
    5. ' __' → logprob: -10.127131462097168
    6. '_main' → logprob: -10.127131462097168
    7. '_input' → logprob: -11.377131462097168
    8. 'input' → logprob: -11.377131462097168
    9. ' stdin' → logprob: -11.627131462097168
    10. '_' → logprob: -12.002131462097168

Token 402: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008702386170625687
    2. '():
' → logprob: -4.758702278137207
    3. ' ():' → logprob: -10.258702278137207
    4. '()' → logprob: -10.633702278137207
    5. '_' → logprob: -11.508702278137207
    6. '(' → logprob: -11.508702278137207
    7. '():
' → logprob: -12.508702278137207
    8. '()>' → logprob: -13.508702278137207
    9. '():

' → logprob: -13.758702278137207
    10. ':' → logprob: -13.883702278137207

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1479709893465042
    2. '():' → logprob: -2.5229709148406982
    3. '():
' → logprob: -3.7729709148406982
    4. '()' → logprob: -4.397971153259277
    5. '(stdin' → logprob: -4.522971153259277
    6. ':' → logprob: -5.397971153259277
    7. '```' → logprob: -6.272971153259277
    8. '
' → logprob: -6.772971153259277
    9. '    
' → logprob: -7.022971153259277
    10. 'import' → logprob: -7.647971153259277

Token 404: ' input' (ID: 3422)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8377428650856018
    2. '   ' → logprob: -0.9627428650856018
    3. ' import' → logprob: -1.837742805480957
    4. ' for' → logprob: -4.462742805480957
    5. 'for' → logprob: -5.587742805480957
    6. ' line' → logprob: -6.087742805480957
    7. ' lines' → logprob: -6.337742805480957
    8. 'n' → logprob: -6.712742805480957
    9. ' n' → logprob: -6.712742805480957
    10. ' input' → logprob: -7.087742805480957

Token 405: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4978657066822052
    2. '_line' → logprob: -1.3728656768798828
    3. '_data' → logprob: -2.122865676879883
    4. '_lines' → logprob: -4.872865676879883
    5. '_' → logprob: -4.997865676879883
    6. ' =' → logprob: -6.497865676879883
    7. '_str' → logprob: -6.747865676879883
    8. '_text' → logprob: -7.122865676879883
    9. '=' → logprob: -7.747865676879883
    10. 'data' → logprob: -8.372865676879883

Token 406: ' iter' (ID: 10621)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.043540310114622116
    2. ' stdin' → logprob: -3.1685402393341064
    3. '(stdin' → logprob: -7.5435404777526855
    4. 'input' → logprob: -12.168540000915527
    5. '.stdin' → logprob: -12.418540000915527
    6. 'stdout' → logprob: -14.293540000915527
    7. 'sys' → logprob: -15.168540000915527
    8. ' input' → logprob: -15.168540000915527
    9. 'lambda' → logprob: -15.168540000915527
    10. '```' → logprob: -15.918540000915527

Token 407: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.00010485442908247933
    2. '(input' → logprob: -9.750104904174805
    3. 'stdin' → logprob: -10.750104904174805
    4. '(st' → logprob: -11.625104904174805
    5. '([
' → logprob: -12.000104904174805
    6. '([' → logprob: -12.750104904174805
    7. '(std' → logprob: -13.000104904174805
    8. '```' → logprob: -13.750104904174805
    9. '.stdin' → logprob: -14.000104904174805
    10. '(stdout' → logprob: -14.625104904174805

Token 408: '.read' (ID: 7211)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3594698905944824
    2. '().' → logprob: -1.7344698905944824
    3. '()).' → logprob: -2.9844698905944824
    4. '.readline' → logprob: -3.2344698905944824
    5. ')' → logprob: -3.9844698905944824
    6. '.readlines' → logprob: -4.609469890594482
    7. '()' → logprob: -6.109469890594482
    8. ').' → logprob: -6.234469890594482
    9. '())
' → logprob: -6.734469890594482
    10. '().__' → logprob: -6.859469890594482

Token 409: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00353034446015954
    2. '())' → logprob: -6.128530502319336
    3. '()' → logprob: -6.753530502319336
    4. 'line' → logprob: -9.378530502319336
    5. 'lines' → logprob: -10.128530502319336
    6. '()).' → logprob: -10.378530502319336
    7. '(' → logprob: -11.503530502319336
    8. ')' → logprob: -12.753530502319336
    9. ' ().' → logprob: -13.503530502319336
    10. '_lines' → logprob: -13.878530502319336

Token 410: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.47974908351898193
    2. 'split' → logprob: -0.9797490835189819
    3. 'read' → logprob: -5.2297492027282715
    4. 'decode' → logprob: -8.479748725891113
    5. 'lines' → logprob: -9.604748725891113
    6. 'rstrip' → logprob: -11.104748725891113
    7. 'line' → logprob: -12.354748725891113
    8. '().' → logprob: -12.854748725891113
    9. ' split' → logprob: -13.354748725891113
    10. 'str' → logprob: -14.479748725891113

Token 411: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.7133641196996905e-05
    2. '()' → logprob: -10.62502670288086
    3. '('\' → logprob: -13.37502670288086
    4. '()
' → logprob: -14.12502670288086
    5. ' ().' → logprob: -15.62502670288086
    6. '()\' → logprob: -15.87502670288086
    7. '   ' → logprob: -16.50002670288086
    8. '()).' → logprob: -16.87502670288086
    9. '())' → logprob: -17.00002670288086
    10. '(' → logprob: -17.25002670288086

Token 412: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.703443770878948e-06
    2. ' split' → logprob: -11.875007629394531
    3. '(split' → logprob: -14.625007629394531
    4. 'lines' → logprob: -16.50000762939453
    5. '```' → logprob: -17.50000762939453
    6. '().' → logprob: -18.37500762939453
    7. '
' → logprob: -18.62500762939453
    8. 'spl' → logprob: -18.62500762939453
    9. 'strip' → logprob: -18.87500762939453
    10. '   ' → logprob: -19.12500762939453

Token 413: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0006519131129607558
    2. '()' → logprob: -7.875651836395264
    3. '())
' → logprob: -8.875652313232422
    4. '('' → logprob: -9.875652313232422
    5. ')' → logprob: -10.000652313232422
    6. '(' → logprob: -11.125652313232422
    7. '()))' → logprob: -12.000652313232422
    8. '()).' → logprob: -12.875652313232422
    9. ' ())' → logprob: -12.875652313232422
    10. '())

' → logprob: -13.000652313232422

Token 414: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8354873657226562
    2. '   ' → logprob: -0.9604873657226562
    3. 'for' → logprob: -2.7104873657226562
    4. '()' → logprob: -3.5854873657226562
    5. 'n' → logprob: -4.335487365722656
    6. 'try' → logprob: -4.460487365722656
    7. '
' → logprob: -4.585487365722656
    8. 'token' → logprob: -4.710487365722656
    9. '```' → logprob: -5.085487365722656
    10. 'r' → logprob: -5.085487365722656

Token 415: ' T' (ID: 353)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.6088289618492126
    2. 'for' → logprob: -1.7338290214538574
    3. 'n' → logprob: -1.9838290214538574
    4. 'while' → logprob: -2.3588290214538574
    5. 't' → logprob: -4.233829021453857
    6. 'r' → logprob: -4.608829021453857
    7. '   ' → logprob: -4.858829021453857
    8. 'T' (adapté à ' T') → logprob: -5.483829021453857
    9. ' for' → logprob: -5.608829021453857
    10. 'def' → logprob: -5.983829021453857

Token 416: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.281395822763443
    2. '=' → logprob: -1.4063957929611206
    3. ',' → logprob: -8.78139591217041
    4. '_' → logprob: -10.15639591217041
    5. ' ' → logprob: -11.15639591217041
    6. ' =
' → logprob: -11.28139591217041
    7. '  ' → logprob: -12.03139591217041
    8. ' ,' → logprob: -12.40639591217041
    9. '=int' → logprob: -12.65639591217041
    10. '   ' → logprob: -13.53139591217041

Token 417: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004307884373702109
    2. ' int' → logprob: -7.750430583953857
    3. 'next' → logprob: -16.250431060791016
    4. '[int' → logprob: -20.625431060791016
    5. '(int' → logprob: -21.500431060791016
    6. '	int' → logprob: -22.000431060791016
    7. ' next' → logprob: -22.000431060791016
    8. '10' → logprob: -22.250431060791016
    9. '1' → logprob: -22.625431060791016
    10. '=int' → logprob: -23.000431060791016

Token 418: '(next' (ID: 28757)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7023439407348633
    2. '(next' → logprob: -0.7023439407348633
    3. '(' → logprob: -4.702343940734863
    4. 'next' → logprob: -9.577343940734863
    5. 'input' → logprob: -12.202343940734863
    6. ' next' → logprob: -12.577343940734863
    7. ' (' → logprob: -13.577343940734863
    8. '(
' → logprob: -13.952343940734863
    9. '('' → logprob: -15.827343940734863
    10. '((' → logprob: -16.452342987060547

Token 419: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005875834613107145
    2. '(' → logprob: -7.500587463378906
    3. 'input' → logprob: -10.625587463378906
    4. '(
' → logprob: -11.875587463378906
    5. '()' → logprob: -13.250587463378906
    6. '())' → logprob: -13.750587463378906
    7. ')' → logprob: -15.625587463378906
    8. '=input' → logprob: -16.625587463378906
    9. ' input' → logprob: -16.875587463378906
    10. '())
' → logprob: -17.250587463378906

Token 420: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08119776844978333
    2. ')' → logprob: -2.581197738647461
    3. '()))' → logprob: -6.706197738647461
    4. '()' → logprob: -7.581197738647461
    5. '())' → logprob: -7.581197738647461
    6. '))
' → logprob: -10.081197738647461
    7. '(' → logprob: -11.706197738647461
    8. ' ' → logprob: -12.331197738647461
    9. '   ' → logprob: -13.331197738647461
    10. ')))' → logprob: -13.456197738647461

Token 421: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.833139955997467
    2. '
' → logprob: -1.4581398963928223
    3. ' for' → logprob: -1.5831398963928223
    4. '   ' → logprob: -2.2081398963928223
    5. '<|end|>' → logprob: -5.083139896392822
    6. '```' → logprob: -5.458139896392822
    7. '	for' → logprob: -6.083139896392822
    8. '    
' → logprob: -6.208139896392822
    9. '  
' → logprob: -6.833139896392822
    10. ' 
' → logprob: -7.958139896392822

Token 422: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04973725229501724
    2. ' for' → logprob: -3.0497372150421143
    3. '
' → logprob: -7.424737453460693
    4. '   ' → logprob: -7.549737453460693
    5. '    
' → logprob: -10.924736976623535
    6. '```' → logprob: -13.049736976623535
    7. '	for' → logprob: -13.174736976623535
    8. 'while' → logprob: -13.549736976623535
    9. ' 
' → logprob: -13.924736976623535
    10. '  
' → logprob: -14.924736976623535

Token 423: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16023042798042297
    2. ' _' → logprob: -1.9102303981781006
    3. ' ' → logprob: -12.66023063659668
    4. ' i' → logprob: -13.53523063659668
    5. ' _
' → logprob: -14.16023063659668
    6. ' t' → logprob: -14.53523063659668
    7. 'i' → logprob: -15.41023063659668
    8. '_
' → logprob: -15.91023063659668
    9. '_i' → logprob: -16.53523063659668
    10. ' ' → logprob: -16.53523063659668

Token 424: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.33254849910736084
    2. 'in' → logprob: -1.7075484991073608
    3. '_' → logprob: -2.8325486183166504
    4. ' range' → logprob: -3.8325486183166504
    5. 'range' → logprob: -4.20754861831665
    6. ' ' → logprob: -5.70754861831665
    7. 'T' → logprob: -7.45754861831665
    8. ')' → logprob: -7.45754861831665
    9. ' _' → logprob: -8.082548141479492
    10. ' T' → logprob: -8.582548141479492

Token 425: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015239100903272629
    2. ' range' → logprob: -6.501523971557617
    3. 'T' → logprob: -10.751523971557617
    4. '(range' → logprob: -15.876523971557617
    5. ' T' → logprob: -19.001523971557617
    6. '(T' → logprob: -20.376523971557617
    7. ')' → logprob: -20.751523971557617
    8. '
' → logprob: -21.126523971557617
    9. '[T' → logprob: -21.376523971557617
    10. '	range' → logprob: -21.376523971557617

Token 426: '(T' (ID: 7014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16798195242881775
    2. '(T' → logprob: -1.9179819822311401
    3. ' (' → logprob: -4.91798210144043
    4. ' T' → logprob: -8.41798210144043
    5. 'T' → logprob: -9.54298210144043
    6. '   ' → logprob: -10.04298210144043
    7. '(
' → logprob: -10.16798210144043
    8. '(int' → logprob: -11.04298210144043
    9. ',' → logprob: -11.91798210144043
    10. '()' → logprob: -12.41798210144043

Token 427: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14681215584278107
    2. '):' → logprob: -2.0218122005462646
    3. '   ' → logprob: -6.2718119621276855
    4. '():
' → logprob: -6.6468119621276855
    5. ',' → logprob: -8.021812438964844
    6. ':
' → logprob: -8.396812438964844
    7. ':' → logprob: -8.646812438964844
    8. '       ' → logprob: -9.521812438964844
    9. '():' → logprob: -9.896812438964844
    10. ')' → logprob: -10.271812438964844

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017162850126624107
    2. '   ' → logprob: -4.267162799835205
    3. '<|end|>' → logprob: -6.517162799835205
    4. 'r' → logprob: -7.267162799835205
    5. '```' → logprob: -8.017163276672363
    6. ' r' → logprob: -8.767163276672363
    7. '	   ' → logprob: -9.892163276672363
    8. '<|end|>' → logprob: -10.142163276672363
    9. '    ' → logprob: -10.517163276672363
    10. 'tokens' → logprob: -10.642163276672363

Token 429: ' r' (ID: 428)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35003742575645447
    2. 'r' (adapté à ' r') → logprob: -1.2250374555587769
    3. '_' → logprob: -7.725037574768066
    4. ' n' → logprob: -7.725037574768066
    5. '_n' → logprob: -8.350037574768066
    6. '_r' → logprob: -8.725037574768066
    7. '   ' → logprob: -8.850037574768066
    8. ' r' → logprob: -9.100037574768066
    9. 'R' → logprob: -11.225037574768066
    10. 'N' → logprob: -11.350037574768066

Token 430: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5281832218170166
    2. '=' → logprob: -0.9031832218170166
    3. ',' → logprob: -5.4031829833984375
    4. '=int' → logprob: -7.6531829833984375
    5. ' ,' → logprob: -10.653182983398438
    6. ' ' → logprob: -11.403182983398438
    7. '   ' → logprob: -11.903182983398438
    8. ')' → logprob: -12.028182983398438
    9. '    ' → logprob: -12.778182983398438
    10. '_' → logprob: -12.903182983398438

Token 431: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.11719807982444763
    2. ' float' → logprob: -2.3671979904174805
    3. 'int' → logprob: -4.1171979904174805
    4. ' int' → logprob: -7.4921979904174805
    5. ' ' → logprob: -15.86719799041748
    6. '(float' → logprob: -16.742198944091797
    7. '   ' → logprob: -16.867198944091797
    8. '	float' → logprob: -16.867198944091797
    9. '=float' → logprob: -17.742198944091797
    10. 'flo' → logprob: -17.742198944091797

Token 432: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -4.320199877838604e-07
    2. 'next' → logprob: -15.5
    3. '(' → logprob: -15.75
    4. '[next' → logprob: -18.375
    5. ' next' → logprob: -20.625
    6. ',next' → logprob: -21.125
    7. '((' → logprob: -21.375
    8. '	next' → logprob: -22.375
    9. '(prev' → logprob: -22.875
    10. '(n' → logprob: -23.0

Token 433: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.0921942703134846e-05
    2. 'input' → logprob: -11.50001049041748
    3. '(' → logprob: -14.50001049041748
    4. ' input' → logprob: -16.125011444091797
    5. ' (' → logprob: -16.625011444091797
    6. ',input' → logprob: -17.375011444091797
    7. ')' → logprob: -18.500011444091797
    8. '=input' → logprob: -18.875011444091797
    9. '```' → logprob: -19.875011444091797
    10. '	input' → logprob: -19.875011444091797

Token 434: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25246286392211914
    2. '))' → logprob: -1.5024628639221191
    3. '))
' → logprob: -8.252462387084961
    4. ')
' → logprob: -8.502462387084961
    5. '())' → logprob: -10.002462387084961
    6. '()' → logprob: -11.002462387084961
    7. '()))' → logprob: -12.252462387084961
    8. ')))' → logprob: -13.502462387084961
    9. '   ' → logprob: -14.877462387084961
    10. ' )' → logprob: -15.252462387084961

Token 435: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014837666414678097
    2. '       ' → logprob: -4.389837741851807
    3. ' n' → logprob: -6.139837741851807
    4. '	n' → logprob: -10.014837265014648
    5. 'N' → logprob: -10.139837265014648
    6. '<|end|>' → logprob: -10.889837265014648
    7. '_n' → logprob: -11.014837265014648
    8. '   ' → logprob: -11.264837265014648
    9. '(n' → logprob: -11.389837265014648
    10. 's' → logprob: -11.514837265014648

Token 436: ' s' (ID: 265)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001090566162019968
    2. '_' → logprob: -6.8760905265808105
    3. '_n' → logprob: -10.626091003417969
    4. '   ' → logprob: -11.376091003417969
    5. 'N' → logprob: -11.626091003417969
    6. '       ' → logprob: -12.501091003417969
    7. 'm' → logprob: -12.876091003417969
    8. ' n' → logprob: -12.876091003417969
    9. 'k' → logprob: -13.251091003417969
    10. 's' (adapté à ' s') → logprob: -13.501091003417969

Token 437: ' =' (ID: 314)
  Prédit: 'tones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tones' → logprob: -0.016031552106142044
    2. 't' → logprob: -4.766031742095947
    3. ' =' → logprob: -5.266031742095947
    4. 'ton' → logprob: -7.141031742095947
    5. 'tone' → logprob: -7.641031742095947
    6. 'ize' → logprob: -8.016031265258789
    7. '=' → logprob: -8.891031265258789
    8. 'tons' → logprob: -9.141031265258789
    9. 'stones' → logprob: -9.266031265258789
    10. 'tores' → logprob: -9.516031265258789

Token 438: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.032755814492702484
    2. 'next' → logprob: -4.1577558517456055
    3. '[int' → logprob: -4.6577558517456055
    4. 'float' → logprob: -5.5327558517456055
    5. 'list' → logprob: -6.6577558517456055
    6. '[next' → logprob: -6.9077558517456055
    7. ' int' → logprob: -7.2827558517456055
    8. ' next' → logprob: -9.532755851745605
    9. '[' → logprob: -10.032755851745605
    10. ' float' → logprob: -11.532755851745605

Token 439: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -6.704273118884885e-07
    2. 'next' → logprob: -14.375000953674316
    3. '[next' → logprob: -18.0
    4. '(' → logprob: -18.75
    5. ' next' → logprob: -20.375
    6. ',next' → logprob: -20.625
    7. '	next' → logprob: -21.375
    8. '.next' → logprob: -21.625
    9. 'Next' → logprob: -21.875
    10. '_next' → logprob: -23.5

Token 440: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.9385402993066236e-05
    2. 'input' → logprob: -10.875019073486328
    3. ',input' → logprob: -15.625019073486328
    4. '=input' → logprob: -15.875019073486328
    5. '(next' → logprob: -16.375019073486328
    6. '<input' → logprob: -16.375019073486328
    7. ' input' → logprob: -16.875019073486328
    8. '/input' → logprob: -17.500019073486328
    9. '[input' → logprob: -19.125019073486328
    10. '	input' → logprob: -19.625019073486328

Token 441: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07984074205160141
    2. ')' → logprob: -2.579840660095215
    3. '))
' → logprob: -7.079840660095215
    4. ')
' → logprob: -9.454840660095215
    5. ')))' → logprob: -11.204840660095215
    6. '())' → logprob: -11.829840660095215
    7. '()))' → logprob: -12.079840660095215
    8. '()' → logprob: -13.454840660095215
    9. '       ' → logprob: -14.329840660095215
    10. ' ))' → logprob: -15.204840660095215

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5270583033561707
    2. 'stones' → logprob: -0.9020583033561707
    3. 'st' → logprob: -6.277058124542236
    4. '	st' → logprob: -7.277058124542236
    5. ' stones' → logprob: -7.402058124542236
    6. '   ' → logprob: -7.652058124542236
    7. '	' → logprob: -9.527058601379395
    8. 'stars' → logprob: -10.277058601379395
    9. '```' → logprob: -10.277058601379395
    10. '<|end|>' → logprob: -10.402058601379395

Token 443: ' stones' (ID: 38940)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stones' (adapté à ' stones') → logprob: -0.00017195509281009436
    2. ' stones' → logprob: -8.875171661376953
    3. 'st' → logprob: -10.750171661376953
    4. '       ' → logprob: -12.250171661376953
    5. 'stars' → logprob: -13.625171661376953
    6. 'sticks' → logprob: -13.625171661376953
    7. 'w' → logprob: -14.250171661376953
    8. '   ' → logprob: -14.500171661376953
    9. 'stone' → logprob: -14.625171661376953
    10. 'sts' → logprob: -15.000171661376953

Token 444: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02326749451458454
    2. '=' → logprob: -3.7732675075531006
    3. '=[]' → logprob: -10.77326774597168
    4. ' =[' → logprob: -14.27326774597168
    5. '=[' → logprob: -15.52326774597168
    6. '[:]' → logprob: -16.89826774597168
    7. '=[]
' → logprob: -17.27326774597168
    8. ',' → logprob: -17.52326774597168
    9. 's' → logprob: -17.89826774597168
    10. '＝' → logprob: -18.39826774597168

Token 445: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.07158997654914856
    2. '[' → logprob: -2.821589946746826
    3. '[int' → logprob: -5.071589946746826
    4. '[List' → logprob: -6.571589946746826
    5. '[s' → logprob: -6.571589946746826
    6. ' [' → logprob: -8.571590423583984
    7. '[next' → logprob: -8.821590423583984
    8. '[str' → logprob: -9.196590423583984
    9. '[size' → logprob: -11.071590423583984
    10. '[number' → logprob: -12.196590423583984

Token 446: 'int' (ID: 491)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.31326520442962646
    2. 'int' → logprob: -1.3132652044296265
    3. ' float' → logprob: -12.688264846801758
    4. ' int' → logprob: -14.938264846801758
    5. '   ' → logprob: -17.688264846801758
    6. '
' → logprob: -18.438264846801758
    7. '(float' → logprob: -18.563264846801758
    8. '```' → logprob: -18.938264846801758
    9. '	float' → logprob: -19.063264846801758
    10. '  ' → logprob: -20.563264846801758

Token 447: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -6.704273118884885e-07
    2. 'next' → logprob: -14.250000953674316
    3. '(' → logprob: -18.375
    4. '[next' → logprob: -18.875
    5. ' next' → logprob: -20.0
    6. ',next' → logprob: -21.625
    7. '	next' → logprob: -22.125
    8. ' (' → logprob: -22.875
    9. '.next' → logprob: -23.125
    10. ']' → logprob: -23.5

Token 448: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -4.36574100604048e-06
    2. 'input' → logprob: -12.500004768371582
    3. ',input' → logprob: -15.125004768371582
    4. ' input' → logprob: -15.625004768371582
    5. ' (' → logprob: -17.125003814697266
    6. '=input' → logprob: -17.375003814697266
    7. ')' → logprob: -17.500003814697266
    8. '(' → logprob: -18.125003814697266
    9. '/input' → logprob: -18.875003814697266
    10. '	input' → logprob: -19.750003814697266

Token 449: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.13328222930431366
    2. ')' → logprob: -2.63328218460083
    3. '())' → logprob: -3.63328218460083
    4. '()))' → logprob: -3.63328218460083
    5. '()' → logprob: -9.508282661437988
    6. ' ))' → logprob: -13.258282661437988
    7. ' ())' → logprob: -13.633282661437988
    8. ' ' → logprob: -13.633282661437988
    9. ')]' → logprob: -14.008282661437988
    10. '   ' → logprob: -14.133282661437988

Token 450: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06973933428525925
    2. 'for' → logprob: -2.81973934173584
    3. ')' → logprob: -5.19473934173584
    4. '()' → logprob: -6.19473934173584
    5. ']' → logprob: -9.56973934173584
    6. '	for' → logprob: -10.06973934173584
    7. ')]' → logprob: -10.69473934173584
    8. '   ' → logprob: -12.06973934173584
    9. ' ' → logprob: -12.19473934173584
    10. ' )' → logprob: -12.81973934173584

Token 451: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.047401152551174164
    2. 'range' → logprob: -3.547401189804077
    3. '_' → logprob: -4.172400951385498
    4. ' in' → logprob: -6.547400951385498
    5. ' _' → logprob: -8.297401428222656
    6. '_range' → logprob: -8.297401428222656
    7. '(range' → logprob: -9.922401428222656
    8. 's' → logprob: -10.297401428222656
    9. '_s' → logprob: -10.797401428222656
    10. 'in' → logprob: -11.297401428222656

Token 452: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07086582481861115
    2. 'in' → logprob: -2.8208658695220947
    3. 'range' → logprob: -5.570865631103516
    4. '_' → logprob: -5.695865631103516
    5. ' range' → logprob: -6.445865631103516
    6. 's' → logprob: -9.945865631103516
    7. ' ' → logprob: -10.570865631103516
    8. '__' → logprob: -11.320865631103516
    9. '_range' → logprob: -11.570865631103516
    10. 'i' → logprob: -12.695865631103516

Token 453: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -18.375553131103516
    4. '	range' → logprob: -18.625553131103516
    5. 's' → logprob: -19.500553131103516
    6. '_range' → logprob: -21.250553131103516
    7. 'rang' → logprob: -21.500553131103516
    8. '
' → logprob: -22.250553131103516
    9. '0' → logprob: -22.750553131103516
    10. 'Range' → logprob: -23.000553131103516

Token 454: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0297652967274189
    2. '(s' → logprob: -3.5297653675079346
    3. ' s' → logprob: -11.154765129089355
    4. '(' → logprob: -14.654765129089355
    5. '{s' → logprob: -17.529766082763672
    6. 'range' → logprob: -18.154766082763672
    7. ' (' → logprob: -18.154766082763672
    8. ')s' → logprob: -18.404766082763672
    9. '   ' → logprob: -18.404766082763672
    10. '(
' → logprob: -18.529766082763672

Token 455: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.3782830137643032e-05
    2. ']' → logprob: -11.87501335144043
    3. ')' → logprob: -12.25001335144043
    4. '       ' → logprob: -14.12501335144043
    5. ')])' → logprob: -14.87501335144043
    6. '])]' → logprob: -15.00001335144043
    7. ')]
' → logprob: -15.12501335144043
    8. '])' → logprob: -16.25001335144043
    9. '   ' → logprob: -16.37501335144043
    10. '')]' → logprob: -16.62501335144043

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015864955261349678
    2. '   ' → logprob: -4.890864849090576
    3. 'print' → logprob: -5.265864849090576
    4. 'result' → logprob: -7.015864849090576
    5. '<|end|>' → logprob: -7.140864849090576
    6. '```' → logprob: -7.640864849090576
    7. '        
' → logprob: -8.765865325927734
    8. 'next' → logprob: -9.015865325927734
    9. 'def' → logprob: -9.265865325927734
    10. 'solve' → logprob: -9.390865325927734

Token 457: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014034447958692908
    2. 'result' → logprob: -7.251403331756592
    3. 'res' → logprob: -7.751403331756592
    4. 'ans' (adapté à ' ans') → logprob: -9.00140380859375
    5. ' print' → logprob: -9.00140380859375
    6. 'answer' → logprob: -11.62640380859375
    7. 'out' → logprob: -12.75140380859375
    8. '   ' → logprob: -13.25140380859375
    9. ' result' → logprob: -13.87640380859375
    10. ' res' → logprob: -14.37640380859375

Token 458: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868732452392578
    2. '=' → logprob: -1.1368732452392578
    3. 's' → logprob: -14.886873245239258
    4. '=create' → logprob: -15.386873245239258
    5. '   ' → logprob: -15.511873245239258
    6. ')' → logprob: -15.511873245239258
    7. ' =
' → logprob: -15.761873245239258
    8. '＝' → logprob: -15.886873245239258
    9. '_=' → logprob: -16.136873245239258
    10. ' =)' → logprob: -16.511873245239258

Token 459: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.25193002820014954
    2. ' solve' → logprob: -1.5019299983978271
    3. 'float' → logprob: -15.001930236816406
    4. '.solve' → logprob: -15.376930236816406
    5. 'round' → logprob: -16.501930236816406
    6. ' float' → logprob: -16.501930236816406
    7. '(s' → logprob: -16.626930236816406
    8. ' ' → logprob: -16.751930236816406
    9. 'sol' → logprob: -17.251930236816406
    10. 'f' → logprob: -17.751930236816406

Token 460: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6355001330375671
    2. '(r' → logprob: -0.8855001330375671
    3. '(st' → logprob: -2.885500192642212
    4. '(s' → logprob: -6.885499954223633
    5. '(
' → logprob: -7.135499954223633
    6. ' (' → logprob: -9.260499954223633
    7. '((' → logprob: -10.135499954223633
    8. '(`' → logprob: -11.385499954223633
    9. '(

' → logprob: -11.760499954223633
    10. '(run' → logprob: -13.260499954223633

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0802738870552275e-05
    2. '(' → logprob: -13.00001049041748
    3. ',
' → logprob: -13.25001049041748
    4. ',s' → logprob: -13.25001049041748
    5. ')' → logprob: -13.62501049041748
    6. ',r' → logprob: -13.62501049041748
    7. ' ,' → logprob: -13.75001049041748
    8. '(st' → logprob: -13.87501049041748
    9. ',(' → logprob: -16.125011444091797
    10. '   ' → logprob: -16.125011444091797

Token 462: ' stones' (ID: 38940)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stones' → logprob: -0.004623203072696924
    2. ' stones' → logprob: -5.3796234130859375
    3. 'stone' → logprob: -13.254623413085938
    4. 'ston' → logprob: -15.129623413085938
    5. '   ' → logprob: -15.254623413085938
    6. 'st' → logprob: -15.629623413085938
    7. 'stre' → logprob: -16.129623413085938
    8. ' ' → logprob: -16.629623413085938
    9. 'sten' → logprob: -17.504623413085938
    10. '	st' → logprob: -17.504623413085938

Token 463: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14407241344451904
    2. ')' → logprob: -2.0190725326538086
    3. '       ' → logprob: -6.769072532653809
    4. ')
' → logprob: -8.519072532653809
    5. '   ' → logprob: -10.894072532653809
    6. '
' → logprob: -11.394072532653809
    7. '()
' → logprob: -12.644072532653809
    8. '<|end|>' → logprob: -12.769072532653809
    9. ')`
' → logprob: -13.019072532653809
    10. '           ' → logprob: -13.519072532653809

Token 464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3991311192512512
    2. 'print' → logprob: -1.1491310596466064
    3. '```' → logprob: -5.1491312980651855
    4. '<|end|>' → logprob: -5.7741312980651855
    5. ' print' → logprob: -6.3991312980651855
    6. '
' → logprob: -7.6491312980651855
    7. '``' → logprob: -8.149130821228027
    8. '   ' → logprob: -8.149130821228027
    9. '        
' → logprob: -8.274130821228027
    10. '`' → logprob: -9.899130821228027

Token 465: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0027158339507877827
    2. '       ' → logprob: -6.252716064453125
    3. 'if' (adapté à ' if') → logprob: -7.252716064453125
    4. ' print' → logprob: -10.252716064453125
    5. '   ' → logprob: -10.752716064453125
    6. '
' → logprob: -11.002716064453125
    7. '```' → logprob: -12.627716064453125
    8. ' if' → logprob: -13.627716064453125
    9. '	print' → logprob: -14.502716064453125
    10. '``' → logprob: -16.377716064453125

Token 466: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.0040995352901518345
    2. 'ans' → logprob: -5.504099369049072
    3. '(ans' → logprob: -10.87909984588623
    4. ' res' → logprob: -13.87909984588623
    5. '_ans' → logprob: -14.50409984588623
    6. '	ans' → logprob: -14.75409984588623
    7. ' abs' → logprob: -15.87909984588623
    8. 'res' → logprob: -16.379098892211914
    9. ' math' → logprob: -16.879098892211914
    10. ' ' → logprob: -17.004098892211914

Token 467: ' <' (ID: 464)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6642863750457764
    2. ' >=' → logprob: -1.2892863750457764
    3. '>=' → logprob: -2.7892863750457764
    4. ' <' → logprob: -3.4142863750457764
    5. '>' → logprob: -3.5392863750457764
    6. ' <=' → logprob: -4.0392866134643555
    7. ' ==' → logprob: -4.0392866134643555
    8. ' >' → logprob: -4.1642866134643555
    9. '<' → logprob: -4.1642866134643555
    10. '==' → logprob: -5.1642866134643555

Token 468: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017196940258145332
    2. 'inf' → logprob: -4.517197132110596
    3. 'r' → logprob: -5.517197132110596
    4. ' ' → logprob: -6.267197132110596
    5. 'float' → logprob: -8.767196655273438
    6. ' inf' → logprob: -10.392196655273438
    7. ' r' → logprob: -10.892196655273438
    8. '1' → logprob: -12.267196655273438
    9. ' float' → logprob: -13.267196655273438
    10. ' ' → logprob: -14.392196655273438

Token 469: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00037597675691358745
    2. 'inf' → logprob: -8.375375747680664
    3. 'r' → logprob: -9.000375747680664
    4. 'float' → logprob: -11.125375747680664
    5. ' ' → logprob: -12.000375747680664
    6. '1' → logprob: -14.000375747680664
    7. 'in' → logprob: -16.250375747680664
    8. '100' → logprob: -17.125375747680664
    9. '-inf' → logprob: -17.250375747680664
    10. ' inf' → logprob: -17.250375747680664

Token 470: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05819695442914963
    2. ':
' → logprob: -3.058197021484375
    3. '           ' → logprob: -5.058197021484375
    4. ' or' → logprob: -5.933197021484375
    5. '       ' → logprob: -7.933197021484375
    6. '.' → logprob: -9.683197021484375
    7. ',' → logprob: -9.933197021484375
    8. 'or' → logprob: -11.183197021484375
    9. ':
' → logprob: -11.183197021484375
    10. ' and' → logprob: -11.433197021484375

Token 471: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07347225397825241
    2. '       ' → logprob: -2.698472261428833
    3. 'print' → logprob: -5.948472023010254
    4. ' print' → logprob: -7.198472023010254
    5. '               ' → logprob: -9.573472023010254
    6. '	       ' → logprob: -9.823472023010254
    7. '```' → logprob: -10.948472023010254
    8. '   ' → logprob: -12.073472023010254
    9. '		' → logprob: -12.573472023010254
    10. '                       ' → logprob: -12.823472023010254

Token 472: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.20241191983222961
    2. ' print' → logprob: -1.7024118900299072
    3. '       ' → logprob: -7.577412128448486
    4. '           ' → logprob: -7.702412128448486
    5. '	print' → logprob: -11.077411651611328
    6. '   ' → logprob: -11.702411651611328
    7. '```' → logprob: -12.327411651611328
    8. '
' → logprob: -13.077411651611328
    9. '	       ' → logprob: -14.452411651611328
    10. '    ' → logprob: -14.577411651611328

Token 473: '(-' (ID: 8087)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5045316219329834
    2. '(-' → logprob: -1.6295316219329834
    3. '-' → logprob: -2.1295316219329834
    4. '(' → logprob: -3.1295316219329834
    5. 'No' → logprob: -4.7545318603515625
    6. '("-' → logprob: -5.0045318603515625
    7. '('' → logprob: -5.1295318603515625
    8. '0' → logprob: -5.3795318603515625
    9. '"No' → logprob: -5.8795318603515625
    10. 'Impossible' → logprob: -6.2545318603515625

Token 474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. 'inf' → logprob: -16.625
    3. '2' → logprob: -19.0
    4. '0' → logprob: -19.625
    5. 'float' → logprob: -20.25
    6. ' ' → logprob: -20.375
    7. '100' → logprob: -21.125
    8. '9' → logprob: -21.625
    9. '۱' → logprob: -21.75
    10. '```' → logprob: -21.875

Token 475: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007607458624988794
    2. ')
' → logprob: -4.882607460021973
    3. 'else' → logprob: -15.382607460021973
    4. ' )' → logprob: -15.882607460021973
    5. '),' → logprob: -16.007606506347656
    6. ')
' → logprob: -16.132606506347656
    7. '   ' → logprob: -16.132606506347656
    8. '))' → logprob: -16.382606506347656
    9. '`)' → logprob: -16.382606506347656
    10. '())' → logprob: -16.507606506347656

Token 476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001189510803669691
    2. 'else' → logprob: -7.751189708709717
    3. '```' → logprob: -8.126189231872559
    4. '           ' → logprob: -8.501189231872559
    5. ' else' → logprob: -8.876189231872559
    6. '<|end|>' → logprob: -9.251189231872559
    7. '   ' → logprob: -11.251189231872559
    8. '	' → logprob: -12.501189231872559
    9. '<|end|>' → logprob: -13.501189231872559
    10. '``' → logprob: -13.626189231872559

Token 477: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23886987566947937
    2. 'else' (adapté à ' else') → logprob: -2.1138699054718018
    3. ' else' → logprob: -2.9888699054718018
    4. '   ' → logprob: -3.2388699054718018
    5. '<|end|>' → logprob: -6.738869667053223
    6. '```' → logprob: -7.988869667053223
    7. '           ' → logprob: -8.363869667053223
    8. 'elif' → logprob: -9.363869667053223
    9. '(' → logprob: -9.613869667053223
    10. '	else' → logprob: -9.738869667053223

Token 478: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13988541066646576
    2. ':' → logprob: -2.264885425567627
    3. '(' → logprob: -4.014885425567627
    4. ' print' → logprob: -6.014885425567627
    5. ',' → logprob: -7.139885425567627
    6. ':
' → logprob: -7.139885425567627
    7. '       ' → logprob: -7.139885425567627
    8. '(print' → logprob: -7.264885425567627
    9. '():' → logprob: -7.514885425567627
    10. 'print' → logprob: -7.514885425567627

Token 479: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7879907488822937
    2. ' print' → logprob: -0.7879907488822937
    3. 'print' → logprob: -2.4129908084869385
    4. '       ' → logprob: -7.162990570068359
    5. ' f' → logprob: -9.66299057006836
    6. '```' → logprob: -10.41299057006836
    7. '   ' → logprob: -11.03799057006836
    8. ' ' → logprob: -11.28799057006836
    9. '               ' → logprob: -11.66299057006836
    10. '{' → logprob: -11.91299057006836

Token 480: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009284949628636241
    2. ' print' → logprob: -7.0009284019470215
    3. '           ' → logprob: -11.00092887878418
    4. '```' → logprob: -15.75092887878418
    5. 'printf' → logprob: -16.87592887878418
    6. '{' → logprob: -16.87592887878418
    7. '	print' → logprob: -18.50092887878418
    8. '               ' → logprob: -19.50092887878418
    9. '`' → logprob: -19.75092887878418
    10. '``' → logprob: -19.75092887878418

Token 481: '(ans' (ID: 70054)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.07259951531887054
    2. '(ans' → logprob: -3.197599411010742
    3. '("' → logprob: -4.947599411010742
    4. '('' → logprob: -4.947599411010742
    5. '(int' → logprob: -5.072599411010742
    6. '(' → logprob: -5.197599411010742
    7. '(round' → logprob: -6.447599411010742
    8. '("{' → logprob: -6.947599411010742
    9. '("%.' → logprob: -8.322599411010742
    10. '('{' → logprob: -8.697599411010742

Token 482: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. '()' → logprob: -13.500007629394531
    3. '())' → logprob: -13.500007629394531
    4. ' )' → logprob: -13.750007629394531
    5. '   ' → logprob: -14.000007629394531
    6. ')
' → logprob: -14.125007629394531
    7. ',' → logprob: -14.250007629394531
    8. '')' → logprob: -15.375007629394531
    9. '`)' → logprob: -16.12500762939453
    10. ')`' → logprob: -16.12500762939453

Token 483: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00020127551397308707
    2. ' if' → logprob: -8.625201225280762
    3. '```' → logprob: -11.750201225280762
    4. '<|end|>' → logprob: -11.750201225280762
    5. '#' → logprob: -13.000201225280762
    6. '
' → logprob: -13.125201225280762
    7. 'print' → logprob: -14.250201225280762
    8. 'main' → logprob: -15.125201225280762
    9. '\' → logprob: -16.000202178955078
    10. ')' → logprob: -16.000202178955078

Token 484: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0789693221449852
    2. '__' → logprob: -2.5789692401885986
    3. '_' → logprob: -9.82896900177002
    4. '_name' → logprob: -11.70396900177002
    5. ' ' → logprob: -11.70396900177002
    6. '___' → logprob: -12.32896900177002
    7. ' _' → logprob: -12.70396900177002
    8. ' ___' → logprob: -14.57896900177002
    9. '﻿' → logprob: -14.95396900177002
    10. ' ' → logprob: -15.07896900177002

Token 485: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09293147921562195
    2. '==' → logprob: -2.7179315090179443
    3. ' ==' → logprob: -4.092931270599365
    4. '=="' → logprob: -6.217931270599365
    5. 'name' → logprob: -6.842931270599365
    6. '<|end|>' → logprob: -7.717931270599365
    7. '.__' → logprob: -8.092931747436523
    8. '=='' → logprob: -8.342931747436523
    9. '__.__' → logprob: -8.467931747436523
    10. '[' → logprob: -8.592931747436523

Token 486: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006515554850921035
    2. '==' → logprob: -7.7506513595581055
    3. '__.__' → logprob: -9.250651359558105
    4. '=="' → logprob: -9.375651359558105
    5. ' ==' → logprob: -10.875651359558105
    6. '__
' → logprob: -12.000651359558105
    7. '__.' → logprob: -12.875651359558105
    8. '__":
' → logprob: -12.875651359558105
    9. '___' → logprob: -13.500651359558105
    10. '_' → logprob: -13.625651359558105

Token 487: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.80439293384552
    2. '__' → logprob: -1.42939293384552
    3. '=="' → logprob: -1.80439293384552
    4. ' ==' → logprob: -1.92939293384552
    5. '=='' → logprob: -5.8043928146362305
    6. '==
' → logprob: -8.55439281463623
    7. '=' → logprob: -10.42939281463623
    8. '"' → logprob: -10.67939281463623
    9. '===' → logprob: -11.05439281463623
    10. '_' → logprob: -11.30439281463623

Token 488: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1002296432852745
    2. ''' → logprob: -2.3502297401428223
    3. '__' → logprob: -10.850229263305664
    4. ' "__' → logprob: -12.850229263305664
    5. '"name' → logprob: -15.100229263305664
    6. ' '__' → logprob: -15.225229263305664
    7. '"user' → logprob: -16.100229263305664
    8. ''name' → logprob: -16.350229263305664
    9. ''"' → logprob: -16.850229263305664
    10. '"class' → logprob: -17.350229263305664

Token 489: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08214070647954941
    2. '"' → logprob: -3.2071406841278076
    3. '__' → logprob: -3.3321406841278076
    4. ''' → logprob: -5.957140922546387
    5. 'name' → logprob: -9.832140922546387
    6. '_main' → logprob: -11.832140922546387
    7. ' main' → logprob: -12.582140922546387
    8. '=="' → logprob: -12.957140922546387
    9. '__":
' → logprob: -13.082140922546387
    10. '___' → logprob: -13.082140922546387

Token 490: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.027352560311555862
    2. '__' → logprob: -3.6523525714874268
    3. '__':
' → logprob: -6.902352333068848
    4. '__.' → logprob: -11.152352333068848
    5. '__["' → logprob: -11.652352333068848
    6. '__
' → logprob: -12.152352333068848
    7. '__.__' → logprob: -12.527352333068848
    8. '__:' → logprob: -12.527352333068848
    9. '__
' → logprob: -12.902352333068848
    10. '.' → logprob: -13.027352333068848

Token 491: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005731586366891861
    2. 'solve' → logprob: -5.505731582641602
    3. '	main' → logprob: -6.755731582641602
    4. '   ' → logprob: -7.880731582641602
    5. ' main' → logprob: -9.255731582641602
    6. '__' → logprob: -12.005731582641602
    7. ' solve' → logprob: -13.130731582641602
    8. '    
' → logprob: -13.505731582641602
    9. '_main' → logprob: -13.880731582641602
    10. ' ' → logprob: -13.880731582641602

Token 492: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -17.0
    3. 'import' → logprob: -17.5
    4. '	main' → logprob: -20.0
    5. '   ' → logprob: -20.875
    6. '(main' → logprob: -25.625
    7. '```' → logprob: -25.875
    8. 'from' → logprob: -26.125
    9. '.main' → logprob: -26.125
    10. '_main' → logprob: -26.625

Token 493: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 491
Tokens correctement prédits (1ère position, stricte): 198
Tokens correctement prédits (1ère position, avec adaptation): 212
Tokens correctement prédits (top 10): 400
Précision stricte (1ère position): 40.33%
Précision adaptée (1ère position): 43.18%
Précision (top 10): 81.47%
================================================================================
