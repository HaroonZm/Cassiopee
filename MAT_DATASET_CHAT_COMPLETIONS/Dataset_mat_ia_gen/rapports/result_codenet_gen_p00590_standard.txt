================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:00:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

MAX = 10000
sieve = [True] * (MAX + 1)
sieve[0] = sieve[1] = False
for i in range(2, int(MAX**0.5) + 1):
    if sieve[i]:
        for j in range(i*i, MAX + 1, i):
            sieve[j] = False

for line in sys.stdin:
    if not line.strip():
        continue
    N = int(line)
    count = sum(1 for i in range(1, N+1) if sieve[i] and sieve[N - i + 1])
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'MAX' (ID: 21911)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0907522663474083
    2. '_SIZE' → logprob: -3.340752363204956
    3. '_LENGTH' → logprob: -3.590752363204956
    4. '_LINE' → logprob: -4.715752124786377
    5. '_SPACE' → logprob: -5.590752124786377
    6. '_DEPTH' → logprob: -6.840752124786377
    7. '_WORD' → logprob: -6.840752124786377
    8. '_TOKEN' → logprob: -6.965752124786377
    9. '_VALUE' → logprob: -6.965752124786377
    10. '_LEN' → logprob: -7.215752124786377

Token 5: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02205442637205124
    2. '100' → logprob: -3.897054433822632
    3. '10' → logprob: -6.647054195404053
    4. ' sys' → logprob: -9.022054672241211
    5. '999' → logprob: -10.772054672241211
    6. '256' → logprob: -10.897054672241211
    7. 'sys' → logprob: -11.397054672241211
    8. '1' → logprob: -11.522054672241211
    9. '102' → logprob: -11.647054672241211
    10. '255' → logprob: -11.897054672241211

Token 6: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.050563447177410126
    2. '10' → logprob: -3.050563335418701
    3. ' ' → logprob: -6.425563335418701
    4. '999' → logprob: -8.67556381225586
    5. '102' → logprob: -9.67556381225586
    6. '1' → logprob: -10.42556381225586
    7. 'sys' → logprob: -10.42556381225586
    8. '2' → logprob: -10.80056381225586
    9. '255' → logprob: -11.42556381225586
    10. '256' → logprob: -11.55056381225586

Token 7: '00' (ID: 504)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5522930026054382
    2. '\' → logprob: -1.427293062210083
    3. '_' → logprob: -2.052293062210083
    4. '```' → logprob: -4.052292823791504
    5. '
' → logprob: -4.677292823791504
    6. '' → logprob: -4.802292823791504
    7. '_
' → logprob: -5.052292823791504
    8. 'newline' → logprob: -6.177292823791504
    9. '*' → logprob: -6.427292823791504
    10. '<|end|>' → logprob: -6.677292823791504

Token 8: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7576292157173157
    2. '\n' → logprob: -0.7576292157173157
    3. '\' → logprob: -3.257629156112671
    4. '' → logprob: -5.13262939453125
    5. '```' → logprob: -5.63262939453125
    6. '

' → logprob: -5.75762939453125
    7. ' 
' → logprob: -6.13262939453125
    8. '_' → logprob: -6.38262939453125
    9. '
' → logprob: -6.38262939453125
    10. '  
' → logprob: -7.38262939453125

Token 9: 's' (ID: 82)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9288318157196045
    2. '\n' → logprob: -1.9288318157196045
    3. '_' → logprob: -2.0538318157196045
    4. '\' → logprob: -2.4288318157196045
    5. ',' → logprob: -3.4288318157196045
    6. 'def' → logprob: -3.5538318157196045
    7. '```' → logprob: -3.6788318157196045
    8. '*' → logprob: -3.6788318157196045
    9. '#' → logprob: -3.9288318157196045
    10. '0' → logprob: -4.178832054138184

Token 10: 'ieve' (ID: 3703)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.9520393013954163
    2. 'y' → logprob: -1.7020392417907715
    3. 'ys' → logprob: -1.7020392417907715
    4. ' =' → logprob: -1.9520392417907715
    5. 'tr' → logprob: -3.3270392417907715
    6. '=' → logprob: -4.2020392417907715
    7. 't' → logprob: -4.5770392417907715
    8. 'u' → logprob: -4.5770392417907715
    9. 'pace' → logprob: -4.8270392417907715
    10. '_' → logprob: -5.3270392417907715

Token 11: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07977656275033951
    2. '_' → logprob: -2.7047765254974365
    3. ' =' → logprob: -5.704776763916016
    4. '(' → logprob: -6.204776763916016
    5. '[]' → logprob: -6.704776763916016
    6. '[:]' → logprob: -6.704776763916016
    7. '.' → logprob: -7.579776763916016
    8. '=' → logprob: -7.579776763916016
    9. '\[' → logprob: -8.579776763916016
    10. '_s' → logprob: -8.954776763916016

Token 12: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.03807109594345093
    2. '[' → logprob: -3.2880711555480957
    3. '[s' → logprob: -11.038070678710938
    4. ' ' → logprob: -12.413070678710938
    5. '[int' → logprob: -12.538070678710938
    6. '[]' → logprob: -14.288070678710938
    7. '[MAX' → logprob: -14.538070678710938
    8. '[a' → logprob: -14.538070678710938
    9. ' []' → logprob: -14.663070678710938
    10. '[i' → logprob: -14.663070678710938

Token 13: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5785563588142395
    2. ' True' → logprob: -0.8285563588142395
    3. 'False' → logprob: -6.078556537628174
    4. ' False' → logprob: -8.453556060791016
    5. '1' → logprob: -9.578556060791016
    6. '0' → logprob: -10.453556060791016
    7. '(True' → logprob: -11.578556060791016
    8. ' ' → logprob: -14.328556060791016
    9. 'T' → logprob: -14.953556060791016
    10. ']' → logprob: -15.578556060791016

Token 14: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3189999759197235
    2. ' for' → logprob: -1.944000005722046
    3. ',' → logprob: -2.069000005722046
    4. ' ]' → logprob: -6.318999767303467
    5. ']*' → logprob: -6.818999767303467
    6. 'for' → logprob: -7.693999767303467
    7. ' ' → logprob: -8.694000244140625
    8. ')' → logprob: -10.069000244140625
    9. ' ,' → logprob: -10.444000244140625
    10. '[' → logprob: -10.694000244140625

Token 15: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0064810514450073
    2. ']' → logprob: -1.1314810514450073
    3. ' for' → logprob: -1.2564810514450073
    4. 'for' → logprob: -4.006481170654297
    5. ',' → logprob: -5.506481170654297
    6. ']*' → logprob: -6.256481170654297
    7. '(' → logprob: -6.756481170654297
    8. '*' → logprob: -7.506481170654297
    9. '[:]' → logprob: -8.131481170654297
    10. ' ]' → logprob: -8.631481170654297

Token 16: ' (' (ID: 350)
  Prédit: '(MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.07195743173360825
    2. 'MAX' → logprob: -2.6969573497772217
    3. '(' → logprob: -7.071957588195801
    4. ' (' → logprob: -7.571957588195801
    5. ' MAX' → logprob: -7.571957588195801
    6. '100' → logprob: -9.3219575881958
    7. '(M' → logprob: -10.4469575881958
    8. '(Max' → logprob: -11.9469575881958
    9. '[MAX' → logprob: -12.5719575881958
    10. '(max' → logprob: -12.6969575881958

Token 17: 'MAX' (ID: 21911)
  Prédit: 'MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.00991982314735651
    2. '(MAX' → logprob: -4.6349196434021
    3. ' MAX' → logprob: -8.759920120239258
    4. '(' → logprob: -13.509920120239258
    5. '[MAX' → logprob: -14.009920120239258
    6. '_MAX' → logprob: -14.134920120239258
    7. 'max' → logprob: -14.634920120239258
    8. ' (' → logprob: -14.759920120239258
    9. 'MA' → logprob: -14.884920120239258
    10. '(M' → logprob: -14.884920120239258

Token 18: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02637322060763836
    2. ' +' → logprob: -3.7763731479644775
    3. ')' → logprob: -5.776373386383057
    4. ' )' → logprob: -11.151372909545898
    5. '+)' → logprob: -12.026372909545898
    6. ' ' → logprob: -13.776372909545898
    7. ')+' → logprob: -14.526372909545898
    8. '))' → logprob: -15.776372909545898
    9. '```' → logprob: -15.776372909545898
    10. '1' → logprob: -15.776372909545898

Token 19: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06993710249662399
    2. ' ' → logprob: -2.694936990737915
    3. '  ' → logprob: -15.319936752319336
    4. ' ' → logprob: -15.569936752319336
    5. ' )' → logprob: -15.944936752319336
    6. ')' → logprob: -16.194936752319336
    7. '2' → logprob: -16.819936752319336
    8. '   ' → logprob: -17.319936752319336
    9. '```' → logprob: -17.507436752319336
    10. '１' → logprob: -18.257436752319336

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004882152716163546
    2. ' ' → logprob: -7.62548828125
    3. '0' → logprob: -15.87548828125
    4. '  ' → logprob: -16.75048828125
    5. ')' → logprob: -17.25048828125
    6. '   ' → logprob: -17.50048828125
    7. '2' → logprob: -17.87548828125
    8. '```' → logprob: -18.12548828125
    9. '１' → logprob: -19.31298828125
    10. '7' → logprob: -19.37548828125

Token 21: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2471589798224159e-05
    2. ' )' → logprob: -11.750012397766113
    3. ')
' → logprob: -12.375012397766113
    4. ')

' → logprob: -16.50001335144043
    5. ']' → logprob: -16.75001335144043
    6. '[' → logprob: -17.00001335144043
    7. '))' → logprob: -17.25001335144043
    8. '),' → logprob: -17.37501335144043
    9. ')
' → logprob: -17.62501335144043
    10. '```' → logprob: -17.87501335144043

Token 22: 's' (ID: 82)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8033872842788696
    2. 's' → logprob: -1.1783872842788696
    3. 'for' → logprob: -1.8033872842788696
    4. '\n' → logprob: -3.17838716506958
    5. ' 
' → logprob: -4.80338716506958
    6. '#' → logprob: -4.92838716506958
    7. '
' → logprob: -5.17838716506958
    8. '  
' → logprob: -5.30338716506958
    9. ' for' → logprob: -5.42838716506958
    10. '```' → logprob: -5.80338716506958

Token 23: 'ieve' (ID: 3703)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0020659223664551973
    2. 'ieve' → logprob: -6.252066135406494
    3. ' ' → logprob: -9.502065658569336
    4. 'ie' → logprob: -10.752065658569336
    5. '[i' → logprob: -11.752065658569336
    6. 'u' → logprob: -12.252065658569336
    7. ' i' → logprob: -12.252065658569336
    8. 'iev' → logprob: -12.377065658569336
    9. '	i' → logprob: -12.377065658569336
    10. '=' → logprob: -13.002065658569336

Token 24: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00034654809860512614
    2. '\[' → logprob: -9.000346183776855
    3. '[:]' → logprob: -9.125346183776855
    4. '[]' → logprob: -10.250346183776855
    5. '[
' → logprob: -10.500346183776855
    6. '<|end|>' → logprob: -11.000346183776855
    7. '```' → logprob: -11.250346183776855
    8. '[...]' → logprob: -11.375346183776855
    9. ' ' → logprob: -13.500346183776855
    10. ']' → logprob: -13.750346183776855

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.297462171758525e-05
    2. ' ' → logprob: -10.375033378601074
    3. '1' → logprob: -14.250033378601074
    4. '2' → logprob: -14.500033378601074
    5. ':' → logprob: -15.000033378601074
    6. ')' → logprob: -16.375032424926758
    7. '   ' → logprob: -16.625032424926758
    8. '-' → logprob: -17.250032424926758
    9. '  ' → logprob: -17.250032424926758
    10. '۰' → logprob: -17.437532424926758

Token 26: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020570266991853714
    2. ' ]' → logprob: -3.8955702781677246
    3. ']=' → logprob: -10.895569801330566
    4. '=' → logprob: -12.770569801330566
    5. '],' → logprob: -12.895569801330566
    6. ' ' → logprob: -13.020569801330566
    7. ' =' → logprob: -13.645569801330566
    8. '']' → logprob: -14.895569801330566
    9. ',' → logprob: -15.645569801330566
    10. ')' → logprob: -15.645569801330566

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018552565947175026
    2. '=' → logprob: -4.018552780151367
    3. ' ' → logprob: -7.893552780151367
    4. ' ==' → logprob: -11.518552780151367
    5. ',' → logprob: -11.643552780151367
    6. ' =
' → logprob: -12.268552780151367
    7. '=False' → logprob: -13.393552780151367
    8. ' =
' → logprob: -13.893552780151367
    9. ' ,' → logprob: -13.893552780151367
    10. ' |=' → logprob: -14.143552780151367

Token 28: ' sieve' (ID: 142781)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.12692862749099731
    2. ' False' → logprob: -2.1269285678863525
    3. '(False' → logprob: -15.626928329467773
    4. '=False' → logprob: -16.126928329467773
    5. 'F' → logprob: -16.376928329467773
    6. '.False' → logprob: -16.876928329467773
    7. ' ' → logprob: -17.001928329467773
    8. 's' → logprob: -17.626928329467773
    9. 'Falsy' → logprob: -18.001928329467773
    10. '_false' → logprob: -18.126928329467773

Token 29: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.590104698669165e-05
    2. 'False' → logprob: -9.375085830688477
    3. '```' → logprob: -14.750085830688477
    4. '1' → logprob: -15.000085830688477
    5. ' False' → logprob: -16.625085830688477
    6. ' [' → logprob: -16.875085830688477
    7. '=False' → logprob: -16.875085830688477
    8. '[
' → logprob: -17.625085830688477
    9. '(False' → logprob: -17.750085830688477
    10. '_false' → logprob: -18.875085830688477

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. ' ' → logprob: -11.375012397766113
    3. 'False' → logprob: -14.375012397766113
    4. ']' → logprob: -16.375011444091797
    5. '0' → logprob: -18.500011444091797
    6. '```' → logprob: -18.625011444091797
    7. '[' → logprob: -18.750011444091797
    8. 'True' → logprob: -18.875011444091797
    9. '۱' → logprob: -19.125011444091797
    10. '  ' → logprob: -19.312511444091797

Token 31: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0049974978901445866
    2. '=' → logprob: -6.004997730255127
    3. ' =' → logprob: -6.129997730255127
    4. ' ]' → logprob: -8.254997253417969
    5. ']=' → logprob: -10.004997253417969
    6. 'False' → logprob: -11.129997253417969
    7. ')' → logprob: -11.254997253417969
    8. ' ' → logprob: -12.379997253417969
    9. '=False' → logprob: -13.129997253417969
    10. '[' → logprob: -13.754997253417969

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011125989258289337
    2. '=' → logprob: -4.5111260414123535
    3. '=False' → logprob: -10.011125564575195
    4. 'False' → logprob: -10.511125564575195
    5. ' False' → logprob: -12.136125564575195
    6. ' ' → logprob: -15.011125564575195
    7. ' =
' → logprob: -16.886125564575195
    8. 'false' → logprob: -17.386125564575195
    9. '[' → logprob: -17.636125564575195
    10. '_false' → logprob: -18.011125564575195

Token 33: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.31326186656951904
    2. 'False' → logprob: -1.313261866569519
    3. ' ' → logprob: -15.813261985778809
    4. '(False' → logprob: -18.063261032104492
    5. '=False' → logprob: -19.313261032104492
    6. ' ' → logprob: -19.938261032104492
    7. '_false' → logprob: -19.938261032104492
    8. '.False' → logprob: -20.313261032104492
    9. ' false' → logprob: -20.563261032104492
    10. 'F' → logprob: -21.938261032104492

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15799446403980255
    2. 'for' → logprob: -2.032994508743286
    3. '\n' → logprob: -5.532994270324707
    4. ' for' → logprob: -5.657994270324707
    5. ' 
' → logprob: -5.782994270324707
    6. '
' → logprob: -6.407994270324707
    7. '' → logprob: -6.907994270324707
    8. '```' → logprob: -7.157994270324707
    9. '

' → logprob: -7.907994270324707
    10. '\' → logprob: -8.282994270324707

Token 35: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03299862891435623
    2. '
' → logprob: -4.157998561859131
    3. ' for' → logprob: -4.157998561859131
    4. '\n' → logprob: -7.657998561859131
    5. '```' → logprob: -7.782998561859131
    6. ' 
' → logprob: -9.282999038696289
    7. '' → logprob: -9.657999038696289
    8. '\' → logprob: -10.032999038696289
    9. '
' → logprob: -10.282999038696289
    10. 'n' → logprob: -10.907999038696289

Token 36: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25235024094581604
    2. ' ' → logprob: -1.5023502111434937
    3. ' n' → logprob: -9.002349853515625
    4. 'i' → logprob: -9.627349853515625
    5. ' num' → logprob: -9.627349853515625
    6. '  ' → logprob: -9.752349853515625
    7. ' number' → logprob: -10.127349853515625
    8. ' p' → logprob: -10.252349853515625
    9. ' _' → logprob: -11.127349853515625
    10. ' x' → logprob: -12.002349853515625

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004425251390784979
    2. 'in' → logprob: -5.629425048828125
    3. ' ' → logprob: -7.129425048828125
    4. ' i' → logprob: -12.129425048828125
    5. '  ' → logprob: -12.254425048828125
    6. 'n' → logprob: -12.379425048828125
    7. 'range' → logprob: -13.379425048828125
    8. '2' → logprob: -13.629425048828125
    9. '	in' → logprob: -13.629425048828125
    10. ',' → logprob: -14.004425048828125

Token 38: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2087898552417755
    2. ' ' → logprob: -1.7087898254394531
    3. 'range' → logprob: -4.958789825439453
    4. '2' → logprob: -8.333789825439453
    5. ' space' → logprob: -9.833789825439453
    6. ' xrange' → logprob: -11.583789825439453
    7. '	range' → logprob: -11.958789825439453
    8. ' in' → logprob: -12.083789825439453
    9. ' ' → logprob: -12.208789825439453
    10. 'space' → logprob: -13.083789825439453

Token 39: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004597439547069371
    2. ' (' → logprob: -8.250459671020508
    3. ' ' → logprob: -8.750459671020508
    4. '2' → logprob: -10.125459671020508
    5. '(
' → logprob: -17.000459671020508
    6. '  ' → logprob: -17.750459671020508
    7. '(space' → logprob: -18.375459671020508
    8. '()' → logprob: -18.500459671020508
    9. '1' → logprob: -19.000459671020508
    10. '<|end|>' → logprob: -19.375459671020508

Token 40: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021853535436093807
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -15.877185821533203
    4. '  ' → logprob: -16.877185821533203
    5. ')' → logprob: -17.002185821533203
    6. '```' → logprob: -17.127185821533203
    7. '(' → logprob: -18.002185821533203
    8. ' )' → logprob: -18.127185821533203
    9. '２' → logprob: -18.377185821533203
    10. '	' → logprob: -18.377185821533203

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023640718311071396
    2. ' ,' → logprob: -3.7736406326293945
    3. ' ' → logprob: -7.8986406326293945
    4. ' )' → logprob: -11.648640632629395
    5. ')' → logprob: -11.898640632629395
    6. ':' → logprob: -13.523640632629395
    7. ' in' → logprob: -14.023640632629395
    8. '  ' → logprob: -14.148640632629395
    9. ',max' → logprob: -14.273640632629395
    10. ' :' → logprob: -14.898640632629395

Token 42: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.35962989926338196
    2. 'int' → logprob: -1.2346298694610596
    3. ' MAX' → logprob: -4.734630107879639
    4. 'MAX' → logprob: -6.109630107879639
    5. ' ' → logprob: -10.23462963104248
    6. '(int' → logprob: -10.60962963104248
    7. '   ' → logprob: -11.35962963104248
    8. '(MAX' → logprob: -11.73462963104248
    9. ')' → logprob: -12.10962963104248
    10. '101' → logprob: -12.35962963104248

Token 43: '(MAX' (ID: 129209)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2050345540046692
    2. '(MAX' → logprob: -1.7050344944000244
    3. '(s' → logprob: -5.7050347328186035
    4. '((' → logprob: -8.830034255981445
    5. '(max' → logprob: -9.830034255981445
    6. '(len' → logprob: -10.705034255981445
    7. ' (' → logprob: -10.705034255981445
    8. '(i' → logprob: -11.080034255981445
    9. '(M' → logprob: -11.830034255981445
    10. '(
' → logprob: -11.955034255981445

Token 44: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03382331132888794
    2. ' **' → logprob: -3.408823251724243
    3. '(' → logprob: -9.658823013305664
    4. ' ' → logprob: -9.658823013305664
    5. '.sqrt' → logprob: -11.533823013305664
    6. ')' → logprob: -11.908823013305664
    7. '*' → logprob: -11.908823013305664
    8. ''s' → logprob: -11.908823013305664
    9. ')**' → logprob: -12.158823013305664
    10. ' (' → logprob: -12.533823013305664

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010247035970678553
    2. '.' → logprob: -9.500102043151855
    3. ' ' → logprob: -10.500102043151855
    4. ' .' → logprob: -17.500102996826172
    5. '(' → logprob: -18.000102996826172
    6. ')' → logprob: -18.125102996826172
    7. '```' → logprob: -19.500102996826172
    8. ' ' → logprob: -19.625102996826172
    9. '2' → logprob: -20.125102996826172
    10. '  ' → logprob: -20.250102996826172

Token 46: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.650518920039758e-06
    2. ' .' → logprob: -13.875003814697266
    3. '5' → logprob: -14.000003814697266
    4. '0' → logprob: -14.000003814697266
    5. ' ' → logprob: -15.625003814697266
    6. '```' → logprob: -16.250003814697266
    7. '50' → logprob: -16.437503814697266
    8. '1' → logprob: -16.687503814697266
    9. '2' → logprob: -16.875003814697266
    10. '3' → logprob: -16.937503814697266

Token 47: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.200166469876422e-06
    2. '```' → logprob: -13.750004768371582
    3. '.' → logprob: -14.000004768371582
    4. '   ' → logprob: -14.812504768371582
    5. ' ' → logprob: -15.000004768371582
    6. '4' → logprob: -15.250004768371582
    7. '``' → logprob: -15.250004768371582
    8. '  ' → logprob: -15.437504768371582
    9. '0' → logprob: -15.625004768371582
    10. '

' → logprob: -15.937504768371582

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01304375659674406
    2. ')+' → logprob: -4.3880438804626465
    3. ' )' → logprob: -7.6380438804626465
    4. '+' → logprob: -10.013043403625488
    5. ' +' → logprob: -12.138043403625488
    6. '()' → logprob: -14.388043403625488
    7. '```' → logprob: -14.763043403625488
    8. ' ' → logprob: -15.013043403625488
    9. '+)' → logprob: -15.138043403625488
    10. ' ' → logprob: -16.513044357299805

Token 49: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6336740851402283
    2. '+' → logprob: -0.7586740851402283
    3. ')' → logprob: -7.258674144744873
    4. ')+' → logprob: -8.133673667907715
    5. ' ' → logprob: -9.758673667907715
    6. '()+' → logprob: -11.758673667907715
    7. '()' → logprob: -12.258673667907715
    8. ' )' → logprob: -12.883673667907715
    9. '(' → logprob: -13.758673667907715
    10. '1' → logprob: -14.758673667907715

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931504011154175
    2. ' ' → logprob: -0.6931504011154175
    3. '2' → logprob: -13.818150520324707
    4. '  ' → logprob: -14.068150520324707
    5. ' ' → logprob: -14.193150520324707
    6. ')' → logprob: -15.068150520324707
    7. '```' → logprob: -15.443150520324707
    8. ' )' → logprob: -15.943150520324707
    9. '   ' → logprob: -16.44314956665039
    10. '	' → logprob: -17.69314956665039

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00103352265432477
    2. ' ' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.251033782958984
    4. '  ' → logprob: -15.376033782958984
    5. '```' → logprob: -16.126033782958984
    6. '2' → logprob: -16.626033782958984
    7. ')' → logprob: -17.001033782958984
    8. '    ' → logprob: -17.001033782958984
    9. ' ' → logprob: -17.501033782958984
    10. '(' → logprob: -17.751033782958984

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012712829746305943
    2. ':' → logprob: -4.3877129554748535
    3. '):
' → logprob: -9.137712478637695
    4. ')' → logprob: -9.637712478637695
    5. ' ):' → logprob: -10.637712478637695
    6. ':)' → logprob: -13.012712478637695
    7. ':**' → logprob: -14.012712478637695
    8. '}:' → logprob: -14.012712478637695
    9. '():' → logprob: -15.012712478637695
    10. '>:' → logprob: -15.262712478637695

Token 53: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.531487762928009
    2. '   ' → logprob: -1.1564877033233643
    3. ' ' → logprob: -2.6564877033233643
    4. '    ' → logprob: -4.781487941741943
    5. '<|end|>' → logprob: -4.781487941741943
    6. ':
' → logprob: -5.531487941741943
    7. ' if' → logprob: -5.781487941741943
    8. '  ' → logprob: -6.531487941741943
    9. ' :' → logprob: -7.781487941741943
    10. '    
' → logprob: -8.031487464904785

Token 54: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015398098155856133
    2. ' if' → logprob: -4.265398025512695
    3. 'if' (adapté à ' if') → logprob: -7.765398025512695
    4. '<|end|>' → logprob: -8.015398025512695
    5. '    ' → logprob: -8.390398025512695
    6. ' 
' → logprob: -9.390398025512695
    7. '  ' → logprob: -9.640398025512695
    8. 's' → logprob: -10.390398025512695
    9. '   ' → logprob: -10.640398025512695
    10. ' i' → logprob: -11.890398025512695

Token 55: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.26553356647491455
    2. 's' → logprob: -1.6405335664749146
    3. ' ' → logprob: -3.265533447265625
    4. ' ' → logprob: -7.015533447265625
    5. '	s' → logprob: -9.265533447265625
    6. '  ' → logprob: -9.640533447265625
    7. ' s' → logprob: -10.015533447265625
    8. ' not' → logprob: -10.265533447265625
    9. ' ‌' → logprob: -13.140533447265625
    10. '(s' → logprob: -13.515533447265625

Token 56: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.014170088805258274
    2. '[' → logprob: -4.264170169830322
    3. '[I' → logprob: -12.389169692993164
    4. '\[' → logprob: -14.014169692993164
    5. '```' → logprob: -15.139169692993164
    6. '[ip' → logprob: -15.514169692993164
    7. '[s' → logprob: -15.514169692993164
    8. '[ii' → logprob: -15.889169692993164
    9. '[j' → logprob: -15.889169692993164
    10. ' ' → logprob: -16.139169692993164

Token 57: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.048728276044130325
    2. ']' → logprob: -3.7987282276153564
    3. ':' → logprob: -3.9237282276153564
    4. '):' → logprob: -5.2987284660339355
    5. ' ]' → logprob: -8.673727989196777
    6. '[' → logprob: -9.423727989196777
    7. ' ):' → logprob: -10.298727989196777
    8. ']==' → logprob: -10.673727989196777
    9. ']=' → logprob: -11.173727989196777
    10. ']:
' → logprob: -11.423727989196777

Token 58: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6364812850952148
    2. '    ' → logprob: -1.3864812850952148
    3. '       ' → logprob: -1.7614812850952148
    4. '   ' → logprob: -3.386481285095215
    5. 's' → logprob: -6.136481285095215
    6. '  ' → logprob: -6.261481285095215
    7. '<|end|>' → logprob: -6.386481285095215
    8. '     ' → logprob: -6.636481285095215
    9. '        
' → logprob: -6.761481285095215
    10. '        ' → logprob: -6.761481285095215

Token 59: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03100857324898243
    2. 'for' (adapté à ' for') → logprob: -4.156008720397949
    3. ' ' → logprob: -5.406008720397949
    4. '    ' → logprob: -5.531008720397949
    5. '   ' → logprob: -5.906008720397949
    6. ' j' → logprob: -6.406008720397949
    7. ' i' → logprob: -6.656008720397949
    8. ' s' → logprob: -8.78100872039795
    9. 's' → logprob: -8.90600872039795
    10. 'i' → logprob: -9.90600872039795

Token 60: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4063182771205902
    2. ' j' → logprob: -1.1563183069229126
    3. 'j' → logprob: -4.031318187713623
    4. ' range' → logprob: -7.781318187713623
    5. ' i' → logprob: -8.406318664550781
    6. ' (' → logprob: -8.906318664550781
    7. 'range' → logprob: -9.156318664550781
    8. '  ' → logprob: -9.281318664550781
    9. '    ' → logprob: -9.406318664550781
    10. 's' → logprob: -9.531318664550781

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07958810776472092
    2. 'in' → logprob: -2.5795881748199463
    3. ' ' → logprob: -8.079587936401367
    4. '	in' → logprob: -8.954587936401367
    5. ' i' → logprob: -9.079587936401367
    6. '<|end|>' → logprob: -9.579587936401367
    7. '=' → logprob: -10.079587936401367
    8. ' =' → logprob: -11.579587936401367
    9. '=in' → logprob: -12.454587936401367
    10. 's' → logprob: -12.954587936401367

Token 62: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5761998891830444
    2. 'range' → logprob: -0.8261998891830444
    3. ' i' → logprob: -8.951199531555176
    4. 'i' → logprob: -9.701199531555176
    5. '   ' → logprob: -10.951199531555176
    6. ' ' → logprob: -10.951199531555176
    7. '	range' → logprob: -11.326199531555176
    8. 'r' → logprob: -12.076199531555176
    9. '(range' → logprob: -12.701199531555176
    10. ')' → logprob: -12.826199531555176

Token 63: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006924234330654144
    2. '(' → logprob: -5.006924152374268
    3. ' i' → logprob: -9.256924629211426
    4. 'i' → logprob: -9.756924629211426
    5. ' (' → logprob: -10.006924629211426
    6. '   ' → logprob: -12.381924629211426
    7. ')' → logprob: -13.131924629211426
    8. '	i' → logprob: -13.506924629211426
    9. ' ' → logprob: -13.756924629211426
    10. '(j' → logprob: -15.256924629211426

Token 64: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.06213999167084694
    2. '*' → logprob: -2.8121399879455566
    3. ' *' → logprob: -8.687140464782715
    4. 'i' → logprob: -12.687140464782715
    5. '*j' → logprob: -15.562140464782715
    6. ' ' → logprob: -16.0621395111084
    7. '**' → logprob: -16.3121395111084
    8. '2' → logprob: -17.1871395111084
    9. '*,' → logprob: -17.6871395111084
    10. '*
' → logprob: -17.8121395111084

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.958325295476243e-05
    2. ' ,' → logprob: -10.250079154968262
    3. 'MAX' → logprob: -10.750079154968262
    4. '(MAX' → logprob: -11.125079154968262
    5. '[MAX' → logprob: -12.625079154968262
    6. ',max' → logprob: -13.500079154968262
    7. ' MAX' → logprob: -13.750079154968262
    8. ';' → logprob: -14.500079154968262
    9. ',
' → logprob: -14.750079154968262
    10. ')' → logprob: -14.875079154968262

Token 66: ' MAX' (ID: 16960)
  Prédit: ' MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MAX' → logprob: -0.6933720707893372
    2. 'MAX' → logprob: -0.6933720707893372
    3. '(MAX' → logprob: -8.443371772766113
    4. ' ' → logprob: -12.568371772766113
    5. '_MAX' → logprob: -13.318371772766113
    6. '   ' → logprob: -13.318371772766113
    7. '/MAX' → logprob: -14.193371772766113
    8. '[MAX' → logprob: -14.443371772766113
    9. '.MAX' → logprob: -15.068371772766113
    10. '    ' → logprob: -15.193371772766113

Token 67: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007099286303855479
    2. ' +' → logprob: -7.2507100105285645
    3. '+
' → logprob: -17.125709533691406
    4. ' ' → logprob: -17.875709533691406
    5. '```' → logprob: -18.750709533691406
    6. '1' → logprob: -19.000709533691406
    7. '+,' → logprob: -19.250709533691406
    8. '＋' → logprob: -19.500709533691406
    9. '
' → logprob: -19.625709533691406
    10. ',' → logprob: -19.750709533691406

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.625021934509277
    4. '```' → logprob: -16.625022888183594
    5. ')' → logprob: -17.375022888183594
    6. ',' → logprob: -17.500022888183594
    7. '  ' → logprob: -17.625022888183594
    8. '    ' → logprob: -18.125022888183594
    9. '' → logprob: -18.812522888183594
    10. '     ' → logprob: -18.875022888183594

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.625019073486328
    4. ')' → logprob: -16.375019073486328
    5. '```' → logprob: -16.500019073486328
    6. '  ' → logprob: -17.812519073486328
    7. '１' → logprob: -18.125019073486328
    8. '' → logprob: -18.250019073486328
    9. '۱' → logprob: -18.437519073486328
    10. '१' → logprob: -18.500019073486328

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0162152498960495
    2. ',i' → logprob: -4.1412153244018555
    3. ':i' → logprob: -9.641215324401855
    4. ' ,' → logprob: -9.766215324401855
    5. ',j' → logprob: -10.766215324401855
    6. ')' → logprob: -10.891215324401855
    7. ' i' → logprob: -11.766215324401855
    8. ':' → logprob: -13.641215324401855
    9. ')i' → logprob: -13.641215324401855
    10. '```' → logprob: -13.891215324401855

Token 71: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38688361644744873
    2. 'i' → logprob: -1.1368836164474487
    3. ')' → logprob: -12.011883735656738
    4. '	i' → logprob: -12.761883735656738
    5. ')i' → logprob: -13.011883735656738
    6. ' ' → logprob: -14.011883735656738
    7. ' )' → logprob: -16.011882781982422
    8. ' ' → logprob: -16.011882781982422
    9. ',i' → logprob: -17.011882781982422
    10. '‌' → logprob: -17.136882781982422

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.029847231227905e-05
    2. ')' → logprob: -10.000080108642578
    3. '):
' → logprob: -10.375080108642578
    4. ' ):' → logprob: -13.500080108642578
    5. ']:' → logprob: -13.500080108642578
    6. ':' → logprob: -14.250080108642578
    7. '):
' → logprob: -15.875080108642578
    8. ')：' → logprob: -17.625080108642578
    9. '+' → logprob: -18.000080108642578
    10. '   ' → logprob: -18.250080108642578

Token 73: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1452605277299881
    2. 's' → logprob: -2.2702605724334717
    3. ' sieve' → logprob: -3.5202605724334717
    4. '               ' → logprob: -6.395260334014893
    5. '       ' → logprob: -7.770260334014893
    6. '   ' → logprob: -10.02026081085205
    7. '	s' → logprob: -10.39526081085205
    8. ' ' → logprob: -10.89526081085205
    9. ' s' → logprob: -11.02026081085205
    10. '            
' → logprob: -11.27026081085205

Token 74: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00020973898062948138
    2. ' sieve' → logprob: -8.50020980834961
    3. '           ' → logprob: -12.87520980834961
    4. '               ' → logprob: -13.37520980834961
    5. '   ' → logprob: -14.50020980834961
    6. ' ' → logprob: -15.00020980834961
    7. 'sie' → logprob: -15.50020980834961
    8. '  ' → logprob: -15.50020980834961
    9. '       ' → logprob: -15.62520980834961
    10. '                   ' → logprob: -15.75020980834961

Token 75: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0001249925117008388
    2. '[' → logprob: -9.00012493133545
    3. '[js' → logprob: -14.50012493133545
    4. '```' → logprob: -15.00012493133545
    5. '[J' → logprob: -15.50012493133545
    6. ']' → logprob: -15.50012493133545
    7. '=' → logprob: -16.125125885009766
    8. '[i' → logprob: -16.375125885009766
    9. 'j' → logprob: -16.625125885009766
    10. '\[' → logprob: -17.375125885009766

Token 76: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003712085890583694
    2. ']=' → logprob: -8.125370979309082
    3. '=' → logprob: -10.000370979309082
    4. ' ]' → logprob: -10.750370979309082
    5. ')' → logprob: -11.875370979309082
    6. ' =' → logprob: -13.500370979309082
    7. '=False' → logprob: -17.5003719329834
    8. ' ' → logprob: -18.2503719329834
    9. ')=' → logprob: -18.2503719329834
    10. ']==' → logprob: -19.1253719329834

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890543341636658
    2. ' =' → logprob: -2.5789053440093994
    3. '=False' → logprob: -11.07890510559082
    4. ' False' → logprob: -16.82890510559082
    5. '=True' → logprob: -16.95390510559082
    6. '＝' → logprob: -17.07890510559082
    7. ')' → logprob: -17.57890510559082
    8. 'False' → logprob: -17.82890510559082
    9. ' =)' → logprob: -18.07890510559082
    10. ')=' → logprob: -18.32890510559082

Token 78: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07888989895582199
    2. ' False' → logprob: -2.578889846801758
    3. '(False' → logprob: -16.703889846801758
    4. '=False' → logprob: -19.078889846801758
    5. 'F' → logprob: -19.828889846801758
    6. '.False' → logprob: -19.953889846801758
    7. '_false' → logprob: -21.078889846801758
    8. 'True' → logprob: -21.578889846801758
    9. ' ' → logprob: -21.578889846801758
    10. ' ' → logprob: -22.203889846801758

Token 79: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9800580143928528
    2. '
' → logprob: -1.480057954788208
    3. 'n' → logprob: -1.730057954788208
    4. '<|end|>' → logprob: -1.855057954788208
    5. '#' → logprob: -4.105058193206787
    6. '\' → logprob: -4.105058193206787
    7. '```' → logprob: -4.480058193206787
    8. 'newline' → logprob: -5.480058193206787
    9. ' 
' → logprob: -5.855058193206787
    10. '' → logprob: -5.980058193206787

Token 80: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4019090235233307
    2. 'n' → logprob: -1.9019089937210083
    3. '
' → logprob: -2.276909112930298
    4. '#' → logprob: -3.901909112930298
    5. '

' → logprob: -4.401908874511719
    6. 'print' → logprob: -4.401908874511719
    7. 'for' → logprob: -4.526908874511719
    8. 'prime' → logprob: -5.526908874511719
    9. 'p' → logprob: -5.901908874511719
    10. '\n' → logprob: -6.026908874511719

Token 81: ' line' (ID: 2543)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14953580498695374
    2. ' ' → logprob: -2.024535894393921
    3. 'i' → logprob: -5.149535655975342
    4. ' _' → logprob: -8.0245361328125
    5. '_' → logprob: -8.3995361328125
    6. ' num' → logprob: -8.8995361328125
    7. '  ' → logprob: -9.0245361328125
    8. ' number' → logprob: -9.1495361328125
    9. ' n' → logprob: -10.7745361328125
    10. ' ' → logprob: -10.8995361328125

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02072557993233204
    2. 'in' → logprob: -3.8957254886627197
    3. ' ' → logprob: -9.64572525024414
    4. 's' → logprob: -10.27072525024414
    5. '(' → logprob: -10.77072525024414
    6. '()' → logprob: -11.02072525024414
    7. '[' → logprob: -11.52072525024414
    8. ':' → logprob: -11.64572525024414
    9. ' i' → logprob: -12.39572525024414
    10. '  ' → logprob: -12.77072525024414

Token 83: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.251948744058609
    2. 'sys' → logprob: -1.5019487142562866
    3. '=sys' → logprob: -11.251948356628418
    4. '	sys' → logprob: -12.501948356628418
    5. '(sys' → logprob: -13.001948356628418
    6. 'stdin' → logprob: -14.751948356628418
    7. 's' → logprob: -16.001949310302734
    8. ' ' → logprob: -16.626949310302734
    9. 'iter' → logprob: -17.501949310302734
    10. 'input' → logprob: -17.626949310302734

Token 84: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0130302207544446
    2. '.' → logprob: -4.513030052185059
    3. '.readline' → logprob: -6.263030052185059
    4. 'stdin' → logprob: -10.388030052185059
    5. '.stdout' → logprob: -11.013030052185059
    6. '.readlines' → logprob: -11.888030052185059
    7. '.argv' → logprob: -11.888030052185059
    8. '.input' → logprob: -12.138030052185059
    9. 'input' → logprob: -13.388030052185059
    10. '(stdin' → logprob: -13.513030052185059

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005661055911332369
    2. '.readline' → logprob: -5.3806610107421875
    3. '.strip' → logprob: -7.5056610107421875
    4. '.' → logprob: -8.505661010742188
    5. ' :' → logprob: -9.005661010742188
    6. '.readlines' → logprob: -10.255661010742188
    7. ':
' → logprob: -10.380661010742188
    8. ' in' → logprob: -10.880661010742188
    9. 'strip' → logprob: -10.880661010742188
    10. '.rstrip' → logprob: -11.005661010742188

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002629757858812809
    2. ' line' → logprob: -7.12762975692749
    3. '    
' → logprob: -7.25262975692749
    4. ' if' → logprob: -7.87762975692749
    5. '.strip' → logprob: -8.377630233764648
    6. ' readline' → logprob: -9.127630233764648
    7. ' tokens' → logprob: -9.752630233764648
    8. 'tokens' → logprob: -9.877630233764648
    9. ' token' → logprob: -9.877630233764648
    10. '.rstrip' → logprob: -10.252630233764648

Token 87: ' if' (ID: 538)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04361608251929283
    2. 'n' → logprob: -3.2936160564422607
    3. ' num' → logprob: -6.16861629486084
    4. '   ' → logprob: -6.54361629486084
    5. ' number' → logprob: -7.04361629486084
    6. ' line' → logprob: -7.66861629486084
    7. 'num' → logprob: -7.91861629486084
    8. ' x' → logprob: -8.66861629486084
    9. 'number' → logprob: -10.41861629486084
    10. ' N' → logprob: -10.66861629486084

Token 88: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.17603608965873718
    2. ' line' → logprob: -2.0510361194610596
    3. ' ' → logprob: -3.4260361194610596
    4. 'not' → logprob: -9.17603588104248
    5. ' len' → logprob: -9.42603588104248
    6. 'line' → logprob: -9.55103588104248
    7. ''' → logprob: -11.17603588104248
    8. ' '' → logprob: -11.55103588104248
    9. ' ' → logprob: -12.05103588104248
    10. ' int' → logprob: -13.05103588104248

Token 89: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0001987722353078425
    2. 'line' → logprob: -8.875198364257812
    3. ' ' → logprob: -9.750198364257812
    4. '	line' → logprob: -14.875198364257812
    5. '=line' → logprob: -17.375198364257812
    6. '(line' → logprob: -17.625198364257812
    7. ' linea' → logprob: -17.750198364257812
    8. ' l' → logprob: -18.000198364257812
    9. ' ' → logprob: -18.000198364257812
    10. ' ligne' → logprob: -18.000198364257812

Token 90: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.31378453969955444
    2. '.' → logprob: -1.3137845993041992
    3. '.rstrip' → logprob: -7.688784599304199
    4. '.startswith' → logprob: -10.3137845993042
    5. ' .' → logprob: -10.5637845993042
    6. '.readline' → logprob: -12.8137845993042
    7. '.chomp' → logprob: -13.6887845993042
    8. 'strip' → logprob: -14.0637845993042
    9. '.trim' → logprob: -15.0637845993042
    10. '.split' → logprob: -16.063783645629883

Token 91: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003931384126190096
    2. '():
' → logprob: -8.75039291381836
    3. ' ():' → logprob: -9.25039291381836
    4. '()' → logprob: -9.37539291381836
    5. ':' → logprob: -9.87539291381836
    6. '():
' → logprob: -13.75039291381836
    7. '().' → logprob: -14.62539291381836
    8. ' :' → logprob: -14.75039291381836
    9. ' ()' → logprob: -15.62539291381836
    10. '()==' → logprob: -16.12539291381836

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5768041610717773
    2. '   ' → logprob: -0.8268041610717773
    3. ':' → logprob: -7.576804161071777
    4. ' break' → logprob: -8.826804161071777
    5. '    ' → logprob: -9.201804161071777
    6. ' ' → logprob: -10.201804161071777
    7. ',' → logprob: -11.826804161071777
    8. '   ' → logprob: -11.826804161071777
    9. '	break' → logprob: -11.951804161071777
    10. '  ' → logprob: -12.076804161071777

Token 93: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.10469173640012741
    2. 'break' → logprob: -2.354691743850708
    3. '   ' → logprob: -5.729691505432129
    4. '       ' → logprob: -6.979691505432129
    5. '	break' → logprob: -8.229691505432129
    6. ' ' → logprob: -11.729691505432129
    7. '_break' → logprob: -11.979691505432129
    8. '```' → logprob: -12.354691505432129
    9. '           ' → logprob: -12.604691505432129
    10. ' continue' → logprob: -13.354691505432129

Token 94: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008732522837817669
    2. '    
' → logprob: -4.758732318878174
    3. '   
' → logprob: -9.883732795715332
    4. '<|end|>' → logprob: -10.883732795715332
    5. '    ' → logprob: -11.633732795715332
    6. ' 
' → logprob: -12.008732795715332
    7. '  
' → logprob: -12.258732795715332
    8. '
' → logprob: -12.633732795715332
    9. '        
' → logprob: -12.633732795715332
    10. ',' → logprob: -12.633732795715332

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007581694517284632
    2. '    
' → logprob: -7.625758171081543
    3. ' n' → logprob: -9.000758171081543
    4. '    ' → logprob: -9.750758171081543
    5. 'n' → logprob: -11.000758171081543
    6. ' ' → logprob: -11.125758171081543
    7. ' num' → logprob: -11.750758171081543
    8. ',' → logprob: -11.750758171081543
    9. '  ' → logprob: -11.875758171081543
    10. '   
' → logprob: -12.000758171081543

Token 96: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.050747934728860855
    2. ' n' → logprob: -3.675747871398926
    3. 'N' (adapté à ' N') → logprob: -3.925747871398926
    4. '   ' → logprob: -5.800747871398926
    5. 'num' → logprob: -7.550747871398926
    6. ' N' → logprob: -7.925747871398926
    7. 'x' → logprob: -8.675747871398926
    8. 'a' → logprob: -9.175747871398926
    9. 'number' → logprob: -9.800747871398926
    10. 'nums' → logprob: -10.175747871398926

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006868940312415361
    2. '=' → logprob: -5.131868839263916
    3. ',' → logprob: -7.006868839263916
    4. '=int' → logprob: -11.381869316101074
    5. ' ,' → logprob: -11.381869316101074
    6. ' ' → logprob: -11.756869316101074
    7. ' =)' → logprob: -13.381869316101074
    8. ')' → logprob: -14.631869316101074
    9. ' =
' → logprob: -14.881869316101074
    10. '.' → logprob: -15.256869316101074

Token 98: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02324792370200157
    2. ' int' → logprob: -3.7732479572296143
    3. '=int' → logprob: -13.398247718811035
    4. '[int' → logprob: -14.398247718811035
    5. '(int' → logprob: -15.523247718811035
    6. '   ' → logprob: -16.64824867248535
    7. '<int' → logprob: -17.02324867248535
    8. ':int' → logprob: -17.39824867248535
    9. ']int' → logprob: -18.14824867248535
    10. ',int' → logprob: -18.52324867248535

Token 99: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.10020893067121506
    2. '(' → logprob: -2.3502089977264404
    3. ' (' → logprob: -13.85020923614502
    4. '(
' → logprob: -15.22520923614502
    5. '(

' → logprob: -15.35020923614502
    6. ' line' → logprob: -15.47520923614502
    7. '[line' → logprob: -15.85020923614502
    8. '(l' → logprob: -16.350208282470703
    9. '#line' → logprob: -16.475208282470703
    10. '(Line' → logprob: -16.600208282470703

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05517495796084404
    2. '.strip' → logprob: -2.9301750659942627
    3. '())' → logprob: -8.680174827575684
    4. '.rstrip' → logprob: -9.805174827575684
    5. '.readline' → logprob: -10.680174827575684
    6. '()' → logprob: -10.930174827575684
    7. ' )' → logprob: -11.805174827575684
    8. 'strip' → logprob: -12.180174827575684
    9. '().' → logprob: -12.305174827575684
    10. '.' → logprob: -12.680174827575684

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022731706500053406
    2. '    
' → logprob: -4.522731781005859
    3. ' if' → logprob: -5.897731781005859
    4. '    ' → logprob: -6.397731781005859
    5. ' for' → logprob: -6.772731781005859
    6. '
' → logprob: -7.022731781005859
    7. ' 
' → logprob: -7.022731781005859
    8. '   
' → logprob: -7.147731781005859
    9. 'if' → logprob: -7.397731781005859
    10. '     
' → logprob: -7.397731781005859

Token 102: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9086439609527588
    2. 'if' → logprob: -1.9086439609527588
    3. 'found' → logprob: -2.033643960952759
    4. ' for' → logprob: -2.158643960952759
    5. ' if' → logprob: -2.658643960952759
    6. ' found' → logprob: -3.033643960952759
    7. 'count' (adapté à ' count') → logprob: -3.283643960952759
    8. 'result' → logprob: -4.65864372253418
    9. ' count' → logprob: -4.78364372253418
    10. 'pairs' → logprob: -5.03364372253418

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02096620388329029
    2. '=' → logprob: -3.8959662914276123
    3. '_' → logprob: -8.145966529846191
    4. ' ' → logprob: -9.520966529846191
    5. '(' → logprob: -10.645966529846191
    6. ',' → logprob: -12.145966529846191
    7. '_space' → logprob: -12.145966529846191
    8. ')' → logprob: -12.395966529846191
    9. ' +=' → logprob: -12.395966529846191
    10. '   ' → logprob: -12.770966529846191

Token 104: ' sum' (ID: 4215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20219868421554565
    2. '0' → logprob: -1.7021987438201904
    3. ' sum' → logprob: -7.452198505401611
    4. 'sum' → logprob: -9.20219898223877
    5. 's' → logprob: -10.20219898223877
    6. ' [' → logprob: -10.70219898223877
    7. '1' → logprob: -11.07719898223877
    8. ' sieve' → logprob: -11.70219898223877
    9. ' s' → logprob: -11.95219898223877
    10. ' ' → logprob: -13.07719898223877

Token 105: '(' (ID: 7)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.5235812664031982
    2. '(' → logprob: -0.8985812664031982
    3. '([' → logprob: -8.273581504821777
    4. '((' → logprob: -9.648581504821777
    5. '(i' → logprob: -10.023581504821777
    6. '(is' → logprob: -10.398581504821777
    7. '(not' → logprob: -10.773581504821777
    8. '(
' → logprob: -11.023581504821777
    9. 's' → logprob: -12.023581504821777
    10. '(n' → logprob: -12.898581504821777

Token 106: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8497890830039978
    2. '1' → logprob: -1.2247891426086426
    3. ' sieve' → logprob: -1.3497891426086426
    4. ' ' → logprob: -4.099789142608643
    5. '   ' → logprob: -6.724789142608643
    6. '(s' → logprob: -7.599789142608643
    7. '(' → logprob: -8.349788665771484
    8. ')' → logprob: -8.599788665771484
    9. ' s' → logprob: -8.724788665771484
    10. ')s' → logprob: -9.099788665771484

Token 107: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3134811222553253
    2. 'for' → logprob: -1.313481092453003
    3. '   ' → logprob: -9.188481330871582
    4. ' ' → logprob: -9.688481330871582
    5. '1' → logprob: -11.313481330871582
    6. 's' → logprob: -12.063481330871582
    7. '	for' → logprob: -12.063481330871582
    8. '
' → logprob: -12.438481330871582
    9. '  ' → logprob: -12.563481330871582
    10. '           ' → logprob: -12.688481330871582

Token 108: ' i' (ID: 575)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.2777525186538696
    2. 'i' → logprob: -1.4027525186538696
    3. 'x' → logprob: -1.5277525186538696
    4. ' i' → logprob: -2.02775239944458
    5. ' p' → logprob: -2.65275239944458
    6. ' x' → logprob: -2.90275239944458
    7. 'k' → logprob: -7.02775239944458
    8. ' ' → logprob: -8.777752876281738
    9. 'num' → logprob: -9.027752876281738
    10. '   ' → logprob: -9.402752876281738

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002507643774151802
    2. 'in' → logprob: -6.00250768661499
    3. ' ' → logprob: -10.877507209777832
    4. 'range' → logprob: -11.502507209777832
    5. ' range' → logprob: -14.502507209777832
    6. ',' → logprob: -14.627507209777832
    7. 's' → logprob: -14.877507209777832
    8. '   ' → logprob: -15.127507209777832
    9. '  ' → logprob: -15.127507209777832
    10. 'if' → logprob: -16.00250816345215

Token 110: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1602393537759781
    2. 'range' → logprob: -1.910239338874817
    3. '	range' → logprob: -11.535239219665527
    4. '(range' → logprob: -13.160239219665527
    5. ' ' → logprob: -13.785239219665527
    6. '   ' → logprob: -14.035239219665527
    7. ')' → logprob: -14.535239219665527
    8. ' xrange' → logprob: -15.035239219665527
    9. '.range' → logprob: -15.535239219665527
    10. '[' → logprob: -15.910239219665527

Token 111: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00411461153998971
    2. '(N' → logprob: -5.504114627838135
    3. ' (' → logprob: -11.254114151000977
    4. '(MAX' → logprob: -12.129114151000977
    5. '((' → logprob: -12.629114151000977
    6. ')' → logprob: -12.879114151000977
    7. '(max' → logprob: -12.879114151000977
    8. '   ' → logprob: -13.254114151000977
    9. '(n' → logprob: -13.504114151000977
    10. '2' → logprob: -13.629114151000977

Token 112: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2658798396587372
    2. 'N' → logprob: -1.5158798694610596
    3. ' ' → logprob: -5.2658796310424805
    4. ' N' → logprob: -5.2658796310424805
    5. '1' → logprob: -6.0158796310424805
    6. '   ' → logprob: -8.14087963104248
    7. 'MAX' → logprob: -8.14087963104248
    8. '(' → logprob: -8.26587963104248
    9. '(N' → logprob: -9.51587963104248
    10. 'max' → logprob: -10.01587963104248

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001160696498118341
    2. ' ,' → logprob: -7.376160621643066
    3. ',N' → logprob: -7.626160621643066
    4. '   ' → logprob: -11.126160621643066
    5. 'N' → logprob: -11.376160621643066
    6. '2' → logprob: -12.251160621643066
    7. ' ' → logprob: -12.751160621643066
    8. '    ' → logprob: -13.001160621643066
    9. '1' → logprob: -13.126160621643066
    10. '+' → logprob: -13.626160621643066

Token 114: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.003615870140492916
    2. ' N' → logprob: -5.628615856170654
    3. '(' → logprob: -12.128616333007812
    4. '(N' → logprob: -12.628616333007812
    5. '   ' → logprob: -12.878616333007812
    6. ' ' → logprob: -13.253616333007812
    7. '2' → logprob: -13.878616333007812
    8. ' (' → logprob: -14.253616333007812
    9. '	N' → logprob: -14.503616333007812
    10. '  ' → logprob: -16.128616333007812

Token 115: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22252950072288513
    2. ' +' → logprob: -2.597529411315918
    3. ')' → logprob: -2.722529411315918
    4. '//' → logprob: -2.847529411315918
    5. ' //' → logprob: -7.097529411315918
    6. ' )' → logprob: -8.597529411315918
    7. '   ' → logprob: -8.722529411315918
    8. ' ' → logprob: -9.472529411315918
    9. ' if' → logprob: -10.472529411315918
    10. '-' → logprob: -10.847529411315918

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004606975708156824
    2. ' ' → logprob: -7.750460624694824
    3. '2' → logprob: -10.500460624694824
    4. '+' → logprob: -13.750460624694824
    5. ')' → logprob: -14.000460624694824
    6. '   ' → logprob: -15.250460624694824
    7. ' +' → logprob: -16.50046157836914
    8. '  ' → logprob: -16.75046157836914
    9. ' )' → logprob: -16.75046157836914
    10. '
' → logprob: -17.18796157836914

Token 117: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.015726622194051743
    2. 'if' → logprob: -4.265726566314697
    3. ')' → logprob: -6.515726566314697
    4. '+' → logprob: -10.515727043151855
    5. '   ' → logprob: -10.765727043151855
    6. ' ' → logprob: -11.015727043151855
    7. ' )' → logprob: -12.265727043151855
    8. '    ' → logprob: -12.390727043151855
    9. '2' → logprob: -13.765727043151855
    10. '	if' → logprob: -14.015727043151855

Token 118: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.018317103385925293
    2. 'if' → logprob: -4.018317222595215
    3. '   ' → logprob: -9.268317222595215
    4. ' ' → logprob: -9.768317222595215
    5. '    ' → logprob: -11.643317222595215
    6. '  ' → logprob: -13.643317222595215
    7. ':' → logprob: -13.768317222595215
    8. '       ' → logprob: -13.893317222595215
    9. '+' → logprob: -14.393317222595215
    10. '
' → logprob: -14.393317222595215

Token 119: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.0539214052259922
    2. 's' → logprob: -3.0539214611053467
    3. ' not' → logprob: -6.303921222686768
    4. ' i' → logprob: -7.053921222686768
    5. '   ' → logprob: -7.053921222686768
    6. ' s' → logprob: -7.178921222686768
    7. ' ' → logprob: -7.678921222686768
    8. 'i' → logprob: -8.553921699523926
    9. 'not' → logprob: -9.803921699523926
    10. '    ' → logprob: -9.866421699523926

Token 120: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00045009577297605574
    2. '[' → logprob: -7.750450134277344
    3. 'i' → logprob: -12.125450134277344
    4. '[int' → logprob: -12.500450134277344
    5. '[s' → logprob: -13.000450134277344
    6. '(i' → logprob: -13.375450134277344
    7. '[
' → logprob: -13.750450134277344
    8. '   ' → logprob: -13.875450134277344
    9. ' [' → logprob: -14.000450134277344
    10. '2' → logprob: -14.875450134277344

Token 121: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2569549083709717
    2. 'and' → logprob: -1.5069549083709717
    3. '])' → logprob: -5.881955146789551
    4. ')' → logprob: -6.506955146789551
    5. ']' → logprob: -8.00695514678955
    6. ' ' → logprob: -9.13195514678955
    7. 'a' → logprob: -9.25695514678955
    8. ' a' → logprob: -10.00695514678955
    9. ' )' → logprob: -10.50695514678955
    10. '))' → logprob: -10.88195514678955

Token 122: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3658267855644226
    2. 'and' → logprob: -1.2408268451690674
    3. ')' → logprob: -4.115826606750488
    4. ' a' → logprob: -8.240826606750488
    5. 'a' → logprob: -8.365826606750488
    6. ' )' → logprob: -8.615826606750488
    7. ' ' → logprob: -8.740826606750488
    8. '  ' → logprob: -11.365826606750488
    9. '))' → logprob: -11.490826606750488
    10. '   ' → logprob: -11.740826606750488

Token 123: ' sieve' (ID: 142781)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -1.3365737199783325
    2. ' i' → logprob: -1.7115737199783325
    3. ' (' → logprob: -1.9615737199783325
    4. ' N' → logprob: -1.9615737199783325
    5. 'i' → logprob: -2.461573600769043
    6. 'N' → logprob: -2.711573600769043
    7. 'str' → logprob: -2.961573600769043
    8. ' all' → logprob: -4.461573600769043
    9. '(str' → logprob: -4.461573600769043
    10. '(i' → logprob: -4.586573600769043

Token 124: '[N' (ID: 49776)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0833641067147255
    2. '[' → logprob: -2.5833640098571777
    3. '[(' → logprob: -5.958364009857178
    4. '[N' → logprob: -7.208364009857178
    5. '[int' → logprob: -7.583364009857178
    6. '[
' → logprob: -8.958364486694336
    7. '2' → logprob: -9.083364486694336
    8. 'i' → logprob: -9.208364486694336
    9. '[-' → logprob: -10.083364486694336
    10. '(i' → logprob: -10.458364486694336

Token 125: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17628388106822968
    2. '-i' → logprob: -1.926283836364746
    3. ' -' → logprob: -4.176283836364746
    4. '+' → logprob: -7.551283836364746
    5. ' ' → logprob: -11.301283836364746
    6. '+i' → logprob: -11.551283836364746
    7. 'i' → logprob: -11.676283836364746
    8. '   ' → logprob: -12.426283836364746
    9. '-
' → logprob: -12.926283836364746
    10. ' i' → logprob: -12.926283836364746

Token 126: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002477677771821618
    2. ' i' → logprob: -6.002477645874023
    3. ' ' → logprob: -13.502477645874023
    4. '   ' → logprob: -15.127477645874023
    5. '	i' → logprob: -15.127477645874023
    6. '1' → logprob: -17.002477645874023
    7. '  ' → logprob: -18.252477645874023
    8. '[i' → logprob: -18.377477645874023
    9. '```' → logprob: -19.127477645874023
    10. ''i' → logprob: -19.252477645874023

Token 127: ' +' (ID: 659)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0020314191933721304
    2. ']' → logprob: -6.252031326293945
    3. '1' → logprob: -10.252031326293945
    4. ' ])' → logprob: -10.752031326293945
    5. ']==' → logprob: -11.127031326293945
    6. ']])' → logprob: -11.877031326293945
    7. ']))' → logprob: -12.127031326293945
    8. ')' → logprob: -12.752031326293945
    9. ''])' → logprob: -13.002031326293945
    10. '])
' → logprob: -13.002031326293945

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013326213229447603
    2. ' ' → logprob: -6.626332759857178
    3. '2' → logprob: -12.75133228302002
    4. '   ' → logprob: -13.75133228302002
    5. '0' → logprob: -13.87633228302002
    6. '  ' → logprob: -14.50133228302002
    7. ']' → logprob: -15.12633228302002
    8. '```' → logprob: -15.56383228302002
    9. '}' → logprob: -16.001333236694336
    10. ')' → logprob: -16.626333236694336

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.117345684382599e-05
    2. ' ' → logprob: -10.875020980834961
    3. '2' → logprob: -13.750020980834961
    4. '   ' → logprob: -15.000020980834961
    5. '```' → logprob: -15.250020980834961
    6. '0' → logprob: -15.687520980834961
    7. '}' → logprob: -16.50002098083496
    8. '  ' → logprob: -16.75002098083496
    9. ']' → logprob: -17.37502098083496
    10. '
' → logprob: -17.56252098083496

Token 130: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00012190054985694587
    2. ']' → logprob: -10.0001220703125
    3. ' ])' → logprob: -10.1251220703125
    4. ')' → logprob: -11.1251220703125
    5. ')])' → logprob: -12.0001220703125
    6. ']])' → logprob: -12.3751220703125
    7. '])
' → logprob: -12.8751220703125
    8. ')]' → logprob: -13.3751220703125
    9. ']):' → logprob: -13.7501220703125
    10. ':' → logprob: -13.8751220703125

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022211531177163124
    2. 'print' → logprob: -6.12722110748291
    3. '
' → logprob: -10.87722110748291
    4. ' print' → logprob: -11.50222110748291
    5. '    
' → logprob: -12.75222110748291
    6. '	print' → logprob: -14.00222110748291
    7. '```' → logprob: -14.50222110748291
    8. ',' → logprob: -14.50222110748291
    9. ')' → logprob: -14.62722110748291
    10. '#print' → logprob: -14.62722110748291

Token 132: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.030175650492310524
    2. '   ' → logprob: -3.5301756858825684
    3. ' print' → logprob: -7.780175685882568
    4. '
' → logprob: -12.28017520904541
    5. '```' → logprob: -13.90517520904541
    6. '	print' → logprob: -14.15517520904541
    7. ' ' → logprob: -15.65517520904541
    8. '    
' → logprob: -15.65517520904541
    9. '  ' → logprob: -16.155176162719727
    10. '.print' → logprob: -16.405176162719727

Token 133: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0011793931480497122
    2. '(' → logprob: -6.751179218292236
    3. '(f' → logprob: -11.876179695129395
    4. '((' → logprob: -14.251179695129395
    5. ' (' → logprob: -14.501179695129395
    6. '()' → logprob: -14.751179695129395
    7. '(cnt' → logprob: -15.376179695129395
    8. '(c' → logprob: -16.001178741455078
    9. 'count' → logprob: -16.251178741455078
    10. '(N' → logprob: -16.501178741455078

Token 134: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -12.75000286102295
    3. '))' → logprob: -15.87500286102295
    4. ')`' → logprob: -16.250003814697266
    5. '())' → logprob: -16.750003814697266
    6. ')
' → logprob: -16.750003814697266
    7. '()' → logprob: -17.125003814697266
    8. '`)' → logprob: -18.125003814697266
    9. ')}' → logprob: -18.875003814697266
    10. '}' → logprob: -19.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 132
Tokens correctement prédits (1ère position, stricte): 76
Tokens correctement prédits (1ère position, avec adaptation): 77
Tokens correctement prédits (top 10): 119
Précision stricte (1ère position): 57.58%
Précision adaptée (1ère position): 58.33%
Précision (top 10): 90.15%
================================================================================
