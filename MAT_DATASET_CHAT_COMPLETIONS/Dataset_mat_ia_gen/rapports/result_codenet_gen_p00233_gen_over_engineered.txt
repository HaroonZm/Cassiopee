================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:20:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Iterator

class NumeralSystem(ABC):
    @abstractmethod
    def encode(self, num: int) -> str:
        pass

    @abstractmethod
    def decode(self, representation: str) -> int:
        pass

class NegativeBaseNumeralSystem(NumeralSystem):
    def __init__(self, base: int):
        if base >= 0:
            raise ValueError("Base must be negative for NegativeBaseNumeralSystem")
        self.base = base

    def encode(self, num: int) -> str:
        """
        Converts a decimal integer to its representation in the negative base numeral system.
        For this task, base = -10.
        """
        if num == 0:
            return '0'
        digits: List[str] = []
        n = num
        while n != 0:
            n, remainder = divmod(n, self.base)
            # Adjust remainder and quotient if remainder is negative
            if remainder < 0:
                remainder -= self.base
                n += 1
            digits.append(str(remainder))
        digits.reverse()
        return ''.join(digits)

    def decode(self, representation: str) -> int:
        """
        Converts a negative-base numeral system string back to a decimal integer.
        """
        result = 0
        length = len(representation)
        for i, ch in enumerate(representation):
            digit = int(ch)
            power = length - i - 1
            result += digit * (self.base ** power)
        return result

class DataSetProcessor:
    def __init__(self, numeral_system: NumeralSystem):
        self.numeral_system = numeral_system

    def process(self, inputs: Iterator[int]) -> Iterator[str]:
        for num in inputs:
            if num == 0:
                break
            yield self.numeral_system.encode(num)

class InputReader:
    def __init__(self, source: Iterator[str]):
        self.source = source

    def read_ints(self) -> Iterator[int]:
        for line in self.source:
            line = line.strip()
            if not line:
                continue
            yield int(line)

class LibraryNumberFormatter:
    def __init__(self):
        # base is fixed at -10 per problem statement
        self.numeral_system = NegativeBaseNumeralSystem(-10)
        self.processor = DataSetProcessor(self.numeral_system)

    def format_numbers(self, numbers: Iterator[int]) -> Iterator[str]:
        return self.processor.process(numbers)

def main():
    import sys
    input_reader = InputReader(sys.stdin)
    library_formatter = LibraryNumberFormatter()
    for formatted in library_formatter.format_numbers(input_reader.read_ints()):
        print(formatted)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1270483285188675
    2. 'ABC' → logprob: -2.1270482540130615
    3. 'AB' → logprob: -10.00204849243164
    4. ' A' → logprob: -10.37704849243164
    5. 'ABCDE' → logprob: -11.25204849243164
    6. 'abc' → logprob: -11.75204849243164
    7. 'abstract' → logprob: -12.25204849243164
    8. 'A' → logprob: -12.37704849243164
    9. ' ' → logprob: -12.75204849243164
    10. ' ' → logprob: -12.75204849243164

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.44743484258651733
    2. ',' → logprob: -1.072434902191162
    3. 'import' → logprob: -4.822434902191162
    4. '<|end|>' → logprob: -5.822434902191162
    5. ':' → logprob: -6.072434902191162
    6. '```' → logprob: -6.322434902191162
    7. ' ,' → logprob: -7.197434902191162
    8. ' .' → logprob: -7.697434902191162
    9. ' import' → logprob: -8.322434425354004
    10. '.I' → logprob: -8.572434425354004

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.21897414326667786
    2. ' abstract' → logprob: -1.7189741134643555
    3. 'Abstract' → logprob: -4.0939741134643555
    4. '```' → logprob: -8.468974113464355
    5. ' ' → logprob: -8.718974113464355
    6. 'Meta' → logprob: -9.218974113464355
    7. '.abstract' → logprob: -9.343974113464355
    8. ' A' → logprob: -10.468974113464355
    9. ' Abstract' → logprob: -11.343974113464355
    10. '`' → logprob: -11.343974113464355

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00019889144459739327
    2. 'classmethod' → logprob: -9.000199317932129
    3. 'm' → logprob: -10.000199317932129
    4. '_method' → logprob: -11.250199317932129
    5. 'staticmethod' → logprob: -11.750199317932129
    6. 'meth' → logprob: -12.375199317932129
    7. ' method' → logprob: -13.750199317932129
    8. '```' → logprob: -13.875199317932129
    9. 'ethod' → logprob: -14.125199317932129
    10. 'abstract' → logprob: -14.375199317932129

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48207783699035645
    2. '```' → logprob: -1.4820778369903564
    3. 'class' → logprob: -2.3570778369903564
    4. '

' → logprob: -4.232077598571777
    5. '<|end|>' → logprob: -4.357077598571777
    6. '' → logprob: -4.607077598571777
    7. '\n' → logprob: -4.857077598571777
    8. ' class' → logprob: -5.982077598571777
    9. '
' → logprob: -6.107077598571777
    10. '\' → logprob: -6.107077598571777

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1726326197385788
    2. '

' → logprob: -2.1726326942443848
    3. '```' → logprob: -3.5476326942443848
    4. 'class' → logprob: -4.422632694244385
    5. '' → logprob: -7.047632694244385
    6. '
' → logprob: -7.047632694244385
    7. '\n' → logprob: -7.672632694244385
    8. '``' → logprob: -7.672632694244385
    9. ' 

' → logprob: -8.297632217407227
    10. '
 
' → logprob: -8.672632217407227

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.04827742278575897
    2. ' collections' → logprob: -3.4232773780822754
    3. 'typing' → logprob: -4.798277378082275
    4. ' dat' → logprob: -5.423277378082275
    5. 'collections' → logprob: -6.923277378082275
    6. ' math' → logprob: -8.173277854919434
    7. ' sys' → logprob: -9.048277854919434
    8. ' io' → logprob: -9.423277854919434
    9. ' os' → logprob: -9.423277854919434
    10. ' datetime' → logprob: -10.048277854919434

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05339670926332474
    2. 'import' → logprob: -3.053396701812744
    3. '.' → logprob: -6.428396701812744
    4. '<|end|>' → logprob: -6.553396701812744
    5. ' ' → logprob: -6.803396701812744
    6. ' as' → logprob: -8.803397178649902
    7. '<|end|>' → logprob: -9.678397178649902
    8. '[' → logprob: -9.803397178649902
    9. ' .' → logprob: -10.178397178649902
    10. '```' → logprob: -10.178397178649902

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.35420724749565125
    2. 'Any' → logprob: -1.4792072772979736
    3. ' List' → logprob: -3.8542072772979736
    4. ' Union' → logprob: -4.1042070388793945
    5. ' Protocol' → logprob: -4.3542070388793945
    6. ' Callable' → logprob: -4.7292070388793945
    7. 'List' → logprob: -5.8542070388793945
    8. 'Protocol' → logprob: -6.3542070388793945
    9. ' Optional' → logprob: -6.3542070388793945
    10. 'Union' → logprob: -6.4792070388793945

Token 12: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4079321622848511
    2. '

' → logprob: -1.157932162284851
    3. 'class' → logprob: -4.407932281494141
    4. '```' → logprob: -4.907932281494141
    5. '
' → logprob: -7.532932281494141
    6. '\n' → logprob: -7.657932281494141
    7. '``' → logprob: -8.90793228149414
    8. '


' → logprob: -9.78293228149414
    9. ' class' → logprob: -11.28293228149414
    10. 'import' → logprob: -11.78293228149414

Token 13: ' Iterator' (ID: 41994)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.4373971223831177
    2. 'Optional' → logprob: -1.5623971223831177
    3. ' Union' → logprob: -1.6873971223831177
    4. 'Any' → logprob: -1.6873971223831177
    5. ' Any' → logprob: -2.437397003173828
    6. 'Union' → logprob: -3.312397003173828
    7. ' Callable' → logprob: -3.437397003173828
    8. 'Callable' → logprob: -4.812397003173828
    9. 'Tuple' → logprob: -5.062397003173828
    10. 'Iterable' → logprob: -5.437397003173828

Token 14: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7923713326454163
    2. '
' → logprob: -1.0423712730407715
    3. '

' → logprob: -1.6673712730407715
    4. '```' → logprob: -5.2923712730407715
    5. ' class' → logprob: -8.16737174987793
    6. '


' → logprob: -8.54237174987793
    7. '\n' → logprob: -9.41737174987793
    8. '
' → logprob: -9.66737174987793
    9. '``' → logprob: -9.79237174987793
    10. '<class' → logprob: -10.04237174987793

Token 15: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.011130467988550663
    2. '
' → logprob: -4.511130332946777
    3. '```' → logprob: -10.011130332946777
    4. '

' → logprob: -10.886130332946777
    5. ' class' → logprob: -11.761130332946777
    6. '
' → logprob: -12.136130332946777
    7. '<class' → logprob: -13.261130332946777
    8. '  
' → logprob: -14.136130332946777
    9. '``' → logprob: -14.261130332946777
    10. '\n' → logprob: -14.261130332946777

Token 16: ' Numer' (ID: 60273)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11724590510129929
    2. ' Abstract' → logprob: -2.49224591255188
    3. ' Space' → logprob: -4.992245674133301
    4. ' Shape' → logprob: -5.617245674133301
    5. ' Iterable' → logprob: -5.742245674133301
    6. ' My' → logprob: -6.117245674133301
    7. ' Object' → logprob: -6.492245674133301
    8. ' Base' → logprob: -6.492245674133301
    9. ' Serializer' → logprob: -6.742245674133301
    10. ' Basic' → logprob: -7.242245674133301

Token 17: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0839206725358963
    2. 'ical' → logprob: -2.83392071723938
    3. 'ic' → logprob: -3.83392071723938
    4. '```' → logprob: -9.9589204788208
    5. ' ' → logprob: -11.8339204788208
    6. ' al' → logprob: -12.0839204788208
    7. 'ator' → logprob: -12.0839204788208
    8. 'i' → logprob: -12.8339204788208
    9. 'o' → logprob: -12.9589204788208
    10. 'ber' → logprob: -13.4589204788208

Token 18: 'System' (ID: 3320)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0822053849697113
    2. ':' → logprob: -3.207205295562744
    3. 'System' → logprob: -3.707205295562744
    4. 'Converter' → logprob: -4.457205295562744
    5. '(System' → logprob: -7.082205295562744
    6. '():' → logprob: -7.457205295562744
    7. '(Enum' → logprob: -9.207205772399902
    8. '(Base' → logprob: -9.332205772399902
    9. '(Abstract' → logprob: -9.457205772399902
    10. 'Generator' → logprob: -9.457205772399902

Token 19: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10151801258325577
    2. ':' → logprob: -2.351517915725708
    3. '(Abstract' → logprob: -6.976518154144287
    4. '(:' → logprob: -8.851517677307129
    5. '():' → logprob: -9.351517677307129
    6. '(N' → logprob: -10.726517677307129
    7. '(Base' → logprob: -10.976517677307129
    8. '```' → logprob: -10.976517677307129
    9. '(QWidget' → logprob: -11.351517677307129
    10. ' :' → logprob: -11.601517677307129

Token 20: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0003023345780093223
    2. ' ABC' → logprob: -8.1253023147583
    3. 'AB' → logprob: -12.3753023147583
    4. 'A' → logprob: -14.1253023147583
    5. ')' → logprob: -14.6253023147583
    6. 'ABCDE' → logprob: -14.6253023147583
    7. 'abc' → logprob: -15.7503023147583
    8. ' ' → logprob: -16.625303268432617
    9. '   ' → logprob: -16.750303268432617
    10. 'Abstract' → logprob: -16.750303268432617

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003878934367094189
    2. ':' → logprob: -8.250388145446777
    3. ')' → logprob: -9.000388145446777
    4. '):
' → logprob: -13.750388145446777
    5. ',' → logprob: -13.875388145446777
    6. ' ):' → logprob: -14.500388145446777
    7. ':)' → logprob: -15.375388145446777
    8. '():' → logprob: -16.00038719177246
    9. '>:' → logprob: -16.37538719177246
    10. ']:' → logprob: -16.50038719177246

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39359110593795776
    2. ':' → logprob: -1.1435911655426025
    3. '
' → logprob: -5.893590927124023
    4. '```' → logprob: -6.268590927124023
    5. '    
' → logprob: -7.018590927124023
    6. '    ' → logprob: -8.018590927124023
    7. ':
' → logprob: -9.018590927124023
    8. ' :' → logprob: -9.143590927124023
    9. 'def' → logprob: -9.393590927124023
    10. '  ' → logprob: -9.768590927124023

Token 23: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07575210928916931
    2. '    
' → logprob: -3.700752019882202
    3. '    ' → logprob: -4.325752258300781
    4. '```' → logprob: -4.325752258300781
    5. '
' → logprob: -5.200752258300781
    6. '\n' → logprob: -5.325752258300781
    7. ' 
' → logprob: -5.450752258300781
    8. ' def' → logprob: -5.825752258300781
    9. 'def' → logprob: -6.325752258300781
    10. ' ' → logprob: -7.575752258300781

Token 24: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -2.1008713702030946e-06
    2. 'abs' → logprob: -13.750001907348633
    3. 'ab' → logprob: -15.125001907348633
    4. 'staticmethod' → logprob: -15.500001907348633
    5. 'abc' → logprob: -15.500001907348633
    6. ' abstract' → logprob: -15.625001907348633
    7. 'property' → logprob: -16.125001907348633
    8. 'classmethod' → logprob: -17.375001907348633
    9. '.abstract' → logprob: -17.500001907348633
    10. 'a' → logprob: -18.500001907348633

Token 25: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0001664717128733173
    2. '_method' → logprob: -8.750166893005371
    3. 'classmethod' → logprob: -12.500166893005371
    4. 'meth' → logprob: -13.125166893005371
    5. 'staticmethod' → logprob: -14.125166893005371
    6. ' method' → logprob: -15.250166893005371
    7. '_' → logprob: -15.625166893005371
    8. 'm' → logprob: -15.625166893005371
    9. 'ethod' → logprob: -15.625166893005371
    10. 'abstract' → logprob: -15.875166893005371

Token 26: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3510572016239166
    2. '(' → logprob: -1.9760571718215942
    3. 'method' → logprob: -2.601057291030884
    4. ' def' → logprob: -3.101057291030884
    5. ' ' → logprob: -4.851057052612305
    6. '<|end|>' → logprob: -4.851057052612305
    7. '\' → logprob: -5.601057052612305
    8. '
' → logprob: -5.601057052612305
    9. '_method' → logprob: -6.226057052612305
    10. ')' → logprob: -6.226057052612305

Token 27: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08087082207202911
    2. 'def' → logprob: -2.8308708667755127
    3. '
' → logprob: -5.080870628356934
    4. '('' → logprob: -6.455870628356934
    5. ' def' → logprob: -6.580870628356934
    6. '(
' → logprob: -6.705870628356934
    7. '\' → logprob: -6.955870628356934
    8. '   ' → logprob: -7.080870628356934
    9. 'method' → logprob: -7.080870628356934
    10. '    
' → logprob: -7.080870628356934

Token 28: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.010813174769282341
    2. ' def' → logprob: -4.760813236236572
    3. '
' → logprob: -6.260813236236572
    4. 'method' → logprob: -8.510812759399414
    5. '    
' → logprob: -10.635812759399414
    6. 'classmethod' → logprob: -10.760812759399414
    7. ' ' → logprob: -12.010812759399414
    8. '
' → logprob: -12.135812759399414
    9. 'abstract' → logprob: -12.385812759399414
    10. '```' → logprob: -12.385812759399414

Token 29: ' encode' (ID: 31288)
  Prédit: ' convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.2965661287307739
    2. ' encode' → logprob: -1.421566128730774
    3. ' decode' → logprob: -5.421566009521484
    4. 'convert' → logprob: -5.546566009521484
    5. ' to' → logprob: -5.796566009521484
    6. ' get' → logprob: -7.296566009521484
    7. 'encode' → logprob: -7.421566009521484
    8. ' translate' → logprob: -7.671566009521484
    9. ' digits' → logprob: -7.921566009521484
    10. ' parse' → logprob: -8.296566009521484

Token 30: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.033702410757541656
    2. '(' → logprob: -3.4087023735046387
    3. ' (' → logprob: -10.033702850341797
    4. 'self' → logprob: -12.158702850341797
    5. '(
' → logprob: -13.283702850341797
    6. '<|end|>' → logprob: -13.783702850341797
    7. '(s' → logprob: -14.158702850341797
    8. '<|end|>' → logprob: -14.533702850341797
    9. '(data' → logprob: -14.658702850341797
    10. '(Self' → logprob: -14.908702850341797

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007625677157193422
    2. 'self' → logprob: -5.132625579833984
    3. ')' → logprob: -6.632625579833984
    4. ' ,' → logprob: -8.132625579833984
    5. '):' → logprob: -10.507625579833984
    6. ':' → logprob: -11.757625579833984
    7. 's' → logprob: -11.757625579833984
    8. ',self' → logprob: -12.007625579833984
    9. ',n' → logprob: -12.132625579833984
    10. ',value' → logprob: -12.257625579833984

Token 32: ' num' (ID: 2269)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.778242290019989
    2. ' self' → logprob: -0.903242290019989
    3. 'self' → logprob: -2.903242349624634
    4. 'number' → logprob: -3.028242349624634
    5. ' value' → logprob: -4.153242111206055
    6. ' numbers' → logprob: -4.903242111206055
    7. 'value' → logprob: -5.653242111206055
    8. ' n' → logprob: -6.153242111206055
    9. ' num' → logprob: -7.028242111206055
    10. 'numbers' → logprob: -7.153242111206055

Token 33: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6477465629577637
    2. 'ber' → logprob: -0.7727465629577637
    3. '):' → logprob: -4.522746562957764
    4. 'er' → logprob: -5.772746562957764
    5. ')' → logprob: -7.022746562957764
    6. 'eral' → logprob: -9.897747039794922
    7. 'bers' → logprob: -10.272747039794922
    8. 'ercial' → logprob: -10.772747039794922
    9. 'ebr' → logprob: -11.272747039794922
    10. 'bered' → logprob: -11.522747039794922

Token 34: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.021369218826293945
    2. 'int' → logprob: -3.896369218826294
    3. ')' → logprob: -7.271368980407715
    4. ' ' → logprob: -9.396368980407715
    5. '[int' → logprob: -11.021368980407715
    6. ' )' → logprob: -11.646368980407715
    7. ':int' → logprob: -12.146368980407715
    8. '  ' → logprob: -12.396368980407715
    9. '	int' → logprob: -12.771368980407715
    10. '=int' → logprob: -12.771368980407715

Token 35: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5954712075181305e-05
    2. ' )' → logprob: -11.000036239624023
    3. ',' → logprob: -11.250036239624023
    4. '):' → logprob: -12.750036239624023
    5. ')->' → logprob: -13.625036239624023
    6. ':' → logprob: -13.875036239624023
    7. '   ' → logprob: -15.000036239624023
    8. '`)' → logprob: -15.375036239624023
    9. ',)' → logprob: -15.625036239624023
    10. ' ' → logprob: -16.625036239624023

Token 36: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009875539690256119
    2. '->' → logprob: -7.375987529754639
    3. ' ->' → logprob: -8.625988006591797
    4. ')->' → logprob: -8.750988006591797
    5. ' )' → logprob: -11.000988006591797
    6. '   ' → logprob: -12.750988006591797
    7. ',' → logprob: -13.625988006591797
    8. ' )->' → logprob: -14.125988006591797
    9. '`)' → logprob: -14.625988006591797
    10. ':' → logprob: -15.125988006591797

Token 37: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.01817183382809162
    2. 'str' → logprob: -4.018171787261963
    3. ' ' → logprob: -11.143172264099121
    4. ' List' → logprob: -13.268172264099121
    5. '[str' → logprob: -13.268172264099121
    6. '	str' → logprob: -13.518172264099121
    7. ' ' → logprob: -14.393172264099121
    8. '  ' → logprob: -14.393172264099121
    9. ' int' → logprob: -14.643172264099121
    10. 'List' → logprob: -15.018172264099121

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018467707559466362
    2. '<|end|>' → logprob: -6.501846790313721
    3. '):' → logprob: -8.876846313476562
    4. ':return' → logprob: -9.126846313476562
    5. ')' → logprob: -10.126846313476562
    6. '   ' → logprob: -11.251846313476562
    7. ':
' → logprob: -11.251846313476562
    8. ' :' → logprob: -11.876846313476562
    9. ':def' → logprob: -12.001846313476562
    10. '<|end|>' → logprob: -12.126846313476562

Token 39: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6010202765464783
    2. 'pass' (adapté à ' pass') → logprob: -0.8510202765464783
    3. ' pass' → logprob: -3.851020336151123
    4. '   ' → logprob: -6.601020336151123
    5. '...' → logprob: -6.851020336151123
    6. '\n' → logprob: -8.226019859313965
    7. '```' → logprob: -9.101019859313965
    8. 'raise' → logprob: -9.351019859313965
    9. '        
' → logprob: -9.601019859313965
    10. '    ' → logprob: -9.726019859313965

Token 41: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31343206763267517
    2. '<|end|>' → logprob: -2.063431978225708
    3. '   ' → logprob: -2.313431978225708
    4. '    
' → logprob: -3.938431978225708
    5. '

' → logprob: -4.563432216644287
    6. '<|end|>' → logprob: -5.438432216644287
    7. ' 
' → logprob: -5.938432216644287
    8. '\n' → logprob: -6.188432216644287
    9. '```' → logprob: -6.938432216644287
    10. '    ' → logprob: -7.438432216644287

Token 42: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06681949645280838
    2. '   ' → logprob: -3.316819429397583
    3. '    
' → logprob: -4.441819667816162
    4. '<|end|>' → logprob: -4.816819667816162
    5. '

' → logprob: -5.441819667816162
    6. '<|end|>' → logprob: -6.691819667816162
    7. ' 
' → logprob: -7.566819667816162
    8. '  
' → logprob: -7.566819667816162
    9. '```' → logprob: -7.691819667816162
    10. 'n' → logprob: -7.816819667816162

Token 43: ' @' (ID: 759)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5672006607055664
    2. '   ' → logprob: -0.9422006607055664
    3. '    
' → logprob: -3.3172006607055664
    4. '@' (adapté à ' @') → logprob: -6.067200660705566
    5. '<|end|>' → logprob: -7.067200660705566
    6. 'def' → logprob: -7.192200660705566
    7. '```' → logprob: -7.692200660705566
    8. '    ' → logprob: -8.067200660705566
    9. '

' → logprob: -8.067200660705566
    10. ' 
' → logprob: -8.067200660705566

Token 44: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -3.9888433093437925e-05
    2. 'ab' → logprob: -11.000040054321289
    3. 'property' → logprob: -11.750040054321289
    4. 'abc' → logprob: -12.000040054321289
    5. 'abs' → logprob: -12.875040054321289
    6. 'staticmethod' → logprob: -12.875040054321289
    7. 'classmethod' → logprob: -13.000040054321289
    8. ' abstract' → logprob: -13.625040054321289
    9. '.abstract' → logprob: -15.500040054321289
    10. '   ' → logprob: -17.37504005432129

Token 45: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.04875575006008148
    2. 'def' → logprob: -3.048755645751953
    3. '.method' → logprob: -9.673755645751953
    4. '_method' → logprob: -9.798755645751953
    5. ' def' → logprob: -10.673755645751953
    6. '<|end|>' → logprob: -12.173755645751953
    7. 'the' → logprob: -12.923755645751953
    8. '	def' → logprob: -13.173755645751953
    9. 'meth' → logprob: -13.173755645751953
    10. ' method' → logprob: -13.298755645751953

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04932520166039467
    2. 'def' → logprob: -3.0493252277374268
    3. '
' → logprob: -7.924324989318848
    4. ' def' → logprob: -8.424324989318848
    5. '<|end|>' → logprob: -9.799324989318848
    6. '   ' → logprob: -10.424324989318848
    7. '    
' → logprob: -10.549324989318848
    8. '\' → logprob: -11.549324989318848
    9. 'newline' → logprob: -11.674324989318848
    10. ' 
' → logprob: -12.299324989318848

Token 47: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002108118060277775
    2. '
' → logprob: -8.625210762023926
    3. ' def' → logprob: -10.625210762023926
    4. '   ' → logprob: -12.000210762023926
    5. '```' → logprob: -15.375210762023926
    6. '
' → logprob: -15.750210762023926
    7. 'method' → logprob: -16.125211715698242
    8. '    
' → logprob: -16.375211715698242
    9. 'd' → logprob: -16.875211715698242
    10. '	def' → logprob: -17.500211715698242

Token 48: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.012901252135634422
    2. '
' → logprob: -4.387901306152344
    3. ' def' → logprob: -8.387901306152344
    4. 'method' → logprob: -9.137901306152344
    5. 'classmethod' → logprob: -10.887901306152344
    6. '    
' → logprob: -11.512901306152344
    7. 'decode' → logprob: -11.762901306152344
    8. '
' → logprob: -12.512901306152344
    9. 'staticmethod' → logprob: -13.012901306152344
    10. '```' → logprob: -13.012901306152344

Token 49: ' decode' (ID: 32043)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.07901933789253235
    2. ' decode' → logprob: -2.57901930809021
    3. 'def' → logprob: -9.329019546508789
    4. '_decode' → logprob: -11.204019546508789
    5. '.decode' → logprob: -12.079019546508789
    6. '```' → logprob: -12.204019546508789
    7. '   ' → logprob: -12.579019546508789
    8. ' def' → logprob: -12.704019546508789
    9. 'decoder' → logprob: -12.954019546508789
    10. 'encode' → logprob: -13.829019546508789

Token 50: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.440506407059729e-05
    2. '(' → logprob: -10.37503433227539
    3. 'self' → logprob: -12.87503433227539
    4. ' (' → logprob: -15.37503433227539
    5. '(
' → logprob: -16.37503433227539
    6. ')' → logprob: -16.50003433227539
    7. '(s' → logprob: -16.50003433227539
    8. ' self' → logprob: -17.50003433227539
    9. '```' → logprob: -17.50003433227539
    10. '   ' → logprob: -17.62503433227539

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019608670845627785
    2. ' ,' → logprob: -6.876960754394531
    3. 'self' → logprob: -7.376960754394531
    4. ')' → logprob: -8.501960754394531
    5. 's' → logprob: -9.751960754394531
    6. ':' → logprob: -10.876960754394531
    7. ' self' → logprob: -11.876960754394531
    8. '   ' → logprob: -12.751960754394531
    9. ' )' → logprob: -13.126960754394531
    10. ',num' → logprob: -13.251960754394531

Token 52: ' representation' (ID: 22311)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49497348070144653
    2. ' self' → logprob: -0.9949734807014465
    3. 's' → logprob: -4.369973659515381
    4. ' s' → logprob: -5.494973659515381
    5. 'str' → logprob: -6.244973659515381
    6. ' str' → logprob: -7.744973659515381
    7. ' encoded' → logprob: -7.744973659515381
    8. 'encoded' → logprob: -8.119973182678223
    9. ' code' → logprob: -8.244973182678223
    10. 'code' → logprob: -8.619973182678223

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000157293034135364
    2. ':str' → logprob: -8.875157356262207
    3. ' :' → logprob: -11.500157356262207
    4. ')' → logprob: -12.250157356262207
    5. 's' → logprob: -14.000157356262207
    6. ' ' → logprob: -14.125157356262207
    7. '):' → logprob: -14.750157356262207
    8. 'str' → logprob: -15.250157356262207
    9. '   ' → logprob: -16.00015640258789
    10. '```' → logprob: -17.25015640258789

Token 54: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.2519868314266205
    2. 'str' → logprob: -1.5019868612289429
    3. '[str' → logprob: -10.376986503601074
    4. ')' → logprob: -11.001986503601074
    5. ' ' → logprob: -12.251986503601074
    6. 's' → logprob: -13.626986503601074
    7. '	str' → logprob: -13.626986503601074
    8. '   ' → logprob: -14.376986503601074
    9. '=str' → logprob: -14.501986503601074
    10. ':str' → logprob: -14.501986503601074

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.290784560609609e-05
    2. ' )' → logprob: -9.625072479248047
    3. '   ' → logprob: -12.375072479248047
    4. '):' → logprob: -13.375072479248047
    5. '`)' → logprob: -14.125072479248047
    6. ':' → logprob: -16.375072479248047
    7. ' ' → logprob: -16.750072479248047
    8. ')->' → logprob: -16.875072479248047
    9. '    ' → logprob: -17.500072479248047
    10. '       ' → logprob: -17.750072479248047

Token 56: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7233381271362305
    2. ' ->' → logprob: -0.7233381271362305
    3. '->' → logprob: -3.5983381271362305
    4. ')->' → logprob: -6.4733381271362305
    5. '   ' → logprob: -7.7233381271362305
    6. ':' → logprob: -8.09833812713623
    7. ' ' → logprob: -10.72333812713623
    8. ' )' → logprob: -11.09833812713623
    9. '       ' → logprob: -11.72333812713623
    10. '):' → logprob: -11.72333812713623

Token 57: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04302717000246048
    2. ' int' → logprob: -3.16802716255188
    3. '[int' → logprob: -11.2930269241333
    4. ' ' → logprob: -11.7930269241333
    5. '<int' → logprob: -12.7930269241333
    6. '	int' → logprob: -13.5430269241333
    7. '=int' → logprob: -14.5430269241333
    8. 'List' → logprob: -14.5430269241333
    9. '```' → logprob: -14.5430269241333
    10. '  ' → logprob: -14.6680269241333

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001686962554231286
    2. '):' → logprob: -7.001687049865723
    3. ':
' → logprob: -7.376687049865723
    4. '<|end|>' → logprob: -9.626687049865723
    5. ':return' → logprob: -10.001687049865723
    6. '   ' → logprob: -12.001687049865723
    7. '
' → logprob: -12.251687049865723
    8. '():' → logprob: -12.376687049865723
    9. '>:' → logprob: -12.626687049865723
    10. ':def' → logprob: -12.626687049865723

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010143491672351956
    2. ' pass' → logprob: -7.501014232635498
    3. 'pass' → logprob: -8.001014709472656
    4. '<|end|>' → logprob: -9.251014709472656
    5. '   ' → logprob: -10.501014709472656
    6. '```' → logprob: -14.126014709472656
    7. '	pass' → logprob: -14.376014709472656
    8. '      ' → logprob: -15.126014709472656
    9. '
' → logprob: -15.501014709472656
    10. ' ' → logprob: -15.751014709472656

Token 60: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032487702555954456
    2. 'pass' (adapté à ' pass') → logprob: -5.753248691558838
    3. ' pass' → logprob: -9.628249168395996
    4. '```' → logprob: -13.128249168395996
    5. '   ' → logprob: -13.253249168395996
    6. '      ' → logprob: -13.878249168395996
    7. '	pass' → logprob: -15.503249168395996
    8. '     ' → logprob: -15.878249168395996
    9. ' ' → logprob: -17.25324821472168
    10. '           ' → logprob: -17.37824821472168

Token 61: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13470420241355896
    2. 'class' → logprob: -2.134704113006592
    3. '

' → logprob: -4.884704113006592
    4. '
' → logprob: -9.00970458984375
    5. ' class' → logprob: -10.63470458984375
    6. '```' → logprob: -11.00970458984375
    7. '


' → logprob: -11.38470458984375
    8. '<|end|>' → logprob: -12.50970458984375
    9. '
    
' → logprob: -13.38470458984375
    10. '' → logprob: -13.75970458984375

Token 62: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.20162393152713776
    2. '
' → logprob: -1.7016239166259766
    3. '

' → logprob: -8.576623916625977
    4. ' class' → logprob: -11.826623916625977
    5. '
' → logprob: -12.076623916625977
    6. '```' → logprob: -12.326623916625977
    7. '  
' → logprob: -13.826623916625977
    8. '<|end|>' → logprob: -13.826623916625977
    9. '    
' → logprob: -14.576623916625977
    10. '' → logprob: -14.826623916625977

Token 63: ' Negative' (ID: 94868)
  Prédit: ' Roman'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Roman' → logprob: -0.38695135712623596
    2. ' Binary' → logprob: -1.7619513273239136
    3. ' Decimal' → logprob: -2.636951446533203
    4. 'Roman' → logprob: -3.136951446533203
    5. 'Binary' → logprob: -4.511951446533203
    6. ' Arabic' → logprob: -4.636951446533203
    7. 'Decimal' → logprob: -5.886951446533203
    8. ' Arab' → logprob: -6.011951446533203
    9. ' ' → logprob: -6.261951446533203
    10. ' Integer' → logprob: -7.011951446533203

Token 64: 'Base' (ID: 4882)
  Prédit: 'Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Binary' → logprob: -0.46573296189308167
    2. 'Base' → logprob: -1.2157329320907593
    3. 'Roman' → logprob: -2.840733051300049
    4. 'Bin' → logprob: -4.215733051300049
    5. 'Balanced' → logprob: -6.965733051300049
    6. 'Decimal' → logprob: -7.465733051300049
    7. 'Integer' → logprob: -7.840733051300049
    8. 'Bases' → logprob: -8.21573257446289
    9. 'B' → logprob: -9.34073257446289
    10. 'Based' → logprob: -9.46573257446289

Token 65: 'Numer' (ID: 65395)
  Prédit: 'Numer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Numer' → logprob: -0.06740394979715347
    2. 'System' → logprob: -2.81740403175354
    3. 'Number' → logprob: -5.692403793334961
    4. '(' → logprob: -7.067403793334961
    5. 'Converter' → logprob: -7.442403793334961
    6. '(System' → logprob: -8.942403793334961
    7. ' Numer' → logprob: -9.567403793334961
    8. 'Conversion' → logprob: -9.692403793334961
    9. '(N' → logprob: -9.692403793334961
    10. '(Base' → logprob: -10.067403793334961

Token 66: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -9.253090865968261e-06
    2. 'als' → logprob: -12.875009536743164
    3. 'er' → logprob: -13.250009536743164
    4. 'ial' → logprob: -13.375009536743164
    5. 'System' → logprob: -13.875009536743164
    6. 'class' → logprob: -14.125009536743164
    7. 'Base' → logprob: -14.500009536743164
    8. 'ation' → logprob: -14.875009536743164
    9. 'ical' → logprob: -15.375009536743164
    10. 'eral' → logprob: -16.000009536743164

Token 67: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -2.45848218582978e-06
    2. 'Systems' → logprob: -13.50000286102295
    3. 'system' → logprob: -14.62500286102295
    4. '_system' → logprob: -15.12500286102295
    5. ' system' → logprob: -16.750001907348633
    6. '(System' → logprob: -16.875001907348633
    7. ' System' → logprob: -17.000001907348633
    8. 'ystem' → logprob: -17.000001907348633
    9. 'ssystem' → logprob: -17.125001907348633
    10. 'Sistema' → logprob: -17.250001907348633

Token 68: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19892115890979767
    2. '(N' → logprob: -2.1989212036132812
    3. ':' → logprob: -2.6989212036132812
    4. '(Base' → logprob: -6.323921203613281
    5. '<|end|>' → logprob: -9.073921203613281
    6. '(base' → logprob: -9.948921203613281
    7. ' (' → logprob: -10.198921203613281
    8. '(Abstract' → logprob: -10.198921203613281
    9. ' :' → logprob: -10.323921203613281
    10. '():' → logprob: -11.323921203613281

Token 69: 'umer' (ID: 3986)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.20183682441711426
    2. 'umer' → logprob: -1.7018368244171143
    3. '```' → logprob: -9.076836585998535
    4. 'umerator' → logprob: -9.576836585998535
    5. 'umeric' → logprob: -9.951836585998535
    6. 'umber' → logprob: -10.201836585998535
    7. ' eg' → logprob: -10.451836585998535
    8. 'Base' → logprob: -10.451836585998535
    9. 'um' → logprob: -10.951836585998535
    10. 'eger' → logprob: -11.201836585998535

Token 70: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0004338877333793789
    2. 'Base' → logprob: -7.875433921813965
    3. 'base' → logprob: -11.125433921813965
    4. 'a' → logprob: -11.125433921813965
    5. '```' → logprob: -11.250433921813965
    6. 'e' → logprob: -13.000433921813965
    7. '_base' → logprob: -13.250433921813965
    8. ' base' → logprob: -14.000433921813965
    9. '-base' → logprob: -14.250433921813965
    10. '   ' → logprob: -14.375433921813965

Token 71: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -0.002524172654375434
    2. 'Base' → logprob: -6.002524375915527
    3. 'system' → logprob: -10.752524375915527
    4. 'ystem' → logprob: -11.377524375915527
    5. 'base' → logprob: -12.127524375915527
    6. 'Systems' → logprob: -12.752524375915527
    7. ')' → logprob: -13.252524375915527
    8. ' System' → logprob: -13.377524375915527
    9. '_system' → logprob: -14.252524375915527
    10. ' system' → logprob: -14.502524375915527

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00038074489566497505
    2. '):
' → logprob: -8.250380516052246
    3. ' ):' → logprob: -10.125380516052246
    4. ',' → logprob: -10.250380516052246
    5. ':' → logprob: -10.750380516052246
    6. ')' → logprob: -11.875380516052246
    7. '   ' → logprob: -12.125380516052246
    8. '[' → logprob: -12.875380516052246
    9. '(' → logprob: -13.250380516052246
    10. '):
' → logprob: -13.625380516052246

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031601715832948685
    2. ' def' → logprob: -3.531601667404175
    3. 'def' → logprob: -6.406601905822754
    4. '    ' → logprob: -9.781601905822754
    5. '    
' → logprob: -9.906601905822754
    6. '   ' → logprob: -10.531601905822754
    7. ' ' → logprob: -10.906601905822754
    8. '  ' → logprob: -11.281601905822754
    9. ')' → logprob: -11.656601905822754
    10. '   ' → logprob: -12.031601905822754

Token 74: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.062044765800237656
    2. 'def' (adapté à ' def') → logprob: -2.812044858932495
    3. '   ' → logprob: -9.812045097351074
    4. ' base' → logprob: -11.187045097351074
    5. 'base' → logprob: -13.187045097351074
    6. ' __' → logprob: -13.687045097351074
    7. ')' → logprob: -14.062045097351074
    8. '	def' → logprob: -14.187045097351074
    9. ' ' → logprob: -14.312045097351074
    10. '```' → logprob: -14.437045097351074

Token 75: ' __' (ID: 2516)
  Prédit: ' encode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' encode' → logprob: -0.046635281294584274
    2. ' __' → logprob: -3.171635389328003
    3. ' decode' → logprob: -6.421635150909424
    4. ' def' → logprob: -6.921635150909424
    5. 'encode' → logprob: -7.796635150909424
    6. '_encode' → logprob: -8.171635627746582
    7. ' ' → logprob: -9.171635627746582
    8. ' _' → logprob: -9.171635627746582
    9. ' ' → logprob: -9.796635627746582
    10. '__' → logprob: -11.046635627746582

Token 76: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.896309739408025e-07
    2. ' init' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.125
    4. '```' → logprob: -16.375
    5. '  ' → logprob: -16.875
    6. ' ' → logprob: -17.125
    7. 'ini' → logprob: -17.125
    8. '_init' → logprob: -17.75
    9. '	init' → logprob: -18.25
    10. 'inite' → logprob: -18.75

Token 77: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.16161087155342102
    2. '(self' → logprob: -1.9116108417510986
    3. '(' → logprob: -7.161611080169678
    4. ')(' → logprob: -8.66161060333252
    5. '_(' → logprob: -8.78661060333252
    6. '__(
' → logprob: -9.41161060333252
    7. '__' → logprob: -9.41161060333252
    8. ' (' → logprob: -10.16161060333252
    9. '<>(' → logprob: -10.53661060333252
    10. 'self' → logprob: -11.28661060333252

Token 78: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024762547109276056
    2. ' self' → logprob: -6.002476215362549
    3. ' ' → logprob: -15.502476692199707
    4. '(self' → logprob: -16.00247573852539
    5. ',' → logprob: -16.62747573852539
    6. '	self' → logprob: -16.87747573852539
    7. ')' → logprob: -16.87747573852539
    8. ',self' → logprob: -17.37747573852539
    9. '   ' → logprob: -17.87747573852539
    10. 's' → logprob: -18.00247573852539

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020573416724801064
    2. ' ,' → logprob: -3.895573377609253
    3. ',value' → logprob: -11.770573616027832
    4. ',n' → logprob: -11.895573616027832
    5. ')' → logprob: -12.270573616027832
    6. ' ' → logprob: -12.895573616027832
    7. 'base' → logprob: -13.395573616027832
    8. '  ' → logprob: -14.020573616027832
    9. '_base' → logprob: -14.020573616027832
    10. 'value' → logprob: -14.145573616027832

Token 80: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.06302539259195328
    2. 'base' → logprob: -3.06302547454834
    3. ' self' → logprob: -4.81302547454834
    4. ' b' → logprob: -6.06302547454834
    5. 'self' → logprob: -6.06302547454834
    6. 'b' → logprob: -7.06302547454834
    7. ' ' → logprob: -7.56302547454834
    8. ')' → logprob: -9.81302547454834
    9. '   ' → logprob: -10.43802547454834
    10. '	base' → logprob: -10.68802547454834

Token 81: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02536279894411564
    2. '):' → logprob: -3.775362730026245
    3. ' ):' → logprob: -6.775362968444824
    4. ':int' → logprob: -7.525362968444824
    5. ' :' → logprob: -7.775362968444824
    6. ')' → logprob: -11.650362968444824
    7. ',' → logprob: -13.400362968444824
    8. '_:' → logprob: -13.525362968444824
    9. '=' → logprob: -13.900362968444824
    10. ' )' → logprob: -14.025362968444824

Token 82: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.28450679779052734
    2. 'int' → logprob: -1.6595067977905273
    3. ' -' → logprob: -3.6595067977905273
    4. ' ' → logprob: -4.659506797790527
    5. ' )' → logprob: -5.034506797790527
    6. ')' → logprob: -5.159506797790527
    7. '-' → logprob: -5.534506797790527
    8. ':int' → logprob: -5.659506797790527
    9. '2' → logprob: -7.284506797790527
    10. '<int' → logprob: -7.534506797790527

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008883172646164894
    2. ')' → logprob: -5.258882999420166
    3. ':' → logprob: -5.883882999420166
    4. ' ):' → logprob: -7.508882999420166
    5. '=' → logprob: -8.633883476257324
    6. ',' → logprob: -9.133883476257324
    7. '):
' → logprob: -11.633883476257324
    8. '   ' → logprob: -12.133883476257324
    9. ' )' → logprob: -12.633883476257324
    10. ' ' → logprob: -13.258883476257324

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022313790395855904
    2. ' ' → logprob: -7.252231597900391
    3. ':' → logprob: -8.25223159790039
    4. '    ' → logprob: -8.37723159790039
    5. '   ' → logprob: -8.50223159790039
    6. '):' → logprob: -8.62723159790039
    7. '        ' → logprob: -8.75223159790039
    8. ' ):' → logprob: -9.12723159790039
    9. ')' → logprob: -9.25223159790039
    10. ' )' → logprob: -9.37723159790039

Token 85: ' if' (ID: 538)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4803885221481323
    2. 'self' → logprob: -0.9803885221481323
    3. '       ' → logprob: -5.105388641357422
    4. ' super' → logprob: -9.480388641357422
    5. '   ' → logprob: -9.730388641357422
    6. 'super' → logprob: -9.980388641357422
    7. ' if' → logprob: -11.230388641357422
    8. ' ' → logprob: -11.355388641357422
    9. ' ' → logprob: -12.355388641357422
    10. ' assert' → logprob: -12.355388641357422

Token 86: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.0002930366899818182
    2. ' ' → logprob: -8.750292778015137
    3. 'base' → logprob: -9.000292778015137
    4. ' not' → logprob: -12.625292778015137
    5. '	base' → logprob: -13.000292778015137
    6. '  ' → logprob: -13.375292778015137
    7. '(base' → logprob: -13.500292778015137
    8. ' abs' → logprob: -13.625292778015137
    9. ' ' → logprob: -13.875292778015137
    10. '   ' → logprob: -15.500292778015137

Token 87: ' >=' (ID: 5064)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5028516054153442
    2. ' >=' → logprob: -1.1278516054153442
    3. ' >' → logprob: -3.1278514862060547
    4. ' <' → logprob: -4.627851486206055
    5. '<=' → logprob: -4.752851486206055
    6. '>=' → logprob: -5.002851486206055
    7. '>' → logprob: -6.252851486206055
    8. ' ' → logprob: -7.877851486206055
    9. '<' → logprob: -8.877851486206055
    10. ' <-' → logprob: -10.127851486206055

Token 88: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02413446456193924
    2. ' ' → logprob: -4.274134635925293
    3. '-' → logprob: -4.649134635925293
    4. ' -' → logprob: -8.524134635925293
    5. '1' → logprob: -9.399134635925293
    6. '2' → logprob: -9.899134635925293
    7. '```' → logprob: -11.274134635925293
    8. '`' → logprob: -14.086634635925293
    9. '

' → logprob: -14.211634635925293
    10. '  ' → logprob: -14.461634635925293

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0701480507850647
    2. '-' → logprob: -2.69514799118042
    3. '1' → logprob: -8.945148468017578
    4. '2' → logprob: -9.820148468017578
    5. ' ' → logprob: -11.195148468017578
    6. ' -' → logprob: -11.820148468017578
    7. '```' → logprob: -12.695148468017578
    8. '-
' → logprob: -15.007648468017578
    9. '\-' → logprob: -15.570148468017578
    10. '−' → logprob: -15.632648468017578

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12101461738348007
    2. ' or' → logprob: -2.3710145950317383
    3. ' :' → logprob: -4.246014595031738
    4. ':
' → logprob: -5.746014595031738
    5. '       ' → logprob: -6.496014595031738
    6. '           ' → logprob: -7.246014595031738
    7. ' :
' → logprob: -8.371014595031738
    8. ' raise' → logprob: -8.496014595031738
    9. 'or' → logprob: -9.121014595031738
    10. '        ' → logprob: -9.496014595031738

Token 91: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05560951679944992
    2. ':
' → logprob: -3.1806094646453857
    3. '           ' → logprob: -5.055609703063965
    4. ' or' → logprob: -6.055609703063965
    5. ' :' → logprob: -6.930609703063965
    6. ' raise' → logprob: -7.180609703063965
    7. '       ' → logprob: -7.680609703063965
    8. 'raise' → logprob: -7.805609703063965
    9. ' :
' → logprob: -8.055609703063965
    10. '        ' → logprob: -8.180609703063965

Token 92: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.11496388167142868
    2. 'raise' (adapté à ' raise') → logprob: -2.2399637699127197
    3. '           ' → logprob: -6.239964008331299
    4. '	raise' → logprob: -8.98996353149414
    5. '
' → logprob: -10.86496353149414
    6. '        ' → logprob: -11.11496353149414
    7. '_raise' → logprob: -11.73996353149414
    8. '            ' → logprob: -11.73996353149414
    9. 'raises' → logprob: -12.73996353149414
    10. '    ' → logprob: -12.98996353149414

Token 93: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -7.76759916334413e-05
    2. ' ' → logprob: -9.625077247619629
    3. ' Val' → logprob: -11.625077247619629
    4. '	Value' → logprob: -13.250077247619629
    5. ' Va' → logprob: -14.375077247619629
    6. 'Value' → logprob: -15.750077247619629
    7. ' ' → logprob: -16.875078201293945
    8. ' Valor' → logprob: -17.750078201293945
    9. '_Value' → logprob: -17.875078201293945
    10. '<Value' → logprob: -18.375078201293945

Token 94: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00030114251421764493
    2. 'Value' → logprob: -8.625301361083984
    3. 'rror' → logprob: -9.125301361083984
    4. '	Error' → logprob: -12.625301361083984
    5. ' Error' → logprob: -13.875301361083984
    6. 'Val' → logprob: -14.000301361083984
    7. 'V' → logprob: -14.000301361083984
    8. '<Value' → logprob: -14.125301361083984
    9. '<|end|>' → logprob: -14.125301361083984
    10. '>Error' → logprob: -14.250301361083984

Token 95: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10040087252855301
    2. '(' → logprob: -2.350400924682617
    3. '(
' → logprob: -9.100400924682617
    4. '('' → logprob: -9.475400924682617
    5. '(

' → logprob: -12.975400924682617
    6. '(f' → logprob: -13.225400924682617
    7. '("'' → logprob: -14.600400924682617
    8. '(":' → logprob: -15.225400924682617
    9. '("")' → logprob: -15.350400924682617
    10. '"' → logprob: -15.725400924682617

Token 96: 'Base' (ID: 4882)
  Prédit: 'Base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Base' → logprob: -0.00045617512660101056
    2. 'Negative' → logprob: -8.375455856323242
    3. 'The' → logprob: -9.000455856323242
    4. 'base' → logprob: -9.375455856323242
    5. ' Base' → logprob: -11.875455856323242
    6. '"' → logprob: -11.875455856323242
    7. ' base' → logprob: -13.375455856323242
    8. '_base' → logprob: -14.000455856323242
    9. '_Base' → logprob: -15.250455856323242
    10. '	Base' → logprob: -15.250455856323242

Token 97: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0022320940624922514
    2. 'must' → logprob: -6.127232074737549
    3. ' should' → logprob: -10.127232551574707
    4. ' ' → logprob: -12.252232551574707
    5. ' for' → logprob: -14.127232551574707
    6. '<|end|>' → logprob: -14.752232551574707
    7. ' has' → logprob: -14.877232551574707
    8. '   ' → logprob: -16.12723159790039
    9. 'should' → logprob: -16.12723159790039
    10. 'm' → logprob: -16.50223159790039

Token 98: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.004408516921103001
    2. ' <' → logprob: -5.754408359527588
    3. '<|end|>' → logprob: -6.879408359527588
    4. ' ' → logprob: -9.004408836364746
    5. '<' → logprob: -9.879408836364746
    6. 'less' → logprob: -11.754408836364746
    7. ' less' → logprob: -12.254408836364746
    8. 'be' → logprob: -12.379408836364746
    9. '0' → logprob: -13.004408836364746
    10. 's' → logprob: -13.004408836364746

Token 99: ' negative' (ID: 12626)
  Prédit: ' negative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' negative' → logprob: -0.05002054572105408
    2. 'negative' → logprob: -3.050020456314087
    3. ' a' → logprob: -7.425020694732666
    4. ' less' → logprob: -7.425020694732666
    5. 'less' → logprob: -9.175020217895508
    6. '<' → logprob: -9.675020217895508
    7. ' negativo' → logprob: -10.925020217895508
    8. '-negative' → logprob: -11.175020217895508
    9. ' <' → logprob: -11.300020217895508
    10. '_negative' → logprob: -11.925020217895508

Token 100: ' for' (ID: 395)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.013643293641507626
    2. '.")' → logprob: -5.138643264770508
    3. ' ")' → logprob: -5.638643264770508
    4. '")
' → logprob: -6.013643264770508
    5. ',' → logprob: -7.263643264770508
    6. ' and' → logprob: -7.638643264770508
    7. ' or' → logprob: -8.763643264770508
    8. '")
' → logprob: -9.013643264770508
    9. ')")' → logprob: -10.013643264770508
    10. '.")
' → logprob: -10.138643264770508

Token 101: ' Negative' (ID: 94868)
  Prédit: ' Negative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Negative' → logprob: -0.06569991260766983
    2. 'Negative' → logprob: -3.565699815750122
    3. ' a' → logprob: -4.065700054168701
    4. ' negative' → logprob: -4.565700054168701
    5. ' this' → logprob: -4.940700054168701
    6. ' the' → logprob: -7.940700054168701
    7. ' ' → logprob: -8.940699577331543
    8. 'this' → logprob: -10.190699577331543
    9. '_negative' → logprob: -10.440699577331543
    10. 'negative' → logprob: -10.565699577331543

Token 102: 'Base' (ID: 4882)
  Prédit: 'Base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Base' → logprob: -2.3795937522663735e-05
    2. ' Base' → logprob: -11.00002384185791
    3. ' base' → logprob: -13.25002384185791
    4. '-' → logprob: -14.12502384185791
    5. 'Bas' → logprob: -14.25002384185791
    6. '	Base' → logprob: -14.50002384185791
    7. 'base' → logprob: -14.62502384185791
    8. '

' → logprob: -14.75002384185791
    9. 'Bases' → logprob: -14.75002384185791
    10. '-base' → logprob: -15.12502384185791

Token 103: 'Numer' (ID: 65395)
  Prédit: 'Numer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Numer' → logprob: -0.00012821101699955761
    2. ' numer' → logprob: -10.125127792358398
    3. ' Numer' → logprob: -10.125127792358398
    4. ' numeral' → logprob: -11.500127792358398
    5. 'numer' → logprob: -11.625127792358398
    6. ' systems' → logprob: -11.750127792358398
    7. 'Number' → logprob: -12.625127792358398
    8. 'System' → logprob: -12.625127792358398
    9. 'Systems' → logprob: -12.875127792358398
    10. ')' → logprob: -12.875127792358398

Token 104: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -4.6087021473795176e-05
    2. 'als' → logprob: -11.500045776367188
    3. 'System' → logprob: -11.625045776367188
    4. '   ' → logprob: -11.750045776367188
    5. '           ' → logprob: -12.500045776367188
    6. '       ' → logprob: -12.625045776367188
    7. 'system' → logprob: -13.250045776367188
    8. 'ation' → logprob: -13.625045776367188
    9. '```' → logprob: -13.750045776367188
    10. '        ' → logprob: -13.875045776367188

Token 105: 'System' (ID: 3320)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.034680359065532684
    2. 'System' → logprob: -3.4096803665161133
    3. 'system' → logprob: -8.159680366516113
    4. '   ' → logprob: -9.159680366516113
    5. 'ation' → logprob: -9.159680366516113
    6. 'als' → logprob: -9.534680366516113
    7. '
' → logprob: -9.659680366516113
    8. '```' → logprob: -9.784680366516113
    9. 'l' → logprob: -10.034680366516113
    10. 's' → logprob: -10.409680366516113

Token 106: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.061501581221818924
    2. '")
' → logprob: -2.9365015029907227
    3. ' ")' → logprob: -5.686501502990723
    4. '.")' → logprob: -6.186501502990723
    5. ',' → logprob: -7.686501502990723
    6. '.")
' → logprob: -8.561501502990723
    7. ' ")
' → logprob: -8.811501502990723
    8. '")
' → logprob: -8.811501502990723
    9. '!")' → logprob: -9.436501502990723
    10. ')")' → logprob: -10.186501502990723

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003230686706956476
    2. '
' → logprob: -9.000323295593262
    3. ' self' → logprob: -9.500323295593262
    4. 'self' → logprob: -9.750323295593262
    5. '        
' → logprob: -10.875323295593262
    6. '<|end|>' → logprob: -11.375323295593262
    7. '   ' → logprob: -11.750323295593262
    8. ',' → logprob: -11.875323295593262
    9. '	' → logprob: -12.125323295593262
    10. '           ' → logprob: -12.375323295593262

Token 108: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036134760826826096
    2. 'self' (adapté à ' self') → logprob: -4.036134719848633
    3. ' self' → logprob: -4.036134719848633
    4. '   ' → logprob: -9.411134719848633
    5. '	self' → logprob: -10.411134719848633
    6. '        
' → logprob: -11.536134719848633
    7. '	' → logprob: -11.786134719848633
    8. '        ' → logprob: -12.036134719848633
    9. ' ' → logprob: -12.536134719848633
    10. '
' → logprob: -12.536134719848633

Token 109: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -6.611323624383658e-05
    2. '._' → logprob: -10.250065803527832
    3. ' .' → logprob: -11.750065803527832
    4. '.' → logprob: -12.000065803527832
    5. 'base' → logprob: -12.125065803527832
    6. '.b' → logprob: -12.375065803527832
    7. '_base' → logprob: -13.375065803527832
    8. '.Base' → logprob: -13.750065803527832
    9. '.bas' → logprob: -14.500065803527832
    10. '   ' → logprob: -14.625065803527832

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193166732788086
    2. '=' → logprob: -1.5019316673278809
    3. ' ' → logprob: -13.626932144165039
    4. '<|end|>' → logprob: -14.751932144165039
    5. '_base' → logprob: -14.876932144165039
    6. '_' → logprob: -15.751932144165039
    7. '=-' → logprob: -16.00193214416504
    8. '=int' → logprob: -16.75193214416504
    9. '=

' → logprob: -17.12693214416504
    10. ':' → logprob: -17.25193214416504

Token 111: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.47408178448677063
    2. ' base' → logprob: -0.9740817546844482
    3. '_base' → logprob: -13.349081993103027
    4. '	base' → logprob: -14.349081993103027
    5. '-base' → logprob: -14.474081993103027
    6. 'Base' → logprob: -14.599081993103027
    7. 'bas' → logprob: -14.849081993103027
    8. '(base' → logprob: -15.099081993103027
    9. ';base' → logprob: -15.599081993103027
    10. '    ' → logprob: -15.724081993103027

Token 112: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0025817241985350847
    2. '<|end|>' → logprob: -6.627581596374512
    3. '

' → logprob: -7.002581596374512
    4. '    
' → logprob: -9.252581596374512
    5. '   ' → logprob: -9.752581596374512
    6. '<|end|>' → logprob: -9.877581596374512
    7. ' 
' → logprob: -10.002581596374512
    8. 'def' → logprob: -10.377581596374512
    9. '  
' → logprob: -10.502581596374512
    10. '
' → logprob: -11.002581596374512

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.094899982213974
    2. '
' → logprob: -2.469899892807007
    3. 'def' → logprob: -5.719900131225586
    4. '    
' → logprob: -5.969900131225586
    5. ' def' → logprob: -9.844900131225586
    6. '  
' → logprob: -11.219900131225586
    7. '```' → logprob: -11.344900131225586
    8. '        
' → logprob: -11.594900131225586
    9. '   
' → logprob: -11.844900131225586
    10. ' 
' → logprob: -12.594900131225586

Token 114: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.627176768844947e-05
    2. ' def' → logprob: -9.250096321105957
    3. '
' → logprob: -16.12509536743164
    4. '   ' → logprob: -17.87509536743164
    5. '    
' → logprob: -20.12509536743164
    6. ' ' → logprob: -20.75009536743164
    7. '```' → logprob: -21.87509536743164
    8. '	def' → logprob: -22.00009536743164
    9. 'de' → logprob: -22.12509536743164
    10. ' 
' → logprob: -22.75009536743164

Token 115: ' encode' (ID: 31288)
  Prédit: ' encode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' encode' → logprob: -0.0015417613321915269
    2. 'encode' → logprob: -6.501541614532471
    3. '_encode' → logprob: -11.001542091369629
    4. ' def' → logprob: -11.251542091369629
    5. '.encode' → logprob: -12.126542091369629
    6. ' decode' → logprob: -12.501542091369629
    7. ' ' → logprob: -15.751542091369629
    8. 'def' → logprob: -15.876542091369629
    9. ' enc' → logprob: -16.126541137695312
    10. 'decode' → logprob: -16.126541137695312

Token 116: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010370950913056731
    2. '(' → logprob: -6.876037120819092
    3. ' (' → logprob: -12.626036643981934
    4. '(
' → logprob: -14.751036643981934
    5. '(s' → logprob: -14.751036643981934
    6. ' ' → logprob: -16.37603759765625
    7. '   ' → logprob: -16.87603759765625
    8. 'self' → logprob: -17.00103759765625
    9. ' self' → logprob: -17.25103759765625
    10. '(sel' → logprob: -17.50103759765625

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05607793480157852
    2. 'self' → logprob: -2.9310779571533203
    3. ' self' → logprob: -7.55607795715332
    4. ' ,' → logprob: -8.05607795715332
    5. '       ' → logprob: -8.80607795715332
    6. '   ' → logprob: -9.68107795715332
    7. '(self' → logprob: -10.18107795715332
    8. 'num' → logprob: -10.43107795715332
    9. ')' → logprob: -10.68107795715332
    10. ',self' → logprob: -10.80607795715332

Token 118: ' num' (ID: 2269)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7646792531013489
    2. ' num' → logprob: -1.264679193496704
    3. 'self' → logprob: -1.764679193496704
    4. 'num' → logprob: -2.514679193496704
    5. '       ' → logprob: -10.514678955078125
    6. ' ' → logprob: -11.639678955078125
    7. '   ' → logprob: -11.639678955078125
    8. ' number' → logprob: -12.514678955078125
    9. 'n' → logprob: -12.889678955078125
    10. 'number' → logprob: -13.389678955078125

Token 119: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002108743879944086
    2. '):' → logprob: -6.502108573913574
    3. ' :' → logprob: -8.002108573913574
    4. ':int' → logprob: -9.002108573913574
    5. ' ):' → logprob: -9.502108573913574
    6. ')' → logprob: -9.627108573913574
    7. '):
' → logprob: -12.502108573913574
    8. ' )' → logprob: -12.752108573913574
    9. ' ' → logprob: -15.627108573913574
    10. ' ):
' → logprob: -15.877108573913574

Token 120: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31339895725250244
    2. 'int' → logprob: -1.3133989572525024
    3. ' ' → logprob: -9.688399314880371
    4. ')' → logprob: -9.938399314880371
    5. ' str' → logprob: -12.063399314880371
    6. '   ' → logprob: -12.313399314880371
    7. '(int' → logprob: -13.063399314880371
    8. '       ' → logprob: -13.063399314880371
    9. '    ' → logprob: -13.188399314880371
    10. ':int' → logprob: -13.438399314880371

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014739240519702435
    2. '):' → logprob: -4.264739036560059
    3. ' )' → logprob: -7.639739036560059
    4. ' ):' → logprob: -9.764739036560059
    5. ':' → logprob: -10.639739036560059
    6. '):
' → logprob: -11.514739036560059
    7. ')->' → logprob: -13.139739036560059
    8. '   ' → logprob: -14.139739036560059
    9. ' )->' → logprob: -15.889739036560059
    10. '):
' → logprob: -16.639739990234375

Token 122: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035675233229994774
    2. ')' → logprob: -6.003567695617676
    3. ' ->' → logprob: -7.253567695617676
    4. '):' → logprob: -8.753567695617676
    5. ' :' → logprob: -9.128567695617676
    6. '->' → logprob: -9.253567695617676
    7. ')->' → logprob: -11.378567695617676
    8. ':
' → logprob: -12.128567695617676
    9. ':str' → logprob: -12.878567695617676
    10. '):
' → logprob: -15.003567695617676

Token 123: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.004689407534897327
    2. 'str' → logprob: -5.3796892166137695
    3. ' ' → logprob: -9.75468921661377
    4. ' '' → logprob: -12.62968921661377
    5. ' "' → logprob: -13.62968921661377
    6. '[str' → logprob: -13.87968921661377
    7. '(str' → logprob: -14.12968921661377
    8. '	str' → logprob: -14.12968921661377
    9. '"' → logprob: -14.25468921661377
    10. ' s' → logprob: -14.62968921661377

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011717714369297028
    2. ':
' → logprob: -6.876171588897705
    3. ' :' → logprob: -9.376172065734863
    4. '):' → logprob: -10.001172065734863
    5. '       ' → logprob: -12.751172065734863
    6. ':return' → logprob: -13.876172065734863
    7. ' :
' → logprob: -14.001172065734863
    8. ',' → logprob: -14.001172065734863
    9. '):
' → logprob: -14.001172065734863
    10. ':
' → logprob: -14.751172065734863

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012572570703923702
    2. '        ' → logprob: -7.501257419586182
    3. '      ' → logprob: -8.751256942749023
    4. ' if' → logprob: -9.626256942749023
    5. '<|end|>' → logprob: -9.626256942749023
    6. ' ' → logprob: -9.751256942749023
    7. '    ' → logprob: -9.876256942749023
    8. ')' → logprob: -9.876256942749023
    9. 'n' → logprob: -9.876256942749023
    10. ',' → logprob: -10.001256942749023

Token 126: ' """
' (ID: 7037)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31704065203666687
    2. 'if' → logprob: -1.3170406818389893
    3. '       ' → logprob: -5.69204044342041
    4. 'result' → logprob: -8.94204044342041
    5. 'digits' → logprob: -9.44204044342041
    6. 'n' → logprob: -9.56704044342041
    7. ' digits' → logprob: -9.94204044342041
    8. ' result' → logprob: -10.44204044342041
    9. 's' → logprob: -11.94204044342041
    10. '```' → logprob: -12.31704044342041

Token 127: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011604282073676586
    2. '       ' → logprob: -4.511604309082031
    3. ' if' → logprob: -7.636604309082031
    4. 'result' → logprob: -10.011604309082031
    5. 'digits' → logprob: -11.511604309082031
    6. 'n' → logprob: -12.261604309082031
    7. 'base' → logprob: -12.886604309082031
    8. '#' → logprob: -13.136604309082031
    9. '```' → logprob: -13.261604309082031
    10. 'num' → logprob: -13.636604309082031

Token 128: ' Converts' (ID: 93566)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10257688909769058
    2. ' if' → logprob: -2.352576971054077
    3. '       ' → logprob: -6.102576732635498
    4. 'result' → logprob: -9.852577209472656
    5. 'digits' → logprob: -10.602577209472656
    6. 'n' → logprob: -11.227577209472656
    7. 'If' → logprob: -11.352577209472656
    8. '#' → logprob: -11.602577209472656
    9. '"""' → logprob: -11.977577209472656
    10. 'num' → logprob: -13.352577209472656

Token 129: ' a' (ID: 261)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.5301275253295898
    2. ' n' → logprob: -1.6551275253295898
    3. 'num' → logprob: -2.03012752532959
    4. ' the' → logprob: -3.28012752532959
    5. 'n' → logprob: -3.90512752532959
    6. '       ' → logprob: -4.78012752532959
    7. ' a' → logprob: -4.78012752532959
    8. ' ' → logprob: -5.28012752532959
    9. ' number' → logprob: -5.40512752532959
    10. '        ' → logprob: -5.90512752532959

Token 130: ' decimal' (ID: 26964)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.5127585530281067
    2. 'number' → logprob: -1.512758493423462
    3. 'num' → logprob: -1.887758493423462
    4. ' num' → logprob: -4.387758731842041
    5. 'n' → logprob: -4.512758731842041
    6. ' given' → logprob: -6.387758731842041
    7. ' negative' → logprob: -6.512758731842041
    8. 'negative' → logprob: -7.012758731842041
    9. 'int' → logprob: -7.387758731842041
    10. ' n' → logprob: -8.137758255004883

Token 131: ' integer' (ID: 16336)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.04440559819340706
    2. ' integer' → logprob: -3.419405698776245
    3. 'number' → logprob: -4.794405460357666
    4. ' to' → logprob: -6.419405460357666
    5. 'integer' → logprob: -7.669405460357666
    6. 'to' → logprob: -9.419405937194824
    7. 'num' → logprob: -9.544405937194824
    8. ' num' → logprob: -10.044405937194824
    9. ' value' → logprob: -10.294405937194824
    10. ' into' → logprob: -10.544405937194824

Token 132: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0688568502664566
    2. ' into' → logprob: -3.443856954574585
    3. '       ' → logprob: -3.693856954574585
    4. '        ' → logprob: -5.818856716156006
    5. ' number' → logprob: -5.818856716156006
    6. 'to' → logprob: -6.193856716156006
    7. ' ' → logprob: -6.943856716156006
    8. 'number' → logprob: -8.693857192993164
    9. '   ' → logprob: -8.818857192993164
    10. ',' → logprob: -9.943857192993164

Token 133: ' its' (ID: 1617)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.34230875968933105
    2. ' a' → logprob: -1.342308759689331
    3. ' ' → logprob: -4.71730899810791
    4. 'the' → logprob: -5.46730899810791
    5. ' an' → logprob: -5.59230899810791
    6. ' negative' → logprob: -5.71730899810791
    7. ')' → logprob: -6.09230899810791
    8. ' representation' → logprob: -6.96730899810791
    9. ' str' → logprob: -7.09230899810791
    10. 'str' → logprob: -7.09230899810791

Token 134: ' representation' (ID: 22311)
  Prédit: ' representation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' representation' → logprob: -0.1895648092031479
    2. ' negative' → logprob: -2.1895647048950195
    3. 'representation' → logprob: -3.4395647048950195
    4. 'negative' → logprob: -3.8145647048950195
    5. 'neg' → logprob: -6.1895647048950195
    6. ' neg' → logprob: -6.9395647048950195
    7. ' string' → logprob: -7.0645647048950195
    8. '-negative' → logprob: -7.4395647048950195
    9. '_negative' → logprob: -7.5645647048950195
    10. ' base' → logprob: -7.9395647048950195

Token 135: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003069814294576645
    2. 'in' → logprob: -6.128069877624512
    3. ' ' → logprob: -7.503069877624512
    4. ',' → logprob: -9.128069877624512
    5. ' using' → logprob: -9.753069877624512
    6. ' with' → logprob: -10.253069877624512
    7. ' i' → logprob: -10.628069877624512
    8. '       ' → logprob: -10.753069877624512
    9. ' of' → logprob: -11.003069877624512
    10. ' for' → logprob: -11.503069877624512

Token 136: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0580127127468586
    2. ' self' → logprob: -3.5580127239227295
    3. ' a' → logprob: -4.18301248550415
    4. 'the' → logprob: -5.18301248550415
    5. ' negative' → logprob: -5.80801248550415
    6. 'self' → logprob: -6.05801248550415
    7. ' base' → logprob: -7.18301248550415
    8. ' ' → logprob: -8.183012962341309
    9. 'negative' → logprob: -8.433012962341309
    10. '-negative' → logprob: -9.183012962341309

Token 137: ' negative' (ID: 12626)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6453424096107483
    2. 'negative' → logprob: -1.7703423500061035
    3. ' self' → logprob: -2.0203423500061035
    4. ' negative' → logprob: -2.2703423500061035
    5. 'neg' → logprob: -3.5203423500061035
    6. '-negative' → logprob: -4.0203423500061035
    7. '_negative' → logprob: -5.1453423500061035
    8. 'Negative' → logprob: -5.8953423500061035
    9. 'str' → logprob: -6.0203423500061035
    10. '-neg' → logprob: -6.2703423500061035

Token 138: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.6382449269294739
    2. 'base' → logprob: -1.013244867324829
    3. '_base' → logprob: -2.513244867324829
    4. '-base' → logprob: -4.013245105743408
    5. '<|end|>' → logprob: -5.013245105743408
    6. 'Base' → logprob: -6.763245105743408
    7. ' ' → logprob: -7.013245105743408
    8. 'self' → logprob: -7.888245105743408
    9. ' self' → logprob: -8.76324462890625
    10. ' Base' → logprob: -9.88824462890625

Token 139: ' numeral' (ID: 191907)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6641141772270203
    2. '        ' → logprob: -1.414114236831665
    3. ' system' → logprob: -3.414114236831665
    4. ',' → logprob: -3.539114236831665
    5. ' ' → logprob: -3.664114236831665
    6. '.' → logprob: -3.914114236831665
    7. ' self' → logprob: -4.039113998413086
    8. '```' → logprob: -4.039113998413086
    9. '    ' → logprob: -4.539113998413086
    10. '<|end|>' → logprob: -4.539113998413086

Token 140: ' system' (ID: 2420)
  Prédit: ' system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' system' → logprob: -0.027950558811426163
    2. 'system' → logprob: -3.6529505252838135
    3. ' ' → logprob: -6.902950763702393
    4. '_system' → logprob: -9.027950286865234
    5. '       ' → logprob: -9.527950286865234
    6. '-system' → logprob: -9.902950286865234
    7. '   ' → logprob: -10.027950286865234
    8. 'System' → logprob: -10.152950286865234
    9. '  ' → logprob: -10.152950286865234
    10. ' base' → logprob: -10.402950286865234

Token 141: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03774845972657204
    2. ':' → logprob: -3.5377485752105713
    3. ',' → logprob: -5.287748336791992
    4. '.' → logprob: -6.662748336791992
    5. '   ' → logprob: -7.662748336791992
    6. '        
' → logprob: -8.787748336791992
    7. '    ' → logprob: -9.037748336791992
    8. '      ' → logprob: -9.162748336791992
    9. ' :' → logprob: -9.287748336791992
    10. ' if' → logprob: -9.412748336791992

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022686126176267862
    2. '        
' → logprob: -6.3772687911987305
    3. '\n' → logprob: -8.75226879119873
    4. '   ' → logprob: -9.25226879119873
    5. 'n' → logprob: -9.50226879119873
    6. '    
' → logprob: -10.25226879119873
    7. '"""' → logprob: -10.75226879119873
    8. ' 
' → logprob: -11.00226879119873
    9. '       
' → logprob: -11.12726879119873
    10. '    ' → logprob: -11.12726879119873

Token 143: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009518777951598167
    2. ' if' → logprob: -5.009518623352051
    3. '        
' → logprob: -6.759518623352051
    4. '        ' → logprob: -7.759518623352051
    5. 'if' → logprob: -7.759518623352051
    6. '
' → logprob: -8.50951862335205
    7. '```' → logprob: -9.00951862335205
    8. 'n' → logprob: -9.13451862335205
    9. ' 
' → logprob: -9.75951862335205
    10. '      ' → logprob: -9.88451862335205

Token 144: ' this' (ID: 495)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.8570404648780823
    2. 'self' → logprob: -0.9820404648780823
    3. ' num' → logprob: -2.6070404052734375
    4. ' self' → logprob: -3.6070404052734375
    5. '0' → logprob: -4.1070404052734375
    6. 'def' → logprob: -4.2320404052734375
    7. '       ' → logprob: -4.3570404052734375
    8. '
' → logprob: -4.4820404052734375
    9. ')' → logprob: -4.6070404052734375
    10. 'n' → logprob: -4.8570404052734375

Token 145: ' task' (ID: 5296)
  Prédit: ' system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' system' → logprob: -1.3951679468154907
    2. ' code' → logprob: -1.5201679468154907
    3. ' implementation' → logprob: -1.8951679468154907
    4. 'def' → logprob: -2.645167827606201
    5. ')' → logprob: -3.020167827606201
    6. ' def' → logprob: -3.145167827606201
    7. ' method' → logprob: -3.270167827606201
    8. ':' → logprob: -3.520167827606201
    9. ' base' → logprob: -3.770167827606201
    10. ',' → logprob: -3.895167827606201

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20834141969680786
    2. ':' → logprob: -2.333341360092163
    3. '       ' → logprob: -2.458341360092163
    4. ' ,' → logprob: -5.958341598510742
    5. ' :' → logprob: -6.833341598510742
    6. ' if' → logprob: -7.458341598510742
    7. '   ' → logprob: -8.208341598510742
    8. '        ' → logprob: -8.958341598510742
    9. ' ' → logprob: -9.208341598510742
    10. ' code' → logprob: -9.208341598510742

Token 147: ' base' (ID: 3611)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18166778981685638
    2. ' if' → logprob: -2.1816678047180176
    3. ' result' → logprob: -3.6816678047180176
    4. ' n' → logprob: -4.556667804718018
    5. 'result' → logprob: -4.931667804718018
    6. '        ' → logprob: -6.056667804718018
    7. ' res' → logprob: -6.681667804718018
    8. ' s' → logprob: -6.681667804718018
    9. 'n' → logprob: -6.806667804718018
    10. 'if' → logprob: -6.931667804718018

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16510891914367676
    2. '=' → logprob: -1.9151089191436768
    3. '=self' → logprob: -6.665108680725098
    4. '=-' → logprob: -6.915108680725098
    5. '   ' → logprob: -7.415108680725098
    6. ' is' → logprob: -8.290108680725098
    7. 'def' → logprob: -8.540108680725098
    8. '       ' → logprob: -8.665108680725098
    9. 'self' → logprob: -8.790108680725098
    10. '_base' → logprob: -9.165108680725098

Token 149: ' -' (ID: 533)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.448025107383728
    2. 'self' → logprob: -1.573025107383728
    3. '-' → logprob: -2.5730252265930176
    4. ' -' → logprob: -2.5730252265930176
    5. '-self' → logprob: -7.573025226593018
    6. ' ' → logprob: -7.948025226593018
    7. '```' → logprob: -10.88552474975586
    8. '
' → logprob: -10.94802474975586
    9. '  ' → logprob: -11.01052474975586
    10. '2' → logprob: -11.13552474975586

Token 150: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.162282367469743e-05
    2. '10' → logprob: -9.750091552734375
    3. ' ' → logprob: -11.625091552734375
    4. '```' → logprob: -11.750091552734375
    5. 'self' → logprob: -12.625091552734375
    6. '1' → logprob: -12.625091552734375
    7. '

' → logprob: -13.000091552734375
    8. '3' → logprob: -13.500091552734375
    9. 'int' → logprob: -13.500091552734375
    10. 'len' → logprob: -14.125091552734375

Token 151: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021213777363300323
    2. '
' → logprob: -4.021214008331299
    3. '        
' → logprob: -6.021214008331299
    4. ')' → logprob: -9.02121353149414
    5. ',' → logprob: -9.64621353149414
    6. '    
' → logprob: -9.77121353149414
    7. ':
' → logprob: -9.89621353149414
    8. ':' → logprob: -10.27121353149414
    9. '      ' → logprob: -10.39621353149414
    10. '   ' → logprob: -10.39621353149414

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007872331188991666
    2. '
' → logprob: -7.500787258148193
    3. '        
' → logprob: -8.875786781311035
    4. '   ' → logprob: -10.875786781311035
    5. '    
' → logprob: -11.750786781311035
    6. ')' → logprob: -11.875786781311035
    7. '    ' → logprob: -12.000786781311035
    8. '      ' → logprob: -12.000786781311035
    9. ' if' → logprob: -12.000786781311035
    10. ' ' → logprob: -12.125786781311035

Token 153: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010392199270427227
    2. ' if' → logprob: -4.635392189025879
    3. 'if' → logprob: -8.135392189025879
    4. 'n' → logprob: -9.010392189025879
    5. '      ' → logprob: -10.135392189025879
    6. ' digits' → logprob: -10.135392189025879
    7. '   ' → logprob: -10.385392189025879
    8. '```' → logprob: -10.885392189025879
    9. '    ' → logprob: -11.385392189025879
    10. '        
' → logprob: -11.510392189025879

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017568140756338835
    2. 'if' → logprob: -6.50175666809082
    3. ' if' → logprob: -9.25175666809082
    4. 'n' → logprob: -9.87675666809082
    5. 'num' → logprob: -10.50175666809082
    6. '   ' → logprob: -10.50175666809082
    7. 'digits' → logprob: -11.12675666809082
    8. 'result' → logprob: -11.62675666809082
    9. '      ' → logprob: -12.00175666809082
    10. 's' → logprob: -12.00175666809082

Token 155: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002771593863144517
    2. ' if' → logprob: -6.002771377563477
    3. '       ' → logprob: -8.127771377563477
    4. 'num' → logprob: -15.252771377563477
    5. 'base' → logprob: -15.877771377563477
    6. '```' → logprob: -16.127771377563477
    7. 'n' → logprob: -16.377771377563477
    8. '	if' → logprob: -16.752771377563477
    9. 'result' → logprob: -17.002771377563477
    10. 'digits' → logprob: -17.502771377563477

Token 156: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.12692862749099731
    2. 'num' → logprob: -2.1269285678863525
    3. '	num' → logprob: -15.501928329467773
    4. '0' → logprob: -15.626928329467773
    5. 'n' → logprob: -15.876928329467773
    6. ' ' → logprob: -16.751928329467773
    7. '=num' → logprob: -17.251928329467773
    8. '<num' → logprob: -17.501928329467773
    9. '(num' → logprob: -17.751928329467773
    10. '   ' → logprob: -17.751928329467773

Token 157: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.009761752560734749
    2. '==' → logprob: -4.634761810302734
    3. '=' → logprob: -12.884761810302734
    4. ' =' → logprob: -13.009761810302734
    5. ' ' → logprob: -14.384761810302734
    6. '0' → logprob: -15.384761810302734
    7. ')==' → logprob: -16.634761810302734
    8. ']==' → logprob: -16.759761810302734
    9. ' ===' → logprob: -17.884761810302734
    10. ' ' → logprob: -18.134761810302734

Token 158: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011047814972698689
    2. '0' → logprob: -4.511047840118408
    3. '```' → logprob: -18.38604736328125
    4. ' ' → logprob: -19.26104736328125
    5. '  ' → logprob: -19.38604736328125
    6. '<|end|>' → logprob: -19.63604736328125
    7. '   ' → logprob: -19.94854736328125
    8. 'o' → logprob: -20.38604736328125
    9. '۰' → logprob: -20.57354736328125
    10. ')' → logprob: -20.82354736328125

Token 159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '۰' → logprob: -19.12603187561035
    4. '```' → logprob: -19.25103187561035
    5. '   ' → logprob: -19.37603187561035
    6. '00' → logprob: -20.12603187561035
    7. '  ' → logprob: -20.50103187561035
    8. ' ' → logprob: -20.93853187561035
    9. '000' → logprob: -21.06353187561035
    10. '０' → logprob: -21.12603187561035

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012850773520767689
    2. ':
' → logprob: -4.387850761413574
    3. ':return' → logprob: -8.012850761413574
    4. ' :' → logprob: -12.137850761413574
    5. '       ' → logprob: -13.637850761413574
    6. '           ' → logprob: -14.137850761413574
    7. ')' → logprob: -14.387850761413574
    8. ' :
' → logprob: -14.512850761413574
    9. '   ' → logprob: -15.012850761413574
    10. ':
' → logprob: -15.512850761413574

Token 161: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011262849904596806
    2. ' return' → logprob: -5.261262893676758
    3. '0' → logprob: -5.511262893676758
    4. 'return' → logprob: -6.636262893676758
    5. ' ' → logprob: -8.386262893676758
    6. '            
' → logprob: -9.136262893676758
    7. '
' → logprob: -9.386262893676758
    8. ':return' → logprob: -9.511262893676758
    9. '       ' → logprob: -10.636262893676758
    10. '"' → logprob: -10.886262893676758

Token 162: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4414290487766266
    2. ' return' → logprob: -1.3164290189743042
    3. '"' → logprob: -2.4414291381835938
    4. ''' → logprob: -6.566429138183594
    5. ' "' → logprob: -8.941429138183594
    6. ':return' → logprob: -9.691429138183594
    7. '       ' → logprob: -10.066429138183594
    8. '           ' → logprob: -10.566429138183594
    9. ' '' → logprob: -10.816429138183594
    10. '	return' → logprob: -11.191429138183594

Token 163: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.058799587190151215
    2. ''' → logprob: -3.3087995052337646
    3. ' "' → logprob: -3.9337995052337646
    4. ' '' → logprob: -6.933799743652344
    5. '0' → logprob: -14.933799743652344
    6. ' ' → logprob: -16.183799743652344
    7. ' ' → logprob: -16.433799743652344
    8. '`' → logprob: -16.933799743652344
    9. '""' → logprob: -17.808799743652344
    10. '"A' → logprob: -18.433799743652344

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. ''' → logprob: -17.75
    4. '۰' → logprob: -17.75
    5. '０' → logprob: -18.0
    6. '٠' → logprob: -20.25
    7. '"' → logprob: -20.75
    8. '012' → logprob: -21.0
    9. '০' → logprob: -21.125
    10. '```' → logprob: -21.4375

Token 165: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.576812207698822
    2. ''
' → logprob: -0.826812207698822
    3. ''

' → logprob: -7.076812267303467
    4. ''
' → logprob: -10.576811790466309
    5. '')' → logprob: -14.076811790466309
    6. '"' → logprob: -14.451811790466309
    7. ''


' → logprob: -14.576811790466309
    8. ''''
' → logprob: -15.826811790466309
    9. ''"
' → logprob: -15.826811790466309
    10. '"
' → logprob: -16.451812744140625

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003184233792126179
    2. '        
' → logprob: -9.37531852722168
    3. 'n' → logprob: -9.62531852722168
    4. '      ' → logprob: -9.75031852722168
    5. '
' → logprob: -10.25031852722168
    6. '   ' → logprob: -10.37531852722168
    7. '```' → logprob: -12.12531852722168
    8. '       
' → logprob: -12.37531852722168
    9. 'num' → logprob: -12.50031852722168
    10. '    ' → logprob: -12.62531852722168

Token 167: ' digits' (ID: 37806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5728910565376282
    2. 'result' → logprob: -1.3228909969329834
    3. 'digits' (adapté à ' digits') → logprob: -2.3228909969329834
    4. ' digits' → logprob: -3.3228909969329834
    5. ' result' → logprob: -3.9478909969329834
    6. 'res' → logprob: -4.1978912353515625
    7. '      ' → logprob: -8.322891235351562
    8. '   ' → logprob: -8.447891235351562
    9. '        
' → logprob: -8.572891235351562
    10. ' res' → logprob: -8.822891235351562

Token 168: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026355454698204994
    2. '=' → logprob: -3.651355504989624
    3. '=[]' → logprob: -10.526355743408203
    4. ':' → logprob: -11.026355743408203
    5. ' ' → logprob: -11.901355743408203
    6. ',' → logprob: -12.526355743408203
    7. 's' → logprob: -15.151355743408203
    8. '   ' → logprob: -15.526355743408203
    9. ' :' → logprob: -15.526355743408203
    10. '=[]
' → logprob: -15.901355743408203

Token 169: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.7337355613708496
    2. ' []' → logprob: -1.3587355613708496
    3. 'List' → logprob: -1.6087355613708496
    4. '[]' → logprob: -2.8587355613708496
    5. '[List' → logprob: -5.85873556137085
    6. ' list' → logprob: -6.73373556137085
    7. '=[]' → logprob: -8.233736038208008
    8. '   ' → logprob: -8.858736038208008
    9. '_list' → logprob: -8.858736038208008
    10. 'list' → logprob: -8.858736038208008

Token 170: '[str' (ID: 33439)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0941186398267746
    2. '[str' → logprob: -2.469118595123291
    3. ' =' → logprob: -5.344118595123291
    4. '=' → logprob: -8.46911907196045
    5. '=int' → logprob: -9.09411907196045
    6. '[' → logprob: -10.71911907196045
    7. '(int' → logprob: -11.46911907196045
    8. 'int' → logprob: -11.96911907196045
    9. '=[]' → logprob: -12.46911907196045
    10. '=str' → logprob: -12.71911907196045

Token 171: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012642296496778727
    2. ' ]' → logprob: -9.625126838684082
    3. '']' → logprob: -10.375126838684082
    4. ']=' → logprob: -10.750126838684082
    5. '`]' → logprob: -13.125126838684082
    6. '=' → logprob: -13.375126838684082
    7. ')]' → logprob: -13.625126838684082
    8. '"]' → logprob: -14.000126838684082
    9. ')' → logprob: -14.625126838684082
    10. '()]' → logprob: -15.500126838684082

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16026678681373596
    2. '=' → logprob: -1.9102667570114136
    3. '=[]' → logprob: -10.660266876220703
    4. ' ' → logprob: -11.660266876220703
    5. '       ' → logprob: -12.285266876220703
    6. '[]' → logprob: -13.035266876220703
    7. '        ' → logprob: -13.535266876220703
    8. ')' → logprob: -14.160266876220703
    9. ']' → logprob: -14.410266876220703
    10. '=[]
' → logprob: -14.910266876220703

Token 173: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.975612187583465e-05
    2. '[]
' → logprob: -10.750029563903809
    3. ' []' → logprob: -11.750029563903809
    4. '[]

' → logprob: -15.875029563903809
    5. '[]}' → logprob: -16.000030517578125
    6. '[' → logprob: -16.875030517578125
    7. '[]>' → logprob: -17.250030517578125
    8. '   ' → logprob: -17.625030517578125
    9. '[]"' → logprob: -18.250030517578125
    10. '[])' → logprob: -18.500030517578125

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026001494843512774
    2. 'n' → logprob: -6.377600193023682
    3. ' while' → logprob: -8.252599716186523
    4. ' n' → logprob: -8.377599716186523
    5. 'num' → logprob: -9.002599716186523
    6. 'while' → logprob: -9.252599716186523
    7. ' num' → logprob: -9.377599716186523
    8. '      ' → logprob: -9.877599716186523
    9. '        
' → logprob: -11.127599716186523
    10. '   ' → logprob: -11.127599716186523

Token 175: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.06340933591127396
    2. '       ' → logprob: -2.8134093284606934
    3. ' n' → logprob: -7.313409328460693
    4. 'while' → logprob: -7.563409328460693
    5. 'num' → logprob: -8.813409805297852
    6. '           ' → logprob: -10.438409805297852
    7. '   ' → logprob: -11.188409805297852
    8. 'value' → logprob: -11.313409805297852
    9. 'current' → logprob: -11.688409805297852
    10. 'number' → logprob: -11.688409805297852

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2280104011297226
    2. 'um' → logprob: -1.8530104160308838
    3. '=' → logprob: -3.228010416030884
    4. '        ' → logprob: -5.603010177612305
    5. '       ' → logprob: -5.853010177612305
    6. 'umber' → logprob: -7.353010177612305
    7. '   ' → logprob: -9.228010177612305
    8. '=num' → logprob: -9.853010177612305
    9. ' ' → logprob: -9.978010177612305
    10. '    ' → logprob: -10.228010177612305

Token 177: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.38688987493515015
    2. ' num' → logprob: -1.136889934539795
    3. '       ' → logprob: -12.511889457702637
    4. '	num' → logprob: -12.511889457702637
    5. 'abs' → logprob: -12.761889457702637
    6. ' abs' → logprob: -12.761889457702637
    7. '   ' → logprob: -13.386889457702637
    8. '    ' → logprob: -13.386889457702637
    9. '        ' → logprob: -13.636889457702637
    10. '=num' → logprob: -15.136889457702637

Token 178: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10761130601167679
    2. '        ' → logprob: -2.6076114177703857
    3. 'while' → logprob: -4.482611179351807
    4. ' while' → logprob: -4.857611179351807
    5. '        
' → logprob: -5.232611179351807
    6. '<|end|>' → logprob: -6.232611179351807
    7. '
' → logprob: -7.357611179351807
    8. ' ' → logprob: -8.107611656188965
    9. '    ' → logprob: -8.607611656188965
    10. ' 
' → logprob: -8.732611656188965

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002312145894393325
    2. ' while' → logprob: -6.127312183380127
    3. 'while' → logprob: -9.502311706542969
    4. '        
' → logprob: -10.502311706542969
    5. '<|end|>' → logprob: -12.002311706542969
    6. '        ' → logprob: -12.127311706542969
    7. '	while' → logprob: -12.377311706542969
    8. '      ' → logprob: -12.877311706542969
    9. '
' → logprob: -13.377311706542969
    10. ' ' → logprob: -13.627311706542969

Token 180: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44133085012435913
    2. ' while' → logprob: -1.191330909729004
    3. 'while' (adapté à ' while') → logprob: -2.941330909729004
    4. '        
' → logprob: -9.191330909729004
    5. '	while' → logprob: -10.191330909729004
    6. '
' → logprob: -10.941330909729004
    7. '```' → logprob: -11.816330909729004
    8. '      ' → logprob: -11.941330909729004
    9. '        ' → logprob: -11.941330909729004
    10. '    ' → logprob: -12.066330909729004

Token 181: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06196914613246918
    2. 'n' → logprob: -2.811969041824341
    3. '	n' → logprob: -14.436968803405762
    4. ' True' → logprob: -14.936968803405762
    5. '_n' → logprob: -15.686968803405762
    6. 'True' → logprob: -16.061969757080078
    7. '(n' → logprob: -16.061969757080078
    8. '
' → logprob: -16.561969757080078
    9. ')n' → logprob: -16.561969757080078
    10. '    ' → logprob: -16.936969757080078

Token 182: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.009773085825145245
    2. ' !=' → logprob: -4.634773254394531
    3. ')!=' → logprob: -11.384773254394531
    4. '()!=' → logprob: -13.384773254394531
    5. ']!=' → logprob: -13.759773254394531
    6. '!=(' → logprob: -14.009773254394531
    7. '!==' → logprob: -14.384773254394531
    8. '!="' → logprob: -14.384773254394531
    9. '!='' → logprob: -15.009773254394531
    10. '!' → logprob: -15.134773254394531

Token 183: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01603436842560768
    2. ' ' → logprob: -4.1410346031188965
    3. '   ' → logprob: -17.141035079956055
    4. '  ' → logprob: -17.516035079956055
    5. ')' → logprob: -17.891035079956055
    6. '۰' → logprob: -18.266035079956055
    7. '<|end|>' → logprob: -18.266035079956055
    8. '```' → logprob: -18.578535079956055
    9. '
' → logprob: -18.766035079956055
    10. ' ' → logprob: -19.016035079956055

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043102685594931245
    2. ' ' → logprob: -7.750431060791016
    3. '۰' → logprob: -16.875431060791016
    4. '  ' → logprob: -17.125431060791016
    5. '   ' → logprob: -17.125431060791016
    6. ')' → logprob: -17.375431060791016
    7. '00' → logprob: -17.625431060791016
    8. '<|end|>' → logprob: -17.812931060791016
    9. '０' → logprob: -18.500431060791016
    10. '
' → logprob: -18.500431060791016

Token 185: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3138369917869568
    2. ':
' → logprob: -1.3138370513916016
    3. '):
' → logprob: -8.438837051391602
    4. '       ' → logprob: -8.688837051391602
    5. '<|end|>' → logprob: -10.188837051391602
    6. '           ' → logprob: -10.313837051391602
    7. ',' → logprob: -10.563837051391602
    8. '):' → logprob: -10.938837051391602
    9. ':

' → logprob: -10.938837051391602
    10. ':
' → logprob: -11.063837051391602

Token 186: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006285638664849102
    2. '            ' → logprob: -8.250628471374512
    3. ' remainder' → logprob: -8.875628471374512
    4. '          ' → logprob: -9.750628471374512
    5. '            
' → logprob: -9.750628471374512
    6. 'n' → logprob: -10.250628471374512
    7. '```' → logprob: -10.625628471374512
    8. '
' → logprob: -11.500628471374512
    9. '        ' → logprob: -11.750628471374512
    10. ',' → logprob: -11.875628471374512

Token 187: ' n' (ID: 297)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.07711686193943024
    2. '           ' → logprob: -3.2021169662475586
    3. ' n' → logprob: -4.827116966247559
    4. 'n' (adapté à ' n') → logprob: -4.952116966247559
    5. ' r' → logprob: -5.077116966247559
    6. '            ' → logprob: -5.202116966247559
    7. 're' → logprob: -5.327116966247559
    8. 'r' → logprob: -6.577116966247559
    9. 'rem' → logprob: -8.577116966247559
    10. '            
' → logprob: -9.577116966247559

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013217058964073658
    2. ' ,' → logprob: -4.388216972351074
    3. '%' → logprob: -8.013216972351074
    4. '=' → logprob: -9.388216972351074
    5. '%,' → logprob: -9.513216972351074
    6. '           ' → logprob: -10.638216972351074
    7. ' %' → logprob: -10.763216972351074
    8. '_,' → logprob: -10.888216972351074
    9. 'mod' → logprob: -11.138216972351074
    10. ' =' → logprob: -11.138216972351074

Token 189: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.025191588327288628
    2. ' remainder' → logprob: -4.025191783905029
    3. 'rem' → logprob: -5.025191783905029
    4. 'r' → logprob: -7.775191783905029
    5. 'mod' → logprob: -11.150191307067871
    6. ' rem' → logprob: -12.775191307067871
    7. '	re' → logprob: -13.025191307067871
    8. 'rema' → logprob: -13.275191307067871
    9. '   ' → logprob: -13.525191307067871
    10. 'digit' → logprob: -13.525191307067871

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804447129368782
    2. '=' → logprob: -3.2880444526672363
    3. '<|end|>' → logprob: -13.163044929504395
    4. '<|end|>' → logprob: -15.163044929504395
    5. ' ' → logprob: -15.538044929504395
    6. ')' → logprob: -15.663044929504395
    7. 's' → logprob: -16.038043975830078
    8. ' =
' → logprob: -16.663043975830078
    9. ')=' → logprob: -16.913043975830078
    10. 'equ' → logprob: -17.538043975830078

Token 191: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.2015020251274109
    2. 'div' → logprob: -1.7015020847320557
    3. '	div' → logprob: -9.701501846313477
    4. ' ' → logprob: -11.451501846313477
    5. '(div' → logprob: -12.326501846313477
    6. '<div' → logprob: -12.576501846313477
    7. '   ' → logprob: -12.826501846313477
    8. '-div' → logprob: -12.951501846313477
    9. '  ' → logprob: -13.951501846313477
    10. '    ' → logprob: -14.451501846313477

Token 192: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.088346359931165e-07
    2. 'n' → logprob: -14.250000953674316
    3. ' mod' → logprob: -17.125
    4. '(n' → logprob: -17.75
    5. 'div' → logprob: -18.5
    6. 'abs' → logprob: -18.75
    7. 'm' → logprob: -19.125
    8. 'mode' → logprob: -19.75
    9. '-mod' → logprob: -19.875
    10. 'ide' → logprob: -20.0

Token 193: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09704002737998962
    2. 'n' → logprob: -2.4720399379730225
    3. ' n' → logprob: -4.847040176391602
    4. '(' → logprob: -9.722040176391602
    5. ' (' → logprob: -10.097040176391602
    6. '<|end|>' → logprob: -10.097040176391602
    7. '(abs' → logprob: -11.347040176391602
    8. 'abs' → logprob: -11.347040176391602
    9. '	n' → logprob: -11.847040176391602
    10. '        ' → logprob: -12.097040176391602

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6144852638244629
    2. 'abs' → logprob: -1.239485263824463
    3. 'n' → logprob: -2.614485263824463
    4. '-' → logprob: -3.989485263824463
    5. ' by' → logprob: -3.989485263824463
    6. ' n' → logprob: -4.364485263824463
    7. 'by' → logprob: -4.614485263824463
    8. ' abs' → logprob: -4.739485263824463
    9. ' ,' → logprob: -4.989485263824463
    10. ',n' → logprob: -5.114485263824463

Token 195: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2797466814517975
    2. 'abs' → logprob: -2.0297467708587646
    3. '-self' → logprob: -2.9047467708587646
    4. ' self' → logprob: -3.1547467708587646
    5. '-' → logprob: -4.4047465324401855
    6. ' abs' → logprob: -6.0297465324401855
    7. '       ' → logprob: -8.529747009277344
    8. '10' → logprob: -8.654747009277344
    9. ' -' → logprob: -9.154747009277344
    10. '           ' → logprob: -10.154747009277344

Token 196: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.0013717879774048924
    2. 'base' → logprob: -6.62637186050415
    3. ' base' → logprob: -10.876371383666992
    4. '-base' → logprob: -11.251371383666992
    5. '.' → logprob: -12.001371383666992
    6. '.abs' → logprob: -13.001371383666992
    7. '10' → logprob: -13.626371383666992
    8. '-' → logprob: -13.751371383666992
    9. 'abs' → logprob: -14.251371383666992
    10. '	base' → logprob: -14.501371383666992

Token 197: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3143271505832672
    2. ')
' → logprob: -1.3143271207809448
    3. ' )' → logprob: -7.564327239990234
    4. ' )
' → logprob: -7.689327239990234
    5. ')

' → logprob: -10.064327239990234
    6. '       ' → logprob: -11.064327239990234
    7. '           ' → logprob: -12.314327239990234
    8. ')
' → logprob: -12.439327239990234
    9. 'def' → logprob: -13.189327239990234
    10. 'n' → logprob: -13.189327239990234

Token 198: '           ' (ID: 352)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.5134548544883728
    2. '           ' → logprob: -1.1384549140930176
    3. '            
' → logprob: -3.8884549140930176
    4. '0' → logprob: -4.513454914093018
    5. '10' → logprob: -4.763454914093018
    6. 'n' → logprob: -5.013454914093018
    7. 're' → logprob: -5.138454914093018
    8. '            ' → logprob: -5.138454914093018
    9. ' ' → logprob: -5.638454914093018
    10. ')' → logprob: -5.888454914093018

Token 199: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07364846765995026
    2. 'if' → logprob: -2.823648452758789
    3. '           ' → logprob: -5.073648452758789
    4. ' remainder' → logprob: -5.448648452758789
    5. '            ' → logprob: -7.073648452758789
    6. '            
' → logprob: -9.573648452758789
    7. ' 
' → logprob: -10.573648452758789
    8. ' ' → logprob: -10.698648452758789
    9. '
' → logprob: -10.823648452758789
    10. ' digits' → logprob: -10.948648452758789

Token 200: ' Adjust' (ID: 43076)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12985201179981232
    2. ' if' → logprob: -2.129852056503296
    3. '           ' → logprob: -5.879851818084717
    4. ' remainder' → logprob: -9.879852294921875
    5. 're' → logprob: -10.504852294921875
    6. 'If' → logprob: -11.254852294921875
    7. '#' → logprob: -11.379852294921875
    8. '       ' → logprob: -12.254852294921875
    9. '            ' → logprob: -12.379852294921875
    10. '    ' → logprob: -12.879852294921875

Token 201: ' remainder' (ID: 47056)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1823180913925171
    2. 'if' → logprob: -1.807318091392517
    3. '           ' → logprob: -6.057318210601807
    4. ' remainder' → logprob: -8.682317733764648
    5. '            ' → logprob: -10.307317733764648
    6. 'n' → logprob: -12.057317733764648
    7. '<|end|>' → logprob: -12.682317733764648
    8. '   ' → logprob: -12.932317733764648
    9. '<|end|>' → logprob: -13.057317733764648
    10. ' ' → logprob: -13.182317733764648

Token 202: ' and' (ID: 326)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09752263873815536
    2. 'if' → logprob: -2.847522735595703
    3. '           ' → logprob: -3.472522735595703
    4. '            ' → logprob: -6.222522735595703
    5. ' and' → logprob: -6.847522735595703
    6. ',' → logprob: -7.597522735595703
    7. ' +=' → logprob: -8.972522735595703
    8. 'and' → logprob: -9.597522735595703
    9. '<|end|>' → logprob: -10.597522735595703
    10. '+=' → logprob: -10.722522735595703

Token 203: ' quotient' (ID: 169302)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011854402720928192
    2. ' n' → logprob: -4.51185417175293
    3. 'if' → logprob: -7.51185417175293
    4. ' if' → logprob: -8.38685417175293
    5. '           ' → logprob: -10.76185417175293
    6. 'div' → logprob: -12.26185417175293
    7. ' ' → logprob: -13.26185417175293
    8. '```' → logprob: -14.13685417175293
    9. '    ' → logprob: -14.38685417175293
    10. '   ' → logprob: -14.63685417175293

Token 204: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011628547683358192
    2. ' if' → logprob: -4.5116286277771
    3. '            ' → logprob: -8.636628150939941
    4. '<|end|>' → logprob: -8.636628150939941
    5. ' to' → logprob: -9.886628150939941
    6. ',' → logprob: -9.886628150939941
    7. ' ' → logprob: -10.011628150939941
    8. '            
' → logprob: -11.011628150939941
    9. 'if' → logprob: -11.261628150939941
    10. '          ' → logprob: -11.511628150939941

Token 205: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.05490056052803993
    2. ' remainder' → logprob: -2.929900646209717
    3. '   ' → logprob: -11.804900169372559
    4. '	re' → logprob: -12.804900169372559
    5. ' ' → logprob: -13.304900169372559
    6. 'rem' → logprob: -13.679900169372559
    7. '           ' → logprob: -13.804900169372559
    8. 'rest' → logprob: -14.179900169372559
    9. 'rema' → logprob: -14.179900169372559
    10. '  ' → logprob: -14.429900169372559

Token 206: ' is' (ID: 382)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3133655786514282
    2. '<' → logprob: -1.3133655786514282
    3. '<|end|>' → logprob: -9.938365936279297
    4. ' ' → logprob: -10.813365936279297
    5. '>' → logprob: -11.938365936279297
    6. '[' → logprob: -12.063365936279297
    7. ':' → logprob: -12.688365936279297
    8. ' ' → logprob: -13.063365936279297
    9. 'is' → logprob: -13.438365936279297
    10. 'and' → logprob: -13.563365936279297

Token 207: ' negative' (ID: 12626)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.005400122608989477
    2. 'negative' → logprob: -5.50540018081665
    3. 'less' → logprob: -7.00540018081665
    4. ' <' → logprob: -8.005399703979492
    5. ' negative' → logprob: -9.880399703979492
    6. ' less' → logprob: -11.130399703979492
    7. '0' → logprob: -12.130399703979492
    8. '()<' → logprob: -12.880399703979492
    9. '<|end|>' → logprob: -13.630399703979492
    10. '```' → logprob: -14.005399703979492

Token 208: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03160113841295242
    2. '
' → logprob: -3.9066011905670166
    3. ' if' → logprob: -5.0316009521484375
    4. '            ' → logprob: -6.4066009521484375
    5. '            
' → logprob: -7.0316009521484375
    6. 'if' → logprob: -7.4066009521484375
    7. '<|end|>' → logprob: -7.6566009521484375
    8. ':' → logprob: -8.656600952148438
    9. ',' → logprob: -9.281600952148438
    10. ' 
' → logprob: -9.281600952148438

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009256341145373881
    2. ' if' → logprob: -7.250925540924072
    3. ',' → logprob: -9.62592601776123
    4. '            ' → logprob: -9.87592601776123
    5. '<|end|>' → logprob: -10.62592601776123
    6. ' and' → logprob: -10.75092601776123
    7. '            
' → logprob: -11.00092601776123
    8. 'if' → logprob: -11.25092601776123
    9. '          ' → logprob: -12.25092601776123
    10. '<|end|>' → logprob: -12.87592601776123

Token 210: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023312563076615334
    2. ' if' → logprob: -4.023312568664551
    3. 'if' (adapté à ' if') → logprob: -5.273312568664551
    4. '            ' → logprob: -11.14831256866455
    5. '    ' → logprob: -12.89831256866455
    6. '          ' → logprob: -13.64831256866455
    7. '   ' → logprob: -14.14831256866455
    8. '```' → logprob: -14.14831256866455
    9. '<|end|>' → logprob: -14.27331256866455
    10. '       ' → logprob: -14.39831256866455

Token 211: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.1002422571182251
    2. ' remainder' → logprob: -2.3502421379089355
    3. 'rem' → logprob: -11.600242614746094
    4. ' re' → logprob: -11.725242614746094
    5. '	re' → logprob: -12.475242614746094
    6. ' ' → logprob: -12.850242614746094
    7. 'rest' → logprob: -12.975242614746094
    8. '   ' → logprob: -12.975242614746094
    9. 'rema' → logprob: -13.100242614746094
    10. '(re' → logprob: -13.600242614746094

Token 212: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07890774309635162
    2. ' <' → logprob: -2.5789077281951904
    3. '>' → logprob: -12.20390796661377
    4. '<|end|>' → logprob: -12.57890796661377
    5. ':' → logprob: -13.70390796661377
    6. ' ' → logprob: -13.82890796661377
    7. ')' → logprob: -13.95390796661377
    8. '[' → logprob: -14.45390796661377
    9. '<n' → logprob: -14.45390796661377
    10. '```' → logprob: -14.82890796661377

Token 213: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '۰' → logprob: -17.000085830688477
    4. 'zero' → logprob: -19.125085830688477
    5. '```' → logprob: -19.500085830688477
    6. '０' → logprob: -19.750085830688477
    7. '٠' → logprob: -20.375085830688477
    8. ':' → logprob: -20.500085830688477
    9. ')' → logprob: -20.812585830688477
    10. ' ' → logprob: -20.812585830688477

Token 214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '۰' → logprob: -17.5
    4. '０' → logprob: -19.25
    5. 'zero' → logprob: -19.875
    6. '٠' → logprob: -21.0
    7. '০' → logprob: -21.625
    8. '```' → logprob: -21.75
    9. '00' → logprob: -22.125
    10. '०' → logprob: -22.125

Token 215: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38751402497291565
    2. ':' → logprob: -1.1375139951705933
    3. '           ' → logprob: -7.512514114379883
    4. '):
' → logprob: -10.262514114379883
    5. '               ' → logprob: -10.512514114379883
    6. ',' → logprob: -11.012514114379883
    7. ' and' → logprob: -12.512514114379883
    8. ':
' → logprob: -12.512514114379883
    9. ' :
' → logprob: -12.637514114379883
    10. ':

' → logprob: -12.887514114379883

Token 216: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12166154384613037
    2. '           ' → logprob: -2.24666166305542
    3. 'n' → logprob: -4.87166166305542
    4. ' remainder' → logprob: -7.49666166305542
    5. 're' → logprob: -8.371661186218262
    6. ' n' → logprob: -8.996661186218262
    7. '            ' → logprob: -9.371661186218262
    8. ',' → logprob: -10.746661186218262
    9. '              ' → logprob: -10.996661186218262
    10. '0' → logprob: -11.121661186218262

Token 217: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.5052133798599243
    2. 'n' → logprob: -1.0052133798599243
    3. '               ' → logprob: -4.005213260650635
    4. ' remainder' → logprob: -4.630213260650635
    5. '           ' → logprob: -6.255213260650635
    6. '                   ' → logprob: -7.505213260650635
    7. 'r' → logprob: -9.630213737487793
    8. ' n' → logprob: -9.755213737487793
    9. 'rem' → logprob: -10.380213737487793
    10. 'rest' → logprob: -12.005213737487793

Token 218: ' -=' (ID: 12583)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.17984023690223694
    2. '+=' → logprob: -1.8048402070999146
    3. ' -=' → logprob: -10.054840087890625
    4. ']+=' → logprob: -10.804840087890625
    5. '=' → logprob: -11.554840087890625
    6. '   ' → logprob: -12.054840087890625
    7. '-=' → logprob: -12.679840087890625
    8. '```' → logprob: -12.929840087890625
    9. '           ' → logprob: -13.054840087890625
    10. ',' → logprob: -13.554840087890625

Token 219: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0020125024020671844
    2. ' self' → logprob: -6.252012729644775
    3. '1' → logprob: -9.502012252807617
    4. '   ' → logprob: -12.502012252807617
    5. '(self' → logprob: -13.002012252807617
    6. '0' → logprob: -13.752012252807617
    7. '	self' → logprob: -14.377012252807617
    8. '       ' → logprob: -14.752012252807617
    9. '-self' → logprob: -15.627012252807617
    10. ' ' → logprob: -15.877012252807617

Token 220: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.07902473211288452
    2. 'base' → logprob: -2.5790247917175293
    3. ' base' → logprob: -9.079024314880371
    4. '(base' → logprob: -12.329024314880371
    5. '_base' → logprob: -12.454024314880371
    6. '	base' → logprob: -12.454024314880371
    7. ';base' → logprob: -12.579024314880371
    8. 'Base' → logprob: -13.329024314880371
    9. '-base' → logprob: -13.579024314880371
    10. '.' → logprob: -13.954024314880371

Token 221: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5561573505401611
    2. '               ' → logprob: -0.9311573505401611
    3. '
' → logprob: -3.806157350540161
    4. 'n' → logprob: -5.181157112121582
    5. ',' → logprob: -7.181157112121582
    6. '<|end|>' → logprob: -7.181157112121582
    7. '            
' → logprob: -7.306157112121582
    8. '                   ' → logprob: -7.806157112121582
    9. '       ' → logprob: -7.931157112121582
    10. '                
' → logprob: -8.056157112121582

Token 222: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031203174963593483
    2. '               ' → logprob: -3.781203269958496
    3. 'n' → logprob: -5.031203269958496
    4. ',' → logprob: -7.656203269958496
    5. ' n' → logprob: -8.156203269958496
    6. '            
' → logprob: -8.281203269958496
    7. '
' → logprob: -9.781203269958496
    8. '                   ' → logprob: -9.781203269958496
    9. ' and' → logprob: -9.906203269958496
    10. '       ' → logprob: -9.906203269958496

Token 223: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00012356207298580557
    2. ' n' → logprob: -9.000123977661133
    3. '1' → logprob: -16.750123977661133
    4. '```' → logprob: -17.250123977661133
    5. ',' → logprob: -17.750123977661133
    6. '   ' → logprob: -18.500123977661133
    7. '`' → logprob: -18.500123977661133
    8. '
' → logprob: -18.625123977661133
    9. '_n' → logprob: -18.750123977661133
    10. '	n' → logprob: -18.875123977661133

Token 224: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005261152982711792
    2. ' +=' → logprob: -5.255260944366455
    3. '+' → logprob: -10.630261421203613
    4. ']+=' → logprob: -12.755261421203613
    5. '=' → logprob: -16.130260467529297
    6. '1' → logprob: -16.380260467529297
    7. '+=(' → logprob: -16.755260467529297
    8. '+='' → logprob: -17.755260467529297
    9. '-=' → logprob: -18.005260467529297
    10. '+="' → logprob: -18.005260467529297

Token 225: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -19.375
    4. '<|end|>' → logprob: -19.875
    5. '```' → logprob: -21.625
    6. '  ' → logprob: -23.5
    7. '۱' → logprob: -23.875
    8. '+' → logprob: -23.875
    9. '.' → logprob: -24.125
    10. '    ' → logprob: -24.25

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.25
    3. '<|end|>' → logprob: -16.875
    4. '   ' → logprob: -18.125
    5. '```' → logprob: -19.625
    6. '       ' → logprob: -21.0
    7. '+' → logprob: -22.25
    8. ')' → logprob: -22.25
    9. '<|end|>' → logprob: -22.25
    10. '.' → logprob: -22.375

Token 227: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011427151912357658
    2. '       ' → logprob: -10.000114440917969
    3. '            
' → logprob: -10.375114440917969
    4. ')' → logprob: -11.250114440917969
    5. '
' → logprob: -11.625114440917969
    6. '		' → logprob: -12.875114440917969
    7. '               ' → logprob: -13.375114440917969
    8. '          ' → logprob: -13.625114440917969
    9. ',' → logprob: -13.875114440917969
    10. '<|end|>' → logprob: -13.875114440917969

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002605856629088521
    2. '       ' → logprob: -6.00260591506958
    3. ')' → logprob: -10.502605438232422
    4. 'digits' → logprob: -10.752605438232422
    5. ' digits' → logprob: -11.127605438232422
    6. '            
' → logprob: -11.502605438232422
    7. '   ' → logprob: -11.877605438232422
    8. '	       ' → logprob: -12.127605438232422
    9. '<|end|>' → logprob: -12.127605438232422
    10. '		' → logprob: -12.377605438232422

Token 229: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.7674924731254578
    2. 'digits' (adapté à ' digits') → logprob: -1.1424925327301025
    3. '       ' → logprob: -1.6424925327301025
    4. '           ' → logprob: -3.7674925327301025
    5. '   ' → logprob: -10.267492294311523
    6. '_digits' → logprob: -10.642492294311523
    7. 'digit' → logprob: -11.017492294311523
    8. 'd' → logprob: -11.267492294311523
    9. '      ' → logprob: -11.392492294311523
    10. 'igits' → logprob: -11.642492294311523

Token 230: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00023679454170633107
    2. '.' → logprob: -8.375236511230469
    3. '.insert' → logprob: -12.250236511230469
    4. '.ap' → logprob: -14.750236511230469
    5. '.app' → logprob: -15.000236511230469
    6. ' .' → logprob: -15.125236511230469
    7. ').' → logprob: -15.625236511230469
    8. 'append' → logprob: -15.750236511230469
    9. '].' → logprob: -15.875236511230469
    10. '.push' → logprob: -17.37523651123047

Token 231: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -4.842555426876061e-06
    2. 'str' → logprob: -12.375004768371582
    3. '(' → logprob: -14.375004768371582
    4. '	str' → logprob: -17.8750057220459
    5. '=str' → logprob: -18.2500057220459
    6. '[str' → logprob: -18.2500057220459
    7. ' str' → logprob: -18.7500057220459
    8. '(chr' → logprob: -19.0000057220459
    9. '(
' → logprob: -20.5000057220459
    10. ':str' → logprob: -20.7500057220459

Token 232: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -2.9040898880339228e-05
    2. 're' → logprob: -10.750028610229492
    3. ')' → logprob: -12.375028610229492
    4. '(' → logprob: -13.250028610229492
    5. ')(' → logprob: -14.125028610229492
    6. '(abs' → logprob: -14.750028610229492
    7. '(rem' → logprob: -15.375028610229492
    8. ' (' → logprob: -15.875028610229492
    9. '	re' → logprob: -17.000028610229492
    10. '```' → logprob: -17.625028610229492

Token 233: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -6.682846287731081e-05
    2. 'm' → logprob: -9.875066757202148
    3. 'ma' → logprob: -11.250066757202148
    4. 'main' → logprob: -13.250066757202148
    5. 'mand' → logprob: -14.875066757202148
    6. 'inder' → logprob: -17.00006675720215
    7. 'st' → logprob: -17.12506675720215
    8. 'mind' → logprob: -17.12506675720215
    9. '```' → logprob: -18.00006675720215
    10. '[' → logprob: -18.37506675720215

Token 234: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00101220712531358
    2. ')' → logprob: -7.001012325286865
    3. '))
' → logprob: -9.251011848449707
    4. ' ))' → logprob: -13.126011848449707
    5. ')))' → logprob: -14.126011848449707
    6. '       ' → logprob: -14.251011848449707
    7. '));' → logprob: -14.626011848449707
    8. ')
' → logprob: -15.751011848449707
    9. '           ' → logprob: -16.001012802124023
    10. '),' → logprob: -16.001012802124023

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007810381939634681
    2. '[::-' → logprob: -7.750781059265137
    3. ' return' → logprob: -9.250781059265137
    4. '        
' → logprob: -9.750781059265137
    5. '[' → logprob: -10.250781059265137
    6. '<|end|>' → logprob: -10.375781059265137
    7. '   ' → logprob: -10.500781059265137
    8. ' n' → logprob: -11.250781059265137
    9. 'return' → logprob: -11.375781059265137
    10. 'n' → logprob: -11.500781059265137

Token 236: ' digits' (ID: 37806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6911521553993225
    2. 'return' → logprob: -1.0661520957946777
    3. ' return' → logprob: -2.1911520957946777
    4. 'digits' (adapté à ' digits') → logprob: -3.3161520957946777
    5. '   ' → logprob: -5.691152095794678
    6. ' digits' → logprob: -6.191152095794678
    7. '[::-' → logprob: -7.566152095794678
    8. '        
' → logprob: -8.816152572631836
    9. ')' → logprob: -9.066152572631836
    10. '```' → logprob: -9.566152572631836

Token 237: '.reverse' (ID: 65426)
  Prédit: '.reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.0006794307846575975
    2. '[::-' → logprob: -7.8756794929504395
    3. '.' → logprob: -8.125679016113281
    4. 'reverse' → logprob: -13.250679016113281
    5. ' .' → logprob: -13.750679016113281
    6. '.re' → logprob: -14.875679016113281
    7. '=' → logprob: -16.75067901611328
    8. '.rev' → logprob: -17.00067901611328
    9. ' =' → logprob: -17.25067901611328
    10. '_reverse' → logprob: -17.50067901611328

Token 238: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019295861711725593
    2. '()
' → logprob: -6.251929759979248
    3. '()
' → logprob: -15.00192928314209
    4. '()

' → logprob: -15.12692928314209
    5. '()`' → logprob: -15.37692928314209
    6. '()\' → logprob: -16.126930236816406
    7. '()"' → logprob: -16.876930236816406
    8. ' ()' → logprob: -18.001930236816406
    9. '()>' → logprob: -18.626930236816406
    10. '();' → logprob: -18.751930236816406

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10309799760580063
    2. 'return' → logprob: -2.353097915649414
    3. ' return' → logprob: -5.853097915649414
    4. '   ' → logprob: -12.353097915649414
    5. '	return' → logprob: -12.603097915649414
    6. ':return' → logprob: -13.228097915649414
    7. '
' → logprob: -13.603097915649414
    8. ')' → logprob: -13.728097915649414
    9. '<|end|>' → logprob: -13.853097915649414
    10. '```' → logprob: -14.353097915649414

Token 240: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007682943833060563
    2. ' return' → logprob: -7.250768184661865
    3. '       ' → logprob: -9.750768661499023
    4. '	return' → logprob: -16.500768661499023
    5. '   ' → logprob: -17.625768661499023
    6. '```' → logprob: -18.000768661499023
    7. ':return' → logprob: -18.000768661499023
    8. ')return' → logprob: -18.375768661499023
    9. '
' → logprob: -18.750768661499023
    10. 'eturn' → logprob: -19.375768661499023

Token 241: ' ''.' (ID: 105941)
  Prédit: ' ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ''.' → logprob: -0.40296968817710876
    2. '''.' → logprob: -1.1529697179794312
    3. ' "".' → logprob: -4.777969837188721
    4. '"' → logprob: -4.902969837188721
    5. '''' → logprob: -9.402969360351562
    6. ' ' → logprob: -10.777969360351562
    7. ''' → logprob: -10.902969360351562
    8. '""' → logprob: -11.652969360351562
    9. '```' → logprob: -14.527969360351562
    10. ' '' → logprob: -15.277969360351562

Token 242: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -9.088346359931165e-07
    2. '''.' → logprob: -14.125000953674316
    3. ' join' → logprob: -16.25
    4. '.join' → logprob: -17.75
    5. 'jo' → logprob: -17.875
    6. 'j' → logprob: -18.125
    7. '```' → logprob: -18.75
    8. '(join' → logprob: -18.875
    9. '.' → logprob: -19.375
    10. ''.' → logprob: -20.25

Token 243: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -11.875008583068848
    3. 'digits' → logprob: -13.750008583068848
    4. '(str' → logprob: -15.875008583068848
    5. '(tokens' → logprob: -17.00000762939453
    6. ' digits' → logprob: -17.87500762939453
    7. '((' → logprob: -18.12500762939453
    8. ' (' → logprob: -18.12500762939453
    9. ')' → logprob: -18.87500762939453
    10. '([' → logprob: -19.37500762939453

Token 244: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.00030412263004109263
    2. 'digits' → logprob: -8.250304222106934
    3. 'g' → logprob: -10.875304222106934
    4. 'its' → logprob: -11.625304222106934
    5. 'ig' → logprob: -11.750304222106934
    6. 'igts' → logprob: -13.000304222106934
    7. 'd' → logprob: -14.125304222106934
    8. 'i' → logprob: -14.250304222106934
    9. '(d' → logprob: -14.500304222106934
    10. ' digits' → logprob: -14.625304222106934

Token 245: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -13.750001907348633
    3. '<|end|>' → logprob: -14.875001907348633
    4. ')return' → logprob: -17.125001907348633
    5. ' )' → logprob: -17.250001907348633
    6. '')' → logprob: -18.000001907348633
    7. '}' → logprob: -18.125001907348633
    8. ')`' → logprob: -18.250001907348633
    9. ')}' → logprob: -18.375001907348633
    10. '```' → logprob: -18.750001907348633

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44259122014045715
    2. '
' → logprob: -1.4425911903381348
    3. '<|end|>' → logprob: -2.1925911903381348
    4. 'def' → logprob: -5.442591190338135
    5. '```' → logprob: -5.942591190338135
    6. '    
' → logprob: -6.567591190338135
    7. ' ' → logprob: -8.317591667175293
    8. ' def' → logprob: -8.442591667175293
    9. '  ' → logprob: -8.442591667175293
    10. '<|end|>' → logprob: -8.567591667175293

Token 247: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.9292415749514475e-05
    2. '   ' → logprob: -10.500039100646973
    3. ' def' → logprob: -11.375039100646973
    4. '
' → logprob: -15.250039100646973
    5. '    
' → logprob: -18.12504005432129
    6. '	def' → logprob: -18.75004005432129
    7. '```' → logprob: -19.00004005432129
    8. 'de' → logprob: -20.62504005432129
    9. ' ' → logprob: -21.62504005432129
    10. '  ' → logprob: -21.75004005432129

Token 248: ' decode' (ID: 32043)
  Prédit: ' decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' decode' → logprob: -0.47408348321914673
    2. 'decode' → logprob: -0.9740834832191467
    3. 'def' → logprob: -12.84908390045166
    4. '.decode' → logprob: -12.97408390045166
    5. '_decode' → logprob: -14.22408390045166
    6. ' def' → logprob: -14.84908390045166
    7. ' ' → logprob: -15.59908390045166
    8. 'de' → logprob: -15.97408390045166
    9. 'dec' → logprob: -16.349082946777344
    10. '   ' → logprob: -16.474082946777344

Token 249: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5213274309644476e-05
    2. '(' → logprob: -11.125015258789062
    3. 'self' → logprob: -14.875015258789062
    4. '(
' → logprob: -16.250015258789062
    5. ' (' → logprob: -17.875015258789062
    6. '   ' → logprob: -18.375015258789062
    7. '(s' → logprob: -18.875015258789062
    8. 'def' → logprob: -18.875015258789062
    9. ' self' → logprob: -20.625015258789062
    10. '(Self' → logprob: -20.625015258789062

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007925526238977909
    2. 'self' → logprob: -4.882925510406494
    3. '(self' → logprob: -8.507925987243652
    4. '   ' → logprob: -9.632925987243652
    5. ' ,' → logprob: -10.132925987243652
    6. ' self' → logprob: -12.257925987243652
    7. '       ' → logprob: -12.632925987243652
    8. ',self' → logprob: -13.007925987243652
    9. ',
' → logprob: -14.507925987243652
    10. ')' → logprob: -14.757925987243652

Token 251: ' representation' (ID: 22311)
  Prédit: 'representation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'representation' → logprob: -0.3194645643234253
    2. ' representation' → logprob: -1.3194645643234253
    3. 'self' → logprob: -5.194464683532715
    4. ' self' → logprob: -7.694464683532715
    5. 'repr' → logprob: -9.194464683532715
    6. '   ' → logprob: -10.819464683532715
    7. 'rep' → logprob: -11.069464683532715
    8. 'Representation' → logprob: -11.194464683532715
    9. 's' → logprob: -11.569464683532715
    10. ' ' → logprob: -12.194464683532715

Token 252: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019221604452468455
    2. ' :' → logprob: -9.125192642211914
    3. ':str' → logprob: -10.500192642211914
    4. '   ' → logprob: -10.875192642211914
    5. '):' → logprob: -11.000192642211914
    6. ')' → logprob: -11.000192642211914
    7. '       ' → logprob: -13.375192642211914
    8. '):
' → logprob: -14.625192642211914
    9. 'self' → logprob: -14.625192642211914
    10. '    ' → logprob: -15.500192642211914

Token 253: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.693248987197876
    2. ' str' → logprob: -0.693248987197876
    3. ')' → logprob: -9.318248748779297
    4. '[str' → logprob: -12.443248748779297
    5. 'self' → logprob: -12.818248748779297
    6. ':str' → logprob: -13.443248748779297
    7. ' ' → logprob: -13.693248748779297
    8. '   ' → logprob: -13.818248748779297
    9. 's' → logprob: -14.068248748779297
    10. '	str' → logprob: -15.443248748779297

Token 254: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.380904672667384e-05
    2. ' )' → logprob: -10.375033378601074
    3. '   ' → logprob: -13.250033378601074
    4. ':' → logprob: -14.250033378601074
    5. '`)' → logprob: -16.75003433227539
    6. '):' → logprob: -17.00003433227539
    7. '       ' → logprob: -17.25003433227539
    8. '):
' → logprob: -17.50003433227539
    9. '")' → logprob: -17.87503433227539
    10. ' ' → logprob: -18.12503433227539

Token 255: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.104027509689331
    2. '->' → logprob: -1.104027509689331
    3. ' ->' → logprob: -1.479027509689331
    4. ')' → logprob: -2.229027509689331
    5. '   ' → logprob: -7.10402774810791
    6. '       ' → logprob: -8.35402774810791
    7. ')->' → logprob: -8.72902774810791
    8. ':
' → logprob: -8.85402774810791
    9. ' :' → logprob: -9.97902774810791
    10. ':int' → logprob: -10.97902774810791

Token 256: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00015860427811276168
    2. ' int' → logprob: -8.750158309936523
    3. '[int' → logprob: -18.000158309936523
    4. ' ' → logprob: -18.875158309936523
    5. '(int' → logprob: -19.500158309936523
    6. '   ' → logprob: -19.500158309936523
    7. '=int' → logprob: -20.125158309936523
    8. '
' → logprob: -20.250158309936523
    9. '  ' → logprob: -20.375158309936523
    10. 'in' → logprob: -20.500158309936523

Token 257: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.575122594833374
    2. ':
' → logprob: -1.075122594833374
    3. '       ' → logprob: -2.450122594833374
    4. '(self' → logprob: -5.200122833251953
    5. '   ' → logprob: -5.700122833251953
    6. ')' → logprob: -8.075122833251953
    7. 'self' → logprob: -8.325122833251953
    8. '):
' → logprob: -8.825122833251953
    9. '(' → logprob: -9.825122833251953
    10. '):' → logprob: -9.825122833251953

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028612653841264546
    2. 'n' → logprob: -8.250286102294922
    3. '   ' → logprob: -11.625286102294922
    4. 'num' → logprob: -12.000286102294922
    5. ' n' → logprob: -12.375286102294922
    6. 'result' → logprob: -13.000286102294922
    7. 's' → logprob: -14.750286102294922
    8. '      ' → logprob: -14.750286102294922
    9. 'def' → logprob: -14.750286102294922
    10. ' num' → logprob: -15.000286102294922

Token 259: ' """
' (ID: 7037)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.48740220069885254
    2. '       ' → logprob: -1.2374022006988525
    3. 'n' → logprob: -2.4874022006988525
    4. 'total' → logprob: -4.987401962280273
    5. 'num' → logprob: -5.737401962280273
    6. ' result' → logprob: -6.362401962280273
    7. 'value' → logprob: -8.112401962280273
    8. 'res' → logprob: -8.237401962280273
    9. ' n' → logprob: -9.112401962280273
    10. ' total' → logprob: -10.612401962280273

Token 260: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1082809790968895
    2. '       ' → logprob: -2.608280897140503
    3. 'n' → logprob: -3.858280897140503
    4. ' result' → logprob: -5.608281135559082
    5. 'total' → logprob: -5.608281135559082
    6. 'num' → logprob: -8.108281135559082
    7. 'res' → logprob: -9.233281135559082
    8. ' n' → logprob: -9.983281135559082
    9. 'value' → logprob: -10.108281135559082
    10. ' total' → logprob: -10.858281135559082

Token 261: ' Converts' (ID: 93566)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.010989339090883732
    2. ' result' → logprob: -5.010989189147949
    3. 'total' → logprob: -6.010989189147949
    4. 'value' → logprob: -6.885989189147949
    5. '       ' → logprob: -8.01098918914795
    6. 'n' → logprob: -8.38598918914795
    7. 'num' → logprob: -8.76098918914795
    8. ' total' → logprob: -10.26098918914795
    9. 'res' → logprob: -10.51098918914795
    10. ' value' → logprob: -12.13598918914795

Token 262: ' a' (ID: 261)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4867054224014282
    2. 'num' → logprob: -1.2367054224014282
    3. ' the' → logprob: -3.4867053031921387
    4. ' result' → logprob: -3.7367053031921387
    5. 'n' → logprob: -4.111705303192139
    6. ' num' → logprob: -4.611705303192139
    7. 'value' → logprob: -5.861705303192139
    8. '       ' → logprob: -5.986705303192139
    9. 'the' → logprob: -5.986705303192139
    10. ' a' → logprob: -6.736705303192139

Token 263: ' negative' (ID: 12626)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.11673879623413086
    2. 'decimal' → logprob: -3.116738796234131
    3. 'int' → logprob: -3.241738796234131
    4. 'result' → logprob: -4.241738796234131
    5. 'number' → logprob: -4.616738796234131
    6. 'value' → logprob: -6.991738796234131
    7. 'neg' → logprob: -8.241739273071289
    8. 'base' → logprob: -8.491739273071289
    9. 'negative' → logprob: -8.491739273071289
    10. ' num' → logprob: -8.741739273071289

Token 264: '-base' (ID: 55305)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.43226370215415955
    2. ' base' → logprob: -1.557263731956482
    3. 'Base' → logprob: -2.5572636127471924
    4. '_base' → logprob: -3.3072636127471924
    5. '-base' → logprob: -4.0572638511657715
    6. '10' → logprob: -5.0572638511657715
    7. 'def' → logprob: -7.3072638511657715
    8. 'int' → logprob: -7.5572638511657715
    9. 'based' → logprob: -7.8072638511657715
    10. ' Base' → logprob: -9.182263374328613

Token 265: ' numeral' (ID: 191907)
  Prédit: ' representation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' representation' → logprob: -0.7572906017303467
    2. '10' → logprob: -0.8822906017303467
    3. 'representation' → logprob: -2.2572906017303467
    4. 'int' → logprob: -5.257290840148926
    5. ' ' → logprob: -6.757290840148926
    6. 'number' → logprob: -7.132290840148926
    7. '-' → logprob: -7.257290840148926
    8. 'repr' → logprob: -7.507290840148926
    9. 'numer' → logprob: -7.632290840148926
    10. ' number' → logprob: -8.007290840148926

Token 266: ' system' (ID: 2420)
  Prédit: ' representation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' representation' → logprob: -0.6707598567008972
    2. 'representation' → logprob: -0.9207598567008972
    3. 'string' → logprob: -2.795759916305542
    4. 'system' → logprob: -4.045759677886963
    5. ' system' → logprob: -4.670759677886963
    6. ' string' → logprob: -6.295759677886963
    7. 'number' → logprob: -8.670760154724121
    8. 'int' → logprob: -9.670760154724121
    9. 'repr' → logprob: -9.920760154724121
    10. '   ' → logprob: -10.045760154724121

Token 267: ' string' (ID: 1621)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.6470518708229065
    2. 'representation' → logprob: -1.1470518112182617
    3. ' representation' → logprob: -2.0220518112182617
    4. ' string' → logprob: -3.6470518112182617
    5. 'number' → logprob: -8.022051811218262
    6. 'str' → logprob: -10.772051811218262
    7. ' number' → logprob: -11.147051811218262
    8. 'value' → logprob: -12.147051811218262
    9. 'repr' → logprob: -12.147051811218262
    10. 'represented' → logprob: -12.397051811218262

Token 268: ' back' (ID: 1602)
  Prédit: 'representation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'representation' → logprob: -0.4509209990501404
    2. 'to' → logprob: -1.7009210586547852
    3. ' representation' → logprob: -1.8259210586547852
    4. ' to' → logprob: -4.325921058654785
    5. 'back' → logprob: -6.450921058654785
    6. '   ' → logprob: -6.450921058654785
    7. ' into' → logprob: -6.950921058654785
    8. '       ' → logprob: -7.450921058654785
    9. 'into' → logprob: -7.575921058654785
    10. ' back' → logprob: -8.450921058654785

Token 269: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.011072111316025257
    2. ' to' → logprob: -4.761072158813477
    3. '       ' → logprob: -6.011072158813477
    4. 'into' → logprob: -13.011072158813477
    5. '   ' → logprob: -14.761072158813477
    6. 'int' → logprob: -15.886072158813477
    7. ' into' → logprob: -16.386072158813477
    8. 'for' → logprob: -17.011072158813477
    9. 'To' → logprob: -17.136072158813477
    10. ')' → logprob: -17.386072158813477

Token 270: ' a' (ID: 261)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -0.5200981497764587
    2. 'a' → logprob: -1.5200982093811035
    3. 'an' → logprob: -1.7700982093811035
    4. 'its' → logprob: -5.1450982093811035
    5. ' an' → logprob: -5.3950982093811035
    6. ' its' → logprob: -6.0200982093811035
    7. ' a' → logprob: -6.3950982093811035
    8. ' decimal' → logprob: -7.2700982093811035
    9. 'integer' → logprob: -7.3950982093811035
    10. 'int' → logprob: -7.5200982093811035

Token 271: ' decimal' (ID: 26964)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -0.00012630375567823648
    2. ' decimal' → logprob: -9.000125885009766
    3. 'int' → logprob: -13.875125885009766
    4. 'integer' → logprob: -14.125125885009766
    5. 'number' → logprob: -14.250125885009766
    6. 'base' → logprob: -15.000125885009766
    7. '(decimal' → logprob: -17.000125885009766
    8. '   ' → logprob: -17.375125885009766
    9. 'normal' → logprob: -17.500125885009766
    10. 'Decimal' → logprob: -17.875125885009766

Token 272: ' integer' (ID: 16336)
  Prédit: ' integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.8668727278709412
    2. 'integer' → logprob: -0.8668727278709412
    3. 'int' → logprob: -1.866872787475586
    4. 'number' → logprob: -5.741872787475586
    5. ' number' → logprob: -6.866872787475586
    6. ' int' → logprob: -7.616872787475586
    7. '       ' → logprob: -9.241872787475586
    8. '   ' → logprob: -11.616872787475586
    9. 'value' → logprob: -12.116872787475586
    10. '
' → logprob: -12.491872787475586

Token 273: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.742448022123426e-05
    2. 'num' → logprob: -10.750067710876465
    3. 'n' → logprob: -11.125067710876465
    4. ',' → logprob: -11.500067710876465
    5. '   ' → logprob: -12.000067710876465
    6. 'self' → logprob: -12.500067710876465
    7. 'result' → logprob: -13.125067710876465
    8. ':' → logprob: -13.500067710876465
    9. '      ' → logprob: -14.000067710876465
    10. '           ' → logprob: -14.000067710876465

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016911309212446213
    2. 'result' → logprob: -7.5016913414001465
    3. 'num' → logprob: -7.7516913414001465
    4. 'n' → logprob: -7.8766913414001465
    5. ' result' → logprob: -9.251690864562988
    6. '   ' → logprob: -9.626690864562988
    7. 'total' → logprob: -10.126690864562988
    8. 'value' → logprob: -10.126690864562988
    9. ' num' → logprob: -10.251690864562988
    10. ' n' → logprob: -10.501690864562988

Token 275: ' """
' (ID: 7037)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2876533269882202
    2. '       ' → logprob: -1.7876533269882202
    3. 'n' → logprob: -3.0376534461975098
    4. 'num' → logprob: -3.7876534461975098
    5. 'total' → logprob: -4.78765344619751
    6. 'value' → logprob: -5.78765344619751
    7. 'res' → logprob: -7.66265344619751
    8. ' result' → logprob: -9.162652969360352
    9. 'number' → logprob: -10.787652969360352
    10. '```' → logprob: -11.662652969360352

Token 276: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07878105342388153
    2. '       ' → logprob: -3.0787811279296875
    3. 'n' → logprob: -4.3287811279296875
    4. 'num' → logprob: -4.5787811279296875
    5. 'total' → logprob: -5.3287811279296875
    6. 'res' → logprob: -6.9537811279296875
    7. 'value' → logprob: -7.9537811279296875
    8. ' result' → logprob: -9.078781127929688
    9. 'number' → logprob: -11.953781127929688
    10. '```' → logprob: -12.578781127929688

Token 277: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.038149937987327576
    2. 'total' → logprob: -4.038149833679199
    3. 'num' → logprob: -4.038149833679199
    4. 'n' → logprob: -6.288149833679199
    5. 'res' → logprob: -8.2881498336792
    6. 'base' → logprob: -10.2881498336792
    7. 'value' → logprob: -10.6631498336792
    8. 'number' → logprob: -13.6631498336792
    9. 'acc' → logprob: -13.7881498336792
    10. ' result' → logprob: -13.9131498336792

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380416102707386
    2. '=' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.788042068481445
    4. ',' → logprob: -17.788042068481445
    5. ':' → logprob: -18.163042068481445
    6. 's' → logprob: -18.538042068481445
    7. ')' → logprob: -19.038042068481445
    8. '=int' → logprob: -19.288042068481445
    9. ' ' → logprob: -19.538042068481445
    10. '0' → logprob: -19.913042068481445

Token 279: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '۰' → logprob: -21.12502670288086
    4. '   ' → logprob: -21.37502670288086
    5. '０' → logprob: -23.87502670288086
    6. '```' → logprob: -23.87502670288086
    7. '  ' → logprob: -24.00002670288086
    8. '       ' → logprob: -24.12502670288086
    9. '=' → logprob: -24.37502670288086
    10. ' ' → logprob: -24.62502670288086

Token 280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '۰' → logprob: -22.125
    4. 'sum' → logprob: -23.0
    5. '   ' → logprob: -23.25
    6. '０' → logprob: -23.875
    7. 'int' → logprob: -24.625
    8. '```' → logprob: -24.875
    9. '000' → logprob: -25.25
    10. '٠' → logprob: -25.875

Token 281: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4536477327346802
    2. '
' → logprob: -1.9536477327346802
    3. ' for' → logprob: -1.9536477327346802
    4. 'for' → logprob: -2.7036476135253906
    5. '        
' → logprob: -5.328647613525391
    6. ',' → logprob: -5.453647613525391
    7. '<|end|>' → logprob: -5.828647613525391
    8. '   ' → logprob: -8.32864761352539
    9. ' 
' → logprob: -8.32864761352539
    10. '    
' → logprob: -8.32864761352539

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010103991371579468
    2. ' for' → logprob: -9.875101089477539
    3. 'for' → logprob: -10.500101089477539
    4. '   ' → logprob: -10.750101089477539
    5. '      ' → logprob: -16.12510108947754
    6. '	' → logprob: -16.25010108947754
    7. '	for' → logprob: -16.62510108947754
    8. ' ' → logprob: -17.00010108947754
    9. ',' → logprob: -17.37510108947754
    10. '	   ' → logprob: -17.62510108947754

Token 283: ' length' (ID: 5517)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013491002842783928
    2. ' for' → logprob: -4.763491153717041
    3. '       ' → logprob: -5.513491153717041
    4. 'power' → logprob: -7.138491153717041
    5. 'base' → logprob: -10.638490676879883
    6. 'pow' → logprob: -11.763490676879883
    7. ' power' → logprob: -12.638490676879883
    8. 'exp' → logprob: -13.638490676879883
    9. 'length' (adapté à ' length') → logprob: -13.888490676879883
    10. 'n' → logprob: -14.138490676879883

Token 284: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.639970600605011
    2. '=' → logprob: -0.764970600605011
    3. '       ' → logprob: -5.264970779418945
    4. '-' → logprob: -6.639970779418945
    5. '   ' → logprob: -7.889970779418945
    6. 'for' → logprob: -8.514970779418945
    7. '=len' → logprob: -9.139970779418945
    8. ' -' → logprob: -10.139970779418945
    9. 'of' → logprob: -10.264970779418945
    10. 's' → logprob: -10.514970779418945

Token 285: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0007100477814674377
    2. ' len' → logprob: -7.2507100105285645
    3. '(len' → logprob: -17.125709533691406
    4. '       ' → logprob: -19.000709533691406
    5. '[len' → logprob: -19.750709533691406
    6. '=len' → logprob: -20.125709533691406
    7. '	len' → logprob: -20.375709533691406
    8. '   ' → logprob: -20.875709533691406
    9. ',len' → logprob: -22.375709533691406
    10. '<len' → logprob: -23.625709533691406

Token 286: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -2.0100624169572257e-05
    2. 'representation' → logprob: -10.875020027160645
    3. '(' → logprob: -14.125020027160645
    4. '(rep' → logprob: -15.375020027160645
    5. ' (' → logprob: -16.87502098083496
    6. ' representation' → logprob: -17.87502098083496
    7. '(
' → logprob: -18.62502098083496
    8. 'Representation' → logprob: -18.62502098083496
    9. 'represent' → logprob: -18.75002098083496
    10. 're' → logprob: -19.62502098083496

Token 287: 'presentation' (ID: 96140)
  Prédit: 'presentation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'presentation' → logprob: -2.4868770196917467e-05
    2. 'resentation' → logprob: -11.000024795532227
    3. 'representation' → logprob: -11.750024795532227
    4. 'Presentation' → logprob: -16.750024795532227
    5. 'present' → logprob: -16.750024795532227
    6. ' presentation' → logprob: -16.875024795532227
    7. 'p' → logprob: -18.875024795532227
    8. 'pres' → logprob: -19.625024795532227
    9. '.presentation' → logprob: -20.000024795532227
    10. 'pre' → logprob: -20.500024795532227

Token 288: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3868972957134247
    2. ')' → logprob: -1.136897325515747
    3. '       ' → logprob: -11.511897087097168
    4. '-' → logprob: -11.761897087097168
    5. 'for' → logprob: -13.011897087097168
    6. '   ' → logprob: -13.511897087097168
    7. ' )
' → logprob: -13.636897087097168
    8. ')

' → logprob: -13.636897087097168
    9. '
' → logprob: -14.636897087097168
    10. ')
' → logprob: -14.761897087097168

Token 289: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6041483879089355
    2. '       ' → logprob: -1.1041483879089355
    3. ' for' → logprob: -2.1041483879089355
    4. '   ' → logprob: -11.229148864746094
    5. '```' → logprob: -13.104148864746094
    6. '	for' → logprob: -14.104148864746094
    7. '
' → logprob: -14.354148864746094
    8. '        
' → logprob: -15.104148864746094
    9. ' ' → logprob: -15.479148864746094
    10. ')' → logprob: -15.729148864746094

Token 290: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000691824359819293
    2. ' for' → logprob: -7.750691890716553
    3. '       ' → logprob: -8.250691413879395
    4. '	for' → logprob: -17.87569236755371
    5. '```' → logprob: -19.50069236755371
    6. '   ' → logprob: -20.00069236755371
    7. 'base' → logprob: -20.00069236755371
    8. ' ' → logprob: -20.12569236755371
    9. '
' → logprob: -20.12569236755371
    10. 'For' → logprob: -21.37569236755371

Token 291: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3324494957923889
    2. ' i' → logprob: -1.3324494361877441
    3. 'index' → logprob: -4.332449436187744
    4. ' index' → logprob: -5.832449436187744
    5. 'idx' → logprob: -6.082449436187744
    6. ' idx' → logprob: -7.332449436187744
    7. 'pos' → logprob: -14.082449913024902
    8. 'position' → logprob: -14.582449913024902
    9. ' ' → logprob: -15.207449913024902
    10. 'enumer' → logprob: -15.707449913024902

Token 292: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01670023985207081
    2. 'in' → logprob: -4.141700267791748
    3. ',' → logprob: -8.01669979095459
    4. '(range' → logprob: -8.39169979095459
    5. 'range' → logprob: -9.76669979095459
    6. ' range' → logprob: -10.89169979095459
    7. '   ' → logprob: -11.51669979095459
    8. '       ' → logprob: -12.01669979095459
    9. '(' → logprob: -12.01669979095459
    10. '(length' → logprob: -13.26669979095459

Token 293: ' ch' (ID: 549)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.2279471904039383
    2. 'ch' → logprob: -1.9779472351074219
    3. 'char' → logprob: -2.727947235107422
    4. ' digit' → logprob: -9.352947235107422
    5. 'c' → logprob: -10.477947235107422
    6. ' ch' → logprob: -11.727947235107422
    7. ' char' → logprob: -13.102947235107422
    8. 'd' → logprob: -13.477947235107422
    9. 'Digit' → logprob: -14.352947235107422
    10. 'symbol' → logprob: -15.852947235107422

Token 294: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048620183020830154
    2. 'in' → logprob: -3.0486202239990234
    3. ',' → logprob: -10.923620223999023
    4. ' ' → logprob: -11.298620223999023
    5. 'n' → logprob: -14.423620223999023
    6. ')' → logprob: -14.673620223999023
    7. '  ' → logprob: -15.048620223999023
    8. 'import' → logprob: -15.423620223999023
    9. ' ,' → logprob: -15.923620223999023
    10. 's' → logprob: -16.173620223999023

Token 295: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00861468818038702
    2. ' enumerate' → logprob: -4.758614540100098
    3. 'enum' → logprob: -16.383615493774414
    4. 'en' → logprob: -17.383615493774414
    5. '```' → logprob: -17.508615493774414
    6. '(en' → logprob: -18.258615493774414
    7. '.enumer' → logprob: -18.633615493774414
    8. ' ' → logprob: -18.633615493774414
    9. '   ' → logprob: -19.133615493774414
    10. 'range' → logprob: -20.008615493774414

Token 296: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.5766060948371887
    2. 'representation' → logprob: -0.8266060948371887
    3. 're' → logprob: -7.451606273651123
    4. ' representation' → logprob: -9.576605796813965
    5. 'represent' → logprob: -12.076605796813965
    6. 'repr' → logprob: -12.451605796813965
    7. 'rep' → logprob: -13.326605796813965
    8. '[::-' → logprob: -13.576605796813965
    9. '(reverse' → logprob: -13.826605796813965
    10. '(' → logprob: -14.326605796813965

Token 297: 'presentation' (ID: 96140)
  Prédit: 'presentation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'presentation' → logprob: -0.0002470350591465831
    2. 'resentation' → logprob: -9.00024700164795
    3. 'representation' → logprob: -9.00024700164795
    4. ' presentation' → logprob: -16.125247955322266
    5. 'present' → logprob: -16.375247955322266
    6. 'Presentation' → logprob: -17.500247955322266
    7. 'pres' → logprob: -18.875247955322266
    8. 'pr' → logprob: -19.500247955322266
    9. 'p' → logprob: -19.750247955322266
    10. 'pre' → logprob: -20.250247955322266

Token 298: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3360809087753296
    2. '[::-' → logprob: -1.8360809087753296
    3. '):' → logprob: -2.086081027984619
    4. ':' → logprob: -6.461081027984619
    5. ' ):
' → logprob: -9.711080551147461
    6. '       ' → logprob: -10.086080551147461
    7. '   ' → logprob: -10.461080551147461
    8. ' ):' → logprob: -10.461080551147461
    9. '):
' → logprob: -10.586080551147461
    10. ':
' → logprob: -10.711080551147461

Token 299: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000948737608268857
    2. ',' → logprob: -7.875948905944824
    3. '```' → logprob: -8.875948905944824
    4. '0' → logprob: -9.500948905944824
    5. ')' → logprob: -9.625948905944824
    6. '-' → logprob: -10.125948905944824
    7. '[::-' → logprob: -10.625948905944824
    8. '            
' → logprob: -10.625948905944824
    9. '       ' → logprob: -10.750948905944824
    10. '
' → logprob: -10.875948905944824

Token 300: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' (adapté à ' digit') → logprob: -0.4320796728134155
    2. 'result' → logprob: -2.057079792022705
    3. '           ' → logprob: -2.182079792022705
    4. ' digit' → logprob: -2.432079792022705
    5. 'power' → logprob: -5.057079792022705
    6. 'd' → logprob: -5.182079792022705
    7. 'pow' → logprob: -5.307079792022705
    8. ' result' → logprob: -5.932079792022705
    9. 'value' → logprob: -6.932079792022705
    10. 'num' → logprob: -7.432079792022705

Token 301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10022197663784027
    2. ' =' → logprob: -2.350221872329712
    3. '=int' → logprob: -11.100221633911133
    4. '_value' → logprob: -16.350221633911133
    5. 'int' → logprob: -16.975221633911133
    6. 'value' → logprob: -17.350221633911133
    7. '=
' → logprob: -17.600221633911133
    8. '_val' → logprob: -19.100221633911133
    9. '   ' → logprob: -19.225221633911133
    10. '＝' → logprob: -19.475221633911133

Token 302: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.676292231422849e-05
    2. ' int' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.000017166137695
    4. '           ' → logprob: -18.750017166137695
    5. 'ord' → logprob: -20.000017166137695
    6. '       ' → logprob: -20.250017166137695
    7. '[int' → logprob: -21.375017166137695
    8. ' ' → logprob: -22.500017166137695
    9. '               ' → logprob: -22.625017166137695
    10. '<int' → logprob: -22.625017166137695

Token 303: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -6.392202976712724e-06
    2. 'ch' → logprob: -12.000006675720215
    3. '[ch' → logprob: -15.750006675720215
    4. '	ch' → logprob: -17.3750057220459
    5. '(' → logprob: -18.1250057220459
    6. '/ch' → logprob: -18.3750057220459
    7. '(
' → logprob: -18.5000057220459
    8. ',ch' → logprob: -20.5000057220459
    9. ' ch' → logprob: -21.5000057220459
    10. '-ch' → logprob: -22.1250057220459

Token 304: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014277744106948376
    2. ')
' → logprob: -4.264277935028076
    3. '           ' → logprob: -9.764277458190918
    4. '       ' → logprob: -10.639277458190918
    5. ' )' → logprob: -10.764277458190918
    6. ' )
' → logprob: -12.014277458190918
    7. ')**' → logprob: -13.014277458190918
    8. '               ' → logprob: -14.639277458190918
    9. ')
' → logprob: -14.764277458190918
    10. '   ' → logprob: -14.764277458190918

Token 305: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029711032286286354
    2. '       ' → logprob: -3.6547110080718994
    3. 'result' → logprob: -6.0297112464904785
    4. '
' → logprob: -8.65471076965332
    5. ' result' → logprob: -8.77971076965332
    6. 'n' → logprob: -9.02971076965332
    7. '```' → logprob: -9.15471076965332
    8. '**' → logprob: -9.27971076965332
    9. '	       ' → logprob: -10.15471076965332
    10. '            
' → logprob: -10.52971076965332

Token 306: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' (adapté à ' power') → logprob: -0.1035262867808342
    2. 'result' → logprob: -2.4785263538360596
    3. ' power' → logprob: -4.7285261154174805
    4. 'pow' → logprob: -6.2285261154174805
    5. 'ex' → logprob: -6.7285261154174805
    6. ' result' → logprob: -6.8535261154174805
    7. '           ' → logprob: -6.9785261154174805
    8. 'exp' → logprob: -8.60352611541748
    9. ' pow' → logprob: -9.22852611541748
    10. '       ' → logprob: -9.47852611541748

Token 307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08188185095787048
    2. ' =' → logprob: -2.5818817615509033
    3. '(self' → logprob: -6.581881999969482
    4. '(length' → logprob: -6.956881999969482
    5. '=self' → logprob: -7.956881999969482
    6. 'self' → logprob: -9.331881523132324
    7. '       ' → logprob: -9.831881523132324
    8. '   ' → logprob: -10.206881523132324
    9. 'length' → logprob: -10.581881523132324
    10. '(' → logprob: -10.956881523132324

Token 308: ' length' (ID: 5517)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.43333011865615845
    2. 'length' → logprob: -1.0583300590515137
    3. '(self' → logprob: -6.683330059051514
    4. 'pow' → logprob: -7.058330059051514
    5. 'len' → logprob: -7.308330059051514
    6. 'abs' → logprob: -7.308330059051514
    7. '(length' → logprob: -7.308330059051514
    8. ' self' → logprob: -8.183330535888672
    9. ' length' → logprob: -9.808330535888672
    10. '(-' → logprob: -10.308330535888672

Token 309: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5761924982070923
    2. ' -' → logprob: -0.8261924982070923
    3. '-i' → logprob: -8.326192855834961
    4. '1' → logprob: -11.701192855834961
    5. ' ' → logprob: -13.701192855834961
    6. '   ' → logprob: -14.826192855834961
    7. '−' → logprob: -15.201192855834961
    8. 'i' → logprob: -15.201192855834961
    9. '[i' → logprob: -15.701192855834961
    10. '           ' → logprob: -15.951192855834961

Token 310: ' i' (ID: 575)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31552866101264954
    2. 'i' → logprob: -1.3155286312103271
    3. ' i' → logprob: -6.565528869628906
    4. ' ' → logprob: -7.065528869628906
    5. '   ' → logprob: -13.565528869628906
    6. '(i' → logprob: -14.940528869628906
    7. '	i' → logprob: -15.565528869628906
    8. '[i' → logprob: -15.940528869628906
    9. '{i' → logprob: -16.065528869628906
    10. '  ' → logprob: -16.315528869628906

Token 311: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06413878500461578
    2. '1' → logprob: -2.939138889312744
    3. ' -' → logprob: -4.689138889312744
    4. ' ' → logprob: -10.939138412475586
    5. '```' → logprob: -13.689138412475586
    6. '   ' → logprob: -16.814138412475586
    7. 's' → logprob: -16.939138412475586
    8. '`' → logprob: -17.189138412475586
    9. '<|end|>' → logprob: -17.439138412475586
    10. ')' → logprob: -17.439138412475586

Token 312: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -17.500011444091797
    4. '   ' → logprob: -19.250011444091797
    5. '<|end|>' → logprob: -20.375011444091797
    6. '-' → logprob: -20.750011444091797
    7. '۱' → logprob: -20.750011444091797
    8. '       ' → logprob: -20.875011444091797
    9. '１' → logprob: -21.500011444091797
    10. '           ' → logprob: -21.500011444091797

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -19.375
    4. '１' → logprob: -20.875
    5. '۱' → logprob: -20.875
    6. '
' → logprob: -21.125
    7. '2' → logprob: -21.375
    8. '   ' → logprob: -21.875
    9. '-' → logprob: -22.0
    10. '

' → logprob: -22.8125

Token 314: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10208434611558914
    2. '           ' → logprob: -2.3520843982696533
    3. '       ' → logprob: -8.102084159851074
    4. ')
' → logprob: -8.102084159851074
    5. ' 
' → logprob: -8.352084159851074
    6. '            
' → logprob: -8.602084159851074
    7. ',' → logprob: -8.727084159851074
    8. '
' → logprob: -8.977084159851074
    9. '*' → logprob: -9.102084159851074
    10. ')' → logprob: -9.352084159851074

Token 315: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020741254556924105
    2. '
' → logprob: -6.752074241638184
    3. 'result' → logprob: -7.627074241638184
    4. '       ' → logprob: -8.752074241638184
    5. ' *' → logprob: -9.377074241638184
    6. '*' → logprob: -9.752074241638184
    7. '            
' → logprob: -10.377074241638184
    8. ',' → logprob: -10.752074241638184
    9. ' result' → logprob: -10.877074241638184
    10. ' 
' → logprob: -12.002074241638184

Token 316: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.003164414083585143
    2. '           ' → logprob: -6.253164291381836
    3. ' result' → logprob: -7.128164291381836
    4. '       ' → logprob: -7.753164291381836
    5. '
' → logprob: -13.253164291381836
    6. '	result' → logprob: -14.753164291381836
    7. '   ' → logprob: -15.753164291381836
    8. '```' → logprob: -15.878164291381836
    9. ',result' → logprob: -15.878164291381836
    10. '=result' → logprob: -16.128164291381836

Token 317: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31330737471580505
    2. '+=' → logprob: -1.3133074045181274
    3. '*=' → logprob: -10.313307762145996
    4. ' *=' → logprob: -11.813307762145996
    5. '=' → logprob: -12.938307762145996
    6. '+=(' → logprob: -13.688307762145996
    7. ' ' → logprob: -14.688307762145996
    8. '+' → logprob: -15.313307762145996
    9. ' -=' → logprob: -15.438307762145996
    10. ' ' → logprob: -15.813307762145996

Token 318: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.016078829765319824
    2. ' digit' → logprob: -4.141078948974609
    3. 'int' → logprob: -10.14107894897461
    4. '-digit' → logprob: -12.89107894897461
    5. ' int' → logprob: -14.14107894897461
    6. 'dig' → logprob: -14.89107894897461
    7. '   ' → logprob: -15.26607894897461
    8. 'digits' → logprob: -15.39107894897461
    9. '           ' → logprob: -15.76607894897461
    10. 'digital' → logprob: -15.76607894897461

Token 319: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.003183420980349183
    2. '*' → logprob: -5.753183364868164
    3. '*(' → logprob: -12.128183364868164
    4. '*self' → logprob: -16.128183364868164
    5. ' ' → logprob: -16.378183364868164
    6. ' ' → logprob: -17.628183364868164
    7. '           ' → logprob: -18.753183364868164
    8. ' *(' → logprob: -19.253183364868164
    9. '
' → logprob: -19.378183364868164
    10. ' (' → logprob: -20.003183364868164

Token 320: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001926374970935285
    2. 'self' → logprob: -6.751926422119141
    3. ' (' → logprob: -7.251926422119141
    4. '(pow' → logprob: -10.50192642211914
    5. ' self' → logprob: -11.00192642211914
    6. 'pow' → logprob: -12.87692642211914
    7. '[self' → logprob: -15.75192642211914
    8. '*self' → logprob: -16.37692642211914
    9. ' pow' → logprob: -17.25192642211914
    10. '((' → logprob: -17.50192642211914

Token 321: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011798698687925935
    2. '(self' → logprob: -6.8761796951293945
    3. ' self' → logprob: -8.876179695129395
    4. '           ' → logprob: -13.251179695129395
    5. '       ' → logprob: -13.501179695129395
    6. 'abs' → logprob: -13.626179695129395
    7. 'pow' → logprob: -13.876179695129395
    8. '10' → logprob: -14.126179695129395
    9. '(-' → logprob: -14.626179695129395
    10. '[self' → logprob: -15.751179695129395

Token 322: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -1.5332478142227046e-05
    2. 'base' → logprob: -11.250015258789062
    3. '.' → logprob: -13.250015258789062
    4. ' base' → logprob: -15.750015258789062
    5. '-base' → logprob: -15.750015258789062
    6. ').' → logprob: -16.625015258789062
    7. ';base' → logprob: -17.625015258789062
    8. ' .' → logprob: -18.000015258789062
    9. '(base' → logprob: -18.500015258789062
    10. '	base' → logprob: -18.625015258789062

Token 323: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.3136596381664276
    2. '**' → logprob: -1.31365966796875
    3. ')' → logprob: -8.18865966796875
    4. ')**' → logprob: -9.06365966796875
    5. '**)' → logprob: -13.06365966796875
    6. ' **)' → logprob: -13.43865966796875
    7. ' ' → logprob: -14.56365966796875
    8. ' ' → logprob: -15.56365966796875
    9. '```' → logprob: -17.81365966796875
    10. ' )' → logprob: -18.06365966796875

Token 324: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -1.676292231422849e-05
    2. ' power' → logprob: -11.000017166137695
    3. 'pow' → logprob: -17.500017166137695
    4. '(power' → logprob: -17.500017166137695
    5. '   ' → logprob: -23.125017166137695
    6. ' ' → logprob: -23.250017166137695
    7. '.power' → logprob: -23.625017166137695
    8. ')' → logprob: -24.000017166137695
    9. 'powers' → logprob: -24.250017166137695
    10. '_power' → logprob: -24.375017166137695

Token 325: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006725437473505735
    2. ')
' → logprob: -5.006725311279297
    3. '       ' → logprob: -12.131725311279297
    4. ' )' → logprob: -12.756725311279297
    5. ')

' → logprob: -14.006725311279297
    6. ')return' → logprob: -14.256725311279297
    7. ')
' → logprob: -15.756725311279297
    8. ' )
' → logprob: -16.256725311279297
    9. '))' → logprob: -17.506725311279297
    10. '   ' → logprob: -18.631725311279297

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16717056930065155
    2. 'return' → logprob: -1.917170524597168
    3. ' return' → logprob: -5.042170524597168
    4. '   ' → logprob: -8.042170524597168
    5. '
' → logprob: -9.542170524597168
    6. '	return' → logprob: -9.792170524597168
    7. '	' → logprob: -12.292170524597168
    8. '```' → logprob: -12.792170524597168
    9. ':return' → logprob: -13.417170524597168
    10. ' ' → logprob: -14.042170524597168

Token 327: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1277698427438736
    2. '       ' → logprob: -2.377769947052002
    3. ' return' → logprob: -3.627769947052002
    4. '   ' → logprob: -8.127769470214844
    5. '	return' → logprob: -8.502769470214844
    6. '
' → logprob: -9.127769470214844
    7. ':return' → logprob: -13.377769470214844
    8. ' ' → logprob: -13.752769470214844
    9. '	' → logprob: -14.127769470214844
    10. '```' → logprob: -15.127769470214844

Token 328: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.03804149478673935
    2. ' result' → logprob: -3.288041591644287
    3. '(result' → logprob: -19.913042068481445
    4. '	result' → logprob: -20.413042068481445
    5. '$result' → logprob: -21.788042068481445
    6. ' ' → logprob: -21.788042068481445
    7. '=result' → logprob: -22.288042068481445
    8. '0' → logprob: -22.788042068481445
    9. '[result' → logprob: -22.913042068481445
    10. '_result' → logprob: -23.038042068481445

Token 329: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 330: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: ' Data' (ID: 4833)
  Prédit: 'Negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Negative' → logprob: -1.468360424041748
    2. 'Balanced' → logprob: -1.468360424041748
    3. 'Positive' → logprob: -1.593360424041748
    4. ' Balanced' → logprob: -1.968360424041748
    5. ' Positive' → logprob: -2.968360424041748
    6. ' Negative' → logprob: -2.968360424041748
    7. 'Decimal' → logprob: -4.218360424041748
    8. 'Binary' → logprob: -4.343360424041748
    9. 'Pos' → logprob: -4.468360424041748
    10. 'Standard' → logprob: -4.843360424041748

Token 332: 'Set' (ID: 1984)
  Prédit: 'Processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.18844564259052277
    2. 'Set' → logprob: -3.188445568084717
    3. 'Source' → logprob: -3.313445568084717
    4. 'Loader' → logprob: -3.688445568084717
    5. 'Point' → logprob: -4.438445568084717
    6. 'Generator' → logprob: -4.438445568084717
    7. 'Class' → logprob: -4.813445568084717
    8. 'Container' → logprob: -4.938445568084717
    9. 'Handler' → logprob: -5.188445568084717
    10. 'Collector' → logprob: -5.438445568084717

Token 333: 'Processor' (ID: 22334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002434047171846032
    2. '(N' → logprob: -6.627434253692627
    3. '(' → logprob: -6.877434253692627
    4. ':
' → logprob: -10.627433776855469
    5. '():' → logprob: -11.002433776855469
    6. ' :' → logprob: -11.627433776855469
    7. '<|end|>' → logprob: -12.252433776855469
    8. '):' → logprob: -12.502433776855469
    9. '(object' → logprob: -12.877433776855469
    10. ':

' → logprob: -13.252433776855469

Token 334: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002476135268807411
    2. '(N' → logprob: -6.252476215362549
    3. ':
' → logprob: -8.12747573852539
    4. '(' → logprob: -8.37747573852539
    5. '():' → logprob: -12.50247573852539
    6. ' :' → logprob: -12.50247573852539
    7. ':N' → logprob: -12.75247573852539
    8. '<|end|>' → logprob: -12.75247573852539
    9. ':

' → logprob: -13.37747573852539
    10. ':def' → logprob: -13.62747573852539

Token 335: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023818708956241608
    2. ' def' → logprob: -4.273818492889404
    3. 'def' → logprob: -4.648818492889404
    4. '    
' → logprob: -10.648818969726562
    5. 'class' → logprob: -12.148818969726562
    6. '	def' → logprob: -12.648818969726562
    7. '```' → logprob: -14.148818969726562
    8. '<|end|>' → logprob: -14.148818969726562
    9. ',' → logprob: -14.523818969726562
    10. ':' → logprob: -15.023818969726562

Token 336: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06208711862564087
    2. ' def' → logprob: -2.812087059020996
    3. '   ' → logprob: -9.062087059020996
    4. 'class' → logprob: -12.687087059020996
    5. ' ' → logprob: -16.187088012695312
    6. 'de' → logprob: -16.437088012695312
    7. '```' → logprob: -16.687088012695312
    8. 'from' → logprob: -17.312088012695312
    9. '  ' → logprob: -17.437088012695312
    10. '	def' → logprob: -17.687088012695312

Token 337: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04222193360328674
    2. '__' → logprob: -3.292222023010254
    3. ' def' → logprob: -5.917222023010254
    4. ' process' → logprob: -7.167222023010254
    5. 'process' → logprob: -8.542222023010254
    6. 'init' → logprob: -8.667222023010254
    7. ' init' → logprob: -8.792222023010254
    8. 'def' → logprob: -9.667222023010254
    9. '_init' → logprob: -9.792222023010254
    10. '_' → logprob: -10.792222023010254

Token 338: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -19.5
    3. 'def' → logprob: -19.875
    4. '```' → logprob: -21.0
    5. '_init' → logprob: -21.5
    6. '(init' → logprob: -22.125
    7. '
' → logprob: -22.25
    8. 'inite' → logprob: -22.5
    9. '   ' → logprob: -22.5
    10. '	init' → logprob: -22.625

Token 339: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03396354615688324
    2. '(self' → logprob: -3.408963441848755
    3. '__(
' → logprob: -8.658963203430176
    4. ' (' → logprob: -10.033963203430176
    5. 'self' → logprob: -10.408963203430176
    6. '(' → logprob: -10.408963203430176
    7. '__' → logprob: -10.533963203430176
    8. '_(' → logprob: -12.783963203430176
    9. ')(' → logprob: -13.408963203430176
    10. ',' → logprob: -13.408963203430176

Token 340: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003630954073742032
    2. ')' → logprob: -5.878631114959717
    3. ' self' → logprob: -7.128631114959717
    4. 'data' → logprob: -11.378630638122559
    5. '
' → logprob: -12.878630638122559
    6. ' ' → logprob: -13.003630638122559
    7. '):
' → logprob: -13.128630638122559
    8. '   ' → logprob: -13.753630638122559
    9. ',' → logprob: -14.878630638122559
    10. 'num' → logprob: -14.878630638122559

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004410416819155216
    2. 'self' → logprob: -5.504410266876221
    3. '):' → logprob: -8.879410743713379
    4. ',self' → logprob: -9.379410743713379
    5. ')' → logprob: -9.754410743713379
    6. '(self' → logprob: -11.254410743713379
    7. ' self' → logprob: -11.379410743713379
    8. ' ,' → logprob: -12.004410743713379
    9. '   ' → logprob: -12.129410743713379
    10. ',
' → logprob: -12.379410743713379

Token 342: ' numeral' (ID: 191907)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.4160432517528534
    2. 'numer' → logprob: -2.041043281555176
    3. ' data' → logprob: -2.541043281555176
    4. 'base' → logprob: -3.166043281555176
    5. ' base' → logprob: -3.791043281555176
    6. ')' → logprob: -3.916043281555176
    7. 'datasets' → logprob: -4.416043281555176
    8. 'dataset' → logprob: -5.166043281555176
    9. 'negative' → logprob: -5.666043281555176
    10. ' datasets' → logprob: -5.791043281555176

Token 343: '_system' (ID: 39303)
  Prédit: 'System'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -0.14153991639614105
    2. '_system' → logprob: -2.1415398120880127
    3. 'system' → logprob: -4.266540050506592
    4. 'Systems' → logprob: -8.016539573669434
    5. 'systems' → logprob: -9.266539573669434
    6. ' system' → logprob: -10.891539573669434
    7. 's' → logprob: -11.266539573669434
    8. 'ssystem' → logprob: -11.391539573669434
    9. ' System' → logprob: -12.641539573669434
    10. 'ystem' → logprob: -14.141539573669434

Token 344: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10063696652650833
    2. '):' → logprob: -2.3506369590759277
    3. '):
' → logprob: -8.350637435913086
    4. ' :' → logprob: -9.350637435913086
    5. ' ):' → logprob: -9.725637435913086
    6. 'system' → logprob: -10.850637435913086
    7. ')' → logprob: -10.975637435913086
    8. '=' → logprob: -13.100637435913086
    9. ',' → logprob: -13.350637435913086
    10. ' system' → logprob: -13.475637435913086

Token 345: ' Numer' (ID: 60273)
  Prédit: 'Numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Numer' → logprob: -0.23699186742305756
    2. 'Negative' → logprob: -2.2369918823242188
    3. ' Numer' → logprob: -2.3619918823242188
    4. ' Negative' → logprob: -4.611991882324219
    5. ' Numerical' → logprob: -10.361991882324219
    6. ' numer' → logprob: -11.736991882324219
    7. 'Numeric' → logprob: -12.236991882324219
    8. 'Neg' → logprob: -12.486991882324219
    9. ')' → logprob: -12.486991882324219
    10. 'Number' → logprob: -13.486991882324219

Token 346: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -4.320199877838604e-07
    2. 'a' → logprob: -15.75
    3. 'als' → logprob: -15.875
    4. 'System' → logprob: -16.0
    5. 'system' → logprob: -19.375
    6. 'ol' → logprob: -19.875
    7. 'el' → logprob: -20.125
    8. 'Al' → logprob: -20.5
    9. 'class' → logprob: -20.5
    10. 'AL' → logprob: -20.625

Token 347: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -8.180258191714529e-06
    2. ')' → logprob: -12.750008583068848
    3. 'ystem' → logprob: -13.125008583068848
    4. ' System' → logprob: -13.750008583068848
    5. 'Systems' → logprob: -13.750008583068848
    6. '_system' → logprob: -14.625008583068848
    7. 'system' → logprob: -15.000008583068848
    8. 'Numer' → logprob: -15.875008583068848
    9. ' system' → logprob: -16.12500762939453
    10. 'ssystem' → logprob: -17.25000762939453

Token 348: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006405431777238846
    2. '):
' → logprob: -5.131405353546143
    3. ')' → logprob: -7.756405353546143
    4. ',' → logprob: -10.1314058303833
    5. ':' → logprob: -12.6314058303833
    6. '):
' → logprob: -12.6314058303833
    7. '   ' → logprob: -13.5064058303833
    8. ' ):' → logprob: -14.8814058303833
    9. '):

' → logprob: -15.0064058303833
    10. ' ' → logprob: -15.7564058303833

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004942946252413094
    2. 'self' → logprob: -8.000494003295898
    3. 'def' → logprob: -9.500494003295898
    4. '   ' → logprob: -9.750494003295898
    5. ' self' → logprob: -10.875494003295898
    6. ',' → logprob: -13.000494003295898
    7. ' def' → logprob: -14.000494003295898
    8. ')' → logprob: -14.125494003295898
    9. ':' → logprob: -14.250494003295898
    10. '<|end|>' → logprob: -14.625494003295898

Token 350: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.017690123990178108
    2. ' self' → logprob: -4.517690181732178
    3. '       ' → logprob: -5.017690181732178
    4. '   ' → logprob: -14.76768970489502
    5. '	self' → logprob: -15.76768970489502
    6. ' ' → logprob: -17.517690658569336
    7. ' ' → logprob: -18.392690658569336
    8. '(self' → logprob: -18.892690658569336
    9. 'def' → logprob: -19.017690658569336
    10. '[self' → logprob: -19.142690658569336

Token 351: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0007375618442893028
    2. '.' → logprob: -7.25073766708374
    3. '.num' → logprob: -11.625737190246582
    4. 'numer' → logprob: -11.625737190246582
    5. '.nom' → logprob: -12.000737190246582
    6. '.nu' → logprob: -13.875737190246582
    7. '.numeric' → logprob: -14.250737190246582
    8. '._' → logprob: -14.375737190246582
    9. ' .' → logprob: -14.500737190246582
    10. '.nr' → logprob: -15.875737190246582

Token 352: 'umer' (ID: 3986)
  Prédit: 'umer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umer' → logprob: -0.00011367550177965313
    2. 'um' → logprob: -9.125113487243652
    3. 'umeric' → logprob: -13.375113487243652
    4. '   ' → logprob: -14.000113487243652
    5. 'ume' → logprob: -14.250113487243652
    6. '_' → logprob: -14.875113487243652
    7. 'umerator' → logprob: -15.000113487243652
    8. 'eral' → logprob: -15.375113487243652
    9. 'eur' → logprob: -16.12511444091797
    10. 'umber' → logprob: -16.37511444091797

Token 353: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0001158211671281606
    2. '_system' → logprob: -9.125115394592285
    3. 'system' → logprob: -12.125115394592285
    4. 'eral' → logprob: -15.125115394592285
    5. 'System' → logprob: -15.500115394592285
    6. 'ral' → logprob: -15.625115394592285
    7. '   ' → logprob: -16.1251163482666
    8. 'er' → logprob: -16.2501163482666
    9. 'r' → logprob: -16.5001163482666
    10. 'ol' → logprob: -16.6251163482666

Token 354: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -1.2664456789934775e-06
    2. 'system' → logprob: -13.875000953674316
    3. '_' → logprob: -16.125001907348633
    4. 'System' → logprob: -16.250001907348633
    5. '_s' → logprob: -18.250001907348633
    6. '_SYSTEM' → logprob: -18.250001907348633
    7. ' _' → logprob: -18.625001907348633
    8. ' system' → logprob: -19.000001907348633
    9. '_System' → logprob: -19.750001907348633
    10. '_space' → logprob: -19.750001907348633

Token 355: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474087119102478
    2. ' =' → logprob: -0.974087119102478
    3. '=n' → logprob: -12.34908676147461
    4. '.' → logprob: -13.59908676147461
    5. 's' → logprob: -13.84908676147461
    6. 'system' → logprob: -14.34908676147461
    7. '_system' → logprob: -14.47408676147461
    8. 'space' → logprob: -14.72408676147461
    9. ' ' → logprob: -14.84908676147461
    10. '_' → logprob: -15.47408676147461

Token 356: ' numeral' (ID: 191907)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.02057785540819168
    2. ' numeral' → logprob: -3.895577907562256
    3. 'n' → logprob: -10.895577430725098
    4. 'num' → logprob: -11.645577430725098
    5. ' numer' → logprob: -12.145577430725098
    6. 'Numer' → logprob: -14.395577430725098
    7. '_n' → logprob: -14.895577430725098
    8. 'numeric' → logprob: -14.895577430725098
    9. ' numerator' → logprob: -14.895577430725098
    10. 'enumer' → logprob: -15.395577430725098

Token 357: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -1.0325924449716695e-05
    2. 'system' → logprob: -11.50001049041748
    3. 'System' → logprob: -15.62501049041748
    4. 'ystem' → logprob: -18.625009536743164
    5. 'ssystem' → logprob: -18.875009536743164
    6. ' system' → logprob: -19.000009536743164
    7. '_SYSTEM' → logprob: -19.125009536743164
    8. 'SYSTEM' → logprob: -20.375009536743164
    9. '_System' → logprob: -22.250009536743164
    10. '系统' → logprob: -22.625009536743164

Token 358: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04669547080993652
    2. '   ' → logprob: -3.2966954708099365
    3. '    
' → logprob: -4.921695709228516
    4. 'def' → logprob: -7.546695709228516
    5. '<|end|>' → logprob: -7.921695709228516
    6. '

' → logprob: -8.296695709228516
    7. '  
' → logprob: -9.421695709228516
    8. '        
' → logprob: -9.671695709228516
    9. '<|end|>' → logprob: -11.421695709228516
    10. ' 
' → logprob: -11.546695709228516

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0582260824739933
    2. 'def' → logprob: -2.9332261085510254
    3. '
' → logprob: -5.933226108551025
    4. ' def' → logprob: -7.558226108551025
    5. '    
' → logprob: -8.808225631713867
    6. '```' → logprob: -12.058225631713867
    7. '<|end|>' → logprob: -12.433225631713867
    8. '        
' → logprob: -13.058225631713867
    9. '	def' → logprob: -13.058225631713867
    10. '<|end|>' → logprob: -14.433225631713867

Token 360: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.339278580620885e-06
    2. ' def' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.875001907348633
    4. 'from' → logprob: -19.875001907348633
    5. '
' → logprob: -21.000001907348633
    6. ' ' → logprob: -21.375001907348633
    7. 'class' → logprob: -21.500001907348633
    8. 'async' → logprob: -22.125001907348633
    9. '    
' → logprob: -22.500001907348633
    10. '```' → logprob: -22.875001907348633

Token 361: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.011227252893149853
    2. ' process' → logprob: -4.511227130889893
    3. 'encode' → logprob: -9.13622760772705
    4. 'decode' → logprob: -10.13622760772705
    5. 'parse' → logprob: -11.01122760772705
    6. 'generate' → logprob: -12.38622760772705
    7. 'read' → logprob: -13.76122760772705
    8. 'load' → logprob: -13.88622760772705
    9. 'convert' → logprob: -13.88622760772705
    10. ' encode' → logprob: -14.01122760772705

Token 362: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00635532708838582
    2. '(' → logprob: -5.131355285644531
    3. '_data' → logprob: -8.006355285644531
    4. '_numbers' → logprob: -10.506355285644531
    5. '(data' → logprob: -10.881355285644531
    6. 'self' → logprob: -11.756355285644531
    7. ' (' → logprob: -11.756355285644531
    8. 'data' → logprob: -12.381355285644531
    9. '_line' → logprob: -12.381355285644531
    10. '(
' → logprob: -12.506355285644531

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009910109220072627
    2. '_data' → logprob: -7.625990867614746
    3. ' ,' → logprob: -9.000990867614746
    4. 'self' → logprob: -9.000990867614746
    5. 'data' → logprob: -9.875990867614746
    6. ')' → logprob: -10.375990867614746
    7. '_batch' → logprob: -10.375990867614746
    8. ',data' → logprob: -10.375990867614746
    9. '_list' → logprob: -10.625990867614746
    10. '_,' → logprob: -10.875990867614746

Token 364: ' inputs' (ID: 21963)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.15696954727172852
    2. 'self' → logprob: -2.6569695472717285
    3. ' data' → logprob: -3.0319695472717285
    4. 'numbers' → logprob: -4.5319695472717285
    5. 'lines' → logprob: -4.9069695472717285
    6. ' lines' → logprob: -6.2819695472717285
    7. ' self' → logprob: -6.2819695472717285
    8. 'input' → logprob: -6.6569695472717285
    9. 'inputs' → logprob: -7.4069695472717285
    10. 'dataset' → logprob: -7.5319695472717285

Token 365: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0683535037969705e-05
    2. ')' → logprob: -12.00001049041748
    3. 'self' → logprob: -13.50001049041748
    4. '   ' → logprob: -13.62501049041748
    5. ',' → logprob: -14.12501049041748
    6. '```' → logprob: -15.12501049041748
    7. '):' → logprob: -15.25001049041748
    8. '       ' → logprob: -15.37501049041748
    9. ' :' → logprob: -16.125011444091797
    10. '           ' → logprob: -16.375011444091797

Token 366: ' Iterator' (ID: 41994)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.11439787596464157
    2. 'Iterator' → logprob: -2.2393977642059326
    3. ' List' → logprob: -7.489398002624512
    4. 'self' → logprob: -7.614398002624512
    5. 'Iterable' → logprob: -8.614398002624512
    6. ' Iterator' → logprob: -8.739398002624512
    7. ')' → logprob: -8.989398002624512
    8. 'str' → logprob: -10.864398002624512
    9. 'list' → logprob: -10.989398002624512
    10. '   ' → logprob: -11.739398002624512

Token 367: '[int' (ID: 40124)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.011056780815124512
    2. '[int' → logprob: -4.511056900024414
    3. '[' → logprob: -11.761056900024414
    4. ')' → logprob: -14.261056900024414
    5. '[List' → logprob: -15.136056900024414
    6. '[
' → logprob: -17.136056900024414
    7. '[[' → logprob: -17.511056900024414
    8. 'str' → logprob: -17.636056900024414
    9. '```' → logprob: -18.386056900024414
    10. ' [' → logprob: -18.511056900024414

Token 368: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4290269613265991
    2. ')' → logprob: -1.0540269613265991
    3. ']' → logprob: -9.05402660369873
    4. ']):
' → logprob: -10.30402660369873
    5. '>)' → logprob: -10.30402660369873
    6. ',' → logprob: -10.55402660369873
    7. ' ])' → logprob: -10.67902660369873
    8. '))' → logprob: -11.17902660369873
    9. ' )' → logprob: -11.17902660369873
    10. '):
' → logprob: -11.30402660369873

Token 369: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.33054864406585693
    2. ' ->' → logprob: -1.330548644065857
    3. ')' → logprob: -4.3305487632751465
    4. ':' → logprob: -6.3305487632751465
    5. '   ' → logprob: -6.4555487632751465
    6. ')->' → logprob: -7.9555487632751465
    7. '       ' → logprob: -9.330548286437988
    8. ':
' → logprob: -9.455548286437988
    9. '(' → logprob: -10.580548286437988
    10. '()' → logprob: -11.080548286437988

Token 370: ' Iterator' (ID: 41994)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.01930401287972927
    2. ' List' → logprob: -4.269303798675537
    3. 'Iterator' → logprob: -5.394303798675537
    4. 'str' → logprob: -8.144304275512695
    5. ' Iterator' → logprob: -8.394304275512695
    6. 'list' → logprob: -10.144304275512695
    7. ' str' → logprob: -11.144304275512695
    8. '[List' → logprob: -11.894304275512695
    9. 'None' → logprob: -13.019304275512695
    10. '   ' → logprob: -13.769304275512695

Token 371: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -4.596781946020201e-05
    2. '[int' → logprob: -10.000045776367188
    3. '[' → logprob: -14.750045776367188
    4. 'str' → logprob: -16.250045776367188
    5. '[
' → logprob: -18.625045776367188
    6. '[List' → logprob: -18.750045776367188
    7. ' [' → logprob: -18.875045776367188
    8. '(str' → logprob: -19.125045776367188
    9. '```' → logprob: -20.375045776367188
    10. '   ' → logprob: -20.750045776367188

Token 372: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07982555031776428
    2. '):
' → logprob: -2.5798256397247314
    3. ')' → logprob: -7.204825401306152
    4. '):
' → logprob: -9.079825401306152
    5. '   ' → logprob: -9.704825401306152
    6. ':' → logprob: -11.704825401306152
    7. '       ' → logprob: -12.829825401306152
    8. '):

' → logprob: -13.204825401306152
    9. ']:' → logprob: -13.454825401306152
    10. ' ):' → logprob: -13.954825401306152

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.314625690924004e-05
    2. ' for' → logprob: -9.750073432922363
    3. '   ' → logprob: -12.000073432922363
    4. ':' → logprob: -13.000073432922363
    5. '```' → logprob: -13.000073432922363
    6. 'for' → logprob: -14.250073432922363
    7. '        
' → logprob: -14.375073432922363
    8. ',' → logprob: -14.750073432922363
    9. '      ' → logprob: -15.000073432922363
    10. '           ' → logprob: -15.000073432922363

Token 374: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8693887591362
    2. ' for' → logprob: -1.1193888187408447
    3. 'for' (adapté à ' for') → logprob: -1.3693888187408447
    4. '   ' → logprob: -10.619388580322266
    5. ' ' → logprob: -11.619388580322266
    6. 'yield' → logprob: -12.869388580322266
    7. '    ' → logprob: -13.119388580322266
    8. '        
' → logprob: -13.244388580322266
    9. '```' → logprob: -13.369388580322266
    10. '           ' → logprob: -13.494388580322266

Token 375: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.000631543982308358
    2. 'number' → logprob: -7.500631332397461
    3. ' num' → logprob: -9.500631332397461
    4. 'value' → logprob: -12.750631332397461
    5. ' number' → logprob: -14.375631332397461
    6. 'input' → logprob: -16.12563133239746
    7. 'n' → logprob: -16.25063133239746
    8. '   ' → logprob: -17.50063133239746
    9. 'x' → logprob: -18.00063133239746
    10. 'item' → logprob: -18.12563133239746

Token 376: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024861192796379328
    2. 'in' → logprob: -6.002486228942871
    3. ' ' → logprob: -12.252486228942871
    4. ')' → logprob: -13.377486228942871
    5. ',' → logprob: -13.502486228942871
    6. '   ' → logprob: -13.877486228942871
    7. '_in' → logprob: -14.752486228942871
    8. '	in' → logprob: -14.877486228942871
    9. ':' → logprob: -15.627486228942871
    10. ' ' → logprob: -15.877486228942871

Token 377: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.02975129522383213
    2. ' inputs' → logprob: -3.5297513008117676
    3. 'self' → logprob: -15.27975082397461
    4. '(inputs' → logprob: -15.77975082397461
    5. 'input' → logprob: -15.90475082397461
    6. '.inputs' → logprob: -16.02975082397461
    7. '   ' → logprob: -16.90475082397461
    8. '       ' → logprob: -17.27975082397461
    9. ' self' → logprob: -17.65475082397461
    10. 'outputs' → logprob: -17.90475082397461

Token 378: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3532803952693939
    2. ':
' → logprob: -1.2282804250717163
    3. '           ' → logprob: -5.353280544281006
    4. '):
' → logprob: -10.353280067443848
    5. '       ' → logprob: -10.728280067443848
    6. ':
' → logprob: -11.353280067443848
    7. ',' → logprob: -11.603280067443848
    8. 'yield' → logprob: -11.853280067443848
    9. '):' → logprob: -13.228280067443848
    10. ':

' → logprob: -13.478280067443848

Token 379: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024900231510400772
    2. ' yield' → logprob: -4.399900436401367
    3. 'yield' → logprob: -4.399900436401367
    4. '	yield' → logprob: -10.649900436401367
    5. '```' → logprob: -11.774900436401367
    6. 'Yield' → logprob: -13.649900436401367
    7. '          ' → logprob: -14.149900436401367
    8. '            
' → logprob: -14.274900436401367
    9. '	       ' → logprob: -14.399900436401367
    10. '`' → logprob: -15.149900436401367

Token 380: ' if' (ID: 538)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.01823984831571579
    2. ' yield' → logprob: -4.018239974975586
    3. '           ' → logprob: -9.518239974975586
    4. '	yield' → logprob: -11.018239974975586
    5. 'result' → logprob: -17.518239974975586
    6. 'y' → logprob: -17.893239974975586
    7. 'Yield' → logprob: -18.143239974975586
    8. '               ' → logprob: -19.518239974975586
    9. 'encoded' → logprob: -19.893239974975586
    10. '```' → logprob: -20.143239974975586

Token 381: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.006770553067326546
    2. ' num' → logprob: -5.006770610809326
    3. 'abs' → logprob: -10.256770133972168
    4. 'self' → logprob: -11.506770133972168
    5. '(num' → logprob: -12.756770133972168
    6. '-' → logprob: -13.256770133972168
    7. '$num' → logprob: -14.256770133972168
    8. '	num' → logprob: -14.381770133972168
    9. '=num' → logprob: -14.631770133972168
    10. '<num' → logprob: -14.631770133972168

Token 382: ' ==' (ID: 951)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.8218075037002563
    2. ' <' → logprob: -1.0718075037002563
    3. ' >=' → logprob: -2.196807384490967
    4. ' ==' → logprob: -2.821807384490967
    5. '%' → logprob: -3.321807384490967
    6. ' >' → logprob: -5.946807384490967
    7. ' ' → logprob: -6.321807384490967
    8. ' <=' → logprob: -6.446807384490967
    9. '<' → logprob: -6.571807384490967
    10. '<|end|>' → logprob: -6.821807384490967

Token 383: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005715708248317242
    2. ' ' → logprob: -5.380715847015381
    3. '-' → logprob: -7.005715847015381
    4. '42' → logprob: -9.130715370178223
    5. '999' → logprob: -10.630715370178223
    6. ' -' → logprob: -11.005715370178223
    7. '1' → logprob: -11.380715370178223
    8. '123' → logprob: -12.255715370178223
    9. '100' → logprob: -12.630715370178223
    10. 'None' → logprob: -13.130715370178223

Token 384: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000407316314522177
    2. '-' → logprob: -8.500407218933105
    3. ' ' → logprob: -9.250407218933105
    4. '999' → logprob: -10.000407218933105
    5. '42' → logprob: -10.625407218933105
    6. '1' → logprob: -11.750407218933105
    7. '100' → logprob: -11.875407218933105
    8. '123' → logprob: -12.250407218933105
    9. 'None' → logprob: -12.750407218933105
    10. '666' → logprob: -13.625407218933105

Token 385: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03913995623588562
    2. ':' → logprob: -3.289139986038208
    3. '           ' → logprob: -7.289139747619629
    4. '               ' → logprob: -7.914139747619629
    5. ':
' → logprob: -10.414139747619629
    6. ':return' → logprob: -11.789139747619629
    7. ' :
' → logprob: -12.164139747619629
    8. ':

' → logprob: -13.539139747619629
    9. '):
' → logprob: -13.914139747619629
    10. '   ' → logprob: -14.164139747619629

Token 386: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006682366947643459
    2. '           ' → logprob: -7.500668048858643
    3. ':' → logprob: -10.0006685256958
    4. ':
' → logprob: -11.0006685256958
    5. '                   ' → logprob: -11.7506685256958
    6. ',' → logprob: -12.0006685256958
    7. ' break' → logprob: -12.1256685256958
    8. '              ' → logprob: -12.2506685256958
    9. '                ' → logprob: -12.5006685256958
    10. '	           ' → logprob: -12.5006685256958

Token 387: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.8225025534629822
    2. 'return' → logprob: -1.322502613067627
    3. ' break' → logprob: -1.822502613067627
    4. ' return' → logprob: -2.072502613067627
    5. '               ' → logprob: -5.072502613067627
    6. '                   ' → logprob: -7.947502613067627
    7. '           ' → logprob: -9.572502136230469
    8. '	break' → logprob: -11.947502136230469
    9. 'yield' → logprob: -12.697502136230469
    10. '   ' → logprob: -12.822502136230469

Token 388: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1451229751110077
    2. '
' → logprob: -2.02012300491333
    3. '            
' → logprob: -6.39512300491333
    4. ' 
' → logprob: -8.770122528076172
    5. ' yield' → logprob: -8.895122528076172
    6. '               ' → logprob: -8.895122528076172
    7. 'yield' → logprob: -9.145122528076172
    8. '  
' → logprob: -9.270122528076172
    9. '    
' → logprob: -9.645122528076172
    10. '\n' → logprob: -10.895122528076172

Token 389: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015597355086356401
    2. ' yield' → logprob: -7.001559734344482
    3. 'yield' → logprob: -7.501559734344482
    4. '            
' → logprob: -9.75156021118164
    5. '
' → logprob: -10.50156021118164
    6. '	yield' → logprob: -13.12656021118164
    7. '               ' → logprob: -13.37656021118164
    8. '       ' → logprob: -13.50156021118164
    9. ' yields' → logprob: -14.00156021118164
    10. '		' → logprob: -14.25156021118164

Token 390: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.09781542420387268
    2. '           ' → logprob: -2.84781551361084
    3. ' yield' → logprob: -3.34781551361084
    4. '	yield' → logprob: -10.09781551361084
    5. '
' → logprob: -12.47281551361084
    6. 'encoded' → logprob: -13.59781551361084
    7. 'result' → logprob: -13.72281551361084
    8. '          ' → logprob: -13.72281551361084
    9. 'output' → logprob: -14.22281551361084
    10. '            
' → logprob: -14.34781551361084

Token 391: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015023599844425917
    2. ' self' → logprob: -6.501502513885498
    3. '(self' → logprob: -17.751502990722656
    4. '`' → logprob: -18.251502990722656
    5. '[self' → logprob: -18.751502990722656
    6. '           ' → logprob: -19.251502990722656
    7. ' ' → logprob: -19.376502990722656
    8. '=self' → logprob: -20.126502990722656
    9. '```' → logprob: -20.626502990722656
    10. '	self' → logprob: -20.876502990722656

Token 392: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0001601539261173457
    2. '.' → logprob: -8.750160217285156
    3. ' .' → logprob: -14.250160217285156
    4. '.num' → logprob: -15.000160217285156
    5. 'numer' → logprob: -15.125160217285156
    6. 'Numer' → logprob: -16.375160217285156
    7. '```' → logprob: -16.625160217285156
    8. '.s' → logprob: -17.500160217285156
    9. '`.' → logprob: -17.875160217285156
    10. '.nom' → logprob: -18.000160217285156

Token 393: 'umer' (ID: 3986)
  Prédit: 'umer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umer' → logprob: -2.629921436891891e-05
    2. 'um' → logprob: -10.75002670288086
    3. 'umerator' → logprob: -13.75002670288086
    4. 'umeric' → logprob: -14.00002670288086
    5. '   ' → logprob: -14.37502670288086
    6. 'ume' → logprob: -14.75002670288086
    7. 'numer' → logprob: -14.87502670288086
    8. 'umber' → logprob: -14.87502670288086
    9. '(self' → logprob: -15.87502670288086
    10. 'mer' → logprob: -16.00002670288086

Token 394: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.001638885005377233
    2. 'ral' → logprob: -6.751638889312744
    3. 'r' → logprob: -8.501638412475586
    4. '_system' → logprob: -8.876638412475586
    5. 'system' → logprob: -9.626638412475586
    6. 'System' → logprob: -11.001638412475586
    7. '```' → logprob: -12.501638412475586
    8. 'ro' → logprob: -12.626638412475586
    9. 'a' → logprob: -12.751638412475586
    10. '   ' → logprob: -12.876638412475586

Token 395: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -0.00013917774776928127
    2. 'system' → logprob: -9.250139236450195
    3. 'System' → logprob: -10.500139236450195
    4. 'al' → logprob: -11.125139236450195
    5. ' system' → logprob: -15.250139236450195
    6. 'ssystem' → logprob: -16.125139236450195
    7. 'ystem' → logprob: -16.250139236450195
    8. '-system' → logprob: -16.375139236450195
    9. '_SYSTEM' → logprob: -17.000139236450195
    10. ' System' → logprob: -17.625139236450195

Token 396: '.encode' (ID: 31812)
  Prédit: '.encode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.encode' → logprob: -9.372294698550832e-06
    2. '.' → logprob: -11.750009536743164
    3. ' .' → logprob: -14.000009536743164
    4. '.decode' → logprob: -14.625009536743164
    5. '.Encode' → logprob: -16.125009536743164
    6. '.serialize' → logprob: -18.250009536743164
    7. 'encode' → logprob: -18.875009536743164
    8. '.convert' → logprob: -19.125009536743164
    9. '.encoder' → logprob: -19.500009536743164
    10. '.write' → logprob: -19.750009536743164

Token 397: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0002625278721097857
    2. '(' → logprob: -8.250262260437012
    3. ' (' → logprob: -14.750262260437012
    4. '(number' → logprob: -15.125262260437012
    5. '(nums' → logprob: -15.625262260437012
    6. '(
' → logprob: -15.750262260437012
    7. ',num' → logprob: -16.250263214111328
    8. '((' → logprob: -16.375263214111328
    9. 'num' → logprob: -16.625263214111328
    10. '(n' → logprob: -16.875263214111328

Token 398: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -14.125001907348633
    3. ' )' → logprob: -14.625001907348633
    4. '))' → logprob: -16.250001907348633
    5. ')`' → logprob: -17.750001907348633
    6. '())' → logprob: -17.875001907348633
    7. ')}' → logprob: -18.250001907348633
    8. '),' → logprob: -18.500001907348633
    9. '       ' → logprob: -19.000001907348633
    10. '()' → logprob: -19.125001907348633

Token 399: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 400: ' Input' (ID: 10090)
  Prédit: ' Negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Negative' → logprob: -0.8350222706794739
    2. 'Negative' → logprob: -1.960022211074829
    3. ' Data' → logprob: -2.210022211074829
    4. 'Data' → logprob: -2.335022211074829
    5. 'list' → logprob: -3.210022211074829
    6. '__' → logprob: -3.585022211074829
    7. ' Test' → logprob: -3.710022211074829
    8. ' Solution' → logprob: -3.710022211074829
    9. 'Test' → logprob: -4.085022449493408
    10. 'List' → logprob: -4.085022449493408

Token 401: 'Reader' (ID: 7171)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.1129019558429718
    2. 'Generator' → logprob: -2.8629019260406494
    3. 'Provider' → logprob: -4.4879021644592285
    4. 'Reader' → logprob: -4.6129021644592285
    5. 'Processor' → logprob: -4.6129021644592285
    6. 'Handler' → logprob: -4.9879021644592285
    7. 'Data' → logprob: -5.1129021644592285
    8. 'Stream' → logprob: -6.1129021644592285
    9. 'Output' → logprob: -7.3629021644592285
    10. ':' → logprob: -7.9879021644592285

Token 402: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04871794953942299
    2. ':
' → logprob: -3.048717975616455
    3. '(' → logprob: -9.048717498779297
    4. ':

' → logprob: -12.173717498779297
    5. '<|end|>' → logprob: -12.423717498779297
    6. '(iterator' → logprob: -14.173717498779297
    7. '```' → logprob: -14.548717498779297
    8. ',' → logprob: -14.923717498779297
    9. '	Iterator' → logprob: -15.048717498779297
    10. '(I' → logprob: -15.548717498779297

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003368926409166306
    2. ' def' → logprob: -8.125336647033691
    3. 'def' → logprob: -10.125336647033691
    4. 'from' → logprob: -15.625336647033691
    5. '	def' → logprob: -16.000337600708008
    6. 'import' → logprob: -16.000337600708008
    7. '):
' → logprob: -16.375337600708008
    8. '<|end|>' → logprob: -16.875337600708008
    9. '    
' → logprob: -17.000337600708008
    10. ':' → logprob: -17.000337600708008

Token 404: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07892493158578873
    2. ' def' → logprob: -2.5789248943328857
    3. '@' → logprob: -10.953925132751465
    4. '   ' → logprob: -11.078925132751465
    5. 'import' → logprob: -13.828925132751465
    6. ' @' → logprob: -14.203925132751465
    7. 'from' → logprob: -15.078925132751465
    8. 'class' → logprob: -16.57892417907715
    9. '	def' → logprob: -16.70392417907715
    10. ' ' → logprob: -18.07892417907715

Token 405: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.41546493768692017
    2. '__' → logprob: -1.2904648780822754
    3. 'Iterator' → logprob: -3.9154648780822754
    4. '```' → logprob: -4.290464878082275
    5. 'object' → logprob: -4.540464878082275
    6. ' __' → logprob: -4.790464878082275
    7. 'def' → logprob: -5.415464878082275
    8. 'iter' → logprob: -5.665464878082275
    9. 'classmethod' → logprob: -6.665464878082275
    10. ' Iterator' → logprob: -7.165464878082275

Token 406: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.005239326041191816
    2. 'iter' → logprob: -5.255239486694336
    3. 'next' → logprob: -13.005239486694336
    4. 'nit' → logprob: -13.505239486694336
    5. ' init' → logprob: -14.130239486694336
    6. 'it' → logprob: -14.755239486694336
    7. '```' → logprob: -14.880239486694336
    8. 'import' → logprob: -14.880239486694336
    9. '	init' → logprob: -17.505239486694336
    10. '   ' → logprob: -17.755239486694336

Token 407: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0625009834766388
    2. '__(' → logprob: -2.9375009536743164
    3. '(' → logprob: -5.062500953674316
    4. 'self' → logprob: -7.437500953674316
    5. ' (' → logprob: -8.562500953674316
    6. '__(
' → logprob: -8.812500953674316
    7. '_(' → logprob: -9.062500953674316
    8. '<|end|>' → logprob: -9.187500953674316
    9. '<>(' → logprob: -10.562500953674316
    10. '(
' → logprob: -10.812500953674316

Token 408: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.723352049040841e-06
    2. ')' → logprob: -12.500004768371582
    3. ' self' → logprob: -14.125004768371582
    4. '):
' → logprob: -16.125003814697266
    5. '
' → logprob: -16.875003814697266
    6. '   ' → logprob: -17.250003814697266
    7. '       ' → logprob: -18.500003814697266
    8. '(self' → logprob: -18.625003814697266
    9. '),' → logprob: -18.875003814697266
    10. '	self' → logprob: -19.625003814697266

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007425126153975725
    2. 'self' → logprob: -5.382425308227539
    3. '):
' → logprob: -6.382425308227539
    4. '   ' → logprob: -7.257425308227539
    5. '):' → logprob: -8.757425308227539
    6. '(self' → logprob: -9.382425308227539
    7. ')' → logprob: -9.382425308227539
    8. ',self' → logprob: -9.882425308227539
    9. '       ' → logprob: -10.882425308227539
    10. ' self' → logprob: -13.507425308227539

Token 410: ' source' (ID: 4256)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.9182175397872925
    2. 'source' → logprob: -1.1682175397872925
    3. 'input' → logprob: -1.6682175397872925
    4. 'lines' → logprob: -2.793217658996582
    5. 'data' → logprob: -3.793217658996582
    6. 'stream' → logprob: -5.543217658996582
    7. 'file' → logprob: -5.543217658996582
    8. 'iterator' → logprob: -5.668217658996582
    9. ' inputs' → logprob: -6.543217658996582
    10. ' lines' → logprob: -6.668217658996582

Token 411: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.551271915435791
    2. '):' → logprob: -0.926271915435791
    3. '):
' → logprob: -3.676271915435791
    4. ')' → logprob: -6.051271915435791
    5. ',' → logprob: -11.051271438598633
    6. '_iterator' → logprob: -11.176271438598633
    7. '   ' → logprob: -11.426271438598633
    8. '):
' → logprob: -11.676271438598633
    9. '):

' → logprob: -11.926271438598633
    10. ' ):' → logprob: -12.051271438598633

Token 412: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.039103150367736816
    2. 'List' → logprob: -3.7891030311584473
    3. 'Iterable' → logprob: -4.664103031158447
    4. ' Iterator' → logprob: -6.164103031158447
    5. 'list' → logprob: -6.289103031158447
    6. 'iter' → logprob: -7.039103031158447
    7. 'Callable' → logprob: -7.039103031158447
    8. 'str' → logprob: -8.414103507995605
    9. ')' → logprob: -9.039103507995605
    10. '	Iterator' → logprob: -9.914103507995605

Token 413: '[str' (ID: 33439)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.006737984716892242
    2. '[str' → logprob: -5.006738185882568
    3. 'int' → logprob: -10.75673770904541
    4. ')' → logprob: -15.00673770904541
    5. '):
' → logprob: -15.25673770904541
    6. 'str' → logprob: -15.38173770904541
    7. '):' → logprob: -15.50673770904541
    8. '<int' → logprob: -16.006738662719727
    9. '=int' → logprob: -17.131738662719727
    10. ':int' → logprob: -17.631738662719727

Token 414: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.4908110499382019
    2. ']):' → logprob: -1.7408111095428467
    3. '):
' → logprob: -2.2408111095428467
    4. ')' → logprob: -2.8658111095428467
    5. '):' → logprob: -3.1158111095428467
    6. '])' → logprob: -5.865810871124268
    7. ']' → logprob: -6.490810871124268
    8. '   ' → logprob: -8.615811347961426
    9. '       ' → logprob: -9.365811347961426
    10. '']):
' → logprob: -9.490811347961426

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.76759916334413e-05
    2. 'self' → logprob: -9.750077247619629
    3. ' self' → logprob: -11.125077247619629
    4. '   ' → logprob: -13.500077247619629
    5. ',' → logprob: -13.625077247619629
    6. '<|end|>' → logprob: -14.375077247619629
    7. ')' → logprob: -15.375077247619629
    8. '):
' → logprob: -15.750077247619629
    9. '      ' → logprob: -16.250078201293945
    10. 'def' → logprob: -16.250078201293945

Token 416: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -5.085517113911919e-05
    2. ' self' → logprob: -10.37505054473877
    3. '       ' → logprob: -11.12505054473877
    4. 'source' → logprob: -12.25005054473877
    5. '   ' → logprob: -18.000051498413086
    6. '	self' → logprob: -18.250051498413086
    7. 'this' → logprob: -19.875051498413086
    8. '[self' → logprob: -20.375051498413086
    9. '(self' → logprob: -20.625051498413086
    10. '_source' → logprob: -20.750051498413086

Token 417: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -3.857719275401905e-05
    2. '._' → logprob: -10.375038146972656
    3. 'source' → logprob: -12.000038146972656
    4. '.iterator' → logprob: -14.250038146972656
    5. '.lines' → logprob: -15.375038146972656
    6. '	source' → logprob: -15.875038146972656
    7. ' source' → logprob: -16.625038146972656
    8. '_source' → logprob: -17.500038146972656
    9. '.buffer' → logprob: -18.000038146972656
    10. '.' → logprob: -18.125038146972656

Token 418: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0056201620027422905
    2. ' =' → logprob: -5.255620002746582
    3. '_iter' → logprob: -8.755620002746582
    4. ':' → logprob: -8.880620002746582
    5. '   ' → logprob: -10.005620002746582
    6. '_iterator' → logprob: -10.505620002746582
    7. 'iter' → logprob: -12.880620002746582
    8. '       ' → logprob: -12.880620002746582
    9. 'iterator' → logprob: -13.130620002746582
    10. '_source' → logprob: -13.380620002746582

Token 419: ' source' (ID: 4256)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'source' → logprob: -1.2233183042553719e-05
    2. ' source' → logprob: -11.750012397766113
    3. 'iter' → logprob: -12.500012397766113
    4. '(source' → logprob: -15.125012397766113
    5. '	source' → logprob: -15.625012397766113
    6. '   ' → logprob: -17.250011444091797
    7. '[source' → logprob: -18.000011444091797
    8. '
' → logprob: -18.375011444091797
    9. 'self' → logprob: -18.500011444091797
    10. ' ' → logprob: -19.125011444091797

Token 420: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6362607479095459
    2. '   ' → logprob: -0.8862607479095459
    3. 'def' → logprob: -3.011260747909546
    4. '    
' → logprob: -5.136260986328125
    5. '<|end|>' → logprob: -6.261260986328125
    6. '

' → logprob: -7.261260986328125
    7. ' def' → logprob: -7.386260986328125
    8. '        
' → logprob: -10.261260986328125
    9. '  
' → logprob: -10.386260986328125
    10. ' 
' → logprob: -10.636260986328125

Token 421: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11797024309635162
    2. '   ' → logprob: -2.3679702281951904
    3. ' def' → logprob: -4.3679704666137695
    4. '
' → logprob: -5.3679704666137695
    5. '    
' → logprob: -8.86797046661377
    6. '```' → logprob: -9.99297046661377
    7. 'self' → logprob: -11.24297046661377
    8. '	def' → logprob: -11.36797046661377
    9. '       ' → logprob: -11.74297046661377
    10. '<|end|>' → logprob: -11.74297046661377

Token 422: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00016957100888248533
    2. ' def' → logprob: -9.00016975402832
    3. 'source' → logprob: -11.37516975402832
    4. 'iterator' → logprob: -11.62516975402832
    5. '_iterator' → logprob: -11.62516975402832
    6. 'buffer' → logprob: -11.87516975402832
    7. '_def' → logprob: -12.87516975402832
    8. '_iter' → logprob: -13.12516975402832
    9. '_source' → logprob: -13.75016975402832
    10. '__' → logprob: -13.87516975402832

Token 423: ' read' (ID: 1729)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007964044925756752
    2. 'read' → logprob: -7.250796318054199
    3. ' __' → logprob: -9.3757963180542
    4. '___' → logprob: -14.2507963180542
    5. '_read' → logprob: -14.3757963180542
    6. '.__' → logprob: -15.6257963180542
    7. '\' → logprob: -15.7507963180542
    8. ' read' → logprob: -17.375797271728516
    9. 'parse' → logprob: -17.375797271728516
    10. 'def' → logprob: -17.625797271728516

Token 424: '_int' (ID: 12285)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004986828193068504
    2. '()' → logprob: -5.504986763000488
    3. 'self' → logprob: -8.129986763000488
    4. 'line' → logprob: -8.504986763000488
    5. 'next' → logprob: -8.504986763000488
    6. '(' → logprob: -9.379986763000488
    7. '_next' → logprob: -10.004986763000488
    8. '_line' → logprob: -10.879986763000488
    9. '(next' → logprob: -11.254986763000488
    10. ')' → logprob: -11.754986763000488

Token 425: 's' (ID: 82)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0027585108764469624
    2. '()' → logprob: -6.002758502960205
    3. 's' → logprob: -8.252758979797363
    4. '(' → logprob: -11.627758979797363
    5. 'self' → logprob: -12.252758979797363
    6. '():' → logprob: -12.752758979797363
    7. '()(' → logprob: -13.877758979797363
    8. '())' → logprob: -13.877758979797363
    9. '()
' → logprob: -14.502758979797363
    10. ')' → logprob: -14.502758979797363

Token 426: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1279553291387856e-05
    2. 'self' → logprob: -12.625011444091797
    3. '()' → logprob: -12.750011444091797
    4. '(' → logprob: -13.000011444091797
    5. ' (' → logprob: -13.250011444091797
    6. '(s' → logprob: -15.125011444091797
    7. '(se' → logprob: -15.250011444091797
    8. '   ' → logprob: -15.375011444091797
    9. '(sel' → logprob: -15.750011444091797
    10. '       ' → logprob: -17.375011444091797

Token 427: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050399892032146454
    2. 'self' → logprob: -3.0503997802734375
    3. '):' → logprob: -6.9253997802734375
    4. '):
' → logprob: -7.5503997802734375
    5. '(self' → logprob: -8.175399780273438
    6. '   ' → logprob: -11.425399780273438
    7. '       ' → logprob: -12.800399780273438
    8. ',' → logprob: -13.175399780273438
    9. ' self' → logprob: -13.300399780273438
    10. '):

' → logprob: -13.550399780273438

Token 428: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.688212614681106e-05
    2. 'self' → logprob: -11.500017166137695
    3. '(' → logprob: -12.500017166137695
    4. '()' → logprob: -13.500017166137695
    5. '->' → logprob: -14.750017166137695
    6. '   ' → logprob: -15.375017166137695
    7. '(sel' → logprob: -15.625017166137695
    8. ' ->' → logprob: -15.750017166137695
    9. ' (' → logprob: -15.875017166137695
    10. '(s' → logprob: -16.000017166137695

Token 429: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.00012070851516909897
    2. ' Iterator' → logprob: -9.625121116638184
    3. 'List' → logprob: -9.875121116638184
    4. '	Iterator' → logprob: -12.875121116638184
    5. 'Iterable' → logprob: -15.125121116638184
    6. '   ' → logprob: -16.500120162963867
    7. 'Generator' → logprob: -16.625120162963867
    8. 'int' → logprob: -16.750120162963867
    9. '.Iterator' → logprob: -17.125120162963867
    10. 'iterator' → logprob: -17.375120162963867

Token 430: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.04624199867248535
    2. '(int' → logprob: -3.1712419986724854
    3. 'int' → logprob: -5.921241760253906
    4. '<int' → logprob: -7.796241760253906
    5. ':' → logprob: -9.171241760253906
    6. ':int' → logprob: -11.671241760253906
    7. '   ' → logprob: -12.171241760253906
    8. '=int' → logprob: -12.171241760253906
    9. ':
' → logprob: -12.671241760253906
    10. '[' → logprob: -12.796241760253906

Token 431: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16205213963985443
    2. '):
' → logprob: -2.4120521545410156
    3. '():' → logprob: -3.1620521545410156
    4. ']:' → logprob: -4.412052154541016
    5. '():
' → logprob: -6.037052154541016
    6. ':' → logprob: -6.162052154541016
    7. ']:
' → logprob: -7.912052154541016
    8. '   ' → logprob: -8.662052154541016
    9. ':
' → logprob: -9.162052154541016
    10. '}:' → logprob: -9.287052154541016

Token 432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006619225605390966
    2. ' for' → logprob: -7.875661849975586
    3. 'for' → logprob: -8.625661849975586
    4. '   ' → logprob: -9.375661849975586
    5. ' ' → logprob: -12.500661849975586
    6. '	' → logprob: -12.500661849975586
    7. '```' → logprob: -13.000661849975586
    8. '    ' → logprob: -13.125661849975586
    9. '	   ' → logprob: -13.875661849975586
    10. '           ' → logprob: -14.000661849975586

Token 433: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5920917987823486
    2. ' for' → logprob: -1.0920917987823486
    3. '       ' → logprob: -2.2170917987823486
    4. '   ' → logprob: -6.0920915603637695
    5. ' ' → logprob: -9.84209156036377
    6. '	for' → logprob: -10.09209156036377
    7. '           ' → logprob: -10.46709156036377
    8. '	   ' → logprob: -13.46709156036377
    9. 'from' → logprob: -13.59209156036377
    10. '    ' → logprob: -13.84209156036377

Token 434: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.02975083328783512
    2. ' line' → logprob: -3.5297508239746094
    3. '	line' → logprob: -15.52975082397461
    4. '_line' → logprob: -16.02975082397461
    5. 's' → logprob: -16.40475082397461
    6. 'Line' → logprob: -17.52975082397461
    7. 'raw' → logprob: -17.90475082397461
    8. '(line' → logprob: -18.15475082397461
    9. '   ' → logprob: -18.52975082397461
    10. 'value' → logprob: -18.77975082397461

Token 435: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031815171241760254
    2. 'in' → logprob: -5.753181457519531
    3. 's' → logprob: -13.253181457519531
    4. ' ' → logprob: -14.378181457519531
    5. '	in' → logprob: -14.878181457519531
    6. 'n' → logprob: -15.253181457519531
    7. ' ' → logprob: -15.253181457519531
    8. 'line' → logprob: -15.753181457519531
    9. '_in' → logprob: -16.00318145751953
    10. 'd' → logprob: -16.50318145751953

Token 436: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008614926598966122
    2. ' self' → logprob: -4.758615016937256
    3. '(self' → logprob: -15.383614540100098
    4. '	self' → logprob: -16.133615493774414
    5. 'source' → logprob: -18.258615493774414
    6. '=self' → logprob: -18.508615493774414
    7. '[self' → logprob: -18.633615493774414
    8. 's' → logprob: -18.758615493774414
    9. ' ' → logprob: -19.258615493774414
    10. 'Self' → logprob: -19.508615493774414

Token 437: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -0.0013404814526438713
    2. 'source' → logprob: -6.626340389251709
    3. '.' → logprob: -11.626340866088867
    4. ' .' → logprob: -12.751340866088867
    5. ' source' → logprob: -13.626340866088867
    6. '	source' → logprob: -13.876340866088867
    7. '.s' → logprob: -15.251340866088867
    8. 'ource' → logprob: -16.751340866088867
    9. 's' → logprob: -17.251340866088867
    10. '.
' → logprob: -17.376340866088867

Token 438: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26055487990379333
    2. ':
' → logprob: -1.5105549097061157
    3. '.strip' → logprob: -5.135554790496826
    4. '           ' → logprob: -7.010554790496826
    5. '():
' → logprob: -7.635554790496826
    6. '):
' → logprob: -8.010555267333984
    7. '.split' → logprob: -8.635555267333984
    8. '):' → logprob: -8.635555267333984
    9. '.rstrip' → logprob: -8.760555267333984
    10. '       ' → logprob: -9.135555267333984

Token 439: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001777960715116933
    2. '            
' → logprob: -9.375177383422852
    3. ' yield' → logprob: -10.875177383422852
    4. '       ' → logprob: -11.500177383422852
    5. '            ' → logprob: -11.625177383422852
    6. '.strip' → logprob: -11.625177383422852
    7. '   ' → logprob: -11.875177383422852
    8. ' ' → logprob: -12.125177383422852
    9. 'yield' → logprob: -12.125177383422852
    10. ' if' → logprob: -12.375177383422852

Token 440: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.5372728109359741
    2. ' line' → logprob: -1.2872728109359741
    3. 'yield' → logprob: -2.9122729301452637
    4. '           ' → logprob: -3.1622729301452637
    5. '               ' → logprob: -3.2872729301452637
    6. ' stripped' → logprob: -5.787272930145264
    7. ' yield' → logprob: -6.912272930145264
    8. 'strip' → logprob: -7.037272930145264
    9. 'num' → logprob: -8.787272453308105
    10. '=line' → logprob: -9.162272453308105

Token 441: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03389175981283188
    2. ' =' → logprob: -3.5338916778564453
    3. '.strip' → logprob: -5.658891677856445
    4. '=str' → logprob: -8.033891677856445
    5. '=line' → logprob: -9.158891677856445
    6. '_strip' → logprob: -9.408891677856445
    7. 'strip' → logprob: -9.908891677856445
    8. '.' → logprob: -9.908891677856445
    9. '.rstrip' → logprob: -11.283891677856445
    10. '_str' → logprob: -11.408891677856445

Token 442: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0015023599844425917
    2. ' line' → logprob: -6.501502513885498
    3. '=line' → logprob: -18.126502990722656
    4. '(line' → logprob: -19.001502990722656
    5. '	line' → logprob: -20.626502990722656
    6. '#line' → logprob: -20.876502990722656
    7. 'Line' → logprob: -21.626502990722656
    8. '[line' → logprob: -21.751502990722656
    9. 'lin' → logprob: -22.626502990722656
    10. '_line' → logprob: -23.126502990722656

Token 443: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.000652389950118959
    2. '.' → logprob: -7.500652313232422
    3. 'strip' → logprob: -9.500652313232422
    4. '.rstrip' → logprob: -10.625652313232422
    5. ' strip' → logprob: -16.250652313232422
    6. '.str' → logprob: -16.625652313232422
    7. ' .' → logprob: -16.750652313232422
    8. '.trim' → logprob: -17.125652313232422
    9. '_strip' → logprob: -18.500652313232422
    10. 'rstrip' → logprob: -19.000652313232422

Token 444: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015259294304996729
    2. '<|end|>' → logprob: -8.00152587890625
    3. '
' → logprob: -8.25152587890625
    4. '               ' → logprob: -8.37652587890625
    5. '<|end|>' → logprob: -8.87652587890625
    6. 'if' → logprob: -9.00152587890625
    7. '            
' → logprob: -9.12652587890625
    8. ' if' → logprob: -9.25152587890625
    9. ',' → logprob: -9.75152587890625
    10. ')' → logprob: -9.75152587890625

Token 445: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038056611083447933
    2. ' if' → logprob: -5.878805637359619
    3. 'if' → logprob: -7.003805637359619
    4. '<|end|>' → logprob: -9.628806114196777
    5. '       ' → logprob: -11.878806114196777
    6. '            
' → logprob: -12.503806114196777
    7. '   ' → logprob: -12.503806114196777
    8. ' ' → logprob: -12.753806114196777
    9. '	       ' → logprob: -13.128806114196777
    10. '```' → logprob: -13.378806114196777

Token 446: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0021287298295646906
    2. '           ' → logprob: -6.502128601074219
    3. ' if' → logprob: -7.377128601074219
    4. 'yield' → logprob: -14.252128601074219
    5. '	if' → logprob: -16.25212860107422
    6. '            
' → logprob: -16.25212860107422
    7. '```' → logprob: -16.87712860107422
    8. 'If' → logprob: -17.25212860107422
    9. '   ' → logprob: -17.75212860107422
    10. 'for' → logprob: -17.87712860107422

Token 447: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.41535627841949463
    2. ' not' → logprob: -1.6653562784194946
    3. 'line' → logprob: -1.9153562784194946
    4. ' line' → logprob: -5.665356159210205
    5. ' ' → logprob: -12.415356636047363
    6. '```' → logprob: -13.040356636047363
    7. '(line' → logprob: -13.415356636047363
    8. '   ' → logprob: -13.415356636047363
    9. 'len' → logprob: -13.415356636047363
    10. '	line' → logprob: -14.040356636047363

Token 448: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00861456897109747
    2. ' line' → logprob: -4.758614540100098
    3. '	line' → logprob: -16.883615493774414
    4. 'Line' → logprob: -18.758615493774414
    5. '(line' → logprob: -19.633615493774414
    6. '#line' → logprob: -19.883615493774414
    7. '
' → logprob: -20.883615493774414
    8. '_line' → logprob: -20.883615493774414
    9. '=line' → logprob: -21.258615493774414
    10. '```' → logprob: -21.258615493774414

Token 449: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2682785093784332
    2. ' or' → logprob: -1.8932784795761108
    3. ':
' → logprob: -2.5182785987854004
    4. 'or' → logprob: -5.6432785987854
    5. '<|end|>' → logprob: -8.268278121948242
    6. ':return' → logprob: -8.643278121948242
    7. '```' → logprob: -10.268278121948242
    8. '   ' → logprob: -11.018278121948242
    9. '.startswith' → logprob: -11.268278121948242
    10. '<|end|>' → logprob: -11.393278121948242

Token 450: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00174158182926476
    2. ':' → logprob: -6.501741409301758
    3. ':
' → logprob: -9.251741409301758
    4. '   ' → logprob: -10.251741409301758
    5. ':return' → logprob: -10.501741409301758
    6. 'continue' → logprob: -11.001741409301758
    7. '           ' → logprob: -11.251741409301758
    8. ' ' → logprob: -12.001741409301758
    9. 'break' → logprob: -12.001741409301758
    10. ' continue' → logprob: -12.126741409301758

Token 451: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.1798962950706482
    2. ' continue' → logprob: -2.179896354675293
    3. 'break' → logprob: -3.179896354675293
    4. ' break' → logprob: -5.179896354675293
    5. '               ' → logprob: -6.054896354675293
    6. 'return' → logprob: -6.304896354675293
    7. ' return' → logprob: -8.804896354675293
    8. '           ' → logprob: -11.179896354675293
    9. '	continue' → logprob: -11.429896354675293
    10. '                   ' → logprob: -11.554896354675293

Token 452: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007351516745984554
    2. 'yield' → logprob: -5.007351398468018
    3. ' yield' → logprob: -7.507351398468018
    4. '       ' → logprob: -10.757351875305176
    5. '	yield' → logprob: -10.757351875305176
    6. '```' → logprob: -11.257351875305176
    7. '<|end|>' → logprob: -11.632351875305176
    8. '            
' → logprob: -12.257351875305176
    9. ' ' → logprob: -12.507351875305176
    10. '   ' → logprob: -12.757351875305176

Token 453: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009574279189109802
    2. 'yield' → logprob: -4.8845744132995605
    3. ' yield' → logprob: -6.3845744132995605
    4. '       ' → logprob: -9.009573936462402
    5. '```' → logprob: -9.259573936462402
    6. '	yield' → logprob: -10.759573936462402
    7. '   ' → logprob: -11.259573936462402
    8. 'try' → logprob: -12.134573936462402
    9. 'if' → logprob: -12.384573936462402
    10. ' ' → logprob: -12.759573936462402

Token 454: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.00679423613473773
    2. ' yield' → logprob: -5.006794452667236
    3. '	yield' → logprob: -10.381793975830078
    4. '           ' → logprob: -10.381793975830078
    5. 'try' → logprob: -11.506793975830078
    6. 'num' → logprob: -12.631793975830078
    7. 'for' → logprob: -13.006793975830078
    8. 'int' → logprob: -14.881793975830078
    9. '```' → logprob: -15.006793975830078
    10. '            
' → logprob: -15.631793975830078

Token 455: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.5491004129871726e-05
    2. ' int' → logprob: -10.000045776367188
    3. '(int' → logprob: -19.125045776367188
    4. '[int' → logprob: -19.125045776367188
    5. 'from' → logprob: -19.250045776367188
    6. '<int' → logprob: -20.750045776367188
    7. '	int' → logprob: -21.125045776367188
    8. 'ints' → logprob: -21.750045776367188
    9. '           ' → logprob: -21.875045776367188
    10. '   ' → logprob: -22.000045776367188

Token 456: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -5.512236498361744e-07
    2. 'line' → logprob: -14.750000953674316
    3. '(' → logprob: -16.0
    4. '[line' → logprob: -18.25
    5. ' line' → logprob: -18.375
    6. '(
' → logprob: -19.25
    7. '=line' → logprob: -19.375
    8. '#line' → logprob: -19.75
    9. '(lines' → logprob: -21.25
    10. '	line' → logprob: -21.625

Token 457: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -14.500000953674316
    4. '())' → logprob: -16.500001907348633
    5. '<|end|>' → logprob: -17.000001907348633
    6. '')' → logprob: -18.125001907348633
    7. '))' → logprob: -18.250001907348633
    8. ')

' → logprob: -19.125001907348633
    9. '()' → logprob: -19.250001907348633
    10. '),' → logprob: -19.500001907348633

Token 458: 'class' (ID: 1444)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.24717478454113007
    2. 'def' → logprob: -2.4971747398376465
    3. '#' → logprob: -2.8721747398376465
    4. '```' → logprob: -2.8721747398376465
    5. 'if' → logprob: -3.8721747398376465
    6. 'class' → logprob: -6.2471747398376465
    7. 'import' → logprob: -7.8721747398376465
    8. '#!/' → logprob: -8.747175216674805
    9. '<|end|>' → logprob: -9.122175216674805
    10. '.' → logprob: -10.372175216674805

Token 459: ' Library' (ID: 16583)
  Prédit: 'Negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Negative' → logprob: -1.2498195171356201
    2. 'Data' → logprob: -1.3748195171356201
    3. 'Output' → logprob: -1.7498195171356201
    4. 'main' → logprob: -1.8748195171356201
    5. 'Main' → logprob: -2.99981951713562
    6. '__' → logprob: -3.37481951713562
    7. ' Negative' → logprob: -4.499819755554199
    8. 'Solution' → logprob: -4.624819755554199
    9. ' main' → logprob: -4.874819755554199
    10. ' Data' → logprob: -4.999819755554199

Token 460: 'Number' (ID: 3695)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12818561494350433
    2. ':
' → logprob: -2.253185510635376
    3. 'User' → logprob: -4.378185749053955
    4. 'Interface' → logprob: -7.628185749053955
    5. 'System' → logprob: -8.128185272216797
    6. '(' → logprob: -8.128185272216797
    7. 'Usage' → logprob: -8.128185272216797
    8. 'Reader' → logprob: -8.253185272216797
    9. 'Manager' → logprob: -8.628185272216797
    10. 'Input' → logprob: -9.503185272216797

Token 461: 'Formatter' (ID: 22956)
  Prédit: 'System'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'System' → logprob: -0.4889358580112457
    2. '(N' → logprob: -1.8639358282089233
    3. 'ing' → logprob: -2.738935947418213
    4. '(' → logprob: -2.738935947418213
    5. 'Converter' → logprob: -3.238935947418213
    6. ':' → logprob: -4.488935947418213
    7. '(System' → logprob: -4.863935947418213
    8. 'Parser' → logprob: -5.238935947418213
    9. 'Processor' → logprob: -5.488935947418213
    10. 'er' → logprob: -5.863935947418213

Token 462: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049373552203178406
    2. '(N' → logprob: -3.1743736267089844
    3. '(' → logprob: -5.174373626708984
    4. ':
' → logprob: -7.799373626708984
    5. '<|end|>' → logprob: -8.424373626708984
    6. ' :' → logprob: -11.424373626708984
    7. '(Abstract' → logprob: -11.549373626708984
    8. '():' → logprob: -12.049373626708984
    9. '(QWidget' → logprob: -12.299373626708984
    10. ':N' → logprob: -12.674373626708984

Token 463: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027839578688144684
    2. 'def' → logprob: -6.37778377532959
    3. ' def' → logprob: -6.87778377532959
    4. ':' → logprob: -10.12778377532959
    5. '   ' → logprob: -12.37778377532959
    6. 'Negative' → logprob: -13.37778377532959
    7. ',' → logprob: -13.75278377532959
    8. ')' → logprob: -14.37778377532959
    9. '...' → logprob: -14.62778377532959
    10. '(' → logprob: -14.75278377532959

Token 464: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.24689152836799622
    2. 'def' (adapté à ' def') → logprob: -1.9968914985656738
    3. '   ' → logprob: -2.496891498565674
    4. '@' → logprob: -8.121891975402832
    5. ' @' → logprob: -8.371891975402832
    6. 'class' → logprob: -9.371891975402832
    7. 'staticmethod' → logprob: -11.121891975402832
    8. ' ' → logprob: -11.746891975402832
    9. '	def' → logprob: -11.746891975402832
    10. 'from' → logprob: -12.121891975402832

Token 465: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11320528388023376
    2. ' def' → logprob: -2.4882051944732666
    3. '__' → logprob: -3.9882051944732666
    4. 'def' → logprob: -5.613205432891846
    5. 'init' → logprob: -7.113205432891846
    6. ' init' → logprob: -8.113204956054688
    7. 'staticmethod' → logprob: -8.613204956054688
    8. ' encode' → logprob: -8.738204956054688
    9. '```' → logprob: -9.613204956054688
    10. 'encode' → logprob: -9.738204956054688

Token 466: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.6240566083070007e-06
    2. 'staticmethod' → logprob: -14.000001907348633
    3. 'new' → logprob: -15.375001907348633
    4. ' init' → logprob: -16.250001907348633
    5. 'iter' → logprob: -16.375001907348633
    6. 'int' → logprob: -17.125001907348633
    7. 'class' → logprob: -17.125001907348633
    8. 'classmethod' → logprob: -17.250001907348633
    9. 'call' → logprob: -17.375001907348633
    10. 'name' → logprob: -17.750001907348633

Token 467: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04114460572600365
    2. ' (' → logprob: -3.291144609451294
    3. '(' → logprob: -5.916144371032715
    4. '   ' → logprob: -8.166144371032715
    5. '__(' → logprob: -9.666144371032715
    6. 'self' → logprob: -10.916144371032715
    7. '(
' → logprob: -11.041144371032715
    8. ' self' → logprob: -12.291144371032715
    9. ' ' → logprob: -12.791144371032715
    10. ',' → logprob: -13.166144371032715

Token 468: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002669353736564517
    2. ')' → logprob: -6.127669334411621
    3. ' self' → logprob: -8.252669334411621
    4. '(self' → logprob: -9.377669334411621
    5. '   ' → logprob: -9.877669334411621
    6. '):
' → logprob: -10.002669334411621
    7. '
' → logprob: -10.752669334411621
    8. ')(' → logprob: -11.877669334411621
    9. ',' → logprob: -12.502669334411621
    10. '0' → logprob: -13.002669334411621

Token 469: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004488392733037472
    2. 'self' → logprob: -5.754488468170166
    3. '   ' → logprob: -7.504488468170166
    4. '(self' → logprob: -8.504487991333008
    5. '):' → logprob: -8.879487991333008
    6. '):
' → logprob: -9.004487991333008
    7. ' (' → logprob: -9.004487991333008
    8. ' self' → logprob: -9.754487991333008
    9. ' ,' → logprob: -9.754487991333008
    10. ')' → logprob: -11.254487991333008

Token 470: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007587654399685562
    2. ' self' → logprob: -7.250758647918701
    3. '   ' → logprob: -10.62575912475586
    4. '       ' → logprob: -10.87575912475586
    5. '(self' → logprob: -13.00075912475586
    6. '	self' → logprob: -13.62575912475586
    7. '...' → logprob: -14.50075912475586
    8. '0' → logprob: -14.50075912475586
    9. ' ' → logprob: -15.50075912475586
    10. ')' → logprob: -15.50075912475586

Token 471: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28316834568977356
    2. '       ' → logprob: -1.4081683158874512
    3. ' self' → logprob: -6.908168315887451
    4. '   ' → logprob: -7.283168315887451
    5. 'pass' → logprob: -8.15816879272461
    6. 'from' → logprob: -11.53316879272461
    7. 'import' → logprob: -12.03316879272461
    8. ' pass' → logprob: -12.03316879272461
    9. '	self' → logprob: -12.03316879272461
    10. 'def' → logprob: -12.78316879272461

Token 472: ' base' (ID: 3611)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002601460786536336
    2. '       ' → logprob: -6.252601623535156
    3. 'from' → logprob: -8.377601623535156
    4. 'import' → logprob: -8.502601623535156
    5. ' self' → logprob: -8.502601623535156
    6. 'super' → logprob: -11.002601623535156
    7. 'pass' → logprob: -11.752601623535156
    8. '#' → logprob: -11.877601623535156
    9. '   ' → logprob: -13.127601623535156
    10. '```' → logprob: -14.627601623535156

Token 473: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01792093552649021
    2. '=' → logprob: -4.142920970916748
    3. '=-' → logprob: -6.392920970916748
    4. ':' → logprob: -8.89292049407959
    5. '   ' → logprob: -10.01792049407959
    6. '-' → logprob: -12.26792049407959
    7. 'class' → logprob: -12.26792049407959
    8. '       ' → logprob: -12.39292049407959
    9. '_base' → logprob: -12.39292049407959
    10. 'def' → logprob: -13.26792049407959

Token 474: ' fixed' (ID: 13213)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0032226298935711384
    2. ' -' → logprob: -5.753222465515137
    3. '       ' → logprob: -10.128222465515137
    4. '   ' → logprob: -13.003222465515137
    5. '           ' → logprob: -13.628222465515137
    6. '=-' → logprob: -14.128222465515137
    7. '  ' → logprob: -15.628222465515137
    8. ' ' → logprob: -16.003223419189453
    9. '        ' → logprob: -16.003223419189453
    10. '=' → logprob: -16.003223419189453

Token 475: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1680046319961548
    2. '=-' → logprob: -1.5430046319961548
    3. '-' → logprob: -1.6680046319961548
    4. '=' → logprob: -1.7930046319961548
    5. 'self' → logprob: -3.0430045127868652
    6. ',' → logprob: -3.6680045127868652
    7. ' =' → logprob: -4.418004512786865
    8. ' at' → logprob: -4.793004512786865
    9. ' self' → logprob: -5.043004512786865
    10. ' -' → logprob: -5.543004512786865

Token 476: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007100477814674377
    2. ' -' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.875709533691406
    4. '       ' → logprob: -17.125709533691406
    5. '  ' → logprob: -18.625709533691406
    6. '=-' → logprob: -19.125709533691406
    7. ' ' → logprob: -19.125709533691406
    8. '−' → logprob: -19.375709533691406
    9. '```' → logprob: -19.500709533691406
    10. '–' → logprob: -20.250709533691406

Token 477: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.875003814697266
    3. '1' → logprob: -14.500003814697266
    4. '１０' → logprob: -16.500003814697266
    5. '```' → logprob: -16.750003814697266
    6. '۱۰' → logprob: -17.562503814697266
    7. '   ' → logprob: -17.812503814697266
    8. '100' → logprob: -17.937503814697266
    9. '
' → logprob: -18.125003814697266
    10. 'int' → logprob: -18.312503814697266

Token 478: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001634835614822805
    2. ',' → logprob: -7.37663459777832
    3. '
' → logprob: -7.62663459777832
    4. ' for' → logprob: -8.37663459777832
    5. '<|end|>' → logprob: -9.12663459777832
    6. 'self' → logprob: -9.50163459777832
    7. '   ' → logprob: -10.62663459777832
    8. '.' → logprob: -11.25163459777832
    9. ' self' → logprob: -11.25163459777832
    10. '        ' → logprob: -11.37663459777832

Token 479: ' problem' (ID: 4792)
  Prédit: 'spec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spec' → logprob: -0.9944970011711121
    2. 'task' → logprob: -1.1194970607757568
    3. 'problem' → logprob: -1.9944970607757568
    4. 'the' → logprob: -2.119497060775757
    5. 'class' → logprob: -4.369496822357178
    6. 'requirements' → logprob: -4.619496822357178
    7. ' task' → logprob: -5.494496822357178
    8. 'assignment' → logprob: -5.619496822357178
    9. 'design' → logprob: -5.869496822357178
    10. ' the' → logprob: -5.994496822357178

Token 480: ' statement' (ID: 9710)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013538522645831108
    2. ',' → logprob: -5.513538360595703
    3. ' for' → logprob: -5.763538360595703
    4. ')' → logprob: -6.513538360595703
    5. '
' → logprob: -6.888538360595703
    6. 'self' → logprob: -7.013538360595703
    7. ':' → logprob: -7.638538360595703
    8. '.' → logprob: -7.763538360595703
    9. '<|end|>' → logprob: -8.013538360595703
    10. ' self' → logprob: -8.013538360595703

Token 481: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017574065132066607
    2. ',' → logprob: -7.001757621765137
    3. 'self' → logprob: -8.251757621765137
    4. ')' → logprob: -8.626757621765137
    5. '
' → logprob: -9.126757621765137
    6. '<|end|>' → logprob: -9.251757621765137
    7. ':' → logprob: -9.501757621765137
    8. '   ' → logprob: -10.501757621765137
    9. '):
' → logprob: -10.626757621765137
    10. ' self' → logprob: -10.876757621765137

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002950720489025116
    2. 'self' → logprob: -5.877950668334961
    3. ' self' → logprob: -8.877950668334961
    4. '   ' → logprob: -12.627950668334961
    5. ',' → logprob: -13.252950668334961
    6. 'def' → logprob: -14.877950668334961
    7. '(self' → logprob: -15.002950668334961
    8. '      ' → logprob: -15.877950668334961
    9. '```' → logprob: -16.12795066833496
    10. '
' → logprob: -16.25295066833496

Token 483: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011154991574585438
    2. '       ' → logprob: -4.511155128479004
    3. ' self' → logprob: -9.261155128479004
    4. 'super' → logprob: -11.386155128479004
    5. '	self' → logprob: -15.386155128479004
    6. '   ' → logprob: -15.636155128479004
    7. '      ' → logprob: -16.636154174804688
    8. 'base' → logprob: -16.761154174804688
    9. '	' → logprob: -16.886154174804688
    10. '(self' → logprob: -16.886154174804688

Token 484: '.n' (ID: 1835)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.5607825517654419
    2. '.n' → logprob: -1.060782551765442
    3. 'system' → logprob: -3.1857824325561523
    4. 'base' → logprob: -3.9357824325561523
    5. '.base' → logprob: -4.685782432556152
    6. 'negative' → logprob: -5.935782432556152
    7. 'ns' → logprob: -5.935782432556152
    8. 'n' → logprob: -5.935782432556152
    9. '.system' → logprob: -6.060782432556152
    10. '_n' → logprob: -7.685782432556152

Token 485: 'umer' (ID: 3986)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.3778071701526642
    2. 'base' → logprob: -1.6278071403503418
    3. 'umer' → logprob: -2.502807140350342
    4. 'ative' → logprob: -4.002807140350342
    5. '   ' → logprob: -5.377807140350342
    6. 'um' → logprob: -5.377807140350342
    7. '_base' → logprob: -5.752807140350342
    8. ' base' → logprob: -6.502807140350342
    9. 'er' → logprob: -7.252807140350342
    10. 'Base' → logprob: -7.627807140350342

Token 486: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.00020187153131701052
    2. 'base' → logprob: -9.125202178955078
    3. '   ' → logprob: -10.875202178955078
    4. '_base' → logprob: -11.125202178955078
    5. 'system' → logprob: -11.625202178955078
    6. 'ral' → logprob: -11.875202178955078
    7. '       ' → logprob: -11.875202178955078
    8. '=' → logprob: -12.750202178955078
    9. 'als' → logprob: -12.750202178955078
    10. 'nal' → logprob: -12.750202178955078

Token 487: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -0.00021855637896806002
    2. 'System' → logprob: -9.125218391418457
    3. 'system' → logprob: -9.125218391418457
    4. '_base' → logprob: -14.625218391418457
    5. ' system' → logprob: -16.500219345092773
    6. ' =' → logprob: -16.875219345092773
    7. 'ystem' → logprob: -16.875219345092773
    8. '=' → logprob: -17.000219345092773
    9. '_SYSTEM' → logprob: -17.500219345092773
    10. 'SYSTEM' → logprob: -17.500219345092773

Token 488: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. ' ' → logprob: -17.076414108276367
    4. '=

' → logprob: -17.076414108276367
    5. ':' → logprob: -17.701414108276367
    6. '＝' → logprob: -18.326414108276367
    7. '=
' → logprob: -18.326414108276367
    8. ')' → logprob: -18.701414108276367
    9. '   ' → logprob: -18.826414108276367
    10. '  ' → logprob: -18.826414108276367

Token 489: ' Negative' (ID: 94868)
  Prédit: 'Negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Negative' → logprob: -0.0005530327325686812
    2. ' Negative' → logprob: -7.500553131103516
    3. 'Neg' → logprob: -19.000553131103516
    4. ' negative' → logprob: -20.750553131103516
    5. 'negative' → logprob: -21.000553131103516
    6. '   ' → logprob: -21.625553131103516
    7. '_negative' → logprob: -21.875553131103516
    8. '-negative' → logprob: -23.625553131103516
    9. ' ' → logprob: -24.125553131103516
    10. '```' → logprob: -24.500553131103516

Token 490: 'Base' (ID: 4882)
  Prédit: 'Base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Base' → logprob: -4.320199877838604e-07
    2. '	Base' → logprob: -16.0
    3. 'base' → logprob: -16.125
    4. 'Bas' → logprob: -16.375
    5. ' Base' → logprob: -17.25
    6. '<Base' → logprob: -18.25
    7. '_base' → logprob: -18.25
    8. '_Base' → logprob: -18.375
    9. '(Base' → logprob: -19.125
    10. '<|end|>' → logprob: -19.75

Token 491: 'Numer' (ID: 65395)
  Prédit: 'Numer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Numer' → logprob: -9.088346359931165e-07
    2. 'numer' → logprob: -14.500000953674316
    3. ' Numer' → logprob: -15.625000953674316
    4. '10' → logprob: -16.125
    5. 'Numeric' → logprob: -17.75
    6. ' numer' → logprob: -18.125
    7. 'System' → logprob: -18.375
    8. 'Number' → logprob: -18.75
    9. 'Base' → logprob: -18.75
    10. 'Narr' → logprob: -19.375

Token 492: 'al' (ID: 280)
  Prédit: 'System'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -0.026070130988955498
    2. 'al' → logprob: -3.7760701179504395
    3. 'system' → logprob: -5.9010701179504395
    4. 'Base' → logprob: -10.151070594787598
    5. '_system' → logprob: -11.026070594787598
    6. ' system' → logprob: -12.026070594787598
    7. 'base' → logprob: -12.026070594787598
    8. 'sys' → logprob: -13.276070594787598
    9. 'Systems' → logprob: -13.276070594787598
    10. 'class' → logprob: -13.401070594787598

Token 493: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -5.133198283147067e-05
    2. 'ystem' → logprob: -10.125051498413086
    3. 'system' → logprob: -11.500051498413086
    4. 'Numer' → logprob: -14.125051498413086
    5. '_system' → logprob: -16.000051498413086
    6. 'Systems' → logprob: -16.750051498413086
    7. ' system' → logprob: -17.500051498413086
    8. 'ssystem' → logprob: -18.000051498413086
    9. ' System' → logprob: -18.375051498413086
    10. 'SYSTEM' → logprob: -18.625051498413086

Token 494: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -4.008129963040119e-06
    2. '-' → logprob: -12.750003814697266
    3. '(
' → logprob: -14.250003814697266
    4. '(' → logprob: -15.125003814697266
    5. ' (-' → logprob: -16.375003814697266
    6. '(base' → logprob: -17.500003814697266
    7. '((-' → logprob: -18.125003814697266
    8. '   ' → logprob: -19.000003814697266
    9. '```' → logprob: -19.250003814697266
    10. '       ' → logprob: -19.625003814697266

Token 495: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -13.750000953674316
    3. ' ' → logprob: -17.500001907348633
    4. '１０' → logprob: -18.125001907348633
    5. '۱۰' → logprob: -18.375001907348633
    6. ')' → logprob: -20.000001907348633
    7. '१०' → logprob: -20.125001907348633
    8. '```' → logprob: -20.500001907348633
    9. '0' → logprob: -21.000001907348633
    10. '100' → logprob: -21.000001907348633

Token 496: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. '       ' → logprob: -12.875003814697266
    3. ' )' → logprob: -14.375003814697266
    4. ')
' → logprob: -15.000003814697266
    5. '   ' → logprob: -15.125003814697266
    6. '))' → logprob: -18.875003814697266
    7. ')

' → logprob: -18.875003814697266
    8. ')`' → logprob: -19.125003814697266
    9. '<|end|>' → logprob: -19.375003814697266
    10. '),' → logprob: -19.500003814697266

Token 497: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026548290625214577
    2. '
' → logprob: -3.776548385620117
    3. 'def' → logprob: -6.526548385620117
    4. '<|end|>' → logprob: -6.651548385620117
    5. '    
' → logprob: -7.776548385620117
    6. ' def' → logprob: -9.526548385620117
    7. '        
' → logprob: -11.276548385620117
    8. '

' → logprob: -11.401548385620117
    9. '<|end|>' → logprob: -11.776548385620117
    10. '       ' → logprob: -11.776548385620117

Token 498: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12035395205020905
    2. '
' → logprob: -2.870353937149048
    3. '   ' → logprob: -3.870353937149048
    4. ' def' → logprob: -4.370354175567627
    5. 'self' (adapté à ' self') → logprob: -4.495354175567627
    6. '<|end|>' → logprob: -4.745354175567627
    7. '       ' → logprob: -6.245354175567627
    8. 'data' → logprob: -7.370354175567627
    9. '

' → logprob: -8.370353698730469
    10. ' self' → logprob: -8.745353698730469

Token 499: '.processor' (ID: 152556)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.49481233954429626
    2. '.processor' → logprob: -0.9948123693466187
    3. 'dataset' → logprob: -4.744812488555908
    4. 'data' → logprob: -4.869812488555908
    5. '.data' → logprob: -5.994812488555908
    6. '.dataset' → logprob: -6.619812488555908
    7. '_processor' → logprob: -9.24481201171875
    8. ' processor' → logprob: -9.99481201171875
    9. '_data' → logprob: -10.24481201171875
    10. '._' → logprob: -10.36981201171875

Token 500: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931667923927307
    2. ' =' → logprob: -0.6931667923927307
    3. '_' → logprob: -11.443166732788086
    4. ':' → logprob: -13.568166732788086
    5. '  ' → logprob: -13.568166732788086
    6. '   ' → logprob: -13.943166732788086
    7. '=None' → logprob: -13.943166732788086
    8. ' ' → logprob: -14.068166732788086
    9. 's' → logprob: -14.068166732788086
    10. '_processor' → logprob: -14.318166732788086

Token 501: ' Data' (ID: 4833)
  Prédit: 'Data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -0.004078401252627373
    2. ' Data' → logprob: -5.504078388214111
    3. '	Data' → logprob: -18.129077911376953
    4. '(Data' → logprob: -20.754077911376953
    5. '   ' → logprob: -21.004077911376953
    6. '<Data' → logprob: -21.504077911376953
    7. '_Data' → logprob: -21.629077911376953
    8. '       ' → logprob: -23.254077911376953
    9. 'Dat' → logprob: -23.879077911376953
    10. ' ' → logprob: -24.379077911376953

Token 502: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -6.704273118884885e-07
    2. 'set' → logprob: -14.250000953674316
    3. 'et' → logprob: -17.75
    4. '_set' → logprob: -18.25
    5. 'ataset' → logprob: -18.5
    6. ' Set' → logprob: -19.625
    7. '   ' → logprob: -21.0
    8. '	Set' → logprob: -21.75
    9. 'Sets' → logprob: -21.875
    10. '_Set' → logprob: -22.0

Token 503: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -1.7432603272027336e-06
    2. 'processor' → logprob: -13.375001907348633
    3. 'Process' → logprob: -16.375001907348633
    4. '_processor' → logprob: -16.375001907348633
    5. ' Processor' → logprob: -17.000001907348633
    6. ' processor' → logprob: -17.875001907348633
    7. 'Processing' → logprob: -19.625001907348633
    8. 'rocess' → logprob: -20.250001907348633
    9. 'Provider' → logprob: -20.625001907348633
    10. 'Proces' → logprob: -21.250001907348633

Token 504: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.451116051815916e-05
    2. 'self' → logprob: -10.750024795532227
    3. '       ' → logprob: -13.250024795532227
    4. '(
' → logprob: -14.250024795532227
    5. '(' → logprob: -14.750024795532227
    6. '(n' → logprob: -15.875024795532227
    7. ' self' → logprob: -18.000024795532227
    8. '(N' → logprob: -18.375024795532227
    9. '[self' → logprob: -18.375024795532227
    10. '```' → logprob: -18.375024795532227

Token 505: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -5.080963092041202e-06
    2. '.' → logprob: -12.250004768371582
    3. ' .' → logprob: -16.6250057220459
    4. '.num' → logprob: -16.8750057220459
    5. 'numer' → logprob: -17.3750057220459
    6. ').' → logprob: -17.7500057220459
    7. 'self' → logprob: -18.1250057220459
    8. '(n' → logprob: -18.2500057220459
    9. '.N' → logprob: -18.2500057220459
    10. ')' → logprob: -18.7500057220459

Token 506: 'umer' (ID: 3986)
  Prédit: 'umer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umer' → logprob: -1.3663626305060461e-05
    2. 'eral' → logprob: -11.62501335144043
    3. 'uer' → logprob: -12.75001335144043
    4. 'numer' → logprob: -14.12501335144043
    5. 'er' → logprob: -14.62501335144043
    6. 'um' → logprob: -15.37501335144043
    7. 'umerator' → logprob: -16.25001335144043
    8. 'umeric' → logprob: -17.50001335144043
    9. 'ume' → logprob: -17.62501335144043
    10. 'mer' → logprob: -17.62501335144043

Token 507: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -3.173704271830502e-06
    2. 'ral' → logprob: -13.75000286102295
    3. '_system' → logprob: -14.37500286102295
    4. 'ol' → logprob: -14.75000286102295
    5. 'system' → logprob: -15.62500286102295
    6. 'als' → logprob: -16.125003814697266
    7. '_al' → logprob: -16.250003814697266
    8. 'a' → logprob: -16.375003814697266
    9. 'el' → logprob: -16.625003814697266
    10. 'e' → logprob: -16.875003814697266

Token 508: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -2.2961512513575144e-05
    2. 'system' → logprob: -10.750022888183594
    3. 'System' → logprob: -13.750022888183594
    4. 'ystem' → logprob: -15.250022888183594
    5. ' system' → logprob: -16.625022888183594
    6. 'ssystem' → logprob: -17.375022888183594
    7. '_SYSTEM' → logprob: -17.750022888183594
    8. 'SYSTEM' → logprob: -18.500022888183594
    9. '系统' → logprob: -20.250022888183594
    10. '-system' → logprob: -20.250022888183594

Token 509: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9040898880339228e-05
    2. '   ' → logprob: -10.750028610229492
    3. '       ' → logprob: -12.125028610229492
    4. ')
' → logprob: -13.250028610229492
    5. ' )' → logprob: -15.125028610229492
    6. ')

' → logprob: -17.500028610229492
    7. ' ' → logprob: -17.750028610229492
    8. '`)' → logprob: -17.750028610229492
    9. '<|end|>' → logprob: -17.875028610229492
    10. '),' → logprob: -18.625028610229492

Token 510: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00896351970732212
    2. '   ' → logprob: -4.758963584899902
    3. ' def' → logprob: -8.008963584899902
    4. '<|end|>' → logprob: -11.133963584899902
    5. '```' → logprob: -13.883963584899902
    6. '	def' → logprob: -14.133963584899902
    7. '<|end|>' → logprob: -16.633962631225586
    8. '
' → logprob: -17.133962631225586
    9. '  ' → logprob: -17.758962631225586
    10. ' ' → logprob: -17.883962631225586

Token 511: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.4021237802808173e-05
    2. ' def' → logprob: -11.250014305114746
    3. '   ' → logprob: -13.875014305114746
    4. '	def' → logprob: -19.50001335144043
    5. '```' → logprob: -19.87501335144043
    6. '
' → logprob: -21.25001335144043
    7. '    
' → logprob: -22.50001335144043
    8. 'import' → logprob: -22.87501335144043
    9. ' ' → logprob: -23.00001335144043
    10. ')' → logprob: -23.37501335144043

Token 512: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.0030239408370107412
    2. 'run' → logprob: -6.503024101257324
    3. 'process' → logprob: -6.503024101257324
    4. 'convert' → logprob: -11.378024101257324
    5. ' format' → logprob: -12.253024101257324
    6. 'read' → logprob: -12.503024101257324
    7. 'transform' → logprob: -14.128024101257324
    8. 'encode' → logprob: -14.878024101257324
    9. 'from' → logprob: -16.128023147583008
    10. 'execute' → logprob: -16.503023147583008

Token 513: '_numbers' (ID: 76842)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03846176341176033
    2. '_numbers' → logprob: -3.413461685180664
    3. '_inputs' → logprob: -6.538461685180664
    4. '_input' → logprob: -6.913461685180664
    5. '_data' → logprob: -7.288461685180664
    6. '(' → logprob: -7.288461685180664
    7. '_number' → logprob: -7.663461685180664
    8. '_output' → logprob: -8.788461685180664
    9. '_outputs' → logprob: -9.413461685180664
    10. '_results' → logprob: -9.538461685180664

Token 514: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.2471589798224159e-05
    2. '(' → logprob: -11.375012397766113
    3. ' (' → logprob: -14.000012397766113
    4. 'self' → logprob: -16.50001335144043
    5. '(sel' → logprob: -19.50001335144043
    6. '(
' → logprob: -20.00001335144043
    7. '(input' → logprob: -20.25001335144043
    8. '   ' → logprob: -20.25001335144043
    9. '(s' → logprob: -20.50001335144043
    10. 'from' → logprob: -21.00001335144043

Token 515: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006528667290695012
    2. 'self' → logprob: -7.37565279006958
    3. '(self' → logprob: -10.875653266906738
    4. '   ' → logprob: -13.000653266906738
    5. ')' → logprob: -13.750653266906738
    6. ',self' → logprob: -13.750653266906738
    7. '       ' → logprob: -13.875653266906738
    8. ' ,' → logprob: -14.250653266906738
    9. ',input' → logprob: -15.125653266906738
    10. '```' → logprob: -15.250653266906738

Token 516: ' numbers' (ID: 8663)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.14790230989456177
    2. 'input' → logprob: -3.022902250289917
    3. 'self' → logprob: -3.147902250289917
    4. ' inputs' → logprob: -3.772902250289917
    5. 'numbers' → logprob: -3.897902250289917
    6. 'lines' → logprob: -7.522902488708496
    7. ' numbers' → logprob: -7.522902488708496
    8. ' input' → logprob: -7.647902488708496
    9. ' self' → logprob: -8.022902488708496
    10. 'nums' → logprob: -8.022902488708496

Token 517: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000387535837944597
    2. 'self' → logprob: -8.000387191772461
    3. ')' → logprob: -10.875387191772461
    4. '(self' → logprob: -11.250387191772461
    5. '):' → logprob: -11.375387191772461
    6. '   ' → logprob: -12.750387191772461
    7. '```' → logprob: -13.125387191772461
    8. '       ' → logprob: -13.250387191772461
    9. '_:' → logprob: -14.875387191772461
    10. ' :' → logprob: -15.000387191772461

Token 518: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.01251271367073059
    2. ' Iterator' → logprob: -4.887512683868408
    3. 'List' → logprob: -5.637512683868408
    4. 'Iterable' → logprob: -6.762512683868408
    5. ')' → logprob: -9.262513160705566
    6. 'self' → logprob: -10.387513160705566
    7. 'list' → logprob: -10.762513160705566
    8. ' List' → logprob: -11.887513160705566
    9. ' Iterable' → logprob: -12.012513160705566
    10. 'iter' → logprob: -12.512513160705566

Token 519: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.3856492842023727e-06
    2. 'int' → logprob: -13.625000953674316
    3. '<int' → logprob: -16.500001907348633
    4. '[Int' → logprob: -19.625001907348633
    5. '```' → logprob: -20.250001907348633
    6. '[' → logprob: -20.250001907348633
    7. '=int' → logprob: -20.375001907348633
    8. ')' → logprob: -20.625001907348633
    9. ':int' → logprob: -21.625001907348633
    10. '(int' → logprob: -21.625001907348633

Token 520: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019380348967388272
    2. '])' → logprob: -6.2519378662109375
    3. '):
' → logprob: -12.876937866210938
    4. '`)' → logprob: -12.876937866210938
    5. ' )' → logprob: -13.501937866210938
    6. '})' → logprob: -13.626937866210938
    7. '）' → logprob: -14.626937866210938
    8. '))' → logprob: -14.876937866210938
    9. '>)' → logprob: -15.126937866210938
    10. '   ' → logprob: -15.501937866210938

Token 521: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6484119892120361
    2. ' ->' → logprob: -1.3984119892120361
    3. '->' → logprob: -1.5234119892120361
    4. ':' → logprob: -4.648411750793457
    5. '   ' → logprob: -6.773411750793457
    6. ')->' → logprob: -7.023411750793457
    7. '       ' → logprob: -7.773411750793457
    8. ':
' → logprob: -9.648411750793457
    9. '>' → logprob: -10.398411750793457
    10. '):
' → logprob: -11.523411750793457

Token 522: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.024146217852830887
    2. ' Iterator' → logprob: -3.774146318435669
    3. 'list' → logprob: -7.64914608001709
    4. 'str' → logprob: -8.39914608001709
    5. 'List' → logprob: -9.02414608001709
    6. 'Iterable' → logprob: -10.39914608001709
    7. '	Iterator' → logprob: -11.27414608001709
    8. ' list' → logprob: -11.64914608001709
    9. 'iterator' → logprob: -11.89914608001709
    10. ' str' → logprob: -11.89914608001709

Token 523: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: 0.0
    2. 'str' → logprob: -18.0
    3. '[' → logprob: -18.625
    4. '(str' → logprob: -21.75
    5. '```' → logprob: -22.0
    6. ' [' → logprob: -23.0
    7. '=str' → logprob: -23.125
    8. '[int' → logprob: -23.125
    9. '	str' → logprob: -23.375
    10. '.str' → logprob: -23.375

Token 524: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3876400887966156
    2. '):
' → logprob: -1.137640118598938
    3. ')' → logprob: -8.137639999389648
    4. '   ' → logprob: -8.262639999389648
    5. '):
' → logprob: -8.887639999389648
    6. '       ' → logprob: -10.012639999389648
    7. ':' → logprob: -10.387639999389648
    8. ' ' → logprob: -14.012639999389648
    9. '):

' → logprob: -14.137639999389648
    10. ':
' → logprob: -14.512639999389648

Token 525: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002166491176467389
    2. ' return' → logprob: -8.875216484069824
    3. 'return' → logprob: -9.625216484069824
    4. ' for' → logprob: -11.625216484069824
    5. '   ' → logprob: -14.500216484069824
    6. '```' → logprob: -15.000216484069824
    7. 'for' → logprob: -15.250216484069824
    8. '	' → logprob: -15.750216484069824
    9. '      ' → logprob: -15.875216484069824
    10. '	return' → logprob: -16.37521743774414

Token 526: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44117769598960876
    2. 'return' (adapté à ' return') → logprob: -1.1911777257919312
    3. ' return' → logprob: -2.9411776065826416
    4. 'yield' → logprob: -10.191177368164062
    5. '	return' → logprob: -11.316177368164062
    6. ' yield' → logprob: -13.316177368164062
    7. ' for' → logprob: -14.441177368164062
    8. '	' → logprob: -14.441177368164062
    9. 'for' → logprob: -14.566177368164062
    10. '   ' → logprob: -14.566177368164062

Token 527: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020389800192788243
    2. ' self' → logprob: -8.500204086303711
    3. '       ' → logprob: -14.875204086303711
    4. '(self' → logprob: -18.62520408630371
    5. '	self' → logprob: -19.37520408630371
    6. '           ' → logprob: -19.50020408630371
    7. '   ' → logprob: -19.87520408630371
    8. '[self' → logprob: -21.12520408630371
    9. '=self' → logprob: -22.00020408630371
    10. 'Self' → logprob: -22.75020408630371

Token 528: '.processor' (ID: 152556)
  Prédit: '.processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.processor' → logprob: -4.320199877838604e-07
    2. 'processor' → logprob: -15.0
    3. '.process' → logprob: -18.125
    4. '.proc' → logprob: -19.125
    5. '.provider' → logprob: -19.375
    6. '.' → logprob: -20.0
    7. ' .' → logprob: -20.875
    8. ' processor' → logprob: -21.125
    9. '.parser' → logprob: -21.375
    10. '.processing' → logprob: -21.875

Token 529: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -1.8624639324116288e-06
    2. 'process' → logprob: -13.500001907348633
    3. '.' → logprob: -14.750001907348633
    4. '.format' → logprob: -16.875001907348633
    5. ' .' → logprob: -18.125001907348633
    6. '.perform' → logprob: -19.125001907348633
    7. '.encode' → logprob: -19.125001907348633
    8. ').' → logprob: -21.000001907348633
    9. '.handle' → logprob: -21.625001907348633
    10. '.Process' → logprob: -21.625001907348633

Token 530: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -4.320199877838604e-07
    2. 'numbers' → logprob: -15.25
    3. '(' → logprob: -17.25
    4. '(number' → logprob: -17.5
    5. '(inputs' → logprob: -17.875
    6. '(lines' → logprob: -19.0
    7. ' (' → logprob: -19.125
    8. '(n' → logprob: -20.25
    9. '(
' → logprob: -21.125
    10. '((' → logprob: -21.375

Token 531: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1279553291387856e-05
    2. ')
' → logprob: -12.125011444091797
    3. '<|end|>' → logprob: -12.250011444091797
    4. '       ' → logprob: -14.250011444091797
    5. '   ' → logprob: -15.500011444091797
    6. ' )' → logprob: -16.000011444091797
    7. '<|end|>' → logprob: -17.750011444091797
    8. '}' → logprob: -17.875011444091797
    9. '```' → logprob: -18.000011444091797
    10. '())' → logprob: -18.375011444091797

Token 532: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2523384690284729
    2. 'def' → logprob: -2.377338409423828
    3. '<|end|>' → logprob: -2.377338409423828
    4. '```' → logprob: -3.377338409423828
    5. 'import' → logprob: -6.252338409423828
    6. 'if' → logprob: -7.127338409423828
    7. '<|end|>' → logprob: -8.127338409423828
    8. '
' → logprob: -9.502338409423828
    9. 'from' → logprob: -9.877338409423828
    10. '[' → logprob: -11.127338409423828

Token 533: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.011055364273488522
    2. 'main' → logprob: -4.5110554695129395
    3. ' run' → logprob: -12.011054992675781
    4. ' example' → logprob: -14.386054992675781
    5. ' read' → logprob: -14.511054992675781
    6. 'example' → logprob: -15.886054992675781
    7. 'run' → logprob: -16.01105499267578
    8. '	main' → logprob: -16.38605499267578
    9. ' generate' → logprob: -17.88605499267578
    10. 'from' → logprob: -18.01105499267578

Token 534: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00011367550177965313
    2. '():
' → logprob: -9.250113487243652
    3. ' ():' → logprob: -11.250113487243652
    4. '()' → logprob: -12.375113487243652
    5. '():
' → logprob: -15.125113487243652
    6. '(' → logprob: -17.75011444091797
    7. '()>' → logprob: -18.12511444091797
    8. '():

' → logprob: -18.37511444091797
    9. '()">' → logprob: -19.62511444091797
    10. ':' → logprob: -19.62511444091797

Token 535: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6992162466049194
    2. ' import' → logprob: -0.6992162466049194
    3. '   ' → logprob: -5.199216365814209
    4. ' source' → logprob: -8.19921588897705
    5. 'source' → logprob: -9.44921588897705
    6. '```' → logprob: -9.57421588897705
    7. 'from' → logprob: -9.82421588897705
    8. ' input' → logprob: -10.82421588897705
    9. 'input' → logprob: -11.19921588897705
    10. ' from' → logprob: -11.57421588897705

Token 536: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.00862119346857071
    2. ' import' → logprob: -4.7586212158203125
    3. 'from' → logprob: -12.633621215820312
    4. '   ' → logprob: -12.883621215820312
    5. 'source' → logprob: -14.758621215820312
    6. 'input' → logprob: -15.133621215820312
    7. '	import' → logprob: -16.758621215820312
    8. '```' → logprob: -16.883621215820312
    9. 'lines' → logprob: -17.008621215820312
    10. 'inputs' → logprob: -17.383621215820312

Token 537: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.003178544342517853
    2. ' sys' → logprob: -5.753178596496582
    3. '=sys' → logprob: -14.628178596496582
    4. '	sys' → logprob: -15.003178596496582
    5. '(sys' → logprob: -16.378177642822266
    6. '_sys' → logprob: -17.253177642822266
    7. '```' → logprob: -18.003177642822266
    8. '.sys' → logprob: -18.253177642822266
    9. 'file' → logprob: -19.253177642822266
    10. 'io' → logprob: -20.253177642822266

Token 538: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06753721088171005
    2. '    
' → logprob: -3.442537307739258
    3. '
' → logprob: -3.692537307739258
    4. 'input' → logprob: -5.067537307739258
    5. ' input' → logprob: -7.317537307739258
    6. 'numbers' → logprob: -7.692537307739258
    7. 'inputs' → logprob: -7.817537307739258
    8. ' numbers' → logprob: -9.442537307739258
    9. ' lines' → logprob: -9.442537307739258
    10. '   
' → logprob: -9.567537307739258

Token 539: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030988818034529686
    2. 'input' → logprob: -4.280988693237305
    3. 'numbers' → logprob: -5.280988693237305
    4. ' lines' → logprob: -5.780988693237305
    5. 'inputs' → logprob: -6.280988693237305
    6. 'for' → logprob: -6.405988693237305
    7. ' for' → logprob: -6.405988693237305
    8. ' input' → logprob: -6.530988693237305
    9. ' numbers' → logprob: -6.655988693237305
    10. 'lines' → logprob: -8.030988693237305

Token 540: ' input' (ID: 3422)
  Prédit: 'reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reader' → logprob: -0.617655873298645
    2. 'input' (adapté à ' input') → logprob: -0.867655873298645
    3. '   ' → logprob: -3.4926557540893555
    4. 'inputs' → logprob: -5.1176557540893555
    5. 'numbers' → logprob: -5.6176557540893555
    6. 'source' → logprob: -7.8676557540893555
    7. 'lines' → logprob: -7.9926557540893555
    8. ' reader' → logprob: -10.242655754089355
    9. 'for' → logprob: -10.992655754089355
    10. ' input' → logprob: -11.492655754089355

Token 541: '_reader' (ID: 55777)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.2587350010871887
    2. '_reader' → logprob: -1.883734941482544
    3. '_numbers' → logprob: -3.758734941482544
    4. '_source' → logprob: -4.383735179901123
    5. '_data' → logprob: -4.508735179901123
    6. '_iter' → logprob: -4.633735179901123
    7. '_iterator' → logprob: -4.633735179901123
    8. '_stream' → logprob: -5.008735179901123
    9. ' =' → logprob: -6.633735179901123
    10. 's' → logprob: -7.508735179901123

Token 542: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269284337759018
    2. ' =' → logprob: -2.1269283294677734
    3. '=sys' → logprob: -16.001928329467773
    4. ')' → logprob: -16.876928329467773
    5. '.' → logprob: -17.251928329467773
    6. '=input' → logprob: -17.376928329467773
    7. '   ' → logprob: -17.626928329467773
    8. 's' → logprob: -17.751928329467773
    9. '=
' → logprob: -17.876928329467773
    10. '＝' → logprob: -18.001928329467773

Token 543: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0015023599844425917
    2. ' Input' → logprob: -6.501502513885498
    3. '	Input' → logprob: -19.001502990722656
    4. '_input' → logprob: -20.876502990722656
    5. '   ' → logprob: -21.001502990722656
    6. '_Input' → logprob: -21.501502990722656
    7. '\Input' → logprob: -21.751502990722656
    8. '<Input' → logprob: -21.876502990722656
    9. 'input' → logprob: -22.001502990722656
    10. ' input' → logprob: -22.376502990722656

Token 544: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: 0.0
    2. 'Readers' → logprob: -18.625
    3. 'Writer' → logprob: -18.875
    4. '_reader' → logprob: -19.25
    5. '.Reader' → logprob: -20.0
    6. 'reader' → logprob: -20.0
    7. ' Reader' → logprob: -20.625
    8. 'Reading' → logprob: -20.875
    9. 'Read' → logprob: -21.0
    10. 'Viewer' → logprob: -21.875

Token 545: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0007860410842113197
    2. '(iter' → logprob: -7.625785827636719
    3. 'sys' → logprob: -8.125785827636719
    4. 'iter' → logprob: -14.250785827636719
    5. ' sys' → logprob: -15.000785827636719
    6. '=sys' → logprob: -15.250785827636719
    7. '(system' → logprob: -15.250785827636719
    8. '   ' → logprob: -15.500785827636719
    9. '((' → logprob: -15.625785827636719
    10. '(input' → logprob: -16.37578582763672

Token 546: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.226628895296017e-06
    2. '.' → logprob: -12.000007629394531
    3. '.stdout' → logprob: -14.875007629394531
    4. '.std' → logprob: -15.000007629394531
    5. '.argv' → logprob: -15.625007629394531
    6. ' .' → logprob: -17.00000762939453
    7. 'stdin' → logprob: -18.25000762939453
    8. '.__' → logprob: -19.50000762939453
    9. '.stderr' → logprob: -19.62500762939453
    10. '._' → logprob: -19.62500762939453

Token 547: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01253802701830864
    2. ')
' → logprob: -4.387537956237793
    3. ')
' → logprob: -11.137537956237793
    4. ' )' → logprob: -11.637537956237793
    5. ')

' → logprob: -13.137537956237793
    6. '.readline' → logprob: -14.762537956237793
    7. ')`' → logprob: -15.012537956237793
    8. ' )
' → logprob: -15.137537956237793
    9. '))' → logprob: -15.137537956237793
    10. '.readlines' → logprob: -15.387537956237793

Token 548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4346356689929962
    2. 'numbers' → logprob: -1.0596356391906738
    3. 'nums' → logprob: -5.934635639190674
    4. 'ints' → logprob: -6.559635639190674
    5. ' numbers' → logprob: -6.684635639190674
    6. 'inputs' → logprob: -8.434636116027832
    7. 'input' → logprob: -9.184636116027832
    8. 'number' → logprob: -9.684636116027832
    9. 'for' → logprob: -9.934636116027832
    10. '    
' → logprob: -10.559636116027832

Token 549: ' library' (ID: 11282)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.0043195029720664024
    2. '   ' → logprob: -6.254319667816162
    3. 'nums' → logprob: -6.879319667816162
    4. 'ints' → logprob: -7.254319667816162
    5. ' numbers' → logprob: -7.754319667816162
    6. 'for' → logprob: -8.754319190979004
    7. 'number' → logprob: -10.504319190979004
    8. 'int' → logprob: -11.004319190979004
    9. 'inte' → logprob: -11.504319190979004
    10. 'num' → logprob: -12.504319190979004

Token 550: '_formatter' (ID: 191979)
  Prédit: '_formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_formatter' → logprob: -0.6774071455001831
    2. '_numbers' → logprob: -1.052407145500183
    3. '_number' → logprob: -2.1774072647094727
    4. 'Number' → logprob: -4.177407264709473
    5. 'formatter' → logprob: -4.427407264709473
    6. '_output' → logprob: -6.552407264709473
    7. '_format' → logprob: -8.302407264709473
    8. 'Numbers' → logprob: -8.802407264709473
    9. '_processor' → logprob: -8.802407264709473
    10. 'Formatter' → logprob: -9.177407264709473

Token 551: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38696545362472534
    2. ' =' → logprob: -1.1369655132293701
    3. '=format' → logprob: -9.51196575164795
    4. '.format' → logprob: -11.13696575164795
    5. '   ' → logprob: -13.26196575164795
    6. ' ' → logprob: -13.38696575164795
    7. 'format' → logprob: -14.13696575164795
    8. '  ' → logprob: -14.76196575164795
    9. '=form' → logprob: -14.88696575164795
    10. '.' → logprob: -15.13696575164795

Token 552: ' Library' (ID: 16583)
  Prédit: 'Library'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Library' → logprob: -0.07889000326395035
    2. ' Library' → logprob: -2.578890085220337
    3. '   ' → logprob: -15.578889846801758
    4. ' library' → logprob: -18.203889846801758
    5. '_library' → logprob: -18.703889846801758
    6. '.Library' → logprob: -19.203889846801758
    7. 'Lib' → logprob: -19.828889846801758
    8. 'library' → logprob: -20.578889846801758
    9. '    ' → logprob: -20.703889846801758
    10. ' ' → logprob: -20.828889846801758

Token 553: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: 0.0
    2. 'umber' → logprob: -17.5
    3. 'Numbers' → logprob: -17.625
    4. 'number' → logprob: -18.25
    5. '_number' → logprob: -18.625
    6. ' Number' → logprob: -18.625
    7. 'Numer' → logprob: -20.25
    8. 'Library' → logprob: -20.5
    9. '_Number' → logprob: -20.75
    10. 'er' → logprob: -21.875

Token 554: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: -0.000498701527249068
    2. 'formatter' → logprob: -7.6254987716674805
    3. 'Format' → logprob: -12.12549877166748
    4. '_formatter' → logprob: -12.75049877166748
    5. 'System' → logprob: -14.00049877166748
    6. 'Number' → logprob: -14.12549877166748
    7. ' formatter' → logprob: -15.25049877166748
    8. 'format' → logprob: -15.25049877166748
    9. 'Library' → logprob: -15.75049877166748
    10. ' Formatter' → logprob: -16.250497817993164

Token 555: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03549377992749214
    2. 'numbers' → logprob: -4.285493850708008
    3. '
' → logprob: -4.535493850708008
    4. 'for' → logprob: -4.785493850708008
    5. ' for' → logprob: -6.910493850708008
    6. ' numbers' → logprob: -7.535493850708008
    7. '    
' → logprob: -7.785493850708008
    8. 'nums' → logprob: -10.785493850708008
    9. '
' → logprob: -11.535493850708008
    10. 'input' → logprob: -11.660493850708008

Token 556: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6347943544387817
    2. '   ' → logprob: -0.8847943544387817
    3. 'numbers' → logprob: -3.134794235229492
    4. ' for' → logprob: -4.384794235229492
    5. ' numbers' → logprob: -7.009794235229492
    6. 'outputs' → logprob: -9.509794235229492
    7. 'nums' → logprob: -9.634794235229492
    8. 'output' → logprob: -9.759794235229492
    9. 'inputs' → logprob: -10.509794235229492
    10. ' ' → logprob: -11.634794235229492

Token 557: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023622898384928703
    2. 'numbers' → logprob: -3.773622989654541
    3. ' for' → logprob: -8.273622512817383
    4. 'formatted' → logprob: -9.648622512817383
    5. 'nums' → logprob: -11.023622512817383
    6. 'output' → logprob: -11.148622512817383
    7. ' numbers' → logprob: -11.148622512817383
    8. '   ' → logprob: -12.148622512817383
    9. 'outputs' → logprob: -12.523622512817383
    10. 'inputs' → logprob: -14.023622512817383

Token 558: ' formatted' (ID: 43831)
  Prédit: 'formatted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formatted' → logprob: -0.6966383457183838
    2. 'output' → logprob: -1.6966383457183838
    3. 'encoded' → logprob: -2.446638345718384
    4. ' formatted' → logprob: -2.571638345718384
    5. ' output' → logprob: -2.821638345718384
    6. 'representation' → logprob: -3.071638345718384
    7. ' representation' → logprob: -3.946638345718384
    8. 'line' → logprob: -4.571638107299805
    9. ' encoded' → logprob: -4.946638107299805
    10. ' line' → logprob: -5.196638107299805

Token 559: ' in' (ID: 306)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.04974076896905899
    2. '_num' → logprob: -3.049740791320801
    3. '_str' → logprob: -7.174740791320801
    4. 'num' → logprob: -8.9247407913208
    5. '_line' → logprob: -9.4247407913208
    6. 'number' → logprob: -9.5497407913208
    7. '_string' → logprob: -10.0497407913208
    8. '_value' → logprob: -10.6747407913208
    9. '_output' → logprob: -11.0497407913208
    10. ' in' → logprob: -11.4247407913208

Token 560: ' library' (ID: 11282)
  Prédit: 'library'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'library' → logprob: -0.0025504580698907375
    2. ' library' → logprob: -6.0025506019592285
    3. '   ' → logprob: -9.50255012512207
    4. 'ibrary' → logprob: -17.25255012512207
    5. '_library' → logprob: -17.50255012512207
    6. '.library' → logprob: -17.62755012512207
    7. 'Library' → logprob: -19.50255012512207
    8. '    ' → logprob: -19.50255012512207
    9. ' ' → logprob: -19.87755012512207
    10. '  ' → logprob: -19.87755012512207

Token 561: '_formatter' (ID: 191979)
  Prédit: '_formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_formatter' → logprob: -0.00010282796574756503
    2. '.format' → logprob: -9.250102996826172
    3. 'formatter' → logprob: -12.875102996826172
    4. 'format' → logprob: -14.000102996826172
    5. '._' → logprob: -14.000102996826172
    6. 's' → logprob: -14.375102996826172
    7. '_format' → logprob: -14.500102996826172
    8. '   ' → logprob: -15.250102996826172
    9. '.form' → logprob: -15.375102996826172
    10. 'Formatter' → logprob: -15.750102996826172

Token 562: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -7.896309739408025e-07
    2. 'format' → logprob: -15.000000953674316
    3. '.form' → logprob: -15.125000953674316
    4. '.' → logprob: -16.625
    5. ' .' → logprob: -16.75
    6. '	format' → logprob: -18.375
    7. '=format' → logprob: -19.25
    8. ' format' → logprob: -19.375
    9. '.Format' → logprob: -19.875
    10. '.output' → logprob: -21.125

Token 563: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -1.9361264946837764e-07
    2. 'ted' → logprob: -16.5
    3. '_number' → logprob: -17.5
    4. 'ter' → logprob: -18.25
    5. '(numbers' → logprob: -18.875
    6. 'numbers' → logprob: -19.0
    7. '_' → logprob: -21.375
    8. 'Numbers' → logprob: -21.375
    9. '_nums' → logprob: -21.375
    10. 'ed' → logprob: -21.5

Token 564: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00017350474081467837
    2. '(' → logprob: -9.375173568725586
    3. '(sys' → logprob: -10.375173568725586
    4. '(iter' → logprob: -10.625173568725586
    5. ' (' → logprob: -11.750173568725586
    6. '((' → logprob: -12.000173568725586
    7. 'input' → logprob: -12.125173568725586
    8. '(l' → logprob: -13.375173568725586
    9. '(reader' → logprob: -13.375173568725586
    10. '(inputs' → logprob: -13.625173568725586

Token 565: '_reader' (ID: 55777)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0029901787638664246
    2. '(input' → logprob: -6.627990245819092
    3. '(iter' → logprob: -7.627990245819092
    4. '=sys' → logprob: -7.752990245819092
    5. '(reader' → logprob: -8.377989768981934
    6. '((' → logprob: -8.377989768981934
    7. '(' → logprob: -9.877989768981934
    8. '(stdin' → logprob: -10.252989768981934
    9. '_reader' → logprob: -10.502989768981934
    10. '(system' → logprob: -10.627989768981934

Token 566: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -5.037835580878891e-05
    2. '().' → logprob: -10.37505054473877
    3. 'read' → logprob: -11.50005054473877
    4. ')' → logprob: -12.62505054473877
    5. '.' → logprob: -13.25005054473877
    6. ').' → logprob: -13.50005054473877
    7. ' .' → logprob: -13.87505054473877
    8. '```' → logprob: -15.12505054473877
    9. '.readline' → logprob: -15.12505054473877
    10. '()' → logprob: -15.62505054473877

Token 567: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: 0.0
    2. 'int' → logprob: -16.875
    3. 'ints' → logprob: -17.375
    4. '_in' → logprob: -17.375
    5. ' _' → logprob: -18.625
    6. '
' → logprob: -19.5
    7. 'Ints' → logprob: -20.25
    8. '_
' → logprob: -20.625
    9. '```' → logprob: -20.75
    10. '_str' → logprob: -20.875

Token 568: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007038470357656479
    2. '())' → logprob: -5.132038593292236
    3. '()' → logprob: -7.257038593292236
    4. 'ts' → logprob: -7.882038593292236
    5. '())
' → logprob: -12.007038116455078
    6. '()]' → logprob: -12.507038116455078
    7. ')' → logprob: -12.507038116455078
    8. '()):
' → logprob: -13.257038116455078
    9. 't' → logprob: -13.507038116455078
    10. 'eger' → logprob: -13.882038116455078

Token 569: '()):
' (ID: 83536)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011231258511543274
    2. '()):
' → logprob: -4.886231422424316
    3. '():' → logprob: -5.761231422424316
    4. '):' → logprob: -7.761231422424316
    5. ' (' → logprob: -10.261231422424316
    6. '():
' → logprob: -12.261231422424316
    7. '(' → logprob: -13.261231422424316
    8. ' ():' → logprob: -13.886231422424316
    9. ' ()' → logprob: -14.011231422424316
    10. '   ' → logprob: -14.886231422424316

Token 570: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023351578041911125
    2. 'print' → logprob: -3.7733516693115234
    3. ' print' → logprob: -9.273351669311523
    4. '   ' → logprob: -11.398351669311523
    5. '```' → logprob: -14.523351669311523
    6. '           ' → logprob: -15.273351669311523
    7. '
' → logprob: -15.898351669311523
    8. '(print' → logprob: -16.148351669311523
    9. '	print' → logprob: -17.023351669311523
    10. '        
' → logprob: -17.273351669311523

Token 571: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007879876531660557
    2. '       ' → logprob: -5.007879734039307
    3. ' print' → logprob: -6.757879734039307
    4. '   ' → logprob: -13.507880210876465
    5. '           ' → logprob: -14.507880210876465
    6. '```' → logprob: -15.757880210876465
    7. '	print' → logprob: -15.882880210876465
    8. '#print' → logprob: -18.88287925720215
    9. '(print' → logprob: -20.50787925720215
    10. '.print' → logprob: -20.50787925720215

Token 572: '(form' (ID: 33445)
  Prédit: '(form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(form' → logprob: -1.9361264946837764e-07
    2. 'formatted' → logprob: -16.0
    3. '(' → logprob: -19.5
    4. 'form' → logprob: -21.0
    5. '(f' → logprob: -21.375
    6. '(format' → logprob: -22.75
    7. '	form' → logprob: -23.0
    8. ' formatted' → logprob: -23.0
    9. '(filtered' → logprob: -25.125
    10. '_form' → logprob: -25.625

Token 573: 'atted' (ID: 19639)
  Prédit: 'atted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atted' → logprob: -0.0001987722353078425
    2. 'ated' → logprob: -9.000198364257812
    3. 'at' → logprob: -9.500198364257812
    4. 'att' → logprob: -14.625198364257812
    5. ' at' → logprob: -17.000198364257812
    6. 'ed' → logprob: -17.000198364257812
    7. 'atting' → logprob: -17.000198364257812
    8. '-' → logprob: -18.375198364257812
    9. 'tted' → logprob: -19.250198364257812
    10. '   ' → logprob: -19.500198364257812

Token 574: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3782830137643032e-05
    2. '())' → logprob: -12.00001335144043
    3. '()' → logprob: -12.12501335144043
    4. ' )' → logprob: -13.62501335144043
    5. ')
' → logprob: -15.50001335144043
    6. '   ' → logprob: -15.62501335144043
    7. '```' → logprob: -15.75001335144043
    8. '')' → logprob: -16.25001335144043
    9. '(' → logprob: -16.37501335144043
    10. '))' → logprob: -16.50001335144043

Token 575: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006045639514923096
    2. '
' → logprob: -5.131045818328857
    3. ' if' → logprob: -9.6310453414917
    4. '<|end|>' → logprob: -10.7560453414917
    5. '```' → logprob: -10.7560453414917
    6. '\n' → logprob: -12.5060453414917
    7. '  
' → logprob: -13.1310453414917
    8. '

' → logprob: -13.5060453414917
    9. '    
' → logprob: -14.8810453414917
    10. '\
' → logprob: -15.3810453414917

Token 576: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1005006954073906
    2. '__' → logprob: -2.3505005836486816
    3. '_name' → logprob: -9.10050106048584
    4. 'name' → logprob: -9.22550106048584
    5. ' ' → logprob: -9.72550106048584
    6. '_' → logprob: -11.97550106048584
    7. ' name' → logprob: -12.47550106048584
    8. '___' → logprob: -12.72550106048584
    9. 'Name' → logprob: -12.97550106048584
    10. ' ' → logprob: -13.10050106048584

Token 577: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07970964163541794
    2. ' ==' → logprob: -2.704709529876709
    3. ' __' → logprob: -5.204709529876709
    4. '==' → logprob: -5.579709529876709
    5. '.__' → logprob: -8.454710006713867
    6. 'name' → logprob: -8.829710006713867
    7. '=="' → logprob: -10.079710006713867
    8. 'if' → logprob: -11.079710006713867
    9. '__.__' → logprob: -11.579710006713867
    10. '.name' → logprob: -11.954710006713867

Token 578: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.014684110297821e-06
    2. '__.__' → logprob: -12.625008583068848
    3. '==' → logprob: -12.750008583068848
    4. ' ==' → logprob: -13.125008583068848
    5. '__.' → logprob: -14.875008583068848
    6. '__
' → logprob: -16.250009536743164
    7. '=="' → logprob: -16.375009536743164
    8. '__["' → logprob: -17.500009536743164
    9. '___' → logprob: -17.625009536743164
    10. 'name' → logprob: -17.750009536743164

Token 579: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10246854275465012
    2. ' ==' → logprob: -2.977468490600586
    3. '==' → logprob: -3.102468490600586
    4. '=="' → logprob: -6.602468490600586
    5. '=='' → logprob: -8.977468490600586
    6. '.__' → logprob: -11.477468490600586
    7. '["' → logprob: -11.477468490600586
    8. '__.__' → logprob: -11.477468490600586
    9. '___' → logprob: -12.102468490600586
    10. '['' → logprob: -12.102468490600586

Token 580: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1602393537759781
    2. ''' → logprob: -1.910239338874817
    3. ' "__' → logprob: -11.160239219665527
    4. ' '__' → logprob: -14.410239219665527
    5. '__' → logprob: -14.785239219665527
    6. ''"' → logprob: -16.660240173339844
    7. '("__' → logprob: -18.035240173339844
    8. '"user' → logprob: -18.285240173339844
    9. '"name' → logprob: -18.535240173339844
    10. '   ' → logprob: -19.035240173339844

Token 581: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.16057626903057098
    2. '__' → logprob: -1.9105762243270874
    3. '"' → logprob: -8.285575866699219
    4. 'name' → logprob: -9.535575866699219
    5. '_main' → logprob: -11.160575866699219
    6. ''' → logprob: -11.910575866699219
    7. ' main' → logprob: -12.535575866699219
    8. '__":
' → logprob: -13.785575866699219
    9. '___' → logprob: -15.035575866699219
    10. 'Main' → logprob: -15.410575866699219

Token 582: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3874022662639618
    2. '__":
' → logprob: -1.1374022960662842
    3. '__.' → logprob: -8.512402534484863
    4. '__':
' → logprob: -8.762402534484863
    5. '__.__' → logprob: -9.137402534484863
    6. '__["' → logprob: -10.512402534484863
    7. '__
' → logprob: -10.512402534484863
    8. '__:' → logprob: -12.012402534484863
    9. '__",' → logprob: -13.262402534484863
    10. '_' → logprob: -13.762402534484863

Token 583: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05059744045138359
    2. ''' → logprob: -3.0505974292755127
    3. '__' → logprob: -6.300597667694092
    4. 'main' → logprob: -8.925597190856934
    5. ' "__' → logprob: -10.675597190856934
    6. '   ' → logprob: -11.550597190856934
    7. ''m' → logprob: -13.175597190856934
    8. ' '__' → logprob: -13.675597190856934
    9. '`' → logprob: -14.425597190856934
    10. ' main' → logprob: -14.550597190856934

Token 584: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -14.250000953674316
    3. '	main' → logprob: -20.25
    4. '   ' → logprob: -22.25
    5. '.main' → logprob: -24.875
    6. '(main' → logprob: -25.0
    7. '_main' → logprob: -25.0
    8. '
' → logprob: -27.125
    9. 'Main' → logprob: -28.5
    10. 'maine' → logprob: -28.875

Token 585: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 583
Tokens correctement prédits (1ère position, stricte): 261
Tokens correctement prédits (1ère position, avec adaptation): 295
Tokens correctement prédits (top 10): 519
Précision stricte (1ère position): 44.77%
Précision adaptée (1ère position): 50.60%
Précision (top 10): 89.02%
================================================================================
