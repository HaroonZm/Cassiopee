================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def main():
    S,N,K = map(int, sys.stdin.readline().split())
    S = abs(S)
    min_sum = K
    max_sum = K*N

    if S < min_sum:
        print(-1)
        return
    if S > max_sum and S % 1 != 0:
        print(-1)
        return

    # Check reachability via parity
    # Sum of K numbers from 1..N, distribution support is [K, K*N]
    # The sum modulo 1 is always integer, so no fractional issues
    # We need to check if (S - K) is reachable as sum of K integers from {0..N-1}
    # Because sum of K integers from 1..N is K + sum of K integers from 0..N-1

    remainder = (S - K) % 1
    if remainder != 0:
        print(-1)
        return

    # The sums of K numbers from 1..N form a distribution equivalent to sum of K uniform integers over [1..N]
    # The minimal sum is K, maximal sum is K*N

    # Reachability check: S in [K, K*N]
    if S < K or S > K*N:
        print(-1)
        return

    # For large S and K, probability that the sum of K uniform(1..N) equals S can be computed via DP or FFT,
    # but that's heavy.
    # Here, we can compute gcd of steps to decide if S is reachable at all
    # Since steps are integers from 1 to N, gcd is 1.
    # So any sum from K to K*N is possible.
    # So we only need to check if S in [K, K*N], which is done.

    # The expected value E of the first hitting time of a random walk on a line with positive integer steps and absorption at 0:
    # From position S > 0, E satisfies E = 1 + sum P(x) E(S-x)
    # with E(0)=0

    # Since the increments are always positive, the random walk decreases position by a random amount between K and K*N (position moves S - sum_of_steps)

    # Wait, in the problem, the jump is from current position towards the witch (at 0)
    # So next position = current - sum_of_steps

    # So E(S) = 1 + sum_{s} P(s) * E(S - s), with E(0)=0 and E(x<0)=0
    # For S < K, E(S) is undefined or no solution

    # We will solve for E(0..S) using DP
    max_state = S
    dp = [0.0]*(max_state+1)
    prob = [0]*(max_state+1)

    # Precompute distribution of sum of K uniform(1..N)
    # Use DP to get count of ways to make sum s from K to K*N

    max_sum = K*N
    ways = [0]*(max_sum+1)
    ways_prev = [0]*(max_sum+1)
    ways_prev[0] = 1
    for _ in range(K):
        for s in range(max_sum+1):
            ways[s] = 0
        for s in range(max_sum+1):
            if ways_prev[s] == 0:
                continue
            for v in range(1, N+1):
                if s+v <= max_sum:
                    ways[s+v] += ways_prev[s]
        ways, ways_prev = ways_prev, ways

    total_ways = N**K
    dist = [0.0]*(max_sum+1)
    for s in range(K, max_sum+1):
        dist[s] = ways_prev[s]/total_ways

    # Since S is large (up to 10^9), we can't do DP up to S.
    # We exploit the linearity and monotonicity:
    # Let E be expected hitting time at position x:
    # E(x) = 1 + sum_{s=K}^{K*N} dist[s] * E(x - s), with E(y <= 0) = 0

    # For large x, approximate:
    # E(x) ~ x / E[step], with E[step] = mean step length
    mean_step = (K*(N+1))/2
    if mean_step == 0:
        print(-1)
        return

    # Also check if S is divisible by gcd of step sizes:
    # steps are 1..N, gcd always 1 -> always hit 0 eventually

    # So expected time = S / mean_step

    # But since steps >= K and S can be smaller than K, if S < K, output -1
    if S < K:
        print(-1)
        return

    # Output expected value with required precision
    ans = S / mean_step
    print(f"{ans:.9f}")

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3437388837337494
    2. '.' → logprob: -1.5937389135360718
    3. '<|end|>' → logprob: -2.9687387943267822
    4. '\' → logprob: -4.468739032745361
    5. 'import' → logprob: -5.093739032745361
    6. 'newline' → logprob: -5.093739032745361
    7. '<|end|>' → logprob: -5.968739032745361
    8. '' → logprob: -5.968739032745361
    9. '\r' → logprob: -6.093739032745361
    10. '
' → logprob: -6.343739032745361

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2897878587245941
    2. 'import' → logprob: -2.539787769317627
    3. '\n' → logprob: -2.664787769317627
    4. '\' → logprob: -3.164787769317627
    5. '```' → logprob: -3.914787769317627
    6. '
' → logprob: -4.039787769317627
    7. '<|end|>' → logprob: -4.664787769317627
    8. ',' → logprob: -5.289787769317627
    9. '

' → logprob: -5.664787769317627
    10. '<|end|>' → logprob: -6.914787769317627

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8014910221099854
    2. '\' → logprob: -1.8014910221099854
    3. 'import' → logprob: -1.9264910221099854
    4. '\n' → logprob: -2.1764910221099854
    5. '```' → logprob: -3.1764910221099854
    6. 'def' → logprob: -3.3014910221099854
    7. '#' → logprob: -4.676490783691406
    8. ',' → logprob: -4.676490783691406
    9. '
' → logprob: -5.176490783691406
    10. '*' → logprob: -5.301490783691406

Token 7: ' main' (ID: 2758)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005158595158718526
    2. ':' → logprob: -8.750515937805176
    3. '(:' → logprob: -8.750515937805176
    4. '():' → logprob: -9.125515937805176
    5. ' (' → logprob: -10.500515937805176
    6. '(
' → logprob: -10.750515937805176
    7. '):' → logprob: -11.500515937805176
    8. ')' → logprob: -12.500515937805176
    9. '```' → logprob: -12.500515937805176
    10. '(`' → logprob: -12.625515937805176

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058386217802762985
    2. '(' → logprob: -3.5583863258361816
    3. ' ' → logprob: -4.433386325836182
    4. ':' → logprob: -5.058386325836182
    5. 'print' → logprob: -6.183386325836182
    6. '    ' → logprob: -6.308386325836182
    7. '\' → logprob: -6.433386325836182
    8. '  ' → logprob: -7.433386325836182
    9. '():' → logprob: -7.433386325836182
    10. '(n' → logprob: -7.808386325836182

Token 10: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6796722412109375
    2. '   ' → logprob: -1.8046722412109375
    3. 'n' → logprob: -2.4296722412109375
    4. '    ' → logprob: -2.8046722412109375
    5. 'x' → logprob: -3.1796722412109375
    6. 'print' → logprob: -3.4296722412109375
    7. ' print' → logprob: -4.0546722412109375
    8. 'i' → logprob: -4.1796722412109375
    9. 'r' → logprob: -4.4296722412109375
    10. 'p' → logprob: -4.8046722412109375

Token 11: ',N' (ID: 49539)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20527128875255585
    2. '.' → logprob: -2.4552712440490723
    3. '=' → logprob: -3.0802712440490723
    4. ' ' → logprob: -3.4552712440490723
    5. '[' → logprob: -5.080271244049072
    6. '   ' → logprob: -5.455271244049072
    7. ' .' → logprob: -6.080271244049072
    8. ':' → logprob: -6.455271244049072
    9. '  ' → logprob: -6.830271244049072
    10. '    ' → logprob: -6.830271244049072

Token 12: ',K' (ID: 107147)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03863060846924782
    2. '=' → logprob: -3.288630723953247
    3. ',' → logprob: -8.163630485534668
    4. ' ' → logprob: -8.288630485534668
    5. ' ,' → logprob: -11.038630485534668
    6. '  ' → logprob: -11.413630485534668
    7. '_' → logprob: -11.913630485534668
    8. ')' → logprob: -12.038630485534668
    9. '.' → logprob: -12.913630485534668
    10. ' =
' → logprob: -13.038630485534668

Token 13: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 14: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0715218335390091
    2. 'map' → logprob: -2.946521759033203
    3. ' input' → logprob: -4.196521759033203
    4. 'input' → logprob: -6.696521759033203
    5. ' list' → logprob: -8.571521759033203
    6. ' sys' → logprob: -11.696521759033203
    7. 'list' → logprob: -11.696521759033203
    8. ' ' → logprob: -12.196521759033203
    9. ' [' → logprob: -12.321521759033203
    10. '[' → logprob: -14.071521759033203

Token 15: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3535507023334503
    2. '(int' → logprob: -1.478550672531128
    3. '(str' → logprob: -2.853550672531128
    4. '(lambda' → logprob: -4.478550910949707
    5. '(
' → logprob: -8.603550910949707
    6. '<|end|>' → logprob: -8.603550910949707
    7. '()' → logprob: -9.353550910949707
    8. '(input' → logprob: -9.853550910949707
    9. 'int' → logprob: -9.978550910949707
    10. '(list' → logprob: -10.103550910949707

Token 16: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8053168654441833
    2. '(sys' → logprob: -1.3053169250488281
    3. '(input' → logprob: -1.6803169250488281
    4. ',' → logprob: -2.805316925048828
    5. '(' → logprob: -3.680316925048828
    6. ',input' → logprob: -4.930316925048828
    7. 'input' → logprob: -6.555316925048828
    8. ')(' → logprob: -8.930316925048828
    9. '),' → logprob: -9.055316925048828
    10. ' (' → logprob: -9.180316925048828

Token 17: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5949521660804749
    2. ' input' → logprob: -0.8449521660804749
    3. ' sys' → logprob: -4.34495210647583
    4. 'sys' → logprob: -5.21995210647583
    5. ')' → logprob: -7.71995210647583
    6. ' )' → logprob: -11.719952583312988
    7. '(sys' → logprob: -14.844952583312988
    8. ' ' → logprob: -15.094952583312988
    9. '(input' → logprob: -15.844952583312988
    10. '=sys' → logprob: -15.844952583312988

Token 18: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.06690938025712967
    2. '.argv' → logprob: -3.1919093132019043
    3. '.' → logprob: -3.8169093132019043
    4. '.readline' → logprob: -6.566909313201904
    5. '.stdout' → logprob: -9.316909790039062
    6. '.input' → logprob: -9.816909790039062
    7. '.std' → logprob: -10.691909790039062
    8. ' .' → logprob: -10.941909790039062
    9. '.next' → logprob: -12.191909790039062
    10. '.read' → logprob: -12.441909790039062

Token 19: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.036461468786001205
    2. '.' → logprob: -3.411461353302002
    3. '.read' → logprob: -5.911461353302002
    4. ').' → logprob: -9.78646183013916
    5. ')' → logprob: -10.91146183013916
    6. '.readlines' → logprob: -11.16146183013916
    7. ' .' → logprob: -11.78646183013916
    8. '.)' → logprob: -12.91146183013916
    9. '.stdin' → logprob: -13.28646183013916
    10. ' readline' → logprob: -14.41146183013916

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.05641002953052521
    2. '())' → logprob: -2.931410074234009
    3. '()' → logprob: -6.55640983581543
    4. ')' → logprob: -9.43140983581543
    5. '()))' → logprob: -11.43140983581543
    6. ' ())' → logprob: -12.30640983581543
    7. '()[' → logprob: -12.68140983581543
    8. '(' → logprob: -13.80640983581543
    9. ' ().' → logprob: -14.30640983581543
    10. '())
' → logprob: -14.30640983581543

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0385778471827507
    2. 'strip' → logprob: -3.2885777950286865
    3. 'rstrip' → logprob: -7.538578033447266
    4. ' split' → logprob: -12.663578033447266
    5. 'read' → logprob: -14.413578033447266
    6. ' strip' → logprob: -15.788578033447266
    7. '(split' → logprob: -15.788578033447266
    8. ')' → logprob: -17.288578033447266
    9. 'spl' → logprob: -18.038578033447266
    10. ' ' → logprob: -18.538578033447266

Token 22: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2722669541835785
    2. ')' → logprob: -1.5222669839859009
    3. '()))' → logprob: -4.647266864776611
    4. '))' → logprob: -5.147266864776611
    5. '()' → logprob: -5.397266864776611
    6. '(' → logprob: -8.89726734161377
    7. '())
' → logprob: -11.52226734161377
    8. ' ())' → logprob: -11.52226734161377
    9. '('' → logprob: -11.64726734161377
    10. ')))' → logprob: -11.77226734161377

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6501926183700562
    2. ')' → logprob: -1.0251926183700562
    3. '
' → logprob: -2.9001927375793457
    4. '\n' → logprob: -3.9001927375793457
    5. '    
' → logprob: -4.400192737579346
    6. ' ' → logprob: -5.150192737579346
    7. '\' → logprob: -5.275192737579346
    8. ' 
' → logprob: -5.775192737579346
    9. '```' → logprob: -5.775192737579346
    10. '<|end|>' → logprob: -5.775192737579346

Token 24: ' S' (ID: 336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4998500645160675
    2. ')' → logprob: -2.749850034713745
    3. ' ' → logprob: -2.749850034713745
    4. ' 
' → logprob: -3.499850034713745
    5. '    
' → logprob: -3.624850034713745
    6. ' if' → logprob: -3.749850034713745
    7. '\' → logprob: -3.749850034713745
    8. '`' → logprob: -3.749850034713745
    9. '    ' → logprob: -3.874850034713745
    10. '```' → logprob: -4.374850273132324

Token 25: ' =' (ID: 314)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0737090110778809
    2. ' %' → logprob: -1.0737090110778809
    3. ' ' → logprob: -2.448709011077881
    4. '+' → logprob: -2.948709011077881
    5. '-' → logprob: -3.698709011077881
    6. ')' → logprob: -3.948709011077881
    7. '<|end|>' → logprob: -4.073709011077881
    8. '>' → logprob: -4.198709011077881
    9. ' >' → logprob: -4.198709011077881
    10. ' *' → logprob: -4.323709011077881

Token 26: ' abs' (ID: 8443)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.205999955534935
    2. 'S' → logprob: -2.3309998512268066
    3. ' K' → logprob: -3.9559998512268066
    4. ' math' → logprob: -4.080999851226807
    5. ' min' → logprob: -4.705999851226807
    6. ' ' → logprob: -4.705999851226807
    7. ' max' → logprob: -4.830999851226807
    8. ' int' → logprob: -5.080999851226807
    9. 'int' → logprob: -5.205999851226807
    10. 'max' → logprob: -5.955999851226807

Token 27: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.3485545516014099
    2. '(' → logprob: -1.2235546112060547
    3. '(K' → logprob: -9.723554611206055
    4. '(N' → logprob: -11.723554611206055
    5. ' (' → logprob: -11.723554611206055
    6. '((' → logprob: -11.848554611206055
    7. '(s' → logprob: -12.223554611206055
    8. '(T' → logprob: -12.348554611206055
    9. '(
' → logprob: -12.473554611206055
    10. '(math' → logprob: -13.723554611206055

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01947154849767685
    2. '-' → logprob: -4.394471645355225
    3. ' -' → logprob: -5.019471645355225
    4. ' )' → logprob: -8.894471168518066
    5. '-)' → logprob: -9.519471168518066
    6. '-S' → logprob: -10.019471168518066
    7. ')
' → logprob: -11.519471168518066
    8. '+' → logprob: -11.769471168518066
    9. '-K' → logprob: -11.894471168518066
    10. '   ' → logprob: -12.019471168518066

Token 29: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' min' (ID: 1349)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3907412588596344
    2. '_val' → logprob: -1.515741229057312
    3. '_value' → logprob: -3.5157413482666016
    4. '_sum' → logprob: -3.7657413482666016
    5. '_len' → logprob: -5.390741348266602
    6. '_length' → logprob: -5.765741348266602
    7. '_S' → logprob: -5.890741348266602
    8. '_possible' → logprob: -5.890741348266602
    9. '_step' → logprob: -6.015741348266602
    10. '_pos' → logprob: -6.015741348266602

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5328450202941895
    2. '_' → logprob: -1.5328450202941895
    3. '=' → logprob: -1.6578450202941895
    4. 's' → logprob: -6.2828450202941895
    5. '_=' → logprob: -6.4078450202941895
    6. ',' → logprob: -6.9078450202941895
    7. '_sum' → logprob: -7.1578450202941895
    8. '_val' → logprob: -7.9078450202941895
    9. ' ' → logprob: -8.157844543457031
    10. '_value' → logprob: -9.032844543457031

Token 33: ' K' (ID: 658)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.8256357312202454
    2. ' math' → logprob: -0.9506357312202454
    3. 'float' → logprob: -2.4506356716156006
    4. 'math' → logprob: -2.9506356716156006
    5. '0' → logprob: -4.45063591003418
    6. ' S' → logprob: -4.70063591003418
    7. ' ' → logprob: -4.82563591003418
    8. 'S' → logprob: -6.32563591003418
    9. ' sys' → logprob: -6.32563591003418
    10. ' None' → logprob: -6.57563591003418

Token 34: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9727349281311035
    2. ' *' → logprob: -1.2227349281311035
    3. '*' → logprob: -1.5977349281311035
    4. ' +' → logprob: -2.4727349281311035
    5. '<|end|>' → logprob: -3.8477349281311035
    6. ' ' → logprob: -4.8477349281311035
    7. '**' → logprob: -5.4727349281311035
    8. '-' → logprob: -6.3477349281311035
    9. '*(' → logprob: -6.8477349281311035
    10. ' **' → logprob: -7.0977349281311035

Token 35: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4423679709434509
    2. '<|end|>' → logprob: -1.8173680305480957
    3. '*' → logprob: -2.6923680305480957
    4. ' ' → logprob: -3.3173680305480957
    5. ' *' → logprob: -3.3173680305480957
    6. ' +' → logprob: -3.5673680305480957
    7. '<|end|>' → logprob: -5.192368030548096
    8. '   ' → logprob: -5.442368030548096
    9. '
' → logprob: -5.942368030548096
    10. ')' → logprob: -6.317368030548096

Token 36: ' max' (ID: 2999)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8014806509017944
    2. ' ' → logprob: -1.3014806509017944
    3. '*' → logprob: -1.9264806509017944
    4. ' *' → logprob: -3.051480770111084
    5. ' +' → logprob: -4.176480770111084
    6. '<|end|>' → logprob: -4.176480770111084
    7. ' 
' → logprob: -4.426480770111084
    8. '-' → logprob: -4.926480770111084
    9. '**' → logprob: -5.426480770111084
    10. '=' → logprob: -5.551480770111084

Token 37: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.20380884408950806
    2. '_' → logprob: -1.7038087844848633
    3. ' _' → logprob: -6.828808784484863
    4. '_s' → logprob: -8.078808784484863
    5. '_val' → logprob: -8.078808784484863
    6. '_S' → logprob: -8.453808784484863
    7. 'sum' → logprob: -9.453808784484863
    8. '_possible' → logprob: -9.453808784484863
    9. '_value' → logprob: -9.953808784484863
    10. 'Sum' → logprob: -10.078808784484863

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861729308962822
    2. '=' → logprob: -4.758617401123047
    3. ' ' → logprob: -13.633617401123047
    4. '_' → logprob: -14.508617401123047
    5. ',' → logprob: -15.508617401123047
    6. ')' → logprob: -15.633617401123047
    7. ' =
' → logprob: -15.883617401123047
    8. '  ' → logprob: -16.508617401123047
    9. '=int' → logprob: -16.633617401123047
    10. '<|end|>' → logprob: -16.633617401123047

Token 39: ' K' (ID: 658)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.45669981837272644
    2. 'S' → logprob: -1.4566998481750488
    3. ' K' → logprob: -2.956699848175049
    4. ' N' → logprob: -3.706699848175049
    5. ' ' → logprob: -3.706699848175049
    6. ' math' → logprob: -4.706699848175049
    7. 'K' → logprob: -5.081699848175049
    8. 'N' → logprob: -5.206699848175049
    9. '10' → logprob: -5.956699848175049
    10. ' (' → logprob: -6.456699848175049

Token 40: '*N' (ID: 107360)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5583217740058899
    2. '<|end|>' → logprob: -1.3083217144012451
    3. '
' → logprob: -2.808321714401245
    4. ' ' → logprob: -3.058321714401245
    5. ' 
' → logprob: -3.933321714401245
    6. ' +' → logprob: -4.933321952819824
    7. '*' → logprob: -4.933321952819824
    8. '<|end|>' → logprob: -5.308321952819824
    9. '  
' → logprob: -6.308321952819824
    10. ' *' → logprob: -6.308321952819824

Token 41: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.11366110295057297
    2. ' ' → logprob: -2.613661050796509
    3. ' abs' → logprob: -3.738661050796509
    4. ' max' → logprob: -5.863661289215088
    5. ' (' → logprob: -6.113661289215088
    6. ' min' → logprob: -6.363661289215088
    7. ' K' → logprob: -6.613661289215088
    8. 'abs' → logprob: -7.363661289215088
    9. ' not' → logprob: -7.488661289215088
    10. 'S' → logprob: -7.863661289215088

Token 45: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1664794534444809
    2. ' >' → logprob: -2.7914793491363525
    3. ' <=' → logprob: -3.1664793491363525
    4. '<' → logprob: -3.4164793491363525
    5. '>' → logprob: -4.791479587554932
    6. ' >=' → logprob: -5.791479587554932
    7. '<=' → logprob: -6.041479587554932
    8. ' ==' → logprob: -6.666479587554932
    9. '==' → logprob: -7.041479587554932
    10. '%' → logprob: -7.916479587554932

Token 46: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.27342739701271057
    2. 'min' → logprob: -1.5234273672103882
    3. '=' → logprob: -4.148427486419678
    4. '=min' → logprob: -5.273427486419678
    5. ' ' → logprob: -8.77342700958252
    6. '0' → logprob: -10.27342700958252
    7. ' =' → logprob: -10.52342700958252
    8. '	min' → logprob: -10.77342700958252
    9. '1' → logprob: -11.46092700958252
    10. '|min' → logprob: -11.64842700958252

Token 47: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0020449827425181866
    2. '_' → logprob: -6.377045154571533
    3. '_:' → logprob: -8.377044677734375
    4. ':' → logprob: -9.752044677734375
    5. '_s' → logprob: -10.502044677734375
    6. ' _' → logprob: -11.002044677734375
    7. ' or' → logprob: -12.752044677734375
    8. ':_' → logprob: -13.627044677734375
    9. '_SUM' → logprob: -14.502044677734375
    10. 'sum' → logprob: -14.627044677734375

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03905981034040451
    2. ' or' → logprob: -3.28905987739563
    3. ' :' → logprob: -7.539059638977051
    4. ':
' → logprob: -8.16405963897705
    5. '):' → logprob: -9.03905963897705
    6. 'or' → logprob: -10.41405963897705
    7. ':return' → logprob: -10.66405963897705
    8. '   ' → logprob: -11.78905963897705
    9. ' and' → logprob: -12.66405963897705
    10. ' ' → logprob: -13.16405963897705

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1568780541419983
    2. ':' → logprob: -2.5318779945373535
    3. ' or' → logprob: -3.1568779945373535
    4. '   ' → logprob: -4.2818779945373535
    5. '    ' → logprob: -5.9068779945373535
    6. ':
' → logprob: -6.4068779945373535
    7. '\n' → logprob: -6.7818779945373535
    8. '        
' → logprob: -7.2818779945373535
    9. ' and' → logprob: -7.7818779945373535
    10. '):' → logprob: -8.281878471374512

Token 50: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36221566796302795
    2. '       ' → logprob: -2.237215757369995
    3. ' print' → logprob: -2.362215757369995
    4. 'print' (adapté à ' print') → logprob: -2.862215757369995
    5. '    ' → logprob: -3.487215757369995
    6. '\n' → logprob: -5.487215518951416
    7. ' return' → logprob: -5.862215518951416
    8. '```' → logprob: -6.737215518951416
    9. 'return' → logprob: -7.112215518951416
    10. ' ' → logprob: -7.237215518951416

Token 51: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01926729641854763
    2. '("' → logprob: -4.6442670822143555
    3. '('' → logprob: -5.3942670822143555
    4. '("("' → logprob: -6.2692670822143555
    5. '(S' → logprob: -6.6442670822143555
    6. '(-' → logprob: -6.7692670822143555
    7. '()' → logprob: -9.269267082214355
    8. '0' → logprob: -9.644267082214355
    9. '((' → logprob: -9.894267082214355
    10. '(`' → logprob: -10.019267082214355

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '2' → logprob: -14.500001907348633
    3. ' ' → logprob: -14.750001907348633
    4. 'S' → logprob: -16.250001907348633
    5. ')' → logprob: -16.500001907348633
    6. '(' → logprob: -16.750001907348633
    7. '100' → logprob: -17.000001907348633
    8. '10' → logprob: -17.312501907348633
    9. '-' → logprob: -17.375001907348633
    10. ' -' → logprob: -17.875001907348633

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018229898065328598
    2. ')
' → logprob: -4.018229961395264
    3. ')
' → logprob: -9.768229484558105
    4. '   ' → logprob: -11.143229484558105
    5. ')return' → logprob: -12.518229484558105
    6. ' )' → logprob: -13.268229484558105
    7. ')

' → logprob: -14.143229484558105
    8. '`)' → logprob: -14.893229484558105
    9. ')`' → logprob: -15.393229484558105
    10. '')' → logprob: -15.518229484558105

Token 54: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0945526584982872
    2. '       ' → logprob: -2.469552755355835
    3. '<|end|>' → logprob: -5.844552516937256
    4. ')' → logprob: -6.719552516937256
    5. ' ' → logprob: -7.844552516937256
    6. '
' → logprob: -8.094552993774414
    7. '  ' → logprob: -8.969552993774414
    8. '```' → logprob: -9.094552993774414
    9. '    ' → logprob: -9.219552993774414
    10. 'elif' → logprob: -9.594552993774414

Token 55: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6811428666114807
    2. '   ' → logprob: -0.9311428666114807
    3. '
' → logprob: -3.431142807006836
    4. 'return' (adapté à ' return') → logprob: -3.556142807006836
    5. ' return' → logprob: -3.931142807006836
    6. ')' → logprob: -4.931142807006836
    7. '```' → logprob: -5.681142807006836
    8. '\n' → logprob: -6.431142807006836
    9. '	return' → logprob: -6.681142807006836
    10. ' ' → logprob: -6.806142807006836

Token 56: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17788907885551453
    2. '<|end|>' → logprob: -2.177889108657837
    3. '   ' → logprob: -4.177888870239258
    4. '\n' → logprob: -4.427888870239258
    5. '    
' → logprob: -4.677888870239258
    6. '  
' → logprob: -5.302888870239258
    7. ' 
' → logprob: -5.677888870239258
    8. '```' → logprob: -6.802888870239258
    9. '<|end|>' → logprob: -6.927888870239258
    10. '

' → logprob: -7.177888870239258

Token 57: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40194690227508545
    2. '<|end|>' → logprob: -1.5269469022750854
    3. '   ' → logprob: -2.401947021484375
    4. '    
' → logprob: -4.901947021484375
    5. '\n' → logprob: -5.151947021484375
    6. '  
' → logprob: -5.651947021484375
    7. ' 
' → logprob: -6.151947021484375
    8. '```' → logprob: -6.401947021484375
    9. '<|end|>' → logprob: -6.526947021484375
    10. '   
' → logprob: -8.026947021484375

Token 58: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13320063054561615
    2. '   ' → logprob: -3.1332006454467773
    3. '<|end|>' → logprob: -3.2582006454467773
    4. ' 
' → logprob: -4.383200645446777
    5. '\n' → logprob: -4.633200645446777
    6. '    
' → logprob: -5.008200645446777
    7. '  
' → logprob: -5.508200645446777
    8. ' ' → logprob: -6.383200645446777
    9. '```' → logprob: -6.383200645446777
    10. ' if' → logprob: -6.633200645446777

Token 59: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.0162300206720829
    2. 'S' → logprob: -4.14123010635376
    3. ' ' → logprob: -8.766229629516602
    4. ' max' → logprob: -10.641229629516602
    5. '   ' → logprob: -11.766229629516602
    6. 'max' → logprob: -13.391229629516602
    7. '  ' → logprob: -13.391229629516602
    8. ' ' → logprob: -13.766229629516602
    9. '	S' → logprob: -14.578729629516602
    10. '>S' → logprob: -14.891229629516602

Token 60: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.033703796565532684
    2. '>' → logprob: -3.4087038040161133
    3. ' <=' → logprob: -10.658703804016113
    4. ' ' → logprob: -11.533703804016113
    5. ' ==' → logprob: -11.658703804016113
    6. '==' → logprob: -11.908703804016113
    7. ' <' → logprob: -12.908703804016113
    8. '<=' → logprob: -13.283703804016113
    9. ' >=' → logprob: -13.658703804016113
    10. '>S' → logprob: -14.158703804016113

Token 61: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.007606747094541788
    2. 'max' → logprob: -4.8826069831848145
    3. '(max' → logprob: -15.382606506347656
    4. '	max' → logprob: -16.007606506347656
    5. '=max' → logprob: -16.507606506347656
    6. '[max' → logprob: -17.007606506347656
    7. '_max' → logprob: -17.007606506347656
    8. ' ' → logprob: -17.257606506347656
    9. ':max' → logprob: -17.757606506347656
    10. ',max' → logprob: -18.632606506347656

Token 62: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00017839208885561675
    2. '_s' → logprob: -9.250178337097168
    3. '_' → logprob: -9.625178337097168
    4. ' _' → logprob: -11.625178337097168
    5. '_max' → logprob: -12.125178337097168
    6. '_SUM' → logprob: -15.125178337097168
    7. '__' → logprob: -15.375178337097168
    8. '_S' → logprob: -15.625178337097168
    9. '_
' → logprob: -16.500179290771484
    10. '_sub' → logprob: -16.625179290771484

Token 63: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013169880956411362
    2. ':
' → logprob: -4.388169765472412
    3. ' :' → logprob: -8.01317024230957
    4. '       ' → logprob: -8.76317024230957
    5. '   ' → logprob: -9.38817024230957
    6. ' :
' → logprob: -10.01317024230957
    7. '):' → logprob: -10.38817024230957
    8. '):
' → logprob: -12.26317024230957
    9. '    ' → logprob: -13.26317024230957
    10. ' or' → logprob: -13.51317024230957

Token 64: ' S' (ID: 336)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -1.091867446899414
    2. ' S' → logprob: -1.591867446899414
    3. ' (' → logprob: -1.841867446899414
    4. ' N' → logprob: -2.091867446899414
    5. 'K' → logprob: -3.591867446899414
    6. ' not' → logprob: -3.591867446899414
    7. ' max' → logprob: -3.841867446899414
    8. ' ' → logprob: -3.966867446899414
    9. 'S' → logprob: -4.091867446899414
    10. '(' → logprob: -4.341867446899414

Token 65: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.34555983543395996
    2. '%' → logprob: -1.97055983543396
    3. ' !=' → logprob: -2.22055983543396
    4. '!=' → logprob: -3.72055983543396
    5. ' >' → logprob: -4.845560073852539
    6. ' <' → logprob: -5.595560073852539
    7. '>' → logprob: -5.970560073852539
    8. ' ' → logprob: -6.595560073852539
    9. ' <=' → logprob: -6.595560073852539
    10. '<' → logprob: -7.220560073852539

Token 66: ' ' (ID: 220)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -1.1266355514526367
    2. '2' → logprob: -1.2516355514526367
    3. ' ' → logprob: -1.2516355514526367
    4. 'K' → logprob: -2.7516355514526367
    5. ' N' → logprob: -4.126635551452637
    6. '1' → logprob: -4.376635551452637
    7. 'N' → logprob: -6.251635551452637
    8. ' (' → logprob: -6.376635551452637
    9. '(' → logprob: -6.751635551452637
    10. '  ' → logprob: -7.001635551452637

Token 67: '1' (ID: 16)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5954369902610779
    2. '2' → logprob: -1.2204370498657227
    3. 'N' → logprob: -2.8454370498657227
    4. '1' → logprob: -2.8454370498657227
    5. ' K' → logprob: -3.8454370498657227
    6. ' ' → logprob: -4.845437049865723
    7. ' N' → logprob: -6.095437049865723
    8. 'max' → logprob: -6.095437049865723
    9. 'min' → logprob: -6.470437049865723
    10. '=' → logprob: -6.970437049865723

Token 68: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5674378275871277
    2. ' !=' → logprob: -0.9424378275871277
    3. '0' → logprob: -3.9424378871917725
    4. '!' → logprob: -5.192437648773193
    5. '>' → logprob: -5.192437648773193
    6. '==' → logprob: -5.692437648773193
    7. ' ' → logprob: -5.817437648773193
    8. '=' → logprob: -6.817437648773193
    9. '1' → logprob: -6.817437648773193
    10. '!==' → logprob: -6.817437648773193

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39445021748542786
    2. ' ' → logprob: -1.2694501876831055
    3. '=' → logprob: -3.7694501876831055
    4. ' K' → logprob: -4.5194501876831055
    5. 'K' → logprob: -4.6444501876831055
    6. '1' → logprob: -7.0194501876831055
    7. ' (' → logprob: -9.331950187683105
    8. ' =' → logprob: -10.144450187683105
    9. '  ' → logprob: -10.144450187683105
    10. ' N' → logprob: -10.331950187683105

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0882304310798645
    2. ' ' → logprob: -2.5882303714752197
    3. 'K' → logprob: -5.088230609893799
    4. ' K' → logprob: -6.213230609893799
    5. '=' → logprob: -7.838230609893799
    6. '1' → logprob: -7.963230609893799
    7. ' (' → logprob: -9.58823013305664
    8. 'N' → logprob: -9.71323013305664
    9. '(' → logprob: -9.71323013305664
    10. '(K' → logprob: -10.46323013305664

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012590413680300117
    2. ':
' → logprob: -7.501258850097656
    3. ' :' → logprob: -7.876258850097656
    4. '):' → logprob: -9.126258850097656
    5. '   ' → logprob: -9.376258850097656
    6. ':return' → logprob: -10.001258850097656
    7. '       ' → logprob: -10.626258850097656
    8. ')' → logprob: -12.126258850097656
    9. '<|end|>' → logprob: -12.126258850097656
    10. '    ' → logprob: -12.376258850097656

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.541469156742096
    2. ':' → logprob: -1.0414690971374512
    3. '   ' → logprob: -3.791469097137451
    4. ' ' → logprob: -3.791469097137451
    5. '<|end|>' → logprob: -4.166469097137451
    6. ':return' → logprob: -7.041469097137451
    7. '    ' → logprob: -7.416469097137451
    8. ':
' → logprob: -7.791469097137451
    9. ' :' → logprob: -7.791469097137451
    10. '.' → logprob: -7.791469097137451

Token 73: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1313818246126175
    2. 'print' (adapté à ' print') → logprob: -2.5063817501068115
    3. '       ' → logprob: -3.5063817501068115
    4. '   ' → logprob: -5.006381988525391
    5. ' return' → logprob: -6.506381988525391
    6. '```' → logprob: -7.006381988525391
    7. ' ' → logprob: -7.256381988525391
    8. '    ' → logprob: -7.506381988525391
    9. '.print' → logprob: -8.13138198852539
    10. '<|end|>' → logprob: -8.75638198852539

Token 74: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0017083751736208797
    2. '(' → logprob: -6.376708507537842
    3. '-' → logprob: -12.251708030700684
    4. ' (-' → logprob: -14.626708030700684
    5. '   ' → logprob: -15.501708030700684
    6. '(--' → logprob: -16.251708984375
    7. '(
' → logprob: -16.376708984375
    8. '(-(' → logprob: -16.376708984375
    9. ' ' → logprob: -16.626708984375
    10. '('' → logprob: -16.751708984375

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. '2' → logprob: -12.875003814697266
    3. ' ' → logprob: -14.750003814697266
    4. ')' → logprob: -15.125003814697266
    5. '```' → logprob: -15.687503814697266
    6. '-' → logprob: -16.187503814697266
    7. '<|end|>' → logprob: -17.375003814697266
    8. '１' → logprob: -17.812503814697266
    9. '0' → logprob: -17.937503814697266
    10. '१' → logprob: -18.187503814697266

Token 76: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035402015782892704
    2. ')
' → logprob: -5.7535400390625
    3. '   ' → logprob: -8.0035400390625
    4. '       ' → logprob: -11.3785400390625
    5. ')return' → logprob: -11.5035400390625
    6. '```' → logprob: -13.5035400390625
    7. ' )' → logprob: -13.6285400390625
    8. ')
' → logprob: -14.0035400390625
    9. '`)' → logprob: -14.5035400390625
    10. ')`' → logprob: -15.1285400390625

Token 77: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6675417423248291
    2. '<|end|>' → logprob: -0.9175417423248291
    3. ')' → logprob: -2.917541742324829
    4. ':return' → logprob: -5.04254150390625
    5. '
' → logprob: -5.16754150390625
    6. '<|end|>' → logprob: -5.16754150390625
    7. ':' → logprob: -5.16754150390625
    8. '       ' → logprob: -6.16754150390625
    9. ' ' → logprob: -6.41754150390625
    10. ':
' → logprob: -6.79254150390625

Token 78: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04306188225746155
    2. '   ' → logprob: -3.4180619716644287
    3. 'return' (adapté à ' return') → logprob: -5.91806173324585
    4. '
' → logprob: -6.41806173324585
    5. ' return' → logprob: -6.54306173324585
    6. '	return' → logprob: -6.91806173324585
    7. ')' → logprob: -7.16806173324585
    8. '```' → logprob: -8.043062210083008
    9. '    ' → logprob: -8.168062210083008
    10. ' ' → logprob: -8.418062210083008

Token 79: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6559740304946899
    2. '\n' → logprob: -1.53097403049469
    3. '\' → logprob: -2.5309739112854004
    4. ':' → logprob: -2.6559739112854004
    5. '+' → logprob: -3.7809739112854004
    6. '<|end|>' → logprob: -4.1559739112854
    7. ')' → logprob: -4.2809739112854
    8. '
' → logprob: -4.4059739112854
    9. '#' → logprob: -4.5309739112854
    10. '```' → logprob: -5.0309739112854

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02628798969089985
    2. ' ' → logprob: -4.401288032531738
    3. '%' → logprob: -6.651288032531738
    4. ':' → logprob: -6.776288032531738
    5. '  ' → logprob: -6.776288032531738
    6. '```' → logprob: -6.901288032531738
    7. ' 
' → logprob: -7.026288032531738
    8. '    
' → logprob: -7.151288032531738
    9. ' if' → logprob: -7.276288032531738
    10. 'if' → logprob: -7.276288032531738

Token 81: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4869694411754608
    2. ' ' → logprob: -2.486969470977783
    3. 'if' → logprob: -2.611969470977783
    4. 'S' → logprob: -2.861969470977783
    5. ' if' → logprob: -2.861969470977783
    6. '%' → logprob: -3.861969470977783
    7. ')' → logprob: -4.111969470977783
    8. '=' → logprob: -4.486969470977783
    9. '#' (adapté à ' #') → logprob: -4.861969470977783
    10. 's' → logprob: -5.111969470977783

Token 82: ' Check' (ID: 6208)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' reach' (ID: 7627)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2299354076385498
    2. '   ' → logprob: -1.8549354076385498
    3. 'if' → logprob: -3.47993540763855
    4. '    ' → logprob: -5.604935646057129
    5. ' for' → logprob: -5.604935646057129
    6. '(' → logprob: -5.979935646057129
    7. 's' → logprob: -5.979935646057129
    8. ' (' → logprob: -6.479935646057129
    9. ' ' → logprob: -6.854935646057129
    10. ' S' → logprob: -7.104935646057129

Token 84: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -0.0007323168683797121
    2. 'abil' → logprob: -8.000732421875
    3. 'able' → logprob: -8.250732421875
    4. 'a' → logprob: -10.000732421875
    5. 'ab' → logprob: -10.375732421875
    6. '-' → logprob: -11.375732421875
    7. 'abl' → logprob: -11.750732421875
    8. ' ability' → logprob: -11.875732421875
    9. '   ' → logprob: -12.125732421875
    10. 'ibility' → logprob: -12.125732421875

Token 85: ' via' (ID: 4493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8252834677696228
    2. ':' → logprob: -1.3252835273742676
    3. '<|end|>' → logprob: -2.3252835273742676
    4. ' ' → logprob: -2.4502835273742676
    5. '```' → logprob: -3.5752835273742676
    6. ' if' → logprob: -3.8252835273742676
    7. 's' → logprob: -4.700283527374268
    8. '\n' → logprob: -4.950283527374268
    9. '<|end|>' → logprob: -4.950283527374268
    10. '    ' → logprob: -5.200283527374268

Token 86: ' parity' (ID: 113181)
  Prédit: ' parity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parity' → logprob: -0.4411347508430481
    2. ' (' → logprob: -2.9411346912384033
    3. 'abs' → logprob: -2.9411346912384033
    4. 'mod' → logprob: -3.5661346912384033
    5. '(abs' → logprob: -3.5661346912384033
    6. ' the' → logprob: -3.5661346912384033
    7. ' math' → logprob: -3.6911346912384033
    8. ' abs' → logprob: -3.6911346912384033
    9. 'par' → logprob: -3.9411346912384033
    10. 'if' → logprob: -4.441134929656982

Token 87: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04250131547451019
    2. ':' → logprob: -3.917501211166382
    3. ' ' → logprob: -4.792501449584961
    4. ' if' → logprob: -5.042501449584961
    5. '(' → logprob: -6.042501449584961
    6. 'if' → logprob: -7.167501449584961
    7. 's' → logprob: -7.292501449584961
    8. '    ' → logprob: -7.417501449584961
    9. '  ' → logprob: -8.042501449584961
    10. ' and' → logprob: -8.167501449584961

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017869214061647654
    2. ':' → logprob: -7.626786708831787
    3. ' ' → logprob: -8.251787185668945
    4. 's' → logprob: -8.501787185668945
    5. ' if' → logprob: -8.501787185668945
    6. '<|end|>' → logprob: -8.751787185668945
    7. '  ' → logprob: -9.751787185668945
    8. '    ' → logprob: -9.876787185668945
    9. 'n' → logprob: -10.126787185668945
    10. '    
' → logprob: -10.376787185668945

Token 89: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6091145873069763
    2. ' if' → logprob: -0.8591145873069763
    3. 'if' → logprob: -3.609114646911621
    4. ' ' → logprob: -6.484114646911621
    5. ' parity' → logprob: -6.734114646911621
    6. '```' → logprob: -7.234114646911621
    7. '    ' → logprob: -8.234114646911621
    8. 's' → logprob: -8.234114646911621
    9. ' remainder' → logprob: -8.234114646911621
    10. ' S' → logprob: -8.984114646911621

Token 90: ' Sum' (ID: 34138)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7439853549003601
    2. '   ' → logprob: -0.8689853549003601
    3. 'if' → logprob: -2.368985414505005
    4. ' S' → logprob: -5.118985176086426
    5. ' parity' → logprob: -6.493985176086426
    6. ' (' → logprob: -6.993985176086426
    7. '    ' → logprob: -7.618985176086426
    8. 'S' → logprob: -7.743985176086426
    9. ' ' → logprob: -7.868985176086426
    10. 'If' → logprob: -8.118985176086426

Token 91: ' of' (ID: 328)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.17731165885925293
    2. ' =' → logprob: -2.802311658859253
    3. '%' → logprob: -3.302311658859253
    4. ' ' → logprob: -3.427311658859253
    5. '_diff' → logprob: -4.302311897277832
    6. ' %=' → logprob: -4.677311897277832
    7. '_' → logprob: -6.052311897277832
    8. 's' → logprob: -7.177311897277832
    9. '   ' → logprob: -7.177311897277832
    10. 'diff' → logprob: -7.302311897277832

Token 92: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.4715216159820557
    2. 'S' → logprob: -1.8465216159820557
    3. 'N' → logprob: -2.0965216159820557
    4. ' K' → logprob: -2.2215216159820557
    5. 'digits' → logprob: -2.5965216159820557
    6. ' S' → logprob: -3.0965216159820557
    7. ' digits' → logprob: -3.2215216159820557
    8. ' N' → logprob: -3.5965216159820557
    9. ' numbers' → logprob: -3.7215216159820557
    10. 'par' → logprob: -3.7215216159820557

Token 93: ' numbers' (ID: 8663)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.736496090888977
    2. '*' → logprob: -1.736496090888977
    3. ' %' → logprob: -1.861496090888977
    4. '%' → logprob: -1.986496090888977
    5. '*N' → logprob: -3.6114959716796875
    6. ' ' → logprob: -4.9864959716796875
    7. ' numbers' → logprob: -5.8614959716796875
    8. ' integers' → logprob: -5.8614959716796875
    9. '<|end|>' → logprob: -5.9864959716796875
    10. ' mod' → logprob: -6.1114959716796875

Token 94: ' from' (ID: 591)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03121715411543846
    2. '%' → logprob: -3.656217098236084
    3. ' ' → logprob: -5.406217098236084
    4. '   ' → logprob: -9.406217575073242
    5. ')' → logprob: -9.656217575073242
    6. '```' → logprob: -9.656217575073242
    7. ' must' → logprob: -10.281217575073242
    8. ' %
' → logprob: -10.406217575073242
    9. ' <=' → logprob: -11.156217575073242
    10. ' &' → logprob: -11.281217575073242

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3597007095813751
    2. 'N' → logprob: -2.3597006797790527
    3. 'K' → logprob: -2.4847006797790527
    4. '0' → logprob: -3.1097006797790527
    5. '[' → logprob: -3.9847006797790527
    6. ' K' → logprob: -4.234700679779053
    7. ' ' → logprob: -4.484700679779053
    8. 'the' → logprob: -4.984700679779053
    9. ' N' → logprob: -4.984700679779053
    10. '[N' → logprob: -5.234700679779053

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2662736177444458
    2. 'N' → logprob: -1.8912736177444458
    3. '{' → logprob: -4.266273498535156
    4. 'K' → logprob: -4.266273498535156
    5. '[' → logprob: -4.516273498535156
    6. '0' → logprob: -4.516273498535156
    7. '-' → logprob: -4.891273498535156
    8. '[N' → logprob: -4.891273498535156
    9. '-N' → logprob: -5.641273498535156
    10. '[-' → logprob: -5.641273498535156

Token 97: '..' (ID: 485)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.25218942761421204
    2. 'to' → logprob: -1.5021893978118896
    3. ' through' → logprob: -9.252189636230469
    4. ' up' → logprob: -9.627189636230469
    5. '+' → logprob: -10.252189636230469
    6. ' ' → logprob: -10.752189636230469
    7. ',' → logprob: -11.752189636230469
    8. 'through' → logprob: -11.752189636230469
    9. '	to' → logprob: -12.627189636230469
    10. '```' → logprob: -12.877189636230469

Token 98: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0040292455814778805
    2. ' N' → logprob: -5.754029273986816
    3. 'K' → logprob: -8.379029273986816
    4. '1' → logprob: -8.504029273986816
    5. '2' → logprob: -9.129029273986816
    6. '10' → logprob: -9.379029273986816
    7. ' ' → logprob: -9.504029273986816
    8. '9' → logprob: -9.879029273986816
    9. 'S' → logprob: -11.254029273986816
    10. '100' → logprob: -11.254029273986816

Token 99: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11338474601507187
    2. ' if' → logprob: -2.48838472366333
    3. ' parity' → logprob: -4.48838472366333
    4. ' is' → logprob: -5.23838472366333
    5. ' %' → logprob: -5.98838472366333
    6. ' ' → logprob: -7.36338472366333
    7. '%' → logprob: -7.48838472366333
    8. 'if' → logprob: -7.61338472366333
    9. ' par' → logprob: -8.113385200500488
    10. ' mod' → logprob: -8.363385200500488

Token 100: ' distribution' (ID: 12545)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.4226846992969513
    2. 'S' → logprob: -1.797684669494629
    3. '   ' → logprob: -2.672684669494629
    4. ' the' → logprob: -3.547684669494629
    5. ' and' → logprob: -3.922684669494629
    6. ' if' → logprob: -4.297684669494629
    7. 'the' → logprob: -5.172684669494629
    8. ' since' → logprob: -5.297684669494629
    9. 'and' → logprob: -5.922684669494629
    10. 's' → logprob: -6.047684669494629

Token 101: ' support' (ID: 2498)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2523261606693268
    2. ' of' → logprob: -2.252326250076294
    3. '   ' → logprob: -3.877326250076294
    4. '=' → logprob: -4.002326011657715
    5. ' is' → logprob: -4.252326011657715
    6. ' ' → logprob: -4.252326011657715
    7. '<|end|>' → logprob: -4.502326011657715
    8. ':' → logprob: -4.877326011657715
    9. ')' → logprob: -5.252326011657715
    10. ',' → logprob: -5.627326011657715

Token 102: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00761455949395895
    2. ' if' → logprob: -5.007614612579346
    3. '<|end|>' → logprob: -8.507614135742188
    4. '    
' → logprob: -9.257614135742188
    5. 'if' → logprob: -9.757614135742188
    6. ' ' → logprob: -9.882614135742188
    7. '<|end|>' → logprob: -9.882614135742188
    8. ')' → logprob: -10.132614135742188
    9. '
' → logprob: -10.257614135742188
    10. '  ' → logprob: -10.382614135742188

Token 103: ' [' (ID: 723)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -2.002192974090576
    2. ' ' → logprob: -2.377192974090576
    3. ' S' → logprob: -2.502192974090576
    4. 'S' → logprob: -2.877192974090576
    5. ' (' → logprob: -2.877192974090576
    6. '[' → logprob: -3.002192974090576
    7. ' from' → logprob: -3.127192974090576
    8. 'K' → logprob: -3.252192974090576
    9. ' all' → logprob: -3.252192974090576
    10. 'range' → logprob: -3.377192974090576

Token 104: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5469972491264343
    2. 'min' → logprob: -0.9219972491264343
    3. ' K' → logprob: -4.6719970703125
    4. 'max' → logprob: -5.2969970703125
    5. ' min' → logprob: -5.4219970703125
    6. '(min' → logprob: -7.0469970703125
    7. '(K' → logprob: -7.5469970703125
    8. ']' → logprob: -7.8594970703125
    9. ' ' → logprob: -8.1719970703125
    10. 'k' → logprob: -8.1719970703125

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04653196036815643
    2. '*' → logprob: -3.546531915664673
    3. '*N' → logprob: -4.671532154083252
    4. '*K' → logprob: -5.921532154083252
    5. ',N' → logprob: -6.046532154083252
    6. ' *' → logprob: -7.546532154083252
    7. ' ,' → logprob: -7.671532154083252
    8. ',K' → logprob: -7.796532154083252
    9. ',*' → logprob: -8.046531677246094
    10. '*(' → logprob: -8.546531677246094

Token 106: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.09619051963090897
    2. 'N' → logprob: -2.7211904525756836
    3. ' K' → logprob: -3.8461904525756836
    4. 'KN' → logprob: -5.721190452575684
    5. ' N' → logprob: -6.846190452575684
    6. 'NK' → logprob: -9.221190452575684
    7. ' ' → logprob: -10.346190452575684
    8. 'max' → logprob: -10.846190452575684
    9. '   ' → logprob: -11.846190452575684
    10. ' ' → logprob: -12.033690452575684

Token 107: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.0004857266612816602
    2. '*' → logprob: -7.750485897064209
    3. 'N' → logprob: -10.12548542022705
    4. ' *' → logprob: -12.12548542022705
    5. '*(' → logprob: -12.62548542022705
    6. '*M' → logprob: -13.37548542022705
    7. '**' → logprob: -13.75048542022705
    8. '*K' → logprob: -13.87548542022705
    9. '*n' → logprob: -14.25048542022705
    10. '```' → logprob: -14.25048542022705

Token 108: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018077615823131055
    2. ' ]' → logprob: -9.625181198120117
    3. ',' → logprob: -10.125181198120117
    4. ')' → logprob: -10.875181198120117
    5. '],' → logprob: -10.875181198120117
    6. ']
' → logprob: -11.625181198120117
    7. '+' → logprob: -11.750181198120117
    8. '-' → logprob: -12.500181198120117
    9. '].' → logprob: -12.750181198120117
    10. ']

' → logprob: -13.125181198120117

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026196548715233803
    2. '
' → logprob: -6.877619743347168
    3. '<|end|>' → logprob: -7.002619743347168
    4. ' if' → logprob: -8.127619743347168
    5. '    
' → logprob: -8.627619743347168
    6. '<|end|>' → logprob: -9.627619743347168
    7. 'if' → logprob: -10.002619743347168
    8. '```' → logprob: -10.752619743347168
    9. '  
' → logprob: -11.252619743347168
    10. '  ' → logprob: -11.627619743347168

Token 110: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7125508189201355
    2. ' if' → logprob: -1.3375508785247803
    3. 'if' → logprob: -1.4625508785247803
    4. '#' (adapté à ' #') → logprob: -5.712550640106201
    5. 'diff' → logprob: -5.712550640106201
    6. ' parity' → logprob: -5.962550640106201
    7. ' remainder' → logprob: -7.462550640106201
    8. 're' → logprob: -7.587550640106201
    9. ' #' → logprob: -7.587550640106201
    10. 'rest' → logprob: -7.587550640106201

Token 111: ' The' (ID: 623)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6275365948677063
    2. 'if' → logprob: -0.8775365948677063
    3. '   ' → logprob: -3.1275365352630615
    4. '#' → logprob: -6.627536773681641
    5. ' S' → logprob: -6.627536773681641
    6. ' #' → logprob: -7.502536773681641
    7. 'S' → logprob: -7.752536773681641
    8. ' parity' → logprob: -7.752536773681641
    9. ' remainder' → logprob: -7.752536773681641
    10. 'If' → logprob: -8.50253677368164

Token 112: ' sum' (ID: 4215)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.9347415566444397
    2. ' remainder' → logprob: -1.559741497039795
    3. 'if' → logprob: -1.809741497039795
    4. ' if' → logprob: -2.184741497039795
    5. ' difference' → logprob: -3.309741497039795
    6. 'difference' → logprob: -4.309741497039795
    7. ' next' → logprob: -4.559741497039795
    8. ' code' → logprob: -4.934741497039795
    9. ' S' → logprob: -4.934741497039795
    10. ' diff' → logprob: -5.059741497039795

Token 113: ' modulo' (ID: 112372)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5714487433433533
    2. ' must' → logprob: -1.571448802947998
    3. '%' → logprob: -2.196448802947998
    4. ' ' → logprob: -3.696448802947998
    5. ' should' → logprob: -3.696448802947998
    6. 'diff' → logprob: -4.071448802947998
    7. '   ' → logprob: -4.571448802947998
    8. ' of' → logprob: -4.696448802947998
    9. ''s' → logprob: -4.946448802947998
    10. 'must' → logprob: -5.821448802947998

Token 114: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1426950991153717
    2. ' ' → logprob: -2.017695188522339
    3. '   ' → logprob: -11.767695426940918
    4. '```' → logprob: -12.767695426940918
    5. ' ' → logprob: -12.892695426940918
    6. 's' → logprob: -13.267695426940918
    7. '(' → logprob: -13.767695426940918
    8. '  ' → logprob: -14.142695426940918
    9. 'to' → logprob: -14.955195426940918
    10. '
' → logprob: -15.455195426940918

Token 115: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.1080467781284824e-05
    2. ' ' → logprob: -10.500041007995605
    3. '1' → logprob: -11.375041007995605
    4. 'K' → logprob: -14.125041007995605
    5. '(' → logprob: -14.500041007995605
    6. '   ' → logprob: -15.125041007995605
    7. 'k' → logprob: -15.625041007995605
    8. '```' → logprob: -15.875041007995605
    9. '{' → logprob: -16.625041961669922
    10. '
' → logprob: -17.125041961669922

Token 116: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6356255412101746
    2. ' !=' → logprob: -1.8856256008148193
    3. ' is' → logprob: -2.3856256008148193
    4. '0' → logprob: -2.8856256008148193
    5. '==' → logprob: -3.6356256008148193
    6. '!=' → logprob: -3.7606256008148193
    7. ' must' → logprob: -3.8856256008148193
    8. '=' → logprob: -3.8856256008148193
    9. ' ==' → logprob: -4.01062536239624
    10. ' should' → logprob: -4.26062536239624

Token 117: ' always' (ID: 3324)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47890809178352356
    2. '0' → logprob: -1.1039080619812012
    3. ' S' → logprob: -3.603908061981201
    4. ' not' → logprob: -4.478908061981201
    5. ' (' → logprob: -5.353908061981201
    6. 'S' → logprob: -5.728908061981201
    7. 's' → logprob: -7.978908061981201
    8. '(' → logprob: -8.10390853881836
    9. ' K' → logprob: -8.35390853881836
    10. 'not' → logprob: -8.47890853881836

Token 118: ' integer' (ID: 16336)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42907723784446716
    2. ' ' → logprob: -1.0540772676467896
    3. ' zero' → logprob: -8.4290771484375
    4. '1' → logprob: -9.3040771484375
    5. ' the' → logprob: -11.3040771484375
    6. 'zero' → logprob: -11.3040771484375
    7. ' equal' → logprob: -12.3040771484375
    8. ' always' → logprob: -12.3665771484375
    9. 's' → logprob: -12.4290771484375
    10. ' K' → logprob: -12.7415771484375

Token 119: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05827072262763977
    2. ':
' → logprob: -3.8082706928253174
    3. '   ' → logprob: -4.1832709312438965
    4. '\n' → logprob: -4.9332709312438965
    5. ',' → logprob: -5.8082709312438965
    6. '.' → logprob: -6.5582709312438965
    7. '%' → logprob: -6.6832709312438965
    8. '
' → logprob: -6.6832709312438965
    9. ')' → logprob: -6.9332709312438965
    10. '<|end|>' → logprob: -7.1832709312438965

Token 120: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.02207961678504944
    2. '   ' → logprob: -3.8970797061920166
    3. 'so' → logprob: -7.3970794677734375
    4. ' and' → logprob: -8.522079467773438
    5. '    
' → logprob: -8.897079467773438
    6. ' not' → logprob: -9.147079467773438
    7. '    ' → logprob: -9.147079467773438
    8. ' ' → logprob: -9.522079467773438
    9. ',' → logprob: -10.022079467773438
    10. ' hence' → logprob: -10.397079467773438

Token 121: ' no' (ID: 860)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4141485095024109
    2. ' S' → logprob: -2.4141485691070557
    3. 'the' → logprob: -2.5391485691070557
    4. ' if' → logprob: -3.1641485691070557
    5. ' continue' → logprob: -3.5391485691070557
    6. 'continue' → logprob: -3.7891485691070557
    7. 'S' → logprob: -4.289148330688477
    8. 'if' → logprob: -4.539148330688477
    9. '   ' → logprob: -4.664148330688477
    10. ' we' → logprob: -4.914148330688477

Token 122: ' fractional' (ID: 136350)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.3217103183269501
    2. 'need' → logprob: -1.8217103481292725
    3. '%' → logprob: -3.4467103481292725
    4. ' further' → logprob: -3.6967103481292725
    5. ' ' → logprob: -4.821710109710693
    6. ' problem' → logprob: -4.821710109710693
    7. 'problem' → logprob: -4.946710109710693
    8. 'mod' → logprob: -5.196710109710693
    9. 'space' → logprob: -5.446710109710693
    10. ' more' → logprob: -5.821710109710693

Token 123: ' issues' (ID: 6086)
  Prédit: ' part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.5415480136871338
    2. ' parts' → logprob: -1.1665480136871338
    3. ' check' → logprob: -2.791548013687134
    4. 'part' → logprob: -4.666547775268555
    5. 'parts' → logprob: -5.041547775268555
    6. ' numbers' → logprob: -5.291547775268555
    7. ' checks' → logprob: -5.541547775268555
    8. ' difference' → logprob: -5.541547775268555
    9. 'check' → logprob: -5.666547775268555
    10. '<|end|>' → logprob: -5.916547775268555

Token 124: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6164873242378235
    2. ':' → logprob: -0.9914873242378235
    3. '<|end|>' → logprob: -2.8664872646331787
    4. '\n' → logprob: -4.991487503051758
    5. ' ' → logprob: -5.366487503051758
    6. ')' → logprob: -5.366487503051758
    7. '
' → logprob: -5.366487503051758
    8. '    
' → logprob: -5.866487503051758
    9. '<|end|>' → logprob: -6.616487503051758
    10. ':
' → logprob: -6.866487503051758

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011442120186984539
    2. '    
' → logprob: -5.886442184448242
    3. ':' → logprob: -6.011442184448242
    4. '<|end|>' → logprob: -6.136442184448242
    5. '  
' → logprob: -7.011442184448242
    6. ' ' → logprob: -7.761442184448242
    7. ')' → logprob: -7.886442184448242
    8. '  ' → logprob: -7.886442184448242
    9. ' 
' → logprob: -8.011442184448242
    10. '    ' → logprob: -8.511442184448242

Token 126: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014364108443260193
    2. '<|end|>' → logprob: -5.514364242553711
    3. '    
' → logprob: -5.639364242553711
    4. ':' → logprob: -6.264364242553711
    5. '  
' → logprob: -6.889364242553711
    6. ' 
' → logprob: -7.139364242553711
    7. ' ' → logprob: -7.639364242553711
    8. '  ' → logprob: -7.764364242553711
    9. '\n' → logprob: -8.389364242553711
    10. '    ' → logprob: -8.389364242553711

Token 127: ' We' (ID: 1416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02002614736557007
    2. ' if' → logprob: -4.270026206970215
    3. 'if' → logprob: -5.895026206970215
    4. ' ' → logprob: -7.145026206970215
    5. '    
' → logprob: -7.270026206970215
    6. '%' → logprob: -7.895026206970215
    7. '<|end|>' → logprob: -8.270026206970215
    8. 'If' → logprob: -8.770026206970215
    9. ' 
' → logprob: -9.020026206970215
    10. '  ' → logprob: -9.020026206970215

Token 128: ' need' (ID: 1309)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.12572218477725983
    2. ' can' → logprob: -3.1257221698760986
    3. ' need' → logprob: -3.5007221698760986
    4. ' should' → logprob: -4.500722408294678
    5. 'continue' → logprob: -4.500722408294678
    6. '%' → logprob: -4.875722408294678
    7. ' have' → logprob: -5.250722408294678
    8. ' %' → logprob: -5.750722408294678
    9. ' want' → logprob: -6.625722408294678
    10. ' are' → logprob: -7.000722408294678

Token 129: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04069077596068382
    2. 'to' → logprob: -3.7906906604766846
    3. ' (' → logprob: -4.165690898895264
    4. ' S' → logprob: -7.540690898895264
    5. '   ' → logprob: -7.915690898895264
    6. '(S' → logprob: -8.415690422058105
    7. '(' → logprob: -8.665690422058105
    8. ' the' → logprob: -8.790690422058105
    9. 'S' → logprob: -9.540690422058105
    10. ' a' → logprob: -9.665690422058105

Token 130: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.5146505832672119
    2. ' check' → logprob: -1.139650583267212
    3. 'find' → logprob: -3.014650583267212
    4. ' find' → logprob: -4.139650344848633
    5. 'det' → logprob: -4.514650344848633
    6. 'continue' → logprob: -6.514650344848633
    7. 'ensure' → logprob: -6.639650344848633
    8. 'consider' → logprob: -7.139650344848633
    9. 'if' → logprob: -7.514650344848633
    10. ' determine' → logprob: -8.639650344848633

Token 131: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17149104177951813
    2. 'if' → logprob: -2.0464911460876465
    3. ' (' → logprob: -3.9214911460876465
    4. ' the' → logprob: -5.4214911460876465
    5. '((' → logprob: -7.0464911460876465
    6. '   ' → logprob: -7.1714911460876465
    7. '(' → logprob: -7.2964911460876465
    8. ' parity' → logprob: -7.9214911460876465
    9. '(S' → logprob: -8.296490669250488
    10. 'the' → logprob: -8.296490669250488

Token 132: ' (' (ID: 350)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.2097313106060028
    2. ' (' → logprob: -1.8347313404083252
    3. 'S' → logprob: -4.084731101989746
    4. ' S' → logprob: -4.959731101989746
    5. '(abs' → logprob: -5.834731101989746
    6. 'abs' → logprob: -6.834731101989746
    7. ' abs' → logprob: -7.584731101989746
    8. '(' → logprob: -7.709731101989746
    9. 'the' → logprob: -8.584731101989746
    10. ' the' → logprob: -8.584731101989746

Token 133: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.14966893196105957
    2. '(S' → logprob: -2.0246689319610596
    3. 'abs' → logprob: -6.1496686935424805
    4. ' (' → logprob: -6.2746686935424805
    5. ' S' → logprob: -6.3996686935424805
    6. '(abs' → logprob: -7.0246686935424805
    7. ' abs' → logprob: -8.27466869354248
    8. ')' → logprob: -9.77466869354248
    9. '(' → logprob: -10.64966869354248
    10. '(s' → logprob: -11.02466869354248

Token 134: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.21238753199577332
    2. '-' → logprob: -1.7123875617980957
    3. ')' → logprob: -4.837387561798096
    4. ' )' → logprob: -6.962387561798096
    5. ' %' → logprob: -7.087387561798096
    6. '%' → logprob: -7.337387561798096
    7. ' ' → logprob: -8.337387084960938
    8. ' >=' → logprob: -9.087387084960938
    9. ' <=' → logprob: -9.462387084960938
    10. ')%' → logprob: -10.837387084960938

Token 135: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.08189305663108826
    2. 'min' → logprob: -2.706892967224121
    3. ' K' → logprob: -4.956892967224121
    4. ' min' → logprob: -5.331892967224121
    5. 'k' → logprob: -12.956892967224121
    6. '(min' → logprob: -13.081892967224121
    7. '(K' → logprob: -13.206892967224121
    8. '	K' → logprob: -13.706892967224121
    9. '   ' → logprob: -13.894392967224121
    10. ' ' → logprob: -14.081892967224121

Token 136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.195421494543552e-05
    2. ')%' → logprob: -9.75007152557373
    3. ' )' → logprob: -11.50007152557373
    4. ')
' → logprob: -13.25007152557373
    5. '   ' → logprob: -15.00007152557373
    6. '[' → logprob: -15.12507152557373
    7. '```' → logprob: -15.25007152557373
    8. '*' → logprob: -15.50007152557373
    9. '）' → logprob: -16.625072479248047
    10. '')' → logprob: -16.625072479248047

Token 137: ' is' (ID: 382)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7398723363876343
    2. ' %' → logprob: -0.7398723363876343
    3. ')' → logprob: -3.114872455596924
    4. ')%' → logprob: -7.489872455596924
    5. '<|end|>' → logprob: -8.364871978759766
    6. ' ' → logprob: -8.989871978759766
    7. '()%' → logprob: -9.364871978759766
    8. ' )' → logprob: -9.864871978759766
    9. '```' → logprob: -10.364871978759766
    10. ']' → logprob: -10.864871978759766

Token 138: ' reachable' (ID: 143580)
  Prédit: ' divisible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.34620463848114014
    2. '%' → logprob: -1.7212046384811401
    3. '0' → logprob: -3.3462047576904297
    4. ' %' → logprob: -3.7212047576904297
    5. '<|end|>' → logprob: -4.22120475769043
    6. ' (' → logprob: -4.22120475769043
    7. 'even' → logprob: -4.97120475769043
    8. ' ' → logprob: -5.34620475769043
    9. ' even' → logprob: -6.09620475769043
    10. '(' → logprob: -6.34620475769043

Token 139: ' as' (ID: 472)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.32817110419273376
    2. '%' → logprob: -1.7031711339950562
    3. '   ' → logprob: -2.5781710147857666
    4. ' and' → logprob: -4.203171253204346
    5. ':' → logprob: -6.203171253204346
    6. ' %
' → logprob: -6.703171253204346
    7. ' if' → logprob: -6.953171253204346
    8. 'and' → logprob: -7.078171253204346
    9. '%
' → logprob: -8.078170776367188
    10. ')' → logprob: -8.203170776367188

Token 140: ' sum' (ID: 4215)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.33532434701919556
    2. ' a' → logprob: -2.085324287414551
    3. ' an' → logprob: -2.460324287414551
    4. '0' → logprob: -3.710324287414551
    5. '(S' → logprob: -3.960324287414551
    6. ' divisible' → logprob: -4.960324287414551
    7. '<|end|>' → logprob: -5.585324287414551
    8. 'a' → logprob: -5.585324287414551
    9. ' ' → logprob: -6.085324287414551
    10. '(N' → logprob: -6.085324287414551

Token 141: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8141224980354309
    2. '   ' → logprob: -1.5641224384307861
    3. '%' → logprob: -1.8141224384307861
    4. ' %' → logprob: -2.314122438430786
    5. 'of' → logprob: -3.064122438430786
    6. ' by' → logprob: -4.564122676849365
    7. '<|end|>' → logprob: -4.564122676849365
    8. 'from' → logprob: -5.564122676849365
    9. '<|end|>' → logprob: -6.064122676849365
    10. ' from' → logprob: -6.314122676849365

Token 142: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.4212571084499359
    2. ' K' → logprob: -2.4212570190429688
    3. ' integers' → logprob: -2.7962570190429688
    4. 'inte' → logprob: -3.1712570190429688
    5. 'numbers' → logprob: -3.2962570190429688
    6. 'tokens' → logprob: -3.7962570190429688
    7. '<|end|>' → logprob: -3.9212570190429688
    8. 'increments' → logprob: -4.171257019042969
    9. 'some' → logprob: -4.296257019042969
    10. '1' → logprob: -4.546257019042969

Token 143: ' integers' (ID: 54912)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.0200836658477783
    2. ' numbers' → logprob: -1.1450836658477783
    3. ' integers' → logprob: -1.5200836658477783
    4. '<|end|>' → logprob: -2.8950836658477783
    5. 'inte' → logprob: -4.270083427429199
    6. 'tokens' → logprob: -4.270083427429199
    7. ' tokens' → logprob: -5.395083427429199
    8. '-' → logprob: -6.020083427429199
    9. 'increments' → logprob: -6.020083427429199
    10. 'values' → logprob: -6.270083427429199

Token 144: ' from' (ID: 591)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07200568914413452
    2. '%' → logprob: -2.8220057487487793
    3. '   ' → logprob: -5.697005748748779
    4. ')' → logprob: -5.697005748748779
    5. ' and' → logprob: -7.197005748748779
    6. 'and' → logprob: -7.447005748748779
    7. ' ' → logprob: -7.697005748748779
    8. ':' → logprob: -7.947005748748779
    9. ' %
' → logprob: -8.072005271911621
    10. ' (' → logprob: -8.697005271911621

Token 145: ' {' (ID: 354)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5326196551322937
    2. ' ' → logprob: -1.0326197147369385
    3. '[' → logprob: -3.6576197147369385
    4. ' [' → logprob: -4.032619476318359
    5. '0' → logprob: -5.407619476318359
    6. '{' → logprob: -6.032619476318359
    7. ' K' → logprob: -6.532619476318359
    8. ' {' → logprob: -6.782619476318359
    9. ' range' → logprob: -6.907619476318359
    10. ' the' → logprob: -7.407619476318359

Token 146: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.042415741831064224
    2. ' ' → logprob: -3.2924158573150635
    3. '0' → logprob: -5.667415618896484
    4. ' range' → logprob: -8.042415618896484
    5. 'range' → logprob: -8.542415618896484
    6. 'N' → logprob: -8.667415618896484
    7. ' N' → logprob: -8.792415618896484
    8. '(' → logprob: -11.542415618896484
    9. '(range' → logprob: -11.542415618896484
    10. ' (' → logprob: -11.792415618896484

Token 147: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1771688014268875
    2. '...' → logprob: -2.677168846130371
    3. '..' → logprob: -3.177168846130371
    4. ' to' → logprob: -3.427168846130371
    5. 'to' → logprob: -4.927168846130371
    6. ' ,' → logprob: -5.177168846130371
    7. ',...' → logprob: -6.052168846130371
    8. '}' → logprob: -6.677168846130371
    9. '<|end|>' → logprob: -6.802168846130371
    10. ',
' → logprob: -7.177168846130371

Token 148: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0719417929649353
    2. ' N' → logprob: -2.69694185256958
    3. '(N' → logprob: -6.94694185256958
    4. ' (' → logprob: -6.94694185256958
    5. '(' → logprob: -10.321941375732422
    6. ' ' → logprob: -11.071941375732422
    7. '1' → logprob: -11.696941375732422
    8. ' ' → logprob: -12.071941375732422
    9. '	N' → logprob: -12.946941375732422
    10. '{' → logprob: -13.071941375732422

Token 149: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00975739024579525
    2. ' -' → logprob: -4.6347575187683105
    3. '1' → logprob: -14.009757041931152
    4. ' ' → logprob: -15.509757041931152
    5. '−' → logprob: -16.13475799560547
    6. '}' → logprob: -16.13475799560547
    7. '   ' → logprob: -16.63475799560547
    8. '```' → logprob: -16.88475799560547
    9. '()-' → logprob: -17.00975799560547
    10. '
' → logprob: -17.75975799560547

Token 150: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3896516263484955
    2. '1' → logprob: -1.1396516561508179
    3. ' -' → logprob: -6.014651775360107
    4. ' ' → logprob: -8.13965129852295
    5. 'minus' → logprob: -11.63965129852295
    6. '(' → logprob: -12.26465129852295
    7. '-K' → logprob: -12.26465129852295
    8. 'K' → logprob: -12.38965129852295
    9. '```' → logprob: -12.38965129852295
    10. '(-' → logprob: -13.01465129852295

Token 151: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.01869134046137333
    2. ')' → logprob: -4.393691539764404
    3. '})' → logprob: -5.393691539764404
    4. '   ' → logprob: -6.768691539764404
    5. ' }' → logprob: -8.143691062927246
    6. ' ' → logprob: -10.893691062927246
    7. '```' → logprob: -10.893691062927246
    8. '}:' → logprob: -11.018691062927246
    9. ' })' → logprob: -11.143691062927246
    10. ' ' → logprob: -11.268691062927246

Token 152: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1955881118774414
    2. '   ' → logprob: -1.8205881118774414
    3. ' and' → logprob: -4.820588111877441
    4. ':
' → logprob: -6.195588111877441
    5. '<|end|>' → logprob: -6.570588111877441
    6. ')' → logprob: -6.820588111877441
    7. '):' → logprob: -7.320588111877441
    8. ' :' → logprob: -7.945588111877441
    9. 'and' → logprob: -8.070588111877441
    10. ' ' → logprob: -8.195588111877441

Token 153: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12964420020580292
    2. ':' → logprob: -2.8796441555023193
    3. '<|end|>' → logprob: -4.004644393920898
    4. ' and' → logprob: -4.129644393920898
    5. ' ' → logprob: -4.629644393920898
    6. ' if' → logprob: -5.254644393920898
    7. '    ' → logprob: -5.504644393920898
    8. '  ' → logprob: -6.129644393920898
    9. ' :' → logprob: -6.129644393920898
    10. ')' → logprob: -6.629644393920898

Token 154: ' Because' (ID: 13602)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.566574215888977
    2. ' if' → logprob: -0.941574215888977
    3. ' %' → logprob: -4.4415740966796875
    4. 'if' → logprob: -4.5665740966796875
    5. '%' → logprob: -4.6915740966796875
    6. '<|end|>' → logprob: -5.1915740966796875
    7. '    ' → logprob: -6.3165740966796875
    8. ' ' → logprob: -6.5665740966796875
    9. ')' → logprob: -8.191574096679688
    10. ' mod' → logprob: -8.316574096679688

Token 155: ' sum' (ID: 4215)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.9599042534828186
    2. ' S' → logprob: -1.2099041938781738
    3. ' the' → logprob: -1.8349041938781738
    4. ' each' → logprob: -3.084904193878174
    5. 'the' → logprob: -3.209904193878174
    6. 'each' → logprob: -4.084904193878174
    7. ' we' → logprob: -4.209904193878174
    8. '(S' → logprob: -4.334904193878174
    9. ' (' → logprob: -4.334904193878174
    10. 'we' → logprob: -5.959904193878174

Token 156: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4368208646774292
    2. '(S' → logprob: -1.6868208646774292
    3. ' of' → logprob: -1.8118208646774292
    4. 'of' → logprob: -2.4368209838867188
    5. '_of' → logprob: -2.6868209838867188
    6. '-' → logprob: -3.0618209838867188
    7. '   ' → logprob: -3.5618209838867188
    8. ' -' → logprob: -3.9368209838867188
    9. '#' → logprob: -4.061820983886719
    10. 'from' → logprob: -4.186820983886719

Token 157: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.17552393674850464
    2. 'the' → logprob: -2.4255239963531494
    3. 'k' → logprob: -3.9255239963531494
    4. ' K' → logprob: -4.05052375793457
    5. ' the' → logprob: -4.42552375793457
    6. 'numbers' → logprob: -5.67552375793457
    7. 'chosen' → logprob: -6.17552375793457
    8. 'range' → logprob: -6.42552375793457
    9. 'first' → logprob: -6.42552375793457
    10. '[' → logprob: -6.67552375793457

Token 158: ' integers' (ID: 54912)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.579932451248169
    2. ' integers' → logprob: -1.329932451248169
    3. ' ' → logprob: -2.829932451248169
    4. 'numbers' → logprob: -2.954932451248169
    5. ' tokens' → logprob: -3.704932451248169
    6. ' (' → logprob: -4.95493221282959
    7. '*' → logprob: -5.20493221282959
    8. ' *' → logprob: -5.45493221282959
    9. 'tokens' → logprob: -5.70493221282959
    10. ' -' → logprob: -5.82993221282959

Token 159: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.29889145493507385
    2. ' from' → logprob: -1.4238914251327515
    3. ' in' → logprob: -5.298891544342041
    4. ')' → logprob: -6.048891544342041
    5. '<|end|>' → logprob: -6.173891544342041
    6. ' ranging' → logprob: -6.798891544342041
    7. ' -' → logprob: -7.298891544342041
    8. ' (' → logprob: -7.423891544342041
    9. ' with' → logprob: -7.423891544342041
    10. '<|end|>' → logprob: -7.673891544342041

Token 160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5477821826934814
    2. '0' → logprob: -1.0477821826934814
    3. ' ' → logprob: -3.1727821826934814
    4. '{' → logprob: -3.6727821826934814
    5. '[' → logprob: -6.172781944274902
    6. ' {' → logprob: -7.047781944274902
    7. 'range' → logprob: -8.047781944274902
    8. 'import' → logprob: -8.922781944274902
    9. '<|end|>' → logprob: -9.047781944274902
    10. ' [' → logprob: -9.547781944274902

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5064499974250793
    2. '0' → logprob: -1.0064499378204346
    3. '{' → logprob: -3.8814499378204346
    4. '[' → logprob: -4.631450176239014
    5. 'range' → logprob: -7.131450176239014
    6. ' ' → logprob: -8.256449699401855
    7. '(' → logprob: -9.006449699401855
    8. '<|end|>' → logprob: -9.506449699401855
    9. 'K' → logprob: -10.006449699401855
    10. ' range' → logprob: -10.818949699401855

Token 162: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.019813580438494682
    2. ' to' → logprob: -4.144813537597656
    3. '...' → logprob: -6.394813537597656
    4. 'to' → logprob: -6.644813537597656
    5. ' ..' → logprob: -7.394813537597656
    6. ' ' → logprob: -9.394813537597656
    7. '<|end|>' → logprob: -10.394813537597656
    8. '```' → logprob: -11.019813537597656
    9. '.' → logprob: -11.144813537597656
    10. ' ...' → logprob: -11.269813537597656

Token 163: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00074959039920941
    2. ' N' → logprob: -7.375749588012695
    3. '1' → logprob: -9.625749588012695
    4. '<|end|>' → logprob: -10.375749588012695
    5. '...' → logprob: -12.000749588012695
    6. ' ' → logprob: -12.000749588012695
    7. '0' → logprob: -12.750749588012695
    8. '<|end|>' → logprob: -13.000749588012695
    9. '```' → logprob: -13.250749588012695
    10. '	N' → logprob: -14.000749588012695

Token 164: ' is' (ID: 382)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.45536208152770996
    2. '%' → logprob: -1.58036208152771
    3. ':' → logprob: -2.08036208152771
    4. '-' → logprob: -5.080362319946289
    5. ':
' → logprob: -5.205362319946289
    6. ' -' → logprob: -5.455362319946289
    7. ')' → logprob: -5.580362319946289
    8. '):' → logprob: -5.580362319946289
    9. '   ' → logprob: -5.830362319946289
    10. ' ' → logprob: -6.330362319946289

Token 165: ' K' (ID: 658)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -1.3026429414749146
    2. ' equal' → logprob: -1.5526429414749146
    3. 'K' → logprob: -1.6776429414749146
    4. 'equ' → logprob: -2.927642822265625
    5. ' sum' → logprob: -3.052642822265625
    6. 'sum' → logprob: -3.302642822265625
    7. ' K' → logprob: -3.302642822265625
    8. 'S' → logprob: -3.302642822265625
    9. '(S' → logprob: -3.427642822265625
    10. ' exactly' → logprob: -4.052642822265625

Token 166: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6430041193962097
    2. ' and' → logprob: -2.1430041790008545
    3. ' -' → logprob: -2.5180041790008545
    4. ' ' → logprob: -2.6430041790008545
    5. ' %' → logprob: -2.8930041790008545
    6. '%' → logprob: -3.0180041790008545
    7. '-' → logprob: -3.5180041790008545
    8. 'and' → logprob: -4.018003940582275
    9. ')' → logprob: -4.518003940582275
    10. ' <=' → logprob: -5.143003940582275

Token 167: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.9330836534500122
    2. 'K' → logprob: -1.5580836534500122
    3. '<|end|>' → logprob: -2.1830835342407227
    4. ' sum' → logprob: -2.5580835342407227
    5. ' (' → logprob: -3.1830835342407227
    6. '(S' → logprob: -3.5580835342407227
    7. '0' → logprob: -3.8080835342407227
    8. '(K' → logprob: -4.058083534240723
    9. '[' → logprob: -4.183083534240723
    10. '(sum' → logprob: -4.308083534240723

Token 168: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.40657109022140503
    2. '(' → logprob: -2.28157114982605
    3. '(range' → logprob: -2.65657114982605
    4. 'of' → logprob: -3.53157114982605
    5. '   ' → logprob: -3.90657114982605
    6. '([' → logprob: -4.031570911407471
    7. ' ' → logprob: -4.281570911407471
    8. ' (' → logprob: -4.281570911407471
    9. '_of' → logprob: -5.031570911407471
    10. ')' → logprob: -5.156570911407471

Token 169: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.2605072855949402
    2. ' K' → logprob: -2.010507345199585
    3. 'k' → logprob: -3.010507345199585
    4. '[' → logprob: -4.135507106781006
    5. 'tokens' → logprob: -5.260507106781006
    6. ' k' → logprob: -5.510507106781006
    7. ' (' → logprob: -5.760507106781006
    8. '(' → logprob: -6.010507106781006
    9. '0' → logprob: -6.135507106781006
    10. 'range' → logprob: -6.260507106781006

Token 170: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.47942864894866943
    2. 'inte' → logprob: -1.6044286489486694
    3. 'tokens' → logprob: -3.104428768157959
    4. ' tokens' → logprob: -3.104428768157959
    5. '0' → logprob: -3.604428768157959
    6. ' ' → logprob: -4.229428768157959
    7. 'numbers' → logprob: -4.479428768157959
    8. '(' → logprob: -4.604428768157959
    9. ' numbers' → logprob: -4.729428768157959
    10. ' (' → logprob: -4.854428768157959

Token 171: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4314727187156677
    2. ' from' → logprob: -1.0564727783203125
    3. '<|end|>' → logprob: -7.4314727783203125
    4. ' ' → logprob: -7.6814727783203125
    5. ' {' → logprob: -7.8064727783203125
    6. '{' → logprob: -8.556472778320312
    7. ')' → logprob: -8.806472778320312
    8. ' (' → logprob: -8.931472778320312
    9. '	from' → logprob: -9.306472778320312
    10. '0' → logprob: -9.431472778320312

Token 172: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5257753729820251
    2. '0' → logprob: -0.9007753729820251
    3. '<|end|>' → logprob: -6.65077543258667
    4. ' {' → logprob: -6.90077543258667
    5. '{' → logprob: -8.775774955749512
    6. 'range' → logprob: -9.900774955749512
    7. ' range' → logprob: -10.150774955749512
    8. '1' → logprob: -10.275774955749512
    9. '<|end|>' → logprob: -11.025774955749512
    10. '[' → logprob: -11.400774955749512

Token 173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010610329918563366
    2. ' ' → logprob: -7.001060962677002
    3. '{' → logprob: -9.50106143951416
    4. '(' → logprob: -10.25106143951416
    5. 'range' → logprob: -10.87606143951416
    6. '1' → logprob: -12.12606143951416
    7. '[' → logprob: -12.12606143951416
    8. ' range' → logprob: -12.75106143951416
    9. '(range' → logprob: -12.87606143951416
    10. ' (' → logprob: -13.12606143951416

Token 174: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.001709209755063057
    2. ' ..' → logprob: -7.501708984375
    3. '...' → logprob: -7.626708984375
    4. ' ' → logprob: -8.001708984375
    5. '.' → logprob: -9.001708984375
    6. '-' → logprob: -10.001708984375
    7. ')' → logprob: -10.501708984375
    8. ')..' → logprob: -10.501708984375
    9. '
' → logprob: -11.376708984375
    10. '```' → logprob: -11.501708984375

Token 175: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16668221354484558
    2. ' N' → logprob: -2.541682243347168
    3. '(N' → logprob: -3.041682243347168
    4. ' (' → logprob: -3.666682243347168
    5. '(' → logprob: -6.916682243347168
    6. '1' → logprob: -8.166682243347168
    7. ' ' → logprob: -10.041682243347168
    8. ' ' → logprob: -10.291682243347168
    9. '{' → logprob: -10.916682243347168
    10. '​' → logprob: -11.479182243347168

Token 176: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011762863025069237
    2. '1' → logprob: -4.511763095855713
    3. '```' → logprob: -8.386762619018555
    4. ' ' → logprob: -9.136762619018555
    5. ' -' → logprob: -9.136762619018555
    6. '<|end|>' → logprob: -9.261762619018555
    7. ')' → logprob: -10.886762619018555
    8. '_minus' → logprob: -10.886762619018555
    9. 'K' → logprob: -11.136762619018555
    10. '...' → logprob: -11.386762619018555

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.375003814697266
    3. '-' → logprob: -13.500003814697266
    4. '```' → logprob: -16.000003814697266
    5. '(' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.625003814697266
    7. '2' → logprob: -17.250003814697266
    8. '<|end|>' → logprob: -17.375003814697266
    9. '{' → logprob: -17.625003814697266
    10. '[' → logprob: -18.375003814697266

Token 178: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022104429081082344
    2. ' if' → logprob: -7.00221061706543
    3. '    
' → logprob: -8.00221061706543
    4. ' and' → logprob: -8.12721061706543
    5. '
' → logprob: -9.00221061706543
    6. ':
' → logprob: -9.12721061706543
    7. '%' → logprob: -9.37721061706543
    8. 'if' → logprob: -9.75221061706543
    9. '<|end|>' → logprob: -10.12721061706543
    10. ' %' → logprob: -10.25221061706543

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00577165000140667
    2. ' if' → logprob: -5.880771636962891
    3. ' and' → logprob: -6.505771636962891
    4. ':' → logprob: -7.380771636962891
    5. '    
' → logprob: -8.50577163696289
    6. 'and' → logprob: -8.88077163696289
    7. '<|end|>' → logprob: -8.88077163696289
    8. ':
' → logprob: -9.25577163696289
    9. 'if' → logprob: -9.25577163696289
    10. ')' → logprob: -10.50577163696289

Token 180: ' remainder' (ID: 47056)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.711654007434845
    2. ' if' → logprob: -1.2116539478302002
    3. '   ' → logprob: -1.5866539478302002
    4. '(S' → logprob: -5.586654186248779
    5. ' (' → logprob: -6.711654186248779
    6. '%' → logprob: -7.086654186248779
    7. ' %' → logprob: -7.836654186248779
    8. 'diff' → logprob: -8.336653709411621
    9. 'mod' → logprob: -9.711653709411621
    10. '(' → logprob: -9.836653709411621

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055693525820970535
    2. '=' → logprob: -2.9306936264038086
    3. '_' → logprob: -7.180693626403809
    4. 's' → logprob: -10.430693626403809
    5. ')' → logprob: -12.555693626403809
    6. ' ' → logprob: -13.055693626403809
    7. ' ' → logprob: -13.055693626403809
    8. ',' → logprob: -13.180693626403809
    9. '_mod' → logprob: -13.680693626403809
    10. '-' → logprob: -14.180693626403809

Token 182: ' (' (ID: 350)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5795491337776184
    2. ' S' → logprob: -1.2045490741729736
    3. ' (' → logprob: -2.3295490741729736
    4. '(S' → logprob: -3.2045490741729736
    5. ' abs' → logprob: -6.954549312591553
    6. 'abs' → logprob: -7.329549312591553
    7. '(abs' → logprob: -8.329548835754395
    8. '   ' → logprob: -9.204548835754395
    9. '(' → logprob: -9.329548835754395
    10. ' ' → logprob: -10.454548835754395

Token 183: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0032724218908697367
    2. ' S' → logprob: -5.753272533416748
    3. '   ' → logprob: -9.37827205657959
    4. '(S' → logprob: -11.75327205657959
    5. '	S' → logprob: -14.50327205657959
    6. ')' → logprob: -14.62827205657959
    7. '    ' → logprob: -15.00327205657959
    8. 'abs' → logprob: -15.12827205657959
    9. 's' → logprob: -15.25327205657959
    10. ' (' → logprob: -15.25327205657959

Token 184: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018278826028108597
    2. '-' → logprob: -4.0182785987854
    3. ' ' → logprob: -9.268279075622559
    4. ')' → logprob: -10.893279075622559
    5. '   ' → logprob: -12.393279075622559
    6. ' -
' → logprob: -12.643279075622559
    7. '-K' → logprob: -12.893279075622559
    8. '-
' → logprob: -14.205779075622559
    9. ' K' → logprob: -14.268279075622559
    10. '  ' → logprob: -14.393279075622559

Token 185: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00249420665204525
    2. ' K' → logprob: -6.0024943351745605
    3. '   ' → logprob: -11.627493858337402
    4. 'k' → logprob: -12.377493858337402
    5. 'min' → logprob: -13.127493858337402
    6. '	K' → logprob: -13.752493858337402
    7. '<|end|>' → logprob: -14.252493858337402
    8. ')' → logprob: -14.377493858337402
    9. '    ' → logprob: -15.002493858337402
    10. ',K' → logprob: -15.877493858337402

Token 186: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013641661498695612
    2. ' )' → logprob: -6.626364231109619
    3. ')%' → logprob: -10.876363754272461
    4. ')
' → logprob: -11.001363754272461
    5. ')

' → logprob: -14.751363754272461
    6. '))' → logprob: -15.001363754272461
    7. '`)' → logprob: -15.126363754272461
    8. '   ' → logprob: -15.376363754272461
    9. ' )
' → logprob: -15.626363754272461
    10. '```' → logprob: -15.751363754272461

Token 187: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.030118731781840324
    2. '%' → logprob: -3.530118703842163
    3. ')' → logprob: -8.530118942260742
    4. ' ' → logprob: -9.030118942260742
    5. ' )' → logprob: -11.780118942260742
    6. '
' → logprob: -11.905118942260742
    7. '   ' → logprob: -12.155118942260742
    8. '<|end|>' → logprob: -12.155118942260742
    9. ')%' → logprob: -12.780118942260742
    10. ' 
' → logprob: -12.780118942260742

Token 188: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6332256197929382
    2. '1' → logprob: -0.7582256197929382
    3. ' ' → logprob: -7.633225440979004
    4. 'N' → logprob: -9.133225440979004
    5. '(' → logprob: -10.633225440979004
    6. 'K' → logprob: -13.133225440979004
    7. 'n' → logprob: -13.258225440979004
    8. '(N' → logprob: -13.508225440979004
    9. 'math' → logprob: -13.508225440979004
    10. ' N' → logprob: -13.883225440979004

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0042414008639752865
    2. '2' → logprob: -5.629241466522217
    3. 'N' → logprob: -7.504241466522217
    4. ' ' → logprob: -9.504240989685059
    5. 'K' → logprob: -12.254240989685059
    6. '(' → logprob: -12.504240989685059
    7. ' N' → logprob: -12.754240989685059
    8. '(N' → logprob: -13.504240989685059
    9. 'math' → logprob: -13.754240989685059
    10. 'n' → logprob: -14.629240989685059

Token 190: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.0022313790395855904
    2. 're' → logprob: -6.127231597900391
    3. '(re' → logprob: -10.62723159790039
    4. ' (' → logprob: -10.87723159790039
    5. ' ' → logprob: -13.25223159790039
    6. '	re' → logprob: -14.37723159790039
    7. '(' → logprob: -15.00223159790039
    8. ' not' → logprob: -15.87723159790039
    9. ' re' → logprob: -16.00223159790039
    10. '   ' → logprob: -16.75223159790039

Token 194: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4288565516471863
    2. '!=' → logprob: -1.053856611251831
    3. ')!=' → logprob: -9.67885684967041
    4. '==' → logprob: -10.17885684967041
    5. '()!=' → logprob: -11.30385684967041
    6. '>' → logprob: -11.42885684967041
    7. ' ==' → logprob: -11.67885684967041
    8. '!==' → logprob: -12.17885684967041
    9. ':' → logprob: -12.55385684967041
    10. ')' → logprob: -12.67885684967041

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42870086431503296
    2. ' ' → logprob: -1.0537009239196777
    3. ' ' → logprob: -16.366201400756836
    4. '1' → logprob: -17.241201400756836
    5. '=' → logprob: -17.241201400756836
    6. '<|end|>' → logprob: -17.241201400756836
    7. '  ' → logprob: -17.678701400756836
    8. '۰' → logprob: -17.741201400756836
    9. '   ' → logprob: -18.428701400756836
    10. ')' → logprob: -18.803701400756836

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '<|end|>' → logprob: -17.750261306762695
    4. '۰' → logprob: -18.125261306762695
    5. ')' → logprob: -19.375261306762695
    6. '1' → logprob: -19.562761306762695
    7. '00' → logprob: -19.687761306762695
    8. '```' → logprob: -19.875261306762695
    9. '=' → logprob: -20.187761306762695
    10. '  ' → logprob: -20.437761306762695

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1519799679517746
    2. ':
' → logprob: -2.026979923248291
    3. '       ' → logprob: -4.776979923248291
    4. '   ' → logprob: -7.401979923248291
    5. '):
' → logprob: -9.65198040008545
    6. ' or' → logprob: -9.90198040008545
    7. '):' → logprob: -10.40198040008545
    8. ' and' → logprob: -10.52698040008545
    9. '<|end|>' → logprob: -11.15198040008545
    10. ' :' → logprob: -11.40198040008545

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.8325677703833207e-05
    2. 'print' → logprob: -10.750028610229492
    3. '   ' → logprob: -12.125028610229492
    4. ' print' → logprob: -14.500028610229492
    5. ',' → logprob: -15.125028610229492
    6. '           ' → logprob: -15.625028610229492
    7. '```' → logprob: -15.625028610229492
    8. '      ' → logprob: -16.500028610229492
    9. '        
' → logprob: -16.750028610229492
    10. '<|end|>' → logprob: -16.875028610229492

Token 199: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16449688374996185
    2. '       ' → logprob: -1.914496898651123
    3. ' print' → logprob: -6.039496898651123
    4. '   ' → logprob: -6.289496898651123
    5. '```' → logprob: -11.289496421813965
    6. '           ' → logprob: -12.414496421813965
    7. '	print' → logprob: -13.164496421813965
    8. ' ' → logprob: -13.289496421813965
    9. '     ' → logprob: -13.539496421813965
    10. '
' → logprob: -14.039496421813965

Token 200: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -2.8444881536415778e-05
    2. '(' → logprob: -10.500028610229492
    3. '-' → logprob: -14.125028610229492
    4. '(
' → logprob: -16.625028610229492
    5. ' (-' → logprob: -18.750028610229492
    6. '   ' → logprob: -20.000028610229492
    7. '("-' → logprob: -20.750028610229492
    8. ' -' → logprob: -21.250028610229492
    9. '()' → logprob: -21.250028610229492
    10. '('-' → logprob: -21.625028610229492

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.12500286102295
    3. '-' → logprob: -15.87500286102295
    4. ')' → logprob: -16.375001907348633
    5. '2' → logprob: -16.875001907348633
    6. '<|end|>' → logprob: -17.250001907348633
    7. '0' → logprob: -18.187501907348633
    8. '```' → logprob: -18.312501907348633
    9. ' -' → logprob: -19.375001907348633
    10. '
' → logprob: -19.437501907348633

Token 202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31705886125564575
    2. ')
' → logprob: -1.317058801651001
    3. '       ' → logprob: -5.69205904006958
    4. '   ' → logprob: -7.81705904006958
    5. ')return' → logprob: -11.817058563232422
    6. ')
' → logprob: -13.192058563232422
    7. ' )' → logprob: -13.817058563232422
    8. ' )
' → logprob: -13.942058563232422
    9. '           ' → logprob: -14.817058563232422
    10. ')\
' → logprob: -15.067058563232422

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3557529857498594e-05
    2. '<|end|>' → logprob: -11.12502384185791
    3. '   ' → logprob: -11.87502384185791
    4. '           ' → logprob: -14.62502384185791
    5. ')' → logprob: -14.87502384185791
    6. '
' → logprob: -15.75002384185791
    7. '<|end|>' → logprob: -15.75002384185791
    8. ',' → logprob: -16.000022888183594
    9. '      ' → logprob: -16.250022888183594
    10. '	' → logprob: -16.250022888183594

Token 204: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018267231062054634
    2. 'return' (adapté à ' return') → logprob: -4.0182671546936035
    3. ' return' → logprob: -9.643267631530762
    4. '   ' → logprob: -9.893267631530762
    5. '	return' → logprob: -13.768267631530762
    6. '           ' → logprob: -14.268267631530762
    7. '
' → logprob: -16.143266677856445
    8. '	' → logprob: -16.893266677856445
    9. '        
' → logprob: -17.268266677856445
    10. 'import' → logprob: -17.268266677856445

Token 205: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06870916485786438
    2. '    
' → logprob: -3.068709135055542
    3. '
' → logprob: -4.318709373474121
    4. 'if' → logprob: -6.318709373474121
    5. '<|end|>' → logprob: -6.318709373474121
    6. '  
' → logprob: -7.443709373474121
    7. ' if' → logprob: -7.443709373474121
    8. '    ' → logprob: -7.693709373474121
    9. ' 
' → logprob: -8.068709373474121
    10. '   
' → logprob: -8.193709373474121

Token 207: ' #' (ID: 1069)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7011111974716187
    2. 'if' → logprob: -1.0761111974716187
    3. 'step' → logprob: -2.826111316680908
    4. 'delta' → logprob: -3.201111316680908
    5. '#' (adapté à ' #') → logprob: -4.326111316680908
    6. 'difference' → logprob: -4.701111316680908
    7. '   ' → logprob: -4.951111316680908
    8. 'possible' → logprob: -4.951111316680908
    9. 'target' → logprob: -5.576111316680908
    10. ' if' → logprob: -5.826111316680908

Token 208: ' The' (ID: 623)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.802428662776947
    2. 'target' → logprob: -2.427428722381592
    3. ' diff' → logprob: -2.677428722381592
    4. 'if' → logprob: -2.927428722381592
    5. 'step' → logprob: -3.177428722381592
    6. '#' → logprob: -3.177428722381592
    7. 'max' → logprob: -3.302428722381592
    8. 'possible' → logprob: -3.427428722381592
    9. 'range' → logprob: -3.552428722381592
    10. 'dp' → logprob: -3.802428722381592

Token 209: ' sums' (ID: 73121)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -1.994832992553711
    2. ' code' → logprob: -1.994832992553711
    3. ' next' → logprob: -2.244832992553711
    4. ' difference' → logprob: -2.494832992553711
    5. ' remainder' → logprob: -2.619832992553711
    6. ' #' → logprob: -2.994832992553711
    7. ' if' → logprob: -3.119832992553711
    8. 'S' → logprob: -3.494832992553711
    9. 'if' → logprob: -3.494832992553711
    10. ' rest' → logprob: -3.494832992553711

Token 210: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7996689677238464
    2. 'from' → logprob: -1.9246690273284912
    3. ' of' → logprob: -2.174669027328491
    4. '   ' → logprob: -2.549669027328491
    5. ' can' → logprob: -2.799669027328491
    6. '=' → logprob: -3.674669027328491
    7. ' possible' → logprob: -3.924669027328491
    8. ' from' → logprob: -4.299668788909912
    9. ' are' → logprob: -4.299668788909912
    10. 'of' → logprob: -4.799668788909912

Token 211: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.22109654545783997
    2. ' K' → logprob: -1.7210965156555176
    3. 'k' → logprob: -4.221096515655518
    4. ' k' → logprob: -6.596096515655518
    5. ' integers' → logprob: -6.596096515655518
    6. 'inte' → logprob: -8.346096992492676
    7. 'any' → logprob: -8.471096992492676
    8. '0' → logprob: -8.721096992492676
    9. ' numbers' → logprob: -8.721096992492676
    10. ' any' → logprob: -8.721096992492676

Token 212: ' numbers' (ID: 8663)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.17534206807613373
    2. ' numbers' → logprob: -2.300342082977295
    3. 'inte' → logprob: -3.425342082977295
    4. 'numbers' → logprob: -3.925342082977295
    5. ' ' → logprob: -5.925342082977295
    6. ' tokens' → logprob: -6.925342082977295
    7. ')' → logprob: -7.050342082977295
    8. 'from' → logprob: -7.550342082977295
    9. 'tokens' → logprob: -8.050341606140137
    10. '<|end|>' → logprob: -8.425341606140137

Token 213: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.22815416753292084
    2. ' from' → logprob: -1.603154182434082
    3. ' can' → logprob: -7.353154182434082
    4. ' in' → logprob: -7.978154182434082
    5. '<|end|>' → logprob: -7.978154182434082
    6. '   ' → logprob: -8.228154182434082
    7. ' ranging' → logprob: -8.353154182434082
    8. ' are' → logprob: -9.353154182434082
    9. '<|end|>' → logprob: -9.353154182434082
    10. '#' → logprob: -9.478154182434082

Token 214: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9030360579490662
    2. ' range' → logprob: -1.403036117553711
    3. '0' → logprob: -1.903036117553711
    4. '1' → logprob: -2.028036117553711
    5. '{' → logprob: -3.653036117553711
    6. ' ' → logprob: -3.903036117553711
    7. '[' → logprob: -4.528036117553711
    8. ' {' → logprob: -4.903036117553711
    9. ' [' → logprob: -6.153036117553711
    10. '(range' → logprob: -7.278036117553711

Token 215: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.45209449529647827
    2. '1' → logprob: -1.577094554901123
    3. '0' → logprob: -1.952094554901123
    4. '{' → logprob: -4.827094554901123
    5. ' range' → logprob: -5.827094554901123
    6. '[' → logprob: -5.952094554901123
    7. '(range' → logprob: -7.202094554901123
    8. 'K' → logprob: -8.952094078063965
    9. 'N' → logprob: -8.952094078063965
    10. ' ' → logprob: -9.077094078063965

Token 216: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.00016516048344783485
    2. ' ..' → logprob: -9.125164985656738
    3. '...' → logprob: -10.375164985656738
    4. '```' → logprob: -12.125164985656738
    5. '.' → logprob: -12.625164985656738
    6. '..
' → logprob: -13.000164985656738
    7. 'import' → logprob: -13.125164985656738
    8. '<=' → logprob: -13.250164985656738
    9. '#' → logprob: -13.500164985656738
    10. '
' → logprob: -13.500164985656738

Token 217: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.014214867725968361
    2. ' N' → logprob: -4.264214992523193
    3. '1' → logprob: -10.764214515686035
    4. ' ' → logprob: -11.389214515686035
    5. '<|end|>' → logprob: -11.639214515686035
    6. '...' → logprob: -13.389214515686035
    7. '```' → logprob: -13.639214515686035
    8. 'n' → logprob: -13.639214515686035
    9. ',' → logprob: -14.014214515686035
    10. 'import' → logprob: -14.264214515686035

Token 218: ' form' (ID: 1625)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.4349132180213928
    2. '   ' → logprob: -1.684913158416748
    3. ' must' → logprob: -3.184913158416748
    4. ' are' → logprob: -3.684913158416748
    5. ' is' → logprob: -3.809913158416748
    6. ' <=' → logprob: -4.559913158416748
    7. 'from' → logprob: -4.809913158416748
    8. ')' → logprob: -4.809913158416748
    9. '<|end|>' → logprob: -4.809913158416748
    10. 'can' → logprob: -5.309913158416748

Token 219: ' a' (ID: 261)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7610477805137634
    2. 'a' → logprob: -1.1360478401184082
    3. ' all' → logprob: -2.761047840118408
    4. 'range' → logprob: -3.136047840118408
    5. 'the' → logprob: -3.386047840118408
    6. 'an' → logprob: -4.011047840118408
    7. ' a' → logprob: -4.011047840118408
    8. 'every' → logprob: -4.261047840118408
    9. ' the' → logprob: -5.636047840118408
    10. 'inte' → logprob: -5.886047840118408

Token 220: ' distribution' (ID: 12545)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.23319566249847412
    2. 'continuous' → logprob: -2.2331957817077637
    3. 'set' → logprob: -2.7331957817077637
    4. 'complete' → logprob: -3.8581957817077637
    5. 'con' → logprob: -5.358195781707764
    6. 'dis' → logprob: -5.858195781707764
    7. ' range' → logprob: -6.733195781707764
    8. 'sequence' → logprob: -6.733195781707764
    9. 'cont' → logprob: -6.733195781707764
    10. 'full' → logprob: -7.233195781707764

Token 221: ' equivalent' (ID: 23458)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25714537501335144
    2. ',' → logprob: -2.882145404815674
    3. '<|end|>' → logprob: -2.882145404815674
    4. ' that' → logprob: -3.507145404815674
    5. '.' → logprob: -3.632145404815674
    6. ' of' → logprob: -4.507145404815674
    7. 'from' → logprob: -4.882145404815674
    8. ' with' → logprob: -5.007145404815674
    9. ':' → logprob: -5.257145404815674
    10. '<|end|>' → logprob: -5.257145404815674

Token 222: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.42874616384506226
    2. 'to' → logprob: -1.053746223449707
    3. '   ' → logprob: -11.178746223449707
    4. 'import' → logprob: -11.428746223449707
    5. ' of' → logprob: -12.803746223449707
    6. ',' → logprob: -12.803746223449707
    7. '<|end|>' → logprob: -12.803746223449707
    8. '```' → logprob: -12.928746223449707
    9. '
' → logprob: -13.053746223449707
    10. ' ' → logprob: -13.428746223449707

Token 223: ' sum' (ID: 4215)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8222874999046326
    2. 's' → logprob: -2.1972875595092773
    3. 'sum' → logprob: -2.1972875595092773
    4. 'the' → logprob: -2.5722875595092773
    5. ' range' → logprob: -2.8222875595092773
    6. ' sums' → logprob: -2.9472875595092773
    7. ' sum' → logprob: -3.6972875595092773
    8. '{' → logprob: -3.9472875595092773
    9. ' the' → logprob: -4.197287559509277
    10. 'a' → logprob: -4.697287559509277

Token 224: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.19000327587127686
    2. 'of' → logprob: -1.8150032758712769
    3. '   ' → logprob: -4.690003395080566
    4. 'from' → logprob: -7.940003395080566
    5. '_of' → logprob: -9.565003395080566
    6. ')' → logprob: -9.690003395080566
    7. ' ' → logprob: -10.190003395080566
    8. '%' → logprob: -10.190003395080566
    9. 'range' → logprob: -10.190003395080566
    10. '	of' → logprob: -10.190003395080566

Token 225: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.4243515729904175
    2. ' K' → logprob: -1.2993515729904175
    3. 'range' → logprob: -4.049351692199707
    4. '0' → logprob: -4.174351692199707
    5. '1' → logprob: -4.299351692199707
    6. '[' → logprob: -5.049351692199707
    7. ' range' → logprob: -5.424351692199707
    8. ' ' → logprob: -5.674351692199707
    9. 'inte' → logprob: -5.799351692199707
    10. ' integers' → logprob: -6.049351692199707

Token 226: ' uniform' (ID: 21219)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.3025895059108734
    2. ' numbers' → logprob: -2.0525894165039062
    3. 'numbers' → logprob: -2.9275894165039062
    4. 'inte' → logprob: -3.1775894165039062
    5. '<|end|>' → logprob: -4.052589416503906
    6. ' tokens' → logprob: -5.677589416503906
    7. ' range' → logprob: -5.927589416503906
    8. ' ' → logprob: -6.052589416503906
    9. 'range' → logprob: -6.177589416503906
    10. '0' → logprob: -6.552589416503906

Token 227: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.6980817317962646
    2. 'inte' → logprob: -0.9480817317962646
    3. '[' → logprob: -2.8230817317962646
    4. '(' → logprob: -3.9480817317962646
    5. 'ints' → logprob: -4.948081970214844
    6. '0' → logprob: -4.948081970214844
    7. ' ' → logprob: -5.198081970214844
    8. ' random' → logprob: -6.198081970214844
    9. 'random' → logprob: -6.573081970214844
    10. 'range' → logprob: -6.823081970214844

Token 228: ' over' (ID: 1072)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.6358063817024231
    2. 'from' → logprob: -0.7608063817024231
    3. ' in' → logprob: -7.010806560516357
    4. '   ' → logprob: -7.135806560516357
    5. ' on' → logprob: -7.760806560516357
    6. ' ranging' → logprob: -8.2608060836792
    7. ' ' → logprob: -9.0108060836792
    8. '	from' → logprob: -9.5108060836792
    9. '(' → logprob: -9.7608060836792
    10. 'in' → logprob: -10.0108060836792

Token 229: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.0630384683609009
    2. 'range' → logprob: -1.1880384683609009
    3. '{' → logprob: -1.5630384683609009
    4. ' {' → logprob: -2.6880383491516113
    5. '[' → logprob: -2.9380383491516113
    6. ' [' → logprob: -5.188038349151611
    7. '0' → logprob: -5.313038349151611
    8. '(range' → logprob: -5.563038349151611
    9. '1' → logprob: -5.938038349151611
    10. ' ' → logprob: -6.313038349151611

Token 230: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16243162751197815
    2. ' ' → logprob: -2.5374317169189453
    3. '1' → logprob: -2.6624317169189453
    4. '(' → logprob: -7.912431716918945
    5. 'range' → logprob: -8.537431716918945
    6. '{' → logprob: -8.662431716918945
    7. ' range' → logprob: -9.662431716918945
    8. ',' → logprob: -9.662431716918945
    9. ' (' → logprob: -10.037431716918945
    10. '[' → logprob: -10.412431716918945

Token 231: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.267274409532547
    2. '..' → logprob: -1.6422743797302246
    3. ',N' → logprob: -3.3922743797302246
    4. ' ,' → logprob: -5.142274379730225
    5. '...' → logprob: -7.142274379730225
    6. ',
' → logprob: -8.142274856567383
    7. ',..' → logprob: -9.142274856567383
    8. ',K' → logprob: -9.267274856567383
    9. ',,' → logprob: -9.892274856567383
    10. ',n' → logprob: -10.392274856567383

Token 232: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.043060507625341415
    2. ' N' → logprob: -3.168060541152954
    3. ' ' → logprob: -11.043060302734375
    4. ',' → logprob: -11.668060302734375
    5. '1' → logprob: -11.668060302734375
    6. ']' → logprob: -11.668060302734375
    7. '
' → logprob: -12.418060302734375
    8. ',N' → logprob: -12.668060302734375
    9. 'n' → logprob: -13.168060302734375
    10. ' 
' → logprob: -13.293060302734375

Token 233: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008993052877485752
    2. '])' → logprob: -5.758993148803711
    3. ']
' → logprob: -5.883993148803711
    4. '].' → logprob: -6.383993148803711
    5. '-' → logprob: -7.758993148803711
    6. '],' → logprob: -8.508993148803711
    7. ' ]' → logprob: -9.258993148803711
    8. '])
' → logprob: -9.383993148803711
    9. ']-' → logprob: -9.883993148803711
    10. ']:' → logprob: -9.883993148803711

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3468949496746063
    2. '<|end|>' → logprob: -1.4718949794769287
    3. ')' → logprob: -3.0968949794769287
    4. '<|end|>' → logprob: -5.72189474105835
    5. ',' → logprob: -6.22189474105835
    6. ' ' → logprob: -6.34689474105835
    7. '
' → logprob: -6.34689474105835
    8. '.' → logprob: -6.34689474105835
    9. '#' → logprob: -6.47189474105835
    10. '    
' → logprob: -6.72189474105835

Token 235: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21403950452804565
    2. '<|end|>' → logprob: -2.0890395641326904
    3. ' if' → logprob: -3.4640395641326904
    4. '.' → logprob: -4.839039325714111
    5. ' ' → logprob: -5.214039325714111
    6. ')' → logprob: -5.464039325714111
    7. '#' (adapté à ' #') → logprob: -5.464039325714111
    8. ',' → logprob: -5.589039325714111
    9. '
' → logprob: -5.964039325714111
    10. 'if' → logprob: -6.339039325714111

Token 236: ' The' (ID: 623)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.9049229621887207
    2. ' possible' → logprob: -2.1549229621887207
    3. ' dp' → logprob: -2.4049229621887207
    4. '   ' → logprob: -2.4049229621887207
    5. 'dp' → logprob: -2.5299229621887207
    6. ' if' → logprob: -3.0299229621887207
    7. '#' → logprob: -3.0299229621887207
    8. 'possible' → logprob: -3.1549229621887207
    9. ' total' → logprob: -3.2799229621887207
    10. ' target' → logprob: -3.4049229621887207

Token 237: ' minimal' (ID: 19957)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -2.08402943611145
    2. ' diff' → logprob: -2.20902943611145
    3. 'diff' → logprob: -2.20902943611145
    4. ' max' → logprob: -2.33402943611145
    5. ' S' → logprob: -2.58402943611145
    6. 'possible' → logprob: -2.83402943611145
    7. '#' → logprob: -3.20902943611145
    8. ' min' → logprob: -3.45902943611145
    9. 'dp' → logprob: -3.45902943611145
    10. ' distribution' → logprob: -3.58402943611145

Token 238: ' sum' (ID: 4215)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.947361946105957
    2. ' sum' → logprob: -1.072361946105957
    3. 'possible' → logprob: -2.322361946105957
    4. 'sum' → logprob: -2.822361946105957
    5. '_sum' → logprob: -3.822361946105957
    6. '_possible' → logprob: -3.822361946105957
    7. ' achievable' → logprob: -3.947361946105957
    8. ' and' → logprob: -4.572361946105957
    9. ' difference' → logprob: -5.572361946105957
    10. ' value' → logprob: -5.572361946105957

Token 239: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.11299438774585724
    2. ' =' → logprob: -2.487994432449341
    3. '=' → logprob: -4.862994194030762
    4. ' possible' → logprob: -5.237994194030762
    5. 'is' → logprob: -6.112994194030762
    6. ' of' → logprob: -6.362994194030762
    7. '   ' → logprob: -6.612994194030762
    8. 'possible' → logprob: -6.862994194030762
    9. '+' → logprob: -7.237994194030762
    10. ' to' → logprob: -7.487994194030762

Token 240: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.043069642037153244
    2. ' K' → logprob: -3.16806960105896
    3. '   ' → logprob: -10.543069839477539
    4. ' ' → logprob: -11.668069839477539
    5. '```' → logprob: -12.043069839477539
    6. 'k' → logprob: -12.168069839477539
    7. 'min' → logprob: -12.168069839477539
    8. '	K' → logprob: -13.230569839477539
    9. ' min' → logprob: -13.480569839477539
    10. ',' → logprob: -13.480569839477539

Token 241: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25754302740097046
    2. '
' → logprob: -2.0075430870056152
    3. '<|end|>' → logprob: -2.7575430870056152
    4. ',' → logprob: -4.007543087005615
    5. '    
' → logprob: -5.507543087005615
    6. ' and' → logprob: -6.257543087005615
    7. '<|end|>' → logprob: -6.382543087005615
    8. '#' → logprob: -7.257543087005615
    9. ',
' → logprob: -7.632543087005615
    10. '.' → logprob: -8.007542610168457

Token 242: ' maximal' (ID: 65414)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.1028834581375122
    2. '   ' → logprob: -1.2278834581375122
    3. ' the' → logprob: -1.2278834581375122
    4. 'and' → logprob: -3.8528833389282227
    5. ' so' → logprob: -4.102883338928223
    6. 'the' → logprob: -4.352883338928223
    7. ' max' → logprob: -4.602883338928223
    8. '#' → logprob: -5.102883338928223
    9. 'max' → logprob: -5.227883338928223
    10. ' #' → logprob: -6.102883338928223

Token 243: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.35373440384864807
    2. 'sum' → logprob: -2.4787344932556152
    3. '_sum' → logprob: -2.9787344932556152
    4. ' N' → logprob: -3.4787344932556152
    5. ' ' → logprob: -3.6037344932556152
    6. '*N' → logprob: -3.6037344932556152
    7. ',' → logprob: -3.9787344932556152
    8. '*' → logprob: -4.103734493255615
    9. ' *' → logprob: -4.478734493255615
    10. ' K' → logprob: -5.103734493255615

Token 244: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0716889426112175
    2. 'is' → logprob: -3.0716888904571533
    3. ' =' → logprob: -4.321689128875732
    4. '=' → logprob: -5.196689128875732
    5. ' ' → logprob: -6.946689128875732
    6. '+' → logprob: -6.946689128875732
    7. 'N' → logprob: -7.571689128875732
    8. ' N' → logprob: -7.946689128875732
    9. ' K' → logprob: -8.196688652038574
    10. '   ' → logprob: -8.696688652038574

Token 245: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.14160585403442383
    2. 'K' → logprob: -2.516605854034424
    3. ' N' → logprob: -3.141605854034424
    4. 'N' → logprob: -5.016605854034424
    5. ' NK' → logprob: -7.266605854034424
    6. 'NK' → logprob: -7.891605854034424
    7. ' ' → logprob: -8.891605377197266
    8. ' KN' → logprob: -9.391605377197266
    9. 'KN' → logprob: -9.891605377197266
    10. ' ' → logprob: -10.891605377197266

Token 246: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.0026393914595246315
    2. '*' → logprob: -6.127639293670654
    3. ' *' → logprob: -8.127639770507812
    4. 'N' → logprob: -9.002639770507812
    5. '```' → logprob: -11.752639770507812
    6. '*K' → logprob: -11.877639770507812
    7. '*(' → logprob: -11.877639770507812
    8. '*n' → logprob: -12.252639770507812
    9. '**' → logprob: -13.002639770507812
    10. '\' → logprob: -13.752639770507812

Token 247: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20065537095069885
    2. '
' → logprob: -2.200655460357666
    3. '<|end|>' → logprob: -2.950655460357666
    4. '    
' → logprob: -4.200655460357666
    5. '<|end|>' → logprob: -6.200655460357666
    6. '#' → logprob: -7.575655460357666
    7. ',' → logprob: -8.825654983520508
    8. '.' → logprob: -9.075654983520508
    9. '  
' → logprob: -9.075654983520508
    10. ' if' → logprob: -9.075654983520508

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010726138018071651
    2. '
' → logprob: -5.510725975036621
    3. '    
' → logprob: -5.635725975036621
    4. '<|end|>' → logprob: -6.385725975036621
    5. 'if' → logprob: -7.260725975036621
    6. ' if' → logprob: -8.260725975036621
    7. '#' → logprob: -9.760725975036621
    8. ',' → logprob: -9.760725975036621
    9. ')' → logprob: -9.760725975036621
    10. '<|end|>' → logprob: -10.010725975036621

Token 249: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41524165868759155
    2. 'if' → logprob: -1.9152417182922363
    3. ' if' → logprob: -2.0402417182922363
    4. 'diff' → logprob: -3.5402417182922363
    5. 'possible' → logprob: -4.790241718292236
    6. '#' (adapté à ' #') → logprob: -4.915241718292236
    7. '
' → logprob: -6.040241718292236
    8. 'dp' → logprob: -6.290241718292236
    9. '    
' → logprob: -6.290241718292236
    10. ' possible' → logprob: -6.540241718292236

Token 250: ' Reach' (ID: 80172)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5110572576522827
    2. 'if' → logprob: -1.0110572576522827
    3. '#' → logprob: -5.136057376861572
    4. '   ' → logprob: -5.511057376861572
    5. 'diff' → logprob: -5.636057376861572
    6. 'for' → logprob: -5.886057376861572
    7. ' for' → logprob: -5.886057376861572
    8. ' #' → logprob: -6.136057376861572
    9. ' max' → logprob: -6.386057376861572
    10. ' possible' → logprob: -6.386057376861572

Token 251: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -0.005000820849090815
    2. '   ' → logprob: -5.505000591278076
    3. '#' → logprob: -7.255000591278076
    4. '       ' → logprob: -10.005001068115234
    5. 'able' → logprob: -10.630001068115234
    6. '
' → logprob: -10.755001068115234
    7. 'abil' → logprob: -10.755001068115234
    8. 'if' → logprob: -10.880001068115234
    9. ' ' → logprob: -11.005001068115234
    10. 'def' → logprob: -11.380001068115234

Token 252: ' check' (ID: 2371)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19252490997314453
    2. '   ' → logprob: -1.9425249099731445
    3. '=' → logprob: -3.8175249099731445
    4. ':' → logprob: -5.6925249099731445
    5. '_check' → logprob: -7.0675249099731445
    6. 'if' → logprob: -7.6925249099731445
    7. ' check' → logprob: -7.6925249099731445
    8. ' if' → logprob: -7.8175249099731445
    9. ' is' → logprob: -7.8175249099731445
    10. 'from' → logprob: -7.9425249099731445

Token 253: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006500189658254385
    2. ' if' → logprob: -5.631500244140625
    3. ':' → logprob: -6.381500244140625
    4. 'if' → logprob: -7.506500244140625
    5. '    
' → logprob: -8.756500244140625
    6. ' =' → logprob: -9.131500244140625
    7. '
' → logprob: -9.131500244140625
    8. '```' → logprob: -9.881500244140625
    9. ':
' → logprob: -10.256500244140625
    10. '  
' → logprob: -10.506500244140625

Token 254: ' S' (ID: 336)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13879358768463135
    2. '   ' → logprob: -2.138793468475342
    3. 'if' → logprob: -4.513793468475342
    4. ' mod' → logprob: -8.8887939453125
    5. ' possible' → logprob: -9.2637939453125
    6. ' for' → logprob: -9.2637939453125
    7. ' (' → logprob: -9.3887939453125
    8. '```' → logprob: -9.5137939453125
    9. ' #' → logprob: -9.8887939453125
    10. 'mod' → logprob: -10.6387939453125

Token 255: ' in' (ID: 306)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6892951726913452
    2. ' -' → logprob: -1.1892951726913452
    3. ' <=' → logprob: -2.4392952919006348
    4. '-' → logprob: -2.6892952919006348
    5. '>=' → logprob: -4.064295291900635
    6. ' -=' → logprob: -4.564295291900635
    7. '<|end|>' → logprob: -5.689295291900635
    8. ' ' → logprob: -6.439295291900635
    9. '<=' → logprob: -6.439295291900635
    10. ' ==' → logprob: -7.189295291900635

Token 256: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1620311588048935
    2. 'range' → logprob: -1.9120311737060547
    3. ' [' → logprob: -7.162031173706055
    4. '[min' → logprob: -7.537031173706055
    5. '   ' → logprob: -8.662031173706055
    6. '[' → logprob: -8.787031173706055
    7. ' ' → logprob: -9.787031173706055
    8. ' min' → logprob: -10.787031173706055
    9. '[K' → logprob: -10.912031173706055
    10. 'min' → logprob: -10.912031173706055

Token 257: 'K' (ID: 42)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.002888564020395279
    2. 'K' → logprob: -6.0028886795043945
    3. ' min' → logprob: -7.8778886795043945
    4. '(min' → logprob: -11.377888679504395
    5. ' K' → logprob: -11.627888679504395
    6. '   ' → logprob: -11.752888679504395
    7. '[min' → logprob: -13.127888679504395
    8. ',min' → logprob: -14.252888679504395
    9. 'k' → logprob: -14.502888679504395
    10. ',' → logprob: -14.752888679504395

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005048964521847665
    2. ' ,' → logprob: -8.000504493713379
    3. ',max' → logprob: -9.125504493713379
    4. ',K' → logprob: -10.500504493713379
    5. ',
' → logprob: -10.625504493713379
    6. ',min' → logprob: -12.500504493713379
    7. ',N' → logprob: -13.625504493713379
    8. '..' → logprob: -13.875504493713379
    9. '...' → logprob: -14.875504493713379
    10. 'max' → logprob: -14.875504493713379

Token 259: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.31351885199546814
    2. ' K' → logprob: -1.3135188817977905
    3. 'N' → logprob: -9.188518524169922
    4. ' ' → logprob: -9.563518524169922
    5. ' N' → logprob: -10.688518524169922
    6. ',' → logprob: -11.063518524169922
    7. ' max' → logprob: -11.438518524169922
    8. 'max' → logprob: -11.563518524169922
    9. '   ' → logprob: -11.688518524169922
    10. ',K' → logprob: -12.188518524169922

Token 260: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.03232055529952049
    2. '*' → logprob: -4.157320499420166
    3. ',' → logprob: -4.157320499420166
    4. ' *' → logprob: -8.532320976257324
    5. ',
' → logprob: -9.657320976257324
    6. '*,' → logprob: -9.782320976257324
    7. 'N' → logprob: -9.782320976257324
    8. ',N' → logprob: -10.782320976257324
    9. '*(' → logprob: -10.907320976257324
    10. '*n' → logprob: -11.032320976257324

Token 261: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006695479387417436
    2. '   ' → logprob: -8.375669479370117
    3. ']:' → logprob: -8.500669479370117
    4. '+' → logprob: -9.750669479370117
    5. ']
' → logprob: -9.750669479370117
    6. '],' → logprob: -10.375669479370117
    7. ' and' → logprob: -10.625669479370117
    8. ' ]' → logprob: -11.000669479370117
    9. 'and' → logprob: -11.375669479370117
    10. ']:
' → logprob: -12.000669479370117

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15000112354755402
    2. ' and' → logprob: -2.025001049041748
    3. 'and' → logprob: -6.150001049041748
    4. '    
' → logprob: -6.775001049041748
    5. '<|end|>' → logprob: -6.900001049041748
    6. ' if' → logprob: -7.150001049041748
    7. '
' → logprob: -7.275001049041748
    8. ',' → logprob: -7.525001049041748
    9. '.' → logprob: -8.275001525878906
    10. ':' → logprob: -8.400001525878906

Token 263: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02786443382501602
    2. ' and' → logprob: -4.152864456176758
    3. 'and' → logprob: -5.777864456176758
    4. ' if' → logprob: -5.777864456176758
    5. 'if' (adapté à ' if') → logprob: -6.027864456176758
    6. '<|end|>' → logprob: -6.777864456176758
    7. '    
' → logprob: -7.027864456176758
    8. '.' → logprob: -8.152864456176758
    9. '
' → logprob: -8.527864456176758
    10. ',' → logprob: -8.652864456176758

Token 264: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.31732726097106934
    2. ' S' → logprob: -1.3173272609710693
    3. '   ' → logprob: -5.942327499389648
    4. ' not' → logprob: -6.817327499389648
    5. 'not' → logprob: -9.067327499389648
    6. ' ' → logprob: -9.067327499389648
    7. ' min' → logprob: -10.317327499389648
    8. 'min' → logprob: -10.317327499389648
    9. '(S' → logprob: -11.067327499389648
    10. '  ' → logprob: -11.692327499389648

Token 265: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08596255630254745
    2. ' >' → logprob: -2.7109625339508057
    3. ' <=' → logprob: -4.460962772369385
    4. '<' → logprob: -6.210962772369385
    5. ' >=' → logprob: -6.460962772369385
    6. '>' → logprob: -7.460962772369385
    7. '<|end|>' → logprob: -9.710962295532227
    8. '<=' → logprob: -10.085962295532227
    9. ' ==' → logprob: -10.085962295532227
    10. ' ' → logprob: -10.960962295532227

Token 266: ' K' (ID: 658)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5675166249275208
    2. 'K' → logprob: -0.9425166249275208
    3. ' K' → logprob: -3.567516565322876
    4. ' min' → logprob: -4.192516803741455
    5. '   ' → logprob: -10.067516326904297
    6. ' ' → logprob: -10.942516326904297
    7. 'k' → logprob: -11.692516326904297
    8. '    ' → logprob: -12.567516326904297
    9. '(min' → logprob: -13.067516326904297
    10. '  ' → logprob: -13.192516326904297

Token 267: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0054079461842775345
    2. 'or' → logprob: -5.380407810211182
    3. ':' → logprob: -7.380407810211182
    4. '   ' → logprob: -9.00540828704834
    5. '       ' → logprob: -11.50540828704834
    6. ')' → logprob: -11.50540828704834
    7. ':
' → logprob: -11.75540828704834
    8. '	or' → logprob: -12.13040828704834
    9. ' ' → logprob: -12.88040828704834
    10. '):' → logprob: -13.50540828704834

Token 268: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.038054682314395905
    2. ' S' → logprob: -3.2880547046661377
    3. '   ' → logprob: -11.538054466247559
    4. ' ' → logprob: -13.288054466247559
    5. '  ' → logprob: -14.163054466247559
    6. 's' → logprob: -15.038054466247559
    7. ' ' → logprob: -15.163054466247559
    8. '    ' → logprob: -15.663054466247559
    9. '>S' → logprob: -16.288055419921875
    10. '	S' → logprob: -16.663055419921875

Token 269: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10021767020225525
    2. '>' → logprob: -2.350217580795288
    3. '>S' → logprob: -11.975217819213867
    4. '>K' → logprob: -13.475217819213867
    5. ' >
' → logprob: -13.725217819213867
    6. ' ' → logprob: -14.100217819213867
    7. '>N' → logprob: -14.725217819213867
    8. '>
' → logprob: -15.225217819213867
    9. '<|end|>' → logprob: -15.850217819213867
    10. '   ' → logprob: -15.975217819213867

Token 270: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.005993143655359745
    2. ' K' → logprob: -5.130993366241455
    3. 'N' → logprob: -10.005992889404297
    4. ' ' → logprob: -11.505992889404297
    5. '(K' → logprob: -12.630992889404297
    6. '   ' → logprob: -13.005992889404297
    7. 'max' → logprob: -13.755992889404297
    8. ' (' → logprob: -14.005992889404297
    9. ' N' → logprob: -14.630992889404297
    10. '  ' → logprob: -14.880992889404297

Token 271: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.010987570509314537
    2. '*' → logprob: -4.635987758636475
    3. ' *' → logprob: -6.760987758636475
    4. 'N' → logprob: -9.760987281799316
    5. '*K' → logprob: -12.510987281799316
    6. '*n' → logprob: -12.885987281799316
    7. '```' → logprob: -13.260987281799316
    8. '**' → logprob: -13.635987281799316
    9. '*(' → logprob: -13.885987281799316
    10. '   ' → logprob: -14.135987281799316

Token 272: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31490182876586914
    2. ':
' → logprob: -1.3149018287658691
    3. '       ' → logprob: -6.814901828765869
    4. '   ' → logprob: -7.814901828765869
    5. '):
' → logprob: -9.564901351928711
    6. ':return' → logprob: -10.564901351928711
    7. '):' → logprob: -10.689901351928711
    8. ' or' → logprob: -11.814901351928711
    9. '():
' → logprob: -12.689901351928711
    10. ':
' → logprob: -12.814901351928711

Token 273: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18058426678180695
    2. 'print' (adapté à ' print') → logprob: -2.055584192276001
    3. ' print' → logprob: -3.305584192276001
    4. '   ' → logprob: -7.80558443069458
    5. '           ' → logprob: -9.805583953857422
    6. '```' → logprob: -10.680583953857422
    7. '
' → logprob: -11.180583953857422
    8. ' return' → logprob: -12.305583953857422
    9. 'return' → logprob: -12.430583953857422
    10. ' ' → logprob: -12.555583953857422

Token 275: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -2.7968066206085496e-05
    2. '(' → logprob: -10.500027656555176
    3. '(
' → logprob: -15.500027656555176
    4. ' (-' → logprob: -16.625028610229492
    5. '-' → logprob: -17.000028610229492
    6. '   ' → logprob: -18.000028610229492
    7. '("-' → logprob: -18.875028610229492
    8. '(-(' → logprob: -18.875028610229492
    9. '```' → logprob: -19.500028610229492
    10. '((-' → logprob: -19.500028610229492

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00976470671594143
    2. '-' → logprob: -4.634764671325684
    3. ' -' → logprob: -11.759764671325684
    4. '(-' → logprob: -14.384764671325684
    5. ' ' → logprob: -15.134764671325684
    6. '```' → logprob: -17.134765625
    7. ')' → logprob: -17.384765625
    8. '   ' → logprob: -18.259765625
    9. ''-' → logprob: -18.384765625
    10. '`' → logprob: -18.509765625

Token 277: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038080859929323196
    2. ')
' → logprob: -3.288080930709839
    3. '   ' → logprob: -10.538081169128418
    4. '       ' → logprob: -12.163081169128418
    5. ')
' → logprob: -12.413081169128418
    6. ')return' → logprob: -12.913081169128418
    7. '')' → logprob: -15.913081169128418
    8. '`)' → logprob: -16.0380802154541
    9. ')

' → logprob: -16.1630802154541
    10. ' )' → logprob: -16.1630802154541

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001756575657054782
    2. '   ' → logprob: -6.62675666809082
    3. '<|end|>' → logprob: -7.87675666809082
    4. ')' → logprob: -11.00175666809082
    5. '           ' → logprob: -11.75175666809082
    6. '	' → logprob: -12.50175666809082
    7. '<|end|>' → logprob: -12.50175666809082
    8. '        
' → logprob: -12.50175666809082
    9. '
' → logprob: -13.00175666809082
    10. '    
' → logprob: -13.37675666809082

Token 279: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028559938073158264
    2. 'return' (adapté à ' return') → logprob: -6.2528557777404785
    3. ' return' → logprob: -7.1278557777404785
    4. '   ' → logprob: -9.377856254577637
    5. '
' → logprob: -10.877856254577637
    6. '	return' → logprob: -11.627856254577637
    7. ':return' → logprob: -12.627856254577637
    8. '           ' → logprob: -13.127856254577637
    9. ')' → logprob: -13.752856254577637
    10. '```' → logprob: -13.877856254577637

Token 280: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4956277310848236
    2. '<|end|>' → logprob: -1.245627760887146
    3. '    
' → logprob: -2.4956276416778564
    4. '
' → logprob: -4.2456278800964355
    5. ')' → logprob: -6.1206278800964355
    6. '  
' → logprob: -6.6206278800964355
    7. '<|end|>' → logprob: -7.4956278800964355
    8. '#' → logprob: -7.7456278800964355
    9. '        
' → logprob: -8.495627403259277
    10. ' 
' → logprob: -8.620627403259277

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008847496472299099
    2. '    
' → logprob: -5.133847713470459
    3. 'result' → logprob: -7.258847713470459
    4. 'rest' → logprob: -7.758847713470459
    5. '
' → logprob: -8.1338472366333
    6. ' 
' → logprob: -9.0088472366333
    7. 'answer' → logprob: -9.0088472366333
    8. '#' → logprob: -9.1338472366333
    9. 'for' → logprob: -9.3838472366333
    10. 'print' → logprob: -9.3838472366333

Token 282: ' #' (ID: 1069)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4985809028148651
    2. 'res' → logprob: -2.3735809326171875
    3. 'dp' → logprob: -2.4985809326171875
    4. '#' (adapté à ' #') → logprob: -2.9985809326171875
    5. 'result' → logprob: -2.9985809326171875
    6. 'rest' → logprob: -3.6235809326171875
    7. 'answer' → logprob: -4.7485809326171875
    8. 'nums' → logprob: -4.8735809326171875
    9. 'S' → logprob: -5.2485809326171875
    10. 'print' → logprob: -5.2485809326171875

Token 283: ' For' (ID: 2214)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.8926113843917847
    2. 'dp' → logprob: -1.8926113843917847
    3. 'res' → logprob: -2.642611503601074
    4. 'result' → logprob: -2.767611503601074
    5. 'target' → logprob: -3.642611503601074
    6. 'remaining' → logprob: -3.642611503601074
    7. 'delta' → logprob: -3.767611503601074
    8. 'sum' → logprob: -3.767611503601074
    9. ' diff' → logprob: -4.017611503601074
    10. 'S' → logprob: -4.267611503601074

Token 284: ' large' (ID: 4410)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.2107677459716797
    2. '_' → logprob: -1.3357677459716797
    3. 'i' → logprob: -1.5857677459716797
    4. ' _' → logprob: -2.3357677459716797
    5. 'S' → logprob: -3.3357677459716797
    6. ' S' → logprob: -3.4607677459716797
    7. ' s' → logprob: -3.9607677459716797
    8. 's' → logprob: -4.83576774597168
    9. ' parity' → logprob: -5.21076774597168
    10. ' d' → logprob: -5.33576774597168

Token 285: ' S' (ID: 336)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.889827311038971
    2. 'N' → logprob: -1.0148272514343262
    3. ' S' → logprob: -2.889827251434326
    4. ' K' → logprob: -2.889827251434326
    5. ' numbers' → logprob: -3.139827251434326
    6. 'S' → logprob: -3.139827251434326
    7. 'K' → logprob: -4.014827251434326
    8. 'numbers' → logprob: -6.139827251434326
    9. ' inputs' → logprob: -6.264827251434326
    10. 'import' → logprob: -6.264827251434326

Token 286: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34302517771720886
    2. ',' → logprob: -1.5930252075195312
    3. '   ' → logprob: -3.0930252075195312
    4. ' and' → logprob: -3.7180252075195312
    5. 'and' → logprob: -6.093025207519531
    6. ' if' → logprob: -6.093025207519531
    7. ' <=' → logprob: -6.218025207519531
    8. ':
' → logprob: -6.468025207519531
    9. '=' → logprob: -6.718025207519531
    10. '<=' → logprob: -6.718025207519531

Token 287: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.8140606880187988
    2. 'N' → logprob: -0.8140606880187988
    3. 'small' → logprob: -2.314060688018799
    4. 'large' → logprob: -5.564060688018799
    5. ' small' → logprob: -5.564060688018799
    6. ' K' → logprob: -5.814060688018799
    7. ' N' → logprob: -6.564060688018799
    8. '#' → logprob: -6.689060688018799
    9. 'def' → logprob: -7.814060688018799
    10. ' large' → logprob: -8.06406021118164

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0374351367354393
    2. '   ' → logprob: -3.6624350547790527
    3. ':' → logprob: -4.662435054779053
    4. ' ,' → logprob: -7.662435054779053
    5. ':
' → logprob: -8.037435531616211
    6. ',
' → logprob: -8.162435531616211
    7. ' and' → logprob: -8.787435531616211
    8. ' if' → logprob: -9.037435531616211
    9. '#' → logprob: -9.412435531616211
    10. '
' → logprob: -9.787435531616211

Token 289: ' probability' (ID: 34933)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5235836505889893
    2. ' #' → logprob: -1.8985836505889893
    3. ' if' → logprob: -2.5235836505889893
    4. ' print' → logprob: -2.7735836505889893
    5. 'print' → logprob: -2.7735836505889893
    6. '   ' → logprob: -4.64858341217041
    7. 'if' → logprob: -4.64858341217041
    8. 'diff' → logprob: -5.39858341217041
    9. ' diff' → logprob: -5.52358341217041
    10. ' pass' → logprob: -6.14858341217041

Token 290: ' that' (ID: 484)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7329140901565552
    2. ' =' → logprob: -1.1079140901565552
    3. '   ' → logprob: -2.9829139709472656
    4. ' that' → logprob: -3.3579139709472656
    5. 'import' → logprob: -3.6079139709472656
    6. ' distribution' → logprob: -4.482913970947266
    7. 'distribution' → logprob: -4.732913970947266
    8. '    ' → logprob: -4.857913970947266
    9. 'that' → logprob: -5.107913970947266
    10. ' of' → logprob: -5.107913970947266

Token 291: ' the' (ID: 290)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6808136701583862
    2. 'a' → logprob: -1.5558136701583862
    3. 'the' → logprob: -2.680813789367676
    4. ' S' → logprob: -2.930813789367676
    5. 'abs' → logprob: -4.055813789367676
    6. 'sum' → logprob: -4.055813789367676
    7. ' a' → logprob: -4.180813789367676
    8. '(S' → logprob: -4.305813789367676
    9. 'print' → logprob: -4.430813789367676
    10. 'any' → logprob: -4.430813789367676

Token 292: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7379181385040283
    2. ' sum' → logprob: -1.4879181385040283
    3. ' next' → logprob: -2.3629181385040283
    4. 'next' → logprob: -2.8629181385040283
    5. ' code' → logprob: -3.3629181385040283
    6. 'code' → logprob: -3.8629181385040283
    7. 'distribution' → logprob: -4.612917900085449
    8. 'S' → logprob: -4.737917900085449
    9. ' distribution' → logprob: -4.862917900085449
    10. 'numbers' → logprob: -4.987917900085449

Token 293: ' of' (ID: 328)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1866927593946457
    2. ' of' → logprob: -3.186692714691162
    3. ' exceeds' → logprob: -3.311692714691162
    4. ' can' → logprob: -3.436692714691162
    5. 'is' → logprob: -4.186692714691162
    6. 'of' → logprob: -4.811692714691162
    7. ' lies' → logprob: -5.311692714691162
    8. ' equals' → logprob: -5.311692714691162
    9. '   ' → logprob: -5.686692714691162
    10. 'can' → logprob: -5.811692714691162

Token 294: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0328221432864666
    2. ' K' → logprob: -3.9078221321105957
    3. 'the' → logprob: -5.032822132110596
    4. 'uniform' → logprob: -5.907822132110596
    5. 'numbers' → logprob: -7.282822132110596
    6. 'k' → logprob: -7.907822132110596
    7. 'inte' → logprob: -8.032822608947754
    8. 'tokens' → logprob: -8.407822608947754
    9. 'exact' → logprob: -8.407822608947754
    10. ' the' → logprob: -8.532822608947754

Token 295: ' uniform' (ID: 21219)
  Prédit: ' uniform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uniform' → logprob: -0.8665253520011902
    2. ' numbers' → logprob: -1.491525411605835
    3. ' integers' → logprob: -1.741525411605835
    4. 'uniform' → logprob: -1.991525411605835
    5. 'numbers' → logprob: -3.991525411605835
    6. 'inte' → logprob: -4.491525173187256
    7. ' random' → logprob: -5.366525173187256
    8. ' ' → logprob: -5.866525173187256
    9. ' independent' → logprob: -6.741525173187256
    10. 'ints' → logprob: -7.366525173187256

Token 296: '(' (ID: 7)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.6006776094436646
    2. ' integers' → logprob: -1.1006776094436646
    3. '[' → logprob: -2.350677490234375
    4. '1' → logprob: -4.725677490234375
    5. 'ints' → logprob: -5.350677490234375
    6. 'numbers' → logprob: -5.475677490234375
    7. ' numbers' → logprob: -6.600677490234375
    8. ' [' → logprob: -6.725677490234375
    9. 'random' → logprob: -7.100677490234375
    10. ' random' → logprob: -7.225677490234375

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017421666532754898
    2. ' ' → logprob: -4.767421722412109
    3. '0' → logprob: -5.392421722412109
    4. ')' → logprob: -6.017421722412109
    5. 'ints' → logprob: -7.642421722412109
    6. ' integers' → logprob: -7.892421722412109
    7. 'inte' → logprob: -8.01742172241211
    8. 'int' → logprob: -8.26742172241211
    9. '[' → logprob: -8.64242172241211
    10. '```' → logprob: -9.76742172241211

Token 298: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.07162369787693024
    2. ',' → logprob: -3.3216238021850586
    3. ',N' → logprob: -3.4466238021850586
    4. ',
' → logprob: -8.196623802185059
    5. '...' → logprob: -8.446623802185059
    6. '..)' → logprob: -8.696623802185059
    7. ' ,' → logprob: -8.946623802185059
    8. ',..' → logprob: -9.071623802185059
    9. ')' → logprob: -9.821623802185059
    10. '..
' → logprob: -9.821623802185059

Token 299: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0011797507759183645
    2. ' N' → logprob: -6.7511796951293945
    3. '```' → logprob: -13.001179695129395
    4. ' ' → logprob: -13.251179695129395
    5. '
' → logprob: -13.751179695129395
    6. ')' → logprob: -13.876179695129395
    7. '	N' → logprob: -14.501179695129395
    8. '1' → logprob: -14.626179695129395
    9. '   ' → logprob: -14.626179695129395
    10. '`' → logprob: -15.126179695129395

Token 300: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002281695604324341
    2. 'inte' → logprob: -7.252281665802002
    3. ')#' → logprob: -7.752281665802002
    4. 'numbers' → logprob: -8.37728214263916
    5. ' integers' → logprob: -8.50228214263916
    6. '#' → logprob: -8.87728214263916
    7. ')
' → logprob: -9.00228214263916
    8. ')-' → logprob: -10.00228214263916
    9. 's' → logprob: -10.12728214263916
    10. ')s' → logprob: -10.12728214263916

Token 301: ' equals' (ID: 29702)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'variables' → logprob: -1.1528005599975586
    2. 'random' → logprob: -1.5278005599975586
    3. 'numbers' → logprob: -2.0278005599975586
    4. ' variables' → logprob: -2.2778005599975586
    5. 'inte' → logprob: -2.4028005599975586
    6. ' random' → logprob: -2.9028005599975586
    7. '#' → logprob: -3.6528005599975586
    8. 'is' → logprob: -3.6528005599975586
    9. ' integers' → logprob: -4.777800559997559
    10. ' is' → logprob: -4.902800559997559

Token 302: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.28149792551994324
    2. ' S' → logprob: -1.4064979553222656
    3. ' a' → logprob: -8.781497955322266
    4. 'exact' → logprob: -9.906497955322266
    5. 'a' → logprob: -10.156497955322266
    6. ' ' → logprob: -10.906497955322266
    7. 's' → logprob: -10.906497955322266
    8. ' s' → logprob: -11.031497955322266
    9. ' exactly' → logprob: -11.156497955322266
    10. ' an' → logprob: -11.656497955322266

Token 303: ' can' (ID: 665)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.015030148439109325
    2. 'is' → logprob: -5.265030384063721
    3. '   ' → logprob: -5.390030384063721
    4. ' ' → logprob: -6.140030384063721
    5. ' =' → logprob: -7.390030384063721
    6. ' can' → logprob: -7.515030384063721
    7. ':' → logprob: -8.390029907226562
    8. ' may' → logprob: -8.640029907226562
    9. ' cannot' → logprob: -8.765029907226562
    10. ',' → logprob: -9.140029907226562

Token 304: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.4322962760925293
    2. 'be' → logprob: -1.1822962760925293
    3. '   ' → logprob: -3.8072962760925293
    4. 'return' → logprob: -5.182296276092529
    5. '#' → logprob: -5.682296276092529
    6. ' return' → logprob: -6.057296276092529
    7. '```' → logprob: -6.432296276092529
    8. ' ' → logprob: -6.682296276092529
    9. 'prob' → logprob: -6.807296276092529
    10. 'print' → logprob: -6.932296276092529

Token 305: ' computed' (ID: 46716)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.035810112953186035
    2. 'computed' → logprob: -3.9108099937438965
    3. 'cal' → logprob: -5.1608099937438965
    4. 'zero' → logprob: -5.6608099937438965
    5. 'appro' → logprob: -6.2858099937438965
    6. 'non' → logprob: -7.2858099937438965
    7. '```' → logprob: -7.4108099937438965
    8. 'estimated' → logprob: -7.6608099937438965
    9. 'found' → logprob: -7.7858099937438965
    10. 'math' → logprob: -8.285810470581055

Token 306: ' via' (ID: 4493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6953262090682983
    2. ' using' → logprob: -1.0703262090682983
    3. ' by' → logprob: -3.320326328277588
    4. '    ' → logprob: -3.820326328277588
    5. ' via' → logprob: -3.820326328277588
    6. ',' → logprob: -4.070326328277588
    7. '.' → logprob: -4.195326328277588
    8. ' as' → logprob: -4.320326328277588
    9. 'using' → logprob: -4.820326328277588
    10. 'import' → logprob: -5.195326328277588

Token 307: ' DP' (ID: 51992)
  Prédit: 'dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dynamic' → logprob: -0.9686288237571716
    2. 'dp' → logprob: -1.0936288833618164
    3. 'DP' → logprob: -1.4686288833618164
    4. 'math' → logprob: -3.8436288833618164
    5. 'normal' → logprob: -4.468628883361816
    6. 'con' → logprob: -4.718628883361816
    7. 'com' → logprob: -5.593628883361816
    8. ' dynamic' → logprob: -6.218628883361816
    9. '```' → logprob: -6.718628883361816
    10. '#' → logprob: -7.093628883361816

Token 308: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2562830150127411
    2. '
' → logprob: -2.1312830448150635
    3. 'dp' → logprob: -2.7562830448150635
    4. ':' → logprob: -4.506282806396484
    5. ' dp' → logprob: -4.756282806396484
    6. '    
' → logprob: -5.006282806396484
    7. '  
' → logprob: -5.881282806396484
    8. ' 
' → logprob: -6.381282806396484
    9. '.' → logprob: -6.506282806396484
    10. '```' → logprob: -6.756282806396484

Token 309: ' FFT' (ID: 147019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.729133665561676
    2. 'com' → logprob: -1.3541336059570312
    3. 'math' → logprob: -1.8541336059570312
    4. ' combin' → logprob: -2.6041336059570312
    5. ' convolution' → logprob: -4.479133605957031
    6. 'con' → logprob: -5.479133605957031
    7. ' probability' → logprob: -6.229133605957031
    8. ' mathematical' → logprob: -6.354133605957031
    9. 'FFT' → logprob: -6.854133605957031
    10. 'prob' → logprob: -7.104133605957031

Token 310: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.970410168170929
    2. '<|end|>' → logprob: -1.3454101085662842
    3. '#' → logprob: -2.345410108566284
    4. '.' → logprob: -2.970410108566284
    5. ',' → logprob: -3.345410108566284
    6. ':' → logprob: -3.595410108566284
    7. ')' → logprob: -3.595410108566284
    8. '
' → logprob: -3.720410108566284
    9. '<|end|>' → logprob: -3.720410108566284
    10. '[' → logprob: -3.970410108566284

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5580219626426697
    2. ' but' → logprob: -1.5580220222473145
    3. '    ' → logprob: -1.8080220222473145
    4. ')' → logprob: -4.4330220222473145
    5. '    
' → logprob: -4.8080220222473145
    6. 'but' → logprob: -4.8080220222473145
    7. ' )' → logprob: -5.1830220222473145
    8. ' ' → logprob: -5.4330220222473145
    9. '#' → logprob: -5.6830220222473145
    10. ' 
' → logprob: -6.4330220222473145

Token 312: ' #' (ID: 1069)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.40795397758483887
    2. '   ' → logprob: -1.2829539775848389
    3. 'but' → logprob: -3.282953977584839
    4. '#' (adapté à ' #') → logprob: -4.282954216003418
    5. '    
' → logprob: -5.782954216003418
    6. '    ' → logprob: -6.657954216003418
    7. ' or' → logprob: -8.157954216003418
    8. ' #' → logprob: -8.282954216003418
    9. ' not' → logprob: -8.657954216003418
    10. '
' → logprob: -8.782954216003418

Token 313: ' but' (ID: 889)
  Prédit: ' but'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.4140144884586334
    2. 'but' → logprob: -1.914014458656311
    3. '   ' → logprob: -2.0390145778656006
    4. '#' → logprob: -3.0390145778656006
    5. ' #' → logprob: -5.6640143394470215
    6. '    
' → logprob: -5.6640143394470215
    7. '    ' → logprob: -7.0390143394470215
    8. ' or' → logprob: -7.0390143394470215
    9. 'def' → logprob: -7.2890143394470215
    10. 'import' → logprob: -7.6640143394470215

Token 314: ' that's' (ID: 10954)
  Prédit: ' here'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' here' → logprob: -0.7322728037834167
    2. ' for' → logprob: -1.8572728633880615
    3. 'for' → logprob: -1.8572728633880615
    4. 'print' → logprob: -2.2322728633880615
    5. 'return' → logprob: -3.4822728633880615
    6. ' return' → logprob: -3.9822728633880615
    7. ' print' → logprob: -4.107272624969482
    8. ' given' → logprob: -4.607272624969482
    9. ' since' → logprob: -4.982272624969482
    10. '   ' → logprob: -5.107272624969482

Token 315: ' heavy' (ID: 12914)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3940425217151642
    2. ' computational' → logprob: -2.019042491912842
    3. ' too' → logprob: -2.644042491912842
    4. 'not' → logprob: -3.144042491912842
    5. ' complex' → logprob: -4.519042491912842
    6. ' probably' → logprob: -4.894042491912842
    7. ' infe' → logprob: -4.894042491912842
    8. ' likely' → logprob: -5.019042491912842
    9. ' complicated' → logprob: -5.394042491912842
    10. 'too' → logprob: -5.394042491912842

Token 316: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7831307053565979
    2. '
' → logprob: -1.1581306457519531
    3. '.' → logprob: -1.9081306457519531
    4. '<|end|>' → logprob: -3.658130645751953
    5. ',' → logprob: -4.158130645751953
    6. '    
' → logprob: -4.783130645751953
    7. '...' → logprob: -4.908130645751953
    8. ' for' → logprob: -5.158130645751953
    9. '.
' → logprob: -5.283130645751953
    10. '<|end|>' → logprob: -5.408130645751953

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016118358820676804
    2. '    
' → logprob: -4.76611852645874
    3. ' 
' → logprob: -5.64111852645874
    4. '    ' → logprob: -7.26611852645874
    5. '
' → logprob: -7.64111852645874
    6. '\' → logprob: -7.76611852645874
    7. '  
' → logprob: -7.76611852645874
    8. ')' → logprob: -8.141118049621582
    9. '   
' → logprob: -8.266118049621582
    10. '#' → logprob: -8.391118049621582

Token 318: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04311920329928398
    2. '#' (adapté à ' #') → logprob: -4.043119430541992
    3. '    
' → logprob: -4.668119430541992
    4. '
' → logprob: -5.043119430541992
    5. ' 
' → logprob: -6.168119430541992
    6. ')' → logprob: -6.793119430541992
    7. ' #' → logprob: -7.043119430541992
    8. '  
' → logprob: -7.293119430541992
    9. '    ' → logprob: -7.918119430541992
    10. '\' → logprob: -8.043119430541992

Token 319: ' Here' (ID: 7306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4182850122451782
    2. 'dp' → logprob: -1.4182850122451782
    3. 'result' → logprob: -1.4182850122451782
    4. '#' → logprob: -2.7932848930358887
    5. ' result' → logprob: -3.4182848930358887
    6. 'res' → logprob: -3.6682848930358887
    7. ' dp' → logprob: -3.9182848930358887
    8. ' #' → logprob: -4.293284893035889
    9. 'possible' → logprob: -4.293284893035889
    10. 'count' → logprob: -4.293284893035889

Token 320: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05399922654032707
    2. ':' → logprob: -3.178999185562134
    3. ',' → logprob: -5.928999423980713
    4. '#' → logprob: -6.553999423980713
    5. '    
' → logprob: -6.928999423980713
    6. '    ' → logprob: -7.053999423980713
    7. 'for' → logprob: -7.053999423980713
    8. ''s' → logprob: -7.553999423980713
    9. 'def' → logprob: -7.678999423980713
    10. ' we' → logprob: -7.803999423980713

Token 321: ' we' (ID: 581)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13611502945423126
    2. ' print' → logprob: -3.386115074157715
    3. 'we' → logprob: -4.011115074157715
    4. '#' → logprob: -4.011115074157715
    5. '   ' → logprob: -4.011115074157715
    6. ' we' → logprob: -4.636115074157715
    7. 'if' → logprob: -4.886115074157715
    8. 'pass' → logprob: -5.136115074157715
    9. ' if' → logprob: -5.511115074157715
    10. 'for' → logprob: -5.886115074157715

Token 322: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.4754188358783722
    2. '   ' → logprob: -2.22541880607605
    3. 'can' → logprob: -2.97541880607605
    4. ''ll' → logprob: -3.60041880607605
    5. ' just' → logprob: -3.85041880607605
    6. 'return' → logprob: -3.85041880607605
    7. ' try' → logprob: -4.100419044494629
    8. ' continue' → logprob: -4.225419044494629
    9. 'import' → logprob: -4.475419044494629
    10. ' return' → logprob: -4.600419044494629

Token 323: ' compute' (ID: 23864)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6405343413352966
    2. ' use' → logprob: -2.2655344009399414
    3. 'use' → logprob: -2.2655344009399414
    4. 'try' → logprob: -2.6405344009399414
    5. '   ' → logprob: -3.5155344009399414
    6. 'ass' → logprob: -3.5155344009399414
    7. ' print' → logprob: -3.8905344009399414
    8. 'simulate' → logprob: -4.390534400939941
    9. 'consider' → logprob: -4.640534400939941
    10. ' try' → logprob: -4.640534400939941

Token 324: ' gcd' (ID: 106918)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1276532411575317
    2. 'the' → logprob: -1.6276532411575317
    3. 'dp' → logprob: -1.8776532411575317
    4. ' ways' → logprob: -2.127653121948242
    5. 'prob' → logprob: -3.002653121948242
    6. ' dp' → logprob: -3.377653121948242
    7. 'result' → logprob: -4.502653121948242
    8. 'ways' → logprob: -4.752653121948242
    9. 'answer' → logprob: -4.752653121948242
    10. 'res' → logprob: -4.877653121948242

Token 325: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5287638306617737
    2. '(N' → logprob: -1.778763771057129
    3. '_value' → logprob: -2.278763771057129
    4. ' =' → logprob: -3.403763771057129
    5. '_' → logprob: -3.903763771057129
    6. '_val' → logprob: -4.028763771057129
    7. 's' → logprob: -4.778763771057129
    8. ')' → logprob: -4.778763771057129
    9. '(S' → logprob: -4.903763771057129
    10. '=' → logprob: -5.153763771057129

Token 326: ' steps' (ID: 10331)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03964168578386307
    2. 'S' → logprob: -3.7896416187286377
    3. 'K' → logprob: -4.289641857147217
    4. ' N' → logprob: -7.039641857147217
    5. '1' → logprob: -7.414641857147217
    6. 'math' → logprob: -7.664641857147217
    7. ' math' → logprob: -8.289641380310059
    8. '(N' → logprob: -9.039641380310059
    9. ' S' → logprob: -9.414641380310059
    10. ' K' → logprob: -9.789641380310059

Token 327: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5788754224777222
    2. ' =' → logprob: -1.4538754224777222
    3. ' and' → logprob: -2.9538755416870117
    4. '(N' → logprob: -3.3288755416870117
    5. '(' → logprob: -3.7038755416870117
    6. '=' → logprob: -3.8288755416870117
    7. ',' → logprob: -4.203875541687012
    8. ' to' → logprob: -4.828875541687012
    9. ')' → logprob: -4.953875541687012
    10. 'import' → logprob: -5.203875541687012

Token 328: ' decide' (ID: 13001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.031230444088578224
    2. ' ' → logprob: -4.031230449676514
    3. 'det' → logprob: -4.906230449676514
    4. 'g' → logprob: -7.031230449676514
    5. 'N' → logprob: -7.406230449676514
    6. 'import' → logprob: -7.531230449676514
    7. 'K' → logprob: -7.656230449676514
    8. '2' → logprob: -7.781230449676514
    9. 'check' → logprob: -7.906230449676514
    10. 'abs' → logprob: -8.156229972839355

Token 329: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06754368543624878
    2. ' if' → logprob: -3.0675437450408936
    3. ':' → logprob: -5.3175435066223145
    4. ' on' → logprob: -6.0675435066223145
    5. 'if' → logprob: -6.4425435066223145
    6. ' of' → logprob: -6.6925435066223145
    7. ' steps' → logprob: -6.9425435066223145
    8. ',' → logprob: -7.4425435066223145
    9. 'def' → logprob: -7.4425435066223145
    10. 'g' → logprob: -7.6925435066223145

Token 330: ' S' (ID: 336)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.48232603073120117
    2. '(S' → logprob: -0.9823260307312012
    3. 'S' → logprob: -5.982326030731201
    4. ' S' → logprob: -6.107326030731201
    5. '1' → logprob: -6.607326030731201
    6. 'abs' → logprob: -7.107326030731201
    7. ' ' → logprob: -7.607326030731201
    8. '(' → logprob: -8.23232650756836
    9. ' abs' → logprob: -8.48232650756836
    10. '(abs' → logprob: -9.60732650756836

Token 331: ' is' (ID: 382)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.05370981618762016
    2. '%' → logprob: -3.3037097454071045
    3. ' -' → logprob: -4.553709983825684
    4. '-' → logprob: -5.928709983825684
    5. ' ' → logprob: -6.428709983825684
    6. ' is' → logprob: -8.178709983825684
    7. ' <=' → logprob: -8.803709983825684
    8. '   ' → logprob: -9.553709983825684
    9. '```' → logprob: -9.803709983825684
    10. ' ==' → logprob: -10.053709983825684

Token 332: ' reachable' (ID: 143580)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.2238175868988037
    2. '(K' → logprob: -1.3488175868988037
    3. 'reachable' → logprob: -1.3488175868988037
    4. 'possible' → logprob: -2.3488175868988037
    5. ' (' → logprob: -3.4738175868988037
    6. '(N' → logprob: -3.5988175868988037
    7. 'abs' → logprob: -4.598817825317383
    8. 'ach' → logprob: -4.848817825317383
    9. ' reachable' → logprob: -5.348817825317383
    10. ' divisible' → logprob: -6.473817825317383

Token 333: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3060851991176605
    2. '
' → logprob: -1.431085228919983
    3. '    
' → logprob: -4.306085109710693
    4. 'from' → logprob: -6.056085109710693
    5. 'import' → logprob: -6.306085109710693
    6. '  
' → logprob: -6.806085109710693
    7. ',' → logprob: -6.931085109710693
    8. '\n' → logprob: -7.431085109710693
    9. '

' → logprob: -7.556085109710693
    10. '```' → logprob: -7.556085109710693

Token 334: ' all' (ID: 722)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7214429378509521
    2. ' all' → logprob: -1.4714429378509521
    3. 'all' → logprob: -1.5964429378509521
    4. ' ' → logprob: -3.096442937850952
    5. 'least' → logprob: -4.096443176269531
    6. ' this' → logprob: -5.846443176269531
    7. ' least' → logprob: -5.846443176269531
    8. ' step' → logprob: -5.971443176269531
    9. '0' → logprob: -6.471443176269531
    10. 'step' → logprob: -6.596443176269531

Token 335: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15829876065254211
    2. '
' → logprob: -2.2832987308502197
    3. '    
' → logprob: -3.7832987308502197
    4. '\n' → logprob: -5.158298969268799
    5. 'import' → logprob: -5.408298969268799
    6. '  
' → logprob: -5.908298969268799
    7. '\' → logprob: -6.283298969268799
    8. '(N' → logprob: -7.283298969268799
    9. ' 
' → logprob: -7.533298969268799
    10. '   
' → logprob: -7.533298969268799

Token 336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05161473527550697
    2. '
' → logprob: -3.176614761352539
    3. '    
' → logprob: -4.926614761352539
    4. '```' → logprob: -7.926614761352539
    5. '\' → logprob: -8.176614761352539
    6. '\n' → logprob: -8.301614761352539
    7. ',' → logprob: -9.551614761352539
    8. '

' → logprob: -9.801614761352539
    9. '  
' → logprob: -10.176614761352539
    10. ')' → logprob: -10.176614761352539

Token 337: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24713921546936035
    2. '
' → logprob: -1.7471392154693604
    3. 'g' → logprob: -3.9971392154693604
    4. 'step' → logprob: -4.622138977050781
    5. '    
' → logprob: -4.747138977050781
    6. ' step' → logprob: -6.247138977050781
    7. 'steps' → logprob: -6.372138977050781
    8. 'diff' → logprob: -7.747138977050781
    9. '\n' → logprob: -7.997138977050781
    10. 'n' → logprob: -7.997138977050781

Token 338: ' Since' (ID: 12265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36065009236335754
    2. '\n' → logprob: -2.110650062561035
    3. 'g' → logprob: -2.985650062561035
    4. '
' → logprob: -3.235650062561035
    5. 'n' → logprob: -3.485650062561035
    6. ' gcd' → logprob: -4.110650062561035
    7. '    
' → logprob: -4.360650062561035
    8. ' 
' → logprob: -4.735650062561035
    9. '\' → logprob: -5.360650062561035
    10. '  
' → logprob: -5.860650062561035

Token 339: ' steps' (ID: 10331)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5114186406135559
    2. '1' → logprob: -1.3864185810089111
    3. ' N' → logprob: -2.511418581008911
    4. ' the' → logprob: -3.636418581008911
    5. 'the' → logprob: -3.886418581008911
    6. ' ' → logprob: -4.88641881942749
    7. 'import' → logprob: -5.38641881942749
    8. 'K' → logprob: -6.51141881942749
    9. 'S' → logprob: -6.63641881942749
    10. ' all' → logprob: -6.63641881942749

Token 340: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.0906102657318115
    2. '=' → logprob: -1.2156102657318115
    3. ' =' → logprob: -1.2156102657318115
    4. '%' → logprob: -4.215610504150391
    5. 'are' → logprob: -4.215610504150391
    6. ' of' → logprob: -4.715610504150391
    7. ' is' → logprob: -5.090610504150391
    8. ' between' → logprob: -5.340610504150391
    9. ' in' → logprob: -5.715610504150391
    10. ' ' → logprob: -5.715610504150391

Token 341: ' integers' (ID: 54912)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009295677882619202
    2. ' ' → logprob: -7.250929355621338
    3. 'N' → logprob: -8.625929832458496
    4. 'import' → logprob: -10.625929832458496
    5. ' N' → logprob: -12.000929832458496
    6. '<|end|>' → logprob: -12.625929832458496
    7. '
' → logprob: -13.250929832458496
    8. 'from' → logprob: -13.750929832458496
    9. '   ' → logprob: -13.750929832458496
    10. '\
' → logprob: -15.375929832458496

Token 342: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23283305764198303
    2. '
' → logprob: -1.7328330278396606
    3. ',' → logprob: -4.857832908630371
    4. '    
' → logprob: -4.982832908630371
    5. 'import' → logprob: -5.732832908630371
    6. '  
' → logprob: -6.232832908630371
    7. 'g' → logprob: -6.482832908630371
    8. '<|end|>' → logprob: -6.732832908630371
    9. '

' → logprob: -6.857832908630371
    10. ',
' → logprob: -6.857832908630371

Token 343: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013105978723615408
    2. '0' → logprob: -7.1263108253479
    3. ' ' → logprob: -7.6263108253479
    4. '-' → logprob: -11.501310348510742
    5. 'import' → logprob: -12.751310348510742
    6. 'N' → logprob: -13.251310348510742
    7. '
' → logprob: -14.001310348510742
    8. '```' → logprob: -14.501310348510742
    9. ' -' → logprob: -14.751310348510742
    10. '{' → logprob: -14.876310348510742

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7372048862162046e-05
    2. '0' → logprob: -10.875027656555176
    3. 'N' → logprob: -12.125027656555176
    4. ' ' → logprob: -13.125027656555176
    5. 'import' → logprob: -15.250027656555176
    6. '
' → logprob: -16.12502670288086
    7. '<|end|>' → logprob: -16.12502670288086
    8. '{' → logprob: -16.25002670288086
    9. 'range' → logprob: -16.50002670288086
    10. '```' → logprob: -16.56252670288086

Token 345: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0879602432250977
    2. ' to' → logprob: -1.2129602432250977
    3. 'to' → logprob: -1.4629602432250977
    4. '..' → logprob: -2.7129602432250977
    5. ':' → logprob: -3.7129602432250977
    6. '...' → logprob: -4.462960243225098
    7. '<|end|>' → logprob: -4.837960243225098
    8. 'import' → logprob: -4.837960243225098
    9. ',N' → logprob: -5.087960243225098
    10. '   ' → logprob: -6.462960243225098

Token 346: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009889957495033741
    2. ' N' → logprob: -5.009890079498291
    3. '1' → logprob: -5.759890079498291
    4. ' ' → logprob: -11.009889602661133
    5. 'n' → logprob: -14.634889602661133
    6. 'import' → logprob: -15.384889602661133
    7. '
' → logprob: -15.759889602661133
    8. '```' → logprob: -15.884889602661133
    9. '	N' → logprob: -16.134889602661133
    10. ' ' → logprob: -16.634889602661133

Token 347: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6005096435546875
    2. '   ' → logprob: -0.9755096435546875
    3. ',' → logprob: -3.7255096435546875
    4. ':' → logprob: -4.3505096435546875
    5. ':
' → logprob: -4.9755096435546875
    6. '    
' → logprob: -5.2255096435546875
    7. ',
' → logprob: -5.6005096435546875
    8. ' and' → logprob: -5.7255096435546875
    9. ')' → logprob: -5.8505096435546875
    10. '<|end|>' → logprob: -5.9755096435546875

Token 348: ' gcd' (ID: 106918)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062454964965581894
    2. ' gcd' → logprob: -3.06245493888855
    3. 'g' → logprob: -5.187455177307129
    4. ' if' → logprob: -6.187455177307129
    5. ' g' → logprob: -6.687455177307129
    6. ' step' → logprob: -7.187455177307129
    7. '#' → logprob: -7.312455177307129
    8. ' the' → logprob: -7.437455177307129
    9. '
' → logprob: -7.812455177307129
    10. '1' → logprob: -8.062455177307129

Token 349: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7695050239562988
    2. '=' → logprob: -1.3945050239562988
    3. '_val' → logprob: -1.5195050239562988
    4. '_value' → logprob: -2.894505023956299
    5. '(N' → logprob: -5.269505023956299
    6. '_step' → logprob: -6.644505023956299
    7. 's' → logprob: -6.769505023956299
    8. '_n' → logprob: -6.769505023956299
    9. '_N' → logprob: -6.769505023956299
    10. '_' → logprob: -7.019505023956299

Token 350: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '
' → logprob: -16.375097274780273
    4. '   ' → logprob: -16.875097274780273
    5. '=' → logprob: -18.625097274780273
    6. 'math' → logprob: -18.750097274780273
    7. 'g' → logprob: -19.250097274780273
    8. 'int' → logprob: -19.375097274780273
    9. 'import' → logprob: -19.750097274780273
    10. '<|end|>' → logprob: -19.875097274780273

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.25000762939453
    4. '
' → logprob: -17.50000762939453
    5. 'math' → logprob: -17.62500762939453
    6. '<|end|>' → logprob: -18.25000762939453
    7. '```' → logprob: -19.62500762939453
    8. 'def' → logprob: -19.75000762939453
    9. '=' → logprob: -19.87500762939453
    10. 'int' → logprob: -19.87500762939453

Token 352: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6774086356163025
    2. '
' → logprob: -0.8024086356163025
    3. '    
' → logprob: -3.9274086952209473
    4. '<|end|>' → logprob: -3.9274086952209473
    5. ')' → logprob: -6.427408695220947
    6. '  
' → logprob: -7.552408695220947
    7. ',' → logprob: -7.802408695220947
    8. '\n' → logprob: -7.927408695220947
    9. '<|end|>' → logprob: -8.052408218383789
    10. '.' → logprob: -8.677408218383789

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01759127341210842
    2. '    
' → logprob: -4.89259147644043
    3. '<|end|>' → logprob: -5.39259147644043
    4. '
' → logprob: -5.76759147644043
    5. '\n' → logprob: -6.76759147644043
    6. ')' → logprob: -7.89259147644043
    7. '  
' → logprob: -8.51759147644043
    8. '\' → logprob: -9.39259147644043
    9. ' 
' → logprob: -9.39259147644043
    10. '```' → logprob: -9.51759147644043

Token 354: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06678415089845657
    2. '\n' → logprob: -3.816784143447876
    3. '
' → logprob: -4.316784381866455
    4. '    
' → logprob: -4.691784381866455
    5. '<|end|>' → logprob: -5.191784381866455
    6. ')' → logprob: -5.441784381866455
    7. '\' → logprob: -5.566784381866455
    8. ' 
' → logprob: -6.316784381866455
    9. '#' (adapté à ' #') → logprob: -6.566784381866455
    10. '  
' → logprob: -7.691784381866455

Token 355: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015322738327085972
    2. '#' → logprob: -5.765322685241699
    3. ')' → logprob: -5.890322685241699
    4. '\' → logprob: -6.390322685241699
    5. '    
' → logprob: -6.390322685241699
    6. '    ' → logprob: -6.640322685241699
    7. '\n' → logprob: -7.015322685241699
    8. ' \' → logprob: -7.390322685241699
    9. ' 
' → logprob: -7.640322685241699
    10. ' ' → logprob: -7.765322685241699

Token 356: ' any' (ID: 1062)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16565029323101044
    2. 'pass' → logprob: -2.9156503677368164
    3. ' print' → logprob: -2.9156503677368164
    4. '   ' → logprob: -3.9156503677368164
    5. ' pass' → logprob: -4.040650367736816
    6. '#' → logprob: -5.790650367736816
    7. ' the' → logprob: -6.665650367736816
    8. 'reachable' → logprob: -7.540650367736816
    9. ' #' → logprob: -7.915650367736816
    10. ' if' → logprob: -8.040650367736816

Token 357: ' sum' (ID: 4215)
  Prédit: ' integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.19898641109466553
    2. ' number' → logprob: -1.8239864110946655
    3. ' ' → logprob: -5.073986530303955
    4. ' S' → logprob: -5.323986530303955
    5. 'integer' → logprob: -5.823986530303955
    6. ' value' → logprob: -6.573986530303955
    7. ' sum' → logprob: -7.073986530303955
    8. 'number' → logprob: -7.323986530303955
    9. ' valid' → logprob: -7.448986530303955
    10. ' possible' → logprob: -7.948986530303955

Token 358: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2297879159450531
    2. ' from' → logprob: -2.479787826538086
    3. ' is' → logprob: -3.604787826538086
    4. ' between' → logprob: -3.604787826538086
    5. 'from' → logprob: -3.854787826538086
    6. 'in' → logprob: -4.104787826538086
    7. ' can' → logprob: -4.604787826538086
    8. ' ' → logprob: -5.229787826538086
    9. ' within' → logprob: -5.354787826538086
    10. '   ' → logprob: -5.604787826538086

Token 359: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0003473825636319816
    2. ' K' → logprob: -8.125347137451172
    3. 'min' → logprob: -10.000347137451172
    4. 'import' → logprob: -13.375347137451172
    5. 'S' → logprob: -13.500347137451172
    6. ' min' → logprob: -13.875347137451172
    7. 'def' → logprob: -14.750347137451172
    8. '[K' → logprob: -15.625347137451172
    9. '```' → logprob: -15.750347137451172
    10. '(K' → logprob: -15.875347137451172

Token 360: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.012739663943648338
    2. 'to' → logprob: -4.387739658355713
    3. ' ' → logprob: -8.637740135192871
    4. ' up' → logprob: -10.262740135192871
    5. ',' → logprob: -12.512740135192871
    6. ' onwards' → logprob: -12.512740135192871
    7. '```' → logprob: -12.887740135192871
    8. ' through' → logprob: -13.137740135192871
    9. ' onward' → logprob: -13.512740135192871
    10. '+' → logprob: -14.262740135192871

Token 361: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.01416738796979189
    2. ' K' → logprob: -4.264167308807373
    3. 'N' → logprob: -13.389167785644531
    4. ' ' → logprob: -13.889167785644531
    5. 'KN' → logprob: -14.139167785644531
    6. '	K' → logprob: -15.389167785644531
    7. 'k' → logprob: -16.26416778564453
    8. '   ' → logprob: -16.51416778564453
    9. ' (' → logprob: -16.76416778564453
    10. '(K' → logprob: -17.01416778564453

Token 362: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.004770445637404919
    2. 'N' → logprob: -5.379770278930664
    3. '*' → logprob: -9.004770278930664
    4. ' *' → logprob: -10.629770278930664
    5. '```' → logprob: -14.004770278930664
    6. '\' → logprob: -14.129770278930664
    7. '**' → logprob: -14.879770278930664
    8. '*n' → logprob: -15.254770278930664
    9. '*K' → logprob: -15.754770278930664
    10. '*(' → logprob: -16.004770278930664

Token 363: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2754352390766144
    2. ' can' → logprob: -2.025435209274292
    3. ':' → logprob: -2.775435209274292
    4. 'is' → logprob: -4.275435447692871
    5. 'can' → logprob: -4.525435447692871
    6. ':
' → logprob: -4.650435447692871
    7. '   ' → logprob: -4.775435447692871
    8. '```' → logprob: -7.275435447692871
    9. ' will' → logprob: -7.775435447692871
    10. '
' → logprob: -7.900435447692871

Token 364: ' possible' (ID: 4149)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.34487655758857727
    2. 'possible' → logprob: -1.3448765277862549
    3. ' possible' → logprob: -3.844876527786255
    4. ' reachable' → logprob: -4.844876766204834
    5. 'ach' → logprob: -6.469876766204834
    6. ' achievable' → logprob: -9.469876289367676
    7. 'always' → logprob: -9.844876289367676
    8. '1' → logprob: -9.844876289367676
    9. 'fe' → logprob: -10.594876289367676
    10. '   ' → logprob: -10.969876289367676

Token 365: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08099132776260376
    2. '    
' → logprob: -2.830991268157959
    3. '\n' → logprob: -4.830991268157959
    4. '
' → logprob: -5.205991268157959
    5. '\' → logprob: -5.830991268157959
    6. '  
' → logprob: -7.205991268157959
    7. ')' → logprob: -7.955991268157959
    8. '```' → logprob: -7.955991268157959
    9. '<|end|>' → logprob: -8.455991744995117
    10. ' 
' → logprob: -8.830991744995117

Token 367: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01859165169298649
    2. '    
' → logprob: -4.64359188079834
    3. 'print' → logprob: -5.01859188079834
    4. '
' → logprob: -7.64359188079834
    5. ')' → logprob: -7.89359188079834
    6. '#' (adapté à ' #') → logprob: -8.26859188079834
    7. '  
' → logprob: -8.51859188079834
    8. '\n' → logprob: -9.01859188079834
    9. ',' → logprob: -9.14359188079834
    10. '```' → logprob: -9.14359188079834

Token 368: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01045991014689207
    2. '    
' → logprob: -5.260459899902344
    3. '\n' → logprob: -6.885459899902344
    4. ' \' → logprob: -7.135459899902344
    5. ' 
' → logprob: -7.385459899902344
    6. '    ' → logprob: -7.760459899902344
    7. '\' → logprob: -8.010459899902344
    8. 'print' → logprob: -8.135459899902344
    9. ')' → logprob: -8.260459899902344
    10. '#' → logprob: -8.260459899902344

Token 369: ' we' (ID: 581)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15424510836601257
    2. 'pass' → logprob: -2.529245138168335
    3. ' pass' → logprob: -3.404245138168335
    4. ' print' → logprob: -3.904245138168335
    5. '   ' → logprob: -4.654244899749756
    6. 'for' → logprob: -9.404245376586914
    7. 'result' → logprob: -10.154245376586914
    8. '#' → logprob: -10.279245376586914
    9. '```' → logprob: -10.279245376586914
    10. ' for' → logprob: -10.529245376586914

Token 370: ' only' (ID: 1606)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7115615010261536
    2. 'print' → logprob: -0.8365615010261536
    3. ' print' → logprob: -2.711561441421509
    4. 'return' → logprob: -5.461561679840088
    5. ' return' → logprob: -6.211561679840088
    6. ' can' → logprob: -6.461561679840088
    7. 'can' → logprob: -7.586561679840088
    8. 'continue' → logprob: -8.46156120300293
    9. ':' → logprob: -8.96156120300293
    10. '    ' → logprob: -9.21156120300293

Token 371: ' need' (ID: 1309)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.9520869851112366
    2. '   ' → logprob: -1.2020869255065918
    3. 'print' → logprob: -1.3270869255065918
    4. ' need' → logprob: -3.077086925506592
    5. ' print' → logprob: -6.327086925506592
    6. 'have' → logprob: -8.82708740234375
    7. '  ' → logprob: -10.07708740234375
    8. 'continue' → logprob: -10.20208740234375
    9. '```' → logprob: -10.20208740234375
    10. ' have' → logprob: -10.32708740234375

Token 372: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.39110344648361206
    2. ' to' → logprob: -1.1411035060882568
    3. 'print' → logprob: -5.891103267669678
    4. '   ' → logprob: -7.141103267669678
    5. ')' → logprob: -8.391103744506836
    6. ' print' → logprob: -8.891103744506836
    7. '<|end|>' → logprob: -8.891103744506836
    8. '    ' → logprob: -9.766103744506836
    9. 'if' → logprob: -11.266103744506836
    10. '  ' → logprob: -11.391103744506836

Token 373: ' check' (ID: 2371)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003503626212477684
    2. ' print' → logprob: -8.125349998474121
    3. 'check' → logprob: -10.000349998474121
    4. '```' → logprob: -12.625349998474121
    5. 'if' → logprob: -13.500349998474121
    6. 'write' → logprob: -13.875349998474121
    7. 'pass' → logprob: -13.875349998474121
    8. '   ' → logprob: -14.250349998474121
    9. '
' → logprob: -14.625349998474121
    10. 'output' → logprob: -15.500349998474121

Token 374: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.331564337015152
    2. 'if' → logprob: -1.7065643072128296
    3. 'print' → logprob: -2.706564426422119
    4. '   ' → logprob: -3.831564426422119
    5. ' print' → logprob: -4.456564426422119
    6. '    ' → logprob: -8.706563949584961
    7. ' that' → logprob: -9.331563949584961
    8. ' the' → logprob: -9.706563949584961
    9. 'for' → logprob: -9.956563949584961
    10. ' S' → logprob: -9.956563949584961

Token 375: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.41585928201675415
    2. 'K' → logprob: -1.1658592224121094
    3. 'True' → logprob: -5.165859222412109
    4. 'print' → logprob: -5.290859222412109
    5. 'min' → logprob: -5.415859222412109
    6. '(K' → logprob: -5.415859222412109
    7. ' K' → logprob: -5.915859222412109
    8. '(S' → logprob: -6.040859222412109
    9. ' S' → logprob: -6.415859222412109
    10. ' (' → logprob: -7.040859222412109

Token 376: ' in' (ID: 306)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.14586268365383148
    2. ' >=' → logprob: -2.395862579345703
    3. '<=' → logprob: -3.520862579345703
    4. '>=' → logprob: -5.020862579345703
    5. ' ==' → logprob: -6.145862579345703
    6. ' %' → logprob: -6.145862579345703
    7. '%' → logprob: -6.770862579345703
    8. ' in' → logprob: -7.020862579345703
    9. ' ' → logprob: -7.520862579345703
    10. '==' → logprob: -7.520862579345703

Token 377: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6360709071159363
    2. ' range' → logprob: -0.7610709071159363
    3. '[K' → logprob: -6.011070728302002
    4. ' [' → logprob: -7.511070728302002
    5. '[' → logprob: -8.51107120513916
    6. ' K' → logprob: -9.38607120513916
    7. 'K' → logprob: -9.63607120513916
    8. ' ' → logprob: -9.88607120513916
    9. '   ' → logprob: -10.63607120513916
    10. '(range' → logprob: -12.13607120513916

Token 378: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.007877630181610584
    2. 'min' → logprob: -5.007877826690674
    3. ' K' → logprob: -6.882877826690674
    4. '   ' → logprob: -9.382877349853516
    5. ' min' → logprob: -10.382877349853516
    6. ',' → logprob: -12.382877349853516
    7. ' ' → logprob: -12.382877349853516
    8. ',K' → logprob: -12.757877349853516
    9. 'k' → logprob: -13.132877349853516
    10. ')' → logprob: -13.382877349853516

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009956181980669498
    2. ',K' → logprob: -5.259956359863281
    3. ' ,' → logprob: -5.759956359863281
    4. ',N' → logprob: -6.884956359863281
    5. ',
' → logprob: -7.634956359863281
    6. '   ' → logprob: -11.634956359863281
    7. ',max' → logprob: -11.759956359863281
    8. ',k' → logprob: -11.759956359863281
    9. ',n' → logprob: -12.259956359863281
    10. ' ' → logprob: -12.384956359863281

Token 380: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.006722706835716963
    2. ' K' → logprob: -5.006722927093506
    3. ' ' → logprob: -13.006722450256348
    4. 'N' → logprob: -13.256722450256348
    5. '   ' → logprob: -14.006722450256348
    6. ',' → logprob: -14.006722450256348
    7. ',K' → logprob: -14.131722450256348
    8. 'max' → logprob: -15.381722450256348
    9. ' ' → logprob: -15.506722450256348
    10. '(K' → logprob: -15.881722450256348

Token 381: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.008557720109820366
    2. ',' → logprob: -5.1335577964782715
    3. '*,' → logprob: -6.3835577964782715
    4. '*' → logprob: -7.5085577964782715
    5. ',
' → logprob: -9.508557319641113
    6. '*n' → logprob: -9.508557319641113
    7. ',*' → logprob: -9.758557319641113
    8. '*
' → logprob: -9.758557319641113
    9. ',N' → logprob: -10.258557319641113
    10. '*K' → logprob: -10.383557319641113

Token 382: '],' (ID: 2155)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.04576602205634117
    2. ']:
' → logprob: -3.5457661151885986
    3. ']' → logprob: -4.1707658767700195
    4. '   ' → logprob: -8.67076587677002
    5. '):' → logprob: -9.42076587677002
    6. '].' → logprob: -9.92076587677002
    7. ']:
' → logprob: -10.29576587677002
    8. '+' → logprob: -10.67076587677002
    9. ':' → logprob: -11.04576587677002
    10. '],' → logprob: -11.42076587677002

Token 383: ' which' (ID: 1118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02105678804218769
    2. '    
' → logprob: -4.521056652069092
    3. 'print' → logprob: -5.021056652069092
    4. '
' → logprob: -6.396056652069092
    5. ' print' → logprob: -7.646056652069092
    6. ' and' → logprob: -7.896056652069092
    7. ' 
' → logprob: -9.14605712890625
    8. '        
' → logprob: -9.39605712890625
    9. '.' → logprob: -9.64605712890625
    10. ' then' → logprob: -9.64605712890625

Token 384: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01610182411968708
    2. ' is' → logprob: -4.516101837158203
    3. ':
' → logprob: -6.516101837158203
    4. ':return' → logprob: -6.641101837158203
    5. '   ' → logprob: -6.891101837158203
    6. 'is' → logprob: -7.891101837158203
    7. '):' → logprob: -8.766101837158203
    8. '.' → logprob: -9.516101837158203
    9. ' :' → logprob: -9.516101837158203
    10. '       ' → logprob: -9.891101837158203

Token 385: ' done' (ID: 4167)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.329002320766449
    2. 'already' → logprob: -1.5790023803710938
    3. 'true' → logprob: -3.3290023803710938
    4. ' True' → logprob: -3.4540023803710938
    5. '   ' → logprob: -5.829002380371094
    6. ' already' → logprob: -6.954002380371094
    7. 'covered' → logprob: -7.079002380371094
    8. ' true' → logprob: -7.579002380371094
    9. 'checked' → logprob: -7.954002380371094
    10. '       ' → logprob: -8.204002380371094

Token 386: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15647821128368378
    2. '    
' → logprob: -2.9064781665802
    3. '.' → logprob: -3.1564781665802
    4. '```' → logprob: -4.156478404998779
    5. '
' → logprob: -4.406478404998779
    6. 'else' → logprob: -4.906478404998779
    7. '<|end|>' → logprob: -5.281478404998779
    8. ':' → logprob: -5.906478404998779
    9. ')' → logprob: -7.406478404998779
    10. '    ' → logprob: -7.531478404998779

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019342726096510887
    2. '    
' → logprob: -4.26934289932251
    3. '```' → logprob: -5.76934289932251
    4. '<|end|>' → logprob: -6.64434289932251
    5. '
' → logprob: -7.64434289932251
    6. '\' → logprob: -10.269342422485352
    7. '    
    
' → logprob: -10.769342422485352
    8. '  
' → logprob: -10.769342422485352
    9. ')' → logprob: -10.769342422485352
    10. '#' → logprob: -11.019342422485352

Token 388: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 389: ' The' (ID: 623)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9817763566970825
    2. 'print' → logprob: -1.8567763566970825
    3. 'res' → logprob: -2.231776237487793
    4. 'answer' → logprob: -2.606776237487793
    5. 'rest' → logprob: -3.356776237487793
    6. 'numbers' → logprob: -3.356776237487793
    7. 'nums' → logprob: -3.481776237487793
    8. 'arr' → logprob: -3.981776237487793
    9. 'remaining' → logprob: -3.981776237487793
    10. '   ' → logprob: -3.981776237487793

Token 390: ' expected' (ID: 5930)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.310404896736145
    2. ' rest' → logprob: -1.685404896736145
    3. ' next' → logprob: -2.1854047775268555
    4. ' best' → logprob: -2.9354047775268555
    5. 'rest' → logprob: -3.0604047775268555
    6. '#' → logprob: -3.3104047775268555
    7. ' problem' → logprob: -3.3104047775268555
    8. ' remaining' → logprob: -3.6854047775268555
    9. 'def' → logprob: -3.8104047775268555
    10. ' goal' → logprob: -4.1854047775268555

Token 391: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.45472219586372375
    2. ' value' → logprob: -1.2047221660614014
    3. 'number' → logprob: -4.0797224044799805
    4. ' number' → logprob: -4.3297224044799805
    5. 'steps' → logprob: -5.3297224044799805
    6. 'output' → logprob: -5.7047224044799805
    7. 'answer' → logprob: -5.8297224044799805
    8. 'sum' → logprob: -6.0797224044799805
    9. '_value' → logprob: -6.0797224044799805
    10. 'result' → logprob: -6.2047224044799805

Token 392: ' E' (ID: 457)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04125054553151131
    2. '=' → logprob: -3.416250467300415
    3. ' is' → logprob: -5.791250705718994
    4. '   ' → logprob: -6.291250705718994
    5. ' of' → logprob: -6.541250705718994
    6. ':' → logprob: -8.041250228881836
    7. ' ' → logprob: -8.166250228881836
    8. ' :' → logprob: -9.416250228881836
    9. '_' → logprob: -9.541250228881836
    10. '(' → logprob: -10.291250228881836

Token 393: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.052386216819286346
    2. '=' → logprob: -3.0523862838745117
    3. '_' → logprob: -5.927386283874512
    4. '[' → logprob: -7.677386283874512
    5. '   ' → logprob: -9.052386283874512
    6. '(' → logprob: -9.552386283874512
    7. ' ' → logprob: -9.927386283874512
    8. '_sum' → logprob: -10.052386283874512
    9. ' is' → logprob: -10.302386283874512
    10. ' of' → logprob: -10.427386283874512

Token 394: ' the' (ID: 290)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2939625382423401
    2. 'the' → logprob: -1.9189624786376953
    3. 'K' → logprob: -3.2939624786376953
    4. ' S' → logprob: -3.6689624786376953
    5. 'sum' → logprob: -3.7939624786376953
    6. ' the' → logprob: -4.418962478637695
    7. 'a' → logprob: -6.043962478637695
    8. ' K' → logprob: -6.168962478637695
    9. ' sum' → logprob: -6.168962478637695
    10. '(S' → logprob: -6.543962478637695

Token 395: ' first' (ID: 1577)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.08582612127065659
    2. ' sum' → logprob: -2.5858261585235596
    3. 'S' → logprob: -5.3358259201049805
    4. 'K' → logprob: -8.21082592010498
    5. 'number' → logprob: -8.46082592010498
    6. ' S' → logprob: -8.58582592010498
    7. 'mean' → logprob: -8.71082592010498
    8. 'expected' → logprob: -9.08582592010498
    9. 'average' → logprob: -9.21082592010498
    10. 's' → logprob: -9.33582592010498

Token 396: ' hitting' (ID: 34749)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.5653566122055054
    2. 'number' → logprob: -1.4403566122055054
    3. ' element' → logprob: -2.940356731414795
    4. ' K' → logprob: -3.065356731414795
    5. 'element' → logprob: -3.565356731414795
    6. 'K' → logprob: -4.065356731414795
    7. 'token' → logprob: -4.565356731414795
    8. ' token' → logprob: -5.065356731414795
    9. ' integer' → logprob: -6.065356731414795
    10. ' chosen' → logprob: -6.190356731414795

Token 397: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.7075079679489136
    2. 'time' → logprob: -0.7075079679489136
    3. 'sum' → logprob: -5.332508087158203
    4. ' sum' → logprob: -5.332508087158203
    5. '_time' → logprob: -6.457508087158203
    6. ' point' → logprob: -7.332508087158203
    7. 'value' → logprob: -7.332508087158203
    8. ' value' → logprob: -7.832508087158203
    9. ' step' → logprob: -8.207508087158203
    10. 'point' → logprob: -8.207508087158203

Token 398: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6680489182472229
    2. ' is' → logprob: -1.0430488586425781
    3. '=' → logprob: -3.293048858642578
    4. ' of' → logprob: -3.543048858642578
    5. ' for' → logprob: -3.543048858642578
    6. ' ' → logprob: -4.543048858642578
    7. '(' → logprob: -4.918048858642578
    8. '   ' → logprob: -5.543048858642578
    9. ' to' → logprob: -5.543048858642578
    10. ' (' → logprob: -5.668048858642578

Token 399: ' a' (ID: 261)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2101994752883911
    2. 'a' → logprob: -1.7101994752883911
    3. 'S' → logprob: -1.8351994752883911
    4. 'sum' → logprob: -2.0851993560791016
    5. ' a' → logprob: -2.7101993560791016
    6. ' S' → logprob: -2.7101993560791016
    7. ' the' → logprob: -2.7101993560791016
    8. ' sum' → logprob: -4.210199356079102
    9. 'return' → logprob: -5.585199356079102
    10. 'random' → logprob: -5.835199356079102

Token 400: ' random' (ID: 7526)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.4504204988479614
    2. 'simple' → logprob: -2.325420379638672
    3. 'sum' → logprob: -2.325420379638672
    4. ' random' → logprob: -2.825420379638672
    5. 's' → logprob: -3.325420379638672
    6. 'dis' → logprob: -4.575420379638672
    7. ' sum' → logprob: -4.700420379638672
    8. 'uniform' → logprob: -5.325420379638672
    9. 'biased' → logprob: -5.700420379638672
    10. ' simple' → logprob: -5.700420379638672

Token 401: ' walk' (ID: 5229)
  Prédit: ' walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' walk' → logprob: -0.20240424573421478
    2. ' variable' → logprob: -2.077404260635376
    3. 'walk' → logprob: -3.202404260635376
    4. 'variable' → logprob: -5.202404022216797
    5. '_walk' → logprob: -5.327404022216797
    6. '_' → logprob: -5.577404022216797
    7. ' walker' → logprob: -7.327404022216797
    8. ' number' → logprob: -7.577404022216797
    9. ' integer' → logprob: -8.077404022216797
    10. ' sum' → logprob: -8.077404022216797

Token 402: ' on' (ID: 402)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.14022117853164673
    2. ' to' → logprob: -3.515221118927002
    3. ' on' → logprob: -4.140221118927002
    4. ' =' → logprob: -4.390221118927002
    5. ' with' → logprob: -4.390221118927002
    6. ' starting' → logprob: -4.765221118927002
    7. ' ' → logprob: -5.265221118927002
    8. ' at' → logprob: -5.265221118927002
    9. ' of' → logprob: -5.265221118927002
    10. ' in' → logprob: -5.640221118927002

Token 403: ' a' (ID: 261)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9931188225746155
    2. 'inte' → logprob: -1.6181187629699707
    3. ' the' → logprob: -1.8681187629699707
    4. 'Z' → logprob: -2.4931187629699707
    5. ' integers' → logprob: -2.7431187629699707
    6. ' a' → logprob: -3.7431187629699707
    7. ' Z' → logprob: -3.8681187629699707
    8. 'a' → logprob: -3.9931187629699707
    9. ' an' → logprob: -4.118118762969971
    10. '{' → logprob: -4.493118762969971

Token 404: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.23569299280643463
    2. 'circle' → logprob: -1.8606929779052734
    3. 'number' → logprob: -3.3606929779052734
    4. ' line' → logprob: -4.985692977905273
    5. 'cycle' → logprob: -6.110692977905273
    6. 'complete' → logprob: -6.360692977905273
    7. 'finite' → logprob: -6.360692977905273
    8. ' circle' → logprob: -6.860692977905273
    9. '1' → logprob: -6.860692977905273
    10. 'segment' → logprob: -7.235692977905273

Token 405: ' with' (ID: 483)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2774830162525177
    2. ' with' → logprob: -2.4024829864501953
    3. ' starting' → logprob: -2.7774829864501953
    4. '   ' → logprob: -3.2774829864501953
    5. ' from' → logprob: -4.152482986450195
    6. ',' → logprob: -4.777482986450195
    7. ' to' → logprob: -5.402482986450195
    8. ' of' → logprob: -5.652482986450195
    9. ' =' → logprob: -6.152482986450195
    10. 'from' → logprob: -6.277482986450195

Token 406: ' positive' (ID: 8841)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -1.2326407432556152
    2. 'states' → logprob: -1.6076407432556152
    3. 'reflect' → logprob: -2.1076407432556152
    4. 'state' → logprob: -2.2326407432556152
    5. 'abs' → logprob: -2.7326407432556152
    6. 'step' → logprob: -2.9826407432556152
    7. 'equal' → logprob: -3.7326407432556152
    8. 'N' → logprob: -3.7326407432556152
    9. 'absor' → logprob: -4.232640743255615
    10. ' reflecting' → logprob: -4.357640743255615

Token 407: ' integer' (ID: 16336)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.36057695746421814
    2. 'steps' → logprob: -1.6105769872665405
    3. ' step' → logprob: -2.985576868057251
    4. ' integers' → logprob: -3.485576868057251
    5. 'step' → logprob: -5.23557710647583
    6. 'increments' → logprob: -5.73557710647583
    7. 'inte' → logprob: -5.86057710647583
    8. ' increments' → logprob: -5.98557710647583
    9. ' integer' → logprob: -6.11057710647583
    10. ' drift' → logprob: -6.36057710647583

Token 408: ' steps' (ID: 10331)
  Prédit: ' steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.24777278304100037
    2. 'steps' → logprob: -1.6227728128433228
    3. ' step' → logprob: -4.372772693634033
    4. ' increments' → logprob: -5.497772693634033
    5. 'step' → logprob: -5.747772693634033
    6. 'increments' → logprob: -6.497772693634033
    7. 'increment' → logprob: -9.747773170471191
    8. 'values' → logprob: -9.747773170471191
    9. ' ' → logprob: -9.872773170471191
    10. ' values' → logprob: -9.997773170471191

Token 409: ' and' (ID: 326)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.11857730150222778
    2. ' ' → logprob: -3.118577241897583
    3. '   ' → logprob: -3.618577241897583
    4. ' of' → logprob: -4.493577480316162
    5. ' =' → logprob: -4.993577480316162
    6. ',' → logprob: -5.118577480316162
    7. ' from' → logprob: -6.118577480316162
    8. '<|end|>' → logprob: -6.118577480316162
    9. '=' → logprob: -6.368577480316162
    10. ' with' → logprob: -6.618577480316162

Token 410: ' absorption' (ID: 57036)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.6243339776992798
    2. 'negative' → logprob: -2.1243338584899902
    3. 'values' → logprob: -2.3743338584899902
    4. 'steps' → logprob: -2.4993338584899902
    5. 'state' → logprob: -2.6243338584899902
    6. 'states' → logprob: -3.2493338584899902
    7. 'return' → logprob: -3.2493338584899902
    8. 'step' → logprob: -3.3743338584899902
    9. 'range' → logprob: -3.3743338584899902
    10. 'abs' → logprob: -3.4993338584899902

Token 411: ' at' (ID: 540)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.39480555057525635
    2. ' at' → logprob: -1.6448055505752563
    3. 'time' → logprob: -2.144805431365967
    4. ' times' → logprob: -5.019805431365967
    5. ' is' → logprob: -5.644805431365967
    6. 'at' → logprob: -6.144805431365967
    7. '_time' → logprob: -6.144805431365967
    8. ' point' → logprob: -7.894805431365967
    9. 'times' → logprob: -7.894805431365967
    10. 'point' → logprob: -8.769805908203125

Token 412: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3076670467853546
    2. 'S' → logprob: -1.8076670169830322
    3. 'K' → logprob: -3.4326670169830322
    4. ' S' → logprob: -3.9326670169830322
    5. ' ' → logprob: -4.307667255401611
    6. 'position' → logprob: -4.432667255401611
    7. 'N' → logprob: -4.807667255401611
    8. ' K' → logprob: -5.557667255401611
    9. '1' → logprob: -6.182667255401611
    10. ' position' → logprob: -6.307667255401611

Token 413: '0' (ID: 15)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5619685649871826
    2. '0' → logprob: -0.9369685649871826
    3. 'K' → logprob: -3.9369685649871826
    4. 'N' → logprob: -5.186968803405762
    5. 'position' → logprob: -5.561968803405762
    6. 'state' → logprob: -5.811968803405762
    7. ' S' → logprob: -6.311968803405762
    8. ' ' → logprob: -6.936968803405762
    9. 'point' → logprob: -7.061968803405762
    10. '1' → logprob: -7.811968803405762

Token 414: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08061154186725616
    2. ':' → logprob: -3.08061146736145
    3. '   ' → logprob: -3.70561146736145
    4. '.' → logprob: -6.330611705780029
    5. ')' → logprob: -7.080611705780029
    6. '
' → logprob: -7.330611705780029
    7. ',' → logprob: -7.455611705780029
    8. '<|end|>' → logprob: -7.455611705780029
    9. ':
' → logprob: -7.705611705780029
    10. ' ' → logprob: -7.830611705780029

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10446926206350327
    2. ' ' → logprob: -2.8544692993164062
    3. '    ' → logprob: -4.729469299316406
    4. ' 
' → logprob: -4.854469299316406
    5. '\n' → logprob: -4.979469299316406
    6. '    
' → logprob: -5.729469299316406
    7. '<|end|>' → logprob: -5.979469299316406
    8. ' \' → logprob: -6.229469299316406
    9. ' )' → logprob: -6.604469299316406
    10. ')' → logprob: -6.604469299316406

Token 416: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008638443425297737
    2. '    ' → logprob: -5.258638381958008
    3. ' steps' → logprob: -6.758638381958008
    4. ' ' → logprob: -8.008638381958008
    5. '    
' → logprob: -8.008638381958008
    6. '
' → logprob: -8.383638381958008
    7. '  ' → logprob: -8.633638381958008
    8. ' step' → logprob: -8.633638381958008
    9. ' ' → logprob: -9.133638381958008
    10. ' #' → logprob: -9.133638381958008

Token 417: ' From' (ID: 7217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043840184807777405
    2. '
' → logprob: -4.043840408325195
    3. '    ' → logprob: -5.043840408325195
    4. '    
' → logprob: -5.043840408325195
    5. ' return' → logprob: -5.918840408325195
    6. ' 
' → logprob: -6.418840408325195
    7. ' step' → logprob: -7.043840408325195
    8. ' steps' → logprob: -7.043840408325195
    9. ' #' → logprob: -7.418840408325195
    10. ' result' → logprob: -7.543840408325195

Token 418: ' position' (ID: 4010)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.29107949137687683
    2. ' here' → logprob: -2.041079521179199
    3. 'the' → logprob: -3.291079521179199
    4. 'math' → logprob: -3.541079521179199
    5. 'here' → logprob: -3.791079521179199
    6. ' the' → logprob: -4.416079521179199
    7. ' random' → logprob: -5.041079521179199
    8. 'collections' → logprob: -5.416079521179199
    9. ' collections' → logprob: -5.916079521179199
    10. 'random' → logprob: -6.041079521179199

Token 419: ' S' (ID: 336)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6426759362220764
    2. ' ' → logprob: -1.7676758766174316
    3. '   ' → logprob: -1.8926758766174316
    4. ' K' → logprob: -2.5176758766174316
    5. ' =' → logprob: -3.2676758766174316
    6. ' S' → logprob: -4.392675876617432
    7. '1' → logprob: -4.892675876617432
    8. '    ' → logprob: -5.642675876617432
    9. '=' → logprob: -5.892675876617432
    10. 'K' → logprob: -6.017675876617432

Token 420: ' >' (ID: 1424)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40326496958732605
    2. ':' → logprob: -1.6532649993896484
    3. ',' → logprob: -2.0282649993896484
    4. '
' → logprob: -6.528264999389648
    5. ' to' → logprob: -7.278264999389648
    6. ' -' → logprob: -7.403264999389648
    7. '#' → logprob: -7.528264999389648
    8. '.' → logprob: -7.653264999389648
    9. 'import' → logprob: -7.778264999389648
    10. ' and' → logprob: -7.778264999389648

Token 421: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01423520129173994
    2. ' ' → logprob: -4.889235019683838
    3. '=' → logprob: -5.139235019683838
    4. 'K' → logprob: -7.514235019683838
    5. ' K' → logprob: -8.889235496520996
    6. '1' → logprob: -10.264235496520996
    7. '   ' → logprob: -11.389235496520996
    8. ' =' → logprob: -11.764235496520996
    9. '
' → logprob: -13.764235496520996
    10. '  ' → logprob: -14.014235496520996

Token 422: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001146291324403137
    2. 'K' → logprob: -9.625114440917969
    3. ' ' → logprob: -10.000114440917969
    4. '1' → logprob: -14.000114440917969
    5. 'min' → logprob: -14.500114440917969
    6. 'N' → logprob: -15.125114440917969
    7. 'max' → logprob: -15.250114440917969
    8. ' K' → logprob: -15.500114440917969
    9. '
' → logprob: -15.500114440917969
    10. '   ' → logprob: -15.750114440917969

Token 423: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6571540236473083
    2. ',' → logprob: -0.9071540236473083
    3. ':' → logprob: -2.657154083251953
    4. '
' → logprob: -5.782154083251953
    5. ',
' → logprob: -6.157154083251953
    6. '.' → logprob: -6.907154083251953
    7. ':
' → logprob: -7.282154083251953
    8. ' and' → logprob: -8.157154083251953
    9. ' ,' → logprob: -8.907154083251953
    10. '    
' → logprob: -9.157154083251953

Token 424: ' E' (ID: 457)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23916789889335632
    2. ' steps' → logprob: -2.4891679286956787
    3. ' result' → logprob: -4.2391676902771
    4. ' current' → logprob: -4.2391676902771
    5. ' expected' → logprob: -4.3641676902771
    6. ' E' → logprob: -4.4891676902771
    7. ' dp' → logprob: -4.7391676902771
    8. ' step' → logprob: -4.8641676902771
    9. ' ans' → logprob: -4.8641676902771
    10. ' res' → logprob: -5.1141676902771

Token 425: ' satisfies' (ID: 126205)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07527592033147812
    2. '=' → logprob: -2.7002758979797363
    3. '   ' → logprob: -5.950275897979736
    4. '_' → logprob: -7.200275897979736
    5. '(S' → logprob: -7.200275897979736
    6. ' is' → logprob: -7.700275897979736
    7. '[' → logprob: -9.075276374816895
    8. 'def' → logprob: -9.450276374816895
    9. ' =
' → logprob: -9.575276374816895
    10. ',' → logprob: -9.575276374816895

Token 426: ' E' (ID: 457)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05762973427772522
    2. '
' → logprob: -3.5576298236846924
    3. 'E' → logprob: -4.932629585266113
    4. '```' → logprob: -5.432629585266113
    5. ' E' → logprob: -5.557629585266113
    6. '

' → logprob: -5.807629585266113
    7. '    
' → logprob: -5.932629585266113
    8. '\n' → logprob: -6.307629585266113
    9. '\' → logprob: -6.682629585266113
    10. ' the' → logprob: -7.307629585266113

Token 427: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.653030514717102
    2. '=' → logprob: -0.778030514717102
    3. '(S' → logprob: -4.0280303955078125
    4. '   ' → logprob: -7.0280303955078125
    5. '(' → logprob: -7.2780303955078125
    6. '```' → logprob: -7.9030303955078125
    7. ' +=' → logprob: -8.653030395507812
    8. '()' → logprob: -9.278030395507812
    9. '+=' → logprob: -9.653030395507812
    10. '[' → logprob: -10.403030395507812

Token 428: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01618475280702114
    2. ' ' → logprob: -4.5161848068237305
    3. '(' → logprob: -6.3911848068237305
    4. '(S' → logprob: -6.5161848068237305
    5. ' (' → logprob: -7.0161848068237305
    6. '0' → logprob: -7.6411848068237305
    7. 'S' → logprob: -8.14118480682373
    8. 'sum' → logprob: -10.01618480682373
    9. '(K' → logprob: -10.01618480682373
    10. ' S' → logprob: -10.76618480682373

Token 429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014557128306478262
    2. '(' → logprob: -7.126455783843994
    3. '0' → logprob: -7.876455783843994
    4. '(S' → logprob: -8.751455307006836
    5. 'S' → logprob: -10.251455307006836
    6. ' ' → logprob: -11.001455307006836
    7. 'min' → logprob: -11.126455307006836
    8. '
' → logprob: -11.626455307006836
    9. 'sum' → logprob: -12.126455307006836
    10. 'math' → logprob: -12.251455307006836

Token 430: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16023702919483185
    2. '+' → logprob: -1.9102370738983154
    3. '*' → logprob: -11.910237312316895
    4. ' +
' → logprob: -12.785237312316895
    5. '+
' → logprob: -14.035237312316895
    6. ' *' → logprob: -14.410237312316895
    7. '
' → logprob: -14.535237312316895
    8. ' ' → logprob: -15.035237312316895
    9. '-' → logprob: -15.660237312316895
    10. '   ' → logprob: -15.785237312316895

Token 431: ' sum' (ID: 4215)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5903767347335815
    2. 'sum' → logprob: -1.2153767347335815
    3. '(S' → logprob: -2.590376853942871
    4. 'min' → logprob: -3.965376853942871
    5. '(sum' → logprob: -4.215376853942871
    6. '0' → logprob: -4.715376853942871
    7. '((' → logprob: -4.965376853942871
    8. '(N' → logprob: -5.090376853942871
    9. ' (' → logprob: -5.215376853942871
    10. '\' → logprob: -5.340376853942871

Token 432: ' P' (ID: 398)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.852832555770874
    2. '_' → logprob: -1.727832555770874
    3. '_{' → logprob: -2.227832555770874
    4. '(p' → logprob: -2.727832555770874
    5. '[' → logprob: -3.102832555770874
    6. '((' → logprob: -3.227832555770874
    7. 'for' → logprob: -3.727832555770874
    8. '([' → logprob: -3.977832555770874
    9. '(i' → logprob: -4.102832794189453
    10. '(E' → logprob: -4.227832794189453

Token 433: '(x' (ID: 4061)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.40511247515678406
    2. '[i' → logprob: -1.1551125049591064
    3. '(' → logprob: -4.905112266540527
    4. '[' → logprob: -5.780112266540527
    5. 'i' → logprob: -6.030112266540527
    6. '(step' → logprob: -6.655112266540527
    7. '   ' → logprob: -6.780112266540527
    8. '(s' → logprob: -7.030112266540527
    9. '_i' → logprob: -7.530112266540527
    10. ' =' → logprob: -8.530112266540527

Token 434: ')' (ID: 8)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3891334533691406
    2. '(i' → logprob: -2.1391334533691406
    3. ')' → logprob: -2.3891334533691406
    4. '=' → logprob: -2.5141334533691406
    5. 'i' → logprob: -4.139133453369141
    6. '_i' → logprob: -5.264133453369141
    7. '(x' → logprob: -6.014133453369141
    8. '[' → logprob: -6.264133453369141
    9. '[x' → logprob: -6.639133453369141
    10. '=i' → logprob: -6.639133453369141

Token 435: ' E' (ID: 457)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7369329333305359
    2. '[i' → logprob: -1.6119329929351807
    3. '(i' → logprob: -2.2369329929351807
    4. '[' → logprob: -3.1119329929351807
    5. '[x' → logprob: -3.1119329929351807
    6. '*' → logprob: -3.2369329929351807
    7. ' *' → logprob: -4.611932754516602
    8. '(s' → logprob: -4.611932754516602
    9. 'x' → logprob: -4.861932754516602
    10. '_' → logprob: -4.861932754516602

Token 436: '(S' (ID: 6181)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.33071789145469666
    2. '(' → logprob: -1.830717921257019
    3. '(i' → logprob: -2.5807178020477295
    4. '(S' → logprob: -3.7057178020477295
    5. 'x' → logprob: -5.580718040466309
    6. '(
' → logprob: -5.705718040466309
    7. '(next' → logprob: -6.205718040466309
    8. 'i' → logprob: -6.455718040466309
    9. '[i' → logprob: -6.705718040466309
    10. '(y' → logprob: -6.955718040466309

Token 437: '-x' (ID: 12651)
  Prédit: '-x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.17249207198619843
    2. '-' → logprob: -2.547492027282715
    3. ' -' → logprob: -2.547492027282715
    4. '-i' → logprob: -7.047492027282715
    5. '+x' → logprob: -8.172492027282715
    6. 'x' → logprob: -8.297492027282715
    7. '-k' → logprob: -9.297492027282715
    8. '+' → logprob: -9.547492027282715
    9. '-t' → logprob: -9.797492027282715
    10. '-s' → logprob: -10.297492027282715

Token 438: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005685218493454158
    2. ')
' → logprob: -8.500568389892578
    3. '   ' → logprob: -9.125568389892578
    4. '),' → logprob: -9.500568389892578
    5. ')`' → logprob: -10.125568389892578
    6. 'for' → logprob: -10.500568389892578
    7. 's' → logprob: -10.625568389892578
    8. ' )' → logprob: -11.000568389892578
    9. 'x' → logprob: -11.500568389892578
    10. '       ' → logprob: -11.625568389892578

Token 439: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00713576702401042
    2. '
' → logprob: -5.88213586807251
    3. ')' → logprob: -6.00713586807251
    4. '<|end|>' → logprob: -7.63213586807251
    5. ',' → logprob: -8.257135391235352
    6. '    
' → logprob: -8.757135391235352
    7. '.' → logprob: -9.257135391235352
    8. '[' → logprob: -9.382135391235352
    9. ')
' → logprob: -9.632135391235352
    10. '       ' → logprob: -9.632135391235352

Token 440: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05593365803360939
    2. '<|end|>' → logprob: -3.680933713912964
    3. '
' → logprob: -3.805933713912964
    4. '#' (adapté à ' #') → logprob: -6.305933475494385
    5. ',' → logprob: -6.430933475494385
    6. ')' → logprob: -6.680933475494385
    7. '<|end|>' → logprob: -7.555933475494385
    8. '    
' → logprob: -8.180933952331543
    9. '.' → logprob: -8.305933952331543
    10. '```' → logprob: -8.805933952331543

Token 441: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024483040906488895
    2. '    ' → logprob: -7.127448081970215
    3. ')' → logprob: -7.752448081970215
    4. '    
' → logprob: -7.752448081970215
    5. '#' → logprob: -8.127448081970215
    6. '
' → logprob: -8.752448081970215
    7. 'x' → logprob: -10.002448081970215
    8. 'def' → logprob: -10.502448081970215
    9. ' 
' → logprob: -10.627448081970215
    10. '       ' → logprob: -10.752448081970215

Token 442: ' E' (ID: 457)
  Prédit: ' E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -1.0040751695632935
    2. 'E' → logprob: -1.1290751695632935
    3. ' S' → logprob: -3.004075050354004
    4. ' boundary' → logprob: -3.004075050354004
    5. 'abs' → logprob: -3.004075050354004
    6. 'out' → logprob: -3.254075050354004
    7. 'S' → logprob: -3.379075050354004
    8. '
' → logprob: -4.004075050354004
    9. 'boundary' → logprob: -4.129075050354004
    10. ' the' → logprob: -4.504075050354004

Token 443: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4067014455795288
    2. ' =' → logprob: -1.7817014455795288
    3. '=' → logprob: -2.0317015647888184
    4. '[' → logprob: -4.281701564788818
    5. '(S' → logprob: -4.406701564788818
    6. '0' → logprob: -4.906701564788818
    7. '(s' → logprob: -7.156701564788818
    8. '[S' → logprob: -8.90670108795166
    9. ' ' → logprob: -9.90670108795166
    10. '(x' → logprob: -10.28170108795166

Token 444: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03383680060505867
    2. 'S' → logprob: -3.658836841583252
    3. 'x' → logprob: -5.033836841583252
    4. ')' → logprob: -7.908836841583252
    5. 's' → logprob: -8.033836364746094
    6. ' ' → logprob: -9.033836364746094
    7. '=' → logprob: -10.033836364746094
    8. 'i' → logprob: -10.533836364746094
    9. ' S' → logprob: -10.533836364746094
    10. '1' → logprob: -11.533836364746094

Token 445: ')=' (ID: 25987)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024037064576987177
    2. ')=' → logprob: -8.500240325927734
    3. '   ' → logprob: -11.375240325927734
    4. '=' → logprob: -11.625240325927734
    5. ')
' → logprob: -11.625240325927734
    6. '`)' → logprob: -13.125240325927734
    7. ' =' → logprob: -13.625240325927734
    8. ' )' → logprob: -13.750240325927734
    9. ')==' → logprob: -14.000240325927734
    10. '')' → logprob: -14.250240325927734

Token 446: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.62520408630371
    4. ' ' → logprob: -17.12520408630371
    5. '  ' → logprob: -18.50020408630371
    6. '
' → logprob: -18.75020408630371
    7. '1' → logprob: -19.25020408630371
    8. '	' → logprob: -19.75020408630371
    9. '۰' → logprob: -19.87520408630371
    10. '```' → logprob: -20.00020408630371

Token 447: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6137733459472656
    2. '
' → logprob: -0.9887733459472656
    3. '<|end|>' → logprob: -3.4887733459472656
    4. ':' → logprob: -3.9887733459472656
    5. ')' → logprob: -4.238773345947266
    6. '\n' → logprob: -5.613773345947266
    7. '```' → logprob: -5.738773345947266
    8. '    
' → logprob: -5.863773345947266
    9. ',' → logprob: -5.863773345947266
    10. '<|end|>' → logprob: -5.863773345947266

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15328873693943024
    2. '
' → logprob: -2.0282888412475586
    3. '    
' → logprob: -4.903288841247559
    4. 'import' → logprob: -6.778288841247559
    5. 'def' → logprob: -7.653288841247559
    6. '<|end|>' → logprob: -7.653288841247559
    7. '```' → logprob: -8.403288841247559
    8. 'from' → logprob: -8.528288841247559
    9. '#' → logprob: -9.153288841247559
    10. '    ' → logprob: -10.028288841247559

Token 449: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18516169488430023
    2. 'dp' → logprob: -1.9351617097854614
    3. 'E' → logprob: -4.310161590576172
    4. 'def' → logprob: -5.935161590576172
    5. 'DP' → logprob: -6.185161590576172
    6. ' dp' → logprob: -6.310161590576172
    7. '
' → logprob: -7.185161590576172
    8. '    
' → logprob: -7.310161590576172
    9. ' E' → logprob: -7.560161590576172
    10. 'from' → logprob: -7.685161590576172

Token 450: ' Since' (ID: 12265)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07998380810022354
    2. ' dp' → logprob: -3.204983711242676
    3. '#' → logprob: -4.579983711242676
    4. '   ' → logprob: -4.954983711242676
    5. 'steps' → logprob: -4.954983711242676
    6. 'step' → logprob: -6.204983711242676
    7. ' steps' → logprob: -6.329983711242676
    8. 'DP' → logprob: -6.579983711242676
    9. 'def' → logprob: -6.829983711242676
    10. 'max' → logprob: -7.079983711242676

Token 451: ' the' (ID: 290)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.1338258981704712
    2. 'S' → logprob: -2.0088257789611816
    3. 'K' → logprob: -2.1338257789611816
    4. ' N' → logprob: -2.1338257789611816
    5. ' K' → logprob: -2.3838257789611816
    6. ' S' → logprob: -2.3838257789611816
    7. ' steps' → logprob: -2.8838257789611816
    8. 'the' → logprob: -4.008825778961182
    9. 'steps' → logprob: -4.508825778961182
    10. ' the' → logprob: -4.508825778961182

Token 452: ' increments' (ID: 124105)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.10471664369106293
    2. ' code' → logprob: -2.9797165393829346
    3. ' problem' → logprob: -4.604716777801514
    4. ' S' → logprob: -5.104716777801514
    5. 'steps' → logprob: -5.354716777801514
    6. ' next' → logprob: -5.729716777801514
    7. ' range' → logprob: -5.729716777801514
    8. ' K' → logprob: -5.729716777801514
    9. ' random' → logprob: -5.979716777801514
    10. ' step' → logprob: -6.104716777801514

Token 453: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.0008232106338255107
    2. '<|end|>' → logprob: -8.375823020935059
    3. ' have' → logprob: -8.625823020935059
    4. ' =' → logprob: -8.750823020935059
    5. ' can' → logprob: -9.750823020935059
    6. 'are' → logprob: -9.750823020935059
    7. ' is' → logprob: -10.500823020935059
    8. ' ' → logprob: -10.875823020935059
    9. ' continue' → logprob: -11.000823020935059
    10. ' were' → logprob: -11.125823020935059

Token 454: ' always' (ID: 3324)
  Prédit: 'uniform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uniform' → logprob: -0.5998876094818115
    2. 'from' → logprob: -1.2248876094818115
    3. 'inte' → logprob: -2.7248876094818115
    4. '1' → logprob: -2.7248876094818115
    5. 'in' → logprob: -4.474887847900391
    6. ' integers' → logprob: -5.474887847900391
    7. 'positive' → logprob: -6.099887847900391
    8. ' from' → logprob: -6.224887847900391
    9. 'integer' → logprob: -6.599887847900391
    10. ' uniform' → logprob: -6.974887847900391

Token 455: ' positive' (ID: 8841)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5999053716659546
    2. 'positive' → logprob: -1.3499053716659546
    3. 'in' → logprob: -2.224905490875244
    4. 'inte' → logprob: -4.099905490875244
    5. 'between' → logprob: -4.099905490875244
    6. ' from' → logprob: -4.099905490875244
    7. ' in' → logprob: -4.349905490875244
    8. ' positive' → logprob: -4.974905490875244
    9. ' integers' → logprob: -5.224905490875244
    10. ' between' → logprob: -5.599905490875244

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.310576856136322
    2. ' integers' → logprob: -1.9355769157409668
    3. ' and' → logprob: -3.060576915740967
    4. '   ' → logprob: -3.560576915740967
    5. ' ,' → logprob: -3.935576915740967
    6. ' steps' → logprob: -4.435576915740967
    7. '<|end|>' → logprob: -5.185576915740967
    8. ',
' → logprob: -6.060576915740967
    9. 'inte' → logprob: -6.560576915740967
    10. 'and' → logprob: -6.685576915740967

Token 457: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06504689157009125
    2. ' the' → logprob: -3.940046787261963
    3. '#' → logprob: -4.565046787261963
    4. ' E' → logprob: -5.065046787261963
    5. ' if' → logprob: -5.190046787261963
    6. 'E' → logprob: -5.190046787261963
    7. ' we' → logprob: -6.440046787261963
    8. ' return' → logprob: -6.440046787261963
    9. 'the' → logprob: -6.440046787261963
    10. ' there' → logprob: -6.815046787261963

Token 458: ' random' (ID: 7526)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.1054208278656006
    2. ' steps' → logprob: -1.6054208278656006
    3. 'def' → logprob: -3.2304208278656006
    4. ' problem' → logprob: -3.3554208278656006
    5. 'steps' → logprob: -3.3554208278656006
    6. ' process' → logprob: -3.4804208278656006
    7. 'expected' → logprob: -3.4804208278656006
    8. ' E' → logprob: -3.7304208278656006
    9. ' expected' → logprob: -3.8554208278656006
    10. 'E' → logprob: -3.8554208278656006

Token 459: ' walk' (ID: 5229)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9104845523834229
    2. ' walk' → logprob: -1.0354845523834229
    3. '_walk' → logprob: -1.6604845523834229
    4. ' _' → logprob: -3.910484552383423
    5. ' ' → logprob: -4.785484313964844
    6. ')' → logprob: -4.910484313964844
    7. ' )' → logprob: -5.285484313964844
    8. 'walk' → logprob: -5.785484313964844
    9. ' ' → logprob: -6.410484313964844
    10. '   ' → logprob: -6.910484313964844

Token 460: ' decreases' (ID: 70943)
  Prédit: ' cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cannot' → logprob: -1.0915793180465698
    2. ' continues' → logprob: -2.0915794372558594
    3. ' can' → logprob: -2.5915794372558594
    4. ' always' → logprob: -2.8415794372558594
    5. ' stops' → logprob: -2.8415794372558594
    6. 'cannot' → logprob: -2.9665794372558594
    7. ' steps' → logprob: -3.0915794372558594
    8. ' is' → logprob: -3.2165794372558594
    9. ' will' → logprob: -3.3415794372558594
    10. ' moves' → logprob: -3.3415794372558594

Token 461: ' position' (ID: 4010)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.14897415041923523
    2. ' the' → logprob: -2.7739741802215576
    3. ' at' → logprob: -3.6489741802215576
    4. ' S' → logprob: -4.1489739418029785
    5. 'by' → logprob: -4.8989739418029785
    6. ' one' → logprob: -5.0239739418029785
    7. '<|end|>' → logprob: -5.0239739418029785
    8. ' step' → logprob: -5.5239739418029785
    9. ' from' → logprob: -6.5239739418029785
    10. ' position' → logprob: -6.8989739418029785

Token 462: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.004178833216428757
    2. 'by' → logprob: -5.629179000854492
    3. '   ' → logprob: -7.629179000854492
    4. ',' → logprob: -10.754179000854492
    5. ' ' → logprob: -11.754179000854492
    6. ')' → logprob: -11.754179000854492
    7. ' only' → logprob: -11.879179000854492
    8. ' until' → logprob: -11.879179000854492
    9. ' at' → logprob: -12.004179000854492
    10. ' step' → logprob: -12.629179000854492

Token 463: ' a' (ID: 261)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6845848560333252
    2. 'steps' → logprob: -1.6845848560333252
    3. ' steps' → logprob: -1.6845848560333252
    4. 'x' → logprob: -1.9345848560333252
    5. ' one' → logprob: -2.684584856033325
    6. 'one' → logprob: -2.934584856033325
    7. 'a' → logprob: -3.684584856033325
    8. ' ' → logprob: -3.684584856033325
    9. ' a' → logprob: -3.809584856033325
    10. ' x' → logprob: -3.809584856033325

Token 464: ' random' (ID: 7526)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -1.2576862573623657
    2. '1' → logprob: -1.6326862573623657
    3. 'step' → logprob: -1.8826862573623657
    4. ' steps' → logprob: -2.757686138153076
    5. ' value' → logprob: -3.007686138153076
    6. 'random' → logprob: -3.132686138153076
    7. ' random' → logprob: -3.507686138153076
    8. ' ' → logprob: -3.632686138153076
    9. ' positive' → logprob: -3.757686138153076
    10. 'value' → logprob: -3.882686138153076

Token 465: ' amount' (ID: 4527)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.12830756604671478
    2. ' integer' → logprob: -2.753307580947876
    3. ' number' → logprob: -4.253307342529297
    4. 'step' → logprob: -4.503307342529297
    5. ' amount' → logprob: -4.878307342529297
    6. ' positive' → logprob: -5.003307342529297
    7. ' value' → logprob: -5.128307342529297
    8. ' x' → logprob: -5.253307342529297
    9. ' ' → logprob: -6.628307342529297
    10. 'integer' → logprob: -7.003307342529297

Token 466: ' between' (ID: 2870)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8890878558158875
    2. ' of' → logprob: -1.3890879154205322
    3. '   ' → logprob: -2.1390879154205322
    4. '.' → logprob: -2.7640879154205322
    5. ' at' → logprob: -2.8890879154205322
    6. ' from' → logprob: -3.2640879154205322
    7. ' ' → logprob: -4.264087677001953
    8. ' ,' → logprob: -4.514087677001953
    9. 'from' → logprob: -5.389087677001953
    10. '=' → logprob: -5.639087677001953

Token 467: ' K' (ID: 658)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010337610729038715
    2. ' ' → logprob: -6.876033782958984
    3. '`' → logprob: -14.751033782958984
    4. '```' → logprob: -15.376033782958984
    5. '   ' → logprob: -15.501033782958984
    6. '0' → logprob: -17.126033782958984
    7. '
' → logprob: -17.376033782958984
    8. '    ' → logprob: -17.876033782958984
    9. ' ' → logprob: -18.126033782958984
    10. '<|end|>' → logprob: -18.251033782958984

Token 468: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6367039680480957
    2. 'and' → logprob: -0.7617039680480957
    3. ' ' → logprob: -6.761703968048096
    4. '1' → logprob: -7.011703968048096
    5. ',' → logprob: -7.136703968048096
    6. '+' → logprob: -7.511703968048096
    7. '   ' → logprob: -8.261703491210938
    8. '
' → logprob: -9.386703491210938
    9. '```' → logprob: -9.886703491210938
    10. '	and' → logprob: -10.011703491210938

Token 469: ' K' (ID: 658)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019751458894461393
    2. ' N' → logprob: -6.501975059509277
    3. 'K' → logprob: -7.876975059509277
    4. '1' → logprob: -9.376975059509277
    5. ' ' → logprob: -12.751975059509277
    6. ' K' → logprob: -14.126975059509277
    7. '
' → logprob: -14.251975059509277
    8. '	N' → logprob: -14.251975059509277
    9. 'NK' → logprob: -14.376975059509277
    10. '```' → logprob: -14.626975059509277

Token 470: '*N' (ID: 107360)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0325247086584568
    2. '*N' → logprob: -4.032524585723877
    3. '1' → logprob: -4.407524585723877
    4. '*' → logprob: -7.032524585723877
    5. ' N' → logprob: -7.782524585723877
    6. '
' → logprob: -8.032525062561035
    7. ' ' → logprob: -8.907525062561035
    8. '	N' → logprob: -9.157525062561035
    9. '   ' → logprob: -10.407525062561035
    10. '```' → logprob: -10.532525062561035

Token 471: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6747081279754639
    2. '   ' → logprob: -1.1747081279754639
    3. ',' → logprob: -2.674708127975464
    4. '.' → logprob: -3.424708127975464
    5. '
' → logprob: -3.799708127975464
    6. ')' → logprob: -4.549708366394043
    7. '<|end|>' → logprob: -4.674708366394043
    8. ':
' → logprob: -4.924708366394043
    9. '```' → logprob: -4.924708366394043
    10. ',
' → logprob: -6.299708366394043

Token 472: 'position' (ID: 4504)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10012287646532059
    2. '),' → logprob: -2.9751229286193848
    3. ').' → logprob: -3.9751229286193848
    4. ' )' → logprob: -5.350122928619385
    5. '1' → logprob: -5.600122928619385
    6. '+' → logprob: -5.600122928619385
    7. ')
' → logprob: -5.850122928619385
    8. ',' → logprob: -5.850122928619385
    9. ')...' → logprob: -7.100122928619385
    10. ' ' → logprob: -7.475122928619385

Token 473: ' moves' (ID: 19523)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5400807857513428
    2. '-' → logprob: -1.1650807857513428
    3. '   ' → logprob: -2.9150807857513428
    4. ')' → logprob: -4.290081024169922
    5. ' -=' → logprob: -4.665081024169922
    6. '+' → logprob: -5.040081024169922
    7. '),' → logprob: -5.665081024169922
    8. ' ' → logprob: -6.040081024169922
    9. ' is' → logprob: -6.415081024169922
    10. ',' → logprob: -6.665081024169922

Token 474: ' S' (ID: 336)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.6284750699996948
    2. ' by' → logprob: -1.7534750699996948
    3. ' -' → logprob: -2.0034751892089844
    4. 'down' → logprob: -2.0034751892089844
    5. '   ' → logprob: -2.2534751892089844
    6. ' backward' → logprob: -2.6284751892089844
    7. ' down' → logprob: -3.0034751892089844
    8. ' backwards' → logprob: -3.7534751892089844
    9. ' -=' → logprob: -4.003475189208984
    10. ' forward' → logprob: -4.003475189208984

Token 475: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2262549251317978
    2. '-' → logprob: -1.601254940032959
    3. '   ' → logprob: -7.851254940032959
    4. ')' → logprob: -9.1012544631958
    5. ' -=' → logprob: -9.3512544631958
    6. '-)' → logprob: -9.4762544631958
    7. ' ' → logprob: -9.8512544631958
    8. ',' → logprob: -9.9762544631958
    9. ' )' → logprob: -11.6012544631958
    10. '),' → logprob: -12.1012544631958

Token 476: ' sum' (ID: 4215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25475746393203735
    2. ' x' → logprob: -1.6297574043273926
    3. '1' → logprob: -4.379757404327393
    4. 'i' → logprob: -5.504757404327393
    5. 'step' → logprob: -5.504757404327393
    6. 's' → logprob: -6.754757404327393
    7. 'steps' → logprob: -6.879757404327393
    8. ' step' → logprob: -7.004757404327393
    9. ' i' → logprob: -7.004757404327393
    10. ' ' → logprob: -7.504757404327393

Token 477: '_of' (ID: 8023)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.4708753526210785
    2. ' of' → logprob: -1.2208753824234009
    3. 'from' → logprob: -3.5958752632141113
    4. '   ' → logprob: -4.470875263214111
    5. '(range' → logprob: -4.720875263214111
    6. 'x' → logprob: -5.220875263214111
    7. ')' → logprob: -5.345875263214111
    8. 'range' → logprob: -5.595875263214111
    9. '_' → logprob: -6.220875263214111
    10. '_of' → logprob: -6.345875263214111

Token 478: '_steps' (ID: 52120)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.8920090198516846
    2. 'x' → logprob: -1.1420090198516846
    3. 'increments' → logprob: -2.5170090198516846
    4. 'i' → logprob: -3.6420090198516846
    5. 'numbers' → logprob: -3.7670090198516846
    6. 'k' → logprob: -4.0170087814331055
    7. 'tokens' → logprob: -4.0170087814331055
    8. 'K' → logprob: -4.2670087814331055
    9. 'step' → logprob: -4.5170087814331055
    10. ' steps' → logprob: -4.6420087814331055

Token 479: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06613439321517944
    2. 's' → logprob: -3.566134452819824
    3. '),' → logprob: -3.941134452819824
    4. ').' → logprob: -5.441134452819824
    5. ' )' → logprob: -5.816134452819824
    6. ')
' → logprob: -6.191134452819824
    7. 'from' → logprob: -6.566134452819824
    8. '   ' → logprob: -6.691134452819824
    9. '))' → logprob: -7.816134452819824
    10. ' +' → logprob: -8.066134452819824

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023377550765872
    2. '
' → logprob: -4.773377418518066
    3. ')' → logprob: -4.898377418518066
    4. '```' → logprob: -6.273377418518066
    5. '<|end|>' → logprob: -6.648377418518066
    6. '    
' → logprob: -6.898377418518066
    7. ',' → logprob: -7.023377418518066
    8. '#' → logprob: -8.273377418518066
    9. '.' → logprob: -8.398377418518066
    10. '<|end|>' → logprob: -8.773377418518066

Token 481: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004610980395227671
    2. '
' → logprob: -6.504611015319824
    3. '    ' → logprob: -6.754611015319824
    4. '    
' → logprob: -7.379611015319824
    5. '#' (adapté à ' #') → logprob: -8.254611015319824
    6. 'x' → logprob: -9.129611015319824
    7. ' steps' → logprob: -9.379611015319824
    8. ')' → logprob: -9.754611015319824
    9. 'def' → logprob: -9.754611015319824
    10. ' step' → logprob: -9.879611015319824

Token 482: ' Wait' (ID: 24305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3069666922092438
    2. '   ' → logprob: -1.6819666624069214
    3. 'steps' → logprob: -3.556966781616211
    4. ' dp' → logprob: -3.556966781616211
    5. ' steps' → logprob: -5.306966781616211
    6. 'max' → logprob: -5.556966781616211
    7. 'step' → logprob: -5.931966781616211
    8. 'def' → logprob: -6.306966781616211
    9. 'pos' → logprob: -6.556966781616211
    10. ' max' → logprob: -6.681966781616211

Token 483: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0671977624297142
    2. '...' → logprob: -3.067197799682617
    3. '_' → logprob: -5.567197799682617
    4. 'def' → logprob: -5.817197799682617
    5. '```' → logprob: -5.817197799682617
    6. '#' → logprob: -6.567197799682617
    7. ')' → logprob: -6.942197799682617
    8. '    ' → logprob: -7.067197799682617
    9. ':' → logprob: -7.067197799682617
    10. ',' → logprob: -7.192197799682617

Token 484: ' in' (ID: 306)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.251495897769928
    2. '   ' → logprob: -2.251495838165283
    3. '    ' → logprob: -2.376495838165283
    4. ' 
' → logprob: -4.876495838165283
    5. '    
' → logprob: -6.001495838165283
    6. '<|end|>' → logprob: -6.001495838165283
    7. ' I' → logprob: -6.626495838165283
    8. '<|end|>' → logprob: -6.751495838165283
    9. ' #' → logprob: -6.876495838165283
    10. '#' → logprob: -7.126495838165283

Token 485: ' the' (ID: 290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6094033122062683
    2. 'the' → logprob: -1.984403371810913
    3. ' the' → logprob: -2.734403371810913
    4. '#' → logprob: -3.359403371810913
    5. '[' → logprob: -3.484403371810913
    6. 'range' → logprob: -3.609403371810913
    7. ' range' → logprob: -3.859403371810913
    8. 'import' → logprob: -4.109403133392334
    9. '```' → logprob: -4.234403133392334
    10. '    ' → logprob: -4.359403133392334

Token 486: ' problem' (ID: 4792)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -1.579630732536316
    2. 'code' → logprob: -1.704630732536316
    3. 'main' → logprob: -2.2046308517456055
    4. 'next' → logprob: -2.4546308517456055
    5. ' code' → logprob: -2.8296308517456055
    6. 'if' → logprob: -3.0796308517456055
    7. '#' → logprob: -3.2046308517456055
    8. ' next' → logprob: -3.4546308517456055
    9. 'problem' → logprob: -3.5796308517456055
    10. 'line' → logprob: -3.5796308517456055

Token 487: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08570216596126556
    2. '<|end|>' → logprob: -3.2107021808624268
    3. ',' → logprob: -3.9607021808624268
    4. '<|end|>' → logprob: -4.585701942443848
    5. '#' → logprob: -6.210701942443848
    6. ':
' → logprob: -6.210701942443848
    7. 'def' → logprob: -6.335701942443848
    8. '.' → logprob: -6.585701942443848
    9. ')' → logprob: -6.585701942443848
    10. '=' → logprob: -7.085701942443848

Token 488: ' the' (ID: 290)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: ' jump' (ID: 13843)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.6815000772476196
    2. ' code' → logprob: -2.05649995803833
    3. '#' → logprob: -2.43149995803833
    4. ' problem' → logprob: -2.55649995803833
    5. ' next' → logprob: -2.80649995803833
    6. 'user' → logprob: -3.05649995803833
    7. 'random' → logprob: -3.30649995803833
    8. 'problem' → logprob: -3.30649995803833
    9. 'code' → logprob: -3.43149995803833
    10. 'input' → logprob: -3.43149995803833

Token 490: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28104251623153687
    2. '_' → logprob: -1.6560425758361816
    3. '_size' → logprob: -3.7810425758361816
    4. ' is' → logprob: -5.156042575836182
    5. '_s' → logprob: -5.281042575836182
    6. 'size' → logprob: -6.031042575836182
    7. '<|end|>' → logprob: -6.156042575836182
    8. '_length' → logprob: -6.656042575836182
    9. ')' → logprob: -6.906042575836182
    10. 'es' → logprob: -7.031042575836182

Token 491: ' from' (ID: 591)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9057568311691284
    2. ' always' → logprob: -2.155756950378418
    3. ' from' → logprob: -2.530756950378418
    4. ' of' → logprob: -2.780756950378418
    5. 'from' → logprob: -3.155756950378418
    6. ' not' → logprob: -3.280756950378418
    7. ' random' → logprob: -3.280756950378418
    8. ' ' → logprob: -3.780756950378418
    9. ' to' → logprob: -4.280756950378418
    10. ' S' → logprob: -4.405756950378418

Token 492: ' current' (ID: 2208)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.83217853307724
    2. ' S' → logprob: -0.95717853307724
    3. ' position' → logprob: -2.7071785926818848
    4. 'position' → logprob: -3.0821785926818848
    5. ' ' → logprob: -3.9571785926818848
    6. ' current' → logprob: -4.457178592681885
    7. '1' → logprob: -4.582178592681885
    8. 'current' → logprob: -4.832178592681885
    9. '0' → logprob: -5.207178592681885
    10. 'state' → logprob: -5.582178592681885

Token 493: ' position' (ID: 4010)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37567204236984253
    2. '_position' → logprob: -1.7506721019744873
    3. ' position' → logprob: -2.7506721019744873
    4. ' _' → logprob: -3.2506721019744873
    5. '_pos' → logprob: -4.250671863555908
    6. 'position' → logprob: -4.625671863555908
    7. '_token' → logprob: -5.125671863555908
    8. ' =' → logprob: -5.875671863555908
    9. 'pos' → logprob: -6.875671863555908
    10. ')' → logprob: -7.625671863555908

Token 494: ' towards' (ID: 9979)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6730257868766785
    2. ' ' → logprob: -1.2980258464813232
    3. '<|end|>' → logprob: -2.5480258464813232
    4. ',' → logprob: -2.9230258464813232
    5. ' -' → logprob: -4.173025608062744
    6. ' by' → logprob: -4.798025608062744
    7. ')' → logprob: -5.173025608062744
    8. ' ,' → logprob: -5.173025608062744
    9. '_' → logprob: -5.423025608062744
    10. 'to' → logprob: -5.548025608062744

Token 495: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014840601943433285
    2. 'zero' → logprob: -4.639840602874756
    3. ' zero' → logprob: -6.264840602874756
    4. ' ' → logprob: -6.639840602874756
    5. 'S' → logprob: -6.889840602874756
    6. ' S' → logprob: -8.639840126037598
    7. 'the' → logprob: -8.764840126037598
    8. 'right' → logprob: -9.514840126037598
    9. 'down' → logprob: -9.764840126037598
    10. '1' → logprob: -9.764840126037598

Token 496: ' witch' (ID: 69315)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014726996421814
    2. 'right' → logprob: -2.451472759246826
    3. ' right' → logprob: -3.701472759246826
    4. ' ' → logprob: -3.826472759246826
    5. 'left' → logprob: -4.451472759246826
    6. 'target' → logprob: -4.951472759246826
    7. 'S' → logprob: -5.201472759246826
    8. 'down' → logprob: -5.451472759246826
    9. ' S' → logprob: -5.576472759246826
    10. ' left' → logprob: -6.326472759246826

Token 497: ' (' (ID: 350)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.5147509574890137
    2. ''s' → logprob: -1.7647509574890137
    3. '#' → logprob: -2.1397509574890137
    4. '.' → logprob: -2.3897509574890137
    5. ' ' → logprob: -2.5147509574890137
    6. ',' → logprob: -2.5147509574890137
    7. '_' → logprob: -3.0147509574890137
    8. '<|end|>' → logprob: -3.3897509574890137
    9. ' by' → logprob: -3.8897509574890137
    10. '...' → logprob: -4.014750957489014

Token 498: 'at' (ID: 266)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05068119615316391
    2. ' )' → logprob: -4.550681114196777
    3. '),' → logprob: -5.050681114196777
    4. '#' → logprob: -5.175681114196777
    5. ').' → logprob: -5.425681114196777
    6. ',' → logprob: -5.675681114196777
    7. ' the' → logprob: -6.300681114196777
    8. 'the' → logprob: -6.425681114196777
    9. '.' → logprob: -6.800681114196777
    10. '...' → logprob: -6.925681114196777

Token 499: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019608093425631523
    2. ' ' → logprob: -4.519608020782471
    3. 'position' → logprob: -5.394608020782471
    4. 'S' → logprob: -6.519608020782471
    5. ' position' → logprob: -7.269608020782471
    6. '```' → logprob: -7.269608020782471
    7. ' S' → logprob: -8.769608497619629
    8. '1' → logprob: -8.894608497619629
    9. ')' → logprob: -8.894608497619629
    10. 'zero' → logprob: -9.144608497619629

Token 500: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018309496343135834
    2. 'S' → logprob: -4.768309593200684
    3. 'position' → logprob: -4.768309593200684
    4. ' ' → logprob: -8.393309593200684
    5. '```' → logprob: -9.018309593200684
    6. 'zero' → logprob: -9.143309593200684
    7. '#' → logprob: -9.393309593200684
    8. ' position' → logprob: -9.393309593200684
    9. 'distance' → logprob: -9.518309593200684
    10. 'line' → logprob: -9.643309593200684

Token 501: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04345881938934326
    2. '),' → logprob: -3.418458938598633
    3. ').' → logprob: -5.043458938598633
    4. '):
' → logprob: -7.293458938598633
    5. '):' → logprob: -7.668458938598633
    6. ')
' → logprob: -7.668458938598633
    7. ' )' → logprob: -7.668458938598633
    8. ',' → logprob: -8.418458938598633
    9. ' position' → logprob: -8.543458938598633
    10. '):

' → logprob: -8.668458938598633

Token 502: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04128142073750496
    2. ',' → logprob: -4.416281223297119
    3. '
' → logprob: -4.666281223297119
    4. ')' → logprob: -4.916281223297119
    5. '.' → logprob: -5.166281223297119
    6. '#' → logprob: -6.791281223297119
    7. '    
' → logprob: -6.916281223297119
    8. '...' → logprob: -6.916281223297119
    9. '<|end|>' → logprob: -7.291281223297119
    10. ':' → logprob: -7.791281223297119

Token 503: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02268521673977375
    2. '<|end|>' → logprob: -4.5226850509643555
    3. '#' (adapté à ' #') → logprob: -5.6476850509643555
    4. '.' → logprob: -5.7726850509643555
    5. '...' → logprob: -6.3976850509643555
    6. ')' → logprob: -7.1476850509643555
    7. ',' → logprob: -7.3976850509643555
    8. '<|end|>' → logprob: -7.5226850509643555
    9. '
' → logprob: -7.7726850509643555
    10. '    
' → logprob: -7.8976850509643555

Token 504: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021609345450997353
    2. '#' → logprob: -4.521609306335449
    3. '
' → logprob: -6.146609306335449
    4. '    
' → logprob: -6.896609306335449
    5. ' steps' → logprob: -7.021609306335449
    6. ' #' → logprob: -7.146609306335449
    7. ' step' → logprob: -7.271609306335449
    8. '    ' → logprob: -7.396609306335449
    9. ' 
' → logprob: -7.396609306335449
    10. 'steps' → logprob: -7.896609306335449

Token 505: ' next' (ID: 2613)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5088043808937073
    2. '   ' → logprob: -1.5088043212890625
    3. ' we' → logprob: -2.6338043212890625
    4. 'the' → logprob: -2.8838043212890625
    5. ' steps' → logprob: -4.2588043212890625
    6. ' next' → logprob: -5.0088043212890625
    7. ' position' → logprob: -5.5088043212890625
    8. 'we' → logprob: -5.8838043212890625
    9. ' current' → logprob: -6.0088043212890625
    10. 'position' → logprob: -6.0088043212890625

Token 506: ' position' (ID: 4010)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.5097000002861023
    2. '_pos' → logprob: -1.634700059890747
    3. '_' → logprob: -2.759700059890747
    4. '   ' → logprob: -3.259700059890747
    5. '_token' → logprob: -3.259700059890747
    6. '_line' → logprob: -4.009699821472168
    7. 'position' → logprob: -4.634699821472168
    8. '_step' → logprob: -4.759699821472168
    9. 'pos' → logprob: -5.009699821472168
    10. '_positions' → logprob: -5.509699821472168

Token 507: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12756629288196564
    2. '=' → logprob: -2.127566337585449
    3. 's' → logprob: -7.877566337585449
    4. ',' → logprob: -9.37756633758545
    5. ' is' → logprob: -9.37756633758545
    6. ')' → logprob: -10.50256633758545
    7. '_' → logprob: -11.87756633758545
    8. ':' → logprob: -12.00256633758545
    9. ' =
' → logprob: -12.25256633758545
    10. '```' → logprob: -12.25256633758545

Token 508: ' current' (ID: 2208)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.4741940200328827
    2. ' S' → logprob: -0.9741940498352051
    3. ' ' → logprob: -10.224193572998047
    4. '   ' → logprob: -10.724193572998047
    5. ' current' → logprob: -11.849193572998047
    6. 'current' → logprob: -11.849193572998047
    7. ''S' → logprob: -11.974193572998047
    8. '`' → logprob: -12.099193572998047
    9. 's' → logprob: -12.099193572998047
    10. '0' → logprob: -12.099193572998047

Token 509: ' -' (ID: 533)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.12155420333147049
    2. '_' → logprob: -2.996554136276245
    3. ' -' → logprob: -3.121554136276245
    4. 'position' → logprob: -4.621554374694824
    5. ' position' → logprob: -5.371554374694824
    6. '_pos' → logprob: -5.746554374694824
    7. ' _' → logprob: -6.871554374694824
    8. '-' → logprob: -6.996554374694824
    9. 'pos' → logprob: -8.621554374694824
    10. 'Position' → logprob: -8.871554374694824

Token 510: ' sum' (ID: 4215)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.48246902227401733
    2. 'x' → logprob: -1.482469081878662
    3. 'S' → logprob: -3.107469081878662
    4. 'steps' → logprob: -3.857469081878662
    5. ' step' → logprob: -4.107469081878662
    6. 's' → logprob: -4.732469081878662
    7. ' x' → logprob: -4.857469081878662
    8. 'random' → logprob: -4.982469081878662
    9. '1' → logprob: -5.107469081878662
    10. '(step' → logprob: -5.357469081878662

Token 511: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0004170873435214162
    2. '_' → logprob: -8.75041675567627
    3. '   ' → logprob: -8.87541675567627
    4. ' of' → logprob: -9.87541675567627
    5. '_steps' → logprob: -10.87541675567627
    6. 'of' → logprob: -11.00041675567627
    7. '```' → logprob: -11.62541675567627
    8. ' _' → logprob: -12.25041675567627
    9. '_OF' → logprob: -13.12541675567627
    10. '
' → logprob: -13.50041675567627

Token 512: '_steps' (ID: 52120)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.21175064146518707
    2. '_steps' → logprob: -1.7117506265640259
    3. ' steps' → logprob: -4.711750507354736
    4. 'K' → logprob: -7.336750507354736
    5. '_' → logprob: -8.961750984191895
    6. ' K' → logprob: -9.086750984191895
    7. '_k' → logprob: -9.461750984191895
    8. 'k' → logprob: -9.586750984191895
    9. 'range' → logprob: -9.711750984191895
    10. 'step' → logprob: -9.961750984191895

Token 513: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09842114895582199
    2. '
' → logprob: -2.973421096801758
    3. '<|end|>' → logprob: -4.098421096801758
    4. '<|end|>' → logprob: -4.348421096801758
    5. '    
' → logprob: -4.598421096801758
    6. ')' → logprob: -7.598421096801758
    7. '[' → logprob: -7.973421096801758
    8. '#' → logprob: -8.223421096801758
    9. ',' → logprob: -8.223421096801758
    10. '\n' → logprob: -8.473421096801758

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034258009400218725
    2. '<|end|>' → logprob: -7.128425598144531
    3. '    
' → logprob: -7.253425598144531
    4. ')' → logprob: -7.253425598144531
    5. '...' → logprob: -8.628425598144531
    6. '#' → logprob: -8.628425598144531
    7. '```' → logprob: -8.878425598144531
    8. '\' → logprob: -9.003425598144531
    9. '       ' → logprob: -9.128425598144531
    10. ',' → logprob: -9.503425598144531

Token 515: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019038423895835876
    2. '#' (adapté à ' #') → logprob: -5.019038200378418
    3. 'def' → logprob: -6.394038200378418
    4. 'pos' → logprob: -6.769038200378418
    5. 'dp' → logprob: -6.769038200378418
    6. 'steps' → logprob: -6.769038200378418
    7. '
' → logprob: -6.894038200378418
    8. 'step' → logprob: -6.894038200378418
    9. '    
' → logprob: -7.019038200378418
    10. 'next' → logprob: -7.394038200378418

Token 516: ' So' (ID: 2632)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.27280542254447937
    2. 'step' → logprob: -2.1478054523468018
    3. 'steps' → logprob: -3.0228054523468018
    4. 'pos' → logprob: -3.7728054523468018
    5. '#' → logprob: -4.397805213928223
    6. 'max' → logprob: -4.772805213928223
    7. ' dp' → logprob: -4.772805213928223
    8. ' step' → logprob: -5.647805213928223
    9. 'from' → logprob: -6.022805213928223
    10. 'def' → logprob: -6.272805213928223

Token 517: ' E' (ID: 457)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.3734407424926758
    2. ' steps' → logprob: -1.4984407424926758
    3. 'dp' → logprob: -1.9984407424926758
    4. 'steps' → logprob: -2.123440742492676
    5. ' step' → logprob: -2.748440742492676
    6. ' dp' → logprob: -2.998440742492676
    7. 'step' → logprob: -3.248440742492676
    8. '   ' → logprob: -3.498440742492676
    9. ' pos' → logprob: -3.623440742492676
    10. ' next' → logprob: -4.623440742492676

Token 518: '(S' (ID: 6181)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5035810470581055
    2. '(' → logprob: -1.1285810470581055
    3. '=' → logprob: -3.1285810470581055
    4. '(S' → logprob: -3.8785810470581055
    5. '[' → logprob: -5.2535810470581055
    6. '(s' → logprob: -7.7535810470581055
    7. '_' → logprob: -8.253581047058105
    8. 's' → logprob: -8.378581047058105
    9. ')' → logprob: -8.503581047058105
    10. ' (' → logprob: -8.628581047058105

Token 519: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006419036653824151
    2. ')=' → logprob: -7.750641822814941
    3. ' )' → logprob: -9.375641822814941
    4. '   ' → logprob: -10.000641822814941
    5. '(S' → logprob: -11.000641822814941
    6. '[' → logprob: -11.125641822814941
    7. '=' → logprob: -11.500641822814941
    8. '-' → logprob: -11.750641822814941
    9. ')
' → logprob: -12.500641822814941
    10. ')`' → logprob: -12.750641822814941

Token 520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575953483581543
    2. ' =' → logprob: -0.825953483581543
    3. ')' → logprob: -11.700953483581543
    4. ',' → logprob: -13.575953483581543
    5. 'def' → logprob: -13.700953483581543
    6. '   ' → logprob: -14.325953483581543
    7. ' ' → logprob: -14.700953483581543
    8. ' is' → logprob: -14.950953483581543
    9. ' +=' → logprob: -15.450953483581543
    10. ' =
' → logprob: -15.575953483581543

Token 521: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10055525600910187
    2. ' ' → logprob: -2.350555181503296
    3. '   ' → logprob: -8.975555419921875
    4. '`' → logprob: -9.350555419921875
    5. '"' → logprob: -10.725555419921875
    6. ' (' → logprob: -10.725555419921875
    7. '0' → logprob: -10.725555419921875
    8. '  ' → logprob: -11.725555419921875
    9. '(' → logprob: -12.038055419921875
    10. '```' → logprob: -12.100555419921875

Token 522: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015833048382773995
    2. ' ' → logprob: -6.501583099365234
    3. '0' → logprob: -10.251583099365234
    4. '   ' → logprob: -11.376583099365234
    5. '(' → logprob: -11.626583099365234
    6. '`' → logprob: -11.876583099365234
    7. 'S' → logprob: -12.251583099365234
    8. ' (' → logprob: -13.001583099365234
    9. '"' → logprob: -13.501583099365234
    10. '  ' → logprob: -13.626583099365234

Token 523: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06200096756219864
    2. '+' → logprob: -2.8120009899139404
    3. ' -' → logprob: -11.18700122833252
    4. '-' → logprob: -11.56200122833252
    5. ' +
' → logprob: -12.56200122833252
    6. '    ' → logprob: -13.43700122833252
    7. ')' → logprob: -13.43700122833252
    8. '*' → logprob: -14.18700122833252
    9. '   ' → logprob: -14.31200122833252
    10. ' ' → logprob: -14.81200122833252

Token 524: ' sum' (ID: 4215)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6745191812515259
    2. 'sum' → logprob: -0.7995191812515259
    3. '(S' → logprob: -4.174519062042236
    4. '(sum' → logprob: -4.299519062042236
    5. 'math' → logprob: -5.299519062042236
    6. '(K' → logprob: -5.549519062042236
    7. ' (' → logprob: -6.924519062042236
    8. '1' → logprob: -7.049519062042236
    9. '(math' → logprob: -7.924519062042236
    10. ' sum' → logprob: -8.674519538879395

Token 525: '_{' (ID: 22305)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5867504477500916
    2. '(' → logprob: -1.4617505073547363
    3. ' (' → logprob: -2.5867505073547363
    4. ' P' → logprob: -3.0867505073547363
    5. ' _' → logprob: -3.0867505073547363
    6. ' ' → logprob: -4.586750507354736
    7. '(P' → logprob: -4.711750507354736
    8. 'P' → logprob: -4.961750507354736
    9. '   ' → logprob: -5.086750507354736
    10. '_{' → logprob: -5.461750507354736

Token 526: 's' (ID: 82)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.044097885489463806
    2. 'i' → logprob: -3.669097900390625
    3. 's' → logprob: -4.669097900390625
    4. 'step' → logprob: -6.044097900390625
    5. 'steps' → logprob: -6.169097900390625
    6. 'sum' → logprob: -6.544097900390625
    7. 'j' → logprob: -7.044097900390625
    8. ' x' → logprob: -7.794097900390625
    9. 'k' → logprob: -8.044097900390625
    10. '_x' → logprob: -8.419097900390625

Token 527: '}' (ID: 92)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05721293389797211
    2. '_' → logprob: -3.9322128295898438
    3. ' =' → logprob: -4.932212829589844
    4. '=s' → logprob: -5.182212829589844
    5. '_{' → logprob: -5.432212829589844
    6. 's' → logprob: -5.432212829589844
    7. '=sum' → logprob: -5.432212829589844
    8. '_=' → logprob: -5.932212829589844
    9. ' s' → logprob: -6.307212829589844
    10. ' _' → logprob: -6.682212829589844

Token 528: ' P' (ID: 398)
  Prédit: ' P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.45098942518234253
    2. 'P' → logprob: -1.0759894847869873
    3. '(P' → logprob: -4.950989246368408
    4. ' (' → logprob: -5.200989246368408
    5. '[' → logprob: -5.825989246368408
    6. '[P' → logprob: -5.950989246368408
    7. '(' → logprob: -6.825989246368408
    8. ' [' → logprob: -7.200989246368408
    9. ' p' → logprob: -7.325989246368408
    10. 'p' → logprob: -7.575989246368408

Token 529: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.01791250891983509
    2. '(' → logprob: -4.5179123878479
    3. '(sum' → logprob: -5.5179123878479
    4. '(S' → logprob: -6.6429123878479
    5. '((' → logprob: -7.2679123878479
    6. '(x' → logprob: -8.142912864685059
    7. '(ss' → logprob: -8.642912864685059
    8. 's' → logprob: -9.392912864685059
    9. '_s' → logprob: -9.767912864685059
    10. '(
' → logprob: -9.892912864685059

Token 530: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7264211177825928
    2. '(s' → logprob: -1.4764211177825928
    3. '(S' → logprob: -1.7264211177825928
    4. '*' → logprob: -2.6014211177825928
    5. ' *' → logprob: -3.8514211177825928
    6. ')*' → logprob: -5.351421356201172
    7. '(' → logprob: -5.601421356201172
    8. '*(' → logprob: -6.976421356201172
    9. ' )' → logprob: -7.351421356201172
    10. ' (' → logprob: -7.476421356201172

Token 531: ' *' (ID: 425)
  Prédit: ' E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.7114356160163879
    2. 'E' → logprob: -1.2114355564117432
    3. ' *' → logprob: -2.711435556411743
    4. '(S' → logprob: -3.211435556411743
    5. '*' → logprob: -3.586435556411743
    6. '(s' → logprob: -4.211435794830322
    7. '(' → logprob: -4.336435794830322
    8. '(E' → logprob: -4.336435794830322
    9. ' (' → logprob: -4.836435794830322
    10. ' _' → logprob: -5.086435794830322

Token 532: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -2.2246291337069124e-05
    2. ' E' → logprob: -10.750021934509277
    3. '`' → logprob: -15.375021934509277
    4. '(E' → logprob: -15.500021934509277
    5. '```' → logprob: -15.625021934509277
    6. '(' → logprob: -16.625022888183594
    7. '   ' → logprob: -16.750022888183594
    8. '\E' → logprob: -18.500022888183594
    9. '``' → logprob: -18.875022888183594
    10. '
' → logprob: -18.875022888183594

Token 533: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.00018399098189547658
    2. '(' → logprob: -9.000184059143066
    3. '(s' → logprob: -9.750184059143066
    4. '(
' → logprob: -14.250184059143066
    5. '((' → logprob: -14.375184059143066
    6. ' (' → logprob: -14.875184059143066
    7. '(`' → logprob: -15.750184059143066
    8. '```' → logprob: -15.750184059143066
    9. '\(' → logprob: -15.750184059143066
    10. '`' → logprob: -17.12518310546875

Token 534: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2450147271156311
    2. '-s' → logprob: -1.8700146675109863
    3. ' -' → logprob: -2.9950146675109863
    4. '(' → logprob: -4.495014667510986
    5. '(s' → logprob: -6.870014667510986
    6. '-
' → logprob: -8.245015144348145
    7. 's' → logprob: -8.620015144348145
    8. '(-' → logprob: -8.745015144348145
    9. '-(' → logprob: -9.620015144348145
    10. ' (' → logprob: -9.995015144348145

Token 535: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.2166411478538066e-05
    2. ' s' → logprob: -9.875052452087402
    3. 'int' → logprob: -15.625052452087402
    4. '   ' → logprob: -16.500051498413086
    5. '```' → logprob: -16.625051498413086
    6. '{s' → logprob: -16.625051498413086
    7. ' ' → logprob: -16.875051498413086
    8. '_s' → logprob: -16.875051498413086
    9. '<|end|>' → logprob: -17.000051498413086
    10. '(s' → logprob: -17.125051498413086

Token 536: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003909927327185869
    2. '_s' → logprob: -9.250391006469727
    3. 's' → logprob: -9.625391006469727
    4. '_' → logprob: -9.625391006469727
    5. ')}' → logprob: -10.250391006469727
    6. '-' → logprob: -10.500391006469727
    7. ')s' → logprob: -11.125391006469727
    8. '(s' → logprob: -11.125391006469727
    9. '-)' → logprob: -11.375391006469727
    10. '_)' → logprob: -11.500391006469727

Token 537: ' with' (ID: 483)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.7099840044975281
    2. '   ' → logprob: -0.8349840044975281
    3. 'where' → logprob: -3.709984064102173
    4. '
' → logprob: -4.459983825683594
    5. '    
' → logprob: -5.209983825683594
    6. '<|end|>' → logprob: -5.209983825683594
    7. ' with' → logprob: -5.334983825683594
    8. ' ' → logprob: -5.334983825683594
    9. '    ' → logprob: -5.584983825683594
    10. ' s' → logprob: -5.584983825683594

Token 538: ' E' (ID: 457)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08751542121171951
    2. 'S' → logprob: -2.712515354156494
    3. ' s' → logprob: -4.462515354156494
    4. '0' → logprob: -5.337515354156494
    5. 'E' → logprob: -7.212515354156494
    6. ' S' → logprob: -8.462515830993652
    7. 'if' → logprob: -11.087515830993652
    8. ' ' → logprob: -11.212515830993652
    9. '```' → logprob: -11.337515830993652
    10. '(s' → logprob: -11.462515830993652

Token 539: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029659343417733908
    2. '0' → logprob: -6.627965927124023
    3. '(s' → logprob: -6.752965927124023
    4. '(S' → logprob: -8.127965927124023
    5. '=' → logprob: -9.252965927124023
    6. '[' → logprob: -10.252965927124023
    7. ' =' → logprob: -11.127965927124023
    8. ' (' → logprob: -11.377965927124023
    9. '(
' → logprob: -12.502965927124023
    10. 's' → logprob: -12.627965927124023

Token 540: '0' (ID: 15)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 541: ')=' (ID: 25987)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10117299109697342
    2. ')=' → logprob: -2.351172924041748
    3. '=' → logprob: -6.976172924041748
    4. ')==' → logprob: -10.476173400878906
    5. '`)' → logprob: -13.976173400878906
    6. ' )' → logprob: -14.351173400878906
    7. '==' → logprob: -14.601173400878906
    8. '}=' → logprob: -14.976173400878906
    9. '）' → logprob: -15.476173400878906
    10. ' =' → logprob: -15.476173400878906

Token 542: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -19.000001907348633
    4. '```' → logprob: -19.750001907348633
    5. '
' → logprob: -20.375001907348633
    6. '{' → logprob: -21.375001907348633
    7. '۰' → logprob: -21.500001907348633
    8. '  ' → logprob: -22.000001907348633
    9. '[' → logprob: -22.000001907348633
    10. '=' → logprob: -22.125001907348633

Token 543: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08828990906476974
    2. '
' → logprob: -2.713289976119995
    3. '<|end|>' → logprob: -4.588289737701416
    4. '    
' → logprob: -5.338289737701416
    5. '<|end|>' → logprob: -7.088289737701416
    6. ')' → logprob: -7.338289737701416
    7. ',' → logprob: -7.463289737701416
    8. 'def' → logprob: -8.838290214538574
    9. '.' → logprob: -8.838290214538574
    10. 'import' → logprob: -9.088290214538574

Token 544: ' E' (ID: 457)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3348231613636017
    2. 's' → logprob: -1.5848231315612793
    3. ' S' → logprob: -3.0848231315612793
    4. ' s' → logprob: -4.459823131561279
    5. ')' → logprob: -5.584823131561279
    6. 'max' → logprob: -5.709823131561279
    7. '   ' → logprob: -5.709823131561279
    8. 'all' → logprob: -6.459823131561279
    9. 'abs' → logprob: -6.459823131561279
    10. ' ' → logprob: -6.584823131561279

Token 545: '(x' (ID: 4061)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.5891199707984924
    2. '=' → logprob: -1.3391199111938477
    3. '(s' → logprob: -2.5891199111938477
    4. '(' → logprob: -2.8391199111938477
    5. ' =' → logprob: -3.3391199111938477
    6. ')' → logprob: -5.589119911193848
    7. 's' → logprob: -6.339119911193848
    8. 'S' → logprob: -6.589119911193848
    9. '(N' → logprob: -7.214119911193848
    10. '(None' → logprob: -7.214119911193848

Token 546: '<' (ID: 27)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18393798172473907
    2. '=' → logprob: -2.3089380264282227
    3. '==' → logprob: -4.058938026428223
    4. '>=' → logprob: -4.683938026428223
    5. '>' → logprob: -4.808938026428223
    6. ' >' → logprob: -4.808938026428223
    7. ')=' → logprob: -4.933938026428223
    8. ' =' → logprob: -4.933938026428223
    9. ' ==' → logprob: -5.308938026428223
    10. ' >=' → logprob: -5.683938026428223

Token 547: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004219197668135166
    2. '=' → logprob: -5.504219055175781
    3. ' ' → logprob: -9.129219055175781
    4. '1' → logprob: -11.004219055175781
    5. '```' → logprob: -11.754219055175781
    6. '   ' → logprob: -12.754219055175781
    7. '
' → logprob: -13.879219055175781
    8. ' =' → logprob: -14.004219055175781
    9. ')' → logprob: -14.379219055175781
    10. '	' → logprob: -15.004219055175781

Token 548: ')=' (ID: 25987)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17213396728038788
    2. ')=' → logprob: -2.0471339225769043
    3. '=' → logprob: -3.5471339225769043
    4. ')==' → logprob: -9.047134399414062
    5. ' =' → logprob: -10.422134399414062
    6. '   ' → logprob: -10.672134399414062
    7. ' )' → logprob: -11.172134399414062
    8. '==' → logprob: -11.172134399414062
    9. ']=' → logprob: -11.547134399414062
    10. '=None' → logprob: -12.922134399414062

Token 549: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012166214582975954
    2. '-' → logprob: -9.3751220703125
    3. ' ' → logprob: -10.2501220703125
    4. 'None' → logprob: -14.1251220703125
    5. ' -' → logprob: -14.7501220703125
    6. 'float' → logprob: -15.7501220703125
    7. '   ' → logprob: -16.8751220703125
    8. 'sys' → logprob: -18.7501220703125
    9. '1' → logprob: -19.0001220703125
    10. 'undefined' → logprob: -19.1251220703125

Token 550: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4835667014122009
    2. '   ' → logprob: -0.9835667014122009
    3. '    
' → logprob: -5.733566761016846
    4. '<|end|>' → logprob: -5.733566761016846
    5. 'def' → logprob: -7.108566761016846
    6. '```' → logprob: -7.483566761016846
    7. '<|end|>' → logprob: -7.858566761016846
    8. 'import' → logprob: -7.858566761016846
    9. '  
' → logprob: -9.108566284179688
    10. '

' → logprob: -9.108566284179688

Token 551: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004998209420591593
    2. '
' → logprob: -5.879998207092285
    3. '    
' → logprob: -6.379998207092285
    4. 'import' → logprob: -8.879998207092285
    5. 'def' → logprob: -9.379998207092285
    6. '    ' → logprob: -9.504998207092285
    7. '```' → logprob: -10.379998207092285
    8. ' 
' → logprob: -10.504998207092285
    9. '  
' → logprob: -10.754998207092285
    10. '\' → logprob: -10.754998207092285

Token 552: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013972267508506775
    2. '
' → logprob: -5.263972282409668
    3. '    
' → logprob: -5.513972282409668
    4. '    ' → logprob: -6.888972282409668
    5. 'def' → logprob: -7.013972282409668
    6. ' 
' → logprob: -7.013972282409668
    7. 'import' → logprob: -7.513972282409668
    8. '\' → logprob: -8.263972282409668
    9. '  
' → logprob: -8.763972282409668
    10. '   
' → logprob: -9.138972282409668

Token 553: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1228446364402771
    2. 'dp' → logprob: -2.747844696044922
    3. 'def' → logprob: -3.622844696044922
    4. ' dp' → logprob: -4.872844696044922
    5. ' if' → logprob: -5.747844696044922
    6. 'import' → logprob: -5.872844696044922
    7. '    ' → logprob: -6.497844696044922
    8. 'from' → logprob: -6.497844696044922
    9. '    
' → logprob: -6.997844696044922
    10. '#' → logprob: -6.997844696044922

Token 554: ' S' (ID: 336)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.32754626870155334
    2. 's' → logprob: -1.452546238899231
    3. ' S' → logprob: -4.452546119689941
    4. 'S' → logprob: -4.452546119689941
    5. 'x' → logprob: -4.952546119689941
    6. ' x' → logprob: -4.952546119689941
    7. ' i' → logprob: -5.452546119689941
    8. 'i' → logprob: -6.452546119689941
    9. 'pos' → logprob: -7.327546119689941
    10. ' pos' → logprob: -8.327546119689941

Token 555: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5542781949043274
    2. ' <' → logprob: -2.0542781352996826
    3. ' <=' → logprob: -2.3042781352996826
    4. ' >=' → logprob: -2.5542781352996826
    5. '>' → logprob: -3.3042781352996826
    6. ' =' → logprob: -3.4292781352996826
    7. '=' → logprob: -3.5542781352996826
    8. ')' → logprob: -5.679278373718262
    9. '   ' → logprob: -5.804278373718262
    10. ' in' → logprob: -5.804278373718262

Token 556: ' K' (ID: 658)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8851103186607361
    2. 'K' → logprob: -1.3851103782653809
    3. '0' → logprob: -1.7601103782653809
    4. '1' → logprob: -1.8851103782653809
    5. ' K' → logprob: -5.135110378265381
    6. ' ' → logprob: -5.635110378265381
    7. 'min' → logprob: -6.385110378265381
    8. 'N' → logprob: -7.260110378265381
    9. ' =' → logprob: -7.385110378265381
    10. '=min' → logprob: -9.010109901428223

Token 557: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06279938668012619
    2. ':
' → logprob: -2.8127994537353516
    3. ',' → logprob: -8.437799453735352
    4. ' or' → logprob: -8.562799453735352
    5. '   ' → logprob: -8.687799453735352
    6. ' and' → logprob: -9.187799453735352
    7. ':return' → logprob: -10.312799453735352
    8. 'and' → logprob: -10.562799453735352
    9. ' :' → logprob: -10.812799453735352
    10. ':

' → logprob: -11.812799453735352

Token 558: ' E' (ID: 457)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0752885341644287
    2. 'print' → logprob: -1.0752885341644287
    3. ' return' → logprob: -1.9502885341644287
    4. 'return' → logprob: -2.3252885341644287
    5. ' print' → logprob: -2.5752885341644287
    6. ' ' → logprob: -7.950288772583008
    7. ' E' → logprob: -8.075288772583008
    8. '       ' → logprob: -8.450288772583008
    9. ' we' → logprob: -9.325288772583008
    10. 'E' → logprob: -9.450288772583008

Token 559: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.009166362695395947
    2. '(' → logprob: -5.134166240692139
    3. '=' → logprob: -6.259166240692139
    4. '(s' → logprob: -7.134166240692139
    5. ' =' → logprob: -7.759166240692139
    6. '(x' → logprob: -11.009166717529297
    7. '   ' → logprob: -11.134166717529297
    8. ' (' → logprob: -11.384166717529297
    9. '(None' → logprob: -11.384166717529297
    10. 'def' → logprob: -11.759166717529297

Token 560: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041963063180446625
    2. '=' → logprob: -3.4169631004333496
    3. ')=' → logprob: -4.91696310043335
    4. ' =' → logprob: -7.16696310043335
    5. ' )' → logprob: -9.416962623596191
    6. '   ' → logprob: -10.416962623596191
    7. '==' → logprob: -10.916962623596191
    8. 'def' → logprob: -10.916962623596191
    9. ')==' → logprob: -11.416962623596191
    10. '>' → logprob: -12.291962623596191

Token 561: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004081128165125847
    2. ' =' → logprob: -5.5040812492370605
    3. ')' → logprob: -13.754080772399902
    4. '   ' → logprob: -14.004080772399902
    5. 'def' → logprob: -15.504080772399902
    6. '=
' → logprob: -15.504080772399902
    7. ' is' → logprob: -15.629080772399902
    8. '==' → logprob: -16.12908172607422
    9. '=None' → logprob: -16.75408172607422
    10. '=

' → logprob: -16.87908172607422

Token 562: ' undefined' (ID: 10118)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010036318562924862
    2. ' ' → logprob: -7.376003742218018
    3. '   ' → logprob: -8.75100326538086
    4. '-' → logprob: -9.50100326538086
    5. 'undefined' → logprob: -10.00100326538086
    6. 'float' → logprob: -10.87600326538086
    7. 'None' → logprob: -11.00100326538086
    8. 'inf' → logprob: -11.25100326538086
    9. 'in' → logprob: -11.62600326538086
    10. '=' → logprob: -12.50100326538086

Token 563: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05971723794937134
    2. '
' → logprob: -3.0597171783447266
    3. '    
' → logprob: -4.934717178344727
    4. '```' → logprob: -7.059717178344727
    5. '<|end|>' → logprob: -7.684717178344727
    6. ',' → logprob: -8.059717178344727
    7. '\' → logprob: -8.184717178344727
    8. '.' → logprob: -8.434717178344727
    9. ' if' → logprob: -8.559717178344727
    10. '\n' → logprob: -8.684717178344727

Token 564: ' no' (ID: 860)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008252615109086037
    2. 'in' → logprob: -5.1332526206970215
    3. 'inf' → logprob: -6.7582526206970215
    4. 'None' → logprob: -7.6332526206970215
    5. 'zero' → logprob: -8.758252143859863
    6. '-' → logprob: -9.133252143859863
    7. 'undefined' → logprob: -9.508252143859863
    8. 'float' → logprob: -9.883252143859863
    9. 'return' → logprob: -9.883252143859863
    10. ' ' → logprob: -9.883252143859863

Token 565: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.5601024627685547
    2. 'solution' → logprob: -0.9351024627685547
    3. 'steps' → logprob: -5.310102462768555
    4. '
' → logprob: -5.810102462768555
    5. 'possible' → logprob: -5.935102462768555
    6. ' possible' → logprob: -5.935102462768555
    7. ' steps' → logprob: -6.060102462768555
    8. 'n' → logprob: -6.185102462768555
    9. 'return' → logprob: -6.185102462768555
    10. 's' → logprob: -6.310102462768555

Token 566: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6047755479812622
    2. '
' → logprob: -0.8547755479812622
    3. '```' → logprob: -4.729775428771973
    4. '    
' → logprob: -5.229775428771973
    5. '  
' → logprob: -5.854775428771973
    6. ':' → logprob: -6.104775428771973
    7. ',' → logprob: -6.729775428771973
    8. '\n' → logprob: -6.979775428771973
    9. '<|end|>' → logprob: -6.979775428771973
    10. ')' → logprob: -7.104775428771973

Token 567: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007545811589807272
    2. '
' → logprob: -5.6325459480285645
    3. '    
' → logprob: -6.0075459480285645
    4. '```' → logprob: -8.132545471191406
    5. 'dp' → logprob: -8.257545471191406
    6. '\' → logprob: -8.382545471191406
    7. ' 
' → logprob: -8.507545471191406
    8. 'import' → logprob: -9.382545471191406
    9. 'def' → logprob: -9.632545471191406
    10. '    ' → logprob: -9.757545471191406

Token 568: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0216122604906559
    2. 'dp' → logprob: -4.146612167358398
    3. '    
' → logprob: -6.521612167358398
    4. ' dp' → logprob: -6.771612167358398
    5. '
' → logprob: -7.396612167358398
    6. ' if' → logprob: -7.771612167358398
    7. 'def' → logprob: -8.271612167358398
    8. ' 
' → logprob: -8.396612167358398
    9. 'DP' → logprob: -8.521612167358398
    10. '\' → logprob: -8.646612167358398

Token 569: ' We' (ID: 1416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009395964443683624
    2. 'max' → logprob: -5.509396076202393
    3. 'from' → logprob: -5.884396076202393
    4. '#' → logprob: -7.384396076202393
    5. 'DP' → logprob: -7.759396076202393
    6. ' dp' → logprob: -7.884396076202393
    7. 'import' → logprob: -8.759395599365234
    8. 'E' → logprob: -8.759395599365234
    9. 'memo' → logprob: -8.759395599365234
    10. '   ' → logprob: -9.009395599365234

Token 570: ' will' (ID: 738)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8478869199752808
    2. ' def' → logprob: -1.5978869199752808
    3. ' need' → logprob: -2.4728870391845703
    4. ' =' → logprob: -2.5978870391845703
    5. '   ' → logprob: -2.7228870391845703
    6. ''' → logprob: -3.0978870391845703
    7. ' continue' → logprob: -3.9728870391845703
    8. '_' → logprob: -4.22288703918457
    9. '#' → logprob: -4.47288703918457
    10. ' can' → logprob: -4.59788703918457

Token 571: ' solve' (ID: 17722)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.6518160104751587
    2. 'use' → logprob: -1.9018160104751587
    3. 'def' → logprob: -2.276815891265869
    4. 'import' → logprob: -2.401815891265869
    5. ' implement' → logprob: -3.276815891265869
    6. '   ' → logprob: -3.901815891265869
    7. 'compute' → logprob: -4.026815891265869
    8. ' import' → logprob: -4.151815891265869
    9. 'implement' → logprob: -4.526815891265869
    10. 'define' → logprob: -4.651815891265869

Token 572: ' for' (ID: 395)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 573: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.7703736424446106
    2. 'S' → logprob: -0.7703736424446106
    3. ' E' → logprob: -3.270373582839966
    4. ' S' → logprob: -3.520373582839966
    5. 'dp' → logprob: -5.520373821258545
    6. 's' → logprob: -7.770373821258545
    7. 'DP' → logprob: -7.770373821258545
    8. 'i' → logprob: -7.895373821258545
    9. ' dp' → logprob: -8.395373344421387
    10. 'def' → logprob: -8.645373344421387

Token 574: '(' (ID: 7)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.7036457657814026
    2. '   ' → logprob: -1.4536457061767578
    3. '(' → logprob: -2.078645706176758
    4. '(s' → logprob: -3.578645706176758
    5. 's' → logprob: -3.953645706176758
    6. ' =' → logprob: -4.203645706176758
    7. '```' → logprob: -4.578645706176758
    8. 'import' → logprob: -4.578645706176758
    9. '(
' → logprob: -4.828645706176758
    10. ' ' → logprob: -5.078645706176758

Token 575: '0' (ID: 15)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03530288115143776
    2. ')' → logprob: -3.4103028774261475
    3. 's' → logprob: -7.035303115844727
    4. '(S' → logprob: -8.410303115844727
    5. '   ' → logprob: -9.285303115844727
    6. ' S' → logprob: -9.285303115844727
    7. '[S' → logprob: -9.410303115844727
    8. ' )' → logprob: -10.160303115844727
    9. '=' → logprob: -10.160303115844727
    10. '0' → logprob: -10.660303115844727

Token 576: '..' (ID: 485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005409015342593193
    2. '):' → logprob: -6.255409240722656
    3. ')=' → logprob: -6.755409240722656
    4. '),' → logprob: -7.630409240722656
    5. '   ' → logprob: -7.630409240722656
    6. ':' → logprob: -7.880409240722656
    7. ')
' → logprob: -8.380409240722656
    8. '+' → logprob: -8.380409240722656
    9. '+)' → logprob: -9.005409240722656
    10. ':)' → logprob: -9.380409240722656

Token 577: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0006048606592230499
    2. ' S' → logprob: -8.000604629516602
    3. 'N' → logprob: -9.500604629516602
    4. ')' → logprob: -9.625604629516602
    5. 'K' → logprob: -9.750604629516602
    6. 'max' → logprob: -10.000604629516602
    7. '100' → logprob: -11.875604629516602
    8. '   ' → logprob: -12.125604629516602
    9. '(S' → logprob: -12.750604629516602
    10. ' ' → logprob: -13.375604629516602

Token 578: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.019468743354082108
    2. ')' → logprob: -4.019468784332275
    3. '):' → logprob: -7.144468784332275
    4. '):
' → logprob: -8.644468307495117
    5. ' +' → logprob: -8.894468307495117
    6. ')
' → logprob: -9.519468307495117
    7. '+)' → logprob: -9.519468307495117
    8. '):

' → logprob: -11.394468307495117
    9. '   ' → logprob: -11.519468307495117
    10. '```' → logprob: -11.644468307495117

Token 579: ' using' (ID: 2360)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1385258585214615
    2. '
' → logprob: -2.76352596282959
    3. 'dp' → logprob: -2.88852596282959
    4. '    
' → logprob: -5.13852596282959
    5. '```' → logprob: -6.26352596282959
    6. ' dp' → logprob: -7.13852596282959
    7. 'DP' → logprob: -7.26352596282959
    8. 'import' → logprob: -7.88852596282959
    9. 'def' → logprob: -9.38852596282959
    10. '_dp' → logprob: -9.38852596282959

Token 580: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.034121397882699966
    2. ' DP' → logprob: -3.784121513366699
    3. 'dp' → logprob: -4.784121513366699
    4. 'dynamic' → logprob: -6.159121513366699
    5. ' dynamic' → logprob: -8.4091215133667
    6. 'a' → logprob: -9.2841215133667
    7. 'memo' → logprob: -11.6591215133667
    8. ' a' → logprob: -12.2841215133667
    9. '```' → logprob: -12.9091215133667
    10. 'Dynamic' → logprob: -13.1591215133667

Token 581: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5370833277702332
    2. '   ' → logprob: -0.9120833277702332
    3. '    
' → logprob: -4.412083148956299
    4. 'dp' → logprob: -7.537083148956299
    5. '```' → logprob: -7.912083148956299
    6. '

' → logprob: -8.537083625793457
    7. '  
' → logprob: -8.912083625793457
    8. '   
' → logprob: -9.037083625793457
    9. '\' → logprob: -9.287083625793457
    10. '
' → logprob: -9.787083625793457

Token 582: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 583: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019794877618551254
    2. 'dp' → logprob: -4.519794940948486
    3. '    
' → logprob: -5.644794940948486
    4. '
' → logprob: -6.019794940948486
    5. ' dp' → logprob: -6.269794940948486
    6. 'DP' → logprob: -7.894794940948486
    7. ' 
' → logprob: -9.269794464111328
    8. '    ' → logprob: -9.519794464111328
    9. ' DP' → logprob: -9.769794464111328
    10. '   
' → logprob: -10.019794464111328

Token 584: '_state' (ID: 9479)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.29884055256843567
    2. '_S' → logprob: -1.4238405227661133
    3. '_' → logprob: -4.548840522766113
    4. '_pos' → logprob: -6.173840522766113
    5. 'S' → logprob: -6.673840522766113
    6. '_s' → logprob: -7.048840522766113
    7. '_val' → logprob: -7.173840522766113
    8. '_value' → logprob: -7.923840522766113
    9. '_size' → logprob: -7.923840522766113
    10. '(S' → logprob: -8.298840522766113

Token 585: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4743329882621765
    2. '=' → logprob: -0.9743329882621765
    3. '+' → logprob: -8.349332809448242
    4. 's' → logprob: -12.474332809448242
    5. '_' → logprob: -12.599332809448242
    6. '+=' → logprob: -12.849332809448242
    7. ' +=' → logprob: -13.099332809448242
    8. ' +' → logprob: -13.099332809448242
    9. '   ' → logprob: -13.599332809448242
    10. '=S' → logprob: -13.974332809448242

Token 586: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1017596647143364
    2. ' S' → logprob: -2.351759672164917
    3. '   ' → logprob: -6.476759433746338
    4. ' ' → logprob: -12.226759910583496
    5. '	S' → logprob: -12.726759910583496
    6. 'int' → logprob: -12.851759910583496
    7. '  ' → logprob: -13.976759910583496
    8. '(S' → logprob: -14.351759910583496
    9. '    ' → logprob: -14.351759910583496
    10. ' int' → logprob: -15.351759910583496

Token 587: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2257869690656662
    2. ' +' → logprob: -1.6007869243621826
    3. '
' → logprob: -8.475787162780762
    4. '+
' → logprob: -9.600787162780762
    5. '<|end|>' → logprob: -9.725787162780762
    6. '<|end|>' → logprob: -11.350787162780762
    7. ' +
' → logprob: -11.350787162780762
    8. ')' → logprob: -12.225787162780762
    9. '   ' → logprob: -13.350787162780762
    10. '```' → logprob: -13.850787162780762

Token 588: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2388877272605896
    2. 'dp' → logprob: -2.6138877868652344
    3. '   ' → logprob: -2.8638877868652344
    4. '+' → logprob: -3.7388877868652344
    5. '    
' → logprob: -4.363887786865234
    6. ' =' → logprob: -4.738887786865234
    7. 'E' → logprob: -4.863887786865234
    8. ' +' → logprob: -5.363887786865234
    9. 'DP' → logprob: -5.613887786865234
    10. '

' → logprob: -5.863887786865234

Token 589: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.10780803859233856
    2. ' dp' → logprob: -2.8578081130981445
    3. 'E' → logprob: -3.3578081130981445
    4. ' E' → logprob: -5.7328081130981445
    5. '   ' → logprob: -5.9828081130981445
    6. 'DP' → logprob: -6.2328081130981445
    7. '
' → logprob: -7.1078081130981445
    8. 'import' → logprob: -7.6078081130981445
    9. ' DP' → logprob: -8.357808113098145
    10. 'from' → logprob: -8.857808113098145

Token 590: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3870154917240143
    2. '=' → logprob: -1.137015461921692
    3. '[' → logprob: -9.012015342712402
    4. '=[' → logprob: -11.512015342712402
    5. ']' → logprob: -12.887015342712402
    6. '_' → logprob: -13.012015342712402
    7. ')' → logprob: -13.637015342712402
    8. '```' → logprob: -13.762015342712402
    9. ' ' → logprob: -13.887015342712402
    10. '=[]' → logprob: -13.887015342712402

Token 591: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006938508013263345
    2. ' [' → logprob: -8.000694274902344
    3. '[-' → logprob: -8.000694274902344
    4. '{' → logprob: -11.000694274902344
    5. '[int' → logprob: -14.375694274902344
    6. '[len' → logprob: -14.500694274902344
    7. '[S' → logprob: -14.625694274902344
    8. '[s' → logprob: -15.000694274902344
    9. '[max' → logprob: -15.000694274902344
    10. '[K' → logprob: -15.000694274902344

Token 592: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00027611342375166714
    2. '-' → logprob: -8.250276565551758
    3. 'None' → logprob: -11.500276565551758
    4. '[' → logprob: -13.000276565551758
    5. 'float' → logprob: -13.125276565551758
    6. '-f' → logprob: -15.875276565551758
    7. ' ' → logprob: -15.875276565551758
    8. '[-' → logprob: -17.250276565551758
    9. 'math' → logprob: -17.500276565551758
    10. '(' → logprob: -17.875276565551758

Token 593: '.' (ID: 13)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004322472028434277
    2. ']*(' → logprob: -5.504322528839111
    3. ']*' → logprob: -9.004322052001953
    4. 'for' → logprob: -9.504322052001953
    5. ' for' → logprob: -10.129322052001953
    6. ']+' → logprob: -13.504322052001953
    7. '   ' → logprob: -13.504322052001953
    8. ' ]' → logprob: -13.629322052001953
    9. '(S' → logprob: -14.129322052001953
    10. '.' → logprob: -14.254322052001953

Token 594: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012809180771000683
    2. 'float' → logprob: -9.375127792358398
    3. '1' → logprob: -11.125127792358398
    4. ']' → logprob: -11.625127792358398
    5. 'for' → logprob: -11.750127792358398
    6. '000' → logprob: -13.250127792358398
    7. '+' → logprob: -13.625127792358398
    8. '```' → logprob: -14.000127792358398
    9. '6' → logprob: -14.125127792358398
    10. 'int' → logprob: -14.375127792358398

Token 595: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004336241167038679
    2. ']*(' → logprob: -5.879336357116699
    3. ' for' → logprob: -7.254336357116699
    4. ']*' → logprob: -7.379336357116699
    5. 'for' → logprob: -8.7543363571167
    6. ']+' → logprob: -10.3793363571167
    7. ' ]' → logprob: -11.6293363571167
    8. ',' → logprob: -14.5043363571167
    9. ')' → logprob: -15.5043363571167
    10. '.' → logprob: -15.8793363571167

Token 596: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.029801173135638237
    2. 'S' → logprob: -3.5298011302948
    3. '(max' → logprob: -10.529801368713379
    4. ' max' → logprob: -10.779801368713379
    5. '[max' → logprob: -13.654801368713379
    6. '(S' → logprob: -15.029801368713379
    7. '   ' → logprob: -15.279801368713379
    8. ' S' → logprob: -15.279801368713379
    9. 'min' → logprob: -15.404801368713379
    10. 'int' → logprob: -15.529801368713379

Token 597: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.00022642381372861564
    2. 'state' → logprob: -8.875226020812988
    3. '+' → logprob: -9.500226020812988
    4. 'S' → logprob: -12.625226020812988
    5. '   ' → logprob: -13.125226020812988
    6. 'State' → logprob: -13.500226020812988
    7. '_STATE' → logprob: -13.875226020812988
    8. ')' → logprob: -14.625226020812988
    9. 'max' → logprob: -14.625226020812988
    10. '_sum' → logprob: -14.875226020812988

Token 598: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00026181264547631145
    2. ' +' → logprob: -8.250262260437012
    3. '+
' → logprob: -15.500262260437012
    4. ')+' → logprob: -15.500262260437012
    5. ']+' → logprob: -17.125261306762695
    6. '```' → logprob: -17.125261306762695
    7. '1' → logprob: -17.500261306762695
    8. '++' → logprob: -17.625261306762695
    9. '()+' → logprob: -17.750261306762695
    10. '
' → logprob: -17.750261306762695

Token 599: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '2' → logprob: -15.250003814697266
    4. '   ' → logprob: -17.000003814697266
    5. '(' → logprob: -19.625003814697266
    6. '{' → logprob: -19.750003814697266
    7. 'S' → logprob: -19.750003814697266
    8. '+' → logprob: -20.125003814697266
    9. ')' → logprob: -20.125003814697266
    10. '  ' → logprob: -20.125003814697266

Token 600: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.286852345103398e-05
    2. ')
' → logprob: -10.250042915344238
    3. ']' → logprob: -12.375042915344238
    4. '+' → logprob: -13.875042915344238
    5. ' )' → logprob: -14.125042915344238
    6. ')]' → logprob: -14.750042915344238
    7. ')

' → logprob: -14.750042915344238
    8. '   ' → logprob: -15.750042915344238
    9. ')
' → logprob: -15.875042915344238
    10. '),' → logprob: -16.375041961669922

Token 601: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5250924229621887
    2. ' for' → logprob: -1.150092363357544
    3. '   ' → logprob: -2.650092363357544
    4. 'dp' → logprob: -4.025092601776123
    5. 'import' → logprob: -7.400092601776123
    6. '
' → logprob: -7.400092601776123
    7. 'sum' → logprob: -7.775092601776123
    8. ' dp' → logprob: -7.900092601776123
    9. 'i' → logprob: -8.150092124938965
    10. ')' → logprob: -8.775092124938965

Token 602: ' prob' (ID: 4921)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.031092824414372444
    2. 'dp' → logprob: -3.781092882156372
    3. 'prob' (adapté à ' prob') → logprob: -5.406092643737793
    4. 'from' → logprob: -5.906092643737793
    5. 'import' → logprob: -7.781092643737793
    6. ' for' → logprob: -9.531092643737793
    7. '```' → logprob: -10.906092643737793
    8. '
' → logprob: -11.031092643737793
    9. 'total' → logprob: -11.281092643737793
    10. 'p' → logprob: -11.281092643737793

Token 603: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9030279517173767
    2. '=' → logprob: -1.1530280113220215
    3. ' =' → logprob: -1.2780280113220215
    4. '_s' → logprob: -9.153027534484863
    5. '_sum' → logprob: -10.028027534484863
    6. '=s' → logprob: -10.278027534484863
    7. '=[]' → logprob: -10.403027534484863
    8. ']' → logprob: -10.903027534484863
    9. ')' → logprob: -11.153027534484863
    10. '_dist' → logprob: -11.278027534484863

Token 604: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004897854290902615
    2. '1' → logprob: -5.7548980712890625
    3. '[K' → logprob: -6.7548980712890625
    4. '[N' → logprob: -7.8798980712890625
    5. ' [' → logprob: -9.004898071289062
    6. '[(' → logprob: -11.629898071289062
    7. '[S' → logprob: -11.754898071289062
    8. '[
' → logprob: -12.379898071289062
    9. '[s' → logprob: -12.629898071289062
    10. '   ' → logprob: -12.754898071289062

Token 605: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05084877833724022
    2. '0' → logprob: -3.0508487224578857
    3. '(' → logprob: -6.800848960876465
    4. ']' → logprob: -7.425848960876465
    5. '[' → logprob: -7.800848960876465
    6. ' ' → logprob: -10.800848960876465
    7. '   ' → logprob: -11.425848960876465
    8. 'N' → logprob: -11.425848960876465
    9. '[N' → logprob: -11.800848960876465
    10. '(N' → logprob: -11.800848960876465

Token 606: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.33206838369369507
    2. '.' → logprob: -1.8320684432983398
    3. ']' → logprob: -2.33206844329834
    4. ']*' → logprob: -3.83206844329834
    5. '.]' → logprob: -5.83206844329834
    6. ']+' → logprob: -8.20706844329834
    7. 'for' → logprob: -8.45706844329834
    8. '*(' → logprob: -8.70706844329834
    9. ' for' → logprob: -10.70706844329834
    10. ' ]' → logprob: -11.08206844329834

Token 607: 'max' (ID: 3228)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.010345474816858768
    2. 'max' → logprob: -4.760345458984375
    3. 'K' → logprob: -6.635345458984375
    4. '(N' → logprob: -8.135345458984375
    5. ' N' → logprob: -10.010345458984375
    6. '(max' → logprob: -10.760345458984375
    7. '(K' → logprob: -11.385345458984375
    8. 'NK' → logprob: -11.885345458984375
    9. ' max' → logprob: -12.135345458984375
    10. '(' → logprob: -12.385345458984375

Token 608: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.21594198048114777
    2. '_sum' → logprob: -1.7159420251846313
    3. 'N' → logprob: -4.715941905975342
    4. 'max' → logprob: -5.340941905975342
    5. 'sum' → logprob: -8.9659423828125
    6. '_S' → logprob: -9.3409423828125
    7. '_STATE' → logprob: -9.3409423828125
    8. '*N' → logprob: -9.3409423828125
    9. 'state' → logprob: -9.5909423828125
    10. '+' → logprob: -10.3409423828125

Token 609: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.075540691614151
    2. '*N' → logprob: -2.700540781021118
    3. '*' → logprob: -5.450540542602539
    4. 'N' → logprob: -7.575540542602539
    5. '   ' → logprob: -8.325540542602539
    6. '1' → logprob: -9.200540542602539
    7. ' +' → logprob: -9.575540542602539
    8. '```' → logprob: -9.575540542602539
    9. '+
' → logprob: -9.825540542602539
    10. '
' → logprob: -10.450540542602539

Token 610: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06383977830410004
    2. 'N' → logprob: -2.9388396739959717
    3. '(N' → logprob: -5.938839912414551
    4. 'K' → logprob: -6.563839912414551
    5. '0' → logprob: -6.688839912414551
    6. '2' → logprob: -6.813839912414551
    7. '(K' → logprob: -7.313839912414551
    8. '(' → logprob: -7.438839912414551
    9. 'S' → logprob: -8.31383991241455
    10. '+' → logprob: -8.68883991241455

Token 611: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011013990733772516
    2. ')
' → logprob: -7.626101493835449
    3. ']' → logprob: -8.37610149383545
    4. '+' → logprob: -8.62610149383545
    5. ')]' → logprob: -9.00110149383545
    6. ' )' → logprob: -10.37610149383545
    7. '   ' → logprob: -11.50110149383545
    8. ')

' → logprob: -12.00110149383545
    9. '[' → logprob: -12.25110149383545
    10. '```' → logprob: -12.25110149383545

Token 612: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2292327880859375
    2. ' for' → logprob: -1.9792327880859375
    3. '   ' → logprob: -3.6042327880859375
    4. 'import' → logprob: -3.7292327880859375
    5. '+' → logprob: -5.6042327880859375
    6. '```' → logprob: -5.8542327880859375
    7. '[' → logprob: -6.2292327880859375
    8. 'from' → logprob: -6.6042327880859375
    9. '
' → logprob: -6.7292327880859375
    10. 'N' → logprob: -7.4792327880859375

Token 613: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1812436282634735
    2. 'from' → logprob: -2.681243658065796
    3. 'N' → logprob: -3.556243658065796
    4. 'i' → logprob: -4.181243419647217
    5. 'total' → logprob: -4.306243419647217
    6. 'import' → logprob: -4.681243419647217
    7. ' for' → logprob: -4.931243419647217
    8. 'steps' → logprob: -5.431243419647217
    9. 'sum' → logprob: -5.931243419647217
    10. '1' → logprob: -5.931243419647217

Token 614: ' Pre' (ID: 4659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17539459466934204
    2. 'total' → logprob: -2.8003945350646973
    3. 'step' → logprob: -3.1753945350646973
    4. 'from' → logprob: -3.5503945350646973
    5. 'prob' → logprob: -4.675394535064697
    6. 'steps' → logprob: -5.050394535064697
    7. 'sum' → logprob: -5.550394535064697
    8. 'N' → logprob: -5.925394535064697
    9. ' for' → logprob: -6.925394535064697
    10. 'import' → logprob: -6.925394535064697

Token 615: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.47040289640426636
    2. 'sum' → logprob: -1.4704029560089111
    3. 'for' → logprob: -2.095402956008911
    4. '#' → logprob: -5.595402717590332
    5. 'from' → logprob: -5.720402717590332
    6. 'dict' → logprob: -5.845402717590332
    7. 'def' → logprob: -5.970402717590332
    8. 'pare' → logprob: -6.220402717590332
    9. 'computed' → logprob: -6.470402717590332
    10. '_sum' → logprob: -6.970402717590332

Token 616: ' distribution' (ID: 12545)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.33836430311203003
    2. 'for' → logprob: -1.9633643627166748
    3. 'freq' → logprob: -3.338364362716675
    4. 'N' → logprob: -3.838364362716675
    5. 'dp' → logprob: -3.963364362716675
    6. ' for' → logprob: -4.088364124298096
    7. 'count' → logprob: -4.338364124298096
    8. 'ways' → logprob: -5.213364124298096
    9. ' prob' → logprob: -5.588364124298096
    10. 'range' → logprob: -5.588364124298096

Token 617: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6677330732345581
    2. 'for' → logprob: -1.292733073234558
    3. 'prob' → logprob: -3.2927331924438477
    4. '=' → logprob: -3.4177331924438477
    5. ' for' → logprob: -3.4177331924438477
    6. 'count' → logprob: -3.7927331924438477
    7. 'freq' → logprob: -4.417733192443848
    8. 's' → logprob: -4.792733192443848
    9. 'steps' → logprob: -4.917733192443848
    10. '[N' → logprob: -4.917733192443848

Token 618: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3706313967704773
    2. 'steps' → logprob: -1.495631456375122
    3. 'prob' → logprob: -3.245631456375122
    4. 's' → logprob: -3.370631456375122
    5. 'possible' → logprob: -5.870631217956543
    6. 'dp' → logprob: -6.120631217956543
    7. 'import' → logprob: -6.745631217956543
    8. 'range' → logprob: -6.745631217956543
    9. 'ranges' → logprob: -7.370631217956543
    10. 'tokens' → logprob: -7.495631217956543

Token 619: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3814784288406372
    2. '_prob' → logprob: -1.5064784288406372
    3. '_steps' → logprob: -1.8814784288406372
    4. ' =' → logprob: -2.0064783096313477
    5. '_probs' → logprob: -2.5064783096313477
    6. '_of' → logprob: -3.1314783096313477
    7. '_counts' → logprob: -3.6314783096313477
    8. 's' → logprob: -4.256478309631348
    9. '_sum' → logprob: -5.006478309631348
    10. 'prob' → logprob: -5.506478309631348

Token 620: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.013389267027378082
    2. '1' → logprob: -5.3883891105651855
    3. 'k' → logprob: -5.3883891105651855
    4. 'tokens' → logprob: -6.1383891105651855
    5. 'range' → logprob: -7.8883891105651855
    6. '[' → logprob: -8.013389587402344
    7. ' K' → logprob: -8.263389587402344
    8. '```' → logprob: -8.388389587402344
    9. 'steps' → logprob: -8.638389587402344
    10. 'ranges' → logprob: -9.138389587402344

Token 621: ' uniform' (ID: 21219)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.576124906539917
    2. 'N' → logprob: -1.951124906539917
    3. ' N' → logprob: -2.451124906539917
    4. ' numbers' → logprob: -2.701124906539917
    5. 'tokens' → logprob: -2.701124906539917
    6. '*N' → logprob: -3.076124906539917
    7. 'steps' → logprob: -3.201124906539917
    8. 'import' → logprob: -3.326124906539917
    9. ' steps' → logprob: -3.451124906539917
    10. 'inte' → logprob: -3.451124906539917

Token 622: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47335344552993774
    2. 'inte' → logprob: -1.348353385925293
    3. 'numbers' → logprob: -3.723353385925293
    4. ' (' → logprob: -3.848353385925293
    5. '[' → logprob: -3.973353385925293
    6. '(range' → logprob: -4.098353385925293
    7. 'ints' → logprob: -4.223353385925293
    8. ' integers' → logprob: -4.973353385925293
    9. '1' → logprob: -5.723353385925293
    10. 'tokens' → logprob: -6.098353385925293

Token 623: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8217750191688538
    2. '1' → logprob: -0.9467750191688538
    3. 'range' → logprob: -2.321774959564209
    4. ' range' → logprob: -4.071774959564209
    5. '(' → logprob: -4.321774959564209
    6. '(range' → logprob: -4.446774959564209
    7. 'import' → logprob: -4.571774959564209
    8. '[' → logprob: -4.821774959564209
    9. ' N' → logprob: -5.571774959564209
    10. ' ' → logprob: -6.321774959564209

Token 624: '..' (ID: 485)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 625: 'N' (ID: 45)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 626: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013602840714156628
    2. ')s' → logprob: -4.8886027336120605
    3. ')
' → logprob: -6.3886027336120605
    4. 's' → logprob: -6.3886027336120605
    5. 'numbers' → logprob: -7.5136027336120605
    6. ')**' → logprob: -8.138603210449219
    7. ')]' → logprob: -8.513603210449219
    8. 'ranges' → logprob: -8.888603210449219
    9. ')+' → logprob: -9.138603210449219
    10. '))' → logprob: -9.138603210449219

Token 627: '   ' (ID: 271)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3731187880039215
    2. ' from' → logprob: -2.8731188774108887
    3. 'import' → logprob: -2.9981188774108887
    4. 'dp' → logprob: -2.9981188774108887
    5. ' =' → logprob: -4.123118877410889
    6. ')' → logprob: -4.373118877410889
    7. '
' → logprob: -4.373118877410889
    8. 's' → logprob: -4.498118877410889
    9. '```' → logprob: -4.498118877410889
    10. ':' → logprob: -4.873118877410889

Token 628: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07015049457550049
    2. 'import' → logprob: -4.070150375366211
    3. ' from' → logprob: -4.195150375366211
    4. 'sum' → logprob: -4.445150375366211
    5. 'dp' → logprob: -4.695150375366211
    6. 'distribution' → logprob: -5.445150375366211
    7. 'count' → logprob: -5.945150375366211
    8. 'ways' → logprob: -6.445150375366211
    9. 'dist' → logprob: -6.445150375366211
    10. 'freq' → logprob: -6.445150375366211

Token 629: ' Use' (ID: 7649)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.12690070271492004
    2. 'dp' → logprob: -2.7519006729125977
    3. 'for' → logprob: -3.8769006729125977
    4. 'prob' → logprob: -4.501900672912598
    5. 'import' → logprob: -5.001900672912598
    6. '#' → logprob: -5.251900672912598
    7. 'dist' → logprob: -6.251900672912598
    8. 'distribution' → logprob: -6.251900672912598
    9. 'sum' → logprob: -6.376900672912598
    10. ' from' → logprob: -6.751900672912598

Token 630: ' DP' (ID: 51992)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -1.3484543561935425
    2. 'from' → logprob: -1.4734543561935425
    3. 'fft' → logprob: -1.4734543561935425
    4. 'dp' → logprob: -2.223454475402832
    5. 'con' → logprob: -3.348454475402832
    6. 'math' → logprob: -3.723454475402832
    7. 'com' → logprob: -3.973454475402832
    8. 'FFT' → logprob: -4.098454475402832
    9. 'dynamic' → logprob: -4.348454475402832
    10. 'import' → logprob: -4.473454475402832

Token 631: ' to' (ID: 316)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06396033614873886
    2. 'for' → logprob: -3.563960313796997
    3. ' for' → logprob: -4.563960552215576
    4. '
' → logprob: -5.563960552215576
    5. ' dp' → logprob: -5.813960552215576
    6. 'prob' → logprob: -5.813960552215576
    7. '   ' → logprob: -5.938960552215576
    8. '[' → logprob: -6.188960552215576
    9. ' =' → logprob: -6.313960552215576
    10. 'def' → logprob: -6.813960552215576

Token 632: ' get' (ID: 717)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.18336626887321472
    2. 'calculate' → logprob: -2.058366298675537
    3. 'count' → logprob: -3.433366298675537
    4. ' compute' → logprob: -5.558366298675537
    5. 'build' → logprob: -6.808366298675537
    6. 'get' → logprob: -7.433366298675537
    7. ' calculate' → logprob: -8.183365821838379
    8. 'pre' → logprob: -8.308365821838379
    9. 'simulate' → logprob: -8.808365821838379
    10. 'com' → logprob: -8.933365821838379

Token 633: ' count' (ID: 3605)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.19693149626255035
    2. 'dp' → logprob: -2.0719316005706787
    3. '[' → logprob: -3.5719316005706787
    4. 'count' → logprob: -4.8219313621521
    5. 'sum' → logprob: -5.5719313621521
    6. 'counts' → logprob: -5.6969313621521
    7. 'distribution' → logprob: -6.5719313621521
    8. 'the' → logprob: -6.9469313621521
    9. ' ways' → logprob: -7.3219313621521
    10. 'ways' → logprob: -7.3219313621521

Token 634: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5845706462860107
    2. 'dp' → logprob: -1.7095706462860107
    3. '[' → logprob: -1.8345706462860107
    4. '_dp' → logprob: -2.0845706462860107
    5. ' =' → logprob: -2.3345706462860107
    6. '_prob' → logprob: -3.2095706462860107
    7. '_s' → logprob: -3.2095706462860107
    8. '_sum' → logprob: -3.5845706462860107
    9. 'for' → logprob: -4.58457088470459
    10. '_k' → logprob: -4.58457088470459

Token 635: ' ways' (ID: 6984)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5282111763954163
    2. 'ways' → logprob: -1.4032111167907715
    3. 's' → logprob: -2.7782111167907715
    4. ' ways' → logprob: -3.4032111167907715
    5. 'possible' → logprob: -3.5282111167907715
    6. 'prob' → logprob: -4.0282111167907715
    7. ' sums' → logprob: -5.0282111167907715
    8. ' sum' → logprob: -6.0282111167907715
    9. 'k' → logprob: -6.1532111167907715
    10. 'K' → logprob: -6.1532111167907715

Token 636: ' to' (ID: 316)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09075477719306946
    2. 'for' → logprob: -3.840754747390747
    3. '[' → logprob: -4.090754985809326
    4. ' =' → logprob: -4.215754985809326
    5. '   ' → logprob: -4.215754985809326
    6. ' to' → logprob: -5.465754985809326
    7. '_dp' → logprob: -5.465754985809326
    8. ' for' → logprob: -5.840754985809326
    9. '=' → logprob: -7.340754985809326
    10. ' dp' → logprob: -7.715754985809326

Token 637: ' make' (ID: 1520)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.579553484916687
    2. 'ach' → logprob: -1.704553484916687
    3. 'reach' → logprob: -1.829553484916687
    4. 'sum' → logprob: -3.0795536041259766
    5. 'ob' → logprob: -3.9545536041259766
    6. 'form' → logprob: -4.204553604125977
    7. 'make' → logprob: -4.329553604125977
    8. '   ' → logprob: -6.954553604125977
    9. ' get' → logprob: -7.329553604125977
    10. 'compose' → logprob: -7.954553604125977

Token 638: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.1299089640378952
    2. 's' → logprob: -2.379909038543701
    3. ' sum' → logprob: -5.004909038543701
    4. 'j' → logprob: -5.379909038543701
    5. 'i' → logprob: -5.504909038543701
    6. ' s' → logprob: -5.629909038543701
    7. 'prob' → logprob: -5.879909038543701
    8. '0' → logprob: -6.879909038543701
    9. '   ' → logprob: -6.879909038543701
    10. 'k' → logprob: -7.004909038543701

Token 639: ' s' (ID: 265)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7928929328918457
    2. '=' → logprob: -2.6678929328918457
    3. '[' → logprob: -2.6678929328918457
    4. 's' → logprob: -2.7928929328918457
    5. 'for' → logprob: -2.7928929328918457
    6. '   ' → logprob: -2.9178929328918457
    7. '[K' → logprob: -3.1678929328918457
    8. 'from' → logprob: -3.4178929328918457
    9. '(' → logprob: -3.6678929328918457
    10. '(K' → logprob: -4.042892932891846

Token 640: ' from' (ID: 591)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4135153591632843
    2. ' =' → logprob: -1.663515329360962
    3. 'ways' → logprob: -2.538515329360962
    4. 'for' → logprob: -3.538515329360962
    5. 'count' → logprob: -4.663515567779541
    6. '=' → logprob: -4.788515567779541
    7. 'from' → logprob: -5.288515567779541
    8. '
' → logprob: -5.663515567779541
    9. '[' → logprob: -5.663515567779541
    10. 'counts' → logprob: -5.788515567779541

Token 641: ' K' (ID: 658)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09859593212604523
    2. 'K' → logprob: -2.7235958576202393
    3. ' K' → logprob: -4.848596096038818
    4. 'range' → logprob: -4.973596096038818
    5. 'k' → logprob: -5.098596096038818
    6. ' ' → logprob: -5.473596096038818
    7. ' range' → logprob: -6.973596096038818
    8. '   ' → logprob: -7.473596096038818
    9. '[' → logprob: -7.973596096038818
    10. ' k' → logprob: -8.34859561920166

Token 642: ' to' (ID: 316)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.867274522781372
    2. 'N' → logprob: -2.117274522781372
    3. '*N' → logprob: -2.242274522781372
    4. 'range' → logprob: -2.617274522781372
    5. 'tokens' → logprob: -2.617274522781372
    6. 'for' → logprob: -2.867274522781372
    7. '..' → logprob: -2.992274522781372
    8. 'import' → logprob: -2.992274522781372
    9. 'to' → logprob: -3.242274522781372
    10. '1' → logprob: -3.617274522781372

Token 643: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.009625876322388649
    2. 'N' → logprob: -5.1346259117126465
    3. '(K' → logprob: -6.3846259117126465
    4. ' K' → logprob: -7.1346259117126465
    5. '(N' → logprob: -8.509625434875488
    6. 'S' → logprob: -8.509625434875488
    7. '1' → logprob: -8.634625434875488
    8. 'max' → logprob: -8.884625434875488
    9. ' (' → logprob: -8.884625434875488
    10. 's' → logprob: -9.634625434875488

Token 644: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.03882453590631485
    2. 'N' → logprob: -3.2888245582580566
    3. '*' → logprob: -7.788824558258057
    4. '```' → logprob: -8.538824081420898
    5. '*K' → logprob: -10.413824081420898
    6. '*(' → logprob: -10.413824081420898
    7. '**' → logprob: -10.788824081420898
    8. '
' → logprob: -10.913824081420898
    9. ' *' → logprob: -11.288824081420898
    10. '*S' → logprob: -11.288824081420898

Token 645: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08180902153253555
    2. 'ways' → logprob: -3.4568090438842773
    3. 'for' → logprob: -3.8318090438842773
    4. 'count' → logprob: -4.081809043884277
    5. '
' → logprob: -5.956809043884277
    6. '   ' → logprob: -5.956809043884277
    7. ' =' → logprob: -6.956809043884277
    8. 'counts' → logprob: -7.456809043884277
    9. 'cnt' → logprob: -7.956809043884277
    10. '=' → logprob: -8.456809043884277

Token 646: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.46203741431236267
    2. '   ' → logprob: -1.212037444114685
    3. 'count' → logprob: -2.9620373249053955
    4. 'ways' → logprob: -4.337037563323975
    5. 'for' → logprob: -5.962037563323975
    6. 'cnt' → logprob: -5.962037563323975
    7. ' dp' → logprob: -7.462037563323975
    8. ' ways' → logprob: -7.962037563323975
    9. 'counts' → logprob: -7.962037563323975
    10. 'cur' → logprob: -8.087037086486816

Token 647: ' max' (ID: 2999)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.3730509281158447
    2. 'count' → logprob: -1.8730509281158447
    3. 'dp' → logprob: -1.8730509281158447
    4. 'cnt' → logprob: -5.873050689697266
    5. ' ways' → logprob: -7.748050689697266
    6. 'from' → logprob: -7.998050689697266
    7. 'counts' → logprob: -7.998050689697266
    8. '   ' → logprob: -9.998050689697266
    9. ' dp' → logprob: -10.248050689697266
    10. 'for' → logprob: -10.998050689697266

Token 648: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0001005630983854644
    2. '_val' → logprob: -9.625100135803223
    3. '_' → logprob: -11.125100135803223
    4. '_s' → logprob: -11.750100135803223
    5. 'sum' → logprob: -11.750100135803223
    6. '_state' → logprob: -13.250100135803223
    7. '_len' → logprob: -14.500100135803223
    8. '_SUM' → logprob: -15.000100135803223
    9. 'Sum' → logprob: -15.125100135803223
    10. '_value' → logprob: -15.125100135803223

Token 649: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17245054244995117
    2. ' =' → logprob: -2.047450542449951
    3. '+' → logprob: -3.547450542449951
    4. ' +' → logprob: -8.04745101928711
    5. '   ' → logprob: -9.29745101928711
    6. '+=' → logprob: -10.29745101928711
    7. '=N' → logprob: -10.54745101928711
    8. '```' → logprob: -11.29745101928711
    9. ')' → logprob: -11.54745101928711
    10. '=max' → logprob: -11.79745101928711

Token 650: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0789341852068901
    2. 'N' → logprob: -2.5789341926574707
    3. ' K' → logprob: -10.328933715820312
    4. ' N' → logprob: -12.703933715820312
    5. '(K' → logprob: -12.703933715820312
    6. 'int' → logprob: -13.203933715820312
    7. '   ' → logprob: -13.453933715820312
    8. '(N' → logprob: -14.078933715820312
    9. '[K' → logprob: -14.578933715820312
    10. ' ' → logprob: -15.328933715820312

Token 651: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -4.870950215263292e-05
    2. ' *' → logprob: -11.375048637390137
    3. 'N' → logprob: -11.500048637390137
    4. '*' → logprob: -11.625048637390137
    5. '```' → logprob: -11.750048637390137
    6. '**' → logprob: -12.250048637390137
    7. '*n' → logprob: -13.375048637390137
    8. '*(' → logprob: -13.625048637390137
    9. '
' → logprob: -13.750048637390137
    10. '*K' → logprob: -14.375048637390137

Token 652: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.698981761932373
    2. 'dp' → logprob: -0.948981761932373
    3. '
' → logprob: -2.573981761932373
    4. 'ways' → logprob: -3.948981761932373
    5. 'count' → logprob: -4.198981761932373
    6. ' +' → logprob: -6.198981761932373
    7. 'counts' → logprob: -6.698981761932373
    8. '+
' → logprob: -7.573981761932373
    9. 'cnt' → logprob: -7.573981761932373
    10. 'prob' → logprob: -8.698982238769531

Token 653: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3008171617984772
    2. '+' → logprob: -1.5508171319961548
    3. '
' → logprob: -3.5508172512054443
    4. 'count' → logprob: -4.550817012786865
    5. 'ways' → logprob: -5.800817012786865
    6. ' +' → logprob: -7.050817012786865
    7. '```' → logprob: -7.050817012786865
    8. ' =' → logprob: -7.175817012786865
    9. 'cnt' → logprob: -7.300817012786865
    10. 'counts' → logprob: -7.425817012786865

Token 654: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -0.18774420022964478
    2. 'dp' → logprob: -1.937744140625
    3. 'count' → logprob: -3.687744140625
    4. 'from' → logprob: -6.937744140625
    5. 'cnt' → logprob: -7.562744140625
    6. 'counts' → logprob: -8.187744140625
    7. ' ways' → logprob: -8.312744140625
    8. 'way' → logprob: -10.187744140625
    9. 'for' → logprob: -10.937744140625
    10. '   ' → logprob: -11.062744140625

Token 655: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11304794251918793
    2. ' =' → logprob: -2.2380478382110596
    3. '=[' → logprob: -8.86304759979248
    4. '[' → logprob: -9.73804759979248
    5. '   ' → logprob: -11.61304759979248
    6. '```' → logprob: -11.86304759979248
    7. '=[]' → logprob: -13.11304759979248
    8. ']' → logprob: -13.48804759979248
    9. ')' → logprob: -13.98804759979248
    10. ' ' → logprob: -14.23804759979248

Token 656: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10177312046289444
    2. '[K' → logprob: -2.3517730236053467
    3. '[k' → logprob: -7.351773262023926
    4. ' [' → logprob: -7.351773262023926
    5. '[[' → logprob: -8.351773262023926
    6. '{' → logprob: -10.226773262023926
    7. '[s' → logprob: -12.976773262023926
    8. '[int' → logprob: -13.351773262023926
    9. '[N' → logprob: -13.726773262023926
    10. '   ' → logprob: -13.726773262023926

Token 657: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010424555512145162
    2. '[' → logprob: -6.876042366027832
    3. '1' → logprob: -12.501042366027832
    4. '[K' → logprob: -13.251042366027832
    5. ' ' → logprob: -13.626042366027832
    6. ' [' → logprob: -13.876042366027832
    7. '[int' → logprob: -14.251042366027832
    8. ']' → logprob: -15.001042366027832
    9. '{' → logprob: -15.376042366027832
    10. '(' → logprob: -16.00104331970215

Token 658: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.23112310469150543
    2. ']' → logprob: -1.6061230897903442
    3. ']*' → logprob: -5.981122970581055
    4. '*(' → logprob: -6.356122970581055
    5. ']+' → logprob: -7.731122970581055
    6. ' for' → logprob: -7.981122970581055
    7. 'for' → logprob: -8.481122970581055
    8. '   ' → logprob: -9.231122970581055
    9. '[' → logprob: -9.356122970581055
    10. '*' → logprob: -9.856122970581055

Token 659: 'max' (ID: 3228)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.47482529282569885
    2. 'max' → logprob: -0.9748252630233765
    3. '((' → logprob: -8.099824905395508
    4. '(K' → logprob: -8.349824905395508
    5. ' max' → logprob: -9.599824905395508
    6. '(' → logprob: -9.974824905395508
    7. '[max' → logprob: -9.974824905395508
    8. ' (' → logprob: -10.349824905395508
    9. '(int' → logprob: -11.849824905395508
    10. '(N' → logprob: -12.724824905395508

Token 660: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0019353042589500546
    2. 'sum' → logprob: -6.2519354820251465
    3. '_max' → logprob: -14.001935005187988
    4. '1' → logprob: -14.001935005187988
    5. 'Sum' → logprob: -14.001935005187988
    6. 'N' → logprob: -14.376935005187988
    7. '_' → logprob: -14.626935005187988
    8. '   ' → logprob: -14.751935005187988
    9. 'max' → logprob: -14.876935005187988
    10. '
' → logprob: -14.876935005187988

Token 661: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.615255839889869e-05
    2. ' +' → logprob: -9.375096321105957
    3. '-' → logprob: -11.500096321105957
    4. '+
' → logprob: -15.000096321105957
    5. ' -' → logprob: -15.125096321105957
    6. '```' → logprob: -16.12509536743164
    7. '1' → logprob: -16.37509536743164
    8. '()+' → logprob: -16.75009536743164
    9. ']+' → logprob: -17.00009536743164
    10. ')+' → logprob: -17.12509536743164

Token 662: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. '2' → logprob: -12.625007629394531
    3. ' ' → logprob: -13.250007629394531
    4. '5' → logprob: -14.125007629394531
    5. '10' → logprob: -14.375007629394531
    6. '+' → logprob: -14.500007629394531
    7. '3' → logprob: -16.00000762939453
    8. '100' → logprob: -16.12500762939453
    9. '01' → logprob: -16.81250762939453
    10. '0' → logprob: -16.87500762939453

Token 663: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005971930921077728
    2. ')
' → logprob: -5.130971908569336
    3. '   ' → logprob: -10.630971908569336
    4. ' )' → logprob: -12.130971908569336
    5. ')
' → logprob: -12.380971908569336
    6. ']' → logprob: -12.505971908569336
    7. '```' → logprob: -13.505971908569336
    8. ')

' → logprob: -13.630971908569336
    9. '+' → logprob: -13.630971908569336
    10. '
' → logprob: -15.005971908569336

Token 664: '   ' (ID: 271)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.008283467032015324
    2. ' ways' → logprob: -5.008283615112305
    3. 'for' → logprob: -6.758283615112305
    4. '   ' → logprob: -8.508283615112305
    5. ' for' → logprob: -9.008283615112305
    6. '```' → logprob: -10.633283615112305
    7. 'dp' → logprob: -11.258283615112305
    8. 'K' → logprob: -11.258283615112305
    9. 'current' → logprob: -11.883283615112305
    10. 'count' → logprob: -11.883283615112305

Token 665: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -7.457669562427327e-05
    2. 'for' → logprob: -9.87507438659668
    3. ' ways' → logprob: -11.37507438659668
    4. 'way' → logprob: -12.75007438659668
    5. 'from' → logprob: -13.12507438659668
    6. '#' → logprob: -13.62507438659668
    7. 'import' → logprob: -13.62507438659668
    8. '0' → logprob: -14.25007438659668
    9. 'dp' → logprob: -14.25007438659668
    10. '```' → logprob: -14.37507438659668

Token 666: '_prev' (ID: 60491)
  Prédit: '[K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[K' → logprob: -0.002613355638459325
    2. '[' → logprob: -6.002613544464111
    3. '[k' → logprob: -9.752613067626953
    4. '[S' → logprob: -10.627613067626953
    5. ' =' → logprob: -10.877613067626953
    6. '[max' → logprob: -11.502613067626953
    7. '[min' → logprob: -11.752613067626953
    8. '=' → logprob: -12.502613067626953
    9. '[-' → logprob: -13.002613067626953
    10. ' [' → logprob: -13.252613067626953

Token 667: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1802138239145279
    2. ' =' → logprob: -1.8052138090133667
    3. '=[' → logprob: -8.430213928222656
    4. '[' → logprob: -8.680213928222656
    5. ']' → logprob: -10.680213928222656
    6. '=[]' → logprob: -10.680213928222656
    7. ' =[' → logprob: -11.305213928222656
    8. ']=' → logprob: -12.055213928222656
    9. '_' → logprob: -12.305213928222656
    10. ')' → logprob: -12.555213928222656

Token 668: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0040956162847578526
    2. '[K' → logprob: -5.504095554351807
    3. ' [' → logprob: -11.504096031188965
    4. '[k' → logprob: -12.754096031188965
    5. '[N' → logprob: -13.254096031188965
    6. '[S' → logprob: -14.379096031188965
    7. 'K' → logprob: -15.004096031188965
    8. '0' → logprob: -15.254096031188965
    9. '{' → logprob: -15.504096031188965
    10. '1' → logprob: -15.504096031188965

Token 669: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001169152557849884
    2. '[' → logprob: -7.126169204711914
    3. '1' → logprob: -8.126169204711914
    4. '[K' → logprob: -10.126169204711914
    5. 'K' → logprob: -11.626169204711914
    6. '{' → logprob: -12.126169204711914
    7. '(' → logprob: -12.626169204711914
    8. ' [' → logprob: -13.126169204711914
    9. ' ' → logprob: -13.376169204711914
    10. 'ways' → logprob: -13.751169204711914

Token 670: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.22819221019744873
    2. '*(' → logprob: -1.6031922101974487
    3. '(max' → logprob: -7.228192329406738
    4. ']' → logprob: -7.478192329406738
    5. ')*(' → logprob: -7.978192329406738
    6. ']*' → logprob: -8.103192329406738
    7. '   ' → logprob: -8.603192329406738
    8. '(K' → logprob: -8.978192329406738
    9. '*' → logprob: -9.228192329406738
    10. ']+' → logprob: -9.478192329406738

Token 671: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00043698702938854694
    2. '(max' → logprob: -7.750436782836914
    3. ' max' → logprob: -12.125436782836914
    4. '(K' → logprob: -14.625436782836914
    5. 'min' → logprob: -16.625436782836914
    6. '(' → logprob: -16.625436782836914
    7. 'K' → logprob: -16.750436782836914
    8. '[max' → logprob: -17.000436782836914
    9. '(N' → logprob: -17.125436782836914
    10. 'N' → logprob: -17.250436782836914

Token 672: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0015002215513959527
    2. 'sum' → logprob: -6.876500129699707
    3. 'N' → logprob: -7.876500129699707
    4. '_max' → logprob: -10.126500129699707
    5. 'max' → logprob: -10.376500129699707
    6. '1' → logprob: -12.376500129699707
    7. '_' → logprob: -13.001500129699707
    8. '_min' → logprob: -13.126500129699707
    9. '0' → logprob: -14.001500129699707
    10. '_state' → logprob: -14.251500129699707

Token 673: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.967624019831419e-05
    2. '-' → logprob: -10.125060081481934
    3. ' +' → logprob: -12.125060081481934
    4. 'N' → logprob: -12.750060081481934
    5. '```' → logprob: -12.875060081481934
    6. '   ' → logprob: -13.000060081481934
    7. 'max' → logprob: -13.250060081481934
    8. '*' → logprob: -14.125060081481934
    9. '*N' → logprob: -14.125060081481934
    10. '
' → logprob: -14.750060081481934

Token 674: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.096126576769166e-05
    2. '(' → logprob: -10.750041007995605
    3. '0' → logprob: -12.500041007995605
    4. '4' → logprob: -12.500041007995605
    5. '(K' → logprob: -12.750041007995605
    6. '5' → logprob: -13.250041007995605
    7. '2' → logprob: -13.500041007995605
    8. ' ' → logprob: -13.625041007995605
    9. '(N' → logprob: -13.750041007995605
    10. '3' → logprob: -14.000041007995605

Token 675: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3149348795413971
    2. ')
' → logprob: -1.3149348497390747
    3. '   ' → logprob: -6.439934730529785
    4. ')
' → logprob: -10.189934730529785
    5. ')

' → logprob: -10.689934730529785
    6. ']' → logprob: -12.064934730529785
    7. ')]' → logprob: -13.064934730529785
    8. '
' → logprob: -13.939934730529785
    9. ']
' → logprob: -14.064934730529785
    10. ' )' → logprob: -14.064934730529785

Token 676: '   ' (ID: 271)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.003137078369036317
    2. 'for' → logprob: -6.253137111663818
    3. '   ' → logprob: -7.253137111663818
    4. '```' → logprob: -7.753137111663818
    5. ' ways' → logprob: -9.87813663482666
    6. ' for' → logprob: -12.00313663482666
    7. '`' → logprob: -13.00313663482666
    8. '    
' → logprob: -13.37813663482666
    9. '#' → logprob: -13.50313663482666
    10. '
' → logprob: -13.87813663482666

Token 677: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -0.007787966635078192
    2. 'for' → logprob: -4.882788181304932
    3. '   ' → logprob: -9.507787704467773
    4. '```' → logprob: -9.757787704467773
    5. ' ways' → logprob: -10.507787704467773
    6. ' for' → logprob: -12.132787704467773
    7. '#' → logprob: -12.382787704467773
    8. 'way' → logprob: -13.007787704467773
    9. 'import' → logprob: -13.132787704467773
    10. '       ' → logprob: -13.632787704467773

Token 678: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.003787250490859151
    2. '[' → logprob: -6.003787040710449
    3. '[K' → logprob: -7.503787040710449
    4. '[_' → logprob: -8.12878704071045
    5. ' =' → logprob: -8.62878704071045
    6. '=' → logprob: -9.00378704071045
    7. '_' → logprob: -10.25378704071045
    8. '=_' → logprob: -10.62878704071045
    9. '```' → logprob: -10.62878704071045
    10. 'prev' → logprob: -10.87878704071045

Token 679: '[' (ID: 58)
  Prédit: '[K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[K' → logprob: -0.062230512499809265
    2. '[' → logprob: -2.8122305870056152
    3. 'K' → logprob: -9.812230110168457
    4. '[k' → logprob: -9.937230110168457
    5. ' =' → logprob: -10.062230110168457
    6. '=' → logprob: -10.312230110168457
    7. '[S' → logprob: -10.687230110168457
    8. '[max' → logprob: -11.062230110168457
    9. '[min' → logprob: -11.812230110168457
    10. '[:]' → logprob: -12.062230110168457

Token 680: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009769427590072155
    2. 'K' → logprob: -4.634769439697266
    3. 'k' → logprob: -11.884769439697266
    4. ' ' → logprob: -13.134769439697266
    5. ' K' → logprob: -13.884769439697266
    6. '[' → logprob: -14.322269439697266
    7. '[K' → logprob: -14.634769439697266
    8. '1' → logprob: -14.822269439697266
    9. 'min' → logprob: -15.134769439697266
    10. '(' → logprob: -15.572269439697266

Token 681: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01738065294921398
    2. ']=' → logprob: -4.267380714416504
    3. '=' → logprob: -5.767380714416504
    4. ' ]' → logprob: -9.767380714416504
    5. ' =' → logprob: -11.142380714416504
    6. ']+=' → logprob: -12.267380714416504
    7. '   ' → logprob: -12.392380714416504
    8. '[' → logprob: -14.267380714416504
    9. ')' → logprob: -14.642380714416504
    10. '	' → logprob: -15.017380714416504

Token 682: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00033546582562848926
    2. ' =' → logprob: -8.000335693359375
    3. '=
' → logprob: -18.125335693359375
    4. '=

' → logprob: -19.250335693359375
    5. '=}' → logprob: -20.625335693359375
    6. ']=' → logprob: -20.625335693359375
    7. '＝' → logprob: -21.000335693359375
    8. '=int' → logprob: -21.125335693359375
    9. '=True' → logprob: -21.250335693359375
    10. '.=' → logprob: -21.250335693359375

Token 683: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '0' → logprob: -12.500003814697266
    3. ' ' → logprob: -16.625003814697266
    4. '   ' → logprob: -19.187503814697266
    5. '```' → logprob: -19.250003814697266
    6. '۱' → logprob: -20.062503814697266
    7. '...' → logprob: -20.125003814697266
    8. '`' → logprob: -20.375003814697266
    9. '{' → logprob: -20.625003814697266
    10. '[' → logprob: -20.937503814697266

Token 684: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. '0' → logprob: -11.25001335144043
    3. ' ' → logprob: -19.50001335144043
    4. '```' → logprob: -20.87501335144043
    5. '`' → logprob: -21.12501335144043
    6. '{' → logprob: -21.12501335144043
    7. '   ' → logprob: -21.12501335144043
    8. '[' → logprob: -21.12501335144043
    9. '۱' → logprob: -22.25001335144043
    10. 'int' → logprob: -22.56251335144043

Token 685: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7975550889968872
    2. '
' → logprob: -1.0475550889968872
    3. ' for' → logprob: -2.2975549697875977
    4. 'for' → logprob: -2.6725549697875977
    5. '	for' → logprob: -4.797554969787598
    6. '    
' → logprob: -5.172554969787598
    7. ' 
' → logprob: -5.172554969787598
    8. '	
' → logprob: -5.672554969787598
    9. '\n' → logprob: -5.922554969787598
    10. '\t' → logprob: -6.672554969787598

Token 686: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.753237247467041
    2. '   ' → logprob: -0.878237247467041
    3. ' for' → logprob: -2.253237247467041
    4. '	for' → logprob: -5.378237247467041
    5. '
' → logprob: -6.378237247467041
    6. '```' → logprob: -6.753237247467041
    7. '    
' → logprob: -7.753237247467041
    8. '<|end|>' → logprob: -8.253236770629883
    9. '  
' → logprob: -9.503236770629883
    10. '\t' → logprob: -10.003236770629883

Token 687: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04642682150006294
    2. ' for' → logprob: -3.296426773071289
    3. '   ' → logprob: -4.796426773071289
    4. '	for' → logprob: -9.546426773071289
    5. '    
' → logprob: -11.671426773071289
    6. '
' → logprob: -13.046426773071289
    7. '```' → logprob: -13.046426773071289
    8. ' 
' → logprob: -13.671426773071289
    9. 'i' → logprob: -13.921426773071289
    10. ' ' → logprob: -14.171426773071289

Token 688: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5467308759689331
    2. '_i' → logprob: -1.296730875968933
    3. '_step' → logprob: -3.0467309951782227
    4. '_k' → logprob: -3.1717309951782227
    5. 'i' → logprob: -3.2967309951782227
    6. 'step' → logprob: -4.546730995178223
    7. 'k' → logprob: -5.296730995178223
    8. ' _' → logprob: -5.671730995178223
    9. '_j' → logprob: -8.046730995178223
    10. ' step' → logprob: -8.046730995178223

Token 689: ' in' (ID: 306)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 690: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00023107275774236768
    2. ' range' → logprob: -8.37523078918457
    3. '(range' → logprob: -15.50023078918457
    4. ')' → logprob: -16.50023078918457
    5. '[' → logprob: -17.12523078918457
    6. 'K' → logprob: -17.37523078918457
    7. 'r' → logprob: -17.87523078918457
    8. 'ran' → logprob: -18.00023078918457
    9. '	range' → logprob: -18.12523078918457
    10. '```' → logprob: -18.37523078918457

Token 691: '(K' (ID: 28797)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.011189645156264305
    2. ' K' → logprob: -4.7611894607543945
    3. '1' → logprob: -6.1361894607543945
    4. '(K' → logprob: -8.136189460754395
    5. '   ' → logprob: -9.761189460754395
    6. 'N' → logprob: -10.761189460754395
    7. '(' → logprob: -11.011189460754395
    8. ' ' → logprob: -11.886189460754395
    9. '	K' → logprob: -12.386189460754395
    10. '0' → logprob: -12.761189460754395

Token 692: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5239241123199463
    2. '):' → logprob: -0.8989241123199463
    3. ':' → logprob: -8.398923873901367
    4. '   ' → logprob: -8.398923873901367
    5. '+' → logprob: -8.523923873901367
    6. '):
' → logprob: -9.398923873901367
    7. ')' → logprob: -10.898923873901367
    8. ':
' → logprob: -11.398923873901367
    9. ',' → logprob: -11.523923873901367
    10. ' ):' → logprob: -11.523923873901367

Token 693: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15126781165599823
    2. '       ' → logprob: -2.1512677669525146
    3. ' for' → logprob: -3.7762677669525146
    4. 'for' → logprob: -7.026268005371094
    5. '	for' → logprob: -9.026268005371094
    6. '	   ' → logprob: -10.526268005371094
    7. '    ' → logprob: -10.526268005371094
    8. ' ways' → logprob: -10.776268005371094
    9. '     ' → logprob: -11.151268005371094
    10. '```' → logprob: -11.276268005371094

Token 694: ' for' (ID: 395)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.17827437818050385
    2. 'for' (adapté à ' for') → logprob: -2.428274393081665
    3. ' ways' → logprob: -2.803274393081665
    4. ' for' → logprob: -4.428274154663086
    5. '   ' → logprob: -6.428274154663086
    6. '       ' → logprob: -7.553274154663086
    7. 'new' → logprob: -8.553274154663086
    8. ' new' → logprob: -8.928274154663086
    9. 'way' → logprob: -11.178274154663086
    10. ' ' → logprob: -11.178274154663086

Token 695: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.042577967047691345
    2. 'sum' → logprob: -3.2925779819488525
    3. 'j' → logprob: -5.917577743530273
    4. 'i' → logprob: -7.167577743530273
    5. ' s' → logprob: -7.167577743530273
    6. 'x' → logprob: -9.042577743530273
    7. 'val' → logprob: -10.292577743530273
    8. 'v' → logprob: -10.667577743530273
    9. 'curr' → logprob: -11.042577743530273
    10. ' sum' → logprob: -11.042577743530273

Token 696: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12865059077739716
    2. 'in' → logprob: -2.128650665283203
    3. '=' → logprob: -6.878650665283203
    4. '+' → logprob: -8.753650665283203
    5. 'max' → logprob: -8.878650665283203
    6. '   ' → logprob: -9.253650665283203
    7. ' =' → logprob: -9.253650665283203
    8. '+=' → logprob: -10.378650665283203
    9. 'from' → logprob: -10.503650665283203
    10. '=max' → logprob: -10.628650665283203

Token 697: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02578705921769142
    2. ' range' → logprob: -3.775787115097046
    3. 'max' → logprob: -6.025786876678467
    4. ' max' → logprob: -10.150787353515625
    5. ' reversed' → logprob: -10.400787353515625
    6. '0' → logprob: -11.150787353515625
    7. 'reverse' → logprob: -11.150787353515625
    8. '(range' → logprob: -11.775787353515625
    9. 're' → logprob: -12.275787353515625
    10. ' ' → logprob: -12.775787353515625

Token 698: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009764790302142501
    2. '(max' → logprob: -7.8759765625
    3. '0' → logprob: -8.2509765625
    4. '1' → logprob: -8.3759765625
    5. ' max' → logprob: -9.6259765625
    6. 'K' → logprob: -11.0009765625
    7. '_max' → logprob: -11.6259765625
    8. 'min' → logprob: -11.7509765625
    9. '(' → logprob: -13.7509765625
    10. '(K' → logprob: -14.0009765625

Token 699: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.004400444217026234
    2. '_max' → logprob: -5.504400253295898
    3. 'max' → logprob: -8.754400253295898
    4. 'sum' → logprob: -9.504400253295898
    5. '+' → logprob: -10.254400253295898
    6. '_s' → logprob: -10.629400253295898
    7. 's' → logprob: -11.254400253295898
    8. '_prev' → logprob: -12.004400253295898
    9. '_' → logprob: -12.504400253295898
    10. '_min' → logprob: -13.629400253295898

Token 700: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.022959616035223007
    2. '-' → logprob: -4.3979597091674805
    3. ',' → logprob: -5.7729597091674805
    4. ' -' → logprob: -6.1479597091674805
    5. '-K' → logprob: -6.2729597091674805
    6. '-max' → logprob: -7.0229597091674805
    7. '-N' → logprob: -7.1479597091674805
    8. ' +' → logprob: -7.7729597091674805
    9. 'max' → logprob: -7.8979597091674805
    10. ',-' → logprob: -8.14795970916748

Token 701: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 702: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10047709941864014
    2. '):
' → logprob: -3.2254772186279297
    3. ',-' → logprob: -3.3504772186279297
    4. ',max' → logprob: -4.97547721862793
    5. '-' → logprob: -5.47547721862793
    6. '           ' → logprob: -6.10047721862793
    7. '+' → logprob: -6.22547721862793
    8. '       ' → logprob: -6.47547721862793
    9. '   ' → logprob: -6.85047721862793
    10. ',s' → logprob: -7.22547721862793

Token 703: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004439966753125191
    2. '	       ' → logprob: -5.629439830780029
    3. ' if' → logprob: -7.504439830780029
    4. '<|end|>' → logprob: -9.879440307617188
    5. '          ' → logprob: -10.004440307617188
    6. '       ' → logprob: -10.379440307617188
    7. '	   ' → logprob: -11.129440307617188
    8. '		   ' → logprob: -11.129440307617188
    9. 'if' → logprob: -11.379440307617188
    10. '		' → logprob: -11.379440307617188

Token 704: ' ways' (ID: 6984)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6285420060157776
    2. ' if' → logprob: -0.8785420060157776
    3. 'for' → logprob: -3.628541946411133
    4. ' for' → logprob: -4.003541946411133
    5. '           ' → logprob: -5.503541946411133
    6. 'ways' (adapté à ' ways') → logprob: -6.878541946411133
    7. ' ways' → logprob: -7.253541946411133
    8. '   ' → logprob: -7.628541946411133
    9. '               ' → logprob: -9.628541946411133
    10. '	if' → logprob: -10.503541946411133

Token 705: '[s' (ID: 24177)
  Prédit: '_prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.3194015920162201
    2. '[s' → logprob: -1.3194016218185425
    3. '[' → logprob: -6.069401741027832
    4. 'prev' → logprob: -6.319401741027832
    5. '[_' → logprob: -7.069401741027832
    6. '```' → logprob: -8.569401741027832
    7. '   ' → logprob: -9.069401741027832
    8. '_next' → logprob: -9.194401741027832
    9. '
' → logprob: -9.194401741027832
    10. 'Prev' → logprob: -9.819401741027832

Token 706: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5950185656547546
    2. ']+=' → logprob: -0.8450185656547546
    3. '+=' → logprob: -4.97001838684082
    4. ']=' → logprob: -5.09501838684082
    5. '=' → logprob: -5.47001838684082
    6. ' +=' → logprob: -6.59501838684082
    7. ' ]' → logprob: -8.59501838684082
    8. ')' → logprob: -10.72001838684082
    9. ']+' → logprob: -11.72001838684082
    10. ' =' → logprob: -11.72001838684082

Token 707: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5767641067504883
    2. '+=' → logprob: -0.8267641067504883
    3. ' +=' → logprob: -7.201764106750488
    4. ' =' → logprob: -9.576764106750488
    5. ']+=' → logprob: -11.951764106750488
    6. '-=' → logprob: -14.076764106750488
    7. '=sum' → logprob: -14.451764106750488
    8. '+' → logprob: -14.826764106750488
    9. '+=(' → logprob: -14.826764106750488
    10. '.=' → logprob: -15.701764106750488

Token 708: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23328149318695068
    2. 'ways' → logprob: -1.6082814931869507
    3. '(' → logprob: -5.23328161239624
    4. ' ways' → logprob: -6.48328161239624
    5. ' ' → logprob: -7.48328161239624
    6. '   ' → logprob: -9.108281135559082
    7. ' (' → logprob: -9.233281135559082
    8. 'way' → logprob: -9.358281135559082
    9. '((' → logprob: -11.233281135559082
    10. '(
' → logprob: -11.420781135559082

Token 709: '0' (ID: 15)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.5467395186424255
    2. '0' → logprob: -0.9217395186424255
    3. '(' → logprob: -3.7967395782470703
    4. ' ways' → logprob: -7.92173957824707
    5. ' (' → logprob: -9.17173957824707
    6. 'way' → logprob: -9.54673957824707
    7. ' ' → logprob: -9.54673957824707
    8. 'sum' → logprob: -9.79673957824707
    9. '   ' → logprob: -10.29673957824707
    10. '(s' → logprob: -10.29673957824707

Token 710: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 711: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 712: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06238160654902458
    2. ' for' → logprob: -3.0623815059661865
    3. '       ' → logprob: -4.687381744384766
    4. '   ' → logprob: -5.437381744384766
    5. '	for' → logprob: -9.187381744384766
    6. '           ' → logprob: -10.937381744384766
    7. '```' → logprob: -12.187381744384766
    8. ' ' → logprob: -12.312381744384766
    9. '<|end|>' → logprob: -12.687381744384766
    10. '  ' → logprob: -13.687381744384766

Token 713: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0011092590866610408
    2. ' s' → logprob: -7.1261091232299805
    3. 'sum' → logprob: -8.50110912322998
    4. 'prev' → logprob: -9.62610912322998
    5. 'ways' → logprob: -11.50110912322998
    6. 'val' → logprob: -12.00110912322998
    7. 'v' → logprob: -12.12610912322998
    8. 'x' → logprob: -12.62610912322998
    9. 'value' → logprob: -13.62610912322998
    10. 'w' → logprob: -13.87610912322998

Token 714: ' in' (ID: 306)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 715: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001370320824207738
    2. ' range' → logprob: -9.250137329101562
    3. '0' → logprob: -10.750137329101562
    4. 'max' → logprob: -10.875137329101562
    5. '(range' → logprob: -15.125137329101562
    6. 's' → logprob: -16.375137329101562
    7. '   ' → logprob: -16.500137329101562
    8. ' ' → logprob: -17.000137329101562
    9. '[max' → logprob: -18.250137329101562
    10. '	range' → logprob: -18.500137329101562

Token 716: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4746758043766022
    2. '(max' → logprob: -0.9746757745742798
    3. '(s' → logprob: -8.224676132202148
    4. 's' → logprob: -8.349676132202148
    5. '0' → logprob: -10.099676132202148
    6. '[max' → logprob: -10.724676132202148
    7. ' max' → logprob: -11.224676132202148
    8. '(' → logprob: -11.724676132202148
    9. 'K' → logprob: -12.599676132202148
    10. '   ' → logprob: -13.349676132202148

Token 717: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.5783049464225769
    2. '_max' → logprob: -1.0783050060272217
    3. 'max' → logprob: -2.3283050060272217
    4. '_prev' → logprob: -6.828304767608643
    5. '+' → logprob: -8.8283052444458
    6. 'sum' → logprob: -9.2033052444458
    7. 'N' → logprob: -10.2033052444458
    8. '   ' → logprob: -10.5783052444458
    9. '_min' → logprob: -10.7033052444458
    10. ')' → logprob: -10.9533052444458

Token 718: '+' (ID: 10)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 719: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. '+' → logprob: -11.500011444091797
    3. '0' → logprob: -14.000011444091797
    4. ' ' → logprob: -14.750011444091797
    5. 'max' → logprob: -15.875011444091797
    6. 's' → logprob: -16.250011444091797
    7. 'K' → logprob: -16.875011444091797
    8. '2' → logprob: -17.250011444091797
    9. '
' → logprob: -17.250011444091797
    10. 'N' → logprob: -17.875011444091797

Token 720: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.15653765201568604
    2. '):' → logprob: -2.7815375328063965
    3. '-' → logprob: -3.0315375328063965
    4. '   ' → logprob: -4.0315375328063965
    5. ':' → logprob: -4.7815375328063965
    6. '-K' → logprob: -5.7815375328063965
    7. '+' → logprob: -6.1565375328063965
    8. '       ' → logprob: -6.6565375328063965
    9. ' -' → logprob: -7.6565375328063965
    10. '-k' → logprob: -7.9065375328063965

Token 721: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015395039226859808
    2. '	       ' → logprob: -7.501539707183838
    3. ' if' → logprob: -7.501539707183838
    4. '<|end|>' → logprob: -9.12653923034668
    5. '               ' → logprob: -9.37653923034668
    6. 'if' → logprob: -9.50153923034668
    7. '		' → logprob: -10.12653923034668
    8. '<|end|>' → logprob: -10.50153923034668
    9. '       ' → logprob: -11.25153923034668
    10. ',' → logprob: -11.25153923034668

Token 722: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04021967574954033
    2. 'if' (adapté à ' if') → logprob: -3.290219783782959
    3. '           ' → logprob: -6.540219783782959
    4. '   ' → logprob: -8.4152193069458
    5. ' for' → logprob: -8.6652193069458
    6. 'min' → logprob: -9.1652193069458
    7. 'max' → logprob: -9.6652193069458
    8. 'start' → logprob: -9.9152193069458
    9. '```' → logprob: -10.0402193069458
    10. ' if' → logprob: -10.9152193069458

Token 723: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.0004929834394715726
    2. ' ways' → logprob: -7.625493049621582
    3. 'way' → logprob: -13.250493049621582
    4. '   ' → logprob: -13.500493049621582
    5. 's' → logprob: -14.125493049621582
    6. '0' → logprob: -14.625493049621582
    7. 'WAYS' → logprob: -15.250493049621582
    8. ' ' → logprob: -15.750493049621582
    9. ' s' → logprob: -17.125492095947266
    10. '       ' → logprob: -17.250492095947266

Token 724: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -3.666993507067673e-05
    2. '[s' → logprob: -11.375036239624023
    3. '[_' → logprob: -11.500036239624023
    4. 'prev' → logprob: -12.125036239624023
    5. '```' → logprob: -13.000036239624023
    6. '_previous' → logprob: -13.375036239624023
    7. '_' → logprob: -14.000036239624023
    8. 's' → logprob: -14.125036239624023
    9. '[' → logprob: -14.250036239624023
    10. '_next' → logprob: -14.500036239624023

Token 725: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -6.098748053773306e-05
    2. '[' → logprob: -10.00006103515625
    3. '[
' → logprob: -12.50006103515625
    4. 's' → logprob: -12.50006103515625
    5. '```' → logprob: -12.75006103515625
    6. '<s' → logprob: -13.87506103515625
    7. '[t' → logprob: -14.12506103515625
    8. '[j' → logprob: -15.12506103515625
    9. '   ' → logprob: -15.12506103515625
    10. '[i' → logprob: -15.12506103515625

Token 726: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0018709286814555526
    2. ' >' → logprob: -6.751871109008789
    3. '!=' → logprob: -7.626871109008789
    4. ']>' → logprob: -9.001871109008789
    5. ' !=' → logprob: -10.376871109008789
    6. ']!=' → logprob: -11.001871109008789
    7. ':' → logprob: -11.251871109008789
    8. '+' → logprob: -11.626871109008789
    9. '>:' → logprob: -12.501871109008789
    10. 'and' → logprob: -12.751871109008789

Token 727: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.013050578534603119
    2. '!=' → logprob: -4.388050556182861
    3. ' >' → logprob: -8.63805103302002
    4. '+=' → logprob: -9.01305103302002
    5. 'and' → logprob: -9.76305103302002
    6. '>=' → logprob: -10.01305103302002
    7. ' !=' → logprob: -10.38805103302002
    8. ':' → logprob: -10.88805103302002
    9. 'for' → logprob: -10.88805103302002
    10. '>
' → logprob: -11.26305103302002

Token 728: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.245724504580721e-05
    2. ' ' → logprob: -9.375092506408691
    3. '1' → logprob: -11.875092506408691
    4. 'ways' → logprob: -15.750092506408691
    5. '
' → logprob: -16.250091552734375
    6. '   ' → logprob: -16.750091552734375
    7. '```' → logprob: -17.000091552734375
    8. ' ways' → logprob: -17.375091552734375
    9. '           ' → logprob: -17.812591552734375
    10. 'not' → logprob: -18.000091552734375

Token 729: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. 'ways' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '1' → logprob: -15.250000953674316
    5. 'not' → logprob: -18.875
    6. ' ways' → logprob: -18.875
    7. 'way' → logprob: -19.5
    8. 's' → logprob: -19.625
    9. '```' → logprob: -20.0
    10. '
' → logprob: -20.625

Token 730: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21066275238990784
    2. ':
' → logprob: -1.8356627225875854
    3. ' and' → logprob: -3.835662841796875
    4. '               ' → logprob: -5.085662841796875
    5. '           ' → logprob: -6.335662841796875
    6. '       ' → logprob: -8.335662841796875
    7. '                       ' → logprob: -8.835662841796875
    8. 'and' → logprob: -8.960662841796875
    9. ',' → logprob: -9.210662841796875
    10. '                           ' → logprob: -9.835662841796875

Token 731: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03173660859465599
    2. ':' → logprob: -4.531736373901367
    3. ' for' → logprob: -4.656736373901367
    4. ' and' → logprob: -5.031736373901367
    5. ':
' → logprob: -6.156736373901367
    6. '       ' → logprob: -7.031736373901367
    7. '           ' → logprob: -7.656736373901367
    8. '                       ' → logprob: -7.781736373901367
    9. '<|end|>' → logprob: -8.906736373901367
    10. 'and' → logprob: -9.531736373901367

Token 732: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5631090402603149
    2. '               ' → logprob: -0.9381090402603149
    3. 'continue' (adapté à ' continue') → logprob: -3.3131089210510254
    4. '	continue' → logprob: -6.188108921051025
    5. '	           ' → logprob: -8.313109397888184
    6. '           ' → logprob: -9.063109397888184
    7. '                   ' → logprob: -9.313109397888184
    8. '			' → logprob: -9.438109397888184
    9. '	       ' → logprob: -9.938109397888184
    10. ' for' → logprob: -10.563109397888184

Token 733: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014232104877009988
    2. '               ' → logprob: -7.126423358917236
    3. '       ' → logprob: -7.876423358917236
    4. ' for' → logprob: -8.876422882080078
    5. 'for' → logprob: -10.251422882080078
    6. '<|end|>' → logprob: -10.751422882080078
    7. ',' → logprob: -11.251422882080078
    8. '	       ' → logprob: -11.751422882080078
    9. '```' → logprob: -12.001422882080078
    10. '   ' → logprob: -12.751422882080078

Token 734: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21166381239891052
    2. ' for' → logprob: -2.4616637229919434
    3. '       ' → logprob: -2.5866637229919434
    4. '               ' → logprob: -4.211663722991943
    5. 'for' → logprob: -4.336663722991943
    6. '	       ' → logprob: -7.211663722991943
    7. '```' → logprob: -7.461663722991943
    8. '   ' → logprob: -7.836663722991943
    9. '<|end|>' → logprob: -8.836664199829102
    10. ',' → logprob: -9.336664199829102

Token 735: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03199641779065132
    2. '           ' → logprob: -3.781996488571167
    3. ' for' → logprob: -4.781996250152588
    4. '```' → logprob: -8.281996726989746
    5. '   ' → logprob: -9.906996726989746
    6. '	for' → logprob: -11.281996726989746
    7. '               ' → logprob: -11.531996726989746
    8. '``' → logprob: -13.031996726989746
    9. 'range' → logprob: -13.531996726989746
    10. 'start' → logprob: -13.906996726989746

Token 736: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5882050395011902
    2. 'step' → logprob: -1.463205099105835
    3. 'val' → logprob: -2.338205099105835
    4. 'v' → logprob: -2.588205099105835
    5. 'num' → logprob: -4.088204860687256
    6. 'i' → logprob: -4.713204860687256
    7. 't' → logprob: -5.088204860687256
    8. 'j' → logprob: -5.463204860687256
    9. 'add' → logprob: -5.963204860687256
    10. 'value' → logprob: -7.713204860687256

Token 737: ' in' (ID: 306)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 738: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0789230540394783
    2. ' range' → logprob: -2.578922986984253
    3. '1' → logprob: -10.328923225402832
    4. '(range' → logprob: -14.578923225402832
    5. '	range' → logprob: -15.578923225402832
    6. ' ' → logprob: -17.328922271728516
    7. '   ' → logprob: -17.953922271728516
    8. ' in' → logprob: -19.703922271728516
    9. ' xrange' → logprob: -19.953922271728516
    10. '_range' → logprob: -20.328922271728516

Token 739: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10021249949932098
    2. '(' → logprob: -2.350212574005127
    3. ' ' → logprob: -13.475212097167969
    4. '   ' → logprob: -13.475212097167969
    5. '[' → logprob: -13.725212097167969
    6. '           ' → logprob: -14.600212097167969
    7. '{' → logprob: -15.600212097167969
    8. ' (' → logprob: -15.975212097167969
    9. '```' → logprob: -15.975212097167969
    10. '=' → logprob: -16.22521209716797

Token 740: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'N' → logprob: -19.0
    3. ' ' → logprob: -20.375
    4. '   ' → logprob: -20.75
    5. '(' → logprob: -23.125
    6. '
' → logprob: -23.5
    7. '```' → logprob: -23.625
    8. ')' → logprob: -23.75
    9. '۱' → logprob: -24.25
    10. '0' → logprob: -24.625

Token 741: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12714700400829315
    2. ',N' → logprob: -2.1271469593048096
    3. ',v' → logprob: -9.50214672088623
    4. ',n' → logprob: -9.62714672088623
    5. ' ,' → logprob: -9.87714672088623
    6. 'N' → logprob: -11.00214672088623
    7. ',
' → logprob: -12.62714672088623
    8. ',K' → logprob: -13.50214672088623
    9. '```' → logprob: -13.87714672088623
    10. 'to' → logprob: -14.37714672088623

Token 742: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.2729995988775045e-06
    2. ' N' → logprob: -12.000006675720215
    3. '```' → logprob: -17.6250057220459
    4. '	N' → logprob: -18.7500057220459
    5. 'n' → logprob: -18.7500057220459
    6. '{' → logprob: -19.6250057220459
    7. ')' → logprob: -19.8750057220459
    8. '(N' → logprob: -19.8750057220459
    9. ',N' → logprob: -20.0000057220459
    10. '
' → logprob: -20.0000057220459

Token 743: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2246291337069124e-05
    2. ' +' → logprob: -10.750021934509277
    3. '+
' → logprob: -14.500021934509277
    4. '```' → logprob: -16.625022888183594
    5. ')+' → logprob: -16.875022888183594
    6. '):
' → logprob: -17.125022888183594
    7. '+n' → logprob: -17.500022888183594
    8. '()+' → logprob: -18.125022888183594
    9. '+)' → logprob: -19.125022888183594
    10. '＋' → logprob: -19.250022888183594

Token 744: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. 'N' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '):
' → logprob: -15.625001907348633
    5. '+' → logprob: -15.875001907348633
    6. '```' → logprob: -16.500001907348633
    7. '):' → logprob: -16.750001907348633
    8. ')' → logprob: -17.000001907348633
    9. '
' → logprob: -17.875001907348633
    10. '​' → logprob: -19.000001907348633

Token 745: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06363151967525482
    2. ':' → logprob: -3.438631534576416
    3. '):' → logprob: -4.063631534576416
    4. ':
' → logprob: -4.438631534576416
    5. '():
' → logprob: -8.688631057739258
    6. '               ' → logprob: -9.563631057739258
    7. '):
' → logprob: -10.063631057739258
    8. '<|end|>' → logprob: -10.063631057739258
    9. ']:
' → logprob: -10.188631057739258
    10. '+' → logprob: -10.563631057739258

Token 746: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017912088660523295
    2. '           ' → logprob: -7.626791000366211
    3. '<|end|>' → logprob: -7.876791000366211
    4. '```' → logprob: -8.626791000366211
    5. '                   ' → logprob: -8.751791000366211
    6. '                       ' → logprob: -9.376791000366211
    7. '                               ' → logprob: -9.501791000366211
    8. '       ' → logprob: -9.501791000366211
    9. '	           ' → logprob: -10.001791000366211
    10. '                
' → logprob: -10.251791000366211

Token 747: ' if' (ID: 538)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.27311399579048157
    2. '                   ' → logprob: -2.273113965988159
    3. '                       ' → logprob: -3.273113965988159
    4. ' ways' → logprob: -3.398113965988159
    5. ' if' → logprob: -3.523113965988159
    6. '               ' → logprob: -4.023114204406738
    7. 'if' (adapté à ' if') → logprob: -4.773114204406738
    8. '```' → logprob: -5.773114204406738
    9. '                               ' → logprob: -6.023114204406738
    10. '                           ' → logprob: -6.648114204406738

Token 748: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026327816769480705
    2. ' s' → logprob: -3.6513278484344482
    3. '   ' → logprob: -10.776328086853027
    4. '                   ' → logprob: -13.026328086853027
    5. '               ' → logprob: -13.401328086853027
    6. ' ' → logprob: -13.901328086853027
    7. '(s' → logprob: -14.776328086853027
    8. ' ' → logprob: -14.901328086853027
    9. '  ' → logprob: -15.026328086853027
    10. '                       ' → logprob: -15.276328086853027

Token 749: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0184883214533329
    2. ' +' → logprob: -4.01848840713501
    3. '+s' → logprob: -8.018487930297852
    4. '+
' → logprob: -11.893487930297852
    5. '<=' → logprob: -14.018487930297852
    6. '+w' → logprob: -14.393487930297852
    7. ' +
' → logprob: -15.768487930297852
    8. '+k' → logprob: -16.14348793029785
    9. '+t' → logprob: -16.26848793029785
    10. '+n' → logprob: -16.26848793029785

Token 750: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1472419600977446e-06
    2. ' v' → logprob: -13.750000953674316
    3. '	v' → logprob: -17.750001907348633
    4. '[v' → logprob: -17.750001907348633
    5. '```' → logprob: -18.625001907348633
    6. '*v' → logprob: -18.875001907348633
    7. '(v' → logprob: -18.875001907348633
    8. ')v' → logprob: -19.250001907348633
    9. 'N' → logprob: -19.500001907348633
    10. '<v' → logprob: -19.750001907348633

Token 751: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.1602829247713089
    2. ' <=' → logprob: -1.9102829694747925
    3. '<' → logprob: -10.285283088684082
    4. '>' → logprob: -11.410283088684082
    5. ' <' → logprob: -12.160283088684082
    6. ')<=' → logprob: -13.035283088684082
    7. ' >' → logprob: -13.160283088684082
    8. ']<=' → logprob: -13.410283088684082
    9. '```' → logprob: -13.660283088684082
    10. '>=' → logprob: -14.035283088684082

Token 752: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0206720617134124e-05
    2. ' max' → logprob: -11.50001049041748
    3. '(max' → logprob: -18.625009536743164
    4. '	max' → logprob: -19.125009536743164
    5. '[max' → logprob: -19.875009536743164
    6. '=max' → logprob: -20.875009536743164
    7. '_max' → logprob: -21.875009536743164
    8. '   ' → logprob: -22.000009536743164
    9. 'maximum' → logprob: -22.375009536743164
    10. '```' → logprob: -22.375009536743164

Token 753: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.842555426876061e-06
    2. 'sum' → logprob: -13.500004768371582
    3. '_s' → logprob: -13.750004768371582
    4. '_max' → logprob: -13.750004768371582
    5. '_' → logprob: -13.875004768371582
    6. 's' → logprob: -15.875004768371582
    7. '```' → logprob: -16.8750057220459
    8. '_SUM' → logprob: -18.6250057220459
    9. '_state' → logprob: -18.8750057220459
    10. '__' → logprob: -18.8750057220459

Token 754: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15858973562717438
    2. ':' → logprob: -2.0335898399353027
    3. '                   ' → logprob: -4.283589839935303
    4. '               ' → logprob: -6.533589839935303
    5. '                       ' → logprob: -8.533589363098145
    6. '           ' → logprob: -9.283589363098145
    7. '):
' → logprob: -9.908589363098145
    8. '[' → logprob: -10.033589363098145
    9. '                           ' → logprob: -10.408589363098145
    10. ']:
' → logprob: -10.533589363098145

Token 755: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006403892766684294
    2. ':
' → logprob: -5.756403923034668
    3. ':' → logprob: -6.506403923034668
    4. '               ' → logprob: -8.256403923034668
    5. 'ways' → logprob: -8.256403923034668
    6. '		           ' → logprob: -8.256403923034668
    7. '                       ' → logprob: -8.381403923034668
    8. ' ways' → logprob: -8.381403923034668
    9. '	               ' → logprob: -9.006403923034668
    10. '				' → logprob: -9.631403923034668

Token 756: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -0.004437359049916267
    2. ' ways' → logprob: -5.504437446594238
    3. '                       ' → logprob: -8.129437446594238
    4. '                   ' → logprob: -10.004437446594238
    5. '                               ' → logprob: -11.754437446594238
    6. '                           ' → logprob: -11.754437446594238
    7. '               ' → logprob: -13.754437446594238
    8. '                     ' → logprob: -14.754437446594238
    9. '   ' → logprob: -14.879437446594238
    10. '```' → logprob: -15.254437446594238

Token 757: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -8.2994620242971e-06
    2. 's' → logprob: -12.125008583068848
    3. '[' → logprob: -12.875008583068848
    4. '   ' → logprob: -17.00000762939453
    5. '[
' → logprob: -17.12500762939453
    6. '```' → logprob: -17.25000762939453
    7. '[S' → logprob: -17.37500762939453
    8. '\[' → logprob: -17.37500762939453
    9. '_s' → logprob: -17.62500762939453
    10. ' [' → logprob: -17.75000762939453

Token 758: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06281471997499466
    2. '+s' → logprob: -2.812814712524414
    3. '[s' → logprob: -7.312814712524414
    4. '[v' → logprob: -9.437814712524414
    5. '+=' → logprob: -10.562814712524414
    6. ' +' → logprob: -11.062814712524414
    7. '+
' → logprob: -11.062814712524414
    8. ']+=' → logprob: -11.312814712524414
    9. ']' → logprob: -11.437814712524414
    10. ']+' → logprob: -11.812814712524414

Token 759: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -16.25
    3. ' v' → logprob: -17.875
    4. '	v' → logprob: -17.875
    5. '[v' → logprob: -18.5
    6. '1' → logprob: -18.875
    7. ')v' → logprob: -18.875
    8. 'vj' → logprob: -19.75
    9. '(v' → logprob: -19.875
    10. ']' → logprob: -20.375

Token 760: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5759719014167786
    2. ']+=' → logprob: -0.8259719014167786
    3. '+=' → logprob: -10.825971603393555
    4. ']+' → logprob: -11.450971603393555
    5. '[' → logprob: -13.825971603393555
    6. ']=' → logprob: -15.200971603393555
    7. '```' → logprob: -15.325971603393555
    8. ' ]' → logprob: -15.575971603393555
    9. ' +=' → logprob: -16.575971603393555
    10. '+' → logprob: -16.700971603393555

Token 761: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011093330569565296
    2. ']+=' → logprob: -4.5110931396484375
    3. ' +=' → logprob: -10.136093139648438
    4. ']' → logprob: -12.761093139648438
    5. '=' → logprob: -13.761093139648438
    6. '+' → logprob: -14.011093139648438
    7. '```' → logprob: -14.011093139648438
    8. '[' → logprob: -15.386093139648438
    9. ']+' → logprob: -17.011093139648438
    10. '+=(' → logprob: -17.261093139648438

Token 762: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -1.318681188422488e-05
    2. ' ways' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.50001335144043
    4. 'WAYS' → logprob: -18.75001335144043
    5. '           ' → logprob: -19.12501335144043
    6. 'way' → logprob: -19.25001335144043
    7. '       ' → logprob: -19.87501335144043
    8. '               ' → logprob: -19.87501335144043
    9. '                   ' → logprob: -20.50001335144043
    10. '                       ' → logprob: -21.12501335144043

Token 763: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -6.682846287731081e-05
    2. 'prev' → logprob: -9.625066757202148
    3. 's' → logprob: -15.125066757202148
    4. '[s' → logprob: -15.250066757202148
    5. '_previous' → logprob: -15.750066757202148
    6. '```' → logprob: -16.62506675720215
    7. 'Prev' → logprob: -17.75006675720215
    8. '	prev' → logprob: -18.62506675720215
    9. 'v' → logprob: -18.75006675720215
    10. '_prior' → logprob: -19.00006675720215

Token 764: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00020413640595506877
    2. 's' → logprob: -8.500204086303711
    3. '[' → logprob: -14.625204086303711
    4. '(s' → logprob: -16.37520408630371
    5. '[v' → logprob: -17.50020408630371
    6. ' s' → logprob: -18.00020408630371
    7. '                   ' → logprob: -18.75020408630371
    8. '	s' → logprob: -18.87520408630371
    9. '[
' → logprob: -19.50020408630371
    10. '               ' → logprob: -19.75020408630371

Token 765: ']
' (ID: 1592)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.6987976431846619
    2. '[v' → logprob: -0.6987976431846619
    3. ']' → logprob: -5.698797702789307
    4. '[' → logprob: -6.573797702789307
    5. 'v' → logprob: -7.823797702789307
    6. 's' → logprob: -9.073797225952148
    7. '```' → logprob: -9.698797225952148
    8. '<|end|>' → logprob: -9.823797225952148
    9. '(s' → logprob: -10.073797225952148
    10. '][' → logprob: -10.323797225952148

Token 766: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4110428988933563
    2. '	' → logprob: -2.1610429286956787
    3. '```' → logprob: -2.2860429286956787
    4. '<|end|>' → logprob: -3.1610429286956787
    5. '[' → logprob: -3.7860429286956787
    6. '\t' → logprob: -4.9110426902771
    7. '	for' → logprob: -5.0360426902771
    8. '		
' → logprob: -5.4110426902771
    9. '   ' → logprob: -5.5360426902771
    10. '	       ' → logprob: -5.6610426902771

Token 767: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' (adapté à ' ways') → logprob: -0.14416663348674774
    2. ' ways' → logprob: -2.6441667079925537
    3. '   ' → logprob: -2.7691667079925537
    4. '       ' → logprob: -8.269166946411133
    5. 'for' → logprob: -9.394166946411133
    6. ' for' → logprob: -9.769166946411133
    7. '```' → logprob: -10.269166946411133
    8. '
' → logprob: -11.019166946411133
    9. '    
' → logprob: -11.519166946411133
    10. '        
' → logprob: -12.269166946411133

Token 768: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026526954025030136
    2. ',s' → logprob: -8.500265121459961
    3. '_prev' → logprob: -10.125265121459961
    4. ',_' → logprob: -11.875265121459961
    5. '[:]' → logprob: -12.750265121459961
    6. '_,' → logprob: -12.875265121459961
    7. 'prev' → logprob: -13.250265121459961
    8. ' ,' → logprob: -14.125265121459961
    9. '[:' → logprob: -14.375265121459961
    10. ',[' → logprob: -14.500265121459961

Token 769: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.00033546582562848926
    2. ' ways' → logprob: -8.000335693359375
    3. 'way' → logprob: -17.500335693359375
    4. 'WAYS' → logprob: -18.000335693359375
    5. 'Ways' → logprob: -19.750335693359375
    6. '   ' → logprob: -19.750335693359375
    7. 'works' → logprob: -20.250335693359375
    8. '```' → logprob: -21.000335693359375
    9. 'views' → logprob: -21.250335693359375
    10. 'waves' → logprob: -21.625335693359375

Token 770: '_prev' (ID: 60491)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 771: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.619311974034645e-05
    2. ' =' → logprob: -10.250036239624023
    3. ',' → logprob: -14.750036239624023
    4. '=
' → logprob: -15.750036239624023
    5. 'ways' → logprob: -16.375036239624023
    6. '=s' → logprob: -17.375036239624023
    7. '=}' → logprob: -17.375036239624023
    8. '<|end|>' → logprob: -17.375036239624023
    9. '=re' → logprob: -17.875036239624023
    10. '=

' → logprob: -18.000036239624023

Token 772: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -2.1008713702030946e-06
    2. ' ways' → logprob: -13.125001907348633
    3. 'WAYS' → logprob: -18.250001907348633
    4. '   ' → logprob: -18.375001907348633
    5. 'way' → logprob: -18.500001907348633
    6. 'works' → logprob: -21.250001907348633
    7. 'wares' → logprob: -21.625001907348633
    8. 'words' → logprob: -21.875001907348633
    9. '```' → logprob: -22.000001907348633
    10. 'aways' → logprob: -22.125001907348633

Token 773: '_prev' (ID: 60491)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0580175444483757
    2. '_prev' → logprob: -3.3080174922943115
    3. 'ways' → logprob: -3.9330174922943115
    4. '[' → logprob: -9.18301773071289
    5. ',' → logprob: -10.68301773071289
    6. '	prev' → logprob: -10.80801773071289
    7. 'Prev' → logprob: -11.30801773071289
    8. '   ' → logprob: -11.68301773071289
    9. ' prev' → logprob: -12.05801773071289
    10. '_' → logprob: -12.18301773071289

Token 774: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 775: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.0007332704844884574
    2. '[' → logprob: -7.750733375549316
    3. ' ways' → logprob: -8.125733375549316
    4. 'way' → logprob: -12.625733375549316
    5. '[]' → logprob: -13.375733375549316
    6. ' [' → logprob: -13.500733375549316
    7. '[s' → logprob: -15.875733375549316
    8. 'WAYS' → logprob: -16.375732421875
    9. '[
' → logprob: -16.625732421875
    10. '[]
' → logprob: -17.500732421875

Token 776: '

' (ID: 279)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.03274531289935112
    2. '_prev' → logprob: -4.157745361328125
    3. '<|end|>' → logprob: -4.407745361328125
    4. 'ways' → logprob: -6.032745361328125
    5. '[' → logprob: -6.782745361328125
    6. '	prev' → logprob: -8.282745361328125
    7. '```' → logprob: -8.657745361328125
    8. 'Prev' → logprob: -9.282745361328125
    9. '(prev' → logprob: -9.657745361328125
    10. ' prev' → logprob: -10.032745361328125

Token 777: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028809530194848776
    2. '```' → logprob: -6.502881050109863
    3. '
' → logprob: -7.252881050109863
    4. '    
' → logprob: -7.502881050109863
    5. '<|end|>' → logprob: -10.252881050109863
    6. 'for' → logprob: -10.252881050109863
    7. 'import' → logprob: -11.252881050109863
    8. '  
' → logprob: -12.252881050109863
    9. 'prob' → logprob: -12.377881050109863
    10. '        
' → logprob: -12.627881050109863

Token 778: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0005513638607226312
    2. 'prob' → logprob: -7.625551223754883
    3. 'dp' → logprob: -11.000551223754883
    4. '   ' → logprob: -11.625551223754883
    5. 'tot' → logprob: -11.625551223754883
    6. ' total' → logprob: -12.125551223754883
    7. 'mod' → logprob: -12.125551223754883
    8. 'ways' → logprob: -12.125551223754883
    9. 'sum' → logprob: -13.000551223754883
    10. 'p' → logprob: -13.125551223754883

Token 779: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13009056448936462
    2. '=' → logprob: -2.6300904750823975
    3. ' =' → logprob: -3.0050904750823975
    4. '_count' → logprob: -9.005090713500977
    5. 'ways' → logprob: -10.255090713500977
    6. '_prob' → logprob: -10.255090713500977
    7. '_steps' → logprob: -10.380090713500977
    8. '```' → logprob: -10.505090713500977
    9. '=_' → logprob: -11.005090713500977
    10. 'Ways' → logprob: -11.255090713500977

Token 780: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.0003424951864872128
    2. 'count' → logprob: -8.00034236907959
    3. ' ways' → logprob: -13.25034236907959
    4. '=' → logprob: -13.25034236907959
    5. 'counts' → logprob: -14.12534236907959
    6. ' =' → logprob: -14.25034236907959
    7. 'steps' → logprob: -14.62534236907959
    8. 'cnt' → logprob: -14.75034236907959
    9. 'prob' → logprob: -15.00034236907959
    10. 'way' → logprob: -15.25034236907959

Token 781: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327617168426514
    2. '=' → logprob: -1.3132761716842651
    3. '=sum' → logprob: -11.313276290893555
    4. '=len' → logprob: -14.688276290893555
    5. '   ' → logprob: -15.063276290893555
    6. '[' → logprob: -15.063276290893555
    7. '=int' → logprob: -15.313276290893555
    8. 'total' → logprob: -15.563276290893555
    9. 'sum' → logprob: -16.188276290893555
    10. '```' → logprob: -16.438276290893555

Token 782: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0027945376932621002
    2. 'pow' → logprob: -6.2527947425842285
    3. '   ' → logprob: -7.8777947425842285
    4. '(N' → logprob: -8.12779426574707
    5. ' N' → logprob: -9.12779426574707
    6. 'float' → logprob: -10.50279426574707
    7. 'ways' → logprob: -10.87779426574707
    8. '(pow' → logprob: -11.00279426574707
    9. '(' → logprob: -12.37779426574707
    10. 'int' → logprob: -13.00279426574707

Token 783: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.0445127372804563e-05
    2. ' **' → logprob: -11.50001049041748
    3. '***' → logprob: -15.62501049041748
    4. '```' → logprob: -15.62501049041748
    5. '*K' → logprob: -17.625009536743164
    6. '***/' → logprob: -18.250009536743164
    7. '*' → logprob: -18.625009536743164
    8. '**
' → logprob: -18.875009536743164
    9. '***/
' → logprob: -19.000009536743164
    10. 'K' → logprob: -19.750009536743164

Token 784: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.9361264946837764e-07
    2. ' K' → logprob: -16.5
    3. '(K' → logprob: -18.75
    4. '```' → logprob: -19.875
    5. '	K' → logprob: -21.75
    6. 'k' → logprob: -21.875
    7. '*K' → logprob: -22.125
    8. '<K' → logprob: -22.25
    9. ',K' → logprob: -22.375
    10. '[K' → logprob: -22.375

Token 785: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07282265275716782
    2. '
' → logprob: -2.6978225708007812
    3. '```' → logprob: -7.322822570800781
    4. '    
' → logprob: -7.572822570800781
    5. 'prob' → logprob: -7.822822570800781
    6. 'for' → logprob: -7.947822570800781
    7. '<|end|>' → logprob: -8.447822570800781
    8. ' for' → logprob: -8.447822570800781
    9. ')' → logprob: -8.822822570800781
    10. ',' → logprob: -9.572822570800781

Token 786: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8160172700881958
    2. 'for' → logprob: -1.0660172700881958
    3. 'dp' → logprob: -1.6910172700881958
    4. 'prob' → logprob: -4.066017150878906
    5. '```' → logprob: -5.441017150878906
    6. 'from' → logprob: -5.691017150878906
    7. ' for' → logprob: -5.941017150878906
    8. 'E' → logprob: -7.441017150878906
    9. 'expected' → logprob: -8.191017150878906
    10. 'import' → logprob: -8.941017150878906

Token 787: ' dist' (ID: 3601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02012370340526104
    2. 'from' → logprob: -4.520123481750488
    3. 'dp' → logprob: -4.770123481750488
    4. 'import' → logprob: -8.270123481750488
    5. ' for' → logprob: -8.770123481750488
    6. 'prob' → logprob: -9.395123481750488
    7. '```' → logprob: -10.645123481750488
    8. 'E' → logprob: -11.145123481750488
    9. 'inv' → logprob: -12.020123481750488
    10. ' from' → logprob: -12.520123481750488

Token 788: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11854278296232224
    2. ' =' → logprob: -2.6185426712036133
    3. 'rib' → logprob: -3.9935426712036133
    4. '[' → logprob: -5.118542671203613
    5. 'r' → logprob: -5.243542671203613
    6. '_' → logprob: -5.493542671203613
    7. '=_' → logprob: -6.618542671203613
    8. '=[]' → logprob: -7.118542671203613
    9. '=[' → logprob: -7.118542671203613
    10. '_r' → logprob: -7.243542671203613

Token 789: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.674858301877975e-05
    2. 'ways' → logprob: -9.750096321105957
    3. ' [' → logprob: -11.375096321105957
    4. '[len' → logprob: -11.500096321105957
    5. '[w' → logprob: -12.500096321105957
    6. '[i' → logprob: -12.625096321105957
    7. '[s' → logprob: -13.250096321105957
    8. '[list' → logprob: -13.500096321105957
    9. '[(' → logprob: -14.000096321105957
    10. '[-' → logprob: -14.250096321105957

Token 790: '0' (ID: 15)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.0012113067787140608
    2. 'w' → logprob: -7.376211166381836
    3. '0' → logprob: -7.876211166381836
    4. 'x' → logprob: -8.751211166381836
    5. 'way' → logprob: -10.501211166381836
    6. ' ways' → logprob: -11.876211166381836
    7. 'count' → logprob: -12.251211166381836
    8. 'v' → logprob: -12.626211166381836
    9. '(' → logprob: -13.251211166381836
    10. 'WAYS' → logprob: -14.251211166381836

Token 791: '.' (ID: 13)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22933098673820496
    2. ']*(' → logprob: -1.6043310165405273
    3. ']+' → logprob: -6.229331016540527
    4. ']*' → logprob: -7.104331016540527
    5. '](' → logprob: -7.604331016540527
    6. ' ]' → logprob: -8.729331016540527
    7. '   ' → logprob: -9.104331016540527
    8. '+' → logprob: -9.229331016540527
    9. '.' → logprob: -9.979331016540527
    10. '[' → logprob: -10.104331016540527

Token 792: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014620233559980989
    2. ']' → logprob: -7.751461982727051
    3. 'float' → logprob: -7.876461982727051
    4. 'for' → logprob: -8.25146198272705
    5. '/K' → logprob: -9.62646198272705
    6. '1' → logprob: -10.12646198272705
    7. ']+' → logprob: -10.37646198272705
    8. ']*' → logprob: -10.37646198272705
    9. '.' → logprob: -10.50146198272705
    10. ',' → logprob: -10.75146198272705

Token 793: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.40706634521484375
    2. ']' → logprob: -1.1570663452148438
    3. ' for' → logprob: -4.657066345214844
    4. 'for' → logprob: -5.282066345214844
    5. ']*' → logprob: -5.407066345214844
    6. ']+' → logprob: -7.157066345214844
    7. '   ' → logprob: -9.282066345214844
    8. '*(' → logprob: -10.532066345214844
    9. ' ]' → logprob: -11.157066345214844
    10. '](' → logprob: -12.282066345214844

Token 794: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00019221604452468455
    2. '(max' → logprob: -8.625192642211914
    3. 'K' → logprob: -12.000192642211914
    4. '(S' → logprob: -13.000192642211914
    5. '(K' → logprob: -13.375192642211914
    6. 'S' → logprob: -13.625192642211914
    7. ' max' → logprob: -13.875192642211914
    8. 'len' → logprob: -14.625192642211914
    9. '(' → logprob: -16.750192642211914
    10. 'min' → logprob: -18.125192642211914

Token 795: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.004311549477279186
    2. '_state' → logprob: -5.504311561584473
    3. 'sum' → logprob: -8.379311561584473
    4. 'state' → logprob: -13.754311561584473
    5. '_max' → logprob: -13.879311561584473
    6. ')' → logprob: -15.254311561584473
    7. 'max' → logprob: -15.629311561584473
    8. '_s' → logprob: -15.754311561584473
    9. '+' → logprob: -15.754311561584473
    10. 'Sum' → logprob: -16.004310607910156

Token 796: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.0722858102526516e-05
    2. ' +' → logprob: -10.125041007995605
    3. ')+' → logprob: -15.375041007995605
    4. '+
' → logprob: -15.750041007995605
    5. '```' → logprob: -15.750041007995605
    6. ']+' → logprob: -16.87504005432129
    7. '()+' → logprob: -17.37504005432129
    8. '1' → logprob: -18.37504005432129
    9. '[' → logprob: -18.37504005432129
    10. '+++' → logprob: -18.75004005432129

Token 797: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. '+' → logprob: -12.625004768371582
    3. ' ' → logprob: -13.750004768371582
    4. '```' → logprob: -17.250003814697266
    5. '2' → logprob: -17.750003814697266
    6. '   ' → logprob: -18.375003814697266
    7. '01' → logprob: -19.625003814697266
    8. ' +' → logprob: -19.750003814697266
    9. 'max' → logprob: -20.000003814697266
    10. '(' → logprob: -20.000003814697266

Token 798: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008630522526800632
    2. ')
' → logprob: -4.758630752563477
    3. ')

' → logprob: -12.258630752563477
    4. ' )' → logprob: -12.383630752563477
    5. ')
' → logprob: -12.508630752563477
    6. ')]' → logprob: -12.883630752563477
    7. '   ' → logprob: -14.883630752563477
    8. ' )
' → logprob: -15.383630752563477
    9. ']' → logprob: -16.133630752563477
    10. '
' → logprob: -16.883630752563477

Token 799: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038155447691679
    2. ' for' → logprob: -3.2881555557250977
    3. '   ' → logprob: -9.413155555725098
    4. '
' → logprob: -11.038155555725098
    5. '```' → logprob: -11.163155555725098
    6. '	for' → logprob: -13.538155555725098
    7. '<|end|>' → logprob: -15.038155555725098
    8. ')' → logprob: -15.413155555725098
    9. 'total' → logprob: -16.78815460205078
    10. '    
' → logprob: -16.78815460205078

Token 800: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.796184723294573e-06
    2. ' for' → logprob: -12.250005722045898
    3. '```' → logprob: -14.000005722045898
    4. '   ' → logprob: -16.0000057220459
    5. 'total' → logprob: -18.0000057220459
    6. 'from' → logprob: -20.0000057220459
    7. '``' → logprob: -20.2500057220459
    8. '	for' → logprob: -20.8750057220459
    9. 'count' → logprob: -21.0000057220459
    10. '
' → logprob: -21.5000057220459

Token 801: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02347571961581707
    2. 'i' → logprob: -3.7734756469726562
    3. 'sum' → logprob: -8.773475646972656
    4. ' s' → logprob: -10.273475646972656
    5. 'x' → logprob: -10.273475646972656
    6. ' i' → logprob: -13.148475646972656
    7. 'val' → logprob: -13.398475646972656
    8. 'v' → logprob: -13.398475646972656
    9. '_s' → logprob: -14.773475646972656
    10. 'value' → logprob: -14.773475646972656

Token 802: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.04859520494937897
    2. ' in' → logprob: -3.0485951900482178
    3. '   ' → logprob: -12.298595428466797
    4. 's' → logprob: -13.423595428466797
    5. '=' → logprob: -14.423595428466797
    6. ' ' → logprob: -14.673595428466797
    7. 'from' → logprob: -15.923595428466797
    8. ',' → logprob: -16.048595428466797
    9. 'range' → logprob: -16.048595428466797
    10. '	in' → logprob: -16.298595428466797

Token 803: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.4974866644479334e-05
    2. ' range' → logprob: -11.125015258789062
    3. '(range' → logprob: -15.750015258789062
    4. '   ' → logprob: -17.000015258789062
    5. 'K' → logprob: -17.750015258789062
    6. 'r' → logprob: -18.500015258789062
    7. '```' → logprob: -18.875015258789062
    8. '	range' → logprob: -18.875015258789062
    9. 'k' → logprob: -19.000015258789062
    10. '[K' → logprob: -19.750015258789062

Token 804: '(K' (ID: 28797)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.02037965878844261
    2. 'min' → logprob: -4.270379543304443
    3. '(K' → logprob: -5.395379543304443
    4. 'max' → logprob: -6.645379543304443
    5. 'len' → logprob: -8.770380020141602
    6. '(min' → logprob: -9.395380020141602
    7. 'k' → logprob: -10.270380020141602
    8. ' K' → logprob: -10.395380020141602
    9. '[K' → logprob: -11.395380020141602
    10. '   ' → logprob: -11.770380020141602

Token 805: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012597566237673163
    2. ',max' → logprob: -7.251259803771973
    3. ' ,' → logprob: -7.626259803771973
    4. '   ' → logprob: -10.626259803771973
    5. ',K' → logprob: -10.626259803771973
    6. ',k' → logprob: -12.751259803771973
    7. ',s' → logprob: -13.126259803771973
    8. ',
' → logprob: -13.251259803771973
    9. 'max' → logprob: -13.501259803771973
    10. ',len' → logprob: -13.751259803771973

Token 806: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00012475410767365247
    2. ' max' → logprob: -9.00012493133545
    3. '(max' → logprob: -13.62512493133545
    4. 'K' → logprob: -17.500123977661133
    5. '   ' → logprob: -17.875123977661133
    6. 'min' → logprob: -18.750123977661133
    7. '	max' → logprob: -19.875123977661133
    8. ' ' → logprob: -20.000123977661133
    9. '
' → logprob: -20.500123977661133
    10. '=max' → logprob: -20.625123977661133

Token 807: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.4974866644479334e-05
    2. '*N' → logprob: -12.125015258789062
    3. 'sum' → logprob: -12.250015258789062
    4. '_max' → logprob: -12.625015258789062
    5. 'N' → logprob: -15.000015258789062
    6. '_' → logprob: -15.250015258789062
    7. '_mul' → logprob: -15.750015258789062
    8. '   ' → logprob: -15.875015258789062
    9. '+' → logprob: -16.000015258789062
    10. 's' → logprob: -16.750015258789062

Token 808: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.794061770662665e-05
    2. ' +' → logprob: -9.25009822845459
    3. '   ' → logprob: -14.00009822845459
    4. ')+' → logprob: -15.37509822845459
    5. '```' → logprob: -15.50009822845459
    6. '+
' → logprob: -15.75009822845459
    7. '):
' → logprob: -16.250097274780273
    8. '[' → logprob: -16.375097274780273
    9. '()+' → logprob: -16.625097274780273
    10. ')' → logprob: -16.625097274780273

Token 809: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.455048449221067e-05
    2. '+' → logprob: -9.875054359436035
    3. ' ' → logprob: -12.875054359436035
    4. 'max' → logprob: -14.875054359436035
    5. '```' → logprob: -17.12505531311035
    6. ' +' → logprob: -17.37505531311035
    7. '   ' → logprob: -17.50005531311035
    8. ')' → logprob: -18.37505531311035
    9. '
' → logprob: -19.00005531311035
    10. '``' → logprob: -19.50005531311035

Token 810: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14397506415843964
    2. '):' → logprob: -2.018975019454956
    3. '   ' → logprob: -7.143975257873535
    4. ':' → logprob: -8.143975257873535
    5. '):
' → logprob: -9.018975257873535
    6. '       ' → logprob: -10.518975257873535
    7. ':
' → logprob: -10.893975257873535
    8. ',' → logprob: -11.393975257873535
    9. '=' → logprob: -11.643975257873535
    10. ']:
' → logprob: -11.643975257873535

Token 811: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004711126442998648
    2. 'dist' → logprob: -5.629711151123047
    3. '   ' → logprob: -7.004711151123047
    4. ' dist' → logprob: -9.129711151123047
    5. '	dist' → logprob: -9.629711151123047
    6. '```' → logprob: -10.879711151123047
    7. '(dist' → logprob: -12.004711151123047
    8. '_dist' → logprob: -13.504711151123047
    9. '           ' → logprob: -14.629711151123047
    10. '.dist' → logprob: -15.129711151123047

Token 812: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -4.23917081207037e-05
    2. ' dist' → logprob: -10.500041961669922
    3. '   ' → logprob: -11.250041961669922
    4. '       ' → logprob: -13.500041961669922
    5. '	dist' → logprob: -14.625041961669922
    6. '_dist' → logprob: -18.875041961669922
    7. '```' → logprob: -19.500041961669922
    8. '(dist' → logprob: -20.000041961669922
    9. '           ' → logprob: -20.375041961669922
    10. '.dist' → logprob: -20.375041961669922

Token 813: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.375004768371582
    3. '[S' → logprob: -15.250004768371582
    4. 's' → logprob: -17.000003814697266
    5. ' [' → logprob: -17.000003814697266
    6. '=s' → logprob: -17.125003814697266
    7. '=' → logprob: -17.375003814697266
    8. '```' → logprob: -17.625003814697266
    9. '[i' → logprob: -18.875003814697266
    10. ' =' → logprob: -19.125003814697266

Token 814: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2573329210281372
    2. '=' → logprob: -1.5073329210281372
    3. ']=' → logprob: -5.757332801818848
    4. ' =' → logprob: -6.132332801818848
    5. ']+=' → logprob: -10.382332801818848
    6. ')' → logprob: -11.132332801818848
    7. ' ]' → logprob: -11.882332801818848
    8. '/' → logprob: -13.507332801818848
    9. '/=' → logprob: -13.882332801818848
    10. ']=(' → logprob: -14.257332801818848

Token 815: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00012570773833431304
    2. ' =' → logprob: -9.000125885009766
    3. '/=' → logprob: -13.250125885009766
    4. '=s' → logprob: -15.625125885009766
    5. '+=' → logprob: -15.875125885009766
    6. '=float' → logprob: -16.500125885009766
    7. '.=' → logprob: -17.000125885009766
    8. '=int' → logprob: -17.750125885009766
    9. '=

' → logprob: -18.375125885009766
    10. '=*/' → logprob: -18.625125885009766

Token 816: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.0002986392646562308
    2. ' ways' → logprob: -8.125298500061035
    3. '   ' → logprob: -13.000298500061035
    4. 'WAYS' → logprob: -15.875298500061035
    5. '```' → logprob: -16.37529945373535
    6. 'way' → logprob: -17.12529945373535
    7. '       ' → logprob: -18.12529945373535
    8. 'Ways' → logprob: -18.87529945373535
    9. '`' → logprob: -19.62529945373535
    10. 'float' → logprob: -19.62529945373535

Token 817: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -1.2233183042553719e-05
    2. 'prev' → logprob: -11.375012397766113
    3. '[s' → logprob: -14.375012397766113
    4. '```' → logprob: -16.000011444091797
    5. 'Prev' → logprob: -17.875011444091797
    6. '[_' → logprob: -17.875011444091797
    7. '_pre' → logprob: -18.375011444091797
    8. '_prob' → logprob: -19.375011444091797
    9. '[' → logprob: -19.375011444091797
    10. 's' → logprob: -19.625011444091797

Token 818: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -9.088346359931165e-07
    2. 's' → logprob: -14.000000953674316
    3. '[' → logprob: -18.75
    4. ' [' → logprob: -19.125
    5. '[
' → logprob: -19.5
    6. '```' → logprob: -20.125
    7. '(s' → logprob: -21.5
    8. '
' → logprob: -21.625
    9. '[S' → logprob: -21.625
    10. '[int' → logprob: -21.75

Token 819: ']/' (ID: 18500)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.25209689140319824
    2. ' /' → logprob: -1.5020968914031982
    3. ')' → logprob: -9.002097129821777
    4. ']' → logprob: -10.502097129821777
    5. ')/' → logprob: -11.627097129821777
    6. ']/' → logprob: -13.252097129821777
    7. '/s' → logprob: -13.377097129821777
    8. '   ' → logprob: -13.752097129821777
    9. '/max' → logprob: -14.377097129821777
    10. '/
' → logprob: -14.502097129821777

Token 820: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -9.088346359931165e-07
    2. ' total' → logprob: -14.000000953674316
    3. '(total' → logprob: -17.375
    4. '   ' → logprob: -19.0
    5. 'float' → logprob: -19.0
    6. '	total' → logprob: -20.5
    7. ',total' → logprob: -22.25
    8. '$total' → logprob: -22.5
    9. ' ' → logprob: -22.625
    10. '
' → logprob: -23.0

Token 821: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.128163257315464e-07
    2. 'Ways' → logprob: -16.0
    3. '```' → logprob: -17.0
    4. 'ways' → logprob: -17.0
    5. '_way' → logprob: -17.375
    6. ' ways' → logprob: -17.75
    7. '\' → logprob: -18.75
    8. ' Ways' → logprob: -19.0
    9. '   ' → logprob: -19.125
    10. '_
' → logprob: -19.125

Token 822: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -2.5776860184123507e-06
    2. 'way' → logprob: -13.12500286102295
    3. 'Ways' → logprob: -14.87500286102295
    4. 'WAYS' → logprob: -16.500001907348633
    5. '_' → logprob: -16.750001907348633
    6. ' ways' → logprob: -17.500001907348633
    7. '```' → logprob: -17.875001907348633
    8. 'K' → logprob: -20.000001907348633
    9. '**' → logprob: -20.250001907348633
    10. 'pow' → logprob: -20.375001907348633

Token 823: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5321096181869507
    2. '   ' → logprob: -0.9071096181869507
    3. '<|end|>' → logprob: -5.03210973739624
    4. '    
' → logprob: -6.53210973739624
    5. '```' → logprob: -7.90710973739624
    6. ' for' → logprob: -8.782109260559082
    7. '  
' → logprob: -9.032109260559082
    8. '<|end|>' → logprob: -9.407109260559082
    9. 'for' → logprob: -9.532109260559082
    10. ' 
' → logprob: -10.907109260559082

Token 824: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16644352674484253
    2. '
' → logprob: -1.9164435863494873
    3. 'for' → logprob: -6.041443347930908
    4. '```' → logprob: -6.166443347930908
    5. '    
' → logprob: -7.166443347930908
    6. 'dp' → logprob: -7.166443347930908
    7. ' for' → logprob: -9.291443824768066
    8. '\n' → logprob: -10.916443824768066
    9. ')' → logprob: -11.291443824768066
    10. '

' → logprob: -11.416443824768066

Token 825: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11834360659122467
    2. 'dp' → logprob: -2.9933435916900635
    3. '   ' → logprob: -3.4933435916900635
    4. 'from' → logprob: -3.6183435916900635
    5. 'import' → logprob: -5.993343830108643
    6. 'queue' → logprob: -7.618343830108643
    7. 'E' → logprob: -7.993343830108643
    8. ' for' → logprob: -8.618343353271484
    9. 'expected' → logprob: -8.868343353271484
    10. 'inv' → logprob: -9.118343353271484

Token 826: ' Since' (ID: 12265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.034536197781562805
    2. 'from' → logprob: -3.534536123275757
    3. 'E' → logprob: -6.409536361694336
    4. 'dp' → logprob: -6.534536361694336
    5. 'expected' → logprob: -7.409536361694336
    6. 'queue' → logprob: -7.409536361694336
    7. 'import' → logprob: -8.034536361694336
    8. ' for' → logprob: -10.284536361694336
    9. '   ' → logprob: -10.784536361694336
    10. 'inv' → logprob: -10.909536361694336

Token 827: ' S' (ID: 336)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.8114373683929443
    2. 'max' → logprob: -1.3114373683929443
    3. 'dp' → logprob: -1.8114373683929443
    4. 'S' → logprob: -3.0614373683929443
    5. ' S' → logprob: -3.4364373683929443
    6. ' dp' → logprob: -3.6864373683929443
    7. ' for' → logprob: -4.436437606811523
    8. 'for' → logprob: -5.936437606811523
    9. '   ' → logprob: -6.436437606811523
    10. 'E' → logprob: -7.686437606811523

Token 828: ' is' (ID: 382)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -1.2653578519821167
    2. '<=' → logprob: -1.5153578519821167
    3. '>' → logprob: -1.7653578519821167
    4. '+' → logprob: -2.2653579711914062
    5. ' >=' → logprob: -2.6403579711914062
    6. ' <=' → logprob: -2.7653579711914062
    7. ' >' → logprob: -3.1403579711914062
    8. ' <' → logprob: -3.8903579711914062
    9. '<' → logprob: -4.890357971191406
    10. '=' → logprob: -5.390357971191406

Token 829: ' large' (ID: 4410)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14165446162223816
    2. 'max' → logprob: -2.3916544914245605
    3. ' int' → logprob: -4.0166544914245605
    4. '>' → logprob: -4.6416544914245605
    5. ' max' → logprob: -6.0166544914245605
    6. '0' → logprob: -6.5166544914245605
    7. 'an' → logprob: -6.6416544914245605
    8. 'large' → logprob: -7.0166544914245605
    9. '>=' → logprob: -7.1416544914245605
    10. ' large' → logprob: -7.2666544914245605

Token 830: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8249889612197876
    2. '   ' → logprob: -1.3249889612197876
    3. ',' → logprob: -2.449988842010498
    4. '
' → logprob: -2.449988842010498
    5. ':
' → logprob: -2.824988842010498
    6. ' and' → logprob: -3.824988842010498
    7. 'and' → logprob: -4.074988842010498
    8. 'import' → logprob: -4.449988842010498
    9. '+' → logprob: -5.074988842010498
    10. '```' → logprob: -6.699988842010498

Token 831: 'up' (ID: 817)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.19044148921966553
    2. 'max' → logprob: -3.065441608428955
    3. '+' → logprob: -3.190441608428955
    4. ')' → logprob: -3.690441608428955
    5. ' S' → logprob: -4.065441608428955
    6. ' max' → logprob: -4.190441608428955
    7. '),' → logprob: -4.440441608428955
    8. '>' → logprob: -5.690441608428955
    9. 'dp' → logprob: -5.940441608428955
    10. '...' → logprob: -6.190441608428955

Token 832: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.05767788738012314
    2. '   ' → logprob: -3.807677984237671
    3. ' to' → logprob: -3.807677984237671
    4. '=' → logprob: -5.682677745819092
    5. '+' → logprob: -6.307677745819092
    6. 'To' → logprob: -7.182677745819092
    7. '>' → logprob: -7.557677745819092
    8. '-' → logprob: -7.557677745819092
    9. '...' → logprob: -7.557677745819092
    10. '```' → logprob: -7.557677745819092

Token 833: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07127952575683594
    2. 'max' → logprob: -3.821279525756836
    3. '100' → logprob: -3.946279525756836
    4. ' ' → logprob: -4.571279525756836
    5. 'S' → logprob: -4.821279525756836
    6. ' max' → logprob: -5.571279525756836
    7. 'K' → logprob: -6.071279525756836
    8. '1' → logprob: -6.696279525756836
    9. '```' → logprob: -7.696279525756836
    10. '...' → logprob: -7.821279525756836

Token 834: '10' (ID: 702)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.32187381386756897
    2. 'S' → logprob: -2.071873903274536
    3. '10' → logprob: -2.071873903274536
    4. 'K' → logprob: -4.571873664855957
    5. ' max' → logprob: -4.946873664855957
    6. '100' → logprob: -5.571873664855957
    7. ' ' → logprob: -7.446873664855957
    8. ' S' → logprob: -7.946873664855957
    9. 'N' → logprob: -8.321873664855957
    10. '1' → logprob: -8.446873664855957

Token 835: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.17151305079460144
    2. '6' → logprob: -2.671513080596924
    3. '7' → logprob: -2.671513080596924
    4. '9' → logprob: -4.796513080596924
    5. '^' → logprob: -4.796513080596924
    6. '000' → logprob: -6.296513080596924
    7. '5' → logprob: -7.671513080596924
    8. '8' → logprob: -8.046512603759766
    9. '```' → logprob: -9.796512603759766
    10. ' **' → logprob: -9.921512603759766

Token 836: '9' (ID: 24)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.7253932356834412
    2. '9' → logprob: -0.9753932356834412
    3. '7' → logprob: -1.975393295288086
    4. '8' → logprob: -9.475393295288086
    5. '5' → logprob: -10.600393295288086
    6. '```' → logprob: -11.600393295288086
    7. '**' → logprob: -13.225393295288086
    8. ' ' → logprob: -14.100393295288086
    9. '^' → logprob: -14.600393295288086
    10. '10' → logprob: -15.350393295288086

Token 837: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8728200793266296
    2. ')' → logprob: -1.1228201389312744
    3. '),' → logprob: -2.6228201389312744
    4. '):' → logprob: -2.6228201389312744
    5. '
' → logprob: -3.1228201389312744
    6. '):
' → logprob: -3.4978201389312744
    7. '   ' → logprob: -4.372819900512695
    8. ':' → logprob: -4.622819900512695
    9. ' and' → logprob: -5.372819900512695
    10. ':
' → logprob: -5.497819900512695

Token 838: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8121899962425232
    2. 'dp' → logprob: -2.437190055847168
    3. '#' → logprob: -2.562190055847168
    4. ' for' → logprob: -2.687190055847168
    5. 'import' → logprob: -3.187190055847168
    6. 'print' → logprob: -3.312190055847168
    7. ' dp' → logprob: -3.437190055847168
    8. '    ' → logprob: -3.562190055847168
    9. 'for' → logprob: -3.812190055847168
    10. ' if' → logprob: -3.812190055847168

Token 839: ' can't' (ID: 8535)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 840: ' do' (ID: 621)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0005217790603638
    2. 'continue' → logprob: -1.6255217790603638
    3. 'import' → logprob: -2.250521659851074
    4. 'print' → logprob: -2.625521659851074
    5. 'return' → logprob: -2.875521659851074
    6. ' use' → logprob: -3.000521659851074
    7. '
' → logprob: -3.625521659851074
    8. ' return' → logprob: -3.875521659851074
    9. '   ' → logprob: -4.000521659851074
    10. '```' → logprob: -4.125521659851074

Token 841: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5568007230758667
    2. 'DP' → logprob: -1.9318007230758667
    3. 'exact' → logprob: -2.1818008422851562
    4. ' exact' → logprob: -2.9318008422851562
    5. ' DP' → logprob: -3.6818008422851562
    6. ' full' → logprob: -3.8068008422851562
    7. ' dp' → logprob: -4.931800842285156
    8. ' a' → logprob: -5.056800842285156
    9. 'the' → logprob: -5.056800842285156
    10. 'full' → logprob: -5.181800842285156

Token 842: ' up' (ID: 869)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0118098258972168
    2. '
' → logprob: -1.6368098258972168
    3. '...' → logprob: -1.7618098258972168
    4. '<|end|>' → logprob: -2.011809825897217
    5. '#' → logprob: -3.136809825897217
    6. '.' → logprob: -3.761809825897217
    7. '```' → logprob: -3.761809825897217
    8. ',' → logprob: -4.761809825897217
    9. '\n' → logprob: -5.011809825897217
    10. '<|end|>' → logprob: -5.011809825897217

Token 843: ' to' (ID: 316)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3783470392227173
    2. 'for' → logprob: -1.8783470392227173
    3. 'wards' → logprob: -2.0033469200134277
    4. '   ' → logprob: -2.8783469200134277
    5. 'on' → logprob: -3.0033469200134277
    6. 'n' → logprob: -3.5033469200134277
    7. 'with' → logprob: -3.6283469200134277
    8. 'up' → logprob: -3.8783469200134277
    9. 'to' → logprob: -4.128346920013428
    10. '0' → logprob: -4.128346920013428

Token 844: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.09111646562814713
    2. 'max' → logprob: -3.091116428375244
    3. ' S' → logprob: -4.216116428375244
    4. ' max' → logprob: -4.591116428375244
    5. '100' → logprob: -4.966116428375244
    6. 'min' → logprob: -5.341116428375244
    7. ' min' → logprob: -6.341116428375244
    8. 'K' → logprob: -6.841116428375244
    9. '10' → logprob: -7.216116428375244
    10. ' ' → logprob: -7.466116428375244

Token 845: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06858284026384354
    2. '.' → logprob: -3.943582773208618
    3. '   ' → logprob: -4.193583011627197
    4. ',' → logprob: -4.693583011627197
    5. '<|end|>' → logprob: -5.068583011627197
    6. '...' → logprob: -5.693583011627197
    7. '```' → logprob: -5.693583011627197
    8. ',
' → logprob: -5.943583011627197
    9. '.
' → logprob: -5.943583011627197
    10. '<|end|>' → logprob: -6.568583011627197

Token 846: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11400526762008667
    2. '
' → logprob: -2.8640053272247314
    3. '#' → logprob: -3.6140053272247314
    4. '```' → logprob: -4.364005088806152
    5. '<|end|>' → logprob: -5.614005088806152
    6. '...' → logprob: -6.489005088806152
    7. 'return' → logprob: -6.614005088806152
    8. ' if' → logprob: -7.489005088806152
    9. '    
' → logprob: -7.614005088806152
    10. 'Continue' → logprob: -8.114005088806152

Token 847: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9576918482780457
    2. 'return' → logprob: -1.0826919078826904
    3. 'if' → logprob: -1.5826919078826904
    4. '#' (adapté à ' #') → logprob: -3.0826919078826904
    5. 'print' → logprob: -4.457691669464111
    6. 'dp' → logprob: -5.457691669464111
    7. 'from' → logprob: -5.832691669464111
    8. 'for' → logprob: -5.832691669464111
    9. ' if' → logprob: -6.832691669464111
    10. 'import' → logprob: -7.332691669464111

Token 848: ' We' (ID: 1416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7891409993171692
    2. 'print' → logprob: -1.6641409397125244
    3. 'return' → logprob: -1.7891409397125244
    4. 'if' → logprob: -2.5391409397125244
    5. 'from' → logprob: -3.2891409397125244
    6. 'dp' → logprob: -3.6641409397125244
    7. '   ' → logprob: -3.7891409397125244
    8. 'for' → logprob: -4.5391411781311035
    9. 'import' → logprob: -5.5391411781311035
    10. 'step' → logprob: -6.0391411781311035

Token 849: ' exploit' (ID: 55310)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.361435890197754
    2. ' ' → logprob: -1.736435890197754
    3. ' =' → logprob: -1.861435890197754
    4. '#' → logprob: -2.736435890197754
    5. 'import' → logprob: -2.861435890197754
    6. ' continue' → logprob: -2.861435890197754
    7. '_' → logprob: -3.736435890197754
    8. '[' → logprob: -3.736435890197754
    9. ''ll' → logprob: -3.736435890197754
    10. '   ' → logprob: -3.986435890197754

Token 850: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2201075553894043
    2. ' the' → logprob: -1.4701075553894043
    3. ' math' → logprob: -1.4701075553894043
    4. ' that' → logprob: -2.9701075553894043
    5. ' a' → logprob: -3.0951075553894043
    6. ' linear' → logprob: -3.2201075553894043
    7. 'that' → logprob: -3.5951075553894043
    8. 'math' → logprob: -3.8451075553894043
    9. 'mat' → logprob: -4.345107555389404
    10. ' mathematical' → logprob: -4.345107555389404

Token 851: ' linear' (ID: 23876)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5066757202148438
    2. 'math' → logprob: -1.5066757202148438
    3. 'period' → logprob: -3.2566757202148438
    4. '```' → logprob: -3.5066757202148438
    5. 'mod' → logprob: -4.006675720214844
    6. 'import' → logprob: -4.006675720214844
    7. '...' → logprob: -4.506675720214844
    8. '#' → logprob: -5.256675720214844
    9. 'prob' → logprob: -5.381675720214844
    10. 'from' → logprob: -5.631675720214844

Token 852: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.0638214498758316
    2. 'rec' → logprob: -2.93882155418396
    3. 'al' → logprob: -5.313821315765381
    4. ' recurrence' → logprob: -6.063821315765381
    5. '```' → logprob: -7.188821315765381
    6. 'relation' → logprob: -8.688821792602539
    7. 'space' → logprob: -9.313821792602539
    8. 'con' → logprob: -9.563821792602539
    9. ' rec' → logprob: -9.813821792602539
    10. 'conv' → logprob: -9.938821792602539

Token 853: ' and' (ID: 326)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.22470548748970032
    2. 'of' → logprob: -2.349705457687378
    3. 'ity' → logprob: -3.349705457687378
    4. '
' → logprob: -4.224705696105957
    5. '.' → logprob: -5.099705696105957
    6. '=' → logprob: -5.224705696105957
    7. ' =' → logprob: -5.474705696105957
    8. ' and' → logprob: -5.599705696105957
    9. '_' → logprob: -5.724705696105957
    10. '#' → logprob: -5.849705696105957

Token 854: ' monot' (ID: 138920)
  Prédit: 'period'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'period' → logprob: -0.777667760848999
    2. 'use' → logprob: -1.152667760848999
    3. 'mark' → logprob: -3.152667760848999
    4. 'Mark' → logprob: -3.402667760848999
    5. 'the' → logprob: -3.777667760848999
    6. ' use' → logprob: -4.027667999267578
    7. 'math' → logprob: -4.152667999267578
    8. 'return' → logprob: -4.277667999267578
    9. 'prob' → logprob: -4.652667999267578
    10. 'mat' → logprob: -4.902667999267578

Token 855: 'onic' (ID: 18294)
  Prédit: 'onic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onic' → logprob: -1.0454543828964233
    2. 'ocity' → logprob: -1.2954543828964233
    3. 'icity' → logprob: -1.9204543828964233
    4. 'e' → logprob: -2.795454502105713
    5. 'o' → logprob: -3.170454502105713
    6. 'ot' → logprob: -3.420454502105713
    7. 'ony' → logprob: -3.420454502105713
    8. '```' → logprob: -4.170454502105713
    9. '#' → logprob: -4.295454502105713
    10. '
' → logprob: -5.170454502105713

Token 856: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.03127237781882286
    2. 'y' → logprob: -4.1562724113464355
    3. 'def' → logprob: -4.4062724113464355
    4. '
' → logprob: -7.2812724113464355
    5. '#' → logprob: -7.4062724113464355
    6. 'e' → logprob: -7.9062724113464355
    7. '   ' → logprob: -8.031271934509277
    8. 'if' → logprob: -8.281271934509277
    9. 'import' → logprob: -8.281271934509277
    10. 'ty' → logprob: -9.531271934509277

Token 857: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3263097107410431
    2. '   ' → logprob: -2.0763096809387207
    3. ' of' → logprob: -2.2013096809387207
    4. ' and' → logprob: -4.576309680938721
    5. ' to' → logprob: -5.201309680938721
    6. 'of' → logprob: -5.201309680938721
    7. '    
' → logprob: -5.701309680938721
    8. '#' → logprob: -5.951309680938721
    9. '.' → logprob: -6.076309680938721
    10. 'and' → logprob: -6.451309680938721

Token 858: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18939465284347534
    2. ' dp' → logprob: -3.06439471244812
    3. 'dp' → logprob: -3.43939471244812
    4. '#' → logprob: -3.43939471244812
    5. ' for' → logprob: -3.93939471244812
    6. '
' → logprob: -4.439394474029541
    7. ' if' → logprob: -4.814394474029541
    8. ' step' → logprob: -5.189394474029541
    9. ' #' → logprob: -5.689394474029541
    10. ' from' → logprob: -6.439394474029541

Token 859: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5273211598396301
    2. 'E' → logprob: -2.7773211002349854
    3. 'step' → logprob: -2.7773211002349854
    4. 'expected' → logprob: -3.0273211002349854
    5. 'for' → logprob: -3.1523211002349854
    6. '#' (adapté à ' #') → logprob: -3.5273211002349854
    7. 'period' → logprob: -3.7773211002349854
    8. 'from' → logprob: -4.2773213386535645
    9. 'res' → logprob: -4.4023213386535645
    10. 'if' → logprob: -4.4023213386535645

Token 860: ' Let' (ID: 9024)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8366950750350952
    2. 'expected' → logprob: -1.7116950750350952
    3. '#' → logprob: -1.9616950750350952
    4. 'import' → logprob: -2.7116951942443848
    5. 'dp' → logprob: -2.9616951942443848
    6. 'E' → logprob: -3.5866951942443848
    7. ' from' → logprob: -3.9616951942443848
    8. 'average' → logprob: -4.711695194244385
    9. ' expected' → logprob: -4.961695194244385
    10. 'mean' → logprob: -4.961695194244385

Token 861: ' E' (ID: 457)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -1.181970477104187
    2. 'E' → logprob: -1.556970477104187
    3. 'from' → logprob: -2.6819705963134766
    4. 'x' → logprob: -2.8069705963134766
    5. ' E' → logprob: -2.9319705963134766
    6. 'dp' → logprob: -3.0569705963134766
    7. ' expected' → logprob: -3.5569705963134766
    8. 'p' → logprob: -3.9319705963134766
    9. 'low' → logprob: -4.056970596313477
    10. 'M' → logprob: -4.181970596313477

Token 862: ' be' (ID: 413)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.0845085382461548
    2. '=' → logprob: -1.4595085382461548
    3. '[S' → logprob: -1.5845085382461548
    4. ' =' → logprob: -2.4595084190368652
    5. '[' → logprob: -2.7095084190368652
    6. '_values' → logprob: -3.7095084190368652
    7. 'S' → logprob: -3.7095084190368652
    8. '(' → logprob: -4.959508419036865
    9. '(s' → logprob: -5.834508419036865
    10. '[
' → logprob: -6.209508419036865

Token 863: ' expected' (ID: 5930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1190567016601562
    2. 'E' → logprob: -1.9940567016601562
    3. 'dp' → logprob: -2.1190567016601562
    4. 'a' → logprob: -2.2440567016601562
    5. ' a' → logprob: -2.3690567016601562
    6. 'the' → logprob: -3.7440567016601562
    7. ' [' → logprob: -3.8690567016601562
    8. '[int' → logprob: -3.8690567016601562
    9. '[S' → logprob: -3.9940567016601562
    10. '0' → logprob: -4.244056701660156

Token 864: ' hitting' (ID: 34749)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.3515954315662384
    2. '_steps' → logprob: -1.976595401763916
    3. '=' → logprob: -2.476595401763916
    4. '_' → logprob: -3.976595401763916
    5. '_time' → logprob: -4.101595401763916
    6. 'value' → logprob: -4.351595401763916
    7. ' =' → logprob: -4.851595401763916
    8. '_values' → logprob: -4.851595401763916
    9. '_val' → logprob: -6.101595401763916
    10. '_step' → logprob: -6.351595401763916

Token 865: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.005450516473501921
    2. '_' → logprob: -6.38045072555542
    3. '_value' → logprob: -6.38045072555542
    4. '_times' → logprob: -6.38045072555542
    5. 'time' → logprob: -9.130450248718262
    6. ' _' → logprob: -9.505450248718262
    7. '_t' → logprob: -9.755450248718262
    8. '
' → logprob: -10.755450248718262
    9. ' ' → logprob: -11.255450248718262
    10. ' time' → logprob: -11.505450248718262

Token 866: ' at' (ID: 540)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.0829449892044067
    2. ' =' → logprob: -1.4579449892044067
    3. '[' → logprob: -2.332944869995117
    4. '(' → logprob: -2.707944869995117
    5. '=' → logprob: -3.332944869995117
    6. '
' → logprob: -3.332944869995117
    7. '(
' → logprob: -3.457944869995117
    8. '[
' → logprob: -3.582944869995117
    9. '(s' → logprob: -3.707944869995117
    10. '_' → logprob: -3.832944869995117

Token 867: ' position' (ID: 4010)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25342297554016113
    2. 'S' → logprob: -2.128422975540161
    3. 'position' → logprob: -3.003422975540161
    4. ' ' → logprob: -3.628422975540161
    5. ' position' → logprob: -4.753422737121582
    6. ' S' → logprob: -4.878422737121582
    7. 'state' → logprob: -5.253422737121582
    8. 'x' → logprob: -5.878422737121582
    9. 'positions' → logprob: -7.378422737121582
    10. 'all' → logprob: -8.128422737121582

Token 868: ' x' (ID: 1215)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.4136253595352173
    2. ' S' → logprob: -1.1636253595352173
    3. '0' → logprob: -4.288625240325928
    4. ' ' → logprob: -5.663625240325928
    5. ' =' → logprob: -6.163625240325928
    6. 'x' → logprob: -6.413625240325928
    7. '`' → logprob: -7.038625240325928
    8. 'E' → logprob: -7.538625240325928
    9. '=' → logprob: -7.663625240325928
    10. ' x' → logprob: -7.788625240325928

Token 869: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3146324157714844
    2. ' =' → logprob: -1.9396324157714844
    3. ':' → logprob: -2.1896324157714844
    4. '   ' → logprob: -2.4396324157714844
    5. '_
' → logprob: -2.8146324157714844
    6. '_' → logprob: -3.3146324157714844
    7. '(S' → logprob: -3.4396324157714844
    8. ':
' → logprob: -3.5646324157714844
    9. '```' → logprob: -3.8146324157714844
    10. '[' → logprob: -3.8146324157714844

Token 870: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040798015892505646
    2. '#' → logprob: -4.540798187255859
    3. '    ' → logprob: -5.290798187255859
    4. ' 
' → logprob: -5.415798187255859
    5. ' E' → logprob: -5.540798187255859
    6. 'E' → logprob: -5.665798187255859
    7. '
' → logprob: -5.790798187255859
    8. '\' → logprob: -7.040798187255859
    9. ' for' → logprob: -7.040798187255859
    10. '\n' → logprob: -7.040798187255859

Token 871: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5087197422981262
    2. ' E' → logprob: -1.7587196826934814
    3. ' dp' → logprob: -2.6337196826934814
    4. 'E' → logprob: -3.0087196826934814
    5. '
' → logprob: -4.1337199211120605
    6. '    ' → logprob: -4.1337199211120605
    7. 'dp' → logprob: -4.2587199211120605
    8. ' for' → logprob: -4.7587199211120605
    9. ' =' → logprob: -5.1337199211120605
    10. ' \' → logprob: -5.1337199211120605

Token 872: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.0697094202041626
    2. 'dp' → logprob: -1.5697094202041626
    3. 'for' → logprob: -1.9447094202041626
    4. ' for' → logprob: -2.444709300994873
    5. 'from' → logprob: -2.694709300994873
    6. ' E' → logprob: -3.444709300994873
    7. '   ' → logprob: -3.569709300994873
    8. ' from' → logprob: -3.819709300994873
    9. '#' → logprob: -4.319709300994873
    10. ' dp' → logprob: -4.444709300994873

Token 873: '(x' (ID: 4061)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.7904716730117798
    2. ' =' → logprob: -1.4154716730117798
    3. '[S' → logprob: -2.2904715538024902
    4. '=' → logprob: -2.4154715538024902
    5. '[' → logprob: -3.2904715538024902
    6. '(s' → logprob: -3.5404715538024902
    7. '(' → logprob: -3.5404715538024902
    8. 's' → logprob: -4.79047155380249
    9. '[s' → logprob: -5.41547155380249
    10. '[]' → logprob: -7.29047155380249

Token 874: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01551408227533102
    2. '+' → logprob: -5.265513896942139
    3. '[' → logprob: -6.140513896942139
    4. '=' → logprob: -6.390513896942139
    5. ')=' → logprob: -6.390513896942139
    6. ' )' → logprob: -6.890513896942139
    7. '[x' → logprob: -7.140513896942139
    8. '+)' → logprob: -7.390513896942139
    9. '[S' → logprob: -7.890513896942139
    10. ' =' → logprob: -7.890513896942139

Token 875: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04865344986319542
    2. '=' → logprob: -3.0486533641815186
    3. ')' → logprob: -10.048653602600098
    4. '```' → logprob: -12.173653602600098
    5. ' =
' → logprob: -12.423653602600098
    6. '   ' → logprob: -12.548653602600098
    7. ' ' → logprob: -13.048653602600098
    8. '[' → logprob: -13.673653602600098
    9. '[i' → logprob: -13.923653602600098
    10. ']' → logprob: -14.423653602600098

Token 876: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10061626881361008
    2. ' ' → logprob: -2.350616216659546
    3. ' (' → logprob: -8.475616455078125
    4. '(' → logprob: -9.225616455078125
    5. '   ' → logprob: -9.850616455078125
    6. '0' → logprob: -10.600616455078125
    7. ' max' → logprob: -12.350616455078125
    8. '`' → logprob: -12.725616455078125
    9. '{' → logprob: -13.100616455078125
    10. '
' → logprob: -13.350616455078125

Token 877: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025573535822331905
    2. ' ' → logprob: -6.127557277679443
    3. '(' → logprob: -8.252557754516602
    4. '0' → logprob: -10.127557754516602
    5. '`' → logprob: -10.752557754516602
    6. ' (' → logprob: -11.127557754516602
    7. '"' → logprob: -11.502557754516602
    8. '   ' → logprob: -12.002557754516602
    9. '{' → logprob: -12.252557754516602
    10. '
' → logprob: -13.002557754516602

Token 878: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.054929450154304504
    2. '+' → logprob: -2.929929494857788
    3. ' -' → logprob: -10.304929733276367
    4. ' +
' → logprob: -12.304929733276367
    5. '-' → logprob: -12.679929733276367
    6. ')' → logprob: -13.304929733276367
    7. '```' → logprob: -13.679929733276367
    8. '+
' → logprob: -13.929929733276367
    9. '    ' → logprob: -15.179929733276367
    10. ' ' → logprob: -15.304929733276367

Token 879: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.06837144494056702
    2. ' sum' → logprob: -2.943371534347534
    3. '\' → logprob: -4.943371295928955
    4. 'dist' → logprob: -6.318371295928955
    5. ' \' → logprob: -7.068371295928955
    6. '   ' → logprob: -7.193371295928955
    7. ' ' → logprob: -7.568371295928955
    8. ' ' → logprob: -7.568371295928955
    9. 'max' → logprob: -8.193371772766113
    10. ' (' → logprob: -8.318371772766113

Token 880: '_{' (ID: 22305)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4617988169193268
    2. '[' → logprob: -2.211798906326294
    3. ' ' → logprob: -3.211798906326294
    4. ' _' → logprob: -3.336798906326294
    5. ' (' → logprob: -3.586798906326294
    6. '`' → logprob: -3.586798906326294
    7. '```' → logprob: -3.711798906326294
    8. '(s' → logprob: -3.961798906326294
    9. '(' → logprob: -4.086798667907715
    10. '   ' → logprob: -4.461798667907715

Token 881: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006393353454768658
    2. ' s' → logprob: -5.1313934326171875
    3. '_s' → logprob: -8.256393432617188
    4. 'i' → logprob: -9.881393432617188
    5. 'x' → logprob: -9.881393432617188
    6. 'v' → logprob: -10.756393432617188
    7. '   ' → logprob: -10.881393432617188
    8. '_' → logprob: -11.506393432617188
    9. 'dist' → logprob: -11.631393432617188
    10. 'pos' → logprob: -12.131393432617188

Token 882: '=' (ID: 28)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3189244270324707
    2. '(s' → logprob: -1.3189244270324707
    3. '[' → logprob: -2.6939244270324707
    4. '[s' → logprob: -2.8189244270324707
    5. '[-' → logprob: -3.1939244270324707
    6. ')' → logprob: -3.3189244270324707
    7. ' -' → logprob: -3.3189244270324707
    8. '=' → logprob: -3.5689244270324707
    9. '[
' → logprob: -3.8189244270324707
    10. '
' → logprob: -3.9439244270324707

Token 883: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.032069962471723557
    2. 's' → logprob: -5.157070159912109
    3. 'v' → logprob: -5.282070159912109
    4. '1' → logprob: -5.282070159912109
    5. 'x' → logprob: -5.407070159912109
    6. 'range' → logprob: -5.407070159912109
    7. 'max' → logprob: -6.032070159912109
    8. '=' → logprob: -6.907070159912109
    9. ' K' → logprob: -7.532070159912109
    10. ')' → logprob: -7.532070159912109

Token 884: '}^{' (ID: 107298)
  Prédit: '}^{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}^{' → logprob: -0.3254370093345642
    2. '}' → logprob: -1.325437068939209
    3. '}s' → logprob: -5.325437068939209
    4. ',' → logprob: -5.700437068939209
    5. ',v' → logprob: -7.075437068939209
    6. '```' → logprob: -7.200437068939209
    7. 's' → logprob: -7.825437068939209
    8. ',s' → logprob: -8.20043659210205
    9. '+' → logprob: -8.20043659210205
    10. ',N' → logprob: -8.32543659210205

Token 885: 'K' (ID: 42)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -6.861651490908116e-05
    2. 'N' → logprob: -9.875068664550781
    3. ' max' → logprob: -11.500068664550781
    4. 'x' → logprob: -12.625068664550781
    5. 's' → logprob: -13.125068664550781
    6. '(max' → logprob: -14.125068664550781
    7. '}' → logprob: -15.000068664550781
    8. '	max' → logprob: -16.00006866455078
    9. '_max' → logprob: -16.12506866455078
    10. '```' → logprob: -16.37506866455078

Token 886: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.0009754245402291417
    2. 'N' → logprob: -7.000975608825684
    3. '*' → logprob: -9.875975608825684
    4. '**' → logprob: -12.375975608825684
    5. '```' → logprob: -13.125975608825684
    6. '*n' → logprob: -14.125975608825684
    7. '...' → logprob: -14.250975608825684
    8. '
' → logprob: -14.375975608825684
    9. 'max' → logprob: -14.625975608825684
    10. '}' → logprob: -14.625975608825684

Token 887: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0010518652852624655
    2. '}s' → logprob: -7.251051902770996
    3. '}(' → logprob: -8.626051902770996
    4. 's' → logprob: -9.501051902770996
    5. '}
' → logprob: -10.251051902770996
    6. '}[' → logprob: -11.001051902770996
    7. '```' → logprob: -11.876051902770996
    8. ' }' → logprob: -12.126051902770996
    9. 'dist' → logprob: -12.501051902770996
    10. '   ' → logprob: -12.626051902770996

Token 888: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.11396270990371704
    2. 'dist' → logprob: -2.6139626502990723
    3. 'prob' → logprob: -4.488962650299072
    4. ' prob' → logprob: -4.613962650299072
    5. ' int' → logprob: -4.988962650299072
    6. ' ways' → logprob: -6.113962650299072
    7. ' s' → logprob: -6.363962650299072
    8. ' dp' → logprob: -7.738962650299072
    9. '(dist' → logprob: -7.988962650299072
    10. 'int' → logprob: -7.988962650299072

Token 889: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.5797157287597656
    2. '[' → logprob: -0.8297157287597656
    3. 'dist' → logprob: -6.704715728759766
    4. ' [' → logprob: -7.454715728759766
    5. '(s' → logprob: -7.954715728759766
    6. '[
' → logprob: -8.329715728759766
    7. '```' → logprob: -8.454715728759766
    8. '_' → logprob: -8.579715728759766
    9. '_dist' → logprob: -8.829715728759766
    10. '[x' → logprob: -8.954715728759766

Token 890: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.046991217881441116
    2. '[x' → logprob: -3.6719911098480225
    3. '[s' → logprob: -5.046991348266602
    4. ']*' → logprob: -5.171991348266602
    5. '   ' → logprob: -5.671991348266602
    6. '*' → logprob: -6.796991348266602
    7. ']*(' → logprob: -7.171991348266602
    8. ' *' → logprob: -7.171991348266602
    9. '[' → logprob: -7.296991348266602
    10. '       ' → logprob: -8.046991348266602

Token 891: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08470650762319565
    2. '*' → logprob: -2.8347065448760986
    3. '   ' → logprob: -4.3347063064575195
    4. '[s' → logprob: -5.9597063064575195
    5. '[x' → logprob: -6.0847063064575195
    6. '[' → logprob: -6.4597063064575195
    7. '```' → logprob: -7.3347063064575195
    8. '*(' → logprob: -7.8347063064575195
    9. ' E' → logprob: -8.45970630645752
    10. '(s' → logprob: -8.58470630645752

Token 892: ' E' (ID: 457)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004238904919475317
    2. '(dp' → logprob: -5.629239082336426
    3. ' dp' → logprob: -7.629239082336426
    4. '(' → logprob: -9.504239082336426
    5. '(E' → logprob: -10.754239082336426
    6. ' (' → logprob: -11.004239082336426
    7. '`' → logprob: -11.254239082336426
    8. '```' → logprob: -12.254239082336426
    9. '(f' → logprob: -12.504239082336426
    10. 'E' → logprob: -12.629239082336426

Token 893: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7021840214729309
    2. '[x' → logprob: -1.3271839618682861
    3. '(' → logprob: -2.577183961868286
    4. '[' → logprob: -2.952183961868286
    5. '(S' → logprob: -3.077183961868286
    6. '(s' → logprob: -3.952183961868286
    7. ' (' → logprob: -4.702184200286865
    8. '[s' → logprob: -5.327184200286865
    9. '[S' → logprob: -5.327184200286865
    10. ' =' → logprob: -5.952184200286865

Token 894: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.33511069416999817
    2. '-' → logprob: -1.3351106643676758
    3. '-s' → logprob: -3.835110664367676
    4. '-x' → logprob: -11.460110664367676
    5. ' ' → logprob: -13.960110664367676
    6. '-k' → logprob: -14.335110664367676
    7. 's' → logprob: -15.960110664367676
    8. '-t' → logprob: -16.085111618041992
    9. '-S' → logprob: -16.210111618041992
    10. '-token' → logprob: -16.335111618041992

Token 895: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.3458322731312364e-06
    2. ' s' → logprob: -11.875007629394531
    3. '```' → logprob: -16.25000762939453
    4. 'x' → logprob: -16.50000762939453
    5. '   ' → logprob: -17.25000762939453
    6. '(s' → logprob: -17.37500762939453
    7. '`s' → logprob: -17.62500762939453
    8. '_s' → logprob: -18.37500762939453
    9. '{s' → logprob: -19.25000762939453
    10. 'S' → logprob: -19.37500762939453

Token 896: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005886010359972715
    2. '   ' → logprob: -6.380886077880859
    3. ')
' → logprob: -6.380886077880859
    4. ']' → logprob: -6.755886077880859
    5. '])' → logprob: -7.005886077880859
    6. ')]' → logprob: -9.13088607788086
    7. ')`' → logprob: -9.50588607788086
    8. '       ' → logprob: -9.75588607788086
    9. ' )' → logprob: -10.50588607788086
    10. ')`
' → logprob: -10.88088607788086

Token 897: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2982431948184967
    2. '\n' → logprob: -2.673243284225464
    3. '
' → logprob: -2.798243284225464
    4. 'for' → logprob: -3.298243284225464
    5. ' for' → logprob: -3.673243284225464
    6. '    
' → logprob: -4.173243045806885
    7. ''\' → logprob: -4.923243045806885
    8. ' 
' → logprob: -5.048243045806885
    9. ' if' → logprob: -5.173243045806885
    10. '       ' → logprob: -5.298243045806885

Token 898: ' E' (ID: 457)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.024925461038947105
    2. '(x' → logprob: -4.024925231933594
    3. '0' → logprob: -5.774925231933594
    4. ' x' → logprob: -6.899925231933594
    5. '(' → logprob: -7.024925231933594
    6. 'if' → logprob: -8.149925231933594
    7. 'E' → logprob: -8.149925231933594
    8. '
' → logprob: -8.399925231933594
    9. 'for' → logprob: -8.649925231933594
    10. 'max' → logprob: -8.774925231933594

Token 899: '(y' (ID: 14684)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010444222018122673
    2. '(x' → logprob: -5.010444164276123
    3. '0' → logprob: -5.635444164276123
    4. 'x' → logprob: -9.760444641113281
    5. '[' → logprob: -10.135444641113281
    6. '(s' → logprob: -10.385444641113281
    7. ' (' → logprob: -11.635444641113281
    8. '=' → logprob: -12.260444641113281
    9. '```' → logprob: -13.010444641113281
    10. '<' → logprob: -13.385444641113281

Token 900: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.041586801409721375
    2. ' <' → logprob: -3.2915868759155273
    3. ')' → logprob: -6.041586875915527
    4. '<=' → logprob: -7.791586875915527
    5. '<x' → logprob: -8.791586875915527
    6. '[y' → logprob: -9.041586875915527
    7. '==' → logprob: -9.541586875915527
    8. ')<' → logprob: -9.541586875915527
    9. '[' → logprob: -9.791586875915527
    10. ' <=' → logprob: -9.916586875915527

Token 901: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -19.125001907348633
    4. '=' → logprob: -19.375001907348633
    5. '```' → logprob: -21.375001907348633
    6. '  ' → logprob: -21.500001907348633
    7. ')' → logprob: -22.250001907348633
    8. '1' → logprob: -22.500001907348633
    9. '-' → logprob: -22.750001907348633
    10. '۰' → logprob: -23.375001907348633

Token 902: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '=' → logprob: -18.75
    4. '```' → logprob: -19.0
    5. '۰' → logprob: -19.5
    6. '   ' → logprob: -19.5
    7. '1' → logprob: -19.625
    8. ')' → logprob: -20.25
    9. '-' → logprob: -20.375
    10. '`' → logprob: -21.25

Token 903: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028462346643209457
    2. ')=' → logprob: -3.6534624099731445
    3. ']=' → logprob: -6.9034624099731445
    4. ']' → logprob: -6.9034624099731445
    5. '])' → logprob: -9.403462409973145
    6. ')==' → logprob: -10.028462409973145
    7. ' )' → logprob: -11.778462409973145
    8. ']==' → logprob: -12.028462409973145
    9. '）' → logprob: -12.653462409973145
    10. '=' → logprob: -13.028462409973145

Token 904: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006717863027006388
    2. ' =' → logprob: -5.006717681884766
    3. ']=' → logprob: -13.631717681884766
    4. '==' → logprob: -14.631717681884766
    5. ')=' → logprob: -14.881717681884766
    6. '```' → logprob: -15.881717681884766
    7. ')' → logprob: -16.631717681884766
    8. ']' → logprob: -16.631717681884766
    9. '=True' → logprob: -17.381717681884766
    10. ' ==' → logprob: -18.256717681884766

Token 905: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.500024795532227
    4. '=' → logprob: -19.000024795532227
    5. '1' → logprob: -19.000024795532227
    6. '
' → logprob: -19.000024795532227
    7. '```' → logprob: -19.000024795532227
    8. '۰' → logprob: -19.625024795532227
    9. '  ' → logprob: -19.750024795532227
    10. '00' → logprob: -20.250024795532227

Token 906: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.375003814697266
    4. '```' → logprob: -18.875003814697266
    5. '00' → logprob: -19.500003814697266
    6. '۰' → logprob: -19.500003814697266
    7. '1' → logprob: -19.500003814697266
    8. '=' → logprob: -19.500003814697266
    9. '
' → logprob: -19.875003814697266
    10. '000' → logprob: -20.375003814697266

Token 907: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6413297653198242
    2. '   ' → logprob: -0.7663297653198242
    3. '    
' → logprob: -5.516329765319824
    4. '\n' → logprob: -5.891329765319824
    5. '```' → logprob: -7.391329765319824
    6. '

' → logprob: -8.391329765319824
    7. '\' → logprob: -8.766329765319824
    8. ')' → logprob: -8.891329765319824
    9. ',' → logprob: -8.891329765319824
    10. ')
' → logprob: -9.266329765319824

Token 908: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01467063371092081
    2. '
' → logprob: -4.3896708488464355
    3. ' for' → logprob: -7.7646708488464355
    4. '    
' → logprob: -7.7646708488464355
    5. 'for' → logprob: -7.7646708488464355
    6. '```' → logprob: -7.8896708488464355
    7. 'dp' → logprob: -8.389670372009277
    8. '\' → logprob: -10.139670372009277
    9. 'from' → logprob: -10.264670372009277
    10. ' 
' → logprob: -10.514670372009277

Token 909: ' #' (ID: 1069)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.0696611404418945
    2. 'dp' → logprob: -1.4446611404418945
    3. '   ' → logprob: -1.5696611404418945
    4. 'from' → logprob: -2.1946611404418945
    5. 'for' → logprob: -3.0696611404418945
    6. '#' (adapté à ' #') → logprob: -3.8196611404418945
    7. 'import' → logprob: -4.5696611404418945
    8. 'step' → logprob: -5.5696611404418945
    9. 'memo' → logprob: -5.6946611404418945
    10. 'def' → logprob: -5.8196611404418945

Token 910: ' For' (ID: 2214)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4842866063117981
    2. 'for' → logprob: -2.2342865467071533
    3. 'E' → logprob: -2.4842865467071533
    4. 'dp' → logprob: -2.6092865467071533
    5. 'step' → logprob: -3.2342865467071533
    6. '#' → logprob: -3.7342865467071533
    7. 'import' → logprob: -4.359286785125732
    8. 'expected' → logprob: -4.359286785125732
    9. 'low' → logprob: -5.359286785125732
    10. 'if' → logprob: -5.609286785125732

Token 911: ' large' (ID: 4410)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5258834362030029
    2. 's' → logprob: -1.150883436203003
    3. 'step' → logprob: -3.900883436203003
    4. ' step' → logprob: -4.400883674621582
    5. ' i' → logprob: -4.650883674621582
    6. 'pos' → logprob: -4.650883674621582
    7. ' _' → logprob: -5.150883674621582
    8. 'i' → logprob: -5.150883674621582
    9. ' offset' → logprob: -5.525883674621582
    10. ' pos' → logprob: -5.525883674621582

Token 912: ' x' (ID: 1215)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.06311985850334167
    2. 'S' → logprob: -2.938119888305664
    3. '   ' → logprob: -6.438119888305664
    4. ' ' → logprob: -7.438119888305664
    5. '
' → logprob: -7.438119888305664
    6. '```' → logprob: -7.688119888305664
    7. ' positions' → logprob: -7.688119888305664
    8. '    ' → logprob: -8.063119888305664
    9. ' 
' → logprob: -8.063119888305664
    10. '(S' → logprob: -8.438119888305664

Token 913: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8711714744567871
    2. ':' → logprob: -1.121171474456787
    3. ':
' → logprob: -2.246171474456787
    4. '+' → logprob: -3.121171474456787
    5. ',' → logprob: -3.496171474456787
    6. '-' → logprob: -4.621171474456787
    7. ' and' → logprob: -4.871171474456787
    8. ' if' → logprob: -4.996171474456787
    9. '
' → logprob: -4.996171474456787
    10. 'import' → logprob: -5.246171474456787

Token 914: ' approximate' (ID: 68753)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27390503883361816
    2. 'dp' → logprob: -2.898905038833618
    3. 'import' → logprob: -3.648905038833618
    4. '   ' → logprob: -3.648905038833618
    5. ' we' → logprob: -4.023904800415039
    6. '...' → logprob: -4.273904800415039
    7. ' #' → logprob: -4.273904800415039
    8. 'from' → logprob: -4.523904800415039
    9. 'print' → logprob: -4.773904800415039
    10. ' if' → logprob: -4.898904800415039

Token 915: ':
' (ID: 734)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.7373334169387817
    2. '_' → logprob: -1.9873334169387817
    3. '<|end|>' → logprob: -1.9873334169387817
    4. ' ...' → logprob: -2.487333297729492
    5. '
' → logprob: -2.737333297729492
    6. '   ' → logprob: -2.862333297729492
    7. '<|end|>' → logprob: -2.862333297729492
    8. '...' → logprob: -2.987333297729492
    9. ' 
' → logprob: -2.987333297729492
    10. ',' → logprob: -3.737333297729492

Token 916: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06981948763132095
    2. ' dp' → logprob: -4.444819450378418
    3. 'dp' → logprob: -4.569819450378418
    4. ' if' → logprob: -4.819819450378418
    5. 'E' → logprob: -5.069819450378418
    6. ' E' → logprob: -5.194819450378418
    7. '    ' → logprob: -6.069819450378418
    8. '
' → logprob: -6.069819450378418
    9. ' eps' → logprob: -6.194819450378418
    10. ' x' → logprob: -6.319819450378418

Token 917: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1029279232025146
    2. ' step' → logprob: -1.9779279232025146
    3. 'expected' → logprob: -2.6029279232025146
    4. 'step' → logprob: -2.6029279232025146
    5. ' expected' → logprob: -2.9779279232025146
    6. 'E' → logprob: -3.6029279232025146
    7. 'mean' → logprob: -3.9779279232025146
    8. 'epsilon' → logprob: -3.9779279232025146
    9. 'delta' → logprob: -3.9779279232025146
    10. 'dp' → logprob: -4.227928161621094

Token 918: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.721837043762207
    2. 'dp' → logprob: -1.971837043762207
    3. 'step' → logprob: -2.221837043762207
    4. 'expected' → logprob: -2.596837043762207
    5. 'mu' → logprob: -2.596837043762207
    6. 'mean' → logprob: -2.596837043762207
    7. '#' → logprob: -3.096837043762207
    8. 'import' → logprob: -3.471837043762207
    9. 'from' → logprob: -3.721837043762207
    10. ' step' → logprob: -4.221837043762207

Token 919: '(x' (ID: 4061)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7471062541007996
    2. '(x' → logprob: -1.6221063137054443
    3. '(S' → logprob: -2.3721063137054443
    4. '_values' → logprob: -2.8721063137054443
    5. 'x' → logprob: -2.9971063137054443
    6. '=' → logprob: -2.9971063137054443
    7. '[x' → logprob: -3.9971063137054443
    8. '[' → logprob: -4.497106075286865
    9. '[S' → logprob: -4.622106075286865
    10. '_x' → logprob: -4.997106075286865

Token 920: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039947573095560074
    2. '+' → logprob: -3.539947509765625
    3. '[' → logprob: -6.289947509765625
    4. '(x' → logprob: -6.414947509765625
    5. ')=' → logprob: -6.414947509765625
    6. '=' → logprob: -7.164947509765625
    7. '   ' → logprob: -7.289947509765625
    8. '+)' → logprob: -7.414947509765625
    9. '[x' → logprob: -7.664947509765625
    10. ' +' → logprob: -8.414947509765625

Token 921: ' ~' (ID: 6574)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11317642778158188
    2. '=' → logprob: -2.2381763458251953
    3. ')' → logprob: -8.738176345825195
    4. ' +=' → logprob: -9.363176345825195
    5. ',' → logprob: -10.988176345825195
    6. ' ' → logprob: -10.988176345825195
    7. '+=' → logprob: -11.238176345825195
    8. ' =
' → logprob: -11.988176345825195
    9. '+' → logprob: -12.238176345825195
    10. '```' → logprob: -12.363176345825195

Token 922: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5137488842010498
    2. 'x' → logprob: -1.6387488842010498
    3. ' (' → logprob: -1.6387488842010498
    4. '(S' → logprob: -5.263749122619629
    5. ' S' → logprob: -5.763749122619629
    6. '(' → logprob: -5.763749122619629
    7. '(x' → logprob: -7.013749122619629
    8. 'S' → logprob: -7.763749122619629
    9. ' ' → logprob: -8.263749122619629
    10. '```' → logprob: -10.513749122619629

Token 923: ' /' (ID: 820)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5497081875801086
    2. '<|end|>' → logprob: -1.4247081279754639
    3. '<|end|>' → logprob: -2.924708127975464
    4. '+' → logprob: -2.924708127975464
    5. ')' → logprob: -4.174708366394043
    6. ' +' → logprob: -4.674708366394043
    7. '\n' → logprob: -4.924708366394043
    8. '#' → logprob: -4.924708366394043
    9. '*' → logprob: -5.174708366394043
    10. ' ' → logprob: -5.174708366394043

Token 924: ' E' (ID: 457)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.2000374048948288
    2. '(K' → logprob: -2.2000374794006348
    3. '(sum' → logprob: -3.7000374794006348
    4. ' (' → logprob: -4.325037479400635
    5. '(((' → logprob: -4.450037479400635
    6. '(' → logprob: -4.825037479400635
    7. ' ((' → logprob: -5.450037479400635
    8. 'sum' → logprob: -5.575037479400635
    9. 'K' → logprob: -6.325037479400635
    10. '(S' → logprob: -6.700037479400635

Token 925: '[' (ID: 58)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.295454740524292
    2. '[' → logprob: -1.545454740524292
    3. '(' → logprob: -2.795454740524292
    4. 'X' → logprob: -2.920454740524292
    5. 'S' → logprob: -3.045454740524292
    6. ' _' → logprob: -3.295454740524292
    7. '_steps' → logprob: -3.295454740524292
    8. '_step' → logprob: -3.545454740524292
    9. 'x' → logprob: -3.545454740524292
    10. '_S' → logprob: -3.920454740524292

Token 926: 'step' (ID: 17509)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.45738911628723145
    2. 'step' → logprob: -2.2073891162872314
    3. 'v' → logprob: -2.8323891162872314
    4. 'value' → logprob: -3.5823891162872314
    5. '_steps' → logprob: -3.5823891162872314
    6. 'dist' → logprob: -3.7073891162872314
    7. '_step' → logprob: -3.8323891162872314
    8. '(' → logprob: -3.9573891162872314
    9. 'sum' → logprob: -4.207388877868652
    10. '_value' → logprob: -4.957388877868652

Token 927: '],' (ID: 2155)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.5029626488685608
    2. ']' → logprob: -1.252962589263916
    3. 'size' → logprob: -2.377962589263916
    4. '_length' → logprob: -4.877962589263916
    5. ']+' → logprob: -6.127962589263916
    6. '_]' → logprob: -6.627962589263916
    7. '_value' → logprob: -7.252962589263916
    8. ')]' → logprob: -7.377962589263916
    9. '()]' → logprob: -7.377962589263916
    10. ')' → logprob: -7.377962589263916

Token 928: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02108643762767315
    2. '    
' → logprob: -5.3960862159729
    3. ' step' → logprob: -5.6460862159729
    4. '    ' → logprob: -6.2710862159729
    5. ' average' → logprob: -6.5210862159729
    6. 'average' → logprob: -6.5210862159729
    7. '#' → logprob: -7.0210862159729
    8. ' 
' → logprob: -7.0210862159729
    9. 'step' → logprob: -7.2710862159729
    10. ' E' → logprob: -7.6460862159729

Token 929: ' E' (ID: 457)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7417309880256653
    2. 'E' → logprob: -1.4917309284210205
    3. '(' → logprob: -2.2417309284210205
    4. '(E' → logprob: -2.2417309284210205
    5. 'expected' → logprob: -3.8667309284210205
    6. ' E' → logprob: -4.7417311668396
    7. 'mean' → logprob: -5.1167311668396
    8. '(expected' → logprob: -5.2417311668396
    9. '(K' → logprob: -5.2417311668396
    10. 'step' → logprob: -5.3667311668396

Token 930: '[' (ID: 58)
  Prédit: '_step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.31784841418266296
    2. '[' → logprob: -1.9428484439849854
    3. '_value' → logprob: -3.3178484439849854
    4. 'step' → logprob: -3.5678484439849854
    5. '(step' → logprob: -3.8178484439849854
    6. '=' → logprob: -4.567848205566406
    7. '_steps' → logprob: -5.192848205566406
    8. '_' → logprob: -5.317848205566406
    9. '(' → logprob: -5.442848205566406
    10. 'value' → logprob: -5.567848205566406

Token 931: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.0370769202709198
    2. 'value' → logprob: -3.912076950073242
    3. '_step' → logprob: -5.662076950073242
    4. ' step' → logprob: -5.912076950073242
    5. 's' → logprob: -6.162076950073242
    6. ']' → logprob: -6.162076950073242
    7. 'dist' → logprob: -6.287076950073242
    8. 'space' → logprob: -7.412076950073242
    9. '_value' → logprob: -7.662076950073242
    10. 'S' → logprob: -8.287076950073242

Token 932: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03433278948068619
    2. ']=' → logprob: -4.659332752227783
    3. '=' → logprob: -4.909332752227783
    4. '()]' → logprob: -5.284332752227783
    5. ' =' → logprob: -6.284332752227783
    6. ')' → logprob: -6.284332752227783
    7. ' ]' → logprob: -6.284332752227783
    8. '+' → logprob: -6.284332752227783
    9. '[' → logprob: -6.909332752227783
    10. '_]' → logprob: -7.159332752227783

Token 933: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6337397694587708
    2. '=' → logprob: -0.7587397694587708
    3. ')' → logprob: -8.008739471435547
    4. 's' → logprob: -8.508739471435547
    5. '_' → logprob: -8.758739471435547
    6. '```' → logprob: -9.883739471435547
    7. '_mean' → logprob: -10.258739471435547
    8. '   ' → logprob: -10.258739471435547
    9. '=sum' → logprob: -10.508739471435547
    10. '[' → logprob: -10.758739471435547

Token 934: ' mean' (ID: 4774)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.11647231876850128
    2. '(N' → logprob: -2.2414722442626953
    3. ' (' → logprob: -6.741472244262695
    4. 'K' → logprob: -6.866472244262695
    5. '0' → logprob: -7.241472244262695
    6. '(' → logprob: -7.366472244262695
    7. 'N' → logprob: -10.366472244262695
    8. '(S' → logprob: -10.866472244262695
    9. '((' → logprob: -12.866472244262695
    10. '(M' → logprob: -12.991472244262695

Token 935: ' step' (ID: 5983)
  Prédit: '_step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.26924142241477966
    2. '_' → logprob: -1.519241452217102
    3. ' =' → logprob: -5.0192413330078125
    4. 'step' → logprob: -5.6442413330078125
    5. '_of' → logprob: -5.8942413330078125
    6. '_value' → logprob: -6.8942413330078125
    7. '=' → logprob: -7.1442413330078125
    8. '_steps' → logprob: -7.1442413330078125
    9. 'Step' → logprob: -7.8942413330078125
    10. 'of' → logprob: -8.269241333007812

Token 936: ' length' (ID: 5517)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38138601183891296
    2. 'step' → logprob: -1.3813860416412354
    3. '
' → logprob: -3.7563860416412354
    4. 'mean' → logprob: -3.8813860416412354
    5. ' step' → logprob: -5.256385803222656
    6. '_step' → logprob: -5.631385803222656
    7. 'E' → logprob: -6.006385803222656
    8. '\n' → logprob: -6.881385803222656
    9. 'avg' → logprob: -6.881385803222656
    10. 'expected' → logprob: -7.006385803222656

Token 937: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6855599880218506
    2. '
' → logprob: -0.9355599880218506
    3. '\n' → logprob: -3.6855599880218506
    4. '    
' → logprob: -4.56056022644043
    5. 'step' → logprob: -4.81056022644043
    6. '_step' → logprob: -4.81056022644043
    7. '_' → logprob: -4.93556022644043
    8. '

' → logprob: -5.31056022644043
    9. ')' → logprob: -5.31056022644043
    10. 'mean' → logprob: -5.43556022644043

Token 938: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14648951590061188
    2. '
' → logprob: -2.1464896202087402
    3. '\n' → logprob: -5.52148962020874
    4. '```' → logprob: -5.52148962020874
    5. 'E' → logprob: -6.14648962020874
    6. '    
' → logprob: -6.39648962020874
    7. 'mean' → logprob: -6.89648962020874
    8. 'step' → logprob: -7.02148962020874
    9. '_step' → logprob: -7.14648962020874
    10. '`' → logprob: -7.27148962020874

Token 939: ' mean' (ID: 4774)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020550064742565155
    2. '
' → logprob: -4.27055025100708
    3. '    
' → logprob: -6.14555025100708
    4. 'mean' (adapté à ' mean') → logprob: -6.52055025100708
    5. 'E' → logprob: -6.64555025100708
    6. 'step' → logprob: -8.270549774169922
    7. '```' → logprob: -8.520549774169922
    8. ' step' → logprob: -8.770549774169922
    9. ' mean' → logprob: -8.770549774169922
    10. ' E' → logprob: -9.020549774169922

Token 940: '_step' (ID: 27360)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3585406243801117
    2. '_step' → logprob: -1.358540654182434
    3. '_steps' → logprob: -3.9835405349731445
    4. ' =' → logprob: -4.4835405349731445
    5. '=' → logprob: -4.6085405349731445
    6. '_length' → logprob: -5.9835405349731445
    7. 'step' → logprob: -8.108540534973145
    8. '_of' → logprob: -8.108540534973145
    9. ' _' → logprob: -8.608540534973145
    10. '_len' → logprob: -8.858540534973145

Token 941: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18058186769485474
    2. '=' → logprob: -1.80558180809021
    3. '_' → logprob: -7.180582046508789
    4. ')' → logprob: -10.305582046508789
    5. '_step' → logprob: -11.680582046508789
    6. '   ' → logprob: -12.055582046508789
    7. ',' → logprob: -12.430582046508789
    8. '_space' → logprob: -12.555582046508789
    9. ' _' → logprob: -12.805582046508789
    10. ' ' → logprob: -12.805582046508789

Token 942: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.20295314490795135
    2. '(K' → logprob: -1.7029531002044678
    3. ' (' → logprob: -7.202953338623047
    4. '(' → logprob: -7.827953338623047
    5. 'N' → logprob: -8.827953338623047
    6. 'K' → logprob: -9.077953338623047
    7. '0' → logprob: -9.077953338623047
    8. '(S' → logprob: -11.452953338623047
    9. '((' → logprob: -12.577953338623047
    10. '   ' → logprob: -13.827953338623047

Token 943: 'K' (ID: 42)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6537255048751831
    2. '(' → logprob: -2.0287256240844727
    3. '(K' → logprob: -2.1537256240844727
    4. 'K' → logprob: -2.4037256240844727
    5. 'N' → logprob: -2.5287256240844727
    6. '(N' → logprob: -2.7787256240844727
    7. ' (' → logprob: -10.028725624084473
    8. '((' → logprob: -12.153725624084473
    9. '```' → logprob: -12.528725624084473
    10. ' K' → logprob: -12.778725624084473

Token 944: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.1327512562274933
    2. '*' → logprob: -2.507751226425171
    3. '+' → logprob: -3.382751226425171
    4. ' *' → logprob: -5.25775146484375
    5. ' +' → logprob: -5.63275146484375
    6. '*N' → logprob: -9.50775146484375
    7. ' *(' → logprob: -11.00775146484375
    8. '(N' → logprob: -12.00775146484375
    9. '*K' → logprob: -12.00775146484375
    10. '*((' → logprob: -12.50775146484375

Token 945: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.495641827583313
    2. '1' → logprob: -1.495641827583313
    3. '(' → logprob: -1.870641827583313
    4. 'N' → logprob: -4.370641708374023
    5. '(K' → logprob: -10.745641708374023
    6. ' (' → logprob: -11.245641708374023
    7. '(M' → logprob: -12.620641708374023
    8. '+' → logprob: -13.120641708374023
    9. '(n' → logprob: -14.245641708374023
    10. '{' → logprob: -14.495641708374023

Token 946: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008060562540777028
    2. ' +' → logprob: -7.125805854797363
    3. '+
' → logprob: -13.625805854797363
    4. '   ' → logprob: -16.50080680847168
    5. '*' → logprob: -16.62580680847168
    6. 'plus' → logprob: -17.12580680847168
    7. '＋' → logprob: -17.12580680847168
    8. '```' → logprob: -17.12580680847168
    9. '1' → logprob: -17.25080680847168
    10. ' ' → logprob: -17.62580680847168

Token 947: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '```' → logprob: -18.875
    4. '2' → logprob: -19.125
    5. '+' → logprob: -20.0
    6. '   ' → logprob: -20.5
    7. 'K' → logprob: -20.5
    8. '0' → logprob: -21.5
    9. '``' → logprob: -21.625
    10. '１' → logprob: -21.875

Token 948: '))/' (ID: 74514)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08349011838436127
    2. ')/' → logprob: -2.8334901332855225
    3. ')//' → logprob: -4.708489894866943
    4. '))' → logprob: -4.958489894866943
    5. '))/' → logprob: -5.833489894866943
    6. ' )' → logprob: -6.083489894866943
    7. ' -' → logprob: -11.958490371704102
    8. '//' → logprob: -12.208490371704102
    9. ' ))' → logprob: -12.333490371704102
    10. '))/(' → logprob: -12.458490371704102

Token 949: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -16.375
    4. '1' → logprob: -18.75
    5. '3' → logprob: -19.375
    6. '۲' → logprob: -19.5
    7. '   ' → logprob: -19.625
    8. '(' → logprob: -19.75
    9. '２' → logprob: -19.8125
    10. '`' → logprob: -20.0625

Token 950: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12820932269096375
    2. '   ' → logprob: -2.253209352493286
    3. '+' → logprob: -4.878209114074707
    4. '    
' → logprob: -6.378209114074707
    5. ')' → logprob: -6.503209114074707
    6. ' +' → logprob: -7.128209114074707
    7. '\n' → logprob: -7.753209114074707
    8. '
' → logprob: -7.753209114074707
    9. '\' → logprob: -8.003209114074707
    10. '*' → logprob: -8.128209114074707

Token 951: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5367995500564575
    2. '
' → logprob: -0.9117995500564575
    3. '<|end|>' → logprob: -5.161799430847168
    4. '    
' → logprob: -5.536799430847168
    5. ')' → logprob: -6.286799430847168
    6. '```' → logprob: -6.786799430847168
    7. ' if' → logprob: -9.161799430847168
    8. ' 
' → logprob: -9.411799430847168
    9. '<|end|>' → logprob: -9.536799430847168
    10. '  
' → logprob: -9.536799430847168

Token 952: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23767484724521637
    2. '
' → logprob: -1.7376748323440552
    3. 'if' (adapté à ' if') → logprob: -3.9876749515533447
    4. ' if' → logprob: -4.737674713134766
    5. 'return' → logprob: -5.487674713134766
    6. '    
' → logprob: -6.737674713134766
    7. ')' → logprob: -6.987674713134766
    8. '```' → logprob: -7.737674713134766
    9. ' return' → logprob: -8.362674713134766
    10. 'def' → logprob: -8.737674713134766

Token 953: ' mean' (ID: 4774)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.001242613303475082
    2. ' S' → logprob: -6.751242637634277
    3. 'math' → logprob: -10.126242637634277
    4. 'abs' → logprob: -11.501242637634277
    5. '   ' → logprob: -12.376242637634277
    6. ' math' → logprob: -12.626242637634277
    7. ' ' → logprob: -12.751242637634277
    8. 'max' → logprob: -12.876242637634277
    9. 'min' → logprob: -13.251242637634277
    10. 'K' → logprob: -13.626242637634277

Token 954: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.0011084247380495071
    2. ' <' → logprob: -7.876108646392822
    3. '_' → logprob: -8.251108169555664
    4. '<' → logprob: -8.876108169555664
    5. '>' → logprob: -9.501108169555664
    6. '   ' → logprob: -10.126108169555664
    7. 'Step' → logprob: -10.251108169555664
    8. ' >=' → logprob: -10.501108169555664
    9. '>=' → logprob: -10.751108169555664
    10. ' >' → logprob: -10.751108169555664

Token 955: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.90520179271698
    2. '<=' → logprob: -1.65520179271698
    3. ' <' → logprob: -1.90520179271698
    4. '==' → logprob: -2.4052019119262695
    5. ' ==' → logprob: -2.5302019119262695
    6. '<' → logprob: -2.7802019119262695
    7. ' >=' → logprob: -4.7802019119262695
    8. '>' → logprob: -5.0302019119262695
    9. ' >' → logprob: -5.4052019119262695
    10. '>=' → logprob: -5.5302019119262695

Token 956: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -20.00006675720215
    4. ' ' → logprob: -21.00006675720215
    5. '```' → logprob: -21.00006675720215
    6. '۰' → logprob: -21.12506675720215
    7. '=' → logprob: -21.25006675720215
    8. '​' → logprob: -21.37506675720215
    9. '  ' → logprob: -21.62506675720215
    10. '1' → logprob: -22.00006675720215

Token 957: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '۰' → logprob: -20.125011444091797
    4. '=' → logprob: -20.500011444091797
    5. '```' → logprob: -20.750011444091797
    6. 'zero' → logprob: -21.125011444091797
    7. '   ' → logprob: -21.125011444091797
    8. '1' → logprob: -21.875011444091797
    9. '０' → logprob: -22.000011444091797
    10. '`' → logprob: -22.062511444091797

Token 958: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5772172212600708
    2. ':' → logprob: -0.8272172212600708
    3. ':return' → logprob: -7.202217102050781
    4. '   ' → logprob: -7.702217102050781
    5. ' or' → logprob: -9.952217102050781
    6. '):
' → logprob: -11.702217102050781
    7. '.' → logprob: -12.452217102050781
    8. '==' → logprob: -12.702217102050781
    9. ' :
' → logprob: -12.702217102050781
    10. '       ' → logprob: -12.702217102050781

Token 959: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009122888557612896
    2. ':
' → logprob: -5.384122848510742
    3. ':' → logprob: -5.634122848510742
    4. '   ' → logprob: -7.259122848510742
    5. '):
' → logprob: -9.634122848510742
    6. '
' → logprob: -10.259122848510742
    7. '():
' → logprob: -10.509122848510742
    8. ',' → logprob: -11.634122848510742
    9. ':return' → logprob: -11.759122848510742
    10. '.' → logprob: -12.009122848510742

Token 960: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.08076614886522293
    2. '   ' → logprob: -3.080766201019287
    3. '       ' → logprob: -3.830766201019287
    4. ' print' → logprob: -4.705766201019287
    5. 'return' → logprob: -7.830766201019287
    6. '```' → logprob: -8.205765724182129
    7. '
' → logprob: -8.455765724182129
    8. ' return' → logprob: -11.330765724182129
    9. '    ' → logprob: -11.330765724182129
    10. '    
' → logprob: -12.205765724182129

Token 961: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.07893958687782288
    2. '(' → logprob: -2.57893967628479
    3. '()' → logprob: -11.203939437866211
    4. '('' → logprob: -11.328939437866211
    5. '-' → logprob: -11.703939437866211
    6. '(
' → logprob: -11.828939437866211
    7. '("' → logprob: -12.578939437866211
    8. '0' → logprob: -13.328939437866211
    9. ' (' → logprob: -13.828939437866211
    10. '(None' → logprob: -14.703939437866211

Token 962: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.750006675720215
    3. '-' → logprob: -13.625006675720215
    4. '0' → logprob: -14.125006675720215
    5. '2' → logprob: -14.250006675720215
    6. '(' → logprob: -15.000006675720215
    7. '```' → logprob: -15.375006675720215
    8. ')' → logprob: -15.500006675720215
    9. '9' → logprob: -16.50000762939453
    10. '#' → logprob: -16.75000762939453

Token 963: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3004246652126312
    2. ')
' → logprob: -1.4254246950149536
    3. '   ' → logprob: -4.675424575805664
    4. '       ' → logprob: -4.800424575805664
    5. ')return' → logprob: -6.550424575805664
    6. ')
' → logprob: -10.300424575805664
    7. ')')
' → logprob: -10.800424575805664
    8. ')")
' → logprob: -11.550424575805664
    9. ')`
' → logprob: -11.800424575805664
    10. '           ' → logprob: -12.175424575805664

Token 964: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016861737822182477
    2. '   ' → logprob: -9.125168800354004
    3. ')' → logprob: -10.750168800354004
    4. '           ' → logprob: -11.000168800354004
    5. '	' → logprob: -12.000168800354004
    6. '<|end|>' → logprob: -12.250168800354004
    7. '```' → logprob: -13.875168800354004
    8. '
' → logprob: -14.000168800354004
    9. '	return' → logprob: -14.000168800354004
    10. 'return' → logprob: -14.125168800354004

Token 965: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001044124481268227
    2. '   ' → logprob: -7.001044273376465
    3. ')' → logprob: -10.501044273376465
    4. '
' → logprob: -10.501044273376465
    5. '<|end|>' → logprob: -10.751044273376465
    6. 'return' (adapté à ' return') → logprob: -11.251044273376465
    7. ' ' → logprob: -11.751044273376465
    8. '	return' → logprob: -12.126044273376465
    9. '	' → logprob: -12.126044273376465
    10. '.' → logprob: -12.376044273376465

Token 966: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05601031705737114
    2. '   ' → logprob: -3.6810102462768555
    3. '    
' → logprob: -3.6810102462768555
    4. ' 
' → logprob: -6.5560102462768555
    5. '  
' → logprob: -6.6810102462768555
    6. 'if' → logprob: -8.306010246276855
    7. '   
' → logprob: -8.431010246276855
    8. '\n' → logprob: -8.681010246276855
    9. '

' → logprob: -9.181010246276855
    10. ')' → logprob: -9.181010246276855

Token 967: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25267836451530457
    2. 'if' → logprob: -1.877678394317627
    3. 'print' → logprob: -3.877678394317627
    4. 'E' → logprob: -4.127678394317627
    5. 'result' → logprob: -4.502678394317627
    6. 'res' → logprob: -4.752678394317627
    7. ' if' → logprob: -4.877678394317627
    8. 'expected' → logprob: -6.127678394317627
    9. 'elif' → logprob: -7.252678394317627
    10. 'ans' → logprob: -7.752678394317627

Token 968: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18110598623752594
    2. 'E' → logprob: -2.6811060905456543
    3. 'expected' → logprob: -3.1811060905456543
    4. '   ' → logprob: -3.6811060905456543
    5. 'if' → logprob: -4.056106090545654
    6. ' print' → logprob: -5.556106090545654
    7. 'exp' → logprob: -6.431106090545654
    8. 'res' → logprob: -6.431106090545654
    9. 'result' → logprob: -6.556106090545654
    10. 'e' → logprob: -6.806106090545654

Token 969: ' Also' (ID: 8820)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11630836874246597
    2. 'expected' → logprob: -2.9913084506988525
    3. 'if' → logprob: -3.3663084506988525
    4. 'E' → logprob: -4.616308212280273
    5. 'res' → logprob: -5.366308212280273
    6. 'result' → logprob: -5.366308212280273
    7. '   ' → logprob: -5.616308212280273
    8. 'exp' → logprob: -7.366308212280273
    9. 'ans' → logprob: -7.741308212280273
    10. 'e' → logprob: -8.241308212280273

Token 970: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6713972687721252
    2. '   ' → logprob: -1.4213972091674805
    3. 'print' → logprob: -1.5463972091674805
    4. ' if' → logprob: -3.7963972091674805
    5. ' print' → logprob: -5.2963972091674805
    6. 'elif' → logprob: -6.1713972091674805
    7. 'S' → logprob: -6.6713972091674805
    8. 'E' → logprob: -7.4213972091674805
    9. 'import' → logprob: -7.7963972091674805
    10. '#' → logprob: -8.17139720916748

Token 971: ' if' (ID: 538)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.48036178946495056
    2. ' S' → logprob: -1.605361819267273
    3. 'if' → logprob: -2.2303617000579834
    4. ' abs' → logprob: -3.7303617000579834
    5. 'abs' → logprob: -3.7303617000579834
    6. ' if' → logprob: -3.8553617000579834
    7. '   ' → logprob: -6.2303619384765625
    8. ' ' → logprob: -7.1053619384765625
    9. 'int' → logprob: -8.605361938476562
    10. ' math' → logprob: -8.605361938476562

Token 972: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1800614893436432
    2. 'mean' → logprob: -2.0550615787506104
    3. ' S' → logprob: -3.8050615787506104
    4. 'abs' → logprob: -5.180061340332031
    5. ' mean' → logprob: -5.555061340332031
    6. '(S' → logprob: -6.805061340332031
    7. 'math' → logprob: -7.055061340332031
    8. 'K' → logprob: -7.055061340332031
    9. ' abs' → logprob: -7.930061340332031
    10. '(mean' → logprob: -8.055061340332031

Token 973: ' is' (ID: 382)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -1.2205030918121338
    2. ' <=' → logprob: -1.3455030918121338
    3. ' >=' → logprob: -1.7205030918121338
    4. ' ==' → logprob: -1.7205030918121338
    5. ' >' → logprob: -3.220503091812134
    6. '%' → logprob: -3.470503091812134
    7. '==' → logprob: -4.845502853393555
    8. ' ' → logprob: -5.720502853393555
    9. '<=' → logprob: -6.345502853393555
    10. '>=' → logprob: -6.845502853393555

Token 974: ' divisible' (ID: 167813)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027457185089588165
    2. '%' → logprob: -3.7774572372436523
    3. 'int' → logprob: -7.152457237243652
    4. ' %' → logprob: -7.277457237243652
    5. '100' → logprob: -7.527457237243652
    6. '1' → logprob: -7.527457237243652
    7. ' ' → logprob: -7.652457237243652
    8. ' divisible' → logprob: -7.902457237243652
    9. '%d' → logprob: -8.777457237243652
    10. '==' → logprob: -9.027457237243652

Token 975: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.42920541763305664
    2. 'by' → logprob: -1.0542054176330566
    3. ' S' → logprob: -8.929204940795898
    4. '   ' → logprob: -9.804204940795898
    5. '_by' → logprob: -9.804204940795898
    6. ' K' → logprob: -10.179204940795898
    7. 'mean' → logprob: -10.304204940795898
    8. 'S' → logprob: -10.429204940795898
    9. '```' → logprob: -10.554204940795898
    10. '(S' → logprob: -10.679204940795898

Token 976: ' gcd' (ID: 106918)
  Prédit: 'mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mean' → logprob: -0.10726729780435562
    2. ' mean' → logprob: -2.482267379760742
    3. '1' → logprob: -4.482267379760742
    4. 'K' → logprob: -5.482267379760742
    5. ' K' → logprob: -6.232267379760742
    6. 'int' → logprob: -7.857267379760742
    7. ' ' → logprob: -8.732267379760742
    8. ' int' → logprob: -9.357267379760742
    9. 'min' → logprob: -10.232267379760742
    10. 'step' → logprob: -11.232267379760742

Token 977: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1522951126098633
    2. '(' → logprob: -1.5272951126098633
    3. '_' → logprob: -2.5272951126098633
    4. '(S' → logprob: -2.7772951126098633
    5. '_value' → logprob: -3.0272951126098633
    6. '(N' → logprob: -3.1522951126098633
    7. '=' → logprob: -3.1522951126098633
    8. '1' → logprob: -3.4022951126098633
    9. '_of' → logprob: -3.4022951126098633
    10. '_step' → logprob: -3.7772951126098633

Token 978: ' step' (ID: 5983)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 979: ' sizes' (ID: 16174)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6110190153121948
    2. ' ' → logprob: -1.7360190153121948
    3. 's' → logprob: -1.8610190153121948
    4. '   ' → logprob: -2.2360191345214844
    5. 'size' → logprob: -2.2360191345214844
    6. '+' → logprob: -3.1110191345214844
    7. '_size' → logprob: -3.2360191345214844
    8. ' +' → logprob: -3.3610191345214844
    9. 'sizes' → logprob: -3.3610191345214844
    10. ' size' → logprob: -4.486019134521484

Token 980: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09054344147443771
    2. ':
' → logprob: -3.715543508529663
    3. '=' → logprob: -4.465543270111084
    4. '   ' → logprob: -4.590543270111084
    5. 's' → logprob: -4.965543270111084
    6. ' =' → logprob: -5.340543270111084
    7. ',' → logprob: -5.465543270111084
    8. '%' → logprob: -5.590543270111084
    9. ' ' → logprob: -5.715543270111084
    10. ')' → logprob: -5.840543270111084

Token 981: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.550274670124054
    2. '1' → logprob: -1.5502746105194092
    3. ' 
' → logprob: -2.800274610519409
    4. ' if' → logprob: -3.050274610519409
    5. ' gcd' → logprob: -3.675274610519409
    6. ' ' → logprob: -4.050274848937988
    7. '    
' → logprob: -4.175274848937988
    8. 'g' → logprob: -4.425274848937988
    9. '0' → logprob: -4.925274848937988
    10. '\' → logprob: -5.175274848937988

Token 982: ' #' (ID: 1069)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.8056367039680481
    2. ' gcd' → logprob: -1.3056366443634033
    3. ' g' → logprob: -2.4306366443634033
    4. ' if' → logprob: -2.6806366443634033
    5. '1' → logprob: -2.8056366443634033
    6. ' ' → logprob: -4.055636882781982
    7. 'if' → logprob: -4.180636882781982
    8. '0' → logprob: -4.305636882781982
    9. 'step' → logprob: -5.555636882781982
    10. '   ' → logprob: -5.555636882781982

Token 983: ' steps' (ID: 10331)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9755712151527405
    2. '1' → logprob: -1.4755711555480957
    3. ' gcd' → logprob: -1.7255711555480957
    4. ' ' → logprob: -2.4755711555480957
    5. ' g' → logprob: -3.4755711555480957
    6. ' if' → logprob: -3.4755711555480957
    7. 'if' → logprob: -3.9755711555480957
    8. ' N' → logprob: -4.350571155548096
    9. '   ' → logprob: -4.725571155548096
    10. 'N' → logprob: -5.100571155548096

Token 984: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25681033730506897
    2. '=' → logprob: -2.006810426712036
    3. 's' → logprob: -3.131810426712036
    4. '_sizes' → logprob: -3.256810426712036
    5. 'sizes' → logprob: -6.506810188293457
    6. 'from' → logprob: -6.631810188293457
    7. '_set' → logprob: -6.756810188293457
    8. '=[]' → logprob: -7.631810188293457
    9. '=[' → logprob: -7.756810188293457
    10. ')' → logprob: -7.881810188293457

Token 985: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13823582231998444
    2. ' ' → logprob: -2.2632358074188232
    3. 'range' → logprob: -4.013236045837402
    4. ' range' → logprob: -5.263236045837402
    5. 'from' → logprob: -7.513236045837402
    6. ' set' → logprob: -7.763236045837402
    7. 'set' → logprob: -8.513236045837402
    8. ' from' → logprob: -9.138236045837402
    9. 'tokens' → logprob: -9.763236045837402
    10. ' =' → logprob: -10.013236045837402

Token 986: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003178544342517853
    2. 'range' → logprob: -6.378178596496582
    3. ' ' → logprob: -6.628178596496582
    4. 'import' → logprob: -10.253178596496582
    5. '[' → logprob: -10.503178596496582
    6. ' range' → logprob: -10.628178596496582
    7. '<|end|>' → logprob: -11.128178596496582
    8. '{' → logprob: -11.628178596496582
    9. 'tokens' → logprob: -12.128178596496582
    10. 'set' → logprob: -12.628178596496582

Token 987: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4877626895904541
    2. '<|end|>' → logprob: -1.112762689590454
    3. ')' → logprob: -4.362762451171875
    4. '):' → logprob: -4.487762451171875
    5. ' and' → logprob: -5.237762451171875
    6. '.' → logprob: -5.362762451171875
    7. '<|end|>' → logprob: -5.487762451171875
    8. ':
' → logprob: -5.612762451171875
    9. ',' → logprob: -5.737762451171875
    10. ' ' → logprob: -5.987762451171875

Token 988: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.11777373403310776
    2. '<|end|>' → logprob: -2.7427737712860107
    3. ' N' → logprob: -3.4927737712860107
    4. ',' → logprob: -5.242773532867432
    5. ' ' → logprob: -5.367773532867432
    6. ')' → logprob: -6.117773532867432
    7. '...' → logprob: -6.492773532867432
    8. '+' → logprob: -7.742773532867432
    9. '1' → logprob: -8.24277400970459
    10. ' ,' → logprob: -8.36777400970459

Token 989: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22948488593101501
    2. ' if' → logprob: -2.729484796524048
    3. '   ' → logprob: -2.854484796524048
    4. '<|end|>' → logprob: -3.979484796524048
    5. 'if' → logprob: -4.104485034942627
    6. '    
' → logprob: -4.604485034942627
    7. ')' → logprob: -4.979485034942627
    8. '\n' → logprob: -5.604485034942627
    9. ')
' → logprob: -5.604485034942627
    10. '#' → logprob: -5.729485034942627

Token 990: ' gcd' (ID: 106918)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1087862178683281
    2. '#' → logprob: -3.233786106109619
    3. '    
' → logprob: -4.483786106109619
    4. 'if' → logprob: -4.733786106109619
    5. 'print' → logprob: -4.858786106109619
    6. '%' → logprob: -5.108786106109619
    7. ' if' → logprob: -5.358786106109619
    8. '1' → logprob: -5.483786106109619
    9. '
' → logprob: -5.483786106109619
    10. ' gcd' → logprob: -5.483786106109619

Token 991: ' always' (ID: 3324)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2843702733516693
    2. '=' → logprob: -1.4093703031539917
    3. '1' → logprob: -6.159370422363281
    4. ' ==' → logprob: -7.909370422363281
    5. '==' → logprob: -8.534370422363281
    6. ' is' → logprob: -9.284370422363281
    7. ')' → logprob: -9.284370422363281
    8. '(' → logprob: -9.534370422363281
    9. '(N' → logprob: -9.784370422363281
    10. '```' → logprob: -10.534370422363281

Token 992: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14986957609653473
    2. '1' → logprob: -2.024869680404663
    3. ' =' → logprob: -5.024869441986084
    4. '==' → logprob: -7.899869441986084
    5. ' ' → logprob: -8.774869918823242
    6. ' ==' → logprob: -10.774869918823242
    7. '```' → logprob: -11.399869918823242
    8. 'is' → logprob: -11.649869918823242
    9. 'equal' → logprob: -12.274869918823242
    10. 'equals' → logprob: -12.649869918823242

Token 993: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003256734926253557
    2. '=' → logprob: -5.753256797790527
    3. ' ' → logprob: -9.628256797790527
    4. ' =' → logprob: -11.753256797790527
    5. '==' → logprob: -13.253256797790527
    6. '```' → logprob: -13.628256797790527
    7. '
' → logprob: -14.128256797790527
    8. ',' → logprob: -14.753256797790527
    9. '=
' → logprob: -15.753256797790527
    10. '`' → logprob: -16.12825584411621

Token 994: ' ->' (ID: 2747)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27664706110954285
    2. '   ' → logprob: -1.5266470909118652
    3. '    
' → logprob: -3.9016470909118652
    4. 'if' → logprob: -6.151647090911865
    5. ' if' → logprob: -7.776647090911865
    6. ')' → logprob: -7.901647090911865
    7. '

' → logprob: -7.901647090911865
    8. ')
' → logprob: -8.901646614074707
    9. '\n' → logprob: -8.901646614074707
    10. '  
' → logprob: -9.276646614074707

Token 995: ' always' (ID: 3324)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.5899380445480347
    2. ' pass' → logprob: -1.2149380445480347
    3. '<|end|>' → logprob: -3.089938163757324
    4. '
' → logprob: -3.339938163757324
    5. ')' → logprob: -4.214938163757324
    6. '   ' → logprob: -4.339938163757324
    7. '    
' → logprob: -4.839938163757324
    8. '\n' → logprob: -4.964938163757324
    9. 'print' → logprob: -5.214938163757324
    10. '#' → logprob: -5.214938163757324

Token 996: ' hit' (ID: 7103)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.08335205167531967
    2. 'possible' → logprob: -2.8333520889282227
    3. 'valid' → logprob: -4.708352088928223
    4. 'True' → logprob: -5.208352088928223
    5. 'print' → logprob: -5.458352088928223
    6. '1' → logprob: -6.583352088928223
    7. 'div' → logprob: -7.583352088928223
    8. 'pass' → logprob: -8.583352088928223
    9. 'true' → logprob: -9.458352088928223
    10. 'fe' → logprob: -9.583352088928223

Token 997: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05292218178510666
    2. 'if' → logprob: -3.177922248840332
    3. 'print' → logprob: -5.677922248840332
    4. '
' → logprob: -5.802922248840332
    5. '    
' → logprob: -6.802922248840332
    6. '#' → logprob: -7.302922248840332
    7. 'mean' → logprob: -7.677922248840332
    8. 'result' → logprob: -8.052922248840332
    9. 'E' → logprob: -8.427922248840332
    10. 'expected' → logprob: -8.927922248840332

Token 998: '0' (ID: 15)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6041133403778076
    2. 'if' → logprob: -1.2291133403778076
    3. '   ' → logprob: -2.6041133403778076
    4. '()' → logprob: -4.479113578796387
    5. '(S' → logprob: -4.479113578796387
    6. '#' → logprob: -4.729113578796387
    7. '(' → logprob: -4.729113578796387
    8. 'S' → logprob: -4.854113578796387
    9. 'return' → logprob: -5.104113578796387
    10. '.' → logprob: -5.479113578796387

Token 999: ' eventually' (ID: 17462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0871962308883667
    2. 'if' → logprob: -2.7121963500976562
    3. 'print' → logprob: -5.462196350097656
    4. 'expected' → logprob: -5.462196350097656
    5. 'E' → logprob: -6.087196350097656
    6. 'result' → logprob: -6.462196350097656
    7. 'dp' → logprob: -7.087196350097656
    8. '#' → logprob: -7.212196350097656
    9. 'mean' → logprob: -7.337196350097656
    10. 'res' → logprob: -7.587196350097656

Token 1000: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0428696908056736
    2. '
' → logprob: -3.917869806289673
    3. 'if' → logprob: -4.167869567871094
    4. 'print' → logprob: -5.542869567871094
    5. '    
' → logprob: -6.042869567871094
    6. '```' → logprob: -9.167869567871094
    7. 'result' → logprob: -9.917869567871094
    8. 'E' → logprob: -10.542869567871094
    9. '#' → logprob: -10.542869567871094
    10. ' if' → logprob: -10.667869567871094

Token 1001: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05884600430727005
    2. 'if' → logprob: -2.9338459968566895
    3. 'print' → logprob: -5.6838459968566895
    4. 'result' → logprob: -8.433846473693848
    5. '    
' → logprob: -8.558846473693848
    6. '
' → logprob: -9.558846473693848
    7. 'dp' → logprob: -10.808846473693848
    8. '```' → logprob: -11.558846473693848
    9. 'E' → logprob: -11.683846473693848
    10. ' if' → logprob: -11.808846473693848

Token 1002: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8081285357475281
    2. 'print' → logprob: -1.3081285953521729
    3. 'result' → logprob: -2.683128595352173
    4. 'expected' → logprob: -2.683128595352173
    5. 'E' → logprob: -2.933128595352173
    6. '   ' → logprob: -3.183128595352173
    7. 'res' → logprob: -3.183128595352173
    8. 'dp' → logprob: -5.308128356933594
    9. 'ans' → logprob: -6.183128356933594
    10. 'e' → logprob: -6.933128356933594

Token 1003: ' So' (ID: 2632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08087698370218277
    2. 'E' → logprob: -3.7058770656585693
    3. 'result' → logprob: -3.9558770656585693
    4. 'res' → logprob: -4.58087682723999
    5. 'expected' → logprob: -4.70587682723999
    6. 'dp' → logprob: -5.33087682723999
    7. '   ' → logprob: -5.33087682723999
    8. 'print' → logprob: -6.45587682723999
    9. '#' → logprob: -7.08087682723999
    10. 'threshold' → logprob: -7.33087682723999

Token 1004: ' expected' (ID: 5930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007906484417617321
    2. '   ' → logprob: -4.882906436920166
    3. 'if' → logprob: -8.632906913757324
    4. ' print' → logprob: -9.882906913757324
    5. '
' → logprob: -10.507906913757324
    6. 'result' → logprob: -11.007906913757324
    7. '```' → logprob: -11.882906913757324
    8. 'import' → logprob: -12.132906913757324
    9. 'def' → logprob: -12.757906913757324
    10. '    
' → logprob: -12.757906913757324

Token 1005: ' time' (ID: 1058)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.6767261028289795
    2. '_time' → logprob: -2.3017261028289795
    3. '_steps' → logprob: -2.4267261028289795
    4. '_result' → logprob: -2.8017261028289795
    5. '_output' → logprob: -2.8017261028289795
    6. 'value' → logprob: -3.1767261028289795
    7. 'return' → logprob: -3.3017261028289795
    8. '_return' → logprob: -3.5517261028289795
    9. 'print' → logprob: -3.6767261028289795
    10. '
' → logprob: -4.301726341247559

Token 1006: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0989147499203682
    2. ' =' → logprob: -2.723914861679077
    3. '   ' → logprob: -3.723914861679077
    4. '(S' → logprob: -5.973914623260498
    5. '=int' → logprob: -7.473914623260498
    6. '_value' → logprob: -8.223915100097656
    7. '(' → logprob: -8.348915100097656
    8. '_result' → logprob: -8.848915100097656
    9. '_time' → logprob: -9.473915100097656
    10. '=S' → logprob: -9.723915100097656

Token 1007: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.008729090914130211
    2. ' S' → logprob: -4.883728981018066
    3. '(S' → logprob: -6.883728981018066
    4. 'round' → logprob: -9.883728981018066
    5. '{' → logprob: -11.133728981018066
    6. 'float' → logprob: -11.633728981018066
    7. ' (' → logprob: -12.258728981018066
    8. 'int' → logprob: -12.258728981018066
    9. 'f' → logprob: -12.508728981018066
    10. '(' → logprob: -13.508728981018066

Token 1008: ' /' (ID: 820)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6807595491409302
    2. '   ' → logprob: -1.3057595491409302
    3. ')' → logprob: -3.0557594299316406
    4. 'print' → logprob: -3.4307594299316406
    5. '**' → logprob: -3.5557594299316406
    6. ',' → logprob: -3.9307594299316406
    7. ' /' → logprob: -4.055759429931641
    8. ' if' → logprob: -4.555759429931641
    9. '=' → logprob: -4.930759429931641
    10. 'if' → logprob: -5.180759429931641

Token 1009: ' mean' (ID: 4774)
  Prédit: 'mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mean' → logprob: -7.493430894101039e-05
    2. ' mean' → logprob: -9.500075340270996
    3. '
' → logprob: -18.37507438659668
    4. '(mean' → logprob: -18.75007438659668
    5. '```' → logprob: -19.37507438659668
    6. '   ' → logprob: -19.75007438659668
    7. 'float' → logprob: -20.37507438659668
    8. 'means' → logprob: -20.50007438659668
    9. '.mean' → logprob: -22.37507438659668
    10. '`' → logprob: -23.50007438659668

Token 1010: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.00041339205927215517
    2. '_' → logprob: -7.875413417816162
    3. 'step' → logprob: -11.875412940979004
    4. '_
' → logprob: -12.250412940979004
    5. 'Step' → logprob: -12.625412940979004
    6. '\' → logprob: -12.625412940979004
    7. '/' → logprob: -12.750412940979004
    8. '
' → logprob: -13.250412940979004
    9. '_STEP' → logprob: -13.375412940979004
    10. '   ' → logprob: -14.000412940979004

Token 1011: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013795336708426476
    2. '   ' → logprob: -4.513795375823975
    3. '    
' → logprob: -6.638795375823975
    4. '\n' → logprob: -8.138794898986816
    5. '  
' → logprob: -8.513794898986816
    6. ')
' → logprob: -8.763794898986816
    7. '

' → logprob: -8.888794898986816
    8. '
' → logprob: -9.013794898986816
    9. ' 
' → logprob: -9.138794898986816
    10. ')' → logprob: -9.388794898986816

Token 1012: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04881944879889488
    2. 'print' → logprob: -3.0488195419311523
    3. '```' → logprob: -9.048819541931152
    4. '
' → logprob: -9.548819541931152
    5. '    
' → logprob: -11.048819541931152
    6. ' print' → logprob: -11.173819541931152
    7. '	print' → logprob: -12.548819541931152
    8. '``' → logprob: -13.048819541931152
    9. '(print' → logprob: -13.173819541931152
    10. '.print' → logprob: -13.548819541931152

Token 1013: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016158436483237892
    2. '   ' → logprob: -8.750161170959473
    3. '```' → logprob: -12.750161170959473
    4. ' print' → logprob: -16.00016212463379
    5. '
' → logprob: -18.12516212463379
    6. '``' → logprob: -18.25016212463379
    7. '`' → logprob: -19.75016212463379
    8. 'printf' → logprob: -20.25016212463379
    9. '	print' → logprob: -20.37516212463379
    10. '    
' → logprob: -20.75016212463379

Token 1014: ' But' (ID: 3072)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07893363386392593
    2. '   ' → logprob: -2.5789337158203125
    3. '```' → logprob: -10.453933715820312
    4. ' print' → logprob: -11.578933715820312
    5. '
' → logprob: -12.828933715820312
    6. '``' → logprob: -13.953933715820312
    7. '`' → logprob: -14.203933715820312
    8. '    
' → logprob: -14.203933715820312
    9. 'result' → logprob: -15.578933715820312
    10. 'printf' → logprob: -15.703933715820312

Token 1015: ' since' (ID: 3630)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.805480420589447
    2. ' S' → logprob: -1.0554804801940918
    3. 'abs' → logprob: -2.930480480194092
    4. ' round' → logprob: -3.180480480194092
    5. ' int' → logprob: -4.180480480194092
    6. ' ' → logprob: -4.305480480194092
    7. ' math' → logprob: -4.555480480194092
    8. 'S' → logprob: -4.805480480194092
    9. '   ' → logprob: -4.805480480194092
    10. '
' → logprob: -4.930480480194092

Token 1016: ' steps' (ID: 10331)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.46728554368019104
    2. ' S' → logprob: -1.2172855138778687
    3. 'mean' → logprob: -3.217285633087158
    4. ' mean' → logprob: -4.342285633087158
    5. 'round' → logprob: -5.342285633087158
    6. '   ' → logprob: -5.717285633087158
    7. 'int' → logprob: -5.967285633087158
    8. ' round' → logprob: -6.092285633087158
    9. ' the' → logprob: -6.217285633087158
    10. 'the' → logprob: -6.467285633087158

Token 1017: ' >=' (ID: 5064)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5197184681892395
    2. '_' → logprob: -2.2697184085845947
    3. ' >' → logprob: -3.2697184085845947
    4. '[' → logprob: -3.3947184085845947
    5. ')' → logprob: -3.5197184085845947
    6. ' <' → logprob: -3.7697184085845947
    7. ' /' → logprob: -3.7697184085845947
    8. '>' → logprob: -4.019718647003174
    9. '```' → logprob: -4.144718647003174
    10. '<=' → logprob: -4.144718647003174

Token 1018: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.18207357823848724
    2. '1' → logprob: -2.4320735931396484
    3. ' K' → logprob: -2.5570735931396484
    4. ' ' → logprob: -7.057073593139648
    5. 'S' → logprob: -9.182073593139648
    6. '0' → logprob: -9.932073593139648
    7. '   ' → logprob: -10.682073593139648
    8. '
' → logprob: -11.432073593139648
    9. '```' → logprob: -11.932073593139648
    10. ' S' → logprob: -12.182073593139648

Token 1019: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3906603455543518
    2. ':
' → logprob: -2.015660285949707
    3. ':' → logprob: -2.265660285949707
    4. ' and' → logprob: -3.515660285949707
    5. '
' → logprob: -4.140660285949707
    6. ' >' → logprob: -4.890660285949707
    7. ' /' → logprob: -5.015660285949707
    8. ' if' → logprob: -5.140660285949707
    9. 'and' → logprob: -5.265660285949707
    10. '>' → logprob: -5.765660285949707

Token 1020: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6567968130111694
    2. 'steps' → logprob: -1.6567968130111694
    3. ' S' → logprob: -2.156796932220459
    4. '<=' → logprob: -2.281796932220459
    5. ' <=' → logprob: -3.656796932220459
    6. ' steps' → logprob: -3.656796932220459
    7. 'mean' → logprob: -5.031796932220459
    8. 'max' → logprob: -5.156796932220459
    9. 'step' → logprob: -5.781796932220459
    10. 'K' → logprob: -6.156796932220459

Token 1021: ' can' (ID: 665)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3537541925907135
    2. '>=' → logprob: -2.3537542819976807
    3. ' >' → logprob: -2.4787542819976807
    4. ' %' → logprob: -2.8537542819976807
    5. '%' → logprob: -3.3537542819976807
    6. '>' → logprob: -4.353754043579102
    7. ' <=' → logprob: -4.603754043579102
    8. ' <' → logprob: -6.353754043579102
    9. '<=' → logprob: -6.978754043579102
    10. '>K' → logprob: -7.978754043579102

Token 1022: ' be' (ID: 413)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1023: ' smaller' (ID: 13679)
  Prédit: 'very'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'very' → logprob: -0.9439704418182373
    2. 'large' → logprob: -1.0689704418182373
    3. ' very' → logprob: -2.3189704418182373
    4. '0' → logprob: -2.9439704418182373
    5. 'not' → logprob: -3.0689704418182373
    6. ' large' → logprob: -3.3189704418182373
    7. ' not' → logprob: -4.693970680236816
    8. 'float' → logprob: -5.068970680236816
    9. 'exact' → logprob: -5.318970680236816
    10. 'equal' → logprob: -5.943970680236816

Token 1024: ' than' (ID: 1572)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.1573537588119507
    2. '   ' → logprob: -1.4073537588119507
    3. ':' → logprob: -1.6573537588119507
    4. 'and' → logprob: -3.0323538780212402
    5. ' and' → logprob: -3.2823538780212402
    6. '<=' → logprob: -3.2823538780212402
    7. ' <=' → logprob: -3.5323538780212402
    8. ' <' → logprob: -3.9073538780212402
    9. '==' → logprob: -4.03235387802124
    10. ',' → logprob: -4.15735387802124

Token 1025: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.022580785676836967
    2. 'max' → logprob: -4.397580623626709
    3. 'min' → logprob: -5.647580623626709
    4. ' K' → logprob: -5.772580623626709
    5. 'mean' → logprob: -5.897580623626709
    6. 'N' → logprob: -8.147581100463867
    7. ' max' → logprob: -8.897581100463867
    8. '1' → logprob: -9.772581100463867
    9. ' min' → logprob: -9.772581100463867
    10. ' mean' → logprob: -11.022581100463867

Token 1026: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5270495414733887
    2. '   ' → logprob: -1.1520495414733887
    3. ':' → logprob: -2.6520495414733887
    4. ' and' → logprob: -4.527049541473389
    5. ' if' → logprob: -5.527049541473389
    6. 'and' → logprob: -6.277049541473389
    7. ',' → logprob: -6.527049541473389
    8. 'if' → logprob: -6.777049541473389
    9. ' or' → logprob: -6.777049541473389
    10. '+' → logprob: -7.027049541473389

Token 1027: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013928069733083248
    2. ' print' → logprob: -4.888927936553955
    3. ' if' → logprob: -5.888927936553955
    4. 'print' → logprob: -5.888927936553955
    5. 'if' → logprob: -8.513928413391113
    6. '       ' → logprob: -9.013928413391113
    7. '    
' → logprob: -9.013928413391113
    8. ':' → logprob: -9.388928413391113
    9. '    ' → logprob: -9.638928413391113
    10. ':
' → logprob: -9.763928413391113

Token 1028: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.04300752282142639
    2. ' S' → logprob: -3.1680076122283936
    3. '   ' → logprob: -12.168007850646973
    4. ' ' → logprob: -14.043007850646973
    5. ' ' → logprob: -14.168007850646973
    6. '  ' → logprob: -14.918007850646973
    7. '```' → logprob: -15.043007850646973
    8. '_S' → logprob: -15.543007850646973
    9. '`' → logprob: -15.918007850646973
    10. 's' → logprob: -16.043006896972656

Token 1029: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00765596516430378
    2. '<K' → logprob: -5.632656097412109
    3. '<' → logprob: -5.882656097412109
    4. '<S' → logprob: -7.132656097412109
    5. ' >=' → logprob: -8.00765609741211
    6. '>=' → logprob: -10.50765609741211
    7. '   ' → logprob: -10.50765609741211
    8. ' <=' → logprob: -10.75765609741211
    9. '<N' → logprob: -11.63265609741211
    10. ' ' → logprob: -11.88265609741211

Token 1030: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.4746648967266083
    2. ' K' → logprob: -0.9746649265289307
    3. 'min' → logprob: -8.099664688110352
    4. ' min' → logprob: -9.224664688110352
    5. '   ' → logprob: -10.099664688110352
    6. '=' → logprob: -10.099664688110352
    7. '1' → logprob: -10.224664688110352
    8. ' ' → logprob: -11.224664688110352
    9. ' =' → logprob: -11.599664688110352
    10. '0' → logprob: -11.849664688110352

Token 1031: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39179667830467224
    2. ':
' → logprob: -1.1417967081069946
    3. '   ' → logprob: -5.391796588897705
    4. '       ' → logprob: -8.891797065734863
    5. ',' → logprob: -9.266797065734863
    6. ' or' → logprob: -9.516797065734863
    7. ' and' → logprob: -11.141797065734863
    8. ':return' → logprob: -11.391797065734863
    9. '+' → logprob: -12.141797065734863
    10. '```' → logprob: -12.391797065734863

Token 1032: ' output' (ID: 4733)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07091357558965683
    2. ' print' → logprob: -2.820913553237915
    3. 'print' → logprob: -4.945913791656494
    4. '       ' → logprob: -6.695913791656494
    5. ' return' → logprob: -8.195913314819336
    6. ':' → logprob: -9.945913314819336
    7. ':
' → logprob: -10.070913314819336
    8. '    ' → logprob: -10.320913314819336
    9. '
' → logprob: -10.445913314819336
    10. '    
' → logprob: -10.445913314819336

Token 1033: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5751065015792847
    2. '(' → logprob: -1.7001065015792847
    3. '(-' → logprob: -1.9501065015792847
    4. '-' → logprob: -3.200106620788574
    5. '(S' → logprob: -3.700106620788574
    6. ' -' → logprob: -4.450106620788574
    7. '(K' → logprob: -4.825106620788574
    8. ':' → logprob: -5.200106620788574
    9. ' (' → logprob: -5.950106620788574
    10. '1' → logprob: -6.075106620788574

Token 1034: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.500006675720215
    3. '```' → logprob: -13.625006675720215
    4. '-' → logprob: -14.250006675720215
    5. '`' → logprob: -15.375006675720215
    6. ' -' → logprob: -16.1250057220459
    7. '   ' → logprob: -16.6250057220459
    8. '(-' → logprob: -17.1875057220459
    9. ''' → logprob: -17.3125057220459
    10. '(' → logprob: -17.4375057220459

Token 1035: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05501498281955719
    2. '
' → logprob: -3.3050150871276855
    3. 'if' → logprob: -5.0550150871276855
    4. ' if' → logprob: -5.3050150871276855
    5. '    
' → logprob: -5.5550150871276855
    6. 'print' → logprob: -7.9300150871276855
    7. ':' → logprob: -8.305014610290527
    8. ':
' → logprob: -9.055014610290527
    9. '  
' → logprob: -9.180014610290527
    10. '```' → logprob: -9.180014610290527

Token 1036: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014308647252619267
    2. '
' → logprob: -4.639308452606201
    3. '    
' → logprob: -6.014308452606201
    4. 'if' → logprob: -6.389308452606201
    5. '```' → logprob: -8.51430892944336
    6. '  
' → logprob: -9.76430892944336
    7. ' if' → logprob: -9.76430892944336
    8. 'else' → logprob: -9.88930892944336
    9. 'elif' → logprob: -11.26430892944336
    10. '``' → logprob: -11.88930892944336

Token 1037: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40323740243911743
    2. 'if' (adapté à ' if') → logprob: -1.1532373428344727
    3. 'print' → logprob: -4.153237342834473
    4. ' if' → logprob: -8.403237342834473
    5. '
' → logprob: -8.403237342834473
    6. '    
' → logprob: -10.278237342834473
    7. '```' → logprob: -10.528237342834473
    8. 'else' → logprob: -12.528237342834473
    9. 'elif' → logprob: -12.528237342834473
    10. ' print' → logprob: -13.403237342834473

Token 1038: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.008654872886836529
    2. ' S' → logprob: -4.758655071258545
    3. '   ' → logprob: -10.133654594421387
    4. ' ' → logprob: -15.258654594421387
    5. '  ' → logprob: -15.758654594421387
    6. 's' → logprob: -16.508655548095703
    7. '    ' → logprob: -17.258655548095703
    8. '(S' → logprob: -17.258655548095703
    9. '	S' → logprob: -17.508655548095703
    10. '_S' → logprob: -17.883655548095703

Token 1039: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0898735523223877
    2. '<' → logprob: -2.4648735523223877
    3. '<K' → logprob: -7.464873313903809
    4. '   ' → logprob: -8.214873313903809
    5. '<S' → logprob: -10.214873313903809
    6. ' >=' → logprob: -11.464873313903809
    7. '<int' → logprob: -11.589873313903809
    8. '[' → logprob: -11.589873313903809
    9. ' <=' → logprob: -12.464873313903809
    10. ' <
' → logprob: -13.089873313903809

Token 1040: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.004098585341125727
    2. 'min' → logprob: -5.504098415374756
    3. ' K' → logprob: -11.004098892211914
    4. '0' → logprob: -13.129098892211914
    5. '   ' → logprob: -14.254098892211914
    6. 'k' → logprob: -14.879098892211914
    7. ' min' → logprob: -15.254098892211914
    8. '1' → logprob: -16.629098892211914
    9. '	K' → logprob: -17.379098892211914
    10. '       ' → logprob: -18.129098892211914

Token 1041: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2909058630466461
    2. ':' → logprob: -1.7909058332443237
    3. '   ' → logprob: -3.0409059524536133
    4. '       ' → logprob: -3.2909059524536133
    5. ' or' → logprob: -7.915905952453613
    6. '```' → logprob: -9.290905952453613
    7. '):
' → logprob: -10.040905952453613
    8. '{
' → logprob: -10.540905952453613
    9. '():
' → logprob: -11.540905952453613
    10. ':return' → logprob: -12.040905952453613

Token 1042: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026603161823004484
    2. '   ' → logprob: -6.502660274505615
    3. ':' → logprob: -7.252660274505615
    4. ':
' → logprob: -8.127660751342773
    5. '():
' → logprob: -9.502660751342773
    6. '```' → logprob: -10.877660751342773
    7. '():' → logprob: -11.627660751342773
    8. 'print' → logprob: -11.877660751342773
    9. '(' → logprob: -12.002660751342773
    10. '):
' → logprob: -12.127660751342773

Token 1043: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006442749872803688
    2. '       ' → logprob: -5.256442546844482
    3. '   ' → logprob: -6.881442546844482
    4. '```' → logprob: -9.25644302368164
    5. ' print' → logprob: -10.00644302368164
    6. 'return' → logprob: -10.75644302368164
    7. '-' → logprob: -11.13144302368164
    8. '(-' → logprob: -13.50644302368164
    9. '	print' → logprob: -13.50644302368164
    10. '``' → logprob: -13.63144302368164

Token 1044: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -3.1424973713001236e-05
    2. '(' → logprob: -10.375031471252441
    3. '-' → logprob: -15.500031471252441
    4. '(
' → logprob: -18.500030517578125
    5. '()' → logprob: -18.750030517578125
    6. '   ' → logprob: -18.875030517578125
    7. ' (-' → logprob: -20.250030517578125
    8. '```' → logprob: -20.375030517578125
    9. '('' → logprob: -20.625030517578125
    10. '("' → logprob: -20.625030517578125

Token 1045: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -15.625
    3. '(' → logprob: -17.125
    4. ' ' → logprob: -18.25
    5. '(-' → logprob: -18.5
    6. '```' → logprob: -18.875
    7. ')' → logprob: -19.5
    8. '   ' → logprob: -20.125
    9. '`' → logprob: -20.375
    10. '{' → logprob: -21.375

Token 1046: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.19938015937805176
    2. ')' → logprob: -2.1993801593780518
    3. '   ' → logprob: -2.9493801593780518
    4. '       ' → logprob: -4.074379920959473
    5. ')return' → logprob: -7.949379920959473
    6. ')
' → logprob: -9.824379920959473
    7. '())
' → logprob: -10.699379920959473
    8. '```' → logprob: -11.324379920959473
    9. '')
' → logprob: -11.449379920959473
    10. ')`
' → logprob: -11.949379920959473

Token 1047: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00866798684000969
    2. '   ' → logprob: -4.758667945861816
    3. '<|end|>' → logprob: -11.383667945861816
    4. ')' → logprob: -11.883667945861816
    5. '	' → logprob: -11.883667945861816
    6. '
' → logprob: -12.258667945861816
    7. '           ' → logprob: -12.508667945861816
    8. 'return' → logprob: -12.883667945861816
    9. '```' → logprob: -12.883667945861816
    10. '	return' → logprob: -13.008667945861816

Token 1048: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48930689692497253
    2. 'return' (adapté à ' return') → logprob: -0.9893069267272949
    3. '   ' → logprob: -4.239306926727295
    4. ' return' → logprob: -7.989306926727295
    5. '	return' → logprob: -8.489306449890137
    6. '
' → logprob: -9.239306449890137
    7. ')return' → logprob: -10.739306449890137
    8. ':return' → logprob: -10.989306449890137
    9. ')' → logprob: -12.364306449890137
    10. ' ' → logprob: -13.114306449890137

Token 1049: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13137492537498474
    2. '
' → logprob: -2.1313748359680176
    3. '    
' → logprob: -6.381374835968018
    4. '```' → logprob: -6.381374835968018
    5. 'print' → logprob: -6.881374835968018
    6. '

' → logprob: -11.756375312805176
    7. '  
' → logprob: -12.006375312805176
    8. '``' → logprob: -12.256375312805176
    9. '        
' → logprob: -12.631375312805176
    10. '
' → logprob: -14.131375312805176

Token 1050: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06238933652639389
    2. 'print' → logprob: -2.812389373779297
    3. '```' → logprob: -8.062389373779297
    4. '    
' → logprob: -9.812389373779297
    5. '
' → logprob: -9.937389373779297
    6. '``' → logprob: -12.687389373779297
    7. '  
' → logprob: -15.937389373779297
    8. ' print' → logprob: -16.437389373779297
    9. '`' → logprob: -17.062389373779297
    10. 'import' → logprob: -17.437389373779297

Token 1051: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.927930654550437e-05
    2. '   ' → logprob: -10.500029563903809
    3. 'expected' → logprob: -13.875029563903809
    4. 'result' → logprob: -15.250029563903809
    5. 'ans' → logprob: -15.500029563903809
    6. '```' → logprob: -16.125028610229492
    7. ' print' → logprob: -17.000028610229492
    8. 'if' → logprob: -17.625028610229492
    9. 'answer' → logprob: -18.000028610229492
    10. 'E' → logprob: -18.000028610229492

Token 1052: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004469964769668877
    2. '   ' → logprob: -7.750446796417236
    3. 'expected' → logprob: -11.750447273254395
    4. 'result' → logprob: -11.875447273254395
    5. 'ans' → logprob: -14.625447273254395
    6. ' print' → logprob: -14.750447273254395
    7. '```' → logprob: -15.125447273254395
    8. 'answer' → logprob: -16.125446319580078
    9. 'E' → logprob: -16.875446319580078
    10. 'res' → logprob: -17.250446319580078

Token 1053: ' expected' (ID: 5930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3873373568058014
    2. '   ' → logprob: -1.137337327003479
    3. ' print' → logprob: -8.512337684631348
    4. '{' → logprob: -8.762337684631348
    5. '("%.' → logprob: -10.012337684631348
    6. '("{' → logprob: -10.887337684631348
    7. 'printf' → logprob: -11.512337684631348
    8. '(f' → logprob: -11.762337684631348
    9. '```' → logprob: -11.762337684631348
    10. 'f' → logprob: -11.887337684631348

Token 1054: ' value' (ID: 1432)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16968975961208344
    2. '_time' → logprob: -2.044689655303955
    3. '_value' → logprob: -4.669689655303955
    4. '(' → logprob: -4.919689655303955
    5. 'time' → logprob: -5.669689655303955
    6. '_expected' → logprob: -6.294689655303955
    7. '_result' → logprob: -7.294689655303955
    8. '_times' → logprob: -7.419689655303955
    9. '_output' → logprob: -7.794689655303955
    10. 'value' → logprob: -7.919689655303955

Token 1055: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018277069553732872
    2. 'print' → logprob: -4.018277168273926
    3. '```' → logprob: -9.018277168273926
    4. '
' → logprob: -12.518277168273926
    5. ' print' → logprob: -14.018277168273926
    6. '``' → logprob: -14.143277168273926
    7. '    
' → logprob: -15.143277168273926
    8. '`' → logprob: -15.518277168273926
    9. '	print' → logprob: -16.39327621459961
    10. '       ' → logprob: -16.51827621459961

Token 1056: ' required' (ID: 3759)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.7919313311576843
    2. '10' → logprob: -1.041931390762329
    3. '12' → logprob: -2.166931390762329
    4. '15' → logprob: -2.791931390762329
    5. '8' → logprob: -5.04193115234375
    6. '7' → logprob: -5.16693115234375
    7. '9' → logprob: -5.79193115234375
    8. '.' → logprob: -6.16693115234375
    9. 'print' → logprob: -7.29193115234375
    10. ' ' → logprob: -8.29193115234375

Token 1057: ' precision' (ID: 27303)
  Prédit: 'precision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'precision' → logprob: -0.13627710938453674
    2. '.' → logprob: -3.136277198791504
    3. '6' → logprob: -3.511277198791504
    4. '10' → logprob: -4.136277198791504
    5. '_precision' → logprob: -4.761277198791504
    6. '.prec' → logprob: -5.261277198791504
    7. ' precision' → logprob: -5.386277198791504
    8. 'prec' → logprob: -5.636277198791504
    9. '9' → logprob: -5.636277198791504
    10. 'decimal' → logprob: -6.261277198791504

Token 1058: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005332182161509991
    2. 'print' → logprob: -5.255331993103027
    3. '```' → logprob: -10.005331993103027
    4. '{' → logprob: -10.130331993103027
    5. ' print' → logprob: -12.505331993103027
    6. ',' → logprob: -13.005331993103027
    7. ')' → logprob: -13.005331993103027
    8. '    
' → logprob: -13.255331993103027
    9. '
' → logprob: -13.630331993103027
    10. ')
' → logprob: -14.380331993103027

Token 1059: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009650547988712788
    2. 'print' → logprob: -4.759650707244873
    3. '```' → logprob: -6.884650707244873
    4. '``' → logprob: -11.509650230407715
    5. ' print' → logprob: -14.509650230407715
    6. '    
' → logprob: -14.759650230407715
    7. '`' → logprob: -14.759650230407715
    8. '
' → logprob: -14.884650230407715
    9. '       ' → logprob: -15.759650230407715
    10. 'import' → logprob: -16.75965118408203

Token 1060: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010700850980356336
    2. '   ' → logprob: -7.001070022583008
    3. '```' → logprob: -8.751070022583008
    4. ' print' → logprob: -15.126070022583008
    5. '``' → logprob: -16.876070022583008
    6. 'printf' → logprob: -18.501070022583008
    7. '
' → logprob: -19.251070022583008
    8. '    
' → logprob: -19.751070022583008
    9. '`' → logprob: -19.876070022583008
    10. '	print' → logprob: -20.251070022583008

Token 1061: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35655921697616577
    2. ' =' → logprob: -1.2315592765808105
    3. ')' → logprob: -5.4815592765808105
    4. ',' → logprob: -6.1065592765808105
    5. '   ' → logprob: -6.9815592765808105
    6. '<|end|>' → logprob: -8.731558799743652
    7. '```' → logprob: -8.981558799743652
    8. '<|end|>' → logprob: -9.356558799743652
    9. '[' → logprob: -9.731558799743652
    10. '.' → logprob: -9.731558799743652

Token 1062: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.5760871171951294
    2. 'S' → logprob: -0.8260871171951294
    3. 'float' → logprob: -9.20108699798584
    4. ' float' → logprob: -10.32608699798584
    5. '(S' → logprob: -11.32608699798584
    6. '   ' → logprob: -14.07608699798584
    7. ' (' → logprob: -14.32608699798584
    8. '	S' → logprob: -15.70108699798584
    9. '_S' → logprob: -15.70108699798584
    10. ' ' → logprob: -16.076087951660156

Token 1063: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.09837036579847336
    2. ' /' → logprob: -2.473370313644409
    3. '**' → logprob: -5.223370552062988
    4. ')' → logprob: -6.848370552062988
    5. '/
' → logprob: -6.848370552062988
    6. '/K' → logprob: -7.473370552062988
    7. '<|end|>' → logprob: -8.223370552062988
    8. '```' → logprob: -8.348370552062988
    9. ' /
' → logprob: -8.848370552062988
    10. '*' → logprob: -8.848370552062988

Token 1064: ' mean' (ID: 4774)
  Prédit: 'mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mean' → logprob: -1.9623810658231378e-05
    2. ' mean' → logprob: -10.875020027160645
    3. '(mean' → logprob: -14.500020027160645
    4. '((' → logprob: -16.375019073486328
    5. 'float' → logprob: -17.000019073486328
    6. '(' → logprob: -17.375019073486328
    7. '```' → logprob: -19.125019073486328
    8. '   ' → logprob: -20.125019073486328
    9. ' (' → logprob: -20.375019073486328
    10. ' ((' → logprob: -20.750019073486328

Token 1065: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -2.2200749754119897e-06
    2. 'step' → logprob: -13.125001907348633
    3. '\' → logprob: -16.750001907348633
    4. '_STEP' → logprob: -17.750001907348633
    5. 'Step' → logprob: -17.875001907348633
    6. '_' → logprob: -18.250001907348633
    7. '
' → logprob: -18.500001907348633
    8. ' _' → logprob: -18.750001907348633
    9. '_steps' → logprob: -19.250001907348633
    10. '_s' → logprob: -19.375001907348633

Token 1066: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03191663697361946
    2. 'print' → logprob: -3.781916618347168
    3. '
' → logprob: -4.781916618347168
    4. '```' → logprob: -8.656916618347168
    5. ' print' → logprob: -10.031916618347168
    6. '    
' → logprob: -10.781916618347168
    7. '	print' → logprob: -12.156916618347168
    8. '.print' → logprob: -13.531916618347168
    9. '<|end|>' → logprob: -13.531916618347168
    10. '  
' → logprob: -13.906916618347168

Token 1067: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4467824101448059
    2. 'print' → logprob: -1.4467823505401611
    3. '   ' → logprob: -2.196782350540161
    4. '```' → logprob: -4.44678258895874
    5. ')
' → logprob: -7.07178258895874
    6. ' print' → logprob: -7.57178258895874
    7. '    
' → logprob: -8.321782112121582
    8. '``' → logprob: -8.821782112121582
    9. ')' → logprob: -9.071782112121582
    10. '  
' → logprob: -9.446782112121582

Token 1068: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0017257531872019172
    2. '   ' → logprob: -6.501725673675537
    3. '```' → logprob: -8.501726150512695
    4. ' print' → logprob: -11.501726150512695
    5. '
' → logprob: -11.626726150512695
    6. '``' → logprob: -14.126726150512695
    7. '	print' → logprob: -15.751726150512695
    8. 'printf' → logprob: -16.126726150512695
    9. '`' → logprob: -16.251726150512695
    10. '    
' → logprob: -16.501726150512695

Token 1069: '(f' (ID: 1526)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0021165965590626
    2. '(f' → logprob: -6.252116680145264
    3. '(round' → logprob: -8.752116203308105
    4. '(' → logprob: -11.127116203308105
    5. 'ans' → logprob: -12.002116203308105
    6. '("{' → logprob: -12.127116203308105
    7. '("%.' → logprob: -13.502116203308105
    8. '(float' → logprob: -15.002116203308105
    9. 'f' → logprob: -15.002116203308105
    10. '()' → logprob: -15.127116203308105

Token 1070: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.22431960701942444
    2. '"{' → logprob: -1.724319577217102
    3. '(ans' → logprob: -4.5993194580078125
    4. '.' → logprob: -5.0993194580078125
    5. 'ans' → logprob: -5.8493194580078125
    6. ''{' → logprob: -5.9743194580078125
    7. '("%.' → logprob: -7.5993194580078125
    8. '"' → logprob: -8.849319458007812
    9. '".' → logprob: -9.099319458007812
    10. 'f' → logprob: -9.599319458007812

Token 1071: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.248469718324486e-05
    2. 'S' → logprob: -10.750022888183594
    3. ' ans' → logprob: -14.250022888183594
    4. '(ans' → logprob: -15.875022888183594
    5. '{' → logprob: -16.500022888183594
    6. '	ans' → logprob: -16.750022888183594
    7. 'answer' → logprob: -17.125022888183594
    8. 'anst' → logprob: -18.500022888183594
    9. '}' → logprob: -18.500022888183594
    10. '   ' → logprob: -18.875022888183594

Token 1072: ':.' (ID: 27474)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3133801221847534
    2. ':.' → logprob: -1.3133801221847534
    3. '{' → logprob: -9.313380241394043
    4. ' :.' → logprob: -11.563380241394043
    5. '}' → logprob: -11.688380241394043
    6. ' .' → logprob: -12.188380241394043
    7. 'f' → logprob: -13.438380241394043
    8. '}")' → logprob: -13.688380241394043
    9. '}.' → logprob: -14.313380241394043
    10. '".' → logprob: -14.438380241394043

Token 1073: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6940316557884216
    2. '10' → logprob: -0.9440316557884216
    3. '15' → logprob: -3.0690317153930664
    4. '12' → logprob: -3.5690317153930664
    5. '6' → logprob: -3.6940317153930664
    6. '7' → logprob: -4.694031715393066
    7. '8' → logprob: -6.194031715393066
    8. '11' → logprob: -7.944031715393066
    9. '13' → logprob: -9.194031715393066
    10. '18' → logprob: -9.694031715393066

Token 1074: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. 'g' → logprob: -16.875
    3. '6' → logprob: -17.75
    4. '```' → logprob: -18.5
    5. 'e' → logprob: -19.125
    6. 'lf' → logprob: -19.375
    7. '
' → logprob: -21.0
    8. '{' → logprob: -21.625
    9. '``' → logprob: -22.375
    10. 'ff' → logprob: -22.5

Token 1075: '}")

' (ID: 119200)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.003195654833689332
    2. '")' → logprob: -5.753195762634277
    3. ')")' → logprob: -11.253195762634277
    4. '}")
' → logprob: -12.253195762634277
    5. '}' → logprob: -16.12819480895996
    6. '})' → logprob: -16.87819480895996
    7. '}")
' → logprob: -17.62819480895996
    8. '"}' → logprob: -18.12819480895996
    9. '")}' → logprob: -18.25319480895996
    10. ' }' → logprob: -18.25319480895996

Token 1076: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1077: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1075
Tokens correctement prédits (1ère position, stricte): 335
Tokens correctement prédits (1ère position, avec adaptation): 351
Tokens correctement prédits (top 10): 755
Précision stricte (1ère position): 31.16%
Précision adaptée (1ère position): 32.65%
Précision (top 10): 70.23%
================================================================================
