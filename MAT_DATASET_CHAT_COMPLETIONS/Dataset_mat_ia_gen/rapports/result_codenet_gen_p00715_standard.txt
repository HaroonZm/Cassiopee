================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def main():
    input = sys.stdin.readline
    while True:
        N = int(input())
        if N == 0:
            break
        crossings = [input().strip() for _ in range(N)]
        M = int(input())
        questions = [input().strip() for _ in range(M)]

        street_id = {}
        ns = set()
        ew = set()
        edges = set()
        cnt = 0

        def get_id(s):
            nonlocal cnt
            if s not in street_id:
                street_id[s] = cnt
                cnt += 1
            return street_id[s]

        cross = []

        for c in crossings:
            a,b = c.split('-')
            A = get_id(a)
            B = get_id(b)
            cross.append((A,B))
            edges.add((A,B))

        # Determine orthogonality sets (no direct info, but a street is NS if appears first in crossing)
        # Heuristic: Streets appear in mixed order, so from inputs, we cannot assign orientation directly.
        # Instead, we use the order of crossing names: the first street in input crossings can be NS or EW.
        # We'll try both assumptions:
        # But problem says streets either NS or EW, and crossings are only between orthogonal streets.
        # So, for all crossings (A,B), A and B are orthogonal sets.
        # We build bipartition (graph) accordingly.

        # Build graph to find bipartition: edges between orthogonal streets
        adj = [[] for _ in range(cnt)]
        deg = [0]*cnt
        for A,B in cross:
            adj[A].append(B)
            adj[B].append(A)
            deg[A]+=1
            deg[B]+=1

        color = [-1]*cnt

        def dfs_color(u,c):
            color[u] = c
            for v in adj[u]:
                if color[v]<0:
                    if not dfs_color(v,c^1):
                        return False
                elif color[v]==c:
                    return False
            return True

        # Since streets are either NS or EW, and crossings only happen between orthogonal streets,
        # the street graph is bipartite, color parts are orientations.
        for i in range(cnt):
            if color[i]<0:
                if not dfs_color(i,0):
                    # impossible bipartition (not expected by problem)
                    pass

        # Build crossing sets for fast test if a crossing exists (input direction)
        cross_set = set(cross)

        # Equal strength:
        # A and B equal if
        # (1) both cross same third street C in input (that is, exist C such that C-A and C-B or A-C and B-C in input)
        # (2) no D such that D-A and B-D appear in input
        # (3) no E such that A-E and E-B appear in input

        # We build:
        # For each street s, in_in[s] = set of streets that cross to s (D where D-s in input)
        # out_out[s] = set of streets which s crosses (E where s-E in input)

        in_in = [set() for _ in range(cnt)]
        out_out = [set() for _ in range(cnt)]

        for A,B in cross:
            in_in[B].add(A)
            out_out[A].add(B)

        # For checking condition (1), we find if there is C with C-A and C-B crossing,
        # or A-C and B-C crossing.

        # We consider that to be equal strength, A and B must have a mutual neighbor C with following:
        # There exists C with (C,A) and (C,B) or (A,C) and (B,C) in cross_set.

        # Prepare for equal strength test:

        # We test pairs A,B in same orientation class to reduce pairs:
        # Because crossings only between orthogonal streets, equal strength between streets of same orientation.

        # Candidate pairs are pairs in same color group
        equal_pairs = []

        for cgroup in (0,1):
            group = [i for i in range(cnt) if color[i]==cgroup]
            gset = set(group)
            for i in range(len(group)):
                A = group[i]
                for j in range(i+1,len(group)):
                    B = group[j]
                    # Check condition (1): exists C with both connected to A and B with same direction
                    # Check all C: either C->A and C->B in cross_set or A->C and B->C in cross_set
                    foundC = False
                    # check C->A and C->B
                    common_in = in_in[A] & in_in[B]
                    # check A->C and B->C
                    common_out = out_out[A] & out_out[B]
                    if common_in or common_out:
                        # condition(2) no D with D-A and B-D
                        cond2 = True
                        for D in in_in[A]:
                            if (B,D) in cross_set:
                                cond2 = False
                                break
                        if not cond2:
                            continue
                        # condition(3) no E with A-E and E-B
                        cond3 = True
                        for E in out_out[A]:
                            if (E,B) in cross_set:
                                cond3 = False
                                break
                        if not cond3:
                            continue
                        # all conditions fulfilled
                        equal_pairs.append((A,B))

        parent = list(range(cnt))
        def find(u):
            while parent[u]!=u:
                parent[u]=parent[parent[u]]
                u=parent[u]
            return u
        def union(u,v):
            u=find(u)
            v=find(v)
            if u!=v:
                parent[v]=u

        for A,B in equal_pairs:
            union(A,B)

        # Build adjacency for stronger relation
        # stronger if there is a sequence A=A1, A2, ..., An=B with n>=2,
        # and for all consecutive Ai,Ai+1, either Ai-Ai+1 is input crossing (Ai stronger Ai+1)
        # or Ai and Ai+1 have equal strength

        # equal strength means in same union-find set
        # Build graph of stronger relation:
        # edges (A->B) if (A,B) in input crossing (A stronger B)

        # For equal strength, treat A,B same level, so we shrink equal strength classes into nodes:

        # Build node for each union-find class
        comp = {}
        comp_id = 0
        for i in range(cnt):
            r = find(i)
            if r not in comp:
                comp[r] = comp_id
                comp_id += 1

        # Build reduced graph according to crossings between reps
        adj_strong = [[] for _ in range(comp_id)]

        # For each crossing A-B in input, add edge from comp[A] to comp[B] if different.
        # For equal strength, merges nodes.

        for A,B in cross:
            a = comp[find(A)]
            b = comp[find(B)]
            if a!=b:
                adj_strong[a].append(b)

        # Floyd-Warshall or BFS from each node to find reachability?
        # Up to 200 streets, after union find less than 200 comps.

        reach = [set() for _ in range(comp_id)]
        for i in range(comp_id):
            reach[i].add(i)
        for i in range(comp_id):
            for v in adj_strong[i]:
                reach[i].add(v)

        # Floyd-Warshall
        changed = True
        while changed:
            changed = False
            for i in range(comp_id):
                newset = set(reach[i])
                for v in list(reach[i]):
                    newset |= reach[v]
                if len(newset)>len(reach[i]):
                    reach[i] = newset
                    changed = True

        # For each question: print YES if infer that two streets are orthogonal and X stronger than Y
        # Orthogonal means color differs
        # stronger means comp[X]'s reachable contains comp[Y]

        # The number of distinct streets equals cnt

        print(cnt)
        for q in questions:
            X,Y = q.split('-')
            if X not in street_id or Y not in street_id:
                print("NO")
                continue
            x,y = street_id[X],street_id[Y]
            if color[x]==color[y]:
                print("NO")
                continue
            a,b = comp[find(x)],comp[find(y)]
            if b in reach[a]:
                print("YES")
            else:
                print("NO")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.228561349213123e-05
    2. ' .' → logprob: -10.750052452087402
    3. '[' → logprob: -12.375052452087402
    4. '.user' → logprob: -13.000052452087402
    5. '.`' → logprob: -13.125052452087402
    6. '.​' → logprob: -13.125052452087402
    7. '."""' → logprob: -13.250052452087402
    8. '.[' → logprob: -13.375052452087402
    9. '.import' → logprob: -13.500052452087402
    10. '.readline' → logprob: -13.750052452087402

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7622331976890564
    2. 's' → logprob: -1.1372332572937012
    3. 't' → logprob: -2.887233257293701
    4. 'sys' → logprob: -3.262233257293701
    5. 'set' → logprob: -3.637233257293701
    6. 'soft' → logprob: -4.012233257293701
    7. 'default' → logprob: -4.262233257293701
    8. '_' → logprob: -5.012233257293701
    9. 'ex' → logprob: -5.012233257293701
    10. 'suffix' → logprob: -5.137233257293701

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003742952598258853
    2. 'ursive' → logprob: -6.3787431716918945
    3. 'limit' → logprob: -7.0037431716918945
    4. 'ur' → logprob: -7.5037431716918945
    5. 'urse' → logprob: -9.253743171691895
    6. '_limit' → logprob: -9.628743171691895
    7. 'urs' → logprob: -9.628743171691895
    8. 'ut' → logprob: -9.753743171691895
    9. 'u' → logprob: -10.003743171691895
    10. 't' → logprob: -10.128743171691895

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.4866597652435303
    2. 'limit' → logprob: -0.9866597652435303
    3. '_depth' → logprob: -4.486660003662109
    4. 'depth' → logprob: -7.486660003662109
    5. '_' → logprob: -8.36166000366211
    6. '_rate' → logprob: -9.98666000366211
    7. 'lim' → logprob: -10.23666000366211
    8. '(' → logprob: -10.36166000366211
    9. '_factor' → logprob: -10.36166000366211
    10. '_stack' → logprob: -10.61166000366211

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '("("' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10064871609210968
    2. '100' → logprob: -2.3506486415863037
    3. ' ' → logprob: -8.100648880004883
    4. '500' → logprob: -9.850648880004883
    5. '300' → logprob: -9.975648880004883
    6. '250' → logprob: -10.725648880004883
    7. '  ' → logprob: -12.350648880004883
    8. '   ' → logprob: -12.475648880004883
    9. '200' → logprob: -12.850648880004883
    10. '999' → logprob: -13.100648880004883

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09284054487943649
    2. '000' → logprob: -2.7178404331207275
    3. '00' → logprob: -3.8428404331207275
    4. '4' → logprob: -7.092840671539307
    5. '6' → logprob: -8.217840194702148
    6. '**' → logprob: -9.967840194702148
    7. '```' → logprob: -10.842840194702148
    8. '5' → logprob: -11.092840194702148
    9. '3' → logprob: -11.592840194702148
    10. '2' → logprob: -12.092840194702148

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00762082589790225
    2. '9' → logprob: -5.507620811462402
    3. '6' → logprob: -5.757620811462402
    4. '8' → logprob: -7.882620811462402
    5. '```' → logprob: -15.757620811462402
    6. ' ' → logprob: -16.38262176513672
    7. '(' → logprob: -17.13262176513672
    8. '5' → logprob: -17.75762176513672
    9. '``' → logprob: -18.25762176513672
    10. '999' → logprob: -18.38262176513672

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. ' )' → logprob: -12.500007629394531
    3. '))' → logprob: -12.500007629394531
    4. ')
' → logprob: -14.875007629394531
    5. ')))' → logprob: -17.25000762939453
    6. ' ' → logprob: -17.37500762939453
    7. ')`' → logprob: -17.62500762939453
    8. '')' → logprob: -17.87500762939453
    9. '```' → logprob: -17.87500762939453
    10. '0' → logprob: -18.37500762939453

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43564432859420776
    2. '\' → logprob: -1.3106443881988525
    3. '\n' → logprob: -3.6856443881988525
    4. '
' → logprob: -4.185644149780273
    5. '```' → logprob: -4.185644149780273
    6. ')' → logprob: -5.060644149780273
    7. '`' → logprob: -5.435644149780273
    8. 'import' → logprob: -5.560644149780273
    9. '#' → logprob: -5.560644149780273
    10. '

' → logprob: -6.560644149780273

Token 14: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8245536684989929
    2. ' factorial' → logprob: -0.8245536684989929
    3. ' dfs' → logprob: -2.5745537281036377
    4. ' f' → logprob: -4.324553489685059
    5. ' factor' → logprob: -5.074553489685059
    6. ' my' → logprob: -5.324553489685059
    7. ' fibonacci' → logprob: -5.574553489685059
    8. ' space' → logprob: -5.574553489685059
    9. ' main' → logprob: -5.949553489685059
    10. ' recursive' → logprob: -6.074553489685059

Token 15: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009102925658226013
    2. '():' → logprob: -5.009102821350098
    3. '(:' → logprob: -6.884102821350098
    4. ':' → logprob: -7.009102821350098
    5. '_' → logprob: -8.384102821350098
    6. '):' → logprob: -10.009102821350098
    7. ' (' → logprob: -10.259102821350098
    8. '(":' → logprob: -10.759102821350098
    9. '.' → logprob: -11.009102821350098
    10. ')' → logprob: -11.134102821350098

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011883151717483997
    2. '    ' → logprob: -5.13688325881958
    3. '    
' → logprob: -5.38688325881958
    4. '\' → logprob: -8.261882781982422
    5. '\n' → logprob: -8.386882781982422
    6. 'n' → logprob: -8.761882781982422
    7. ' 
' → logprob: -9.011882781982422
    8. '<|end|>' → logprob: -9.261882781982422
    9. '
' → logprob: -9.761882781982422
    10. '(' → logprob: -9.761882781982422

Token 17: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.26017889380455017
    2. 'n' → logprob: -1.6351789236068726
    3. '   ' → logprob: -3.885178804397583
    4. 'a' → logprob: -6.010179042816162
    5. ' a' → logprob: -6.510179042816162
    6. '    ' → logprob: -6.760179042816162
    7. ' print' → logprob: -6.760179042816162
    8. ' pass' → logprob: -6.885179042816162
    9. 'print' → logprob: -7.010179042816162
    10. 'i' → logprob: -7.385179042816162

Token 18: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3126084804534912
    2. '_data' → logprob: -1.5626084804534912
    3. '(' → logprob: -4.06260871887207
    4. 'data' → logprob: -4.43760871887207
    5. '_str' → logprob: -4.43760871887207
    6. '().' → logprob: -5.06260871887207
    7. '_line' → logprob: -5.56260871887207
    8. '_' → logprob: -6.31260871887207
    9. '_text' → logprob: -6.93760871887207
    10. '_string' → logprob: -7.31260871887207

Token 19: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.34773606061935425
    2. 'input' → logprob: -2.097736120223999
    3. ' input' → logprob: -2.347736120223999
    4. 'sys' → logprob: -2.597736120223999
    5. ' lambda' → logprob: -7.59773588180542
    6. 'lambda' → logprob: -8.222736358642578
    7. ' ' → logprob: -8.972736358642578
    8. 'raw' → logprob: -11.222736358642578
    9. ' raw' → logprob: -11.347736358642578
    10. '=sys' → logprob: -11.847736358642578

Token 20: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006858677952550352
    2. '.' → logprob: -8.125685691833496
    3. '.stdout' → logprob: -8.875685691833496
    4. ' .' → logprob: -9.125685691833496
    5. '.readline' → logprob: -9.375685691833496
    6. '.std' → logprob: -10.500685691833496
    7. '.argv' → logprob: -11.000685691833496
    8. '.input' → logprob: -12.125685691833496
    9. '.exit' → logprob: -13.750685691833496
    10. '.st' → logprob: -13.750685691833496

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004685495514422655
    2. '.read' → logprob: -5.379685401916504
    3. '.' → logprob: -9.879685401916504
    4. 'read' → logprob: -11.504685401916504
    5. '.buffer' → logprob: -13.254685401916504
    6. '.readlines' → logprob: -13.379685401916504
    7. '.Read' → logprob: -15.129685401916504
    8. ' readline' → logprob: -16.00468635559082
    9. 'buffer' → logprob: -16.25468635559082
    10. '<|end|>' → logprob: -17.12968635559082

Token 22: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004376244265586138
    2. '()
' → logprob: -5.504376411437988
    3. '(' → logprob: -9.129376411437988
    4. '()\' → logprob: -9.379376411437988
    5. '().' → logprob: -9.879376411437988
    6. '()

' → logprob: -11.129376411437988
    7. ')' → logprob: -11.379376411437988
    8. '   ' → logprob: -11.629376411437988
    9. '(
' → logprob: -12.129376411437988
    10. '())' → logprob: -13.129376411437988

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011167021468281746
    2. '    
' → logprob: -4.761167049407959
    3. '()' → logprob: -6.761167049407959
    4. '(' → logprob: -8.1361665725708
    5. '(n' → logprob: -8.3861665725708
    6. '```' → logprob: -9.0111665725708
    7. 'def' → logprob: -9.1361665725708
    8. 'n' → logprob: -9.1361665725708
    9. '
' → logprob: -9.5111665725708
    10. '    ' → logprob: -9.6361665725708

Token 24: ' while' (ID: 2049)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4534702003002167
    2. 'n' → logprob: -1.328470230102539
    3. '   ' → logprob: -2.828470230102539
    4. '(n' → logprob: -3.953470230102539
    5. '(' → logprob: -4.453470230102539
    6. 'N' → logprob: -5.703470230102539
    7. 's' → logprob: -6.953470230102539
    8. 'x' → logprob: -7.078470230102539
    9. 't' → logprob: -7.203470230102539
    10. 'data' → logprob: -7.578470230102539

Token 25: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.008314560167491436
    2. 'True' → logprob: -4.883314609527588
    3. '(True' → logprob: -7.258314609527588
    4. ' ' → logprob: -13.13331413269043
    5. '()' → logprob: -14.00831413269043
    6. '  ' → logprob: -15.50831413269043
    7. ':' → logprob: -16.00831413269043
    8. ' not' → logprob: -16.00831413269043
    9. ' Tru' → logprob: -16.13331413269043
    10. '=True' → logprob: -16.13331413269043

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001458331593312323
    2. '():' → logprob: -6.751458168029785
    3. ' :' → logprob: -9.001458168029785
    4. ':**' → logprob: -9.751458168029785
    5. '):' → logprob: -10.001458168029785
    6. '   ' → logprob: -11.001458168029785
    7. ':
' → logprob: -11.251458168029785
    8. '       ' → logprob: -11.626458168029785
    9. '    ' → logprob: -12.251458168029785
    10. ',' → logprob: -12.626458168029785

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007838120684027672
    2. '    ' → logprob: -5.507838249206543
    3. ' ' → logprob: -6.132838249206543
    4. '        
' → logprob: -7.382838249206543
    5. '   ' → logprob: -8.132838249206543
    6. '        ' → logprob: -8.382838249206543
    7. '      ' → logprob: -8.757838249206543
    8. '     ' → logprob: -10.257838249206543
    9. '(' → logprob: -10.507838249206543
    10. '  ' → logprob: -11.007838249206543

Token 28: ' N' (ID: 478)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2709515392780304
    2. 'line' → logprob: -2.020951509475708
    3. 'data' → logprob: -3.395951509475708
    4. '   ' → logprob: -3.395951509475708
    5. ' data' → logprob: -3.895951509475708
    6. ' s' → logprob: -5.395951747894287
    7. 's' → logprob: -5.395951747894287
    8. 'x' → logprob: -6.270951747894287
    9. '       ' → logprob: -6.770951747894287
    10. 'n' → logprob: -6.895951747894287

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0160545464605093
    2. '=' → logprob: -4.141054630279541
    3. '=int' → logprob: -11.391054153442383
    4. ' ' → logprob: -12.766054153442383
    5. ' ==' → logprob: -13.391054153442383
    6. ',' → logprob: -13.766054153442383
    7. '    ' → logprob: -14.141054153442383
    8. '=input' → logprob: -14.391054153442383
    9. ' :=' → logprob: -14.516054153442383
    10. ' >' → logprob: -14.766054153442383

Token 30: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7150800228118896
    2. ' int' → logprob: -0.7150800228118896
    3. ' input' → logprob: -4.465080261230469
    4. 'input' → logprob: -4.590080261230469
    5. ' ' → logprob: -10.465080261230469
    6. '=int' → logprob: -12.715080261230469
    7. '(int' → logprob: -13.465080261230469
    8. ' sys' → logprob: -14.465080261230469
    9. '```' → logprob: -14.465080261230469
    10. '  ' → logprob: -14.465080261230469

Token 31: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0036167046055197716
    2. '(' → logprob: -5.628616809844971
    3. 'input' → logprob: -11.253616333007812
    4. ' (' → logprob: -13.378616333007812
    5. '(in' → logprob: -14.128616333007812
    6. '(
' → logprob: -14.753616333007812
    7. '((' → logprob: -15.753616333007812
    8. ' input' → logprob: -15.878616333007812
    9. '(sys' → logprob: -16.003616333007812
    10. ',input' → logprob: -16.128616333007812

Token 32: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006542827934026718
    2. '().' → logprob: -5.256542682647705
    3. '()))' → logprob: -7.131542682647705
    4. '()' → logprob: -7.631542682647705
    5. ' ())' → logprob: -11.381543159484863
    6. '())
' → logprob: -11.631543159484863
    7. '()),' → logprob: -13.881543159484863
    8. '();)' → logprob: -14.631543159484863
    9. ')' → logprob: -14.881543159484863
    10. '(' → logprob: -15.006543159484863

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10757018625736237
    2. '<|end|>' → logprob: -2.357570171356201
    3. ' if' → logprob: -6.107570171356201
    4. '<|end|>' → logprob: -6.357570171356201
    5. ' ' → logprob: -6.857570171356201
    6. '   ' → logprob: -7.232570171356201
    7. '        ' → logprob: -7.482570171356201
    8. ')' → logprob: -7.732570171356201
    9. '    ' → logprob: -8.85757064819336
    10. '        
' → logprob: -9.10757064819336

Token 34: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14483919739723206
    2. ' if' → logprob: -2.519839286804199
    3. '<|end|>' → logprob: -3.144839286804199
    4. '        ' → logprob: -5.519839286804199
    5. 'if' (adapté à ' if') → logprob: -5.644839286804199
    6. ' ' → logprob: -6.144839286804199
    7. '<|end|>' → logprob: -7.144839286804199
    8. '   ' → logprob: -8.3948392868042
    9. '    ' → logprob: -8.6448392868042
    10. ')' → logprob: -9.2698392868042

Token 35: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.1800839900970459
    2. ' not' → logprob: -1.805083990097046
    3. 'N' → logprob: -8.055084228515625
    4. ' ' → logprob: -11.180084228515625
    5. 'not' → logprob: -11.930084228515625
    6. ' ' → logprob: -14.055084228515625
    7. '<|end|>' → logprob: -15.180084228515625
    8. '>N' → logprob: -16.930084228515625
    9. '<|end|>' → logprob: -17.367584228515625
    10. ' Not' → logprob: -17.805084228515625

Token 36: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014217919670045376
    2. '==' → logprob: -4.264217853546143
    3. ' <=' → logprob: -10.2642183303833
    4. ' <' → logprob: -11.2642183303833
    5. ' ' → logprob: -12.6392183303833
    6. '<=' → logprob: -13.6392183303833
    7. ')' → logprob: -14.2642183303833
    8. '<' → logprob: -14.8892183303833
    9. '=' → logprob: -14.8892183303833
    10. ')==' → logprob: -15.3892183303833

Token 37: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12693051993846893
    2. '0' → logprob: -2.1269304752349854
    3. ' ' → logprob: -13.251930236816406
    4. '  ' → logprob: -15.251930236816406
    5. '=' → logprob: -15.876930236816406
    6. '_' → logprob: -16.376930236816406
    7. '    ' → logprob: -16.689430236816406
    8. '   ' → logprob: -16.814430236816406
    9. '０' → logprob: -17.564430236816406
    10. ' -' → logprob: -17.564430236816406

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036004253197461367
    2. ' ' → logprob: -5.628600597381592
    3. '-' → logprob: -15.628600120544434
    4. '    ' → logprob: -16.87860107421875
    5. '```' → logprob: -16.87860107421875
    6. '  ' → logprob: -17.25360107421875
    7. ' -' → logprob: -17.37860107421875
    8. ')' → logprob: -17.75360107421875
    9. '   ' → logprob: -17.75360107421875
    10. '０' → logprob: -19.00360107421875

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004172421991825104
    2. ':
' → logprob: -5.504172325134277
    3. '       ' → logprob: -9.629172325134277
    4. ':return' → logprob: -11.254172325134277
    5. '   ' → logprob: -11.754172325134277
    6. ' :' → logprob: -12.379172325134277
    7. '           ' → logprob: -14.629172325134277
    8. ' break' → logprob: -14.754172325134277
    9. ' :
' → logprob: -15.129172325134277
    10. '    ' → logprob: -15.254172325134277

Token 40: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056168437004089355
    2. '       ' → logprob: -2.931168556213379
    3. '   ' → logprob: -8.056168556213379
    4. ':' → logprob: -8.181168556213379
    5. ' break' → logprob: -8.431168556213379
    6. '<|end|>' → logprob: -9.556168556213379
    7. '<|end|>' → logprob: -9.806168556213379
    8. '          ' → logprob: -10.181168556213379
    9. '        ' → logprob: -10.306168556213379
    10. ' ' → logprob: -10.306168556213379

Token 41: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.03909569978713989
    2. '       ' → logprob: -4.039095878601074
    3. 'break' (adapté à ' break') → logprob: -4.289095878601074
    4. '           ' → logprob: -5.039095878601074
    5. '	break' → logprob: -8.539095878601074
    6. ' return' → logprob: -9.289095878601074
    7. '   ' → logprob: -10.039095878601074
    8. '
' → logprob: -10.039095878601074
    9. '```' → logprob: -10.039095878601074
    10. '\n' → logprob: -10.164095878601074

Token 42: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5270034074783325
    2. '<|end|>' → logprob: -1.4020034074783325
    3. '
' → logprob: -1.9020034074783325
    4. '<|end|>' → logprob: -5.527003288269043
    5. '        
' → logprob: -5.652003288269043
    6. '\n' → logprob: -6.152003288269043
    7. '   ' → logprob: -7.152003288269043
    8. ')' → logprob: -7.277003288269043
    9. '        ' → logprob: -7.652003288269043
    10. '```' → logprob: -7.902003288269043

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6269550323486328
    2. '
' → logprob: -1.1269550323486328
    3. '<|end|>' → logprob: -2.501955032348633
    4. '\n' → logprob: -3.626955032348633
    5. '        
' → logprob: -4.751955032348633
    6. '\' → logprob: -5.001955032348633
    7. '```' → logprob: -5.001955032348633
    8. '    
' → logprob: -6.376955032348633
    9. '   ' → logprob: -6.376955032348633
    10. '<|end|>' → logprob: -6.376955032348633

Token 44: ' crossings' (ID: 199340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6637634038925171
    2. '<|end|>' → logprob: -0.9137634038925171
    3. '
' → logprob: -3.6637635231018066
    4. '<|end|>' → logprob: -4.288763523101807
    5. '        ' → logprob: -4.788763523101807
    6. ')' → logprob: -5.163763523101807
    7. '   ' → logprob: -5.163763523101807
    8. ' ' → logprob: -5.413763523101807
    9. '        
' → logprob: -5.663763523101807
    10. '```' → logprob: -5.663763523101807

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006005583330988884
    2. '=' → logprob: -5.881005764007568
    3. ' ' → logprob: -6.756005764007568
    4. '_' → logprob: -7.006005764007568
    5. '_count' → logprob: -7.256005764007568
    6. ')' → logprob: -9.25600528717041
    7. ' +=' → logprob: -10.00600528717041
    8. '[' → logprob: -10.13100528717041
    9. '   ' → logprob: -10.25600528717041
    10. ' _' → logprob: -10.50600528717041

Token 46: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2037288099527359
    2. '[]' → logprob: -1.9537287950515747
    3. ' [' → logprob: -3.4537289142608643
    4. ' list' → logprob: -4.953728675842285
    5. '[' → logprob: -5.953728675842285
    6. 'list' → logprob: -7.203728675842285
    7. '[list' → logprob: -8.078728675842285
    8. '[int' → logprob: -9.578728675842285
    9. ' [[]' → logprob: -9.953728675842285
    10. ' ' → logprob: -10.078728675842285

Token 47: 'input' (ID: 2586)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.18925781548023224
    2. 'tuple' → logprob: -2.314257860183716
    3. '0' → logprob: -3.814257860183716
    4. '[]' → logprob: -3.939257860183716
    5. 'int' → logprob: -4.314257621765137
    6. ' list' → logprob: -4.814257621765137
    7. 'False' → logprob: -5.564257621765137
    8. ']' → logprob: -6.064257621765137
    9. ' tuple' → logprob: -6.189257621765137
    10. '[int' → logprob: -7.189257621765137

Token 48: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.015080166049301624
    2. '()' → logprob: -4.265079975128174
    3. '()]' → logprob: -7.390079975128174
    4. '())' → logprob: -8.140080451965332
    5. '()].' → logprob: -12.640080451965332
    6. '()
' → logprob: -14.015080451965332
    7. ' ().' → logprob: -14.140080451965332
    8. '(' → logprob: -14.265080451965332
    9. '()[' → logprob: -14.765080451965332
    10. '()).' → logprob: -15.015080451965332

Token 49: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.08509745448827744
    2. 'rstrip' → logprob: -2.585097551345825
    3. 'split' → logprob: -5.085097312927246
    4. ' strip' → logprob: -16.710098266601562
    5. '.rstrip' → logprob: -18.460098266601562
    6. 'replace' → logprob: -18.460098266601562
    7. 'rs' → logprob: -18.585098266601562
    8. '.strip' → logprob: -19.335098266601562
    9. '```' → logprob: -19.960098266601562
    10. 'spl' → logprob: -19.960098266601562

Token 50: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09114617109298706
    2. '()]' → logprob: -2.466146230697632
    3. '())' → logprob: -6.466145992279053
    4. '().' → logprob: -7.591145992279053
    5. ')' → logprob: -9.341146469116211
    6. ']' → logprob: -11.091146469116211
    7. ' ()' → logprob: -11.216146469116211
    8. '(),' → logprob: -12.216146469116211
    9. ' for' → logprob: -12.591146469116211
    10. '()
' → logprob: -12.716146469116211

Token 51: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.616361141204834
    2. '()' → logprob: -0.991361141204834
    3. '()]' → logprob: -2.991361141204834
    4. '())' → logprob: -4.491361141204834
    5. ')]' → logprob: -4.616361141204834
    6. ' for' → logprob: -4.616361141204834
    7. ']' → logprob: -5.491361141204834
    8. '().' → logprob: -6.741361141204834
    9. ' )' → logprob: -6.866361141204834
    10. 'for' → logprob: -8.241361618041992

Token 52: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.051626503467559814
    2. ' range' → logprob: -3.426626443862915
    3. '_' → logprob: -4.176626682281494
    4. ' ' → logprob: -6.051626682281494
    5. 'range' → logprob: -9.926626205444336
    6. '_range' → logprob: -10.801626205444336
    7. ' i' → logprob: -11.051626205444336
    8. ' xrange' → logprob: -11.676626205444336
    9. '	range' → logprob: -11.801626205444336
    10. ' ' → logprob: -12.176626205444336

Token 53: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25669655203819275
    2. 'range' → logprob: -1.5066965818405151
    3. ' in' → logprob: -5.381696701049805
    4. 'in' → logprob: -9.881696701049805
    5. '	range' → logprob: -10.381696701049805
    6. '  ' → logprob: -10.506696701049805
    7. ' ' → logprob: -11.006696701049805
    8. '_' → logprob: -11.506696701049805
    9. '_range' → logprob: -12.131696701049805
    10. ' _' → logprob: -12.506696701049805

Token 54: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026304712519049644
    2. ' range' → logprob: -3.6513047218322754
    3. ' ' → logprob: -13.901304244995117
    4. '   ' → logprob: -14.026304244995117
    5. '(range' → logprob: -14.151304244995117
    6. '	range' → logprob: -14.276304244995117
    7. 'rang' → logprob: -15.026304244995117
    8. '  ' → logprob: -15.276304244995117
    9. '```' → logprob: -15.776304244995117
    10. ')' → logprob: -16.151304244995117

Token 55: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0002497767563909292
    2. '(' → logprob: -8.375249862670898
    3. ' (' → logprob: -11.125249862670898
    4. 'N' → logprob: -12.750249862670898
    5. '(n' → logprob: -14.125249862670898
    6. ' N' → logprob: -14.625249862670898
    7. '(
' → logprob: -16.3752498626709
    8. ' ' → logprob: -16.6252498626709
    9. ')' → logprob: -16.8752498626709
    10. '   ' → logprob: -17.5002498626709

Token 56: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006021226872690022
    2. ')' → logprob: -7.7506022453308105
    3. ']' → logprob: -8.875601768493652
    4. ' )' → logprob: -11.125601768493652
    5. ')]
' → logprob: -12.250601768493652
    6. ')}' → logprob: -13.500601768493652
    7. '   ' → logprob: -13.500601768493652
    8. '))' → logprob: -13.500601768493652
    9. ')])' → logprob: -13.750601768493652
    10. '       ' → logprob: -14.000601768493652

Token 57: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' M' (ID: 391)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3417576551437378
    2. ' graph' → logprob: -1.8417576551437378
    3. ' pairs' → logprob: -3.0917577743530273
    4. '   ' → logprob: -3.2167577743530273
    5. 'graph' → logprob: -3.2167577743530273
    6. ' counts' → logprob: -3.3417577743530273
    7. ' count' → logprob: -3.4667577743530273
    8. 'count' → logprob: -3.4667577743530273
    9. '#' → logprob: -3.5917577743530273
    10. ' from' → logprob: -3.7167577743530273

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0046412344090640545
    2. '=' → logprob: -5.379641056060791
    3. ' ' → logprob: -11.87964153289795
    4. ',' → logprob: -12.00464153289795
    5. '=int' → logprob: -13.00464153289795
    6. '    ' → logprob: -13.25464153289795
    7. ' ,' → logprob: -13.75464153289795
    8. ' ' → logprob: -13.87964153289795
    9. '   ' → logprob: -15.25464153289795
    10. '        ' → logprob: -15.37964153289795

Token 60: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04861631989479065
    2. 'int' → logprob: -3.048616409301758
    3. ' len' → logprob: -10.798616409301758
    4. 'len' → logprob: -12.173616409301758
    5. '=int' → logprob: -13.298616409301758
    6. '[int' → logprob: -15.048616409301758
    7. ' in' → logprob: -15.298616409301758
    8. ' ' → logprob: -15.423616409301758
    9. ' N' → logprob: -15.548616409301758
    10. '<int' → logprob: -15.548616409301758

Token 61: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.3795937522663735e-05
    2. '(' → logprob: -10.75002384185791
    3. 'input' → logprob: -13.37502384185791
    4. ' (' → logprob: -14.50002384185791
    5. ' input' → logprob: -15.75002384185791
    6. '=input' → logprob: -18.000022888183594
    7. ',input' → logprob: -18.375022888183594
    8. '	input' → logprob: -18.750022888183594
    9. '(sys' → logprob: -18.875022888183594
    10. '(inputs' → logprob: -19.000022888183594

Token 62: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004125299863517284
    2. '()' → logprob: -5.504125118255615
    3. ' ())' → logprob: -10.254125595092773
    4. ')' → logprob: -12.129125595092773
    5. '())
' → logprob: -12.879125595092773
    6. '()
' → logprob: -13.629125595092773
    7. '();)' → logprob: -14.004125595092773
    8. '()]' → logprob: -14.629125595092773
    9. '().' → logprob: -14.754125595092773
    10. '()))' → logprob: -15.254125595092773

Token 63: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' questions' (ID: 5359)
  Prédit: ' crossings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' crossings' → logprob: -0.36483269929885864
    2. '       ' → logprob: -2.489832639694214
    3. ' graph' → logprob: -2.989832639694214
    4. ' for' → logprob: -3.614832639694214
    5. '<|end|>' → logprob: -3.989832639694214
    6. ' pairs' → logprob: -4.239832878112793
    7. ' edges' → logprob: -4.364832878112793
    8. ' crossing' → logprob: -4.489832878112793
    9. ' cross' → logprob: -4.989832878112793
    10. ' intersections' → logprob: -5.114832878112793

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017143317963927984
    2. '=' → logprob: -6.37671422958374
    3. ' ' → logprob: -12.626714706420898
    4. '_' → logprob: -12.876714706420898
    5. '[' → logprob: -13.126714706420898
    6. ')' → logprob: -13.626714706420898
    7. ' =[' → logprob: -14.501714706420898
    8. '   ' → logprob: -14.626714706420898
    9. '    ' → logprob: -15.501714706420898
    10. ' =
' → logprob: -15.626714706420898

Token 66: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8638091683387756
    2. ' [' → logprob: -0.8638091683387756
    3. '[input' → logprob: -1.8638091087341309
    4. '[int' → logprob: -6.363809108734131
    5. '[in' → logprob: -10.613809585571289
    6. '[i' → logprob: -11.488809585571289
    7. '[item' → logprob: -12.238809585571289
    8. '[f' → logprob: -12.488809585571289
    9. '[line' → logprob: -12.613809585571289
    10. '[ind' → logprob: -12.738809585571289

Token 67: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.09057175368070602
    2. ' input' → logprob: -2.465571641921997
    3. 'int' → logprob: -7.090571880340576
    4. '(input' → logprob: -8.090571403503418
    5. 'tuple' → logprob: -8.715571403503418
    6. '[input' → logprob: -9.090571403503418
    7. ' int' → logprob: -9.590571403503418
    8. ' tuple' → logprob: -9.590571403503418
    9. 'list' → logprob: -10.840571403503418
    10. '<input' → logprob: -11.215571403503418

Token 68: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00034988581319339573
    2. '()' → logprob: -8.000349998474121
    3. '()].' → logprob: -11.375349998474121
    4. '()]' → logprob: -13.500349998474121
    5. ' ().' → logprob: -13.750349998474121
    6. '()).' → logprob: -15.250349998474121
    7. '(' → logprob: -15.875349998474121
    8. '.' → logprob: -17.000349044799805
    9. '()
' → logprob: -17.375349044799805
    10. '>().' → logprob: -17.625349044799805

Token 69: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -3.03521392197581e-05
    2. 'rstrip' → logprob: -10.625030517578125
    3. 'split' → logprob: -12.125030517578125
    4. ' strip' → logprob: -15.125030517578125
    5. 'read' → logprob: -15.500030517578125
    6. '(strip' → logprob: -16.875030517578125
    7. 'stripe' → logprob: -17.625030517578125
    8. 'startswith' → logprob: -18.000030517578125
    9. 'str' → logprob: -18.375030517578125
    10. '```' → logprob: -18.750030517578125

Token 70: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.7755875129951164e-05
    2. '()]' → logprob: -10.25004768371582
    3. '())' → logprob: -12.37504768371582
    4. ')' → logprob: -12.50004768371582
    5. ' ()' → logprob: -13.12504768371582
    6. '()
' → logprob: -13.37504768371582
    7. 'for' → logprob: -14.75004768371582
    8. '(' → logprob: -16.25004768371582
    9. ' for' → logprob: -16.25004768371582
    10. '（）' → logprob: -16.62504768371582

Token 71: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2042241245508194
    2. 'for' → logprob: -1.8292241096496582
    3. ')' → logprob: -3.829224109649658
    4. '()' → logprob: -6.204224109649658
    5. '	for' → logprob: -8.329224586486816
    6. ' ' → logprob: -9.204224586486816
    7. ' )' → logprob: -10.329224586486816
    8. '       ' → logprob: -11.079224586486816
    9. ' ()' → logprob: -11.579224586486816
    10. '   ' → logprob: -11.954224586486816

Token 72: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2777545750141144
    2. ' _' → logprob: -1.527754545211792
    3. ' range' → logprob: -3.902754545211792
    4. '_range' → logprob: -5.402754783630371
    5. 'range' → logprob: -7.527754783630371
    6. ' for' → logprob: -9.652754783630371
    7. ' M' → logprob: -10.027754783630371
    8. '(range' → logprob: -10.527754783630371
    9. '_M' → logprob: -10.652754783630371
    10. '<|end|>' → logprob: -10.652754783630371

Token 73: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3536064326763153
    2. 'range' → logprob: -1.3536064624786377
    3. '_' → logprob: -3.4786064624786377
    4. ' _' → logprob: -4.978606224060059
    5. '_range' → logprob: -6.603606224060059
    6. ' in' → logprob: -7.853606224060059
    7. '(range' → logprob: -10.353606224060059
    8. 'ange' → logprob: -10.853606224060059
    9. '	range' → logprob: -12.853606224060059
    10. ' for' → logprob: -13.103606224060059

Token 74: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197262182831764
    2. ' range' → logprob: -2.8119726181030273
    3. '(range' → logprob: -12.311972618103027
    4. '	range' → logprob: -14.811972618103027
    5. '_range' → logprob: -17.061973571777344
    6. '   ' → logprob: -17.561973571777344
    7. '_' → logprob: -17.811973571777344
    8. ' ' → logprob: -18.061973571777344
    9. '    ' → logprob: -18.686973571777344
    10. '.range' → logprob: -19.561973571777344

Token 75: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.14266635477542877
    2. ' range' → logprob: -2.1426663398742676
    3. 'range' → logprob: -4.267666339874268
    4. '(range' → logprob: -6.767666339874268
    5. '(' → logprob: -8.267666816711426
    6. ' (' → logprob: -8.767666816711426
    7. 'M' → logprob: -10.642666816711426
    8. ' M' → logprob: -11.767666816711426
    9. 'Range' → logprob: -13.392666816711426
    10. '   ' → logprob: -13.642666816711426

Token 76: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008957733400166035
    2. ']' → logprob: -4.883957862854004
    3. ')' → logprob: -6.633957862854004
    4. ' )' → logprob: -11.883957862854004
    5. '])' → logprob: -11.883957862854004
    6. ' ]' → logprob: -12.133957862854004
    7. '])]' → logprob: -12.758957862854004
    8. '       ' → logprob: -13.008957862854004
    9. '   ' → logprob: -13.008957862854004
    10. '}]' → logprob: -13.633957862854004

Token 77: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' street' (ID: 12901)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6585102081298828
    2. 'answers' → logprob: -2.033510208129883
    3. 'answer' → logprob: -2.533510208129883
    4. 'for' → logprob: -2.533510208129883
    5. ' for' → logprob: -3.158510208129883
    6. ' answers' → logprob: -3.408510208129883
    7. '       ' → logprob: -3.908510208129883
    8. ' #' → logprob: -4.158510208129883
    9. 'graph' → logprob: -4.783510208129883
    10. ' graph' → logprob: -5.033510208129883

Token 79: '_id' (ID: 1537)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6523543000221252
    2. '_map' → logprob: -1.0273542404174805
    3. '_s' → logprob: -3.6523542404174805
    4. '_' → logprob: -3.6523542404174805
    5. '_counts' → logprob: -4.4023542404174805
    6. '_maps' → logprob: -4.4023542404174805
    7. '_to' → logprob: -4.7773542404174805
    8. '_indices' → logprob: -5.1523542404174805
    9. '_set' → logprob: -5.2773542404174805
    10. '_pairs' → logprob: -5.5273542404174805

Token 80: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15144537389278412
    2. '_map' → logprob: -2.2764453887939453
    3. ' =' → logprob: -3.5264453887939453
    4. '=' → logprob: -4.901445388793945
    5. '_' → logprob: -7.276445388793945
    6. '_mapping' → logprob: -9.026445388793945
    7. '_s' → logprob: -9.526445388793945
    8. '_to' → logprob: -9.651445388793945
    9. '_maps' → logprob: -10.401445388793945
    10. '_dict' → logprob: -11.901445388793945

Token 81: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.014359058812260628
    2. ' {}' → logprob: -4.264358997344971
    3. 'dict' → logprob: -8.639359474182129
    4. '{' → logprob: -11.639359474182129
    5. ' dict' → logprob: -12.264359474182129
    6. '{}
' → logprob: -13.389359474182129
    7. ' ' → logprob: -13.389359474182129
    8. ' defaultdict' → logprob: -14.389359474182129
    9. '{"' → logprob: -15.389359474182129
    10. '{'' → logprob: -15.514359474182129

Token 82: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' ns' (ID: 18343)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.8262022733688354
    2. 'id' → logprob: -0.9512022733688354
    3. 'counter' → logprob: -3.201202392578125
    4. 'current' → logprob: -3.201202392578125
    5. ' idx' → logprob: -3.951202392578125
    6. 'count' → logprob: -4.076202392578125
    7. 'street' → logprob: -4.201202392578125
    8. 'cnt' → logprob: -4.576202392578125
    9. 'next' → logprob: -4.826202392578125
    10. 'for' → logprob: -5.451202392578125

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0445719957351685
    2. '_' → logprob: -1.6695719957351685
    3. '_id' → logprob: -1.7945719957351685
    4. '=' → logprob: -2.294571876525879
    5. '_ids' → logprob: -2.919571876525879
    6. '_st' → logprob: -3.544571876525879
    7. '_count' → logprob: -3.919571876525879
    8. 't' → logprob: -4.044571876525879
    9. '_name' → logprob: -4.169571876525879
    10. '_pairs' → logprob: -4.669571876525879

Token 85: ' set' (ID: 920)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.715564489364624
    2. '[]' → logprob: -1.465564489364624
    3. ' []' → logprob: -1.840564489364624
    4. ' ' → logprob: -2.590564489364624
    5. 'set' → logprob: -4.215564727783203
    6. '{}' → logprob: -4.340564727783203
    7. ' set' → logprob: -4.965564727783203
    8. '1' → logprob: -5.715564727783203
    9. ' {}' → logprob: -5.715564727783203
    10. 'len' → logprob: -6.090564727783203

Token 86: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006590616540051997
    2. '()
' → logprob: -7.625658988952637
    3. '(' → logprob: -9.250658988952637
    4. '()\' → logprob: -11.000658988952637
    5. '()

' → logprob: -11.500658988952637
    6. '(st' → logprob: -11.500658988952637
    7. '([' → logprob: -11.625658988952637
    8. '()]' → logprob: -12.125658988952637
    9. '(),' → logprob: -12.250658988952637
    10. '())' → logprob: -12.625658988952637

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5519713163375854
    2. '<|end|>' → logprob: -0.9269713163375854
    3. ' ' → logprob: -4.176971435546875
    4. '<|end|>' → logprob: -5.551971435546875
    5. '        ' → logprob: -5.926971435546875
    6. '        
' → logprob: -6.801971435546875
    7. '()' → logprob: -7.051971435546875
    8. ')' → logprob: -7.301971435546875
    9. ' =' → logprob: -7.426971435546875
    10. ',' → logprob: -7.551971435546875

Token 88: ' ew' (ID: 64459)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' (adapté à ' ew') → logprob: -0.47953012585639954
    2. 'for' → logprob: -1.7295300960540771
    3. ' for' → logprob: -2.229530096054077
    4. 'es' → logprob: -3.354530096054077
    5. '       ' → logprob: -3.354530096054077
    6. ' ew' → logprob: -4.479530334472656
    7. '   ' → logprob: -5.479530334472656
    8. 'we' → logprob: -6.229530334472656
    9. '    ' → logprob: -6.854530334472656
    10. ' es' → logprob: -6.979530334472656

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1603848785161972
    2. '=' → logprob: -1.9103848934173584
    3. 's' → logprob: -9.660385131835938
    4. '=set' → logprob: -10.160385131835938
    5. '<|end|>' → logprob: -10.410385131835938
    6. ' ' → logprob: -10.910385131835938
    7. '<|end|>' → logprob: -12.910385131835938
    8. ',' → logprob: -13.285385131835938
    9. '=[]' → logprob: -13.410385131835938
    10. ' s' → logprob: -14.410385131835938

Token 90: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.04865242913365364
    2. ' set' → logprob: -3.048652410507202
    3. '=set' → logprob: -10.173652648925781
    4. '(set' → logprob: -11.173652648925781
    5. '{}' → logprob: -12.173652648925781
    6. '	set' → logprob: -13.298652648925781
    7. ')set' → logprob: -13.298652648925781
    8. ' ' → logprob: -13.298652648925781
    9. '.set' → logprob: -14.548652648925781
    10. '<|end|>' → logprob: -14.673652648925781

Token 91: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007910476415418088
    2. '(' → logprob: -7.625791072845459
    3. '()
' → logprob: -8.2507905960083
    4. '()\' → logprob: -10.8757905960083
    5. '()

' → logprob: -11.8757905960083
    6. '()]' → logprob: -12.3757905960083
    7. ' ()' → logprob: -12.8757905960083
    8. '();' → logprob: -13.1257905960083
    9. '()<' → logprob: -14.0007905960083
    10. '()}' → logprob: -14.0007905960083

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16330121457576752
    2. '<|end|>' → logprob: -1.9133012294769287
    3. '<|end|>' → logprob: -6.78830099105835
    4. '
' → logprob: -7.28830099105835
    5. '   ' → logprob: -7.28830099105835
    6. '        
' → logprob: -8.413301467895508
    7. ' for' → logprob: -9.038301467895508
    8. ' ' → logprob: -9.288301467895508
    9. ')' → logprob: -10.413301467895508
    10. 'for' → logprob: -10.538301467895508

Token 93: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12824393808841705
    2. '       ' → logprob: -2.753243923187256
    3. ' for' → logprob: -2.878243923187256
    4. '   ' → logprob: -8.128244400024414
    5. '	for' → logprob: -10.378244400024414
    6. 'next' → logprob: -11.128244400024414
    7. '<|end|>' → logprob: -11.253244400024414
    8. '```' → logprob: -11.628244400024414
    9. 'token' → logprob: -12.003244400024414
    10. 'idx' → logprob: -12.128244400024414

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005941359326243401
    2. '=' → logprob: -5.130941390991211
    3. ' ' → logprob: -12.380941390991211
    4. '[' → logprob: -12.880941390991211
    5. '[]' → logprob: -13.505941390991211
    6. '<|end|>' → logprob: -13.505941390991211
    7. '=[]' → logprob: -13.630941390991211
    8. 's' → logprob: -14.255941390991211
    9. ')' → logprob: -15.130941390991211
    10. '.' → logprob: -15.880941390991211

Token 95: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.27143409848213196
    2. ' []' → logprob: -1.5214340686798096
    3. '{}' → logprob: -4.021434307098389
    4. ' {}' → logprob: -6.771434307098389
    5. ' defaultdict' → logprob: -9.27143383026123
    6. 'set' → logprob: -9.89643383026123
    7. 'default' → logprob: -10.02143383026123
    8. '[]}' → logprob: -11.27143383026123
    9. ' set' → logprob: -11.39643383026123
    10. '[' → logprob: -11.89643383026123

Token 96: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008252260275185108
    2. '(' → logprob: -4.883252143859863
    3. '()
' → logprob: -7.508252143859863
    4. '()\' → logprob: -9.633252143859863
    5. '()

' → logprob: -11.258252143859863
    6. '();' → logprob: -12.258252143859863
    7. '(),' → logprob: -12.883252143859863
    8. '(
' → logprob: -13.258252143859863
    9. '([]' → logprob: -13.258252143859863
    10. '()]' → logprob: -13.508252143859863

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6356772780418396
    2. '<|end|>' → logprob: -0.8856772780418396
    3. '   ' → logprob: -4.260677337646484
    4. '
' → logprob: -4.260677337646484
    5. ' ' → logprob: -4.510677337646484
    6. '        
' → logprob: -5.135677337646484
    7. '\n' → logprob: -6.010677337646484
    8. '\' → logprob: -6.385677337646484
    9. '<|end|>' → logprob: -6.385677337646484
    10. '    
' → logprob: -6.385677337646484

Token 98: ' cnt' (ID: 27340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5209688544273376
    2. '<|end|>' → logprob: -1.0209689140319824
    3. ' ' → logprob: -3.8959689140319824
    4. '   ' → logprob: -4.395968914031982
    5. ' for' → logprob: -5.895968914031982
    6. '        
' → logprob: -6.020968914031982
    7. '
' → logprob: -6.145968914031982
    8. '<|end|>' → logprob: -6.270968914031982
    9. '  ' → logprob: -7.020968914031982
    10. '  
' → logprob: -7.520968914031982

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20218504965305328
    2. '=' → logprob: -1.702185034751892
    3. ' ' → logprob: -7.327185153961182
    4. '   ' → logprob: -10.702184677124023
    5. '  ' → logprob: -10.952184677124023
    6. '_' → logprob: -11.077184677124023
    7. '_id' → logprob: -11.202184677124023
    8. ',' → logprob: -11.577184677124023
    9. 'inue' → logprob: -12.077184677124023
    10. '<|end|>' → logprob: -12.327184677124023

Token 100: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04318438842892647
    2. ' ' → logprob: -3.168184280395508
    3. '1' → logprob: -8.668184280395508
    4. '=' → logprob: -12.918184280395508
    5. '   ' → logprob: -12.918184280395508
    6. '  ' → logprob: -13.793184280395508
    7. ' =' → logprob: -13.855684280395508
    8. 'len' → logprob: -14.105684280395508
    9. '(' → logprob: -14.355684280395508
    10. '[' → logprob: -14.355684280395508

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006179584306664765
    2. ' ' → logprob: -7.750617980957031
    3. '1' → logprob: -8.625617980957031
    4. '[' → logprob: -12.750617980957031
    5. '{}' → logprob: -14.063117980957031
    6. 'len' → logprob: -14.250617980957031
    7. '=' → logprob: -14.313117980957031
    8. '{' → logprob: -14.563117980957031
    9. '   ' → logprob: -15.313117980957031
    10. '2' → logprob: -15.563117980957031

Token 102: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12769410014152527
    2. ' for' → logprob: -2.1276941299438477
    3. '       ' → logprob: -7.377694129943848
    4. '   ' → logprob: -9.127694129943848
    5. '<|end|>' → logprob: -10.627694129943848
    6. '	for' → logprob: -12.127694129943848
    7. '```' → logprob: -14.127694129943848
    8. '<|end|>' → logprob: -14.752694129943848
    9. 'For' → logprob: -15.252694129943848
    10. '
' → logprob: -15.252694129943848

Token 105: ' get' (ID: 717)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.33461254835128784
    2. ' find' → logprob: -1.4596126079559326
    3. 'dfs' → logprob: -4.2096123695373535
    4. ' add' → logprob: -4.5846123695373535
    5. ' is' → logprob: -4.8346123695373535
    6. ' get' → logprob: -5.0846123695373535
    7. ' build' → logprob: -5.9596123695373535
    8. ' union' → logprob: -6.2096123695373535
    9. ' bfs' → logprob: -6.2096123695373535
    10. ' check' → logprob: -6.4596123695373535

Token 106: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.12719707190990448
    2. '_st' → logprob: -2.127197027206421
    3. '_token' → logprob: -8.877197265625
    4. 'id' → logprob: -9.627197265625
    5. '_' → logprob: -10.627197265625
    6. '(st' → logprob: -11.002197265625
    7. '_node' → logprob: -11.627197265625
    8. '(' → logprob: -13.502197265625
    9. '_city' → logprob: -13.627197265625
    10. ' _' → logprob: -13.752197265625

Token 107: '(s' (ID: 1858)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.007349747233092785
    2. '(name' → logprob: -5.507349967956543
    3. '(' → logprob: -6.257349967956543
    4. '(s' → logprob: -6.757349967956543
    5. '(line' → logprob: -8.882349967956543
    6. '(key' → logprob: -11.007349967956543
    7. ' (' → logprob: -11.882349967956543
    8. '(x' → logprob: -12.132349967956543
    9. ' street' → logprob: -12.257349967956543
    10. '(address' → logprob: -12.757349967956543

Token 108: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07005713880062103
    2. '):
' → logprob: -2.6950571537017822
    3. ')' → logprob: -10.320056915283203
    4. '):
' → logprob: -10.570056915283203
    5. ' ):' → logprob: -10.820056915283203
    6. '):

' → logprob: -11.570056915283203
    7. '():' → logprob: -12.320056915283203
    8. ':' → logprob: -12.695056915283203
    9. '(s' → logprob: -12.820056915283203
    10. '(token' → logprob: -13.070056915283203

Token 109: '           ' (ID: 352)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.8115395307540894
    2. '(' → logprob: -1.0615395307540894
    3. ':' → logprob: -2.811539649963379
    4. '<|end|>' → logprob: -2.936539649963379
    5. '():
' → logprob: -3.436539649963379
    6. '       ' → logprob: -4.061539649963379
    7. '(
' → logprob: -4.311539649963379
    8. '()' → logprob: -4.811539649963379
    9. '   ' → logprob: -5.436539649963379
    10. ':
' → logprob: -5.561539649963379

Token 110: ' non' (ID: 2893)
  Prédit: ' non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.14763453602790833
    2. ' if' → logprob: -2.772634506225586
    3. 'if' → logprob: -3.022634506225586
    4. 'non' (adapté à ' non') → logprob: -3.772634506225586
    5. '       ' → logprob: -6.272634506225586
    6. '           ' → logprob: -7.022634506225586
    7. '   ' → logprob: -8.147634506225586
    8. '_non' → logprob: -12.272634506225586
    9. 'Non' → logprob: -12.397634506225586
    10. ' ' → logprob: -12.522634506225586

Token 111: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.0002925598528236151
    2. '       ' → logprob: -8.500292778015137
    3. 'def' → logprob: -10.125292778015137
    4. '   ' → logprob: -10.750292778015137
    5. ' local' → logprob: -10.875292778015137
    6. 'locals' → logprob: -12.250292778015137
    7. '        ' → logprob: -14.000292778015137
    8. '           ' → logprob: -14.375292778015137
    9. 'space' → logprob: -14.500292778015137
    10. '    ' → logprob: -14.625292778015137

Token 112: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.11291516572237015
    2. ' cnt' → logprob: -2.237915277481079
    3. 'street' → logprob: -9.7379150390625
    4. ' street' → logprob: -10.7379150390625
    5. '	cnt' → logprob: -11.9879150390625
    6. ' ' → logprob: -12.8629150390625
    7. '   ' → logprob: -13.7379150390625
    8. 'count' → logprob: -14.4879150390625
    9. 'stre' → logprob: -15.1129150390625
    10. '
' → logprob: -15.2379150390625

Token 113: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019733278080821037
    2. '           ' → logprob: -4.394733428955078
    3. '       ' → logprob: -6.019733428955078
    4. '<|end|>' → logprob: -6.019733428955078
    5. '<|end|>' → logprob: -6.894733428955078
    6. '
' → logprob: -8.269733428955078
    7. '  
' → logprob: -8.269733428955078
    8. ',' → logprob: -8.769733428955078
    9. '    
' → logprob: -8.894733428955078
    10. '   ' → logprob: -8.894733428955078

Token 114: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6273961663246155
    2. '
' → logprob: -1.6273961067199707
    3. '           ' → logprob: -2.2523961067199707
    4. '<|end|>' → logprob: -2.2523961067199707
    5. 'if' → logprob: -3.7523961067199707
    6. '       ' → logprob: -4.002396106719971
    7. '   ' → logprob: -4.752396106719971
    8. ' ' → logprob: -5.877396106719971
    9. '<|end|>' → logprob: -5.877396106719971
    10. ':' → logprob: -7.377396106719971

Token 115: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2746196985244751
    2. ' if' → logprob: -1.774619698524475
    3. '       ' → logprob: -3.1496195793151855
    4. '           ' → logprob: -3.6496195793151855
    5. '   ' → logprob: -6.3996195793151855
    6. '	if' → logprob: -10.524620056152344
    7. ' ' → logprob: -11.649620056152344
    8. 'If' → logprob: -12.399620056152344
    9. '    ' → logprob: -12.774620056152344
    10. ',' → logprob: -13.274620056152344

Token 116: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.11282453685998917
    2. 's' → logprob: -2.2378244400024414
    3. ' ' → logprob: -14.362824440002441
    4. '	s' → logprob: -14.362824440002441
    5. '(s' → logprob: -15.175324440002441
    6. ' not' → logprob: -15.925324440002441
    7. '   ' → logprob: -15.987824440002441
    8. ' ' → logprob: -16.487825393676758
    9. '_s' → logprob: -16.487825393676758
    10. '`s' → logprob: -16.737825393676758

Token 117: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01111419778317213
    2. 'not' → logprob: -4.511114120483398
    3. ' in' → logprob: -9.886114120483398
    4. ')' → logprob: -11.886114120483398
    5. 'in' → logprob: -11.886114120483398
    6. '	not' → logprob: -14.136114120483398
    7. ' ' → logprob: -15.011114120483398
    8. ']' → logprob: -15.886114120483398
    9. ':not' → logprob: -16.0111141204834
    10. 'n't' → logprob: -16.3861141204834

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04301117733120918
    2. 'in' → logprob: -3.16801118850708
    3. ' ' → logprob: -12.793010711669922
    4. ':' → logprob: -13.543010711669922
    5. ')' → logprob: -13.668010711669922
    6. '       ' → logprob: -13.918010711669922
    7. '   ' → logprob: -14.043010711669922
    8. '           ' → logprob: -14.668010711669922
    9. 'e' → logprob: -14.793010711669922
    10. 'to' → logprob: -15.043010711669922

Token 119: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.026338616386055946
    2. ' street' → logprob: -3.651338577270508
    3. 'stre' → logprob: -10.276338577270508
    4. '   ' → logprob: -13.151338577270508
    5. '.street' → logprob: -14.526338577270508
    6. '
' → logprob: -14.776338577270508
    7. '       ' → logprob: -15.151338577270508
    8. ' ' → logprob: -15.401338577270508
    9. 'stroke' → logprob: -15.526338577270508
    10. 'Street' → logprob: -16.776338577270508

Token 120: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -15.375000953674316
    3. ' _' → logprob: -15.625000953674316
    4. '_' → logprob: -15.625000953674316
    5. 'id' → logprob: -16.75
    6. '```' → logprob: -17.125
    7. '_to' → logprob: -17.25
    8. 's' → logprob: -18.125
    9. '       ' → logprob: -18.625
    10. ' ' → logprob: -18.75

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018636226654052734
    2. ':
' → logprob: -4.143636226654053
    3. '):' → logprob: -6.018636226654053
    4. '):
' → logprob: -9.393636703491211
    5. ' :' → logprob: -10.018636703491211
    6. ']:' → logprob: -10.643636703491211
    7. '}:' → logprob: -12.518636703491211
    8. '>:' → logprob: -13.393636703491211
    9. ':return' → logprob: -13.518636703491211
    10. ')' → logprob: -13.643636703491211

Token 122: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024109572172164917
    2. '           ' → logprob: -4.524109363555908
    3. ':
' → logprob: -4.774109363555908
    4. ':' → logprob: -6.524109363555908
    5. '<|end|>' → logprob: -6.899109363555908
    6. '):
' → logprob: -7.649109363555908
    7. ')' → logprob: -7.899109363555908
    8. '```' → logprob: -8.524109840393066
    9. ',' → logprob: -9.024109840393066
    10. '):' → logprob: -9.149109840393066

Token 123: ' street' (ID: 12901)
  Prédit: ' street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.16783905029296875
    2. 'street' (adapté à ' street') → logprob: -2.5428390502929688
    3. '               ' → logprob: -2.6678390502929688
    4. '           ' → logprob: -5.417839050292969
    5. '                   ' → logprob: -6.542839050292969
    6. '
' → logprob: -7.917839050292969
    7. '```' → logprob: -9.417839050292969
    8. '.street' → logprob: -10.167839050292969
    9. 'stre' → logprob: -10.917839050292969
    10. '   ' → logprob: -10.917839050292969

Token 124: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.7432603272027336e-06
    2. ' _' → logprob: -14.625001907348633
    3. '   ' → logprob: -15.250001907348633
    4. '           ' → logprob: -15.250001907348633
    5. '_' → logprob: -15.375001907348633
    6. '```' → logprob: -15.375001907348633
    7. 's' → logprob: -16.875001907348633
    8. 'id' → logprob: -16.875001907348633
    9. '_ids' → logprob: -17.500001907348633
    10. '[' → logprob: -17.500001907348633

Token 125: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00017588881019037217
    2. ']' → logprob: -8.750175476074219
    3. 's' → logprob: -12.500175476074219
    4. '=' → logprob: -12.750175476074219
    5. '[' → logprob: -12.875175476074219
    6. ' =' → logprob: -13.125175476074219
    7. ' [' → logprob: -13.500175476074219
    8. '
' → logprob: -13.750175476074219
    9. ']=' → logprob: -14.000175476074219
    10. '][' → logprob: -14.000175476074219

Token 126: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.492120155598968e-05
    2. ']=' → logprob: -10.000064849853516
    3. ' ]' → logprob: -10.875064849853516
    4. ')' → logprob: -14.750064849853516
    5. '=' → logprob: -15.875064849853516
    6. '   ' → logprob: -16.875064849853516
    7. '']' → logprob: -17.125064849853516
    8. ']
' → logprob: -18.000064849853516
    9. ')]' → logprob: -18.250064849853516
    10. '`]' → logprob: -18.250064849853516

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048054322600365
    2. ' =' → logprob: -4.511047840118408
    3. ']' → logprob: -15.761048316955566
    4. ']=' → logprob: -15.886048316955566
    5. ')=' → logprob: -17.76104736328125
    6. ')' → logprob: -18.38604736328125
    7. '＝' → logprob: -19.01104736328125
    8. '=
' → logprob: -19.51104736328125
    9. '=}' → logprob: -20.01104736328125
    10. '[' → logprob: -20.38604736328125

Token 128: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.011048170737922192
    2. ' cnt' → logprob: -4.511048316955566
    3. '	cnt' → logprob: -15.636048316955566
    4. '(cnt' → logprob: -15.886048316955566
    5. '[cnt' → logprob: -16.51104736328125
    6. '   ' → logprob: -17.76104736328125
    7. 'counter' → logprob: -17.88604736328125
    8. '
' → logprob: -17.88604736328125
    9. 'count' → logprob: -18.38604736328125
    10. 'ct' → logprob: -18.63604736328125

Token 129: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014782000333070755
    2. '
' → logprob: -4.264781951904297
    3. '           ' → logprob: -8.139781951904297
    4. '                   ' → logprob: -8.889781951904297
    5. '
' → logprob: -9.764781951904297
    6. ',' → logprob: -10.264781951904297
    7. 'cnt' → logprob: -11.014781951904297
    8. ',
' → logprob: -11.264781951904297
    9. '                
' → logprob: -11.389781951904297
    10. '       ' → logprob: -11.514781951904297

Token 130: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.8497312895488e-05
    2. '           ' → logprob: -9.750068664550781
    3. ',' → logprob: -12.125068664550781
    4. 'cnt' → logprob: -13.750068664550781
    5. '                   ' → logprob: -14.250068664550781
    6. '
' → logprob: -14.250068664550781
    7. '	           ' → logprob: -14.750068664550781
    8. '       ' → logprob: -14.750068664550781
    9. '   ' → logprob: -15.250068664550781
    10. '```' → logprob: -15.500068664550781

Token 131: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0004348413785919547
    2. ' cnt' → logprob: -8.000434875488281
    3. '               ' → logprob: -9.250434875488281
    4. '	cnt' → logprob: -12.875434875488281
    5. '           ' → logprob: -14.875434875488281
    6. '                   ' → logprob: -15.375434875488281
    7. '   ' → logprob: -15.500434875488281
    8. '(cnt' → logprob: -17.12543487548828
    9. '[cnt' → logprob: -17.87543487548828
    10. 'count' → logprob: -18.37543487548828

Token 132: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02329706959426403
    2. ' +=' → logprob: -3.773297071456909
    3. '+' → logprob: -9.898297309875488
    4. '=' → logprob: -13.898297309875488
    5. ']+=' → logprob: -15.648297309875488
    6. '   ' → logprob: -16.523296356201172
    7. '```' → logprob: -17.023296356201172
    8. '++' → logprob: -18.148296356201172
    9. '
' → logprob: -18.273296356201172
    10. ' +' → logprob: -18.398296356201172

Token 133: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.00007438659668
    4. '
' → logprob: -19.37507438659668
    5. '<|end|>' → logprob: -19.87507438659668
    6. '```' → logprob: -20.62507438659668
    7. '１' → logprob: -21.12507438659668
    8. '       ' → logprob: -21.62507438659668
    9. '  ' → logprob: -22.12507438659668
    10. '0' → logprob: -22.50007438659668

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -19.5
    4. '
' → logprob: -20.25
    5. '１' → logprob: -20.375
    6. '   ' → logprob: -20.5
    7. '<|end|>' → logprob: -21.75
    8. '۱' → logprob: -22.125
    9. '१' → logprob: -22.6875
    10. '১' → logprob: -22.75

Token 135: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018094684928655624
    2. 'return' → logprob: -4.643094539642334
    3. '
' → logprob: -5.018094539642334
    4. ' return' → logprob: -6.893094539642334
    5. '               ' → logprob: -7.893094539642334
    6. '       ' → logprob: -8.643095016479492
    7. '   ' → logprob: -10.518095016479492
    8. '		' → logprob: -10.518095016479492
    9. '	return' → logprob: -10.518095016479492
    10. '<|end|>' → logprob: -11.768095016479492

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007599296048283577
    2. 'return' → logprob: -5.007599353790283
    3. ' return' → logprob: -7.632599353790283
    4. '       ' → logprob: -8.132598876953125
    5. '   ' → logprob: -10.132598876953125
    6. '               ' → logprob: -10.632598876953125
    7. '<|end|>' → logprob: -11.007598876953125
    8. '
' → logprob: -12.257598876953125
    9. '	return' → logprob: -12.507598876953125
    10. ',' → logprob: -12.882598876953125

Token 137: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02841970883309841
    2. ' return' → logprob: -3.7784197330474854
    3. '           ' → logprob: -5.528419494628906
    4. '       ' → logprob: -6.903419494628906
    5. '   ' → logprob: -8.778419494628906
    6. '	return' → logprob: -10.903419494628906
    7. '
' → logprob: -12.028419494628906
    8. '               ' → logprob: -13.403419494628906
    9. ':return' → logprob: -13.653419494628906
    10. ' ' → logprob: -13.903419494628906

Token 138: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.0489560142159462
    2. ' street' → logprob: -3.0489559173583984
    3. 'stre' → logprob: -7.923955917358398
    4. 'st' → logprob: -12.298955917358398
    5. 'stroke' → logprob: -14.673955917358398
    6. 'str' → logprob: -15.048955917358398
    7. 'storm' → logprob: -15.423955917358398
    8. '   ' → logprob: -15.923955917358398
    9. ' ' → logprob: -16.0489559173584
    10. '```' → logprob: -16.4239559173584

Token 139: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -8.061054359131958e-06
    2. 'id' → logprob: -11.875007629394531
    3. 't' → logprob: -15.750007629394531
    4. '_' → logprob: -15.875007629394531
    5. '[' → logprob: -16.00000762939453
    6. '```' → logprob: -16.25000762939453
    7. 'street' → logprob: -16.25000762939453
    8. 'st' → logprob: -16.75000762939453
    9. 'd' → logprob: -16.75000762939453
    10. 'et' → logprob: -16.87500762939453

Token 140: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -3.292907877039397e-06
    2. 's' → logprob: -13.50000286102295
    3. '[' → logprob: -13.75000286102295
    4. ' [' → logprob: -15.00000286102295
    5. '```' → logprob: -15.25000286102295
    6. '`s' → logprob: -17.000003814697266
    7. '[
' → logprob: -17.500003814697266
    8. '[S' → logprob: -17.500003814697266
    9. '
' → logprob: -18.000003814697266
    10. ' s' → logprob: -18.125003814697266

Token 141: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022313790395855904
    2. ']' → logprob: -6.377231597900391
    3. '<|end|>' → logprob: -7.877231597900391
    4. '}' → logprob: -9.75223159790039
    5. ')return' → logprob: -10.00223159790039
    6. ' )' → logprob: -11.37723159790039
    7. ')
' → logprob: -11.50223159790039
    8. '<|end|>' → logprob: -11.62723159790039
    9. '）' → logprob: -12.87723159790039
    10. ')]' → logprob: -13.25223159790039

Token 142: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: ' cross' (ID: 8088)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005815856158733368
    2. '       ' → logprob: -5.5058159828186035
    3. ' for' → logprob: -6.3808159828186035
    4. '   ' → logprob: -10.380815505981445
    5. '	for' → logprob: -12.755815505981445
    6. 'For' → logprob: -12.880815505981445
    7. '
' → logprob: -13.255815505981445
    8. '        
' → logprob: -13.755815505981445
    9. '<|end|>' → logprob: -13.880815505981445
    10. '#' → logprob: -14.880815505981445

Token 144: ' =' (ID: 314)
  Prédit: 'ings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.0048349881544709206
    2. 'ing' → logprob: -6.50483512878418
    3. ' =' → logprob: -6.87983512878418
    4. 's' → logprob: -7.25483512878418
    5. '_' → logprob: -8.37983512878418
    6. '=' → logprob: -8.37983512878418
    7. '_id' → logprob: -8.50483512878418
    8. '_ids' → logprob: -8.75483512878418
    9. '_idx' → logprob: -9.25483512878418
    10. ' ' → logprob: -9.50483512878418

Token 145: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004599111154675484
    2. '[' → logprob: -5.504599094390869
    3. ' []' → logprob: -8.754599571228027
    4. '{}' → logprob: -8.879599571228027
    5. '[]
' → logprob: -9.004599571228027
    6. 'set' → logprob: -10.254599571228027
    7. '[]}' → logprob: -11.254599571228027
    8. '[len' → logprob: -11.254599571228027
    9. '[[' → logprob: -11.504599571228027
    10. '[][]' → logprob: -12.004599571228027

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04650386795401573
    2. '<|end|>' → logprob: -3.171503782272339
    3. ' for' → logprob: -5.921504020690918
    4. '   ' → logprob: -8.046504020690918
    5. 'for' → logprob: -8.171504020690918
    6. '<|end|>' → logprob: -8.796504020690918
    7. ')' → logprob: -11.046504020690918
    8. ',' → logprob: -11.921504020690918
    9. '	' → logprob: -12.046504020690918
    10. '
' → logprob: -12.296504020690918

Token 147: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006555025465786457
    2. ' for' → logprob: -5.256555080413818
    3. '       ' → logprob: -6.631555080413818
    4. '   ' → logprob: -13.50655460357666
    5. '	for' → logprob: -14.38155460357666
    6. '<|end|>' → logprob: -15.75655460357666
    7. ' ' → logprob: -17.006555557250977
    8. 'For' → logprob: -17.506555557250977
    9. '[' → logprob: -17.881555557250977
    10. '
' → logprob: -18.006555557250977

Token 148: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3278707265853882
    2. ' i' → logprob: -2.5778708457946777
    3. ' cross' → logprob: -2.7028708457946777
    4. ' line' → logprob: -3.2028708457946777
    5. ' _' → logprob: -3.2028708457946777
    6. ' crossing' → logprob: -3.8278708457946777
    7. 'c' → logprob: -4.952870845794678
    8. ' s' → logprob: -5.202870845794678
    9. 'cross' → logprob: -5.202870845794678
    10. ' street' → logprob: -5.327870845794678

Token 149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006349642761051655
    2. 'in' → logprob: -5.131349563598633
    3. 'ross' → logprob: -8.006349563598633
    4. '   ' → logprob: -10.381349563598633
    5. ' ' → logprob: -10.506349563598633
    6. 's' → logprob: -11.756349563598633
    7. '  ' → logprob: -12.131349563598633
    8. 'n' → logprob: -12.131349563598633
    9. 'i' → logprob: -13.256349563598633
    10. 'r' → logprob: -13.506349563598633

Token 150: ' crossings' (ID: 199340)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0001439459010725841
    2. 'range' → logprob: -9.000144004821777
    3. ' crossings' → logprob: -10.875144004821777
    4. ' cross' → logprob: -13.750144004821777
    5. ' range' → logprob: -14.875144004821777
    6. 'cro' → logprob: -17.00014305114746
    7. '.cross' → logprob: -17.37514305114746
    8. 'corn' → logprob: -17.50014305114746
    9. '   ' → logprob: -18.12514305114746
    10. '_cross' → logprob: -18.37514305114746

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008647724171169102
    2. ':
' → logprob: -7.1258649826049805
    3. '):' → logprob: -10.00086498260498
    4. ' :' → logprob: -11.62586498260498
    5. '():' → logprob: -13.25086498260498
    6. ']:' → logprob: -13.50086498260498
    7. ' in' → logprob: -13.87586498260498
    8. '):
' → logprob: -14.50086498260498
    9. '=' → logprob: -14.75086498260498
    10. ':**' → logprob: -15.37586498260498

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006361012347042561
    2. ',' → logprob: -5.25636100769043
    3. '            
' → logprob: -7.50636100769043
    4. 's' → logprob: -9.50636100769043
    5. ' s' → logprob: -9.63136100769043
    6. '
' → logprob: -9.63136100769043
    7. ':' → logprob: -10.00636100769043
    8. ':
' → logprob: -10.13136100769043
    9. '<|end|>' → logprob: -10.75636100769043
    10. '[' → logprob: -10.88136100769043

Token 153: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.8554485440254211
    2. ' a' → logprob: -0.9804485440254211
    3. ' parts' → logprob: -2.1054484844207764
    4. 's' → logprob: -3.7304484844207764
    5. '           ' → logprob: -4.4804487228393555
    6. ' s' → logprob: -4.4804487228393555
    7. 'ns' → logprob: -4.9804487228393555
    8. 'A' → logprob: -5.1054487228393555
    9. ' A' → logprob: -5.4804487228393555
    10. 'parts' → logprob: -5.4804487228393555

Token 154: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04670707508921623
    2. ',b' → logprob: -3.2967071533203125
    3. ' ,' → logprob: -5.1717071533203125
    4. ' =' → logprob: -6.5467071533203125
    5. '=' → logprob: -7.2967071533203125
    6. ',a' → logprob: -8.296707153320312
    7. '_tokens' → logprob: -9.296707153320312
    8. ',s' → logprob: -9.421707153320312
    9. ',_' → logprob: -9.421707153320312
    10. 'a' → logprob: -9.796707153320312

Token 155: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04512381553649902
    2. ' =' → logprob: -3.170123815536499
    3. ',' → logprob: -6.170124053955078
    4. ',c' → logprob: -11.045124053955078
    5. ',b' → logprob: -11.670124053955078
    6. ' ,' → logprob: -13.295124053955078
    7. ',a' → logprob: -13.420124053955078
    8. ' ' → logprob: -14.670124053955078
    9. 'a' → logprob: -14.795124053955078
    10. 'c' → logprob: -14.920124053955078

Token 156: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.28140464425086975
    2. 'c' → logprob: -1.4064046144485474
    3. ' map' → logprob: -8.781404495239258
    4. 'map' → logprob: -9.281404495239258
    5. ' list' → logprob: -13.281404495239258
    6. 'list' → logprob: -13.781404495239258
    7. '[' → logprob: -13.906404495239258
    8. '[c' → logprob: -14.031404495239258
    9. ' ' → logprob: -14.281404495239258
    10. ' [' → logprob: -14.406404495239258

Token 157: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.00726620526984334
    2. '.' → logprob: -5.007266044616699
    3. ' .' → logprob: -8.0072660446167
    4. 'split' → logprob: -8.7572660446167
    5. ' split' → logprob: -10.0072660446167
    6. '().' → logprob: -12.1322660446167
    7. ' =' → logprob: -12.7572660446167
    8. '.strip' → logprob: -13.0072660446167
    9. '.Split' → logprob: -13.7572660446167
    10. ' ' → logprob: -14.0072660446167

Token 158: '('-' (ID: 33343)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012228474952280521
    2. '(',' → logprob: -7.501222610473633
    3. '(' → logprob: -7.876222610473633
    4. '('' → logprob: -8.376222610473633
    5. '(),' → logprob: -11.126222610473633
    6. '('-' → logprob: -11.501222610473633
    7. '()-' → logprob: -11.876222610473633
    8. '(','' → logprob: -11.876222610473633
    9. '(",' → logprob: -12.126222610473633
    10. '()
' → logprob: -12.376222610473633

Token 159: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.007251053117215633
    2. ')' → logprob: -5.007251262664795
    3. '',' → logprob: -9.507250785827637
    4. ',' → logprob: -9.507250785827637
    5. '")' → logprob: -9.507250785827637
    6. '')
' → logprob: -9.507250785827637
    7. '1' → logprob: -9.757250785827637
    8. '')}}' → logprob: -9.882250785827637
    9. '')]' → logprob: -10.132250785827637
    10. '>' → logprob: -11.007250785827637

Token 160: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08068191260099411
    2. '
' → logprob: -2.705681800842285
    3. '<|end|>' → logprob: -5.705681800842285
    4. ' 
' → logprob: -5.830681800842285
    5. '            
' → logprob: -6.455681800842285
    6. ',' → logprob: -6.455681800842285
    7. ')' → logprob: -8.705681800842285
    8. '  
' → logprob: -8.830681800842285
    9. '    
' → logprob: -9.080681800842285
    10. '<|end|>' → logprob: -9.205681800842285

Token 161: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12749116122722626
    2. 'u' → logprob: -3.1274912357330322
    3. 'id' → logprob: -3.6274912357330322
    4. 'ai' → logprob: -4.377490997314453
    5. 'cross' → logprob: -4.752490997314453
    6. 'A' (adapté à ' A') → logprob: -5.627490997314453
    7. 'na' → logprob: -5.877490997314453
    8. 'ida' → logprob: -5.877490997314453
    9. 'ns' → logprob: -5.877490997314453
    10. 'aid' → logprob: -6.252490997314453

Token 162: ' =' (ID: 314)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.2490159422159195
    2. ' =' → logprob: -1.7490159273147583
    3. '_' → logprob: -3.249016046524048
    4. '=' → logprob: -4.999015808105469
    5. '_ids' → logprob: -7.499015808105469
    6. '_idx' → logprob: -8.999015808105469
    7. 'id' → logprob: -9.499015808105469
    8. '_=' → logprob: -9.499015808105469
    9. '_i' → logprob: -10.624015808105469
    10. 'a' → logprob: -10.999015808105469

Token 163: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.001170225441455841
    2. ' get' → logprob: -6.7511701583862305
    3. '(get' → logprob: -21.001171112060547
    4. '	get' → logprob: -22.001171112060547
    5. ')get' → logprob: -22.126171112060547
    6. '[get' → logprob: -22.626171112060547
    7. '=get' → logprob: -22.876171112060547
    8. '.get' → logprob: -22.876171112060547
    9. '
' → logprob: -24.376171112060547
    10. '_get' → logprob: -24.376171112060547

Token 164: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0004155377100687474
    2. 'a' → logprob: -7.875415325164795
    3. 'id' → logprob: -10.750415802001953
    4. '(a' → logprob: -11.750415802001953
    5. '_a' → logprob: -12.500415802001953
    6. 'A' → logprob: -13.750415802001953
    7. 's' → logprob: -15.250415802001953
    8. '```' → logprob: -15.625415802001953
    9. '_' → logprob: -15.750415802001953
    10. '[a' → logprob: -16.375415802001953

Token 165: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -17.25
    3. 'a' → logprob: -17.375
    4. '(A' → logprob: -18.625
    5. ' (' → logprob: -18.875
    6. '(b' → logprob: -20.25
    7. '(ab' → logprob: -20.375
    8. '((' → logprob: -20.5
    9. '(
' → logprob: -20.625
    10. '(ai' → logprob: -21.5

Token 166: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07892338931560516
    2. ')' → logprob: -2.578923463821411
    3. ')
' → logprob: -10.953923225402832
    4. ')

' → logprob: -11.703923225402832
    5. ' )
' → logprob: -12.328923225402832
    6. '())
' → logprob: -13.578923225402832
    7. ')a' → logprob: -14.578923225402832
    8. ' )' → logprob: -15.328923225402832
    9. '   ' → logprob: -15.453923225402832
    10. '),' → logprob: -15.703923225402832

Token 167: '           ' (ID: 352)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5736890435218811
    2. '           ' → logprob: -1.5736889839172363
    3. ',' → logprob: -2.1986889839172363
    4. 'B' → logprob: -2.5736889839172363
    5. ',
' → logprob: -4.323688983917236
    6. '   ' → logprob: -4.823688983917236
    7. ',B' → logprob: -5.573688983917236
    8. ' ,' → logprob: -6.073688983917236
    9. ' 
' → logprob: -6.073688983917236
    10. '       ' → logprob: -6.198688983917236

Token 168: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -7.64839569455944e-05
    2. ' B' → logprob: -9.500076293945312
    3. '   ' → logprob: -14.000076293945312
    4. '       ' → logprob: -14.750076293945312
    5. '           ' → logprob: -15.250076293945312
    6. 'b' → logprob: -17.375076293945312
    7. '  ' → logprob: -17.875076293945312
    8. '    ' → logprob: -18.000076293945312
    9. ' ' → logprob: -18.000076293945312
    10. '	B' → logprob: -18.000076293945312

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326553225517273
    2. '=' → logprob: -1.3132655620574951
    3. ')' → logprob: -12.563265800476074
    4. '=get' → logprob: -16.063264846801758
    5. ' ' → logprob: -16.313264846801758
    6. ' =
' → logprob: -17.438264846801758
    7. '[' → logprob: -17.563264846801758
    8. ',' → logprob: -17.688264846801758
    9. ' =)' → logprob: -17.688264846801758
    10. '<|end|>' → logprob: -17.813264846801758

Token 170: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.00033546582562848926
    2. ' get' → logprob: -8.000335693359375
    3. '(get' → logprob: -20.000335693359375
    4. '=get' → logprob: -20.250335693359375
    5. '[get' → logprob: -20.625335693359375
    6. '	get' → logprob: -20.875335693359375
    7. '.get' → logprob: -21.125335693359375
    8. ')get' → logprob: -22.000335693359375
    9. ' ' → logprob: -22.125335693359375
    10. '
' → logprob: -22.500335693359375

Token 171: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -8.554343366995454e-05
    2. 'id' → logprob: -9.375085830688477
    3. 'Id' → logprob: -16.375085830688477
    4. 'get' → logprob: -16.625085830688477
    5. '   ' → logprob: -16.750085830688477
    6. 'a' → logprob: -16.875085830688477
    7. '```' → logprob: -17.125085830688477
    8. ' id' → logprob: -17.250085830688477
    9. '_' → logprob: -17.687585830688477
    10. 't' → logprob: -17.937585830688477

Token 172: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.531315314830863e-06
    2. 'b' → logprob: -12.625003814697266
    3. ' (' → logprob: -16.375003814697266
    4. '(' → logprob: -17.500003814697266
    5. '(B' → logprob: -18.000003814697266
    6. ' b' → logprob: -19.375003814697266
    7. '(s' → logprob: -19.625003814697266
    8. '(
' → logprob: -19.625003814697266
    9. '(a' → logprob: -19.625003814697266
    10. '	b' → logprob: -19.750003814697266

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06197395175695419
    2. ')
' → logprob: -2.811974048614502
    3. ')
' → logprob: -13.061973571777344
    4. '           ' → logprob: -13.436973571777344
    5. ')

' → logprob: -13.436973571777344
    6. '),' → logprob: -15.436973571777344
    7. '<|end|>' → logprob: -15.686973571777344
    8. '       ' → logprob: -15.936973571777344
    9. ' )' → logprob: -16.061973571777344
    10. ')#' → logprob: -16.811973571777344

Token 174: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001147006405517459
    2. '
' → logprob: -7.2511467933654785
    3. ' edges' → logprob: -9.126147270202637
    4. 'edges' → logprob: -9.251147270202637
    5. '<|end|>' → logprob: -9.501147270202637
    6. ',' → logprob: -10.001147270202637
    7. ' cross' → logprob: -10.501147270202637
    8. '            
' → logprob: -10.751147270202637
    9. ')' → logprob: -11.251147270202637
    10. 'cross' → logprob: -11.376147270202637

Token 175: ' cross' (ID: 8088)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.07101097702980042
    2. 'cross' (adapté à ' cross') → logprob: -2.9460110664367676
    3. ' edges' → logprob: -4.696011066436768
    4. '       ' → logprob: -5.946011066436768
    5. 'if' → logprob: -6.071011066436768
    6. '   ' → logprob: -6.821011066436768
    7. ' cross' → logprob: -8.32101058959961
    8. '           ' → logprob: -8.82101058959961
    9. 'edge' → logprob: -9.19601058959961
    10. ' if' → logprob: -9.82101058959961

Token 176: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00010759611177491024
    2. '.' → logprob: -10.125107765197754
    3. '.app' → logprob: -10.500107765197754
    4. 'append' → logprob: -11.125107765197754
    5. '.add' → logprob: -11.500107765197754
    6. 's' → logprob: -11.750107765197754
    7. '.ap' → logprob: -12.375107765197754
    8. '.extend' → logprob: -13.875107765197754
    9. 'ings' → logprob: -14.750107765197754
    10. 'points' → logprob: -14.875107765197754

Token 177: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0005701907211914659
    2. '(' → logprob: -7.500570297241211
    3. '(A' → logprob: -11.000570297241211
    4. '(a' → logprob: -14.875570297241211
    5. '([' → logprob: -16.12557029724121
    6. '(tuple' → logprob: -17.75057029724121
    7. '({' → logprob: -18.12557029724121
    8. '(
' → logprob: -18.25057029724121
    9. '(sorted' → logprob: -19.25057029724121
    10. '(B' → logprob: -20.25057029724121

Token 178: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.464347173576243e-05
    2. ' A' → logprob: -10.37503433227539
    3. '(A' → logprob: -13.37503433227539
    4. '   ' → logprob: -14.62503433227539
    5. 'a' → logprob: -15.25003433227539
    6. ')' → logprob: -15.25003433227539
    7. ' ' → logprob: -15.37503433227539
    8. ',' → logprob: -15.37503433227539
    9. ''A' → logprob: -16.37503433227539
    10. ' (' → logprob: -16.50003433227539

Token 179: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011033779446734115
    2. ',B' → logprob: -9.250110626220703
    3. ' ,' → logprob: -11.500110626220703
    4. ',
' → logprob: -12.500110626220703
    5. ',

' → logprob: -15.875110626220703
    6. ',)' → logprob: -17.000110626220703
    7. ',A' → logprob: -17.000110626220703
    8. ',b' → logprob: -17.250110626220703
    9. ')' → logprob: -18.125110626220703
    10. ',F' → logprob: -18.625110626220703

Token 180: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008914959616959095
    2. ')' → logprob: -4.758914947509766
    3. ',' → logprob: -8.508914947509766
    4. '))
' → logprob: -9.383914947509766
    5. ' ))' → logprob: -11.883914947509766
    6. '),' → logprob: -13.008914947509766
    7. ')))' → logprob: -13.508914947509766
    8. ',
' → logprob: -13.508914947509766
    9. ')
' → logprob: -13.633914947509766
    10. '));' → logprob: -15.383914947509766

Token 181: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5352339744567871
    2. '<|end|>' → logprob: -1.285233974456787
    3. '
' → logprob: -2.035233974456787
    4. '<|end|>' → logprob: -5.785233974456787
    5. ')' → logprob: -6.785233974456787
    6. ' edges' → logprob: -7.035233974456787
    7. ',' → logprob: -7.410233974456787
    8. '       ' → logprob: -8.160234451293945
    9. '            
' → logprob: -8.285234451293945
    10. ',
' → logprob: -8.535234451293945

Token 182: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.6350315809249878
    2. 'ns' → logprob: -1.0100315809249878
    3. ' edges' → logprob: -3.0100317001342773
    4. '   ' → logprob: -4.260031700134277
    5. '       ' → logprob: -4.260031700134277
    6. ' ns' → logprob: -4.385031700134277
    7. 'ew' → logprob: -5.260031700134277
    8. 'if' → logprob: -5.385031700134277
    9. '           ' → logprob: -5.510031700134277
    10. ' if' → logprob: -7.510031700134277

Token 183: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.008737008087337017
    2. '.' → logprob: -4.758737087249756
    3. '.update' → logprob: -9.133736610412598
    4. ').' → logprob: -12.258736610412598
    5. ' .' → logprob: -13.008736610412598
    6. 'add' → logprob: -13.383736610412598
    7. '.setdefault' → logprob: -13.508736610412598
    8. '.union' → logprob: -13.508736610412598
    9. '.append' → logprob: -13.758736610412598
    10. '.Add' → logprob: -14.258736610412598

Token 184: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.302704761968926e-05
    2. '(' → logprob: -9.625073432922363
    3. '(A' → logprob: -12.000073432922363
    4. '(a' → logprob: -14.625073432922363
    5. '(tuple' → logprob: -15.875073432922363
    6. '(((' → logprob: -16.875072479248047
    7. '(f' → logprob: -17.375072479248047
    8. '(c' → logprob: -17.500072479248047
    9. ' ((' → logprob: -17.750072479248047
    10. '(B' → logprob: -18.250072479248047

Token 185: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.001517834491096437
    2. 'min' → logprob: -6.6265177726745605
    3. 'B' → logprob: -9.001518249511719
    4. ' A' → logprob: -10.251518249511719
    5. '(A' → logprob: -11.501518249511719
    6. ' min' → logprob: -11.876518249511719
    7. '(min' → logprob: -12.001518249511719
    8. 'a' → logprob: -12.501518249511719
    9. ')' → logprob: -12.751518249511719
    10. '   ' → logprob: -13.626518249511719

Token 186: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.4746103882789612
    2. ',' → logprob: -0.9746103882789612
    3. ' ,' → logprob: -7.724610328674316
    4. ',b' → logprob: -9.474610328674316
    5. ',
' → logprob: -12.224610328674316
    6. 'B' → logprob: -12.599610328674316
    7. ',A' → logprob: -13.099610328674316
    8. ',F' → logprob: -14.724610328674316
    9. ',N' → logprob: -14.974610328674316
    10. ',I' → logprob: -15.474610328674316

Token 187: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08625064045190811
    2. ')' → logprob: -2.5862505435943604
    3. '))
' → logprob: -4.9612507820129395
    4. ')
' → logprob: -8.836250305175781
    5. ' ))' → logprob: -9.086250305175781
    6. '           ' → logprob: -10.336250305175781
    7. '       ' → logprob: -11.836250305175781
    8. ' )' → logprob: -11.836250305175781
    9. '<|end|>' → logprob: -12.461250305175781
    10. ')))' → logprob: -12.586250305175781

Token 188: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18484404683113098
    2. ' for' → logprob: -2.8098440170288086
    3. '           ' → logprob: -3.6848440170288086
    4. ' edges' → logprob: -3.9348440170288086
    5. 'for' → logprob: -4.059844017028809
    6. '<|end|>' → logprob: -4.309844017028809
    7. 'edges' → logprob: -4.434844017028809
    8. ')' → logprob: -5.184844017028809
    9. '
' → logprob: -5.434844017028809
    10. '        
' → logprob: -5.809844017028809

Token 190: ' Determine' (ID: 57076)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7957515716552734
    2. 'adj' → logprob: -1.0457515716552734
    3. 'from' → logprob: -2.7957515716552734
    4. ' graph' → logprob: -3.0457515716552734
    5. 'for' → logprob: -4.170751571655273
    6. ' adj' → logprob: -4.295751571655273
    7. '       ' → logprob: -4.420751571655273
    8. 'import' → logprob: -4.795751571655273
    9. '#' → logprob: -5.045751571655273
    10. 'g' → logprob: -5.170751571655273

Token 191: ' orth' (ID: 35656)
  Prédit: ' ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ns' → logprob: -0.9749260544776917
    2. 'ns' → logprob: -1.5999259948730469
    3. ' north' → logprob: -3.224925994873047
    4. 'north' → logprob: -3.224925994873047
    5. ' if' → logprob: -3.349925994873047
    6. ' which' → logprob: -3.349925994873047
    7. ' the' → logprob: -3.349925994873047
    8. ' for' → logprob: -3.474925994873047
    9. ' directions' → logprob: -3.474925994873047
    10. ' direction' → logprob: -3.724925994873047

Token 192: 'ogon' (ID: 164816)
  Prédit: 'ogonal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -0.20303916931152344
    2. 'ogon' → logprob: -1.7030391693115234
    3. 'og' → logprob: -6.953039169311523
    4. 'ogan' → logprob: -8.953039169311523
    5. 'ogona' → logprob: -9.390539169311523
    6. 'ogo' → logprob: -9.515539169311523
    7. '```' → logprob: -10.015539169311523
    8. 'agonal' → logprob: -10.328039169311523
    9. 'ogal' → logprob: -10.390539169311523
    10. '   ' → logprob: -10.453039169311523

Token 193: 'ality' (ID: 9443)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.04487527906894684
    2. 'ality' → logprob: -4.294875144958496
    3. 'ral' → logprob: -4.294875144958496
    4. 'r' → logprob: -4.544875144958496
    5. 'als' → logprob: -6.544875144958496
    6. 'onal' → logprob: -6.544875144958496
    7. '```' → logprob: -7.169875144958496
    8. 'nal' → logprob: -7.419875144958496
    9. 'ally' → logprob: -7.544875144958496
    10. 'tal' → logprob: -8.732375144958496

Token 194: ' sets' (ID: 11982)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5141022205352783
    2. '
' → logprob: -1.1391022205352783
    3. '<|end|>' → logprob: -3.2641022205352783
    4. '        
' → logprob: -3.3891022205352783
    5. ' for' → logprob: -5.389101982116699
    6. '<|end|>' → logprob: -6.764101982116699
    7. ',' → logprob: -7.014101982116699
    8. ':' → logprob: -7.264101982116699
    9. ',
' → logprob: -7.639101982116699
    10. 'for' → logprob: -8.0141019821167

Token 195: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0180930458009243
    2. '<|end|>' → logprob: -5.268093109130859
    3. ' for' → logprob: -5.393093109130859
    4. '
' → logprob: -5.518093109130859
    5. '        
' → logprob: -5.893093109130859
    6. 'for' → logprob: -7.393093109130859
    7. ',' → logprob: -8.64309310913086
    8. '(ns' → logprob: -9.39309310913086
    9. '<|end|>' → logprob: -9.89309310913086
    10. 'ns' → logprob: -9.89309310913086

Token 196: 'no' (ID: 1750)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6981172561645508
    2. 'for' → logprob: -1.3231172561645508
    3. 'ns' → logprob: -2.198117256164551
    4. ')' → logprob: -2.448117256164551
    5. ')
' → logprob: -4.198117256164551
    6. ' ns' → logprob: -4.573117256164551
    7. 'if' → logprob: -5.823117256164551
    8. ' if' → logprob: -6.073117256164551
    9. '       ' → logprob: -6.198117256164551
    10. '#' → logprob: -6.823117256164551

Token 197: ' direct' (ID: 2823)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9620822072029114
    2. ')' → logprob: -1.5870821475982666
    3. 'intersection' → logprob: -2.5870821475982666
    4. ' common' → logprob: -3.2120821475982666
    5. ' intersection' → logprob: -3.2120821475982666
    6. ' intersections' → logprob: -3.2120821475982666
    7. 'w' → logprob: -3.3370821475982666
    8. 'ns' → logprob: -3.7120821475982666
    9. 'common' → logprob: -3.9620821475982666
    10. 'shared' → logprob: -3.9620821475982666

Token 198: ' info' (ID: 5377)
  Prédit: ' connection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connection' → logprob: -1.3710284233093262
    2. ' overlap' → logprob: -1.7460284233093262
    3. 'connection' → logprob: -2.246028423309326
    4. 'intersection' → logprob: -2.246028423309326
    5. 'connections' → logprob: -3.121028423309326
    6. ' intersection' → logprob: -3.371028423309326
    7. 'ns' → logprob: -3.496028423309326
    8. 'conf' → logprob: -3.496028423309326
    9. ' connections' → logprob: -3.621028423309326
    10. 'adj' → logprob: -3.746028423309326

Token 199: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5812664031982422
    2. ',' → logprob: -1.4562664031982422
    3. ' yet' → logprob: -2.581266403198242
    4. ' about' → logprob: -3.081266403198242
    5. ' on' → logprob: -3.956266403198242
    6. ' )' → logprob: -4.206266403198242
    7. ' here' → logprob: -4.831266403198242
    8. 'yet' → logprob: -5.081266403198242
    9. ' provided' → logprob: -5.081266403198242
    10. ' given' → logprob: -5.206266403198242

Token 200: ' but' (ID: 889)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.561935305595398
    2. ' but' → logprob: -1.061935305595398
    3. 'but' → logprob: -3.8119354248046875
    4. 'so' → logprob: -3.8119354248046875
    5. '#' → logprob: -4.0619354248046875
    6. ' assuming' → logprob: -5.0619354248046875
    7. ' assume' → logprob: -5.8119354248046875
    8. ' continue' → logprob: -5.9369354248046875
    9. ')' → logprob: -5.9369354248046875
    10. '       ' → logprob: -6.0619354248046875

Token 201: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5865604877471924
    2. '#' → logprob: -1.9615604877471924
    3. 'for' → logprob: -2.2115604877471924
    4. ' based' → logprob: -2.7115604877471924
    5. ')' → logprob: -3.0865604877471924
    6. '       ' → logprob: -3.9615604877471924
    7. ' assuming' → logprob: -4.336560249328613
    8. 'based' → logprob: -5.086560249328613
    9. 'assuming' → logprob: -5.586560249328613
    10. ' the' → logprob: -5.711560249328613

Token 202: ' street' (ID: 12901)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ss' → logprob: -1.2643916606903076
    2. 's' → logprob: -1.8893916606903076
    3. 'pp' → logprob: -2.2643916606903076
    4. '#' → logprob: -2.2643916606903076
    5. ' for' → logprob: -2.7643916606903076
    6. 'dd' → logprob: -3.3893916606903076
    7. 't' → logprob: -3.5143916606903076
    8. 'll' → logprob: -3.7643916606903076
    9. 'ns' → logprob: -3.7643916606903076
    10. '       ' → logprob: -4.014391899108887

Token 203: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5989749431610107
    2. 's' → logprob: -2.4739749431610107
    3. ')' → logprob: -2.5989749431610107
    4. ' is' → logprob: -2.7239749431610107
    5. ' from' → logprob: -3.3489749431610107
    6. ' belongs' → logprob: -3.4739749431610107
    7. 'A' → logprob: -4.22397518157959
    8. ' not' → logprob: -4.47397518157959
    9. ' that' → logprob: -4.47397518157959
    10. 'in' → logprob: -4.47397518157959

Token 204: ' NS' (ID: 6950)
  Prédit: 'either'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'either' → logprob: -0.9217934608459473
    2. ' either' → logprob: -1.0467934608459473
    3. 'ns' → logprob: -3.5467934608459473
    4. 'orth' → logprob: -3.9217934608459473
    5. 'likely' → logprob: -4.171793460845947
    6. 'in' → logprob: -4.171793460845947
    7. 'usually' → logprob: -4.546793460845947
    8. ' in' → logprob: -4.546793460845947
    9. 'north' → logprob: -4.671793460845947
    10. 'ass' → logprob: -4.671793460845947

Token 205: ' if' (ID: 538)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.26258915662765503
    2. ')' → logprob: -2.3875892162323
    3. ' if' → logprob: -2.5125892162323
    4. 'or' → logprob: -3.8875892162323
    5. ' and' → logprob: -4.012588977813721
    6. 'if' → logprob: -5.012588977813721
    7. ' )' → logprob: -5.512588977813721
    8. ',' → logprob: -5.887588977813721
    9. 'and' → logprob: -6.262588977813721
    10. ' for' → logprob: -7.512588977813721

Token 206: ' appears' (ID: 14518)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4863224923610687
    2. ''-' → logprob: -1.6113225221633911
    3. ' a' → logprob: -1.8613225221633911
    4. ' '-'' → logprob: -4.486322402954102
    5. ''a' → logprob: -5.861322402954102
    6. 'b' → logprob: -6.361322402954102
    7. ' not' → logprob: -6.486322402954102
    8. ' b' → logprob: -6.611322402954102
    9. ''' → logprob: -6.736322402954102
    10. 'A' → logprob: -6.861322402954102

Token 207: ' first' (ID: 1577)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5778186321258545
    2. ' in' → logprob: -0.8278186321258545
    3. ' on' → logprob: -8.327818870544434
    4. 'first' → logprob: -8.577818870544434
    5. ' first' → logprob: -8.702818870544434
    6. ' as' → logprob: -8.827818870544434
    7. '<|end|>' → logprob: -8.827818870544434
    8. ' ' → logprob: -8.827818870544434
    9. 'more' → logprob: -8.952818870544434
    10. ' more' → logprob: -9.202818870544434

Token 208: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.756603479385376
    2. ' else' → logprob: -1.756603479385376
    3. ')' → logprob: -2.131603479385376
    4. ' or' → logprob: -2.381603479385376
    5. 'in' → logprob: -2.756603479385376
    6. ',' → logprob: -3.631603479385376
    7. ' and' → logprob: -4.006603240966797
    8. 'else' → logprob: -4.256603240966797
    9. 'and' → logprob: -5.006603240966797
    10. '<|end|>' → logprob: -5.506603240966797

Token 209: ' crossing' (ID: 50946)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.3194729685783386
    2. 'a' → logprob: -1.4444730281829834
    3. ' cross' → logprob: -3.6944730281829834
    4. ' a' → logprob: -4.944472789764404
    5. '(a' → logprob: -6.569472789764404
    6. 'the' → logprob: -6.819472789764404
    7. 'ns' → logprob: -6.944472789764404
    8. 'A' → logprob: -7.694472789764404
    9. ' the' → logprob: -7.819472789764404
    10. 'c' → logprob: -8.694473266601562

Token 210: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8142668008804321
    2. ',' → logprob: -1.1892668008804321
    3. ' and' → logprob: -2.1892666816711426
    4. ' or' → logprob: -2.1892666816711426
    5. '),' → logprob: -4.939266681671143
    6. ' in' → logprob: -5.314266681671143
    7. ' ,' → logprob: -5.439266681671143
    8. 'and' → logprob: -6.189266681671143
    9. ';' → logprob: -6.564266681671143
    10. ' )' → logprob: -6.689266681671143

Token 211: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.551604151725769
    2. '<|end|>' → logprob: -1.051604151725769
    3. '       ' → logprob: -3.0516042709350586
    4. '        
' → logprob: -4.176604270935059
    5. '<|end|>' → logprob: -5.676604270935059
    6. ',' → logprob: -6.301604270935059
    7. ' for' → logprob: -6.426604270935059
    8. '  
' → logprob: -7.051604270935059
    9. '```' → logprob: -7.301604270935059
    10. '\n' → logprob: -7.426604270935059

Token 212: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49939876794815063
    2. ' for' → logprob: -0.9993987679481506
    3. '<|end|>' → logprob: -4.624398708343506
    4. 'for' → logprob: -4.874398708343506
    5. ' ns' → logprob: -6.499398708343506
    6. '
' → logprob: -6.749398708343506
    7. ' if' → logprob: -6.874398708343506
    8. 'ns' → logprob: -6.999398708343506
    9. '        
' → logprob: -7.499398708343506
    10. '(ns' → logprob: -7.749398708343506

Token 213: ' He' (ID: 1679)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5302354097366333
    2. 'for' → logprob: -1.2802354097366333
    3. '       ' → logprob: -2.1552352905273438
    4. 'ns' → logprob: -5.155235290527344
    5. ' ns' → logprob: -5.280235290527344
    6. '#' → logprob: -5.780235290527344
    7. '        
' → logprob: -6.905235290527344
    8. '
' → logprob: -7.405235290527344
    9. 'For' → logprob: -7.905235290527344
    10. 'n' → logprob: -8.155235290527344

Token 214: 'uristic' (ID: 92961)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.5692662596702576
    2. 're' → logprob: -0.9442662596702576
    3. 'uristic' → logprob: -4.194266319274902
    4. '       ' → logprob: -4.319266319274902
    5. 'ns' → logprob: -5.194266319274902
    6. 'l' → logprob: -6.194266319274902
    7. 'aders' → logprob: -6.694266319274902
    8. 'uris' → logprob: -6.819266319274902
    9. 'ader' → logprob: -6.944266319274902
    10. 'def' → logprob: -7.069266319274902

Token 215: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28373801708221436
    2. '<|end|>' → logprob: -1.9087380170822144
    3. '
' → logprob: -3.283738136291504
    4. '        
' → logprob: -3.658738136291504
    5. ' for' → logprob: -3.783738136291504
    6. '<|end|>' → logprob: -5.658738136291504
    7. '        ' → logprob: -6.033738136291504
    8. ':' → logprob: -6.533738136291504
    9. ',' → logprob: -7.283738136291504
    10. ' if' → logprob: -7.408738136291504

Token 216: ' Streets' (ID: 121078)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1443537175655365
    2. 'for' → logprob: -2.5193536281585693
    3. ' ns' → logprob: -3.0193536281585693
    4. 'ns' → logprob: -6.144353866577148
    5. '       ' → logprob: -7.144353866577148
    6. '#' → logprob: -7.894353866577148
    7. '           ' → logprob: -8.019353866577148
    8. ' if' → logprob: -8.019353866577148
    9. ' #' → logprob: -8.644353866577148
    10. '
' → logprob: -8.644353866577148

Token 217: ' appear' (ID: 7680)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.4595314562320709
    2. ' in' → logprob: -2.084531545639038
    3. 'that' → logprob: -2.709531545639038
    4. ' =' → logprob: -2.959531545639038
    5. ' appearing' → logprob: -3.334531545639038
    6. ' ending' → logprob: -4.084531307220459
    7. 'in' → logprob: -4.209531307220459
    8. 'ending' → logprob: -4.584531307220459
    9. 'appe' → logprob: -4.584531307220459
    10. ' with' → logprob: -5.584531307220459

Token 218: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.2317098379135132
    2. 'first' → logprob: -1.2317098379135132
    3. ' in' → logprob: -1.6067098379135132
    4. ' first' → logprob: -1.7317098379135132
    5. 'more' → logprob: -4.606709957122803
    6. ' more' → logprob: -4.981709957122803
    7. ' at' → logprob: -5.731709957122803
    8. ' as' → logprob: -5.981709957122803
    9. 'as' → logprob: -6.231709957122803
    10. ' only' → logprob: -6.356709957122803

Token 219: ' mixed' (ID: 16435)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.7435392737388611
    2. 'ns' → logprob: -1.3685393333435059
    3. 'the' → logprob: -2.368539333343506
    4. 'north' → logprob: -2.993539333343506
    5. ' the' → logprob: -3.493539333343506
    6. 'first' → logprob: -3.993539333343506
    7. ' cross' → logprob: -4.118539333343506
    8. 'a' → logprob: -4.243539333343506
    9. ' ns' → logprob: -4.368539333343506
    10. 'different' → logprob: -4.743539333343506

Token 220: ' order' (ID: 2569)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6458042860031128
    2. 'order' → logprob: -1.5208042860031128
    3. ' order' → logprob: -2.0208044052124023
    4. ' positions' → logprob: -3.2708044052124023
    5. ' directions' → logprob: -4.270804405212402
    6. 'lines' → logprob: -4.395804405212402
    7. 'case' → logprob: -4.895804405212402
    8. ' orientations' → logprob: -4.895804405212402
    9. ' lines' → logprob: -5.020804405212402
    10. 'orientation' → logprob: -5.270804405212402

Token 221: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 222: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5248473882675171
    2. ' but' → logprob: -1.649847388267517
    3. ' continue' → logprob: -2.7748475074768066
    4. '<|end|>' → logprob: -3.1498475074768066
    5. ' so' → logprob: -3.2748475074768066
    6. 'continue' → logprob: -4.274847507476807
    7. '        
' → logprob: -4.399847507476807
    8. '#' → logprob: -4.774847507476807
    9. '<|end|>' → logprob: -4.899847507476807
    10. ' here' → logprob: -5.649847507476807

Token 223: ' from' (ID: 591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.805117130279541
    2. 'for' → logprob: -0.930117130279541
    3. '#' → logprob: -2.305117130279541
    4. ' continue' → logprob: -3.805117130279541
    5. 'continue' → logprob: -3.805117130279541
    6. 'ns' → logprob: -5.555117130279541
    7. '
' → logprob: -6.055117130279541
    8. ' ns' → logprob: -6.180117130279541
    9. ' #' → logprob: -6.430117130279541
    10. 'pass' → logprob: -6.680117130279541

Token 224: ' inputs' (ID: 21963)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.36384543776512146
    2. ' cross' → logprob: -1.6138454675674438
    3. ' here' → logprob: -3.4888453483581543
    4. ' the' → logprob: -3.8638453483581543
    5. 'the' → logprob: -4.113845348358154
    6. 'here' → logprob: -4.738845348358154
    7. 'for' → logprob: -5.363845348358154
    8. ' edges' → logprob: -5.363845348358154
    9. 'edges' → logprob: -5.488845348358154
    10. ' code' → logprob: -6.113845348358154

Token 225: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19351354241371155
    2. 'for' → logprob: -1.9435135126113892
    3. '       ' → logprob: -4.6935133934021
    4. 'ns' → logprob: -4.8185133934021
    5. ' ns' → logprob: -5.1935133934021
    6. '#' → logprob: -5.6935133934021
    7. ' continue' → logprob: -6.3185133934021
    8. ' if' → logprob: -6.6935133934021
    9. 'continue' → logprob: -6.6935133934021
    10. '        
' → logprob: -6.9435133934021

Token 227: ' cannot' (ID: 6284)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8567156791687012
    2. 'can' → logprob: -1.4817156791687012
    3. 'continue' → logprob: -2.356715679168701
    4. 'cannot' → logprob: -2.606715679168701
    5. 'need' → logprob: -3.856715679168701
    6. ' might' → logprob: -4.356715679168701
    7. '...' → logprob: -4.356715679168701
    8. 'ass' → logprob: -4.356715679168701
    9. ' cannot' → logprob: -4.356715679168701
    10. ' continue' → logprob: -4.356715679168701

Token 228: ' assign' (ID: 14975)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.1979743391275406
    2. 're' → logprob: -2.697974443435669
    3. 'continue' → logprob: -3.947974443435669
    4. 'con' → logprob: -4.19797420501709
    5. 'infer' → logprob: -4.19797420501709
    6. 'direct' → logprob: -4.69797420501709
    7. ' directly' → logprob: -4.82297420501709
    8. 'complete' → logprob: -5.32297420501709
    9. ' reliably' → logprob: -5.32297420501709
    10. ' determine' → logprob: -5.44797420501709

Token 229: ' orientation' (ID: 29546)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.5208596587181091
    2. 'ns' → logprob: -1.895859718322754
    3. 'orth' → logprob: -2.895859718322754
    4. 'direction' → logprob: -3.645859718322754
    5. ' direction' → logprob: -3.645859718322754
    6. 'dire' → logprob: -3.770859718322754
    7. ' definitive' → logprob: -3.895859718322754
    8. '       ' → logprob: -4.270859718322754
    9. 'types' → logprob: -4.645859718322754
    10. ' orth' → logprob: -4.895859718322754

Token 230: ' directly' (ID: 8516)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 231: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7967924475669861
    2. '
' → logprob: -1.1717925071716309
    3. '<|end|>' → logprob: -1.9217925071716309
    4. '        
' → logprob: -3.171792507171631
    5. '#' → logprob: -3.296792507171631
    6. '<|end|>' → logprob: -5.671792507171631
    7. '    
' → logprob: -6.796792507171631
    8. '   ' → logprob: -6.796792507171631
    9. '  
' → logprob: -6.921792507171631
    10. ' 
' → logprob: -6.921792507171631

Token 233: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.523184061050415
    2. '#' (adapté à ' #') → logprob: -1.773184061050415
    3. '
' → logprob: -2.523184061050415
    4. '<|end|>' → logprob: -2.648184061050415
    5. '        
' → logprob: -3.023184061050415
    6. ' for' → logprob: -4.898183822631836
    7. ' continue' → logprob: -5.398183822631836
    8. ' 
' → logprob: -5.523183822631836
    9. 'continue' → logprob: -5.773183822631836
    10. '<|end|>' → logprob: -6.148183822631836

Token 234: ' Instead' (ID: 21050)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6976795792579651
    2. '       ' → logprob: -1.1976795196533203
    3. 'for' → logprob: -2.4476795196533203
    4. ' for' → logprob: -2.5726795196533203
    5. '
' → logprob: -4.19767951965332
    6. '        
' → logprob: -4.82267951965332
    7. ' #' → logprob: -6.07267951965332
    8. 'from' → logprob: -6.19767951965332
    9. '   ' → logprob: -6.32267951965332
    10. 'graph' → logprob: -6.94767951965332

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39713624119758606
    2. '       ' → logprob: -1.1471362113952637
    3. '        
' → logprob: -6.397136211395264
    4. ',
' → logprob: -6.647136211395264
    5. '<|end|>' → logprob: -6.647136211395264
    6. '
' → logprob: -6.772136211395264
    7. ':' → logprob: -6.897136211395264
    8. ' we' → logprob: -7.147136211395264
    9. '#' → logprob: -7.272136211395264
    10. 'import' → logprob: -8.147136688232422

Token 236: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10302605479955673
    2. 'for' → logprob: -3.9780261516571045
    3. 'from' → logprob: -4.103025913238525
    4. ' #' → logprob: -4.853025913238525
    5. 'pass' → logprob: -4.853025913238525
    6. ' for' → logprob: -5.228025913238525
    7. 'import' → logprob: -5.353025913238525
    8. 'ns' → logprob: -5.353025913238525
    9. ' pass' → logprob: -5.478025913238525
    10. 'continue' → logprob: -5.603025913238525

Token 237: ' use' (ID: 1199)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.1257773637771606
    2. 'can' → logprob: -1.7507773637771606
    3. ''ll' → logprob: -1.7507773637771606
    4. 'continue' → logprob: -2.250777244567871
    5. 'build' → logprob: -3.375777244567871
    6. ' will' → logprob: -3.750777244567871
    7. ' continue' → logprob: -3.875777244567871
    8. 'will' → logprob: -4.000777244567871
    9. 'try' → logprob: -4.250777244567871
    10. ' should' → logprob: -4.375777244567871

Token 238: ' the' (ID: 290)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5568783283233643
    2. 'the' → logprob: -1.9318783283233643
    3. 'a' → logprob: -2.0568783283233643
    4. 'B' → logprob: -3.3068783283233643
    5. 'graph' → logprob: -3.3068783283233643
    6. 'union' → logprob: -3.5568783283233643
    7. 'cross' → logprob: -3.9318783283233643
    8. 'two' → logprob: -5.181878089904785
    9. 'dfs' → logprob: -5.306878089904785
    10. ' bip' → logprob: -5.806878089904785

Token 239: ' order' (ID: 2569)
  Prédit: 'following'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'following' → logprob: -1.3389219045639038
    2. 'cross' → logprob: -1.4639219045639038
    3. 'edges' → logprob: -1.8389219045639038
    4. ' following' → logprob: -2.9639220237731934
    5. 'fact' → logprob: -3.0889220237731934
    6. 'b' → logprob: -3.0889220237731934
    7. 'union' → logprob: -3.7139220237731934
    8. ' given' → logprob: -4.213922023773193
    9. ' fact' → logprob: -4.338922023773193
    10. 'code' → logprob: -4.338922023773193

Token 240: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3389172554016113
    2. '<|end|>' → logprob: -1.4639172554016113
    3. ' of' → logprob: -1.5889172554016113
    4. ' to' → logprob: -1.8389172554016113
    5. '<|end|>' → logprob: -3.3389172554016113
    6. ',' → logprob: -3.8389172554016113
    7. ' that' → logprob: -3.9639172554016113
    8. ' in' → logprob: -4.463917255401611
    9. ' for' → logprob: -4.588917255401611
    10. '        
' → logprob: -5.213917255401611

Token 241: ' crossing' (ID: 50946)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.338825523853302
    2. 'appearance' → logprob: -1.8388254642486572
    3. 'edges' → logprob: -3.5888254642486572
    4. 'input' → logprob: -3.7138254642486572
    5. ' appearance' → logprob: -4.338825702667236
    6. 'the' → logprob: -4.588825702667236
    7. ' cross' → logprob: -4.713825702667236
    8. 'appear' → logprob: -4.838825702667236
    9. ' input' → logprob: -4.838825702667236
    10. 'processing' → logprob: -5.213825702667236

Token 242: ' names' (ID: 8747)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6659961938858032
    2. '       ' → logprob: -1.6659961938858032
    3. 'for' → logprob: -3.0409960746765137
    4. 'tokens' → logprob: -3.1659960746765137
    5. '<|end|>' → logprob: -3.4159960746765137
    6. ' =' → logprob: -3.9159960746765137
    7. ' for' → logprob: -3.9159960746765137
    8. ',' → logprob: -4.040996074676514
    9. '<|end|>' → logprob: -4.540996074676514
    10. '   ' → logprob: -4.665996074676514

Token 243: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9445691108703613
    2. '<|end|>' → logprob: -1.0695691108703613
    3. '       ' → logprob: -1.4445691108703613
    4. '        
' → logprob: -4.069569110870361
    5. '<|end|>' → logprob: -4.819569110870361
    6. ',' → logprob: -5.819569110870361
    7. '.' → logprob: -7.569569110870361
    8. '    
' → logprob: -7.819569110870361
    9. ',
' → logprob: -8.069568634033203
    10. ' to' → logprob: -8.194568634033203

Token 244: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36729031801223755
    2. ' for' → logprob: -1.8672902584075928
    3. '<|end|>' → logprob: -2.4922902584075928
    4. '#' → logprob: -4.367290496826172
    5. 'for' → logprob: -4.492290496826172
    6. '        
' → logprob: -4.617290496826172
    7. ' a' → logprob: -4.742290496826172
    8. '           ' → logprob: -5.617290496826172
    9. 'a' → logprob: -5.742290496826172
    10. '
' → logprob: -5.867290496826172

Token 245: ' first' (ID: 1577)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.0755261182785034
    2. ' first' → logprob: -1.3255261182785034
    3. 'first' → logprob: -1.7005261182785034
    4. ' next' → logprob: -3.075526237487793
    5. ' problem' → logprob: -3.450526237487793
    6. 'code' → logprob: -3.950526237487793
    7. '#' → logprob: -4.325526237487793
    8. 'next' → logprob: -4.700526237487793
    9. 'problem' → logprob: -4.700526237487793
    10. ' streets' → logprob: -4.950526237487793

Token 246: ' street' (ID: 12901)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.4683286249637604
    2. ' token' → logprob: -1.718328595161438
    3. 'street' → logprob: -2.9683287143707275
    4. ' street' → logprob: -3.3433287143707275
    5. ' part' → logprob: -3.4683287143707275
    6. ' element' → logprob: -4.718328475952148
    7. ' line' → logprob: -5.093328475952148
    8. ')' → logprob: -5.218328475952148
    9. 'cross' → logprob: -5.343328475952148
    10. ' of' → logprob: -5.593328475952148

Token 247: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.30154937505722046
    2. ' in' → logprob: -1.5515494346618652
    3. '<|end|>' → logprob: -4.176549434661865
    4. 'appe' → logprob: -4.801549434661865
    5. 's' → logprob: -5.676549434661865
    6. ' of' → logprob: -6.051549434661865
    7. 'is' → logprob: -6.051549434661865
    8. 'of' → logprob: -6.176549434661865
    9. ' is' → logprob: -6.301549434661865
    10. 'always' → logprob: -6.301549434661865

Token 248: ' input' (ID: 3422)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.14390406012535095
    2. 'the' → logprob: -2.643903970718384
    3. 'cross' → logprob: -3.018903970718384
    4. 'a' → logprob: -4.768904209136963
    5. ' each' → logprob: -5.893904209136963
    6. 'pair' → logprob: -6.518904209136963
    7. 'c' → logprob: -7.643904209136963
    8. ' the' → logprob: -8.268903732299805
    9. 'all' → logprob: -8.393903732299805
    10. 'pairs' → logprob: -9.393903732299805

Token 249: ' crossings' (ID: 199340)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8250991106033325
    2. '       ' → logprob: -1.8250991106033325
    3. '()' → logprob: -1.9500991106033325
    4. 's' → logprob: -3.450098991394043
    5. ',' → logprob: -3.825098991394043
    6. ''s' → logprob: -3.950098991394043
    7. ' is' → logprob: -4.075098991394043
    8. '   ' → logprob: -4.325098991394043
    9. ' line' → logprob: -4.325098991394043
    10. '<|end|>' → logprob: -4.325098991394043

Token 250: ' can' (ID: 665)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8788303136825562
    2. '<|end|>' → logprob: -1.3788303136825562
    3. '[' → logprob: -2.3788304328918457
    4. '       ' → logprob: -2.8788304328918457
    5. ',' → logprob: -3.2538304328918457
    6. ' for' → logprob: -3.6288304328918457
    7. '[:' → logprob: -4.128830432891846
    8. ' is' → logprob: -4.253830432891846
    9. '<|end|>' → logprob: -4.503830432891846
    10. 'for' → logprob: -5.128830432891846

Token 251: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.5282257795333862
    2. 'be' → logprob: -0.9032257795333862
    3. 'serve' → logprob: -7.153225898742676
    4. 'represent' → logprob: -7.278225898742676
    5. 'not' → logprob: -7.403225898742676
    6. 'define' → logprob: -7.778225898742676
    7. ' represent' → logprob: -7.903225898742676
    8. 'consider' → logprob: -8.278225898742676
    9. 'ass' → logprob: -8.528225898742676
    10. ' not' → logprob: -8.528225898742676

Token 252: ' NS' (ID: 6950)
  Prédit: 'ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.6144736409187317
    2. 'consider' → logprob: -0.8644736409187317
    3. 'assigned' → logprob: -4.114473819732666
    4. 'taken' → logprob: -4.864473819732666
    5. 'treated' → logprob: -5.864473819732666
    6. 'added' → logprob: -5.989473819732666
    7. 'used' → logprob: -5.989473819732666
    8. ' considered' → logprob: -6.989473819732666
    9. ' assumed' → logprob: -6.989473819732666
    10. 'ns' → logprob: -7.489473819732666

Token 253: ' or' (ID: 503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: ' EW' (ID: 143307)
  Prédit: 'EW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EW' → logprob: -0.14124342799186707
    2. 'ew' → logprob: -2.7662434577941895
    3. ' EW' → logprob: -3.2662434577941895
    4. 'the' → logprob: -4.5162434577941895
    5. ' not' → logprob: -5.7662434577941895
    6. ' ew' → logprob: -5.7662434577941895
    7. 'first' → logprob: -5.8912434577941895
    8. ' the' → logprob: -5.8912434577941895
    9. 'not' → logprob: -5.8912434577941895
    10. 'E' → logprob: -6.0162434577941895

Token 255: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28744685649871826
    2. '<|end|>' → logprob: -1.6624468564987183
    3. '
' → logprob: -3.037446975708008
    4. '        
' → logprob: -5.037446975708008
    5. '<|end|>' → logprob: -6.787446975708008
    6. '#' → logprob: -6.787446975708008
    7. '   ' → logprob: -7.162446975708008
    8. ' ' → logprob: -7.412446975708008
    9. '           ' → logprob: -8.412446975708008
    10. '        ' → logprob: -8.537446975708008

Token 257: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5253581404685974
    2. '<|end|>' → logprob: -1.4003582000732422
    3. '
' → logprob: -2.150358200073242
    4. '#' (adapté à ' #') → logprob: -3.900358200073242
    5. '        
' → logprob: -4.150358200073242
    6. '<|end|>' → logprob: -6.025358200073242
    7. ' for' → logprob: -7.150358200073242
    8. '           ' → logprob: -7.400358200073242
    9. ',' → logprob: -7.400358200073242
    10. '```' → logprob: -7.400358200073242

Token 258: ' We'll' (ID: 46830)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9073019623756409
    2. '       ' → logprob: -1.157301902770996
    3. ' for' → logprob: -1.907301902770996
    4. 'for' → logprob: -2.532301902770996
    5. ' #' → logprob: -4.532301902770996
    6. '
' → logprob: -5.157301902770996
    7. '        
' → logprob: -5.282301902770996
    8. 'ns' → logprob: -5.782301902770996
    9. 'from' → logprob: -5.907301902770996
    10. ' ns' → logprob: -6.282301902770996

Token 259: ' try' (ID: 2075)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -1.288481593132019
    2. 'try' → logprob: -1.538481593132019
    3. 'use' → logprob: -1.663481593132019
    4. 'ass' → logprob: -2.4134817123413086
    5. 'build' → logprob: -2.5384817123413086
    6. 'continue' → logprob: -3.0384817123413086
    7. ' use' → logprob: -4.163481712341309
    8. 'implement' → logprob: -4.288481712341309
    9. 'attempt' → logprob: -4.538481712341309
    10. ' try' → logprob: -4.538481712341309

Token 260: ' both' (ID: 2973)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.14894486963748932
    2. ' to' → logprob: -2.148944854736328
    3. 'both' → logprob: -4.148944854736328
    4. 'a' → logprob: -7.023944854736328
    5. '   ' → logprob: -7.273944854736328
    6. '       ' → logprob: -7.273944854736328
    7. 'assign' → logprob: -7.523944854736328
    8. 'def' → logprob: -7.648944854736328
    9. ' both' → logprob: -7.648944854736328
    10. 'all' → logprob: -7.773944854736328

Token 261: ' assumptions' (ID: 58384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5205479264259338
    2. '
' → logprob: -1.270547866821289
    3. '<|end|>' → logprob: -3.020547866821289
    4. '#' → logprob: -3.145547866821289
    5. '        
' → logprob: -4.020547866821289
    6. 'def' → logprob: -5.770547866821289
    7. 'import' → logprob: -5.770547866821289
    8. ',' → logprob: -6.520547866821289
    9. '<|end|>' → logprob: -6.520547866821289
    10. ' and' → logprob: -6.645547866821289

Token 262: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5230156183242798
    2. '       ' → logprob: -1.0230156183242798
    3. '<|end|>' → logprob: -3.6480154991149902
    4. '        
' → logprob: -4.14801549911499
    5. '<|end|>' → logprob: -6.52301549911499
    6. '#' → logprob: -6.52301549911499
    7. ',' → logprob: -7.14801549911499
    8. ' and' → logprob: -7.77301549911499
    9. 'def' → logprob: -8.023015975952148
    10. '

' → logprob: -8.148015975952148

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21943485736846924
    2. '
' → logprob: -3.0944347381591797
    3. '        
' → logprob: -3.0944347381591797
    4. '#' → logprob: -3.4694347381591797
    5. '        ' → logprob: -3.7194347381591797
    6. '<|end|>' → logprob: -3.9694347381591797
    7. ' 
' → logprob: -4.96943473815918
    8. ' ' → logprob: -5.59443473815918
    9. ' #' → logprob: -5.71943473815918
    10. ' if' → logprob: -5.71943473815918

Token 264: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21453982591629028
    2. '#' (adapté à ' #') → logprob: -2.7145397663116455
    3. '
' → logprob: -2.8395397663116455
    4. '        
' → logprob: -4.089540004730225
    5. ' if' → logprob: -4.589540004730225
    6. ' #' → logprob: -4.589540004730225
    7. '        ' → logprob: -4.714540004730225
    8. ' for' → logprob: -5.089540004730225
    9. ' ns' → logprob: -5.464540004730225
    10. ' 
' → logprob: -6.339540004730225

Token 265: ' But' (ID: 3072)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9585736393928528
    2. '       ' → logprob: -0.9585736393928528
    3. '
' → logprob: -2.583573579788208
    4. ' #' → logprob: -3.583573579788208
    5. ' orientation' → logprob: -4.083573818206787
    6. ' ns' → logprob: -4.333573818206787
    7. '        
' → logprob: -4.583573818206787
    8. 'ns' → logprob: -4.583573818206787
    9. 'from' → logprob: -4.583573818206787
    10. 'import' → logprob: -4.708573818206787

Token 266: ' problem' (ID: 4792)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3685015439987183
    2. '        ' → logprob: -1.7435015439987183
    3. ' here' → logprob: -2.243501663208008
    4. ' continue' → logprob: -2.368501663208008
    5. '#' → logprob: -2.993501663208008
    6. '
' → logprob: -3.243501663208008
    7. ' for' → logprob: -3.243501663208008
    8. ' the' → logprob: -3.618501663208008
    9. ' not' → logprob: -3.743501663208008
    10. '    ' → logprob: -3.743501663208008

Token 267: ' says' (ID: 5003)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: ' streets' (ID: 25360)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' either' (ID: 4784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: ' NS' (ID: 6950)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5656115412712097
    2. 'are' → logprob: -2.5656116008758545
    3. ' continue' → logprob: -2.5656116008758545
    4. ' end' → logprob: -3.4406116008758545
    5. 'north' → logprob: -3.5656116008758545
    6. 'continue' → logprob: -3.9406116008758545
    7. ' NS' → logprob: -4.065611362457275
    8. ' have' → logprob: -4.065611362457275
    9. 'NS' → logprob: -4.315611362457275
    10. '\n' → logprob: -4.440611362457275

Token 271: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.031651727855205536
    2. 'or' → logprob: -3.781651735305786
    3. ')' → logprob: -4.906651496887207
    4. '<|end|>' → logprob: -7.531651496887207
    5. ',' → logprob: -9.281651496887207
    6. '
' → logprob: -9.656651496887207
    7. '),' → logprob: -10.156651496887207
    8. '#' → logprob: -10.156651496887207
    9. '       ' → logprob: -10.406651496887207
    10. ' and' → logprob: -10.656651496887207

Token 272: ' EW' (ID: 143307)
  Prédit: 'EW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EW' → logprob: -0.050305694341659546
    2. ' EW' → logprob: -3.0503056049346924
    3. 'ew' → logprob: -7.8003058433532715
    4. 'E' → logprob: -8.175305366516113
    5. '_E' → logprob: -8.175305366516113
    6. '
' → logprob: -9.050305366516113
    7. ' ' → logprob: -9.550305366516113
    8. ' ' → logprob: -9.612805366516113
    9. '   ' → logprob: -9.675305366516113
    10. ' or' → logprob: -9.675305366516113

Token 273: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5180782079696655
    2. '       ' → logprob: -1.3930782079696655
    3. '<|end|>' → logprob: -2.143078327178955
    4. '        
' → logprob: -4.768078327178955
    5. ')' → logprob: -5.018078327178955
    6. '<|end|>' → logprob: -5.143078327178955
    7. ',' → logprob: -5.268078327178955
    8. ':' → logprob: -5.893078327178955
    9. '#' → logprob: -6.393078327178955
    10. '    
' → logprob: -6.643078327178955

Token 274: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32042059302330017
    2. '#' → logprob: -2.070420503616333
    3. '<|end|>' → logprob: -2.320420503616333
    4. ' so' → logprob: -3.695420503616333
    5. ' and' → logprob: -4.695420742034912
    6. '<|end|>' → logprob: -4.820420742034912
    7. '
' → logprob: -6.570420742034912
    8. ' continue' → logprob: -6.820420742034912
    9. '        
' → logprob: -6.945420742034912
    10. '...' → logprob: -7.195420742034912

Token 275: ' crossings' (ID: 199340)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -1.2048790454864502
    2. 'they' → logprob: -2.20487904548645
    3. 'the' → logprob: -2.32987904548645
    4. 'each' → logprob: -2.45487904548645
    5. 'all' → logprob: -2.95487904548645
    6. ' no' → logprob: -3.07987904548645
    7. ' the' → logprob: -3.20487904548645
    8. 'no' → logprob: -3.20487904548645
    9. ' all' → logprob: -3.32987904548645
    10. ' cross' → logprob: -4.079878807067871

Token 276: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.2976716160774231
    2. ')' → logprob: -2.5476715564727783
    3. ' =' → logprob: -2.7976715564727783
    4. '       ' → logprob: -4.172671794891357
    5. '<|end|>' → logprob: -4.297671794891357
    6. ' can' → logprob: -4.547671794891357
    7. 'are' → logprob: -4.797671794891357
    8. '=' → logprob: -4.922671794891357
    9. ' appear' → logprob: -4.922671794891357
    10. '.' → logprob: -5.047671794891357

Token 277: ' only' (ID: 1606)
  Prédit: ' always'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' always' → logprob: -0.425601601600647
    2. 'always' → logprob: -2.4256014823913574
    3. ' given' → logprob: -2.9256014823913574
    4. ' between' → logprob: -3.0506014823913574
    5. '<|end|>' → logprob: -3.6756014823913574
    6. ' either' → logprob: -4.050601482391357
    7. ' guaranteed' → logprob: -4.300601482391357
    8. 'between' → logprob: -4.550601482391357
    9. ' pairs' → logprob: -4.675601482391357
    10. ' consistent' → logprob: -4.800601482391357

Token 278: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.3660309910774231
    2. 'between' → logprob: -1.3660309314727783
    3. '<|end|>' → logprob: -3.6160309314727783
    4. ' (' → logprob: -6.366031169891357
    5. ' at' → logprob: -6.366031169891357
    6. ' pairs' → logprob: -6.491031169891357
    7. ' given' → logprob: -6.491031169891357
    8. 'adj' → logprob: -6.741031169891357
    9. ' used' → logprob: -6.866031169891357
    10. ' ' → logprob: -6.991031169891357

Token 279: ' orth' (ID: 35656)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.4441623091697693
    2. 'a' → logprob: -1.944162368774414
    3. ' streets' → logprob: -2.444162368774414
    4. ' a' → logprob: -3.319162368774414
    5. 'ns' → logprob: -3.944162368774414
    6. 'A' → logprob: -4.444162368774414
    7. 'NS' → logprob: -4.569162368774414
    8. 'one' → logprob: -4.694162368774414
    9. ' one' → logprob: -4.819162368774414
    10. 'orth' → logprob: -5.194162368774414

Token 280: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -0.0001514557225164026
    2. 'ogon' → logprob: -9.375151634216309
    3. ')' → logprob: -10.125151634216309
    4. '```' → logprob: -11.000151634216309
    5. '{' → logprob: -12.500151634216309
    6. '}' → logprob: -14.375151634216309
    7. 'og' → logprob: -14.625151634216309
    8. '(' → logprob: -14.750151634216309
    9. '#' → logprob: -14.750151634216309
    10. 'g' → logprob: -14.875151634216309

Token 281: ' streets' (ID: 25360)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 282: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 283: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 284: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41977041959762573
    2. '<|end|>' → logprob: -1.7947704792022705
    3. '       ' → logprob: -2.0447704792022705
    4. '        
' → logprob: -3.4197704792022705
    5. ')' → logprob: -5.794770240783691
    6. '#' (adapté à ' #') → logprob: -6.044770240783691
    7. '<|end|>' → logprob: -6.294770240783691
    8. ')
' → logprob: -6.794770240783691
    9. '    
' → logprob: -7.044770240783691
    10. '  
' → logprob: -7.169770240783691

Token 285: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22612808644771576
    2. '
' → logprob: -2.726128101348877
    3. '#' → logprob: -2.851128101348877
    4. '   ' → logprob: -3.476128101348877
    5. ' for' → logprob: -5.101128101348877
    6. '        
' → logprob: -5.351128101348877
    7. 'for' → logprob: -5.351128101348877
    8. 'graph' → logprob: -5.351128101348877
    9. 'from' → logprob: -5.476128101348877
    10. 'import' → logprob: -5.851128101348877

Token 286: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.504502534866333
    2. 'ns' → logprob: -1.379502534866333
    3. 'from' → logprob: -2.879502534866333
    4. ' ns' → logprob: -3.504502534866333
    5. 'for' → logprob: -3.629502534866333
    6. '       ' → logprob: -5.004502296447754
    7. ' for' → logprob: -5.254502296447754
    8. ' from' → logprob: -5.504502296447754
    9. ' #' → logprob: -5.504502296447754
    10. 'def' → logprob: -6.504502296447754

Token 287: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6083594560623169
    2. '#' → logprob: -1.233359456062317
    3. ' for' → logprob: -2.6083593368530273
    4. 'ns' → logprob: -2.8583593368530273
    5. ' ns' → logprob: -3.8583593368530273
    6. ' #' → logprob: -5.233359336853027
    7. 'from' → logprob: -6.358359336853027
    8. '       ' → logprob: -6.858359336853027
    9. '   ' → logprob: -7.483359336853027
    10. 'def' → logprob: -7.483359336853027

Token 288: ' all' (ID: 722)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7503836750984192
    2. 'a' → logprob: -1.0003836154937744
    3. 's' → logprob: -3.0003836154937744
    4. 'A' → logprob: -3.3753836154937744
    5. ' c' → logprob: -3.6253836154937744
    6. ' a' → logprob: -4.8753838539123535
    7. ' s' → logprob: -5.1253838539123535
    8. 'street' → logprob: -5.5003838539123535
    9. 'cross' → logprob: -5.6253838539123535
    10. ' line' → logprob: -5.6253838539123535

Token 289: ' crossings' (ID: 199340)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.4669790267944336
    2. 'a' → logprob: -1.7169790267944336
    3. 'c' → logprob: -1.8419790267944336
    4. 'A' → logprob: -2.0919790267944336
    5. ' c' → logprob: -2.4669790267944336
    6. ' A' → logprob: -2.5919790267944336
    7. ' a' → logprob: -2.7169790267944336
    8. ' (' → logprob: -3.2169790267944336
    9. 'i' → logprob: -4.466979026794434
    10. '(a' → logprob: -4.841979026794434

Token 290: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5320343375205994
    2. ':
' → logprob: -1.2820343971252441
    3. ',' → logprob: -2.157034397125244
    4. '):
' → logprob: -4.907034397125244
    5. '):' → logprob: -5.157034397125244
    6. '       ' → logprob: -5.907034397125244
    7. '   ' → logprob: -7.157034397125244
    8. '<|end|>' → logprob: -7.282034397125244
    9. 'for' → logprob: -8.157033920288086
    10. ' for' → logprob: -8.532033920288086

Token 291: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7307027578353882
    2. 'A' → logprob: -1.2307027578353882
    3. '),' → logprob: -2.6057028770446777
    4. '(A' → logprob: -3.4807028770446777
    5. ' a' → logprob: -4.105702877044678
    6. '):
' → logprob: -4.355702877044678
    7. ')' → logprob: -4.480702877044678
    8. ' A' → logprob: -4.480702877044678
    9. '):' → logprob: -4.605702877044678
    10. ',' → logprob: -4.730702877044678

Token 292: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.042500514537096024
    2. ',B' → logprob: -3.6675004959106445
    3. ',A' → logprob: -5.5425004959106445
    4. '[' → logprob: -5.6675004959106445
    5. ',b' → logprob: -5.9175004959106445
    6. '),' → logprob: -6.4175004959106445
    7. ' ,' → logprob: -7.1675004959106445
    8. ')' → logprob: -7.1675004959106445
    9. ',
' → logprob: -7.2925004959106445
    10. ',a' → logprob: -7.7925004959106445

Token 293: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4492794871330261
    2. '):' → logprob: -1.199279546737671
    3. '),' → logprob: -2.824279546737671
    4. '):
' → logprob: -7.574279308319092
    5. ')' → logprob: -8.19927978515625
    6. '):

' → logprob: -8.57427978515625
    7. ' ):
' → logprob: -10.32427978515625
    8. '),
' → logprob: -10.69927978515625
    9. ':' → logprob: -11.07427978515625
    10. ' ):' → logprob: -11.07427978515625

Token 294: ' A' (ID: 355)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25681963562965393
    2. 'if' → logprob: -2.131819725036621
    3. ' ns' → logprob: -3.006819725036621
    4. ' for' → logprob: -3.756819725036621
    5. '           ' → logprob: -5.006819725036621
    6. '#' → logprob: -5.131819725036621
    7. 'ns' → logprob: -5.381819725036621
    8. '
' → logprob: -5.631819725036621
    9. 'for' → logprob: -5.631819725036621
    10. '       ' → logprob: -6.131819725036621

Token 295: ' and' (ID: 326)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7412749528884888
    2. 'in' → logprob: -1.1162749528884888
    3. ',' → logprob: -2.116274833679199
    4. ' is' → logprob: -3.991274833679199
    5. ' not' → logprob: -4.116274833679199
    6. ' and' → logprob: -4.116274833679199
    7. 'and' → logprob: -5.241274833679199
    8. 'not' → logprob: -5.366274833679199
    9. ' ,' → logprob: -5.491274833679199
    10. ')' → logprob: -5.741274833679199

Token 296: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.021087607368826866
    2. ' B' → logprob: -3.896087646484375
    3. 'b' → logprob: -7.771087646484375
    4. ' not' → logprob: -10.271087646484375
    5. ')' → logprob: -11.021087646484375
    6. 'a' → logprob: -11.271087646484375
    7. 'not' → logprob: -11.271087646484375
    8. '
' → logprob: -11.771087646484375
    9. ' ' → logprob: -12.271087646484375
    10. '(B' → logprob: -12.833587646484375

Token 297: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.2752751111984253
    2. ' cannot' → logprob: -1.5252751111984253
    3. 'cannot' → logprob: -1.7752751111984253
    4. 'are' → logprob: -2.400275230407715
    5. ' belong' → logprob: -2.525275230407715
    6. 'bel' → logprob: -3.400275230407715
    7. ' should' → logprob: -3.900275230407715
    8. ' must' → logprob: -3.900275230407715
    9. ' not' → logprob: -4.025275230407715
    10. 'should' → logprob: -4.525275230407715

Token 298: ' orth' (ID: 35656)
  Prédit: ' orth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orth' → logprob: -1.4313750267028809
    2. 'from' → logprob: -1.5563750267028809
    3. ' in' → logprob: -1.8063750267028809
    4. ' from' → logprob: -2.556375026702881
    5. 'in' → logprob: -2.556375026702881
    6. 'different' → logprob: -2.806375026702881
    7. 'orth' → logprob: -3.056375026702881
    8. ' of' → logprob: -3.306375026702881
    9. 'of' → logprob: -3.556375026702881
    10. ' different' → logprob: -3.931375026702881

Token 299: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -7.896309739408025e-07
    2. 'ogon' → logprob: -14.500000953674316
    3. '```' → logprob: -16.875
    4. 'og' → logprob: -17.125
    5. 'ogal' → logprob: -17.25
    6. ')' → logprob: -17.25
    7. '
' → logprob: -17.5
    8. '{' → logprob: -18.625
    9. '   ' → logprob: -18.875
    10. 'agonal' → logprob: -19.0

Token 300: ' sets' (ID: 11982)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 301: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8422423601150513
    2. '       ' → logprob: -0.9672423601150513
    3. '<|end|>' → logprob: -1.7172423601150513
    4. '        
' → logprob: -6.092242240905762
    5. '<|end|>' → logprob: -6.217242240905762
    6. ',' → logprob: -6.342242240905762
    7. ')' → logprob: -6.842242240905762
    8. ')
' → logprob: -7.717242240905762
    9. ',
' → logprob: -7.967242240905762
    10. '.' → logprob: -8.592242240905762

Token 302: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08106860518455505
    2. '        
' → logprob: -2.956068515777588
    3. '
' → logprob: -4.456068515777588
    4. '<|end|>' → logprob: -5.331068515777588
    5. 'ns' → logprob: -5.831068515777588
    6. ',' → logprob: -6.581068515777588
    7. '    
' → logprob: -7.206068515777588
    8. '  
' → logprob: -7.706068515777588
    9. '(ns' → logprob: -7.706068515777588
    10. '#' (adapté à ' #') → logprob: -8.081068992614746

Token 304: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06532745063304901
    2. 'for' → logprob: -3.5653274059295654
    3. 'ns' → logprob: -4.3153276443481445
    4. ' for' → logprob: -4.4403276443481445
    5. '#' → logprob: -5.9403276443481445
    6. ' ns' → logprob: -6.8153276443481445
    7. '        
' → logprob: -6.9403276443481445
    8. 'from' → logprob: -6.9403276443481445
    9. 'A' → logprob: -7.0653276443481445
    10. '
' → logprob: -7.3153276443481445

Token 305: ' build' (ID: 3024)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7499149441719055
    2. '=' → logprob: -1.7499148845672607
    3. '       ' → logprob: -1.9999148845672607
    4. 'continue' → logprob: -2.2499148845672607
    5. ' continue' → logprob: -3.8749148845672607
    6. ' can' → logprob: -3.8749148845672607
    7. 'for' → logprob: -3.9999148845672607
    8. '#' → logprob: -4.87491512298584
    9. 'can' → logprob: -4.87491512298584
    10. '.add' → logprob: -4.99991512298584

Token 306: ' bip' (ID: 54467)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.7952213883399963
    2. 'a' → logprob: -1.1702213287353516
    3. ' two' → logprob: -2.9202213287353516
    4. 'graph' → logprob: -2.9202213287353516
    5. 'two' → logprob: -3.2952213287353516
    6. 'from' → logprob: -3.5452213287353516
    7. ' adjacency' → logprob: -3.6702213287353516
    8. ' a' → logprob: -3.7952213287353516
    9. ' graph' → logprob: -5.420221328735352
    10. 'b' → logprob: -5.795221328735352

Token 307: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -2.629921436891891e-05
    2. 'ar' → logprob: -11.00002670288086
    3. 'graph' → logprob: -12.50002670288086
    4. '
' → logprob: -13.50002670288086
    5. 'a' → logprob: -14.12502670288086
    6. '```' → logprob: -14.75002670288086
    7. 'арт' → logprob: -14.87502670288086
    8. '       ' → logprob: -15.37502670288086
    9. '=' → logprob: -15.62502670288086
    10. 'artisan' → logprob: -15.62502670288086

Token 308: 'ition' (ID: 868)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.0008571469807066023
    2. 'te' → logprob: -8.00085735321045
    3. 'graph' → logprob: -8.12585735321045
    4. 'ate' → logprob: -10.00085735321045
    5. 'art' → logprob: -10.50085735321045
    6. '```' → logprob: -10.50085735321045
    7. 'part' → logprob: -11.12585735321045
    8. 'e' → logprob: -11.50085735321045
    9. 'it' → logprob: -11.62585735321045
    10. 't' → logprob: -11.62585735321045

Token 309: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5710418820381165
    2. '       ' → logprob: -1.6960418224334717
    3. 'from' → logprob: -2.3210418224334717
    4. 'import' → logprob: -3.0710418224334717
    5. 'def' → logprob: -4.446042060852051
    6. '=' → logprob: -4.446042060852051
    7. 'graph' → logprob: -4.446042060852051
    8. ',' → logprob: -4.696042060852051
    9. ' from' → logprob: -5.071042060852051
    10. ' graph' → logprob: -5.321042060852051

Token 310: 'graph' (ID: 7978)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.481930673122406
    2. 'from' → logprob: -1.4819307327270508
    3. 'graph' → logprob: -2.606930732727051
    4. 'def' → logprob: -3.981930732727051
    5. ' graph' → logprob: -4.106930732727051
    6. 'import' → logprob: -4.356930732727051
    7. ' from' → logprob: -4.856930732727051
    8. 'visited' → logprob: -4.981930732727051
    9. '
' → logprob: -5.231930732727051
    10. '):
' → logprob: -6.356930732727051

Token 311: ')' (ID: 8)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0629490464925766
    2. ')' → logprob: -3.1879489421844482
    3. '=' → logprob: -4.812949180603027
    4. '):
' → logprob: -5.687949180603027
    5. ',' → logprob: -5.937949180603027
    6. '<|end|>' → logprob: -6.187949180603027
    7. '):' → logprob: -7.437949180603027
    8. 'from' → logprob: -7.812949180603027
    9. ':' → logprob: -7.937949180603027
    10. '
' → logprob: -8.062949180603027

Token 312: ' accordingly' (ID: 44041)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3805951178073883
    2. 'from' → logprob: -1.505595088005066
    3. ' from' → logprob: -3.2555952072143555
    4. '<|end|>' → logprob: -3.5055952072143555
    5. 'import' → logprob: -4.3805952072143555
    6. '
' → logprob: -5.5055952072143555
    7. ',' → logprob: -6.2555952072143555
    8. ' =' → logprob: -6.3805952072143555
    9. ':' → logprob: -6.7555952072143555
    10. '<|end|>' → logprob: -7.1305952072143555

Token 313: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8471046090126038
    2. '
' → logprob: -1.097104549407959
    3. '<|end|>' → logprob: -1.597104549407959
    4. '        
' → logprob: -5.097104549407959
    5. 'from' → logprob: -5.222104549407959
    6. ',' → logprob: -5.472104549407959
    7. '<|end|>' → logprob: -5.972104549407959
    8. 'import' → logprob: -5.972104549407959
    9. ')' → logprob: -6.222104549407959
    10. '```' → logprob: -6.222104549407959

Token 315: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4953039586544037
    2. ' graph' → logprob: -1.620303988456726
    3. 'from' → logprob: -2.1203038692474365
    4. '       ' → logprob: -4.120304107666016
    5. 'import' → logprob: -4.120304107666016
    6. '
' → logprob: -4.245304107666016
    7. ' from' → logprob: -4.495304107666016
    8. 'edges' → logprob: -6.120304107666016
    9. '	graph' → logprob: -6.120304107666016
    10. 'visited' → logprob: -6.745304107666016

Token 316: ' Build' (ID: 10885)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.44441431760787964
    2. 'graph' → logprob: -1.3194143772125244
    3. 'import' → logprob: -2.9444143772125244
    4. ' from' → logprob: -3.9444143772125244
    5. '       ' → logprob: -4.819414138793945
    6. ' graph' → logprob: -5.194414138793945
    7. 'g' → logprob: -6.194414138793945
    8. 'adj' → logprob: -6.444414138793945
    9. 'G' → logprob: -7.319414138793945
    10. '   ' → logprob: -8.194414138793945

Token 317: ' graph' (ID: 7465)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6041916608810425
    2. 'graph' → logprob: -0.8541916608810425
    3. 'adj' → logprob: -4.354191780090332
    4. 'import' → logprob: -4.854191780090332
    5. ' graph' → logprob: -5.604191780090332
    6. ' from' → logprob: -5.979191780090332
    7. 'g' → logprob: -7.854191780090332
    8. 'G' → logprob: -8.604191780090332
    9. ' adj' → logprob: -9.229191780090332
    10. 'b' → logprob: -9.479191780090332

Token 318: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.053285613656044006
    2. 'from' → logprob: -3.428285598754883
    3. '=' → logprob: -4.053285598754883
    4. ' from' → logprob: -6.553285598754883
    5. 'import' → logprob: -8.928285598754883
    6. '       ' → logprob: -9.053285598754883
    7. 'graph' → logprob: -9.178285598754883
    8. '   ' → logprob: -9.303285598754883
    9. ',' → logprob: -9.678285598754883
    10. ' graph' → logprob: -10.678285598754883

Token 319: ' find' (ID: 1646)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.3920127153396606
    2. 'build' → logprob: -1.5170127153396606
    3. 'check' → logprob: -1.6420127153396606
    4. 'find' → logprob: -2.267012596130371
    5. 'assign' → logprob: -2.892012596130371
    6. 'from' → logprob: -3.017012596130371
    7. 'det' → logprob: -3.767012596130371
    8. '=' → logprob: -4.392012596130371
    9. 'connect' → logprob: -4.642012596130371
    10. '{}' → logprob: -4.642012596130371

Token 320: ' bip' (ID: 54467)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8131462335586548
    2. 'adj' → logprob: -1.3131462335586548
    3. 'b' → logprob: -1.8131462335586548
    4. 'color' → logprob: -2.9381461143493652
    5. ' bip' → logprob: -3.5631461143493652
    6. 'part' → logprob: -5.063146114349365
    7. 'the' → logprob: -5.313146114349365
    8. 'import' → logprob: -5.313146114349365
    9. 'ns' → logprob: -5.688146114349365
    10. 'neighbors' → logprob: -5.813146114349365

Token 321: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.0001105762057704851
    2. 'ar' → logprob: -9.250110626220703
    3. 'graph' → logprob: -12.625110626220703
    4. '=' → logprob: -13.250110626220703
    5. 'arti' → logprob: -13.375110626220703
    6. '
' → logprob: -13.625110626220703
    7. 'арт' → logprob: -14.375110626220703
    8. 'import' → logprob: -14.500110626220703
    9. '```' → logprob: -14.500110626220703
    10. ')' → logprob: -14.500110626220703

Token 322: 'ition' (ID: 868)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.033055488020181656
    2. 'ite' → logprob: -3.533055543899536
    3. 'ar' → logprob: -6.033055305480957
    4. 'import' → logprob: -8.158055305480957
    5. 'ition' → logprob: -9.033055305480957
    6. 't' → logprob: -9.783055305480957
    7. '```' → logprob: -9.783055305480957
    8. 'ate' → logprob: -9.908055305480957
    9. 'rt' → logprob: -10.283055305480957
    10. '       ' → logprob: -10.408055305480957

Token 323: ':' (ID: 25)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9893436431884766
    2. 'from' → logprob: -1.4893436431884766
    3. '       ' → logprob: -2.2393436431884766
    4. ' =' → logprob: -2.3643436431884766
    5. '
' → logprob: -2.8643436431884766
    6. ' graph' → logprob: -2.8643436431884766
    7. ' from' → logprob: -3.9893436431884766
    8. ':' → logprob: -3.9893436431884766
    9. '=' → logprob: -4.364343643188477
    10. 'import' → logprob: -4.614343643188477

Token 324: ' edges' (ID: 22569)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.38822537660598755
    2. ' graph' → logprob: -1.3882253170013428
    3. 'from' → logprob: -3.1382253170013428
    4. ' from' → logprob: -3.7632253170013428
    5. '       ' → logprob: -6.013225555419922
    6. 'adj' → logprob: -7.138225555419922
    7. '```' → logprob: -7.763225555419922
    8. ' adj' → logprob: -8.138225555419922
    9. 'import' → logprob: -8.138225555419922
    10. 'color' → logprob: -8.388225555419922

Token 325: ' between' (ID: 2870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06193048506975174
    2. '=' → logprob: -2.9369304180145264
    3. 'from' → logprob: -5.0619306564331055
    4. 'import' → logprob: -7.9369306564331055
    5. '       ' → logprob: -9.061930656433105
    6. '   ' → logprob: -10.186930656433105
    7. ',' → logprob: -10.561930656433105
    8. '={}' → logprob: -10.686930656433105
    9. '={}
' → logprob: -10.686930656433105
    10. '=[]
' → logprob: -11.436930656433105

Token 326: ' orth' (ID: 35656)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.5742633938789368
    2. 'A' → logprob: -1.074263334274292
    3. 'cross' → logprob: -4.074263572692871
    4. ' nodes' → logprob: -4.449263572692871
    5. 'vertices' → logprob: -4.699263572692871
    6. 'each' → logprob: -4.699263572692871
    7. 'adj' → logprob: -4.699263572692871
    8. 'stre' → logprob: -5.074263572692871
    9. 'all' → logprob: -5.199263572692871
    10. 'ns' → logprob: -5.324263572692871

Token 327: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -0.00042923877481371164
    2. 'ogon' → logprob: -7.875429153442383
    3. '       ' → logprob: -11.000429153442383
    4. 'sets' → logprob: -11.250429153442383
    5. ' sets' → logprob: -11.875429153442383
    6. 'og' → logprob: -12.875429153442383
    7. '_sets' → logprob: -13.250429153442383
    8. '```' → logprob: -13.375429153442383
    9. 'g' → logprob: -14.125429153442383
    10. 'part' → logprob: -14.375429153442383

Token 328: ' streets' (ID: 25360)
  Prédit: 'sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sets' → logprob: -1.0933738946914673
    2. ' sets' → logprob: -1.5933738946914673
    3. '<|end|>' → logprob: -1.7183738946914673
    4. 'nodes' → logprob: -1.8433738946914673
    5. 's' → logprob: -2.8433737754821777
    6. ' nodes' → logprob: -3.4683737754821777
    7. 'vertices' → logprob: -5.343373775482178
    8. 'stre' → logprob: -5.718373775482178
    9. '_sets' → logprob: -5.718373775482178
    10. 'groups' → logprob: -5.843373775482178

Token 329: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6844481229782104
    2. '       ' → logprob: -1.1844481229782104
    3. '
' → logprob: -2.5594482421875
    4. 'import' → logprob: -3.3094482421875
    5. ' =' → logprob: -3.6844482421875
    6. ' from' → logprob: -4.1844482421875
    7. '<|end|>' → logprob: -4.4344482421875
    8. ',' → logprob: -4.8094482421875
    9. '        
' → logprob: -5.9344482421875
    10. '=' → logprob: -5.9344482421875

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5032992362976074
    2. '
' → logprob: -2.0032992362976074
    3. 'from' → logprob: -2.6282992362976074
    4. 'graph' → logprob: -2.6282992362976074
    5. ' graph' → logprob: -3.7532992362976074
    6. ' from' → logprob: -3.8782992362976074
    7. ',' → logprob: -4.003299236297607
    8. ':' → logprob: -4.753299236297607
    9. '        
' → logprob: -5.003299236297607
    10. '<|end|>' → logprob: -5.003299236297607

Token 331: ' adj' (ID: 20251)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.706549346446991
    2. 'graph' → logprob: -1.0815494060516357
    3. 'from' → logprob: -2.5815494060516357
    4. ' graph' → logprob: -2.7065494060516357
    5. ' from' → logprob: -4.581549167633057
    6. 'import' → logprob: -5.081549167633057
    7. '	graph' → logprob: -6.206549167633057
    8. '```' → logprob: -6.456549167633057
    9. '        
' → logprob: -7.206549167633057
    10. '<|end|>' → logprob: -7.331549167633057

Token 332: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931912302970886
    2. ' =' → logprob: -0.6931912302970886
    3. '[' → logprob: -10.568191528320312
    4. '={}' → logprob: -11.693191528320312
    5. '={' → logprob: -12.443191528320312
    6. '=[' → logprob: -13.568191528320312
    7. '=[]' → logprob: -13.693191528320312
    8. ' ={' → logprob: -14.193191528320312
    9. ')' → logprob: -14.443191528320312
    10. 's' → logprob: -15.068191528320312

Token 333: ' [[]' (ID: 182908)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.26359984278678894
    2. '[' → logprob: -1.5135998725891113
    3. '{' → logprob: -4.513599872589111
    4. ' [[]' → logprob: -7.638599872589111
    5. 'default' → logprob: -9.638599395751953
    6. '{}
' → logprob: -9.888599395751953
    7. 'collections' → logprob: -10.888599395751953
    8. '{}

' → logprob: -11.388599395751953
    9. 'dict' → logprob: -11.763599395751953
    10. '[]' → logprob: -13.513599395751953

Token 334: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2825498878955841
    2. ' for' → logprob: -2.0325498580932617
    3. ']' → logprob: -2.5325498580932617
    4. ',' → logprob: -3.5325498580932617
    5. '       ' → logprob: -6.657549858093262
    6. '(st' → logprob: -7.532549858093262
    7. ')' → logprob: -7.532549858093262
    8. ']
' → logprob: -7.782549858093262
    9. '[' → logprob: -7.907549858093262
    10. '(' → logprob: -7.907549858093262

Token 335: ' _' (ID: 1175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18924064934253693
    2. 'range' → logprob: -2.0642406940460205
    3. ' range' → logprob: -3.3142406940460205
    4. 'in' → logprob: -4.939240455627441
    5. '(range' → logprob: -6.439240455627441
    6. '_' → logprob: -9.189240455627441
    7. '_range' → logprob: -9.189240455627441
    8. '(cnt' → logprob: -10.064240455627441
    9. 'cnt' → logprob: -10.189240455627441
    10. '   ' → logprob: -10.314240455627441

Token 336: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018835710361599922
    2. ' range' → logprob: -4.018835544586182
    3. 'in' → logprob: -7.393835544586182
    4. ' in' → logprob: -10.26883602142334
    5. '(range' → logprob: -10.39383602142334
    6. 'i' → logprob: -12.76883602142334
    7. '   ' → logprob: -14.14383602142334
    8. '	range' → logprob: -14.89383602142334
    9. ' ' → logprob: -15.01883602142334
    10. 'x' → logprob: -15.51883602142334

Token 337: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015314090996980667
    2. ' range' → logprob: -6.501531600952148
    3. '(range' → logprob: -10.501531600952148
    4. '   ' → logprob: -13.876531600952148
    5. 'r' → logprob: -15.876531600952148
    6. ' ' → logprob: -16.00153160095215
    7. 'ra' → logprob: -16.12653160095215
    8. '  ' → logprob: -16.75153160095215
    9. '	range' → logprob: -17.00153160095215
    10. '(' → logprob: -17.50153160095215

Token 338: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.5804418921470642
    2. 'cnt' → logprob: -0.8304418921470642
    3. '(' → logprob: -5.455441951751709
    4. '(len' → logprob: -9.20544147491455
    5. '2' → logprob: -9.83044147491455
    6. 'len' → logprob: -10.45544147491455
    7. ' cnt' → logprob: -10.95544147491455
    8. '(count' → logprob: -12.08044147491455
    9. '[cnt' → logprob: -12.45544147491455
    10. '(max' → logprob: -12.45544147491455

Token 339: ')]
' (ID: 11587)
  Prédit: ')]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.146981343626976
    2. ')]' → logprob: -2.0219812393188477
    3. ')]
' → logprob: -5.896981239318848
    4. ')]

' → logprob: -6.521981239318848
    5. ')' → logprob: -10.271981239318848
    6. ']' → logprob: -10.896981239318848
    7. ' )' → logprob: -11.521981239318848
    8. ']
' → logprob: -11.771981239318848
    9. '   ' → logprob: -13.021981239318848
    10. '       ' → logprob: -13.021981239318848

Token 340: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5466505289077759
    2. '       ' → logprob: -1.4216505289077759
    3. ' for' → logprob: -2.1716504096984863
    4. '
' → logprob: -3.1716504096984863
    5. '<|end|>' → logprob: -4.046650409698486
    6. '   ' → logprob: -5.796650409698486
    7. '        
' → logprob: -6.171650409698486
    8. '    
' → logprob: -8.421650886535645
    9. '<|end|>' → logprob: -9.046650886535645
    10. ')' → logprob: -9.046650886535645

Token 341: ' deg' (ID: 5597)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00043913270928896964
    2. ' for' → logprob: -7.750439167022705
    3. '       ' → logprob: -11.875438690185547
    4. '
' → logprob: -14.000438690185547
    5. '   ' → logprob: -14.750438690185547
    6. '	for' → logprob: -16.000438690185547
    7. '```' → logprob: -16.375438690185547
    8. '        
' → logprob: -17.375438690185547
    9. '<|end|>' → logprob: -17.750438690185547
    10. 'For' → logprob: -18.375438690185547

Token 342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.253875732421875
    2. ' =' → logprob: -1.253875732421875
    3. 's' → logprob: -2.003875732421875
    4. '[A' → logprob: -2.128875732421875
    5. '[' → logprob: -2.378875732421875
    6. 'rees' → logprob: -3.503875732421875
    7. '=[]' → logprob: -4.378875732421875
    8. '[u' → logprob: -4.503875732421875
    9. '=[' → logprob: -5.378875732421875
    10. 'ree' → logprob: -5.753875732421875

Token 343: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00025311444187536836
    2. '[cnt' → logprob: -8.875252723693848
    3. ' [' → logprob: -9.250252723693848
    4. '[count' → logprob: -12.250252723693848
    5. 'cnt' → logprob: -12.625252723693848
    6. '{}' → logprob: -12.750252723693848
    7. '0' → logprob: -13.375252723693848
    8. '[len' → logprob: -13.500252723693848
    9. '[counter' → logprob: -14.250252723693848
    10. '[c' → logprob: -14.250252723693848

Token 344: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0802738870552275e-05
    2. ' ' → logprob: -11.50001049041748
    3. ']' → logprob: -15.81251049041748
    4. 'set' → logprob: -16.875011444091797
    5. ')' → logprob: -17.187511444091797
    6. '۰' → logprob: -17.250011444091797
    7. '   ' → logprob: -17.312511444091797
    8. '[]' → logprob: -17.312511444091797
    9. 'cnt' → logprob: -17.500011444091797
    10. 'False' → logprob: -17.500011444091797

Token 345: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01972966268658638
    2. ' for' → logprob: -4.6447296142578125
    3. 'for' → logprob: -4.6447296142578125
    4. ']+=' → logprob: -8.519729614257812
    5. ' ]' → logprob: -9.644729614257812
    6. ')' → logprob: -11.019729614257812
    7. ']*' → logprob: -11.769729614257812
    8. '   ' → logprob: -12.144729614257812
    9. ']=' → logprob: -12.394729614257812
    10. ']+' → logprob: -12.644729614257812

Token 346: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0007194612408056855
    2. '(cnt' → logprob: -7.2507195472717285
    3. ' cnt' → logprob: -11.62571907043457
    4. '[cnt' → logprob: -15.87571907043457
    5. '	cnt' → logprob: -16.00071907043457
    6. '   ' → logprob: -16.25071907043457
    7. 'count' → logprob: -16.50071907043457
    8. '(' → logprob: -16.62571907043457
    9. 'len' → logprob: -18.00071907043457
    10. ' (' → logprob: -18.50071907043457

Token 347: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016860006377100945
    2. 'for' → logprob: -4.391860008239746
    3. ' for' → logprob: -6.016860008239746
    4. '<|end|>' → logprob: -6.516860008239746
    5. '       ' → logprob: -8.891860008239746
    6. '
' → logprob: -9.516860008239746
    7. '<|end|>' → logprob: -10.016860008239746
    8. ' 
' → logprob: -10.016860008239746
    9. '\n' → logprob: -10.516860008239746
    10. '  
' → logprob: -10.766860008239746

Token 348: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7866628170013428
    2. ' for' → logprob: -1.0366628170013428
    3. '<|end|>' → logprob: -1.9116628170013428
    4. '
' → logprob: -3.5366628170013428
    5. '       ' → logprob: -4.786663055419922
    6. '<|end|>' → logprob: -5.911663055419922
    7. '   ' → logprob: -7.161663055419922
    8. '	for' → logprob: -7.661663055419922
    9. ')' → logprob: -8.661663055419922
    10. '        
' → logprob: -9.161663055419922

Token 349: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2576272487640381
    2. ' for' → logprob: -2.007627248764038
    3. '       ' → logprob: -2.382627248764038
    4. '
' → logprob: -8.382627487182617
    5. '   ' → logprob: -8.507627487182617
    6. '        
' → logprob: -10.632627487182617
    7. '	for' → logprob: -10.882627487182617
    8. '<|end|>' → logprob: -11.007627487182617
    9. '```' → logprob: -13.382627487182617
    10. '    
' → logprob: -13.382627487182617

Token 350: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09438519924879074
    2. 'a' → logprob: -3.4693851470947266
    3. ' A' → logprob: -3.5943851470947266
    4. '(A' → logprob: -4.344385147094727
    5. 'u' → logprob: -4.469385147094727
    6. ' (' → logprob: -5.469385147094727
    7. '(u' → logprob: -6.969385147094727
    8. ' u' → logprob: -7.594385147094727
    9. '(a' → logprob: -7.594385147094727
    10. ' a' → logprob: -7.969385147094727

Token 351: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20316439867019653
    2. ',B' → logprob: -1.8281643390655518
    3. ',b' → logprob: -4.203164577484131
    4. ',A' → logprob: -5.578164577484131
    5. ',a' → logprob: -6.828164577484131
    6. ' ,' → logprob: -7.078164577484131
    7. ',v' → logprob: -7.953164577484131
    8. ',e' → logprob: -7.953164577484131
    9. ',in' → logprob: -8.203164100646973
    10. ',p' → logprob: -8.203164100646973

Token 352: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.061413250863552094
    2. 'in' → logprob: -3.186413288116455
    3. '.append' → logprob: -4.936413288116455
    4. '   ' → logprob: -5.186413288116455
    5. '.' → logprob: -6.436413288116455
    6. ':' → logprob: -7.186413288116455
    7. ')' → logprob: -7.186413288116455
    8. '       ' → logprob: -7.186413288116455
    9. ':
' → logprob: -7.436413288116455
    10. ',' → logprob: -8.436412811279297

Token 353: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0024257178883999586
    2. ' cross' → logprob: -6.377425670623779
    3. 'edges' → logprob: -7.252425670623779
    4. ' edges' → logprob: -11.377426147460938
    5. '   ' → logprob: -13.377426147460938
    6. 'c' → logprob: -14.252426147460938
    7. ' ' → logprob: -15.252426147460938
    8. 'edge' → logprob: -16.252426147460938
    9. 'range' → logprob: -16.377426147460938
    10. '
' → logprob: -16.502426147460938

Token 354: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11406002938747406
    2. ':' → logprob: -2.2390599250793457
    3. '):
' → logprob: -7.614059925079346
    4. ']:
' → logprob: -7.614059925079346
    5. ']:' → logprob: -8.989060401916504
    6. '):' → logprob: -9.489060401916504
    7. '   ' → logprob: -11.114060401916504
    8. ']' → logprob: -11.364060401916504
    9. ':
' → logprob: -11.614060401916504
    10. '():
' → logprob: -12.239060401916504

Token 355: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35081520676612854
    2. '           ' → logprob: -1.2258151769638062
    3. '       ' → logprob: -6.100815296173096
    4. '
' → logprob: -9.600814819335938
    5. ',' → logprob: -11.100814819335938
    6. '	   ' → logprob: -11.975814819335938
    7. ':
' → logprob: -12.100814819335938
    8. '```' → logprob: -12.225814819335938
    9. '    
' → logprob: -12.350814819335938
    10. '):
' → logprob: -12.600814819335938

Token 356: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.20008286833763123
    2. ' adj' → logprob: -1.9500828981399536
    3. '           ' → logprob: -3.825082778930664
    4. '   ' → logprob: -4.075082778930664
    5. '       ' → logprob: -8.325082778930664
    6. 'ad' → logprob: -11.575082778930664
    7. ' ' → logprob: -12.450082778930664
    8. ' adjacency' → logprob: -13.075082778930664
    9. '(adj' → logprob: -13.075082778930664
    10. '               ' → logprob: -13.700082778930664

Token 357: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -5.371605948312208e-05
    2. 'A' → logprob: -9.875053405761719
    3. '[' → logprob: -13.500053405761719
    4. '[B' → logprob: -14.375053405761719
    5. '[a' → logprob: -16.00005340576172
    6. '```' → logprob: -16.75005340576172
    7. '=A' → logprob: -17.37505340576172
    8. '   ' → logprob: -18.00005340576172
    9. ')[' → logprob: -18.62505340576172
    10. '	A' → logprob: -18.87505340576172

Token 358: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.16319844126701355
    2. '.append' → logprob: -1.913198471069336
    3. '.' → logprob: -5.913198471069336
    4. ').' → logprob: -8.663198471069336
    5. '   ' → logprob: -9.538198471069336
    6. '.app' → logprob: -12.038198471069336
    7. ' .' → logprob: -12.288198471069336
    8. ' ].' → logprob: -12.538198471069336
    9. ']' → logprob: -13.413198471069336
    10. ' ' → logprob: -13.788198471069336

Token 359: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. '.append' → logprob: -15.250000953674316
    3. ' append' → logprob: -15.250000953674316
    4. 'appen' → logprob: -21.125
    5. 'app' → logprob: -21.25
    6. '_append' → logprob: -22.25
    7. 'push' → logprob: -22.5
    8. 'Append' → logprob: -22.5
    9. '	append' → logprob: -22.75
    10. 'add' → logprob: -22.875

Token 360: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -1.318681188422488e-05
    2. 'B' → logprob: -11.25001335144043
    3. '(' → logprob: -16.62501335144043
    4. '	B' → logprob: -18.25001335144043
    5. '[B' → logprob: -19.37501335144043
    6. '(b' → logprob: -19.50001335144043
    7. ' B' → logprob: -19.75001335144043
    8. '(
' → logprob: -20.00001335144043
    9. ',B' → logprob: -20.37501335144043
    10. '((' → logprob: -20.62501335144043

Token 361: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932184100151062
    2. ')
' → logprob: -0.6932184100151062
    3. ')
' → logprob: -10.068218231201172
    4. '           ' → logprob: -10.693218231201172
    5. ' )
' → logprob: -12.818218231201172
    6. ' )' → logprob: -13.193218231201172
    7. '       ' → logprob: -14.193218231201172
    8. '),' → logprob: -15.318218231201172
    9. ')

' → logprob: -15.693218231201172
    10. '   ' → logprob: -15.943218231201172

Token 362: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.126521035796031e-05
    2. 'adj' → logprob: -10.375091552734375
    3. '   ' → logprob: -10.625091552734375
    4. '       ' → logprob: -10.750091552734375
    5. ' adj' → logprob: -11.500091552734375
    6. ',' → logprob: -13.375091552734375
    7. '<|end|>' → logprob: -14.000091552734375
    8. ' ' → logprob: -14.500091552734375
    9. '               ' → logprob: -14.750091552734375
    10. '```' → logprob: -15.875091552734375

Token 363: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.7008841037750244
    2. 'adj' (adapté à ' adj') → logprob: -0.7008841037750244
    3. '   ' → logprob: -5.200883865356445
    4. '           ' → logprob: -6.200883865356445
    5. ' ' → logprob: -10.075883865356445
    6. '       ' → logprob: -10.075883865356445
    7. ' ' → logprob: -10.825883865356445
    8. ' 
' → logprob: -11.450883865356445
    9. 'ad' → logprob: -11.700883865356445
    10. '
' → logprob: -11.700883865356445

Token 364: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.3486805558204651
    2. '[A' → logprob: -1.2236804962158203
    3. '[' → logprob: -8.47368049621582
    4. '```' → logprob: -11.97368049621582
    5. '[a' → logprob: -12.72368049621582
    6. 'B' → logprob: -12.84868049621582
    7. 'A' → logprob: -12.97368049621582
    8. '[S' → logprob: -13.22368049621582
    9. '[
' → logprob: -13.47368049621582
    10. '[C' → logprob: -13.97368049621582

Token 365: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.043831974267959595
    2. ').' → logprob: -3.2938320636749268
    3. '.append' → logprob: -5.168831825256348
    4. '.' → logprob: -9.668831825256348
    5. '[A' → logprob: -12.293831825256348
    6. '}.' → logprob: -12.668831825256348
    7. '           ' → logprob: -12.793831825256348
    8. '   ' → logprob: -13.043831825256348
    9. ''].' → logprob: -13.293831825256348
    10. '[' → logprob: -13.918831825256348

Token 366: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. '.append' → logprob: -15.625000953674316
    3. ' append' → logprob: -15.625000953674316
    4. 'appen' → logprob: -16.375
    5. 'adj' → logprob: -17.75
    6. 'app' → logprob: -19.375
    7. '```' → logprob: -19.875
    8. '	append' → logprob: -20.25
    9. 'add' → logprob: -21.25
    10. 'insert' → logprob: -21.625

Token 367: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00020449401927180588
    2. 'A' → logprob: -8.500204086303711
    3. '(' → logprob: -14.625204086303711
    4. '(
' → logprob: -14.875204086303711
    5. ' A' → logprob: -17.37520408630371
    6. '   ' → logprob: -17.62520408630371
    7. '[A' → logprob: -18.37520408630371
    8. ' (' → logprob: -18.75020408630371
    9. '	A' → logprob: -19.25020408630371
    10. '(a' → logprob: -19.50020408630371

Token 368: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012701898231171072
    2. ')
' → logprob: -9.000126838684082
    3. '<|end|>' → logprob: -13.625126838684082
    4. '           ' → logprob: -13.875126838684082
    5. '       ' → logprob: -14.125126838684082
    6. ' )' → logprob: -15.125126838684082
    7. '),' → logprob: -16.3751277923584
    8. ')

' → logprob: -16.7501277923584
    9. ')
' → logprob: -16.7501277923584
    10. ')return' → logprob: -16.8751277923584

Token 369: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 370: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' (adapté à ' deg') → logprob: -0.0004341261519584805
    2. ' deg' → logprob: -8.375433921813965
    3. '           ' → logprob: -8.875433921813965
    4. '       ' → logprob: -9.750433921813965
    5. '```' → logprob: -13.375433921813965
    6. 'for' → logprob: -13.500433921813965
    7. '   ' → logprob: -13.875433921813965
    8. 'def' → logprob: -14.875433921813965
    9. 'import' → logprob: -15.000433921813965
    10. '
' → logprob: -15.125433921813965

Token 371: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.00010413920972496271
    2. '[' → logprob: -9.250103950500488
    3. '[B' → logprob: -13.000103950500488
    4. 'A' → logprob: -13.000103950500488
    5. '[a' → logprob: -13.625103950500488
    6. ' [' → logprob: -13.750103950500488
    7. '=A' → logprob: -15.125103950500488
    8. '```' → logprob: -15.250103950500488
    9. '[
' → logprob: -15.875103950500488
    10. ' A' → logprob: -16.500104904174805

Token 372: ']+=' (ID: 123635)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2546183168888092
    2. ']+=' → logprob: -1.5046182870864868
    3. ')' → logprob: -6.379618167877197
    4. '+=' → logprob: -7.254618167877197
    5. '[' → logprob: -8.879618644714355
    6. ']+' → logprob: -9.754618644714355
    7. '   ' → logprob: -10.379618644714355
    8. ' +=' → logprob: -11.129618644714355
    9. ' ]' → logprob: -11.129618644714355
    10. '+' → logprob: -11.379618644714355

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '+' → logprob: -17.00009536743164
    4. '   ' → logprob: -17.50009536743164
    5. '
' → logprob: -18.56259536743164
    6. '```' → logprob: -18.81259536743164
    7. '  ' → logprob: -18.93759536743164
    8. '１' → logprob: -19.50009536743164
    9. ' ' → logprob: -19.68759536743164
    10. '(' → logprob: -20.06259536743164

Token 374: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019781860464718193
    2. 'deg' → logprob: -9.500197410583496
    3. ' deg' → logprob: -10.000197410583496
    4. '       ' → logprob: -10.625197410583496
    5. ',' → logprob: -11.000197410583496
    6. '<|end|>' → logprob: -11.375197410583496
    7. '          ' → logprob: -12.125197410583496
    8. '   ' → logprob: -12.125197410583496
    9. '<|end|>' → logprob: -12.125197410583496
    10. '               ' → logprob: -13.125197410583496

Token 375: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005844878032803535
    2. '       ' → logprob: -8.250584602355957
    3. ' deg' → logprob: -9.375584602355957
    4. '   ' → logprob: -9.375584602355957
    5. 'deg' → logprob: -9.625584602355957
    6. '<|end|>' → logprob: -10.250584602355957
    7. '          ' → logprob: -11.000584602355957
    8. '         ' → logprob: -12.000584602355957
    9. ',' → logprob: -12.000584602355957
    10. '<|end|>' → logprob: -12.125584602355957

Token 376: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' (adapté à ' deg') → logprob: -0.0015028368216007948
    2. ' deg' → logprob: -6.501502990722656
    3. '   ' → logprob: -15.001502990722656
    4. 'de' → logprob: -17.126502990722656
    5. '           ' → logprob: -17.751502990722656
    6. '1' → logprob: -18.126502990722656
    7. '	de' → logprob: -18.251502990722656
    8. '       ' → logprob: -18.501502990722656
    9. '
' → logprob: -18.626502990722656
    10. ' ' → logprob: -19.251502990722656

Token 377: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.00015419373812619597
    2. 'B' → logprob: -9.500154495239258
    3. '[' → logprob: -9.625154495239258
    4. '```' → logprob: -12.625154495239258
    5. '[A' → logprob: -12.750154495239258
    6. '=B' → logprob: -13.250154495239258
    7. '+B' → logprob: -13.625154495239258
    8. '(B' → logprob: -14.250154495239258
    9. ' ' → logprob: -14.500154495239258
    10. '+=' → logprob: -14.500154495239258

Token 378: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.024150526151061058
    2. '+=' → logprob: -4.274150371551514
    3. ']' → logprob: -4.649150371551514
    4. ')' → logprob: -8.024150848388672
    5. ']+' → logprob: -11.024150848388672
    6. '+' → logprob: -11.774150848388672
    7. '   ' → logprob: -12.149150848388672
    8. ')+' → logprob: -12.774150848388672
    9. ' +=' → logprob: -12.899150848388672
    10. '```' → logprob: -13.274150848388672

Token 379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '+' → logprob: -18.812501907348633
    4. '１' → logprob: -18.875001907348633
    5. '```' → logprob: -18.875001907348633
    6. '۱' → logprob: -18.937501907348633
    7. '   ' → logprob: -19.187501907348633
    8. '=' → logprob: -19.250001907348633
    9. '0' → logprob: -19.500001907348633
    10. '2' → logprob: -19.750001907348633

Token 380: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9237119555473328
    2. 'visited' → logprob: -1.2987120151519775
    3. '```' → logprob: -2.5487120151519775
    4. 'color' → logprob: -2.5487120151519775
    5. 'from' → logprob: -2.7987120151519775
    6. '
' → logprob: -3.1737120151519775
    7. '<|end|>' → logprob: -3.7987120151519775
    8. '   ' → logprob: -3.9237120151519775
    9. ' visited' → logprob: -5.173711776733398
    10. '        
' → logprob: -5.548711776733398

Token 382: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' (adapté à ' color') → logprob: -0.026376357302069664
    2. ' color' → logprob: -5.026376247406006
    3. 'visited' → logprob: -5.026376247406006
    4. '       ' → logprob: -5.276376247406006
    5. 'colors' → logprob: -5.526376247406006
    6. 'from' → logprob: -5.776376247406006
    7. ' visited' → logprob: -8.651376724243164
    8. '
' → logprob: -8.776376724243164
    9. 'import' → logprob: -9.651376724243164
    10. ' from' → logprob: -9.901376724243164

Token 383: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005937448237091303
    2. '=' → logprob: -5.130937576293945
    3. '=[' → logprob: -12.255937576293945
    4. '[' → logprob: -13.380937576293945
    5. '=[]' → logprob: -14.380937576293945
    6. 's' → logprob: -14.505937576293945
    7. ' ' → logprob: -14.880937576293945
    8. ' =[' → logprob: -15.130937576293945
    9. ',' → logprob: -15.255937576293945
    10. '   ' → logprob: -15.755937576293945

Token 384: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0002831464516930282
    2. '[' → logprob: -8.500283241271973
    3. '{}' → logprob: -9.500283241271973
    4. ' [-' → logprob: -12.250283241271973
    5. '   ' → logprob: -18.125282287597656
    6. ' [' → logprob: -18.625282287597656
    7. '{-' → logprob: -18.750282287597656
    8. '{' → logprob: -19.500282287597656
    9. '-' → logprob: -20.000282287597656
    10. '[a' → logprob: -20.125282287597656

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.5
    3. ' ' → logprob: -17.875
    4. '１' → logprob: -19.25
    5. '   ' → logprob: -19.625
    6. '-' → logprob: -21.0
    7. '۱' → logprob: -21.125
    8. '```' → logprob: -21.5
    9. '10' → logprob: -21.5625
    10. '
' → logprob: -21.8125

Token 386: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2628873288631439
    2. ' for' → logprob: -1.7628873586654663
    3. ']*' → logprob: -3.2628872394561768
    4. 'for' → logprob: -4.012887477874756
    5. '(cnt' → logprob: -6.762887477874756
    6. '       ' → logprob: -7.637887477874756
    7. ']*(' → logprob: -8.137887001037598
    8. '][' → logprob: -8.137887001037598
    9. '[cnt' → logprob: -8.262887001037598
    10. ' ]' → logprob: -8.262887001037598

Token 387: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -2.696889623621246e-06
    2. '(cnt' → logprob: -13.00000286102295
    3. ' cnt' → logprob: -14.75000286102295
    4. 'count' → logprob: -18.875001907348633
    5. '[cnt' → logprob: -19.125001907348633
    6. '	cnt' → logprob: -19.250001907348633
    7. '   ' → logprob: -20.625001907348633
    8. '(' → logprob: -20.750001907348633
    9. '       ' → logprob: -22.500001907348633
    10. '_cnt' → logprob: -22.875001907348633

Token 388: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1693604439496994
    2. '<|end|>' → logprob: -1.9193603992462158
    3. 'def' → logprob: -5.419360637664795
    4. '<|end|>' → logprob: -5.544360637664795
    5. 'for' → logprob: -8.919360160827637
    6. '       ' → logprob: -9.169360160827637
    7. ' def' → logprob: -9.294360160827637
    8. '
' → logprob: -9.419360160827637
    9. ' for' → logprob: -9.794360160827637
    10. '[' → logprob: -10.044360160827637

Token 389: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36307650804519653
    2. ' def' → logprob: -1.8630764484405518
    3. '
' → logprob: -2.6130764484405518
    4. '<|end|>' → logprob: -3.1130764484405518
    5. '       ' → logprob: -4.238076686859131
    6. ' for' → logprob: -5.613076686859131
    7. '        
' → logprob: -5.738076686859131
    8. '    
' → logprob: -5.988076686859131
    9. '   ' → logprob: -5.988076686859131
    10. '	def' → logprob: -6.613076686859131

Token 390: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.024336349219083786
    2. 'from' → logprob: -3.774336338043213
    3. '   ' → logprob: -7.399336338043213
    4. '       ' → logprob: -8.649336814880371
    5. 'for' → logprob: -9.024336814880371
    6. ' def' → logprob: -9.399336814880371
    7. 'import' → logprob: -9.774336814880371
    8. 'stack' → logprob: -10.399336814880371
    9. ' from' → logprob: -11.524336814880371
    10. '
' → logprob: -13.899336814880371

Token 391: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.10157734900712967
    2. 'dfs' → logprob: -2.3515772819519043
    3. ' bfs' → logprob: -6.601577281951904
    4. 'b' → logprob: -11.726577758789062
    5. 'color' → logprob: -13.476577758789062
    6. ' color' → logprob: -13.851577758789062
    7. ' bip' → logprob: -14.601577758789062
    8. ' ' → logprob: -15.476577758789062
    9. 'DFS' → logprob: -16.101577758789062
    10. ' DFS' → logprob: -16.476577758789062

Token 392: '_color' (ID: 15576)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.051236528903245926
    2. '(v' → logprob: -3.676236629486084
    3. '(node' → logprob: -4.426236629486084
    4. '(' → logprob: -4.676236629486084
    5. '_color' → logprob: -6.676236629486084
    6. '(color' → logprob: -7.176236629486084
    7. 'color' → logprob: -7.676236629486084
    8. ' (' → logprob: -7.676236629486084
    9. '(
' → logprob: -9.426236152648926
    10. '(vertex' → logprob: -9.551236152648926

Token 393: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.25346606969833374
    2. '(v' → logprob: -1.5034661293029785
    3. '(node' → logprob: -6.5034661293029785
    4. '(' → logprob: -11.37846565246582
    5. '(x' → logprob: -11.87846565246582
    6. ' (' → logprob: -12.12846565246582
    7. '(n' → logprob: -12.37846565246582
    8. '(
' → logprob: -13.12846565246582
    9. '(i' → logprob: -13.12846565246582
    10. '(s' → logprob: -13.12846565246582

Token 394: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005847262218594551
    2. ',u' → logprob: -7.500584602355957
    3. ' ,' → logprob: -10.375584602355957
    4. ',v' → logprob: -15.000584602355957
    5. 'u' → logprob: -16.375585556030273
    6. ',k' → logprob: -16.875585556030273
    7. '(u' → logprob: -17.500585556030273
    8. ',
' → logprob: -17.875585556030273
    9. ',color' → logprob: -18.125585556030273
    10. '   ' → logprob: -18.375585556030273

Token 395: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014219212345778942
    2. '):' → logprob: -4.264219284057617
    3. '):
' → logprob: -10.764219284057617
    4. '   ' → logprob: -11.139219284057617
    5. ':' → logprob: -12.389219284057617
    6. '):

' → logprob: -12.514219284057617
    7. '=' → logprob: -12.514219284057617
    8. ' ):
' → logprob: -13.514219284057617
    9. ',' → logprob: -13.639219284057617
    10. '       ' → logprob: -13.764219284057617

Token 396: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1691591441631317
    2. '       ' → logprob: -2.294159173965454
    3. ' color' → logprob: -3.794159173965454
    4. 'color' → logprob: -4.919158935546875
    5. '=color' → logprob: -5.169158935546875
    6. ':' → logprob: -5.419158935546875
    7. '<|end|>' → logprob: -5.794158935546875
    8. '	color' → logprob: -5.794158935546875
    9. '[color' → logprob: -5.794158935546875
    10. '
' → logprob: -6.419158935546875

Token 397: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' (adapté à ' color') → logprob: -0.04560203105211258
    2. ' color' → logprob: -3.2956020832061768
    3. '   ' → logprob: -4.920601844787598
    4. '	color' → logprob: -8.795601844787598
    5. '       ' → logprob: -9.545601844787598
    6. 'stack' → logprob: -12.795601844787598
    7. '
' → logprob: -13.295601844787598
    8. ',color' → logprob: -13.420601844787598
    9. '           ' → logprob: -13.545601844787598
    10. '    ' → logprob: -13.920601844787598

Token 398: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.319370302458992e-06
    2. '[' → logprob: -12.625005722045898
    3. '=' → logprob: -14.000005722045898
    4. ' [' → logprob: -14.875005722045898
    5. '=u' → logprob: -15.500005722045898
    6. ')' → logprob: -15.750005722045898
    7. 'u' → logprob: -15.750005722045898
    8. ' =' → logprob: -16.5000057220459
    9. '[user' → logprob: -16.5000057220459
    10. '(u' → logprob: -16.7500057220459

Token 399: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07358190417289734
    2. ')' → logprob: -3.3235819339752197
    3. ' =' → logprob: -3.4485819339752197
    4. ')=' → logprob: -5.823581695556641
    5. ']=' → logprob: -9.82358169555664
    6. ']' → logprob: -10.07358169555664
    7. '=c' → logprob: -10.57358169555664
    8. '=u' → logprob: -10.57358169555664
    9. '=
' → logprob: -12.07358169555664
    10. ' )' → logprob: -12.82358169555664

Token 400: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019313741941004992
    2. ' =' → logprob: -6.251931190490723
    3. '=
' → logprob: -13.501931190490723
    4. '=c' → logprob: -13.626931190490723
    5. '=u' → logprob: -16.62693214416504
    6. '＝' → logprob: -18.00193214416504
    7. ')=' → logprob: -18.12693214416504
    8. '=

' → logprob: -18.12693214416504
    9. '=color' → logprob: -18.50193214416504
    10. ')' → logprob: -18.62693214416504

Token 401: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.15310683415737e-05
    2. ' c' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.87502098083496
    4. '	c' → logprob: -20.87502098083496
    5. '
' → logprob: -21.25002098083496
    6. ')c' → logprob: -21.25002098083496
    7. ' ' → logprob: -21.87502098083496
    8. '```' → logprob: -23.87502098083496
    9. '$c' → logprob: -24.00002098083496
    10. '       ' → logprob: -24.37502098083496

Token 402: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02796505019068718
    2. '<|end|>' → logprob: -3.6529650688171387
    3. '<|end|>' → logprob: -7.027965068817139
    4. '       ' → logprob: -8.02796459197998
    5. ')' → logprob: -9.15296459197998
    6. '
' → logprob: -9.27796459197998
    7. '\n' → logprob: -9.77796459197998
    8. '  
' → logprob: -9.90296459197998
    9. ')
' → logprob: -10.52796459197998
    10. ' 
' → logprob: -10.77796459197998

Token 403: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10621422529220581
    2. '<|end|>' → logprob: -2.4812142848968506
    3. '   ' → logprob: -4.4812140464782715
    4. ' for' → logprob: -6.6062140464782715
    5. '<|end|>' → logprob: -6.6062140464782715
    6. '       ' → logprob: -6.7312140464782715
    7. '
' → logprob: -7.6062140464782715
    8. '    
' → logprob: -7.8562140464782715
    9. '  
' → logprob: -8.10621452331543
    10. ' 
' → logprob: -8.85621452331543

Token 404: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0070052058435976505
    2. ' for' → logprob: -5.007005214691162
    3. '   ' → logprob: -8.257004737854004
    4. '           ' → logprob: -10.507004737854004
    5. '	for' → logprob: -13.132004737854004
    6. '       ' → logprob: -13.882004737854004
    7. '```' → logprob: -17.88200569152832
    8. '
' → logprob: -18.25700569152832
    9. ' ' → logprob: -18.38200569152832
    10. '               ' → logprob: -18.50700569152832

Token 405: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00016659092216286808
    2. ' v' → logprob: -8.750166893005371
    3. 'w' → logprob: -11.750166893005371
    4. 'nv' → logprob: -15.625166893005371
    5. '(v' → logprob: -16.250165939331055
    6. 'nx' → logprob: -17.125165939331055
    7. '	v' → logprob: -18.000165939331055
    8. '```' → logprob: -18.750165939331055
    9. '[v' → logprob: -18.875165939331055
    10. ' w' → logprob: -19.000165939331055

Token 406: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06200386956334114
    2. 'in' → logprob: -2.8120038509368896
    3. '	in' → logprob: -10.562004089355469
    4. ' ' → logprob: -12.562004089355469
    5. ',' → logprob: -12.687004089355469
    6. ',in' → logprob: -13.312004089355469
    7. ' ,' → logprob: -14.562004089355469
    8. '<|end|>' → logprob: -14.937004089355469
    9. ')' → logprob: -15.812004089355469
    10. 'In' → logprob: -15.937004089355469

Token 407: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0002614550176076591
    2. ' adj' → logprob: -8.250261306762695
    3. '(adj' → logprob: -16.125261306762695
    4. 'ad' → logprob: -16.250261306762695
    5. 'adm' → logprob: -19.625261306762695
    6. 'aj' → logprob: -21.625261306762695
    7. '   ' → logprob: -22.750261306762695
    8. '
' → logprob: -23.000261306762695
    9. 'Adj' → logprob: -23.500261306762695
    10. '_adj' → logprob: -23.625261306762695

Token 408: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.320199877838604e-07
    2. 'u' → logprob: -14.75
    3. '[' → logprob: -18.75
    4. '(u' → logprob: -20.25
    5. '	u' → logprob: -21.875
    6. '[v' → logprob: -22.125
    7. '[
' → logprob: -22.25
    8. ',u' → logprob: -22.25
    9. ' u' → logprob: -22.375
    10. ']' → logprob: -22.5

Token 409: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3994900584220886
    2. ']:' → logprob: -1.1494901180267334
    3. '):
' → logprob: -5.524489879608154
    4. ':' → logprob: -5.649489879608154
    5. ']' → logprob: -5.649489879608154
    6. '):' → logprob: -7.149489879608154
    7. ':
' → logprob: -7.899489879608154
    8. ']:
' → logprob: -8.649490356445312
    9. ']:

' → logprob: -10.149490356445312
    10. ']==' → logprob: -10.899490356445312

Token 410: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027595835272222757
    2. '<|end|>' → logprob: -6.2527594566345215
    3. ' if' → logprob: -8.37775993347168
    4. '                
' → logprob: -8.62775993347168
    5. ',' → logprob: -9.12775993347168
    6. '           ' → logprob: -9.62775993347168
    7. '<|end|>' → logprob: -9.62775993347168
    8. ' 
' → logprob: -10.25275993347168
    9. '	           ' → logprob: -10.75275993347168
    10. ' ' → logprob: -11.00275993347168

Token 411: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6600895524024963
    2. '               ' → logprob: -0.9100895524024963
    3. 'if' (adapté à ' if') → logprob: -2.5350894927978516
    4. '                   ' → logprob: -7.160089492797852
    5. '
' → logprob: -8.285089492797852
    6. '                ' → logprob: -8.910089492797852
    7. '	if' → logprob: -9.785089492797852
    8. '```' → logprob: -10.410089492797852
    9. '                
' → logprob: -10.410089492797852
    10. '<|end|>' → logprob: -10.535089492797852

Token 412: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.014163863845169544
    2. ' color' → logprob: -4.264163970947266
    3. 'v' → logprob: -15.389163970947266
    4. '   ' → logprob: -17.139163970947266
    5. '(color' → logprob: -17.139163970947266
    6. '	color' → logprob: -17.514163970947266
    7. 'olor' → logprob: -18.014163970947266
    8. ' ' → logprob: -18.764163970947266
    9. '=color' → logprob: -18.764163970947266
    10. 'c' → logprob: -19.139163970947266

Token 413: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00020616286201402545
    2. '[u' → logprob: -8.500205993652344
    3. 'v' → logprob: -13.125205993652344
    4. ' [' → logprob: -15.250205993652344
    5. ' v' → logprob: -15.625205993652344
    6. '[' → logprob: -15.750205993652344
    7. '	v' → logprob: -18.750205993652344
    8. ')v' → logprob: -18.750205993652344
    9. '][' → logprob: -18.875205993652344
    10. '==' → logprob: -18.875205993652344

Token 414: ']<' (ID: 80424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.49502459168434143
    2. '==' → logprob: -0.995024561882019
    3. '==-' → logprob: -4.370024681091309
    4. ')' → logprob: -5.620024681091309
    5. ']==' → logprob: -5.995024681091309
    6. ')==' → logprob: -6.370024681091309
    7. '()==' → logprob: -9.870024681091309
    8. '']==' → logprob: -10.120024681091309
    9. ' ' → logprob: -10.245024681091309
    10. ']' → logprob: -10.370024681091309

Token 415: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026753442944027483
    2. ' ' → logprob: -8.25026798248291
    3. '>' → logprob: -13.12526798248291
    4. '<|end|>' → logprob: -13.62526798248291
    5. '=' → logprob: -14.00026798248291
    6. '```' → logprob: -14.12526798248291
    7. '1' → logprob: -14.50026798248291
    8. '|' → logprob: -15.25026798248291
    9. '<|end|>' → logprob: -16.375267028808594
    10. ':' → logprob: -16.500267028808594

Token 416: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.038251135498285294
    2. ':' → logprob: -3.9132511615753174
    3. '                   ' → logprob: -4.288250923156738
    4. '               ' → logprob: -5.913250923156738
    5. ' or' → logprob: -8.038250923156738
    6. '                       ' → logprob: -8.288250923156738
    7. '           ' → logprob: -8.663250923156738
    8. ' :
' → logprob: -9.288250923156738
    9. ':return' → logprob: -9.538250923156738
    10. ' and' → logprob: -10.038250923156738

Token 417: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01453707180917263
    2. '                       ' → logprob: -5.0145368576049805
    3. '               ' → logprob: -5.1395368576049805
    4. ':
' → logprob: -6.8895368576049805
    5. '
' → logprob: -8.88953685760498
    6. ',' → logprob: -9.26453685760498
    7. '<|end|>' → logprob: -9.26453685760498
    8. '           ' → logprob: -9.38953685760498
    9. ' return' → logprob: -9.63953685760498
    10. '```' → logprob: -9.88953685760498

Token 418: ' if' (ID: 538)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0314500629901886
    2. ' dfs' → logprob: -3.531450033187866
    3. '                   ' → logprob: -6.531450271606445
    4. '                       ' → logprob: -8.656450271606445
    5. '               ' → logprob: -10.031450271606445
    6. 'if' (adapté à ' if') → logprob: -11.406450271606445
    7. '           ' → logprob: -13.156450271606445
    8. 'd' → logprob: -13.406450271606445
    9. '                    ' → logprob: -13.531450271606445
    10. ' if' → logprob: -13.781450271606445

Token 419: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.17642977833747864
    2. ' not' → logprob: -1.9264297485351562
    3. 'dfs' → logprob: -4.176429748535156
    4. ' dfs' → logprob: -7.301429748535156
    5. '!' → logprob: -11.051429748535156
    6. '(not' → logprob: -11.676429748535156
    7. '   ' → logprob: -11.676429748535156
    8. '```' → logprob: -12.426429748535156
    9. '	not' → logprob: -12.551429748535156
    10. '
' → logprob: -13.926429748535156

Token 420: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.03804183006286621
    2. ' dfs' → logprob: -3.288041830062866
    3. 'df' → logprob: -15.163042068481445
    4. 'd' → logprob: -16.788042068481445
    5. '
' → logprob: -17.413042068481445
    6. 'DFS' → logprob: -18.413042068481445
    7. ' ' → logprob: -18.788042068481445
    8. '   ' → logprob: -19.413042068481445
    9. ')' → logprob: -19.538042068481445
    10. '(d' → logprob: -19.788042068481445

Token 421: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -1.981667537620524e-06
    2. 'color' → logprob: -13.875001907348633
    3. '_' → logprob: -15.250001907348633
    4. '_col' → logprob: -15.875001907348633
    5. '_COLOR' → logprob: -16.625001907348633
    6. '_colour' → logprob: -16.875001907348633
    7. 'u' → logprob: -16.875001907348633
    8. ' _' → logprob: -17.125001907348633
    9. 'v' → logprob: -17.375001907348633
    10. '(v' → logprob: -17.375001907348633

Token 422: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -14.50000286102295
    4. '(
' → logprob: -16.500003814697266
    5. 'v' → logprob: -18.000003814697266
    6. '
' → logprob: -18.250003814697266
    7. '(u' → logprob: -18.625003814697266
    8. '[v' → logprob: -18.625003814697266
    9. '```' → logprob: -18.875003814697266
    10. ')' → logprob: -19.000003814697266

Token 423: ',c' (ID: 22261)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0005276533775031567
    2. ' (' → logprob: -8.875527381896973
    3. '(' → logprob: -9.375527381896973
    4. ',' → logprob: -9.500527381896973
    5. ',v' → logprob: -9.500527381896973
    6. ')(' → logprob: -9.750527381896973
    7. ')' → logprob: -9.750527381896973
    8. '
' → logprob: -11.750527381896973
    9. '(u' → logprob: -12.375527381896973
    10. ')v' → logprob: -12.500527381896973

Token 424: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.04863244667649269
    2. ' ^' → logprob: -3.0486323833465576
    3. '1' → logprob: -10.673632621765137
    4. '^(' → logprob: -11.673632621765137
    5. '   ' → logprob: -12.173632621765137
    6. ' ' → logprob: -13.548632621765137
    7. '^^' → logprob: -13.798632621765137
    8. ' xor' → logprob: -13.923632621765137
    9. '):
' → logprob: -14.298632621765137
    10. ')' → logprob: -14.298632621765137

Token 425: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -16.00000762939453
    4. '```' → logprob: -18.37500762939453
    5. '           ' → logprob: -19.50000762939453
    6. '  ' → logprob: -19.62500762939453
    7. '
' → logprob: -20.25000762939453
    8. '0' → logprob: -20.31250762939453
    9. '１' → logprob: -20.31250762939453
    10. ')' → logprob: -20.31250762939453

Token 426: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014878424815833569
    2. '):' → logprob: -4.264878273010254
    3. ')' → logprob: -7.889878273010254
    4. '):
' → logprob: -8.014878273010254
    5. '):

' → logprob: -12.514878273010254
    6. ' ):
' → logprob: -12.514878273010254
    7. '():
' → logprob: -14.514878273010254
    8. '   ' → logprob: -14.639878273010254
    9. ''):
' → logprob: -15.389878273010254
    10. '                       ' → logprob: -15.389878273010254

Token 427: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04422471672296524
    2. ':
' → logprob: -3.419224739074707
    3. ':' → logprob: -4.919224739074707
    4. ':return' → logprob: -5.919224739074707
    5. '):
' → logprob: -8.294224739074707
    6. '                   ' → logprob: -8.919224739074707
    7. '                               ' → logprob: -10.294224739074707
    8. '):' → logprob: -10.544224739074707
    9. '                           ' → logprob: -10.794224739074707
    10. '                      ' → logprob: -10.919224739074707

Token 428: ' return' (ID: 622)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.03351198881864548
    2. 'return' (adapté à ' return') → logprob: -3.5335118770599365
    3. ' return' → logprob: -6.408512115478516
    4. '                       ' → logprob: -6.908512115478516
    5. '                   ' → logprob: -7.283512115478516
    6. '                               ' → logprob: -8.783512115478516
    7. '
' → logprob: -9.283512115478516
    8. '                                   ' → logprob: -10.033512115478516
    9. '           ' → logprob: -10.283512115478516
    10. '               ' → logprob: -10.908512115478516

Token 429: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.547789674485102e-05
    2. ' False' → logprob: -10.250035285949707
    3. '(False' → logprob: -19.750036239624023
    4. 'True' → logprob: -21.250036239624023
    5. 'false' → logprob: -21.750036239624023
    6. '=False' → logprob: -22.500036239624023
    7. '   ' → logprob: -23.875036239624023
    8. 'FALSE' → logprob: -24.375036239624023
    9. '```' → logprob: -24.375036239624023
    10. '_false' → logprob: -24.500036239624023

Token 430: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32134100794792175
    2. '                   ' → logprob: -1.3213410377502441
    3. '           ' → logprob: -5.071341037750244
    4. '                       ' → logprob: -7.821341037750244
    5. '
' → logprob: -7.946341037750244
    6. 'return' → logprob: -8.071340560913086
    7. ')' → logprob: -8.696340560913086
    8. ' return' → logprob: -8.821340560913086
    9. '   ' → logprob: -9.196340560913086
    10. '       ' → logprob: -9.446340560913086

Token 431: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17312179505825043
    2. '                   ' → logprob: -1.9231218099594116
    3. '           ' → logprob: -4.423121929168701
    4. ' return' → logprob: -8.048121452331543
    5. '                       ' → logprob: -8.298121452331543
    6. 'return' → logprob: -9.048121452331543
    7. '       ' → logprob: -9.923121452331543
    8. '   ' → logprob: -10.798121452331543
    9. ',' → logprob: -11.173121452331543
    10. '```' → logprob: -11.923121452331543

Token 432: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3135225772857666
    2. '           ' → logprob: -1.4385225772857666
    3. 'return' → logprob: -3.5635225772857666
    4. ' return' → logprob: -6.3135223388671875
    5. '       ' → logprob: -7.5635223388671875
    6. 'else' → logprob: -7.5635223388671875
    7. '                   ' → logprob: -7.9385223388671875
    8. '
' → logprob: -9.188522338867188
    9. ' else' → logprob: -10.063522338867188
    10. '                       ' → logprob: -10.188522338867188

Token 433: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.001170460251159966
    2. ' color' → logprob: -6.751170635223389
    3. '(color' → logprob: -16.251171112060547
    4. '	color' → logprob: -16.501171112060547
    5. '   ' → logprob: -17.626171112060547
    6. ' ' → logprob: -17.876171112060547
    7. 'Color' → logprob: -18.001171112060547
    8. 'colors' → logprob: -18.376171112060547
    9. 'c' → logprob: -18.501171112060547
    10. '[color' → logprob: -18.501171112060547

Token 434: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.014166445471346378
    2. '[u' → logprob: -4.264166355133057
    3. 'v' → logprob: -12.889166831970215
    4. '[' → logprob: -15.639166831970215
    5. '==' → logprob: -16.2641658782959
    6. '```' → logprob: -16.5141658782959
    7. ' v' → logprob: -17.1391658782959
    8. 'u' → logprob: -17.3891658782959
    9. ')v' → logprob: -18.1391658782959
    10. '	v' → logprob: -18.1391658782959

Token 435: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.23910276591777802
    2. ']==' → logprob: -1.6141027212142944
    3. ' ==' → logprob: -4.989102840423584
    4. ']' → logprob: -5.489102840423584
    5. '[u' → logprob: -6.614102840423584
    6. '[' → logprob: -6.989102840423584
    7. ')==' → logprob: -8.864102363586426
    8. '[v' → logprob: -9.239102363586426
    9. '[]' → logprob: -10.239102363586426
    10. '']==' → logprob: -10.239102363586426

Token 436: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018419034779071808
    2. 'color' → logprob: -4.01841926574707
    3. ' c' → logprob: -8.51841926574707
    4. ' color' → logprob: -10.14341926574707
    5. 'u' → logprob: -10.76841926574707
    6. '   ' → logprob: -12.01841926574707
    7. ' ' → logprob: -14.64341926574707
    8. '	c' → logprob: -14.89341926574707
    9. ')c' → logprob: -15.26841926574707
    10. '```' → logprob: -15.51841926574707

Token 437: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.24835489690303802
    2. '                   ' → logprob: -1.8733549118041992
    3. '                       ' → logprob: -3.373354911804199
    4. ':return' → logprob: -4.123354911804199
    5. 'return' → logprob: -5.373354911804199
    6. ':' → logprob: -5.373354911804199
    7. '               ' → logprob: -5.998354911804199
    8. ' return' → logprob: -6.998354911804199
    9. '):
' → logprob: -6.998354911804199
    10. ')' → logprob: -6.998354911804199

Token 438: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01814994215965271
    2. '                       ' → logprob: -4.6431498527526855
    3. '                           ' → logprob: -5.1431498527526855
    4. ' return' → logprob: -6.7681498527526855
    5. '
' → logprob: -7.5181498527526855
    6. '           ' → logprob: -8.393150329589844
    7. 'return' → logprob: -8.518150329589844
    8. '               ' → logprob: -8.768150329589844
    9. '   ' → logprob: -10.018150329589844
    10. '                                           ' → logprob: -10.143150329589844

Token 439: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4073140323162079
    2. ' return' → logprob: -1.1573140621185303
    3. '                       ' → logprob: -4.157313823699951
    4. '                   ' → logprob: -5.407313823699951
    5. '               ' → logprob: -10.28231430053711
    6. '           ' → logprob: -10.78231430053711
    7. '
' → logprob: -11.15731430053711
    8. '   ' → logprob: -11.40731430053711
    9. '                           ' → logprob: -11.53231430053711
    10. '	return' → logprob: -12.15731430053711

Token 440: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.941850526549388e-06
    2. ' False' → logprob: -11.750007629394531
    3. 'True' → logprob: -18.75000762939453
    4. '(False' → logprob: -20.37500762939453
    5. '=False' → logprob: -23.00000762939453
    6. 'false' → logprob: -23.12500762939453
    7. '   ' → logprob: -24.62500762939453
    8. 'F' → logprob: -24.62500762939453
    9. '_false' → logprob: -24.75000762939453
    10. '.False' → logprob: -25.12500762939453

Token 441: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010650822659954429
    2. '               ' → logprob: -7.001065254211426
    3. 'return' → logprob: -9.876065254211426
    4. '       ' → logprob: -10.001065254211426
    5. ' return' → logprob: -11.001065254211426
    6. ',' → logprob: -11.376065254211426
    7. '
' → logprob: -11.751065254211426
    8. '                   ' → logprob: -12.001065254211426
    9. '   ' → logprob: -12.876065254211426
    10. '		' → logprob: -13.376065254211426

Token 442: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18037308752536774
    2. '               ' → logprob: -1.9303730726242065
    3. '       ' → logprob: -4.305373191833496
    4. '                   ' → logprob: -5.805373191833496
    5. '
' → logprob: -6.555373191833496
    6. ' return' → logprob: -7.180373191833496
    7. '                       ' → logprob: -7.930373191833496
    8. '   ' → logprob: -8.430373191833496
    9. 'return' → logprob: -8.555373191833496
    10. ',' → logprob: -9.055373191833496

Token 443: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018027013167738914
    2. '       ' → logprob: -4.518026828765869
    3. ' return' → logprob: -5.643026828765869
    4. 'return' (adapté à ' return') → logprob: -5.893026828765869
    5. '   ' → logprob: -7.643026828765869
    6. '	return' → logprob: -9.518027305603027
    7. '               ' → logprob: -10.143027305603027
    8. '
' → logprob: -10.643027305603027
    9. ',' → logprob: -11.643027305603027
    10. ':return' → logprob: -12.393027305603027

Token 444: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001170225441455841
    2. ' True' → logprob: -6.7511701583862305
    3. '(True' → logprob: -19.751171112060547
    4. 'False' → logprob: -20.626171112060547
    5. '=True' → logprob: -22.751171112060547
    6. 'true' → logprob: -23.126171112060547
    7. '   ' → logprob: -25.501171112060547
    8. 'TRUE' → logprob: -26.001171112060547
    9. '.True' → logprob: -26.001171112060547
    10. '_true' → logprob: -26.251171112060547

Token 445: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14389342069625854
    2. '<|end|>' → logprob: -2.7688934803009033
    3. ' for' → logprob: -3.1438934803009033
    4. 'for' → logprob: -4.518893241882324
    5. '   ' → logprob: -4.893893241882324
    6. '        
' → logprob: -5.518893241882324
    7. '
' → logprob: -6.268893241882324
    8. '<|end|>' → logprob: -7.018893241882324
    9. '    
' → logprob: -7.268893241882324
    10. '  
' → logprob: -7.768893241882324

Token 447: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.531477689743042
    2. ' for' → logprob: -1.531477689743042
    3. 'for' → logprob: -1.781477689743042
    4. 'if' → logprob: -4.281477928161621
    5. ' if' → logprob: -4.906477928161621
    6. 'def' → logprob: -6.531477928161621
    7. '   ' → logprob: -7.031477928161621
    8. '        
' → logprob: -7.406477928161621
    9. '
' → logprob: -7.531477928161621
    10. 'next' → logprob: -7.656477928161621

Token 448: ' Since' (ID: 12265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003130663186311722
    2. '       ' → logprob: -6.2531304359436035
    3. 'if' → logprob: -7.5031304359436035
    4. ' for' → logprob: -8.003130912780762
    5. '   ' → logprob: -9.253130912780762
    6. 'possible' → logprob: -10.003130912780762
    7. 'valid' → logprob: -10.378130912780762
    8. 'start' → logprob: -10.503130912780762
    9. 'ok' → logprob: -10.753130912780762
    10. 'color' → logprob: -11.003130912780762

Token 449: ' streets' (ID: 25360)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.24697665870189667
    2. 'not' → logprob: -3.121976613998413
    3. ' color' → logprob: -3.121976613998413
    4. 'color' → logprob: -3.121976613998413
    5. ' all' → logprob: -3.621976613998413
    6. ' True' → logprob: -3.996976613998413
    7. 'all' → logprob: -4.746976852416992
    8. ' len' → logprob: -5.496976852416992
    9. ' any' → logprob: -5.746976852416992
    10. '__' → logprob: -5.871976852416992

Token 450: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.4767622947692871
    2. ' are' → logprob: -1.476762294769287
    3. 'may' → logprob: -3.226762294769287
    4. 'have' → logprob: -3.601762294769287
    5. ' may' → logprob: -3.976762294769287
    6. 'can' → logprob: -4.226762294769287
    7. ' can' → logprob: -4.851762294769287
    8. ' have' → logprob: -5.226762294769287
    9. 'color' → logprob: -5.476762294769287
    10. ' is' → logprob: -5.476762294769287

Token 451: ' either' (ID: 4784)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12991304695606232
    2. 'either' → logprob: -3.004913091659546
    3. ' bip' → logprob: -4.004912853240967
    4. '   ' → logprob: -4.129912853240967
    5. 'a' → logprob: -4.754912853240967
    6. 'orth' → logprob: -5.254912853240967
    7. ' either' → logprob: -5.754912853240967
    8. 'in' → logprob: -6.004912853240967
    9. 'gu' → logprob: -6.254912853240967
    10. 'bi' → logprob: -6.504912853240967

Token 452: ' NS' (ID: 6950)
  Prédit: ' bip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bip' → logprob: -1.0507898330688477
    2. 'NS' → logprob: -1.3007898330688477
    3. 'b' → logprob: -2.3007898330688477
    4. 'orth' → logprob: -2.5507898330688477
    5. ' NS' → logprob: -2.9257898330688477
    6. '   ' → logprob: -3.9257898330688477
    7. ' orth' → logprob: -3.9257898330688477
    8. ' all' → logprob: -4.175789833068848
    9. 'all' → logprob: -4.425789833068848
    10. 'either' → logprob: -4.425789833068848

Token 453: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.31330806016921997
    2. 'or' → logprob: -1.3133080005645752
    3. ' (' → logprob: -10.938307762145996
    4. '(' → logprob: -11.188307762145996
    5. '(or' → logprob: -12.313307762145996
    6. '	or' → logprob: -12.438307762145996
    7. '       ' → logprob: -13.938307762145996
    8. '[' → logprob: -13.938307762145996
    9. ',' → logprob: -14.063307762145996
    10. '_or' → logprob: -14.188307762145996

Token 454: ' EW' (ID: 143307)
  Prédit: 'EW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EW' → logprob: -0.007373184431344271
    2. ' EW' → logprob: -5.257373332977295
    3. 'ew' → logprob: -7.257373332977295
    4. '1' → logprob: -7.507373332977295
    5. ' not' → logprob: -8.757372856140137
    6. '0' → logprob: -9.007372856140137
    7. '   ' → logprob: -9.007372856140137
    8. ' ' → logprob: -9.132372856140137
    9. '       ' → logprob: -9.632372856140137
    10. 'not' → logprob: -10.007372856140137

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2129857838153839
    2. '       ' → logprob: -1.7129857540130615
    3. ',
' → logprob: -4.587985992431641
    4. ' and' → logprob: -8.08798599243164
    5. '
' → logprob: -8.71298599243164
    6. ':
' → logprob: -8.71298599243164
    7. ' or' → logprob: -8.83798599243164
    8. ':' → logprob: -9.08798599243164
    9. ' for' → logprob: -9.33798599243164
    10. '<|end|>' → logprob: -9.33798599243164

Token 456: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24778291583061218
    2. '       ' → logprob: -1.8727829456329346
    3. ' if' → logprob: -2.8727829456329346
    4. ' continue' → logprob: -5.8727827072143555
    5. ' we' → logprob: -6.8727827072143555
    6. ' color' → logprob: -7.1227827072143555
    7. 'for' → logprob: -7.6227827072143555
    8. '
' → logprob: -7.8727827072143555
    9. ' dfs' → logprob: -7.8727827072143555
    10. ' 
' → logprob: -7.9977827072143555

Token 457: ' crossings' (ID: 199340)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.2997950613498688
    2. 'the' → logprob: -2.924795150756836
    3. ' dfs' → logprob: -2.924795150756836
    4. 'all' → logprob: -3.424795150756836
    5. '#' → logprob: -3.799795150756836
    6. 'color' → logprob: -4.049795150756836
    7. ' all' → logprob: -4.424795150756836
    8. ' the' → logprob: -4.549795150756836
    9. ' not' → logprob: -4.674795150756836
    10. 'b' → logprob: -4.924795150756836

Token 458: ' only' (ID: 1606)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5488359928131104
    2. ' exist' → logprob: -2.2988359928131104
    3. ' must' → logprob: -2.9238359928131104
    4. 'are' → logprob: -3.0488359928131104
    5. ' can' → logprob: -3.5488359928131104
    6. ' form' → logprob: -3.5488359928131104
    7. 'must' → logprob: -4.048835754394531
    8. 'exist' → logprob: -4.173835754394531
    9. '   ' → logprob: -4.298835754394531
    10. ' occur' → logprob: -4.423835754394531

Token 459: ' happen' (ID: 5659)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.45409107208251953
    2. 'occur' → logprob: -1.8290910720825195
    3. ' connect' → logprob: -2.5790910720825195
    4. ' exist' → logprob: -3.3290910720825195
    5. 'exist' → logprob: -3.3290910720825195
    6. 'between' → logprob: -4.3290910720825195
    7. ' occur' → logprob: -4.8290910720825195
    8. 'go' → logprob: -4.9540910720825195
    9. 'appear' → logprob: -4.9540910720825195
    10. ' go' → logprob: -5.0790910720825195

Token 460: ' between' (ID: 2870)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.22623543441295624
    2. ' between' → logprob: -1.6012353897094727
    3. '   ' → logprob: -7.226235389709473
    4. ' ' → logprob: -10.601235389709473
    5. '       ' → logprob: -10.976235389709473
    6. ',' → logprob: -11.101235389709473
    7. '```' → logprob: -11.476235389709473
    8. '           ' → logprob: -11.851235389709473
    9. ' между' → logprob: -12.726235389709473
    10. 'if' → logprob: -12.851235389709473

Token 461: ' orth' (ID: 35656)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.9074114561080933
    2. ' streets' → logprob: -1.0324114561080933
    3. 'orth' → logprob: -2.032411575317383
    4. 'different' → logprob: -3.032411575317383
    5. 'nodes' → logprob: -4.032411575317383
    6. ' orth' → logprob: -4.157411575317383
    7. ' different' → logprob: -4.782411575317383
    8. 'op' → logprob: -5.282411575317383
    9. ' nodes' → logprob: -5.907411575317383
    10. 'u' → logprob: -5.907411575317383

Token 462: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -5.080963092041202e-06
    2. 'ogon' → logprob: -12.750004768371582
    3. '```' → logprob: -14.000004768371582
    4. '       ' → logprob: -14.375004768371582
    5. 'og' → logprob: -15.625004768371582
    6. 'ogo' → logprob: -16.3750057220459
    7. 'g' → logprob: -16.5000057220459
    8. '``' → logprob: -16.7500057220459
    9. '           ' → logprob: -16.8750057220459
    10. '{' → logprob: -17.3750057220459

Token 463: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.38695216178894043
    2. 'sets' → logprob: -2.0119521617889404
    3. ' streets' → logprob: -2.2619521617889404
    4. ' sets' → logprob: -2.7619521617889404
    5. 's' → logprob: -5.1369524002075195
    6. ' sides' → logprob: -5.5119524002075195
    7. 'lines' → logprob: -6.6369524002075195
    8. ' lines' → logprob: -6.6369524002075195
    9. 'colors' → logprob: -6.8869524002075195
    10. 'types' → logprob: -7.0119524002075195

Token 464: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22944632172584534
    2. '       ' → logprob: -1.604446291923523
    3. ',
' → logprob: -5.8544464111328125
    4. '<|end|>' → logprob: -7.3544464111328125
    5. '.' → logprob: -9.104446411132812
    6. '   ' → logprob: -9.229446411132812
    7. '<|end|>' → logprob: -9.229446411132812
    8. '
' → logprob: -9.979446411132812
    9. ' ,' → logprob: -10.104446411132812
    10. '        
' → logprob: -10.229446411132812

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019800255075097084
    2. ' for' → logprob: -4.019800186157227
    3. 'for' → logprob: -6.644800186157227
    4. '   ' → logprob: -8.644800186157227
    5. ' if' → logprob: -9.644800186157227
    6. '        
' → logprob: -10.394800186157227
    7. 'if' → logprob: -11.269800186157227
    8. ' next' → logprob: -11.394800186157227
    9. '
' → logprob: -11.519800186157227
    10. '#' → logprob: -12.519800186157227

Token 466: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.420615553855896
    2. ' for' → logprob: -1.545615553855896
    3. 'for' → logprob: -2.0456156730651855
    4. '   ' → logprob: -7.5456156730651855
    5. '
' → logprob: -8.295615196228027
    6. '#' (adapté à ' #') → logprob: -10.045615196228027
    7. '        
' → logprob: -10.670615196228027
    8. ' next' → logprob: -12.420615196228027
    9. 'next' → logprob: -12.420615196228027
    10. 'from' → logprob: -12.795615196228027

Token 467: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012679163366556168
    2. ' for' → logprob: -4.387679100036621
    3. '#' → logprob: -9.637679100036621
    4. '       ' → logprob: -9.762679100036621
    5. 'ok' → logprob: -11.887679100036621
    6. '   ' → logprob: -11.887679100036621
    7. 'color' → logprob: -11.887679100036621
    8. '
' → logprob: -12.137679100036621
    9. 'assert' → logprob: -12.637679100036621
    10. 'possible' → logprob: -12.637679100036621

Token 468: ' street' (ID: 12901)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13707391917705536
    2. '#' → logprob: -3.5120739936828613
    3. 'if' → logprob: -3.5120739936828613
    4. 'graph' → logprob: -3.7620739936828613
    5. ' for' → logprob: -4.137073993682861
    6. 'valid' → logprob: -5.262073993682861
    7. 'ok' → logprob: -5.512073993682861
    8. 'code' → logprob: -5.637073993682861
    9. 'result' → logprob: -5.637073993682861
    10. '       ' → logprob: -6.137073993682861

Token 469: ' graph' (ID: 7465)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6237508654594421
    2. '_id' → logprob: -0.8737508654594421
    3. 'color' → logprob: -4.123750686645508
    4. '_ids' → logprob: -4.373750686645508
    5. '_color' → logprob: -4.873750686645508
    6. '   ' → logprob: -6.248750686645508
    7. ' are' → logprob: -6.373750686645508
    8. ' color' → logprob: -6.623750686645508
    9. 'colors' → logprob: -7.373750686645508
    10. 'set' → logprob: -7.498750686645508

Token 470: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.029546581208705902
    2. 'is' → logprob: -3.6545464992523193
    3. ' should' → logprob: -6.654546737670898
    4. '#' → logprob: -7.029546737670898
    5. ' must' → logprob: -8.029546737670898
    6. ' can' → logprob: -8.154546737670898
    7. 'should' → logprob: -8.779546737670898
    8. '   ' → logprob: -9.654546737670898
    9. ' has' → logprob: -9.904546737670898
    10. 'must' → logprob: -10.029546737670898

Token 471: ' bip' (ID: 54467)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.387178897857666
    2. ' bip' → logprob: -1.137178897857666
    3. 'a' → logprob: -8.387178421020508
    4. ' a' → logprob: -9.887178421020508
    5. '   ' → logprob: -11.512178421020508
    6. ' b' → logprob: -12.262178421020508
    7. ' ' → logprob: -12.762178421020508
    8. 'bi' → logprob: -13.137178421020508
    9. '	b' → logprob: -13.262178421020508
    10. '       ' → logprob: -13.262178421020508

Token 472: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -2.3915141355246305e-05
    2. 'ar' → logprob: -11.12502384185791
    3. 'arti' → logprob: -13.37502384185791
    4. 'арт' → logprob: -13.50002384185791
    5. '
' → logprob: -13.62502384185791
    6. '```' → logprob: -13.87502384185791
    7. 'at' → logprob: -14.00002384185791
    8. '<' → logprob: -14.50002384185791
    9. '           ' → logprob: -15.12502384185791
    10. '       ' → logprob: -15.12502384185791

Token 473: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -2.7610454708337784e-05
    2. '```' → logprob: -11.125027656555176
    3. 'ition' → logprob: -11.375027656555176
    4. 'ed' → logprob: -14.125027656555176
    5. 'e' → logprob: -16.62502670288086
    6. 'ited' → logprob: -16.75002670288086
    7. '**' → logprob: -16.87502670288086
    8. '   ' → logprob: -17.12502670288086
    9. ' ite' → logprob: -17.12502670288086
    10. '_' → logprob: -17.25002670288086

Token 474: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6341260075569153
    2. '<|end|>' → logprob: -1.0091259479522705
    3. '       ' → logprob: -3.0091259479522705
    4. '<|end|>' → logprob: -3.8841259479522705
    5. ',' → logprob: -4.25912618637085
    6. ',
' → logprob: -4.88412618637085
    7. '        
' → logprob: -5.38412618637085
    8. ' for' → logprob: -5.75912618637085
    9. '    
' → logprob: -6.88412618637085
    10. '  
' → logprob: -6.88412618637085

Token 475: ' color' (ID: 3089)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.13217413425445557
    2. '       ' → logprob: -2.632174015045166
    3. ' and' → logprob: -3.382174015045166
    4. ' continue' → logprob: -5.007174015045166
    5. ' if' → logprob: -6.257174015045166
    6. '<|end|>' → logprob: -6.382174015045166
    7. 'so' → logprob: -6.632174015045166
    8. ' for' → logprob: -6.757174015045166
    9. 'and' → logprob: -6.882174015045166
    10. 'continue' → logprob: -7.382174015045166

Token 476: ' parts' (ID: 7881)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.13113103806972504
    2. 'ing' → logprob: -2.8811309337615967
    3. 'able' → logprob: -3.5061309337615967
    4. '[' → logprob: -4.506131172180176
    5. '[u' → logprob: -4.881131172180176
    6. 'd' → logprob: -5.506131172180176
    7. ' is' → logprob: -6.506131172180176
    8. '   ' → logprob: -6.756131172180176
    9. 'ization' → logprob: -6.756131172180176
    10. 'ied' → logprob: -7.256131172180176

Token 477: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8072175979614258
    2. '=' → logprob: -1.3072175979614258
    3. '       ' → logprob: -2.432217597961426
    4. '.' → logprob: -3.807217597961426
    5. ' with' → logprob: -3.932217597961426
    6. '```' → logprob: -4.057217597961426
    7. ',' → logprob: -4.557217597961426
    8. ' for' → logprob: -4.557217597961426
    9. 'ing' → logprob: -4.682217597961426
    10. ' is' → logprob: -4.807217597961426

Token 478: ' orientations' (ID: 149573)
  Prédit: ' NS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' NS' → logprob: -0.7074013352394104
    2. 'NS' → logprob: -1.0824012756347656
    3. ' the' → logprob: -2.4574012756347656
    4. 'the' → logprob: -2.9574012756347656
    5. 'ns' → logprob: -5.082401275634766
    6. ' sets' → logprob: -5.082401275634766
    7. ' assigned' → logprob: -5.207401275634766
    8. ' ns' → logprob: -6.082401275634766
    9. 'assigned' → logprob: -6.457401275634766
    10. '"' → logprob: -6.832401275634766

Token 479: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5715857744216919
    2. '
' → logprob: -0.9465857744216919
    3. '<|end|>' → logprob: -4.071585655212402
    4. '        
' → logprob: -4.196585655212402
    5. ' for' → logprob: -5.196585655212402
    6. 'for' → logprob: -5.571585655212402
    7. ',' → logprob: -6.321585655212402
    8. '<|end|>' → logprob: -7.071585655212402
    9. ',
' → logprob: -7.446585655212402
    10. '   ' → logprob: -7.571585655212402

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6238813996315002
    2. ' for' → logprob: -1.4988813400268555
    3. '   ' → logprob: -1.9988813400268555
    4. 'for' → logprob: -2.8738813400268555
    5. '
' → logprob: -3.2488813400268555
    6. '    
' → logprob: -5.2488813400268555
    7. '        
' → logprob: -6.1238813400268555
    8. '```' → logprob: -6.6238813400268555
    9. '<|end|>' → logprob: -7.4988813400268555
    10. '  
' → logprob: -8.998881340026855

Token 481: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25743696093559265
    2. 'for' (adapté à ' for') → logprob: -2.007436990737915
    3. ' for' → logprob: -2.382436990737915
    4. '   ' → logprob: -8.632436752319336
    5. '        
' → logprob: -9.882436752319336
    6. '
' → logprob: -10.632436752319336
    7. '```' → logprob: -10.882436752319336
    8. '    
' → logprob: -11.382436752319336
    9. 'next' → logprob: -11.882436752319336
    10. '	for' → logprob: -11.882436752319336

Token 482: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3731357753276825
    2. ' i' → logprob: -1.6231358051300049
    3. 'u' → logprob: -2.373135805130005
    4. ' u' → logprob: -3.873135805130005
    5. 'v' → logprob: -8.998135566711426
    6. ' v' → logprob: -10.248135566711426
    7. ' node' → logprob: -12.248135566711426
    8. 'node' → logprob: -12.498135566711426
    9. 'x' → logprob: -15.498135566711426
    10. '   ' → logprob: -16.998136520385742

Token 483: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048603612929582596
    2. 'in' → logprob: -3.0486035346984863
    3. ' ' → logprob: -11.673604011535645
    4. '	in' → logprob: -12.673604011535645
    5. '   ' → logprob: -13.673604011535645
    6. ',' → logprob: -14.048604011535645
    7. 'import' → logprob: -14.673604011535645
    8. '  ' → logprob: -14.923604011535645
    9. '_in' → logprob: -15.173604011535645
    10. 'In' → logprob: -15.298604011535645

Token 484: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002475777640938759
    2. ' range' → logprob: -6.002475738525391
    3. '(range' → logprob: -16.50247573852539
    4. ' ' → logprob: -17.00247573852539
    5. '   ' → logprob: -17.50247573852539
    6. 'color' → logprob: -18.00247573852539
    7. '	range' → logprob: -18.87747573852539
    8. '  ' → logprob: -19.00247573852539
    9. 'in' → logprob: -19.12747573852539
    10. '0' → logprob: -19.25247573852539

Token 485: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -4.632542913896032e-05
    2. 'cnt' → logprob: -10.000046730041504
    3. '[cnt' → logprob: -14.625046730041504
    4. ' cnt' → logprob: -15.750046730041504
    5. '(' → logprob: -15.875046730041504
    6. '	cnt' → logprob: -17.125045776367188
    7. '(len' → logprob: -17.125045776367188
    8. '(count' → logprob: -18.750045776367188
    9. '   ' → logprob: -20.250045776367188
    10. '_cnt' → logprob: -20.375045776367188

Token 486: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009862331673502922
    2. '):' → logprob: -4.634862422943115
    3. '):
' → logprob: -9.259861946105957
    4. '():
' → logprob: -12.759861946105957
    5. ' ):
' → logprob: -13.134861946105957
    6. ')' → logprob: -13.384861946105957
    7. ':
' → logprob: -13.384861946105957
    8. '   ' → logprob: -13.759861946105957
    9. '()):
' → logprob: -14.509861946105957
    10. '):

' → logprob: -14.509861946105957

Token 487: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10734663903713226
    2. ' if' → logprob: -2.482346534729004
    3. '       ' → logprob: -4.607346534729004
    4. '           ' → logprob: -5.482346534729004
    5. ' ' → logprob: -6.357346534729004
    6. '    ' → logprob: -6.857346534729004
    7. 'if' → logprob: -7.607346534729004
    8. '```' → logprob: -8.982346534729004
    9. '    
' → logprob: -9.232346534729004
    10. '  ' → logprob: -9.732346534729004

Token 488: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31646183133125305
    2. 'if' (adapté à ' if') → logprob: -1.3164618015289307
    3. '           ' → logprob: -5.81646203994751
    4. '   ' → logprob: -8.566461563110352
    5. '       ' → logprob: -11.191461563110352
    6. ' ' → logprob: -12.066461563110352
    7. '	if' → logprob: -12.941461563110352
    8. '               ' → logprob: -13.066461563110352
    9. '    ' → logprob: -14.066461563110352
    10. 'If' → logprob: -15.191461563110352

Token 489: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.31326642632484436
    2. 'color' → logprob: -1.313266396522522
    3. '   ' → logprob: -12.56326675415039
    4. ' ' → logprob: -14.18826675415039
    5. '	color' → logprob: -15.43826675415039
    6. '    ' → logprob: -16.18826675415039
    7. '  ' → logprob: -16.43826675415039
    8. '(color' → logprob: -17.43826675415039
    9. '[color' → logprob: -17.43826675415039
    10. 'c' → logprob: -18.18826675415039

Token 490: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.749814019713085e-06
    2. 'i' → logprob: -12.500006675720215
    3. '[u' → logprob: -13.250006675720215
    4. ' [' → logprob: -14.750006675720215
    5. '[' → logprob: -15.750006675720215
    6. '[
' → logprob: -16.00000762939453
    7. '```' → logprob: -16.25000762939453
    8. '==' → logprob: -16.37500762939453
    9. '[color' → logprob: -16.37500762939453
    10. ' i' → logprob: -16.87500762939453

Token 491: ']<' (ID: 80424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9305869340896606
    2. ']==' → logprob: -1.3055869340896606
    3. ' ==' → logprob: -1.8055869340896606
    4. ']' → logprob: -2.055586814880371
    5. '==-' → logprob: -3.680586814880371
    6. ')' → logprob: -5.055586814880371
    7. '<' → logprob: -5.430586814880371
    8. '[' → logprob: -5.805586814880371
    9. ')==' → logprob: -6.055586814880371
    10. '=' → logprob: -8.555586814880371

Token 492: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003827676991932094
    2. ' ' → logprob: -7.875382900238037
    3. '=' → logprob: -13.625382423400879
    4. '1' → logprob: -14.000382423400879
    5. '   ' → logprob: -14.625382423400879
    6. '2' → logprob: -15.750382423400879
    7. '```' → logprob: -17.250383377075195
    8. '
' → logprob: -18.062883377075195
    9. '  ' → logprob: -18.125383377075195
    10. '>' → logprob: -18.250383377075195

Token 493: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11603157967329025
    2. ':' → logprob: -2.2410316467285156
    3. '           ' → logprob: -6.366031646728516
    4. '):
' → logprob: -6.741031646728516
    5. '               ' → logprob: -8.991031646728516
    6. ' and' → logprob: -9.366031646728516
    7. '       ' → logprob: -10.616031646728516
    8. '():
' → logprob: -10.616031646728516
    9. '):' → logprob: -11.366031646728516
    10. ',' → logprob: -12.116031646728516

Token 494: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6025210618972778
    2. '               ' → logprob: -0.9775210618972778
    3. ' if' → logprob: -3.3525209426879883
    4. ':
' → logprob: -3.7275209426879883
    5. ':' → logprob: -4.727520942687988
    6. '       ' → logprob: -5.852520942687988
    7. ' and' → logprob: -5.852520942687988
    8. 'if' → logprob: -7.727520942687988
    9. '	       ' → logprob: -7.852520942687988
    10. '   ' → logprob: -7.977520942687988

Token 495: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7179039120674133
    2. 'if' (adapté à ' if') → logprob: -0.7179039120674133
    3. ' if' → logprob: -3.7179038524627686
    4. '               ' → logprob: -8.967904090881348
    5. '   ' → logprob: -11.342904090881348
    6. '
' → logprob: -11.592904090881348
    7. 'dfs' → logprob: -12.217904090881348
    8. '       ' → logprob: -12.342904090881348
    9. '                   ' → logprob: -12.967904090881348
    10. '            
' → logprob: -13.217904090881348

Token 496: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4740835428237915
    2. 'not' → logprob: -0.9740835428237915
    3. '   ' → logprob: -13.09908390045166
    4. '!' → logprob: -13.22408390045166
    5. '               ' → logprob: -13.84908390045166
    6. '(not' → logprob: -14.22408390045166
    7. '```' → logprob: -15.34908390045166
    8. '
' → logprob: -15.47408390045166
    9. '           ' → logprob: -15.72408390045166
    10. '	not' → logprob: -15.84908390045166

Token 497: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0028057026211172342
    2. ' dfs' → logprob: -5.877805709838867
    3. 'df' → logprob: -14.002805709838867
    4. '   ' → logprob: -18.127805709838867
    5. 'DFS' → logprob: -18.127805709838867
    6. '
' → logprob: -18.252805709838867
    7. ' ' → logprob: -18.252805709838867
    8. 'dfa' → logprob: -18.502805709838867
    9. '```' → logprob: -19.002805709838867
    10. ' ' → logprob: -19.252805709838867

Token 498: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -6.511406809295295e-06
    2. 'color' → logprob: -12.500006675720215
    3. '(i' → logprob: -13.250006675720215
    4. '_' → logprob: -15.500006675720215
    5. '[i' → logprob: -15.875006675720215
    6. '   ' → logprob: -16.0000057220459
    7. '
' → logprob: -16.3750057220459
    8. '_COLOR' → logprob: -16.6250057220459
    9. '\' → logprob: -16.7500057220459
    10. '_col' → logprob: -16.7500057220459

Token 499: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.375000953674316
    3. ' (' → logprob: -15.500000953674316
    4. '               ' → logprob: -17.875
    5. '```' → logprob: -18.5
    6. '(
' → logprob: -19.0
    7. ')' → logprob: -19.875
    8. '(I' → logprob: -19.875
    9. 'i' → logprob: -20.0
    10. '           ' → logprob: -20.25

Token 500: ',' (ID: 11)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.5365162491798401
    2. ',' → logprob: -0.9115162491798401
    3. 'i' → logprob: -4.786516189575195
    4. '(i' → logprob: -5.661516189575195
    5. ' ,' → logprob: -7.286516189575195
    6. ' i' → logprob: -8.161516189575195
    7. '[i' → logprob: -8.536516189575195
    8. ',
' → logprob: -8.911516189575195
    9. '   ' → logprob: -9.786516189575195
    10. '
' → logprob: -10.036516189575195

Token 501: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.000009536743164
    4. '1' → logprob: -17.625009536743164
    5. ')' → logprob: -18.125009536743164
    6. '۰' → logprob: -19.125009536743164
    7. '  ' → logprob: -19.812509536743164
    8. 'i' → logprob: -20.437509536743164
    9. '０' → logprob: -20.500009536743164
    10. '    ' → logprob: -20.562509536743164

Token 502: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002312503522261977
    2. '):' → logprob: -6.127312660217285
    3. '):
' → logprob: -9.252312660217285
    4. '               ' → logprob: -11.252312660217285
    5. '                   ' → logprob: -11.752312660217285
    6. ':
' → logprob: -12.627312660217285
    7. ')' → logprob: -12.877312660217285
    8. '           ' → logprob: -13.377312660217285
    9. '():
' → logprob: -13.377312660217285
    10. '                       ' → logprob: -14.377312660217285

Token 503: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004921489744447172
    2. '                       ' → logprob: -8.000492095947266
    3. '               ' → logprob: -10.250492095947266
    4. ' return' → logprob: -10.375492095947266
    5. 'return' → logprob: -10.625492095947266
    6. ':
' → logprob: -10.625492095947266
    7. '           ' → logprob: -10.875492095947266
    8. ':' → logprob: -12.125492095947266
    9. '
' → logprob: -12.375492095947266
    10. '                    
' → logprob: -12.625492095947266

Token 504: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01890694722533226
    2. 'return' → logprob: -4.018907070159912
    3. ' print' → logprob: -8.143906593322754
    4. '               ' → logprob: -8.768906593322754
    5. 'sys' → logprob: -9.143906593322754
    6. ' return' → logprob: -9.893906593322754
    7. 'raise' → logprob: -10.143906593322754
    8. '                   ' → logprob: -10.268906593322754
    9. 'break' → logprob: -10.393906593322754
    10. 'exit' → logprob: -10.768906593322754

Token 505: ' impossible' (ID: 19786)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01173234824091196
    2. ' print' → logprob: -4.511732578277588
    3. 'return' → logprob: -7.761732578277588
    4. '               ' → logprob: -9.26173210144043
    5. '                   ' → logprob: -9.51173210144043
    6. '           ' → logprob: -10.38673210144043
    7. ' return' → logprob: -10.63673210144043
    8. 'sys' → logprob: -11.26173210144043
    9. '```' → logprob: -11.88673210144043
    10. 'raise' → logprob: -12.38673210144043

Token 506: ' bip' (ID: 54467)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02122265100479126
    2. '               ' → logprob: -5.1462225914001465
    3. '
' → logprob: -5.5212225914001465
    4. ':
' → logprob: -5.6462225914001465
    5. '                   ' → logprob: -6.2712225914001465
    6. 'print' → logprob: -6.6462225914001465
    7. 'return' → logprob: -6.7712225914001465
    8. ')' → logprob: -7.3962225914001465
    9. ' return' → logprob: -7.5212225914001465
    10. ',' → logprob: -7.7712225914001465

Token 507: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -1.7954958821064793e-05
    2. 'ar' → logprob: -11.625018119812012
    3. 'arti' → logprob: -11.875018119812012
    4. ')' → logprob: -15.500018119812012
    5. '           ' → logprob: -15.625018119812012
    6. '       ' → logprob: -15.625018119812012
    7. 'at' → logprob: -16.000017166137695
    8. '#' → logprob: -16.250017166137695
    9. 'a' → logprob: -16.250017166137695
    10. '```' → logprob: -16.250017166137695

Token 508: 'ition' (ID: 868)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.43016865849494934
    2. 'ite' → logprob: -1.055168628692627
    3. 'ition' → logprob: -6.555168628692627
    4. 'ar' → logprob: -11.055169105529785
    5. 'ate' → logprob: -11.555169105529785
    6. 'it' → logprob: -12.555169105529785
    7. 'arte' → logprob: -12.680169105529785
    8. '```' → logprob: -13.180169105529785
    9. 'article' → logprob: -14.055169105529785
    10. 't' → logprob: -14.055169105529785

Token 509: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18182741105556488
    2. '           ' → logprob: -2.0568273067474365
    3. '                       ' → logprob: -4.181827545166016
    4. '               ' → logprob: -4.556827545166016
    5. '
' → logprob: -5.681827545166016
    6. 'return' → logprob: -5.806827545166016
    7. ' return' → logprob: -5.806827545166016
    8. ',' → logprob: -6.306827545166016
    9. ':
' → logprob: -7.681827545166016
    10. '       ' → logprob: -8.931827545166016

Token 510: 'not' (ID: 2878)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19521090388298035
    2. 'return' → logprob: -2.1952109336853027
    3. ')
' → logprob: -3.8202109336853027
    4. ')' → logprob: -3.9452109336853027
    5. '                   ' → logprob: -4.195210933685303
    6. '
' → logprob: -5.695210933685303
    7. ' return' → logprob: -6.695210933685303
    8. '           ' → logprob: -6.695210933685303
    9. '                       ' → logprob: -6.695210933685303
    10. ' print' → logprob: -7.195210933685303

Token 511: ' expected' (ID: 5930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36719998717308044
    2. 'print' → logprob: -2.9921998977661133
    3. ' True' → logprob: -2.9921998977661133
    4. ' possible' → logprob: -3.2421998977661133
    5. '
' → logprob: -3.6171998977661133
    6. 'True' → logprob: -3.7421998977661133
    7. ' found' → logprob: -4.242199897766113
    8. '```' → logprob: -4.492199897766113
    9. '   ' → logprob: -4.867199897766113
    10. ' sure' → logprob: -4.992199897766113

Token 512: ' by' (ID: 656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1374428272247314
    2. ')
' → logprob: -1.1374428272247314
    3. '):
' → logprob: -1.1374428272247314
    4. '):' → logprob: -3.6374428272247314
    5. '                   ' → logprob: -5.137442588806152
    6. '               ' → logprob: -5.512442588806152
    7. '           ' → logprob: -6.762442588806152
    8. '                       ' → logprob: -8.387442588806152
    9. '),' → logprob: -8.512442588806152
    10. '):

' → logprob: -9.262442588806152

Token 513: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.002556638326495886
    2. 'the' → logprob: -6.252556800842285
    3. ' problem' → logprob: -7.377556800842285
    4. ' the' → logprob: -14.127556800842285
    5. '_problem' → logprob: -14.377556800842285
    6. '(problem' → logprob: -14.377556800842285
    7. '
' → logprob: -15.252556800842285
    8. 'Problem' → logprob: -15.502556800842285
    9. 'prompt' → logprob: -15.752556800842285
    10. 'input' → logprob: -16.00255584716797

Token 514: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1340147256851196
    2. ')' → logprob: -1.6340147256851196
    3. '           ' → logprob: -1.8840147256851196
    4. '):' → logprob: -2.00901460647583
    5. '                   ' → logprob: -2.25901460647583
    6. '               ' → logprob: -2.63401460647583
    7. ')
' → logprob: -4.50901460647583
    8. '                       ' → logprob: -5.00901460647583
    9. '       ' → logprob: -6.75901460647583
    10. '):

' → logprob: -8.134015083312988

Token 515: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08484615385532379
    2. '                       ' → logprob: -2.709846258163452
    3. '               ' → logprob: -4.584846019744873
    4. '           ' → logprob: -5.459846019744873
    5. '       ' → logprob: -8.959846496582031
    6. ' return' → logprob: -9.584846496582031
    7. 'return' → logprob: -9.709846496582031
    8. '   ' → logprob: -11.584846496582031
    9. '                    
' → logprob: -11.584846496582031
    10. ')' → logprob: -12.209846496582031

Token 516: ' pass' (ID: 1853)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5894798636436462
    2. 'return' → logprob: -0.8394798636436462
    3. ' return' → logprob: -4.839479923248291
    4. '                   ' → logprob: -6.089479923248291
    5. ' print' → logprob: -6.214479923248291
    6. 'sys' → logprob: -7.089479923248291
    7. '               ' → logprob: -8.339479446411133
    8. '                       ' → logprob: -9.964479446411133
    9. ' sys' → logprob: -10.089479446411133
    10. 'exit' → logprob: -10.339479446411133

Token 517: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 518: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3655187785625458
    2. '<|end|>' → logprob: -1.3655188083648682
    3. '
' → logprob: -3.740518808364868
    4. '        
' → logprob: -4.490518569946289
    5. '   ' → logprob: -5.115518569946289
    6. '<|end|>' → logprob: -5.990518569946289
    7. 'continue' → logprob: -6.615518569946289
    8. 'import' → logprob: -6.740518569946289
    9. '    
' → logprob: -6.865518569946289
    10. '```' → logprob: -7.365518569946289

Token 519: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0123045444488525
    2. '       ' → logprob: -1.1373045444488525
    3. 'ns' → logprob: -1.3873045444488525
    4. 'ew' → logprob: -3.7623045444488525
    5. '#' (adapté à ' #') → logprob: -4.387304306030273
    6. ' for' → logprob: -5.137304306030273
    7. 'answers' → logprob: -5.637304306030273
    8. 'answer' → logprob: -6.262304306030273
    9. '```' → logprob: -6.512304306030273
    10. 'NS' → logprob: -6.762304306030273

Token 520: ' Build' (ID: 10885)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.23431940376758575
    2. 'for' → logprob: -2.4843194484710693
    3. '#' → logprob: -2.7343194484710693
    4. 'ans' → logprob: -4.35931921005249
    5. 'answers' → logprob: -4.73431921005249
    6. 'answer' → logprob: -5.10931921005249
    7. 'id' → logprob: -5.73431921005249
    8. ' for' → logprob: -5.85931921005249
    9. ' ns' → logprob: -5.98431921005249
    10. '       ' → logprob: -6.10931921005249

Token 521: ' crossing' (ID: 50946)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.18286243081092834
    2. ' ns' → logprob: -2.6828625202178955
    3. 'graph' → logprob: -3.3078625202178955
    4. 'pos' → logprob: -4.557862281799316
    5. 'from' → logprob: -4.557862281799316
    6. 'rev' → logprob: -5.557862281799316
    7. 'dist' → logprob: -5.682862281799316
    8. 'adj' → logprob: -5.682862281799316
    9. 'map' → logprob: -5.932862281799316
    10. '   ' → logprob: -5.932862281799316

Token 522: ' sets' (ID: 11982)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.21761198341846466
    2. 'map' → logprob: -2.4676120281219482
    3. '_id' → logprob: -4.217611789703369
    4. 'graph' → logprob: -4.592611789703369
    5. '_points' → logprob: -4.592611789703369
    6. '_edges' → logprob: -4.842611789703369
    7. '_graph' → logprob: -4.967611789703369
    8. '_matrix' → logprob: -5.092611789703369
    9. 's' → logprob: -5.217611789703369
    10. 'points' → logprob: -5.342611789703369

Token 523: ' for' (ID: 395)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.38493308424949646
    2. '       ' → logprob: -1.6349331140518188
    3. '
' → logprob: -3.2599329948425293
    4. '_ns' → logprob: -3.6349329948425293
    5. 'for' → logprob: -3.7599329948425293
    6. '        
' → logprob: -4.884932994842529
    7. 'from' → logprob: -5.009932994842529
    8. ' ns' → logprob: -5.759932994842529
    9. '(ns' → logprob: -5.759932994842529
    10. ' for' → logprob: -5.884932994842529

Token 524: ' fast' (ID: 5661)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.3482331931591034
    2. ' ns' → logprob: -1.7232332229614258
    3. 'each' → logprob: -3.473233222961426
    4. 'both' → logprob: -4.098233222961426
    5. ' each' → logprob: -4.223233222961426
    6. ' NS' → logprob: -4.473233222961426
    7. 'NS' → logprob: -4.598233222961426
    8. ' color' → logprob: -4.723233222961426
    9. ' both' → logprob: -4.723233222961426
    10. 'color' → logprob: -4.848233222961426

Token 525: ' test' (ID: 1746)
  Prédit: 'lookup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lookup' → logprob: -0.11766183376312256
    2. ' lookup' → logprob: -2.242661952972412
    3. 'look' → logprob: -6.242661952972412
    4. 'membership' → logprob: -6.867661952972412
    5. '_lookup' → logprob: -7.867661952972412
    6. ' look' → logprob: -7.867661952972412
    7. ' membership' → logprob: -8.242661476135254
    8. 'query' → logprob: -8.742661476135254
    9. 'queries' → logprob: -8.867661476135254
    10. 'ns' → logprob: -8.992661476135254

Token 526: ' if' (ID: 538)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.19614575803279877
    2. '       ' → logprob: -2.57114577293396
    3. ' ns' → logprob: -3.32114577293396
    4. 'from' → logprob: -3.69614577293396
    5. '
' → logprob: -4.071145534515381
    6. '_ns' → logprob: -5.696145534515381
    7. '        
' → logprob: -6.071145534515381
    8. 'cross' → logprob: -6.196145534515381
    9. '(ns' → logprob: -6.321145534515381
    10. ' from' → logprob: -6.321145534515381

Token 527: ' a' (ID: 261)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.5229929685592651
    2. ' (' → logprob: -1.8979929685592651
    3. '(B' → logprob: -2.5229930877685547
    4. '(a' → logprob: -2.6479930877685547
    5. '(' → logprob: -4.022993087768555
    6. '((' → logprob: -4.397993087768555
    7. 'a' → logprob: -4.522993087768555
    8. 'cross' → logprob: -4.647993087768555
    9. 'A' → logprob: -4.897993087768555
    10. ' a' → logprob: -5.147993087768555

Token 528: ' crossing' (ID: 50946)
  Prédit: ' street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.875560998916626
    2. 'ns' → logprob: -1.875560998916626
    3. ' pair' → logprob: -2.375560998916626
    4. ' tuple' → logprob: -2.750560998916626
    5. ' given' → logprob: -3.375560998916626
    6. '(A' → logprob: -3.375560998916626
    7. 'street' → logprob: -3.625560998916626
    8. ' exists' → logprob: -3.875560998916626
    9. '(B' → logprob: -3.875560998916626
    10. ' crossing' → logprob: -4.000560760498047

Token 529: ' exists' (ID: 13031)
  Prédit: 'exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exists' → logprob: -0.4572769105434418
    2. ' exists' → logprob: -2.0822768211364746
    3. 'in' → logprob: -2.3322768211364746
    4. 's' → logprob: -2.8322768211364746
    5. '_exists' → logprob: -3.9572768211364746
    6. ' in' → logprob: -3.9572768211364746
    7. 'is' → logprob: -4.332276821136475
    8. '       ' → logprob: -4.957276821136475
    9. ' is' → logprob: -5.207276821136475
    10. '(A' → logprob: -6.207276821136475

Token 530: ' (' (ID: 350)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.5057317018508911
    2. '
' → logprob: -1.2557317018508911
    3. 'for' → logprob: -3.3807315826416016
    4. 'cross' → logprob: -3.6307315826416016
    5. '       ' → logprob: -4.130731582641602
    6. ' for' → logprob: -4.755731582641602
    7. 'ew' → logprob: -5.130731582641602
    8. ' ns' → logprob: -5.755731582641602
    9. '        
' → logprob: -5.755731582641602
    10. 'from' → logprob: -6.380731582641602

Token 531: 'input' (ID: 2586)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20413199067115784
    2. ')
' → logprob: -2.329132080078125
    3. 'def' → logprob: -4.204132080078125
    4. '       ' → logprob: -4.954132080078125
    5. '
' → logprob: -4.954132080078125
    6. '(A' → logprob: -4.954132080078125
    7. '#' → logprob: -5.204132080078125
    8. ' (' → logprob: -5.454132080078125
    9. 'ns' → logprob: -5.454132080078125
    10. 'cross' → logprob: -5.579132080078125

Token 532: ' direction' (ID: 9262)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.6208229064941406
    2. ')' → logprob: -0.8708229064941406
    3. 'edges' → logprob: -5.370822906494141
    4. 's' → logprob: -5.495822906494141
    5. ')_' → logprob: -5.620822906494141
    6. '_st' → logprob: -5.620822906494141
    7. ',' → logprob: -5.620822906494141
    8. ').' → logprob: -6.245822906494141
    9. '_lines' → logprob: -6.495822906494141
    10. '_' → logprob: -6.620822906494141

Token 533: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.457711786031723
    2. ',' → logprob: -1.7077118158340454
    3. 's' → logprob: -2.957711696624756
    4. 'al' → logprob: -3.082711696624756
    5. ')
' → logprob: -4.207711696624756
    6. 'in' → logprob: -4.332711696624756
    7. ',)' → logprob: -5.207711696624756
    8. ' in' → logprob: -5.332711696624756
    9. '):' → logprob: -5.457711696624756
    10. '))' → logprob: -5.832711696624756

Token 534: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33176934719085693
    2. '       ' → logprob: -1.956769347190857
    3. 'for' → logprob: -2.9567694664001465
    4. 'cross' → logprob: -3.3317694664001465
    5. '```' → logprob: -4.4567694664001465
    6. '        
' → logprob: -4.5817694664001465
    7. '_cross' → logprob: -5.3317694664001465
    8. 's' → logprob: -5.5817694664001465
    9. ' for' → logprob: -5.7067694664001465
    10. ',' → logprob: -5.9567694664001465

Token 535: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' (adapté à ' cross') → logprob: -0.0886758342385292
    2. '       ' → logprob: -2.8386757373809814
    3. 'exists' → logprob: -4.8386759757995605
    4. ' crossing' → logprob: -5.0886759757995605
    5. ' cross' → logprob: -5.8386759757995605
    6. ' crossings' → logprob: -6.2136759757995605
    7. 'existing' → logprob: -6.5886759757995605
    8. ' exists' → logprob: -6.7136759757995605
    9. 'exist' → logprob: -7.0886759757995605
    10. ' crosses' → logprob: -7.2136759757995605

Token 536: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.640508234500885
    2. 's' → logprob: -0.765508234500885
    3. '_exists' → logprob: -6.01550817489624
    4. '_sets' → logprob: -6.39050817489624
    5. '_s' → logprob: -6.76550817489624
    6. 'set' → logprob: -6.89050817489624
    7. '_map' → logprob: -7.51550817489624
    8. '_ids' → logprob: -8.265508651733398
    9. ' =' → logprob: -8.640508651733398
    10. '_edges' → logprob: -8.890508651733398

Token 537: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232162475585938
    2. ' =' → logprob: -0.8982162475585938
    3. '.add' → logprob: -10.398216247558594
    4. ')' → logprob: -10.648216247558594
    5. '=set' → logprob: -11.398216247558594
    6. '.' → logprob: -11.523216247558594
    7. 's' → logprob: -12.023216247558594
    8. ',' → logprob: -13.398216247558594
    9. ')=' → logprob: -13.648216247558594
    10. '={(' → logprob: -13.648216247558594

Token 538: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.06692396849393845
    2. ' set' → logprob: -3.0669238567352295
    3. 'edges' → logprob: -4.066924095153809
    4. '{' → logprob: -7.316924095153809
    5. ' edges' → logprob: -7.941924095153809
    6. ' {(' → logprob: -11.441924095153809
    7. '(edges' → logprob: -13.441924095153809
    8. '(set' → logprob: -13.566924095153809
    9. '	set' → logprob: -13.691924095153809
    10. '=set' → logprob: -13.691924095153809

Token 539: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.1476443111896515
    2. '((' → logprob: -2.772644281387329
    3. '(edges' → logprob: -2.772644281387329
    4. '()' → logprob: -4.772644519805908
    5. '([(' → logprob: -6.522644519805908
    6. 'cross' → logprob: -6.897644519805908
    7. '()
' → logprob: -7.272644519805908
    8. 'edges' → logprob: -8.52264404296875
    9. '(' → logprob: -9.02264404296875
    10. '(((' → logprob: -9.64764404296875

Token 540: 'ross' (ID: 2838)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.2403213232755661
    2. '(c' → logprob: -2.115321397781372
    3. 'ross' → logprob: -3.240321397781372
    4. '(edges' → logprob: -3.490321397781372
    5. 'edges' → logprob: -3.990321397781372
    6. '((' → logprob: -6.865321159362793
    7. 'c' → logprob: -6.865321159362793
    8. ')' → logprob: -7.365321159362793
    9. '(' → logprob: -7.990321159362793
    10. '[(' → logprob: -8.240321159362793

Token 541: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005734055885113776
    2. '       ' → logprob: -7.625573635101318
    3. ')
' → logprob: -9.62557315826416
    4. '())' → logprob: -11.25057315826416
    5. '   ' → logprob: -12.87557315826416
    6. ' )' → logprob: -13.50057315826416
    7. '))' → logprob: -14.25057315826416
    8. '),' → logprob: -15.25057315826416
    9. ')

' → logprob: -15.37557315826416
    10. '()' → logprob: -15.37557315826416

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2064123898744583
    2. '
' → logprob: -2.4564123153686523
    3. '<|end|>' → logprob: -2.4564123153686523
    4. '        
' → logprob: -4.706412315368652
    5. '<|end|>' → logprob: -6.081412315368652
    6. '    
' → logprob: -6.706412315368652
    7. '   ' → logprob: -6.956412315368652
    8. '  
' → logprob: -7.831412315368652
    9. '```' → logprob: -7.831412315368652
    10. 'for' → logprob: -8.706412315368652

Token 543: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1950903683900833
    2. 'for' → logprob: -2.0700902938842773
    3. ' for' → logprob: -3.0700902938842773
    4. '
' → logprob: -6.195090293884277
    5. '   ' → logprob: -6.945090293884277
    6. '```' → logprob: -7.695090293884277
    7. 'def' → logprob: -7.820090293884277
    8. '        
' → logprob: -8.320090293884277
    9. '<|end|>' → logprob: -8.695090293884277
    10. 'answers' → logprob: -9.570090293884277

Token 544: ' Equal' (ID: 67921)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029703868553042412
    2. '       ' → logprob: -3.6547038555145264
    3. ' for' → logprob: -5.9047040939331055
    4. 'def' → logprob: -8.404704093933105
    5. '   ' → logprob: -8.654704093933105
    6. 'answers' → logprob: -9.529704093933105
    7. 'answer' → logprob: -9.904704093933105
    8. 'results' → logprob: -10.654704093933105
    9. 'result' → logprob: -11.029704093933105
    10. 'from' → logprob: -11.029704093933105

Token 545: ' strength' (ID: 9386)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3334778845310211
    2. 's' → logprob: -2.5834779739379883
    3. '       ' → logprob: -2.7084779739379883
    4. 'for' → logprob: -2.9584779739379883
    5. '   ' → logprob: -4.083477973937988
    6. 'to' → logprob: -4.083477973937988
    7. 'ity' → logprob: -4.333477973937988
    8. 'ities' → logprob: -4.708477973937988
    9. 'if' → logprob: -5.208477973937988
    10. 'cross' → logprob: -5.958477973937988

Token 546: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9962486624717712
    2. '<|end|>' → logprob: -1.121248722076416
    3. ' =' → logprob: -2.871248722076416
    4. 's' → logprob: -3.246248722076416
    5. '   ' → logprob: -3.496248722076416
    6. 'def' → logprob: -3.746248722076416
    7. '<|end|>' → logprob: -3.871248722076416
    8. '_strength' → logprob: -4.371248722076416
    9. '_s' → logprob: -4.746248722076416
    10. '_pairs' → logprob: -4.871248722076416

Token 547: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07769002765417099
    2. ' for' → logprob: -3.0776901245117188
    3. '
' → logprob: -4.827690124511719
    4. 'for' → logprob: -4.827690124511719
    5. '        
' → logprob: -5.327690124511719
    6. '```' → logprob: -6.202690124511719
    7. 'def' → logprob: -6.577690124511719
    8. ' equal' → logprob: -7.577690124511719
    9. '   ' → logprob: -7.952690124511719
    10. ' 
' → logprob: -8.077690124511719

Token 548: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3037431836128235
    2. 'for' → logprob: -1.5537431240081787
    3. '       ' → logprob: -3.3037431240081787
    4. ' equal' → logprob: -5.553743362426758
    5. 'def' → logprob: -6.178743362426758
    6. 'equal' → logprob: -6.178743362426758
    7. ' from' → logprob: -7.428743362426758
    8. ' def' → logprob: -7.553743362426758
    9. '   ' → logprob: -7.678743362426758
    10. 'eq' → logprob: -7.803743362426758

Token 549: ' A' (ID: 355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13743266463279724
    2. ' for' → logprob: -2.88743257522583
    3. '       ' → logprob: -4.26243257522583
    4. 'equal' → logprob: -4.26243257522583
    5. 'from' → logprob: -4.51243257522583
    6. 'ans' → logprob: -4.76243257522583
    7. 'def' → logprob: -5.76243257522583
    8. 'answers' → logprob: -6.13743257522583
    9. 'answer' → logprob: -6.26243257522583
    10. 'eq' → logprob: -6.38743257522583

Token 550: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0759589672088623
    2. '=' → logprob: -3.8259589672088623
    3. 'ns' → logprob: -4.075959205627441
    4. '_set' → logprob: -4.950959205627441
    5. ',' → logprob: -5.200959205627441
    6. '_' → logprob: -5.950959205627441
    7. '_strength' → logprob: -6.200959205627441
    8. '   ' → logprob: -6.700959205627441
    9. '_edges' → logprob: -6.700959205627441
    10. ' ,' → logprob: -6.950959205627441

Token 551: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.019516445696353912
    2. ' B' → logprob: -4.144516468048096
    3. 'a' → logprob: -6.144516468048096
    4. 'A' → logprob: -7.019516468048096
    5. 'b' → logprob: -8.394515991210938
    6. '#' → logprob: -10.269515991210938
    7. ' a' → logprob: -10.394515991210938
    8. ' A' → logprob: -10.707015991210938
    9. 'cross' → logprob: -10.957015991210938
    10. '
' → logprob: -11.332015991210938

Token 552: ' equal' (ID: 12629)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.6641530394554138
    2. ')' → logprob: -1.5391530990600586
    3. ' in' → logprob: -2.4141530990600586
    4. ' have' → logprob: -3.2891530990600586
    5. 'in' → logprob: -4.289153099060059
    6. ',' → logprob: -4.289153099060059
    7. 'are' → logprob: -4.414153099060059
    8. 'have' → logprob: -4.414153099060059
    9. ' can' → logprob: -4.539153099060059
    10. '<|end|>' → logprob: -4.914153099060059

Token 553: ' if' (ID: 538)
  Prédit: '_strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_strength' → logprob: -0.6079667210578918
    2. ' =' → logprob: -2.482966661453247
    3. '_st' → logprob: -2.732966661453247
    4. 'strength' → logprob: -2.857966661453247
    5. ')' → logprob: -3.357966661453247
    6. '_' → logprob: -3.482966661453247
    7. 's' → logprob: -3.732966661453247
    8. 'ness' → logprob: -3.982966661453247
    9. '_str' → logprob: -4.357966899871826
    10. '_s' → logprob: -4.732966899871826

Token 554: '
' (ID: 198)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.7685316205024719
    2. 'they' → logprob: -2.393531560897827
    3. 'A' → logprob: -2.768531560897827
    4. ' (' → logprob: -2.893531560897827
    5. 'len' → logprob: -3.518531560897827
    6. 'color' → logprob: -3.518531560897827
    7. '(len' → logprob: -3.518531560897827
    8. '(a' → logprob: -3.768531560897827
    9. 'there' → logprob: -3.768531560897827
    10. ' there' → logprob: -3.893531560897827

Token 555: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2880040407180786
    2. '       ' → logprob: -1.6630040407180786
    3. ' #' → logprob: -2.913003921508789
    4. ' (' → logprob: -6.538003921508789
    5. ' both' → logprob: -6.538003921508789
    6. ' they' → logprob: -7.163003921508789
    7. ' A' → logprob: -7.913003921508789
    8. '   ' → logprob: -8.163003921508789
    9. 'def' → logprob: -8.288003921508789
    10. ' if' → logprob: -8.413003921508789

Token 556: ' #' (ID: 1069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9486610889434814
    2. '(' → logprob: -1.3236610889434814
    3. '(A' → logprob: -1.5736610889434814
    4. '       ' → logprob: -3.1986610889434814
    5. '(len' → logprob: -4.073660850524902
    6. 'A' → logprob: -4.198660850524902
    7. '   ' → logprob: -4.323660850524902
    8. 'len' → logprob: -4.448660850524902
    9. ' A' → logprob: -4.698660850524902
    10. '(B' → logprob: -4.948660850524902

Token 557: ' (' (ID: 350)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.7811844348907471
    2. '(A' → logprob: -2.031184434890747
    3. 'A' → logprob: -2.281184434890747
    4. ' (' → logprob: -2.406184434890747
    5. ' color' → logprob: -3.406184434890747
    6. '(color' → logprob: -3.531184434890747
    7. '   ' → logprob: -3.656184434890747
    8. 'len' → logprob: -3.781184434890747
    9. '       ' → logprob: -3.781184434890747
    10. '(' → logprob: -3.906184434890747

Token 558: '1' (ID: 16)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.51055908203125
    2. 'color' → logprob: -1.01055908203125
    3. 'a' → logprob: -4.88555908203125
    4. '(color' → logprob: -5.01055908203125
    5. '(A' → logprob: -5.13555908203125
    6. ' color' → logprob: -5.88555908203125
    7. 'len' → logprob: -6.01055908203125
    8. '(a' → logprob: -6.13555908203125
    9. ' (' → logprob: -6.13555908203125
    10. ' A' → logprob: -6.26055908203125

Token 559: ')' (ID: 8)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5179520845413208
    2. ')' → logprob: -1.5179520845413208
    3. ',' → logprob: -2.3929519653320312
    4. 'in' → logprob: -3.2679519653320312
    5. ' ,' → logprob: -3.7679519653320312
    6. ' )' → logprob: -4.142951965332031
    7. 'A' → logprob: -5.517951965332031
    8. ' A' → logprob: -5.892951965332031
    9. ' (' → logprob: -6.392951965332031
    10. '(A' → logprob: -6.767951965332031

Token 560: ' both' (ID: 2973)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2261009216308594
    2. '(A' → logprob: -1.6011009216308594
    3. 'color' → logprob: -2.2261009216308594
    4. ' (' → logprob: -2.2261009216308594
    5. 'get' → logprob: -2.7261009216308594
    6. 'len' → logprob: -2.9761009216308594
    7. '(a' → logprob: -3.6011009216308594
    8. ' color' → logprob: -3.6011009216308594
    9. ' A' → logprob: -3.7261009216308594
    10. '   ' → logprob: -3.7261009216308594

Token 561: ' cross' (ID: 8088)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.8088816404342651
    2. ' in' → logprob: -1.1838816404342651
    3. 'in' → logprob: -2.6838817596435547
    4. ' A' → logprob: -3.0588817596435547
    5. ' have' → logprob: -3.1838817596435547
    6. 'are' → logprob: -3.3088817596435547
    7. 'A' → logprob: -3.3088817596435547
    8. 'have' → logprob: -4.933881759643555
    9. ' belong' → logprob: -5.308881759643555
    10. ' color' → logprob: -7.683881759643555

Token 562: ' same' (ID: 2684)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.9487515687942505
    2. 'es' → logprob: -2.198751449584961
    3. '(A' → logprob: -2.198751449584961
    4. ' at' → logprob: -2.323751449584961
    5. '   ' → logprob: -2.323751449584961
    6. '(' → logprob: -2.698751449584961
    7. 'ing' → logprob: -2.823751449584961
    8. 'ings' → logprob: -3.198751449584961
    9. ' each' → logprob: -3.323751449584961
    10. ' the' → logprob: -3.448751449584961

Token 563: ' third' (ID: 6914)
  Prédit: ' street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' street' → logprob: -1.4031671285629272
    2. ' or' → logprob: -2.028167247772217
    3. ' streets' → logprob: -2.153167247772217
    4. 'or' → logprob: -2.278167247772217
    5. 'direction' → logprob: -2.653167247772217
    6. 'street' → logprob: -2.778167247772217
    7. 'stre' → logprob: -2.903167247772217
    8. ' direction' → logprob: -3.653167247772217
    9. '-' → logprob: -3.778167247772217
    10. 'side' → logprob: -4.028167247772217

Token 564: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.6534618735313416
    2. ' street' → logprob: -1.0284619331359863
    3. 'stre' → logprob: -3.1534619331359863
    4. ')' → logprob: -3.9034619331359863
    5. 'party' → logprob: -3.9034619331359863
    6. ' party' → logprob: -5.278461933135986
    7. '#' → logprob: -5.528461933135986
    8. ' streets' → logprob: -5.653461933135986
    9. ',' → logprob: -5.778461933135986
    10. '   ' → logprob: -6.028461933135986

Token 565: ' C' (ID: 363)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5801399350166321
    2. ' and' → logprob: -1.7051398754119873
    3. ' or' → logprob: -2.2051398754119873
    4. '       ' → logprob: -3.3301398754119873
    5. ',' → logprob: -3.7051398754119873
    6. ')
' → logprob: -3.7051398754119873
    7. ',
' → logprob: -3.9551398754119873
    8. '           ' → logprob: -4.580140113830566
    9. ' (' → logprob: -4.955140113830566
    10. '
' → logprob: -5.080140113830566

Token 566: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3596527874469757
    2. ',
' → logprob: -2.8596527576446533
    3. ' and' → logprob: -2.9846527576446533
    4. ',' → logprob: -3.2346527576446533
    5. ' or' → logprob: -3.3596527576446533
    6. ')' → logprob: -3.6096527576446533
    7. '
' → logprob: -3.8596527576446533
    8. ')
' → logprob: -4.234652996063232
    9. '           ' → logprob: -4.234652996063232
    10. ' (' → logprob: -4.359652996063232

Token 567: ' input' (ID: 3422)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -1.3491356372833252
    2. 'color' → logprob: -1.5991356372833252
    3. 'ns' → logprob: -1.5991356372833252
    4. 'adj' → logprob: -3.099135637283325
    5. ' color' → logprob: -3.224135637283325
    6. 'both' → logprob: -3.474135637283325
    7. 'the' → logprob: -3.849135637283325
    8. 'edges' → logprob: -3.849135637283325
    9. ' cross' → logprob: -3.849135637283325
    10. '   ' → logprob: -3.974135637283325

Token 568: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5347338914871216
    2. ')' → logprob: -1.7847338914871216
    3. ' and' → logprob: -2.034733772277832
    4. ',' → logprob: -3.409733772277832
    5. ' or' → logprob: -4.159733772277832
    6. ',
' → logprob: -4.284733772277832
    7. '
' → logprob: -4.284733772277832
    8. ')
' → logprob: -4.784733772277832
    9. ' (' → logprob: -4.909733772277832
    10. '   ' → logprob: -5.409733772277832

Token 569: 'that' (ID: 14116)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11661384254693985
    2. ')
' → logprob: -3.4916138648986816
    3. ' and' → logprob: -3.9916138648986816
    4. '       ' → logprob: -4.116613864898682
    5. ' )' → logprob: -4.241613864898682
    6. ' or' → logprob: -4.741613864898682
    7. '),' → logprob: -5.116613864898682
    8. '#' → logprob: -5.866613864898682
    9. '           ' → logprob: -6.366613864898682
    10. ',' → logprob: -6.491613864898682

Token 570: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5753702521324158
    2. 'cross' → logprob: -2.3253703117370605
    3. ' is' → logprob: -2.7003703117370605
    4. 's' → logprob: -3.3253703117370605
    5. '#' → logprob: -3.4503703117370605
    6. ')' → logprob: -3.5753703117370605
    7. 'both' → logprob: -3.8253703117370605
    8. ' crosses' → logprob: -3.9503703117370605
    9. 'def' → logprob: -4.3253703117370605
    10. 'for' → logprob: -4.3253703117370605

Token 571: ',' (ID: 11)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.7198337912559509
    2. 'for' → logprob: -2.5948338508605957
    3. 'both' → logprob: -3.0948338508605957
    4. '(' → logprob: -3.0948338508605957
    5. 'is' → logprob: -3.5948338508605957
    6. '(c' → logprob: -3.7198338508605957
    7. '   ' → logprob: -3.9698338508605957
    8. 'C' → logprob: -3.9698338508605957
    9. 'exists' → logprob: -4.094833850860596
    10. 'edges' → logprob: -4.219833850860596

Token 572: ' exist' (ID: 4310)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6332807540893555
    2. 'C' → logprob: -1.8832807540893555
    3. ')' → logprob: -2.3832807540893555
    4. 'A' → logprob: -2.5082807540893555
    5. 'both' → logprob: -2.5082807540893555
    6. '(' → logprob: -3.0082807540893555
    7. '#' → logprob: -3.0082807540893555
    8. ' for' → logprob: -3.1332807540893555
    9. '   ' → logprob: -3.2582807540893555
    10. 'cross' → logprob: -3.5082807540893555

Token 573: ' C' (ID: 363)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.5919067859649658
    2. 's' → logprob: -1.7169067859649658
    3. ' (' → logprob: -1.8419067859649658
    4. ' a' → logprob: -2.091906785964966
    5. ' at' → logprob: -2.966906785964966
    6. ')' → logprob: -3.091906785964966
    7. ' c' → logprob: -3.716906785964966
    8. '(s' → logprob: -3.716906785964966
    9. ' C' → logprob: -3.966906785964966
    10. ',' → logprob: -4.216906547546387

Token 574: ' such' (ID: 2238)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.271748423576355
    2. ' for' → logprob: -1.521748423576355
    3. ' in' → logprob: -2.0217485427856445
    4. 'for' → logprob: -2.5217485427856445
    5. 'in' → logprob: -2.7717485427856445
    6. '),' → logprob: -3.1467485427856445
    7. ' such' → logprob: -3.1467485427856445
    8. 's' → logprob: -3.5217485427856445
    9. ')
' → logprob: -3.5217485427856445
    10. ' and' → logprob: -3.7717485427856445

Token 575: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.03389418125152588
    2. ' that' → logprob: -3.9088940620422363
    3. 'at' → logprob: -4.783894062042236
    4. 'hat' → logprob: -5.533894062042236
    5. '#' → logprob: -7.908894062042236
    6. ')' → logprob: -8.408894538879395
    7. 'in' → logprob: -8.783894538879395
    8. ' in' → logprob: -10.533894538879395
    9. 'a' → logprob: -10.783894538879395
    10. '       ' → logprob: -10.783894538879395

Token 576: ' C' (ID: 363)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.2605946362018585
    2. ' (' → logprob: -2.510594606399536
    3. 'color' → logprob: -3.135594606399536
    4. 'cross' → logprob: -3.135594606399536
    5. '(a' → logprob: -4.385594844818115
    6. '(C' → logprob: -4.635594844818115
    7. '(' → logprob: -4.760594844818115
    8. '(c' → logprob: -5.260594844818115
    9. '(color' → logprob: -5.260594844818115
    10. 'edges' → logprob: -5.385594844818115

Token 577: '-A' (ID: 9406)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6173539757728577
    2. ' in' → logprob: -1.117353916168213
    3. ',' → logprob: -2.742353916168213
    4. ')' → logprob: -3.367353916168213
    5. 's' → logprob: -4.742353916168213
    6. '!=' → logprob: -5.117353916168213
    7. ' !=' → logprob: -5.242353916168213
    8. 'for' → logprob: -6.242353916168213
    9. ' for' → logprob: -6.367353916168213
    10. '==' → logprob: -6.367353916168213

Token 578: ' and' (ID: 326)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6331380009651184
    2. ' in' → logprob: -1.0081379413604736
    3. ')' → logprob: -2.7581379413604736
    4. ' and' → logprob: -3.7581379413604736
    5. 'and' → logprob: -4.383138179779053
    6. ' or' → logprob: -6.258138179779053
    7. 'or' → logprob: -7.883138179779053
    8. 's' → logprob: -8.008137702941895
    9. '>' → logprob: -8.258137702941895
    10. '),' → logprob: -8.383137702941895

Token 579: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.4828409254550934
    2. ' C' → logprob: -1.732840895652771
    3. 'B' → logprob: -1.857840895652771
    4. ' B' → logprob: -3.6078410148620605
    5. 'A' → logprob: -4.2328410148620605
    6. ' A' → logprob: -4.9828410148620605
    7. ' ' → logprob: -7.8578410148620605
    8. ')' → logprob: -8.170340538024902
    9. ' (' → logprob: -8.732840538024902
    10. 'c' → logprob: -9.045340538024902

Token 580: '-B' (ID: 8287)
  Prédit: '-B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-B' → logprob: -0.08745229244232178
    2. '-C' → logprob: -2.9624524116516113
    3. 'B' → logprob: -4.212452411651611
    4. '-' → logprob: -4.962452411651611
    5. '-b' → logprob: -5.962452411651611
    6. '-c' → logprob: -6.462452411651611
    7. 'C' → logprob: -7.212452411651611
    8. '-A' → logprob: -7.337452411651611
    9. '-cross' → logprob: -7.337452411651611
    10. ' in' → logprob: -7.462452411651611

Token 581: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9405217170715332
    2. ')' → logprob: -1.0655217170715332
    3. ' in' → logprob: -1.5655217170715332
    4. ' or' → logprob: -3.690521717071533
    5. 'and' → logprob: -4.440521717071533
    6. '),' → logprob: -5.190521717071533
    7. 'in' → logprob: -5.440521717071533
    8. ',' → logprob: -6.315521717071533
    9. ' )' → logprob: -6.440521717071533
    10. ' exists' → logprob: -6.940521717071533

Token 582: ' A' (ID: 355)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.596507728099823
    2. 'B' → logprob: -1.0965077877044678
    3. ' A' → logprob: -2.7215077877044678
    4. 'A' → logprob: -3.0965077877044678
    5. ' C' → logprob: -6.221507549285889
    6. 'C' → logprob: -6.721507549285889
    7. ' ' → logprob: -7.846507549285889
    8. '   ' → logprob: -8.971508026123047
    9. ')' → logprob: -9.284008026123047
    10. '#' → logprob: -9.534008026123047

Token 583: '-C' (ID: 10050)
  Prédit: '-C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-C' → logprob: -0.10607463121414185
    2. '-' → logprob: -2.481074571609497
    3. '-B' → logprob: -4.481074810028076
    4. ' -' → logprob: -6.731074810028076
    5. '-c' → logprob: -6.856074810028076
    6. ')-' → logprob: -6.981074810028076
    7. '-A' → logprob: -7.106074810028076
    8. '-cross' → logprob: -7.481074810028076
    9. '-E' → logprob: -7.981074810028076
    10. ')' → logprob: -8.856074333190918

Token 584: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7951037287712097
    2. ')' → logprob: -0.9201037287712097
    3. ' or' → logprob: -2.2951037883758545
    4. 'and' → logprob: -3.7951037883758545
    5. ' in' → logprob: -5.045103549957275
    6. '-' → logprob: -5.295103549957275
    7. '),' → logprob: -5.295103549957275
    8. ' )' → logprob: -5.920103549957275
    9. 'or' → logprob: -6.670103549957275
    10. ' exists' → logprob: -6.670103549957275

Token 585: ' B' (ID: 418)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.08884283155202866
    2. ' C' → logprob: -2.8388428688049316
    3. 'B' → logprob: -3.7138428688049316
    4. ' B' → logprob: -6.588842868804932
    5. '   ' → logprob: -8.213842391967773
    6. ' ' → logprob: -8.588842391967773
    7. 'A' → logprob: -9.838842391967773
    8. '	C' → logprob: -10.338842391967773
    9. '`' → logprob: -10.463842391967773
    10. ' ' → logprob: -10.463842391967773

Token 586: '-C' (ID: 10050)
  Prédit: '-C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-C' → logprob: -0.0024189415853470564
    2. 'C' → logprob: -7.0024189949035645
    3. '-' → logprob: -7.1274189949035645
    4. '-c' → logprob: -8.877418518066406
    5. ')' → logprob: -9.002418518066406
    6. ')-' → logprob: -9.002418518066406
    7. ' -' → logprob: -9.377418518066406
    8. '#' → logprob: -9.627418518066406
    9. '-cross' → logprob: -9.627418518066406
    10. '
' → logprob: -10.502418518066406

Token 587: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.277678906917572
    2. ' exists' → logprob: -2.902678966522217
    3. ' and' → logprob: -3.027678966522217
    4. ')
' → logprob: -3.027678966522217
    5. ' or' → logprob: -4.277678966522217
    6. '       ' → logprob: -4.277678966522217
    7. '):
' → logprob: -4.652678966522217
    8. ' in' → logprob: -4.652678966522217
    9. '#' → logprob: -5.152678966522217
    10. ' for' → logprob: -5.277678966522217

Token 588: ' input' (ID: 3422)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.5206829309463501
    2. 'edges' → logprob: -1.14568293094635
    3. ' edges' → logprob: -3.1456828117370605
    4. 'adj' → logprob: -3.7706828117370605
    5. ' cross' → logprob: -4.1456828117370605
    6. ')' → logprob: -6.1456828117370605
    7. ' adj' → logprob: -7.3956828117370605
    8. '
' → logprob: -7.5206828117370605
    9. 'both' → logprob: -7.8956828117370605
    10. 'input' → logprob: -8.020683288574219

Token 589: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13221195340156555
    2. ')
' → logprob: -3.257211923599243
    3. ' and' → logprob: -3.757211923599243
    4. '       ' → logprob: -3.882211923599243
    5. '
' → logprob: -5.132212162017822
    6. '#' → logprob: -5.132212162017822
    7. ' or' → logprob: -5.132212162017822
    8. ' for' → logprob: -5.382212162017822
    9. ' sets' → logprob: -5.507212162017822
    10. 's' → logprob: -5.882212162017822

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37004679441452026
    2. '
' → logprob: -1.370046854019165
    3. '<|end|>' → logprob: -2.995046854019165
    4. '        
' → logprob: -6.245046615600586
    5. '<|end|>' → logprob: -6.370046615600586
    6. '   ' → logprob: -8.370046615600586
    7. '\n' → logprob: -8.370046615600586
    8. '#' → logprob: -8.745046615600586
    9. ',' → logprob: -9.245046615600586
    10. ')' → logprob: -9.245046615600586

Token 591: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026897771283984184
    2. '
' → logprob: -3.901897668838501
    3. '        
' → logprob: -5.77689790725708
    4. '<|end|>' → logprob: -6.27689790725708
    5. '<|end|>' → logprob: -8.526897430419922
    6. '#' (adapté à ' #') → logprob: -8.526897430419922
    7. '   ' → logprob: -8.776897430419922
    8. ')' → logprob: -9.276897430419922
    9. ',' → logprob: -9.401897430419922
    10. ',
' → logprob: -9.651897430419922

Token 592: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2129976451396942
    2. '#' → logprob: -1.9629976749420166
    3. '
' → logprob: -3.2129976749420166
    4. 'for' → logprob: -5.3379974365234375
    5. 'from' → logprob: -5.9629974365234375
    6. '        
' → logprob: -6.7129974365234375
    7. 'def' → logprob: -7.2129974365234375
    8. ' for' → logprob: -7.5879974365234375
    9. 'For' → logprob: -8.212997436523438
    10. '   ' → logprob: -8.337997436523438

Token 593: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3890727162361145
    2. '#' → logprob: -1.8890726566314697
    3. '1' → logprob: -2.5140726566314697
    4. 'def' → logprob: -4.014072895050049
    5. ')
' → logprob: -4.139072895050049
    6. '2' → logprob: -4.514072895050049
    7. '
' → logprob: -4.639072895050049
    8. '       ' → logprob: -4.764072895050049
    9. 'for' → logprob: -5.264072895050049
    10. '0' → logprob: -5.514072895050049

Token 594: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001979072345420718
    2. '#' → logprob: -7.001978874206543
    3. '       ' → logprob: -7.501978874206543
    4. ')
' → logprob: -8.251978874206543
    5. ' )' → logprob: -9.126978874206543
    6. ')#' → logprob: -9.501978874206543
    7. '   ' → logprob: -11.251978874206543
    8. ')]' → logprob: -11.376978874206543
    9. 'def' → logprob: -12.251978874206543
    10. '<|end|>' → logprob: -12.376978874206543

Token 595: ' no' (ID: 860)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4664081037044525
    2. 'for' → logprob: -1.966408133506775
    3. '#' → logprob: -2.5914080142974854
    4. ' #' → logprob: -3.4664080142974854
    5. '       ' → logprob: -3.5914080142974854
    6. 'For' → logprob: -3.5914080142974854
    7. '
' → logprob: -4.0914082527160645
    8. 'from' → logprob: -4.5914082527160645
    9. ' For' → logprob: -4.8414082527160645
    10. ' (' → logprob: -5.0914082527160645

Token 596: ' D' (ID: 415)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' other' → logprob: -1.7040637731552124
    2. ' direct' → logprob: -1.9540637731552124
    3. ' edge' → logprob: -1.9540637731552124
    4. ' edges' → logprob: -2.579063892364502
    5. 'cross' → logprob: -2.579063892364502
    6. 'direct' → logprob: -3.079063892364502
    7. ' cross' → logprob: -3.204063892364502
    8. 'other' → logprob: -3.329063892364502
    9. ' crossing' → logprob: -3.329063892364502
    10. ' common' → logprob: -3.579063892364502

Token 597: ' such' (ID: 2238)
  Prédit: ' exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exists' → logprob: -0.7857821583747864
    2. ' that' → logprob: -1.4107820987701416
    3. ' such' → logprob: -1.5357820987701416
    4. ')' → logprob: -4.285782337188721
    5. 'exists' → logprob: -4.535782337188721
    6. 'that' → logprob: -4.660782337188721
    7. ' for' → logprob: -4.785782337188721
    8. 's' → logprob: -4.910782337188721
    9. ' with' → logprob: -5.535782337188721
    10. ' s' → logprob: -5.535782337188721

Token 598: ' that' (ID: 484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.7615036964416504
    2. ' not' → logprob: -1.8865036964416504
    3. '       ' → logprob: -1.8865036964416504
    4. ' in' → logprob: -2.1365036964416504
    5. 'not' → logprob: -2.1365036964416504
    6. 'in' → logprob: -2.6365036964416504
    7. ')' → logprob: -3.0115036964416504
    8. '=' → logprob: -3.1365036964416504
    9. '   ' → logprob: -3.7615036964416504
    10. '==' → logprob: -3.8865036964416504

Token 599: ' D' (ID: 415)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.8163089156150818
    2. '(color' → logprob: -2.3163089752197266
    3. 'D' → logprob: -2.5663089752197266
    4. '(C' → logprob: -2.9413089752197266
    5. ' color' → logprob: -3.0663089752197266
    6. '(D' → logprob: -3.5663089752197266
    7. '(' → logprob: -3.5663089752197266
    8. '(A' → logprob: -3.5663089752197266
    9. ' (' → logprob: -3.6913089752197266
    10. '(abs' → logprob: -4.191308975219727

Token 600: '-A' (ID: 9406)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.5169686675071716
    2. '-cross' → logprob: -2.2669687271118164
    3. '-' → logprob: -2.6419687271118164
    4. '==' → logprob: -2.7669687271118164
    5. 's' → logprob: -3.2669687271118164
    6. 'cross' → logprob: -3.7669687271118164
    7. ')' → logprob: -4.016968727111816
    8. ' in' → logprob: -4.391968727111816
    9. ' ==' → logprob: -4.516968727111816
    10. ' -' → logprob: -4.766968727111816

Token 601: ' and' (ID: 326)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.11720593273639679
    2. ' and' → logprob: -2.617205858230591
    3. ')' → logprob: -4.11720609664917
    4. 'or' → logprob: -4.49220609664917
    5. 'and' → logprob: -5.24220609664917
    6. ',' → logprob: -6.49220609664917
    7. '<|end|>' → logprob: -7.24220609664917
    8. ' in' → logprob: -7.49220609664917
    9. '
' → logprob: -7.86720609664917
    10. '       ' → logprob: -7.99220609664917

Token 602: ' B' (ID: 418)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.898374617099762
    2. 'D' → logprob: -0.898374617099762
    3. ' D' → logprob: -2.273374557495117
    4. ' A' → logprob: -3.023374557495117
    5. 'B' → logprob: -3.898374557495117
    6. 'C' → logprob: -4.898374557495117
    7. ' B' → logprob: -5.773374557495117
    8. ' C' → logprob: -6.398374557495117
    9. 'd' → logprob: -7.898374557495117
    10. '   ' → logprob: -8.085874557495117

Token 603: '-D' (ID: 11989)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05563646927475929
    2. '==' → logprob: -3.555636405944824
    3. '-in' → logprob: -5.055636405944824
    4. '-c' → logprob: -5.555636405944824
    5. ' in' → logprob: -5.930636405944824
    6. ')' → logprob: -6.055636405944824
    7. ' ==' → logprob: -6.555636405944824
    8. ' and' → logprob: -6.805636405944824
    9. '-cross' → logprob: -7.180636405944824
    10. 'in' → logprob: -7.555636405944824

Token 604: ' appear' (ID: 7680)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 605: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07160460948944092
    2. '
' → logprob: -3.4466047286987305
    3. 'def' → logprob: -4.3216047286987305
    4. '<|end|>' → logprob: -4.5716047286987305
    5. ')' → logprob: -6.0716047286987305
    6. 's' → logprob: -6.5716047286987305
    7. ',' → logprob: -6.5716047286987305
    8. ' and' → logprob: -6.6966047286987305
    9. 'for' → logprob: -6.9466047286987305
    10. '#' → logprob: -7.0716047286987305

Token 606: ' input' (ID: 3422)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.128594309091568
    2. 'edges' → logprob: -2.878594398498535
    3. ' cross' → logprob: -3.378594398498535
    4. 'input' → logprob: -4.003594398498535
    5. ' edges' → logprob: -4.628594398498535
    6. ' input' → logprob: -6.253594398498535
    7. 'inputs' → logprob: -9.503594398498535
    8. 'the' → logprob: -9.628594398498535
    9. '(edges' → logprob: -9.753594398498535
    10. ' the' → logprob: -10.253594398498535

Token 607: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 608: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 609: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5165760517120361
    2. '
' → logprob: -1.2665760517120361
    3. 'from' → logprob: -3.516576051712036
    4. '<|end|>' → logprob: -3.641576051712036
    5. '#' (adapté à ' #') → logprob: -3.766576051712036
    6. 'def' → logprob: -4.016575813293457
    7. '        
' → logprob: -4.516575813293457
    8. '   ' → logprob: -6.141575813293457
    9. 'edges' → logprob: -6.391575813293457
    10. 'for' → logprob: -6.891575813293457

Token 610: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7990304827690125
    2. '
' → logprob: -0.9240304827690125
    3. 'def' → logprob: -2.9240305423736572
    4. 'from' → logprob: -3.2990305423736572
    5. '#' → logprob: -3.5490305423736572
    6. 'for' → logprob: -5.049030303955078
    7. 'answers' → logprob: -5.424030303955078
    8. '   ' → logprob: -5.424030303955078
    9. '        
' → logprob: -5.549030303955078
    10. '<|end|>' → logprob: -6.424030303955078

Token 611: '3' (ID: 18)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1182994544506073
    2. '       ' → logprob: -2.7432994842529297
    3. ')
' → logprob: -3.8682994842529297
    4. 'def' → logprob: -4.61829948425293
    5. '   ' → logprob: -4.99329948425293
    6. ' )' → logprob: -5.49329948425293
    7. '#' → logprob: -5.99329948425293
    8. '
' → logprob: -6.49329948425293
    9. ' )
' → logprob: -7.99329948425293
    10. ' ' → logprob: -8.36829948425293

Token 612: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0039609745144844055
    2. ' )' → logprob: -6.253961086273193
    3. '       ' → logprob: -6.503961086273193
    4. ')
' → logprob: -8.003960609436035
    5. '#' → logprob: -9.628960609436035
    6. '   ' → logprob: -9.753960609436035
    7. 'def' → logprob: -11.253960609436035
    8. ')#' → logprob: -11.378960609436035
    9. '        ' → logprob: -11.878960609436035
    10. ')

' → logprob: -12.003960609436035

Token 613: ' no' (ID: 860)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7189788222312927
    2. 'for' → logprob: -1.7189788818359375
    3. '       ' → logprob: -1.9689788818359375
    4. '#' → logprob: -2.4689788818359375
    5. ' #' → logprob: -3.7189788818359375
    6. '
' → logprob: -3.7189788818359375
    7. 'def' → logprob: -4.0939788818359375
    8. ' continue' → logprob: -4.7189788818359375
    9. 'continue' → logprob: -5.0939788818359375
    10. 'from' → logprob: -5.0939788818359375

Token 614: ' E' (ID: 457)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.20291966199874878
    2. ' C' → logprob: -1.9529197216033936
    3. ' E' → logprob: -4.0779194831848145
    4. 'D' → logprob: -4.3279194831848145
    5. 'C' → logprob: -5.5779194831848145
    6. ' A' → logprob: -6.0779194831848145
    7. 'E' → logprob: -6.4529194831848145
    8. ' ' → logprob: -7.4529194831848145
    9. ' d' → logprob: -7.4529194831848145
    10. ' s' → logprob: -7.4529194831848145

Token 615: ' such' (ID: 2238)
  Prédit: ' such'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.01872878707945347
    2. 'such' → logprob: -4.268728733062744
    3. ' that' → logprob: -5.768728733062744
    4. '           ' → logprob: -7.643728733062744
    5. ' in' → logprob: -8.518729209899902
    6. 'that' → logprob: -8.643729209899902
    7. '       ' → logprob: -9.268729209899902
    8. ' for' → logprob: -9.643729209899902
    9. '```' → logprob: -9.893729209899902
    10. '   ' → logprob: -10.018729209899902

Token 616: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.2557096481323242
    2. 'such' → logprob: -1.7557096481323242
    3. ' that' → logprob: -3.380709648132324
    4. ' such' → logprob: -4.255709648132324
    5. '           ' → logprob: -6.505709648132324
    6. '   ' → logprob: -7.005709648132324
    7. '       ' → logprob: -7.380709648132324
    8. '               ' → logprob: -8.005709648132324
    9. 'hat' → logprob: -8.505709648132324
    10. '_that' → logprob: -8.880709648132324

Token 617: ' A' (ID: 355)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.6742216348648071
    2. ' E' → logprob: -1.0492216348648071
    3. ' D' → logprob: -2.5492215156555176
    4. 'D' → logprob: -3.0492215156555176
    5. '(E' → logprob: -5.799221515655518
    6. ' (' → logprob: -5.924221515655518
    7. 'A' → logprob: -6.174221515655518
    8. ' A' → logprob: -6.299221515655518
    9. 'C' → logprob: -7.049221515655518
    10. ' C' → logprob: -7.174221515655518

Token 618: '-E' (ID: 15684)
  Prédit: '-E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-E' → logprob: -0.27843141555786133
    2. '-' → logprob: -1.9034314155578613
    3. '-e' → logprob: -3.9034314155578613
    4. 'E' → logprob: -4.028431415557861
    5. ' -' → logprob: -4.403431415557861
    6. '-C' → logprob: -4.528431415557861
    7. '-cross' → logprob: -4.903431415557861
    8. '==' → logprob: -5.028431415557861
    9. ' in' → logprob: -6.028431415557861
    10. '<E' → logprob: -6.278431415557861

Token 619: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31353285908699036
    2. 'and' → logprob: -1.313532829284668
    3. ' in' → logprob: -9.188532829284668
    4. ')' → logprob: -9.563532829284668
    5. 'in' → logprob: -10.188532829284668
    6. ' or' → logprob: -10.938532829284668
    7. ' ' → logprob: -11.438532829284668
    8. '```' → logprob: -12.063532829284668
    9. ' и' → logprob: -12.313532829284668
    10. '[' → logprob: -12.688532829284668

Token 620: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.02986087277531624
    2. ' E' → logprob: -3.5298609733581543
    3. '   ' → logprob: -10.404860496520996
    4. '(E' → logprob: -11.279860496520996
    5. ' ' → logprob: -11.529860496520996
    6. '	E' → logprob: -11.654860496520996
    7. '<E' → logprob: -11.904860496520996
    8. 'e' → logprob: -12.279860496520996
    9. '```' → logprob: -12.279860496520996
    10. '\E' → logprob: -12.842360496520996

Token 621: '-B' (ID: 8287)
  Prédit: '-B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-B' → logprob: -0.002918757265433669
    2. '-E' → logprob: -6.002918720245361
    3. '-D' → logprob: -8.25291919708252
    4. '-' → logprob: -9.00291919708252
    5. '-A' → logprob: -10.50291919708252
    6. '-C' → logprob: -11.25291919708252
    7. ' -' → logprob: -11.62791919708252
    8. '-F' → logprob: -12.25291919708252
    9. '```' → logprob: -13.25291919708252
    10. '-b' → logprob: -13.50291919708252

Token 622: ' appear' (ID: 7680)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6090269684791565
    2. '<|end|>' → logprob: -0.9840269684791565
    3. '       ' → logprob: -2.8590269088745117
    4. 'def' → logprob: -4.484026908874512
    5. '<|end|>' → logprob: -4.609026908874512
    6. '        
' → logprob: -6.734026908874512
    7. '

' → logprob: -7.109026908874512
    8. '#' → logprob: -8.109026908874512
    9. '   ' → logprob: -8.484026908874512
    10. ')' → logprob: -8.609026908874512

Token 623: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10408767312765121
    2. ')' → logprob: -3.3540875911712646
    3. '
' → logprob: -3.4790875911712646
    4. ')
' → logprob: -4.229087829589844
    5. '   ' → logprob: -4.729087829589844
    6. '<|end|>' → logprob: -6.104087829589844
    7. 'def' → logprob: -6.354087829589844
    8. '           ' → logprob: -6.354087829589844
    9. ' for' → logprob: -7.479087829589844
    10. '```' → logprob: -7.604087829589844

Token 624: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.026368575170636177
    2. ' input' → logprob: -3.6513686180114746
    3. '```' → logprob: -10.776368141174316
    4. '(input' → logprob: -11.151368141174316
    5. 'set' → logprob: -11.401368141174316
    6. '[input' → logprob: -11.651368141174316
    7. '=input' → logprob: -12.776368141174316
    8. '
' → logprob: -12.901368141174316
    9. '<input' → logprob: -13.401368141174316
    10. '	input' → logprob: -14.151368141174316

Token 625: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6571905612945557
    2. '<|end|>' → logprob: -1.0321905612945557
    3. '       ' → logprob: -2.2821905612945557
    4. 'def' → logprob: -4.657190322875977
    5. '<|end|>' → logprob: -5.157190322875977
    6. '        
' → logprob: -5.282190322875977
    7. '   ' → logprob: -7.032190322875977
    8. '

' → logprob: -7.157190322875977
    9. '    
' → logprob: -8.157190322875977
    10. '#' → logprob: -8.657190322875977

Token 626: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 627: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0364102125167847
    2. '       ' → logprob: -1.1614102125167847
    3. '<|end|>' → logprob: -1.2864102125167847
    4. 'def' → logprob: -3.661410331726074
    5. '<|end|>' → logprob: -4.786410331726074
    6. '        
' → logprob: -4.786410331726074
    7. '#' (adapté à ' #') → logprob: -5.161410331726074
    8. '   ' → logprob: -6.286410331726074
    9. ')' → logprob: -7.161410331726074
    10. 'for' → logprob: -7.161410331726074

Token 628: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6163756847381592
    2. '#' → logprob: -1.3663756847381592
    3. 'equal' → logprob: -2.991375684738159
    4. 'cross' → logprob: -3.491375684738159
    5. '       ' → logprob: -3.616375684738159
    6. 'adj' → logprob: -3.741375684738159
    7. 'ns' → logprob: -4.241375923156738
    8. 'def' → logprob: -5.116375923156738
    9. 'street' → logprob: -5.241375923156738
    10. 'import' → logprob: -5.491375923156738

Token 629: ' build' (ID: 3024)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.26429283618927
    2. '#' → logprob: -1.38929283618927
    3. 'need' → logprob: -1.63929283618927
    4. 'from' → logprob: -2.5142927169799805
    5. 'def' → logprob: -2.8892927169799805
    6. ' need' → logprob: -3.7642927169799805
    7. 'import' → logprob: -3.8892927169799805
    8. ' continue' → logprob: -4.3892927169799805
    9. 'for' → logprob: -4.6392927169799805
    10. 'will' → logprob: -4.7642927169799805

Token 630: ':
' (ID: 734)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.26465919613838196
    2. 'adj' → logprob: -2.2646591663360596
    3. '#' → logprob: -3.0146591663360596
    4. 'cross' → logprob: -3.2646591663360596
    5. 'neighbor' → logprob: -4.764659404754639
    6. 'neighbors' → logprob: -4.889659404754639
    7. 'ns' → logprob: -5.139659404754639
    8. 'graph' → logprob: -5.389659404754639
    9. 'import' → logprob: -5.514659404754639
    10. 'id' → logprob: -6.889659404754639

Token 631: '       ' (ID: 309)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.27008453011512756
    2. '       ' → logprob: -2.8950846195220947
    3. '#' → logprob: -3.0200846195220947
    4. 'adj' → logprob: -3.5200846195220947
    5. 'ns' → logprob: -3.8950846195220947
    6. 'import' → logprob: -3.8950846195220947
    7. 'cross' → logprob: -4.020084381103516
    8. 'neighbors' → logprob: -4.645084381103516
    9. 'id' → logprob: -5.145084381103516
    10. ' from' → logprob: -5.270084381103516

Token 632: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3225206434726715
    2. 'adj' → logprob: -2.1975207328796387
    3. 'ns' → logprob: -2.9475207328796387
    4. 'cross' → logprob: -3.3225207328796387
    5. 'id' → logprob: -3.9475207328796387
    6. '#' (adapté à ' #') → logprob: -4.072520732879639
    7. 'neighbors' → logprob: -5.072520732879639
    8. ' from' → logprob: -5.447520732879639
    9. 'in' → logprob: -5.572520732879639
    10. 'import' → logprob: -5.697520732879639

Token 633: ' For' (ID: 2214)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4004003703594208
    2. '#' → logprob: -2.275400400161743
    3. 'adj' → logprob: -2.400400400161743
    4. 'ns' → logprob: -3.275400400161743
    5. 'cross' → logprob: -3.775400400161743
    6. 'id' → logprob: -3.900400400161743
    7. 'neighbors' → logprob: -3.900400400161743
    8. 'neighbor' → logprob: -4.525400161743164
    9. 'in' → logprob: -5.400400161743164
    10. 'equal' → logprob: -6.275400161743164

Token 634: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.026754437014460564
    2. ' each' → logprob: -3.776754379272461
    3. 'u' → logprob: -6.276754379272461
    4. 'i' → logprob: -7.026754379272461
    5. 'every' → logprob: -8.651754379272461
    6. 'e' → logprob: -9.026754379272461
    7. 'all' → logprob: -9.276754379272461
    8. '_each' → logprob: -9.651754379272461
    9. 'ns' → logprob: -10.151754379272461
    10. '#' → logprob: -10.651754379272461

Token 635: ' street' (ID: 12901)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.07798171043396
    2. 'street' → logprob: -1.20298171043396
    3. 'node' → logprob: -2.07798171043396
    4. ' street' → logprob: -2.32798171043396
    5. ' node' → logprob: -2.95298171043396
    6. 'i' → logprob: -3.45298171043396
    7. 's' → logprob: -4.077981948852539
    8. ' u' → logprob: -4.702981948852539
    9. 'A' → logprob: -4.952981948852539
    10. 'v' → logprob: -5.702981948852539

Token 636: ' s' (ID: 265)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18851417303085327
    2. 'id' → logprob: -3.188514232635498
    3. 'u' → logprob: -3.688514232635498
    4. ':' → logprob: -3.688514232635498
    5. '_id' → logprob: -4.313514232635498
    6. 'in' → logprob: -4.313514232635498
    7. 'adj' → logprob: -4.813514232635498
    8. ' in' → logprob: -5.188514232635498
    9. ' u' → logprob: -5.313514232635498
    10. 's' → logprob: -5.313514232635498

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05144127458333969
    2. ':
' → logprob: -4.051441192626953
    3. ':' → logprob: -4.301441192626953
    4. ',
' → logprob: -4.551441192626953
    5. '#' → logprob: -6.051441192626953
    6. 's' → logprob: -6.301441192626953
    7. 'in' → logprob: -6.926441192626953
    8. 'from' → logprob: -7.676441192626953
    9. '   ' → logprob: -7.801441192626953
    10. ' ,' → logprob: -7.926441192626953

Token 638: ' in' (ID: 306)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.8765770196914673
    2. 'in' → logprob: -1.5015770196914673
    3. 'cross' → logprob: -2.2515769004821777
    4. 'from' → logprob: -2.8765769004821777
    5. 'ns' → logprob: -3.5015769004821777
    6. 'neighbors' → logprob: -3.6265769004821777
    7. ' adj' → logprob: -4.001576900482178
    8. 'input' → logprob: -4.376576900482178
    9. '#' → logprob: -4.376576900482178
    10. 'connected' → logprob: -4.501576900482178

Token 639: '_in' (ID: 2267)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.2072225958108902
    2. '_degree' → logprob: -2.4572227001190186
    3. '_deg' → logprob: -3.9572227001190186
    4. '_s' → logprob: -4.3322224617004395
    5. 'edges' → logprob: -4.4572224617004395
    6. '_adj' → logprob: -4.4572224617004395
    7. '_id' → logprob: -5.0822224617004395
    8. '_set' → logprob: -5.0822224617004395
    9. 's' → logprob: -5.2072224617004395
    10. 'degree' → logprob: -5.4572224617004395

Token 640: '[s' (ID: 24177)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6246277093887329
    2. '_edges' → logprob: -1.249627709388733
    3. 'coming' → logprob: -3.1246275901794434
    4. 'degree' → logprob: -3.3746275901794434
    5. 'edge' → logprob: -3.8746275901794434
    6. '=' → logprob: -3.9996275901794434
    7. ' =' → logprob: -4.249627590179443
    8. 'deg' → logprob: -4.624627590179443
    9. 's' → logprob: -4.999627590179443
    10. 'd' → logprob: -5.499627590179443

Token 641: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020127680152654648
    2. ']=' → logprob: -4.145127773284912
    3. 's' → logprob: -6.895127773284912
    4. 'n' → logprob: -7.395127773284912
    5. '_in' → logprob: -7.645127773284912
    6. '],' → logprob: -8.020127296447754
    7. ']={' → logprob: -8.520127296447754
    8. '_edges' → logprob: -9.020127296447754
    9. '=' → logprob: -9.145127296447754
    10. '_neighbors' → logprob: -9.520127296447754

Token 642: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.036352161318063736
    2. ' =' → logprob: -3.4113521575927734
    3. '=set' → logprob: -6.286352157592773
    4. '=[]' → logprob: -8.286352157592773
    5. ',' → logprob: -9.036352157592773
    6. '={}' → logprob: -9.286352157592773
    7. '=[' → logprob: -9.536352157592773
    8. '=[]
' → logprob: -9.786352157592773
    9. '   ' → logprob: -10.036352157592773
    10. '=in' → logprob: -10.286352157592773

Token 643: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.011865709908306599
    2. '[]' → logprob: -4.511865615844727
    3. ' set' → logprob: -7.636865615844727
    4. '{' → logprob: -8.886865615844727
    5. '{}' → logprob: -9.636865615844727
    6. '[]
' → logprob: -9.886865615844727
    7. '[' → logprob: -10.511865615844727
    8. '   ' → logprob: -11.136865615844727
    9. ' []' → logprob: -11.136865615844727
    10. 'default' → logprob: -11.636865615844727

Token 644: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005569779314100742
    2. '()
' → logprob: -5.255569934844971
    3. '[]' → logprob: -9.005569458007812
    4. '(),' → logprob: -9.130569458007812
    5. '()

' → logprob: -9.755569458007812
    6. '=' → logprob: -11.755569458007812
    7. '=[]' → logprob: -12.130569458007812
    8. 'of' → logprob: -12.255569458007812
    9. '()]' → logprob: -12.255569458007812
    10. ' =' → logprob: -13.005569458007812

Token 645: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.22246584296226501
    2. '[]' → logprob: -2.222465753555298
    3. 'neighbors' → logprob: -2.847465753555298
    4. ' streets' → logprob: -4.597465991973877
    5. 'adj' → logprob: -5.097465991973877
    6. 'edges' → logprob: -5.347465991973877
    7. 'incoming' → logprob: -5.722465991973877
    8. '[]
' → logprob: -6.222465991973877
    9. 'neighbor' → logprob: -6.847465991973877
    10. 'street' → logprob: -6.847465991973877

Token 646: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.2909916937351227
    2. ' that' → logprob: -1.7909916639328003
    3. 'coming' → logprob: -4.04099178314209
    4. 's' → logprob: -4.16599178314209
    5. '_that' → logprob: -5.04099178314209
    6. 'from' → logprob: -5.54099178314209
    7. 'connected' → logprob: -5.54099178314209
    8. 'for' → logprob: -5.54099178314209
    9. '       ' → logprob: -5.79099178314209
    10. ')' → logprob: -5.79099178314209

Token 647: ' cross' (ID: 8088)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.9704728722572327
    2. ' have' → logprob: -1.720472812652588
    3. 'cross' → logprob: -1.720472812652588
    4. 's' → logprob: -2.970472812652588
    5. ' s' → logprob: -3.095472812652588
    6. ' cross' → logprob: -3.220472812652588
    7. 'point' → logprob: -3.345472812652588
    8. 'appear' → logprob: -3.470472812652588
    9. 'connect' → logprob: -4.595472812652588
    10. 'come' → logprob: -4.595472812652588

Token 648: ' to' (ID: 316)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.735344648361206
    2. 's' → logprob: -0.860344648361206
    3. 'it' → logprob: -2.485344648361206
    4. 'with' → logprob: -5.610344886779785
    5. ' s' → logprob: -5.985344886779785
    6. ' it' → logprob: -5.985344886779785
    7. '(s' → logprob: -6.110344886779785
    8. '
' → logprob: -7.235344886779785
    9. '   ' → logprob: -7.985344886779785
    10. ')' → logprob: -8.360344886779785

Token 649: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004246031399816275
    2. ' s' → logprob: -5.504246234893799
    3. '[s' → logprob: -8.75424575805664
    4. '
' → logprob: -11.87924575805664
    5. 'it' → logprob: -14.62924575805664
    6. '(s' → logprob: -14.87924575805664
    7. '```' → logprob: -14.87924575805664
    8. ' it' → logprob: -15.00424575805664
    9. '`s' → logprob: -15.37924575805664
    10. ' ' → logprob: -15.37924575805664

Token 650: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5236461162567139
    2. '_in' → logprob: -2.023646116256714
    3. ' =' → logprob: -2.023646116256714
    4. 'in' → logprob: -2.398646116256714
    5. 's' → logprob: -3.773646116256714
    6. '=' → logprob: -4.398646354675293
    7. ',' → logprob: -4.898646354675293
    8. '
' → logprob: -6.398646354675293
    9. 'from' → logprob: -6.648646354675293
    10. ' in' → logprob: -6.773646354675293

Token 651: 'D' (ID: 35)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16531769931316376
    2. '[])' → logprob: -3.5403177738189697
    3. '[]' → logprob: -3.9153177738189697
    4. ')
' → logprob: -4.165317535400391
    5. 's' → logprob: -4.290317535400391
    6. 'edges' → logprob: -4.540317535400391
    7. '),' → logprob: -4.915317535400391
    8. '])' → logprob: -4.915317535400391
    9. 'color' → logprob: -5.040317535400391
    10. '[])
' → logprob: -5.165317535400391

Token 652: ' where' (ID: 1919)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.1408213376998901
    2. ')' → logprob: -1.5158213376998901
    3. '])' → logprob: -1.7658213376998901
    4. ']' → logprob: -2.5158214569091797
    5. '),' → logprob: -3.0158214569091797
    6. ']),' → logprob: -3.5158214569091797
    7. ']_' → logprob: -3.8908214569091797
    8. 'in' → logprob: -4.01582145690918
    9. 's' → logprob: -4.01582145690918
    10. 'for' → logprob: -4.51582145690918

Token 653: ' D' (ID: 415)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.23556576669216156
    2. '(d' → logprob: -2.485565662384033
    3. '(s' → logprob: -2.610565662384033
    4. '(' → logprob: -4.110565662384033
    5. 'D' → logprob: -4.360565662384033
    6. ' (' → logprob: -4.985565662384033
    7. '(edges' → logprob: -5.860565662384033
    8. '(c' → logprob: -6.110565662384033
    9. 'edges' → logprob: -6.360565662384033
    10. '(A' → logprob: -6.360565662384033

Token 654: '-s' (ID: 2011)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.505825936794281
    2. '-in' → logprob: -1.3808259963989258
    3. ' in' → logprob: -2.380825996398926
    4. '_in' → logprob: -4.005825996398926
    5. ')' → logprob: -4.380825996398926
    6. '
' → logprob: -5.255825996398926
    7. 's' → logprob: -5.380825996398926
    8. ']' → logprob: -6.380825996398926
    9. ')-' → logprob: -7.255825996398926
    10. '```' → logprob: -7.380825996398926

Token 655: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.0154907703399658
    2. ')' → logprob: -1.1404907703399658
    3. '])' → logprob: -2.015490770339966
    4. ']' → logprob: -2.640490770339966
    5. ' in' → logprob: -3.390490770339966
    6. '),' → logprob: -3.515490770339966
    7. ').' → logprob: -4.390490531921387
    8. ']),' → logprob: -4.765490531921387
    9. 's' → logprob: -5.015490531921387
    10. '})' → logprob: -5.390490531921387

Token 656: ' input' (ID: 3422)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.019263198599219322
    2. 'cross' → logprob: -4.39426326751709
    3. ' edges' → logprob: -5.01926326751709
    4. '
' → logprob: -10.39426326751709
    5. 'input' → logprob: -10.64426326751709
    6. ' cross' → logprob: -10.89426326751709
    7. 'in' → logprob: -10.89426326751709
    8. 'inputs' → logprob: -12.01926326751709
    9. 'edge' → logprob: -12.14426326751709
    10. '   ' → logprob: -12.76926326751709

Token 657: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10945842415094376
    2. ')
' → logprob: -3.1094584465026855
    3. '),' → logprob: -3.7344584465026855
    4. ']' → logprob: -4.6094584465026855
    5. 's' → logprob: -4.7344584465026855
    6. '),
' → logprob: -5.3594584465026855
    7. ',' → logprob: -5.9844584465026855
    8. '_in' → logprob: -6.1094584465026855
    9. '])' → logprob: -6.2344584465026855
    10. ')=' → logprob: -6.8594584465026855

Token 658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05123007670044899
    2. ' =' → logprob: -3.5512301921844482
    3. 'in' → logprob: -4.676229953765869
    4. 's' → logprob: -5.301229953765869
    5. '=' → logprob: -5.426229953765869
    6. ',' → logprob: -7.176229953765869
    7. ' in' → logprob: -8.176230430603027
    8. '
' → logprob: -8.301230430603027
    9. '=in' → logprob: -8.676230430603027
    10. '_in' → logprob: -8.926230430603027

Token 659: ' #' (ID: 1069)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.675877571105957
    2. '       ' → logprob: -0.800877571105957
    3. ' in' → logprob: -3.800877571105957
    4. ',' → logprob: -4.550877571105957
    5. '
' → logprob: -6.050877571105957
    6. ' =' → logprob: -6.425877571105957
    7. ' and' → logprob: -6.550877571105957
    8. '=' → logprob: -7.175877571105957
    9. '#' (adapté à ' #') → logprob: -7.175877571105957
    10. '   ' → logprob: -7.925877571105957

Token 660: ' out' (ID: 842)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5635474920272827
    2. 'out' → logprob: -1.6885474920272827
    3. ' in' → logprob: -2.0635476112365723
    4. ' out' → logprob: -2.4385476112365723
    5. '       ' → logprob: -3.5635476112365723
    6. 'for' → logprob: -7.188547611236572
    7. ' for' → logprob: -7.438547611236572
    8. 'from' → logprob: -7.563547611236572
    9. '   ' → logprob: -7.813547611236572
    10. '#' → logprob: -8.876047134399414

Token 661: '_out' (ID: 12171)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.002607879461720586
    2. '_out' → logprob: -6.002607822418213
    3. '_edges' → logprob: -9.502608299255371
    4. '_set' → logprob: -10.627608299255371
    5. '_sets' → logprob: -11.127608299255371
    6. '_s' → logprob: -12.502608299255371
    7. '_of' → logprob: -12.877608299255371
    8. 's' → logprob: -13.127608299255371
    9. '_input' → logprob: -13.752608299255371
    10. '_neighbors' → logprob: -13.752608299255371

Token 662: '[s' (ID: 24177)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30020758509635925
    2. '[s' → logprob: -2.0502076148986816
    3. ' =' → logprob: -2.6752076148986816
    4. 's' → logprob: -3.3002076148986816
    5. '[' → logprob: -4.425207614898682
    6. '=[' → logprob: -4.550207614898682
    7. '```' → logprob: -7.425207614898682
    8. '=[]' → logprob: -7.925207614898682
    9. '=s' → logprob: -8.050207138061523
    10. '=sys' → logprob: -8.550207138061523

Token 663: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024047767743468285
    2. '=' → logprob: -4.3990478515625
    3. ']=' → logprob: -4.6490478515625
    4. ' =' → logprob: -6.3990478515625
    5. '[s' → logprob: -8.7740478515625
    6. ' ]' → logprob: -10.7740478515625
    7. '=set' → logprob: -10.8990478515625
    8. 's' → logprob: -11.8990478515625
    9. ']={' → logprob: -12.0240478515625
    10. '   ' → logprob: -12.0240478515625

Token 664: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5797019004821777
    2. '=' → logprob: -0.8297019004821777
    3. '_in' → logprob: -6.079701900482178
    4. 'in' → logprob: -6.954701900482178
    5. '[s' → logprob: -8.954702377319336
    6. 's' → logprob: -9.454702377319336
    7. 'In' → logprob: -9.829702377319336
    8. '   ' → logprob: -9.829702377319336
    9. '=[' → logprob: -10.579702377319336
    10. '=in' → logprob: -10.579702377319336

Token 665: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.005848800763487816
    2. '[' → logprob: -5.2558488845825195
    3. '{' → logprob: -8.25584888458252
    4. ' set' → logprob: -8.63084888458252
    5. '[s' → logprob: -9.75584888458252
    6. '{}' → logprob: -10.13084888458252
    7. '[]' → logprob: -10.50584888458252
    8. ' [' → logprob: -10.88084888458252
    9. '=set' → logprob: -11.00584888458252
    10. '   ' → logprob: -12.50584888458252

Token 666: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.026725195348262787
    2. '[s' → logprob: -4.1517252922058105
    3. ' of' → logprob: -5.0267252922058105
    4. '_of' → logprob: -6.2767252922058105
    5. '_in' → logprob: -7.7767252922058105
    6. 's' → logprob: -8.026724815368652
    7. 'in' → logprob: -8.151724815368652
    8. '[]' → logprob: -8.401724815368652
    9. '   ' → logprob: -8.651724815368652
    10. '_out' → logprob: -9.151724815368652

Token 667: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.017108237370848656
    2. ' streets' → logprob: -4.39210844039917
    3. 'street' → logprob: -6.14210844039917
    4. 's' → logprob: -6.51710844039917
    5. 'st' → logprob: -7.51710844039917
    6. '[]' → logprob: -9.267107963562012
    7. '[s' → logprob: -9.767107963562012
    8. 'edges' → logprob: -9.892107963562012
    9. 'sts' → logprob: -10.267107963562012
    10. '[' → logprob: -10.642107963562012

Token 668: ' which' (ID: 1118)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.2882969379425049
    2. ' that' → logprob: -1.4132969379425049
    3. '_that' → logprob: -5.913296699523926
    4. '[s' → logprob: -6.538296699523926
    5. 's' → logprob: -7.163296699523926
    6. ' =' → logprob: -7.288296699523926
    7. '       ' → logprob: -8.288296699523926
    8. 'where' → logprob: -8.288296699523926
    9. 'from' → logprob: -9.163296699523926
    10. '=' → logprob: -9.413296699523926

Token 669: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7835673093795776
    2. 'cross' → logprob: -1.0335673093795776
    3. ' s' → logprob: -2.658567428588867
    4. 'in' → logprob: -3.533567428588867
    5. '[s' → logprob: -4.033567428588867
    6. ' cross' → logprob: -4.283567428588867
    7. '
' → logprob: -4.783567428588867
    8. 'are' → logprob: -5.158567428588867
    9. '_cross' → logprob: -5.408567428588867
    10. 'out' → logprob: -5.408567428588867

Token 670: ' crosses' (ID: 95853)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -1.0476562976837158
    2. 'out' → logprob: -1.5476562976837158
    3. '_cross' → logprob: -1.9226562976837158
    4. '_out' → logprob: -2.047656297683716
    5. '```' → logprob: -2.797656297683716
    6. 's' → logprob: -3.672656297683716
    7. 'in' → logprob: -4.922656059265137
    8. ']' → logprob: -5.172656059265137
    9. 'outputs' → logprob: -5.172656059265137
    10. ')' → logprob: -5.172656059265137

Token 671: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.537498414516449
    2. '_in' → logprob: -1.4124984741210938
    3. '=' → logprob: -2.2874984741210938
    4. 'in' → logprob: -3.9124984741210938
    5. '
' → logprob: -3.9124984741210938
    6. 's' → logprob: -4.412498474121094
    7. '=
' → logprob: -5.412498474121094
    8. '```' → logprob: -5.662498474121094
    9. '[s' → logprob: -6.412498474121094
    10. ' =
' → logprob: -6.537498474121094

Token 672: 'E' (ID: 36)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9310293197631836
    2. 's' → logprob: -1.3060293197631836
    3. '[s' → logprob: -1.5560293197631836
    4. ']' → logprob: -3.1810293197631836
    5. ')
' → logprob: -3.9310293197631836
    6. '])' → logprob: -4.681029319763184
    7. 'for' → logprob: -4.931029319763184
    8. '
' → logprob: -4.931029319763184
    9. 'out' → logprob: -5.306029319763184
    10. '       ' → logprob: -5.806029319763184

Token 673: ' where' (ID: 1919)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.08296108990907669
    2. ')' → logprob: -3.082961082458496
    3. ']' → logprob: -3.582961082458496
    4. '])' → logprob: -6.582961082458496
    5. ']=' → logprob: -6.582961082458496
    6. 's' → logprob: -7.457961082458496
    7. 'out' → logprob: -7.832961082458496
    8. '       ' → logprob: -8.082961082458496
    9. ' =' → logprob: -8.207961082458496
    10. '   ' → logprob: -8.582961082458496

Token 674: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5195160508155823
    2. ' s' → logprob: -1.3945159912109375
    3. '(s' → logprob: -2.1445159912109375
    4. ' (' → logprob: -3.6445159912109375
    5. 'out' → logprob: -4.8945159912109375
    6. '(E' → logprob: -6.3945159912109375
    7. ' out' → logprob: -6.8945159912109375
    8. ' ' → logprob: -7.1445159912109375
    9. '
' → logprob: -7.1445159912109375
    10. '   ' → logprob: -7.6445159912109375

Token 675: '-E' (ID: 15684)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.44011184573173523
    2. '->' → logprob: -1.5651118755340576
    3. '-out' → logprob: -2.1901118755340576
    4. '-E' → logprob: -3.9401118755340576
    5. '-e' → logprob: -5.1901116371154785
    6. '-in' → logprob: -5.8151116371154785
    7. '-s' → logprob: -6.9401116371154785
    8. '-cross' → logprob: -6.9401116371154785
    9. '-output' → logprob: -6.9401116371154785
    10. ' out' → logprob: -7.5651116371154785

Token 676: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2871764600276947
    2. ' in' → logprob: -1.412176489830017
    3. ')' → logprob: -5.912176609039307
    4. 's' → logprob: -6.912176609039307
    5. '[s' → logprob: -7.662176609039307
    6. '```' → logprob: -7.912176609039307
    7. '   ' → logprob: -8.537176132202148
    8. '`' → logprob: -8.537176132202148
    9. ']' → logprob: -8.662176132202148
    10. '])' → logprob: -8.662176132202148

Token 677: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8501458764076233
    2. 'out' → logprob: -0.9751458764076233
    3. 'edges' → logprob: -1.8501458168029785
    4. ' input' → logprob: -4.8501458168029785
    5. 'cross' → logprob: -4.8501458168029785
    6. 's' → logprob: -5.1001458168029785
    7. ' edges' → logprob: -5.3501458168029785
    8. '[s' → logprob: -5.8501458168029785
    9. '
' → logprob: -6.2251458168029785
    10. ' out' → logprob: -6.7251458168029785

Token 678: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3077082335948944
    2. ']' → logprob: -1.4327082633972168
    3. 's' → logprob: -4.557708263397217
    4. ')
' → logprob: -4.557708263397217
    5. ']
' → logprob: -6.182708263397217
    6. '       ' → logprob: -7.432708263397217
    7. '[s' → logprob: -7.432708263397217
    8. '```' → logprob: -7.807708263397217
    9. '
' → logprob: -8.557707786560059
    10. ',' → logprob: -8.557707786560059

Token 679: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08454834669828415
    2. 'in' → logprob: -2.584548234939575
    3. ' in' → logprob: -5.584548473358154
    4. '
' → logprob: -6.584548473358154
    5. '   ' → logprob: -8.334547996520996
    6. '        
' → logprob: -8.834547996520996
    7. ' ' → logprob: -10.584547996520996
    8. ',' → logprob: -10.834547996520996
    9. '#' → logprob: -11.209547996520996
    10. 'from' → logprob: -11.959547996520996

Token 680: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' (adapté à ' in') → logprob: -0.10244756937026978
    2. '       ' → logprob: -2.477447509765625
    3. ' in' → logprob: -4.352447509765625
    4. '   ' → logprob: -7.727447509765625
    5. '        
' → logprob: -10.352447509765625
    6. ' ' → logprob: -10.977447509765625
    7. 'out' → logprob: -11.727447509765625
    8. '#' → logprob: -11.852447509765625
    9. '_in' → logprob: -11.852447509765625
    10. ')' → logprob: -12.602447509765625

Token 681: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -4.7755875129951164e-05
    2. '_edges' → logprob: -10.62504768371582
    3. '_out' → logprob: -11.50004768371582
    4. '_input' → logprob: -12.25004768371582
    5. '_' → logprob: -13.12504768371582
    6. '_ind' → logprob: -13.37504768371582
    7. '_set' → logprob: -14.00004768371582
    8. '_to' → logprob: -14.12504768371582
    9. 'in' → logprob: -14.50004768371582
    10. '_sets' → logprob: -15.00004768371582

Token 682: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04948382452130318
    2. ' =' → logprob: -3.0494837760925293
    3. '=[' → logprob: -7.049483776092529
    4. '[s' → logprob: -12.299484252929688
    5. 's' → logprob: -12.424484252929688
    6. ' =[' → logprob: -12.424484252929688
    7. '=[]' → logprob: -12.674484252929688
    8. '[' → logprob: -12.799484252929688
    9. '=s' → logprob: -12.924484252929688
    10. '={' → logprob: -13.424484252929688

Token 683: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005236360710114241
    2. ' [' → logprob: -5.2552361488342285
    3. '[s' → logprob: -13.505236625671387
    4. '[from' → logprob: -14.505236625671387
    5. '   ' → logprob: -15.005236625671387
    6. '[node' → logprob: -17.13023567199707
    7. '{' → logprob: -17.38023567199707
    8. '[f' → logprob: -17.38023567199707
    9. '[int' → logprob: -17.50523567199707
    10. '[start' → logprob: -17.63023567199707

Token 684: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0002624086628202349
    2. ' set' → logprob: -8.250262260437012
    3. '(set' → logprob: -14.375262260437012
    4. '=set' → logprob: -15.125262260437012
    5. '   ' → logprob: -16.125263214111328
    6. '       ' → logprob: -17.125263214111328
    7. '{' → logprob: -17.750263214111328
    8. ')set' → logprob: -18.000263214111328
    9. '	set' → logprob: -18.250263214111328
    10. ':set' → logprob: -18.375263214111328

Token 685: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006821724819019437
    2. '()]' → logprob: -7.375682353973389
    3. '()
' → logprob: -10.62568187713623
    4. 'for' → logprob: -11.75068187713623
    5. '[]' → logprob: -12.00068187713623
    6. ']()' → logprob: -12.00068187713623
    7. ' ()' → logprob: -12.12568187713623
    8. ']' → logprob: -13.12568187713623
    9. '()]
' → logprob: -13.12568187713623
    10. ' for' → logprob: -14.87568187713623

Token 686: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03110114485025406
    2. 'for' → logprob: -3.5311012268066406
    3. ' for' → logprob: -6.656101226806641
    4. '()
' → logprob: -10.40610122680664
    5. ']' → logprob: -11.65610122680664
    6. '       ' → logprob: -12.03110122680664
    7. '()]' → logprob: -12.15610122680664
    8. '   ' → logprob: -12.40610122680664
    9. ' ' → logprob: -13.53110122680664
    10. ' ()' → logprob: -13.53110122680664

Token 687: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.231772780418396
    2. ' range' → logprob: -1.731772780418396
    3. '_range' → logprob: -4.6067728996276855
    4. 'range' → logprob: -4.6067728996276855
    5. ' _' → logprob: -4.8567728996276855
    6. '_cnt' → logprob: -6.8567728996276855
    7. ' in' → logprob: -7.4817728996276855
    8. 'in' → logprob: -8.856772422790527
    9. '_s' → logprob: -8.981772422790527
    10. '(range' → logprob: -9.106772422790527

Token 688: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16085602343082428
    2. ' range' → logprob: -1.910856008529663
    3. ' in' → logprob: -8.410856246948242
    4. 'in' → logprob: -8.535856246948242
    5. '(range' → logprob: -8.535856246948242
    6. '_' → logprob: -11.285856246948242
    7. ' ' → logprob: -13.910856246948242
    8. '	range' → logprob: -14.285856246948242
    9. 'cnt' → logprob: -14.410856246948242
    10. 'count' → logprob: -14.660856246948242

Token 689: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234356038272381
    2. ' range' → logprob: -5.255234241485596
    3. '(range' → logprob: -14.505234718322754
    4. 'cnt' → logprob: -16.005233764648438
    5. '   ' → logprob: -17.255233764648438
    6. '	range' → logprob: -18.880233764648438
    7. 'in' → logprob: -19.005233764648438
    8. ' ' → logprob: -19.005233764648438
    9. 'count' → logprob: -19.380233764648438
    10. '       ' → logprob: -20.380233764648438

Token 690: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.3869188129901886
    2. 'cnt' → logprob: -1.1369187831878662
    3. ' cnt' → logprob: -10.136919021606445
    4. '[cnt' → logprob: -12.261919021606445
    5. 'range' → logprob: -13.386919021606445
    6. '	cnt' → logprob: -14.511919021606445
    7. '(' → logprob: -14.636919021606445
    8. 'color' → logprob: -15.011919021606445
    9. '   ' → logprob: -15.136919021606445
    10. '(count' → logprob: -15.386919021606445

Token 691: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.030176572501659393
    2. ']' → logprob: -3.5301766395568848
    3. '()]
' → logprob: -8.530176162719727
    4. ']
' → logprob: -8.655176162719727
    5. ')]
' → logprob: -10.280176162719727
    6. ')]' → logprob: -11.655176162719727
    7. ' ]
' → logprob: -12.280176162719727
    8. '()]' → logprob: -12.655176162719727
    9. ')
' → logprob: -14.030176162719727
    10. ']

' → logprob: -14.405176162719727

Token 692: '       ' (ID: 309)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.25354915857315063
    2. ' out' → logprob: -1.5035490989685059
    3. '       ' → logprob: -6.503549098968506
    4. '   ' → logprob: -9.253549575805664
    5. '	out' → logprob: -11.753549575805664
    6. 'for' → logprob: -11.878549575805664
    7. '[out' → logprob: -13.003549575805664
    8. ' for' → logprob: -13.128549575805664
    9. ' ' → logprob: -13.628549575805664
    10. '```' → logprob: -13.753549575805664

Token 693: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -2.081584716506768e-05
    2. ' out' → logprob: -10.875020980834961
    3. 'for' → logprob: -13.375020980834961
    4. '   ' → logprob: -16.25002098083496
    5. '	out' → logprob: -16.75002098083496
    6. '       ' → logprob: -16.87502098083496
    7. '_out' → logprob: -17.25002098083496
    8. '```' → logprob: -17.50002098083496
    9. '[out' → logprob: -18.12502098083496
    10. 'ou' → logprob: -18.50002098083496

Token 694: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -0.00027575582498684525
    2. '=' → logprob: -8.875275611877441
    3. ' =' → logprob: -9.375275611877441
    4. '=_' → logprob: -10.750275611877441
    5. '_' → logprob: -10.875275611877441
    6. '=[]' → logprob: -13.000275611877441
    7. '_in' → logprob: -13.125275611877441
    8. ' _' → logprob: -13.750275611877441
    9. '_off' → logprob: -14.125275611877441
    10. '_of' → logprob: -14.375275611877441

Token 695: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021130740642548
    2. ' =' → logprob: -2.3502113819122314
    3. '=[' → logprob: -13.100211143493652
    4. '[' → logprob: -13.600211143493652
    5. '=s' → logprob: -14.850211143493652
    6. ']' → logprob: -15.225211143493652
    7. 's' → logprob: -15.975211143493652
    8. '=[]' → logprob: -16.10021209716797
    9. '[s' → logprob: -16.22521209716797
    10. '＝' → logprob: -16.47521209716797

Token 696: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007099286303855479
    2. ' [' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.750709533691406
    4. ' ' → logprob: -21.500709533691406
    5. '([' → logprob: -21.875709533691406
    6. '	' → logprob: -22.250709533691406
    7. '[size' → logprob: -22.375709533691406
    8. '    ' → logprob: -22.625709533691406
    9. '[get' → logprob: -22.625709533691406
    10. '       ' → logprob: -22.750709533691406

Token 697: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.250005722045898
    3. '[]' → logprob: -15.000005722045898
    4. ' set' → logprob: -16.5000057220459
    5. '=set' → logprob: -16.7500057220459
    6. '   ' → logprob: -17.0000057220459
    7. '(set' → logprob: -17.0000057220459
    8. 'sets' → logprob: -17.7500057220459
    9. 'cnt' → logprob: -18.1250057220459
    10. '
' → logprob: -18.8750057220459

Token 698: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1160349458805285e-05
    2. '(cnt' → logprob: -11.875011444091797
    3. 'for' → logprob: -13.500011444091797
    4. '()]' → logprob: -13.875011444091797
    5. ' ()' → logprob: -14.000011444091797
    6. '()[' → logprob: -15.000011444091797
    7. '=' → logprob: -15.500011444091797
    8. ']' → logprob: -15.875011444091797
    9. '()
' → logprob: -16.125011444091797
    10. '[cnt' → logprob: -16.750011444091797

Token 699: ' for' (ID: 395)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.016831522807478905
    2. 'for' → logprob: -4.266831398010254
    3. '[cnt' → logprob: -6.641831398010254
    4. '()' → logprob: -7.016831398010254
    5. ' for' → logprob: -7.766831398010254
    6. ' (' → logprob: -11.641831398010254
    7. '(s' → logprob: -11.766831398010254
    8. 'cnt' → logprob: -11.891831398010254
    9. '(' → logprob: -12.516831398010254
    10. '(count' → logprob: -12.766831398010254

Token 700: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12952376902103424
    2. 'cnt' → logprob: -2.629523754119873
    3. '(cnt' → logprob: -3.504523754119873
    4. ' range' → logprob: -4.129523754119873
    5. '[cnt' → logprob: -5.879523754119873
    6. ' cnt' → logprob: -8.504524230957031
    7. '_range' → logprob: -9.504524230957031
    8. 'count' → logprob: -9.629524230957031
    9. '(range' → logprob: -10.379524230957031
    10. '_cnt' → logprob: -11.129524230957031

Token 701: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007288746419362724
    2. ' range' → logprob: -7.750729084014893
    3. 'cnt' → logprob: -8.125728607177734
    4. 'count' → logprob: -13.875728607177734
    5. '(range' → logprob: -14.250728607177734
    6. '(cnt' → logprob: -15.125728607177734
    7. '   ' → logprob: -15.625728607177734
    8. '
' → logprob: -16.000728607177734
    9. '[cnt' → logprob: -16.375728607177734
    10. '	range' → logprob: -17.750728607177734

Token 702: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000712670327629894
    2. ' range' → logprob: -7.500712871551514
    3. 'cnt' → logprob: -8.750712394714355
    4. '[cnt' → logprob: -14.625712394714355
    5. '(cnt' → logprob: -14.750712394714355
    6. '(range' → logprob: -14.875712394714355
    7. 'count' → logprob: -15.750712394714355
    8. '
' → logprob: -18.250713348388672
    9. ' cnt' → logprob: -18.250713348388672
    10. '   ' → logprob: -18.375713348388672

Token 703: '(cnt' (ID: 102125)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.1607641726732254
    2. '(cnt' → logprob: -1.910764217376709
    3. '[cnt' → logprob: -7.660764217376709
    4. ' cnt' → logprob: -10.16076374053955
    5. 'range' → logprob: -10.53576374053955
    6. '	cnt' → logprob: -13.03576374053955
    7. '
' → logprob: -14.03576374053955
    8. '   ' → logprob: -15.16076374053955
    9. 'count' → logprob: -16.160764694213867
    10. ' (' → logprob: -16.285764694213867

Token 704: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008783917874097824
    2. ')]' → logprob: -5.00878381729126
    3. '()]' → logprob: -6.25878381729126
    4. ')' → logprob: -9.383784294128418
    5. ']
' → logprob: -10.008784294128418
    6. ' ]' → logprob: -11.633784294128418
    7. ']()' → logprob: -11.633784294128418
    8. ')]
' → logprob: -13.258784294128418
    9. '()' → logprob: -13.633784294128418
    10. ']

' → logprob: -14.133784294128418

Token 705: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010152560658752918
    2. 'for' → logprob: -4.635152339935303
    3. ' for' → logprob: -8.010152816772461
    4. '<|end|>' → logprob: -9.885152816772461
    5. '   ' → logprob: -11.510152816772461
    6. '<|end|>' → logprob: -13.510152816772461
    7. '```' → logprob: -14.510152816772461
    8. '	for' → logprob: -15.260152816772461
    9. 'For' → logprob: -15.260152816772461
    10. 'from' → logprob: -15.635152816772461

Token 706: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.47563016414642334
    2. '       ' → logprob: -0.9756301641464233
    3. ' for' → logprob: -6.475630283355713
    4. '   ' → logprob: -11.850629806518555
    5. '#' → logprob: -13.350629806518555
    6. '
' → logprob: -14.100629806518555
    7. ' ' → logprob: -14.225629806518555
    8. '        
' → logprob: -14.725629806518555
    9. '	for' → logprob: -14.850629806518555
    10. 'from' → logprob: -15.850629806518555

Token 707: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.010319644585251808
    2. 'a' → logprob: -4.760319709777832
    3. '(A' → logprob: -6.510319709777832
    4. 'u' → logprob: -9.135319709777832
    5. '(a' → logprob: -9.760319709777832
    6. '(u' → logprob: -10.635319709777832
    7. ' A' → logprob: -11.760319709777832
    8. '   ' → logprob: -12.260319709777832
    9. '(' → logprob: -12.510319709777832
    10. ' (' → logprob: -12.885319709777832

Token 708: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.026427552103996277
    2. ',' → logprob: -3.6514275074005127
    3. ' ,' → logprob: -9.901427268981934
    4. ',b' → logprob: -10.151427268981934
    5. 'B' → logprob: -10.401427268981934
    6. ',_' → logprob: -13.276427268981934
    7. ',in' → logprob: -13.651427268981934
    8. ' in' → logprob: -14.276427268981934
    9. ',A' → logprob: -14.776427268981934
    10. ',(' → logprob: -14.776427268981934

Token 709: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023250602185726166
    2. 'in' → logprob: -3.7732505798339844
    3. '   ' → logprob: -13.148250579833984
    4. '	in' → logprob: -13.398250579833984
    5. '
' → logprob: -14.898250579833984
    6. '       ' → logprob: -15.148250579833984
    7. ' ' → logprob: -15.273250579833984
    8. '           ' → logprob: -15.398250579833984
    9. 'In' → logprob: -16.148250579833984
    10. 'import' → logprob: -16.648250579833984

Token 710: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.03586428612470627
    2. ' cross' → logprob: -3.7858643531799316
    3. 'edges' → logprob: -4.660864353179932
    4. ' edges' → logprob: -5.785864353179932
    5. '
' → logprob: -13.410863876342773
    6. '   ' → logprob: -13.535863876342773
    7. 'c' → logprob: -13.785863876342773
    8. ' ' → logprob: -14.160863876342773
    9. 'range' → logprob: -14.410863876342773
    10. 'edge' → logprob: -14.535863876342773

Token 711: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06539981067180634
    2. ':' → logprob: -2.8153998851776123
    3. '           ' → logprob: -5.815399646759033
    4. ' in' → logprob: -8.690400123596191
    5. '):
' → logprob: -9.440400123596191
    6. '       ' → logprob: -9.690400123596191
    7. 'in' → logprob: -9.815400123596191
    8. ':
' → logprob: -10.315400123596191
    9. '   ' → logprob: -11.440400123596191
    10. '():
' → logprob: -11.815400123596191

Token 712: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011370587162673473
    2. '   ' → logprob: -4.511370658874512
    3. ' out' → logprob: -8.386370658874512
    4. '       ' → logprob: -10.011370658874512
    5. 'out' → logprob: -10.261370658874512
    6. 'in' → logprob: -12.511370658874512
    7. '```' → logprob: -12.511370658874512
    8. '          ' → logprob: -12.761370658874512
    9. ' ' → logprob: -13.886370658874512
    10. ' in' → logprob: -14.011370658874512

Token 713: ' in' (ID: 306)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.639400839805603
    2. 'in' (adapté à ' in') → logprob: -0.764400839805603
    3. '           ' → logprob: -5.389400959014893
    4. ' out' → logprob: -6.889400959014893
    5. ' in' → logprob: -7.639400959014893
    6. '       ' → logprob: -7.764400959014893
    7. '   ' → logprob: -8.264400482177734
    8. '               ' → logprob: -11.139400482177734
    9. ' ' → logprob: -12.389400482177734
    10. '	in' → logprob: -13.014400482177734

Token 714: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.00011892046313732862
    2. 'in' → logprob: -9.12511920928955
    3. '[B' → logprob: -12.25011920928955
    4. '_out' → logprob: -13.75011920928955
    5. '[_' → logprob: -13.87511920928955
    6. 'In' → logprob: -13.87511920928955
    7. '   ' → logprob: -14.00011920928955
    8. '[in' → logprob: -14.75011920928955
    9. '[' → logprob: -15.25011920928955
    10. 'B' → logprob: -15.37511920928955

Token 715: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -7.107425062713446e-06
    2. '   ' → logprob: -12.625006675720215
    3. 'B' → logprob: -13.250006675720215
    4. '[b' → logprob: -14.125006675720215
    5. '[A' → logprob: -14.625006675720215
    6. ' [' → logprob: -15.625006675720215
    7. '[' → logprob: -15.750006675720215
    8. '       ' → logprob: -15.875006675720215
    9. '           ' → logprob: -16.00000762939453
    10. '```' → logprob: -17.00000762939453

Token 716: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0015548591036349535
    2. '.add' → logprob: -6.6265549659729
    3. '.' → logprob: -9.001554489135742
    4. ').' → logprob: -9.501554489135742
    5. '           ' → logprob: -10.876554489135742
    6. '}.' → logprob: -12.376554489135742
    7. 'add' → logprob: -13.501554489135742
    8. ' .' → logprob: -13.626554489135742
    9. '.append' → logprob: -13.626554489135742
    10. ']' → logprob: -13.626554489135742

Token 717: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -4.320199877838604e-07
    2. '.add' → logprob: -15.5
    3. ' add' → logprob: -16.375
    4. 'append' → logprob: -20.375
    5. '_add' → logprob: -21.125
    6. '	add' → logprob: -21.25
    7. 'update' → logprob: -21.375
    8. ')add' → logprob: -21.75
    9. 'insert' → logprob: -23.5
    10. 'adde' → logprob: -23.875

Token 718: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.10022111982107162
    2. 'A' → logprob: -2.3502211570739746
    3. ' A' → logprob: -11.725220680236816
    4. '   ' → logprob: -13.725220680236816
    5. '[A' → logprob: -13.975220680236816
    6. '(' → logprob: -14.100220680236816
    7. '	A' → logprob: -14.350220680236816
    8. 'a' → logprob: -14.350220680236816
    9. 's' → logprob: -14.725220680236816
    10. '       ' → logprob: -14.850220680236816

Token 719: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006796724628657103
    2. ')
' → logprob: -5.006796836853027
    3. '           ' → logprob: -9.506796836853027
    4. '       ' → logprob: -12.756796836853027
    5. '<|end|>' → logprob: -13.256796836853027
    6. ' )' → logprob: -14.006796836853027
    7. ')#' → logprob: -14.756796836853027
    8. '),' → logprob: -15.131796836853027
    9. ')

' → logprob: -15.631796836853027
    10. ')
' → logprob: -16.25679588317871

Token 720: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014046367723494768
    2. 'out' → logprob: -7.001404762268066
    3. ' out' → logprob: -8.126404762268066
    4. '       ' → logprob: -9.001404762268066
    5. '   ' → logprob: -9.626404762268066
    6. '<|end|>' → logprob: -13.126404762268066
    7. '```' → logprob: -13.126404762268066
    8. ' ' → logprob: -13.876404762268066
    9. 'for' → logprob: -14.001404762268066
    10. '               ' → logprob: -14.501404762268066

Token 721: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.0003361774142831564
    2. ' out' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.875336647033691
    4. '       ' → logprob: -16.250335693359375
    5. '	out' → logprob: -16.250335693359375
    6. '```' → logprob: -16.250335693359375
    7. '           ' → logprob: -18.000335693359375
    8. '
' → logprob: -18.375335693359375
    9. '_out' → logprob: -18.750335693359375
    10. 'Out' → logprob: -19.000335693359375

Token 722: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -9.849109119386412e-06
    2. '[' → logprob: -12.875009536743164
    3. '_off' → logprob: -13.500009536743164
    4. '[out' → logprob: -13.750009536743164
    5. '[B' → logprob: -13.875009536743164
    6. '```' → logprob: -14.000009536743164
    7. '_in' → logprob: -14.125009536743164
    8. 'Out' → logprob: -14.375009536743164
    9. '_of' → logprob: -15.125009536743164
    10. '
' → logprob: -15.125009536743164

Token 723: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -5.200166469876422e-06
    2. 'A' → logprob: -13.125004768371582
    3. '[B' → logprob: -13.250004768371582
    4. '```' → logprob: -14.250004768371582
    5. '[' → logprob: -14.875004768371582
    6. ' [' → logprob: -15.750004768371582
    7. '   ' → logprob: -16.7500057220459
    8. '=A' → logprob: -17.0000057220459
    9. '[a' → logprob: -17.2500057220459
    10. '(A' → logprob: -17.2500057220459

Token 724: '].' (ID: 1651)
  Prédit: '[B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.3870196044445038
    2. '].' → logprob: -1.1370196342468262
    3. ').' → logprob: -10.137019157409668
    4. '.' → logprob: -10.387019157409668
    5. 'B' → logprob: -10.512019157409668
    6. '][' → logprob: -11.262019157409668
    7. ']' → logprob: -11.387019157409668
    8. '[A' → logprob: -12.137019157409668
    9. '.add' → logprob: -12.637019157409668
    10. '[' → logprob: -12.762019157409668

Token 725: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0001254693343071267
    2. 'append' → logprob: -9.000125885009766
    3. ' add' → logprob: -13.125125885009766
    4. '```' → logprob: -18.500125885009766
    5. ')add' → logprob: -18.750125885009766
    6. 'adde' → logprob: -19.625125885009766
    7. '	add' → logprob: -19.625125885009766
    8. '.add' → logprob: -19.750125885009766
    9. '(add' → logprob: -19.750125885009766
    10. 'B' → logprob: -20.125125885009766

Token 726: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -7.941850526549388e-06
    2. 'B' → logprob: -11.750007629394531
    3. '(' → logprob: -17.62500762939453
    4. '	B' → logprob: -19.87500762939453
    5. '```' → logprob: -21.37500762939453
    6. '(b' → logprob: -21.50000762939453
    7. '   ' → logprob: -21.62500762939453
    8. '(A' → logprob: -21.62500762939453
    9. '[B' → logprob: -21.62500762939453
    10. ' (' → logprob: -22.37500762939453

Token 727: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. ')
' → logprob: -12.500007629394531
    3. '<|end|>' → logprob: -13.125007629394531
    4. '       ' → logprob: -13.875007629394531
    5. ' )' → logprob: -15.500007629394531
    6. '           ' → logprob: -15.875007629394531
    7. ')#' → logprob: -16.75000762939453
    8. ')return' → logprob: -16.75000762939453
    9. '),' → logprob: -16.75000762939453
    10. '}' → logprob: -17.12500762939453

Token 728: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16282574832439423
    2. '<|end|>' → logprob: -2.1628258228302
    3. '
' → logprob: -3.7878258228302
    4. 'for' → logprob: -5.287825584411621
    5. '```' → logprob: -5.912825584411621
    6. '<|end|>' → logprob: -6.412825584411621
    7. ' for' → logprob: -6.662825584411621
    8. '        
' → logprob: -6.912825584411621
    9. 'def' → logprob: -7.662825584411621
    10. '   ' → logprob: -9.162825584411621

Token 729: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2223486453294754
    2. 'for' → logprob: -1.722348690032959
    3. ' for' → logprob: -4.722348690032959
    4. 'def' → logprob: -5.222348690032959
    5. '
' → logprob: -6.222348690032959
    6. '   ' → logprob: -6.597348690032959
    7. '#' (adapté à ' #') → logprob: -6.597348690032959
    8. 'from' → logprob: -7.347348690032959
    9. 'answers' → logprob: -8.2223482131958
    10. '```' → logprob: -8.5973482131958

Token 730: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2195969969034195
    2. '       ' → logprob: -1.8445969820022583
    3. ' for' → logprob: -3.969597101211548
    4. 'def' → logprob: -4.719596862792969
    5. 'answer' → logprob: -5.844596862792969
    6. 'from' → logprob: -6.594596862792969
    7. 'res' → logprob: -6.719596862792969
    8. '#' → logprob: -6.969596862792969
    9. 'answers' → logprob: -6.969596862792969
    10. '   ' → logprob: -7.094596862792969

Token 731: ' checking' (ID: 19141)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18383008241653442
    2. ' i' → logprob: -2.3088300228118896
    3. 's' → logprob: -4.433830261230469
    4. ' s' → logprob: -4.558830261230469
    5. 'A' → logprob: -4.683830261230469
    6. 'q' → logprob: -5.058830261230469
    7. 'a' → logprob: -5.933830261230469
    8. ' q' → logprob: -5.933830261230469
    9. 'def' → logprob: -6.058830261230469
    10. 'u' → logprob: -6.058830261230469

Token 732: ' condition' (ID: 7060)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0855478048324585
    2. 'i' → logprob: -1.5855478048324585
    3. 'def' → logprob: -1.9605478048324585
    4. ' for' → logprob: -2.335547924041748
    5. 'u' → logprob: -2.835547924041748
    6. 's' → logprob: -3.085547924041748
    7. ' def' → logprob: -3.585547924041748
    8. ' s' → logprob: -3.960547924041748
    9. ' i' → logprob: -4.085547924041748
    10. 'A' → logprob: -4.210547924041748

Token 733: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28174105286598206
    2. ' for' → logprob: -2.156741142272949
    3. '       ' → logprob: -3.031741142272949
    4. 'def' → logprob: -3.406741142272949
    5. 'equal' → logprob: -3.781741142272949
    6. '#' → logprob: -4.281741142272949
    7. 'visited' → logprob: -6.281741142272949
    8. 'answer' → logprob: -6.281741142272949
    9. '
' → logprob: -6.906741142272949
    10. '   ' → logprob: -7.406741142272949

Token 734: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.615670919418335
    2. 'C' → logprob: -1.740670919418335
    3. '1' → logprob: -1.865670919418335
    4. '#' → logprob: -2.240670919418335
    5. 'c' → logprob: -2.615670919418335
    6. 's' → logprob: -2.865670919418335
    7. 'A' → logprob: -3.240670919418335
    8. ')' → logprob: -3.490670919418335
    9. ' s' → logprob: -3.490670919418335
    10. '0' → logprob: -3.740670919418335

Token 735: '),' (ID: 936)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7853323817253113
    2. 'for' → logprob: -1.285332441329956
    3. '#' → logprob: -1.910332441329956
    4. ' for' → logprob: -3.285332441329956
    5. '
' → logprob: -3.660332441329956
    6. 's' → logprob: -4.160332202911377
    7. ',' → logprob: -4.285332202911377
    8. ')' → logprob: -4.410332202911377
    9. ')
' → logprob: -5.785332202911377
    10. '):
' → logprob: -6.410332202911377

Token 736: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21372723579406738
    2. '#' → logprob: -2.7137272357940674
    3. 'equal' → logprob: -3.4637272357940674
    4. 'from' → logprob: -3.7137272357940674
    5. 'def' → logprob: -4.338726997375488
    6. ' for' → logprob: -4.838726997375488
    7. 'neighbors' → logprob: -5.088726997375488
    8. 'common' → logprob: -5.088726997375488
    9. 'idx' → logprob: -5.588726997375488
    10. 'adj' → logprob: -5.713726997375488

Token 737: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2581266462802887
    2. '#' → logprob: -2.258126735687256
    3. 'continue' → logprob: -2.883126735687256
    4. 'def' → logprob: -3.383126735687256
    5. 'need' → logprob: -5.133126735687256
    6. 'complete' → logprob: -5.133126735687256
    7. ' for' → logprob: -5.383126735687256
    8. 'build' → logprob: -5.508126735687256
    9. 'check' → logprob: -5.633126735687256
    10. 'will' → logprob: -6.633126735687256

Token 738: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46094611287117004
    2. 'common' → logprob: -1.3359460830688477
    3. 'all' → logprob: -3.2109460830688477
    4. 'third' → logprob: -3.3359460830688477
    5. '#' → logprob: -5.460946083068848
    6. 'equal' → logprob: -5.460946083068848
    7. 'C' → logprob: -5.710946083068848
    8. 'def' → logprob: -5.710946083068848
    9. 'c' → logprob: -5.835946083068848
    10. 'the' → logprob: -6.460946083068848

Token 739: ' there' (ID: 1354)
  Prédit: 'there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'there' → logprob: -0.2958811819553375
    2. 'exists' → logprob: -2.1708812713623047
    3. 'any' → logprob: -2.6708812713623047
    4. ' there' → logprob: -3.2958812713623047
    5. 'C' → logprob: -4.795881271362305
    6. 'A' → logprob: -5.170881271362305
    7. 'len' → logprob: -5.545881271362305
    8. '#' → logprob: -5.795881271362305
    9. ' any' → logprob: -5.795881271362305
    10. ' exists' → logprob: -6.045881271362305

Token 740: ' is' (ID: 382)
  Prédit: 'exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exists' → logprob: -0.012777210213243961
    2. 'is' → logprob: -4.762777328491211
    3. ' exists' → logprob: -5.762777328491211
    4. 'exist' → logprob: -7.012777328491211
    5. '```' → logprob: -10.387777328491211
    6. 'ex' → logprob: -10.512777328491211
    7. ' is' → logprob: -10.637777328491211
    8. 's' → logprob: -11.512777328491211
    9. '#' → logprob: -11.887777328491211
    10. ''s' → logprob: -12.387777328491211

Token 741: ' C' (ID: 363)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9753883481025696
    2. 'a' → logprob: -1.2253882884979248
    3. ' any' → logprob: -2.225388288497925
    4. 'any' → logprob: -2.600388288497925
    5. ' C' → logprob: -2.975388288497925
    6. 'C' → logprob: -3.100388288497925
    7. ' some' → logprob: -3.475388288497925
    8. 'some' → logprob: -4.100388526916504
    9. ' an' → logprob: -6.850388526916504
    10. 'c' → logprob: -7.350388526916504

Token 742: ' with' (ID: 483)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25623542070388794
    2. ' in' → logprob: -2.256235361099243
    3. ' such' → logprob: -2.631235361099243
    4. 'such' → logprob: -3.256235361099243
    5. 'for' → logprob: -5.131235599517822
    6. 's' → logprob: -7.006235599517822
    7. ' for' → logprob: -7.131235599517822
    8. '<|end|>' → logprob: -7.631235599517822
    9. 'with' → logprob: -7.881235599517822
    10. ',' → logprob: -7.881235599517822

Token 743: ' C' (ID: 363)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8779459595680237
    2. '(A' → logprob: -1.502945899963379
    3. 'C' → logprob: -1.627945899963379
    4. 'in' → logprob: -3.127945899963379
    5. '(C' → logprob: -3.377945899963379
    6. '(s' → logprob: -3.752945899963379
    7. '(in' → logprob: -4.127945899963379
    8. 'c' → logprob: -4.627945899963379
    9. '(' → logprob: -4.627945899963379
    10. 'cross' → logprob: -5.127945899963379

Token 744: '-A' (ID: 9406)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2164285033941269
    2. ' in' → logprob: -1.841428518295288
    3. '-in' → logprob: -4.341428279876709
    4. 'cross' → logprob: -4.466428279876709
    5. 'ross' → logprob: -5.466428279876709
    6. '
' → logprob: -7.216428279876709
    7. 'n' → logprob: -7.466428279876709
    8. ' cross' → logprob: -7.591428279876709
    9. ' crossing' → logprob: -7.591428279876709
    10. 's' → logprob: -7.716428279876709

Token 745: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.2745639979839325
    2. 'in' → logprob: -1.7745640277862549
    3. ' and' → logprob: -2.774564027786255
    4. ' in' → logprob: -5.399563789367676
    5. '_in' → logprob: -6.524563789367676
    6. '&' → logprob: -7.649563789367676
    7. ' &' → logprob: -7.899563789367676
    8. '<|end|>' → logprob: -8.274563789367676
    9. 'intersection' → logprob: -8.774563789367676
    10. 's' → logprob: -8.899563789367676

Token 746: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.014169503934681416
    2. ' C' → logprob: -4.264169692993164
    3. ' ' → logprob: -13.014169692993164
    4. 'c' → logprob: -13.514169692993164
    5. '
' → logprob: -13.639169692993164
    6. 'cross' → logprob: -14.639169692993164
    7. '   ' → logprob: -14.889169692993164
    8. '#' → logprob: -16.639169692993164
    9. ' ' → logprob: -17.014169692993164
    10. '  ' → logprob: -17.014169692993164

Token 747: '-B' (ID: 8287)
  Prédit: '-B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-B' → logprob: -0.0002398938377154991
    2. ' -' → logprob: -9.125240325927734
    3. '-' → logprob: -9.500240325927734
    4. '-A' → logprob: -10.750240325927734
    5. 'B' → logprob: -11.000240325927734
    6. '-b' → logprob: -11.750240325927734
    7. '-C' → logprob: -13.000240325927734
    8. '```' → logprob: -13.125240325927734
    9. 's' → logprob: -13.500240325927734
    10. ' B' → logprob: -13.875240325927734

Token 748: ' crossing' (ID: 50946)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.192757248878479
    2. 'for' → logprob: -1.192757248878479
    3. '       ' → logprob: -1.567757248878479
    4. ' =' → logprob: -3.0677571296691895
    5. 's' → logprob: -3.1927571296691895
    6. 'def' → logprob: -3.8177571296691895
    7. '
' → logprob: -3.9427571296691895
    8. ',' → logprob: -4.8177571296691895
    9. '           ' → logprob: -5.0677571296691895
    10. 'in' → logprob: -5.5677571296691895

Token 749: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3136143386363983
    2. '
' → logprob: -1.5636143684387207
    3. 'def' → logprob: -4.188614368438721
    4. 'for' → logprob: -4.188614368438721
    5. ' for' → logprob: -4.313614368438721
    6. '<|end|>' → logprob: -4.563614368438721
    7. '<|end|>' → logprob: -6.063614368438721
    8. ',' → logprob: -7.438614368438721
    9. '        
' → logprob: -7.688614368438721
    10. 'from' → logprob: -8.063613891601562

Token 750: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6822124719619751
    2. ' for' → logprob: -0.9322124719619751
    3. '<|end|>' → logprob: -3.1822123527526855
    4. 'for' → logprob: -3.5572123527526855
    5. ' or' → logprob: -5.0572123527526855
    6. '<|end|>' → logprob: -5.1822123527526855
    7. '#' → logprob: -5.4322123527526855
    8. ' and' → logprob: -5.8072123527526855
    9. '           ' → logprob: -6.8072123527526855
    10. ')' → logprob: -6.9322123527526855

Token 751: ' #' (ID: 1069)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7965009212493896
    2. 'for' → logprob: -1.6715009212493896
    3. ' for' → logprob: -1.7965009212493896
    4. '#' (adapté à ' #') → logprob: -2.2965009212493896
    5. 'or' → logprob: -3.2965009212493896
    6. '<|end|>' → logprob: -4.171501159667969
    7. ')' → logprob: -4.296501159667969
    8. ' #' → logprob: -4.546501159667969
    9. ' ' → logprob: -5.296501159667969
    10. 's' → logprob: -5.921501159667969

Token 752: ' or' (ID: 503)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0041656494140625
    2. 'for' → logprob: -1.0041656494140625
    3. '#' → logprob: -2.3791656494140625
    4. ' or' → logprob: -2.5041656494140625
    5. 'or' → logprob: -3.3791656494140625
    6. '       ' → logprob: -3.7541656494140625
    7. 's' → logprob: -4.5041656494140625
    8. ' #' → logprob: -4.7541656494140625
    9. ' s' → logprob: -5.3791656494140625
    10. 'def' → logprob: -6.1291656494140625

Token 753: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7761483788490295
    2. 'if' → logprob: -2.1511483192443848
    3. ' A' → logprob: -2.2761483192443848
    4. '   ' → logprob: -2.6511483192443848
    5. '#' → logprob: -2.7761483192443848
    6. 'B' → logprob: -3.0261483192443848
    7. 'for' → logprob: -3.1511483192443848
    8. ' if' → logprob: -4.026148319244385
    9. '
' → logprob: -4.401148319244385
    10. ' (' → logprob: -4.651148319244385

Token 754: '-C' (ID: 10050)
  Prédit: '-C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-C' → logprob: -0.042362604290246964
    2. '-' → logprob: -4.167362689971924
    3. '-B' → logprob: -4.292362689971924
    4. '-E' → logprob: -5.667362689971924
    5. '-A' → logprob: -6.042362689971924
    6. '-cross' → logprob: -6.167362689971924
    7. ' -' → logprob: -7.167362689971924
    8. '-in' → logprob: -7.667362689971924
    9. 'and' → logprob: -8.042362213134766
    10. ' out' → logprob: -8.167362213134766

Token 755: ' and' (ID: 326)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2945537567138672
    2. ' and' → logprob: -1.6695537567138672
    3. 'and' → logprob: -4.169553756713867
    4. 'or' → logprob: -4.169553756713867
    5. '           ' → logprob: -4.169553756713867
    6. '       ' → logprob: -4.294553756713867
    7. ')' → logprob: -6.294553756713867
    8. ' for' → logprob: -7.169553756713867
    9. '```' → logprob: -7.169553756713867
    10. ',' → logprob: -7.419553756713867

Token 756: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.001207019085995853
    2. ' B' → logprob: -6.751206874847412
    3. 'C' → logprob: -10.25120735168457
    4. 'A' → logprob: -13.75120735168457
    5. '   ' → logprob: -16.12620735168457
    6. ' ' → logprob: -16.50120735168457
    7. 'b' → logprob: -16.75120735168457
    8. ' C' → logprob: -17.00120735168457
    9. '(B' → logprob: -17.25120735168457
    10. '```' → logprob: -17.25120735168457

Token 757: '-C' (ID: 10050)
  Prédit: '-C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-C' → logprob: -2.927930654550437e-05
    2. '[-' → logprob: -12.000029563903809
    3. '[' → logprob: -12.250029563903809
    4. '-' → logprob: -12.500029563903809
    5. 'C' → logprob: -12.625029563903809
    6. ' -' → logprob: -13.125029563903809
    7. '#' → logprob: -13.125029563903809
    8. '
' → logprob: -13.625029563903809
    9. '```' → logprob: -13.750029563903809
    10. '[C' → logprob: -14.375029563903809

Token 758: ' crossing' (ID: 50946)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5727723240852356
    2. '
' → logprob: -0.9477723240852356
    3. '<|end|>' → logprob: -3.572772264480591
    4. 'def' → logprob: -5.07277250289917
    5. 'for' → logprob: -5.07277250289917
    6. ' for' → logprob: -6.07277250289917
    7. '        
' → logprob: -6.07277250289917
    8. 'from' → logprob: -6.82277250289917
    9. '<|end|>' → logprob: -7.19777250289917
    10. '

' → logprob: -7.32277250289917

Token 759: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39869794249534607
    2. '       ' → logprob: -1.1486979722976685
    3. '<|end|>' → logprob: -5.398697853088379
    4. '        
' → logprob: -5.648697853088379
    5. '

' → logprob: -6.398697853088379
    6. 'for' → logprob: -7.648697853088379
    7. 'def' → logprob: -7.898697853088379
    8. '<|end|>' → logprob: -8.023697853088379
    9. ' for' → logprob: -8.773697853088379
    10. ',' → logprob: -8.773697853088379

Token 760: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037344999611377716
    2. 'for' → logprob: -4.037344932556152
    3. '
' → logprob: -4.287344932556152
    4. 'def' → logprob: -6.162344932556152
    5. '        
' → logprob: -6.537344932556152
    6. ' for' → logprob: -7.037344932556152
    7. 'from' → logprob: -7.912344932556152
    8. '```' → logprob: -8.537344932556152
    9. '<|end|>' → logprob: -9.162344932556152
    10. '   ' → logprob: -10.412344932556152

Token 761: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34943675994873047
    2. 'equal' → logprob: -1.9744367599487305
    3. 'answer' → logprob: -3.5994367599487305
    4. 'def' → logprob: -3.5994367599487305
    5. 'res' → logprob: -3.7244367599487305
    6. '       ' → logprob: -3.7244367599487305
    7. 'answers' → logprob: -4.0994367599487305
    8. 'eq' → logprob: -4.5994367599487305
    9. 'from' → logprob: -4.8494367599487305
    10. 'result' → logprob: -5.0994367599487305

Token 762: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6509882211685181
    2. 'equal' → logprob: -1.150988221168518
    3. 'res' → logprob: -2.9009881019592285
    4. 'def' → logprob: -3.6509881019592285
    5. 'from' → logprob: -3.6509881019592285
    6. '#' → logprob: -4.2759881019592285
    7. '       ' → logprob: -4.4009881019592285
    8. 'answer' → logprob: -5.1509881019592285
    9. 'result' → logprob: -5.2759881019592285
    10. 'ans' → logprob: -5.2759881019592285

Token 763: ' consider' (ID: 3331)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2220088094472885
    2. 'continue' → logprob: -1.9720088243484497
    3. ' continue' → logprob: -3.47200870513916
    4. ' for' → logprob: -4.22200870513916
    5. '#' → logprob: -5.72200870513916
    6. '
' → logprob: -5.84700870513916
    7. 'def' → logprob: -6.59700870513916
    8. 'need' → logprob: -6.72200870513916
    9. '=' → logprob: -7.09700870513916
    10. '       ' → logprob: -7.22200870513916

Token 764: ' that' (ID: 484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.060496147722005844
    2. 'from' → logprob: -4.4354963302612305
    3. 'i' → logprob: -4.6854963302612305
    4. 'all' → logprob: -4.8104963302612305
    5. 'range' → logprob: -5.0604963302612305
    6. '   ' → logprob: -5.0604963302612305
    7. 'equal' → logprob: -5.1854963302612305
    8. 'def' → logprob: -5.3104963302612305
    9. 'pairs' → logprob: -6.3104963302612305
    10. '#' → logprob: -6.6854963302612305

Token 765: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17633284628391266
    2. ' for' → logprob: -1.9263328313827515
    3. 'from' → logprob: -5.051332950592041
    4. 'def' → logprob: -5.551332950592041
    5. 'equal' → logprob: -6.176332950592041
    6. ' from' → logprob: -6.926332950592041
    7. ' equal' → logprob: -7.551332950592041
    8. 's' → logprob: -7.926332950592041
    9. '
' → logprob: -7.926332950592041
    10. 'found' → logprob: -8.551332473754883

Token 766: ' be' (ID: 413)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.10600622743368149
    2. 'find' → logprob: -2.856006145477295
    3. ' check' → logprob: -3.731006145477295
    4. 'det' → logprob: -5.356006145477295
    5. 'for' → logprob: -6.106006145477295
    6. 'answer' → logprob: -6.106006145477295
    7. 'continue' → logprob: -6.106006145477295
    8. 'def' → logprob: -6.231006145477295
    9. 'compare' → logprob: -6.856006145477295
    10. ' find' → logprob: -6.981006145477295

Token 767: ' equal' (ID: 12629)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.26009902358055115
    2. 'True' → logprob: -2.010098934173584
    3. 'able' → logprob: -4.010098934173584
    4. 'def' → logprob: -4.260098934173584
    5. 'False' → logprob: -4.885098934173584
    6. 'equ' → logprob: -5.010098934173584
    7. 'found' → logprob: -5.135098934173584
    8. ' equal' → logprob: -5.135098934173584
    9. 'done' → logprob: -5.385098934173584
    10. 'for' → logprob: -5.385098934173584

Token 768: ' strength' (ID: 9386)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21456444263458252
    2. 'def' → logprob: -2.964564323425293
    3. 'for' → logprob: -3.589564323425293
    4. '       ' → logprob: -4.089564323425293
    5. ' =' → logprob: -4.089564323425293
    6. ',
' → logprob: -4.339564323425293
    7. '

' → logprob: -4.464564323425293
    8. 's' → logprob: -4.839564323425293
    9. ',' → logprob: -4.964564323425293
    10. '        
' → logprob: -5.464564323425293

Token 769: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2170952409505844
    2. '
' → logprob: -1.8420952558517456
    3. 'def' → logprob: -3.967095136642456
    4. 'for' → logprob: -4.842095375061035
    5. '        
' → logprob: -5.467095375061035
    6. 'from' → logprob: -6.592095375061035
    7. '#' → logprob: -6.967095375061035
    8. '

' → logprob: -7.092095375061035
    9. ' for' → logprob: -7.592095375061035
    10. '   ' → logprob: -7.842095375061035

Token 770: ' A' (ID: 355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5699765682220459
    2. ' for' → logprob: -0.9449765682220459
    3. 'def' → logprob: -3.944976568222046
    4. '       ' → logprob: -4.694976806640625
    5. '#' → logprob: -4.819976806640625
    6. '
' → logprob: -5.444976806640625
    7. 'print' → logprob: -7.194976806640625
    8. 'answer' → logprob: -7.319976806640625
    9. 'answers' → logprob: -7.819976806640625
    10. 'result' → logprob: -7.944976806640625

Token 771: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09128089994192123
    2. 'and' → logprob: -3.216280937194824
    3. ' !=' → logprob: -3.466280937194824
    4. '!=' → logprob: -5.216280937194824
    5. ' ==' → logprob: -5.591280937194824
    6. '==' → logprob: -5.716280937194824
    7. ' must' → logprob: -6.466280937194824
    8. ',' → logprob: -7.841280937194824
    9. 'must' → logprob: -8.091280937194824
    10. 'def' → logprob: -8.091280937194824

Token 772: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1002177745103836
    2. ' B' → logprob: -2.350217819213867
    3. 'b' → logprob: -12.100217819213867
    4. ' ' → logprob: -12.475217819213867
    5. '#' → logprob: -14.850217819213867
    6. ' ' → logprob: -15.600217819213867
    7. '
' → logprob: -15.725217819213867
    8. '   ' → logprob: -15.850217819213867
    9. ' b' → logprob: -16.475217819213867
    10. '	B' → logprob: -16.600217819213867

Token 773: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.17492182552814484
    2. ' are' → logprob: -2.674921751022339
    3. 'must' → logprob: -2.924921751022339
    4. ' should' → logprob: -4.299921989440918
    5. ' need' → logprob: -5.424921989440918
    6. ' have' → logprob: -5.549921989440918
    7. ' !=' → logprob: -5.924921989440918
    8. ' for' → logprob: -6.424921989440918
    9. 'are' → logprob: -6.424921989440918
    10. ' can' → logprob: -6.424921989440918

Token 774: ' have' (ID: 679)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.838417649269104
    2. 'be' → logprob: -1.088417649269104
    3. 'have' → logprob: -2.0884175300598145
    4. ' have' → logprob: -3.0884175300598145
    5. 'not' → logprob: -3.7134175300598145
    6. ' not' → logprob: -4.4634175300598145
    7. 'share' → logprob: -4.8384175300598145
    8. ' share' → logprob: -4.9634175300598145
    9. 'for' → logprob: -6.0884175300598145
    10. 'def' → logprob: -6.5884175300598145

Token 775: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5162478089332581
    2. 'def' → logprob: -2.0162477493286133
    3. 'some' → logprob: -2.3912477493286133
    4. 'the' → logprob: -3.1412477493286133
    5. 'same' → logprob: -3.3912477493286133
    6. ' a' → logprob: -4.016247749328613
    7. 'at' → logprob: -4.266247749328613
    8. 'for' → logprob: -4.641247749328613
    9. '
' → logprob: -4.766247749328613
    10. ' at' → logprob: -5.266247749328613

Token 776: ' mutual' (ID: 39830)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.37226787209510803
    2. ' common' → logprob: -2.247267961502075
    3. 'def' → logprob: -2.372267961502075
    4. 'for' → logprob: -3.247267961502075
    5. 'third' → logprob: -3.747267961502075
    6. ' for' → logprob: -4.872267723083496
    7. 'neighbor' → logprob: -4.997267723083496
    8. 'shared' → logprob: -5.622267723083496
    9. 'set' → logprob: -5.872267723083496
    10. 'space' → logprob: -5.872267723083496

Token 777: ' neighbor' (ID: 13034)
  Prédit: ' crossing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crossing' → logprob: -1.3383222818374634
    2. ' cross' → logprob: -2.088322162628174
    3. 'in' → logprob: -2.213322162628174
    4. 'cross' → logprob: -2.338322162628174
    5. '
' → logprob: -2.463322162628174
    6. ' common' → logprob: -2.963322162628174
    7. ' in' → logprob: -3.338322162628174
    8. ' neighbor' → logprob: -3.338322162628174
    9. ' intersection' → logprob: -3.588322162628174
    10. ' connection' → logprob: -3.713322162628174

Token 778: ' C' (ID: 363)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4423319101333618
    2. '       ' → logprob: -1.4423319101333618
    3. 'def' → logprob: -3.0673317909240723
    4. '

' → logprob: -4.067331790924072
    5. ' for' → logprob: -4.442331790924072
    6. 's' → logprob: -4.442331790924072
    7. 'for' → logprob: -4.442331790924072
    8. ',
' → logprob: -5.317331790924072
    9. ' in' → logprob: -6.067331790924072
    10. ',' → logprob: -6.442331790924072

Token 779: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11655814945697784
    2. '

' → logprob: -3.241558074951172
    3. '<|end|>' → logprob: -3.491558074951172
    4. '       ' → logprob: -3.741558074951172
    5. 'def' → logprob: -4.491558074951172
    6. '        
' → logprob: -6.366558074951172
    7. '<|end|>' → logprob: -6.366558074951172
    8. 'for' → logprob: -6.991558074951172
    9. ' for' → logprob: -8.491558074951172
    10. '```' → logprob: -8.491558074951172

Token 780: ' following' (ID: 3992)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.518523633480072
    2. 'cross' → logprob: -2.143523693084717
    3. '(A' → logprob: -2.768523693084717
    4. '((' → logprob: -2.893523693084717
    5. '(' → logprob: -3.768523693084717
    6. '(C' → logprob: -3.893523693084717
    7. '(c' → logprob: -4.018523693084717
    8. '(
' → logprob: -4.018523693084717
    9. 'A' → logprob: -4.143523693084717
    10. 'C' → logprob: -4.268523693084717

Token 781: ':
' (ID: 734)
  Prédit: 'property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.44946590065956116
    2. 'properties' → logprob: -1.8244658708572388
    3. 'code' → logprob: -2.6994659900665283
    4. 'def' → logprob: -2.9494659900665283
    5. 'conditions' → logprob: -3.6994659900665283
    6. 'condition' → logprob: -3.6994659900665283
    7. 'character' → logprob: -5.199465751647949
    8. ' property' → logprob: -5.949465751647949
    9. 'pattern' → logprob: -5.949465751647949
    10. 'criteria' → logprob: -6.074465751647949

Token 782: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1264104843139648
    2. '       ' → logprob: -1.6264104843139648
    3. 'def' → logprob: -2.126410484313965
    4. 'for' → logprob: -2.126410484313965
    5. '```' → logprob: -3.251410484313965
    6. ' def' → logprob: -3.376410484313965
    7. '
' → logprob: -3.751410484313965
    8. 'from' → logprob: -3.876410484313965
    9. '<|end|>' → logprob: -4.001410484313965
    10. '        ' → logprob: -4.251410484313965

Token 783: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3770596385002136
    2. 'for' → logprob: -2.1270596981048584
    3. '#' (adapté à ' #') → logprob: -3.8770596981048584
    4. '
' → logprob: -3.8770596981048584
    5. '((' → logprob: -3.8770596981048584
    6. '(A' → logprob: -4.002059459686279
    7. ' (' → logprob: -4.252059459686279
    8. 'any' → logprob: -4.252059459686279
    9. '(True' → logprob: -4.252059459686279
    10. '(any' → logprob: -4.377059459686279

Token 784: ' There' (ID: 3274)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.33932819962501526
    2. 'def' → logprob: -1.3393281698226929
    3. 'equal' → logprob: -4.839328289031982
    4. ' found' → logprob: -5.714328289031982
    5. 'for' → logprob: -5.964328289031982
    6. 'exists' → logprob: -6.089328289031982
    7. 'possible' → logprob: -6.464328289031982
    8. '#' → logprob: -6.589328289031982
    9. 'candidate' → logprob: -7.089328289031982
    10. ' def' → logprob: -7.089328289031982

Token 785: ' exists' (ID: 13031)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.4760403633117676
    2. ' must' → logprob: -1.3510403633117676
    3. 'exists' → logprob: -2.4760403633117676
    4. 'is' → logprob: -4.101040363311768
    5. 'are' → logprob: -4.851040363311768
    6. ' exists' → logprob: -5.726040363311768
    7. ' are' → logprob: -5.976040363311768
    8. ' is' → logprob: -6.226040363311768
    9. 'should' → logprob: -6.976040363311768
    10. ' should' → logprob: -7.226040363311768

Token 786: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.16464804112911224
    2. 'c' → logprob: -2.2896480560302734
    3. ' C' → logprob: -3.2896480560302734
    4. 'a' → logprob: -5.664648056030273
    5. ' c' → logprob: -5.789648056030273
    6. 's' → logprob: -5.914648056030273
    7. 'some' → logprob: -6.414648056030273
    8. ' a' → logprob: -7.164648056030273
    9. 'x' → logprob: -7.914648056030273
    10. ' s' → logprob: -8.289648056030273

Token 787: ' with' (ID: 483)
  Prédit: ' such'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.11349372565746307
    2. 'such' → logprob: -2.7384936809539795
    3. ' in' → logprob: -3.6134936809539795
    4. 'in' → logprob: -5.238493919372559
    5. ' that' → logprob: -5.738493919372559
    6. ' with' → logprob: -6.613493919372559
    7. ' for' → logprob: -6.738493919372559
    8. 's' → logprob: -7.238493919372559
    9. ',' → logprob: -7.488493919372559
    10. 'for' → logprob: -7.613493919372559

Token 788: ' (' (ID: 350)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.4685269594192505
    2. '(C' → logprob: -1.2185269594192505
    3. '(A' → logprob: -3.218526840209961
    4. '(' → logprob: -4.718526840209961
    5. 'A' → logprob: -4.843526840209961
    6. ' C' → logprob: -5.468526840209961
    7. '((' → logprob: -5.718526840209961
    8. '(c' → logprob: -5.843526840209961
    9. 'cross' → logprob: -5.968526840209961
    10. ' (' → logprob: -6.093526840209961

Token 789: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.16713860630989075
    2. 'in' → logprob: -2.0421385765075684
    3. 'c' → logprob: -5.167138576507568
    4. '(C' → logprob: -5.167138576507568
    5. '(in' → logprob: -5.792138576507568
    6. 'cross' → logprob: -6.542138576507568
    7. ' C' → logprob: -6.667138576507568
    8. '(c' → logprob: -6.792138576507568
    9. '(' → logprob: -6.792138576507568
    10. 'A' → logprob: -6.917138576507568

Token 790: ',A' (ID: 59196)
  Prédit: '-A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-A' → logprob: -0.07602105289697647
    2. ' -' → logprob: -3.3260209560394287
    3. '-' → logprob: -4.076021194458008
    4. ' in' → logprob: -5.076021194458008
    5. ')-' → logprob: -5.576021194458008
    6. '   ' → logprob: -6.076021194458008
    7. ')' → logprob: -6.451021194458008
    8. '-a' → logprob: -6.451021194458008
    9. '-in' → logprob: -6.826021194458008
    10. 'in' → logprob: -7.201021194458008

Token 791: ')' (ID: 8)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.1574755907058716
    2. ' and' → logprob: -1.4074755907058716
    3. ')' → logprob: -1.7824755907058716
    4. 'in' → logprob: -1.7824755907058716
    5. ' in' → logprob: -2.282475471496582
    6. '),' → logprob: -6.907475471496582
    7. ',' → logprob: -6.907475471496582
    8. ')==' → logprob: -9.782475471496582
    9. '   ' → logprob: -9.907475471496582
    10. ' )' → logprob: -10.157475471496582

Token 792: ' and' (ID: 326)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.838214635848999
    2. ' and' → logprob: -1.463214635848999
    3. 'in' → logprob: -1.588214635848999
    4. 'and' → logprob: -2.213214635848999
    5. ')' → logprob: -3.838214635848999
    6. ',' → logprob: -8.213214874267578
    7. '),' → logprob: -9.463214874267578
    8. 's' → logprob: -9.588214874267578
    9. '
' → logprob: -9.713214874267578
    10. ' &' → logprob: -9.963214874267578

Token 793: ' (' (ID: 350)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.07070600241422653
    2. ' (' → logprob: -2.6957058906555176
    3. '(c' → logprob: -8.445706367492676
    4. '`' → logprob: -8.570706367492676
    5. ' ' → logprob: -9.320706367492676
    6. '(' → logprob: -9.570706367492676
    7. ''' → logprob: -10.320706367492676
    8. 'C' → logprob: -10.320706367492676
    9. '{' → logprob: -10.445706367492676
    10. '
' → logprob: -11.695706367492676

Token 794: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -6.392202976712724e-06
    2. ' C' → logprob: -12.500006675720215
    3. ',' → logprob: -13.625006675720215
    4. 'c' → logprob: -15.000006675720215
    5. '(C' → logprob: -15.125006675720215
    6. '   ' → logprob: -15.375006675720215
    7. ',C' → logprob: -15.875006675720215
    8. ' ' → logprob: -16.1250057220459
    9. 'A' → logprob: -16.2500057220459
    10. '
' → logprob: -16.5000057220459

Token 795: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.004438543692231178
    2. ',' → logprob: -5.879438400268555
    3. 'B' → logprob: -7.004438400268555
    4. ',A' → logprob: -8.379438400268555
    5. '-B' → logprob: -8.629438400268555
    6. ',C' → logprob: -9.004438400268555
    7. ',b' → logprob: -9.879438400268555
    8. '-' → logprob: -10.129438400268555
    9. ')' → logprob: -10.879438400268555
    10. ',
' → logprob: -11.004438400268555

Token 796: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014162100851535797
    2. '),' → logprob: -4.389162063598633
    3. ')
' → logprob: -6.639162063598633
    4. 'in' → logprob: -8.639162063598633
    5. ' )' → logprob: -10.639162063598633
    6. ' in' → logprob: -10.764162063598633
    7. ' or' → logprob: -10.889162063598633
    8. '),
' → logprob: -11.514162063598633
    9. '')' → logprob: -11.514162063598633
    10. '),(' → logprob: -11.639162063598633

Token 797: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.010881922207772732
    2. ' in' → logprob: -5.7608819007873535
    3. ' for' → logprob: -6.1358819007873535
    4. 'or' → logprob: -6.1358819007873535
    5. '       ' → logprob: -6.5108819007873535
    6. ' and' → logprob: -7.3858819007873535
    7. ',' → logprob: -8.135882377624512
    8. '
' → logprob: -8.135882377624512
    9. '<|end|>' → logprob: -8.510882377624512
    10. ')' → logprob: -8.760882377624512

Token 798: ' (' (ID: 350)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.38812029361724854
    2. '(A' → logprob: -1.2631202936172485
    3. '(B' → logprob: -3.513120174407959
    4. '(' → logprob: -5.388120174407959
    5. ' (' → logprob: -5.513120174407959
    6. '   ' → logprob: -9.138120651245117
    7. '(c' → logprob: -9.263120651245117
    8. '
' → logprob: -9.638120651245117
    9. '       ' → logprob: -9.763120651245117
    10. '(E' → logprob: -10.013120651245117

Token 799: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0044489894062280655
    2. 'B' → logprob: -6.004448890686035
    3. 'C' → logprob: -6.879448890686035
    4. ' A' → logprob: -7.129448890686035
    5. '(A' → logprob: -9.754448890686035
    6. '   ' → logprob: -10.754448890686035
    7. '#' → logprob: -11.129448890686035
    8. '(' → logprob: -11.504448890686035
    9. ' B' → logprob: -12.379448890686035
    10. ')' → logprob: -12.504448890686035

Token 800: ',C' (ID: 26924)
  Prédit: '-C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-C' → logprob: -0.44610700011253357
    2. ',C' → logprob: -1.071107029914856
    3. 'C' → logprob: -4.821106910705566
    4. ',' → logprob: -4.946106910705566
    5. '-' → logprob: -6.696106910705566
    6. ')' → logprob: -9.071106910705566
    7. '
' → logprob: -9.071106910705566
    8. ',-' → logprob: -9.321106910705566
    9. ' -' → logprob: -9.571106910705566
    10. '   ' → logprob: -9.946106910705566

Token 801: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006153396097943187
    2. 'and' → logprob: -7.750615119934082
    3. ' and' → logprob: -9.375615119934082
    4. '),' → logprob: -9.750615119934082
    5. '')' → logprob: -10.750615119934082
    6. ' )' → logprob: -11.750615119934082
    7. ')
' → logprob: -12.625615119934082
    8. '   ' → logprob: -13.625615119934082
    9. ',' → logprob: -13.625615119934082
    10. '`)' → logprob: -13.875615119934082

Token 802: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.08269815891981125
    2. ' and' → logprob: -2.582698106765747
    3. ')' → logprob: -5.582698345184326
    4. '```' → logprob: -11.082697868347168
    5. '           ' → logprob: -11.707697868347168
    6. '<|end|>' → logprob: -13.082697868347168
    7. ',' → logprob: -13.582697868347168
    8. '``' → logprob: -13.832697868347168
    9. '),' → logprob: -14.207697868347168
    10. ' )' → logprob: -14.207697868347168

Token 803: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0008355968166142702
    2. '(C' → logprob: -7.500835418701172
    3. ' (' → logprob: -8.750835418701172
    4. '(A' → logprob: -9.000835418701172
    5. '(' → logprob: -14.375835418701172
    6. '   ' → logprob: -15.500835418701172
    7. ' ' → logprob: -16.750835418701172
    8. '(b' → logprob: -17.125835418701172
    9. '```' → logprob: -17.250835418701172
    10. '((' → logprob: -17.375835418701172

Token 804: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.339278580620885e-06
    2. ' B' → logprob: -13.250001907348633
    3. 'C' → logprob: -15.625001907348633
    4. '(B' → logprob: -16.750001907348633
    5. '```' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.375001907348633
    7. '(' → logprob: -17.750001907348633
    8. 'A' → logprob: -17.875001907348633
    9. '"B' → logprob: -17.875001907348633
    10. '	B' → logprob: -18.250001907348633

Token 805: ',C' (ID: 26924)
  Prédit: ',C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.0013105978723615408
    2. ',' → logprob: -7.1263108253479
    3. 'C' → logprob: -7.6263108253479
    4. '   ' → logprob: -12.751310348510742
    5. ',
' → logprob: -13.251310348510742
    6. ')' → logprob: -13.376310348510742
    7. ',c' → logprob: -13.501310348510742
    8. '```' → logprob: -13.626310348510742
    9. '<C' → logprob: -13.751310348510742
    10. '<|end|>' → logprob: -14.126310348510742

Token 806: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002849687123671174
    2. ')
' → logprob: -7.127849578857422
    3. ').' → logprob: -7.502849578857422
    4. '):' → logprob: -7.752849578857422
    5. '):

' → logprob: -8.252849578857422
    6. '),' → logprob: -8.502849578857422
    7. '):
' → logprob: -8.627849578857422
    8. ')

' → logprob: -8.627849578857422
    9. ' )' → logprob: -9.752849578857422
    10. '       ' → logprob: -10.252849578857422

Token 807: ' in' (ID: 306)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.054321177303791046
    2. '       ' → logprob: -3.4293212890625
    3. '<|end|>' → logprob: -4.3043212890625
    4. '

' → logprob: -6.0543212890625
    5. '<|end|>' → logprob: -6.4293212890625
    6. 'def' → logprob: -7.0543212890625
    7. 'for' → logprob: -7.1793212890625
    8. '        
' → logprob: -7.6793212890625
    9. ' for' → logprob: -7.8043212890625
    10. '```' → logprob: -9.3043212890625

Token 808: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.05806322395801544
    2. ' cross' → logprob: -3.308063268661499
    3. 'input' → logprob: -4.18306303024292
    4. 'in' → logprob: -6.55806303024292
    5. ' input' → logprob: -6.68306303024292
    6. 'the' → logprob: -7.68306303024292
    7. 'edges' → logprob: -8.183063507080078
    8. 'adj' → logprob: -8.183063507080078
    9. '
' → logprob: -8.683063507080078
    10. 'out' → logprob: -8.683063507080078

Token 809: '_set' (ID: 5451)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1431344598531723
    2. '       ' → logprob: -2.893134355545044
    3. '

' → logprob: -3.268134355545044
    4. '<|end|>' → logprob: -3.768134355545044
    5. 'def' → logprob: -5.143134593963623
    6. '<|end|>' → logprob: -5.393134593963623
    7. '        
' → logprob: -6.143134593963623
    8. 'for' → logprob: -6.518134593963623
    9. ',' → logprob: -7.393134593963623
    10. ',
' → logprob: -7.518134593963623

Token 810: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09152785688638687
    2. '       ' → logprob: -2.5915279388427734
    3. '<|end|>' → logprob: -5.466527938842773
    4. '

' → logprob: -6.091527938842773
    5. 'def' → logprob: -6.091527938842773
    6. '        
' → logprob: -6.216527938842773
    7. '<|end|>' → logprob: -7.216527938842773
    8. 'for' → logprob: -7.591527938842773
    9. ' for' → logprob: -8.341527938842773
    10. ',' → logprob: -9.966527938842773

Token 811: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23525865375995636
    2. '       ' → logprob: -1.61025869846344
    3. '<|end|>' → logprob: -5.86025857925415
    4. '        
' → logprob: -6.11025857925415
    5. 'def' → logprob: -6.23525857925415
    6. '

' → logprob: -6.98525857925415
    7. '    
' → logprob: -7.73525857925415
    8. '   ' → logprob: -7.86025857925415
    9. 'for' → logprob: -8.235259056091309
    10. '  
' → logprob: -8.735259056091309

Token 812: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4359607994556427
    2. '
' → logprob: -1.1859607696533203
    3. 'def' → logprob: -3.6859607696533203
    4. 'for' → logprob: -3.9359607696533203
    5. '   ' → logprob: -6.68596076965332
    6. ' for' → logprob: -7.31096076965332
    7. 'from' → logprob: -8.06096076965332
    8. '        
' → logprob: -8.56096076965332
    9. '```' → logprob: -8.68596076965332
    10. 'next' → logprob: -8.81096076965332

Token 813: ' Prepare' (ID: 49102)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14531269669532776
    2. '       ' → logprob: -2.395312786102295
    3. 'def' → logprob: -3.895312786102295
    4. '
' → logprob: -4.770312786102295
    5. 'answer' → logprob: -5.270312786102295
    6. 'answers' → logprob: -6.020312786102295
    7. 'from' → logprob: -6.395312786102295
    8. 'res' → logprob: -6.645312786102295
    9. '#' → logprob: -6.645312786102295
    10. 'result' → logprob: -7.520312786102295

Token 814: ' for' (ID: 395)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -1.0937528610229492
    2. 'neighbors' → logprob: -1.3437528610229492
    3. 'neighbor' → logprob: -1.9687528610229492
    4. 'from' → logprob: -1.9687528610229492
    5. 'adj' → logprob: -3.218752861022949
    6. '#' → logprob: -4.468752861022949
    7. 'for' → logprob: -4.718752861022949
    8. '   ' → logprob: -4.968752861022949
    9. 'pairs' → logprob: -5.093752861022949
    10. 'pos' → logprob: -5.468752861022949

Token 815: ' equal' (ID: 12629)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09607487171888351
    2. 'neighbors' → logprob: -4.096075057983398
    3. 'for' → logprob: -4.346075057983398
    4. 'equal' → logprob: -4.846075057983398
    5. 'neighbor' → logprob: -5.346075057983398
    6. 'ans' → logprob: -5.596075057983398
    7. 'range' → logprob: -5.596075057983398
    8. 'from' → logprob: -5.721075057983398
    9. 'def' → logprob: -5.971075057983398
    10. 'all' → logprob: -6.096075057983398

Token 816: ' strength' (ID: 9386)
  Prédit: '_strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_strength' → logprob: -0.041936200112104416
    2. 'strength' → logprob: -3.541936159133911
    3. '_st' → logprob: -5.66693639755249
    4. '       ' → logprob: -6.66693639755249
    5. ' =' → logprob: -6.79193639755249
    6. '_pairs' → logprob: -6.91693639755249
    7. '   ' → logprob: -7.04193639755249
    8. 'for' → logprob: -7.54193639755249
    9. '_str' → logprob: -7.54193639755249
    10. '```' → logprob: -7.66693639755249

Token 817: ' test' (ID: 1746)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.041677817702293396
    2. '
' → logprob: -4.541677951812744
    3. 'from' → logprob: -5.041677951812744
    4. 'eq' → logprob: -5.416677951812744
    5. '       ' → logprob: -5.541677951812744
    6. ' equal' → logprob: -5.666677951812744
    7. 'pairs' → logprob: -6.166677951812744
    8. 'for' → logprob: -6.291677951812744
    9. 'equ' → logprob: -6.416677951812744
    10. 'equals' → logprob: -7.041677951812744

Token 818: ':

' (ID: 1402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0985807180404663
    2. 'equal' → logprob: -1.3485807180404663
    3. 'for' → logprob: -2.098580837249756
    4. 'from' → logprob: -2.223580837249756
    5. 'def' → logprob: -2.973580837249756
    6. '
' → logprob: -3.223580837249756
    7. ' for' → logprob: -4.348580837249756
    8. '#' → logprob: -4.598580837249756
    9. 'next' → logprob: -4.973580837249756
    10. '   ' → logprob: -5.098580837249756

Token 819: '       ' (ID: 309)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.6730022430419922
    2. 'def' → logprob: -1.5480022430419922
    3. 'for' → logprob: -2.423002243041992
    4. '       ' → logprob: -2.423002243041992
    5. 'from' → logprob: -2.798002243041992
    6. 'eq' → logprob: -5.173002243041992
    7. 'answer' → logprob: -5.173002243041992
    8. 'answers' → logprob: -5.548002243041992
    9. 'next' → logprob: -5.798002243041992
    10. 'import' → logprob: -6.048002243041992

Token 820: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6272645592689514
    2. 'equal' → logprob: -1.5022644996643066
    3. 'def' → logprob: -2.2522644996643066
    4. 'from' → logprob: -2.5022644996643066
    5. '       ' → logprob: -3.5022644996643066
    6. 'answer' → logprob: -5.377264499664307
    7. 'import' → logprob: -5.752264499664307
    8. 'eq' → logprob: -5.752264499664307
    9. 'answers' → logprob: -6.002264499664307
    10. 'res' → logprob: -6.252264499664307

Token 821: ' We' (ID: 1416)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.3241601586341858
    2. 'from' → logprob: -2.199160099029541
    3. 'for' → logprob: -2.574160099029541
    4. 'def' → logprob: -3.074160099029541
    5. '#' → logprob: -4.449160099029541
    6. 'adj' → logprob: -5.324160099029541
    7. 'import' → logprob: -5.824160099029541
    8. 'neighbors' → logprob: -5.949160099029541
    9. 'neighbor' → logprob: -5.949160099029541
    10. '   ' → logprob: -6.199160099029541

Token 822: ' test' (ID: 1746)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2210661172866821
    2. 'def' → logprob: -1.5960661172866821
    3. ' =' → logprob: -2.4710659980773926
    4. 'continue' → logprob: -2.4710659980773926
    5. 'from' → logprob: -2.4710659980773926
    6. 'import' → logprob: -2.5960659980773926
    7. '=' → logprob: -2.8460659980773926
    8. 'will' → logprob: -3.9710659980773926
    9. 'need' → logprob: -3.9710659980773926
    10. '#' → logprob: -4.471065998077393

Token 823: ' pairs' (ID: 24702)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6995735168457031
    2. 'def' → logprob: -1.1995735168457031
    3. ' for' → logprob: -2.324573516845703
    4. ' =' → logprob: -3.824573516845703
    5. '       ' → logprob: -4.199573516845703
    6. 'M' → logprob: -4.324573516845703
    7. '=' → logprob: -4.699573516845703
    8. 'pairs' → logprob: -4.824573516845703
    9. ' def' → logprob: -5.074573516845703
    10. '   ' → logprob: -5.324573516845703

Token 824: ' A' (ID: 355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8768861293792725
    2. '       ' → logprob: -1.5018861293792725
    3. ' =' → logprob: -1.6268861293792725
    4. 's' → logprob: -3.3768861293792725
    5. '=' → logprob: -3.5018861293792725
    6. ':' → logprob: -4.126886367797852
    7. '(' → logprob: -4.251886367797852
    8. ' for' → logprob: -4.376886367797852
    9. ')' → logprob: -5.126886367797852
    10. '(s' → logprob: -5.376886367797852

Token 825: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41607555747032166
    2. ' =' → logprob: -1.416075587272644
    3. '<|end|>' → logprob: -3.4160754680633545
    4. '=' → logprob: -4.291075706481934
    5. '       ' → logprob: -4.791075706481934
    6. ',
' → logprob: -5.166075706481934
    7. ',B' → logprob: -5.166075706481934
    8. ')' → logprob: -5.541075706481934
    9. ',b' → logprob: -5.541075706481934
    10. 'for' → logprob: -5.541075706481934

Token 826: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12629476189613342
    2. 'for' → logprob: -3.0012948513031006
    3. '=' → logprob: -4.0012946128845215
    4. '       ' → logprob: -4.3762946128845215
    5. ' for' → logprob: -5.0012946128845215
    6. ':' → logprob: -5.2512946128845215
    7. ' in' → logprob: -5.2512946128845215
    8. '
' → logprob: -5.6262946128845215
    9. 'import' → logprob: -5.7512946128845215
    10. '<|end|>' → logprob: -5.7512946128845215

Token 827: ' same' (ID: 2684)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001677079708315432
    2. 'color' → logprob: -7.0016770362854
    3. ' range' → logprob: -8.376677513122559
    4. 'questions' → logprob: -8.376677513122559
    5. 'out' → logprob: -10.126677513122559
    6. '[' → logprob: -10.126677513122559
    7. 'for' → logprob: -10.251677513122559
    8. '
' → logprob: -10.251677513122559
    9. 'ns' → logprob: -10.251677513122559
    10. '(range' → logprob: -10.376677513122559

Token 828: ' orientation' (ID: 29546)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.21960416436195374
    2. 'range' → logprob: -1.9696041345596313
    3. ' color' → logprob: -3.469604253768921
    4. ' range' → logprob: -4.469604015350342
    5. 'for' → logprob: -5.094604015350342
    6. '
' → logprob: -5.969604015350342
    7. 'def' → logprob: -6.469604015350342
    8. '       ' → logprob: -6.844604015350342
    9. '   ' → logprob: -7.469604015350342
    10. 'ns' → logprob: -7.844604015350342

Token 829: ' class' (ID: 744)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17682182788848877
    2. '       ' → logprob: -2.176821708679199
    3. '<|end|>' → logprob: -4.301821708679199
    4. 'for' → logprob: -4.801821708679199
    5. '        
' → logprob: -4.801821708679199
    6. ' for' → logprob: -5.176821708679199
    7. ':' → logprob: -5.676821708679199
    8. '    
' → logprob: -6.176821708679199
    9. '   ' → logprob: -6.301821708679199
    10. '[' → logprob: -7.176821708679199

Token 830: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39742180705070496
    2. '<|end|>' → logprob: -1.3974218368530273
    3. '       ' → logprob: -3.1474218368530273
    4. 'for' → logprob: -4.147421836853027
    5. ' for' → logprob: -5.272421836853027
    6. '        
' → logprob: -5.397421836853027
    7. '<|end|>' → logprob: -5.647421836853027
    8. '```' → logprob: -6.147421836853027
    9. '		
' → logprob: -6.272421836853027
    10. '\n' → logprob: -6.772421836853027

Token 831: ' reduce' (ID: 10389)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5605987310409546
    2. 'for' → logprob: -1.9355987310409546
    3. '...' → logprob: -2.810598850250244
    4. 'complete' → logprob: -3.810598850250244
    5. '```' → logprob: -3.810598850250244
    6. 'range' → logprob: -3.810598850250244
    7. '<|end|>' → logprob: -4.060598850250244
    8. ' continue' → logprob: -4.560598850250244
    9. 'check' → logprob: -4.685598850250244
    10. 'def' → logprob: -4.810598850250244

Token 832: ' pairs' (ID: 24702)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.2243726253509521
    2. '       ' → logprob: -1.8493726253509521
    3. '
' → logprob: -1.9743726253509521
    4. 'for' → logprob: -2.474372625350952
    5. 'indent' → logprob: -2.474372625350952
    6. ' range' → logprob: -3.349372625350952
    7. ' indent' → logprob: -3.349372625350952
    8. 'space' → logprob: -3.599372625350952
    9. ' indentation' → logprob: -3.974372625350952
    10. '   ' → logprob: -4.224372863769531

Token 833: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7958155870437622
    2. '       ' → logprob: -1.1708155870437622
    3. '<|end|>' → logprob: -1.6708155870437622
    4. '        
' → logprob: -3.9208154678344727
    5. 'for' → logprob: -4.420815467834473
    6. '<|end|>' → logprob: -5.170815467834473
    7. ' for' → logprob: -5.795815467834473
    8. ',' → logprob: -6.045815467834473
    9. ',
' → logprob: -6.920815467834473
    10. '    
' → logprob: -6.920815467834473

Token 834: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7029883861541748
    2. '
' → logprob: -0.9529883861541748
    3. '        
' → logprob: -3.077988386154175
    4. 'for' → logprob: -3.452988386154175
    5. ' for' → logprob: -3.827988386154175
    6. '<|end|>' → logprob: -4.702988624572754
    7. '    
' → logprob: -6.327988624572754
    8. '  
' → logprob: -6.952988624572754
    9. '```' → logprob: -7.077988624572754
    10. '\n' → logprob: -7.077988624572754

Token 835: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.389906644821167
    2. 'for' → logprob: -2.014906644821167
    3. ' for' → logprob: -2.639906644821167
    4. '
' → logprob: -2.639906644821167
    5. '<|end|>' → logprob: -3.889906644821167
    6. 'from' → logprob: -5.514906883239746
    7. '```' → logprob: -5.889906883239746
    8. '        
' → logprob: -5.889906883239746
    9. 'continue' → logprob: -6.139906883239746
    10. '#' (adapté à ' #') → logprob: -6.139906883239746

Token 836: ' Because' (ID: 13602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6753690838813782
    2. '       ' → logprob: -1.0503690242767334
    3. '
' → logprob: -3.5503690242767334
    4. 'from' → logprob: -3.8003690242767334
    5. '#' → logprob: -4.1753692626953125
    6. 'orientation' → logprob: -4.3003692626953125
    7. ' for' → logprob: -4.4253692626953125
    8. 'color' → logprob: -5.0503692626953125
    9. 'answers' → logprob: -5.3003692626953125
    10. '   ' → logprob: -5.4253692626953125

Token 837: ' crossings' (ID: 199340)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3114542961120605
    2. 'color' → logprob: -1.3114542961120605
    3. ' color' → logprob: -1.6864542961120605
    4. 'for' → logprob: -1.8114542961120605
    5. '
' → logprob: -3.1864542961120605
    6. 'orientation' → logprob: -3.9364542961120605
    7. 'len' → logprob: -4.1864542961120605
    8. ' orientation' → logprob: -4.8114542961120605
    9. ' len' → logprob: -4.9364542961120605
    10. '#' → logprob: -5.9364542961120605

Token 838: ' only' (ID: 1606)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 839: ' between' (ID: 2870)
  Prédit: 'occur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occur' → logprob: -0.373564749956131
    2. 'connect' → logprob: -2.3735647201538086
    3. ' occur' → logprob: -2.7485647201538086
    4. 'appear' → logprob: -2.8735647201538086
    5. ' exist' → logprob: -3.9985647201538086
    6. ' appear' → logprob: -4.123564720153809
    7. 'cross' → logprob: -4.498564720153809
    8. ' connect' → logprob: -4.623564720153809
    9. ' happen' → logprob: -4.623564720153809
    10. '#' → logprob: -4.998564720153809

Token 840: ' orth' (ID: 35656)
  Prédit: 'orth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orth' → logprob: -0.4666013717651367
    2. 'ns' → logprob: -1.4666013717651367
    3. 'NS' → logprob: -3.4666013717651367
    4. 'different' → logprob: -3.5916013717651367
    5. 'two' → logprob: -4.341601371765137
    6. 'same' → logprob: -4.591601371765137
    7. 'sets' → logprob: -4.716601371765137
    8. 'the' → logprob: -4.966601371765137
    9. 'north' → logprob: -5.216601371765137
    10. 'stre' → logprob: -5.216601371765137

Token 841: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -0.00171278219204396
    2. 'ogon' → logprob: -6.876712799072266
    3. '       ' → logprob: -7.751712799072266
    4. '           ' → logprob: -9.501712799072266
    5. 'g' → logprob: -9.751712799072266
    6. 'og' → logprob: -10.126712799072266
    7. '```' → logprob: -11.001712799072266
    8. '#' → logprob: -11.251712799072266
    9. '   ' → logprob: -11.251712799072266
    10. '``' → logprob: -12.376712799072266

Token 842: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.12610141932964325
    2. '_st' → logprob: -3.001101493835449
    3. ' streets' → logprob: -3.126101493835449
    4. '_' → logprob: -4.626101493835449
    5. '_s' → logprob: -6.001101493835449
    6. '_set' → logprob: -6.251101493835449
    7. 'lines' → logprob: -6.501101493835449
    8. 's' → logprob: -6.626101493835449
    9. '   ' → logprob: -6.751101493835449
    10. 'sets' → logprob: -6.751101493835449

Token 843: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 844: ' equal' (ID: 12629)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0029213428497314
    2. '<|end|>' → logprob: -1.7529213428497314
    3. 'continue' → logprob: -2.1279213428497314
    4. ' for' → logprob: -2.6279213428497314
    5. '       ' → logprob: -2.6279213428497314
    6. ' continue' → logprob: -2.6279213428497314
    7. '```' → logprob: -3.7529213428497314
    8. 'for' → logprob: -4.002921104431152
    9. 'import' → logprob: -4.377921104431152
    10. ' the' → logprob: -4.377921104431152

Token 845: ' strength' (ID: 9386)
  Prédit: 'strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strength' → logprob: -0.65102219581604
    2. '_strength' → logprob: -1.52602219581604
    3. '       ' → logprob: -2.52602219581604
    4. ' strength' → logprob: -2.77602219581604
    5. '   ' → logprob: -3.65102219581604
    6. 'class' → logprob: -4.151021957397461
    7. '
' → logprob: -4.276021957397461
    8. '```' → logprob: -4.526021957397461
    9. '_id' → logprob: -5.526021957397461
    10. ' strengths' → logprob: -5.776021957397461

Token 846: ' between' (ID: 2870)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -1.1368895769119263
    2. ' sets' → logprob: -1.2618895769119263
    3. '<|end|>' → logprob: -1.7618895769119263
    4. ' classes' → logprob: -3.2618894577026367
    5. ' class' → logprob: -3.5118894577026367
    6. ' is' → logprob: -3.7618894577026367
    7. 'pairs' → logprob: -3.7618894577026367
    8. 's' → logprob: -4.261889457702637
    9. 'class' → logprob: -4.386889457702637
    10. 'classes' → logprob: -4.886889457702637

Token 847: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.3297681510448456
    2. ' streets' → logprob: -1.329768180847168
    3. 'same' → logprob: -5.329768180847168
    4. 'pairs' → logprob: -6.454768180847168
    5. 'A' → logprob: -6.704768180847168
    6. 's' → logprob: -6.704768180847168
    7. 'u' → logprob: -6.829768180847168
    8. ' same' → logprob: -6.829768180847168
    9. 'st' → logprob: -6.829768180847168
    10. '
' → logprob: -6.954768180847168

Token 848: ' of' (ID: 328)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19787009060382843
    2. '#' → logprob: -2.8228700160980225
    3. 'in' → logprob: -3.1978700160980225
    4. ' of' → logprob: -3.8228700160980225
    5. ' is' → logprob: -4.197870254516602
    6. ' within' → logprob: -4.197870254516602
    7. 's' → logprob: -5.197870254516602
    8. '
' → logprob: -5.447870254516602
    9. 'within' → logprob: -5.822870254516602
    10. 'from' → logprob: -6.072870254516602

Token 849: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.2747422456741333
    2. ' same' → logprob: -1.5247422456741333
    3. 'the' → logprob: -4.024742126464844
    4. ' the' → logprob: -5.524742126464844
    5. 'different' → logprob: -8.649742126464844
    6. '```' → logprob: -8.649742126464844
    7. '
' → logprob: -9.024742126464844
    8. '#' → logprob: -9.024742126464844
    9. '<|end|>' → logprob: -10.899742126464844
    10. '_same' → logprob: -11.649742126464844

Token 850: ' orientation' (ID: 29546)
  Prédit: ' orientation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orientation' → logprob: -0.5382946133613586
    2. 'orientation' → logprob: -1.1632945537567139
    3. ' line' → logprob: -3.538294553756714
    4. '
' → logprob: -3.663294553756714
    5. '\n' → logprob: -3.663294553756714
    6. 'class' → logprob: -4.913294792175293
    7. '_orientation' → logprob: -5.413294792175293
    8. ' class' → logprob: -6.038294792175293
    9. ' color' → logprob: -6.538294792175293
    10. 'color' → logprob: -6.788294792175293

Token 851: '.

' (ID: 364)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.73814857006073
    2. '   ' → logprob: -2.1131486892700195
    3. ' class' → logprob: -2.4881486892700195
    4. ' is' → logprob: -3.3631486892700195
    5. 's' → logprob: -3.4881486892700195
    6. '
' → logprob: -3.7381486892700195
    7. ' only' → logprob: -3.9881486892700195
    8. '       ' → logprob: -4.3631486892700195
    9. 'for' → logprob: -4.4881486892700195
    10. '[' → logprob: -4.4881486892700195

Token 852: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 853: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35195392370224
    2. '
' → logprob: -1.6019539833068848
    3. 'for' → logprob: -3.2269539833068848
    4. '        
' → logprob: -4.351953983306885
    5. '```' → logprob: -4.476953983306885
    6. ' for' → logprob: -4.851953983306885
    7. '<|end|>' → logprob: -4.851953983306885
    8. '   ' → logprob: -5.726953983306885
    9. '    
' → logprob: -5.976953983306885
    10. '#' (adapté à ' #') → logprob: -6.351953983306885

Token 854: ' Candidate' (ID: 81541)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9724198579788208
    2. 'for' → logprob: -1.0974198579788208
    3. 'color' → logprob: -2.4724197387695312
    4. 'from' → logprob: -3.0974197387695312
    5. 'orientation' → logprob: -3.0974197387695312
    6. '
' → logprob: -3.8474197387695312
    7. ' for' → logprob: -4.222419738769531
    8. 'def' → logprob: -4.347419738769531
    9. 'import' → logprob: -4.597419738769531
    10. 'n' → logprob: -4.597419738769531

Token 855: ' pairs' (ID: 24702)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.619834840297699
    2. '_pairs' → logprob: -0.994834840297699
    3. '_st' → logprob: -2.8698348999023438
    4. ' =' → logprob: -4.369834899902344
    5. '_candidates' → logprob: -5.244834899902344
    6. '=' → logprob: -5.369834899902344
    7. '_indices' → logprob: -5.994834899902344
    8. '_lines' → logprob: -6.369834899902344
    9. 'stre' → logprob: -6.369834899902344
    10. '_ids' → logprob: -6.744834899902344

Token 856: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09104496985673904
    2. '=' → logprob: -2.5910449028015137
    3. 's' → logprob: -5.091044902801514
    4. '=[]' → logprob: -6.216044902801514
    5. '_' → logprob: -6.716044902801514
    6. '[' → logprob: -7.841044902801514
    7. '=[]
' → logprob: -8.091045379638672
    8. '_candidates' → logprob: -8.466045379638672
    9. '_pairs' → logprob: -8.466045379638672
    10. '[]' → logprob: -8.841045379638672

Token 857: ' pairs' (ID: 24702)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -1.074368953704834
    2. '[]' → logprob: -1.324368953704834
    3. '[' → logprob: -1.574368953704834
    4. '[i' → logprob: -2.199368953704834
    5. '[s' → logprob: -3.699368953704834
    6. ' [' → logprob: -4.949368953704834
    7. '[(' → logprob: -5.574368953704834
    8. '[
' → logprob: -5.699368953704834
    9. '[]

' → logprob: -5.824368953704834
    10. '[state' → logprob: -5.949368953704834

Token 858: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6004611253738403
    2. '=' → logprob: -1.9754611253738403
    3. ' of' → logprob: -2.100461006164551
    4. ' in' → logprob: -2.350461006164551
    5. '[i' → logprob: -3.850461006164551
    6. 'of' → logprob: -4.350461006164551
    7. '[' → logprob: -4.475461006164551
    8. 'in' → logprob: -4.975461006164551
    9. 'from' → logprob: -5.100461006164551
    10. 's' → logprob: -5.475461006164551

Token 859: ' same' (ID: 2684)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07863681018352509
    2. ' range' → logprob: -3.453636884689331
    3. '[' → logprob: -4.203636646270752
    4. 'color' → logprob: -4.453636646270752
    5. 'ns' → logprob: -4.453636646270752
    6. 'for' → logprob: -6.453636646270752
    7. '[color' → logprob: -6.953636646270752
    8. '[i' → logprob: -7.953636646270752
    9. '
' → logprob: -8.07863712310791
    10. '   ' → logprob: -8.20363712310791

Token 860: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.16304706037044525
    2. ' color' → logprob: -2.4130470752716064
    3. 'orientation' → logprob: -3.5380470752716064
    4. 'range' → logprob: -4.413046836853027
    5. ' orientation' → logprob: -5.413046836853027
    6. '   ' → logprob: -5.413046836853027
    7. ' range' → logprob: -5.538046836853027
    8. 'for' → logprob: -6.413046836853027
    9. '
' → logprob: -6.788046836853027
    10. '[color' → logprob: -6.913046836853027

Token 861: ' group' (ID: 3566)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23239244520664215
    2. '<|end|>' → logprob: -1.982392430305481
    3. '       ' → logprob: -3.1073925495147705
    4. 'import' → logprob: -5.232392311096191
    5. 'for' → logprob: -5.482392311096191
    6. 'from' → logprob: -5.607392311096191
    7. '<|end|>' → logprob: -5.857392311096191
    8. ' for' → logprob: -5.982392311096191
    9. ':' → logprob: -6.607392311096191
    10. '        
' → logprob: -6.857392311096191

Token 862: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 863: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9247214794158936
    2. '
' → logprob: -1.1747214794158936
    3. '<|end|>' → logprob: -1.9247214794158936
    4. 'import' → logprob: -3.4247214794158936
    5. 'from' → logprob: -3.7997214794158936
    6. 'for' → logprob: -4.174721717834473
    7. '```' → logprob: -4.299721717834473
    8. ',
' → logprob: -4.549721717834473
    9. ':' → logprob: -4.549721717834473
    10. '        
' → logprob: -4.799721717834473

Token 864: ' equal' (ID: 12629)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.080607533454895
    2. 'for' → logprob: -1.205607533454895
    3. 'from' → logprob: -1.455607533454895
    4. '
' → logprob: -2.5806074142456055
    5. ' for' → logprob: -4.4556074142456055
    6. 'import' → logprob: -4.5806074142456055
    7. 'pairs' → logprob: -5.0806074142456055
    8. ' from' → logprob: -5.2056074142456055
    9. '```' → logprob: -5.5806074142456055
    10. '   ' → logprob: -5.8306074142456055

Token 865: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.130268394947052
    2. '_strength' → logprob: -2.6302683353424072
    3. '_st' → logprob: -3.7552683353424072
    4. '_sets' → logprob: -5.505268573760986
    5. 's' → logprob: -5.630268573760986
    6. '[' → logprob: -5.630268573760986
    7. ' =' → logprob: -5.755268573760986
    8. '_str' → logprob: -5.755268573760986
    9. '_candidates' → logprob: -6.505268573760986
    10. '=' → logprob: -6.630268573760986

Token 866: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05490090325474739
    2. '=' → logprob: -2.929900884628296
    3. '=[]' → logprob: -11.304901123046875
    4. ',' → logprob: -13.429901123046875
    5. '[' → logprob: -14.054901123046875
    6. '=[]
' → logprob: -14.304901123046875
    7. ' ' → logprob: -14.304901123046875
    8. ' =[' → logprob: -14.554901123046875
    9. '=[' → logprob: -14.679901123046875
    10. '=set' → logprob: -14.929901123046875

Token 867: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.13074681162834167
    2. 'set' → logprob: -2.130746841430664
    3. '{}' → logprob: -6.130746841430664
    4. '[' → logprob: -7.255746841430664
    5. ' []' → logprob: -7.380746841430664
    6. '{' → logprob: -9.380746841430664
    7. ' set' → logprob: -9.505746841430664
    8. '[]
' → logprob: -9.630746841430664
    9. 'default' → logprob: -10.505746841430664
    10. '[]}' → logprob: -11.005746841430664

Token 868: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49146556854248047
    2. '       ' → logprob: -1.2414655685424805
    3. ' for' → logprob: -2.7414655685424805
    4. '```' → logprob: -4.6164655685424805
    5. '[' → logprob: -4.9914655685424805
    6. '<|end|>' → logprob: -5.2414655685424805
    7. 'from' → logprob: -5.4914655685424805
    8. '
' → logprob: -6.2414655685424805
    9. '        
' → logprob: -6.4914655685424805
    10. '#' → logprob: -7.2414655685424805

Token 869: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.020564895123243332
    2. 'from' → logprob: -4.270565032958984
    3. '       ' → logprob: -5.395565032958984
    4. 'same' → logprob: -7.520565032958984
    5. 'color' → logprob: -7.770565032958984
    6. ' for' → logprob: -7.770565032958984
    7. 'colors' → logprob: -9.270565032958984
    8. 'import' → logprob: -9.395565032958984
    9. '```' → logprob: -9.770565032958984
    10. '#' → logprob: -10.395565032958984

Token 870: ' c' (ID: 274)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5770087838172913
    2. 'c' → logprob: -1.5770087242126465
    3. 'group' → logprob: -1.9520087242126465
    4. 'color' → logprob: -3.3270087242126465
    5. 'grp' → logprob: -4.4520087242126465
    6. 'col' → logprob: -4.7020087242126465
    7. ' group' → logprob: -5.0770087242126465
    8. ' i' → logprob: -5.2020087242126465
    9. 'orientation' → logprob: -5.3270087242126465
    10. ' c' → logprob: -5.5770087242126465

Token 871: 'group' (ID: 4323)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.36715731024742126
    2. 'in' → logprob: -1.3671573400497437
    3. '_color' → logprob: -4.492157459259033
    4. '_id' → logprob: -4.742157459259033
    5. '_group' → logprob: -4.742157459259033
    6. 'i' → logprob: -4.867157459259033
    7. 'group' → logprob: -5.867157459259033
    8. 'color' → logprob: -6.117157459259033
    9. '_' → logprob: -6.867157459259033
    10. '0' → logprob: -6.867157459259033

Token 872: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12909115850925446
    2. 'in' → logprob: -2.129091262817383
    3. ' =' → logprob: -7.254091262817383
    4. '=' → logprob: -7.629091262817383
    5. '0' → logprob: -8.004091262817383
    6. ',' → logprob: -8.504091262817383
    7. '_idx' → logprob: -9.129091262817383
    8. ' ' → logprob: -9.504091262817383
    9. '   ' → logprob: -9.504091262817383
    10. 'idx' → logprob: -10.254091262817383

Token 873: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5149387121200562
    2. 'range' → logprob: -1.5149387121200562
    3. 'set' → logprob: -1.7649387121200562
    4. '[[' → logprob: -5.514938831329346
    5. '[{' → logprob: -6.014938831329346
    6. '(' → logprob: -6.014938831329346
    7. '{' → logprob: -6.389938831329346
    8. ' range' → logprob: -7.639938831329346
    9. '(set' → logprob: -8.889938354492188
    10. ' set' → logprob: -9.639938354492188

Token 874: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2572189271450043
    2. '0' → logprob: -1.6322189569473267
    3. 'range' → logprob: -3.632218837738037
    4. 'set' → logprob: -5.757218837738037
    5. '[i' → logprob: -7.132218837738037
    6. '(' → logprob: -8.007219314575195
    7. '[s' → logprob: -9.007219314575195
    8. '[color' → logprob: -9.507219314575195
    9. '{' → logprob: -9.882219314575195
    10. '[[' → logprob: -9.882219314575195

Token 875: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020509003661572933
    2. ' ,' → logprob: -8.750205039978027
    3. ',[' → logprob: -11.125205039978027
    4. '),' → logprob: -11.375205039978027
    5. ',),' → logprob: -12.250205039978027
    6. ',c' → logprob: -12.625205039978027
    7. '),(' → logprob: -12.875205039978027
    8. ',
' → logprob: -12.875205039978027
    9. ',(' → logprob: -13.250205039978027
    10. ',len' → logprob: -13.750205039978027

Token 876: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.375019073486328
    4. ')' → logprob: -15.500019073486328
    5. '```' → logprob: -17.625019073486328
    6. '):
' → logprob: -18.250019073486328
    7. '
' → logprob: -18.375019073486328
    8. '0' → logprob: -18.875019073486328
    9. '  ' → logprob: -19.125019073486328
    10. '[' → logprob: -19.562519073486328

Token 877: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009906834922730923
    2. '):' → logprob: -4.634906768798828
    3. '       ' → logprob: -9.634906768798828
    4. '   ' → logprob: -9.759906768798828
    5. ' ):
' → logprob: -11.634906768798828
    6. '):
' → logprob: -12.009906768798828
    7. '):

' → logprob: -12.009906768798828
    8. ':
' → logprob: -13.134906768798828
    9. ',' → logprob: -13.384906768798828
    10. ':' → logprob: -13.634906768798828

Token 878: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007666840683668852
    2. '   ' → logprob: -5.382667064666748
    3. ':' → logprob: -6.257667064666748
    4. ',' → logprob: -7.507667064666748
    5. ':
' → logprob: -8.63266658782959
    6. '```' → logprob: -8.75766658782959
    7. '           ' → logprob: -10.00766658782959
    8. '        
' → logprob: -10.13266658782959
    9. '[' → logprob: -10.63266658782959
    10. '<|end|>' → logprob: -10.88266658782959

Token 879: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' (adapté à ' group') → logprob: -0.3126680254936218
    2. 'members' → logprob: -2.1876680850982666
    3. '           ' → logprob: -2.5626680850982666
    4. 'nodes' → logprob: -3.6876680850982666
    5. 'grp' → logprob: -3.6876680850982666
    6. 'same' → logprob: -4.5626678466796875
    7. '               ' → logprob: -5.3126678466796875
    8. 'sts' → logprob: -5.4376678466796875
    9. 'color' → logprob: -6.6876678466796875
    10. 'ids' → logprob: -6.6876678466796875

Token 880: ' =' (ID: 314)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.39273717999458313
    2. ' =' → logprob: -2.2677371501922607
    3. 'stre' → logprob: -2.3927371501922607
    4. '=' → logprob: -2.6427371501922607
    5. '_members' → logprob: -3.2677371501922607
    6. '_ids' → logprob: -4.89273738861084
    7. '_nodes' → logprob: -5.39273738861084
    8. 'members' → logprob: -6.26773738861084
    9. '   ' → logprob: -6.39273738861084
    10. '=[]
' → logprob: -7.01773738861084

Token 881: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.059304919093847275
    2. '[s' → logprob: -3.30930495262146
    3. '[' → logprob: -4.684304714202881
    4. ' [' → logprob: -5.059304714202881
    5. '[u' → logprob: -6.309304714202881
    6. '[color' → logprob: -7.184304714202881
    7. '[idx' → logprob: -7.559304714202881
    8. '[id' → logprob: -8.059305191040039
    9. '[c' → logprob: -8.059305191040039
    10. '[x' → logprob: -8.184305191040039

Token 882: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005658994195982814
    2. 'u' → logprob: -7.625566005706787
    3. ' i' → logprob: -10.375565528869629
    4. 's' → logprob: -10.750565528869629
    5. 'x' → logprob: -11.000565528869629
    6. 'v' → logprob: -12.750565528869629
    7. '   ' → logprob: -12.875565528869629
    8. 'idx' → logprob: -13.500565528869629
    9. '[i' → logprob: -14.375565528869629
    10. '
' → logprob: -14.875565528869629

Token 883: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1271468997001648
    2. 'for' → logprob: -2.1271469593048096
    3. '           ' → logprob: -9.25214672088623
    4. ' ' → logprob: -10.12714672088623
    5. '               ' → logprob: -10.25214672088623
    6. '        ' → logprob: -12.12714672088623
    7. '          ' → logprob: -12.12714672088623
    8. '            ' → logprob: -12.25214672088623
    9. '	for' → logprob: -12.25214672088623
    10. '       ' → logprob: -12.37714672088623

Token 884: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03785613551735878
    2. 'range' → logprob: -3.787856101989746
    3. ' i' → logprob: -4.662856101989746
    4. ' range' → logprob: -5.537856101989746
    5. ',' → logprob: -7.537856101989746
    6. ' in' → logprob: -7.662856101989746
    7. 'in' → logprob: -9.037856101989746
    8. ',i' → logprob: -12.287856101989746
    9. 'idx' → logprob: -12.662856101989746
    10. ' ' → logprob: -15.287856101989746

Token 885: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.395364373922348
    2. ',' → logprob: -1.6453644037246704
    3. 'in' → logprob: -2.020364284515381
    4. ',color' → logprob: -7.395364284515381
    5. ' ,' → logprob: -8.520364761352539
    6. ',in' → logprob: -10.270364761352539
    7. ',x' → logprob: -10.270364761352539
    8. ',s' → logprob: -11.020364761352539
    9. ',i' → logprob: -11.020364761352539
    10. 'i' → logprob: -11.395364761352539

Token 886: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. 'color' → logprob: -19.000059127807617
    4. '   ' → logprob: -20.500059127807617
    5. '(range' → logprob: -21.125059127807617
    6. ' ' → logprob: -21.250059127807617
    7. '
' → logprob: -21.750059127807617
    8. '```' → logprob: -22.750059127807617
    9. '	range' → logprob: -22.875059127807617
    10. '  ' → logprob: -23.125059127807617

Token 887: '(cnt' (ID: 102125)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.004234750755131245
    2. 'len' → logprob: -6.004234790802002
    3. '(cnt' → logprob: -6.379234790802002
    4. ' cnt' → logprob: -10.004234313964844
    5. '           ' → logprob: -11.879234313964844
    6. '(len' → logprob: -12.379234313964844
    7. '[cnt' → logprob: -13.004234313964844
    8. '	cnt' → logprob: -14.254234313964844
    9. '               ' → logprob: -14.629234313964844
    10. 'color' → logprob: -14.754234313964844

Token 888: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03903046250343323
    2. ' if' → logprob: -3.7890305519104004
    3. 'if' → logprob: -4.1640305519104
    4. '           ' → logprob: -9.664030075073242
    5. ' )' → logprob: -11.414030075073242
    6. '       ' → logprob: -12.039030075073242
    7. ' ' → logprob: -12.289030075073242
    8. ')]' → logprob: -12.414030075073242
    9. '   ' → logprob: -12.664030075073242
    10. ']' → logprob: -12.664030075073242

Token 889: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38781875371932983
    2. 'if' → logprob: -1.1378188133239746
    3. '           ' → logprob: -7.012818813323975
    4. '               ' → logprob: -10.762818336486816
    5. '       ' → logprob: -12.387818336486816
    6. ' ' → logprob: -12.512818336486816
    7. 'for' → logprob: -12.512818336486816
    8. '            ' → logprob: -12.887818336486816
    9. '	if' → logprob: -13.012818336486816
    10. '   ' → logprob: -13.137818336486816

Token 890: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.0019286326132714748
    2. ' color' → logprob: -6.251928806304932
    3. '   ' → logprob: -18.251928329467773
    4. '           ' → logprob: -18.376928329467773
    5. '	color' → logprob: -18.501928329467773
    6. '(color' → logprob: -18.751928329467773
    7. ' ' → logprob: -19.501928329467773
    8. '
' → logprob: -20.126928329467773
    9. '=color' → logprob: -20.376928329467773
    10. 'colors' → logprob: -21.126928329467773

Token 891: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001430355361662805
    2. 'i' → logprob: -7.001430511474609
    3. '==' → logprob: -7.876430511474609
    4. '[' → logprob: -9.87643051147461
    5. '[
' → logprob: -10.75143051147461
    6. '=i' → logprob: -11.12643051147461
    7. ' ==' → logprob: -11.37643051147461
    8. ']==' → logprob: -11.50143051147461
    9. '(i' → logprob: -11.87643051147461
    10. ' i' → logprob: -11.87643051147461

Token 892: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.09428247064352036
    2. '==' → logprob: -2.469282388687134
    3. ']' → logprob: -5.469282627105713
    4. ' ==' → logprob: -7.094282627105713
    5. ')==' → logprob: -8.344282150268555
    6. '[' → logprob: -11.094282150268555
    7. '[i' → logprob: -11.344282150268555
    8. '']==' → logprob: -11.719282150268555
    9. '()==' → logprob: -12.844282150268555
    10. ']=' → logprob: -13.094282150268555

Token 893: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.463036435074173e-05
    2. ' c' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.500024795532227
    4. ' ' → logprob: -16.625024795532227
    5. '	c' → logprob: -17.875024795532227
    6. '
' → logprob: -18.500024795532227
    7. ')c' → logprob: -18.625024795532227
    8. '  ' → logprob: -18.750024795532227
    9. '```' → logprob: -19.375024795532227
    10. '_c' → logprob: -19.750024795532227

Token 894: 'group' (ID: 4323)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0017132589127868414
    2. ' c' → logprob: -6.751713275909424
    3. 'group' → logprob: -8.626712799072266
    4. '   ' → logprob: -8.876712799072266
    5. ' ' → logprob: -9.126712799072266
    6. '	c' → logprob: -9.876712799072266
    7. '       ' → logprob: -11.251712799072266
    8. ')c' → logprob: -11.501712799072266
    9. '           ' → logprob: -11.876712799072266
    10. '  ' → logprob: -12.376712799072266

Token 895: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5768702626228333
    2. ']
' → logprob: -0.8268702626228333
    3. ']

' → logprob: -7.201870441436768
    4. '           ' → logprob: -9.45186996459961
    5. ']
' → logprob: -10.45186996459961
    6. ' ]
' → logprob: -10.45186996459961
    7. ' ]' → logprob: -10.95186996459961
    8. '       ' → logprob: -11.20186996459961
    9. '   ' → logprob: -12.45186996459961
    10. ' for' → logprob: -12.70186996459961

Token 896: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008703332394361496
    2. '
' → logprob: -5.508703231811523
    3. ' for' → logprob: -6.133703231811523
    4. ']
' → logprob: -7.133703231811523
    5. '   ' → logprob: -7.883703231811523
    6. ']' → logprob: -7.883703231811523
    7. '       ' → logprob: -7.883703231811523
    8. 'for' → logprob: -8.008703231811523
    9. ',' → logprob: -10.258703231811523
    10. ':
' → logprob: -10.383703231811523

Token 897: ' g' (ID: 329)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.391225129365921
    2. ' for' → logprob: -1.1412250995635986
    3. '           ' → logprob: -5.891225337982178
    4. 'from' → logprob: -6.891225337982178
    5. ' from' → logprob: -8.14122486114502
    6. 'n' → logprob: -9.51622486114502
    7. 'group' → logprob: -9.64122486114502
    8. '```' → logprob: -9.76622486114502
    9. ' group' → logprob: -11.01622486114502
    10. 'length' → logprob: -11.14122486114502

Token 898: 'set' (ID: 977)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27722418308258057
    2. 'len' → logprob: -1.6522241830825806
    3. 'size' → logprob: -3.902224063873291
    4. '_len' → logprob: -3.902224063873291
    5. 'length' → logprob: -6.027224063873291
    6. 'roup' → logprob: -6.402224063873291
    7. 'or' → logprob: -6.652224063873291
    8. '_size' → logprob: -6.652224063873291
    9. 'from' → logprob: -7.277224063873291
    10. ' for' → logprob: -7.402224063873291

Token 899: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4818926453590393
    2. '=' → logprob: -0.9818926453590393
    3. '=set' → logprob: -4.8568925857543945
    4. '=
' → logprob: -13.356892585754395
    5. '={}' → logprob: -13.606892585754395
    6. ' ={' → logprob: -14.231892585754395
    7. ' =
' → logprob: -14.231892585754395
    8. '={' → logprob: -14.231892585754395
    9. '(set' → logprob: -14.606892585754395
    10. 'et' → logprob: -14.731892585754395

Token 900: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00012415809032972902
    2. ' set' → logprob: -9.000123977661133
    3. '{' → logprob: -14.250123977661133
    4. '(set' → logprob: -17.250123977661133
    5. '	set' → logprob: -17.750123977661133
    6. '=set' → logprob: -17.750123977661133
    7. '   ' → logprob: -18.875123977661133
    8. ' ' → logprob: -19.375123977661133
    9. ')set' → logprob: -20.625123977661133
    10. '{
' → logprob: -20.875123977661133

Token 901: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -0.0002585978072602302
    2. '()' → logprob: -8.375258445739746
    3. '()
' → logprob: -10.750258445739746
    4. 'group' → logprob: -12.875258445739746
    5. '(
' → logprob: -13.000258445739746
    6. '(' → logprob: -14.125258445739746
    7. '[group' → logprob: -15.250258445739746
    8. '(i' → logprob: -15.500258445739746
    9. '((' → logprob: -16.000259399414062
    10. '(g' → logprob: -16.125259399414062

Token 902: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01033379789441824
    2. ')
' → logprob: -4.635334014892578
    3. '())' → logprob: -8.385334014892578
    4. '()' → logprob: -8.510334014892578
    5. ' )' → logprob: -9.885334014892578
    6. '           ' → logprob: -10.010334014892578
    7. ')

' → logprob: -10.510334014892578
    8. '())
' → logprob: -11.510334014892578
    9. '       ' → logprob: -12.135334014892578
    10. '()
' → logprob: -13.010334014892578

Token 903: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17291082441806793
    2. ' for' → logprob: -2.7979109287261963
    3. 'for' → logprob: -3.1729109287261963
    4. '       ' → logprob: -3.5479109287261963
    5. '
' → logprob: -4.047910690307617
    6. '   ' → logprob: -5.047910690307617
    7. '```' → logprob: -6.047910690307617
    8. '<|end|>' → logprob: -7.797910690307617
    9. ',' → logprob: -8.672910690307617
    10. '        
' → logprob: -9.547910690307617

Token 904: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01988193951547146
    2. '           ' → logprob: -4.644881725311279
    3. ' for' → logprob: -4.644881725311279
    4. '       ' → logprob: -8.644882202148438
    5. '```' → logprob: -8.894882202148438
    6. '   ' → logprob: -9.394882202148438
    7. 'from' → logprob: -10.019882202148438
    8. '
' → logprob: -11.644882202148438
    9. '	for' → logprob: -12.394882202148438
    10. ')' → logprob: -12.894882202148438

Token 905: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20170608162879944
    2. ' i' → logprob: -1.701706051826477
    3. '_i' → logprob: -9.201705932617188
    4. ' idx' → logprob: -9.576705932617188
    5. 'idx' → logprob: -9.826705932617188
    6. 'x' → logprob: -10.576705932617188
    7. '   ' → logprob: -11.326705932617188
    8. 'u' → logprob: -11.951705932617188
    9. ' x' → logprob: -11.951705932617188
    10. ' _' → logprob: -12.451705932617188

Token 906: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07955221831798553
    2. 'in' → logprob: -2.579552173614502
    3. '+' → logprob: -8.32955265045166
    4. '_in' → logprob: -9.32955265045166
    5. '	in' → logprob: -9.45455265045166
    6. ',' → logprob: -9.57955265045166
    7. ' ' → logprob: -9.82955265045166
    8. '<|end|>' → logprob: -9.95455265045166
    9. '0' → logprob: -11.45455265045166
    10. 'import' → logprob: -11.82955265045166

Token 907: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0017336098244413733
    2. 'group' → logprob: -6.501733779907227
    3. ' range' → logprob: -8.376733779907227
    4. 'g' → logprob: -14.001733779907227
    5. ' group' → logprob: -15.751733779907227
    6. '   ' → logprob: -16.626733779907227
    7. ' ' → logprob: -17.376733779907227
    8. '	range' → logprob: -17.501733779907227
    9. '(range' → logprob: -18.126733779907227
    10. '
' → logprob: -18.501733779907227

Token 908: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.030553210526704788
    2. '(len' → logprob: -3.530553102493286
    3. ' len' → logprob: -7.780553340911865
    4. 'range' → logprob: -8.155552864074707
    5. 'g' → logprob: -10.030552864074707
    6. '0' → logprob: -11.030552864074707
    7. '   ' → logprob: -11.405552864074707
    8. 'c' → logprob: -12.280552864074707
    9. ' ' → logprob: -12.780552864074707
    10. '           ' → logprob: -13.030552864074707

Token 909: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -0.0029815060552209616
    2. 'group' → logprob: -5.877981662750244
    3. '(g' → logprob: -8.752981185913086
    4. ' group' → logprob: -11.502981185913086
    5. '[group' → logprob: -12.127981185913086
    6. 'g' → logprob: -13.377981185913086
    7. '(' → logprob: -14.377981185913086
    8. ')' → logprob: -15.127981185913086
    9. '"group' → logprob: -15.502981185913086
    10. '	group' → logprob: -15.877981185913086

Token 910: ')):
' (ID: 22530)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.48668187856674194
    2. '):
' → logprob: -1.4866819381713867
    3. '):' → logprob: -2.3616819381713867
    4. ')' → logprob: -2.9866819381713867
    5. ' -' → logprob: -5.611681938171387
    6. ')-' → logprob: -5.611681938171387
    7. '           ' → logprob: -6.236681938171387
    8. '       ' → logprob: -6.486681938171387
    9. '   ' → logprob: -6.861681938171387
    10. ')+' → logprob: -7.486681938171387

Token 911: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1478646844625473
    2. '               ' → logprob: -2.647864580154419
    3. '	       ' → logprob: -3.022864580154419
    4. '       ' → logprob: -4.897864818572998
    5. ' for' → logprob: -5.022864818572998
    6. '	           ' → logprob: -6.897864818572998
    7. '		' → logprob: -7.147864818572998
    8. '		   ' → logprob: -7.897864818572998
    9. '		       ' → logprob: -8.27286434173584
    10. '   ' → logprob: -8.27286434173584

Token 912: ' A' (ID: 355)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38962435722351074
    2. 'for' → logprob: -1.1396243572235107
    3. '               ' → logprob: -6.88962459564209
    4. '                   ' → logprob: -7.01462459564209
    5. '   ' → logprob: -7.88962459564209
    6. 'range' → logprob: -9.51462459564209
    7. ' i' → logprob: -9.76462459564209
    8. ' range' → logprob: -9.76462459564209
    9. '	for' → logprob: -9.88962459564209
    10. ' j' → logprob: -9.88962459564209

Token 913: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.771776556968689
    2. '+' → logprob: -1.271776556968689
    3. ' for' → logprob: -1.771776556968689
    4. ' in' → logprob: -3.6467766761779785
    5. '               ' → logprob: -3.8967766761779785
    6. '                   ' → logprob: -4.5217766761779785
    7. ' +' → logprob: -4.6467766761779785
    8. '=' → logprob: -5.7717766761779785
    9. ')' → logprob: -5.8967766761779785
    10. ',' → logprob: -5.8967766761779785

Token 914: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.16025987267494202
    2. ' group' → logprob: -1.9102598428726196
    3. 'i' → logprob: -10.660260200500488
    4. '"group' → logprob: -12.660260200500488
    5. '[group' → logprob: -12.785260200500488
    6. ' i' → logprob: -12.785260200500488
    7. 'A' → logprob: -13.410260200500488
    8. '(group' → logprob: -13.410260200500488
    9. '	group' → logprob: -15.535260200500488
    10. ' A' → logprob: -15.660260200500488

Token 915: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.028091976419091225
    2. '+' → logprob: -4.778091907501221
    3. '[A' → logprob: -5.278091907501221
    4. ' +' → logprob: -5.278091907501221
    5. '[' → logprob: -5.528091907501221
    6. '+i' → logprob: -5.778091907501221
    7. '               ' → logprob: -7.903091907501221
    8. ')' → logprob: -7.903091907501221
    9. '[j' → logprob: -8.778092384338379
    10. '+A' → logprob: -9.028092384338379

Token 916: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03501342609524727
    2. ')' → logprob: -4.160013198852539
    3. ' +' → logprob: -4.535013198852539
    4. ']+' → logprob: -5.410013198852539
    5. ')+' → logprob: -6.910013198852539
    6. ']' → logprob: -7.035013198852539
    7. '               ' → logprob: -7.785013198852539
    8. '+i' → logprob: -7.910013198852539
    9. '])' → logprob: -8.035013198852539
    10. ')]' → logprob: -8.910013198852539

Token 917: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07616334408521652
    2. '           ' → logprob: -2.8261632919311523
    3. '	           ' → logprob: -4.826163291931152
    4. '	       ' → logprob: -5.326163291931152
    5. '		       ' → logprob: -7.326163291931152
    6. ' for' → logprob: -9.076163291931152
    7. '                   ' → logprob: -9.451163291931152
    8. '			' → logprob: -9.826163291931152
    9. '<|end|>' → logprob: -9.826163291931152
    10. '			   ' → logprob: -10.076163291931152

Token 918: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7765229344367981
    2. '               ' → logprob: -0.9015229344367981
    3. 'for' (adapté à ' for') → logprob: -2.1515228748321533
    4. '           ' → logprob: -4.526523113250732
    5. ' ' → logprob: -6.651523113250732
    6. '                   ' → logprob: -7.276523113250732
    7. '<|end|>' → logprob: -7.276523113250732
    8. '                ' → logprob: -7.401523113250732
    9. '			' → logprob: -7.401523113250732
    10. '              ' → logprob: -7.776523113250732

Token 919: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16027681529521942
    2. ' j' → logprob: -1.9102767705917358
    3. 'A' → logprob: -10.660276412963867
    4. ' A' → logprob: -11.160276412963867
    5. 'i' → logprob: -12.285276412963867
    6. '   ' → logprob: -12.785276412963867
    7. 'range' → logprob: -13.535276412963867
    8. ' range' → logprob: -13.660276412963867
    9. '	j' → logprob: -13.785276412963867
    10. ' ' → logprob: -13.785276412963867

Token 920: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006787843536585569
    2. 'in' → logprob: -5.0067877769470215
    3. ' i' → logprob: -10.00678825378418
    4. ' ' → logprob: -11.25678825378418
    5. 'i' → logprob: -12.38178825378418
    6. '	in' → logprob: -12.75678825378418
    7. '                   ' → logprob: -14.00678825378418
    8. ' A' → logprob: -14.13178825378418
    9. '(i' → logprob: -14.88178825378418
    10. 'In' → logprob: -15.00678825378418

Token 921: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7687199711799622
    2. ' range' → logprob: -1.2687199115753174
    3. 'i' → logprob: -1.3937199115753174
    4. ' i' → logprob: -5.1437201499938965
    5. '(i' → logprob: -6.8937201499938965
    6. '(range' → logprob: -9.268719673156738
    7. 'A' → logprob: -9.518719673156738
    8. ' A' → logprob: -12.018719673156738
    9. '   ' → logprob: -12.393719673156738
    10. ' ' → logprob: -12.393719673156738

Token 922: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.16225376725196838
    2. 'i' → logprob: -1.912253737449646
    3. ' i' → logprob: -6.4122538566589355
    4. ' (' → logprob: -7.9122538566589355
    5. '(' → logprob: -11.662253379821777
    6. '   ' → logprob: -11.912253379821777
    7. '{i' → logprob: -13.787253379821777
    8. '(A' → logprob: -14.037253379821777
    9. '	i' → logprob: -14.287253379821777
    10. '               ' → logprob: -14.787253379821777

Token 923: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003410647332202643
    2. ' +' → logprob: -8.000341415405273
    3. '1' → logprob: -12.375341415405273
    4. '+i' → logprob: -14.500341415405273
    5. '+j' → logprob: -14.500341415405273
    6. '+
' → logprob: -15.125341415405273
    7. '()+' → logprob: -17.125341415405273
    8. '＋' → logprob: -17.250341415405273
    9. ')+' → logprob: -18.250341415405273
    10. '```' → logprob: -18.500341415405273

Token 924: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '
' → logprob: -17.125
    4. '```' → logprob: -17.75
    5. '   ' → logprob: -17.875
    6. 'len' → logprob: -19.0
    7. '0' → logprob: -19.75
    8. 'j' → logprob: -20.75
    9. '2' → logprob: -20.875
    10. '

' → logprob: -21.1875

Token 925: ',len' (ID: 73338)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6521435976028442
    2. '1' → logprob: -0.7771435976028442
    3. ',len' → logprob: -4.652143478393555
    4. ',' → logprob: -5.277143478393555
    5. '(len' → logprob: -5.527143478393555
    6. ' +' → logprob: -7.652143478393555
    7. 'len' → logprob: -9.402143478393555
    8. '<len' → logprob: -9.527143478393555
    9. '()+' → logprob: -11.027143478393555
    10. '(' → logprob: -11.152143478393555

Token 926: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -0.2014777511358261
    2. 'group' → logprob: -1.7014777660369873
    3. ' group' → logprob: -10.201478004455566
    4. '[group' → logprob: -10.576478004455566
    5. '"group' → logprob: -13.451478004455566
    6. '	group' → logprob: -15.701478004455566
    7. '.group' → logprob: -16.82647705078125
    8. '(' → logprob: -17.07647705078125
    9. ')' → logprob: -17.07647705078125
    10. '
' → logprob: -17.20147705078125

Token 927: ')):
' (ID: 22530)
  Prédit: '(group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -0.09910531342029572
    2. '):
' → logprob: -3.0991053581237793
    3. '[group' → logprob: -3.4741053581237793
    4. '):' → logprob: -4.099105358123779
    5. 'group' → logprob: -6.724105358123779
    6. ')' → logprob: -8.974104881286621
    7. '"group' → logprob: -9.474104881286621
    8. ')):
' → logprob: -9.599104881286621
    9. '   ' → logprob: -10.099104881286621
    10. ' group' → logprob: -10.599104881286621

Token 928: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32710957527160645
    2. '                   ' → logprob: -2.0771095752716064
    3. ')' → logprob: -3.7021095752716064
    4. ' ' → logprob: -3.7021095752716064
    5. '                ' → logprob: -3.9521095752716064
    6. '                               ' → logprob: -3.9521095752716064
    7. ' B' → logprob: -4.702109336853027
    8. '                       ' → logprob: -5.077109336853027
    9. '                           ' → logprob: -5.077109336853027
    10. '                                       ' → logprob: -5.202109336853027

Token 929: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.0078156478703022
    2. ' B' → logprob: -4.882815837860107
    3. '                   ' → logprob: -9.38281536102295
    4. 'A' → logprob: -10.63281536102295
    5. '               ' → logprob: -11.38281536102295
    6. ' ' → logprob: -11.63281536102295
    7. ')' → logprob: -11.75781536102295
    8. 'b' → logprob: -11.88281536102295
    9. '                           ' → logprob: -11.88281536102295
    10. '<|end|>' → logprob: -11.88281536102295

Token 930: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22026890516281128
    2. '=' → logprob: -1.720268964767456
    3. '                    ' → logprob: -5.470268726348877
    4. '                   ' → logprob: -5.595268726348877
    5. ')' → logprob: -6.220268726348877
    6. '<|end|>' → logprob: -6.220268726348877
    7. ' ' → logprob: -6.345268726348877
    8. '+' → logprob: -6.845268726348877
    9. '                ' → logprob: -7.345268726348877
    10. ',' → logprob: -7.845268726348877

Token 931: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.0052456180565059185
    2. ' group' → logprob: -5.255245685577393
    3. '[group' → logprob: -12.130245208740234
    4. '(group' → logprob: -12.505245208740234
    5. '"group' → logprob: -12.880245208740234
    6. '	group' → logprob: -16.880245208740234
    7. '                   ' → logprob: -17.005245208740234
    8. '.group' → logprob: -17.755245208740234
    9. 'equal' → logprob: -18.380245208740234
    10. 'j' → logprob: -19.380245208740234

Token 932: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.77627644513268e-06
    2. 'j' → logprob: -12.375008583068848
    3. '```' → logprob: -12.750008583068848
    4. '[i' → logprob: -13.625008583068848
    5. '[
' → logprob: -15.875008583068848
    6. '(j' → logprob: -16.250009536743164
    7. '[js' → logprob: -16.750009536743164
    8. '[' → logprob: -17.250009536743164
    9. '[user' → logprob: -17.375009536743164
    10. '[]' → logprob: -18.250009536743164

Token 933: ']
' (ID: 1592)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6715683937072754
    2. ')' → logprob: -1.2965683937072754
    3. '):
' → logprob: -1.5465683937072754
    4. '                   ' → logprob: -6.546568393707275
    5. ':' → logprob: -7.421568393707275
    6. '):

' → logprob: -9.046567916870117
    7. ':
' → logprob: -9.171567916870117
    8. ',' → logprob: -9.546567916870117
    9. '<|end|>' → logprob: -9.546567916870117
    10. '                       ' → logprob: -10.046567916870117

Token 934: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00026979928952641785
    2. '                    
' → logprob: -9.250269889831543
    3. '               ' → logprob: -9.750269889831543
    4. '                       ' → logprob: -10.125269889831543
    5. '           ' → logprob: -11.000269889831543
    6. '                    ' → logprob: -11.125269889831543
    7. '
' → logprob: -11.125269889831543
    8. '       ' → logprob: -12.125269889831543
    9. '                  ' → logprob: -12.250269889831543
    10. '                        
' → logprob: -12.750269889831543

Token 935: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9411869645118713
    2. 'if' → logprob: -1.0661869049072266
    3. '#' (adapté à ' #') → logprob: -2.0661869049072266
    4. '   ' → logprob: -2.9411869049072266
    5. 'found' → logprob: -3.5661869049072266
    6. 'common' → logprob: -4.441186904907227
    7. '
' → logprob: -4.816186904907227
    8. '       ' → logprob: -4.941186904907227
    9. ' if' → logprob: -5.066186904907227
    10. ' #' → logprob: -5.816186904907227

Token 936: ' Check' (ID: 6208)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.6865841150283813
    2. 'common' → logprob: -1.5615841150283813
    3. 'if' → logprob: -1.8115841150283813
    4. '#' → logprob: -3.186583995819092
    5. '                   ' → logprob: -3.436583995819092
    6. 'shared' → logprob: -4.061583995819092
    7. 'mut' → logprob: -4.936583995819092
    8. '   ' → logprob: -5.686583995819092
    9. 'flag' → logprob: -5.686583995819092
    10. 'exists' → logprob: -5.686583995819092

Token 937: ' condition' (ID: 7060)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.471335768699646
    2. '                   ' → logprob: -1.596335768699646
    3. ' (' → logprob: -1.846335768699646
    4. 'in' → logprob: -2.3463358879089355
    5. ' if' → logprob: -2.3463358879089355
    6. '(' → logprob: -2.9713358879089355
    7. 'if' → logprob: -3.0963358879089355
    8. '(
' → logprob: -4.2213358879089355
    9. 'len' → logprob: -4.5963358879089355
    10. '               ' → logprob: -4.5963358879089355

Token 938: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5126168131828308
    2. ' (' → logprob: -1.8876168727874756
    3. '(
' → logprob: -2.6376168727874756
    4. ' (
' → logprob: -3.0126168727874756
    5. '(' → logprob: -3.5126168727874756
    6. '                       ' → logprob: -3.6376168727874756
    7. 'if' → logprob: -4.1376166343688965
    8. ' if' → logprob: -4.2626166343688965
    9. '                    ' → logprob: -4.5126166343688965
    10. '```' → logprob: -5.3876166343688965

Token 939: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10185322165489197
    2. '(' → logprob: -2.601853132247925
    3. ' (' → logprob: -4.601853370666504
    4. ' ' → logprob: -4.851853370666504
    5. '0' → logprob: -5.851853370666504
    6. '                   ' → logprob: -7.351853370666504
    7. '(
' → logprob: -7.976853370666504
    8. ')' → logprob: -8.476853370666504
    9. '                       ' → logprob: -8.476853370666504
    10. 'A' → logprob: -8.726853370666504

Token 940: '):' (ID: 3127)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09502454847097397
    2. ')' → logprob: -2.595024585723877
    3. '):' → logprob: -4.970024585723877
    4. '):
' → logprob: -5.595024585723877
    5. ')
' → logprob: -6.470024585723877
    6. ':' → logprob: -7.095024585723877
    7. '           ' → logprob: -7.220024585723877
    8. '
' → logprob: -7.970024585723877
    9. '               ' → logprob: -7.970024585723877
    10. '                    
' → logprob: -8.095024108886719

Token 941: ' exists' (ID: 13031)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4605633616447449
    2. 'found' → logprob: -1.0855634212493896
    3. '   ' → logprob: -4.4605631828308105
    4. '           ' → logprob: -4.8355631828308105
    5. ' found' → logprob: -5.0855631828308105
    6. '               ' → logprob: -6.8355631828308105
    7. '       ' → logprob: -6.9605631828308105
    8. 'has' → logprob: -7.0855631828308105
    9. 'exists' → logprob: -7.2105631828308105
    10. 'possible' → logprob: -7.7105631828308105

Token 942: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.07728062570095062
    2. ' C' → logprob: -2.7022805213928223
    3. ' any' → logprob: -6.077280521392822
    4. '                   ' → logprob: -6.327280521392822
    5. 'c' → logprob: -7.577280521392822
    6. 'any' → logprob: -7.577280521392822
    7. ')' → logprob: -7.702280521392822
    8. ' for' → logprob: -8.45228099822998
    9. '
' → logprob: -8.82728099822998
    10. '   ' → logprob: -8.82728099822998

Token 943: ' with' (ID: 483)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.030350739136338234
    2. ' in' → logprob: -5.155350685119629
    3. ' =' → logprob: -5.405350685119629
    4. '<|end|>' → logprob: -5.405350685119629
    5. ':' → logprob: -5.780350685119629
    6. ' found' → logprob: -6.280350685119629
    7. ' with' → logprob: -6.280350685119629
    8. ' for' → logprob: -7.030350685119629
    9. '				' → logprob: -7.030350685119629
    10. ' exists' → logprob: -7.030350685119629

Token 944: ' both' (ID: 2973)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.7739056348800659
    2. 'C' → logprob: -1.898905634880066
    3. '((' → logprob: -2.0239057540893555
    4. '(
' → logprob: -2.1489057540893555
    5. '(A' → logprob: -3.0239057540893555
    6. '(' → logprob: -3.3989057540893555
    7. '(c' → logprob: -4.3989057540893555
    8. 'cross' → logprob: -4.3989057540893555
    9. '(any' → logprob: -4.5239057540893555
    10. 'any' → logprob: -5.1489057540893555

Token 945: ' connected' (ID: 12079)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4886304140090942
    2. '(C' → logprob: -1.4886304140090942
    3. '((' → logprob: -1.4886304140090942
    4. 'C' → logprob: -1.9886304140090942
    5. ' (' → logprob: -2.8636302947998047
    6. '(A' → logprob: -3.1136302947998047
    7. '(color' → logprob: -3.7386302947998047
    8. 'color' → logprob: -3.8636302947998047
    9. '(
' → logprob: -4.613630294799805
    10. ' C' → logprob: -5.238630294799805

Token 946: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.0687143802642822
    2. ' (' → logprob: -1.9437143802642822
    3. '                   ' → logprob: -1.9437143802642822
    4. ' in' → logprob: -2.0687143802642822
    5. 'to' → logprob: -2.8187143802642822
    6. 'in' → logprob: -3.0687143802642822
    7. ' with' → logprob: -3.1937143802642822
    8. ')' → logprob: -4.068714141845703
    9. '(A' → logprob: -4.818714141845703
    10. '                       ' → logprob: -4.943714141845703

Token 947: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.007652772590517998
    2. 'C' → logprob: -5.507652759552002
    3. ' A' → logprob: -6.382652759552002
    4. 'either' → logprob: -7.757652759552002
    5. '(' → logprob: -7.882652759552002
    6. '(A' → logprob: -8.00765323638916
    7. ' either' → logprob: -8.50765323638916
    8. ' (' → logprob: -8.50765323638916
    9. '...' → logprob: -9.75765323638916
    10. ')' → logprob: -9.75765323638916

Token 948: ' and' (ID: 326)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17172932624816895
    2. ' or' → logprob: -2.546729326248169
    3. ' and' → logprob: -2.921729326248169
    4. 'and' → logprob: -5.17172908782959
    5. ',' → logprob: -5.42172908782959
    6. ' in' → logprob: -6.04672908782959
    7. ')' → logprob: -6.17172908782959
    8. ' (' → logprob: -6.92172908782959
    9. '           ' → logprob: -6.92172908782959
    10. ':' → logprob: -7.04672908782959

Token 949: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.011262968182563782
    2. ' B' → logprob: -4.511262893676758
    3. 'C' → logprob: -9.136262893676758
    4. ' or' → logprob: -9.761262893676758
    5. '```' → logprob: -10.886262893676758
    6. 'or' → logprob: -11.886262893676758
    7. ',' → logprob: -12.761262893676758
    8. ' C' → logprob: -12.761262893676758
    9. 'either' → logprob: -12.761262893676758
    10. ' ' → logprob: -12.886262893676758

Token 950: ' with' (ID: 483)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017029602080583572
    2. '                    
' → logprob: -5.767029762268066
    3. ':' → logprob: -5.892029762268066
    4. ',' → logprob: -6.142029762268066
    5. '                       ' → logprob: -6.392029762268066
    6. '
' → logprob: -6.767029762268066
    7. '                    ' → logprob: -7.267029762268066
    8. '               ' → logprob: -7.767029762268066
    9. ':
' → logprob: -7.892029762268066
    10. ' for' → logprob: -7.892029762268066

Token 951: ' same' (ID: 2684)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.35874849557876587
    2. ' cross' → logprob: -1.983748435974121
    3. 'either' → logprob: -3.233748435974121
    4. ' either' → logprob: -3.608748435974121
    5. '(' → logprob: -4.233748435974121
    6. ' (' → logprob: -4.358748435974121
    7. '(
' → logprob: -4.483748435974121
    8. '
' → logprob: -5.108748435974121
    9. 'in' → logprob: -5.108748435974121
    10. '((' → logprob: -5.108748435974121

Token 952: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.7122271656990051
    2. 'direction' → logprob: -0.9622271656990051
    3. 'in' → logprob: -4.0872273445129395
    4. ' input' → logprob: -4.3372273445129395
    5. '_direction' → logprob: -4.4622273445129395
    6. 'input' → logprob: -4.4622273445129395
    7. ' in' → logprob: -5.0872273445129395
    8. '#' → logprob: -5.2122273445129395
    9. '
' → logprob: -5.2122273445129395
    10. '_' → logprob: -5.3372273445129395

Token 953: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04097207263112068
    2. '
' → logprob: -5.0409722328186035
    3. '<|end|>' → logprob: -5.1659722328186035
    4. '                    
' → logprob: -5.4159722328186035
    5. '                       ' → logprob: -5.5409722328186035
    6. ',' → logprob: -5.9159722328186035
    7. '                    ' → logprob: -6.0409722328186035
    8. ')' → logprob: -6.1659722328186035
    9. ':' → logprob: -6.2909722328186035
    10. '                        
' → logprob: -6.9159722328186035

Token 954: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002216988243162632
    2. '<|end|>' → logprob: -7.502216815948486
    3. '                    
' → logprob: -8.127217292785645
    4. '               ' → logprob: -8.377217292785645
    5. '           ' → logprob: -8.502217292785645
    6. '<|end|>' → logprob: -9.127217292785645
    7. '                    ' → logprob: -9.377217292785645
    8. '				' → logprob: -9.752217292785645
    9. '                           ' → logprob: -9.877217292785645
    10. '                       ' → logprob: -9.877217292785645

Token 955: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12501928210258484
    2. 'found' → logprob: -2.5000193119049072
    3. ' found' → logprob: -4.500019073486328
    4. 'exists' → logprob: -4.625019073486328
    5. '
' → logprob: -5.625019073486328
    6. '   ' → logprob: -6.000019073486328
    7. '                    
' → logprob: -6.625019073486328
    8. 'has' → logprob: -6.875019073486328
    9. ' exists' → logprob: -7.250019073486328
    10. 'possible' → logprob: -7.375019073486328

Token 956: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8192480206489563
    2. ' if' → logprob: -1.5692479610443115
    3. '                   ' → logprob: -2.1942479610443115
    4. 'found' → logprob: -2.6942479610443115
    5. ' found' → logprob: -2.8192479610443115
    6. 'exists' → logprob: -3.8192479610443115
    7. ' for' → logprob: -4.444248199462891
    8. 'for' → logprob: -4.444248199462891
    9. ' exists' → logprob: -4.819248199462891
    10. '                       ' → logprob: -5.069248199462891

Token 957: ' all' (ID: 722)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8780086636543274
    2. ' in' → logprob: -2.2530086040496826
    3. '                   ' → logprob: -2.6280086040496826
    4. 'ns' → logprob: -2.8780086040496826
    5. '               ' → logprob: -3.0030086040496826
    6. '   ' → logprob: -3.5030086040496826
    7. '#' → logprob: -3.6280086040496826
    8. 'C' → logprob: -3.7530086040496826
    9. '           ' → logprob: -3.7530086040496826
    10. ' (' → logprob: -3.8780086040496826

Token 958: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.1744970977306366
    2. ' C' → logprob: -3.424497127532959
    3. 'k' → logprob: -3.799497127532959
    4. 'c' → logprob: -3.924497127532959
    5. 'neighbors' → logprob: -4.174497127532959
    6. '               ' → logprob: -4.299497127532959
    7. 'for' → logprob: -4.549497127532959
    8. '                   ' → logprob: -4.924497127532959
    9. '   ' → logprob: -5.299497127532959
    10. ' neighbors' → logprob: -5.424497127532959

Token 959: ':' (ID: 25)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3214644491672516
    2. ' in' → logprob: -1.6964644193649292
    3. ' for' → logprob: -3.6964645385742188
    4. ' =' → logprob: -4.321464538574219
    5. 'in' → logprob: -4.321464538574219
    6. ':' → logprob: -4.821464538574219
    7. 'for' → logprob: -4.946464538574219
    8. '               ' → logprob: -5.196464538574219
    9. 's' → logprob: -5.821464538574219
    10. '                    
' → logprob: -6.321464538574219

Token 960: ' either' (ID: 4784)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13668397068977356
    2. ' for' → logprob: -2.386683940887451
    3. '                       ' → logprob: -4.761683940887451
    4. 'for' → logprob: -5.011683940887451
    5. '                    ' → logprob: -5.511683940887451
    6. '                    
' → logprob: -5.761683940887451
    7. '               ' → logprob: -6.136683940887451
    8. '           ' → logprob: -6.886683940887451
    9. '```' → logprob: -7.011683940887451
    10. '       ' → logprob: -7.261683940887451

Token 961: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5671228766441345
    2. 'color' → logprob: -2.8171229362487793
    3. ' any' → logprob: -2.9421229362487793
    4. ' C' → logprob: -2.9421229362487793
    5. 'in' → logprob: -3.4421229362487793
    6. '                   ' → logprob: -3.5671229362487793
    7. 'for' → logprob: -3.6921229362487793
    8. 'A' → logprob: -3.6921229362487793
    9. 'False' → logprob: -3.8171229362487793
    10. 'any' → logprob: -3.9421229362487793

Token 962: '->' (ID: 609)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.536653995513916
    2. 'in' → logprob: -0.911653995513916
    3. 'for' → logprob: -5.036653995513916
    4. '_in' → logprob: -6.536653995513916
    5. ' for' → logprob: -7.286653995513916
    6. ' =' → logprob: -7.411653995513916
    7. '=' → logprob: -7.536653995513916
    8. 'from' → logprob: -7.536653995513916
    9. 's' → logprob: -7.661653995513916
    10. ')' → logprob: -8.161653518676758

Token 963: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.032995402812957764
    2. 'cross' → logprob: -4.782995223999023
    3. 'in' → logprob: -5.407995223999023
    4. 'C' → logprob: -5.407995223999023
    5. '{' → logprob: -5.532995223999023
    6. ' A' → logprob: -6.157995223999023
    7. '(A' → logprob: -6.532995223999023
    8. '
' → logprob: -7.032995223999023
    9. 'i' → logprob: -7.157995223999023
    10. 'c' → logprob: -7.282995223999023

Token 964: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7823373675346375
    2. 'and' → logprob: -0.7823373675346375
    3. ' or' → logprob: -2.6573374271392822
    4. '                   ' → logprob: -4.657337188720703
    5. 'or' → logprob: -5.907337188720703
    6. ')' → logprob: -6.532337188720703
    7. '               ' → logprob: -7.657337188720703
    8. '           ' → logprob: -8.157337188720703
    9. ',' → logprob: -9.282337188720703
    10. '   ' → logprob: -9.532337188720703

Token 965: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.1293031871318817
    2. ' C' → logprob: -2.129303216934204
    3. ' (' → logprob: -6.504302978515625
    4. '(C' → logprob: -7.629302978515625
    5. ' ' → logprob: -9.254302978515625
    6. ''' → logprob: -9.504302978515625
    7. '(' → logprob: -9.754302978515625
    8. '`' → logprob: -10.129302978515625
    9. ',' → logprob: -10.629302978515625
    10. 'c' → logprob: -11.254302978515625

Token 966: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.007245603017508984
    2. '-' → logprob: -5.2572455406188965
    3. '-A' → logprob: -6.3822455406188965
    4. ' ->' → logprob: -9.382246017456055
    5. ' -' → logprob: -9.507246017456055
    6. '```' → logprob: -10.257246017456055
    7. ')->' → logprob: -11.007246017456055
    8. '→' → logprob: -11.632246017456055
    9. '-in' → logprob: -11.882246017456055
    10. '->[' → logprob: -11.882246017456055

Token 967: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.009839548729360104
    2. 'A' → logprob: -4.6348395347595215
    3. 'C' → logprob: -9.75984001159668
    4. ' B' → logprob: -11.75984001159668
    5. '{' → logprob: -12.13484001159668
    6. '(' → logprob: -13.13484001159668
    7. '(B' → logprob: -13.13484001159668
    8. 'i' → logprob: -13.25984001159668
    9. '```' → logprob: -13.50984001159668
    10. 'a' → logprob: -13.63484001159668

Token 968: ' in' (ID: 306)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020988617092370987
    2. ' or' → logprob: -4.395988464355469
    3. '
' → logprob: -5.645988464355469
    4. ',' → logprob: -6.145988464355469
    5. 'for' → logprob: -7.520988464355469
    6. ' for' → logprob: -7.895988464355469
    7. 'or' → logprob: -8.145988464355469
    8. '```' → logprob: -8.270988464355469
    9. '               ' → logprob: -8.645988464355469
    10. '           ' → logprob: -8.645988464355469

Token 969: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.3638351857662201
    2. 'in' → logprob: -1.3638352155685425
    3. ' cross' → logprob: -3.738835096359253
    4. 'out' → logprob: -4.363835334777832
    5. 'input' → logprob: -5.613835334777832
    6. ' in' → logprob: -5.738835334777832
    7. 'c' → logprob: -6.613835334777832
    8. '{' → logprob: -6.738835334777832
    9. '
' → logprob: -7.238835334777832
    10. '(c' → logprob: -7.988835334777832

Token 970: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0004291195946279913
    2. 's' → logprob: -8.750429153442383
    3. ')' → logprob: -9.000429153442383
    4. '```' → logprob: -9.500429153442383
    5. '           ' → logprob: -11.375429153442383
    6. '_sets' → logprob: -11.750429153442383
    7. '
' → logprob: -11.875429153442383
    8. ')_' → logprob: -11.875429153442383
    9. '               ' → logprob: -12.250429153442383
    10. 'set' → logprob: -12.375429153442383

Token 971: ' or' (ID: 503)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007821086794137955
    2. ' or' → logprob: -5.757821083068848
    3. ' for' → logprob: -6.507821083068848
    4. 'for' → logprob: -7.382821083068848
    5. '                       ' → logprob: -7.757821083068848
    6. '
' → logprob: -7.757821083068848
    7. '```' → logprob: -8.132821083068848
    8. ',' → logprob: -8.382821083068848
    9. '<|end|>' → logprob: -8.632821083068848
    10. '           ' → logprob: -8.632821083068848

Token 972: ' A' (ID: 355)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6263116598129272
    2. '(A' → logprob: -1.0013116598129272
    3. '(C' → logprob: -3.251311779022217
    4. '(' → logprob: -3.626311779022217
    5. '                   ' → logprob: -5.001311779022217
    6. 'C' → logprob: -5.001311779022217
    7. 'A' → logprob: -5.001311779022217
    8. '#' → logprob: -5.751311779022217
    9. '(B' → logprob: -5.751311779022217
    10. ' C' → logprob: -6.001311779022217

Token 973: '->' (ID: 609)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4281385838985443
    2. '-C' → logprob: -1.8031386137008667
    3. '->' → logprob: -1.9281386137008667
    4. '-c' → logprob: -4.428138732910156
    5. ''-' → logprob: -4.803138732910156
    6. '>-' → logprob: -5.053138732910156
    7. ' -' → logprob: -5.803138732910156
    8. '<-' → logprob: -6.928138732910156
    9. ')-' → logprob: -7.053138732910156
    10. '"-' → logprob: -7.178138732910156

Token 974: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -6.749814019713085e-06
    2. ' C' → logprob: -12.875006675720215
    3. '```' → logprob: -13.250006675720215
    4. '>C' → logprob: -14.375006675720215
    5. '
' → logprob: -14.625006675720215
    6. ''C' → logprob: -15.000006675720215
    7. 'A' → logprob: -15.500006675720215
    8. 'c' → logprob: -15.875006675720215
    9. '_C' → logprob: -16.12500762939453
    10. '`' → logprob: -16.50000762939453

Token 975: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5779899954795837
    2. ' and' → logprob: -0.8279899954795837
    3. ')' → logprob: -6.5779900550842285
    4. ' in' → logprob: -9.20298957824707
    5. '```' → logprob: -9.20298957824707
    6. '           ' → logprob: -9.32798957824707
    7. '&&' → logprob: -10.07798957824707
    8. '                   ' → logprob: -10.07798957824707
    9. 'in' → logprob: -10.20298957824707
    10. ',' → logprob: -10.57798957824707

Token 976: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.531281054019928
    2. 'C' → logprob: -0.906281054019928
    3. ' B' → logprob: -5.406280994415283
    4. ' C' → logprob: -5.656280994415283
    5. 'cross' → logprob: -9.781281471252441
    6. '(B' → logprob: -10.531281471252441
    7. '   ' → logprob: -11.781281471252441
    8. ' cross' → logprob: -11.781281471252441
    9. ' ' → logprob: -11.781281471252441
    10. '(C' → logprob: -11.906281471252441

Token 977: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.00013357517309486866
    2. '>' → logprob: -9.875133514404297
    3. '-' → logprob: -10.375133514404297
    4. '```' → logprob: -10.500133514404297
    5. '->_' → logprob: -12.125133514404297
    6. ' ->' → logprob: -12.250133514404297
    7. '>C' → logprob: -13.000133514404297
    8. '-->' → logprob: -13.375133514404297
    9. '`' → logprob: -13.500133514404297
    10. '-C' → logprob: -13.750133514404297

Token 978: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.0280383548888494e-06
    2. ' C' → logprob: -13.875000953674316
    3. 'c' → logprob: -17.000001907348633
    4. '<|end|>' → logprob: -17.625001907348633
    5. '>C' → logprob: -17.750001907348633
    6. '
' → logprob: -18.375001907348633
    7. '```' → logprob: -18.500001907348633
    8. 'A' → logprob: -18.500001907348633
    9. '[' → logprob: -19.375001907348633
    10. ''C' → logprob: -19.875001907348633

Token 979: ' in' (ID: 306)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012608308345079422
    2. ':
' → logprob: -5.637608528137207
    3. '
' → logprob: -6.262608528137207
    4. '                       ' → logprob: -6.262608528137207
    5. ':' → logprob: -6.512608528137207
    6. '                    
' → logprob: -7.512608528137207
    7. '               ' → logprob: -7.887608528137207
    8. '                    ' → logprob: -7.887608528137207
    9. '           ' → logprob: -8.137608528137207
    10. '                        
' → logprob: -8.762608528137207

Token 980: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.06198807805776596
    2. ' cross' → logprob: -2.811988115310669
    3. '
' → logprob: -11.68698787689209
    4. '_cross' → logprob: -12.18698787689209
    5. '```' → logprob: -13.31198787689209
    6. 'c' → logprob: -13.43698787689209
    7. 'set' → logprob: -14.18698787689209
    8. 'input' → logprob: -14.56198787689209
    9. 'out' → logprob: -15.06198787689209
    10. '{' → logprob: -15.31198787689209

Token 981: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -4.060365608893335e-05
    2. 'set' → logprob: -10.750041007995605
    3. '{' → logprob: -11.625041007995605
    4. '```' → logprob: -12.000041007995605
    5. 'Set' → logprob: -13.500041007995605
    6. '\' → logprob: -14.875041007995605
    7. '_sets' → logprob: -15.125041007995605
    8. '_SET' → logprob: -15.500041007995605
    9. 'A' → logprob: -15.625041007995605
    10. '`' → logprob: -15.750041007995605

Token 982: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0018915070686489344
    2. '
' → logprob: -7.251891613006592
    3. '                    
' → logprob: -7.501891613006592
    4. '<|end|>' → logprob: -9.501891136169434
    5. '           ' → logprob: -9.626891136169434
    6. '               ' → logprob: -9.876891136169434
    7. ',' → logprob: -9.876891136169434
    8. 'for' → logprob: -9.876891136169434
    9. '				' → logprob: -10.001891136169434
    10. '                       ' → logprob: -10.376891136169434

Token 983: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005718595930375159
    2. '<|end|>' → logprob: -8.625572204589844
    3. '<|end|>' → logprob: -9.750572204589844
    4. '           ' → logprob: -9.750572204589844
    5. '                    
' → logprob: -10.125572204589844
    6. '```' → logprob: -10.250572204589844
    7. '
' → logprob: -10.250572204589844
    8. ',' → logprob: -10.625572204589844
    9. 'for' → logprob: -10.750572204589844
    10. '               ' → logprob: -10.875572204589844

Token 984: ' found' (ID: 2491)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01453649066388607
    2. 'for' → logprob: -5.389536380767822
    3. ' for' → logprob: -5.639536380767822
    4. ' found' → logprob: -6.389536380767822
    5. 'found' (adapté à ' found') → logprob: -7.014536380767822
    6. '                       ' → logprob: -7.514536380767822
    7. '                    
' → logprob: -7.514536380767822
    8. '   ' → logprob: -7.764536380767822
    9. '               ' → logprob: -8.13953685760498
    10. '           ' → logprob: -8.26453685760498

Token 985: 'C' (ID: 34)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520241439342499
    2. '=' → logprob: -1.5020241737365723
    3. '=False' → logprob: -9.502023696899414
    4. ' ' → logprob: -11.752023696899414
    5. '=True' → logprob: -11.877023696899414
    6. '   ' → logprob: -14.377023696899414
    7. 'for' → logprob: -14.377023696899414
    8. ',' → logprob: -14.502023696899414
    9. ' =
' → logprob: -14.502023696899414
    10. '	' → logprob: -14.752023696899414

Token 986: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759474635124207
    2. '=' → logprob: -0.8259474635124207
    3. ' ' → logprob: -12.825947761535645
    4. '=True' → logprob: -13.450947761535645
    5. '=False' → logprob: -13.575947761535645
    6. ' =
' → logprob: -14.325947761535645
    7. ',' → logprob: -14.700947761535645
    8. ':' → logprob: -15.200947761535645
    9. '=
' → logprob: -15.325947761535645
    10. ')' → logprob: -15.325947761535645

Token 987: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0009125363430939615
    2. ' False' → logprob: -7.000912666320801
    3. '   ' → logprob: -13.8759126663208
    4. 'any' → logprob: -16.750911712646484
    5. '=False' → logprob: -19.125911712646484
    6. '0' → logprob: -19.375911712646484
    7. '(False' → logprob: -19.375911712646484
    8. 'false' → logprob: -19.875911712646484
    9. '       ' → logprob: -19.875911712646484
    10. '                   ' → logprob: -21.000911712646484

Token 988: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018160942941904068
    2. 'for' → logprob: -5.393160820007324
    3. '                    
' → logprob: -6.018160820007324
    4. '
' → logprob: -6.268160820007324
    5. ' for' → logprob: -6.268160820007324
    6. '				' → logprob: -6.768160820007324
    7. '                    ' → logprob: -6.893160820007324
    8. '           ' → logprob: -7.268160820007324
    9. '<|end|>' → logprob: -7.393160820007324
    10. '                       ' → logprob: -7.768160820007324

Token 989: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02046188712120056
    2. ' for' → logprob: -4.8954620361328125
    3. 'for' → logprob: -5.3954620361328125
    4. '				' → logprob: -6.6454620361328125
    5. '                    
' → logprob: -6.6454620361328125
    6. '                    ' → logprob: -6.8954620361328125
    7. '           ' → logprob: -7.0204620361328125
    8. '               ' → logprob: -7.6454620361328125
    9. '<|end|>' → logprob: -7.6454620361328125
    10. '                       ' → logprob: -7.8954620361328125

Token 990: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.25040939450263977
    2. 'for' → logprob: -1.6254093647003174
    3. ' for' → logprob: -3.7504093647003174
    4. '           ' → logprob: -8.500409126281738
    5. '		           ' → logprob: -8.500409126281738
    6. '				' → logprob: -9.000409126281738
    7. '               ' → logprob: -9.000409126281738
    8. '   ' → logprob: -9.125409126281738
    9. '       ' → logprob: -9.500409126281738
    10. '	for' → logprob: -9.875409126281738

Token 991: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6557522416114807
    2. '                   ' → logprob: -1.030752182006836
    3. ' for' → logprob: -2.155752182006836
    4. 'c' → logprob: -6.280752182006836
    5. ' candidates' → logprob: -7.280752182006836
    6. 'candidate' → logprob: -7.280752182006836
    7. 'adj' → logprob: -7.655752182006836
    8. 'ns' → logprob: -7.780752182006836
    9. '   ' → logprob: -7.905752182006836
    10. 'neighbors' → logprob: -7.905752182006836

Token 992: ' C' (ID: 363)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22945049405097961
    2. '                   ' → logprob: -1.9794504642486572
    3. ' for' → logprob: -3.3544504642486572
    4. 'in' → logprob: -4.354450702667236
    5. 'out' → logprob: -5.479450702667236
    6. '                       ' → logprob: -5.979450702667236
    7. '#' → logprob: -6.229450702667236
    8. 'ns' → logprob: -6.479450702667236
    9. 'C' → logprob: -6.604450702667236
    10. 'c' → logprob: -7.229450702667236

Token 993: '->' (ID: 609)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.860774040222168
    2. 'for' → logprob: -1.235774040222168
    3. ' for' → logprob: -1.485774040222168
    4. '=' → logprob: -3.610774040222168
    5. '                   ' → logprob: -4.110774040222168
    6. ' in' → logprob: -4.735774040222168
    7. ':' → logprob: -6.360774040222168
    8. 'in' → logprob: -6.735774040222168
    9. 's' → logprob: -6.985774040222168
    10. '_candidates' → logprob: -7.735774040222168

Token 994: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4916251599788666
    2. 'g' → logprob: -1.741625189781189
    3. 'for' → logprob: -2.1166250705718994
    4. 'group' → logprob: -2.9916250705718994
    5. 'in' → logprob: -4.8666253089904785
    6. 'C' → logprob: -5.1166253089904785
    7. ' for' → logprob: -5.4916253089904785
    8. 'c' → logprob: -5.6166253089904785
    9. 'a' → logprob: -5.9916253089904785
    10. 'i' → logprob: -5.9916253089904785

Token 995: ' and' (ID: 326)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5138851404190063
    2. 'for' → logprob: -1.2638851404190063
    3. ' for' → logprob: -2.138885021209717
    4. '   ' → logprob: -8.888885498046875
    5. '               ' → logprob: -8.888885498046875
    6. '           ' → logprob: -9.013885498046875
    7. '
' → logprob: -9.138885498046875
    8. ',' → logprob: -9.138885498046875
    9. ' in' → logprob: -9.263885498046875
    10. 'in' → logprob: -9.388885498046875

Token 996: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.035483647137880325
    2. ' C' → logprob: -3.4104835987091064
    3. '(C' → logprob: -7.0354838371276855
    4. ' (' → logprob: -8.160483360290527
    5. 'cross' → logprob: -8.410483360290527
    6. ' cross' → logprob: -9.660483360290527
    7. ' ' → logprob: -9.910483360290527
    8. '
' → logprob: -10.035483360290527
    9. 'c' → logprob: -10.160483360290527
    10. '(' → logprob: -10.410483360290527

Token 997: '->' (ID: 609)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.46897611021995544
    2. '->' → logprob: -1.3439761400222778
    3. ' and' → logprob: -2.2189760208129883
    4. ' in' → logprob: -6.968976020812988
    5. 'in' → logprob: -6.968976020812988
    6. '==' → logprob: -7.468976020812988
    7. ',' → logprob: -7.718976020812988
    8. '                   ' → logprob: -8.343976020812988
    9. '               ' → logprob: -8.468976020812988
    10. '```' → logprob: -8.593976020812988

Token 998: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.029746446758508682
    2. 'C' → logprob: -3.7797465324401855
    3. 'B' → logprob: -5.5297465324401855
    4. '{' → logprob: -6.0297465324401855
    5. '```' → logprob: -9.654746055603027
    6. '[' → logprob: -12.404746055603027
    7. '{
' → logprob: -12.529746055603027
    8. 'i' → logprob: -12.654746055603027
    9. '{}' → logprob: -12.779746055603027
    10. 'a' → logprob: -13.029746055603027

Token 999: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.044474225491285324
    2. ' for' → logprob: -3.9194741249084473
    3. 'for' → logprob: -4.044474124908447
    4. '
' → logprob: -5.419474124908447
    5. '<|end|>' → logprob: -7.544474124908447
    6. '           ' → logprob: -8.794474601745605
    7. '   ' → logprob: -9.169474601745605
    8. '               ' → logprob: -9.169474601745605
    9. '				' → logprob: -9.169474601745605
    10. ',' → logprob: -9.169474601745605

Token 1000: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020101740956306458
    2. 'for' → logprob: -4.395101547241211
    3. ' for' → logprob: -5.020101547241211
    4. '```' → logprob: -7.770101547241211
    5. '
' → logprob: -9.020101547241211
    6. '           ' → logprob: -9.520101547241211
    7. '                       ' → logprob: -9.895101547241211
    8. '               ' → logprob: -10.020101547241211
    9. '   ' → logprob: -10.020101547241211
    10. '                    
' → logprob: -10.270101547241211

Token 1001: ' common' (ID: 5355)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4888984262943268
    2. ' for' → logprob: -1.2388983964920044
    3. 'for' → logprob: -2.363898515701294
    4. '				' → logprob: -6.613898277282715
    5. '
' → logprob: -8.238898277282715
    6. '		           ' → logprob: -8.363898277282715
    7. '	for' → logprob: -8.488898277282715
    8. '           ' → logprob: -8.988898277282715
    9. '                    ' → logprob: -9.613898277282715
    10. '	               ' → logprob: -9.613898277282715

Token 1002: '_in' (ID: 2267)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41005298495292664
    2. '=' → logprob: -1.660053014755249
    3. '_in' → logprob: -2.910053014755249
    4. '_neighbors' → logprob: -3.660053014755249
    5. 's' → logprob: -4.28505277633667
    6. '=set' → logprob: -4.78505277633667
    7. '_nodes' → logprob: -4.91005277633667
    8. '_st' → logprob: -5.03505277633667
    9. '_candidates' → logprob: -5.16005277633667
    10. '_c' → logprob: -5.28505277633667

Token 1003: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4544486105442047
    2. ' =' → logprob: -1.4544485807418823
    3. '=set' → logprob: -2.954448699951172
    4. 's' → logprob: -3.579448699951172
    5. 'ter' → logprob: -3.704448699951172
    6. '_neighbors' → logprob: -4.579448699951172
    7. 'ters' → logprob: -4.829448699951172
    8. '=s' → logprob: -6.079448699951172
    9. '   ' → logprob: -6.704448699951172
    10. '_' → logprob: -7.329448699951172

Token 1004: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00021402664424385875
    2. ' in' → logprob: -8.625213623046875
    3. '(in' → logprob: -10.500213623046875
    4. '
' → logprob: -13.000213623046875
    5. '           ' → logprob: -13.250213623046875
    6. '       ' → logprob: -13.875213623046875
    7. '                   ' → logprob: -14.625213623046875
    8. '   ' → logprob: -14.875213623046875
    9. '               ' → logprob: -14.875213623046875
    10. '[in' → logprob: -15.125213623046875

Token 1005: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.04097459092736244
    2. 'in' → logprob: -3.2909746170043945
    3. '[A' → logprob: -6.5409746170043945
    4. 'A' → logprob: -7.0409746170043945
    5. '[' → logprob: -8.915974617004395
    6. '[in' → logprob: -9.165974617004395
    7. '[i' → logprob: -9.415974617004395
    8. '[C' → logprob: -9.540974617004395
    9. 'i' → logprob: -10.165974617004395
    10. '
' → logprob: -10.540974617004395

Token 1006: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.003255788702517748
    2. 'A' → logprob: -5.753255844116211
    3. '[C' → logprob: -9.878255844116211
    4. '                   ' → logprob: -11.003255844116211
    5. '[B' → logprob: -13.253255844116211
    6. '           ' → logprob: -13.753255844116211
    7. '
' → logprob: -13.753255844116211
    8. '                       ' → logprob: -14.003255844116211
    9. '[' → logprob: -14.253255844116211
    10. '[a' → logprob: -14.503255844116211

Token 1007: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6505074501037598
    2. '[B' → logprob: -1.5255074501037598
    3. '].' → logprob: -2.1505074501037598
    4. '&B' → logprob: -3.1505074501037598
    5. '[A' → logprob: -3.4005074501037598
    6. ']&' → logprob: -3.6505074501037598
    7. '&' → logprob: -4.77550745010376
    8. '                   ' → logprob: -5.02550745010376
    9. '.inter' → logprob: -5.27550745010376
    10. '               ' → logprob: -5.40050745010376

Token 1008: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.6529456973075867
    2. '&' → logprob: -0.9029456973075867
    3. '.inter' → logprob: -2.7779457569122314
    4. '&B' → logprob: -5.152945518493652
    5. '                   ' → logprob: -5.652945518493652
    6. '&amp' → logprob: -6.902945518493652
    7. '&A' → logprob: -7.402945518493652
    8. '&nbsp' → logprob: -8.402945518493652
    9. '&I' → logprob: -8.527945518493652
    10. '.' → logprob: -9.652945518493652

Token 1009: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00023071514442563057
    2. ' in' → logprob: -8.37523078918457
    3. '[in' → logprob: -16.87523078918457
    4. '
' → logprob: -17.00023078918457
    5. '                   ' → logprob: -17.12523078918457
    6. '(in' → logprob: -18.87523078918457
    7. '	in' → logprob: -19.37523078918457
    8. ' ' → logprob: -19.50023078918457
    9. '   ' → logprob: -19.75023078918457
    10. '[' → logprob: -19.87523078918457

Token 1010: '_in' (ID: 2267)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0002613358374219388
    2. '[B' → logprob: -9.500261306762695
    3. ' in' → logprob: -9.625261306762695
    4. '_in' → logprob: -10.000261306762695
    5. '[' → logprob: -10.250261306762695
    6. '[in' → logprob: -10.875261306762695
    7. 'B' → logprob: -11.125261306762695
    8. '{' → logprob: -13.625261306762695
    9. '
' → logprob: -13.750261306762695
    10. '   ' → logprob: -14.250261306762695

Token 1011: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.01426622737199068
    2. 'B' → logprob: -4.264266014099121
    3. '[' → logprob: -9.264266014099121
    4. '(B' → logprob: -12.764266014099121
    5. '                   ' → logprob: -13.389266014099121
    6. '{' → logprob: -13.514266014099121
    7. '[
' → logprob: -14.389266014099121
    8. '<B' → logprob: -14.639266014099121
    9. '```' → logprob: -15.139266014099121
    10. '[C' → logprob: -15.389266014099121

Token 1012: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3438468873500824
    2. '<|end|>' → logprob: -1.8438469171524048
    3. ']' → logprob: -2.4688467979431152
    4. '                   ' → logprob: -3.4688467979431152
    5. '<|end|>' → logprob: -4.343846797943115
    6. '
' → logprob: -7.343846797943115
    7. ')
' → logprob: -7.468846797943115
    8. '               ' → logprob: -7.718846797943115
    9. '```' → logprob: -7.968846797943115
    10. '])' → logprob: -8.593847274780273

Token 1013: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011988013284280896
    2. '<|end|>' → logprob: -7.626198768615723
    3. '                       ' → logprob: -8.376198768615723
    4. '               ' → logprob: -9.001198768615723
    5. '           ' → logprob: -9.376198768615723
    6. '<|end|>' → logprob: -10.251198768615723
    7. '       ' → logprob: -10.626198768615723
    8. '                    
' → logprob: -10.751198768615723
    9. '[' → logprob: -10.751198768615723
    10. '```' → logprob: -10.751198768615723

Token 1014: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004820749629288912
    2. 'if' → logprob: -5.504820823669434
    3. 'for' → logprob: -8.254820823669434
    4. ' if' → logprob: -8.379820823669434
    5. '           ' → logprob: -9.504820823669434
    6. 'found' → logprob: -10.004820823669434
    7. '               ' → logprob: -10.254820823669434
    8. '   ' → logprob: -10.879820823669434
    9. ' for' → logprob: -11.004820823669434
    10. ' found' → logprob: -11.379820823669434

Token 1015: ' check' (ID: 2371)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13588736951351166
    2. 'if' → logprob: -2.135887384414673
    3. ' if' → logprob: -5.135887145996094
    4. 'for' → logprob: -5.885887145996094
    5. ' for' → logprob: -9.135887145996094
    6. '               ' → logprob: -10.510887145996094
    7. '           ' → logprob: -10.635887145996094
    8. '   ' → logprob: -11.135887145996094
    9. '                    
' → logprob: -11.135887145996094
    10. '```' → logprob: -11.135887145996094

Token 1016: ' A' (ID: 355)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.3620048761367798
    2. 'out' → logprob: -1.6120048761367798
    3. ' common' → logprob: -2.8620047569274902
    4. '                   ' → logprob: -4.11200475692749
    5. 'len' → logprob: -4.86200475692749
    6. ' out' → logprob: -4.86200475692749
    7. '   ' → logprob: -5.11200475692749
    8. '(common' → logprob: -5.98700475692749
    9. '               ' → logprob: -6.73700475692749
    10. '(A' → logprob: -7.11200475692749

Token 1017: '->' (ID: 609)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.653223991394043
    2. '&C' → logprob: -1.528223991394043
    3. '[C' → logprob: -2.653223991394043
    4. ' &' → logprob: -2.653223991394043
    5. 'and' → logprob: -3.153223991394043
    6. '               ' → logprob: -4.278223991394043
    7. '                   ' → logprob: -4.403223991394043
    8. '&&' → logprob: -4.903223991394043
    9. ' and' → logprob: -5.028223991394043
    10. '[' → logprob: -5.153223991394043

Token 1018: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.02675583027303219
    2. 'common' → logprob: -3.6517558097839355
    3. 'A' → logprob: -8.026756286621094
    4. ' C' → logprob: -10.276756286621094
    5. 'out' → logprob: -10.401756286621094
    6. ' common' → logprob: -10.901756286621094
    7. 'in' → logprob: -11.401756286621094
    8. '```' → logprob: -11.401756286621094
    9. 'c' → logprob: -11.651756286621094
    10. 'B' → logprob: -12.526756286621094

Token 1019: ' and' (ID: 326)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.026415938511490822
    2. ' =' → logprob: -4.901415824890137
    3. ' and' → logprob: -5.026415824890137
    4. '&' → logprob: -5.026415824890137
    5. '                   ' → logprob: -6.276415824890137
    6. 'and' → logprob: -6.276415824890137
    7. ' &=' → logprob: -7.151415824890137
    8. ' &
' → logprob: -8.276415824890137
    9. '&A' → logprob: -8.651415824890137
    10. '&B' → logprob: -9.026415824890137

Token 1020: ' B' (ID: 418)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.3592626452445984
    2. 'in' → logprob: -1.2342627048492432
    3. ' out' → logprob: -4.859262466430664
    4. ' in' → logprob: -5.859262466430664
    5. 'A' → logprob: -9.234262466430664
    6. 'B' → logprob: -10.734262466430664
    7. '```' → logprob: -11.109262466430664
    8. '
' → logprob: -12.109262466430664
    9. '   ' → logprob: -12.734262466430664
    10. ' A' → logprob: -13.484262466430664

Token 1021: '->' (ID: 609)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.8602457046508789
    2. '->' → logprob: -1.235245704650879
    3. '_out' → logprob: -1.860245704650879
    4. '[C' → logprob: -2.235245704650879
    5. '>' → logprob: -4.735245704650879
    6. '>C' → logprob: -4.985245704650879
    7. '_C' → logprob: -6.360245704650879
    8. '[' → logprob: -6.860245704650879
    9. 'in' → logprob: -7.235245704650879
    10. '[A' → logprob: -7.360245704650879

Token 1022: 'C' (ID: 34)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.010054958052933216
    2. 'C' → logprob: -4.635055065155029
    3. 'in' → logprob: -8.260054588317871
    4. ' out' → logprob: -10.760054588317871
    5. '[out' → logprob: -11.760054588317871
    6. '[C' → logprob: -12.260054588317871
    7. '```' → logprob: -12.635054588317871
    8. 'B' → logprob: -13.885054588317871
    9. ' C' → logprob: -14.010054588317871
    10. '
' → logprob: -15.010054588317871

Token 1023: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6730185747146606
    2. ' common' → logprob: -1.5480185747146606
    3. 'common' → logprob: -2.298018455505371
    4. ' &' → logprob: -2.423018455505371
    5. ' =' → logprob: -3.298018455505371
    6. '&' → logprob: -3.673018455505371
    7. ' &
' → logprob: -5.298018455505371
    8. ' &=' → logprob: -5.548018455505371
    9. '=' → logprob: -5.923018455505371
    10. '```' → logprob: -6.173018455505371

Token 1024: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08222415298223495
    2. ' =' → logprob: -2.707224130630493
    3. '=' → logprob: -5.457224369049072
    4. '                    ' → logprob: -6.457224369049072
    5. ' &' → logprob: -6.457224369049072
    6. '&' → logprob: -6.707224369049072
    7. ' &=' → logprob: -7.457224369049072
    8. ':' → logprob: -8.082223892211914
    9. '                    
' → logprob: -8.457223892211914
    10. 'common' → logprob: -8.457223892211914

Token 1025: ' common' (ID: 5355)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'common' (adapté à ' common') → logprob: -0.029830902814865112
    2. ' common' → logprob: -3.5298309326171875
    3. 'out' → logprob: -9.779830932617188
    4. '                   ' → logprob: -10.904830932617188
    5. ' out' → logprob: -12.779830932617188
    6. '(common' → logprob: -13.654830932617188
    7. '	common' → logprob: -14.279830932617188
    8. '   ' → logprob: -15.404830932617188
    9. '```' → logprob: -15.779830932617188
    10. '               ' → logprob: -15.904830932617188

Token 1026: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -0.006267901044338942
    2. 'out' → logprob: -5.13126802444458
    3. '=' → logprob: -8.631267547607422
    4. ' =' → logprob: -9.631267547607422
    5. '_in' → logprob: -10.131267547607422
    6. '```' → logprob: -10.756267547607422
    7. '   ' → logprob: -11.381267547607422
    8. 'Out' → logprob: -12.256267547607422
    9. '
' → logprob: -12.256267547607422
    10. '=_' → logprob: -12.756267547607422

Token 1027: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575996994972229
    2. ' =' → logprob: -0.825996994972229
    3. '=A' → logprob: -11.325997352600098
    4. '=set' → logprob: -11.325997352600098
    5. '```' → logprob: -11.575997352600098
    6. 's' → logprob: -12.200997352600098
    7. '_' → logprob: -12.950997352600098
    8. '_=' → logprob: -13.075997352600098
    9. '=C' → logprob: -13.325997352600098
    10. ')' → logprob: -13.450997352600098

Token 1028: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.023245826363563538
    2. ' out' → logprob: -3.7732458114624023
    3. '(out' → logprob: -15.898245811462402
    4. '   ' → logprob: -16.52324676513672
    5. '	out' → logprob: -16.64824676513672
    6. '       ' → logprob: -17.52324676513672
    7. '[out' → logprob: -17.64824676513672
    8. '           ' → logprob: -18.14824676513672
    9. '_out' → logprob: -18.27324676513672
    10. ' ' → logprob: -19.27324676513672

Token 1029: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -5.5027299822540954e-05
    2. 'out' → logprob: -10.375055313110352
    3. '[A' → logprob: -11.000055313110352
    4. '[out' → logprob: -12.250055313110352
    5. 'Out' → logprob: -14.125055313110352
    6. '_of' → logprob: -14.625055313110352
    7. '_in' → logprob: -15.000055313110352
    8. '[' → logprob: -15.125055313110352
    9. '[C' → logprob: -16.50005531311035
    10. 's' → logprob: -16.87505531311035

Token 1030: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.00023405285901390016
    2. 'A' → logprob: -8.37523365020752
    3. '[
' → logprob: -13.37523365020752
    4. '[' → logprob: -14.12523365020752
    5. '```' → logprob: -14.75023365020752
    6. '[a' → logprob: -16.125234603881836
    7. '(A' → logprob: -16.250234603881836
    8. '\[' → logprob: -16.750234603881836
    9. '=A' → logprob: -16.875234603881836
    10. '	A' → logprob: -17.000234603881836

Token 1031: ']' (ID: 60)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.702499270439148
    2. ' &' → logprob: -0.702499270439148
    3. '&B' → logprob: -4.8274993896484375
    4. ']' → logprob: -7.2024993896484375
    5. ']&' → logprob: -9.577499389648438
    6. '&A' → logprob: -9.577499389648438
    7. '&S' → logprob: -9.827499389648438
    8. '&M' → logprob: -9.952499389648438
    9. '&I' → logprob: -9.952499389648438
    10. '&amp' → logprob: -10.077499389648438

Token 1032: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.5976423621177673
    2. '&' → logprob: -0.8476423621177673
    3. '&B' → logprob: -3.847642421722412
    4. '&amp' → logprob: -9.722641944885254
    5. ' &
' → logprob: -11.347641944885254
    6. '&nbsp' → logprob: -11.347641944885254
    7. '&
' → logprob: -11.722641944885254
    8. '&I' → logprob: -11.847641944885254
    9. '&C' → logprob: -11.972641944885254
    10. '&R' → logprob: -11.972641944885254

Token 1033: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.0009115827269852161
    2. ' out' → logprob: -7.000911712646484
    3. '	out' → logprob: -19.000911712646484
    4. '[out' → logprob: -19.375911712646484
    5. '(out' → logprob: -21.125911712646484
    6. '```' → logprob: -21.375911712646484
    7. '   ' → logprob: -21.750911712646484
    8. '$out' → logprob: -21.750911712646484
    9. '_out' → logprob: -21.750911712646484
    10. 'Out' → logprob: -22.000911712646484

Token 1034: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -0.029780574142932892
    2. 'out' → logprob: -3.529780626296997
    3. '[out' → logprob: -11.154780387878418
    4. 'Out' → logprob: -11.404780387878418
    5. ' out' → logprob: -12.779780387878418
    6. '[B' → logprob: -13.654780387878418
    7. '	out' → logprob: -15.904780387878418
    8. '[' → logprob: -16.404781341552734
    9. '$out' → logprob: -16.404781341552734
    10. '```' → logprob: -16.779781341552734

Token 1035: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.0010381679749116302
    2. 'B' → logprob: -6.876038074493408
    3. '[' → logprob: -13.626038551330566
    4. '(B' → logprob: -13.876038551330566
    5. '<B' → logprob: -14.001038551330566
    6. '```' → logprob: -14.126038551330566
    7. '	B' → logprob: -15.251038551330566
    8. '[b' → logprob: -15.251038551330566
    9. '[
' → logprob: -15.626038551330566
    10. '   ' → logprob: -15.626038551330566

Token 1036: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5775874853134155
    2. ')' → logprob: -0.9525874853134155
    3. '):
' → logprob: -3.452587604522705
    4. '):' → logprob: -4.577587604522705
    5. ':
' → logprob: -5.952587604522705
    6. ')
' → logprob: -5.952587604522705
    7. ']' → logprob: -6.577587604522705
    8. ':' → logprob: -7.077587604522705
    9. '                       ' → logprob: -7.077587604522705
    10. '```' → logprob: -7.452587604522705

Token 1037: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0117139657959342
    2. '```' → logprob: -5.261713981628418
    3. '<|end|>' → logprob: -5.636713981628418
    4. '
' → logprob: -6.886713981628418
    5. '                    
' → logprob: -7.636713981628418
    6. '                       ' → logprob: -8.136713981628418
    7. '<|end|>' → logprob: -8.261713981628418
    8. '				' → logprob: -8.636713981628418
    9. '                    ' → logprob: -9.011713981628418
    10. '               ' → logprob: -9.261713981628418

Token 1038: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0028368495404720306
    2. '
' → logprob: -7.62783670425415
    3. '                       ' → logprob: -7.87783670425415
    4. '				' → logprob: -8.127837181091309
    5. ' if' → logprob: -8.252837181091309
    6. '               ' → logprob: -8.752837181091309
    7. '       ' → logprob: -8.877837181091309
    8. '           ' → logprob: -8.877837181091309
    9. ' found' → logprob: -8.877837181091309
    10. '                    
' → logprob: -9.002837181091309

Token 1039: ' common' (ID: 5355)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.006897944025695324
    2. ' common' → logprob: -5.506897926330566
    3. 'found' → logprob: -6.006897926330566
    4. 'len' → logprob: -8.006897926330566
    5. ' found' → logprob: -11.256897926330566
    6. ' len' → logprob: -12.381897926330566
    7. '(common' → logprob: -13.381897926330566
    8. '                   ' → logprob: -14.381897926330566
    9. '   ' → logprob: -14.631897926330566
    10. '	common' → logprob: -15.131897926330566

Token 1040: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.01566794514656067
    2. '_out' → logprob: -4.640667915344238
    3. 'C' → logprob: -5.515667915344238
    4. '                   ' → logprob: -7.265667915344238
    5. 'In' → logprob: -7.890667915344238
    6. 'in' → logprob: -8.140667915344238
    7. '_pairs' → logprob: -9.640667915344238
    8. 'found' → logprob: -10.015667915344238
    9. '                       ' → logprob: -10.265667915344238
    10. '   ' → logprob: -10.265667915344238

Token 1041: ' or' (ID: 503)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6714397668838501
    2. ':' → logprob: -1.54643976688385
    3. ':
' → logprob: -1.79643976688385
    4. '                   ' → logprob: -2.5464396476745605
    5. ' or' → logprob: -3.7964396476745605
    6. 'or' → logprob: -6.0464396476745605
    7. '                           ' → logprob: -6.5464396476745605
    8. '               ' → logprob: -6.7964396476745605
    9. '.' → logprob: -7.5464396476745605
    10. '):
' → logprob: -7.9214396476745605

Token 1042: ' common' (ID: 5355)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.31338241696357727
    2. ' common' → logprob: -1.3133823871612549
    3. '(common' → logprob: -9.063382148742676
    4. '                   ' → logprob: -13.188382148742676
    5. '	common' → logprob: -13.938382148742676
    6. '                       ' → logprob: -14.313382148742676
    7. '                    ' → logprob: -14.813382148742676
    8. '                     ' → logprob: -15.938382148742676
    9. '                      ' → logprob: -16.063383102416992
    10. '                           ' → logprob: -16.313383102416992

Token 1043: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -0.07909544557332993
    2. 'out' → logprob: -2.5790953636169434
    3. 'Out' → logprob: -9.454095840454102
    4. '_in' → logprob: -9.704095840454102
    5. ' out' → logprob: -11.329095840454102
    6. 'in' → logprob: -11.579095840454102
    7. '$out' → logprob: -11.704095840454102
    8. '	out' → logprob: -12.079095840454102
    9. 'common' → logprob: -12.329095840454102
    10. '
' → logprob: -12.829095840454102

Token 1044: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5621156096458435
    2. ':' → logprob: -1.0621156692504883
    3. ':
' → logprob: -2.5621156692504883
    4. '<|end|>' → logprob: -5.562115669250488
    5. '                           ' → logprob: -7.312115669250488
    6. '                   ' → logprob: -7.312115669250488
    7. ' and' → logprob: -7.687115669250488
    8. '<|end|>' → logprob: -7.812115669250488
    9. '):
' → logprob: -8.937115669250488
    10. '                        ' → logprob: -9.187115669250488

Token 1045: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2340332418680191
    2. ':' → logprob: -1.734033226966858
    3. ':
' → logprob: -3.4840333461761475
    4. '                           ' → logprob: -7.859033107757568
    5. ' and' → logprob: -8.234033584594727
    6. '):
' → logprob: -8.859033584594727
    7. '                               ' → logprob: -9.234033584594727
    8. ',' → logprob: -9.359033584594727
    9. '                        ' → logprob: -9.359033584594727
    10. '                   ' → logprob: -9.609033584594727

Token 1046: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.45112207531929016
    2. ' if' → logprob: -1.9511220455169678
    3. '                           ' → logprob: -2.0761220455169678
    4. 'if' → logprob: -2.8261220455169678
    5. ' found' → logprob: -4.076122283935547
    6. 'found' → logprob: -4.326122283935547
    7. '                               ' → logprob: -5.576122283935547
    8. '
' → logprob: -6.701122283935547
    9. '```' → logprob: -8.951122283935547
    10. '                        ' → logprob: -8.951122283935547

Token 1047: ' condition' (ID: 7060)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.639043390750885
    2. '                       ' → logprob: -0.764043390750885
    3. '#' → logprob: -6.01404333114624
    4. 'found' → logprob: -6.26404333114624
    5. ' if' → logprob: -6.76404333114624
    6. '                           ' → logprob: -8.014043807983398
    7. '   ' → logprob: -8.139043807983398
    8. '                   ' → logprob: -9.389043807983398
    9. 'continue' → logprob: -10.014043807983398
    10. '       ' → logprob: -10.139043807983398

Token 1048: '(' (ID: 7)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.37287020683288574
    2. '                       ' → logprob: -1.8728702068328857
    3. '(' → logprob: -1.9978702068328857
    4. '                           ' → logprob: -5.372870445251465
    5. ')' → logprob: -5.872870445251465
    6. '                   ' → logprob: -5.872870445251465
    7. '=True' → logprob: -6.122870445251465
    8. '1' → logprob: -6.247870445251465
    9. 's' → logprob: -6.622870445251465
    10. '(True' → logprob: -6.872870445251465

Token 1049: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6281310319900513
    2. '1' → logprob: -1.1281310319900513
    3. ' (' → logprob: -2.1281309127807617
    4. '0' → logprob: -5.253130912780762
    5. '2' → logprob: -5.378130912780762
    6. ')' → logprob: -5.878130912780762
    7. 'True' → logprob: -6.003130912780762
    8. '                           ' → logprob: -6.378130912780762
    9. '                       ' → logprob: -6.628130912780762
    10. '                   ' → logprob: -7.128130912780762

Token 1050: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19434164464473724
    2. ' and' → logprob: -2.4443416595458984
    3. '                       ' → logprob: -2.6943416595458984
    4. '):' → logprob: -4.569341659545898
    5. '):
' → logprob: -5.319341659545898
    6. 'and' → logprob: -6.194341659545898
    7. ':' → logprob: -6.444341659545898
    8. ' )' → logprob: -7.819341659545898
    9. ')
' → logprob: -8.069341659545898
    10. '                           ' → logprob: -8.194341659545898

Token 1051: ' no' (ID: 860)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02486533857882023
    2. ' and' → logprob: -4.02486515045166
    3. 'and' → logprob: -5.64986515045166
    4. '                   ' → logprob: -6.77486515045166
    5. ' =' → logprob: -7.14986515045166
    6. ':' → logprob: -7.27486515045166
    7. '                           ' → logprob: -9.27486515045166
    8. ':
' → logprob: -9.39986515045166
    9. '=False' → logprob: -9.77486515045166
    10. ',' → logprob: -9.89986515045166

Token 1052: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.6345053315162659
    2. ' D' → logprob: -1.134505271911621
    3. ' (' → logprob: -3.259505271911621
    4. '(D' → logprob: -3.259505271911621
    5. ' any' → logprob: -4.009505271911621
    6. 'in' → logprob: -4.759505271911621
    7. 'd' → logprob: -4.759505271911621
    8. ' in' → logprob: -5.134505271911621
    9. 'any' → logprob: -5.259505271911621
    10. '(' → logprob: -5.384505271911621

Token 1053: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40208056569099426
    2. '                       ' → logprob: -1.6520805358886719
    3. ' in' → logprob: -3.152080535888672
    4. 'in' → logprob: -3.902080535888672
    5. '                   ' → logprob: -4.152080535888672
    6. '=' → logprob: -4.777080535888672
    7. ' not' → logprob: -5.152080535888672
    8. '_in' → logprob: -5.152080535888672
    9. 's' → logprob: -5.277080535888672
    10. '                           ' → logprob: -5.652080535888672

Token 1054: ' D' (ID: 415)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.3949986696243286
    2. 'D' → logprob: -1.5199986696243286
    3. ' (' → logprob: -3.144998550415039
    4. ' D' → logprob: -3.394998550415039
    5. '(d' → logprob: -4.269998550415039
    6. '((' → logprob: -5.269998550415039
    7. '(' → logprob: -5.269998550415039
    8. 'in' → logprob: -6.519998550415039
    9. 'd' → logprob: -6.894998550415039
    10. '
' → logprob: -7.269998550415039

Token 1055: '-A' (ID: 9406)
  Prédit: '-A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-A' → logprob: -0.12976062297821045
    2. ' -' → logprob: -2.6297607421875
    3. '==' → logprob: -4.0047607421875
    4. ' in' → logprob: -4.8797607421875
    5. '-a' → logprob: -4.8797607421875
    6. '-in' → logprob: -5.1297607421875
    7. 'in' → logprob: -6.2547607421875
    8. '-' → logprob: -6.2547607421875
    9. 'A' → logprob: -6.7547607421875
    10. '```' → logprob: -6.7547607421875

Token 1056: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.528666615486145
    2. ' and' → logprob: -0.903666615486145
    3. ' in' → logprob: -5.4036664962768555
    4. 'in' → logprob: -7.4036664962768555
    5. '```' → logprob: -8.153666496276855
    6. ' not' → logprob: -10.403666496276855
    7. ' or' → logprob: -11.153666496276855
    8. '                       ' → logprob: -11.278666496276855
    9. '                   ' → logprob: -11.528666496276855
    10. ')' → logprob: -11.653666496276855

Token 1057: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1099240854382515
    2. ' B' → logprob: -2.359924077987671
    3. '(B' → logprob: -4.73492431640625
    4. ' (' → logprob: -7.98492431640625
    5. '(' → logprob: -8.73492431640625
    6. '```' → logprob: -9.35992431640625
    7. 'A' → logprob: -9.48492431640625
    8. ' out' → logprob: -10.23492431640625
    9. 'out' → logprob: -10.35992431640625
    10. 'D' → logprob: -10.48492431640625

Token 1058: '-D' (ID: 11989)
  Prédit: '-D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-D' → logprob: -0.1704542636871338
    2. '-' → logprob: -1.9204542636871338
    3. '```' → logprob: -5.420454025268555
    4. '-d' → logprob: -5.920454025268555
    5. '-in' → logprob: -6.670454025268555
    6. '->' → logprob: -8.045454025268555
    7. ' in' → logprob: -8.170454025268555
    8. ' -' → logprob: -8.295454025268555
    9. '<|end|>' → logprob: -8.670454025268555
    10. ')-' → logprob: -8.920454025268555

Token 1059: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3119073510169983
    2. ' or' → logprob: -1.9369072914123535
    3. '<|end|>' → logprob: -2.5619072914123535
    4. ' if' → logprob: -4.4369072914123535
    5. '                   ' → logprob: -5.1869072914123535
    6. ' and' → logprob: -5.1869072914123535
    7. ')' → logprob: -5.4369072914123535
    8. '                           ' → logprob: -5.8119072914123535
    9. '```' → logprob: -5.8119072914123535
    10. ' is' → logprob: -6.1869072914123535

Token 1060: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03954475373029709
    2. '<|end|>' → logprob: -4.289544582366943
    3. '```' → logprob: -4.289544582366943
    4. ' and' → logprob: -5.039544582366943
    5. '                           ' → logprob: -6.789544582366943
    6. ' if' → logprob: -7.164544582366943
    7. '                   ' → logprob: -7.664544582366943
    8. ' or' → logprob: -7.789544582366943
    9. 'and' → logprob: -8.289545059204102
    10. '<|end|>' → logprob: -8.289545059204102

Token 1061: ' cond' (ID: 4664)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4065219759941101
    2. '                       ' → logprob: -1.1565220355987549
    3. ' if' → logprob: -4.031521797180176
    4. 'not' → logprob: -7.531521797180176
    5. 'no' → logprob: -7.906521797180176
    6. '                           ' → logprob: -8.406521797180176
    7. '                   ' → logprob: -8.656521797180176
    8. ' no' → logprob: -9.156521797180176
    9. 'for' → logprob: -9.656521797180176
    10. 'D' → logprob: -10.531521797180176

Token 1062: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029995886608958244
    2. '2' → logprob: -4.654995918273926
    3. 'ition' → logprob: -4.779995918273926
    4. '=False' → logprob: -5.529995918273926
    5. '[' → logprob: -6.029995918273926
    6. 'itions' → logprob: -6.529995918273926
    7. '=True' → logprob: -7.029995918273926
    8. '_' → logprob: -7.279995918273926
    9. 's' → logprob: -7.654995918273926
    10. '(' → logprob: -8.279995918273926

Token 1063: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5343302488327026
    2. '=' → logprob: -0.9093302488327026
    3. '=False' → logprob: -4.534330368041992
    4. '=false' → logprob: -9.159330368041992
    5. '                       ' → logprob: -9.409330368041992
    6. '                   ' → logprob: -10.284330368041992
    7. '=True' → logprob: -10.409330368041992
    8. '                           ' → logprob: -10.784330368041992
    9. '```' → logprob: -10.784330368041992
    10. '2' → logprob: -11.284330368041992

Token 1064: ' True' (ID: 6432)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.07144280523061752
    2. '(not' → logprob: -3.8214428424835205
    3. 'True' → logprob: -3.9464428424835205
    4. 'all' → logprob: -4.321442604064941
    5. 'len' → logprob: -4.571442604064941
    6. ' not' → logprob: -6.946442604064941
    7. '           ' → logprob: -7.071442604064941
    8. '(len' → logprob: -7.196442604064941
    9. '(True' → logprob: -7.696442604064941
    10. '                   ' → logprob: -8.321442604064941

Token 1065: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5156767964363098
    2. '<|end|>' → logprob: -1.015676736831665
    3. '
' → logprob: -3.890676736831665
    4. '                           ' → logprob: -5.515676975250244
    5. ' for' → logprob: -5.515676975250244
    6. '```' → logprob: -6.015676975250244
    7. 'for' → logprob: -6.390676975250244
    8. '                   ' → logprob: -6.640676975250244
    9. ')' → logprob: -6.890676975250244
    10. '<|end|>' → logprob: -6.890676975250244

Token 1066: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.11944226920604706
    2. ' for' → logprob: -2.7444422245025635
    3. '<|end|>' → logprob: -3.6194422245025635
    4. 'for' → logprob: -4.994442462921143
    5. '                           ' → logprob: -5.244442462921143
    6. '                   ' → logprob: -6.119442462921143
    7. ' if' → logprob: -6.244442462921143
    8. '                        ' → logprob: -6.994442462921143
    9. '```' → logprob: -7.369442462921143
    10. ' ' → logprob: -7.619442462921143

Token 1067: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05991104245185852
    2. '                       ' → logprob: -3.434911012649536
    3. ' for' → logprob: -3.684911012649536
    4. '                   ' → logprob: -7.309911251068115
    5. '                           ' → logprob: -9.809910774230957
    6. 'if' → logprob: -10.559910774230957
    7. '               ' → logprob: -10.934910774230957
    8. '           ' → logprob: -11.059910774230957
    9. '
' → logprob: -11.684910774230957
    10. '       ' → logprob: -12.059910774230957

Token 1068: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.001559258671477437
    2. ' D' → logprob: -6.751559257507324
    3. 'd' → logprob: -7.876559257507324
    4. '_D' → logprob: -13.251559257507324
    5. '	D' → logprob: -13.626559257507324
    6. '_d' → logprob: -14.001559257507324
    7. ' d' → logprob: -14.251559257507324
    8. '
' → logprob: -14.376559257507324
    9. 'in' → logprob: -14.501559257507324
    10. '"D' → logprob: -14.626559257507324

Token 1069: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007626149337738752
    2. 'in' → logprob: -4.882626056671143
    3. '	in' → logprob: -11.7576265335083
    4. '_in' → logprob: -12.1326265335083
    5. 'd' → logprob: -14.0076265335083
    6. '							' → logprob: -14.0076265335083
    7. '<|end|>' → logprob: -14.1326265335083
    8. ' ' → logprob: -14.2576265335083
    9. 'In' → logprob: -14.6326265335083
    10. '[in' → logprob: -15.1326265335083

Token 1070: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0023565024603158236
    2. ' in' → logprob: -6.75235652923584
    3. 'common' → logprob: -7.12735652923584
    4. '(in' → logprob: -8.00235652923584
    5. '
' → logprob: -10.25235652923584
    6. '(common' → logprob: -12.37735652923584
    7. ' common' → logprob: -12.87735652923584
    8. 'range' → logprob: -13.25235652923584
    9. 'found' → logprob: -13.87735652923584
    10. '(' → logprob: -14.00235652923584

Token 1071: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0005312294815666974
    2. 'in' → logprob: -7.750531196594238
    3. '[A' → logprob: -10.125531196594238
    4. '[' → logprob: -10.750531196594238
    5. '_out' → logprob: -11.500531196594238
    6. '[in' → logprob: -11.750531196594238
    7. '{' → logprob: -12.000531196594238
    8. 'In' → logprob: -12.500531196594238
    9. '{
' → logprob: -13.125531196594238
    10. 'A' → logprob: -13.375531196594238

Token 1072: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.0018942449241876602
    2. 'A' → logprob: -7.001894474029541
    3. '[B' → logprob: -7.001894474029541
    4. '[' → logprob: -11.001893997192383
    5. '[
' → logprob: -11.126893997192383
    6. 'B' → logprob: -11.626893997192383
    7. '(A' → logprob: -12.626893997192383
    8. '{' → logprob: -12.626893997192383
    9. '[C' → logprob: -12.626893997192383
    10. '[D' → logprob: -12.876893997192383

Token 1073: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.23887945711612701
    2. ':
' → logprob: -2.613879442214966
    3. ']:
' → logprob: -2.613879442214966
    4. '                       ' → logprob: -3.613879442214966
    5. '                           ' → logprob: -3.988879442214966
    6. '):' → logprob: -5.113879680633545
    7. ':' → logprob: -5.488879680633545
    8. ']:' → logprob: -6.113879680633545
    9. '                   ' → logprob: -7.113879680633545
    10. ']' → logprob: -7.113879680633545

Token 1074: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0010929503478109837
    2. '           ' → logprob: -8.001092910766602
    3. '                       ' → logprob: -8.251092910766602
    4. ':' → logprob: -9.001092910766602
    5. ':
' → logprob: -9.626092910766602
    6. '                               ' → logprob: -10.001092910766602
    7. '<|end|>' → logprob: -10.001092910766602
    8. '```' → logprob: -10.251092910766602
    9. '                            ' → logprob: -10.376092910766602
    10. '	                       ' → logprob: -10.376092910766602

Token 1075: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.01546324323862791
    2. '                               ' → logprob: -4.390463352203369
    3. '   ' → logprob: -6.890463352203369
    4. 'if' (adapté à ' if') → logprob: -7.515463352203369
    5. '                       ' → logprob: -7.765463352203369
    6. '           ' → logprob: -7.890463352203369
    7. ' if' → logprob: -8.015462875366211
    8. '               ' → logprob: -9.765462875366211
    9. '	                       ' → logprob: -9.890462875366211
    10. '       ' → logprob: -10.140462875366211

Token 1076: ' (' (ID: 350)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.011848627589643002
    2. 'B' → logprob: -5.136848449707031
    3. '(D' → logprob: -5.386848449707031
    4. '(B' → logprob: -7.261848449707031
    5. ' D' → logprob: -8.011848449707031
    6. '(' → logprob: -8.636848449707031
    7. '   ' → logprob: -10.136848449707031
    8. '((' → logprob: -11.011848449707031
    9. ' (' → logprob: -11.136848449707031
    10. '(A' → logprob: -12.011848449707031

Token 1077: 'B' (ID: 33)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0032283368054777384
    2. '(D' → logprob: -5.878228187561035
    3. '(' → logprob: -8.503228187561035
    4. ' D' → logprob: -9.003228187561035
    5. ' (' → logprob: -10.628228187561035
    6. '   ' → logprob: -11.253228187561035
    7. 'B' → logprob: -11.253228187561035
    8. '                           ' → logprob: -11.753228187561035
    9. '           ' → logprob: -11.878228187561035
    10. '                   ' → logprob: -12.128228187561035

Token 1078: ',D' (ID: 61507)
  Prédit: ',D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',D' → logprob: -0.9469881653785706
    2. '-' → logprob: -1.1969881057739258
    3. ',' → logprob: -1.4469881057739258
    4. '-D' → logprob: -4.071988105773926
    5. ' in' → logprob: -4.196988105773926
    6. ',d' → logprob: -4.946988105773926
    7. 'in' → logprob: -5.071988105773926
    8. ')' → logprob: -5.696988105773926
    9. ',A' → logprob: -5.696988105773926
    10. '-A' → logprob: -5.946988105773926

Token 1079: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022664708085358143
    2. 'in' → logprob: -7.1272664070129395
    3. ' in' → logprob: -7.3772664070129395
    4. ')==' → logprob: -7.6272664070129395
    5. '                           ' → logprob: -8.877266883850098
    6. '),' → logprob: -9.377266883850098
    7. ')
' → logprob: -11.377266883850098
    8. '[' → logprob: -11.377266883850098
    9. ' )' → logprob: -11.377266883850098
    10. '))' → logprob: -11.502266883850098

Token 1080: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11265658587217331
    2. 'in' → logprob: -2.362656593322754
    3. ')' → logprob: -5.362656593322754
    4. '                           ' → logprob: -5.737656593322754
    5. ' not' → logprob: -5.987656593322754
    6. '                               ' → logprob: -6.737656593322754
    7. 'not' → logprob: -8.487656593322754
    8. '                                   ' → logprob: -9.237656593322754
    9. '                            ' → logprob: -9.237656593322754
    10. ' )' → logprob: -9.612656593322754

Token 1081: ' cross' (ID: 8088)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.25396454334259033
    2. 'cross' → logprob: -1.5039645433425903
    3. ' edges' → logprob: -6.253964424133301
    4. ' cross' → logprob: -9.1289644241333
    5. 'edge' → logprob: -14.0039644241333
    6. '
' → logprob: -15.3789644241333
    7. '```' → logprob: -15.3789644241333
    8. '(edges' → logprob: -15.3789644241333
    9. '   ' → logprob: -15.5039644241333
    10. '           ' → logprob: -15.6289644241333

Token 1082: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0010961651569232345
    2. ')' → logprob: -7.376096248626709
    3. '_edges' → logprob: -8.25109577178955
    4. '_SET' → logprob: -9.75109577178955
    5. ')set' → logprob: -10.50109577178955
    6. '```' → logprob: -10.75109577178955
    7. 'edges' → logprob: -11.12609577178955
    8. '_sets' → logprob: -11.37609577178955
    9. 'set' → logprob: -11.50109577178955
    10. '_' → logprob: -11.75109577178955

Token 1083: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.5606585144996643
    2. '                           ' → logprob: -1.5606584548950195
    3. ':' → logprob: -1.9356584548950195
    4. ' and' → logprob: -3.5606584548950195
    5. ':
' → logprob: -3.8106584548950195
    6. '==' → logprob: -4.8106584548950195
    7. ' ==' → logprob: -5.5606584548950195
    8. '<|end|>' → logprob: -5.8106584548950195
    9. '                            ' → logprob: -6.1856584548950195
    10. '                       ' → logprob: -6.6856584548950195

Token 1084: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.17102819681167603
    2. '                           ' → logprob: -2.0460281372070312
    3. ':
' → logprob: -5.046028137207031
    4. ' and' → logprob: -5.171028137207031
    5. ':' → logprob: -5.421028137207031
    6. '```' → logprob: -5.421028137207031
    7. '=False' → logprob: -6.296028137207031
    8. '<|end|>' → logprob: -6.921028137207031
    9. '=True' → logprob: -7.296028137207031
    10. '                       ' → logprob: -7.546028137207031

Token 1085: ' cond' (ID: 4664)
  Prédit: '                                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.3219265043735504
    2. '                               ' → logprob: -1.321926474571228
    3. '                           ' → logprob: -5.196926593780518
    4. '                                       ' → logprob: -6.821926593780518
    5. '
' → logprob: -7.946926593780518
    6. '           ' → logprob: -8.07192611694336
    7. '                                  ' → logprob: -8.82192611694336
    8. '```' → logprob: -8.82192611694336
    9. '                       ' → logprob: -9.07192611694336
    10. '               ' → logprob: -9.19692611694336

Token 1086: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19020605087280273
    2. '=False' → logprob: -2.0652060508728027
    3. 'False' → logprob: -3.8152060508728027
    4. '=' → logprob: -3.8152060508728027
    5. ' =' → logprob: -6.940206050872803
    6. '=True' → logprob: -7.565206050872803
    7. '```' → logprob: -8.190206527709961
    8. ' False' → logprob: -9.190206527709961
    9. '(False' → logprob: -9.440206527709961
    10. '=false' → logprob: -9.440206527709961

Token 1087: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2466224581003189
    2. ' =' → logprob: -1.9966224431991577
    3. '=False' → logprob: -2.4966225624084473
    4. '=True' → logprob: -8.246622085571289
    5. '=false' → logprob: -10.121622085571289
    6. '                               ' → logprob: -10.121622085571289
    7. '==' → logprob: -10.621622085571289
    8. '                           ' → logprob: -11.246622085571289
    9. '=
' → logprob: -11.871622085571289
    10. '                                   ' → logprob: -12.371622085571289

Token 1088: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020377879263833165
    2. ' False' → logprob: -8.500204086303711
    3. '(False' → logprob: -15.875204086303711
    4. '                               ' → logprob: -16.37520408630371
    5. '=False' → logprob: -16.75020408630371
    6. '                                   ' → logprob: -17.50020408630371
    7. '                           ' → logprob: -17.75020408630371
    8. '.False' → logprob: -19.50020408630371
    9. '```' → logprob: -19.62520408630371
    10. 'not' → logprob: -19.87520408630371

Token 1089: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0013719070702791214
    2. '                                   ' → logprob: -6.75137186050415
    3. '                           ' → logprob: -9.501372337341309
    4. '<|end|>' → logprob: -9.501372337341309
    5. '                       ' → logprob: -11.376372337341309
    6. '                                       ' → logprob: -12.001372337341309
    7. '                                ' → logprob: -12.001372337341309
    8. '							' → logprob: -12.001372337341309
    9. '                                
' → logprob: -12.876372337341309
    10. '                   ' → logprob: -13.001372337341309

Token 1090: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.000286364956991747
    2. '                                   ' → logprob: -8.500286102294922
    3. '                           ' → logprob: -10.125286102294922
    4. '<|end|>' → logprob: -11.375286102294922
    5. '                       ' → logprob: -11.500286102294922
    6. '                                       ' → logprob: -12.875286102294922
    7. '
' → logprob: -13.125286102294922
    8. '                                ' → logprob: -13.125286102294922
    9. '                                
' → logprob: -13.125286102294922
    10. '                   ' → logprob: -13.125286102294922

Token 1091: ' break' (ID: 2338)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0010355490958318114
    2. 'break' (adapté à ' break') → logprob: -7.126035690307617
    3. '                                   ' → logprob: -8.501035690307617
    4. '                           ' → logprob: -11.876035690307617
    5. '                                       ' → logprob: -12.001035690307617
    6. '							' → logprob: -12.001035690307617
    7. ' break' → logprob: -12.626035690307617
    8. '                       ' → logprob: -13.626035690307617
    9. '                                ' → logprob: -13.751035690307617
    10. '                              ' → logprob: -14.251035690307617

Token 1092: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0020000117365270853
    2. '                   ' → logprob: -7.126999855041504
    3. '                           ' → logprob: -7.251999855041504
    4. '                               ' → logprob: -8.376999855041504
    5. '
' → logprob: -8.626999855041504
    6. '<|end|>' → logprob: -10.751999855041504
    7. '                        
' → logprob: -11.251999855041504
    8. '           ' → logprob: -11.501999855041504
    9. '               ' → logprob: -11.626999855041504
    10. '       ' → logprob: -12.376999855041504

Token 1093: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005329693201929331
    2. '                           ' → logprob: -6.380329608917236
    3. '                   ' → logprob: -6.630329608917236
    4. '                               ' → logprob: -7.005329608917236
    5. '<|end|>' → logprob: -7.380329608917236
    6. '
' → logprob: -8.380330085754395
    7. '```' → logprob: -8.505330085754395
    8. '                        
' → logprob: -9.505330085754395
    9. '           ' → logprob: -9.630330085754395
    10. '               ' → logprob: -10.255330085754395

Token 1094: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007482514716684818
    2. '
' → logprob: -5.632482528686523
    3. '                               ' → logprob: -6.632482528686523
    4. '                        
' → logprob: -7.132482528686523
    5. '                           ' → logprob: -7.382482528686523
    6. '                   ' → logprob: -7.507482528686523
    7. '           ' → logprob: -8.382482528686523
    8. '               ' → logprob: -9.257482528686523
    9. '       ' → logprob: -9.632482528686523
    10. '+' → logprob: -10.632482528686523

Token 1095: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5763247013092041
    2. 'not' → logprob: -0.8263247013092041
    3. 'cond' → logprob: -8.451324462890625
    4. ' cond' → logprob: -9.201324462890625
    5. '                           ' → logprob: -10.576324462890625
    6. '                       ' → logprob: -11.076324462890625
    7. '                               ' → logprob: -11.326324462890625
    8. '                   ' → logprob: -12.451324462890625
    9. '(not' → logprob: -12.701324462890625
    10. '               ' → logprob: -12.826324462890625

Token 1096: ' cond' (ID: 4664)
  Prédit: 'cond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cond' → logprob: -0.4740805923938751
    2. ' cond' → logprob: -0.9740805625915527
    3. '(cond' → logprob: -12.974081039428711
    4. '
' → logprob: -14.599081039428711
    5. 'conds' → logprob: -15.349081039428711
    6. '   ' → logprob: -15.849081039428711
    7. '                   ' → logprob: -16.34908103942871
    8. '                       ' → logprob: -16.47408103942871
    9. 'condition' → logprob: -16.59908103942871
    10. '                           ' → logprob: -16.84908103942871

Token 1097: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5954712075181305e-05
    2. 'True' → logprob: -10.625036239624023
    3. 'False' → logprob: -12.625036239624023
    4. '=True' → logprob: -13.250036239624023
    5. '[' → logprob: -13.750036239624023
    6. '_' → logprob: -14.000036239624023
    7. '=False' → logprob: -14.875036239624023
    8. '```' → logprob: -14.875036239624023
    9. 'ition' → logprob: -15.000036239624023
    10. '(' → logprob: -15.000036239624023

Token 1098: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.04852922633290291
    2. ':' → logprob: -3.7985291481018066
    3. ':
' → logprob: -3.7985291481018066
    4. '                               ' → logprob: -6.173529148101807
    5. '                       ' → logprob: -8.298529624938965
    6. ',' → logprob: -9.798529624938965
    7. '           ' → logprob: -9.798529624938965
    8. '                   ' → logprob: -10.548529624938965
    9. '                                   ' → logprob: -10.673529624938965
    10. '                            ' → logprob: -11.048529624938965

Token 1099: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.04535873606801033
    2. '                               ' → logprob: -3.170358657836914
    3. '                       ' → logprob: -6.170358657836914
    4. '                                   ' → logprob: -9.295358657836914
    5. '	                       ' → logprob: -9.920358657836914
    6. '                   ' → logprob: -10.670358657836914
    7. '                            ' → logprob: -11.170358657836914
    8. '						' → logprob: -11.170358657836914
    9. '           ' → logprob: -11.420358657836914
    10. ' continue' → logprob: -11.545358657836914

Token 1100: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5239895582199097
    2. '                           ' → logprob: -1.0239895582199097
    3. ' continue' → logprob: -3.523989677429199
    4. '                               ' → logprob: -4.023989677429199
    5. '                       ' → logprob: -7.523989677429199
    6. '   ' → logprob: -7.898989677429199
    7. '	continue' → logprob: -8.6489896774292
    8. '```' → logprob: -9.7739896774292
    9. '                                   ' → logprob: -10.0239896774292
    10. '                   ' → logprob: -10.1489896774292

Token 1101: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0004740447038784623
    2. '                   ' → logprob: -8.250473976135254
    3. '                           ' → logprob: -9.250473976135254
    4. '
' → logprob: -9.625473976135254
    5. '                        
' → logprob: -10.750473976135254
    6. '           ' → logprob: -11.750473976135254
    7. '                               ' → logprob: -12.125473976135254
    8. '               ' → logprob: -12.250473976135254
    9. '					' → logprob: -12.625473976135254
    10. '       ' → logprob: -12.875473976135254

Token 1102: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00036655968870036304
    2. '                   ' → logprob: -8.6253662109375
    3. '                           ' → logprob: -9.3753662109375
    4. '
' → logprob: -9.6253662109375
    5. '                        
' → logprob: -11.0003662109375
    6. '                               ' → logprob: -12.2503662109375
    7. '           ' → logprob: -12.2503662109375
    8. '```' → logprob: -12.8753662109375
    9. '               ' → logprob: -13.0003662109375
    10. '					' → logprob: -13.6253662109375

Token 1103: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0005028736195527017
    2. '                   ' → logprob: -7.750503063201904
    3. 'for' → logprob: -9.875502586364746
    4. '```' → logprob: -12.125502586364746
    5. '
' → logprob: -12.250502586364746
    6. '                           ' → logprob: -12.625502586364746
    7. '               ' → logprob: -12.750502586364746
    8. '           ' → logprob: -13.125502586364746
    9. '                        
' → logprob: -13.500502586364746
    10. '       ' → logprob: -14.750502586364746

Token 1104: ' condition' (ID: 7060)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12735840678215027
    2. '                       ' → logprob: -2.1273584365844727
    3. '
' → logprob: -8.627358436584473
    4. '                   ' → logprob: -9.127358436584473
    5. '                           ' → logprob: -9.377358436584473
    6. ' for' → logprob: -11.127358436584473
    7. '                        
' → logprob: -11.377358436584473
    8. '               ' → logprob: -11.627358436584473
    9. '       ' → logprob: -12.127358436584473
    10. '           ' → logprob: -12.252358436584473

Token 1105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28164201974868774
    2. ' (' → logprob: -1.406641960144043
    3. '                       ' → logprob: -8.656641960144043
    4. '3' → logprob: -8.781641960144043
    5. '                           ' → logprob: -9.281641960144043
    6. '2' → logprob: -10.156641960144043
    7. '                   ' → logprob: -11.406641960144043
    8. '```' → logprob: -11.656641960144043
    9. '                               ' → logprob: -13.031641960144043
    10. ' ' → logprob: -13.031641960144043

Token 1106: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.875
    3. '2' → logprob: -17.0
    4. '
' → logprob: -17.75
    5. '   ' → logprob: -18.5
    6. ' ' → logprob: -18.625
    7. '       ' → logprob: -18.625
    8. '           ' → logprob: -18.625
    9. '                               ' → logprob: -19.125
    10. '               ' → logprob: -19.25

Token 1107: ')' (ID: 8)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7467219829559326
    2. ' for' → logprob: -1.1217219829559326
    3. '                           ' → logprob: -1.8717219829559326
    4. ')' → logprob: -3.8717219829559326
    5. 'for' → logprob: -4.246722221374512
    6. ':' → logprob: -5.371722221374512
    7. ' =' → logprob: -6.496722221374512
    8. '                        ' → logprob: -6.996722221374512
    9. '                               ' → logprob: -6.996722221374512
    10. '=False' → logprob: -7.746722221374512

Token 1108: ' no' (ID: 860)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.021725529804825783
    2. ' for' → logprob: -4.396725654602051
    3. 'for' → logprob: -4.896725654602051
    4. '                           ' → logprob: -6.771725654602051
    5. '                   ' → logprob: -8.02172565460205
    6. '```' → logprob: -9.39672565460205
    7. '               ' → logprob: -10.02172565460205
    8. '           ' → logprob: -10.27172565460205
    9. '                        ' → logprob: -10.77172565460205
    10. '       ' → logprob: -11.14672565460205

Token 1109: ' E' (ID: 457)
  Prédit: ' E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.19599074125289917
    2. 'E' → logprob: -1.820990800857544
    3. 'for' → logprob: -4.695990562438965
    4. ' for' → logprob: -5.320990562438965
    5. '                       ' → logprob: -7.320990562438965
    6. '                   ' → logprob: -7.695990562438965
    7. '               ' → logprob: -8.320990562438965
    8. ' D' → logprob: -8.695990562438965
    9. '                           ' → logprob: -8.820990562438965
    10. '   ' → logprob: -9.570990562438965

Token 1110: ' with' (ID: 483)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24235741794109344
    2. ' for' → logprob: -2.2423574924468994
    3. 'in' → logprob: -3.4923574924468994
    4. 'for' → logprob: -3.4923574924468994
    5. '                       ' → logprob: -4.11735725402832
    6. '                           ' → logprob: -4.61735725402832
    7. '```' → logprob: -4.86735725402832
    8. '                   ' → logprob: -5.49235725402832
    9. '_in' → logprob: -5.99235725402832
    10. '               ' → logprob: -6.36735725402832

Token 1111: ' A' (ID: 355)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.36165812611579895
    2. 'out' → logprob: -1.4866580963134766
    3. 'E' → logprob: -3.8616580963134766
    4. '(A' → logprob: -3.9866580963134766
    5. '(out' → logprob: -4.486658096313477
    6. ' (' → logprob: -4.611658096313477
    7. ' out' → logprob: -4.861658096313477
    8. 'in' → logprob: -5.486658096313477
    9. ' E' → logprob: -6.486658096313477
    10. '(' → logprob: -6.986658096313477

Token 1112: '-E' (ID: 15684)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.0653523206710815
    2. '-E' → logprob: -1.5653523206710815
    3. 'out' → logprob: -2.065352439880371
    4. '-out' → logprob: -2.190352439880371
    5. '_out' → logprob: -3.065352439880371
    6. ' in' → logprob: -3.065352439880371
    7. '```' → logprob: -3.190352439880371
    8. '
' → logprob: -3.815352439880371
    9. 'E' → logprob: -4.815352439880371
    10. 'for' → logprob: -5.190352439880371

Token 1113: ' and' (ID: 326)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5291758179664612
    2. 'and' → logprob: -1.2791757583618164
    3. ' and' → logprob: -2.1541757583618164
    4. '                       ' → logprob: -5.154175758361816
    5. '```' → logprob: -5.404175758361816
    6. 'for' → logprob: -6.279175758361816
    7. '           ' → logprob: -6.904175758361816
    8. '                               ' → logprob: -6.904175758361816
    9. ' for' → logprob: -7.654175758361816
    10. ':
' → logprob: -7.779175758361816

Token 1114: ' E' (ID: 457)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.00029232146334834397
    2. '(' → logprob: -9.000292778015137
    3. ' (' → logprob: -9.000292778015137
    4. 'E' → logprob: -10.625292778015137
    5. '(B' → logprob: -10.875292778015137
    6. '(D' → logprob: -14.500292778015137
    7. '```' → logprob: -14.500292778015137
    8. '(
' → logprob: -14.875292778015137
    9. '``' → logprob: -15.375292778015137
    10. '`' → logprob: -15.625292778015137

Token 1115: '-B' (ID: 8287)
  Prédit: '-B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-B' → logprob: -0.00484447693452239
    2. '-A' → logprob: -5.879844665527344
    3. ' in' → logprob: -7.879844665527344
    4. '[B' → logprob: -8.004844665527344
    5. '```' → logprob: -8.129844665527344
    6. '[' → logprob: -8.379844665527344
    7. 'B' → logprob: -8.629844665527344
    8. '-b' → logprob: -8.629844665527344
    9. '[A' → logprob: -9.254844665527344
    10. 'in' → logprob: -9.504844665527344

Token 1116: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03604529798030853
    2. '                           ' → logprob: -3.6610453128814697
    3. '                               ' → logprob: -5.036045074462891
    4. '                   ' → logprob: -6.661045074462891
    5. '```' → logprob: -6.661045074462891
    6. '<|end|>' → logprob: -9.16104507446289
    7. '                        ' → logprob: -9.41104507446289
    8. ' for' → logprob: -9.78604507446289
    9. '           ' → logprob: -9.91104507446289
    10. '               ' → logprob: -9.91104507446289

Token 1117: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0206446573138237
    2. '                           ' → logprob: -4.270644664764404
    3. '                               ' → logprob: -5.395644664764404
    4. '```' → logprob: -7.395644664764404
    5. '<|end|>' → logprob: -7.520644664764404
    6. '                   ' → logprob: -7.895644664764404
    7. '                        
' → logprob: -9.270644187927246
    8. '
' → logprob: -9.395644187927246
    9. '                        ' → logprob: -9.895644187927246
    10. '               ' → logprob: -10.270644187927246

Token 1118: ' cond' (ID: 4664)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01668769121170044
    2. '                           ' → logprob: -5.141687870025635
    3. ' if' → logprob: -5.641687870025635
    4. '                   ' → logprob: -5.641687870025635
    5. 'if' → logprob: -6.391687870025635
    6. '           ' → logprob: -7.266687870025635
    7. '               ' → logprob: -7.641687870025635
    8. ' for' → logprob: -8.641687393188477
    9. ' continue' → logprob: -9.141687393188477
    10. 'for' → logprob: -9.391687393188477

Token 1119: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01631939224898815
    2. '_out' → logprob: -4.141319274902344
    3. 'E' → logprob: -9.141319274902344
    4. ' =' → logprob: -9.766319274902344
    5. '       ' → logprob: -10.766319274902344
    6. '3' → logprob: -11.266319274902344
    7. 'out' → logprob: -11.391319274902344
    8. '               ' → logprob: -11.391319274902344
    9. '=' → logprob: -11.391319274902344
    10. '           ' → logprob: -11.641319274902344

Token 1120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08172828704118729
    2. '=' → logprob: -2.581728219985962
    3. '=False' → logprob: -5.956728458404541
    4. '=True' → logprob: -8.331727981567383
    5. '                           ' → logprob: -13.956727981567383
    6. '                       ' → logprob: -14.081727981567383
    7. '=false' → logprob: -14.206727981567383
    8. '```' → logprob: -14.331727981567383
    9. '                        ' → logprob: -14.581727981567383
    10. '           ' → logprob: -15.331727981567383

Token 1121: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004078997299075127
    2. ' True' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.87907886505127
    4. 'False' → logprob: -16.129079818725586
    5. '(True' → logprob: -16.254079818725586
    6. 'all' → logprob: -16.254079818725586
    7. '       ' → logprob: -16.504079818725586
    8. '           ' → logprob: -17.254079818725586
    9. '=True' → logprob: -18.754079818725586
    10. '                           ' → logprob: -19.004079818725586

Token 1122: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0010818752925843
    2. '                           ' → logprob: -7.626081943511963
    3. '           ' → logprob: -8.626081466674805
    4. '                   ' → logprob: -8.751081466674805
    5. ' for' → logprob: -9.376081466674805
    6. 'for' → logprob: -9.751081466674805
    7. '               ' → logprob: -10.626081466674805
    8. '					' → logprob: -11.001081466674805
    9. '<|end|>' → logprob: -11.126081466674805
    10. '                               ' → logprob: -11.501081466674805

Token 1123: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01356122549623251
    2. '                           ' → logprob: -5.013561248779297
    3. '           ' → logprob: -6.138561248779297
    4. '                   ' → logprob: -6.638561248779297
    5. '```' → logprob: -6.888561248779297
    6. 'for' → logprob: -7.138561248779297
    7. '               ' → logprob: -7.888561248779297
    8. '                               ' → logprob: -7.888561248779297
    9. ' for' → logprob: -8.263561248779297
    10. '<|end|>' → logprob: -8.763561248779297

Token 1124: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0015837816754356027
    2. '                       ' → logprob: -6.876583576202393
    3. '                   ' → logprob: -8.12658405303955
    4. ' for' → logprob: -8.50158405303955
    5. '           ' → logprob: -10.37658405303955
    6. '                           ' → logprob: -11.25158405303955
    7. '               ' → logprob: -12.25158405303955
    8. '       ' → logprob: -13.37658405303955
    9. '   ' → logprob: -14.62658405303955
    10. 'out' → logprob: -15.62658405303955

Token 1125: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.005331828258931637
    2. ' E' → logprob: -5.255331993103027
    3. 'out' → logprob: -9.380331993103027
    4. ' out' → logprob: -11.880331993103027
    5. 'B' → logprob: -13.380331993103027
    6. 'e' → logprob: -13.505331993103027
    7. '   ' → logprob: -14.255331993103027
    8. 's' → logprob: -14.505331993103027
    9. '	E' → logprob: -14.755331993103027
    10. '`' → logprob: -14.880331993103027

Token 1126: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004625579807907343
    2. 'in' → logprob: -5.3796257972717285
    3. '	in' → logprob: -12.75462532043457
    4. '_in' → logprob: -14.12962532043457
    5. ' ' → logprob: -14.87962532043457
    6. 'In' → logprob: -15.12962532043457
    7. '```' → logprob: -15.87962532043457
    8. '                           ' → logprob: -15.87962532043457
    9. '                       ' → logprob: -16.12962532043457
    10. '                               ' → logprob: -16.50462532043457

Token 1127: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.001706367009319365
    2. ' out' → logprob: -6.376706600189209
    3. '   ' → logprob: -12.75170612335205
    4. 'in' → logprob: -14.00170612335205
    5. '[out' → logprob: -16.126707077026367
    6. '       ' → logprob: -16.251707077026367
    7. '	out' → logprob: -16.876707077026367
    8. ' ' → logprob: -17.001707077026367
    9. 'range' → logprob: -17.126707077026367
    10. '_out' → logprob: -17.251707077026367

Token 1128: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -1.6240566083070007e-06
    2. 'out' → logprob: -14.375001907348633
    3. '_in' → logprob: -15.000001907348633
    4. '_off' → logprob: -15.125001907348633
    5. '[out' → logprob: -15.125001907348633
    6. 'Out' → logprob: -16.000001907348633
    7. '_of' → logprob: -17.000001907348633
    8. '
' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.125001907348633
    10. '```' → logprob: -18.250001907348633

Token 1129: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -9.090760431718081e-05
    2. 'A' → logprob: -10.375090599060059
    3. '[
' → logprob: -10.875090599060059
    4. '[E' → logprob: -11.000090599060059
    5. '[B' → logprob: -12.125090599060059
    6. '[' → logprob: -12.125090599060059
    7. '```' → logprob: -12.125090599060059
    8. '   ' → logprob: -12.875090599060059
    9. '(A' → logprob: -13.750090599060059
    10. ' [' → logprob: -14.750090599060059

Token 1130: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.42590227723121643
    2. ']:
' → logprob: -1.300902247428894
    3. '                           ' → logprob: -3.4259023666381836
    4. ':' → logprob: -3.9259023666381836
    5. '                       ' → logprob: -4.925902366638184
    6. '```' → logprob: -5.175902366638184
    7. '):
' → logprob: -5.425902366638184
    8. '           ' → logprob: -6.425902366638184
    9. ']:' → logprob: -6.800902366638184
    10. '                   ' → logprob: -7.675902366638184

Token 1131: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.004894177429378033
    2. '           ' → logprob: -6.004894256591797
    3. '                               ' → logprob: -6.879894256591797
    4. ':' → logprob: -7.379894256591797
    5. ':
' → logprob: -7.754894256591797
    6. '```' → logprob: -9.129894256591797
    7. '                       ' → logprob: -9.379894256591797
    8. '                            ' → logprob: -10.254894256591797
    9. '               ' → logprob: -11.004894256591797
    10. '<|end|>' → logprob: -11.254894256591797

Token 1132: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1963116079568863
    2. ' if' → logprob: -1.946311593055725
    3. '                           ' → logprob: -3.4463117122650146
    4. '                               ' → logprob: -5.6963114738464355
    5. '           ' → logprob: -8.946311950683594
    6. '   ' → logprob: -10.071311950683594
    7. '                       ' → logprob: -10.696311950683594
    8. '               ' → logprob: -11.696311950683594
    9. '       ' → logprob: -12.196311950683594
    10. '```' → logprob: -12.196311950683594

Token 1133: ' (' (ID: 350)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.5760633945465088
    2. ' (' → logprob: -0.8260633945465088
    3. '(' → logprob: -9.20106315612793
    4. '                           ' → logprob: -11.82606315612793
    5. '           ' → logprob: -12.20106315612793
    6. '                               ' → logprob: -13.07606315612793
    7. ' E' → logprob: -13.07606315612793
    8. 'E' → logprob: -13.70106315612793
    9. ' ' → logprob: -14.07606315612793
    10. '   ' → logprob: -14.70106315612793

Token 1134: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -3.5358694731257856e-05
    2. '(E' → logprob: -10.375035285949707
    3. ' E' → logprob: -12.625035285949707
    4. '(' → logprob: -14.125035285949707
    5. '	E' → logprob: -17.500036239624023
    6. ' (' → logprob: -17.625036239624023
    7. '   ' → logprob: -17.750036239624023
    8. '<E' → logprob: -17.875036239624023
    9. ',E' → logprob: -18.125036239624023
    10. 'B' → logprob: -18.250036239624023

Token 1135: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.0006663294625468552
    2. ',E' → logprob: -7.87566614151001
    3. ',' → logprob: -8.250666618347168
    4. ',b' → logprob: -11.375666618347168
    5. ',out' → logprob: -11.875666618347168
    6. 'in' → logprob: -13.125666618347168
    7. ',in' → logprob: -13.750666618347168
    8. 'out' → logprob: -14.250666618347168
    9. ' ,' → logprob: -14.500666618347168
    10. 'B' → logprob: -14.500666618347168

Token 1136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. 'in' → logprob: -12.375008583068848
    3. ' )' → logprob: -13.250008583068848
    4. ' in' → logprob: -14.000008583068848
    5. ')
' → logprob: -14.625008583068848
    6. '           ' → logprob: -15.250008583068848
    7. '[' → logprob: -15.875008583068848
    8. '`)' → logprob: -15.875008583068848
    9. '```' → logprob: -16.00000762939453
    10. '                           ' → logprob: -16.12500762939453

Token 1137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28436991572380066
    2. ')' → logprob: -1.784369945526123
    3. 'in' → logprob: -2.534369945526123
    4. ' not' → logprob: -9.284369468688965
    5. ']' → logprob: -9.659369468688965
    6. '                           ' → logprob: -10.409369468688965
    7. ' )' → logprob: -10.409369468688965
    8. '<|end|>' → logprob: -11.159369468688965
    9. '                               ' → logprob: -11.284369468688965
    10. '[' → logprob: -11.909369468688965

Token 1138: ' cross' (ID: 8088)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.21271640062332153
    2. 'cross' → logprob: -1.7127163410186768
    3. ' cross' → logprob: -4.962716579437256
    4. ' out' → logprob: -5.462716579437256
    5. '[out' → logprob: -13.962716102600098
    6. '	out' → logprob: -14.337716102600098
    7. '_out' → logprob: -14.837716102600098
    8. '```' → logprob: -14.837716102600098
    9. '(out' → logprob: -14.962716102600098
    10. '*out' → logprob: -15.212716102600098

Token 1139: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.8143152594566345
    2. '_out' → logprob: -1.0643153190612793
    3. 'out' → logprob: -1.5643153190612793
    4. 'cross' → logprob: -5.939315319061279
    5. 'set' → logprob: -9.064314842224121
    6. '_cross' → logprob: -9.439314842224121
    7. '(out' → logprob: -11.564314842224121
    8. '
' → logprob: -11.689314842224121
    9. '[out' → logprob: -12.689314842224121
    10. ' out' → logprob: -12.689314842224121

Token 1140: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.021716078743338585
    2. ':' → logprob: -4.021716117858887
    3. ':
' → logprob: -6.021716117858887
    4. '                           ' → logprob: -7.646716117858887
    5. '):
' → logprob: -8.146716117858887
    6. '<|end|>' → logprob: -9.146716117858887
    7. '```' → logprob: -9.396716117858887
    8. '                              ' → logprob: -9.771716117858887
    9. '):' → logprob: -10.646716117858887
    10. '                       ' → logprob: -10.771716117858887

Token 1141: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.002381353871896863
    2. '                           ' → logprob: -6.877381324768066
    3. '```' → logprob: -8.002381324768066
    4. ':' → logprob: -8.252381324768066
    5. '<|end|>' → logprob: -8.627381324768066
    6. '                                   ' → logprob: -8.877381324768066
    7. ':
' → logprob: -9.002381324768066
    8. '                       ' → logprob: -10.002381324768066
    9. '                              ' → logprob: -10.127381324768066
    10. '               ' → logprob: -10.377381324768066

Token 1142: ' cond' (ID: 4664)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.1170196458697319
    2. '                           ' → logprob: -2.3670196533203125
    3. '                                   ' → logprob: -4.9920196533203125
    4. ' continue' → logprob: -5.3670196533203125
    5. 'continue' → logprob: -6.4920196533203125
    6. '```' → logprob: -6.9920196533203125
    7. '                       ' → logprob: -7.6170196533203125
    8. '               ' → logprob: -8.117019653320312
    9. '                            ' → logprob: -8.117019653320312
    10. 'False' → logprob: -8.242019653320312

Token 1143: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00206818338483572
    2. '2' → logprob: -7.627068042755127
    3. 'False' → logprob: -7.877068042755127
    4. '=False' → logprob: -8.002068519592285
    5. 'inue' → logprob: -8.127068519592285
    6. '           ' → logprob: -8.502068519592285
    7. '       ' → logprob: -9.502068519592285
    8. '                               ' → logprob: -9.877068519592285
    9. '=' → logprob: -10.252068519592285
    10. '   ' → logprob: -10.627068519592285

Token 1144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16052865982055664
    2. ' =' → logprob: -1.9105286598205566
    3. '=False' → logprob: -8.285528182983398
    4. '                           ' → logprob: -10.910528182983398
    5. '                               ' → logprob: -11.285528182983398
    6. '=True' → logprob: -11.410528182983398
    7. '                                   ' → logprob: -12.160528182983398
    8. '           ' → logprob: -13.910528182983398
    9. '                            ' → logprob: -14.035528182983398
    10. '=
' → logprob: -14.535528182983398

Token 1145: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.16022585332393646
    2. ' False' → logprob: -1.9102258682250977
    3. '(False' → logprob: -13.535225868225098
    4. '=False' → logprob: -15.160225868225098
    5. '                               ' → logprob: -16.41022491455078
    6. '.False' → logprob: -17.28522491455078
    7. '_false' → logprob: -17.91022491455078
    8. '                           ' → logprob: -18.03522491455078
    9. '                                   ' → logprob: -18.16022491455078
    10. '```' → logprob: -19.28522491455078

Token 1146: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.036877717822790146
    2. '                                   ' → logprob: -3.4118776321411133
    3. ':
' → logprob: -6.286877632141113
    4. ':' → logprob: -7.786877632141113
    5. '                           ' → logprob: -8.036877632141113
    6. '           ' → logprob: -8.411877632141113
    7. '```' → logprob: -9.411877632141113
    8. ' continue' → logprob: -9.661877632141113
    9. 'continue' → logprob: -9.786877632141113
    10. '                   ' → logprob: -10.036877632141113

Token 1147: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0022225799039006233
    2. '                                   ' → logprob: -6.877222537994385
    3. '                           ' → logprob: -7.127222537994385
    4. '```' → logprob: -9.127223014831543
    5. '<|end|>' → logprob: -9.752223014831543
    6. '           ' → logprob: -10.002223014831543
    7. '                       ' → logprob: -10.377223014831543
    8. '                                       ' → logprob: -11.002223014831543
    9. '                   ' → logprob: -11.002223014831543
    10. '                              ' → logprob: -11.127223014831543

Token 1148: ' break' (ID: 2338)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6097114682197571
    2. '                               ' → logprob: -0.8597114682197571
    3. ' continue' → logprob: -3.4847114086151123
    4. '                           ' → logprob: -6.109711647033691
    5. '                                   ' → logprob: -8.984711647033691
    6. '                       ' → logprob: -9.609711647033691
    7. '           ' → logprob: -10.734711647033691
    8. '   ' → logprob: -10.984711647033691
    9. 'if' → logprob: -11.109711647033691
    10. '                   ' → logprob: -11.109711647033691

Token 1149: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3590872585773468
    2. '                           ' → logprob: -1.3590872287750244
    3. '                               ' → logprob: -3.6090872287750244
    4. '                   ' → logprob: -4.1090874671936035
    5. '           ' → logprob: -7.9840874671936035
    6. '               ' → logprob: -8.109086990356445
    7. '<|end|>' → logprob: -8.359086990356445
    8. '```' → logprob: -9.109086990356445
    9. '       ' → logprob: -9.234086990356445
    10. '                                   ' → logprob: -10.359086990356445

Token 1150: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4532298445701599
    2. '                           ' → logprob: -1.4532299041748047
    3. '                               ' → logprob: -2.0782299041748047
    4. '                   ' → logprob: -5.453229904174805
    5. '           ' → logprob: -8.203229904174805
    6. '               ' → logprob: -8.203229904174805
    7. '```' → logprob: -8.328229904174805
    8. '       ' → logprob: -8.703229904174805
    9. '<|end|>' → logprob: -9.328229904174805
    10. '                                   ' → logprob: -10.328229904174805

Token 1151: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.08457999676465988
    2. '                   ' → logprob: -2.8345799446105957
    3. 'if' (adapté à ' if') → logprob: -4.834579944610596
    4. '                           ' → logprob: -4.834579944610596
    5. '           ' → logprob: -5.709579944610596
    6. '               ' → logprob: -6.584579944610596
    7. ' if' → logprob: -7.334579944610596
    8. '       ' → logprob: -7.459579944610596
    9. '                               ' → logprob: -8.709580421447754
    10. 'continue' → logprob: -9.084580421447754

Token 1152: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03804333135485649
    2. 'not' → logprob: -3.288043260574341
    3. '   ' → logprob: -13.663043022155762
    4. '           ' → logprob: -15.413043022155762
    5. '(not' → logprob: -15.538043022155762
    6. '       ' → logprob: -16.413043975830078
    7. '	not' → logprob: -16.413043975830078
    8. '```' → logprob: -16.538043975830078
    9. '    ' → logprob: -17.663043975830078
    10. '               ' → logprob: -17.913043975830078

Token 1153: ' cond' (ID: 4664)
  Prédit: ' cond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cond' → logprob: -0.39408639073371887
    2. 'cond' → logprob: -1.1440863609313965
    3. 'not' → logprob: -5.5190863609313965
    4. ' not' → logprob: -5.7690863609313965
    5. 'continue' → logprob: -11.019086837768555
    6. '(cond' → logprob: -11.019086837768555
    7. ' continue' → logprob: -11.769086837768555
    8. '```' → logprob: -12.144086837768555
    9. '   ' → logprob: -13.019086837768555
    10. '
' → logprob: -13.519086837768555

Token 1154: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.001041382784023881
    2. 'cond' → logprob: -6.876041412353516
    3. '   ' → logprob: -12.751041412353516
    4. ' cond' → logprob: -13.501041412353516
    5. '  ' → logprob: -14.126041412353516
    6. ' ' → logprob: -14.376041412353516
    7. '```' → logprob: -14.501041412353516
    8. '_cond' → logprob: -14.626041412353516
    9. '
' → logprob: -14.876041412353516
    10. 'not' → logprob: -14.876041412353516

Token 1155: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.027360454201698303
    2. ':
' → logprob: -3.777360439300537
    3. ':' → logprob: -6.277360439300537
    4. '                               ' → logprob: -6.777360439300537
    5. '                       ' → logprob: -7.027360439300537
    6. '                   ' → logprob: -9.527360916137695
    7. 'continue' → logprob: -10.277360916137695
    8. ' continue' → logprob: -10.777360916137695
    9. '               ' → logprob: -10.902360916137695
    10. '           ' → logprob: -11.152360916137695

Token 1156: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.007153291255235672
    2. '                               ' → logprob: -5.132153511047363
    3. '                       ' → logprob: -7.007153511047363
    4. 'continue' → logprob: -9.257153511047363
    5. '                   ' → logprob: -9.382153511047363
    6. '```' → logprob: -10.382153511047363
    7. '                                   ' → logprob: -10.632153511047363
    8. '           ' → logprob: -10.757153511047363
    9. ' continue' → logprob: -10.757153511047363
    10. '               ' → logprob: -11.132153511047363

Token 1157: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2671092450618744
    2. ' continue' → logprob: -1.5171092748641968
    3. '                           ' → logprob: -4.267109394073486
    4. '   ' → logprob: -7.517109394073486
    5. '                               ' → logprob: -8.017108917236328
    6. '	continue' → logprob: -9.392108917236328
    7. '                       ' → logprob: -10.267108917236328
    8. ' ' → logprob: -10.642108917236328
    9. '                   ' → logprob: -12.142108917236328
    10. '```' → logprob: -12.392108917236328

Token 1158: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3791375458240509
    2. '
' → logprob: -1.6291375160217285
    3. '                   ' → logprob: -2.2541375160217285
    4. '                           ' → logprob: -5.1291375160217285
    5. '                        
' → logprob: -5.2541375160217285
    6. '                            
' → logprob: -7.1291375160217285
    7. ',
' → logprob: -7.2541375160217285
    8. '```' → logprob: -8.129137992858887
    9. '<|end|>' → logprob: -8.254137992858887
    10. '                               ' → logprob: -8.379137992858887

Token 1159: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4144953489303589
    2. '                       ' → logprob: -1.1644953489303589
    3. '                        
' → logprob: -4.539495468139648
    4. '                           ' → logprob: -4.664495468139648
    5. '
' → logprob: -6.289495468139648
    6. '                    
' → logprob: -6.539495468139648
    7. '                            
' → logprob: -6.664495468139648
    8. '```' → logprob: -7.164495468139648
    9. '                               ' → logprob: -7.539495468139648
    10. '<|end|>' → logprob: -8.414495468139648

Token 1160: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1049814522266388
    2. '                   ' → logprob: -2.7299814224243164
    3. 'equal' → logprob: -3.6049814224243164
    4. ' equal' → logprob: -5.354981422424316
    5. '                           ' → logprob: -6.729981422424316
    6. '
' → logprob: -6.729981422424316
    7. '                               ' → logprob: -10.229981422424316
    8. '               ' → logprob: -10.354981422424316
    9. '                        
' → logprob: -10.479981422424316
    10. '           ' → logprob: -11.979981422424316

Token 1161: ' all' (ID: 722)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.0009954140987247229
    2. ' equal' → logprob: -7.750995635986328
    3. '                       ' → logprob: -8.000995635986328
    4. '                   ' → logprob: -8.500995635986328
    5. '                           ' → logprob: -11.125995635986328
    6. '
' → logprob: -12.000995635986328
    7. '   ' → logprob: -13.375995635986328
    8. '                               ' → logprob: -14.000995635986328
    9. '(equal' → logprob: -14.000995635986328
    10. '               ' → logprob: -14.625995635986328

Token 1162: ' conditions' (ID: 6409)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.878461480140686
    2. 'conditions' → logprob: -1.503461480140686
    3. '                   ' → logprob: -2.2534613609313965
    4. '                           ' → logprob: -2.3784613609313965
    5. 'equal' → logprob: -2.7534613609313965
    6. ' conditions' → logprob: -2.8784613609313965
    7. 'right' → logprob: -4.6284613609313965
    8. '_conditions' → logprob: -4.6284613609313965
    9. ' equal' → logprob: -5.3784613609313965
    10. '.append' → logprob: -5.8784613609313965

Token 1163: ' fulfilled' (ID: 61554)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.017167534679174423
    2. '                           ' → logprob: -4.517167568206787
    3. '                   ' → logprob: -5.767167568206787
    4. ' equal' → logprob: -7.142167568206787
    5. 'equal' → logprob: -7.892167568206787
    6. '                        
' → logprob: -8.017167091369629
    7. '
' → logprob: -8.392167091369629
    8. ')' → logprob: -8.392167091369629
    9. '```' → logprob: -8.892167091369629
    10. ':' → logprob: -9.017167091369629

Token 1164: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04881399869918823
    2. '                           ' → logprob: -3.548814058303833
    3. ' equal' → logprob: -4.173813819885254
    4. 'equal' → logprob: -5.923813819885254
    5. '                   ' → logprob: -7.673813819885254
    6. '
' → logprob: -8.798813819885254
    7. ',' → logprob: -9.423813819885254
    8. '                               ' → logprob: -9.673813819885254
    9. '                        
' → logprob: -10.923813819885254
    10. '               ' → logprob: -12.173813819885254

Token 1165: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.016666119918227196
    2. '                           ' → logprob: -4.266665935516357
    3. ' equal' → logprob: -6.266665935516357
    4. '                   ' → logprob: -8.516666412353516
    5. 'equal' → logprob: -8.641666412353516
    6. '                        
' → logprob: -9.016666412353516
    7. '                               ' → logprob: -9.891666412353516
    8. '               ' → logprob: -11.766666412353516
    9. '                            
' → logprob: -11.891666412353516
    10. '           ' → logprob: -12.016666412353516

Token 1166: ' equal' (ID: 12629)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' (adapté à ' equal') → logprob: -0.6861061453819275
    2. ' equal' → logprob: -1.1861062049865723
    3. '                       ' → logprob: -1.6861062049865723
    4. '                           ' → logprob: -5.436106204986572
    5. '                   ' → logprob: -6.811106204986572
    6. '                               ' → logprob: -8.811105728149414
    7. '
' → logprob: -9.686105728149414
    8. '   ' → logprob: -10.061105728149414
    9. '               ' → logprob: -10.561105728149414
    10. '           ' → logprob: -10.561105728149414

Token 1167: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -3.6312321753939614e-05
    2. 'Pairs' → logprob: -11.500036239624023
    3. '_tokens' → logprob: -11.625036239624023
    4. '```' → logprob: -12.500036239624023
    5. '.append' → logprob: -13.000036239624023
    6. '_pair' → logprob: -13.500036239624023
    7. '_' → logprob: -13.625036239624023
    8. ')_' → logprob: -13.625036239624023
    9. '_p' → logprob: -13.875036239624023
    10. 'pairs' → logprob: -13.875036239624023

Token 1168: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014217919670045376
    2. '.' → logprob: -4.264217853546143
    3. ' .' → logprob: -10.8892183303833
    4. '.app' → logprob: -11.3892183303833
    5. '.add' → logprob: -11.7642183303833
    6. '.extend' → logprob: -12.1392183303833
    7. '.push' → logprob: -12.7642183303833
    8. '<|end|>' → logprob: -13.1392183303833
    9. '.Append' → logprob: -13.7642183303833
    10. 'append' → logprob: -14.1392183303833

Token 1169: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.011087673716247082
    2. '(' → logprob: -4.511087894439697
    3. '(
' → logprob: -10.886087417602539
    4. '(A' → logprob: -10.886087417602539
    5. '(((' → logprob: -13.511087417602539
    6. '([' → logprob: -15.136087417602539
    7. '   ' → logprob: -15.636087417602539
    8. '(('' → logprob: -16.01108741760254
    9. '([(' → logprob: -16.13608741760254
    10. '(()' → logprob: -16.26108741760254

Token 1170: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.7729658540920354e-05
    2. ' A' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.875028610229492
    4. '_A' → logprob: -18.000028610229492
    5. ',A' → logprob: -18.000028610229492
    6. '(A' → logprob: -18.875028610229492
    7. '	A' → logprob: -19.250028610229492
    8. ''A' → logprob: -19.375028610229492
    9. '=A' → logprob: -19.500028610229492
    10. ',' → logprob: -19.875028610229492

Token 1171: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.2015070915222168
    2. ',' → logprob: -1.7015070915222168
    3. ' ,' → logprob: -9.576507568359375
    4. ',
' → logprob: -10.951507568359375
    5. ',b' → logprob: -12.701507568359375
    6. ',A' → logprob: -13.076507568359375
    7. '           ' → logprob: -15.201507568359375
    8. '   ' → logprob: -15.201507568359375
    9. ',S' → logprob: -15.451507568359375
    10. 'B' → logprob: -15.826507568359375

Token 1172: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.576142430305481
    2. '))' → logprob: -0.826142430305481
    3. '))
' → logprob: -9.451142311096191
    4. ')))' → logprob: -9.701142311096191
    5. ')}' → logprob: -11.326142311096191
    6. ',' → logprob: -11.451142311096191
    7. '),' → logprob: -11.451142311096191
    8. ')
' → logprob: -11.451142311096191
    9. ')])' → logprob: -12.576142311096191
    10. ')]' → logprob: -12.951142311096191

Token 1173: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.496266633272171
    2. '<|end|>' → logprob: -1.4962666034698486
    3. ':' → logprob: -3.2462666034698486
    4. ',' → logprob: -3.3712666034698486
    5. '
' → logprob: -3.6212666034698486
    6. '   ' → logprob: -3.7462666034698486
    7. '       ' → logprob: -4.871266841888428
    8. '<|end|>' → logprob: -4.996266841888428
    9. '\n' → logprob: -5.121266841888428
    10. '(' → logprob: -5.996266841888428

Token 1174: ' parent' (ID: 5980)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.137816309928894
    2. '       ' → logprob: -1.637816309928894
    3. '
' → logprob: -2.0128164291381836
    4. '   ' → logprob: -2.3878164291381836
    5. ':
' → logprob: -2.8878164291381836
    6. ')' → logprob: -2.8878164291381836
    7. '<|end|>' → logprob: -2.8878164291381836
    8. '\n' → logprob: -4.137816429138184
    9. ',' → logprob: -4.387816429138184
    10. ',
' → logprob: -4.762816429138184

Token 1175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45671528577804565
    2. '_' → logprob: -1.5817153453826904
    3. '[' → logprob: -2.4567153453826904
    4. ' =' → logprob: -2.9567153453826904
    5. '```' → logprob: -4.831715106964111
    6. ',' → logprob: -5.581715106964111
    7. '=[' → logprob: -5.706715106964111
    8. '_=' → logprob: -6.331715106964111
    9. '   ' → logprob: -6.956715106964111
    10. '[_' → logprob: -7.331715106964111

Token 1176: ' list' (ID: 1562)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.16413052380084991
    2. '[list' → logprob: -2.664130449295044
    3. '[' → logprob: -2.914130449295044
    4. 'list' → logprob: -3.664130449295044
    5. '{}' → logprob: -7.539130687713623
    6. ' list' → logprob: -8.164130210876465
    7. '=list' → logprob: -8.289130210876465
    8. '[i' → logprob: -8.289130210876465
    9. '[parent' → logprob: -8.289130210876465
    10. ' [-' → logprob: -9.664130210876465

Token 1177: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -8.673547563375905e-05
    2. 'range' → logprob: -9.375086784362793
    3. '=' → logprob: -13.750086784362793
    4. ' range' → logprob: -14.625086784362793
    5. '	range' → logprob: -15.750086784362793
    6. '```' → logprob: -16.375085830688477
    7. '(' → logprob: -16.375085830688477
    8. '0' → logprob: -17.875085830688477
    9. ' =' → logprob: -18.000085830688477
    10. '`' → logprob: -18.250085830688477

Token 1178: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.08051078766584396
    2. 'cnt' → logprob: -2.5805108547210693
    3. '[cnt' → logprob: -6.83051061630249
    4. 'parent' → logprob: -8.330511093139648
    5. ')' → logprob: -9.330511093139648
    6. '(parent' → logprob: -9.955511093139648
    7. '(' → logprob: -10.080511093139648
    8. '(
' → logprob: -10.580511093139648
    9. '	cnt' → logprob: -10.705511093139648
    10. '(len' → logprob: -10.830511093139648

Token 1179: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015569246374070644
    2. '))' → logprob: -4.39056921005249
    3. ')
' → logprob: -6.39056921005249
    4. '))
' → logprob: -6.64056921005249
    5. ')))' → logprob: -11.140569686889648
    6. 'def' → logprob: -11.390569686889648
    7. ')`' → logprob: -12.265569686889648
    8. '```' → logprob: -12.390569686889648
    9. ')**' → logprob: -12.515569686889648
    10. '[' → logprob: -12.515569686889648

Token 1180: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0903986692428589
    2. '[
' → logprob: -1.3403986692428589
    3. '[' → logprob: -1.7153986692428589
    4. '```' → logprob: -2.2153987884521484
    5. '  
' → logprob: -3.4653987884521484
    6. '
' → logprob: -4.215398788452148
    7. '<|end|>' → logprob: -4.465398788452148
    8. ' 
' → logprob: -4.840398788452148
    9. '``' → logprob: -4.965398788452148
    10. ' def' → logprob: -4.965398788452148

Token 1181: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5803554654121399
    2. '
' → logprob: -0.8303554654121399
    3. '```' → logprob: -5.580355644226074
    4. '        
' → logprob: -8.455355644226074
    5. '    
' → logprob: -8.830355644226074
    6. '``' → logprob: -9.330355644226074
    7. ' 
' → logprob: -9.830355644226074
    8. ' def' → logprob: -10.080355644226074
    9. '       ' → logprob: -10.080355644226074
    10. '   ' → logprob: -10.830355644226074

Token 1182: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.03005732223391533
    2. ' find' → logprob: -3.530057430267334
    3. '_find' → logprob: -8.905056953430176
    4. 'union' → logprob: -9.030056953430176
    5. ' union' → logprob: -11.030056953430176
    6. '=find' → logprob: -11.155056953430176
    7. '	find' → logprob: -11.530056953430176
    8. ' ' → logprob: -12.530056953430176
    9. '(find' → logprob: -13.530056953430176
    10. '`' → logprob: -13.655056953430176

Token 1183: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.3919377326965332
    2. '(x' → logprob: -1.1419377326965332
    3. 'parent' → logprob: -6.766937732696533
    4. ' (' → logprob: -7.141937732696533
    5. '(a' → logprob: -7.141937732696533
    6. '(i' → logprob: -7.266937732696533
    7. '(' → logprob: -7.266937732696533
    8. '(parent' → logprob: -7.516937732696533
    9. '_parent' → logprob: -9.016937255859375
    10. '(
' → logprob: -9.141937255859375

Token 1184: '):
' (ID: 1883)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.002805821830406785
    2. '):
' → logprob: -6.252805709838867
    3. '(' → logprob: -8.377805709838867
    4. '):' → logprob: -8.877805709838867
    5. '[u' → logprob: -9.002805709838867
    6. '(
' → logprob: -9.252805709838867
    7. ')(
' → logprob: -9.377805709838867
    8. '```' → logprob: -10.127805709838867
    9. '   ' → logprob: -10.252805709838867
    10. ')' → logprob: -10.752805709838867

Token 1185: '           ' (ID: 352)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0955389067530632
    2. 'u' → logprob: -2.845538854598999
    3. ' u' → logprob: -3.595538854598999
    4. '   ' → logprob: -6.345539093017578
    5. '(' → logprob: -6.720539093017578
    6. '(
' → logprob: -6.970539093017578
    7. ')' → logprob: -7.845539093017578
    8. '[u' → logprob: -7.845539093017578
    9. '	u' → logprob: -8.970539093017578
    10. '):' → logprob: -9.095539093017578

Token 1186: ' while' (ID: 2049)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.20209087431430817
    2. 'u' → logprob: -1.702090859413147
    3. 'parent' → logprob: -8.077091217041016
    4. ' parent' → logprob: -8.577091217041016
    5. '   ' → logprob: -9.077091217041016
    6. '	u' → logprob: -10.702091217041016
    7. '    ' → logprob: -11.202091217041016
    8. ' ' → logprob: -11.827091217041016
    9. '(u' → logprob: -12.077091217041016
    10. '       ' → logprob: -12.327091217041016

Token 1187: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.001419876585714519
    2. 'u' → logprob: -7.251420021057129
    3. ' parent' → logprob: -7.251420021057129
    4. ' u' → logprob: -15.126420021057129
    5. '(parent' → logprob: -15.876420021057129
    6. '	parent' → logprob: -17.126419067382812
    7. '_parent' → logprob: -18.751419067382812
    8. '-parent' → logprob: -18.751419067382812
    9. 'True' → logprob: -19.501419067382812
    10. 'paren' → logprob: -19.626419067382812

Token 1188: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.3856492842023727e-06
    2. '[parent' → logprob: -14.250000953674316
    3. 'u' → logprob: -14.625000953674316
    4. '[
' → logprob: -15.625000953674316
    5. '[user' → logprob: -17.000001907348633
    6. '```' → logprob: -18.250001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '[' → logprob: -18.500001907348633
    9. '	u' → logprob: -18.625001907348633
    10. '<u' → logprob: -18.750001907348633

Token 1189: ']!=' (ID: 85780)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.04982367530465126
    2. ' !=' → logprob: -3.049823760986328
    3. ']!=' → logprob: -6.924823760986328
    4. ')!=' → logprob: -8.924823760986328
    5. '[' → logprob: -10.799823760986328
    6. '()!=' → logprob: -10.799823760986328
    7. '[u' → logprob: -11.049823760986328
    8. '!='' → logprob: -11.049823760986328
    9. '!=-' → logprob: -11.424823760986328
    10. '!=(' → logprob: -11.549823760986328

Token 1190: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.009036416187882423
    2. 'parent' → logprob: -4.884036540985107
    3. ' u' → logprob: -6.634036540985107
    4. ' parent' → logprob: -9.13403606414795
    5. '
' → logprob: -12.75903606414795
    6. '	u' → logprob: -13.75903606414795
    7. '   ' → logprob: -13.88403606414795
    8. '(parent' → logprob: -14.88403606414795
    9. '	parent' → logprob: -15.13403606414795
    10. '(u' → logprob: -15.25903606414795

Token 1191: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2125324159860611
    2. ':' → logprob: -1.8375324010849
    3. ' and' → logprob: -4.9625325202941895
    4. '[u' → logprob: -5.3375325202941895
    5. '<|end|>' → logprob: -5.3375325202941895
    6. '):
' → logprob: -5.4625325202941895
    7. ':return' → logprob: -5.9625325202941895
    8. ')' → logprob: -6.7125325202941895
    9. 'and' → logprob: -6.8375325202941895
    10. '<|end|>' → logprob: -6.9625325202941895

Token 1192: '               ' (ID: 506)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.7111157178878784
    2. 'u' → logprob: -1.4611157178878784
    3. ':
' → logprob: -2.586115837097168
    4. '           ' → logprob: -2.836115837097168
    5. '[u' → logprob: -3.336115837097168
    6. '       ' → logprob: -3.836115837097168
    7. '   ' → logprob: -4.336115837097168
    8. '(u' → logprob: -4.461115837097168
    9. ',u' → logprob: -4.461115837097168
    10. '=u' → logprob: -4.961115837097168

Token 1193: ' parent' (ID: 5980)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.008896528743207455
    2. ' u' → logprob: -4.758896350860596
    3. 'parent' (adapté à ' parent') → logprob: -8.633896827697754
    4. '	u' → logprob: -9.633896827697754
    5. ' parent' → logprob: -10.383896827697754
    6. '[u' → logprob: -12.758896827697754
    7. '   ' → logprob: -13.633896827697754
    8. '                   ' → logprob: -13.883896827697754
    9. '               ' → logprob: -14.258896827697754
    10. '	parent' → logprob: -14.758896827697754

Token 1194: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.3676733690081164e-05
    2. '[' → logprob: -11.37502384185791
    3. '=u' → logprob: -12.75002384185791
    4. '=' → logprob: -12.75002384185791
    5. 'u' → logprob: -13.12502384185791
    6. '[
' → logprob: -13.37502384185791
    7. '```' → logprob: -14.00002384185791
    8. '[parent' → logprob: -14.00002384185791
    9. '[user' → logprob: -15.50002384185791
    10. '	u' → logprob: -15.62502384185791

Token 1195: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23705913126468658
    2. '=' → logprob: -1.9870591163635254
    3. ']=' → logprob: -2.6120591163635254
    4. ' =' → logprob: -8.112059593200684
    5. '=u' → logprob: -8.487059593200684
    6. '[u' → logprob: -10.737059593200684
    7. '=
' → logprob: -11.112059593200684
    8. ']
' → logprob: -11.987059593200684
    9. '```' → logprob: -11.987059593200684
    10. ' ]' → logprob: -12.487059593200684

Token 1196: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -2.15310683415737e-05
    2. ' parent' → logprob: -10.750021934509277
    3. '(parent' → logprob: -20.00002098083496
    4. '	parent' → logprob: -20.75002098083496
    5. 'find' → logprob: -21.12502098083496
    6. '[parent' → logprob: -21.12502098083496
    7. '               ' → logprob: -22.50002098083496
    8. '           ' → logprob: -22.62502098083496
    9. ',parent' → logprob: -23.12502098083496
    10. 'parents' → logprob: -23.87502098083496

Token 1197: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.0009178895270451903
    2. '[u' → logprob: -7.000917911529541
    3. 'parent' → logprob: -12.500917434692383
    4. '[' → logprob: -13.000917434692383
    5. '[(' → logprob: -15.000917434692383
    6. '[
' → logprob: -16.250917434692383
    7. 'u' → logprob: -17.375917434692383
    8. '(parent' → logprob: -17.625917434692383
    9. '[player' → logprob: -17.750917434692383
    10. '[user' → logprob: -17.750917434692383

Token 1198: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.03804194927215576
    2. 'u' → logprob: -3.2880420684814453
    3. '[
' → logprob: -15.413042068481445
    4. '```' → logprob: -15.663042068481445
    5. '	u' → logprob: -16.288042068481445
    6. '
' → logprob: -16.663042068481445
    7. ']' → logprob: -17.413042068481445
    8. '_u' → logprob: -17.538042068481445
    9. '(u' → logprob: -18.163042068481445
    10. ''u' → logprob: -18.913042068481445

Token 1199: ']]
' (ID: 29446)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3987668454647064
    2. ']' → logprob: -1.1487668752670288
    3. ']]
' → logprob: -4.648766994476318
    4. ']]' → logprob: -6.773766994476318
    5. '[u' → logprob: -7.023766994476318
    6. 'u' → logprob: -8.52376651763916
    7. ']
' → logprob: -11.14876651763916
    8. ' ]
' → logprob: -14.02376651763916
    9. ']

' → logprob: -14.27376651763916
    10. '])
' → logprob: -14.39876651763916

Token 1200: '               ' (ID: 506)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.08428046852350235
    2. '(u' → logprob: -3.334280490875244
    3. 'u' → logprob: -3.834280490875244
    4. ',u' → logprob: -4.834280490875244
    5. ' u' → logprob: -5.209280490875244
    6. '```' → logprob: -5.834280490875244
    7. '               ' → logprob: -6.709280490875244
    8. '=u' → logprob: -6.709280490875244
    9. '<u' → logprob: -7.084280490875244
    10. '       ' → logprob: -7.084280490875244

Token 1201: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.005233882926404476
    2. ' u' → logprob: -5.2552337646484375
    3. '	u' → logprob: -16.380233764648438
    4. '[u' → logprob: -17.880233764648438
    5. '=u' → logprob: -18.380233764648438
    6. '_u' → logprob: -18.880233764648438
    7. '(u' → logprob: -19.130233764648438
    8. '```' → logprob: -19.380233764648438
    9. ''u' → logprob: -20.130233764648438
    10. '*u' → logprob: -20.755233764648438

Token 1202: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00012190054985694587
    2. '=u' → logprob: -9.2501220703125
    3. '=
' → logprob: -11.1251220703125
    4. ' =' → logprob: -11.5001220703125
    5. '=user' → logprob: -14.3751220703125
    6. '=

' → logprob: -16.0001220703125
    7. '=p' → logprob: -17.8751220703125
    8. '=int' → logprob: -18.1251220703125
    9. '=}' → logprob: -18.1251220703125
    10. '=get' → logprob: -18.1251220703125

Token 1203: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -2.935296834039036e-06
    2. ' parent' → logprob: -12.75000286102295
    3. '[parent' → logprob: -19.000003814697266
    4. '
' → logprob: -19.500003814697266
    5. '(parent' → logprob: -19.750003814697266
    6. '	parent' → logprob: -20.250003814697266
    7. '   ' → logprob: -22.125003814697266
    8. '.parent' → logprob: -22.250003814697266
    9. ',parent' → logprob: -22.250003814697266
    10. '_parent' → logprob: -23.125003814697266

Token 1204: '[u' (ID: 48750)
  Prédit: '[parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.5797342658042908
    2. '[u' → logprob: -0.8297342658042908
    3. 'parent' → logprob: -5.5797343254089355
    4. 'u' → logprob: -11.454733848571777
    5. '(parent' → logprob: -14.204733848571777
    6. '[' → logprob: -14.204733848571777
    7. ' parent' → logprob: -14.454733848571777
    8. '	parent' → logprob: -14.579733848571777
    9. '.parent' → logprob: -15.204733848571777
    10. '[
' → logprob: -15.579733848571777

Token 1205: ']
' (ID: 1592)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.02662862092256546
    2. ']' → logprob: -3.9016287326812744
    3. '])' → logprob: -5.526628494262695
    4. '[
' → logprob: -7.151628494262695
    5. ')' → logprob: -7.276628494262695
    6. ']
' → logprob: -7.901628494262695
    7. '[parent' → logprob: -9.651628494262695
    8. '])
' → logprob: -10.151628494262695
    9. '[' → logprob: -10.276628494262695
    10. 'parent' → logprob: -10.526628494262695

Token 1206: '           ' (ID: 352)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.51869136095047
    2. '<|end|>' → logprob: -1.7686913013458252
    3. ')' → logprob: -2.893691301345825
    4. '=u' → logprob: -3.268691301345825
    5. '```' → logprob: -3.393691301345825
    6. '=' → logprob: -4.393691539764404
    7. '(u' → logprob: -4.393691539764404
    8. ':' → logprob: -4.518691539764404
    9. '[
' → logprob: -4.643691539764404
    10. '       ' → logprob: -4.893691539764404

Token 1207: ' return' (ID: 622)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.06882324069738388
    2. 'return' (adapté à ' return') → logprob: -3.3188233375549316
    3. ' u' → logprob: -3.5688233375549316
    4. ' return' → logprob: -6.443823337554932
    5. 'parent' → logprob: -7.568823337554932
    6. ' parent' → logprob: -11.693822860717773
    7. '(u' → logprob: -12.443822860717773
    8. '[u' → logprob: -13.443822860717773
    9. '=u' → logprob: -14.693822860717773
    10. 'print' → logprob: -14.943822860717773

Token 1208: ' u' (ID: 337)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.004078401252627373
    2. ' parent' → logprob: -5.504078388214111
    3. 'u' → logprob: -17.129077911376953
    4. '	parent' → logprob: -19.754077911376953
    5. '(parent' → logprob: -19.754077911376953
    6. ' u' → logprob: -20.504077911376953
    7. '[parent' → logprob: -22.129077911376953
    8. '
' → logprob: -22.504077911376953
    9. '_parent' → logprob: -22.879077911376953
    10. ' ' → logprob: -23.129077911376953

Token 1209: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7387680411338806
    2. '       ' → logprob: -2.2387681007385254
    3. 'def' → logprob: -2.3637681007385254
    4. '   ' → logprob: -2.6137681007385254
    5. '<|end|>' → logprob: -2.6137681007385254
    6. '```' → logprob: -2.7387681007385254
    7. ':' → logprob: -3.6137681007385254
    8. '[' → logprob: -3.9887681007385254
    9. '(
' → logprob: -4.863768100738525
    10. '
' → logprob: -4.988768100738525

Token 1210: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.765255868434906
    2. '       ' → logprob: -1.7652559280395508
    3. 'def' → logprob: -2.390255928039551
    4. '   ' → logprob: -2.515255928039551
    5. '
' → logprob: -3.015255928039551
    6. '```' → logprob: -3.265255928039551
    7. '[' → logprob: -4.015255928039551
    8. ':' → logprob: -4.265255928039551
    9. '    
' → logprob: -4.765255928039551
    10. '[
' → logprob: -4.890255928039551

Token 1211: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01764538884162903
    2. '
' → logprob: -4.392645359039307
    3. '```' → logprob: -6.017645359039307
    4. '       ' → logprob: -6.142645359039307
    5. '   ' → logprob: -8.517645835876465
    6. ' def' → logprob: -8.767645835876465
    7. 'for' → logprob: -9.017645835876465
    8. '        
' → logprob: -10.517645835876465
    9. ' for' → logprob: -11.642645835876465
    10. '           ' → logprob: -11.892645835876465

Token 1212: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -9.984787902794778e-05
    2. ' union' → logprob: -9.250100135803223
    3. 'un' → logprob: -12.750100135803223
    4. 'merge' → logprob: -14.500100135803223
    5. ' unite' → logprob: -15.750100135803223
    6. '_union' → logprob: -15.750100135803223
    7. 'uni' → logprob: -17.500099182128906
    8. '.union' → logprob: -18.625099182128906
    9. '	union' → logprob: -19.125099182128906
    10. '
' → logprob: -19.625099182128906

Token 1213: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.03842035308480263
    2. '(parent' → logprob: -3.5384204387664795
    3. '(' → logprob: -4.7884202003479
    4. ' (' → logprob: -8.788420677185059
    5. '(a' → logprob: -9.163420677185059
    6. '(
' → logprob: -11.163420677185059
    7. 'parent' → logprob: -11.538420677185059
    8. '<|end|>' → logprob: -11.788420677185059
    9. '(user' → logprob: -12.163420677185059
    10. '_parent' → logprob: -12.913420677185059

Token 1214: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8593169450759888
    2. ',u' → logprob: -0.9843169450759888
    3. ',v' → logprob: -1.6093169450759888
    4. '(u' → logprob: -6.234316825866699
    5. ' ,' → logprob: -7.484316825866699
    6. '(v' → logprob: -9.6093168258667
    7. '[u' → logprob: -10.2343168258667
    8. ',
' → logprob: -10.2343168258667
    9. 'u' → logprob: -10.6093168258667
    10. '       ' → logprob: -10.7343168258667

Token 1215: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12443693727254868
    2. '):' → logprob: -2.374436855316162
    3. '(u' → logprob: -3.749436855316162
    4. ')' → logprob: -7.999436855316162
    5. '):
' → logprob: -11.24943733215332
    6. '   ' → logprob: -11.37443733215332
    7. ',u' → logprob: -11.37443733215332
    8. ',' → logprob: -11.62443733215332
    9. '[u' → logprob: -11.87443733215332
    10. '):

' → logprob: -12.37443733215332

Token 1216: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4835842847824097
    2. '(
' → logprob: -1.4835842847824097
    3. '(parent' → logprob: -1.6085842847824097
    4. '       ' → logprob: -2.233584403991699
    5. ' parent' → logprob: -2.608584403991699
    6. '(u' → logprob: -2.983584403991699
    7. 'parent' → logprob: -2.983584403991699
    8. ' (' → logprob: -3.358584403991699
    9. '   ' → logprob: -5.108584403991699
    10. ' (
' → logprob: -5.358584403991699

Token 1217: ' u' (ID: 337)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.3133324682712555
    2. 'parent' → logprob: -1.313332438468933
    3. '
' → logprob: -10.188332557678223
    4. ' u' → logprob: -11.313332557678223
    5. 'u' (adapté à ' u') → logprob: -11.813332557678223
    6. '	parent' → logprob: -11.813332557678223
    7. '   ' → logprob: -13.063332557678223
    8. ' 
' → logprob: -13.938332557678223
    9. '_parent' → logprob: -14.438332557678223
    10. '(parent' → logprob: -14.563332557678223

Token 1218: '=find' (ID: 88179)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03197644278407097
    2. ' =' → logprob: -3.6569764614105225
    3. '=find' → logprob: -6.031976222991943
    4. '=
' → logprob: -6.281976222991943
    5. '=u' → logprob: -6.906976222991943
    6. ',' → logprob: -9.531976699829102
    7. '[u' → logprob: -10.031976699829102
    8. ' =
' → logprob: -10.031976699829102
    9. ' |=' → logprob: -10.156976699829102
    10. '[parent' → logprob: -10.781976699829102

Token 1219: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.014298549853265285
    2. 'u' → logprob: -4.264298439025879
    3. '(v' → logprob: -9.139298439025879
    4. '[u' → logprob: -11.014298439025879
    5. ' u' → logprob: -12.264298439025879
    6. ')' → logprob: -12.764298439025879
    7. ',u' → logprob: -14.264298439025879
    8. '(' → logprob: -14.264298439025879
    9. 'v' → logprob: -14.514298439025879
    10. '(
' → logprob: -14.639298439025879

Token 1220: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011472291313111782
    2. ')' → logprob: -4.511472225189209
    3. ')v' → logprob: -7.886472225189209
    4. 'v' → logprob: -10.511472702026367
    5. '),' → logprob: -11.761472702026367
    6. ');' → logprob: -12.261472702026367
    7. ' )
' → logprob: -12.511472702026367
    8. '           ' → logprob: -13.511472702026367
    9. ',v' → logprob: -13.636472702026367
    10. '(v' → logprob: -14.386472702026367

Token 1221: '           ' (ID: 352)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.3230940103530884
    2. '           ' → logprob: -2.448093891143799
    3. '(v' → logprob: -2.573093891143799
    4. 'v' → logprob: -3.198093891143799
    5. '
' → logprob: -3.823093891143799
    6. '[u' → logprob: -4.323093891143799
    7. ')v' → logprob: -4.948093891143799
    8. ')
' → logprob: -5.198093891143799
    9. ',v' → logprob: -5.448093891143799
    10. ')' → logprob: -5.698093891143799

Token 1222: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -1.7432603272027336e-06
    2. ' v' → logprob: -13.500001907348633
    3. 'u' → logprob: -15.125001907348633
    4. ')v' → logprob: -18.250001907348633
    5. '
' → logprob: -18.750001907348633
    6. '	v' → logprob: -18.875001907348633
    7. 'union' → logprob: -18.875001907348633
    8. '[v' → logprob: -19.000001907348633
    9. ',v' → logprob: -20.375001907348633
    10. 'parent' → logprob: -20.375001907348633

Token 1223: '=find' (ID: 88179)
  Prédit: '=find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=find' → logprob: -0.1294945329427719
    2. '[v' → logprob: -2.6294944286346436
    3. '=' → logprob: -4.129494667053223
    4. '=v' → logprob: -4.129494667053223
    5. 'find' → logprob: -4.379494667053223
    6. '(find' → logprob: -6.379494667053223
    7. '[u' → logprob: -6.629494667053223
    8. '(v' → logprob: -8.004494667053223
    9. '=u' → logprob: -8.004494667053223
    10. '[' → logprob: -8.629494667053223

Token 1224: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.02231128327548504
    2. 'v' → logprob: -4.022311210632324
    3. '(u' → logprob: -5.522311210632324
    4. 'u' → logprob: -8.772311210632324
    5. ' v' → logprob: -14.647311210632324
    6. '[v' → logprob: -15.022311210632324
    7. ')v' → logprob: -15.522311210632324
    8. '	v' → logprob: -16.14731216430664
    9. '(' → logprob: -16.77231216430664
    10. '(
' → logprob: -17.39731216430664

Token 1225: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6418800354003906
    2. ')' → logprob: -1.2668800354003906
    3. '[u' → logprob: -2.2668800354003906
    4. '[v' → logprob: -2.8918800354003906
    5. '(u' → logprob: -4.516880035400391
    6. ')v' → logprob: -5.141880035400391
    7. '(v' → logprob: -5.141880035400391
    8. '           ' → logprob: -5.891880035400391
    9. 'v' → logprob: -6.016880035400391
    10. 'u' → logprob: -6.266880035400391

Token 1226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1761036515235901
    2. '[u' → logprob: -3.0511035919189453
    3. '       ' → logprob: -3.8011035919189453
    4. '(u' → logprob: -3.9261035919189453
    5. ':
' → logprob: -4.926103591918945
    6. ')' → logprob: -4.926103591918945
    7. '[' → logprob: -4.926103591918945
    8. '=' → logprob: -5.051103591918945
    9. '               ' → logprob: -5.176103591918945
    10. 'u' → logprob: -5.301103591918945

Token 1227: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4967348873615265
    2. 'parent' → logprob: -1.621734857559204
    3. ' if' → logprob: -1.746734857559204
    4. ' parent' → logprob: -4.621735095977783
    5. 'u' → logprob: -5.746735095977783
    6. '           ' → logprob: -5.746735095977783
    7. ' u' → logprob: -6.996735095977783
    8. '
' → logprob: -6.996735095977783
    9. '(parent' → logprob: -7.371735095977783
    10. '(
' → logprob: -8.871734619140625

Token 1228: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.313264399766922
    2. ' u' → logprob: -1.3132643699645996
    3. '	u' → logprob: -13.063264846801758
    4. '(u' → logprob: -15.063264846801758
    5. '_u' → logprob: -16.563264846801758
    6. '[u' → logprob: -16.688264846801758
    7. '=u' → logprob: -17.188264846801758
    8. '   ' → logprob: -17.313264846801758
    9. '<u' → logprob: -17.688264846801758
    10. ' ' → logprob: -17.688264846801758

Token 1229: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.013570637442171574
    2. ' !=' → logprob: -4.388570785522461
    3. '=' → logprob: -7.763570785522461
    4. '==' → logprob: -7.888570785522461
    5. '<|end|>' → logprob: -9.638570785522461
    6. '=u' → logprob: -10.388570785522461
    7. '```' → logprob: -10.763570785522461
    8. '()!=' → logprob: -10.888570785522461
    9. ')!=' → logprob: -11.388570785522461
    10. '!' → logprob: -11.513570785522461

Token 1230: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9361264946837764e-07
    2. ' v' → logprob: -15.875
    3. '	v' → logprob: -18.625
    4. 'u' → logprob: -20.125
    5. ')v' → logprob: -20.375
    6. '(v' → logprob: -21.125
    7. '<v' → logprob: -22.375
    8. ',v' → logprob: -22.5
    9. '[v' → logprob: -22.625
    10. '
' → logprob: -22.75

Token 1231: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2888130247592926
    2. ':' → logprob: -1.4138129949569702
    3. '):
' → logprob: -5.66381311416626
    4. '=' → logprob: -6.91381311416626
    5. '           ' → logprob: -6.91381311416626
    6. '               ' → logprob: -6.91381311416626
    7. ')' → logprob: -7.53881311416626
    8. '):' → logprob: -9.038812637329102
    9. '<|end|>' → logprob: -9.038812637329102
    10. '=u' → logprob: -9.288812637329102

Token 1232: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01262112520635128
    2. 'parent' → logprob: -5.01262092590332
    3. ' parent' → logprob: -5.38762092590332
    4. '(parent' → logprob: -7.51262092590332
    5. '[parent' → logprob: -8.26262092590332
    6. '	parent' → logprob: -8.76262092590332
    7. ',parent' → logprob: -9.13762092590332
    8. '           ' → logprob: -9.63762092590332
    9. '   ' → logprob: -9.63762092590332
    10. '                   ' → logprob: -10.01262092590332

Token 1233: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.006715967319905758
    2. ' parent' → logprob: -5.006715774536133
    3. '               ' → logprob: -14.881715774536133
    4. '                   ' → logprob: -15.631715774536133
    5. '[parent' → logprob: -16.631715774536133
    6. '	parent' → logprob: -16.881715774536133
    7. '
' → logprob: -17.381715774536133
    8. '_parent' → logprob: -17.881715774536133
    9. ',parent' → logprob: -18.006715774536133
    10. '.parent' → logprob: -18.256715774536133

Token 1234: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0009155054576694965
    2. '[u' → logprob: -7.00091552734375
    3. 'v' → logprob: -12.50091552734375
    4. '```' → logprob: -15.62591552734375
    5. '[' → logprob: -17.25091552734375
    6. '[
' → logprob: -17.62591552734375
    7. '	v' → logprob: -17.87591552734375
    8. ' v' → logprob: -19.00091552734375
    9. '=v' → logprob: -19.00091552734375
    10. 'u' → logprob: -19.87591552734375

Token 1235: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0252721309661865
    2. '=u' → logprob: -1.0252721309661865
    3. ']=' → logprob: -1.2752721309661865
    4. ']' → logprob: -6.400272369384766
    5. '=
' → logprob: -6.650272369384766
    6. '[u' → logprob: -8.525272369384766
    7. ')=' → logprob: -10.275272369384766
    8. ' =' → logprob: -10.400272369384766
    9. '=user' → logprob: -11.775272369384766
    10. '
' → logprob: -12.400272369384766

Token 1236: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -3.128163257315464e-07
    2. ' u' → logprob: -15.25
    3. '	u' → logprob: -18.875
    4. '[u' → logprob: -19.75
    5. '```' → logprob: -20.0
    6. ''u' → logprob: -20.75
    7. '
' → logprob: -21.125
    8. '(u' → logprob: -22.125
    9. '*u' → logprob: -22.25
    10. '=u' → logprob: -22.5

Token 1237: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1238: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13399352133274078
    2. '(
' → logprob: -3.133993625640869
    3. '       ' → logprob: -3.758993625640869
    4. '()
' → logprob: -3.883993625640869
    5. '(' → logprob: -4.258993625640869
    6. '        
' → logprob: -5.758993625640869
    7. '  
' → logprob: -5.883993625640869
    8. '()' → logprob: -5.883993625640869
    9. '<|end|>' → logprob: -5.883993625640869
    10. '```' → logprob: -6.758993625640869

Token 1239: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.0325924449716695e-05
    2. ' for' → logprob: -11.62501049041748
    3. '```' → logprob: -14.37501049041748
    4. '
' → logprob: -14.75001049041748
    5. '       ' → logprob: -14.87501049041748
    6. '<|end|>' → logprob: -18.000009536743164
    7. '        
' → logprob: -18.125009536743164
    8. '	for' → logprob: -19.125009536743164
    9. '``' → logprob: -19.375009536743164
    10. 'For' → logprob: -19.625009536743164

Token 1240: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03864322602748871
    2. ' A' → logprob: -3.4136431217193604
    3. '(A' → logprob: -5.6636433601379395
    4. 'a' → logprob: -7.2886433601379395
    5. 'u' → logprob: -8.038642883300781
    6. ' (' → logprob: -8.163642883300781
    7. '(u' → logprob: -9.163642883300781
    8. '(a' → logprob: -9.913642883300781
    9. ' u' → logprob: -10.788642883300781
    10. '   ' → logprob: -10.913642883300781

Token 1241: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.932532548904419
    2. ',A' → logprob: -0.932532548904419
    3. ',v' → logprob: -1.932532548904419
    4. ',B' → logprob: -3.307532548904419
    5. ',u' → logprob: -3.557532548904419
    6. ',U' → logprob: -6.43253231048584
    7. ',(' → logprob: -7.80753231048584
    8. ',_' → logprob: -8.68253231048584
    9. ',V' → logprob: -9.05753231048584
    10. ' ,' → logprob: -9.05753231048584

Token 1242: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31937822699546814
    2. 'in' → logprob: -1.9443782567977905
    3. ')' → logprob: -2.569378137588501
    4. '):
' → logprob: -4.06937837600708
    5. ':
' → logprob: -4.19437837600708
    6. ',' → logprob: -5.69437837600708
    7. '       ' → logprob: -5.81937837600708
    8. '           ' → logprob: -5.94437837600708
    9. ':' → logprob: -6.19437837600708
    10. '(u' → logprob: -6.56937837600708

Token 1243: ' equal' (ID: 12629)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.0040785204619169235
    2. ' equal' → logprob: -5.504078388214111
    3. '(equal' → logprob: -16.129077911376953
    4. '_equal' → logprob: -20.129077911376953
    5. '.equal' → logprob: -20.254077911376953
    6. 'equ' → logprob: -20.754077911376953
    7. 'Equal' → logprob: -20.879077911376953
    8. 'equals' → logprob: -21.004077911376953
    9. '
' → logprob: -21.879077911376953
    10. ' ' → logprob: -22.004077911376953

Token 1244: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.010977429337799549
    2. ')' → logprob: -4.635977268218994
    3. 'pairs' → logprob: -8.010977745056152
    4. ')_' → logprob: -8.260977745056152
    5. '):' → logprob: -9.010977745056152
    6. '):
' → logprob: -9.260977745056152
    7. 'Pairs' → logprob: -9.260977745056152
    8. '   ' → logprob: -10.010977745056152
    9. 'union' → logprob: -10.510977745056152
    10. '       ' → logprob: -10.760977745056152

Token 1245: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.948423445224762
    2. '           ' → logprob: -1.0734233856201172
    3. ':
' → logprob: -1.4484233856201172
    4. '.union' → logprob: -4.573423385620117
    5. '   ' → logprob: -5.198423385620117
    6. '():
' → logprob: -5.573423385620117
    7. ',' → logprob: -5.698423385620117
    8. '):
' → logprob: -6.073423385620117
    9. '       ' → logprob: -6.073423385620117
    10. '=' → logprob: -6.823423385620117

Token 1246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6074731349945068
    2. ' union' → logprob: -0.8574731349945068
    3. 'union' → logprob: -3.482473134994507
    4. '   ' → logprob: -9.232473373413086
    5. '```' → logprob: -9.482473373413086
    6. '.union' → logprob: -9.857473373413086
    7. '	union' → logprob: -9.982473373413086
    8. '            
' → logprob: -11.732473373413086
    9. '_union' → logprob: -12.107473373413086
    10. '
' → logprob: -12.107473373413086

Token 1247: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' (adapté à ' union') → logprob: -0.0004311460361350328
    2. ' union' → logprob: -7.750431060791016
    3. '           ' → logprob: -15.375431060791016
    4. '
' → logprob: -17.000431060791016
    5. '   ' → logprob: -17.000431060791016
    6. '.union' → logprob: -17.500431060791016
    7. '```' → logprob: -17.875431060791016
    8. 'un' → logprob: -18.625431060791016
    9. '	union' → logprob: -18.750431060791016
    10. '_union' → logprob: -19.000431060791016

Token 1248: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -15.000000953674316
    3. '(u' → logprob: -15.500000953674316
    4. '(
' → logprob: -15.750000953674316
    5. 'A' → logprob: -16.875
    6. '(U' → logprob: -17.5
    7. ' (' → logprob: -18.125
    8. '((' → logprob: -18.5
    9. ',A' → logprob: -19.25
    10. '(B' → logprob: -19.5

Token 1249: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.07919292151927948
    2. ',' → logprob: -2.579192876815796
    3. ' ,' → logprob: -8.454193115234375
    4. ',b' → logprob: -10.204193115234375
    5. ',v' → logprob: -10.329193115234375
    6. 'B' → logprob: -11.579193115234375
    7. ',
' → logprob: -12.329193115234375
    8. ',u' → logprob: -12.704193115234375
    9. ',A' → logprob: -13.329193115234375
    10. '   ' → logprob: -14.579193115234375

Token 1250: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -12.625003814697266
    3. '<|end|>' → logprob: -14.750003814697266
    4. ')return' → logprob: -16.875003814697266
    5. '       ' → logprob: -17.125003814697266
    6. ' )' → logprob: -17.375003814697266
    7. '),' → logprob: -17.375003814697266
    8. ')#' → logprob: -17.500003814697266
    9. '())' → logprob: -18.125003814697266
    10. '))' → logprob: -18.625003814697266

Token 1251: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1252: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2702416777610779
    2. '
' → logprob: -2.0202417373657227
    3. '   ' → logprob: -3.0202417373657227
    4. '       ' → logprob: -3.5202417373657227
    5. ' for' → logprob: -4.145241737365723
    6. '```' → logprob: -5.145241737365723
    7. 'while' → logprob: -6.395241737365723
    8. '    
' → logprob: -6.770241737365723
    9. '        
' → logprob: -7.395241737365723
    10. '<|end|>' → logprob: -8.770241737365723

Token 1253: ' Build' (ID: 10885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0711691826581955
    2. '       ' → logprob: -3.196169137954712
    3. '   ' → logprob: -4.696169376373291
    4. 'import' → logprob: -5.821169376373291
    5. 'answers' → logprob: -5.946169376373291
    6. '#' → logprob: -6.196169376373291
    7. 'answer' → logprob: -6.321169376373291
    8. 'res' → logprob: -6.571169376373291
    9. 'result' → logprob: -6.571169376373291
    10. ' for' → logprob: -6.821169376373291

Token 1254: ' adjacency' (ID: 177015)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4052177965641022
    2. 'adj' → logprob: -2.4052178859710693
    3. 'group' → logprob: -2.9052178859710693
    4. 'from' → logprob: -3.0302178859710693
    5. 'groups' → logprob: -3.7802178859710693
    6. ' graph' → logprob: -4.03021764755249
    7. 'comp' → logprob: -4.03021764755249
    8. 'uf' → logprob: -4.40521764755249
    9. 'rank' → logprob: -4.78021764755249
    10. ' comp' → logprob: -4.90521764755249

Token 1255: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48169052600860596
    2. 'adj' → logprob: -1.731690526008606
    3. 'for' → logprob: -2.2316904067993164
    4. '=' → logprob: -2.8566904067993164
    5. '
' → logprob: -4.606690406799316
    6. '```' → logprob: -4.731690406799316
    7. ' for' → logprob: -5.356690406799316
    8. '_adj' → logprob: -5.731690406799316
    9. 'list' → logprob: -6.106690406799316
    10. '_list' → logprob: -6.231690406799316

Token 1256: ' stronger' (ID: 26929)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1184120178222656
    2. 'union' → logprob: -1.3684120178222656
    3. 'adj' → logprob: -2.1184120178222656
    4. 'cross' → logprob: -2.3684120178222656
    5. 'equal' → logprob: -2.4934120178222656
    6. 'parent' → logprob: -3.4934120178222656
    7. 'u' → logprob: -3.8684120178222656
    8. 'edges' → logprob: -4.493412017822266
    9. 'color' → logprob: -4.868412017822266
    10. '   ' → logprob: -4.868412017822266

Token 1257: ' relation' (ID: 18075)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.4610421359539032
    2. ' =' → logprob: -1.4610421657562256
    3. 'edges' → logprob: -2.9610421657562256
    4. '_adj' → logprob: -3.5860421657562256
    5. '=' → logprob: -3.9610421657562256
    6. '_edges' → logprob: -4.0860419273376465
    7. 'for' → logprob: -4.5860419273376465
    8. ' edges' → logprob: -5.4610419273376465
    9. '
' → logprob: -6.7110419273376465
    10. '```' → logprob: -6.8360419273376465

Token 1258: '
' (ID: 198)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.10800536721944809
    2. 'strong' → logprob: -2.4830052852630615
    3. '
' → logprob: -5.108005523681641
    4. 'edges' → logprob: -5.983005523681641
    5. 'for' → logprob: -6.233005523681641
    6. ' adj' → logprob: -6.233005523681641
    7. 'graph' → logprob: -6.983005523681641
    8. ' stronger' → logprob: -7.108005523681641
    9. 'strength' → logprob: -7.233005523681641
    10. '#' → logprob: -7.233005523681641

Token 1259: '       ' (ID: 309)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.37477076053619385
    2. 'for' → logprob: -1.7497707605361938
    3. '```' → logprob: -2.9997706413269043
    4. 'strong' → logprob: -3.6247706413269043
    5. '
' → logprob: -3.7497706413269043
    6. 'edges' → logprob: -4.374770641326904
    7. ' for' → logprob: -4.749770641326904
    8. '       ' → logprob: -5.374770641326904
    9. ' adj' → logprob: -5.999770641326904
    10. 'graph' → logprob: -6.124770641326904

Token 1260: ' #' (ID: 1069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6882602572441101
    2. 'for' → logprob: -1.0632603168487549
    3. 'strong' → logprob: -2.188260316848755
    4. 'graph' → logprob: -4.563260078430176
    5. 'str' → logprob: -4.688260078430176
    6. 'from' → logprob: -5.438260078430176
    7. 'edges' → logprob: -5.813260078430176
    8. 'out' → logprob: -5.938260078430176
    9. '```' → logprob: -6.813260078430176
    10. 'ind' → logprob: -6.938260078430176

Token 1261: ' stronger' (ID: 26929)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5556062459945679
    2. 'strong' → logprob: -1.0556062459945679
    3. 'graph' → logprob: -3.6806063652038574
    4. 'str' → logprob: -3.9306063652038574
    5. 'for' → logprob: -4.055606365203857
    6. 'from' → logprob: -5.055606365203857
    7. 'out' → logprob: -6.055606365203857
    8. '#' → logprob: -6.680606365203857
    9. 'greater' → logprob: -7.305606365203857
    10. 'dag' → logprob: -7.430606365203857

Token 1262: ' if' (ID: 538)
  Prédit: '_adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.76394122838974
    2. '=' → logprob: -1.2639412879943848
    3. 'adj' → logprob: -2.1389412879943848
    4. ' =' → logprob: -2.2639412879943848
    5. '_edges' → logprob: -3.6389412879943848
    6. 'edges' → logprob: -6.513941287994385
    7. '_rel' → logprob: -6.638941287994385
    8. '_ad' → logprob: -8.388940811157227
    9. '_graph' → logprob: -9.763940811157227
    10. 'graph' → logprob: -9.763940811157227

Token 1263: ' there' (ID: 1354)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.48166966438293457
    2. '(B' → logprob: -1.7316696643829346
    3. '(u' → logprob: -2.3566696643829346
    4. ' (' → logprob: -2.7316696643829346
    5. '(a' → logprob: -4.7316694259643555
    6. '(any' → logprob: -4.8566694259643555
    7. 'any' → logprob: -4.9816694259643555
    8. 'for' → logprob: -4.9816694259643555
    9. '(' → logprob: -5.8566694259643555
    10. '(v' → logprob: -5.9816694259643555

Token 1264: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.13043580949306488
    2. 'exists' → logprob: -2.1304357051849365
    3. '```' → logprob: -6.630435943603516
    4. 'in' → logprob: -7.380435943603516
    5. 's' → logprob: -7.630435943603516
    6. ' is' → logprob: -7.755435943603516
    7. 'exist' → logprob: -8.255435943603516
    8. ' exists' → logprob: -8.630435943603516
    9. ''s' → logprob: -10.255435943603516
    10. '#' → logprob: -10.380435943603516

Token 1265: ' a' (ID: 261)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.498761922121048
    2. '(u' → logprob: -1.4987618923187256
    3. '(a' → logprob: -2.8737618923187256
    4. '(C' → logprob: -3.4987618923187256
    5. 'a' → logprob: -3.6237618923187256
    6. ' (' → logprob: -3.9987618923187256
    7. 'u' → logprob: -4.498762130737305
    8. 'C' → logprob: -4.748762130737305
    9. '(' → logprob: -5.623762130737305
    10. 'A' → logprob: -5.873762130737305

Token 1266: ' sequence' (ID: 16281)
  Prédit: ' street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.996885359287262
    2. ' (' → logprob: -1.9968852996826172
    3. '(u' → logprob: -2.246885299682617
    4. 'street' → logprob: -2.496885299682617
    5. ' C' → logprob: -2.621885299682617
    6. 'u' → logprob: -2.871885299682617
    7. 'C' → logprob: -3.371885299682617
    8. ' u' → logprob: -3.996885299682617
    9. '(' → logprob: -4.246885299682617
    10. 'D' → logprob: -4.746885299682617

Token 1267: ' A' (ID: 355)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5105190873146057
    2. '[u' → logprob: -1.885519027709961
    3. '(u' → logprob: -2.760519027709961
    4. ' =' → logprob: -3.260519027709961
    5. ' (' → logprob: -3.510519027709961
    6. 'u' → logprob: -3.635519027709961
    7. '
' → logprob: -4.010519027709961
    8. ' u' → logprob: -4.760519027709961
    9. '[(' → logprob: -4.760519027709961
    10. 'from' → logprob: -5.135519027709961

Token 1268: '=A' (ID: 112591)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '->' → logprob: -0.37122008204460144
    2. ',B' → logprob: -1.8712201118469238
    3. ',' → logprob: -2.496220111846924
    4. ' ->' → logprob: -3.121220111846924
    5. '-' → logprob: -4.246220111846924
    6. '-B' → logprob: -5.246220111846924
    7. ' -' → logprob: -6.371220111846924
    8. '-->' → logprob: -6.871220111846924
    9. ')' → logprob: -7.121220111846924
    10. ')->' → logprob: -7.121220111846924

Token 1269: '1' (ID: 16)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '->' → logprob: -0.42309656739234924
    2. 'B' → logprob: -2.7980966567993164
    3. ',' → logprob: -2.9230966567993164
    4. ',B' → logprob: -3.4230966567993164
    5. '-B' → logprob: -3.7980966567993164
    6. ' ->' → logprob: -4.173096656799316
    7. '-' → logprob: -4.548096656799316
    8. 'dd' → logprob: -4.673096656799316
    9. 'A' → logprob: -4.860596656799316
    10. '-->' → logprob: -4.923096656799316

Token 1270: ',' (ID: 11)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.19926901161670685
    2. '1' → logprob: -3.1992690563201904
    3. '-' → logprob: -3.4492690563201904
    4. ',' → logprob: -3.6992690563201904
    5. ',A' → logprob: -3.6992690563201904
    6. '
' → logprob: -4.074268817901611
    7. ' ->' → logprob: -5.074268817901611
    8. '-A' → logprob: -5.324268817901611
    9. '>A' → logprob: -5.324268817901611
    10. '=>' → logprob: -6.074268817901611

Token 1271: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03176606073975563
    2. '_' → logprob: -4.906765937805176
    3. '=A' → logprob: -5.031765937805176
    4. ' A' → logprob: -5.156765937805176
    5. '
' → logprob: -5.656765937805176
    6. '=' → logprob: -6.156765937805176
    7. '_A' → logprob: -6.781765937805176
    8. '(A' → logprob: -6.906765937805176
    9. '```' → logprob: -7.906765937805176
    10. '[' → logprob: -8.156765937805176

Token 1272: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2584353983402252
    2. '2' → logprob: -3.1334354877471924
    3. '_' → logprob: -3.3834354877471924
    4. '_i' → logprob: -3.3834354877471924
    5. '=A' → logprob: -3.3834354877471924
    6. '=' → logprob: -3.8834354877471924
    7. 'i' → logprob: -4.508435249328613
    8. ',' → logprob: -5.133435249328613
    9. '
' → logprob: -5.383435249328613
    10. '>' → logprob: -5.758435249328613

Token 1273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7083268761634827
    2. ',A' → logprob: -0.8333268761634827
    3. '=A' → logprob: -3.458326816558838
    4. ',...' → logprob: -4.833326816558838
    5. 's' → logprob: -5.208326816558838
    6. '...' → logprob: -5.333326816558838
    7. '->' → logprob: -5.458326816558838
    8. '=' → logprob: -5.583326816558838
    9. ',a' → logprob: -6.458326816558838
    10. '
' → logprob: -6.458326816558838

Token 1274: ' ...,' (ID: 126708)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.14571143686771393
    2. ' A' → logprob: -3.3957114219665527
    3. '...' → logprob: -3.5207114219665527
    4. '
' → logprob: -3.8957114219665527
    5. '=' → logprob: -4.020711421966553
    6. '=A' → logprob: -4.020711421966553
    7. ' =' → logprob: -5.895711421966553
    8. '_A' → logprob: -6.395711421966553
    9. ',A' → logprob: -6.770711421966553
    10. ',' → logprob: -6.770711421966553

Token 1275: ' An' (ID: 1689)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.025154616683721542
    2. '...' → logprob: -5.0251545906066895
    3. ' A' → logprob: -5.0251545906066895
    4. '(A' → logprob: -5.1501545906066895
    5. ' (' → logprob: -6.9001545906066895
    6. '(' → logprob: -6.9001545906066895
    7. '
' → logprob: -7.1501545906066895
    8. '_A' → logprob: -7.6501545906066895
    9. '=' → logprob: -7.7751545906066895
    10. '=A' → logprob: -8.150155067443848

Token 1276: '=B' (ID: 139140)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.8506802320480347
    2. ',' → logprob: -2.100680351257324
    3. 's' → logprob: -2.100680351257324
    4. '=[' → logprob: -2.475680351257324
    5. '=A' → logprob: -2.475680351257324
    6. ' where' → logprob: -2.600680351257324
    7. '=' → logprob: -2.600680351257324
    8. '
' → logprob: -3.350680351257324
    9. ' such' → logprob: -3.350680351257324
    10. '=(' → logprob: -3.475680351257324

Token 1277: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10951055586338043
    2. ' =' → logprob: -3.984510660171509
    3. 'adj' → logprob: -4.35951042175293
    4. '```' → logprob: -4.48451042175293
    5. '       ' → logprob: -4.85951042175293
    6. ' for' → logprob: -5.10951042175293
    7. ',' → logprob: -5.23451042175293
    8. ',
' → logprob: -5.48451042175293
    9. 'for' → logprob: -5.73451042175293
    10. '_adj' → logprob: -5.85951042175293

Token 1278: ' n' (ID: 297)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.9980884194374084
    2. ' edges' → logprob: -1.1230883598327637
    3. 'cross' → logprob: -2.4980883598327637
    4. 'n' → logprob: -2.8730883598327637
    5. '
' → logprob: -3.7480883598327637
    6. 'A' → logprob: -3.9980883598327637
    7. ' cross' → logprob: -3.9980883598327637
    8. '(A' → logprob: -4.123088359832764
    9. 'all' → logprob: -4.623088359832764
    10. 'adj' → logprob: -4.623088359832764

Token 1279: '>=' (ID: 20974)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6500404477119446
    2. '+' → logprob: -1.0250403881072998
    3. '>=' → logprob: -2.9000403881073
    4. '>' → logprob: -3.1500403881073
    5. '+=' → logprob: -5.275040626525879
    6. '```' → logprob: -5.275040626525879
    7. '≥' → logprob: -5.650040626525879
    8. ' =' → logprob: -6.400040626525879
    9. '
' → logprob: -6.525040626525879
    10. '0' → logprob: -7.150040626525879

Token 1280: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20155034959316254
    2. '1' → logprob: -1.7015503644943237
    3. ' ' → logprob: -10.326550483703613
    4. '```' → logprob: -10.326550483703613
    5. '>' → logprob: -10.701550483703613
    6. '=' → logprob: -11.076550483703613
    7. '+' → logprob: -11.326550483703613
    8. '<|end|>' → logprob: -11.576550483703613
    9. '0' → logprob: -12.451550483703613
    10. '   ' → logprob: -12.826550483703613

Token 1281: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11648110300302505
    2. '       ' → logprob: -3.866481065750122
    3. ' =' → logprob: -4.116481304168701
    4. ':
' → logprob: -4.241481304168701
    5. ',
' → logprob: -4.616481304168701
    6. ' for' → logprob: -5.241481304168701
    7. ':' → logprob: -5.741481304168701
    8. ',' → logprob: -5.741481304168701
    9. 'for' → logprob: -5.741481304168701
    10. '   ' → logprob: -6.116481304168701

Token 1282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.326516032218933
    2. '   ' → logprob: -1.576516032218933
    3. '
' → logprob: -1.701516032218933
    4. '[' → logprob: -2.9515161514282227
    5. ' 
' → logprob: -3.8265161514282227
    6. '[
' → logprob: -3.9515161514282227
    7. ' A' → logprob: -3.9515161514282227
    8. ' edges' → logprob: -4.076516151428223
    9. '           ' → logprob: -4.076516151428223
    10. ' ' → logprob: -4.201516151428223

Token 1283: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3016732633113861
    2. '#' (adapté à ' #') → logprob: -2.676673173904419
    3. ' A' → logprob: -2.676673173904419
    4. 'A' → logprob: -2.801673173904419
    5. ' #' → logprob: -4.801673412322998
    6. ' and' → logprob: -5.051673412322998
    7. '       ' → logprob: -5.301673412322998
    8. '```' → logprob: -5.301673412322998
    9. ' ' → logprob: -5.551673412322998
    10. '0' → logprob: -5.676673412322998

Token 1284: ' and' (ID: 326)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1550487279891968
    2. ' edges' → logprob: -2.0300488471984863
    3. '#' → logprob: -2.1550488471984863
    4. ' A' → logprob: -2.5300488471984863
    5. '   ' → logprob: -2.7800488471984863
    6. '
' → logprob: -2.9050488471984863
    7. 'edges' → logprob: -2.9050488471984863
    8. ' where' → logprob: -3.1550488471984863
    9. 'and' → logprob: -4.155048847198486
    10. '1' → logprob: -4.530048847198486

Token 1285: ' for' (ID: 395)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.6088274121284485
    2. 'all' → logprob: -1.1088273525238037
    3. 'for' → logprob: -2.8588273525238037
    4. '(A' → logprob: -3.8588273525238037
    5. ' for' → logprob: -4.358827590942383
    6. 'cross' → logprob: -4.608827590942383
    7. ' cross' → logprob: -5.233827590942383
    8. ' edges' → logprob: -6.233827590942383
    9. ' (' → logprob: -6.358827590942383
    10. 'A' → logprob: -6.358827590942383

Token 1286: ' all' (ID: 722)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1425876021385193
    2. 'each' → logprob: -2.517587661743164
    3. ' i' → logprob: -3.767587661743164
    4. ' each' → logprob: -4.392587661743164
    5. 'all' → logprob: -4.642587661743164
    6. ' all' → logprob: -5.517587661743164
    7. 'every' → logprob: -7.517587661743164
    8. 'k' → logprob: -7.517587661743164
    9. ' every' → logprob: -7.767587661743164
    10. '(i' → logprob: -8.017587661743164

Token 1287: ' consecutive' (ID: 40840)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017210885882377625
    2. ' i' → logprob: -4.267210960388184
    3. '_i' → logprob: -7.017210960388184
    4. '(i' → logprob: -7.142210960388184
    5. 'k' → logprob: -7.642210960388184
    6. '(A' → logprob: -8.142210960388184
    7. '
' → logprob: -9.142210960388184
    8. ' (' → logprob: -9.142210960388184
    9. 'Ai' → logprob: -9.517210960388184
    10. '```' → logprob: -9.517210960388184

Token 1288: ' Ai' (ID: 58700)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.8085430860519409
    2. 'A' → logprob: -2.0585432052612305
    3. '(A' → logprob: -2.3085432052612305
    4. 'edges' → logprob: -2.3085432052612305
    5. '_pairs' → logprob: -3.0585432052612305
    6. '_edges' → logprob: -3.4335432052612305
    7. '(u' → logprob: -3.5585432052612305
    8. ' pairs' → logprob: -4.1835432052612305
    9. 'i' → logprob: -4.3085432052612305
    10. '
' → logprob: -4.4335432052612305

Token 1289: ',A' (ID: 59196)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.48049136996269226
    2. ',' → logprob: -1.1054913997650146
    3. ',
' → logprob: -4.2304911613464355
    4. ' ,' → logprob: -4.7304911613464355
    5. ',A' → logprob: -4.8554911613464355
    6. '
' → logprob: -5.4804911613464355
    7. '_,' → logprob: -6.2304911613464355
    8. ',s' → logprob: -6.3554911613464355
    9. '```' → logprob: -6.4804911613464355
    10. ' s' → logprob: -6.8554911613464355

Token 1290: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.034483443945646286
    2. '+' → logprob: -4.034483432769775
    3. '_i' → logprob: -4.534483432769775
    4. '[i' → logprob: -5.409483432769775
    5. '
' → logprob: -7.659483432769775
    6. '+
' → logprob: -8.159483909606934
    7. '+i' → logprob: -10.034483909606934
    8. '1' → logprob: -10.284483909606934
    9. '```' → logprob: -10.659483909606934
    10. '(i' → logprob: -10.784483909606934

Token 1291: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7734584808349609
    2. '+' → logprob: -0.8984584808349609
    3. '+,' → logprob: -3.023458480834961
    4. '-' → logprob: -3.773458480834961
    5. ',A' → logprob: -3.773458480834961
    6. '```' → logprob: -4.398458480834961
    7. ',i' → logprob: -5.273458480834961
    8. '
' → logprob: -5.773458480834961
    9. '[' → logprob: -6.023458480834961
    10. 's' → logprob: -6.023458480834961

Token 1292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01818857528269291
    2. '+' → logprob: -4.0181884765625
    3. '```' → logprob: -10.6431884765625
    4. '+
' → logprob: -12.5181884765625
    5. 'x' → logprob: -13.1431884765625
    6. '+=' → logprob: -13.5181884765625
    7. '++' → logprob: -13.6431884765625
    8. '-' → logprob: -14.1431884765625
    9. '=' → logprob: -14.1431884765625
    10. '``' → logprob: -14.1431884765625

Token 1293: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05972880497574806
    2. ',' → logprob: -3.4347288608551025
    3. 'in' → logprob: -3.9347288608551025
    4. ')' → logprob: -6.059728622436523
    5. '
' → logprob: -6.559728622436523
    6. ':' → logprob: -7.809728622436523
    7. ' ,' → logprob: -7.934728622436523
    8. ',
' → logprob: -8.059728622436523
    9. '[' → logprob: -8.434728622436523
    10. ' (' → logprob: -8.559728622436523

Token 1294: ' either' (ID: 4784)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.29925990104675293
    2. '(A' → logprob: -1.549259901046753
    3. '(' → logprob: -4.049260139465332
    4. ' edges' → logprob: -4.924260139465332
    5. ' in' → logprob: -5.299260139465332
    6. '(edges' → logprob: -5.549260139465332
    7. 'edges' → logprob: -6.799260139465332
    8. ' cross' → logprob: -6.799260139465332
    9. ''' → logprob: -6.924260139465332
    10. '
' → logprob: -7.049260139465332

Token 1295: ' Ai' (ID: 58700)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.6776921153068542
    2. ' (' → logprob: -0.8026921153068542
    3. '(' → logprob: -4.42769193649292
    4. '(color' → logprob: -4.92769193649292
    5. 'color' → logprob: -4.92769193649292
    6. ' color' → logprob: -5.67769193649292
    7. '(ai' → logprob: -5.80269193649292
    8. '
' → logprob: -6.30269193649292
    9. 'out' → logprob: -6.80269193649292
    10. '(i' → logprob: -6.92769193649292

Token 1296: '-A' (ID: 9406)
  Prédit: ',A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',A' → logprob: -0.2966834604740143
    2. ',' → logprob: -1.921683430671692
    3. ')' → logprob: -3.6716835498809814
    4. '
' → logprob: -3.7966835498809814
    5. ',B' → logprob: -4.046683311462402
    6. '!=' → logprob: -4.671683311462402
    7. '[' → logprob: -5.296683311462402
    8. '=A' → logprob: -5.921683311462402
    9. '(A' → logprob: -6.171683311462402
    10. ')!=' → logprob: -6.296683311462402

Token 1297: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007357678841799498
    2. '_i' → logprob: -5.757357597351074
    3. '-' → logprob: -6.632357597351074
    4. '<|end|>' → logprob: -7.257357597351074
    5. ')' → logprob: -7.632357597351074
    6. 'Ai' → logprob: -7.882357597351074
    7. 'I' → logprob: -8.132357597351074
    8. '-i' → logprob: -8.257357597351074
    9. '+' → logprob: -8.882357597351074
    10. '(i' → logprob: -9.507357597351074

Token 1298: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0642370730638504
    2. '-' → logprob: -2.939237117767334
    3. '```' → logprob: -5.814237117767334
    4. '<|end|>' → logprob: -5.814237117767334
    5. '1' → logprob: -6.939237117767334
    6. '+
' → logprob: -7.814237117767334
    7. '+-' → logprob: -8.064236640930176
    8. '``' → logprob: -8.314236640930176
    9. '>' → logprob: -8.439236640930176
    10. '`' → logprob: -8.939236640930176

Token 1299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. '```' → logprob: -12.375006675720215
    3. '+' → logprob: -14.125006675720215
    4. '
' → logprob: -15.062506675720215
    5. '`' → logprob: -15.750006675720215
    6. '``' → logprob: -15.937506675720215
    7. '...' → logprob: -16.2500057220459
    8. '2' → logprob: -16.5625057220459
    9. '１' → logprob: -17.3750057220459
    10. ' ' → logprob: -17.4375057220459

Token 1300: ' is' (ID: 382)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.21055416762828827
    2. ' in' → logprob: -2.0855541229248047
    3. ')' → logprob: -3.4605541229248047
    4. 'or' → logprob: -4.085554122924805
    5. 'in' → logprob: -4.460554122924805
    6. ' not' → logprob: -6.585554122924805
    7. '<|end|>' → logprob: -6.835554122924805
    8. ' and' → logprob: -6.960554122924805
    9. '-' → logprob: -7.210554122924805
    10. '[' → logprob: -8.210554122924805

Token 1301: ' input' (ID: 3422)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1302: ' crossing' (ID: 50946)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.09872079640626907
    2. ')' → logprob: -2.9737207889556885
    3. 'or' → logprob: -3.8487207889556885
    4. ' and' → logprob: -4.598721027374268
    5. ' in' → logprob: -4.973721027374268
    6. 'and' → logprob: -6.473721027374268
    7. 'in' → logprob: -6.723721027374268
    8. ',' → logprob: -7.723721027374268
    9. '           ' → logprob: -7.723721027374268
    10. '<|end|>' → logprob: -8.59872055053711

Token 1303: ' (' (ID: 350)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.12336447834968567
    2. ')' → logprob: -2.6233644485473633
    3. 'or' → logprob: -3.8733644485473633
    4. ' and' → logprob: -4.123364448547363
    5. '<|end|>' → logprob: -6.373364448547363
    6. ',' → logprob: -6.623364448547363
    7. 'and' → logprob: -6.748364448547363
    8. '           ' → logprob: -7.123364448547363
    9. '[' → logprob: -8.873364448547363
    10. '
' → logprob: -8.873364448547363

Token 1304: 'Ai' (ID: 61169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7944726943969727
    2. ' or' → logprob: -1.0444726943969727
    3. '-' → logprob: -2.2944726943969727
    4. 'or' → logprob: -2.9194726943969727
    5. '#' → logprob: -4.919472694396973
    6. ''-' → logprob: -5.669472694396973
    7. '```' → logprob: -5.794472694396973
    8. '...' → logprob: -5.794472694396973
    9. ')-' → logprob: -5.919472694396973
    10. '<|end|>' → logprob: -5.919472694396973

Token 1305: ' stronger' (ID: 26929)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17680594325065613
    2. ')' → logprob: -3.0518059730529785
    3. '-)' → logprob: -3.1768059730529785
    4. ')-' → logprob: -3.8018059730529785
    5. '```' → logprob: -4.3018059730529785
    6. ''-' → logprob: -4.5518059730529785
    7. ' -' → logprob: -5.1768059730529785
    8. ' or' → logprob: -5.4268059730529785
    9. '-A' → logprob: -5.9268059730529785
    10. '
' → logprob: -6.5518059730529785

Token 1306: ' Ai' (ID: 58700)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.33965903520584106
    2. ')' → logprob: -1.7146589756011963
    3. '-)' → logprob: -3.0896589756011963
    4. '```' → logprob: -4.339659214019775
    5. ')-' → logprob: -4.589659214019775
    6. ',' → logprob: -4.839659214019775
    7. ' -' → logprob: -4.839659214019775
    8. ' or' → logprob: -5.714659214019775
    9. '-A' → logprob: -6.214659214019775
    10. ''-' → logprob: -6.339659214019775

Token 1307: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07491209357976913
    2. '+' → logprob: -2.8249120712280273
    3. '-A' → logprob: -5.324912071228027
    4. '```' → logprob: -5.574912071228027
    5. '-
' → logprob: -6.449912071228027
    6. ''-' → logprob: -7.699912071228027
    7. '+-' → logprob: -8.074912071228027
    8. '``' → logprob: -8.324912071228027
    9. ')-' → logprob: -8.449912071228027
    10. ')' → logprob: -8.449912071228027

Token 1308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '```' → logprob: -13.62500286102295
    3. '
' → logprob: -14.37500286102295
    4. '11' → logprob: -15.00000286102295
    5. '12' → logprob: -16.125001907348633
    6. '+' → logprob: -16.500001907348633
    7. '۱' → logprob: -16.812501907348633
    8. '...' → logprob: -16.875001907348633
    9. '15' → logprob: -17.187501907348633
    10. ' ' → logprob: -17.187501907348633

Token 1309: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008685601875185966
    2. ' or' → logprob: -5.38368558883667
    3. ')
' → logprob: -6.38368558883667
    4. '),' → logprob: -6.50868558883667
    5. ' )' → logprob: -8.508686065673828
    6. '')' → logprob: -8.508686065673828
    7. 'or' → logprob: -9.008686065673828
    8. '```' → logprob: -9.508686065673828
    9. '`)' → logprob: -10.258686065673828
    10. '           ' → logprob: -10.508686065673828

Token 1310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11448080837726593
    2. '#' → logprob: -2.98948073387146
    3. '
' → logprob: -3.36448073387146
    4. '           ' → logprob: -4.489480972290039
    5. ',' → logprob: -5.489480972290039
    6. ' or' → logprob: -5.739480972290039
    7. '<|end|>' → logprob: -6.989480972290039
    8. ')' → logprob: -7.239480972290039
    9. '```' → logprob: -7.614480972290039
    10. '   ' → logprob: -7.739480972290039

Token 1311: ' #' (ID: 1069)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.22716519236564636
    2. '           ' → logprob: -2.2271652221679688
    3. '       ' → logprob: -3.3521652221679688
    4. ')' → logprob: -3.9771652221679688
    5. ' and' → logprob: -4.477165222167969
    6. 'or' → logprob: -4.727165222167969
    7. '
' → logprob: -5.352165222167969
    8. ',' → logprob: -5.477165222167969
    9. '#' (adapté à ' #') → logprob: -5.727165222167969
    10. '<|end|>' → logprob: -6.352165222167969

Token 1312: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2639537453651428
    2. '#' → logprob: -2.388953685760498
    3. '       ' → logprob: -3.013953685760498
    4. '           ' → logprob: -3.263953685760498
    5. 'or' → logprob: -4.263953685760498
    6. '
' → logprob: -4.513953685760498
    7. '```' → logprob: -5.013953685760498
    8. 'adj' → logprob: -5.763953685760498
    9. ')' → logprob: -5.888953685760498
    10. ',' → logprob: -6.013953685760498

Token 1313: ' Ai' (ID: 58700)
  Prédit: ' Ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ai' → logprob: -0.15111058950424194
    2. 'Ai' → logprob: -2.0261106491088867
    3. '(A' → logprob: -5.276110649108887
    4. ' (' → logprob: -6.651110649108887
    5. ' ' → logprob: -7.651110649108887
    6. '
' → logprob: -8.026110649108887
    7. '#' → logprob: -8.151110649108887
    8. '(' → logprob: -8.901110649108887
    9. '       ' → logprob: -8.901110649108887
    10. ' A' → logprob: -9.151110649108887

Token 1314: ' and' (ID: 326)
  Prédit: '-A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-A' → logprob: -0.14906452596187592
    2. '-' → logprob: -2.649064540863037
    3. '+' → logprob: -2.774064540863037
    4. '-ai' → logprob: -5.774064540863037
    5. '```' → logprob: -7.649064540863037
    6. '
' → logprob: -8.274064064025879
    7. '-i' → logprob: -8.399064064025879
    8. '   ' → logprob: -8.649064064025879
    9. '+A' → logprob: -8.774064064025879
    10. '-I' → logprob: -8.899064064025879

Token 1315: ' Ai' (ID: 58700)
  Prédit: 'Ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ai' → logprob: -0.0009136092266999185
    2. ' Ai' → logprob: -7.000913619995117
    3. '
' → logprob: -14.000913619995117
    4. 'A' → logprob: -14.250913619995117
    5. '(A' → logprob: -15.375913619995117
    6. 'ai' → logprob: -16.000913619995117
    7. 'AI' → logprob: -16.125913619995117
    8. '```' → logprob: -16.750913619995117
    9. ' ' → logprob: -16.875913619995117
    10. '_ai' → logprob: -17.250913619995117

Token 1316: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.452426608419046e-05
    2. '+
' → logprob: -11.12503433227539
    3. '-' → logprob: -12.12503433227539
    4. '```' → logprob: -12.12503433227539
    5. '[' → logprob: -13.25003433227539
    6. '+i' → logprob: -13.50003433227539
    7. '+A' → logprob: -14.12503433227539
    8. 'plus' → logprob: -14.12503433227539
    9. '[i' → logprob: -14.50003433227539
    10. 'Plus' → logprob: -14.50003433227539

Token 1317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.050545766949653625
    2. '+' → logprob: -3.0505456924438477
    3. 'Ai' → logprob: -7.175545692443848
    4. 'plus' → logprob: -7.425545692443848
    5. 'Plus' → logprob: -8.675545692443848
    6. '```' → logprob: -8.925545692443848
    7. '
' → logprob: -9.300545692443848
    8. '`' → logprob: -10.863045692443848
    9. '+
' → logprob: -10.925545692443848
    10. '2' → logprob: -11.113045692443848

Token 1318: ' have' (ID: 679)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.078754186630249
    2. ' not' → logprob: -1.578754186630249
    3. ' are' → logprob: -1.703754186630249
    4. ' have' → logprob: -2.828754186630249
    5. '```' → logprob: -3.078754186630249
    6. '-A' → logprob: -3.453754186630249
    7. '-have' → logprob: -3.703754186630249
    8. ' in' → logprob: -3.828754186630249
    9. '
' → logprob: -4.328754425048828
    10. 'are' → logprob: -4.453754425048828

Token 1319: ' equal' (ID: 12629)
  Prédit: ' equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' equal' → logprob: -0.4947254955768585
    2. 'equal' → logprob: -1.1197254657745361
    3. ' an' → logprob: -3.994725465774536
    4. ' a' → logprob: -4.244725704193115
    5. 'a' → logprob: -4.744725704193115
    6. ' (' → logprob: -5.369725704193115
    7. '(' → logprob: -5.369725704193115
    8. 'an' → logprob: -5.619725704193115
    9. ' the' → logprob: -6.119725704193115
    10. '(equal' → logprob: -6.369725704193115

Token 1320: ' strength' (ID: 9386)
  Prédit: '_strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strength' → logprob: -0.16670501232147217
    2. 'strength' → logprob: -1.9167050123214722
    3. ' strength' → logprob: -5.666705131530762
    4. '_pairs' → logprob: -5.916705131530762
    5. '_relationship' → logprob: -9.541705131530762
    6. '```' → logprob: -9.541705131530762
    7. '_relation' → logprob: -9.666705131530762
    8. '
' → logprob: -10.166705131530762
    9. '_pair' → logprob: -11.666705131530762
    10. '-strength' → logprob: -11.666705131530762

Token 1321: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21846577525138855
    2. 'adj' → logprob: -1.968465805053711
    3. '       ' → logprob: -3.593465805053711
    4. '#' → logprob: -4.218465805053711
    5. '<|end|>' → logprob: -5.093465805053711
    6. '```' → logprob: -5.718465805053711
    7. ' adj' → logprob: -6.593465805053711
    8. 'edges' → logprob: -6.843465805053711
    9. 'for' → logprob: -8.343465805053711
    10. '
' → logprob: -8.968465805053711

Token 1322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2659704089164734
    2. '
' → logprob: -2.390970468521118
    3. '           ' → logprob: -2.390970468521118
    4. '<|end|>' → logprob: -5.015970230102539
    5. '\' → logprob: -5.390970230102539
    6. '#' → logprob: -5.390970230102539
    7. '```' → logprob: -5.640970230102539
    8. ')' → logprob: -5.765970230102539
    9. '   ' → logprob: -5.765970230102539
    10. '\n' → logprob: -6.015970230102539

Token 1323: ' #' (ID: 1069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.05744020268321037
    2. '       ' → logprob: -3.6824402809143066
    3. 'strong' → logprob: -4.807440280914307
    4. '#' (adapté à ' #') → logprob: -4.932440280914307
    5. 'edges' → logprob: -5.432440280914307
    6. '
' → logprob: -5.557440280914307
    7. 'graph' → logprob: -5.932440280914307
    8. ' adj' → logprob: -6.682440280914307
    9. '```' → logprob: -6.682440280914307
    10. '        
' → logprob: -7.932440280914307

Token 1324: ' equal' (ID: 12629)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.054903723299503326
    2. 'graph' → logprob: -4.429903507232666
    3. 'from' → logprob: -4.554903507232666
    4. '#' → logprob: -4.679903507232666
    5. 'out' → logprob: -5.179903507232666
    6. 'strong' → logprob: -5.429903507232666
    7. 'str' → logprob: -6.054903507232666
    8. 'edges' → logprob: -6.554903507232666
    9. '   ' → logprob: -6.804903507232666
    10. 'rev' → logprob: -6.929903507232666

Token 1325: ' strength' (ID: 9386)
  Prédit: '_strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_strength' → logprob: -0.7479162216186523
    2. '_edges' → logprob: -1.4979162216186523
    3. '_pairs' → logprob: -2.2479162216186523
    4. '_neighbors' → logprob: -2.6229162216186523
    5. '_rel' → logprob: -3.2479162216186523
    6. '_set' → logprob: -3.8729162216186523
    7. '_sets' → logprob: -4.372916221618652
    8. 'strength' → logprob: -4.497916221618652
    9. '_adj' → logprob: -4.747916221618652
    10. '
' → logprob: -4.997916221618652

Token 1326: ' means' (ID: 4748)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.6570301055908203
    2. ' =' → logprob: -1.9070301055908203
    3. 'edges' → logprob: -3.1570301055908203
    4. '
' → logprob: -3.4070301055908203
    5. '_neighbors' → logprob: -3.4070301055908203
    6. '_adj' → logprob: -3.4070301055908203
    7. '<|end|>' → logprob: -3.4070301055908203
    8. '=' → logprob: -3.6570301055908203
    9. 'adj' → logprob: -3.6570301055908203
    10. '_graph' → logprob: -3.6570301055908203

Token 1327: ' in' (ID: 306)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -1.0125876665115356
    2. '#' → logprob: -2.012587547302246
    3. 'edges' → logprob: -2.262587547302246
    4. '<|end|>' → logprob: -2.637587547302246
    5. 'adj' → logprob: -2.762587547302246
    6. ' edges' → logprob: -3.137587547302246
    7. 'union' → logprob: -3.637587547302246
    8. 'neighbors' → logprob: -3.887587547302246
    9. ' equal' → logprob: -4.012587547302246
    10. 'for' → logprob: -4.012587547302246

Token 1328: ' same' (ID: 2684)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -1.5179542303085327
    2. 'the' → logprob: -2.2679543495178223
    3. 'parent' → logprob: -2.3929543495178223
    4. 'input' → logprob: -2.6429543495178223
    5. 'union' → logprob: -2.7679543495178223
    6. '[' → logprob: -3.1429543495178223
    7. 'same' → logprob: -3.1429543495178223
    8. 'edges' → logprob: -3.2679543495178223
    9. 'adj' → logprob: -3.2679543495178223
    10. '```' → logprob: -3.2679543495178223

Token 1329: ' union' (ID: 22208)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.543429970741272
    2. 'parent' → logprob: -1.918429970741272
    3. 'union' → logprob: -2.0434298515319824
    4. 'set' → logprob: -2.6684298515319824
    5. 'group' → logprob: -3.7934298515319824
    6. '[parent' → logprob: -4.293429851531982
    7. 'class' → logprob: -5.043429851531982
    8. '=' → logprob: -5.043429851531982
    9. ' =' → logprob: -5.168429851531982
    10. '
' → logprob: -5.293429851531982

Token 1330: '-find' (ID: 168817)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.06570370495319366
    2. '#' → logprob: -3.9407036304473877
    3. '       ' → logprob: -4.065703868865967
    4. 'strong' → logprob: -5.190703868865967
    5. 'graph' → logprob: -5.440703868865967
    6. '
' → logprob: -5.815703868865967
    7. 'from' → logprob: -5.940703868865967
    8. 'edges' → logprob: -6.190703868865967
    9. ' adj' → logprob: -6.440703868865967
    10. '   ' → logprob: -6.815703868865967

Token 1331: ' set' (ID: 920)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.10335977375507355
    2. '#' → logprob: -3.2283596992492676
    3. 'strong' → logprob: -3.6033596992492676
    4. 'graph' → logprob: -4.603359699249268
    5. 'str' → logprob: -5.103359699249268
    6. 'out' → logprob: -5.103359699249268
    7. 'edges' → logprob: -6.478359699249268
    8. 'from' → logprob: -6.853359699249268
    9. 'greater' → logprob: -6.853359699249268
    10. 'for' → logprob: -7.228359699249268

Token 1332: '
' (ID: 198)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0736883357167244
    2. '#' → logprob: -3.448688268661499
    3. 'strong' → logprob: -4.323688507080078
    4. 'graph' → logprob: -5.198688507080078
    5. 'from' → logprob: -5.448688507080078
    6. '       ' → logprob: -5.698688507080078
    7. 'edges' → logprob: -5.698688507080078
    8. ' adj' → logprob: -7.448688507080078
    9. 'next' → logprob: -7.698688507080078
    10. 'class' → logprob: -7.823688507080078

Token 1333: '       ' (ID: 309)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5187608599662781
    2. '       ' → logprob: -1.5187609195709229
    3. '
' → logprob: -2.143760919570923
    4. '#' → logprob: -3.518760919570923
    5. 'edges' → logprob: -4.143760681152344
    6. '```' → logprob: -5.143760681152344
    7. 'strong' → logprob: -5.518760681152344
    8. ' adj' → logprob: -5.643760681152344
    9. '        
' → logprob: -6.393760681152344
    10. '   ' → logprob: -6.768760681152344

Token 1334: ' #' (ID: 1069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.048351600766181946
    2. 'graph' → logprob: -4.548351764678955
    3. 'for' → logprob: -4.673351764678955
    4. 'strong' → logprob: -4.923351764678955
    5. '#' (adapté à ' #') → logprob: -5.048351764678955
    6. 'edges' → logprob: -5.673351764678955
    7. '       ' → logprob: -6.673351764678955
    8. '   ' → logprob: -6.673351764678955
    9. '
' → logprob: -6.798351764678955
    10. 'next' → logprob: -7.048351764678955

Token 1335: ' Build' (ID: 10885)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.06290831416845322
    2. 'strong' → logprob: -3.312908411026001
    3. 'graph' → logprob: -4.687908172607422
    4. 'from' → logprob: -5.062908172607422
    5. '#' → logprob: -5.812908172607422
    6. 'str' → logprob: -6.062908172607422
    7. 'out' → logprob: -6.937908172607422
    8. 'edges' → logprob: -8.062908172607422
    9. '```' → logprob: -8.187908172607422
    10. 'reverse' → logprob: -8.562908172607422

Token 1336: ' graph' (ID: 7465)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.9796616435050964
    2. 'graph' → logprob: -1.2296617031097412
    3. 'adj' → logprob: -1.3546617031097412
    4. 'from' → logprob: -3.729661703109741
    5. 'str' → logprob: -4.229661464691162
    6. 'equal' → logprob: -5.104661464691162
    7. 'uf' → logprob: -5.354661464691162
    8. 'gr' → logprob: -5.354661464691162
    9. 'direct' → logprob: -5.729661464691162
    10. 'dir' → logprob: -5.979661464691162

Token 1337: ' of' (ID: 328)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.4460500180721283
    2. 'graph' → logprob: -1.5710500478744507
    3. 'adj' → logprob: -2.446049928665161
    4. 'str' → logprob: -3.821049928665161
    5. 'from' → logprob: -4.69605016708374
    6. 'uf' → logprob: -4.94605016708374
    7. 'equal' → logprob: -4.94605016708374
    8. 'gr' → logprob: -5.32105016708374
    9. 'g' → logprob: -5.44605016708374
    10. '```' → logprob: -6.69605016708374

Token 1338: ' stronger' (ID: 26929)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -1.0261714458465576
    2. 'adj' → logprob: -1.1511714458465576
    3. 'edges' → logprob: -1.4011714458465576
    4. 'strong' → logprob: -4.026171684265137
    5. 'u' → logprob: -4.401171684265137
    6. 'neighbors' → logprob: -4.901171684265137
    7. 'direct' → logprob: -5.151171684265137
    8. 'union' → logprob: -5.401171684265137
    9. 'cross' → logprob: -5.651171684265137
    10. ' edges' → logprob: -5.651171684265137

Token 1339: ' relation' (ID: 18075)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1253918409347534
    2. '_adj' → logprob: -1.3753918409347534
    3. 'adj' → logprob: -1.6253918409347534
    4. ' =' → logprob: -2.000391960144043
    5. '_edges' → logprob: -3.125391960144043
    6. 'edges' → logprob: -4.125391960144043
    7. '_str' → logprob: -4.875391960144043
    8. '_strength' → logprob: -5.250391960144043
    9. 'strength' → logprob: -5.375391960144043
    10. '```' → logprob: -5.625391960144043

Token 1340: ':
' (ID: 734)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.06495707482099533
    2. 'adj' → logprob: -3.4399571418762207
    3. 'graph' → logprob: -4.689957141876221
    4. 'str' → logprob: -4.814957141876221
    5. 'from' → logprob: -6.064957141876221
    6. '
' → logprob: -6.439957141876221
    7. 'g' → logprob: -6.439957141876221
    8. 'equal' → logprob: -6.564957141876221
    9. '```' → logprob: -6.564957141876221
    10. 'gr' → logprob: -6.939957141876221

Token 1341: '       ' (ID: 309)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.9242967367172241
    2. 'adj' → logprob: -1.1742967367172241
    3. 'graph' → logprob: -1.6742967367172241
    4. 'g' → logprob: -2.9242968559265137
    5. ' adj' → logprob: -4.424296855926514
    6. 'gr' → logprob: -4.924296855926514
    7. '```' → logprob: -5.174296855926514
    8. 'edges' → logprob: -5.424296855926514
    9. ' stronger' → logprob: -5.549296855926514
    10. 'from' → logprob: -5.674296855926514

Token 1342: ' #' (ID: 1069)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.21313653886318207
    2. 'adj' → logprob: -2.0881364345550537
    3. 'str' → logprob: -3.7131364345550537
    4. 'graph' → logprob: -3.8381364345550537
    5. 'from' → logprob: -4.963136672973633
    6. 'g' → logprob: -5.463136672973633
    7. 'sg' → logprob: -5.588136672973633
    8. 's' → logprob: -6.588136672973633
    9. 'gr' → logprob: -6.963136672973633
    10. '```' → logprob: -7.213136672973633

Token 1343: ' edges' (ID: 22569)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.10308992117643356
    2. 'adj' → logprob: -3.3530898094177246
    3. 'str' → logprob: -3.7280898094177246
    4. 'graph' → logprob: -3.7280898094177246
    5. 'from' → logprob: -4.853089809417725
    6. 'uf' → logprob: -6.978089809417725
    7. 'g' → logprob: -6.978089809417725
    8. 'direct' → logprob: -7.103089809417725
    9. 'strength' → logprob: -7.228089809417725
    10. '```' → logprob: -7.603089809417725

Token 1344: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03282652422785759
    2. ' =' → logprob: -4.5328264236450195
    3. 'for' → logprob: -5.0328264236450195
    4. 'from' → logprob: -5.5328264236450195
    5. '.extend' → logprob: -5.6578264236450195
    6. '.clear' → logprob: -6.0328264236450195
    7. '.update' → logprob: -6.2828264236450195
    8. '.' → logprob: -7.1578264236450195
    9. '=[]' → logprob: -7.5328264236450195
    10. '=
' → logprob: -7.5328264236450195

Token 1345: 'A' (ID: 32)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8487284183502197
    2. ')' → logprob: -1.2237284183502197
    3. 'A' → logprob: -1.7237284183502197
    4. '(u' → logprob: -3.3487284183502197
    5. '
' → logprob: -3.7237284183502197
    6. ')
' → logprob: -4.848728179931641
    7. '(A' → logprob: -5.473728179931641
    8. 'B' → logprob: -5.848728179931641
    9. 'for' → logprob: -5.973728179931641
    10. '[])' → logprob: -6.223728179931641

Token 1346: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15649574995040894
    2. ')' → logprob: -3.6564958095550537
    3. ',u' → logprob: -3.6564958095550537
    4. '
' → logprob: -4.281495571136475
    5. ',)' → logprob: -4.281495571136475
    6. ',v' → logprob: -4.656495571136475
    7. 's' → logprob: -4.906495571136475
    8. '=' → logprob: -5.031495571136475
    9. ',B' → logprob: -5.156495571136475
    10. 'for' → logprob: -5.156495571136475

Token 1347: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0015491410158574581
    2. 'A' → logprob: -6.751549243927002
    3. 'v' → logprob: -8.751548767089844
    4. 'u' → logprob: -9.376548767089844
    5. ' B' → logprob: -10.001548767089844
    6. 'a' → logprob: -10.376548767089844
    7. ')' → logprob: -11.001548767089844
    8. '```' → logprob: -11.376548767089844
    9. '
' → logprob: -11.876548767089844
    10. 'b' → logprob: -12.876548767089844

Token 1348: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0312618650496006
    2. 'for' → logprob: -4.281261920928955
    3. ' =' → logprob: -5.781261920928955
    4. ',' → logprob: -5.906261920928955
    5. ')
' → logprob: -6.031261920928955
    6. ' for' → logprob: -6.656261920928955
    7. '
' → logprob: -6.906261920928955
    8. ' in' → logprob: -6.906261920928955
    9. ').' → logprob: -7.031261920928955
    10. '):' → logprob: -7.156261920928955

Token 1349: ' if' (ID: 538)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4684561491012573
    2. '=' → logprob: -1.4684561491012573
    3. 'for' → logprob: -2.093456268310547
    4. 'from' → logprob: -4.343456268310547
    5. '=
' → logprob: -6.343456268310547
    6. '```' → logprob: -6.468456268310547
    7. ' for' → logprob: -6.968456268310547
    8. '
' → logprob: -7.218456268310547
    9. '=[]
' → logprob: -7.843456268310547
    10. '=[]' → logprob: -8.468456268310547

Token 1350: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.20489530265331268
    2. '(B' → logprob: -1.704895257949829
    3. '(' → logprob: -7.204895496368408
    4. 'A' → logprob: -7.204895496368408
    5. 'B' → logprob: -7.329895496368408
    6. ' (' → logprob: -7.579895496368408
    7. 'cross' → logprob: -7.704895496368408
    8. '(a' → logprob: -9.45489501953125
    9. '
' → logprob: -10.07989501953125
    10. 'color' → logprob: -10.20489501953125

Token 1351: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06241408362984657
    2. '(A' → logprob: -3.3124141693115234
    3. 'B' → logprob: -3.8124141693115234
    4. '(B' → logprob: -6.937414169311523
    5. ' (' → logprob: -8.312414169311523
    6. ' A' → logprob: -8.437414169311523
    7. '(' → logprob: -8.562414169311523
    8. '(u' → logprob: -9.437414169311523
    9. 'cross' → logprob: -9.562414169311523
    10. 'a' → logprob: -9.812414169311523

Token 1352: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.02713424153625965
    2. ',' → logprob: -4.152134418487549
    3. ',A' → logprob: -4.652134418487549
    4. ',
' → logprob: -8.02713394165039
    5. '
' → logprob: -8.52713394165039
    6. ',b' → logprob: -8.77713394165039
    7. '```' → logprob: -9.02713394165039
    8. ',I' → logprob: -9.40213394165039
    9. ',O' → logprob: -9.52713394165039
    10. ')' → logprob: -9.65213394165039

Token 1353: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003113068640232086
    2. 'in' → logprob: -5.878113269805908
    3. '
' → logprob: -8.62811279296875
    4. '[' → logprob: -9.87811279296875
    5. ' in' → logprob: -10.50311279296875
    6. ')
' → logprob: -11.00311279296875
    7. ' )' → logprob: -11.87811279296875
    8. '   ' → logprob: -12.87811279296875
    9. 'In' → logprob: -13.25311279296875
    10. '_in' → logprob: -13.37811279296875

Token 1354: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.356019526720047
    2. ' in' → logprob: -1.2310194969177246
    3. ')' → logprob: -6.231019496917725
    4. '
' → logprob: -6.606019496917725
    5. '           ' → logprob: -6.981019496917725
    6. '<|end|>' → logprob: -7.106019496917725
    7. '<|end|>' → logprob: -7.356019496917725
    8. '.' → logprob: -7.731019496917725
    9. '=' → logprob: -8.106019973754883
    10. '       ' → logprob: -9.106019973754883

Token 1355: ' input' (ID: 3422)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.20154421031475067
    2. 'edges' → logprob: -1.701544165611267
    3. ' edges' → logprob: -9.826543807983398
    4. '
' → logprob: -10.201543807983398
    5. ' cross' → logprob: -10.326543807983398
    6. '```' → logprob: -12.451543807983398
    7. 'edge' → logprob: -13.951543807983398
    8. '(edges' → logprob: -14.451543807983398
    9. '`' → logprob: -14.701543807983398
    10. '``' → logprob: -14.701543807983398

Token 1356: ' crossing' (ID: 50946)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3643840551376343
    2. '
' → logprob: -1.4893840551376343
    3. 'adj' → logprob: -2.989384174346924
    4. 'edges' → logprob: -4.114384174346924
    5. '        
' → logprob: -5.364384174346924
    6. '```' → logprob: -5.989384174346924
    7. 'for' → logprob: -6.489384174346924
    8. 'graph' → logprob: -6.739384174346924
    9. '#' → logprob: -6.989384174346924
    10. '   ' → logprob: -7.614384174346924

Token 1357: ' (' (ID: 350)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.8554175496101379
    2. '       ' → logprob: -1.1054174900054932
    3. '
' → logprob: -1.4804174900054932
    4. 'edges' → logprob: -5.605417728424072
    5. 'for' → logprob: -5.730417728424072
    6. '```' → logprob: -6.105417728424072
    7. ' adj' → logprob: -6.355417728424072
    8. 'graph' → logprob: -6.605417728424072
    9. '        
' → logprob: -6.605417728424072
    10. '   ' → logprob: -7.105417728424072

Token 1358: 'A' (ID: 32)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7429906129837036
    2. 'cross' → logprob: -0.8679906129837036
    3. ' cross' → logprob: -3.367990493774414
    4. 'edges' → logprob: -4.367990493774414
    5. ')
' → logprob: -4.492990493774414
    6. '       ' → logprob: -4.867990493774414
    7. ' and' → logprob: -5.367990493774414
    8. ' or' → logprob: -5.492990493774414
    9. 'or' → logprob: -5.617990493774414
    10. '   ' → logprob: -5.617990493774414

Token 1359: ' stronger' (ID: 26929)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.637261688709259
    2. ',' → logprob: -1.8872616291046143
    3. ' in' → logprob: -2.1372616291046143
    4. 'in' → logprob: -3.0122616291046143
    5. '),' → logprob: -3.7622616291046143
    6. ')-' → logprob: -3.8872616291046143
    7. ',B' → logprob: -4.012261867523193
    8. '
' → logprob: -4.137261867523193
    9. ',
' → logprob: -4.387261867523193
    10. '->' → logprob: -4.637261867523193

Token 1360: ' B' (ID: 418)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042254965752363205
    2. ',' → logprob: -3.66725492477417
    3. '),' → logprob: -5.04225492477417
    4. ')
' → logprob: -5.91725492477417
    5. ',A' → logprob: -6.54225492477417
    6. ')_' → logprob: -7.16725492477417
    7. '))' → logprob: -7.66725492477417
    8. ',B' → logprob: -7.66725492477417
    9. '```' → logprob: -8.292255401611328
    10. '_edges' → logprob: -8.417255401611328

Token 1361: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007608040235936642
    2. ' or' → logprob: -5.257607936859131
    3. ')
' → logprob: -6.507607936859131
    4. '),' → logprob: -8.257608413696289
    5. ' and' → logprob: -9.007608413696289
    6. ').' → logprob: -9.382608413696289
    7. '       ' → logprob: -9.632608413696289
    8. 'or' → logprob: -10.132608413696289
    9. ' )' → logprob: -10.132608413696289
    10. '):
' → logprob: -10.382608413696289

Token 1362: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7288063168525696
    2. 'for' → logprob: -0.7288063168525696
    3. ' for' → logprob: -4.103806495666504
    4. '```' → logprob: -4.478806495666504
    5. '       ' → logprob: -5.853806495666504
    6. 'edges' → logprob: -6.478806495666504
    7. '<|end|>' → logprob: -7.353806495666504
    8. '
' → logprob: -7.728806495666504
    9. ')' → logprob: -8.228806495666504
    10. '        
' → logprob: -8.228806495666504

Token 1363: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.53180330991745
    2. 'for' → logprob: -1.4068033695220947
    3. '       ' → logprob: -2.5318033695220947
    4. '```' → logprob: -3.2818033695220947
    5. 'adj' → logprob: -3.4068033695220947
    6. '<|end|>' → logprob: -5.281803131103516
    7. '        
' → logprob: -5.531803131103516
    8. ' for' → logprob: -5.531803131103516
    9. '
' → logprob: -7.281803131103516
    10. '#' (adapté à ' #') → logprob: -7.281803131103516

Token 1364: ' For' (ID: 2214)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6310879588127136
    2. 'strong' → logprob: -1.0060880184173584
    3. 'graph' → logprob: -2.8810880184173584
    4. 'str' → logprob: -3.8810880184173584
    5. 'from' → logprob: -4.881087779998779
    6. 'g' → logprob: -5.756087779998779
    7. '   ' → logprob: -5.756087779998779
    8. '#' → logprob: -6.006087779998779
    9. 'edges' → logprob: -6.381087779998779
    10. 'for' → logprob: -6.631087779998779

Token 1365: ' equal' (ID: 12629)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.44593408703804016
    2. 'u' → logprob: -1.3209340572357178
    3. 'i' → logprob: -3.3209340572357178
    4. '_' → logprob: -4.945934295654297
    5. 's' → logprob: -4.945934295654297
    6. 'B' → logprob: -4.945934295654297
    7. ' u' → logprob: -5.195934295654297
    8. ' A' → logprob: -5.320934295654297
    9. '
' → logprob: -5.570934295654297
    10. 'v' → logprob: -5.695934295654297

Token 1366: ' strength' (ID: 9386)
  Prédit: 'strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strength' → logprob: -0.11928210407495499
    2. '_strength' → logprob: -2.9942820072174072
    3. '       ' → logprob: -4.744282245635986
    4. '_set' → logprob: -4.869282245635986
    5. '   ' → logprob: -5.119282245635986
    6. '```' → logprob: -5.244282245635986
    7. '_edges' → logprob: -5.369282245635986
    8. ' strength' → logprob: -5.494282245635986
    9. '_out' → logprob: -5.494282245635986
    10. '``' → logprob: -5.869282245635986

Token 1367: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.180255651473999
    2. 'edges' → logprob: -1.805255651473999
    3. '#' → logprob: -1.930255651473999
    4. 's' → logprob: -2.055255651473999
    5. 'pairs' → logprob: -2.555255651473999
    6. ',' → logprob: -3.305255651473999
    7. '
' → logprob: -3.805255651473999
    8. 'sets' → logprob: -4.055255889892578
    9. 'relations' → logprob: -4.180255889892578
    10. 'groups' → logprob: -4.180255889892578

Token 1368: ' treat' (ID: 4665)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4803425073623657
    2. '#' → logprob: -1.3553425073623657
    3. 'uf' → logprob: -2.980342388153076
    4. 'graph' → logprob: -3.855342388153076
    5. 'from' → logprob: -4.230342388153076
    6. 'adj' → logprob: -4.980342388153076
    7. 'equal' → logprob: -5.105342388153076
    8. 'edges' → logprob: -5.480342388153076
    9. 'strong' → logprob: -5.605342388153076
    10. 'g' → logprob: -5.980342388153076

Token 1369: ' A' (ID: 355)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -1.7990530729293823
    2. 'edges' → logprob: -1.9240530729293823
    3. 'both' → logprob: -2.049053192138672
    4. 'u' → logprob: -2.174053192138672
    5. 'them' → logprob: -2.174053192138672
    6. 'all' → logprob: -2.674053192138672
    7. 'A' → logprob: -3.049053192138672
    8. 'each' → logprob: -3.299053192138672
    9. '(A' → logprob: -3.299053192138672
    10. '   ' → logprob: -3.424053192138672

Token 1370: ',B' (ID: 19853)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6760623455047607
    2. ' and' → logprob: -1.3010623455047607
    3. 's' → logprob: -2.6760623455047607
    4. 'nd' → logprob: -2.9260623455047607
    5. ',' → logprob: -3.0510623455047607
    6. '==' → logprob: -4.80106258392334
    7. '=' → logprob: -5.42606258392334
    8. '
' → logprob: -5.55106258392334
    9. ',B' → logprob: -5.80106258392334
    10. ')' → logprob: -5.80106258392334

Token 1371: ' same' (ID: 2684)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -1.1573742628097534
    2. 'in' → logprob: -1.7823742628097534
    3. ' in' → logprob: -1.9073742628097534
    4. ')' → logprob: -1.9073742628097534
    5. 'as' → logprob: -2.532374382019043
    6. '
' → logprob: -3.032374382019043
    7. '   ' → logprob: -4.032374382019043
    8. ',' → logprob: -4.157374382019043
    9. 'and' → logprob: -4.407374382019043
    10. '=' → logprob: -4.532374382019043

Token 1372: ' level' (ID: 3211)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48003098368644714
    2. '       ' → logprob: -1.4800310134887695
    3. 'adj' → logprob: -2.2300310134887695
    4. '```' → logprob: -3.9800310134887695
    5. 'edges' → logprob: -4.9800310134887695
    6. 'graph' → logprob: -5.6050310134887695
    7. '        
' → logprob: -5.9800310134887695
    8. '
' → logprob: -5.9800310134887695
    9. '#' → logprob: -5.9800310134887695
    10. '

' → logprob: -6.1050310134887695

Token 1373: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8714208602905273
    2. '       ' → logprob: -1.2464208602905273
    3. 'adj' → logprob: -1.3714208602905273
    4. 'edges' → logprob: -4.496420860290527
    5. '#' → logprob: -5.121420860290527
    6. 'for' → logprob: -5.121420860290527
    7. 'graph' → logprob: -5.496420860290527
    8. ' adj' → logprob: -5.746420860290527
    9. '```' → logprob: -5.871420860290527
    10. '        
' → logprob: -6.246420860290527

Token 1374: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04209873080253601
    2. '
' → logprob: -3.9170987606048584
    3. '       ' → logprob: -4.542098522186279
    4. '```' → logprob: -5.417098522186279
    5. 'adj' → logprob: -5.917098522186279
    6. 'import' → logprob: -7.167098522186279
    7. ' #' → logprob: -7.917098522186279
    8. 'so' → logprob: -8.417098999023438
    9. 'edges' → logprob: -8.417098999023438
    10. 'for' → logprob: -8.792098999023438

Token 1375: ' we' (ID: 581)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8696343302726746
    2. 'for' → logprob: -1.3696343898773193
    3. '
' → logprob: -1.8696343898773193
    4. 'adj' → logprob: -2.8696343898773193
    5. '#' → logprob: -4.24463415145874
    6. ' from' → logprob: -4.49463415145874
    7. 'levels' → logprob: -4.61963415145874
    8. ' for' → logprob: -4.61963415145874
    9. 'uf' → logprob: -4.74463415145874
    10. 'level' → logprob: -4.86963415145874

Token 1376: ' shrink' (ID: 53969)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9423320889472961
    2. 'from' → logprob: -2.5673320293426514
    3. 'can' → logprob: -2.8173320293426514
    4. 'for' → logprob: -2.9423320293426514
    5. 'will' → logprob: -3.0673320293426514
    6. 'represent' → logprob: -3.0673320293426514
    7. '
' → logprob: -3.1923320293426514
    8. 'need' → logprob: -3.1923320293426514
    9. 'use' → logprob: -3.5673320293426514
    10. 'build' → logprob: -4.0673322677612305

Token 1377: ' equal' (ID: 12629)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1378: ' strength' (ID: 9386)
  Prédit: '_strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_strength' → logprob: -0.5716708302497864
    2. '_set' → logprob: -2.1966707706451416
    3. '_classes' → logprob: -2.3216707706451416
    4. '_sets' → logprob: -2.3216707706451416
    5. '_nodes' → logprob: -3.8216707706451416
    6. '_pairs' → logprob: -3.9466707706451416
    7. '_class' → logprob: -3.9466707706451416
    8. '_groups' → logprob: -4.321671009063721
    9. '_union' → logprob: -4.446671009063721
    10. '_rel' → logprob: -4.821671009063721

Token 1379: ' classes' (ID: 9778)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4769689738750458
    2. '<|end|>' → logprob: -1.4769690036773682
    3. '```' → logprob: -2.976969003677368
    4. '#' → logprob: -3.601969003677368
    5. ')' → logprob: -3.976969003677368
    6. 's' → logprob: -4.976968765258789
    7. 'import' → logprob: -4.976968765258789
    8. ' edges' → logprob: -5.226968765258789
    9. '<|end|>' → logprob: -5.351968765258789
    10. 'edges' → logprob: -6.101968765258789

Token 1380: ' into' (ID: 1511)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9834443926811218
    2. '#' → logprob: -1.2334444522857666
    3. '       ' → logprob: -2.6084444522857666
    4. 'rep' → logprob: -2.7334444522857666
    5. 'class' → logprob: -2.8584444522857666
    6. 'group' → logprob: -3.7334444522857666
    7. '

' → logprob: -3.9834444522857666
    8. 'uf' → logprob: -4.1084442138671875
    9. '        
' → logprob: -4.7334442138671875
    10. 'represent' → logprob: -4.8584442138671875

Token 1381: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.048446547240018845
    2. 'single' → logprob: -4.1734466552734375
    3. 'union' → logprob: -4.9234466552734375
    4. 'one' → logprob: -5.0484466552734375
    5. 'a' → logprob: -5.5484466552734375
    6. 'components' → logprob: -5.6734466552734375
    7. 'represent' → logprob: -5.7984466552734375
    8. 'vertices' → logprob: -5.7984466552734375
    9. 'sets' → logprob: -5.9234466552734375
    10. 'parent' → logprob: -6.9234466552734375

Token 1382: ':

' (ID: 1402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7047761678695679
    2. '
' → logprob: -1.8297761678695679
    3. 'import' → logprob: -2.4547762870788574
    4. 'class' → logprob: -2.4547762870788574
    5. 'from' → logprob: -2.9547762870788574
    6. 'union' → logprob: -3.9547762870788574
    7. '```' → logprob: -4.329776287078857
    8. '       ' → logprob: -4.454776287078857
    9. '

' → logprob: -4.579776287078857
    10. 'compressed' → logprob: -4.579776287078857

Token 1383: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.087011694908142
    2. '#' → logprob: -1.212011694908142
    3. 'class' → logprob: -2.2120118141174316
    4. '       ' → logprob: -2.5870118141174316
    5. 'uf' → logprob: -3.5870118141174316
    6. '```' → logprob: -3.8370118141174316
    7. 'from' → logprob: -3.9620118141174316
    8. 'union' → logprob: -4.337011814117432
    9. 'group' → logprob: -4.462011814117432
    10. 'components' → logprob: -4.587011814117432

Token 1384: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.8289194107055664
    2. 'uf' → logprob: -1.9539194107055664
    3. 'class' → logprob: -2.0789194107055664
    4. '#' (adapté à ' #') → logprob: -2.0789194107055664
    5. 'rep' → logprob: -2.3289194107055664
    6. 'group' → logprob: -2.5789194107055664
    7. ' uf' → logprob: -2.5789194107055664
    8. ' from' → logprob: -3.4539194107055664
    9. 'comp' → logprob: -3.4539194107055664
    10. ' comp' → logprob: -4.078919410705566

Token 1385: ' Build' (ID: 10885)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -1.2970046997070312
    2. '#' → logprob: -1.4220046997070312
    3. 'rep' → logprob: -1.6720046997070312
    4. 'from' → logprob: -2.2970046997070312
    5. 'group' → logprob: -3.0470046997070312
    6. 'class' → logprob: -3.0470046997070312
    7. 'comp' → logprob: -3.7970046997070312
    8. '       ' → logprob: -4.297004699707031
    9. 'id' → logprob: -4.422004699707031
    10. 'repr' → logprob: -4.422004699707031

Token 1386: ' node' (ID: 4596)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8979769349098206
    2. 'graph' → logprob: -1.2729768753051758
    3. 'uf' → logprob: -2.147976875305176
    4. 'rep' → logprob: -3.147976875305176
    5. 'group' → logprob: -3.272976875305176
    6. 'class' → logprob: -3.397976875305176
    7. 'comp' → logprob: -3.522976875305176
    8. 'adj' → logprob: -4.772976875305176
    9. 'grp' → logprob: -5.022976875305176
    10. 'g' → logprob: -5.397976875305176

Token 1387: ' for' (ID: 395)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.17395669221878052
    2. '_id' → logprob: -3.1739566326141357
    3. '_to' → logprob: -3.2989566326141357
    4. '_parent' → logprob: -4.298956871032715
    5. 's' → logprob: -4.798956871032715
    6. '2' → logprob: -4.923956871032715
    7. '_mapping' → logprob: -4.923956871032715
    8. '_repr' → logprob: -5.048956871032715
    9. '_cnt' → logprob: -5.298956871032715
    10. '_par' → logprob: -5.423956871032715

Token 1388: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.048015911132097244
    2. 'parent' → logprob: -3.798015832901001
    3. 'union' → logprob: -3.798015832901001
    4. ' each' → logprob: -6.79801607131958
    5. 'class' → logprob: -8.298015594482422
    6. 'parents' → logprob: -9.298015594482422
    7. ' parent' → logprob: -9.673015594482422
    8. 'for' → logprob: -9.673015594482422
    9. 'classes' → logprob: -10.173015594482422
    10. 'equal' → logprob: -10.173015594482422

Token 1389: ' union' (ID: 22208)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.1161559596657753
    2. 'union' → logprob: -3.2411558628082275
    3. 'uf' → logprob: -3.3661558628082275
    4. ' parent' → logprob: -4.866156101226807
    5. 'class' → logprob: -5.116156101226807
    6. 'node' → logprob: -5.616156101226807
    7. 'u' → logprob: -5.866156101226807
    8. '```' → logprob: -6.241156101226807
    9. 'root' → logprob: -6.366156101226807
    10. 'component' → logprob: -6.491156101226807

Token 1390: '-find' (ID: 168817)
  Prédit: '_find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_find' → logprob: -0.23564356565475464
    2. 'find' → logprob: -2.2356436252593994
    3. '-find' → logprob: -2.7356436252593994
    4. '_parent' → logprob: -4.48564338684082
    5. '[
' → logprob: -4.86064338684082
    6. 'parent' → logprob: -5.86064338684082
    7. '_' → logprob: -6.23564338684082
    8. '_f' → logprob: -6.36064338684082
    9. '[-' → logprob: -6.48564338684082
    10. '
' → logprob: -6.48564338684082

Token 1391: ' class' (ID: 744)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.3124069273471832
    2. '[
' → logprob: -2.0624070167541504
    3. 'u' → logprob: -3.1874070167541504
    4. ')' → logprob: -3.6874070167541504
    5. '(u' → logprob: -4.31240701675415
    6. '
' → logprob: -4.93740701675415
    7. '[' → logprob: -4.93740701675415
    8. 'parent' → logprob: -5.06240701675415
    9. ' u' → logprob: -5.31240701675415
    10. ' =' → logprob: -5.43740701675415

Token 1392: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6380772590637207
    2. '
' → logprob: -1.0130772590637207
    3. 'class' → logprob: -3.0130772590637207
    4. '=' → logprob: -3.8880772590637207
    5. 'classes' → logprob: -4.513077259063721
    6. '       ' → logprob: -5.763077259063721
    7. '```' → logprob: -5.888077259063721
    8. 'uf' → logprob: -6.013077259063721
    9. 'size' → logprob: -6.263077259063721
    10. 'parent' → logprob: -6.388077259063721

Token 1393: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3816889822483063
    2. ' =' → logprob: -1.6316889524459839
    3. '```' → logprob: -3.5066890716552734
    4. 'parent' → logprob: -3.7566890716552734
    5. '=' → logprob: -4.631689071655273
    6. 'union' → logprob: -5.256689071655273
    7. '`' → logprob: -5.506689071655273
    8. 'class' → logprob: -5.506689071655273
    9. ',' → logprob: -5.506689071655273
    10. 'nodes' → logprob: -5.756689071655273

Token 1394: ' comp' (ID: 1050)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3801491856575012
    2. 'uf' → logprob: -1.5051491260528564
    3. 'rep' → logprob: -3.5051491260528564
    4. 'comp' (adapté à ' comp') → logprob: -3.6301491260528564
    5. 'group' → logprob: -4.0051493644714355
    6. 'id' → logprob: -4.8801493644714355
    7. 'classes' → logprob: -6.0051493644714355
    8. 'from' → logprob: -6.1301493644714355
    9. 'node' → logprob: -6.2551493644714355
    10. 'ufs' → logprob: -6.7551493644714355

Token 1395: ' =' (ID: 314)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.3151936531066895
    2. ' =' → logprob: -1.5651936531066895
    3. '_ids' → logprob: -2.3151936531066895
    4. '_cnt' → logprob: -2.6901936531066895
    5. '_count' → logprob: -2.8151936531066895
    6. '_size' → logprob: -2.9401936531066895
    7. '_parent' → logprob: -2.9401936531066895
    8. 's' → logprob: -3.3151936531066895
    9. '_sizes' → logprob: -3.3151936531066895
    10. 'parent' → logprob: -3.4401936531066895

Token 1396: ' {}
' (ID: 11421)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.270658016204834
    2. '{}' → logprob: -2.020658016204834
    3. '{}
' → logprob: -2.270658016204834
    4. '[parent' → logprob: -7.520658016204834
    5. '[-' → logprob: -7.770658016204834
    6. '{' → logprob: -8.520658493041992
    7. '{}

' → logprob: -9.520658493041992
    8. 'default' → logprob: -10.645658493041992
    9. 'dict' → logprob: -11.395658493041992
    10. ' {}
' → logprob: -11.520658493041992

Token 1397: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.047606002539396286
    2. 'u' → logprob: -3.6726059913635254
    3. '
' → logprob: -5.172605991363525
    4. 'comp' → logprob: -5.672605991363525
    5. ' for' → logprob: -6.047605991363525
    6. 'uid' → logprob: -6.547605991363525
    7. 'cnt' → logprob: -6.672605991363525
    8. '       ' → logprob: -6.797605991363525
    9. 'count' → logprob: -6.922605991363525
    10. 'idx' → logprob: -7.047605991363525

Token 1398: ' comp' (ID: 1050)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001323691918514669
    2. ' for' → logprob: -7.001323699951172
    3. '
' → logprob: -8.626323699951172
    4. 'idx' → logprob: -9.376323699951172
    5. 'comp' (adapté à ' comp') → logprob: -10.376323699951172
    6. 'class' → logprob: -10.876323699951172
    7. 'u' → logprob: -11.126323699951172
    8. 'id' → logprob: -11.251323699951172
    9. 'cnt' → logprob: -11.376323699951172
    10. 'root' → logprob: -11.876323699951172

Token 1399: '_id' (ID: 1537)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07358644902706146
    2. ' =' → logprob: -2.8235864639282227
    3. '.setdefault' → logprob: -5.698586463928223
    4. '_id' → logprob: -6.198586463928223
    5. '[' → logprob: -6.448586463928223
    6. '={}' → logprob: -6.698586463928223
    7. '={}
' → logprob: -7.823586463928223
    8. '[u' → logprob: -8.198586463928223
    9. '_idx' → logprob: -8.448586463928223
    10. '=set' → logprob: -8.573586463928223

Token 1400: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00990553479641676
    2. ' =' → logprob: -4.6349053382873535
    3. '[' → logprob: -9.759905815124512
    4. '={}' → logprob: -9.759905815124512
    5. '=
' → logprob: -11.259905815124512
    6. '={}
' → logprob: -11.759905815124512
    7. '={
' → logprob: -12.384905815124512
    8. '={' → logprob: -12.634905815124512
    9. '{' → logprob: -14.134905815124512
    10. '[
' → logprob: -14.259905815124512

Token 1401: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.01195488404482603
    2. '0' → logprob: -4.5119547843933105
    3. '{}
' → logprob: -7.0119547843933105
    4. '{' → logprob: -12.511955261230469
    5. '{})' → logprob: -14.136955261230469
    6. '{}

' → logprob: -14.886955261230469
    7. '{}\' → logprob: -15.136955261230469
    8. ' {}' → logprob: -15.386955261230469
    9. '{}_' → logprob: -16.01195526123047
    10. 'dict' → logprob: -16.13695526123047

Token 1402: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.004678018856793642
    2. '0' → logprob: -5.754678249359131
    3. '{}
' → logprob: -6.504678249359131
    4. '{' → logprob: -13.379677772521973
    5. 'dict' → logprob: -14.754677772521973
    6. '{}

' → logprob: -15.004677772521973
    7. ' {}' → logprob: -15.879677772521973
    8. '{})' → logprob: -15.879677772521973
    9. '{}\' → logprob: -15.879677772521973
    10. '{},' → logprob: -17.62967872619629

Token 1403: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1404: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013687985949218273
    2. 'parent' → logprob: -4.888688087463379
    3. ' for' → logprob: -5.388688087463379
    4. '       ' → logprob: -7.388688087463379
    5. '```' → logprob: -8.013688087463379
    6. 'u' → logprob: -8.638688087463379
    7. '
' → logprob: -8.888688087463379
    8. 'union' → logprob: -10.388688087463379
    9. 'def' → logprob: -10.763688087463379
    10. 'root' → logprob: -10.888688087463379

Token 1405: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007043297518976033
    2. 'parent' → logprob: -8.250704765319824
    3. ' for' → logprob: -8.500704765319824
    4. 'uf' → logprob: -9.875704765319824
    5. 'rev' → logprob: -9.875704765319824
    6. 'root' → logprob: -9.875704765319824
    7. 'comp' → logprob: -10.750704765319824
    8. '       ' → logprob: -11.250704765319824
    9. 'rep' → logprob: -11.625704765319824
    10. 'reverse' → logprob: -12.000704765319824

Token 1406: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10350402444601059
    2. 'u' → logprob: -2.603503942489624
    3. 'x' → logprob: -4.228504180908203
    4. 's' → logprob: -4.853504180908203
    5. 'v' → logprob: -6.353504180908203
    6. 'node' → logprob: -8.978504180908203
    7. ' i' → logprob: -10.103504180908203
    8. 'k' → logprob: -11.228504180908203
    9. ' u' → logprob: -12.103504180908203
    10. 'st' → logprob: -12.853504180908203

Token 1407: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16022971272468567
    2. 'in' → logprob: -1.9102296829223633
    3. '```' → logprob: -13.410229682922363
    4. ',' → logprob: -13.785229682922363
    5. ' ' → logprob: -14.035229682922363
    6. 'n' → logprob: -14.535229682922363
    7. 'range' → logprob: -14.785229682922363
    8. '
' → logprob: -15.160229682922363
    9. 'i' → logprob: -15.660229682922363
    10. 'In' → logprob: -16.16023063659668

Token 1408: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.4987974029500037e-05
    2. ' range' → logprob: -10.625024795532227
    3. 'parent' → logprob: -14.375024795532227
    4. '(range' → logprob: -16.750024795532227
    5. '
' → logprob: -17.000024795532227
    6. '   ' → logprob: -18.375024795532227
    7. '```' → logprob: -18.625024795532227
    8. '	range' → logprob: -19.125024795532227
    9. 'color' → logprob: -19.250024795532227
    10. 'rang' → logprob: -19.750024795532227

Token 1409: '(cnt' (ID: 102125)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.10100297629833221
    2. 'range' → logprob: -2.3510029315948486
    3. '(cnt' → logprob: -7.351003170013428
    4. ' cnt' → logprob: -9.47600269317627
    5. ' range' → logprob: -9.97600269317627
    6. 'count' → logprob: -10.60100269317627
    7. '[cnt' → logprob: -12.85100269317627
    8. '
' → logprob: -13.47600269317627
    9. '(range' → logprob: -13.85100269317627
    10. '   ' → logprob: -14.72600269317627

Token 1410: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02295694127678871
    2. ':
' → logprob: -3.8979568481445312
    3. ':' → logprob: -7.397956848144531
    4. '):' → logprob: -7.522956848144531
    5. '       ' → logprob: -7.897956848144531
    6. '():
' → logprob: -8.147956848144531
    7. '           ' → logprob: -8.272956848144531
    8. '
' → logprob: -9.397956848144531
    9. '   ' → logprob: -9.772956848144531
    10. 'if' → logprob: -10.397956848144531

Token 1411: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05282426252961159
    2. '           ' → logprob: -3.9278242588043213
    3. '       ' → logprob: -4.0528244972229
    4. ' if' → logprob: -4.3028244972229
    5. '```' → logprob: -7.6778244972229
    6. 'if' → logprob: -8.802824020385742
    7. '<|end|>' → logprob: -9.427824020385742
    8. ' ' → logprob: -10.427824020385742
    9. '
' → logprob: -11.302824020385742
    10. '	if' → logprob: -11.427824020385742

Token 1412: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.23608610033988953
    2. 'p' → logprob: -2.236086130142212
    3. 'root' → logprob: -2.486086130142212
    4. 'if' → logprob: -5.236085891723633
    5. 'ri' → logprob: -5.236085891723633
    6. '   ' → logprob: -6.486085891723633
    7. 'pi' → logprob: -6.986085891723633
    8. 'rep' → logprob: -6.986085891723633
    9. ' root' → logprob: -7.236085891723633
    10. 'u' → logprob: -7.361085891723633

Token 1413: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06838736683130264
    2. ' =' → logprob: -2.818387269973755
    3. '=find' → logprob: -5.568387508392334
    4. '=
' → logprob: -7.068387508392334
    5. '=re' → logprob: -7.818387508392334
    6. '=r' → logprob: -7.943387508392334
    7. '=i' → logprob: -8.318387031555176
    8. '=root' → logprob: -8.318387031555176
    9. '=f' → logprob: -9.193387031555176
    10. '=int' → logprob: -9.318387031555176

Token 1414: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.00015908108616713434
    2. ' find' → logprob: -8.75015926361084
    3. 'parent' → logprob: -15.12515926361084
    4. '=find' → logprob: -15.87515926361084
    5. '(find' → logprob: -16.625158309936523
    6. 'get' → logprob: -17.000158309936523
    7. 'i' → logprob: -18.750158309936523
    8. '
' → logprob: -19.000158309936523
    9. ')find' → logprob: -19.125158309936523
    10. '	find' → logprob: -19.500158309936523

Token 1415: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -14.875000953674316
    3. '[i' → logprob: -16.625
    4. '(u' → logprob: -16.875
    5. ' (' → logprob: -17.625
    6. '(' → logprob: -17.75
    7. '(
' → logprob: -19.625
    8. '(r' → logprob: -19.75
    9. ')i' → logprob: -19.875
    10. ' i' → logprob: -20.0

Token 1416: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.038436755537986755
    2. ')' → logprob: -3.2884366512298584
    3. '           ' → logprob: -8.413436889648438
    4. '):
' → logprob: -9.163436889648438
    5. ')
' → logprob: -10.288436889648438
    6. ' )
' → logprob: -10.913436889648438
    7. '       ' → logprob: -11.913436889648438
    8. '               ' → logprob: -13.663436889648438
    9. ']
' → logprob: -13.913436889648438
    10. ')i' → logprob: -14.038436889648438

Token 1417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03678372502326965
    2. ' if' → logprob: -3.4117836952209473
    3. '```' → logprob: -6.661783695220947
    4. '       ' → logprob: -7.661783695220947
    5. ' =' → logprob: -7.911783695220947
    6. '               ' → logprob: -8.536784172058105
    7. 'if' → logprob: -8.661784172058105
    8. '   ' → logprob: -9.286784172058105
    9. '	       ' → logprob: -9.286784172058105
    10. '=' → logprob: -9.661784172058105

Token 1418: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003551723901182413
    2. ' if' → logprob: -5.753551959991455
    3. 'comp' → logprob: -8.253551483154297
    4. '
' → logprob: -9.753551483154297
    5. '           ' → logprob: -10.128551483154297
    6. '```' → logprob: -11.503551483154297
    7. '       ' → logprob: -12.878551483154297
    8. '{
' → logprob: -13.878551483154297
    9. ' comp' → logprob: -14.878551483154297
    10. '            
' → logprob: -15.128551483154297

Token 1419: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3782830137643032e-05
    2. ' r' → logprob: -11.25001335144043
    3. '           ' → logprob: -14.50001335144043
    4. '   ' → logprob: -16.00001335144043
    5. '```' → logprob: -18.00001335144043
    6. '               ' → logprob: -18.25001335144043
    7. '                   ' → logprob: -18.37501335144043
    8. '       ' → logprob: -18.50001335144043
    9. '_r' → logprob: -19.25001335144043
    10. 'comp' → logprob: -19.25001335144043

Token 1420: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5776680707931519
    2. ' not' → logprob: -0.8276680707931519
    3. '==' → logprob: -6.577668190002441
    4. '.setdefault' → logprob: -8.577668190002441
    5. '```' → logprob: -10.327668190002441
    6. ':not' → logprob: -10.702668190002441
    7. '	not' → logprob: -10.827668190002441
    8. ' ==' → logprob: -11.327668190002441
    9. ')' → logprob: -11.702668190002441
    10. '!=' → logprob: -11.827668190002441

Token 1421: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11283603310585022
    2. ' in' → logprob: -2.2378361225128174
    3. '=' → logprob: -11.737835884094238
    4. 'comp' → logprob: -13.612835884094238
    5. ')' → logprob: -13.987835884094238
    6. '   ' → logprob: -14.237835884094238
    7. 'not' → logprob: -14.612835884094238
    8. '
' → logprob: -15.487835884094238
    9. 's' → logprob: -15.612835884094238
    10. '```' → logprob: -15.612835884094238

Token 1422: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0002036595979006961
    2. ' comp' → logprob: -8.500204086303711
    3. '	comp' → logprob: -16.75020408630371
    4. '(comp' → logprob: -17.62520408630371
    5. '.comp' → logprob: -18.75020408630371
    6. 'com' → logprob: -18.87520408630371
    7. '_comp' → logprob: -19.12520408630371
    8. 'parent' → logprob: -19.62520408630371
    9. '```' → logprob: -20.00020408630371
    10. 'Comp' → logprob: -20.00020408630371

Token 1423: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18292467296123505
    2. ':' → logprob: -1.8079246282577515
    3. '           ' → logprob: -7.057924747467041
    4. '=' → logprob: -7.057924747467041
    5. '       ' → logprob: -7.307924747467041
    6. '[' → logprob: -8.682924270629883
    7. '):
' → logprob: -8.682924270629883
    8. '               ' → logprob: -9.557924270629883
    9. '```' → logprob: -9.932924270629883
    10. '   ' → logprob: -10.432924270629883

Token 1424: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03784270957112312
    2. ' =' → logprob: -3.7878427505493164
    3. '           ' → logprob: -4.912842750549316
    4. '=' → logprob: -5.787842750549316
    5. ':
' → logprob: -6.412842750549316
    6. '```' → logprob: -6.662842750549316
    7. ':' → logprob: -7.287842750549316
    8. '{
' → logprob: -9.537842750549316
    9. ' comp' → logprob: -9.662842750549316
    10. '):
' → logprob: -10.037842750549316

Token 1425: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.4746258854866028
    2. ' comp' → logprob: -0.9746258854866028
    3. '               ' → logprob: -7.724626064300537
    4. 'com' → logprob: -10.474625587463379
    5. '```' → logprob: -10.474625587463379
    6. '	comp' → logprob: -10.474625587463379
    7. '           ' → logprob: -11.474625587463379
    8. '_comp' → logprob: -12.474625587463379
    9. '(comp' → logprob: -12.474625587463379
    10. '                   ' → logprob: -13.349625587463379

Token 1426: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0206217672675848
    2. '[' → logprob: -3.8956217765808105
    3. '[c' → logprob: -10.645621299743652
    4. 'comp' → logprob: -10.895621299743652
    5. '[
' → logprob: -11.520621299743652
    6. '```' → logprob: -11.520621299743652
    7. '[i' → logprob: -11.645621299743652
    8. 'r' → logprob: -12.895621299743652
    9. '[s' → logprob: -13.270621299743652
    10. '=' → logprob: -14.270621299743652

Token 1427: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30050182342529297
    2. '=' → logprob: -1.550501823425293
    3. ']=' → logprob: -3.050501823425293
    4. ' =' → logprob: -9.800501823425293
    5. '=
' → logprob: -11.800501823425293
    6. '   ' → logprob: -12.675501823425293
    7. ')' → logprob: -12.925501823425293
    8. ']={' → logprob: -12.925501823425293
    9. ' ]' → logprob: -13.675501823425293
    10. ')=' → logprob: -14.550501823425293

Token 1428: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.704065213445574e-05
    2. ' =' → logprob: -10.000046730041504
    3. '=
' → logprob: -13.375046730041504
    4. ']=' → logprob: -18.12504768371582
    5. ')=' → logprob: -19.12504768371582
    6. '＝' → logprob: -19.87504768371582
    7. '=}' → logprob: -19.87504768371582
    8. '=int' → logprob: -20.00004768371582
    9. '=create' → logprob: -20.12504768371582
    10. '=

' → logprob: -20.25004768371582

Token 1429: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -2.935296834039036e-06
    2. ' comp' → logprob: -12.75000286102295
    3. 'com' → logprob: -19.625003814697266
    4. '   ' → logprob: -20.125003814697266
    5. '
' → logprob: -20.250003814697266
    6. '	comp' → logprob: -20.375003814697266
    7. 'compl' → logprob: -20.625003814697266
    8. '(comp' → logprob: -20.875003814697266
    9. '0' → logprob: -21.250003814697266
    10. 'cmp' → logprob: -22.375003814697266

Token 1430: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00039647609810344875
    2. '[' → logprob: -8.625396728515625
    3. 'comp' → logprob: -10.375396728515625
    4. '{' → logprob: -10.750396728515625
    5. '       ' → logprob: -11.000396728515625
    6. '           ' → logprob: -11.250396728515625
    7. '   ' → logprob: -11.250396728515625
    8. 'd' → logprob: -11.250396728515625
    9. '[
' → logprob: -11.250396728515625
    10. '0' → logprob: -11.375396728515625

Token 1431: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20879043638706207
    2. '           ' → logprob: -2.0837905406951904
    3. '<|end|>' → logprob: -3.0837905406951904
    4. '<|end|>' → logprob: -5.333790302276611
    5. '=' → logprob: -5.583790302276611
    6. '                   ' → logprob: -6.583790302276611
    7. '	       ' → logprob: -6.708790302276611
    8. '+' → logprob: -7.083790302276611
    9. '       ' → logprob: -7.583790302276611
    10. '```' → logprob: -7.583790302276611

Token 1432: '               ' (ID: 506)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46490737795829773
    2. '```' → logprob: -1.9649074077606201
    3. '+=' → logprob: -2.08990740776062
    4. ' =' → logprob: -3.33990740776062
    5. ' +=' → logprob: -3.71490740776062
    6. 'comp' → logprob: -4.714907169342041
    7. '               ' → logprob: -5.089907169342041
    8. '           ' → logprob: -5.089907169342041
    9. '++' → logprob: -5.589907169342041
    10. '<|end|>' → logprob: -5.714907169342041

Token 1433: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.011105830781161785
    2. ' comp' → logprob: -4.511106014251709
    3. '++' → logprob: -10.63610553741455
    4. '	comp' → logprob: -11.38610553741455
    5. '```' → logprob: -11.38610553741455
    6. '+' → logprob: -12.76110553741455
    7. '               ' → logprob: -13.26110553741455
    8. '_comp' → logprob: -13.51110553741455
    9. 'com' → logprob: -14.13610553741455
    10. '(comp' → logprob: -14.26110553741455

Token 1434: '_id' (ID: 1537)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05817771703004837
    2. '_id' → logprob: -3.6831777095794678
    3. ' +=' → logprob: -3.8081777095794678
    4. '+' → logprob: -5.183177947998047
    5. '```' → logprob: -5.808177947998047
    6. '++' → logprob: -8.058177947998047
    7. '=' → logprob: -10.058177947998047
    8. '``' → logprob: -10.183177947998047
    9. ']+=' → logprob: -10.308177947998047
    10. '_ids' → logprob: -10.933177947998047

Token 1435: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.007102270144969225
    2. '=' → logprob: -5.5071024894714355
    3. ' +=' → logprob: -6.1321024894714355
    4. '+' → logprob: -7.1321024894714355
    5. ']+=' → logprob: -10.632102012634277
    6. '```' → logprob: -11.882102012634277
    7. ' =' → logprob: -12.132102012634277
    8. ')' → logprob: -12.632102012634277
    9. '+='' → logprob: -13.507102012634277
    10. '=True' → logprob: -13.632102012634277

Token 1436: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -17.75
    4. '<|end|>' → logprob: -19.5
    5. '
' → logprob: -20.5
    6. '   ' → logprob: -20.5
    7. '۱' → logprob: -21.875
    8. '=' → logprob: -22.375
    9. '１' → logprob: -22.375
    10. '0' → logprob: -22.5

Token 1437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -19.0
    4. '   ' → logprob: -20.875
    5. '
' → logprob: -21.125
    6. '0' → logprob: -21.625
    7. '１' → logprob: -22.5
    8. '2' → logprob: -23.0
    9. '``' → logprob: -23.3125
    10. '3' → logprob: -23.375

Token 1438: '

' (ID: 279)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.8615478277206421
    2. '       ' → logprob: -1.236547827720642
    3. '```' → logprob: -1.861547827720642
    4. '
' → logprob: -2.9865479469299316
    5. 'graph' → logprob: -3.8615479469299316
    6. '<|end|>' → logprob: -3.9865479469299316
    7. 'edges' → logprob: -4.611547946929932
    8. ' adj' → logprob: -5.611547946929932
    9. '        
' → logprob: -5.736547946929932
    10. ')' → logprob: -5.861547946929932

Token 1439: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6208757162094116
    2. 'graph' → logprob: -1.9958757162094116
    3. '       ' → logprob: -2.120875835418701
    4. '```' → logprob: -2.370875835418701
    5. 'adj' → logprob: -2.995875835418701
    6. 'n' → logprob: -4.745875835418701
    7. 'edges' → logprob: -4.870875835418701
    8. '``' → logprob: -5.245875835418701
    9. 'parent' → logprob: -5.495875835418701
    10. 'nodes' → logprob: -5.745875835418701

Token 1440: ' #' (ID: 1069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5185942649841309
    2. 'graph' → logprob: -1.2685942649841309
    3. 'rev' → logprob: -3.893594264984131
    4. 'comp' → logprob: -4.268594264984131
    5. 'dag' → logprob: -4.518594264984131
    6. 'size' → logprob: -4.518594264984131
    7. 'ind' → logprob: -4.893594264984131
    8. 'g' → logprob: -5.018594264984131
    9. '       ' → logprob: -5.143594264984131
    10. 'new' → logprob: -5.393594264984131

Token 1441: ' Build' (ID: 10885)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.44335126876831055
    2. 'graph' → logprob: -1.9433512687683105
    3. 'comp' → logprob: -2.3183512687683105
    4. 'rev' → logprob: -3.1933512687683105
    5. 'g' → logprob: -3.9433512687683105
    6. 'from' → logprob: -4.8183512687683105
    7. 'group' → logprob: -5.1933512687683105
    8. 'in' → logprob: -5.4433512687683105
    9. '#' → logprob: -5.4433512687683105
    10. 'class' → logprob: -5.8183512687683105

Token 1442: ' reduced' (ID: 17255)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.14584702253341675
    2. 'graph' → logprob: -2.0208470821380615
    3. '[' → logprob: -6.520846843719482
    4. 'comp' → logprob: -7.020846843719482
    5. 'g' → logprob: -7.895846843719482
    6. 'edges' → logprob: -9.52084732055664
    7. 'ind' → logprob: -9.77084732055664
    8. 'rev' → logprob: -9.77084732055664
    9. 'strong' → logprob: -10.14584732055664
    10. 'new' → logprob: -10.27084732055664

Token 1443: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.02551504783332348
    2. 'adj' → logprob: -4.275515079498291
    3. '_graph' → logprob: -4.775515079498291
    4. '_adj' → logprob: -6.400515079498291
    5. ' graph' → logprob: -6.775515079498291
    6. 'edges' → logprob: -11.400514602661133
    7. 'g' → logprob: -11.525514602661133
    8. '_edges' → logprob: -11.650514602661133
    9. ' adj' → logprob: -12.025514602661133
    10. '```' → logprob: -12.025514602661133

Token 1444: ' according' (ID: 7065)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.3201839923858643
    2. 'adj' → logprob: -2.0701839923858643
    3. 'red' → logprob: -2.1951839923858643
    4. '       ' → logprob: -2.3201839923858643
    5. ' =' → logprob: -2.4451839923858643
    6. 'rg' → logprob: -2.5701839923858643
    7. 'r' → logprob: -2.8201839923858643
    8. '=' → logprob: -3.0701839923858643
    9. 'graph' → logprob: -3.1951839923858643
    10. '
' → logprob: -3.1951839923858643

Token 1445: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0038881960790604353
    2. '       ' → logprob: -6.128888130187988
    3. ' to' → logprob: -6.753888130187988
    4. 'comp' → logprob: -8.878888130187988
    5. '=' → logprob: -9.128888130187988
    6. '_to' → logprob: -9.253888130187988
    7. '
' → logprob: -9.503888130187988
    8. '```' → logprob: -10.878888130187988
    9. '{
' → logprob: -11.003888130187988
    10. 'ly' → logprob: -11.378888130187988

Token 1446: ' crossings' (ID: 199340)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.2494179755449295
    2. 'union' → logprob: -2.624418020248413
    3. 'parent' → logprob: -2.749418020248413
    4. 'comp' → logprob: -3.124418020248413
    5. 'equal' → logprob: -4.499417781829834
    6. '
' → logprob: -4.624417781829834
    7. 'find' → logprob: -4.874417781829834
    8. '       ' → logprob: -6.374417781829834
    9. 'input' → logprob: -6.499417781829834
    10. ' cross' → logprob: -6.624417781829834

Token 1447: ' between' (ID: 2870)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.698657751083374
    2. 'adj' → logprob: -1.573657751083374
    3. '```' → logprob: -2.698657751083374
    4. ' =' → logprob: -2.698657751083374
    5. '       ' → logprob: -3.323657751083374
    6. '=' → logprob: -3.323657751083374
    7. '
' → logprob: -3.698657751083374
    8. 'red' → logprob: -4.323657989501953
    9. 'graph' → logprob: -4.448657989501953
    10. 'rev' → logprob: -5.073657989501953

Token 1448: ' reps' (ID: 77237)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.054521337151527405
    2. 'components' → logprob: -3.929521322250366
    3. 'stre' → logprob: -4.429521560668945
    4. 'union' → logprob: -4.929521560668945
    5. 'parent' → logprob: -5.429521560668945
    6. 'nodes' → logprob: -6.429521560668945
    7. 'r' → logprob: -6.929521560668945
    8. '
' → logprob: -6.929521560668945
    9. 'parents' → logprob: -7.054521560668945
    10. 'equal' → logprob: -7.054521560668945

Token 1449: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4334157109260559
    2. ' =' → logprob: -1.8084156513214111
    3. 'for' → logprob: -2.433415651321411
    4. '=' → logprob: -3.308415651321411
    5. '
' → logprob: -3.933415651321411
    6. ',' → logprob: -4.68341588973999
    7. '```' → logprob: -5.05841588973999
    8. '=
' → logprob: -5.55841588973999
    9. '[
' → logprob: -5.68341588973999
    10. 'adj' → logprob: -5.80841588973999

Token 1450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38029947876930237
    2. 'for' → logprob: -1.88029944896698
    3. 'adj' → logprob: -2.6302995681762695
    4. '```' → logprob: -3.5052995681762695
    5. 'edges' → logprob: -4.0052995681762695
    6. '
' → logprob: -4.2552995681762695
    7. ' =' → logprob: -5.3802995681762695
    8. 'graph' → logprob: -5.5052995681762695
    9. ' for' → logprob: -5.6302995681762695
    10. '``' → logprob: -5.6302995681762695

Token 1451: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -1.0427433252334595
    2. 'graph' → logprob: -1.2927433252334595
    3. 'red' → logprob: -1.7927433252334595
    4. 'g' → logprob: -2.66774320602417
    5. '
' → logprob: -3.16774320602417
    6. 're' → logprob: -3.54274320602417
    7. '```' → logprob: -3.79274320602417
    8. 'rev' → logprob: -3.79274320602417
    9. 'new' → logprob: -5.66774320602417
    10. 'r' → logprob: -5.79274320602417

Token 1452: '_str' (ID: 6182)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5221372842788696
    2. '=' → logprob: -1.1471372842788696
    3. ' =' → logprob: -2.89713716506958
    4. '_comp' → logprob: -3.89713716506958
    5. '=[' → logprob: -4.64713716506958
    6. '```' → logprob: -6.14713716506958
    7. 'comp' → logprob: -7.39713716506958
    8. '=[
' → logprob: -7.77213716506958
    9. '_list' → logprob: -8.272137641906738
    10. '[
' → logprob: -8.397137641906738

Token 1453: 'ong' (ID: 705)
  Prédit: 'uct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uct' → logprob: -0.45635947585105896
    2. '=' → logprob: -1.7063595056533813
    3. '=[]' → logprob: -2.956359386444092
    4. ' =' → logprob: -3.206359386444092
    5. '=[]
' → logprob: -3.581359386444092
    6. '=[' → logprob: -3.581359386444092
    7. 'icted' → logprob: -4.706359386444092
    8. '=[[' → logprob: -4.706359386444092
    9. '=[
' → logprob: -5.706359386444092
    10. '```' → logprob: -5.831359386444092

Token 1454: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2810058891773224
    2. '[' → logprob: -1.531005859375
    3. ' =' → logprob: -3.906005859375
    4. '=[
' → logprob: -6.031005859375
    5. '=[' → logprob: -6.031005859375
    6. '[
' → logprob: -6.781005859375
    7. '```' → logprob: -6.906005859375
    8. '=[]' → logprob: -8.281005859375
    9. '\[' → logprob: -8.406005859375
    10. ']=' → logprob: -8.781005859375

Token 1455: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.65101717156358e-05
    2. ' [[]' → logprob: -9.250096321105957
    3. '[[' → logprob: -16.125097274780273
    4. '[]' → logprob: -16.250097274780273
    5. 'default' → logprob: -16.375097274780273
    6. '{' → logprob: -17.125097274780273
    7. '[s' → logprob: -17.750097274780273
    8. '[
' → logprob: -18.000097274780273
    9. '{}' → logprob: -19.000097274780273
    10. '[len' → logprob: -19.375097274780273

Token 1456: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013758059591054916
    2. ' for' → logprob: -4.388758182525635
    3. '[' → logprob: -7.013758182525635
    4. '       ' → logprob: -8.888757705688477
    5. '(comp' → logprob: -9.013757705688477
    6. '           ' → logprob: -10.013757705688477
    7. '               ' → logprob: -11.638757705688477
    8. ']' → logprob: -11.638757705688477
    9. ',' → logprob: -12.138757705688477
    10. 'comp' → logprob: -12.513757705688477

Token 1457: ' _' (ID: 1175)
  Prédit: '(comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(comp' → logprob: -0.00023107275774236768
    2. 'comp' → logprob: -9.25023078918457
    3. 'range' → logprob: -9.50023078918457
    4. '(' → logprob: -10.50023078918457
    5. '(range' → logprob: -10.50023078918457
    6. ' (' → logprob: -12.50023078918457
    7. ' range' → logprob: -14.12523078918457
    8. ' comp' → logprob: -15.25023078918457
    9. '(component' → logprob: -15.87523078918457
    10. '_comp' → logprob: -17.62523078918457

Token 1458: ' in' (ID: 306)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0018179784528911114
    2. '(comp' → logprob: -6.5018181800842285
    3. ' comp' → logprob: -8.50181770324707
    4. 'range' → logprob: -9.12681770324707
    5. '(' → logprob: -12.87681770324707
    6. '	comp' → logprob: -14.62681770324707
    7. 'count' → logprob: -15.25181770324707
    8. 'cmp' → logprob: -15.87681770324707
    9. ' range' → logprob: -15.87681770324707
    10. 'len' → logprob: -17.12681770324707

Token 1459: ' range' (ID: 3352)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.004806872922927141
    2. 'range' → logprob: -5.504806995391846
    3. '(comp' → logprob: -7.254806995391846
    4. ' comp' → logprob: -10.879806518554688
    5. ' range' → logprob: -13.004806518554688
    6. '(' → logprob: -16.254806518554688
    7. '	comp' → logprob: -16.504806518554688
    8. '(range' → logprob: -17.504806518554688
    9. 'cmp' → logprob: -17.629806518554688
    10. '_comp' → logprob: -18.879806518554688

Token 1460: '(comp' (ID: 60272)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.0280383548888494e-06
    2. '(comp' → logprob: -14.000000953674316
    3. ' comp' → logprob: -16.000001907348633
    4. '
' → logprob: -21.125001907348633
    5. '	comp' → logprob: -21.125001907348633
    6. '   ' → logprob: -21.125001907348633
    7. '(' → logprob: -22.750001907348633
    8. 'compl' → logprob: -22.875001907348633
    9. '       ' → logprob: -23.000001907348633
    10. '_comp' → logprob: -23.125001907348633

Token 1461: '_id' (ID: 1537)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3095301389694214
    2. ')]' → logprob: -1.5595301389694214
    3. '_id' → logprob: -3.809530258178711
    4. 'r' → logprob: -5.059530258178711
    5. ')' → logprob: -5.184530258178711
    6. 's' → logprob: -5.309530258178711
    7. '[u' → logprob: -5.559530258178711
    8. ')]
' → logprob: -6.559530258178711
    9. '[r' → logprob: -6.809530258178711
    10. 'comp' → logprob: -6.809530258178711

Token 1462: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2679750621318817
    2. ']
' → logprob: -1.517975091934204
    3. ')]' → logprob: -4.267974853515625
    4. ')]
' → logprob: -6.517974853515625
    5. ')' → logprob: -8.267974853515625
    6. ']
' → logprob: -9.392974853515625
    7. ']

' → logprob: -9.642974853515625
    8. ')
' → logprob: -11.392974853515625
    9. '()]' → logprob: -13.017974853515625
    10. '       ' → logprob: -13.267974853515625

Token 1463: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008717515505850315
    2. '
' → logprob: -5.3837175369262695
    3. ' for' → logprob: -5.8837175369262695
    4. '       ' → logprob: -7.2587175369262695
    5. '```' → logprob: -7.5087175369262695
    6. '        
' → logprob: -10.38371753692627
    7. '<|end|>' → logprob: -11.63371753692627
    8. '``' → logprob: -12.38371753692627
    9. '	for' → logprob: -13.75871753692627
    10. '
' → logprob: -13.88371753692627

Token 1464: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7835754988482222e-05
    2. '       ' → logprob: -11.000018119812012
    3. '```' → logprob: -14.500018119812012
    4. '
' → logprob: -15.125018119812012
    5. ' for' → logprob: -15.250018119812012
    6. '   ' → logprob: -17.750017166137695
    7. '``' → logprob: -18.000017166137695
    8. '        
' → logprob: -18.250017166137695
    9. 'from' → logprob: -19.500017166137695
    10. '#' (adapté à ' #') → logprob: -19.625017166137695

Token 1465: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.297462171758525e-05
    2. '       ' → logprob: -10.500033378601074
    3. '```' → logprob: -12.500033378601074
    4. '
' → logprob: -14.000033378601074
    5. ' for' → logprob: -15.125033378601074
    6. '#' → logprob: -15.750033378601074
    7. 'rep' → logprob: -16.000032424926758
    8. '``' → logprob: -16.000032424926758
    9. 'from' → logprob: -16.875032424926758
    10. 'reverse' → logprob: -17.500032424926758

Token 1466: ' each' (ID: 2454)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6861675977706909
    2. 'i' → logprob: -1.061167597770691
    3. 'r' → logprob: -2.4361677169799805
    4. 'u' → logprob: -3.1861677169799805
    5. '(A' → logprob: -4.3111677169799805
    6. '(u' → logprob: -6.5611677169799805
    7. 'a' → logprob: -6.8111677169799805
    8. '(i' → logprob: -6.8111677169799805
    9. ' (' → logprob: -7.1861677169799805
    10. 'c' → logprob: -7.6861677169799805

Token 1467: ' crossing' (ID: 50946)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.448517382144928
    2. 'i' → logprob: -1.8235173225402832
    3. 'r' → logprob: -2.573517322540283
    4. 'u' → logprob: -2.698517322540283
    5. '(A' → logprob: -3.448517322540283
    6. ' (' → logprob: -4.698517322540283
    7. '(u' → logprob: -5.573517322540283
    8. ' A' → logprob: -5.573517322540283
    9. '(i' → logprob: -6.823517322540283
    10. 'rep' → logprob: -6.948517322540283

Token 1468: ' A' (ID: 355)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0059906244277954
    2. '(A' → logprob: -2.005990505218506
    3. 'A' → logprob: -2.130990505218506
    4. ',' → logprob: -2.130990505218506
    5. 'for' → logprob: -2.130990505218506
    6. ' (' → logprob: -3.255990505218506
    7. ' for' → logprob: -3.505990505218506
    8. 'u' → logprob: -4.005990505218506
    9. '(u' → logprob: -4.255990505218506
    10. 'in' → logprob: -4.630990505218506

Token 1469: '-B' (ID: 8287)
  Prédit: ',B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.12888158857822418
    2. ',' → logprob: -2.1288816928863525
    3. ',b' → logprob: -7.378881454467773
    4. 'B' → logprob: -7.753881454467773
    5. ' in' → logprob: -8.753881454467773
    6. ',v' → logprob: -8.753881454467773
    7. ',_' → logprob: -9.128881454467773
    8. ',
' → logprob: -9.253881454467773
    9. 'for' → logprob: -9.628881454467773
    10. '```' → logprob: -9.628881454467773

Token 1470: ' in' (ID: 306)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1744387298822403
    2. ':' → logprob: -3.049438714981079
    3. '           ' → logprob: -3.174438714981079
    4. ' if' → logprob: -3.799438714981079
    5. 'if' → logprob: -3.924438714981079
    6. '       ' → logprob: -4.549438953399658
    7. ',' → logprob: -4.674438953399658
    8. ' in' → logprob: -5.424438953399658
    9. '```' → logprob: -7.174438953399658
    10. 'in' → logprob: -7.299438953399658

Token 1471: ' input' (ID: 3422)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.003722288180142641
    2. 'edges' → logprob: -6.003722190856934
    3. ' cross' → logprob: -6.753722190856934
    4. ' edges' → logprob: -10.503722190856934
    5. 'equal' → logprob: -11.378722190856934
    6. '
' → logprob: -11.503722190856934
    7. '   ' → logprob: -12.003722190856934
    8. '```' → logprob: -12.378722190856934
    9. 'edge' → logprob: -12.628722190856934
    10. 'input' → logprob: -13.003722190856934

Token 1472: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3666731119155884
    2. '           ' → logprob: -1.8666731119155884
    3. ':' → logprob: -3.116672992706299
    4. '       ' → logprob: -3.116672992706299
    5. ',' → logprob: -3.366672992706299
    6. ' if' → logprob: -4.241672992706299
    7. 'if' → logprob: -4.866672992706299
    8. '   ' → logprob: -6.116672992706299
    9. '):
' → logprob: -6.491672992706299
    10. '```' → logprob: -6.741672992706299

Token 1473: ' add' (ID: 1147)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0252134799957275
    2. '       ' → logprob: -1.4002134799957275
    3. ' u' → logprob: -2.1502134799957275
    4. ' if' → logprob: -2.6502134799957275
    5. 'if' → logprob: -2.7752134799957275
    6. '```' → logprob: -3.2752134799957275
    7. 'r' → logprob: -3.5252134799957275
    8. 'rep' → logprob: -3.9002134799957275
    9. '   ' → logprob: -4.150213241577148
    10. '           ' → logprob: -4.650213241577148

Token 1474: ' edge' (ID: 11165)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.7110213041305542
    2. 'comp' → logprob: -1.4610213041305542
    3. ' adj' → logprob: -2.5860214233398438
    4. ' (' → logprob: -3.0860214233398438
    5. '(comp' → logprob: -3.3360214233398438
    6. '(
' → logprob: -3.7110214233398438
    7. ' comp' → logprob: -3.8360214233398438
    8. '(' → logprob: -3.9610214233398438
    9. '(A' → logprob: -4.586021423339844
    10. ' edges' → logprob: -4.586021423339844

Token 1475: ' from' (ID: 591)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7767670154571533
    2. 'if' → logprob: -1.7767670154571533
    3. '(A' → logprob: -3.0267670154571533
    4. ' in' → logprob: -3.1517670154571533
    5. '[' → logprob: -3.4017670154571533
    6. '[
' → logprob: -3.5267670154571533
    7. '[A' → logprob: -3.6517670154571533
    8. 'for' → logprob: -3.7767670154571533
    9. '       ' → logprob: -3.9017670154571533
    10. '```' → logprob: -4.026766777038574

Token 1476: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0028135518077760935
    2. ' comp' → logprob: -5.877813339233398
    3. '   ' → logprob: -13.502813339233398
    4. '(comp' → logprob: -13.502813339233398
    5. 'find' → logprob: -13.752813339233398
    6. 'get' → logprob: -13.752813339233398
    7. '       ' → logprob: -14.002813339233398
    8. '
' → logprob: -14.502813339233398
    9. '	comp' → logprob: -14.752813339233398
    10. 'compound' → logprob: -14.752813339233398

Token 1477: '[A' (ID: 58391)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04187195003032684
    2. '[A' → logprob: -3.916872024536133
    3. '[
' → logprob: -4.416872024536133
    4. 'find' → logprob: -5.416872024536133
    5. '[get' → logprob: -6.166872024536133
    6. '[r' → logprob: -7.416872024536133
    7. '[(' → logprob: -7.791872024536133
    8. 'A' → logprob: -8.541872024536133
    9. '[parent' → logprob: -8.666872024536133
    10. '=find' → logprob: -8.791872024536133

Token 1478: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.061557624489068985
    2. ']' → logprob: -3.4365575313568115
    3. '[A' → logprob: -3.9365575313568115
    4. '[r' → logprob: -5.186557769775391
    5. '][' → logprob: -7.061557769775391
    6. '[
' → logprob: -7.561557769775391
    7. '[to' → logprob: -8.31155776977539
    8. 'r' → logprob: -8.68655776977539
    9. 'comp' → logprob: -8.81155776977539
    10. '
' → logprob: -9.81155776977539

Token 1479: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009722323156893253
    2. '[to' → logprob: -6.2597222328186035
    3. 'to' → logprob: -6.6347222328186035
    4. '][' → logprob: -6.7597222328186035
    5. ')' → logprob: -6.7597222328186035
    6. ' to' → logprob: -7.0097222328186035
    7. '```' → logprob: -7.1347222328186035
    8. '           ' → logprob: -7.1347222328186035
    9. '[
' → logprob: -7.7597222328186035
    10. '       ' → logprob: -7.8847222328186035

Token 1480: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0015024791937321424
    2. ' comp' → logprob: -6.501502513885498
    3. '(comp' → logprob: -16.126502990722656
    4. '	comp' → logprob: -16.876502990722656
    5. 'com' → logprob: -17.501502990722656
    6. '
' → logprob: -18.876502990722656
    7. '```' → logprob: -19.251502990722656
    8. '_comp' → logprob: -20.126502990722656
    9. '.comp' → logprob: -20.376502990722656
    10. '   ' → logprob: -20.501502990722656

Token 1481: '[B' (ID: 95385)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011847536079585552
    2. '[A' → logprob: -7.376184940338135
    3. 'comp' → logprob: -7.751184940338135
    4. '[
' → logprob: -9.376184463500977
    5. '
' → logprob: -11.126184463500977
    6. '(comp' → logprob: -11.626184463500977
    7. 'find' → logprob: -12.251184463500977
    8. '```' → logprob: -12.251184463500977
    9. 'A' → logprob: -12.501184463500977
    10. '[(' → logprob: -14.126184463500977

Token 1482: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8241380453109741
    2. ')' → logprob: -0.9491380453109741
    3. '[' → logprob: -2.5741381645202637
    4. '           ' → logprob: -3.5741381645202637
    5. '[
' → logprob: -4.074138164520264
    6. '```' → logprob: -4.074138164520264
    7. '       ' → logprob: -4.574138164520264
    8. '.' → logprob: -5.824138164520264
    9. '):
' → logprob: -6.199138164520264
    10. ' if' → logprob: -6.324138164520264

Token 1483: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6102056503295898
    2. 'for' → logprob: -1.8602056503295898
    3. '           ' → logprob: -2.48520565032959
    4. '[' → logprob: -2.86020565032959
    5. '```' → logprob: -2.86020565032959
    6. '[
' → logprob: -3.23520565032959
    7. ' for' → logprob: -3.86020565032959
    8. '{
' → logprob: -4.86020565032959
    9. '
' → logprob: -5.23520565032959
    10. '   ' → logprob: -5.48520565032959

Token 1484: ' different' (ID: 2647)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.01156197115778923
    2. ' comp' → logprob: -4.511561870574951
    3. 'find' → logprob: -8.38656234741211
    4. '(comp' → logprob: -9.76156234741211
    5. 'color' → logprob: -9.88656234741211
    6. 'parent' → logprob: -9.88656234741211
    7. '
' → logprob: -10.63656234741211
    8. 'street' → logprob: -10.88656234741211
    9. 'A' → logprob: -11.38656234741211
    10. 'com' → logprob: -11.76156234741211

Token 1485: '.
' (ID: 558)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5782070159912109
    2. ' and' → logprob: -1.578207015991211
    3. ':' → logprob: -2.328207015991211
    4. 'and' → logprob: -2.953207015991211
    5. '.' → logprob: -3.703207015991211
    6. '           ' → logprob: -3.953207015991211
    7. '```' → logprob: -5.078207015991211
    8. '               ' → logprob: -5.203207015991211
    9. '       ' → logprob: -5.203207015991211
    10. '[' → logprob: -5.703207015991211

Token 1486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3152261972427368
    2. ' for' → logprob: -1.5652261972427368
    3. 'for' → logprob: -3.3152260780334473
    4. '```' → logprob: -4.440226078033447
    5. '<|end|>' → logprob: -5.565226078033447
    6. '           ' → logprob: -5.565226078033447
    7. '        
' → logprob: -5.940226078033447
    8. '
' → logprob: -7.565226078033447
    9. ' if' → logprob: -7.565226078033447
    10. '   ' → logprob: -7.815226078033447

Token 1487: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.683528482913971
    2. 'for' → logprob: -0.808528482913971
    3. ' for' → logprob: -3.183528423309326
    4. '```' → logprob: -4.933528423309326
    5. '
' → logprob: -7.808528423309326
    6. '``' → logprob: -8.683528900146484
    7. '        
' → logprob: -8.933528900146484
    8. '   ' → logprob: -8.933528900146484
    9. '           ' → logprob: -9.683528900146484
    10. '  
' → logprob: -10.433528900146484

Token 1488: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043303459882736206
    2. '       ' → logprob: -3.2933034896850586
    3. ' for' → logprob: -5.293303489685059
    4. '```' → logprob: -9.043303489685059
    5. 'if' → logprob: -9.668303489685059
    6. '           ' → logprob: -10.793303489685059
    7. '   ' → logprob: -11.793303489685059
    8. '
' → logprob: -12.168303489685059
    9. '``' → logprob: -12.293303489685059
    10. '        
' → logprob: -13.543303489685059

Token 1489: ' equal' (ID: 12629)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8299581408500671
    2. 'r' → logprob: -1.829958200454712
    3. '(A' → logprob: -1.954958200454712
    4. 'comp' → logprob: -2.579958200454712
    5. 'u' → logprob: -2.704958200454712
    6. '(u' → logprob: -2.829958200454712
    7. 'a' → logprob: -4.454957962036133
    8. '(r' → logprob: -4.829957962036133
    9. 'c' → logprob: -4.954957962036133
    10. 's' → logprob: -5.079957962036133

Token 1490: ' strength' (ID: 9386)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.6979833841323853
    2. '[A' → logprob: -2.3229832649230957
    3. '[
' → logprob: -2.6979832649230957
    4. '[' → logprob: -2.8229832649230957
    5. '(A' → logprob: -2.9479832649230957
    6. '   ' → logprob: -3.0729832649230957
    7. '_str' → logprob: -3.0729832649230957
    8. ')' → logprob: -3.9479832649230957
    9. '       ' → logprob: -4.072983264923096
    10. '_strength' → logprob: -4.072983264923096

Token 1491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.463148593902588
    2. ':' → logprob: -1.838148593902588
    3. 'pairs' → logprob: -2.213148593902588
    4. 'edges' → logprob: -2.463148593902588
    5. ' pairs' → logprob: -2.588148593902588
    6. ' edges' → logprob: -2.713148593902588
    7. '(A' → logprob: -2.713148593902588
    8. 'for' → logprob: -3.088148593902588
    9. ':
' → logprob: -3.338148593902588
    10. 'if' → logprob: -3.838148593902588

Token 1492: ' merges' (ID: 176901)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.134552001953125
    2. ' if' → logprob: -1.259552001953125
    3. 'for' → logprob: -1.384552001953125
    4. ' for' → logprob: -2.009552001953125
    5. '           ' → logprob: -5.759552001953125
    6. '```' → logprob: -6.134552001953125
    7. 'continue' → logprob: -6.134552001953125
    8. ' continue' → logprob: -7.134552001953125
    9. '       ' → logprob: -7.134552001953125
    10. '
' → logprob: -7.634552001953125

Token 1493: ' nodes' (ID: 15749)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6315104961395264
    2. ':' → logprob: -1.8815104961395264
    3. ':
' → logprob: -1.8815104961395264
    4. '=' → logprob: -3.0065104961395264
    5. '       ' → logprob: -3.1315104961395264
    6. '           ' → logprob: -3.2565104961395264
    7. ' if' → logprob: -3.2565104961395264
    8. ')' → logprob: -3.3815104961395264
    9. ' in' → logprob: -3.3815104961395264
    10. '.' → logprob: -3.5065104961395264

Token 1494: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29507723450660706
    2. 'for' → logprob: -1.4200772047042847
    3. ' for' → logprob: -4.420077323913574
    4. '```' → logprob: -6.670077323913574
    5. '<|end|>' → logprob: -8.795077323913574
    6. '
' → logprob: -9.170077323913574
    7. '        
' → logprob: -9.795077323913574
    8. '           ' → logprob: -10.420077323913574
    9. ',' → logprob: -10.420077323913574
    10. '   ' → logprob: -10.920077323913574

Token 1495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1880485713481903
    2. 'for' → logprob: -1.9380486011505127
    3. '
' → logprob: -4.188048362731934
    4. ' for' → logprob: -4.813048362731934
    5. '```' → logprob: -6.438048362731934
    6. '        
' → logprob: -6.688048362731934
    7. '``' → logprob: -8.313048362731934
    8. '  
' → logprob: -8.438048362731934
    9. '   ' → logprob: -8.438048362731934
    10. '           ' → logprob: -9.313048362731934

Token 1496: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23207256197929382
    2. '       ' → logprob: -1.6070725917816162
    3. '```' → logprob: -5.857072353363037
    4. ' for' → logprob: -5.982072353363037
    5. '
' → logprob: -6.982072353363037
    6. '``' → logprob: -8.857072830200195
    7. '   ' → logprob: -9.482072830200195
    8. '        
' → logprob: -9.857072830200195
    9. '`
' → logprob: -11.482072830200195
    10. '           ' → logprob: -11.857072830200195

Token 1497: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003591756336390972
    2. ' A' → logprob: -5.753591537475586
    3. '(A' → logprob: -7.878591537475586
    4. '   ' → logprob: -11.128591537475586
    5. ' (' → logprob: -11.378591537475586
    6. 'a' → logprob: -12.253591537475586
    7. ' ' → logprob: -13.878591537475586
    8. '	A' → logprob: -13.878591537475586
    9. '  ' → logprob: -14.378591537475586
    10. 'c' → logprob: -15.128591537475586

Token 1498: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.011859354563057423
    2. ',' → logprob: -4.51185941696167
    3. 'B' → logprob: -8.011858940124512
    4. ',_' → logprob: -8.261858940124512
    5. ' ,' → logprob: -8.886858940124512
    6. ',b' → logprob: -11.011858940124512
    7. '_,' → logprob: -11.261858940124512
    8. '
' → logprob: -11.636858940124512
    9. 'in' → logprob: -11.761858940124512
    10. ',v' → logprob: -11.886858940124512

Token 1499: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16096726059913635
    2. 'in' → logprob: -1.910967230796814
    3. ')' → logprob: -8.285966873168945
    4. '):
' → logprob: -8.660966873168945
    5. ',' → logprob: -9.035966873168945
    6. ':
' → logprob: -10.035966873168945
    7. '   ' → logprob: -10.035966873168945
    8. ' (' → logprob: -10.910966873168945
    9. '[' → logprob: -11.160966873168945
    10. '       ' → logprob: -11.285966873168945

Token 1500: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.00032151900813914835
    2. ' cross' → logprob: -8.125321388244629
    3. 'edges' → logprob: -10.625321388244629
    4. '
' → logprob: -14.250321388244629
    5. ' edges' → logprob: -15.000321388244629
    6. '```' → logprob: -16.750322341918945
    7. 'equal' → logprob: -17.250322341918945
    8. '   ' → logprob: -17.625322341918945
    9. 'c' → logprob: -17.625322341918945
    10. ' ' → logprob: -17.750322341918945

Token 1501: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2576957046985626
    2. ':' → logprob: -1.5076956748962402
    3. '):
' → logprob: -6.13269567489624
    4. '_set' → logprob: -6.38269567489624
    5. '           ' → logprob: -6.75769567489624
    6. '):' → logprob: -7.88269567489624
    7. '       ' → logprob: -9.007696151733398
    8. '   ' → logprob: -9.882696151733398
    9. ' in' → logprob: -10.507696151733398
    10. '```' → logprob: -10.632696151733398

Token 1502: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08458875864744186
    2. '   ' → logprob: -2.8345887660980225
    3. '       ' → logprob: -4.084588527679443
    4. '```' → logprob: -5.584588527679443
    5. '[' → logprob: -7.209588527679443
    6. '               ' → logprob: -7.834588527679443
    7. ' if' → logprob: -8.584589004516602
    8. ':
' → logprob: -9.709589004516602
    9. '``' → logprob: -9.959589004516602
    10. '):
' → logprob: -9.959589004516602

Token 1503: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0664718747138977
    2. 'if' → logprob: -3.441471815109253
    3. 'a' (adapté à ' a') → logprob: -4.691472053527832
    4. ' u' → logprob: -4.816472053527832
    5. 'ua' → logprob: -5.066472053527832
    6. ' if' → logprob: -5.816472053527832
    7. '   ' → logprob: -6.191472053527832
    8. 'from' → logprob: -6.316472053527832
    9. 'ca' → logprob: -7.316472053527832
    10. 'au' → logprob: -8.066472053527832

Token 1504: ' =' (ID: 314)
  Prédit: '_comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -0.24118676781654358
    2. 'c' → logprob: -2.3661868572235107
    3. 'comp' → logprob: -2.8661868572235107
    4. '=' → logprob: -3.3661868572235107
    5. '_c' → logprob: -3.8661868572235107
    6. '_id' → logprob: -5.741186618804932
    7. ' =' → logprob: -5.991186618804932
    8. '_' → logprob: -7.866186618804932
    9. '_=' → logprob: -7.991186618804932
    10. '_idx' → logprob: -7.991186618804932

Token 1505: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.00015908108616713434
    2. ' comp' → logprob: -8.75015926361084
    3. 'street' → logprob: -14.62515926361084
    4. 'parent' → logprob: -16.875158309936523
    5. 'find' → logprob: -17.375158309936523
    6. 'color' → logprob: -17.500158309936523
    7. '(comp' → logprob: -18.750158309936523
    8. '	comp' → logprob: -18.750158309936523
    9. 'get' → logprob: -18.875158309936523
    10. 'com' → logprob: -20.000158309936523

Token 1506: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.035247646272182465
    2. '[A' → logprob: -3.410247564315796
    3. '[a' → logprob: -6.910247802734375
    4. '[parent' → logprob: -7.910247802734375
    5. 'A' → logprob: -8.785247802734375
    6. '[get' → logprob: -10.535247802734375
    7. 'comp' → logprob: -11.660247802734375
    8. '[r' → logprob: -11.785247802734375
    9. 'parent' → logprob: -11.910247802734375
    10. '[s' → logprob: -12.535247802734375

Token 1507: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0013569057919085026
    2. 'A' → logprob: -6.626357078552246
    3. 'parent' → logprob: -10.876357078552246
    4. '(find' → logprob: -12.376357078552246
    5. ' find' → logprob: -12.501357078552246
    6. 'a' → logprob: -13.126357078552246
    7. 'street' → logprob: -14.751357078552246
    8. 'get' → logprob: -15.251357078552246
    9. 'f' → logprob: -15.501357078552246
    10. '[' → logprob: -15.626357078552246

Token 1508: '(A' (ID: 10706)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.47421994805336
    2. '(A' → logprob: -0.9742199182510376
    3. '[A' → logprob: -9.349220275878906
    4. 'a' → logprob: -10.599220275878906
    5. ']' → logprob: -11.474220275878906
    6. ' A' → logprob: -11.974220275878906
    7. '
' → logprob: -12.099220275878906
    8. '(a' → logprob: -12.599220275878906
    9. '](' → logprob: -13.724220275878906
    10. '	A' → logprob: -14.099220275878906

Token 1509: ')]
' (ID: 11587)
  Prédit: ')]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.051398467272520065
    2. ')]' → logprob: -3.051398515701294
    3. ']
' → logprob: -7.051398277282715
    4. '(A' → logprob: -7.176398277282715
    5. ']]
' → logprob: -7.551398277282715
    6. ']' → logprob: -8.551398277282715
    7. ')][' → logprob: -8.551398277282715
    8. ')' → logprob: -9.426398277282715
    9. '(B' → logprob: -10.301398277282715
    10. ')
' → logprob: -10.676398277282715

Token 1510: '           ' (ID: 352)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6011776328086853
    2. '           ' → logprob: -1.10117769241333
    3. '.append' → logprob: -2.22617769241333
    4. '_adj' → logprob: -4.97617769241333
    5. ' adj' → logprob: -5.85117769241333
    6. '```' → logprob: -7.60117769241333
    7. '(adj' → logprob: -8.351177215576172
    8. '
' → logprob: -8.476177215576172
    9. '.' → logprob: -8.601177215576172
    10. '.ad' → logprob: -8.726177215576172

Token 1511: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -1.4378848391061183e-05
    2. 'if' → logprob: -11.750014305114746
    3. ' b' → logprob: -12.000014305114746
    4. '           ' → logprob: -16.125015258789062
    5. ' if' → logprob: -16.500015258789062
    6. '       ' → logprob: -17.625015258789062
    7. 'a' → logprob: -17.875015258789062
    8. '=' → logprob: -18.500015258789062
    9. '
' → logprob: -18.625015258789062
    10. '=b' → logprob: -18.750015258789062

Token 1512: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31786540150642395
    2. '=' → logprob: -1.6928653717041016
    3. '[b' → logprob: -3.1928653717041016
    4. '[a' → logprob: -3.4428653717041016
    5. 'b' → logprob: -5.317865371704102
    6. '[
' → logprob: -5.442865371704102
    7. '=b' → logprob: -5.942865371704102
    8. ')' → logprob: -7.192865371704102
    9. ' =' → logprob: -7.317865371704102
    10. 'a' → logprob: -7.692865371704102

Token 1513: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -3.7697225252486533e-06
    2. ' comp' → logprob: -12.500003814697266
    3. '(comp' → logprob: -17.875003814697266
    4. '	comp' → logprob: -19.250003814697266
    5. 'b' → logprob: -21.250003814697266
    6. 'cross' → logprob: -21.250003814697266
    7. '[' → logprob: -21.750003814697266
    8. 'com' → logprob: -22.375003814697266
    9. 'c' → logprob: -22.750003814697266
    10. '.comp' → logprob: -23.000003814697266

Token 1514: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004595055361278355
    2. '[b' → logprob: -8.000459671020508
    3. 'b' → logprob: -9.000459671020508
    4. '[
' → logprob: -15.375459671020508
    5. 'find' → logprob: -15.500459671020508
    6. '[B' → logprob: -15.750459671020508
    7. '[[' → logprob: -16.375459671020508
    8. 'comp' → logprob: -16.625459671020508
    9. '```' → logprob: -17.750459671020508
    10. '{' → logprob: -17.875459671020508

Token 1515: 'find' (ID: 6555)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.3137713074684143
    2. 'find' → logprob: -1.3137712478637695
    3. '[' → logprob: -7.6887712478637695
    4. 'b' → logprob: -10.93877124786377
    5. '(comp' → logprob: -11.18877124786377
    6. 'c' → logprob: -11.56377124786377
    7. 'compl' → logprob: -12.81377124786377
    8. '(find' → logprob: -13.06377124786377
    9. ' comp' → logprob: -13.18877124786377
    10. 'com' → logprob: -13.93877124786377

Token 1516: '(B' (ID: 8409)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5794849991798401
    2. 'find' → logprob: -0.8294849991798401
    3. 'B' → logprob: -5.829484939575195
    4. '(find' → logprob: -7.454484939575195
    5. ' find' → logprob: -11.579484939575195
    6. '=find' → logprob: -12.579484939575195
    7. '(b' → logprob: -12.829484939575195
    8. '[' → logprob: -13.079484939575195
    9. 'a' → logprob: -13.704484939575195
    10. '
' → logprob: -14.079484939575195

Token 1517: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.357491672039032
    2. ']' → logprob: -1.6074917316436768
    3. ']
' → logprob: -2.7324917316436768
    4. ')' → logprob: -4.107491493225098
    5. ')]
' → logprob: -4.107491493225098
    6. '])' → logprob: -6.982491493225098
    7. ')
' → logprob: -7.232491493225098
    8. '           ' → logprob: -7.607491493225098
    9. '])
' → logprob: -10.482491493225098
    10. ']==' → logprob: -11.857491493225098

Token 1518: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007589706685394049
    2. ' if' → logprob: -5.882589817047119
    3. '   ' → logprob: -6.507589817047119
    4. '               ' → logprob: -7.007589817047119
    5. '       ' → logprob: -7.257589817047119
    6. '<|end|>' → logprob: -7.507589817047119
    7. '```' → logprob: -7.507589817047119
    8. '[' → logprob: -8.882589340209961
    9. '	       ' → logprob: -9.882589340209961
    10. '):
' → logprob: -10.257589340209961

Token 1519: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04047431796789169
    2. '           ' → logprob: -3.2904744148254395
    3. ' if' → logprob: -6.4154744148254395
    4. 'adj' → logprob: -7.1654744148254395
    5. '```' → logprob: -11.040473937988281
    6. ' adj' → logprob: -13.290473937988281
    7. '[' → logprob: -13.790473937988281
    8. 'If' → logprob: -14.165473937988281
    9. '``' → logprob: -15.415473937988281
    10. '   ' → logprob: -15.540473937988281

Token 1520: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020354038861114532
    2. ' a' → logprob: -8.500203132629395
    3. '	a' → logprob: -18.12520408630371
    4. '   ' → logprob: -20.00020408630371
    5. '```' → logprob: -21.12520408630371
    6. '_a' → logprob: -21.25020408630371
    7. '           ' → logprob: -21.37520408630371
    8. '(a' → logprob: -21.50020408630371
    9. 'b' → logprob: -21.50020408630371
    10. 'а' → logprob: -22.00020408630371

Token 1521: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.17987896502017975
    2. ' !=' → logprob: -1.8048789501190186
    3. ')!=' → logprob: -10.054879188537598
    4. '()!=' → logprob: -10.054879188537598
    5. ']!=' → logprob: -10.304879188537598
    6. '!' → logprob: -12.304879188537598
    7. '!==' → logprob: -13.054879188537598
    8. '```' → logprob: -13.179879188537598
    9. '!=(' → logprob: -13.304879188537598
    10. ' not' → logprob: -14.429879188537598

Token 1522: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.5048530030981055e-06
    2. ' b' → logprob: -13.500001907348633
    3. ')b' → logprob: -18.750001907348633
    4. '
' → logprob: -19.375001907348633
    5. '           ' → logprob: -19.500001907348633
    6. '	b' → logprob: -20.125001907348633
    7. '   ' → logprob: -20.125001907348633
    8. '>b' → logprob: -20.375001907348633
    9. '       ' → logprob: -20.500001907348633
    10. '```' → logprob: -20.625001907348633

Token 1523: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14653439819812775
    2. ':' → logprob: -2.0215344429016113
    3. ' and' → logprob: -6.896534442901611
    4. '):
' → logprob: -7.146534442901611
    5. '           ' → logprob: -7.396534442901611
    6. '```' → logprob: -7.521534442901611
    7. '<|end|>' → logprob: -8.521533966064453
    8. '               ' → logprob: -8.896533966064453
    9. '.' → logprob: -8.896533966064453
    10. '       ' → logprob: -9.646533966064453

Token 1524: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00032950565218925476
    2. ' adj' → logprob: -8.750329971313477
    3. '<|end|>' → logprob: -10.000329971313477
    4. '           ' → logprob: -10.250329971313477
    5. '```' → logprob: -10.875329971313477
    6. '                   ' → logprob: -10.875329971313477
    7. '                       ' → logprob: -12.125329971313477
    8. '                               ' → logprob: -12.125329971313477
    9. 'adj' → logprob: -12.250329971313477
    10. ':
' → logprob: -12.250329971313477

Token 1525: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.014192888513207436
    2. ' adj' → logprob: -4.264193058013916
    3. '               ' → logprob: -10.639192581176758
    4. '                   ' → logprob: -12.639192581176758
    5. '           ' → logprob: -13.764192581176758
    6. '(adj' → logprob: -14.764192581176758
    7. '```' → logprob: -14.889192581176758
    8. '   ' → logprob: -15.889192581176758
    9. 'ad' → logprob: -16.264192581176758
    10. '       ' → logprob: -16.639192581176758

Token 1526: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.04894386604428291
    2. '[a' → logprob: -3.0489437580108643
    3. 'a' → logprob: -8.423943519592285
    4. 'strong' → logprob: -9.673943519592285
    5. 'str' → logprob: -9.923943519592285
    6. '[str' → logprob: -11.048943519592285
    7. '```' → logprob: -12.923943519592285
    8. '[' → logprob: -13.048943519592285
    9. 'STR' → logprob: -14.048943519592285
    10. '[b' → logprob: -14.423943519592285

Token 1527: 'ong' (ID: 705)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.2058102786540985
    2. '[a' → logprob: -2.580810308456421
    3. 'ong' → logprob: -2.955810308456421
    4. '_str' → logprob: -3.705810308456421
    5. '[' → logprob: -3.830810308456421
    6. 'tr' → logprob: -5.455810070037842
    7. '[b' → logprob: -5.955810070037842
    8. '```' → logprob: -6.080810070037842
    9. 'rong' → logprob: -7.455810070037842
    10. '[str' → logprob: -7.580810070037842

Token 1528: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.3856492842023727e-06
    2. 'a' → logprob: -14.250000953674316
    3. '[' → logprob: -15.125000953674316
    4. '[b' → logprob: -15.250000953674316
    5. '```' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.750001907348633
    7. ' [' → logprob: -18.000001907348633
    8. '           ' → logprob: -18.125001907348633
    9. '\[' → logprob: -18.875001907348633
    10. '       ' → logprob: -19.750001907348633

Token 1529: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0013663081917911768
    2. '.append' → logprob: -6.876366138458252
    3. '.' → logprob: -8.12636661529541
    4. '           ' → logprob: -10.62636661529541
    5. '               ' → logprob: -12.25136661529541
    6. ').' → logprob: -12.50136661529541
    7. '                   ' → logprob: -14.00136661529541
    8. ' ].' → logprob: -14.12636661529541
    9. '[' → logprob: -14.25136661529541
    10. ']' → logprob: -14.25136661529541

Token 1530: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. ' append' → logprob: -16.375
    3. '.append' → logprob: -16.625
    4. 'add' → logprob: -19.5
    5. 'appen' → logprob: -19.5
    6. '	append' → logprob: -19.625
    7. '_append' → logprob: -20.375
    8. 'push' → logprob: -20.625
    9. '```' → logprob: -21.25
    10. 'app' → logprob: -22.0

Token 1531: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1269282102584839
    2. '(b' → logprob: -2.1269283294677734
    3. ' b' → logprob: -16.126928329467773
    4. ')b' → logprob: -17.251928329467773
    5. '	b' → logprob: -17.626928329467773
    6. '[b' → logprob: -19.251928329467773
    7. '(
' → logprob: -20.001928329467773
    8. '(' → logprob: -20.126928329467773
    9. '>b' → logprob: -21.376928329467773
    10. '_b' → logprob: -21.626928329467773

Token 1532: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017697816947475076
    2. '<|end|>' → logprob: -6.50177001953125
    3. ')
' → logprob: -9.25177001953125
    4. '               ' → logprob: -9.62677001953125
    5. '<|end|>' → logprob: -10.50177001953125
    6. '       ' → logprob: -10.75177001953125
    7. '           ' → logprob: -10.87677001953125
    8. ']' → logprob: -11.87677001953125
    9. '                   ' → logprob: -12.75177001953125
    10. '[' → logprob: -12.87677001953125

Token 1533: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17715011537075043
    2. '<|end|>' → logprob: -2.177150011062622
    3. '       ' → logprob: -3.177150011062622
    4. '```' → logprob: -5.802150249481201
    5. '

' → logprob: -7.302150249481201
    6. '        
' → logprob: -7.552150249481201
    7. ',
' → logprob: -7.552150249481201
    8. '   ' → logprob: -7.927150249481201
    9. '<|end|>' → logprob: -7.927150249481201
    10. '\n' → logprob: -8.177149772644043

Token 1534: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8348245024681091
    2. '       ' → logprob: -1.084824562072754
    3. 'from' → logprob: -2.084824562072754
    4. 'import' → logprob: -3.209824562072754
    5. 'dist' → logprob: -3.459824562072754
    6. 'dp' → logprob: -4.459824562072754
    7. '
' → logprob: -5.584824562072754
    8. '   ' → logprob: -5.709824562072754
    9. 'in' → logprob: -6.209824562072754
    10. '#' (adapté à ' #') → logprob: -6.209824562072754

Token 1535: ' Floyd' (ID: 76639)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.3217147588729858
    2. 'visited' → logprob: -1.4467147588729858
    3. 'import' → logprob: -1.5717147588729858
    4. 'dist' → logprob: -1.9467147588729858
    5. '#' → logprob: -2.6967148780822754
    6. '       ' → logprob: -3.0717148780822754
    7. 'def' → logprob: -4.696714878082275
    8. 'ind' → logprob: -5.071714878082275
    9. 'in' → logprob: -5.321714878082275
    10. 'dp' → logprob: -5.571714878082275

Token 1536: '-W' (ID: 14439)
  Prédit: '-W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-W' → logprob: -0.5547621250152588
    2. 'dist' → logprob: -1.5547621250152588
    3. '_w' → logprob: -2.179762125015259
    4. 'W' → logprob: -3.679762125015259
    5. 'war' → logprob: -3.679762125015259
    6. '_W' → logprob: -4.55476188659668
    7. 'War' → logprob: -4.67976188659668
    8. '-war' → logprob: -4.92976188659668
    9. 'for' → logprob: -5.17976188659668
    10. 'adj' → logprob: -5.67976188659668

Token 1537: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -9.019237768370658e-05
    2. 'arshal' → logprob: -9.750090599060059
    3. 'War' → logprob: -11.000090599060059
    4. '
' → logprob: -12.250090599060059
    5. '           ' → logprob: -13.375090599060059
    6. '```' → logprob: -13.500090599060059
    7. '   ' → logprob: -13.875090599060059
    8. 'a' → logprob: -14.375090599060059
    9. 'var' → logprob: -14.375090599060059
    10. 'ars' → logprob: -14.375090599060059

Token 1538: 'shall' (ID: 30275)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.2633446455001831
    2. 'll' → logprob: -2.0133447647094727
    3. 'shall' → logprob: -2.5133447647094727
    4. 'sh' → logprob: -4.388344764709473
    5. '```' → logprob: -6.513344764709473
    6. 'r' → logprob: -6.763344764709473
    7. 'shal' → logprob: -7.763344764709473
    8. '``' → logprob: -8.513344764709473
    9. 'arshal' → logprob: -8.638344764709473
    10. 'shaw' → logprob: -9.013344764709473

Token 1539: ' or' (ID: 503)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06578853726387024
    2. ' for' → logprob: -3.190788507461548
    3. '```' → logprob: -4.190788745880127
    4. '
' → logprob: -5.190788745880127
    5. '``' → logprob: -7.065788745880127
    6. '       ' → logprob: -7.190788745880127
    7. '\n' → logprob: -9.690788269042969
    8. '`' → logprob: -10.315788269042969
    9. '`
' → logprob: -10.690788269042969
    10. '        
' → logprob: -11.190788269042969

Token 1540: ' BFS' (ID: 190016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6522880792617798
    2. 'import' → logprob: -1.6522880792617798
    3. 'from' → logprob: -1.6522880792617798
    4. 'None' → logprob: -3.9022879600524902
    5. '```' → logprob: -4.15228796005249
    6. '#' → logprob: -4.40228796005249
    7. '
' → logprob: -4.52728796005249
    8. ' for' → logprob: -4.52728796005249
    9. 'adj' → logprob: -4.90228796005249
    10. 'dp' → logprob: -5.02728796005249

Token 1541: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.137446790933609
    2. '
' → logprob: -3.262446880340576
    3. ' for' → logprob: -3.387446880340576
    4. 'dist' → logprob: -4.012446880340576
    5. '#' → logprob: -4.637446880340576
    6. '       ' → logprob: -4.887446880340576
    7. 'distance' → logprob: -5.012446880340576
    8. 'import' → logprob: -5.387446880340576
    9. '```' → logprob: -5.762446880340576
    10. 'dp' → logprob: -7.137446880340576

Token 1542: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.5950838327407837
    2. 'range' → logprob: -0.8450838327407837
    3. 'i' → logprob: -4.720083713531494
    4. '0' → logprob: -5.345083713531494
    5. '
' → logprob: -5.970083713531494
    6. 'for' → logprob: -7.095083713531494
    7. ' range' → logprob: -7.845083713531494
    8. 'all' → logprob: -7.845083713531494
    9. '```' → logprob: -7.970083713531494
    10. ' each' → logprob: -8.095084190368652

Token 1543: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.4890778362751007
    2. 'i' → logprob: -1.3640778064727783
    3. 'for' → logprob: -2.2390778064727783
    4. 'range' → logprob: -4.114078044891357
    5. '
' → logprob: -5.864078044891357
    6. ' node' → logprob: -6.364078044891357
    7. 'v' → logprob: -6.739078044891357
    8. '   ' → logprob: -7.489078044891357
    9. 'u' → logprob: -7.739078044891357
    10. ' for' → logprob: -8.1140775680542

Token 1544: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46768760681152344
    2. '
' → logprob: -1.0926876068115234
    3. '       ' → logprob: -3.4676876068115234
    4. ' for' → logprob: -5.342687606811523
    5. 'dist' → logprob: -7.342687606811523
    6. 'import' → logprob: -7.342687606811523
    7. '#' → logprob: -8.342687606811523
    8. ',
' → logprob: -8.842687606811523
    9. '```' → logprob: -9.217687606811523
    10. 'distance' → logprob: -9.717687606811523

Token 1545: ' find' (ID: 1646)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.1050654873251915
    2. 'find' → logprob: -3.2300655841827393
    3. 'check' → logprob: -3.3550655841827393
    4. 'detect' → logprob: -4.60506534576416
    5. '
' → logprob: -4.98006534576416
    6. 'compute' → logprob: -6.10506534576416
    7. 'range' → logprob: -6.35506534576416
    8. '#' → logprob: -6.98006534576416
    9. ' find' → logprob: -7.10506534576416
    10. ' check' → logprob: -7.35506534576416

Token 1546: ' reach' (ID: 7627)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.3361358642578125
    2. 'reach' → logprob: -1.7111358642578125
    3. 'reachable' → logprob: -1.7111358642578125
    4. 'for' → logprob: -2.0861358642578125
    5. 'dist' → logprob: -2.2111358642578125
    6. '```' → logprob: -3.4611358642578125
    7. 'each' → logprob: -3.5861358642578125
    8. 'range' → logprob: -4.5861358642578125
    9. '``' → logprob: -4.7111358642578125
    10. ' all' → logprob: -5.0861358642578125

Token 1547: 'ability' (ID: 3563)
  Prédit: 'able'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.02324792370200157
    2. 'ability' → logprob: -3.7732479572296143
    3. '[' → logprob: -13.898247718811035
    4. '[i' → logprob: -14.523247718811035
    5. '[]' → logprob: -15.273247718811035
    6. 'b' → logprob: -15.773247718811035
    7. '       ' → logprob: -16.02324867248535
    8. '           ' → logprob: -16.27324867248535
    9. 'a' → logprob: -16.64824867248535
    10. '[a' → logprob: -16.77324867248535

Token 1548: '?
' (ID: 3901)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04337674751877785
    2. 'for' → logprob: -3.5433766841888428
    3. '       ' → logprob: -4.668376922607422
    4. 'dist' → logprob: -6.668376922607422
    5. '```' → logprob: -7.043376922607422
    6. ' for' → logprob: -7.168376922607422
    7. '        
' → logprob: -8.293376922607422
    8. '

' → logprob: -8.918376922607422
    9. '\n' → logprob: -8.918376922607422
    10. ',
' → logprob: -9.043376922607422

Token 1549: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8655361533164978
    2. '       ' → logprob: -1.1155362129211426
    3. 'for' → logprob: -2.2405362129211426
    4. 'from' → logprob: -2.7405362129211426
    5. '#' → logprob: -3.2405362129211426
    6. 'import' → logprob: -4.365536212921143
    7. '```' → logprob: -4.615536212921143
    8. 'visited' → logprob: -5.240536212921143
    9. 'dist' → logprob: -5.865536212921143
    10. 'For' → logprob: -6.365536212921143

Token 1550: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2821793258190155
    2. '       ' → logprob: -2.407179355621338
    3. 'n' → logprob: -3.032179355621338
    4. 'for' → logprob: -3.657179355621338
    5. '```' → logprob: -3.657179355621338
    6. 'visited' → logprob: -4.282179355621338
    7. '\n' → logprob: -4.532179355621338
    8. 'dist' → logprob: -4.782179355621338
    9. '#' (adapté à ' #') → logprob: -5.657179355621338
    10. 'import' → logprob: -5.907179355621338

Token 1551: ' Up' (ID: 4686)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04764283448457718
    2. 'from' → logprob: -4.297642707824707
    3. 'import' → logprob: -4.422642707824707
    4. 'visited' → logprob: -5.047642707824707
    5. '       ' → logprob: -5.422642707824707
    6. 'dp' → logprob: -5.797642707824707
    7. 'distance' → logprob: -6.297642707824707
    8. '#' → logprob: -6.422642707824707
    9. 'reachable' → logprob: -6.672642707824707
    10. ' dist' → logprob: -6.922642707824707

Token 1552: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4099184274673462
    2. '       ' → logprob: -2.4099183082580566
    3. 'date' → logprob: -2.4099183082580566
    4. '   ' → logprob: -3.0349183082580566
    5. 'd' → logprob: -4.034918308258057
    6. ' to' → logprob: -4.284918308258057
    7. '```' → logprob: -4.409918308258057
    8. '#' → logprob: -4.534918308258057
    9. 'To' → logprob: -4.659918308258057
    10. '
' → logprob: -4.909918308258057

Token 1553: ' ' (ID: 220)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.5574089884757996
    2. '100' → logprob: -1.4324090480804443
    3. '500' → logprob: -2.6824090480804443
    4. '200' → logprob: -2.9324090480804443
    5. '10' → logprob: -4.182408809661865
    6. '250' → logprob: -4.307408809661865
    7. '300' → logprob: -4.307408809661865
    8. '150' → logprob: -4.807408809661865
    9. 'cnt' → logprob: -5.057408809661865
    10. ' comp' → logprob: -6.557408809661865

Token 1554: '200' (ID: 1179)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.005693657789379358
    2. '100' → logprob: -5.755693435668945
    3. '500' → logprob: -6.880693435668945
    4. 'cnt' → logprob: -6.880693435668945
    5. '200' → logprob: -9.005693435668945
    6. '300' → logprob: -9.380693435668945
    7. '10' → logprob: -9.380693435668945
    8. '250' → logprob: -9.630693435668945
    9. 'cmp' → logprob: -10.630693435668945
    10. ' comp' → logprob: -11.005693435668945

Token 1555: ' streets' (ID: 25360)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06484245508909225
    2. 'for' → logprob: -3.814842462539673
    3. '       ' → logprob: -4.064842224121094
    4. '```' → logprob: -4.314842224121094
    5. '<|end|>' → logprob: -6.314842224121094
    6. ' for' → logprob: -6.814842224121094
    7. ')' → logprob: -7.064842224121094
    8. '#' → logprob: -7.189842224121094
    9. 'n' → logprob: -7.564842224121094
    10. ',
' → logprob: -7.564842224121094

Token 1556: ',' (ID: 11)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8759555220603943
    2. 'visited' → logprob: -0.8759555220603943
    3. 'for' → logprob: -2.500955581665039
    4. '       ' → logprob: -3.375955581665039
    5. 'distance' → logprob: -4.500955581665039
    6. 'dp' → logprob: -4.500955581665039
    7. '```' → logprob: -4.875955581665039
    8. 'reachable' → logprob: -5.375955581665039
    9. '#' → logprob: -5.500955581665039
    10. '
' → logprob: -5.500955581665039

Token 1557: ' after' (ID: 1934)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.222515270113945
    2. 'import' → logprob: -2.597515344619751
    3. '```' → logprob: -2.847515344619751
    4. '
' → logprob: -3.097515344619751
    5. 'for' → logprob: -4.972515106201172
    6. '       ' → logprob: -5.097515106201172
    7. 'from' → logprob: -6.222515106201172
    8. 'dist' → logprob: -6.347515106201172
    9. '``' → logprob: -6.847515106201172
    10. ' so' → logprob: -7.222515106201172

Token 1558: ' union' (ID: 22208)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.9875249862670898
    2. '```' → logprob: -1.1125249862670898
    3. '
' → logprob: -1.9875249862670898
    4. 'adj' → logprob: -2.48752498626709
    5. 'range' → logprob: -3.61252498626709
    6. 'the' → logprob: -4.36252498626709
    7. 'completion' → logprob: -4.98752498626709
    8. 'a' → logprob: -5.48752498626709
    9. 'this' → logprob: -5.73752498626709
    10. 'that' → logprob: -6.11252498626709

Token 1559: ' find' (ID: 1646)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8856983184814453
    2. 'for' → logprob: -1.0106983184814453
    3. '```' → logprob: -2.1356983184814453
    4. ' for' → logprob: -2.7606983184814453
    5. '``' → logprob: -4.885698318481445
    6. '       ' → logprob: -4.885698318481445
    7. '<|end|>' → logprob: -5.135698318481445
    8. '[
' → logprob: -5.260698318481445
    9. ',
' → logprob: -6.510698318481445
    10. ',' → logprob: -6.510698318481445

Token 1560: ' less' (ID: 3760)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.707298755645752
    2. 'for' → logprob: -1.457298755645752
    3. '       ' → logprob: -1.707298755645752
    4. '#' → logprob: -2.832298755645752
    5. '```' → logprob: -4.457298755645752
    6. ' for' → logprob: -4.707298755645752
    7. 'visited' → logprob: -5.457298755645752
    8. 'import' → logprob: -6.332298755645752
    9. 'dist' → logprob: -6.582298755645752
    10. '

' → logprob: -6.832298755645752

Token 1561: ' than' (ID: 1572)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2169830799102783
    2. '```' → logprob: -1.4669830799102783
    3. '       ' → logprob: -1.5919830799102783
    4. 'for' → logprob: -1.8419830799102783
    5. '[
' → logprob: -3.8419830799102783
    6. '[' → logprob: -4.091982841491699
    7. ' for' → logprob: -4.091982841491699
    8. '[]' → logprob: -4.716982841491699
    9. '[]
' → logprob: -5.216982841491699
    10. '``' → logprob: -5.466982841491699

Token 1562: ' ' (ID: 220)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0025905270595103502
    2. ' comp' → logprob: -6.252590656280518
    3. '```' → logprob: -8.50259017944336
    4. '200' → logprob: -9.12759017944336
    5. '100' → logprob: -9.12759017944336
    6. '=' → logprob: -9.62759017944336
    7. '250' → logprob: -9.75259017944336
    8. '300' → logprob: -10.50259017944336
    9. '   ' → logprob: -10.87759017944336
    10. '	comp' → logprob: -11.00259017944336

Token 1563: '200' (ID: 1179)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0036290506832301617
    2. '=' → logprob: -6.378629207611084
    3. '300' → logprob: -7.253629207611084
    4. '200' → logprob: -7.378629207611084
    5. '250' → logprob: -8.503628730773926
    6. '400' → logprob: -9.003628730773926
    7. '500' → logprob: -9.378628730773926
    8. ' comp' → logprob: -9.628628730773926
    9. '100' → logprob: -10.003628730773926
    10. '```' → logprob: -11.003628730773926

Token 1564: ' comps' (ID: 174219)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7393659353256226
    2. '
' → logprob: -1.1143659353256226
    3. 'dist' → logprob: -1.9893659353256226
    4. 'visited' → logprob: -4.114366054534912
    5. '   ' → logprob: -4.614366054534912
    6. 'distance' → logprob: -4.989366054534912
    7. 'n' → logprob: -5.364366054534912
    8. '```' → logprob: -5.489366054534912
    9. '#' → logprob: -5.614366054534912
    10. 'dp' → logprob: -5.739366054534912

Token 1565: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3304748237133026
    2. '
' → logprob: -2.080474853515625
    3. 'dist' → logprob: -3.205474853515625
    4. 'visited' → logprob: -3.455474853515625
    5. '```' → logprob: -3.830474853515625
    6. 'for' → logprob: -3.955474853515625
    7. '#' → logprob: -4.205474853515625
    8. 'from' → logprob: -4.330474853515625
    9. 'distance' → logprob: -4.955474853515625
    10. 'dp' → logprob: -5.955474853515625

Token 1566: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6132304668426514
    2. 'visited' → logprob: -1.1132304668426514
    3. '       ' → logprob: -2.7382304668426514
    4. '
' → logprob: -3.6132304668426514
    5. 'distance' → logprob: -4.3632307052612305
    6. 'dp' → logprob: -4.3632307052612305
    7. 'from' → logprob: -5.9882307052612305
    8. '```' → logprob: -5.9882307052612305
    9. 'reachable' → logprob: -5.9882307052612305
    10. 'for' → logprob: -6.3632307052612305

Token 1567: ' reach' (ID: 7627)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.019788101315498352
    2. '       ' → logprob: -4.8947882652282715
    3. 'reach' (adapté à ' reach') → logprob: -5.5197882652282715
    4. 'dp' → logprob: -5.6447882652282715
    5. 'reachable' → logprob: -6.1447882652282715
    6. 'import' → logprob: -6.8947882652282715
    7. 'from' → logprob: -7.2697882652282715
    8. 'distance' → logprob: -8.144787788391113
    9. 'visited' → logprob: -8.644787788391113
    10. 'for' → logprob: -9.519787788391113

Token 1568: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08242321014404297
    2. '=' → logprob: -2.582423210144043
    3. '=[' → logprob: -6.082423210144043
    4. '=[[' → logprob: -7.582423210144043
    5. 'able' → logprob: -7.832423210144043
    6. 'ability' → logprob: -8.957423210144043
    7. '[' → logprob: -9.207423210144043
    8. '   ' → logprob: -10.082423210144043
    9. '=[]' → logprob: -11.082423210144043
    10. '=[]
' → logprob: -11.457423210144043

Token 1569: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018285265192389488
    2. '[[' → logprob: -4.018285274505615
    3. '[class' → logprob: -10.143284797668457
    4. ' [' → logprob: -11.643284797668457
    5. '[len' → logprob: -11.643284797668457
    6. '[count' → logprob: -11.643284797668457
    7. '[e' → logprob: -11.893284797668457
    8. '[a' → logprob: -12.018284797668457
    9. '[array' → logprob: -12.268284797668457
    10. '[list' → logprob: -12.268284797668457

Token 1570: 'set' (ID: 977)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000946472748182714
    2. 'set' → logprob: -7.000946521759033
    3. ' [' → logprob: -11.125946044921875
    4. '[s' → logprob: -11.625946044921875
    5. '[[' → logprob: -12.500946044921875
    6. '[-' → logprob: -13.250946044921875
    7. '[a' → logprob: -13.875946044921875
    8. '[c' → logprob: -14.125946044921875
    9. '[b' → logprob: -14.375946044921875
    10. '{' → logprob: -14.500946044921875

Token 1571: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0175681971013546
    2. '([' → logprob: -4.642568111419678
    3. '()
' → logprob: -5.017568111419678
    4. '()]' → logprob: -7.642568111419678
    5. '(range' → logprob: -8.142568588256836
    6. '(comp' → logprob: -9.267568588256836
    7. '()[' → logprob: -9.392568588256836
    8. '([]' → logprob: -9.892568588256836
    9. '()

' → logprob: -10.142568588256836
    10. '()`' → logprob: -10.392568588256836

Token 1572: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020729433745145798
    2. 'for' → logprob: -4.6457295417785645
    3. '(comp' → logprob: -5.3957295417785645
    4. '([' → logprob: -5.6457295417785645
    5. '()
' → logprob: -6.6457295417785645
    6. '(range' → logprob: -6.7707295417785645
    7. '(adj' → logprob: -9.520729064941406
    8. '(i' → logprob: -9.520729064941406
    9. ' for' → logprob: -9.645729064941406
    10. '()]' → logprob: -10.395729064941406

Token 1573: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00045807508286088705
    2. '_i' → logprob: -8.125457763671875
    3. '_comp' → logprob: -9.250457763671875
    4. '_range' → logprob: -10.375457763671875
    5. 'i' → logprob: -11.500457763671875
    6. ' _' → logprob: -12.000457763671875
    7. 'range' → logprob: -12.000457763671875
    8. '_c' → logprob: -12.875457763671875
    9. ' range' → logprob: -13.000457763671875
    10. '_in' → logprob: -13.125457763671875

Token 1574: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008995534852147102
    2. ' range' → logprob: -4.758995532989502
    3. '_' → logprob: -8.38399600982666
    4. '_range' → logprob: -9.75899600982666
    5. 'in' → logprob: -10.00899600982666
    6. '(range' → logprob: -10.75899600982666
    7. 'i' → logprob: -11.13399600982666
    8. ' in' → logprob: -12.50899600982666
    9. '   ' → logprob: -12.63399600982666
    10. ' ' → logprob: -13.38399600982666

Token 1575: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.306760805164231e-05
    2. ' range' → logprob: -11.25001335144043
    3. '(range' → logprob: -19.37501335144043
    4. '   ' → logprob: -19.75001335144043
    5. '
' → logprob: -21.62501335144043
    6. ' ' → logprob: -22.25001335144043
    7. '	range' → logprob: -23.00001335144043
    8. 'comp' → logprob: -23.12501335144043
    9. '       ' → logprob: -23.87501335144043
    10. '           ' → logprob: -23.87501335144043

Token 1576: '(comp' (ID: 60272)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.00862143188714981
    2. 'range' → logprob: -4.7586212158203125
    3. '(comp' → logprob: -12.008621215820312
    4. ' comp' → logprob: -14.133621215820312
    5. ' range' → logprob: -16.133621215820312
    6. 'c' → logprob: -18.508621215820312
    7. 'count' → logprob: -18.633621215820312
    8. 'cmp' → logprob: -19.008621215820312
    9. '	comp' → logprob: -19.258621215820312
    10. 'i' → logprob: -19.383621215820312

Token 1577: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.016205864027142525
    2. ')]' → logprob: -4.516205787658691
    3. ')' → logprob: -6.516205787658691
    4. 'id' → logprob: -6.641205787658691
    5. '_size' → logprob: -7.391205787658691
    6. 'i' → logprob: -7.391205787658691
    7. '_i' → logprob: -8.141205787658691
    8. 'size' → logprob: -8.516205787658691
    9. '[
' → logprob: -9.266205787658691
    10. ']' → logprob: -9.641205787658691

Token 1578: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.137123703956604
    2. ']' → logprob: -2.1371235847473145
    3. ')]
' → logprob: -5.1371235847473145
    4. ')]' → logprob: -5.7621235847473145
    5. ']

' → logprob: -7.5121235847473145
    6. ']
' → logprob: -8.262124061584473
    7. ')' → logprob: -8.637124061584473
    8. '       ' → logprob: -9.387124061584473
    9. ')
' → logprob: -10.262124061584473
    10. '()]
' → logprob: -11.512124061584473

Token 1579: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025200646370649338
    2. '       ' → logprob: -3.775200605392456
    3. ' for' → logprob: -6.275200843811035
    4. '```' → logprob: -10.525200843811035
    5. '   ' → logprob: -10.650200843811035
    6. '
' → logprob: -10.900200843811035
    7. '	for' → logprob: -13.650200843811035
    8. '``' → logprob: -15.275200843811035
    9. 'i' → logprob: -16.02519989013672
    10. '`' → logprob: -16.27519989013672

Token 1580: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.650518920039758e-06
    2. 'from' → logprob: -13.000003814697266
    3. ' for' → logprob: -14.000003814697266
    4. 'queue' → logprob: -15.625003814697266
    5. '   ' → logprob: -16.125003814697266
    6. '       ' → logprob: -16.375003814697266
    7. '```' → logprob: -17.250003814697266
    8. '
' → logprob: -17.500003814697266
    9. 'stack' → logprob: -18.000003814697266
    10. '	for' → logprob: -18.250003814697266

Token 1581: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024793429765850306
    2. 'u' → logprob: -6.002479553222656
    3. 'v' → logprob: -13.377479553222656
    4. 's' → logprob: -13.877479553222656
    5. ' i' → logprob: -14.002479553222656
    6. 'x' → logprob: -15.002479553222656
    7. 'node' → logprob: -17.502479553222656
    8. 'k' → logprob: -17.502479553222656
    9. ' u' → logprob: -17.877479553222656
    10. '
' → logprob: -18.252479553222656

Token 1582: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4744619131088257
    2. ' in' → logprob: -0.9744619131088257
    3. '0' → logprob: -9.849461555480957
    4. 'i' → logprob: -9.849461555480957
    5. '[' → logprob: -9.974461555480957
    6. ',' → logprob: -10.474461555480957
    7. '[i' → logprob: -10.849461555480957
    8. '```' → logprob: -10.849461555480957
    9. '_in' → logprob: -10.974461555480957
    10. '_' → logprob: -10.974461555480957

Token 1583: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.5597102396423e-05
    2. ' range' → logprob: -10.250035285949707
    3. '
' → logprob: -16.625036239624023
    4. '   ' → logprob: -17.375036239624023
    5. '0' → logprob: -17.500036239624023
    6. ' ' → logprob: -19.000036239624023
    7. '```' → logprob: -20.000036239624023
    8. '	range' → logprob: -20.125036239624023
    9. '(range' → logprob: -20.500036239624023
    10. '  ' → logprob: -21.375036239624023

Token 1584: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -0.048592932522296906
    2. 'comp' → logprob: -3.048593044281006
    3. '   ' → logprob: -13.423592567443848
    4. '	comp' → logprob: -13.673592567443848
    5. '       ' → logprob: -13.798592567443848
    6. ' comp' → logprob: -14.048592567443848
    7. '(len' → logprob: -14.548592567443848
    8. '(' → logprob: -15.548592567443848
    9. '           ' → logprob: -15.923592567443848
    10. 'len' → logprob: -16.173593521118164

Token 1585: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -6.790129555156454e-05
    2. '_i' → logprob: -10.625067710876465
    3. 'i' → logprob: -11.750067710876465
    4. 'id' → logprob: -11.750067710876465
    5. '):
' → logprob: -12.500067710876465
    6. '   ' → logprob: -12.500067710876465
    7. '```' → logprob: -12.625067710876465
    8. 'd' → logprob: -13.000067710876465
    9. '[i' → logprob: -13.000067710876465
    10. 's' → logprob: -13.250067710876465

Token 1586: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01170053705573082
    2. '):' → logprob: -4.761700630187988
    3. ']:
' → logprob: -6.261700630187988
    4. '():
' → logprob: -8.511700630187988
    5. ':
' → logprob: -8.511700630187988
    6. ']):
' → logprob: -8.511700630187988
    7. ':' → logprob: -8.761700630187988
    8. '):
' → logprob: -9.261700630187988
    9. ')' → logprob: -9.511700630187988
    10. '       ' → logprob: -9.886700630187988

Token 1587: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14313529431819916
    2. '   ' → logprob: -2.7681353092193604
    3. '           ' → logprob: -3.6431353092193604
    4. '```' → logprob: -3.6431353092193604
    5. ' for' → logprob: -4.268135070800781
    6. 'for' → logprob: -5.768135070800781
    7. '`' → logprob: -8.518135070800781
    8. '
' → logprob: -8.893135070800781
    9. '	   ' → logprob: -9.143135070800781
    10. '#' → logprob: -9.268135070800781

Token 1588: ' reach' (ID: 7627)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7222861647605896
    2. 'stack' → logprob: -1.9722862243652344
    3. 'queue' → logprob: -1.9722862243652344
    4. 'for' → logprob: -2.4722862243652344
    5. 'q' → logprob: -2.8472862243652344
    6. 'import' → logprob: -2.9722862243652344
    7. '   ' → logprob: -3.9722862243652344
    8. '```' → logprob: -4.597286224365234
    9. '       ' → logprob: -5.097286224365234
    10. 'reach' (adapté à ' reach') → logprob: -5.597286224365234

Token 1589: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[I' → logprob: -14.500000953674316
    3. '[' → logprob: -15.625000953674316
    4. ' [' → logprob: -15.750000953674316
    5. 'i' → logprob: -16.250001907348633
    6. '```' → logprob: -17.250001907348633
    7. '
' → logprob: -17.375001907348633
    8. ' =' → logprob: -18.000001907348633
    9. '[a' → logprob: -18.000001907348633
    10. '=i' → logprob: -18.125001907348633

Token 1590: '].' (ID: 1651)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.19919860363006592
    2. '.' → logprob: -2.4491987228393555
    3. '].' → logprob: -2.4491987228393555
    4. '.update' → logprob: -5.3241987228393555
    5. ').' → logprob: -6.0741987228393555
    6. ' .' → logprob: -7.9491987228393555
    7. '=' → logprob: -9.199198722839355
    8. '.clear' → logprob: -9.824198722839355
    9. '().' → logprob: -10.199198722839355
    10. '.=' → logprob: -10.324198722839355

Token 1591: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.002477796748280525
    2. 'update' → logprob: -6.002477645874023
    3. '.add' → logprob: -13.252477645874023
    4. 'append' → logprob: -15.627477645874023
    5. '.update' → logprob: -16.127477645874023
    6. ' add' → logprob: -16.627477645874023
    7. 'extend' → logprob: -17.002477645874023
    8. '_add' → logprob: -17.377477645874023
    9. 'clear' → logprob: -17.502477645874023
    10. 'import' → logprob: -19.127477645874023

Token 1592: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.0
    3. 'adj' → logprob: -18.25
    4. '(adj' → logprob: -18.25
    5. '(comp' → logprob: -19.375
    6. '(' → logprob: -19.625
    7. '{i' → logprob: -20.25
    8. '=i' → logprob: -20.375
    9. '[i' → logprob: -20.375
    10. ' i' → logprob: -20.625

Token 1593: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021255332976579666
    2. ')
' → logprob: -3.8962552547454834
    3. '<|end|>' → logprob: -8.146255493164062
    4. '       ' → logprob: -8.271255493164062
    5. '           ' → logprob: -9.146255493164062
    6. '<|end|>' → logprob: -11.271255493164062
    7. '
' → logprob: -11.396255493164062
    8. 'for' → logprob: -12.021255493164062
    9. ')#' → logprob: -12.521255493164062
    10. '```' → logprob: -12.771255493164062

Token 1594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7467057108879089
    2. '
' → logprob: -1.6217057704925537
    3. 'for' → logprob: -1.9967057704925537
    4. ' for' → logprob: -2.1217057704925537
    5. '           ' → logprob: -2.9967057704925537
    6. '   ' → logprob: -4.371705532073975
    7. '<|end|>' → logprob: -5.246705532073975
    8. '```' → logprob: -5.621705532073975
    9. '	for' → logprob: -7.496705532073975
    10. '<|end|>' → logprob: -8.746706008911133

Token 1595: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005890139145776629
    2. '       ' → logprob: -8.000589370727539
    3. '   ' → logprob: -9.000589370727539
    4. 'queue' → logprob: -10.000589370727539
    5. 'from' → logprob: -10.000589370727539
    6. ' for' → logprob: -10.750589370727539
    7. '```' → logprob: -11.625589370727539
    8. '
' → logprob: -12.250589370727539
    9. 'import' → logprob: -12.500589370727539
    10. '	for' → logprob: -15.000589370727539

Token 1596: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2702910006046295
    2. 'u' → logprob: -1.5202909708023071
    3. ' u' → logprob: -4.770290851593018
    4. ' i' → logprob: -5.020290851593018
    5. 'a' → logprob: -6.895290851593018
    6. '_' → logprob: -7.520290851593018
    7. 'v' → logprob: -8.020291328430176
    8. '   ' → logprob: -8.520291328430176
    9. '_i' → logprob: -8.645291328430176
    10. 'node' → logprob: -9.145291328430176

Token 1597: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2813691794872284
    2. 'in' → logprob: -1.4063692092895508
    3. ',' → logprob: -8.65636920928955
    4. 'n' → logprob: -10.90636920928955
    5. '   ' → logprob: -12.03136920928955
    6. ',in' → logprob: -12.78136920928955
    7. '	in' → logprob: -13.03136920928955
    8. 'i' → logprob: -13.15636920928955
    9. ' ' → logprob: -13.65636920928955
    10. '_in' → logprob: -13.78136920928955

Token 1598: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002981624274980277
    2. ' range' → logprob: -8.125298500061035
    3. 'in' → logprob: -14.000298500061035
    4. '
' → logprob: -14.500298500061035
    5. 'adj' → logprob: -15.125298500061035
    6. '(range' → logprob: -15.750298500061035
    7. '```' → logprob: -15.875298500061035
    8. '   ' → logprob: -15.875298500061035
    9. ' ' → logprob: -17.00029754638672
    10. 'comp' → logprob: -17.37529754638672

Token 1599: '(comp' (ID: 60272)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25512969493865967
    2. 'comp' → logprob: -1.5051296949386597
    3. '(comp' → logprob: -5.880129814147949
    4. ' range' → logprob: -8.00512981414795
    5. 'adj' → logprob: -10.38012981414795
    6. '(range' → logprob: -10.88012981414795
    7. ' comp' → logprob: -11.50512981414795
    8. '(' → logprob: -13.00512981414795
    9. '   ' → logprob: -13.13012981414795
    10. '
' → logprob: -13.25512981414795

Token 1600: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -9.686778503237292e-05
    2. 'id' → logprob: -9.875097274780273
    3. '):
' → logprob: -11.500097274780273
    4. '       ' → logprob: -11.750097274780273
    5. '   ' → logprob: -12.125097274780273
    6. '           ' → logprob: -13.000097274780273
    7. 'Id' → logprob: -13.000097274780273
    8. 'd' → logprob: -13.125097274780273
    9. 'i' → logprob: -13.125097274780273
    10. '```' → logprob: -13.500097274780273

Token 1601: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0028853563126176596
    2. '):' → logprob: -6.002885341644287
    3. ':
' → logprob: -9.252885818481445
    4. ']:
' → logprob: -9.377885818481445
    5. '       ' → logprob: -9.502885818481445
    6. '           ' → logprob: -10.127885818481445
    7. '   ' → logprob: -10.377885818481445
    8. ':' → logprob: -10.377885818481445
    9. '):
' → logprob: -11.127885818481445
    10. '():
' → logprob: -11.627885818481445

Token 1602: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1619066745042801
    2. '       ' → logprob: -2.7869067192077637
    3. '   ' → logprob: -3.2869067192077637
    4. ' for' → logprob: -3.4119067192077637
    5. '```' → logprob: -4.286906719207764
    6. 'for' → logprob: -6.536906719207764
    7. ':
' → logprob: -6.911906719207764
    8. '
' → logprob: -8.161906242370605
    9. '	       ' → logprob: -8.786906242370605
    10. '	   ' → logprob: -8.786906242370605

Token 1603: ' for' (ID: 395)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.08330368250608444
    2. '   ' → logprob: -3.083303689956665
    3. 'queue' → logprob: -4.333303451538086
    4. 'stack' → logprob: -4.333303451538086
    5. '           ' → logprob: -5.833303451538086
    6. 'import' → logprob: -6.333303451538086
    7. '       ' → logprob: -6.333303451538086
    8. 'q' → logprob: -6.833303451538086
    9. 'for' (adapté à ' for') → logprob: -8.583303451538086
    10. ' from' → logprob: -9.333303451538086

Token 1604: ' v' (ID: 323)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.08021135628223419
    2. 'v' → logprob: -3.0802114009857178
    3. 'j' → logprob: -3.5802114009857178
    4. 'u' → logprob: -6.580211162567139
    5. 'n' → logprob: -7.205211162567139
    6. 'x' → logprob: -7.830211162567139
    7. 'nbr' → logprob: -7.830211162567139
    8. ' w' → logprob: -9.205211639404297
    9. 'neighbor' → logprob: -10.080211639404297
    10. ' nxt' → logprob: -10.330211639404297

Token 1605: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5231665968894958
    2. 'in' → logprob: -0.8981665968894958
    3. '	in' → logprob: -10.39816665649414
    4. '<|end|>' → logprob: -12.14816665649414
    5. '<|end|>' → logprob: -13.89816665649414
    6. 'n' → logprob: -13.89816665649414
    7. '```' → logprob: -14.27316665649414
    8. ' ' → logprob: -14.39816665649414
    9. '
' → logprob: -14.52316665649414
    10. 'import' → logprob: -14.52316665649414

Token 1606: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0011706985533237457
    2. ' adj' → logprob: -6.751170635223389
    3. 'reach' → logprob: -14.501171112060547
    4. '
' → logprob: -17.876171112060547
    5. '   ' → logprob: -18.001171112060547
    6. '(adj' → logprob: -18.251171112060547
    7. 'ad' → logprob: -19.001171112060547
    8. 'range' → logprob: -19.376171112060547
    9. '_adj' → logprob: -19.376171112060547
    10. '```' → logprob: -19.751171112060547

Token 1607: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.004111054353415966
    2. '[i' → logprob: -5.504111289978027
    3. 'strong' → logprob: -11.254111289978027
    4. '[v' → logprob: -11.754111289978027
    5. '[a' → logprob: -13.129111289978027
    6. '_s' → logprob: -13.129111289978027
    7. '```' → logprob: -13.254111289978027
    8. '[str' → logprob: -13.504111289978027
    9. '[_' → logprob: -13.879111289978027
    10. 'Strong' → logprob: -14.004111289978027

Token 1608: 'ong' (ID: 705)
  Prédit: 'ong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ong' → logprob: -0.13770142197608948
    2. 'tr' → logprob: -2.1377015113830566
    3. '[i' → logprob: -5.762701511383057
    4. 'strong' → logprob: -5.887701511383057
    5. '[' → logprob: -6.387701511383057
    6. '```' → logprob: -6.512701511383057
    7. 'rong' → logprob: -6.887701511383057
    8. '_str' → logprob: -8.637701034545898
    9. '``' → logprob: -10.012701034545898
    10. 'o' → logprob: -10.137701034545898

Token 1609: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.125
    3. 'i' → logprob: -19.0
    4. '[' → logprob: -19.25
    5. '[v' → logprob: -20.0
    6. '[
' → logprob: -20.0
    7. '           ' → logprob: -20.0
    8. '[a' → logprob: -20.125
    9. '``' → logprob: -20.25
    10. '[u' → logprob: -20.625

Token 1610: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5203296542167664
    2. ']:
' → logprob: -1.0203297138214111
    3. '):
' → logprob: -4.145329475402832
    4. ':' → logprob: -4.395329475402832
    5. '           ' → logprob: -4.520329475402832
    6. '               ' → logprob: -6.395329475402832
    7. ']:' → logprob: -6.520329475402832
    8. '].' → logprob: -7.020329475402832
    9. ']' → logprob: -7.145329475402832
    10. '.append' → logprob: -7.645329475402832

Token 1611: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00791700929403305
    2. ':
' → logprob: -5.6329169273376465
    3. '           ' → logprob: -5.8829169273376465
    4. '```' → logprob: -6.6329169273376465
    5. ':' → logprob: -9.757917404174805
    6. '):
' → logprob: -10.507917404174805
    7. '       ' → logprob: -10.507917404174805
    8. 'reach' → logprob: -10.882917404174805
    9. '                   ' → logprob: -11.507917404174805
    10. '``' → logprob: -11.632917404174805

Token 1612: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' (adapté à ' reach') → logprob: -0.0616348572075367
    2. ' reach' → logprob: -3.0616347789764404
    3. '               ' → logprob: -4.4366350173950195
    4. '                   ' → logprob: -7.8116350173950195
    5. '           ' → logprob: -8.18663501739502
    6. '   ' → logprob: -8.31163501739502
    7. '       ' → logprob: -8.68663501739502
    8. '```' → logprob: -11.31163501739502
    9. 'reachable' → logprob: -12.43663501739502
    10. ' ' → logprob: -12.93663501739502

Token 1613: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[v' → logprob: -14.250000953674316
    3. '[' → logprob: -15.625000953674316
    4. 'i' → logprob: -16.625001907348633
    5. '[u' → logprob: -16.750001907348633
    6. '[
' → logprob: -18.250001907348633
    7. '[I' → logprob: -18.375001907348633
    8. '[j' → logprob: -19.625001907348633
    9. '
' → logprob: -19.625001907348633
    10. '```' → logprob: -19.875001907348633

Token 1614: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.08970662206411362
    2. '[i' → logprob: -2.4647066593170166
    3. '.add' → logprob: -7.7147064208984375
    4. '           ' → logprob: -9.089706420898438
    5. '[' → logprob: -9.464706420898438
    6. '.' → logprob: -9.839706420898438
    7. ']' → logprob: -10.464706420898438
    8. '][' → logprob: -11.214706420898438
    9. '```' → logprob: -12.339706420898438
    10. '[I' → logprob: -12.464706420898438

Token 1615: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.759734732331708e-05
    2. 'update' → logprob: -11.000017166137695
    3. '.add' → logprob: -14.000017166137695
    4. ' add' → logprob: -18.875017166137695
    5. '	add' → logprob: -20.125017166137695
    6. '_add' → logprob: -20.375017166137695
    7. ')add' → logprob: -20.500017166137695
    8. '```' → logprob: -21.000017166137695
    9. 'append' → logprob: -21.500017166137695
    10. '(add' → logprob: -22.000017166137695

Token 1616: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0182648878544569
    2. 'v' → logprob: -4.0182647705078125
    3. ' v' → logprob: -9.518264770507812
    4. '(' → logprob: -10.143264770507812
    5. ' (' → logprob: -14.018264770507812
    6. '	v' → logprob: -14.643264770507812
    7. '(
' → logprob: -14.893264770507812
    8. '```' → logprob: -15.143264770507812
    9. '`' → logprob: -15.893264770507812
    10. ')v' → logprob: -16.268264770507812

Token 1617: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19447246193885803
    2. ')
' → logprob: -1.8194724321365356
    3. '               ' → logprob: -4.694472312927246
    4. '           ' → logprob: -5.444472312927246
    5. '       ' → logprob: -7.194472312927246
    6. '                   ' → logprob: -8.444472312927246
    7. '<|end|>' → logprob: -10.194472312927246
    8. '```' → logprob: -10.319472312927246
    9. '   ' → logprob: -11.194472312927246
    10. 'for' → logprob: -11.319472312927246

Token 1618: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.392488569021225
    2. '
' → logprob: -1.3924885988235474
    3. 'for' → logprob: -3.017488479614258
    4. '```' → logprob: -4.392488479614258
    5. 'while' → logprob: -4.517488479614258
    6. ' for' → logprob: -6.517488479614258
    7. '   ' → logprob: -7.142488479614258
    8. '           ' → logprob: -7.267488479614258
    9. ' while' → logprob: -7.892488479614258
    10. '               ' → logprob: -8.517488479614258

Token 1619: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4422056972980499
    2. '       ' → logprob: -1.4422056674957275
    3. 'while' → logprob: -2.1922056674957275
    4. '
' → logprob: -6.192205905914307
    5. '```' → logprob: -6.317205905914307
    6. '   ' → logprob: -6.442205905914307
    7. 'changed' → logprob: -6.442205905914307
    8. ' for' → logprob: -6.942205905914307
    9. '           ' → logprob: -7.442205905914307
    10. 'from' → logprob: -8.692205429077148

Token 1620: ' Floyd' (ID: 76639)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.729605495929718
    2. 'changed' → logprob: -0.729605495929718
    3. '       ' → logprob: -4.104605674743652
    4. 'while' → logprob: -4.479605674743652
    5. 'updated' → logprob: -5.229605674743652
    6. '   ' → logprob: -6.479605674743652
    7. '#' → logprob: -7.729605674743652
    8. 'change' → logprob: -8.104605674743652
    9. 'from' → logprob: -8.854605674743652
    10. ' changed' → logprob: -10.104605674743652

Token 1621: '-W' (ID: 14439)
  Prédit: '-W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-W' → logprob: -0.00585022009909153
    2. 'War' → logprob: -6.005850315093994
    3. '–' → logprob: -6.755850315093994
    4. '           ' → logprob: -7.755850315093994
    5. '```' → logprob: -8.005849838256836
    6. '       ' → logprob: -8.005849838256836
    7. 'for' → logprob: -8.255849838256836
    8. '   ' → logprob: -8.505849838256836
    9. '
' → logprob: -9.255849838256836
    10. '-war' → logprob: -9.380849838256836

Token 1622: 'ar' (ID: 277)
  Prédit: '-W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-W' → logprob: -0.0710826888680458
    2. 'all' → logprob: -3.321082592010498
    3. 'ar' → logprob: -3.696082592010498
    4. '[-' → logprob: -5.071082592010498
    5. 'War' → logprob: -8.446083068847656
    6. '–' → logprob: -8.571083068847656
    7. '
' → logprob: -8.821083068847656
    8. '       ' → logprob: -9.071083068847656
    9. '   ' → logprob: -9.196083068847656
    10. '```' → logprob: -9.571083068847656

Token 1623: 'shall' (ID: 30275)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.2353227138519287
    2. '-W' → logprob: -1.7353227138519287
    3. '       ' → logprob: -4.235322952270508
    4. '           ' → logprob: -5.485322952270508
    5. '–' → logprob: -5.985322952270508
    6. '   ' → logprob: -6.110322952270508
    7. '{' → logprob: -6.360322952270508
    8. 'War' → logprob: -6.985322952270508
    9. '[-' → logprob: -7.235322952270508
    10. '
' → logprob: -7.360322952270508

Token 1624: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37462228536605835
    2. 'for' → logprob: -1.4996223449707031
    3. ' for' → logprob: -2.874622344970703
    4. '```' → logprob: -3.999622344970703
    5. '
' → logprob: -4.499622344970703
    6. '``' → logprob: -6.249622344970703
    7. '   ' → logprob: -6.874622344970703
    8. '           ' → logprob: -8.249622344970703
    9. '        
' → logprob: -9.624622344970703
    10. '               ' → logprob: -11.499622344970703

Token 1625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16090017557144165
    2. 'for' → logprob: -1.9109001159667969
    3. ' for' → logprob: -7.785900115966797
    4. '```' → logprob: -9.160900115966797
    5. '
' → logprob: -9.410900115966797
    6. '   ' → logprob: -9.910900115966797
    7. '           ' → logprob: -11.160900115966797
    8. '``' → logprob: -11.785900115966797
    9. ')' → logprob: -13.785900115966797
    10. ',' → logprob: -15.535900115966797

Token 1626: ' changed' (ID: 9180)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023561183363199234
    2. '       ' → logprob: -3.7735612392425537
    3. ' for' → logprob: -8.523561477661133
    4. '```' → logprob: -9.398561477661133
    5. '   ' → logprob: -10.773561477661133
    6. '
' → logprob: -11.773561477661133
    7. '``' → logprob: -12.273561477661133
    8. '           ' → logprob: -14.273561477661133
    9. '	for' → logprob: -17.148561477661133
    10. '`' → logprob: -18.398561477661133

Token 1627: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49158623814582825
    2. ' =' → logprob: -0.9915862083435059
    3. '=True' → logprob: -4.116586208343506
    4. '=False' → logprob: -7.241586208343506
    5. ' |=' → logprob: -8.366586685180664
    6. 'for' → logprob: -10.241586685180664
    7. '   ' → logprob: -10.991586685180664
    8. ' ' → logprob: -11.491586685180664
    9. '|' → logprob: -11.616586685180664
    10. '       ' → logprob: -12.366586685180664

Token 1628: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011047814972698689
    2. ' True' → logprob: -4.511047840118408
    3. 'False' → logprob: -19.38604736328125
    4. '(True' → logprob: -20.01104736328125
    5. '=True' → logprob: -20.51104736328125
    6. '   ' → logprob: -21.51104736328125
    7. ' ' → logprob: -23.38604736328125
    8. 'true' → logprob: -23.51104736328125
    9. '1' → logprob: -23.63604736328125
    10. '
' → logprob: -24.38604736328125

Token 1629: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013881984166800976
    2. 'while' → logprob: -5.138882160186768
    3. '```' → logprob: -5.263882160186768
    4. '       ' → logprob: -6.263882160186768
    5. ' while' → logprob: -8.01388168334961
    6. '  
' → logprob: -9.26388168334961
    7. 'While' → logprob: -10.13888168334961
    8. ' 
' → logprob: -10.13888168334961
    9. '        
' → logprob: -10.26388168334961
    10. '
' → logprob: -10.26388168334961

Token 1630: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0302069187164307
    2. '```' → logprob: -1.0302069187164307
    3. 'while' → logprob: -1.6552069187164307
    4. '       ' → logprob: -2.7802069187164307
    5. ' while' → logprob: -4.155206680297852
    6. 'True' → logprob: -4.655206680297852
    7. '``' → logprob: -6.530206680297852
    8. 'for' → logprob: -6.530206680297852
    9. 'While' → logprob: -6.655206680297852
    10. '   ' → logprob: -7.280206680297852

Token 1631: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.02177521586418152
    2. '
' → logprob: -4.521775245666504
    3. ' while' → logprob: -4.646775245666504
    4. '       ' → logprob: -7.771775245666504
    5. '```' → logprob: -7.771775245666504
    6. '	while' → logprob: -9.021775245666504
    7. 'True' → logprob: -9.396775245666504
    8. '   ' → logprob: -11.396775245666504
    9. 'While' → logprob: -11.521775245666504
    10. '``' → logprob: -13.021775245666504

Token 1632: ' changed' (ID: 9180)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' → logprob: -0.1269282102584839
    2. ' changed' → logprob: -2.1269283294677734
    3. '_changed' → logprob: -16.376928329467773
    4. '.changed' → logprob: -16.751928329467773
    5. ' ' → logprob: -18.001928329467773
    6. '
' → logprob: -18.251928329467773
    7. 'ch' → logprob: -18.376928329467773
    8. 'True' → logprob: -18.751928329467773
    9. 'Changed' → logprob: -19.001928329467773
    10. '(ch' → logprob: -20.876928329467773

Token 1633: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2420710325241089
    2. ':' → logprob: -1.6170710325241089
    3. '=' → logprob: -4.367071151733398
    4. ' =' → logprob: -6.492071151733398
    5. '):
' → logprob: -7.242071151733398
    6. '       ' → logprob: -7.992071151733398
    7. '   ' → logprob: -8.117071151733398
    8. '=
' → logprob: -8.492071151733398
    9. '=False' → logprob: -8.867071151733398
    10. '           ' → logprob: -8.867071151733398

Token 1634: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03089785762131214
    2. '   ' → logprob: -3.530897855758667
    3. '
' → logprob: -7.405898094177246
    4. '```' → logprob: -8.280898094177246
    5. '       ' → logprob: -9.030898094177246
    6. '    
' → logprob: -10.530898094177246
    7. 'changed' → logprob: -10.780898094177246
    8. 'False' → logprob: -10.905898094177246
    9. '               ' → logprob: -11.030898094177246
    10. 'True' → logprob: -11.280898094177246

Token 1635: ' changed' (ID: 9180)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' (adapté à ' changed') → logprob: -0.24179895222187042
    2. '   ' → logprob: -1.991798996925354
    3. ' changed' → logprob: -2.6167988777160645
    4. '       ' → logprob: -5.8667988777160645
    5. '           ' → logprob: -6.1167988777160645
    6. '
' → logprob: -8.491799354553223
    7. '.changed' → logprob: -10.491799354553223
    8. '               ' → logprob: -12.116799354553223
    9. '    
' → logprob: -12.116799354553223
    10. '_changed' → logprob: -12.116799354553223

Token 1636: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08903969824314117
    2. ' =' → logprob: -2.4640398025512695
    3. '=False' → logprob: -9.58903980255127
    4. '=True' → logprob: -10.83903980255127
    5. '=
' → logprob: -12.83903980255127
    6. '   ' → logprob: -13.08903980255127
    7. '<|end|>' → logprob: -13.58903980255127
    8. '       ' → logprob: -14.08903980255127
    9. ' =
' → logprob: -14.33903980255127
    10. '|=
' → logprob: -14.46403980255127

Token 1637: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.000116655595775228
    2. 'True' → logprob: -9.750116348266602
    3. ' False' → logprob: -9.750116348266602
    4. '   ' → logprob: -19.8751163482666
    5. ' True' → logprob: -19.8751163482666
    6. 'false' → logprob: -21.1251163482666
    7. '(False' → logprob: -21.1251163482666
    8. '0' → logprob: -21.3751163482666
    9. '```' → logprob: -21.3751163482666
    10. '_false' → logprob: -23.6251163482666

Token 1638: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03630020469427109
    2. '
' → logprob: -3.4113001823425293
    3. '               ' → logprob: -6.411300182342529
    4. '```' → logprob: -7.411300182342529
    5. '   ' → logprob: -8.661300659179688
    6. ' for' → logprob: -9.411300659179688
    7. 'for' → logprob: -10.661300659179688
    8. '       ' → logprob: -10.786300659179688
    9. '                   ' → logprob: -11.661300659179688
    10. ':
' → logprob: -11.661300659179688

Token 1639: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2026006132364273
    2. '       ' → logprob: -2.7026007175445557
    3. '   ' → logprob: -3.0776007175445557
    4. '           ' → logprob: -3.4526007175445557
    5. '```' → logprob: -3.8276007175445557
    6. 'for' → logprob: -4.702600479125977
    7. ' for' → logprob: -5.202600479125977
    8. '    
' → logprob: -7.202600479125977
    9. '  
' → logprob: -7.702600479125977
    10. '               ' → logprob: -8.452600479125977

Token 1640: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.386918306350708
    2. 'for' (adapté à ' for') → logprob: -1.386918306350708
    3. '       ' → logprob: -3.386918306350708
    4. ' for' → logprob: -3.636918306350708
    5. '   ' → logprob: -4.886918067932129
    6. '               ' → logprob: -6.511918067932129
    7. '	       ' → logprob: -7.011918067932129
    8. '	for' → logprob: -7.636918067932129
    9. '	   ' → logprob: -8.261918067932129
    10. '
' → logprob: -10.136918067932129

Token 1641: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0020937572699040174
    2. 'u' → logprob: -6.25209379196167
    3. ' i' → logprob: -8.752093315124512
    4. ' u' → logprob: -12.252093315124512
    5. 'k' → logprob: -13.127093315124512
    6. '
' → logprob: -15.502093315124512
    7. '   ' → logprob: -16.002094268798828
    8. '	i' → logprob: -17.377094268798828
    9. 'j' → logprob: -17.502094268798828
    10. ' ' → logprob: -19.127094268798828

Token 1642: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02062714472413063
    2. 'in' → logprob: -3.89562726020813
    3. '	in' → logprob: -10.64562702178955
    4. '```' → logprob: -10.77062702178955
    5. '[' → logprob: -12.14562702178955
    6. 'range' → logprob: -12.27062702178955
    7. '   ' → logprob: -12.52062702178955
    8. '0' → logprob: -12.52062702178955
    9. ',' → logprob: -12.77062702178955
    10. '[in' → logprob: -13.02062702178955

Token 1643: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015023599844425917
    2. ' range' → logprob: -6.501502513885498
    3. '(range' → logprob: -17.126502990722656
    4. '
' → logprob: -17.876502990722656
    5. '   ' → logprob: -18.126502990722656
    6. ' ' → logprob: -18.626502990722656
    7. '```' → logprob: -19.251502990722656
    8. '	range' → logprob: -19.626502990722656
    9. '  ' → logprob: -20.001502990722656
    10. 'comp' → logprob: -20.376502990722656

Token 1644: '(comp' (ID: 60272)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.13197065889835358
    2. 'range' → logprob: -2.1319706439971924
    3. '(comp' → logprob: -5.3819708824157715
    4. ' range' → logprob: -8.006970405578613
    5. ' comp' → logprob: -9.631970405578613
    6. '(range' → logprob: -12.131970405578613
    7. '0' → logprob: -12.256970405578613
    8. 'i' → logprob: -12.256970405578613
    9. '   ' → logprob: -12.506970405578613
    10. '       ' → logprob: -13.006970405578613

Token 1645: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.3425219549390022e-05
    2. 'id' → logprob: -12.62501335144043
    3. '```' → logprob: -12.62501335144043
    4. '_i' → logprob: -13.00001335144043
    5. '   ' → logprob: -13.62501335144043
    6. 'i' → logprob: -14.50001335144043
    7. '[i' → logprob: -14.50001335144043
    8. 'Id' → logprob: -15.12501335144043
    9. '_idx' → logprob: -15.25001335144043
    10. '[' → logprob: -15.25001335144043

Token 1646: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09224947541952133
    2. '):
' → logprob: -2.5922493934631348
    3. '           ' → logprob: -5.217249393463135
    4. ':' → logprob: -5.592249393463135
    5. '               ' → logprob: -5.717249393463135
    6. '       ' → logprob: -8.467249870300293
    7. ']:
' → logprob: -8.967249870300293
    8. '():
' → logprob: -9.092249870300293
    9. '```' → logprob: -10.092249870300293
    10. ' :
' → logprob: -10.092249870300293

Token 1647: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004972710739821196
    2. ' for' → logprob: -8.375496864318848
    3. '```' → logprob: -9.000496864318848
    4. '           ' → logprob: -9.250496864318848
    5. '       ' → logprob: -10.750496864318848
    6. 'for' → logprob: -11.375496864318848
    7. '	           ' → logprob: -12.375496864318848
    8. '   ' → logprob: -12.500496864318848
    9. '                   ' → logprob: -12.875496864318848
    10. '		       ' → logprob: -13.625496864318848

Token 1648: ' new' (ID: 620)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09906504303216934
    2. ' for' → logprob: -2.474065065383911
    3. '           ' → logprob: -4.974064826965332
    4. '               ' → logprob: -6.349064826965332
    5. '   ' → logprob: -6.599064826965332
    6. '                   ' → logprob: -10.974064826965332
    7. '       ' → logprob: -11.599064826965332
    8. ' ' → logprob: -11.849064826965332
    9. 'j' → logprob: -11.974064826965332
    10. '	for' → logprob: -12.224064826965332

Token 1649: 'set' (ID: 977)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.8054651618003845
    2. '_re' → logprob: -1.6804652214050293
    3. ' =' → logprob: -2.5554652214050293
    4. ' |=' → logprob: -2.6804652214050293
    5. '_tokens' → logprob: -2.8054652214050293
    6. '=' → logprob: -3.5554652214050293
    7. '_update' → logprob: -3.8054652214050293
    8. 'for' → logprob: -3.8054652214050293
    9. 'update' → logprob: -4.430465221405029
    10. 'reach' → logprob: -4.430465221405029

Token 1650: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3846712112426758
    2. ' =' → logprob: -1.3846712112426758
    3. '|' → logprob: -2.759671211242676
    4. ' |=' → logprob: -5.259671211242676
    5. '.update' → logprob: -8.509671211242676
    6. '|=
' → logprob: -9.509671211242676
    7. '=
' → logprob: -9.884671211242676
    8. '=set' → logprob: -10.759671211242676
    9. 'update' → logprob: -11.384671211242676
    10. '>' → logprob: -11.884671211242676

Token 1651: ' set' (ID: 920)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.0017106400337070227
    2. ' reach' → logprob: -6.376710414886475
    3. '   ' → logprob: -12.376710891723633
    4. 'set' → logprob: -13.626710891723633
    5. 'reachable' → logprob: -13.751710891723633
    6. '           ' → logprob: -13.751710891723633
    7. '       ' → logprob: -15.126710891723633
    8. ' ' → logprob: -15.376710891723633
    9. '               ' → logprob: -15.876710891723633
    10. '
' → logprob: -16.751710891723633

Token 1652: '(re' (ID: 8178)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4043404161930084
    2. '()
' → logprob: -1.279340386390686
    3. '(re' → logprob: -3.1543405055999756
    4. 'reach' → logprob: -5.5293402671813965
    5. '(list' → logprob: -6.1543402671813965
    6. '.union' → logprob: -6.5293402671813965
    7. 'list' → logprob: -6.9043402671813965
    8. '().' → logprob: -7.0293402671813965
    9. '=' → logprob: -7.6543402671813965
    10. 're' → logprob: -8.154340744018555

Token 1653: 'ach' (ID: 678)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.9347272515296936
    2. '())' → logprob: -1.6847271919250488
    3. ')' → logprob: -1.9347271919250488
    4. '()' → logprob: -2.184727191925049
    5. '()
' → logprob: -2.809727191925049
    6. '().' → logprob: -3.684727191925049
    7. 'for' → logprob: -3.934727191925049
    8. '())
' → logprob: -4.434727191925049
    9. 'i' → logprob: -4.934727191925049
    10. '.union' → logprob: -5.184727191925049

Token 1654: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006246338016353548
    2. '(i' → logprob: -7.625624656677246
    3. '[' → logprob: -9.250624656677246
    4. '()[' → logprob: -11.375624656677246
    5. 'adj' → logprob: -11.625624656677246
    6. 'i' → logprob: -12.375624656677246
    7. '[j' → logprob: -12.750624656677246
    8. ')' → logprob: -12.750624656677246
    9. '(adj' → logprob: -13.750624656677246
    10. '[v' → logprob: -13.750624656677246

Token 1655: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.48605403304100037
    2. ')' → logprob: -1.1110540628433228
    3. ').' → logprob: -3.111053943634033
    4. '           ' → logprob: -5.736053943634033
    5. '               ' → logprob: -6.361053943634033
    6. '|' → logprob: -6.861053943634033
    7. '.union' → logprob: -6.986053943634033
    8. '                   ' → logprob: -7.361053943634033
    9. '())
' → logprob: -7.736053943634033
    10. '])
' → logprob: -7.736053943634033

Token 1656: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010473486967384815
    2. '                   ' → logprob: -4.760473251342773
    3. '
' → logprob: -7.135473251342773
    4. '|' → logprob: -7.760473251342773
    5. '           ' → logprob: -8.260473251342773
    6. '.union' → logprob: -8.885473251342773
    7. ' |' → logprob: -9.760473251342773
    8. 'for' → logprob: -10.135473251342773
    9. '                       ' → logprob: -10.510473251342773
    10. '       ' → logprob: -10.635473251342773

Token 1657: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04818200692534447
    2. '               ' → logprob: -3.2981820106506348
    3. '                   ' → logprob: -5.298182010650635
    4. ' for' → logprob: -5.423182010650635
    5. 'new' → logprob: -7.423182010650635
    6. '           ' → logprob: -10.048181533813477
    7. '
' → logprob: -11.298181533813477
    8. '                       ' → logprob: -11.673181533813477
    9. '```' → logprob: -12.048181533813477
    10. '       ' → logprob: -12.673181533813477

Token 1658: ' v' (ID: 323)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.120988629758358
    2. 'x' → logprob: -2.620988607406616
    3. 'u' → logprob: -3.620988607406616
    4. 'v' → logprob: -4.370988845825195
    5. 'j' → logprob: -6.745988845825195
    6. 'k' → logprob: -8.370988845825195
    7. 'nbr' → logprob: -8.620988845825195
    8. 'neighbor' → logprob: -9.245988845825195
    9. 'n' → logprob: -9.495988845825195
    10. 'adj' → logprob: -10.620988845825195

Token 1659: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5760656595230103
    2. ' in' → logprob: -0.8260656595230103
    3. '[in' → logprob: -9.701066017150879
    4. '	in' → logprob: -10.951066017150879
    5. '               ' → logprob: -11.701066017150879
    6. '           ' → logprob: -12.076066017150879
    7. '   ' → logprob: -12.326066017150879
    8. '[' → logprob: -12.326066017150879
    9. ')' → logprob: -12.451066017150879
    10. ' ' → logprob: -12.576066017150879

Token 1660: ' list' (ID: 1562)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.000990891712717712
    2. ' reach' → logprob: -7.000990867614746
    3. 'adj' → logprob: -9.625990867614746
    4. 'new' → logprob: -11.625990867614746
    5. 'range' → logprob: -13.125990867614746
    6. '
' → logprob: -13.875990867614746
    7. '   ' → logprob: -14.875990867614746
    8. 'reachable' → logprob: -15.250990867614746
    9. 'list' → logprob: -15.625990867614746
    10. 'changed' → logprob: -16.000991821289062

Token 1661: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.5970925092697144
    2. 'reach' → logprob: -0.8470925092697144
    3. 're' → logprob: -4.722092628479004
    4. 'new' → logprob: -4.972092628479004
    5. '(new' → logprob: -5.347092628479004
    6. ' reach' → logprob: -8.472092628479004
    7. 'reachable' → logprob: -9.847092628479004
    8. 'adj' → logprob: -10.472092628479004
    9. '	re' → logprob: -11.347092628479004
    10. '
' → logprob: -11.847092628479004

Token 1662: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.7539759278297424
    2. '[i' → logprob: -1.6289758682250977
    3. 'reach' → logprob: -1.8789758682250977
    4. '[v' → logprob: -2.2539758682250977
    5. 'each' → logprob: -3.1289758682250977
    6. '[' → logprob: -4.003975868225098
    7. '[ch' → logprob: -5.628975868225098
    8. '[new' → logprob: -5.753975868225098
    9. 'new' → logprob: -6.253975868225098
    10. 'ch' → logprob: -7.503975868225098

Token 1663: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3132970929145813
    2. '[v' → logprob: -1.3132970333099365
    3. 'v' → logprob: -11.313297271728516
    4. '[j' → logprob: -11.563297271728516
    5. 'i' → logprob: -11.938297271728516
    6. '[' → logprob: -12.688297271728516
    7. '[u' → logprob: -13.313297271728516
    8. '[
' → logprob: -13.938297271728516
    9. '```' → logprob: -15.063297271728516
    10. '{i' → logprob: -15.813297271728516

Token 1664: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.0035001691430807114
    2. ']):' → logprob: -5.878499984741211
    3. '[i' → logprob: -7.878499984741211
    4. '):
' → logprob: -8.753499984741211
    5. ']' → logprob: -10.003499984741211
    6. '[v' → logprob: -10.378499984741211
    7. ']:
' → logprob: -10.628499984741211
    8. '])):
' → logprob: -11.253499984741211
    9. '])' → logprob: -11.628499984741211
    10. ']]:
' → logprob: -11.753499984741211

Token 1665: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00037359268753789365
    2. '                       ' → logprob: -8.625373840332031
    3. ':
' → logprob: -9.250373840332031
    4. '               ' → logprob: -10.875373840332031
    5. '				' → logprob: -11.125373840332031
    6. '		           ' → logprob: -11.125373840332031
    7. '
' → logprob: -11.625373840332031
    8. 'new' → logprob: -12.000373840332031
    9. ':' → logprob: -12.125373840332031
    10. '	               ' → logprob: -12.250373840332031

Token 1666: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.39617589116096497
    2. ' new' → logprob: -1.7711758613586426
    3. '                       ' → logprob: -2.1461758613586426
    4. '                   ' → logprob: -3.5211758613586426
    5. 'for' → logprob: -5.021175861358643
    6. ' for' → logprob: -6.021175861358643
    7. 'reach' → logprob: -8.2711763381958
    8. '```' → logprob: -8.2711763381958
    9. '[new' → logprob: -8.3961763381958
    10. '
' → logprob: -8.5211763381958

Token 1667: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6043533086776733
    2. 'reach' → logprob: -0.8543533086776733
    3. '.setdefault' → logprob: -4.854353427886963
    4. '[v' → logprob: -5.229353427886963
    5. '[' → logprob: -5.229353427886963
    6. '```' → logprob: -5.854353427886963
    7. '.' → logprob: -6.354353427886963
    8. '[
' → logprob: -7.604353427886963
    9. '[i' → logprob: -7.854353427886963
    10. '       ' → logprob: -7.854353427886963

Token 1668: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.49718931317329407
    2. '.update' → logprob: -0.9971892833709717
    3. '.' → logprob: -4.122189521789551
    4. ' |=' → logprob: -5.122189521789551
    5. 'update' → logprob: -8.62218952178955
    6. '.add' → logprob: -8.74718952178955
    7. '.union' → logprob: -8.99718952178955
    8. '=' → logprob: -9.12218952178955
    9. '   ' → logprob: -10.87218952178955
    10. '.|' → logprob: -11.12218952178955

Token 1669: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -2.15310683415737e-05
    2. ' reach' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.87502098083496
    4. 'reachable' → logprob: -20.37502098083496
    5. 'Reach' → logprob: -23.75002098083496
    6. '{' → logprob: -23.87502098083496
    7. '
' → logprob: -24.00002098083496
    8. ' ' → logprob: -24.00002098083496
    9. 'set' → logprob: -24.12502098083496
    10. '(re' → logprob: -24.12502098083496

Token 1670: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.512236498361744e-07
    2. 'v' → logprob: -15.000000953674316
    3. '(v' → logprob: -16.5
    4. '[' → logprob: -16.625
    5. '[
' → logprob: -19.125
    6. '	v' → logprob: -19.75
    7. '[u' → logprob: -20.5
    8. '```' → logprob: -20.5
    9. '<v' → logprob: -20.875
    10. '[i' → logprob: -21.25

Token 1671: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00432176049798727
    2. ']
' → logprob: -5.504321575164795
    3. '               ' → logprob: -9.129322052001953
    4. '])' → logprob: -9.504322052001953
    5. '                   ' → logprob: -10.504322052001953
    6. ' ]' → logprob: -12.129322052001953
    7. '()]' → logprob: -12.129322052001953
    8. '           ' → logprob: -12.504322052001953
    9. ')' → logprob: -12.504322052001953
    10. ')]' → logprob: -12.754322052001953

Token 1672: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9946197867393494
    2. '                       ' → logprob: -1.3696198463439941
    3. '
' → logprob: -1.6196198463439941
    4. '```' → logprob: -2.369619846343994
    5. '               ' → logprob: -2.869619846343994
    6. '           ' → logprob: -4.994619846343994
    7. '                           ' → logprob: -5.119619846343994
    8. '                               ' → logprob: -5.494619846343994
    9. ' if' → logprob: -5.994619846343994
    10. '       ' → logprob: -6.744619846343994

Token 1673: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4841861426830292
    2. '               ' → logprob: -1.1091861724853516
    3. 'if' (adapté à ' if') → logprob: -3.1091861724853516
    4. '                   ' → logprob: -4.984186172485352
    5. '           ' → logprob: -6.359186172485352
    6. '                       ' → logprob: -8.234186172485352
    7. '
' → logprob: -8.859186172485352
    8. '                           ' → logprob: -9.859186172485352
    9. ' changed' → logprob: -9.859186172485352
    10. '       ' → logprob: -10.359186172485352

Token 1674: ' len' (ID: 4631)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2073487490415573
    2. 'len' → logprob: -1.9573487043380737
    3. ' new' → logprob: -3.2073488235473633
    4. ' len' → logprob: -5.207348823547363
    5. '```' → logprob: -9.582348823547363
    6. '           ' → logprob: -11.707348823547363
    7. '               ' → logprob: -12.207348823547363
    8. '                   ' → logprob: -12.207348823547363
    9. '(len' → logprob: -13.457348823547363
    10. '
' → logprob: -13.832348823547363

Token 1675: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -4.310693111619912e-05
    2. 'new' → logprob: -10.125042915344238
    3. '(re' → logprob: -13.250042915344238
    4. '[new' → logprob: -14.875042915344238
    5. '(' → logprob: -15.125042915344238
    6. ' new' → logprob: -15.375042915344238
    7. '```' → logprob: -15.375042915344238
    8. ')new' → logprob: -16.500043869018555
    9. ' (' → logprob: -16.625043869018555
    10. '=new' → logprob: -16.875043869018555

Token 1676: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0019492254359647632
    2. 'ew' → logprob: -7.126949310302734
    3. 'et' → logprob: -7.501949310302734
    4. 'new' → logprob: -8.126949310302734
    5. '[new' → logprob: -8.376949310302734
    6. '_set' → logprob: -10.376949310302734
    7. 's' → logprob: -11.251949310302734
    8. '(new' → logprob: -12.251949310302734
    9. '(set' → logprob: -12.501949310302734
    10. '[' → logprob: -12.876949310302734

Token 1677: ')>' (ID: 37292)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10494238138198853
    2. ' >' → logprob: -3.1049423217773438
    3. ')>' → logprob: -4.104942321777344
    4. ')' → logprob: -4.104942321777344
    5. '[i' → logprob: -4.104942321777344
    6. '[new' → logprob: -5.979942321777344
    7. '()>' → logprob: -6.854942321777344
    8. '[' → logprob: -7.729942321777344
    9. '```' → logprob: -7.979942321777344
    10. '[j' → logprob: -9.229942321777344

Token 1678: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.012769202701747417
    2. ' len' → logprob: -4.3877692222595215
    3. 'reach' → logprob: -8.387768745422363
    4. ' reach' → logprob: -10.762768745422363
    5. '```' → logprob: -12.262768745422363
    6. '(len' → logprob: -13.137768745422363
    7. '=len' → logprob: -13.637768745422363
    8. '[len' → logprob: -13.762768745422363
    9. '           ' → logprob: -14.512768745422363
    10. '   ' → logprob: -14.637768745422363

Token 1679: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.010061928071081638
    2. 'reach' → logprob: -4.760061740875244
    3. '(new' → logprob: -6.885061740875244
    4. 'new' → logprob: -8.260062217712402
    5. 're' → logprob: -8.760062217712402
    6. ' reach' → logprob: -12.385062217712402
    7. '(' → logprob: -13.385062217712402
    8. '```' → logprob: -13.885062217712402
    9. 'reachable' → logprob: -15.385062217712402
    10. ' (' → logprob: -15.510062217712402

Token 1680: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.011389917694032192
    2. 'each' → logprob: -5.01138973236084
    3. 'reach' → logprob: -5.38638973236084
    4. '[' → logprob: -10.26138973236084
    5. '(' → logprob: -11.63638973236084
    6. 'a' → logprob: -11.88638973236084
    7. 'Each' → logprob: -12.01138973236084
    8. '(re' → logprob: -12.26138973236084
    9. '(each' → logprob: -12.63638973236084
    10. 'atch' → logprob: -12.76138973236084

Token 1681: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.750000953674316
    3. '```' → logprob: -16.375
    4. 'i' → logprob: -16.75
    5. '(i' → logprob: -17.25
    6. ')' → logprob: -17.375
    7. '   ' → logprob: -18.625
    8. '[
' → logprob: -18.625
    9. '{i' → logprob: -18.625
    10. '       ' → logprob: -19.0

Token 1682: ']):
' (ID: 51989)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5729103684425354
    2. ']):
' → logprob: -1.1979103088378906
    3. '):
' → logprob: -2.0729103088378906
    4. ']):' → logprob: -5.072910308837891
    5. '           ' → logprob: -7.572910308837891
    6. '):' → logprob: -8.19791030883789
    7. '       ' → logprob: -8.44791030883789
    8. ')' → logprob: -8.57291030883789
    9. '               ' → logprob: -8.69791030883789
    10. '                   ' → logprob: -9.19791030883789

Token 1683: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10506957024335861
    2. '```' → logprob: -3.105069637298584
    3. '                       ' → logprob: -3.230069637298584
    4. ':
' → logprob: -4.980069637298584
    5. '                           ' → logprob: -6.105069637298584
    6. '``' → logprob: -6.730069637298584
    7. ':' → logprob: -6.855069637298584
    8. ' =' → logprob: -6.980069637298584
    9. '):
' → logprob: -7.605069637298584
    10. '               ' → logprob: -7.730069637298584

Token 1684: ' reach' (ID: 7627)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5525088906288147
    2. ' changed' → logprob: -0.9275088906288147
    3. '                       ' → logprob: -4.55250883102417
    4. 'changed' → logprob: -4.80250883102417
    5. '```' → logprob: -5.05250883102417
    6. '               ' → logprob: -6.30250883102417
    7. '   ' → logprob: -7.42750883102417
    8. '           ' → logprob: -7.80250883102417
    9. ' change' → logprob: -8.052509307861328
    10. '``' → logprob: -8.427509307861328

Token 1685: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.500000953674316
    3. '<|end|>' → logprob: -15.750000953674316
    4. '[
' → logprob: -15.875000953674316
    5. '```' → logprob: -17.125001907348633
    6. '<|end|>' → logprob: -17.625001907348633
    7. '[I' → logprob: -17.750001907348633
    8. '[u' → logprob: -18.000001907348633
    9. '=i' → logprob: -18.125001907348633
    10. 'i' → logprob: -18.250001907348633

Token 1686: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04564360901713371
    2. ']' → logprob: -3.1706435680389404
    3. ')' → logprob: -6.7956438064575195
    4. ']=' → logprob: -6.9206438064575195
    5. ']+=' → logprob: -8.29564380645752
    6. ' |=' → logprob: -9.04564380645752
    7. '|' → logprob: -10.17064380645752
    8. 'i' → logprob: -10.54564380645752
    9. ')=' → logprob: -11.04564380645752
    10. '```' → logprob: -11.17064380645752

Token 1687: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004599823441822082
    2. ' =' → logprob: -8.375459671020508
    3. '=
' → logprob: -9.125459671020508
    4. '[i' → logprob: -9.875459671020508
    5. ' |=' → logprob: -11.125459671020508
    6. '.add' → logprob: -11.250459671020508
    7. '+=' → logprob: -11.375459671020508
    8. '|=
' → logprob: -12.125459671020508
    9. '|' → logprob: -12.250459671020508
    10. '[' → logprob: -12.250459671020508

Token 1688: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.01416350994259119
    2. ' new' → logprob: -4.264163494110107
    3. '	new' → logprob: -17.639163970947266
    4. '```' → logprob: -17.889163970947266
    5. '_new' → logprob: -18.639163970947266
    6. 'New' → logprob: -18.889163970947266
    7. '[new' → logprob: -18.889163970947266
    8. '$new' → logprob: -19.389163970947266
    9. '(new' → logprob: -19.639163970947266
    10. '                   ' → logprob: -19.889163970947266

Token 1689: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -7.100059156073257e-05
    2. 'et' → logprob: -9.750070571899414
    3. '[i' → logprob: -11.375070571899414
    4. '```' → logprob: -14.125070571899414
    5. 'se' → logprob: -16.000070571899414
    6. 'est' → logprob: -16.375070571899414
    7. 'erset' → logprob: -16.875070571899414
    8. ' set' → logprob: -16.875070571899414
    9. 's' → logprob: -17.000070571899414
    10. '[' → logprob: -17.625070571899414

Token 1690: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006396461394615471
    2. '                       ' → logprob: -8.250639915466309
    3. '<|end|>' → logprob: -9.000639915466309
    4. '               ' → logprob: -9.250639915466309
    5. '           ' → logprob: -9.750639915466309
    6. ',' → logprob: -10.500639915466309
    7. '                  ' → logprob: -11.125639915466309
    8. '		           ' → logprob: -11.875639915466309
    9. '                           ' → logprob: -12.000639915466309
    10. '				' → logprob: -12.000639915466309

Token 1691: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15934860706329346
    2. '```' → logprob: -2.909348487854004
    3. '                       ' → logprob: -3.159348487854004
    4. '
' → logprob: -3.159348487854004
    5. '                           ' → logprob: -6.284348487854004
    6. '               ' → logprob: -7.159348487854004
    7. '           ' → logprob: -7.284348487854004
    8. '                    
' → logprob: -7.659348487854004
    9. '                  ' → logprob: -7.784348487854004
    10. '                     ' → logprob: -7.909348487854004

Token 1692: ' changed' (ID: 9180)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' (adapté à ' changed') → logprob: -0.39147040247917175
    2. '                   ' → logprob: -1.1414704322814941
    3. ' changed' → logprob: -5.641470432281494
    4. '                       ' → logprob: -7.391470432281494
    5. '               ' → logprob: -8.641469955444336
    6. '           ' → logprob: -8.891469955444336
    7. 'True' → logprob: -10.391469955444336
    8. 'change' → logprob: -10.641469955444336
    9. '```' → logprob: -11.141469955444336
    10. '       ' → logprob: -11.766469955444336

Token 1693: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0801190435886383
    2. ' =' → logprob: -2.5801191329956055
    3. '=True' → logprob: -6.7051191329956055
    4. '                   ' → logprob: -13.455119132995605
    5. '=
' → logprob: -14.080119132995605
    6. '   ' → logprob: -14.580119132995605
    7. '                       ' → logprob: -14.955119132995605
    8. '           ' → logprob: -15.205119132995605
    9. '               ' → logprob: -15.830119132995605
    10. 'True' → logprob: -15.955119132995605

Token 1694: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.06196768581867218
    2. ' True' → logprob: -2.811967611312866
    3. '(True' → logprob: -18.061967849731445
    4. '=True' → logprob: -18.436967849731445
    5. '   ' → logprob: -19.561967849731445
    6. '                   ' → logprob: -19.686967849731445
    7. '                       ' → logprob: -21.561967849731445
    8. '                           ' → logprob: -22.686967849731445
    9. 'true' → logprob: -22.811967849731445
    10. '1' → logprob: -23.311967849731445

Token 1695: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2768961787223816
    2. '<|end|>' → logprob: -1.7768962383270264
    3. '   ' → logprob: -2.9018962383270264
    4. '       ' → logprob: -4.776895999908447
    5. '    
' → logprob: -5.776895999908447
    6. '<|end|>' → logprob: -6.276895999908447
    7. '        
' → logprob: -6.776895999908447
    8. 'if' → logprob: -7.151895999908447
    9. 'def' → logprob: -7.651895999908447
    10. '```' → logprob: -7.901895999908447

Token 1696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022311871871352196
    2. '
' → logprob: -4.272311687469482
    3. '   ' → logprob: -5.647311687469482
    4. '```' → logprob: -5.897311687469482
    5. '<|end|>' → logprob: -6.647311687469482
    6. '        
' → logprob: -8.02231216430664
    7. '    
' → logprob: -9.39731216430664
    8. 'for' → logprob: -9.89731216430664
    9. ' for' → logprob: -10.64731216430664
    10. '           ' → logprob: -10.77231216430664

Token 1697: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04378165304660797
    2. 'for' → logprob: -3.2937817573547363
    3. 'while' → logprob: -6.168781757354736
    4. 'Q' → logprob: -6.918781757354736
    5. '
' → logprob: -7.293781757354736
    6. '   ' → logprob: -7.418781757354736
    7. 'q' → logprob: -7.793781757354736
    8. 'def' → logprob: -8.293781280517578
    9. '```' → logprob: -8.418781280517578
    10. 'queries' → logprob: -8.543781280517578

Token 1698: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14643196761608124
    2. 'for' → logprob: -2.2714319229125977
    3. '   ' → logprob: -3.8964319229125977
    4. 'def' → logprob: -4.771431922912598
    5. ' for' → logprob: -6.646431922912598
    6. 'while' → logprob: -7.021431922912598
    7. 'import' → logprob: -7.396431922912598
    8. 'if' → logprob: -7.646431922912598
    9. '```' → logprob: -7.896431922912598
    10. '
' → logprob: -8.271431922912598

Token 1699: ' each' (ID: 2454)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6418564915657043
    2. ' q' → logprob: -1.7668564319610596
    3. 'A' → logprob: -2.0168564319610596
    4. 'Q' → logprob: -3.6418564319610596
    5. 'question' → logprob: -3.8918564319610596
    6. 'i' → logprob: -4.266856670379639
    7. '_' → logprob: -4.391856670379639
    8. ' A' → logprob: -4.391856670379639
    9. 'query' → logprob: -4.516856670379639
    10. ' line' → logprob: -4.891856670379639

Token 1700: ' question' (ID: 4928)
  Prédit: 'question'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'question' → logprob: -0.47836148738861084
    2. 'q' → logprob: -1.3533614873886108
    3. ' question' → logprob: -2.4783616065979004
    4. ' q' → logprob: -3.6033616065979004
    5. 'query' → logprob: -5.4783616065979
    6. 'Q' → logprob: -6.1033616065979
    7. ' query' → logprob: -6.9783616065979
    8. 'A' → logprob: -7.2283616065979
    9. '   ' → logprob: -7.4783616065979
    10. 'i' → logprob: -7.9783616065979

Token 1701: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027009276673197746
    2. 'for' → logprob: -4.0270094871521
    3. ' for' → logprob: -4.7770094871521
    4. '
' → logprob: -8.402009010314941
    5. '   ' → logprob: -9.902009010314941
    6. '        
' → logprob: -10.527009010314941
    7. '           ' → logprob: -10.902009010314941
    8. '<|end|>' → logprob: -11.027009010314941
    9. '	for' → logprob: -11.152009010314941
    10. ',' → logprob: -11.527009010314941

Token 1702: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2457827925682068
    2. 'for' → logprob: -1.6207828521728516
    3. ' for' → logprob: -3.9957828521728516
    4. '```' → logprob: -6.620782852172852
    5. '   ' → logprob: -8.620782852172852
    6. '        
' → logprob: -9.620782852172852
    7. '
' → logprob: -9.745782852172852
    8. '	for' → logprob: -10.370782852172852
    9. '<|end|>' → logprob: -10.370782852172852
    10. '``' → logprob: -11.370782852172852

Token 1703: ' YES' (ID: 32968)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16305698454380035
    2. 'for' → logprob: -2.5380570888519287
    3. ' for' → logprob: -2.6630570888519287
    4. '   ' → logprob: -7.28805685043335
    5. '```' → logprob: -7.28805685043335
    6. '(' → logprob: -8.913057327270508
    7. '        
' → logprob: -10.038057327270508
    8. '``' → logprob: -10.413057327270508
    9. '           ' → logprob: -10.788057327270508
    10. '
' → logprob: -10.788057327270508

Token 1704: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027507843915373087
    2. 'for' → logprob: -6.627750873565674
    3. ' for' → logprob: -6.877750873565674
    4. '<|end|>' → logprob: -9.252750396728516
    5. '        
' → logprob: -9.502750396728516
    6. '()' → logprob: -9.877750396728516
    7. ',' → logprob: -10.002750396728516
    8. '
' → logprob: -10.752750396728516
    9. '()
' → logprob: -10.877750396728516
    10. '   ' → logprob: -10.877750396728516

Token 1705: ' infer' (ID: 26859)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.18591761589050293
    2. 'reach' → logprob: -2.810917615890503
    3. 'find' → logprob: -3.685917615890503
    4. '(comp' → logprob: -3.685917615890503
    5. ' comp' → logprob: -4.435917854309082
    6. 'equal' → logprob: -4.810917854309082
    7. '   ' → logprob: -4.935917854309082
    8. 'answer' → logprob: -5.310917854309082
    9. 'questions' → logprob: -5.560917854309082
    10. ' reach' → logprob: -5.810917854309082

Token 1706: ' that' (ID: 484)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.19738154113292694
    2. '   ' → logprob: -2.1973814964294434
    3. '       ' → logprob: -3.6973814964294434
    4. 'r' → logprob: -4.822381496429443
    5. 'able' → logprob: -4.822381496429443
    6. '
' → logprob: -4.822381496429443
    7. '```' → logprob: -5.322381496429443
    8. ' ' → logprob: -6.572381496429443
    9. 'rence' → logprob: -6.572381496429443
    10. '     ' → logprob: -6.822381496429443

Token 1707: ' two' (ID: 1920)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1190564632415771
    2. ''' → logprob: -1.8690564632415771
    3. ' reach' → logprob: -2.244056463241577
    4. ' a' → logprob: -2.369056463241577
    5. ' the' → logprob: -2.494056463241577
    6. ' color' → logprob: -3.119056463241577
    7. ' answer' → logprob: -3.244056463241577
    8. '   ' → logprob: -3.994056463241577
    9. 'reach' → logprob: -4.244056701660156
    10. ' equal' → logprob: -4.369056701660156

Token 1708: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.579016923904419
    2. ' streets' → logprob: -0.829016923904419
    3. 's' → logprob: -6.70401668548584
    4. ' nodes' → logprob: -7.70401668548584
    5. 'nodes' → logprob: -8.07901668548584
    6. '
' → logprob: -8.82901668548584
    7. ' s' → logprob: -8.82901668548584
    8. 'st' → logprob: -8.95401668548584
    9. 'street' → logprob: -9.45401668548584
    10. '_st' → logprob: -9.57901668548584

Token 1709: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.25968706607818604
    2. 'are' → logprob: -2.1346869468688965
    3. '```' → logprob: -2.5096869468688965
    4. ' have' → logprob: -4.8846869468688965
    5. '``' → logprob: -5.1346869468688965
    6. ' in' → logprob: -5.5096869468688965
    7. '#' → logprob: -5.8846869468688965
    8. '
' → logprob: -6.2596869468688965
    9. '           ' → logprob: -6.6346869468688965
    10. 'have' → logprob: -6.7596869468688965

Token 1710: ' orth' (ID: 35656)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.530722439289093
    2. ' equal' → logprob: -1.2807223796844482
    3. 'in' → logprob: -2.7807223796844482
    4. ' in' → logprob: -3.1557223796844482
    5. 'strong' → logprob: -4.405722618103027
    6. 'connected' → logprob: -6.155722618103027
    7. ' of' → logprob: -6.280722618103027
    8. ' connected' → logprob: -6.405722618103027
    9. 'equ' → logprob: -6.655722618103027
    10. 'of' → logprob: -6.905722618103027

Token 1711: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -1.2352385965641588e-05
    2. '```' → logprob: -11.750012397766113
    3. 'og' → logprob: -13.375012397766113
    4. 'ogon' → logprob: -13.625012397766113
    5. 'ogal' → logprob: -14.125012397766113
    6. '``' → logprob: -15.250012397766113
    7. 'agonal' → logprob: -15.750012397766113
    8. '{' → logprob: -16.000011444091797
    9. 'onal' → logprob: -16.500011444091797
    10. '{}' → logprob: -16.875011444091797

Token 1712: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015614043222740293
    2. 'for' → logprob: -7.126561641693115
    3. ' for' → logprob: -8.001561164855957
    4. '<|end|>' → logprob: -8.126561164855957
    5. '   ' → logprob: -9.626561164855957
    6. '```' → logprob: -10.751561164855957
    7. '<|end|>' → logprob: -10.876561164855957
    8. '
' → logprob: -11.751561164855957
    9. '        
' → logprob: -12.626561164855957
    10. ' ' → logprob: -13.126561164855957

Token 1713: ' X' (ID: 2127)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.9560514688491821
    2. '#' → logprob: -1.3310514688491821
    3. 'print' → logprob: -1.7060514688491821
    4. 'different' → logprob: -3.3310513496398926
    5. 'NO' → logprob: -3.8310513496398926
    6. 'in' → logprob: -3.8310513496398926
    7. 'False' → logprob: -4.081051349639893
    8. 'have' → logprob: -4.706051349639893
    9. 'distinct' → logprob: -4.831051349639893
    10. ' not' → logprob: -4.831051349639893

Token 1714: ' stronger' (ID: 26929)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9808133840560913
    2. '=' → logprob: -1.8558133840560913
    3. '```' → logprob: -2.105813503265381
    4. 'Y' → logprob: -2.855813503265381
    5. 'or' → logprob: -2.980813503265381
    6. 'for' → logprob: -2.980813503265381
    7. '   ' → logprob: -3.605813503265381
    8. ',' → logprob: -3.855813503265381
    9. 'else' → logprob: -3.855813503265381
    10. '_' → logprob: -3.980813503265381

Token 1715: ' than' (ID: 1572)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014859039336442947
    2. '
' → logprob: -4.389859199523926
    3. '<|end|>' → logprob: -6.389859199523926
    4. '<|end|>' → logprob: -8.014859199523926
    5. '        
' → logprob: -9.264859199523926
    6. ' for' → logprob: -10.014859199523926
    7. 'for' → logprob: -10.139859199523926
    8. '```' → logprob: -10.139859199523926
    9. '   ' → logprob: -10.514859199523926
    10. '           ' → logprob: -11.139859199523926

Token 1716: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.00033320096554234624
    2. ' Y' → logprob: -8.250332832336426
    3. 'B' → logprob: -10.125332832336426
    4. 'y' → logprob: -10.750332832336426
    5. '<|end|>' → logprob: -12.375332832336426
    6. 'the' → logprob: -13.000332832336426
    7. 'A' → logprob: -13.750332832336426
    8. '=' → logprob: -14.750332832336426
    9. '<|end|>' → logprob: -14.875332832336426
    10. '   ' → logprob: -15.125332832336426

Token 1717: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1467624455690384
    2. 'for' → logprob: -2.1467623710632324
    3. ' for' → logprob: -4.021762371063232
    4. '```' → logprob: -6.896762371063232
    5. '   ' → logprob: -7.646762371063232
    6. '
' → logprob: -8.77176284790039
    7. '``' → logprob: -10.89676284790039
    8. 'import' → logprob: -11.02176284790039
    9. '	for' → logprob: -11.52176284790039
    10. 'def' → logprob: -11.64676284790039

Token 1718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007201340049505234
    2. 'for' → logprob: -5.132201194763184
    3. ' for' → logprob: -7.007201194763184
    4. '   ' → logprob: -8.507201194763184
    5. '```' → logprob: -9.257201194763184
    6. '
' → logprob: -10.757201194763184
    7. '<|end|>' → logprob: -11.382201194763184
    8. '        
' → logprob: -11.507201194763184
    9. ' ' → logprob: -11.882201194763184
    10. '``' → logprob: -11.882201194763184

Token 1719: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35787397623062134
    2. 'for' → logprob: -1.2328739166259766
    3. ' for' → logprob: -4.982873916625977
    4. '   ' → logprob: -6.107873916625977
    5. '```' → logprob: -8.357873916625977
    6. '	for' → logprob: -10.982873916625977
    7. '
' → logprob: -11.232873916625977
    8. '``' → logprob: -11.357873916625977
    9. '<|end|>' → logprob: -11.732873916625977
    10. '        
' → logprob: -11.857873916625977

Token 1720: ' Orth' (ID: 51750)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28478795289993286
    2. 'for' → logprob: -1.409787893295288
    3. ' for' → logprob: -6.034788131713867
    4. '   ' → logprob: -7.284788131713867
    5. '```' → logprob: -7.784788131713867
    6. '
' → logprob: -9.659788131713867
    7. '        
' → logprob: -10.659788131713867
    8. '``' → logprob: -11.409788131713867
    9. '	for' → logprob: -11.659788131713867
    10. '           ' → logprob: -12.034788131713867

Token 1721: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -0.0014784404775127769
    2. '       ' → logprob: -6.626478672027588
    3. 'g' → logprob: -10.12647819519043
    4. '```' → logprob: -10.25147819519043
    5. 'og' → logprob: -11.12647819519043
    6. '``' → logprob: -11.37647819519043
    7. '           ' → logprob: -11.50147819519043
    8. '
' → logprob: -11.62647819519043
    9. 'ogon' → logprob: -11.87647819519043
    10. '#' → logprob: -11.87647819519043

Token 1722: ' means' (ID: 4748)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3678479194641113
    2. '_set' → logprob: -1.9928479194641113
    3. '_' → logprob: -2.2428479194641113
    4. '_pairs' → logprob: -2.2428479194641113
    5. '   ' → logprob: -2.6178479194641113
    6. 'ity' → logprob: -3.3678479194641113
    7. 's' → logprob: -3.7428479194641113
    8. '_str' → logprob: -3.7428479194641113
    9. '_sets' → logprob: -3.7428479194641113
    10. '_lines' → logprob: -3.8678479194641113

Token 1723: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.019706515595316887
    2. ' color' → logprob: -4.894706726074219
    3. '(color' → logprob: -5.394706726074219
    4. '```' → logprob: -6.269706726074219
    5. '
' → logprob: -6.644706726074219
    6. '`' → logprob: -6.769706726074219
    7. 'different' → logprob: -7.019706726074219
    8. '(' → logprob: -7.394706726074219
    9. 'colors' → logprob: -8.519706726074219
    10. '   ' → logprob: -8.769706726074219

Token 1724: ' differs' (ID: 75483)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()
' → logprob: -1.3839571475982666
    2. '       ' → logprob: -1.5089571475982666
    3. '()' → logprob: -1.6339571475982666
    4. '   ' → logprob: -2.2589571475982666
    5. 'for' → logprob: -2.8839571475982666
    6. '('\' → logprob: -3.5089571475982666
    7. ' =' → logprob: -3.8839571475982666
    8. '```' → logprob: -4.3839569091796875
    9. '(' → logprob: -4.5089569091796875
    10. '(
' → logprob: -4.6339569091796875

Token 1725: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01765686832368374
    2. 'for' → logprob: -4.3926568031311035
    3. ' for' → logprob: -5.3926568031311035
    4. '   ' → logprob: -8.392657279968262
    5. '<|end|>' → logprob: -8.642657279968262
    6. '
' → logprob: -9.767657279968262
    7. 'def' → logprob: -10.142657279968262
    8. '<|end|>' → logprob: -10.892657279968262
    9. '        
' → logprob: -11.017657279968262
    10. '```' → logprob: -11.267657279968262

Token 1726: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2478400617837906
    2. 'for' → logprob: -2.122840166091919
    3. '```' → logprob: -2.872840166091919
    4. ' for' → logprob: -3.247840166091919
    5. '``' → logprob: -6.62283992767334
    6. '   ' → logprob: -6.87283992767334
    7. '\' → logprob: -7.49783992767334
    8. '
' → logprob: -8.12283992767334
    9. 'def' → logprob: -8.12283992767334
    10. '	for' → logprob: -8.49783992767334

Token 1727: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.054443564265966415
    2. '       ' → logprob: -3.179443597793579
    3. ' for' → logprob: -4.804443359375
    4. '```' → logprob: -5.804443359375
    5. '	for' → logprob: -9.804443359375
    6. '   ' → logprob: -9.804443359375
    7. '``' → logprob: -10.179443359375
    8. '\' → logprob: -11.804443359375
    9. '
' → logprob: -11.804443359375
    10. '        
' → logprob: -12.679443359375

Token 1728: ' stronger' (ID: 26929)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03060593083500862
    2. 'for' → logprob: -3.5306060314178467
    3. '```' → logprob: -8.155606269836426
    4. ' for' → logprob: -8.405606269836426
    5. '	' → logprob: -9.030606269836426
    6. '	for' → logprob: -9.405606269836426
    7. '   ' → logprob: -9.530606269836426
    8. '
' → logprob: -10.530606269836426
    9. '	   ' → logprob: -11.280606269836426
    10. '           ' → logprob: -11.530606269836426

Token 1729: ' means' (ID: 4748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.506988763809204
    2. ' =' → logprob: -1.631988763809204
    3. '   ' → logprob: -1.881988763809204
    4. '[u' → logprob: -2.381988763809204
    5. '[' → logprob: -3.256988763809204
    6. '```' → logprob: -3.506988763809204
    7. 'import' → logprob: -3.631988763809204
    8. 'for' → logprob: -3.631988763809204
    9. '_line' → logprob: -3.881988763809204
    10. 'def' → logprob: -4.256988525390625

Token 1730: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.08661264926195145
    2. '(comp' → logprob: -2.9616127014160156
    3. ' comp' → logprob: -4.586612701416016
    4. 'find' → logprob: -4.711612701416016
    5. 'reach' → logprob: -5.836612701416016
    6. 'color' → logprob: -5.836612701416016
    7. ' (' → logprob: -6.711612701416016
    8. ' find' → logprob: -6.961612701416016
    9. '(find' → logprob: -6.961612701416016
    10. 'parent' → logprob: -7.211612701416016

Token 1731: '[X' (ID: 118621)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.309421569108963
    2. '[' → logprob: -2.4344215393066406
    3. 'r' → logprob: -2.8094215393066406
    4. 'ort' → logprob: -3.6844215393066406
    5. 'lete' → logprob: -4.434421539306641
    6. 'let' → logprob: -4.434421539306641
    7. 'osition' → logprob: -4.434421539306641
    8. '_ids' → logprob: -5.059421539306641
    9. 'orted' → logprob: -5.184421539306641
    10. '[u' → logprob: -5.434421539306641

Token 1732: ']'' (ID: 75642)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2100994884967804
    2. '[' → logprob: -2.210099458694458
    3. ']!=' → logprob: -3.085099458694458
    4. 'find' → logprob: -4.210099697113037
    5. ']==' → logprob: -5.335099697113037
    6. '_id' → logprob: -5.960099697113037
    7. '][' → logprob: -5.960099697113037
    8. '[x' → logprob: -6.460099697113037
    9. '[X' → logprob: -6.710099697113037
    10. 'id' → logprob: -6.710099697113037

Token 1733: 's' (ID: 82)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7883508205413818
    2. 's' → logprob: -0.7883508205413818
    3. ']!=' → logprob: -3.038350820541382
    4. '[' → logprob: -4.538351058959961
    5. '!=' → logprob: -5.163351058959961
    6. '[s' → logprob: -5.288351058959961
    7. ' !=' → logprob: -5.413351058959961
    8. '']' → logprob: -5.663351058959961
    9. '```' → logprob: -5.913351058959961
    10. '_id' → logprob: -6.163351058959961

Token 1734: ' reachable' (ID: 143580)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.0061666090041399
    2. ' reach' → logprob: -5.756166458129883
    3. 'set' → logprob: -6.256166458129883
    4. '
' → logprob: -8.006166458129883
    5. 'reachable' → logprob: -8.006166458129883
    6. 'index' → logprob: -9.006166458129883
    7. 'id' → logprob: -9.381166458129883
    8. '```' → logprob: -10.256166458129883
    9. 'parent' → logprob: -10.381166458129883
    10. 'in' → logprob: -10.756166458129883

Token 1735: ' contains' (ID: 8895)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3586475849151611
    2. 'for' → logprob: -1.7336475849151611
    3. '()
' → logprob: -1.9836475849151611
    4. '   ' → logprob: -2.233647584915161
    5. ' =' → logprob: -2.983647584915161
    6. '()' → logprob: -3.108647584915161
    7. '       ' → logprob: -3.358647584915161
    8. '
' → logprob: -3.483647584915161
    9. ':
' → logprob: -3.733647584915161
    10. '=' → logprob: -3.733647584915161

Token 1736: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0016428076196461916
    2. '(comp' → logprob: -7.00164270401001
    3. ' comp' → logprob: -7.37664270401001
    4. 'find' → logprob: -9.876643180847168
    5. ' ' → logprob: -11.126643180847168
    6. '   ' → logprob: -11.126643180847168
    7. '	comp' → logprob: -11.376643180847168
    8. '(' → logprob: -12.251643180847168
    9. '  ' → logprob: -12.376643180847168
    10. 'com' → logprob: -14.251643180847168

Token 1737: '[Y' (ID: 173881)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -1.6167428493499756
    2. '[' → logprob: -1.7417428493499756
    3. '[Y' → logprob: -2.1167428493499756
    4. 'X' → logprob: -2.7417428493499756
    5. '[X' → logprob: -2.8667428493499756
    6. '(X' → logprob: -3.1167428493499756
    7. '(find' → logprob: -3.2417428493499756
    8. '
' → logprob: -3.3667428493499756
    9. '(Y' → logprob: -3.4917428493499756
    10. '(' → logprob: -3.6167428493499756

Token 1738: ']

' (ID: 3144)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.15290863811969757
    2. ']' → logprob: -3.0279085636138916
    3. '       ' → logprob: -3.9029085636138916
    4. ']:
' → logprob: -3.9029085636138916
    5. ')
' → logprob: -4.277908802032471
    6. '           ' → logprob: -4.277908802032471
    7. ')]
' → logprob: -4.652908802032471
    8. '):
' → logprob: -5.277908802032471
    9. ')' → logprob: -5.652908802032471
    10. ']

' → logprob: -6.277908802032471

Token 1739: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47376325726509094
    2. 'for' → logprob: -1.4737632274627686
    3. '   ' → logprob: -2.5987632274627686
    4. '
' → logprob: -3.3487632274627686
    5. ' for' → logprob: -3.5987632274627686
    6. '	for' → logprob: -5.598763465881348
    7. '```' → logprob: -5.723763465881348
    8. '        
' → logprob: -6.348763465881348
    9. 'def' → logprob: -6.848763465881348
    10. '    
' → logprob: -8.098763465881348

Token 1740: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3896676003932953
    2. 'for' → logprob: -1.2646676301956177
    3. '   ' → logprob: -3.389667510986328
    4. ' for' → logprob: -5.389667510986328
    5. 'def' → logprob: -6.514667510986328
    6. '
' → logprob: -8.514667510986328
    7. '<|end|>' → logprob: -8.514667510986328
    8. '	for' → logprob: -9.639667510986328
    9. 'import' → logprob: -10.139667510986328
    10. '        
' → logprob: -10.264667510986328

Token 1741: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03477155789732933
    2. 'for' → logprob: -3.40977144241333
    3. ' for' → logprob: -7.28477144241333
    4. '   ' → logprob: -7.78477144241333
    5. '```' → logprob: -11.534771919250488
    6. '	for' → logprob: -12.284771919250488
    7. '
' → logprob: -12.534771919250488
    8. 'def' → logprob: -13.534771919250488
    9. '<|end|>' → logprob: -14.159771919250488
    10. '           ' → logprob: -14.159771919250488

Token 1742: ' number' (ID: 2086)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34872323274612427
    2. 'for' → logprob: -1.5987231731414795
    3. '
' → logprob: -3.7237231731414795
    4. ' for' → logprob: -3.7237231731414795
    5. '   ' → logprob: -4.223723411560059
    6. 'def' → logprob: -4.848723411560059
    7. 'n' → logprob: -5.598723411560059
    8. 're' → logprob: -5.973723411560059
    9. '        
' → logprob: -5.973723411560059
    10. '=' → logprob: -6.598723411560059

Token 1743: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.7383055090904236
    2. ' of' → logprob: -1.4883055686950684
    3. '       ' → logprob: -1.8633055686950684
    4. '   ' → logprob: -2.9883055686950684
    5. ' =' → logprob: -3.4883055686950684
    6. '_of' → logprob: -3.4883055686950684
    7. '=' → logprob: -4.738305568695068
    8. 'M' → logprob: -5.613305568695068
    9. '      ' → logprob: -6.113305568695068
    10. 'Of' → logprob: -6.238305568695068

Token 1744: ' distinct' (ID: 16913)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17026817798614502
    2. 'questions' → logprob: -2.4202680587768555
    3. '
' → logprob: -4.1702680587768555
    4. '=' → logprob: -4.2952680587768555
    5. ' for' → logprob: -4.5452680587768555
    6. 'lines' → logprob: -5.4202680587768555
    7. 'Q' → logprob: -5.4202680587768555
    8. 'queries' → logprob: -5.5452680587768555
    9. '```' → logprob: -5.9202680587768555
    10. '   ' → logprob: -6.5452680587768555

Token 1745: ' streets' (ID: 25360)
  Prédit: ' streets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' streets' → logprob: -1.3111730813980103
    2. 'questions' → logprob: -1.8111730813980103
    3. 'for' → logprob: -1.9361730813980103
    4. 'stre' → logprob: -2.0611729621887207
    5. '```' → logprob: -2.8111729621887207
    6. 'queries' → logprob: -3.0611729621887207
    7. ' for' → logprob: -3.3111729621887207
    8. '   ' → logprob: -3.9361729621887207
    9. 'lines' → logprob: -4.061172962188721
    10. '       ' → logprob: -4.311172962188721

Token 1746: ' equals' (ID: 29702)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9739125370979309
    2. '       ' → logprob: -1.0989124774932861
    3. ' =' → logprob: -2.098912477493286
    4. '=' → logprob: -3.098912477493286
    5. ' for' → logprob: -3.348912477493286
    6. '```' → logprob: -3.848912477493286
    7. '   ' → logprob: -4.348912715911865
    8. 'def' → logprob: -4.973912715911865
    9. '
' → logprob: -5.098912715911865
    10. 's' → logprob: -5.223912715911865

Token 1747: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.007012429181486368
    2. 'len' → logprob: -5.257012367248535
    3. ' cnt' → logprob: -6.382012367248535
    4. ' len' → logprob: -11.132012367248535
    5. '   ' → logprob: -11.382012367248535
    6. 'max' → logprob: -11.382012367248535
    7. '(cnt' → logprob: -11.507012367248535
    8. '[cnt' → logprob: -11.507012367248535
    9. 'sum' → logprob: -12.132012367248535
    10. '	cnt' → logprob: -12.257012367248535

Token 1748: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15752960741519928
    2. 'for' → logprob: -2.282529592514038
    3. ' for' → logprob: -3.532529592514038
    4. '
' → logprob: -5.282529830932617
    5. '   ' → logprob: -5.407529830932617
    6. '```' → logprob: -6.032529830932617
    7. 'def' → logprob: -6.532529830932617
    8. '<|end|>' → logprob: -7.782529830932617
    9. '        
' → logprob: -8.907529830932617
    10. '``' → logprob: -9.282529830932617

Token 1749: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012959860265254974
    2. 'for' → logprob: -5.137959957122803
    3. '   ' → logprob: -5.887959957122803
    4. ' for' → logprob: -6.137959957122803
    5. '<|end|>' → logprob: -7.137959957122803
    6. '```' → logprob: -7.887959957122803
    7. '	' → logprob: -8.262959480285645
    8. '<|end|>' → logprob: -8.387959480285645
    9. '	for' → logprob: -9.012959480285645
    10. 'def' → logprob: -9.262959480285645

Token 1750: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6541692614555359
    2. 'for' → logprob: -0.7791692614555359
    3. '   ' → logprob: -4.404169082641602
    4. ' for' → logprob: -4.904169082641602
    5. '```' → logprob: -7.029169082641602
    6. '	for' → logprob: -7.279169082641602
    7. '<|end|>' → logprob: -10.154169082641602
    8. 'def' → logprob: -10.404169082641602
    9. '``' → logprob: -11.279169082641602
    10. 'import' → logprob: -12.029169082641602

Token 1751: '(cnt' (ID: 102125)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05062328279018402
    2. '(' → logprob: -3.9256231784820557
    3. '(len' → logprob: -4.675623416900635
    4. '('' → logprob: -5.050623416900635
    5. '("")' → logprob: -5.300623416900635
    6. '("' → logprob: -5.425623416900635
    7. '("("' → logprob: -7.300623416900635
    8. '(*' → logprob: -7.300623416900635
    9. 's' → logprob: -7.550623416900635
    10. '(
' → logprob: -8.175622940063477

Token 1752: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012687044218182564
    2. ',' → logprob: -4.5126872062683105
    3. ')
' → logprob: -7.1376872062683105
    4. ' )' → logprob: -7.8876872062683105
    5. ',end' → logprob: -8.887686729431152
    6. '   ' → logprob: -9.137686729431152
    7. '*' → logprob: -10.387686729431152
    8. ',)' → logprob: -10.887686729431152
    9. '-' → logprob: -11.012686729431152
    10. '())' → logprob: -11.012686729431152

Token 1753: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1754: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03492685779929161
    2. '       ' → logprob: -3.5349268913269043
    3. ' for' → logprob: -5.409926891326904
    4. '	for' → logprob: -8.534926414489746
    5. '```' → logprob: -8.659926414489746
    6. '<|end|>' → logprob: -8.784926414489746
    7. '   ' → logprob: -9.034926414489746
    8. '        
' → logprob: -11.284926414489746
    9. '
' → logprob: -11.534926414489746
    10. '	' → logprob: -11.909926414489746

Token 1755: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03222140669822693
    2. 'Q' → logprob: -4.65722131729126
    3. '_q' → logprob: -4.65722131729126
    4. 'X' → logprob: -4.90722131729126
    5. '_' → logprob: -5.90722131729126
    6. ' q' → logprob: -6.65722131729126
    7. 'x' → logprob: -7.03222131729126
    8. '_X' → logprob: -9.407221794128418
    9. 'question' → logprob: -9.782221794128418
    10. '_x' → logprob: -9.782221794128418

Token 1756: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5305429100990295
    2. ' in' → logprob: -2.0305428504943848
    3. '_idx' → logprob: -2.9055428504943848
    4. 'i' → logprob: -3.0305428504943848
    5. 'in' → logprob: -3.2805428504943848
    6. ' ' → logprob: -3.7805428504943848
    7. '[' → logprob: -3.9055428504943848
    8. '_i' → logprob: -4.030542850494385
    9. ')' → logprob: -4.280542850494385
    10. '   ' → logprob: -4.405542850494385

Token 1757: ' questions' (ID: 5359)
  Prédit: 'questions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'questions' → logprob: -0.0009349246975034475
    2. 'range' → logprob: -7.375935077667236
    3. ' questions' → logprob: -8.125934600830078
    4. 'queries' → logprob: -12.125934600830078
    5. ' range' → logprob: -12.125934600830078
    6. '   ' → logprob: -14.875934600830078
    7. 'requests' → logprob: -15.375934600830078
    8. '
' → logprob: -15.500934600830078
    9. '[' → logprob: -15.625934600830078
    10. 'quests' → logprob: -16.000934600830078

Token 1758: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2856936752796173
    2. ':' → logprob: -1.410693645477295
    3. ':
' → logprob: -5.660693645477295
    4. '.' → logprob: -9.285694122314453
    5. '():
' → logprob: -9.410694122314453
    6. '[' → logprob: -9.660694122314453
    7. ',q' → logprob: -9.660694122314453
    8. '):' → logprob: -9.910694122314453
    9. '<|end|>' → logprob: -9.910694122314453
    10. '):
' → logprob: -10.035694122314453

Token 1759: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02735917642712593
    2. '   ' → logprob: -4.6523590087890625
    3. '           ' → logprob: -4.7773590087890625
    4. '```' → logprob: -5.5273590087890625
    5. '	       ' → logprob: -5.9023590087890625
    6. '	   ' → logprob: -7.7773590087890625
    7. ' ' → logprob: -8.277359008789062
    8. ',' → logprob: -8.277359008789062
    9. '        ' → logprob: -8.402359008789062
    10. '        
' → logprob: -8.527359008789062

Token 1760: ' X' (ID: 2127)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3936230540275574
    2. 'X' (adapté à ' X') → logprob: -1.2686231136322021
    3. '           ' → logprob: -3.768623113632202
    4. 'a' → logprob: -4.643622875213623
    5. 'A' → logprob: -4.768622875213623
    6. ' x' → logprob: -6.768622875213623
    7. 's' → logprob: -7.018622875213623
    8. ' X' → logprob: -7.393622875213623
    9. '       ' → logprob: -9.393623352050781
    10. 'parts' → logprob: -10.018623352050781

Token 1761: ',Y' (ID: 71464)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08300694078207016
    2. ',Y' → logprob: -2.7080068588256836
    3. '_,' → logprob: -5.208006858825684
    4. 's' → logprob: -6.708006858825684
    5. ' ,' → logprob: -6.833006858825684
    6. '_str' → logprob: -6.958006858825684
    7. '_id' → logprob: -7.333006858825684
    8. '_s' → logprob: -7.333006858825684
    9. ',s' → logprob: -7.333006858825684
    10. '_name' → logprob: -7.333006858825684

Token 1762: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4288695156574249
    2. ' =' → logprob: -1.0538694858551025
    3. 'A' → logprob: -9.678869247436523
    4. 'X' → logprob: -10.428869247436523
    5. '=A' → logprob: -11.053869247436523
    6. '           ' → logprob: -11.303869247436523
    7. 'a' → logprob: -11.303869247436523
    8. 'x' → logprob: -11.678869247436523
    9. '=X' → logprob: -11.678869247436523
    10. '=line' → logprob: -13.053869247436523

Token 1763: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00026217024424113333
    2. ' q' → logprob: -8.250262260437012
    3. '[q' → logprob: -14.250262260437012
    4. 'get' → logprob: -16.125261306762695
    5. 'map' → logprob: -17.125261306762695
    6. '	q' → logprob: -17.250261306762695
    7. '   ' → logprob: -17.250261306762695
    8. '(q' → logprob: -18.375261306762695
    9. '[' → logprob: -18.875261306762695
    10. '
' → logprob: -19.125261306762695

Token 1764: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25527504086494446
    2. ' =' → logprob: -1.505275011062622
    3. '.split' → logprob: -6.880275249481201
    4. 'split' → logprob: -7.130275249481201
    5. '           ' → logprob: -8.005274772644043
    6. '=line' → logprob: -8.380274772644043
    7. '_split' → logprob: -8.755274772644043
    8. '=A' → logprob: -8.880274772644043
    9. '=input' → logprob: -9.005274772644043
    10. '.' → logprob: -9.255274772644043

Token 1765: '('-' (ID: 33343)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02138998545706272
    2. '('' → logprob: -4.646389961242676
    3. '()[' → logprob: -5.521389961242676
    4. '()
' → logprob: -5.771389961242676
    5. '(' → logprob: -6.021389961242676
    6. '[' → logprob: -6.521389961242676
    7. '(),' → logprob: -9.396389961242676
    8. ''' → logprob: -9.396389961242676
    9. '<|end|>' → logprob: -9.646389961242676
    10. '();' → logprob: -10.271389961242676

Token 1766: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.020790614187717438
    2. ')' → logprob: -4.2707905769348145
    3. '')
' → logprob: -5.1457905769348145
    4. '')' → logprob: -7.2707905769348145
    5. ')
' → logprob: -10.145791053771973
    6. '[' → logprob: -10.895791053771973
    7. '")
' → logprob: -11.645791053771973
    8. ' )
' → logprob: -13.020791053771973
    9. ']
' → logprob: -13.020791053771973
    10. '0' → logprob: -13.145791053771973

Token 1767: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018312884494662285
    2. 'x' → logprob: -5.518312931060791
    3. '```' → logprob: -5.518312931060791
    4. ' x' → logprob: -5.893312931060791
    5. ' A' → logprob: -6.393312931060791
    6. 'A' → logprob: -6.518312931060791
    7. '       ' → logprob: -6.643312931060791
    8. 'X' → logprob: -6.768312931060791
    9. ' X' → logprob: -7.393312931060791
    10. ' if' → logprob: -8.518312454223633

Token 1768: ' if' (ID: 538)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2806891202926636
    2. 'if' (adapté à ' if') → logprob: -1.7806891202926636
    3. 'a' → logprob: -3.155689239501953
    4. 'ax' → logprob: -4.655689239501953
    5. '           ' → logprob: -5.030689239501953
    6. '```' → logprob: -5.405689239501953
    7. 'xi' → logprob: -5.530689239501953
    8. 'X' → logprob: -5.780689239501953
    9. ' if' → logprob: -6.280689239501953
    10. 'A' → logprob: -6.655689239501953

Token 1769: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.006715370807796717
    2. ' X' → logprob: -5.006715297698975
    3. 'x' → logprob: -16.756715774536133
    4. ' ' → logprob: -17.006715774536133
    5. '           ' → logprob: -17.881715774536133
    6. '   ' → logprob: -18.256715774536133
    7. ' x' → logprob: -19.131715774536133
    8. '
' → logprob: -19.506715774536133
    9. '  ' → logprob: -19.756715774536133
    10. '    ' → logprob: -19.881715774536133

Token 1770: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.13012176752090454
    2. 'not' → logprob: -2.3801217079162598
    3. ' in' → logprob: -3.6301217079162598
    4. 'in' → logprob: -5.88012170791626
    5. '<|end|>' → logprob: -10.630122184753418
    6. ' ' → logprob: -10.880122184753418
    7. '   ' → logprob: -10.880122184753418
    8. ')' → logprob: -11.005122184753418
    9. '```' → logprob: -11.005122184753418
    10. '_not' → logprob: -11.255122184753418

Token 1771: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11286532878875732
    2. 'in' → logprob: -2.237865447998047
    3. ' not' → logprob: -10.362865447998047
    4. 'not' → logprob: -12.112865447998047
    5. 'street' → logprob: -13.487865447998047
    6. ' street' → logprob: -13.612865447998047
    7. '```' → logprob: -14.487865447998047
    8. ')' → logprob: -14.487865447998047
    9. 'e' → logprob: -14.737865447998047
    10. '[' → logprob: -15.112865447998047

Token 1772: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -4.4849443838757e-06
    2. ' street' → logprob: -12.875004768371582
    3. 'stre' → logprob: -13.625004768371582
    4. 'stroke' → logprob: -15.125004768371582
    5. '
' → logprob: -16.375003814697266
    6. '   ' → logprob: -16.500003814697266
    7. '```' → logprob: -16.500003814697266
    8. 'string' → logprob: -16.750003814697266
    9. 'storm' → logprob: -17.625003814697266
    10. ' ' → logprob: -18.125003814697266

Token 1773: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.128163257315464e-07
    2. '_ids' → logprob: -16.125
    3. 'id' → logprob: -16.625
    4. '   ' → logprob: -17.375
    5. '```' → logprob: -17.5
    6. '_' → logprob: -17.875
    7. 's' → logprob: -18.625
    8. '_to' → logprob: -19.625
    9. '_i' → logprob: -19.75
    10. ' _' → logprob: -20.125

Token 1774: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.545963704586029
    2. ':
' → logprob: -0.920963704586029
    3. ' or' → logprob: -4.045963764190674
    4. '           ' → logprob: -6.045963764190674
    5. '               ' → logprob: -6.170963764190674
    6. '):
' → logprob: -9.045963287353516
    7. ':return' → logprob: -9.045963287353516
    8. '[' → logprob: -9.170963287353516
    9. ')' → logprob: -9.545963287353516
    10. '):' → logprob: -10.295963287353516

Token 1775: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0010331686353310943
    2. ' Y' → logprob: -6.876033306121826
    3. 'y' → logprob: -15.376032829284668
    4. 'street' → logprob: -16.251033782958984
    5. '   ' → logprob: -16.501033782958984
    6. '	Y' → logprob: -16.876033782958984
    7. '
' → logprob: -17.251033782958984
    8. ' ' → logprob: -17.376033782958984
    9. ' street' → logprob: -18.751033782958984
    10. '    ' → logprob: -19.126033782958984

Token 1776: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2519359588623047
    2. 'not' → logprob: -1.5019359588623047
    3. ']' → logprob: -12.376935958862305
    4. ')' → logprob: -13.126935958862305
    5. '	not' → logprob: -15.251935958862305
    6. '[' → logprob: -15.376935958862305
    7. '
' → logprob: -17.001935958862305
    8. '==' → logprob: -17.126935958862305
    9. '           ' → logprob: -17.501935958862305
    10. '   ' → logprob: -17.751935958862305

Token 1777: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759646892547607
    2. ' in' → logprob: -0.8259646892547607
    3. 'not' → logprob: -11.95096492767334
    4. ' ' → logprob: -12.20096492767334
    5. ' not' → logprob: -12.45096492767334
    6. '   ' → logprob: -12.57596492767334
    7. '[' → logprob: -13.32596492767334
    8. '           ' → logprob: -13.95096492767334
    9. ']' → logprob: -14.07596492767334
    10. ')' → logprob: -14.45096492767334

Token 1778: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.0005010855966247618
    2. ' street' → logprob: -7.6255011558532715
    3. 'stre' → logprob: -11.875500679016113
    4. '
' → logprob: -12.625500679016113
    5. 'stroke' → logprob: -14.000500679016113
    6. '   ' → logprob: -14.500500679016113
    7. 'storm' → logprob: -15.250500679016113
    8. ' ' → logprob: -15.375500679016113
    9. '```' → logprob: -16.00050163269043
    10. '.street' → logprob: -16.00050163269043

Token 1779: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.3438327843905427e-05
    2. 'id' → logprob: -11.25002384185791
    3. '   ' → logprob: -11.87502384185791
    4. '```' → logprob: -13.62502384185791
    5. '
' → logprob: -14.37502384185791
    6. '``' → logprob: -14.87502384185791
    7. '           ' → logprob: -15.75002384185791
    8. '       ' → logprob: -15.75002384185791
    9. ')' → logprob: -16.250022888183594
    10. '[' → logprob: -16.375022888183594

Token 1780: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5491577982902527
    2. ':' → logprob: -1.7991578578948975
    3. '               ' → logprob: -1.7991578578948975
    4. ' or' → logprob: -2.4241578578948975
    5. '           ' → logprob: -5.924157619476318
    6. '):
' → logprob: -9.299158096313477
    7. ',' → logprob: -9.674158096313477
    8. '                   ' → logprob: -10.049158096313477
    9. '	           ' → logprob: -10.174158096313477
    10. '       ' → logprob: -10.549158096313477

Token 1781: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014745104126632214
    2. '```' → logprob: -6.751474380493164
    3. '           ' → logprob: -9.001474380493164
    4. '	           ' → logprob: -9.876474380493164
    5. ' continue' → logprob: -10.001474380493164
    6. '   ' → logprob: -11.251474380493164
    7. 'continue' → logprob: -11.251474380493164
    8. '		       ' → logprob: -11.751474380493164
    9. 'print' → logprob: -11.876474380493164
    10. '<|end|>' → logprob: -11.876474380493164

Token 1782: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6434269547462463
    2. '               ' → logprob: -0.8934269547462463
    3. ' print' → logprob: -3.1434268951416016
    4. '```' → logprob: -4.893426895141602
    5. '           ' → logprob: -5.143426895141602
    6. '                   ' → logprob: -5.643426895141602
    7. ' ' → logprob: -6.268426895141602
    8. '   ' → logprob: -6.393426895141602
    9. 'continue' → logprob: -7.143426895141602
    10. ' continue' → logprob: -8.018426895141602

Token 1783: '("' (ID: 568)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.8124130964279175
    2. '("' → logprob: -1.0624130964279175
    3. ' NO' → logprob: -2.812413215637207
    4. '('' → logprob: -2.812413215637207
    5. 'No' → logprob: -3.562413215637207
    6. '(NO' → logprob: -4.187413215637207
    7. '"' → logprob: -4.437413215637207
    8. ' No' → logprob: -5.062413215637207
    9. '"No' → logprob: -5.312413215637207
    10. 'UNKNOWN' → logprob: -5.437413215637207

Token 1784: 'NO' (ID: 14695)
  Prédit: 'UNKNOWN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UNKNOWN' → logprob: -0.29770225286483765
    2. 'NO' → logprob: -1.5477023124694824
    3. 'No' → logprob: -4.172702312469482
    4. 'Unknown' → logprob: -4.422702312469482
    5. 'NA' → logprob: -5.047702312469482
    6. 'INVALID' → logprob: -5.797702312469482
    7. 'Impossible' → logprob: -6.422702312469482
    8. 'NONE' → logprob: -6.422702312469482
    9. 'None' → logprob: -7.297702312469482
    10. 'unknown' → logprob: -7.297702312469482

Token 1785: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.03837732970714569
    2. '")' → logprob: -3.288377285003662
    3. '           ' → logprob: -8.78837776184082
    4. '")
' → logprob: -9.28837776184082
    5. ')")
' → logprob: -10.16337776184082
    6. '               ' → logprob: -10.66337776184082
    7. ')
' → logprob: -11.03837776184082
    8. ')' → logprob: -12.28837776184082
    9. '       ' → logprob: -12.41337776184082
    10. '```' → logprob: -13.53837776184082

Token 1786: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0036503183655440807
    2. '           ' → logprob: -5.628650188446045
    3. '```' → logprob: -10.878650665283203
    4. 'continue' → logprob: -11.628650665283203
    5. '                   ' → logprob: -12.003650665283203
    6. '       ' → logprob: -12.003650665283203
    7. ' ' → logprob: -12.628650665283203
    8. ' continue' → logprob: -13.253650665283203
    9. '   ' → logprob: -13.378650665283203
    10. '
' → logprob: -14.128650665283203

Token 1787: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003344063414260745
    2. '           ' → logprob: -6.0033440589904785
    3. 'continue' (adapté à ' continue') → logprob: -7.1283440589904785
    4. ' continue' → logprob: -10.503344535827637
    5. 'else' → logprob: -10.628344535827637
    6. '                   ' → logprob: -12.503344535827637
    7. '```' → logprob: -12.503344535827637
    8. ' ' → logprob: -13.003344535827637
    9. '   ' → logprob: -13.753344535827637
    10. '       ' → logprob: -13.878344535827637

Token 1788: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009071758831851184
    2. '
' → logprob: -7.250906944274902
    3. '            
' → logprob: -9.500906944274902
    4. '       ' → logprob: -10.000906944274902
    5. '  
' → logprob: -11.000906944274902
    6. '<|end|>' → logprob: -11.375906944274902
    7. '```' → logprob: -11.500906944274902
    8. '        
' → logprob: -11.750906944274902
    9. '    
' → logprob: -12.000906944274902
    10. '   ' → logprob: -12.375906944274902

Token 1789: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004512242507189512
    2. '```' → logprob: -5.504512310028076
    3. '
' → logprob: -8.129511833190918
    4. '       ' → logprob: -9.379511833190918
    5. '            
' → logprob: -10.754511833190918
    6. '`' → logprob: -11.379511833190918
    7. '``' → logprob: -11.879511833190918
    8. '          ' → logprob: -12.879511833190918
    9. '               ' → logprob: -13.004511833190918
    10. '        
' → logprob: -13.129511833190918

Token 1790: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.3356545567512512
    2. 'X' → logprob: -2.2106544971466064
    3. '           ' → logprob: -2.2106544971466064
    4. 'u' → logprob: -3.8356544971466064
    5. ' x' → logprob: -4.0856547355651855
    6. 'a' → logprob: -4.4606547355651855
    7. 'A' → logprob: -4.9606547355651855
    8. ' X' → logprob: -5.7106547355651855
    9. '       ' → logprob: -5.8356547355651855
    10. ' u' → logprob: -7.3356547355651855

Token 1791: ',y' (ID: 16103)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.13617870211601257
    2. ' =' → logprob: -2.136178731918335
    3. '=' → logprob: -5.386178493499756
    4. 'id' → logprob: -5.636178493499756
    5. '_' → logprob: -7.136178493499756
    6. '_i' → logprob: -9.261178970336914
    7. '_idx' → logprob: -9.761178970336914
    8. 'ID' → logprob: -10.386178970336914
    9. 'c' → logprob: -11.761178970336914
    10. '_comp' → logprob: -11.761178970336914

Token 1792: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715967319905758
    2. ' =' → logprob: -5.006715774536133
    3. '=get' → logprob: -15.881715774536133
    4. '=find' → logprob: -15.881715774536133
    5. '=
' → logprob: -16.631715774536133
    6. ')=' → logprob: -16.756715774536133
    7. 'x' → logprob: -16.881715774536133
    8. ',' → logprob: -17.256715774536133
    9. '=sys' → logprob: -17.381715774536133
    10. ')' → logprob: -17.506715774536133

Token 1793: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.0009571973932906985
    2. ' street' → logprob: -7.000957012176514
    3. 'stre' → logprob: -10.625957489013672
    4. '(st' → logprob: -11.250957489013672
    5. '   ' → logprob: -12.125957489013672
    6. '           ' → logprob: -13.375957489013672
    7. '       ' → logprob: -14.875957489013672
    8. 'st' → logprob: -15.125957489013672
    9. '
' → logprob: -15.875957489013672
    10. '               ' → logprob: -16.000957489013672

Token 1794: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00014191943046171218
    2. 'id' → logprob: -8.875142097473145
    3. 't' → logprob: -14.125142097473145
    4. '[' → logprob: -15.375142097473145
    5. 'x' → logprob: -15.875142097473145
    6. 'Id' → logprob: -16.000141143798828
    7. 'd' → logprob: -16.125141143798828
    8. '
' → logprob: -16.500141143798828
    9. '   ' → logprob: -16.750141143798828
    10. '```' → logprob: -16.750141143798828

Token 1795: '[X' (ID: 118621)
  Prédit: '[X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -0.0009566014050506055
    2. 'X' → logprob: -7.0009565353393555
    3. '[x' → logprob: -10.125956535339355
    4. '[' → logprob: -12.625956535339355
    5. '[
' → logprob: -14.625956535339355
    6. '(X' → logprob: -15.000956535339355
    7. '[q' → logprob: -15.375956535339355
    8. ' X' → logprob: -16.000957489013672
    9. ' [' → logprob: -16.125957489013672
    10. '```' → logprob: -16.250957489013672

Token 1796: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0018318959046155214
    2. '),' → logprob: -6.376832008361816
    3. ']' → logprob: -9.751832008361816
    4. ',' → logprob: -10.626832008361816
    5. ']
' → logprob: -11.126832008361816
    6. '       ' → logprob: -12.001832008361816
    7. '],[' → logprob: -12.126832008361816
    8. ',y' → logprob: -12.376832008361816
    9. '[' → logprob: -13.001832008361816
    10. '           ' → logprob: -13.001832008361816

Token 1797: 'street' (ID: 55690)
  Prédit: 'street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.00012439649435691535
    2. ' street' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.875123977661133
    4. 'stre' → logprob: -15.125123977661133
    5. 'y' → logprob: -16.250123977661133
    6. '       ' → logprob: -17.250123977661133
    7. ' ' → logprob: -17.375123977661133
    8. '  ' → logprob: -17.625123977661133
    9. '    ' → logprob: -18.250123977661133
    10. 'city' → logprob: -18.375123977661133

Token 1798: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00042292833677493036
    2. '[Y' → logprob: -8.375422477722168
    3. '[y' → logprob: -8.875422477722168
    4. 'y' → logprob: -11.000422477722168
    5. 'id' → logprob: -11.000422477722168
    6. '[' → logprob: -11.625422477722168
    7. 'Y' → logprob: -12.125422477722168
    8. '{' → logprob: -14.000422477722168
    9. '
' → logprob: -14.250422477722168
    10. '[
' → logprob: -14.250422477722168

Token 1799: '[Y' (ID: 173881)
  Prédit: '[Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.10197702795267105
    2. '[y' → logprob: -2.3519771099090576
    3. '[' → logprob: -6.4769768714904785
    4. '[
' → logprob: -9.101977348327637
    5. '[x' → logprob: -10.476977348327637
    6. 'y' → logprob: -10.601977348327637
    7. 'Y' → logprob: -10.601977348327637
    8. '[s' → logprob: -11.726977348327637
    9. '
' → logprob: -12.101977348327637
    10. '[[' → logprob: -12.476977348327637

Token 1800: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2959791421890259
    2. ')' → logprob: -1.9209791421890259
    3. ']
' → logprob: -2.6709790229797363
    4. '           ' → logprob: -3.7959790229797363
    5. ']' → logprob: -4.045979022979736
    6. ')
' → logprob: -8.795979499816895
    7. '])
' → logprob: -9.170979499816895
    8. '])' → logprob: -9.295979499816895
    9. '               ' → logprob: -9.920979499816895
    10. ')]' → logprob: -9.920979499816895

Token 1801: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021145737264305353
    2. '
' → logprob: -6.877114772796631
    3. ' if' → logprob: -8.127114295959473
    4. '       ' → logprob: -8.502114295959473
    5. '            
' → logprob: -9.127114295959473
    6. 'if' → logprob: -9.252114295959473
    7. '<|end|>' → logprob: -9.252114295959473
    8. '```' → logprob: -9.377114295959473
    9. '   ' → logprob: -9.877114295959473
    10. '[' → logprob: -10.377114295959473

Token 1802: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.46614500880241394
    2. 'if' (adapté à ' if') → logprob: -1.0911450386047363
    3. '           ' → logprob: -3.3411450386047363
    4. '       ' → logprob: -7.716145038604736
    5. '```' → logprob: -8.091144561767578
    6. 'color' → logprob: -9.091144561767578
    7. ' color' → logprob: -9.216144561767578
    8. ' col' → logprob: -9.841144561767578
    9. '   ' → logprob: -10.466144561767578
    10. ' c' → logprob: -10.591144561767578

Token 1803: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.10021141171455383
    2. ' color' → logprob: -2.3502113819122314
    3. '   ' → logprob: -13.475211143493652
    4. '(color' → logprob: -14.100211143493652
    5. ' x' → logprob: -14.225211143493652
    6. 'x' → logprob: -14.350211143493652
    7. '	color' → logprob: -14.850211143493652
    8. '    ' → logprob: -15.100211143493652
    9. 'abs' → logprob: -15.850211143493652
    10. '           ' → logprob: -16.10021209716797

Token 1804: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00012047011114191264
    2. 'x' → logprob: -9.250120162963867
    3. '[y' → logprob: -11.625120162963867
    4. '[' → logprob: -11.875120162963867
    5. '==' → logprob: -12.750120162963867
    6. '(x' → logprob: -12.875120162963867
    7. '!=' → logprob: -14.625120162963867
    8. ' [' → logprob: -15.250120162963867
    9. '   ' → logprob: -15.375120162963867
    10. '=x' → logprob: -15.375120162963867

Token 1805: ']==' (ID: 34128)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.004516869783401489
    2. ']!=' → logprob: -5.879517078399658
    3. '==' → logprob: -7.004517078399658
    4. ' !=' → logprob: -7.629517078399658
    5. ']' → logprob: -8.5045166015625
    6. '^' → logprob: -10.3795166015625
    7. ')!=' → logprob: -10.3795166015625
    8. ']==' → logprob: -10.6295166015625
    9. '()!=' → logprob: -11.6295166015625
    10. '```' → logprob: -12.1295166015625

Token 1806: 'color' (ID: 4991)
  Prédit: 'color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.002031065057963133
    2. '1' → logprob: -6.252030849456787
    3. '0' → logprob: -10.127031326293945
    4. ' color' → logprob: -10.252031326293945
    5. 'y' → logprob: -10.877031326293945
    6. '-' → logprob: -13.627031326293945
    7. '(' → logprob: -13.752031326293945
    8. '   ' → logprob: -13.752031326293945
    9. '(color' → logprob: -13.752031326293945
    10. '
' → logprob: -13.877031326293945

Token 1807: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.040003806352615356
    2. '[x' → logprob: -3.415003776550293
    3. 'y' → logprob: -5.165003776550293
    4. 'x' → logprob: -7.540003776550293
    5. '(y' → logprob: -10.790003776550293
    6. '[' → logprob: -10.790003776550293
    7. '   ' → logprob: -11.040003776550293
    8. '[
' → logprob: -11.790003776550293
    9. '```' → logprob: -12.165003776550293
    10. '
' → logprob: -12.915003776550293

Token 1808: ']:
' (ID: 22152)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3335951566696167
    2. ':
' → logprob: -1.3335951566696167
    3. ':' → logprob: -4.208595275878906
    4. ' and' → logprob: -6.208595275878906
    5. '           ' → logprob: -6.833595275878906
    6. 'or' → logprob: -7.458595275878906
    7. 'and' → logprob: -7.958595275878906
    8. '):
' → logprob: -8.083595275878906
    9. '==' → logprob: -8.333595275878906
    10. '               ' → logprob: -8.333595275878906

Token 1809: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.220573363360018e-05
    2. 'print' → logprob: -10.375082015991211
    3. '           ' → logprob: -10.500082015991211
    4. '```' → logprob: -11.625082015991211
    5. '                   ' → logprob: -12.375082015991211
    6. '   ' → logprob: -13.125082015991211
    7. '	           ' → logprob: -13.375082015991211
    8. '                               ' → logprob: -13.625082015991211
    9. ' print' → logprob: -14.375082015991211
    10. ':
' → logprob: -14.375082015991211

Token 1810: ' print' (ID: 2123)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.531753420829773
    2. 'print' (adapté à ' print') → logprob: -1.156753420829773
    3. '           ' → logprob: -2.5317535400390625
    4. ' print' → logprob: -4.0317535400390625
    5. '   ' → logprob: -8.406753540039062
    6. '```' → logprob: -8.406753540039062
    7. '                   ' → logprob: -8.906753540039062
    8. '       ' → logprob: -10.031753540039062
    9. ' ' → logprob: -11.281753540039062
    10. '``' → logprob: -12.781753540039062

Token 1811: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.014410175383090973
    2. '(' → logprob: -4.264410018920898
    3. '('' → logprob: -8.514410018920898
    4. '("("' → logprob: -10.264410018920898
    5. '("""' → logprob: -12.514410018920898
    6. '(
' → logprob: -12.764410018920898
    7. '(NO' → logprob: -13.139410018920898
    8. '("(' → logprob: -13.764410018920898
    9. '(""' → logprob: -15.139410018920898
    10. '("")' → logprob: -15.389410018920898

Token 1812: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -4.847109812544659e-05
    2. '"' → logprob: -10.125048637390137
    3. '"No' → logprob: -11.750048637390137
    4. '"N' → logprob: -15.375048637390137
    5. '(NO' → logprob: -16.50004768371582
    6. ' NO' → logprob: -17.37504768371582
    7. 'No' → logprob: -18.37504768371582
    8. 'NOT' → logprob: -18.37504768371582
    9. 'N' → logprob: -18.87504768371582
    10. ''' → logprob: -18.87504768371582

Token 1813: '")
' (ID: 1896)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09702098369598389
    2. '")
' → logprob: -3.2220211029052734
    3. '           ' → logprob: -3.3470211029052734
    4. '")' → logprob: -4.097021102905273
    5. '                   ' → logprob: -8.097021102905273
    6. ')
' → logprob: -8.222021102905273
    7. ')' → logprob: -9.347021102905273
    8. 'else' → logprob: -10.097021102905273
    9. '       ' → logprob: -10.347021102905273
    10. '   ' → logprob: -11.097021102905273

Token 1814: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0700698122382164
    2. '           ' → logprob: -2.6950697898864746
    3. '```' → logprob: -9.445070266723633
    4. '                   ' → logprob: -10.320070266723633
    5. 'continue' → logprob: -11.820070266723633
    6. '       ' → logprob: -12.320070266723633
    7. '	           ' → logprob: -13.195070266723633
    8. '                       ' → logprob: -13.570070266723633
    9. '	       ' → logprob: -13.820070266723633
    10. '		' → logprob: -13.820070266723633

Token 1815: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03513830900192261
    2. '           ' → logprob: -3.5351383686065674
    3. 'else' → logprob: -5.660138130187988
    4. 'elif' → logprob: -6.535138130187988
    5. 'continue' (adapté à ' continue') → logprob: -8.285138130187988
    6. ' else' → logprob: -9.410138130187988
    7. ' elif' → logprob: -10.035138130187988
    8. '                   ' → logprob: -10.535138130187988
    9. '   ' → logprob: -11.160138130187988
    10. ' continue' → logprob: -11.535138130187988

Token 1816: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006199848721735179
    2. '
' → logprob: -8.000619888305664
    3. '```' → logprob: -8.750619888305664
    4. '<|end|>' → logprob: -9.500619888305664
    5. '       ' → logprob: -11.375619888305664
    6. '            
' → logprob: -11.375619888305664
    7. '               ' → logprob: -11.875619888305664
    8. '		' → logprob: -12.250619888305664
    9. '<|end|>' → logprob: -12.375619888305664
    10. '          ' → logprob: -12.875619888305664

Token 1817: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003608267055824399
    2. '```' → logprob: -5.878608226776123
    3. '       ' → logprob: -7.628608226776123
    4. '               ' → logprob: -8.253608703613281
    5. '          ' → logprob: -10.628608703613281
    6. '   ' → logprob: -11.628608703613281
    7. '
' → logprob: -12.378608703613281
    8. '``' → logprob: -12.753608703613281
    9. '		' → logprob: -12.878608703613281
    10. '	       ' → logprob: -13.128608703613281

Token 1818: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.7382595539093018
    2. '           ' → logprob: -0.7382595539093018
    3. 'ax' → logprob: -3.8632595539093018
    4. 'x' → logprob: -4.863259315490723
    5. 'else' → logprob: -5.363259315490723
    6. ' a' → logprob: -5.613259315490723
    7. '       ' → logprob: -6.613259315490723
    8. '   ' → logprob: -6.738259315490723
    9. 'if' → logprob: -6.988259315490723
    10. '```' → logprob: -7.238259315490723

Token 1819: ',b' (ID: 17568)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10025304555892944
    2. '=' → logprob: -2.350253105163574
    3. '_comp' → logprob: -11.225253105163574
    4. 'comp' → logprob: -11.350253105163574
    5. '   ' → logprob: -12.350253105163574
    6. ',' → logprob: -12.350253105163574
    7. '=a' → logprob: -12.350253105163574
    8. '       ' → logprob: -12.850253105163574
    9. 'a' → logprob: -13.100253105163574
    10. 'b' → logprob: -13.975253105163574

Token 1820: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008615515194833279
    2. ' =' → logprob: -4.758615493774414
    3. '=a' → logprob: -14.383615493774414
    4. '=
' → logprob: -15.258615493774414
    5. '   ' → logprob: -17.133615493774414
    6. ',' → logprob: -17.633615493774414
    7. ')=' → logprob: -17.633615493774414
    8. '=b' → logprob: -17.758615493774414
    9. '=int' → logprob: -18.008615493774414
    10. ']=' → logprob: -18.133615493774414

Token 1821: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0011740362970158458
    2. ' comp' → logprob: -6.751173973083496
    3. '   ' → logprob: -13.501173973083496
    4. 'find' → logprob: -13.626173973083496
    5. '	comp' → logprob: -14.376173973083496
    6. '(comp' → logprob: -14.626173973083496
    7. '       ' → logprob: -16.251174926757812
    8. 'street' → logprob: -16.376174926757812
    9. '           ' → logprob: -17.126174926757812
    10. 'com' → logprob: -17.626174926757812

Token 1822: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.2617008400848135e-05
    2. 'find' → logprob: -10.750032424926758
    3. '[get' → logprob: -11.875032424926758
    4. '[color' → logprob: -13.125032424926758
    5. '(find' → logprob: -14.500032424926758
    6. '.find' → logprob: -14.750032424926758
    7. '=find' → logprob: -15.000032424926758
    8. '[a' → logprob: -15.750032424926758
    9. '   ' → logprob: -15.875032424926758
    10. 'a' → logprob: -16.375032424926758

Token 1823: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -7.302704761968926e-05
    2. '[' → logprob: -9.625073432922363
    3. '(find' → logprob: -12.125073432922363
    4. ' find' → logprob: -13.625073432922363
    5. '
' → logprob: -16.250072479248047
    6. ']' → logprob: -17.125072479248047
    7. '```' → logprob: -17.500072479248047
    8. '.find' → logprob: -17.625072479248047
    9. '=find' → logprob: -17.875072479248047
    10. ')find' → logprob: -18.000072479248047

Token 1824: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.039219386875629425
    2. 'x' → logprob: -3.789219379425049
    3. '(y' → logprob: -4.164219379425049
    4. 'y' → logprob: -8.289219856262207
    5. '](' → logprob: -10.164219856262207
    6. '(b' → logprob: -12.414219856262207
    7. '
' → logprob: -12.789219856262207
    8. ']' → logprob: -12.789219856262207
    9. 'b' → logprob: -13.289219856262207
    10. '(' → logprob: -14.164219856262207

Token 1825: ')],' (ID: 60559)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.008788292296230793
    2. ')],' → logprob: -4.758788108825684
    3. ']' → logprob: -9.133788108825684
    4. ']
' → logprob: -10.633788108825684
    5. ']],' → logprob: -10.883788108825684
    6. '()],' → logprob: -11.133788108825684
    7. ')]' → logprob: -12.633788108825684
    8. '),' → logprob: -13.133788108825684
    9. ']),' → logprob: -13.758788108825684
    10. '}],' → logprob: -13.883788108825684

Token 1826: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.0206720617134124e-05
    2. ' comp' → logprob: -11.50001049041748
    3. 'com' → logprob: -18.000009536743164
    4. '           ' → logprob: -18.375009536743164
    5. '	comp' → logprob: -18.375009536743164
    6. '       ' → logprob: -18.625009536743164
    7. '   ' → logprob: -19.625009536743164
    8. '(comp' → logprob: -20.500009536743164
    9. '          ' → logprob: -21.125009536743164
    10. '         ' → logprob: -21.375009536743164

Token 1827: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4855663721391466e-05
    2. 'find' → logprob: -11.250015258789062
    3. '(find' → logprob: -13.250015258789062
    4. '[
' → logprob: -16.750015258789062
    5. '.find' → logprob: -18.250015258789062
    6. '(' → logprob: -19.000015258789062
    7. '```' → logprob: -19.125015258789062
    8. '=find' → logprob: -19.625015258789062
    9. 'b' → logprob: -20.125015258789062
    10. '[(' → logprob: -20.750015258789062

Token 1828: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -3.5358694731257856e-05
    2. 'comp' → logprob: -10.500035285949707
    3. '(find' → logprob: -11.875035285949707
    4. '[' → logprob: -14.875035285949707
    5. ' find' → logprob: -15.500035285949707
    6. '
' → logprob: -15.750035285949707
    7. '=find' → logprob: -16.750036239624023
    8. '.find' → logprob: -17.750036239624023
    9. '(comp' → logprob: -17.875036239624023
    10. 'f' → logprob: -18.375036239624023

Token 1829: '(y' (ID: 14684)
  Prédit: '(find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(find' → logprob: -0.06724458187818527
    2. 'find' → logprob: -2.817244529724121
    3. '(y' → logprob: -5.567244529724121
    4. 'y' → logprob: -6.567244529724121
    5. '[' → logprob: -10.442244529724121
    6. '(' → logprob: -12.567244529724121
    7. '=find' → logprob: -13.192244529724121
    8. '[y' → logprob: -14.692244529724121
    9. ' find' → logprob: -14.692244529724121
    10. '	find' → logprob: -15.442244529724121

Token 1830: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1779194176197052
    2. ')
' → logprob: -2.427919387817383
    3. ']' → logprob: -2.802919387817383
    4. ')' → logprob: -4.677919387817383
    5. '           ' → logprob: -6.302919387817383
    6. ')]
' → logprob: -6.927919387817383
    7. '])
' → logprob: -7.052919387817383
    8. ')]' → logprob: -7.427919387817383
    9. '])' → logprob: -7.552919387817383
    10. '       ' → logprob: -11.177919387817383

Token 1831: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00026503115077503026
    2. ' if' → logprob: -9.500265121459961
    3. 'if' → logprob: -9.625265121459961
    4. '<|end|>' → logprob: -10.000265121459961
    5. '[' → logprob: -11.375265121459961
    6. '            
' → logprob: -11.625265121459961
    7. '          ' → logprob: -11.750265121459961
    8. '	       ' → logprob: -11.875265121459961
    9. '<|end|>' → logprob: -12.000265121459961
    10. '```' → logprob: -12.000265121459961

Token 1832: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4359588027000427
    2. 'if' (adapté à ' if') → logprob: -1.3109588623046875
    3. 'print' → logprob: -2.6859588623046875
    4. ' if' → logprob: -4.1859588623046875
    5. ' print' → logprob: -7.9359588623046875
    6. '```' → logprob: -9.810958862304688
    7. '       ' → logprob: -12.435958862304688
    8. '   ' → logprob: -12.560958862304688
    9. '          ' → logprob: -12.935958862304688
    10. '            ' → logprob: -13.935958862304688

Token 1833: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0012915473198518157
    2. ' b' → logprob: -6.876291751861572
    3. '   ' → logprob: -8.751291275024414
    4. 'a' → logprob: -10.251291275024414
    5. '
' → logprob: -11.376291275024414
    6. '       ' → logprob: -11.501291275024414
    7. '
' → logprob: -11.751291275024414
    8. 'y' → logprob: -12.001291275024414
    9. '    ' → logprob: -12.001291275024414
    10. '           ' → logprob: -12.126291275024414

Token 1834: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3484698534011841
    2. 'in' → logprob: -1.223469853401184
    3. '<|end|>' → logprob: -11.848469734191895
    4. ' not' → logprob: -12.723469734191895
    5. '[in' → logprob: -12.848469734191895
    6. ')' → logprob: -13.098469734191895
    7. '```' → logprob: -13.348469734191895
    8. '[' → logprob: -13.348469734191895
    9. 'In' → logprob: -13.973469734191895
    10. '<|end|>' → logprob: -14.098469734191895

Token 1835: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.00020354038861114532
    2. ' reach' → logprob: -8.500203132629395
    3. '
' → logprob: -19.37520408630371
    4. 'reachable' → logprob: -19.75020408630371
    5. '   ' → logprob: -21.62520408630371
    6. '[' → logprob: -21.87520408630371
    7. 'read' → logprob: -23.50020408630371
    8. '```' → logprob: -23.75020408630371
    9. 'Reach' → logprob: -24.00020408630371
    10. '       ' → logprob: -24.37520408630371

Token 1836: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.676292231422849e-05
    2. 'a' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.625017166137695
    4. '[
' → logprob: -18.250017166137695
    5. ' [' → logprob: -18.625017166137695
    6. '[' → logprob: -18.750017166137695
    7. '
' → logprob: -18.875017166137695
    8. ' a' → logprob: -19.375017166137695
    9. '```' → logprob: -19.750017166137695
    10. '	a' → logprob: -20.125017166137695

Token 1837: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.05834989249706268
    2. '           ' → logprob: -3.558349847793579
    3. ']:' → logprob: -4.683350086212158
    4. '       ' → logprob: -4.933350086212158
    5. ':
' → logprob: -4.933350086212158
    6. ']' → logprob: -6.683350086212158
    7. '):
' → logprob: -7.183350086212158
    8. ':' → logprob: -7.433350086212158
    9. ']]:
' → logprob: -7.933350086212158
    10. '']:
' → logprob: -8.183349609375

Token 1838: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.253713218029588e-05
    2. '           ' → logprob: -10.250062942504883
    3. '                               ' → logprob: -12.000062942504883
    4. '                   ' → logprob: -12.125062942504883
    5. '                       ' → logprob: -12.625062942504883
    6. '<|end|>' → logprob: -13.250062942504883
    7. '```' → logprob: -13.250062942504883
    8. '	           ' → logprob: -13.500062942504883
    9. '              ' → logprob: -13.875062942504883
    10. 'print' → logprob: -13.875062942504883

Token 1839: ' print' (ID: 2123)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017286349087953568
    2. 'print' (adapté à ' print') → logprob: -4.39228630065918
    3. ' print' → logprob: -5.39228630065918
    4. '                   ' → logprob: -9.01728630065918
    5. '           ' → logprob: -9.89228630065918
    6. '```' → logprob: -11.26728630065918
    7. '			' → logprob: -11.76728630065918
    8. '                       ' → logprob: -12.64228630065918
    9. '	           ' → logprob: -12.64228630065918
    10. '                ' → logprob: -12.89228630065918

Token 1840: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.250001907348633
    3. '('' → logprob: -15.250001907348633
    4. '"' → logprob: -17.000001907348633
    5. '(
' → logprob: -17.500001907348633
    6. ' ("' → logprob: -18.875001907348633
    7. '(("' → logprob: -19.750001907348633
    8. '("("' → logprob: -20.000001907348633
    9. '("""' → logprob: -21.125001907348633
    10. 'YES' → logprob: -21.750001907348633

Token 1841: 'YES' (ID: 31958)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2519642114639282
    2. 'YES' → logprob: -1.5019642114639282
    3. ''' → logprob: -10.376964569091797
    4. '("' → logprob: -13.251964569091797
    5. 'Yes' → logprob: -13.751964569091797
    6. 'NO' → logprob: -15.501964569091797
    7. ' YES' → logprob: -15.876964569091797
    8. '   ' → logprob: -16.126964569091797
    9. ' "' → logprob: -16.376964569091797
    10. 'yes' → logprob: -16.376964569091797

Token 1842: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.04967021197080612
    2. '           ' → logprob: -3.6746702194213867
    3. '")' → logprob: -3.7996702194213867
    4. 'else' → logprob: -7.424670219421387
    5. ')
' → logprob: -9.924670219421387
    6. '               ' → logprob: -10.049670219421387
    7. '       ' → logprob: -11.299670219421387
    8. '"' → logprob: -11.799670219421387
    9. '")
' → logprob: -12.674670219421387
    10. ')' → logprob: -13.049670219421387

Token 1843: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015584280481562018
    2. 'else' → logprob: -6.501558303833008
    3. ' else' → logprob: -10.126558303833008
    4. '               ' → logprob: -11.501558303833008
    5. '       ' → logprob: -13.001558303833008
    6. '		' → logprob: -13.501558303833008
    7. '```' → logprob: -13.751558303833008
    8. '          ' → logprob: -15.126558303833008
    9. '   ' → logprob: -15.251558303833008
    10. '<|end|>' → logprob: -15.501558303833008

Token 1844: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6427131295204163
    2. 'else' (adapté à ' else') → logprob: -0.7677131295204163
    3. ' else' → logprob: -4.6427130699157715
    4. '		' → logprob: -8.39271354675293
    5. '               ' → logprob: -9.39271354675293
    6. '	       ' → logprob: -9.89271354675293
    7. 'elif' → logprob: -11.01771354675293
    8. '	else' → logprob: -11.64271354675293
    9. '<|end|>' → logprob: -11.76771354675293
    10. '```' → logprob: -11.89271354675293

Token 1845: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025969315320253372
    2. '           ' → logprob: -3.7759692668914795
    3. ':
' → logprob: -6.650969505310059
    4. ':' → logprob: -7.025969505310059
    5. '	           ' → logprob: -9.025969505310059
    6. '                   ' → logprob: -9.150969505310059
    7. '{
' → logprob: -9.650969505310059
    8. '{' → logprob: -10.150969505310059
    9. 'print' → logprob: -10.275969505310059
    10. '	       ' → logprob: -10.525969505310059

Token 1846: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16551461815834045
    2. '           ' → logprob: -1.915514588356018
    3. 'print' → logprob: -5.2905144691467285
    4. '                   ' → logprob: -9.790514945983887
    5. '```' → logprob: -10.165514945983887
    6. '	           ' → logprob: -10.415514945983887
    7. '                       ' → logprob: -10.540514945983887
    8. ' print' → logprob: -10.915514945983887
    9. '             ' → logprob: -11.165514945983887
    10. '              ' → logprob: -11.290514945983887

Token 1847: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001137358252890408
    2. ' print' → logprob: -7.0011372566223145
    3. '               ' → logprob: -8.751137733459473
    4. '           ' → logprob: -9.626137733459473
    5. '	print' → logprob: -14.376137733459473
    6. '   ' → logprob: -14.751137733459473
    7. '```' → logprob: -15.126137733459473
    8. '                   ' → logprob: -15.751137733459473
    9. '	           ' → logprob: -16.626136779785156
    10. ' ' → logprob: -17.001136779785156

Token 1848: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.9981420336989686e-05
    2. '(' → logprob: -11.000020027160645
    3. '("("' → logprob: -12.875020027160645
    4. '('' → logprob: -14.750020027160645
    5. '(
' → logprob: -16.000019073486328
    6. '()' → logprob: -16.000019073486328
    7. '("(' → logprob: -17.250019073486328
    8. '"' → logprob: -17.250019073486328
    9. '("")' → logprob: -17.500019073486328
    10. '("""' → logprob: -19.125019073486328

Token 1849: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.011106183752417564
    2. '"' → logprob: -4.511106014251709
    3. '"No' → logprob: -9.761106491088867
    4. '(NO' → logprob: -15.261106491088867
    5. 'No' → logprob: -15.386106491088867
    6. '"N' → logprob: -15.761106491088867
    7. '("' → logprob: -16.136106491088867
    8. ' NO' → logprob: -18.261106491088867
    9. ''' → logprob: -18.511106491088867
    10. 'no' → logprob: -18.761106491088867

Token 1850: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0620475672185421
    2. '")' → logprob: -2.8120474815368652
    3. '<|end|>' → logprob: -10.062047958374023
    4. ')
' → logprob: -10.937047958374023
    5. '')' → logprob: -12.062047958374023
    6. '       ' → logprob: -12.937047958374023
    7. '()' → logprob: -13.187047958374023
    8. '           ' → logprob: -13.312047958374023
    9. '")
' → logprob: -13.437047958374023
    10. '())' → logprob: -13.812047958374023

Token 1851: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06722696125507355
    2. 'main' → logprob: -3.6922268867492676
    3. '
' → logprob: -3.8172268867492676
    4. '<|end|>' → logprob: -4.192226886749268
    5. '```' → logprob: -6.442226886749268
    6. ' if' → logprob: -8.192227363586426
    7. '    
' → logprob: -8.192227363586426
    8. '   ' → logprob: -8.317227363586426
    9. '  
' → logprob: -9.692227363586426
    10. '(main' → logprob: -9.817227363586426

Token 1852: ' __' (ID: 2516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3937250077724457
    2. '__' → logprob: -1.768725037574768
    3. '```' → logprob: -3.2687249183654785
    4. '(' → logprob: -4.0187249183654785
    5. 'main' → logprob: -4.1437249183654785
    6. ' __' → logprob: -4.2687249183654785
    7. ' main' → logprob: -4.2687249183654785
    8. '(main' → logprob: -4.3937249183654785
    9. '_main' → logprob: -5.0187249183654785
    10. '_' → logprob: -5.2687249183654785

Token 1853: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005738697946071625
    2. ' ==' → logprob: -5.505738735198975
    3. ' __' → logprob: -7.255738735198975
    4. '```' → logprob: -7.880738735198975
    5. '==' → logprob: -8.005738258361816
    6. 'name' → logprob: -9.755738258361816
    7. '__":
' → logprob: -10.005738258361816
    8. '__':
' → logprob: -10.755738258361816
    9. '__.__' → logprob: -10.755738258361816
    10. '=="' → logprob: -11.005738258361816

Token 1854: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001269993488676846
    2. '```' → logprob: -7.126269817352295
    3. '__.__' → logprob: -8.376270294189453
    4. '==' → logprob: -9.751270294189453
    5. '__":
' → logprob: -10.126270294189453
    6. '__["' → logprob: -10.876270294189453
    7. '__.' → logprob: -10.876270294189453
    8. '=="' → logprob: -11.001270294189453
    9. '__
' → logprob: -11.376270294189453
    10. '__[' → logprob: -11.376270294189453

Token 1855: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13349108397960663
    2. '==' → logprob: -2.883491039276123
    3. ' ==' → logprob: -2.883491039276123
    4. '=="' → logprob: -5.383491039276123
    5. '```' → logprob: -5.508491039276123
    6. '__":
' → logprob: -6.258491039276123
    7. '=='' → logprob: -7.258491039276123
    8. '__.__' → logprob: -7.508491039276123
    9. '__':
' → logprob: -7.633491039276123
    10. '   ' → logprob: -9.258491516113281

Token 1856: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12699466943740845
    2. ''' → logprob: -2.1269946098327637
    3. '__' → logprob: -9.626995086669922
    4. ' "__' → logprob: -14.376995086669922
    5. ' '__' → logprob: -17.251995086669922
    6. ''"' → logprob: -18.751995086669922
    7. '"<?' → logprob: -18.876995086669922
    8. '   ' → logprob: -19.001995086669922
    9. '("__' → logprob: -19.001995086669922
    10. '"user' → logprob: -19.126995086669922

Token 1857: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2521110475063324
    2. '__' → logprob: -1.5021110773086548
    3. '"' → logprob: -9.752111434936523
    4. ''' → logprob: -10.127111434936523
    5. 'name' → logprob: -10.627111434936523
    6. '___' → logprob: -11.002111434936523
    7. '____' → logprob: -11.252111434936523
    8. '_main' → logprob: -11.377111434936523
    9. '__":
' → logprob: -11.502111434936523
    10. ' main' → logprob: -13.252111434936523

Token 1858: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.010649360716342926
    2. '__' → logprob: -4.88564920425415
    3. '__':
' → logprob: -6.38564920425415
    4. '():
' → logprob: -6.63564920425415
    5. '__()
' → logprob: -10.760649681091309
    6. '__["' → logprob: -12.510649681091309
    7. '()' → logprob: -12.510649681091309
    8. '__.__' → logprob: -13.260649681091309
    9. '__:' → logprob: -13.385649681091309
    10. '__
' → logprob: -13.760649681091309

Token 1859: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.09505772590637207
    2. '   ' → logprob: -3.470057725906372
    3. '	main' → logprob: -3.595057725906372
    4. ' main' → logprob: -3.595057725906372
    5. '    
' → logprob: -6.345057487487793
    6. '_main' → logprob: -7.220057487487793
    7. '
' → logprob: -7.345057487487793
    8. '```' → logprob: -7.470057487487793
    9. '(main' → logprob: -7.845057487487793
    10. '<|end|>' → logprob: -8.345057487487793

Token 1860: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.8219583075260743e-05
    2. ' main' → logprob: -10.500038146972656
    3. '	main' → logprob: -11.625038146972656
    4. '   ' → logprob: -13.625038146972656
    5. '_main' → logprob: -14.875038146972656
    6. '(main' → logprob: -16.000038146972656
    7. 'Main' → logprob: -18.250038146972656
    8. '.main' → logprob: -18.500038146972656
    9. '```' → logprob: -19.125038146972656
    10. 'mainwindow' → logprob: -20.625038146972656

Token 1861: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1859
Tokens correctement prédits (1ère position, stricte): 563
Tokens correctement prédits (1ère position, avec adaptation): 628
Tokens correctement prédits (top 10): 1283
Précision stricte (1ère position): 30.29%
Précision adaptée (1ère position): 33.78%
Précision (top 10): 69.02%
================================================================================
