================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def norm(v):
    l = math.sqrt(v[0]**2 + v[1]**2 + v[2]**2)
    return (v[0]/l, v[1]/l, v[2]/l)

def dot(u,v):
    return u[0]*v[0] + u[1]*v[1] + u[2]*v[2]

def main():
    input=sys.stdin.read().strip().split()
    idx=0
    while True:
        if idx>=len(input): break
        n=int(input[idx]); idx+=1
        if n==0: break
        stars = []
        for _ in range(n):
            sx,sy,sz = float(input[idx]),float(input[idx+1]),float(input[idx+2])
            idx+=3
            stars.append(norm((sx,sy,sz)))
        m = int(input[idx]); idx+=1
        telescopes = []
        for _ in range(m):
            tx,ty,tz,phi = float(input[idx]),float(input[idx+1]),float(input[idx+2]),float(input[idx+3])
            idx+=4
            telescopes.append( (norm((tx,ty,tz)), phi) )
        visible = set()
        for i,s in enumerate(stars):
            for t,phi in telescopes:
                val = dot(s,t)
                # Clamp to avoid floating error out of acos domain
                val = min(1.0,max(-1.0,val))
                ang = math.acos(val)
                if ang < phi:
                    visible.add(i)
                    break
        print(len(visible))

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6992754936218262
    2. '\n' → logprob: -0.8242754936218262
    3. '<|end|>' → logprob: -3.574275493621826
    4. '\' → logprob: -4.199275493621826
    5. 'newline' → logprob: -5.074275493621826
    6. 'import' → logprob: -5.324275493621826
    7. '<|end|>' → logprob: -5.949275493621826
    8. '```' → logprob: -6.574275493621826
    9. '' → logprob: -6.824275493621826
    10. '
' → logprob: -6.949275493621826

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10131704062223434
    2. '\' → logprob: -3.6013169288635254
    3. '\n' → logprob: -3.9763169288635254
    4. 'import' → logprob: -4.351316928863525
    5. '<|end|>' → logprob: -4.601316928863525
    6. '```' → logprob: -4.726316928863525
    7. '
' → logprob: -4.976316928863525
    8. '

' → logprob: -5.476316928863525
    9. '<|end|>' → logprob: -6.601316928863525
    10. '' → logprob: -6.601316928863525

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1420094966888428
    2. '\' → logprob: -1.3920094966888428
    3. 'import' → logprob: -2.1420094966888428
    4. '\n' → logprob: -2.1420094966888428
    5. '```' → logprob: -2.3920094966888428
    6. 'def' → logprob: -3.2670094966888428
    7. '
' → logprob: -4.142009735107422
    8. ',' → logprob: -4.642009735107422
    9. '`' → logprob: -4.892009735107422
    10. '*' → logprob: -4.892009735107422

Token 7: ' norm' (ID: 7882)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023089634254574776
    2. ' calculate' → logprob: -4.273089408874512
    3. ' factorial' → logprob: -5.773089408874512
    4. ' space' → logprob: -6.148089408874512
    5. '_' → logprob: -7.023089408874512
    6. ' math' → logprob: -7.648089408874512
    7. ' compute' → logprob: -7.898089408874512
    8. ' e' → logprob: -8.023089408874512
    9. ' calc' → logprob: -9.023089408874512
    10. ' my' → logprob: -9.023089408874512

Token 8: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5501245856285095
    2. 'al' → logprob: -0.9251245856285095
    3. ' (' → logprob: -4.675124645233154
    4. '_' → logprob: -4.675124645233154
    5. 'a' → logprob: -6.425124645233154
    6. '(a' → logprob: -6.425124645233154
    7. 'ale' → logprob: -6.425124645233154
    8. ' al' → logprob: -6.675124645233154
    9. ')' → logprob: -7.800124645233154
    10. '(x' → logprob: -8.675124168395996

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003177952254191041
    2. ')' → logprob: -6.753178119659424
    3. '[' → logprob: -7.128178119659424
    4. ',' → logprob: -7.128178119659424
    5. '):
' → logprob: -8.503177642822266
    6. ' ):' → logprob: -9.378177642822266
    7. ':' → logprob: -9.878177642822266
    8. '[]):' → logprob: -11.003177642822266
    9. '[i' → logprob: -11.878177642822266
    10. '):

' → logprob: -12.628177642822266

Token 10: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7632336020469666
    2. '(v' → logprob: -1.3882336616516113
    3. '(' → logprob: -2.2632336616516113
    4. ' v' → logprob: -2.6382336616516113
    5. '):' → logprob: -3.2632336616516113
    6. '   ' → logprob: -3.7632336616516113
    7. '[' → logprob: -4.138233661651611
    8. ' (' → logprob: -4.388233661651611
    9. ':' → logprob: -5.388233661651611
    10. ' return' → logprob: -6.013233661651611

Token 11: ' l' (ID: 305)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0154414176940918
    2. ' ' → logprob: -1.2654414176940918
    3. ' v' → logprob: -1.2654414176940918
    4. 'return' → logprob: -3.640441417694092
    5. 'v' → logprob: -4.265441417694092
    6. '   ' → logprob: -4.390441417694092
    7. '[' → logprob: -4.890441417694092
    8. '    ' → logprob: -5.515441417694092
    9. ' [' → logprob: -6.390441417694092
    10. ' sum' → logprob: -6.390441417694092

Token 12: ' =' (ID: 314)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.001093427068553865
    2. 'e' → logprob: -7.12609338760376
    3. 'ength' → logprob: -8.501093864440918
    4. '   ' → logprob: -10.126093864440918
    5. '(en' → logprob: -11.501093864440918
    6. '=' → logprob: -12.001093864440918
    7. '```' → logprob: -12.251093864440918
    8. 'EN' → logprob: -12.376093864440918
    9. '=len' → logprob: -12.626093864440918
    10. ' =' → logprob: -13.251093864440918

Token 13: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.010222763754427433
    2. ' sum' → logprob: -5.135222911834717
    3. ' len' → logprob: -5.760222911834717
    4. ' ' → logprob: -7.135222911834717
    5. 'math' → logprob: -8.135222434997559
    6. 'sum' → logprob: -10.885222434997559
    7. 'len' → logprob: -11.760222434997559
    8. '(math' → logprob: -12.010222434997559
    9. ' max' → logprob: -12.510222434997559
    10. ' v' → logprob: -12.885222434997559

Token 14: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.25202563405036926
    2. '.' → logprob: -1.5020256042480469
    3. '.s' → logprob: -9.752025604248047
    4. '.norm' → logprob: -10.877025604248047
    5. '.dist' → logprob: -11.877025604248047
    6. '.linalg' → logprob: -12.752025604248047
    7. '.Sqrt' → logprob: -12.752025604248047
    8. '.pow' → logprob: -13.627025604248047
    9. '.py' → logprob: -13.877025604248047
    10. '.h' → logprob: -13.877025604248047

Token 15: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45288845896720886
    2. '(v' → logprob: -1.3278884887695312
    3. '(sum' → logprob: -2.3278884887695312
    4. '((' → logprob: -7.202888488769531
    5. 'sum' → logprob: -8.327888488769531
    6. '(x' → logprob: -8.577888488769531
    7. '(
' → logprob: -8.827888488769531
    8. '(s' → logprob: -8.952888488769531
    9. '(len' → logprob: -9.702888488769531
    10. ' (' → logprob: -9.827888488769531

Token 16: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016158436483237892
    2. '[i' → logprob: -9.750161170959473
    3. '(' → logprob: -9.875161170959473
    4. ')' → logprob: -10.875161170959473
    5. ' ' → logprob: -11.875161170959473
    6. '.' → logprob: -12.375161170959473
    7. '_' → logprob: -12.625161170959473
    8. '0' → logprob: -12.625161170959473
    9. 'v' → logprob: -13.000161170959473
    10. ' [' → logprob: -13.250161170959473

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.518582762917504e-05
    2. 'i' → logprob: -9.37508487701416
    3. 'x' → logprob: -16.250085830688477
    4. ' ' → logprob: -16.375085830688477
    5. ' i' → logprob: -17.625085830688477
    6. '1' → logprob: -17.875085830688477
    7. ']' → logprob: -18.000085830688477
    8. '-' → logprob: -18.500085830688477
    9. '
' → logprob: -18.812585830688477
    10. 'k' → logprob: -18.812585830688477

Token 18: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008285358548164368
    2. '**' → logprob: -5.3832855224609375
    3. ']*' → logprob: -5.8832855224609375
    4. ' ]' → logprob: -7.3832855224609375
    5. '*v' → logprob: -8.883285522460938
    6. '*' → logprob: -9.758285522460938
    7. ' **' → logprob: -10.383285522460938
    8. ' *' → logprob: -11.508285522460938
    9. '']' → logprob: -12.008285522460938
    10. 'v' → logprob: -13.133285522460938

Token 19: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.021593358367681503
    2. '*v' → logprob: -4.0215935707092285
    3. '*' → logprob: -5.7715935707092285
    4. ' **' → logprob: -8.14659309387207
    5. ' *' → logprob: -11.02159309387207
    6. ']' → logprob: -11.14659309387207
    7. 'v' → logprob: -14.02159309387207
    8. ']*' → logprob: -14.52159309387207
    9. '*l' → logprob: -15.14659309387207
    10. '```' → logprob: -15.89659309387207

Token 20: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.64970643306151e-05
    2. ' ' → logprob: -9.375086784362793
    3. ' ' → logprob: -15.062586784362793
    4. '```' → logprob: -15.187586784362793
    5. '۲' → logprob: -15.812586784362793
    6. '  ' → logprob: -16.000085830688477
    7. '   ' → logprob: -16.062585830688477
    8. '²' → logprob: -16.375085830688477
    9. '٢' → logprob: -16.500085830688477
    10. '

' → logprob: -17.000085830688477

Token 21: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.386951208114624
    2. '+' → logprob: -1.136951208114624
    3. ' ' → logprob: -9.636951446533203
    4. '<|end|>' → logprob: -12.136951446533203
    5. ')' → logprob: -12.511951446533203
    6. ' +
' → logprob: -13.386951446533203
    7. ')+' → logprob: -14.511951446533203
    8. ',' → logprob: -14.511951446533203
    9. ' ,' → logprob: -14.761951446533203
    10. '0' → logprob: -14.761951446533203

Token 22: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5759404897689819
    2. ' v' → logprob: -0.8259404897689819
    3. '	v' → logprob: -14.575940132141113
    4. ' ' → logprob: -15.450940132141113
    5. ')v' → logprob: -15.450940132141113
    6. '   ' → logprob: -16.20094108581543
    7. ' ' → logprob: -16.57594108581543
    8. '  ' → logprob: -17.82594108581543
    9. '    ' → logprob: -18.20094108581543
    10. '(v' → logprob: -18.57594108581543

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.921253225300461e-05
    2. '1' → logprob: -9.625069618225098
    3. ' [' → logprob: -12.875069618225098
    4. '[
' → logprob: -15.750069618225098
    5. '```' → logprob: -16.12506866455078
    6. '
' → logprob: -16.37506866455078
    7. ' ' → logprob: -16.50006866455078
    8. '\[' → logprob: -17.81256866455078
    9. '{' → logprob: -18.06256866455078
    10. '

' → logprob: -18.25006866455078

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.250005722045898
    3. '[' → logprob: -14.500005722045898
    4. '```' → logprob: -15.250005722045898
    5. '0' → logprob: -16.6250057220459
    6. ']' → logprob: -16.9375057220459
    7. '   ' → logprob: -17.2500057220459
    8. '`' → logprob: -17.3125057220459
    9. '2' → logprob: -17.8750057220459
    10. '-' → logprob: -18.0625057220459

Token 25: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1756367712223437e-05
    2. ' ]' → logprob: -12.125011444091797
    3. '**' → logprob: -12.250011444091797
    4. '2' → logprob: -15.000011444091797
    5. '[' → logprob: -15.375011444091797
    6. '']' → logprob: -15.500011444091797
    7. '0' → logprob: -15.750011444091797
    8. '}' → logprob: -16.500011444091797
    9. ']*' → logprob: -16.500011444091797
    10. '])' → logprob: -16.625011444091797

Token 26: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00020354038861114532
    2. ']' → logprob: -8.875203132629395
    3. '2' → logprob: -10.500203132629395
    4. ')**' → logprob: -11.000203132629395
    5. ' **' → logprob: -11.250203132629395
    6. '**)' → logprob: -12.875203132629395
    7. ' ' → logprob: -13.875203132629395
    8. '*' → logprob: -14.000203132629395
    9. '[' → logprob: -14.125203132629395
    10. ')' → logprob: -14.750203132629395

Token 27: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.375015258789062
    3. '```' → logprob: -14.562515258789062
    4. '**' → logprob: -14.750015258789062
    5. '22' → logprob: -14.750015258789062
    6. '۲' → logprob: -15.000015258789062
    7. '212' → logprob: -15.687515258789062
    8. '24' → logprob: -15.875015258789062
    9. '²' → logprob: -15.937515258789062
    10. '27' → logprob: -16.250015258789062

Token 28: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012749579036608338
    2. ' )' → logprob: -9.250127792358398
    3. '))' → logprob: -11.625127792358398
    4. '   ' → logprob: -12.000127792358398
    5. ')**' → logprob: -12.125127792358398
    6. 'v' → logprob: -13.375127792358398
    7. '**' → logprob: -13.500127792358398
    8. ')v' → logprob: -13.500127792358398
    9. '}' → logprob: -13.750127792358398
    10. ')return' → logprob: -14.000127792358398

Token 29: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.3132631182670593
    2. 'v' → logprob: -1.313263177871704
    3. '	v' → logprob: -14.563262939453125
    4. ' ' → logprob: -14.938262939453125
    5. ')v' → logprob: -15.313262939453125
    6. ')' → logprob: -16.563262939453125
    7. '   ' → logprob: -17.063262939453125
    8. ' ' → logprob: -17.188262939453125
    9. '```' → logprob: -17.313262939453125
    10. '(v' → logprob: -17.313262939453125

Token 30: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -16.0
    3. '[
' → logprob: -16.125
    4. '0' → logprob: -16.125
    5. ' [' → logprob: -16.25
    6. '2' → logprob: -16.875
    7. '\[' → logprob: -16.875
    8. '
' → logprob: -18.625
    9. '3' → logprob: -18.625
    10. '   ' → logprob: -18.75

Token 31: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.250001907348633
    3. '0' → logprob: -15.125001907348633
    4. '```' → logprob: -15.625001907348633
    5. '[' → logprob: -16.250001907348633
    6. '1' → logprob: -16.500001907348633
    7. '۲' → logprob: -17.500001907348633
    8. '   ' → logprob: -17.937501907348633
    9. '``' → logprob: -18.187501907348633
    10. ']' → logprob: -18.250001907348633

Token 32: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.841743303695694e-05
    2. ' ]' → logprob: -9.75009822845459
    3. '**' → logprob: -10.50009822845459
    4. '])' → logprob: -11.62509822845459
    5. '']' → logprob: -13.75009822845459
    6. ')**' → logprob: -14.50009822845459
    7. '[' → logprob: -14.75009822845459
    8. '"]' → logprob: -15.00009822845459
    9. '```' → logprob: -15.37509822845459
    10. '}' → logprob: -15.37509822845459

Token 33: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00026407750556245446
    2. '2' → logprob: -9.125264167785645
    3. ' **' → logprob: -10.000264167785645
    4. ')**' → logprob: -10.125264167785645
    5. '**)' → logprob: -10.250264167785645
    6. ']' → logprob: -10.875264167785645
    7. ')' → logprob: -12.000264167785645
    8. ' ' → logprob: -12.250264167785645
    9. '])' → logprob: -13.625264167785645
    10. ' **)' → logprob: -13.875264167785645

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002004410926019773
    2. '**' → logprob: -8.750200271606445
    3. ' ' → logprob: -10.125200271606445
    4. ' **' → logprob: -14.375200271606445
    5. ')' → logprob: -14.500200271606445
    6. '```' → logprob: -14.875200271606445
    7. ')**' → logprob: -15.875200271606445
    8. '   ' → logprob: -17.000200271606445
    9. '1' → logprob: -17.312700271606445
    10. '*' → logprob: -17.312700271606445

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.451116051815916e-05
    2. ')return' → logprob: -11.250024795532227
    3. '   ' → logprob: -11.875024795532227
    4. ')
' → logprob: -13.125024795532227
    5. ' )' → logprob: -14.000024795532227
    6. ')v' → logprob: -14.125024795532227
    7. ')#' → logprob: -16.125024795532227
    8. '')' → logprob: -16.125024795532227
    9. 'v' → logprob: -16.250024795532227
    10. '))' → logprob: -16.375024795532227

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008478058502078056
    2. ')' → logprob: -5.758478164672852
    3. ' return' → logprob: -6.133478164672852
    4. 'return' → logprob: -6.758478164672852
    5. ' if' → logprob: -7.883478164672852
    6. '    
' → logprob: -8.133478164672852
    7. ' ' → logprob: -8.258478164672852
    8. ':return' → logprob: -8.383478164672852
    9. ':' → logprob: -8.758478164672852
    10. ' )' → logprob: -8.883478164672852

Token 37: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014993625693023205
    2. 'return' (adapté à ' return') → logprob: -4.889993667602539
    3. ' return' → logprob: -5.514993667602539
    4. ' if' → logprob: -6.014993667602539
    5. '    
' → logprob: -8.389993667602539
    6. 'if' → logprob: -8.764993667602539
    7. ' ' → logprob: -8.889993667602539
    8. '    ' → logprob: -9.389993667602539
    9. ')' → logprob: -10.014993667602539
    10. '```' → logprob: -10.139993667602539

Token 38: ' (' (ID: 350)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.32467252016067505
    2. 'v' → logprob: -1.3246724605560303
    3. ' l' → logprob: -4.824672698974609
    4. ' [' → logprob: -6.449672698974609
    5. 'l' → logprob: -7.074672698974609
    6. '[' → logprob: -7.824672698974609
    7. '[v' → logprob: -7.949672698974609
    8. '(v' → logprob: -9.94967269897461
    9. ' (' → logprob: -10.19967269897461
    10. '[l' → logprob: -11.07467269897461

Token 39: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0008052219054661691
    2. ' v' → logprob: -7.125805377960205
    3. ')v' → logprob: -14.750804901123047
    4. '(v' → logprob: -15.750804901123047
    5. '	v' → logprob: -16.000804901123047
    6. ')' → logprob: -16.625804901123047
    7. '   ' → logprob: -16.750804901123047
    8. ' ' → logprob: -18.750804901123047
    9. ' ' → logprob: -18.750804901123047
    10. '?v' → logprob: -18.875804901123047

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.133198283147067e-05
    2. '/' → logprob: -10.875051498413086
    3. ' /' → logprob: -11.000051498413086
    4. ')' → logprob: -11.750051498413086
    5. ' [' → logprob: -12.125051498413086
    6. ' )' → logprob: -13.875051498413086
    7. '0' → logprob: -14.375051498413086
    8. ' ' → logprob: -15.250051498413086
    9. ')[' → logprob: -15.625051498413086
    10. '1' → logprob: -16.500051498413086

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '[' → logprob: -17.750001907348633
    4. '   ' → logprob: -18.000001907348633
    5. 'i' → logprob: -18.375001907348633
    6. '  ' → logprob: -19.125001907348633
    7. '۰' → logprob: -19.312501907348633
    8. '2' → logprob: -19.875001907348633
    9. '1' → logprob: -19.937501907348633
    10. ']' → logprob: -20.187501907348633

Token 42: ']/' (ID: 18500)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.043459732085466385
    2. '/' → logprob: -3.16845965385437
    3. '/l' → logprob: -8.16845989227295
    4. ' ' → logprob: -9.04345989227295
    5. ' )' → logprob: -10.29345989227295
    6. ')' → logprob: -11.04345989227295
    7. ',' → logprob: -12.91845989227295
    8. ' ,' → logprob: -13.41845989227295
    9. ' ' → logprob: -13.79345989227295
    10. ' l' → logprob: -13.79345989227295

Token 43: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0004306692280806601
    2. ' l' → logprob: -7.750430583953857
    3. '	l' → logprob: -19.250431060791016
    4. ' ' → logprob: -22.875431060791016
    5. '_l' → logprob: -23.125431060791016
    6. '   ' → logprob: -23.625431060791016
    7. '(l' → logprob: -23.875431060791016
    8. ' ' → logprob: -24.000431060791016
    9. '```' → logprob: -24.500431060791016
    10. ' л' → logprob: -24.625431060791016

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013512482109945267
    2. ',v' → logprob: -9.62513542175293
    3. ' ,' → logprob: -9.62513542175293
    4. ',
' → logprob: -13.12513542175293
    5. ')' → logprob: -14.75013542175293
    6. '   ' → logprob: -16.00013542175293
    7. '),' → logprob: -16.62513542175293
    8. '`,' → logprob: -17.12513542175293
    9. '',' → logprob: -17.37513542175293
    10. ',

' → logprob: -17.50013542175293

Token 45: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.16032962501049042
    2. 'v' → logprob: -1.9103295803070068
    3. ' ' → logprob: -9.285329818725586
    4. ' ' → logprob: -11.535329818725586
    5. '	v' → logprob: -13.410329818725586
    6. ')v' → logprob: -14.160329818725586
    7. 'space' → logprob: -15.410329818725586
    8. '?v' → logprob: -16.660329818725586
    9. ')' → logprob: -16.785329818725586
    10. ' ‌' → logprob: -17.035329818725586

Token 46: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.5
    3. '```' → logprob: -19.5
    4. ' [' → logprob: -20.125
    5. '[
' → logprob: -20.375
    6. '(' → logprob: -21.0
    7. ')[' → logprob: -21.0
    8. ')' → logprob: -21.25
    9. '0' → logprob: -21.5625
    10. '   ' → logprob: -21.875

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.037835580878891e-05
    2. '0' → logprob: -10.00005054473877
    3. ' ' → logprob: -12.25005054473877
    4. '   ' → logprob: -16.250049591064453
    5. '2' → logprob: -17.250049591064453
    6. '```' → logprob: -17.500049591064453
    7. '  ' → logprob: -17.625049591064453
    8. '[' → logprob: -17.875049591064453
    9. '１' → logprob: -19.312549591064453
    10. '-' → logprob: -19.312549591064453

Token 48: ']/' (ID: 18500)
  Prédit: '/l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/l' → logprob: -0.2018815279006958
    2. '/' → logprob: -1.7018815279006958
    3. ' /' → logprob: -7.701881408691406
    4. ')/' → logprob: -12.076881408691406
    5. '/log' → logprob: -13.201881408691406
    6. '/li' → logprob: -13.451881408691406
    7. '/n' → logprob: -14.201881408691406
    8. '/h' → logprob: -14.201881408691406
    9. '/la' → logprob: -14.451881408691406
    10. '()/' → logprob: -14.576881408691406

Token 49: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.842555426876061e-06
    2. ' l' → logprob: -12.250004768371582
    3. '	l' → logprob: -21.0000057220459
    4. '_l' → logprob: -22.6250057220459
    5. '   ' → logprob: -22.6250057220459
    6. ' ' → logprob: -23.3750057220459
    7. ''l' → logprob: -23.3750057220459
    8. 'л' → logprob: -23.5000057220459
    9. ')' → logprob: -23.6250057220459
    10. '*l' → logprob: -23.6250057220459

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027933192905038595
    2. ' ,' → logprob: -8.625279426574707
    3. ',v' → logprob: -9.500279426574707
    4. ')' → logprob: -10.750279426574707
    5. '   ' → logprob: -13.125279426574707
    6. ',
' → logprob: -14.500279426574707
    7. '),' → logprob: -15.250279426574707
    8. 'v' → logprob: -15.375279426574707
    9. ',l' → logprob: -16.25027847290039
    10. ' ' → logprob: -17.00027847290039

Token 51: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.03804459050297737
    2. 'v' → logprob: -3.2880446910858154
    3. ' ' → logprob: -13.038044929504395
    4. ' ' → logprob: -14.663044929504395
    5. ')' → logprob: -15.663044929504395
    6. ')v' → logprob: -16.038043975830078
    7. '	v' → logprob: -16.038043975830078
    8. '0' → logprob: -17.663043975830078
    9. '​' → logprob: -17.788043975830078
    10. '```' → logprob: -17.788043975830078

Token 52: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -16.625
    3. '[
' → logprob: -19.125
    4. '```' → logprob: -19.625
    5. '/' → logprob: -19.75
    6. '
' → logprob: -21.125
    7. '	' → logprob: -21.375
    8. '(' → logprob: -21.5
    9. '   ' → logprob: -21.75
    10. ' [' → logprob: -21.75

Token 53: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '0' → logprob: -19.625
    4. '```' → logprob: -20.0
    5. '۲' → logprob: -20.375
    6. '２' → logprob: -20.75
    7. '   ' → logprob: -20.75
    8. '3' → logprob: -21.875
    9. '[' → logprob: -21.875
    10. '1' → logprob: -22.375

Token 54: ']/' (ID: 18500)
  Prédit: ']/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']/' → logprob: -0.0035931828897446394
    2. ']' → logprob: -5.8785929679870605
    3. '])' → logprob: -7.8785929679870605
    4. ')/' → logprob: -8.253593444824219
    5. '])/' → logprob: -9.503593444824219
    6. '/' → logprob: -9.628593444824219
    7. ')' → logprob: -13.253593444824219
    8. '/l' → logprob: -13.378593444824219
    9. ' ]' → logprob: -13.378593444824219
    10. '/]' → logprob: -13.878593444824219

Token 55: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.704273118884885e-07
    2. ' l' → logprob: -14.375000953674316
    3. ')' → logprob: -20.875
    4. '	l' → logprob: -21.0
    5. ''l' → logprob: -21.875
    6. '```' → logprob: -21.875
    7. 'л' → logprob: -22.75
    8. '_l' → logprob: -22.75
    9. '   ' → logprob: -23.0
    10. '`' → logprob: -23.75

Token 56: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -16.75
    4. '}' → logprob: -17.625
    5. '   ' → logprob: -17.75
    6. '))' → logprob: -18.25
    7. '')' → logprob: -18.625
    8. ')...' → logprob: -18.75
    9. ')}' → logprob: -19.0
    10. ')`' → logprob: -19.125

Token 57: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04597630351781845
    2. 'd' → logprob: -3.545976400375366
    3. '
' → logprob: -4.920976161956787
    4. '#' → logprob: -6.045976161956787
    5. '\' → logprob: -6.170976161956787
    6. 'n' → logprob: -6.545976161956787
    7. '```' → logprob: -6.545976161956787
    8. '(' → logprob: -8.420976638793945
    9. '\n' → logprob: -8.670976638793945
    10. ' 
' → logprob: -8.795976638793945

Token 58: ' dot' (ID: 16579)
  Prédit: ' dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dot' → logprob: -0.7144521474838257
    2. ' ' → logprob: -1.8394521474838257
    3. ' cross' → logprob: -2.3394522666931152
    4. ' add' → logprob: -2.4644522666931152
    5. ' space' → logprob: -2.5894522666931152
    6. ' vector' → logprob: -3.2144522666931152
    7. ' normalize' → logprob: -4.589452266693115
    8. ' multiply' → logprob: -4.589452266693115
    9. ' plane' → logprob: -4.964452266693115
    10. ' calculate' → logprob: -5.089452266693115

Token 59: '(u' (ID: 17057)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001894841087050736
    2. '<|end|>' → logprob: -6.376894950866699
    3. ' (' → logprob: -9.3768949508667
    4. '<|end|>' → logprob: -10.3768949508667
    5. '(user' → logprob: -10.7518949508667
    6. '(v' → logprob: -12.2518949508667
    7. '(space' → logprob: -12.6268949508667
    8. '("("' → logprob: -12.8768949508667
    9. '('' → logprob: -13.0018949508667
    10. ')' → logprob: -13.0018949508667

Token 60: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031248347833752632
    2. ' ,' → logprob: -4.281248569488525
    3. '(u' → logprob: -5.281248569488525
    4. '(' → logprob: -5.406248569488525
    5. ',u' → logprob: -5.406248569488525
    6. ')' → logprob: -6.031248569488525
    7. '<|end|>' → logprob: -8.656248092651367
    8. ' (' → logprob: -9.156248092651367
    9. ' )' → logprob: -9.406248092651367
    10. ',v' → logprob: -10.406248092651367

Token 61: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03820420429110527
    2. '):' → logprob: -3.2882041931152344
    3. ',' → logprob: -9.538204193115234
    4. '),' → logprob: -10.038204193115234
    5. ')>' → logprob: -11.413204193115234
    6. ')=' → logprob: -11.538204193115234
    7. '):
' → logprob: -11.913204193115234
    8. ' )' → logprob: -12.913204193115234
    9. ')">' → logprob: -12.913204193115234
    10. ')v' → logprob: -13.038204193115234

Token 62: '   ' (ID: 271)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.7976284027099609
    2. '   ' → logprob: -1.172628402709961
    3. '(' → logprob: -2.297628402709961
    4. ' u' → logprob: -2.547628402709961
    5. 'u' → logprob: -3.172628402709961
    6. '    ' → logprob: -5.672628402709961
    7. ')' → logprob: -5.672628402709961
    8. ' (' → logprob: -5.672628402709961
    9. ' ' → logprob: -5.922628402709961
    10. ':' → logprob: -5.922628402709961

Token 63: ' return' (ID: 622)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5920430421829224
    2. ' u' → logprob: -0.8420430421829224
    3. '   ' → logprob: -4.717042922973633
    4. ' return' → logprob: -5.217042922973633
    5. 'return' (adapté à ' return') → logprob: -6.592042922973633
    6. '(u' → logprob: -8.592042922973633
    7. ' sum' → logprob: -11.092042922973633
    8. '    ' → logprob: -11.467042922973633
    9. '	u' → logprob: -11.717042922973633
    10. 'sum' → logprob: -11.967042922973633

Token 64: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.10023200511932373
    2. ' u' → logprob: -2.3502321243286133
    3. '(u' → logprob: -10.850232124328613
    4. ' sum' → logprob: -13.225232124328613
    5. 'sum' → logprob: -13.225232124328613
    6. ' ' → logprob: -13.600232124328613
    7. '	u' → logprob: -14.850232124328613
    8. ' (' → logprob: -15.350232124328613
    9. '   ' → logprob: -15.975232124328613
    10. ' ' → logprob: -16.350231170654297

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.107425062713446e-06
    2. ' [' → logprob: -12.000006675720215
    3. '0' → logprob: -14.500006675720215
    4. '[
' → logprob: -15.750006675720215
    5. ' ' → logprob: -16.87500762939453
    6. '(' → logprob: -16.87500762939453
    7. '.' → logprob: -17.12500762939453
    8. '1' → logprob: -17.50000762939453
    9. ')' → logprob: -18.00000762939453
    10. '```' → logprob: -18.62500762939453

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '۰' → logprob: -19.875
    4. '０' → logprob: -20.375
    5. 'i' → logprob: -20.9375
    6. 'index' → logprob: -21.0625
    7. '1' → logprob: -21.125
    8. '   ' → logprob: -21.3125
    9. '[' → logprob: -21.4375
    10. ']' → logprob: -22.0

Token 67: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.043637651950120926
    2. ']' → logprob: -3.543637752532959
    3. '*' → logprob: -4.293637752532959
    4. ' ]' → logprob: -9.4186372756958
    5. '*u' → logprob: -10.5436372756958
    6. ' *' → logprob: -10.7936372756958
    7. '*v' → logprob: -12.6686372756958
    8. ')*' → logprob: -13.2936372756958
    9. ' ' → logprob: -13.9186372756958
    10. '```' → logprob: -14.6686372756958

Token 68: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.339278580620885e-06
    2. ' v' → logprob: -13.000001907348633
    3. ')v' → logprob: -18.750001907348633
    4. '	v' → logprob: -19.000001907348633
    5. '<|end|>' → logprob: -20.750001907348633
    6. 'u' → logprob: -21.000001907348633
    7. ' ' → logprob: -22.000001907348633
    8. '1' → logprob: -22.375001907348633
    9. 'vj' → logprob: -22.750001907348633
    10. '(v' → logprob: -23.250001907348633

Token 69: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00038288687937892973
    2. '0' → logprob: -7.875382900238037
    3. '(' → logprob: -14.000382423400879
    4. ' [' → logprob: -14.000382423400879
    5. '```' → logprob: -14.375382423400879
    6. ' ' → logprob: -14.875382423400879
    7. '[
' → logprob: -15.875382423400879
    8. '][' → logprob: -17.000383377075195
    9. '{' → logprob: -17.625383377075195
    10. '1' → logprob: -18.625383377075195

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '۰' → logprob: -20.25
    4. '1' → logprob: -21.0
    5. '[' → logprob: -21.25
    6. '０' → logprob: -21.75
    7. '   ' → logprob: -22.0
    8. '```' → logprob: -22.3125
    9. '٠' → logprob: -23.0
    10. '০' → logprob: -23.1875

Token 71: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5238357782363892
    2. '+' → logprob: -0.8988357782363892
    3. ')' → logprob: -7.5238356590271
    4. ']' → logprob: -9.773836135864258
    5. ' ' → logprob: -10.523836135864258
    6. '<|end|>' → logprob: -10.773836135864258
    7. ' +
' → logprob: -11.273836135864258
    8. ')+' → logprob: -11.398836135864258
    9. '}' → logprob: -11.523836135864258
    10. ' ]' → logprob: -11.648836135864258

Token 72: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759426355361938
    2. ' +' → logprob: -0.8259426355361938
    3. ' +
' → logprob: -13.200942993164062
    4. '+
' → logprob: -14.575942993164062
    5. ' plus' → logprob: -15.700942993164062
    6. ' ' → logprob: -15.700942993164062
    7. '<|end|>' → logprob: -16.075942993164062
    8. '+[' → logprob: -16.950942993164062
    9. ' +
' → logprob: -17.200942993164062
    10. ' +

' → logprob: -17.200942993164062

Token 73: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.06196869537234306
    2. 'u' → logprob: -2.8119688034057617
    3. ' v' → logprob: -14.936968803405762
    4. 'v' → logprob: -15.311968803405762
    5. ' ' → logprob: -15.436968803405762
    6. '	u' → logprob: -15.561968803405762
    7. ' ' → logprob: -15.936968803405762
    8. '(u' → logprob: -18.311967849731445
    9. '​' → logprob: -18.936967849731445
    10. '[u' → logprob: -19.561967849731445

Token 74: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -16.375
    3. '[
' → logprob: -18.5
    4. '1' → logprob: -18.875
    5. '```' → logprob: -19.375
    6. ' ' → logprob: -19.625
    7. '   ' → logprob: -20.5
    8. '  ' → logprob: -21.625
    9. 'import' → logprob: -21.75
    10. 'user' → logprob: -21.75

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008829060941934586
    2. '[' → logprob: -4.758829116821289
    3. '0' → logprob: -8.508829116821289
    4. ' ' → logprob: -11.383829116821289
    5. '```' → logprob: -15.133829116821289
    6. '(' → logprob: -15.633829116821289
    7. 'user' → logprob: -15.633829116821289
    8. ' [' → logprob: -15.758829116821289
    9. ')' → logprob: -16.00882911682129
    10. '<|end|>' → logprob: -16.13382911682129

Token 76: ']*' (ID: 18579)
  Prédit: '*v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*v' → logprob: -0.6614022850990295
    2. ']*' → logprob: -0.9114022850990295
    3. '*' → logprob: -2.5364022254943848
    4. '*u' → logprob: -6.161402225494385
    5. ']' → logprob: -7.786402225494385
    6. '[' → logprob: -8.786402702331543
    7. '*[' → logprob: -9.911402702331543
    8. ')*' → logprob: -12.161402702331543
    9. 'v' → logprob: -12.411402702331543
    10. '*f' → logprob: -12.536402702331543

Token 77: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1472419600977446e-06
    2. ' v' → logprob: -13.750000953674316
    3. 'u' → logprob: -17.125001907348633
    4. '<|end|>' → logprob: -18.125001907348633
    5. ')v' → logprob: -19.000001907348633
    6. '	v' → logprob: -20.250001907348633
    7. '[' → logprob: -21.375001907348633
    8. '*v' → logprob: -21.375001907348633
    9. ' ' → logprob: -21.625001907348633
    10. '[v' → logprob: -22.250001907348633

Token 78: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.23917081207037e-05
    2. '1' → logprob: -10.250041961669922
    3. '][' → logprob: -12.625041961669922
    4. ']' → logprob: -13.625041961669922
    5. '[
' → logprob: -13.875041961669922
    6. 'v' → logprob: -14.125041961669922
    7. '```' → logprob: -15.125041961669922
    8. '}[' → logprob: -17.000041961669922
    9. '*' → logprob: -17.125041961669922
    10. 'u' → logprob: -17.250041961669922

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '0' → logprob: -12.625004768371582
    3. ']' → logprob: -13.625004768371582
    4. ' ' → logprob: -14.625004768371582
    5. '[' → logprob: -15.875004768371582
    6. '```' → logprob: -18.5000057220459
    7. 'v' → logprob: -18.8750057220459
    8. '   ' → logprob: -19.2500057220459
    9. ']*' → logprob: -19.3750057220459
    10. '-' → logprob: -19.6250057220459

Token 80: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9426661133766174
    2. ']' → logprob: -1.1926660537719727
    3. ' +' → logprob: -1.1926660537719727
    4. ']+' → logprob: -6.317666053771973
    5. ')' → logprob: -6.442666053771973
    6. ' ]' → logprob: -8.817666053771973
    7. ')+' → logprob: -11.317666053771973
    8. '[' → logprob: -11.942666053771973
    9. '+]' → logprob: -12.317666053771973
    10. '<|end|>' → logprob: -12.317666053771973

Token 81: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3183487355709076
    2. '+' → logprob: -1.31834876537323
    3. '*' → logprob: -5.8183488845825195
    4. '*v' → logprob: -6.8183488845825195
    5. '*u' → logprob: -7.3183488845825195
    6. ' *' → logprob: -8.56834888458252
    7. 'v' → logprob: -9.81834888458252
    8. ' ' → logprob: -10.31834888458252
    9. '[' → logprob: -10.69334888458252
    10. 'u' → logprob: -10.81834888458252

Token 82: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.49381503462791443
    2. 'u' → logprob: -1.4938150644302368
    3. ' v' → logprob: -2.4938149452209473
    4. 'v' → logprob: -2.4938149452209473
    5. ' ' → logprob: -13.618815422058105
    6. ' uv' → logprob: -14.368815422058105
    7. 'uv' → logprob: -15.118815422058105
    8. '	u' → logprob: -15.743815422058105
    9. ' ' → logprob: -15.868815422058105
    10. 'user' → logprob: -15.993815422058105

Token 83: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '[
' → logprob: -16.25
    3. '```' → logprob: -16.75
    4. ' [' → logprob: -17.125
    5. '][' → logprob: -17.25
    6. '2' → logprob: -17.5
    7. '0' → logprob: -17.625
    8. '>[' → logprob: -18.5
    9. '   ' → logprob: -18.5
    10. '1' → logprob: -18.625

Token 84: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.309382373117842e-05
    2. '2' → logprob: -11.250033378601074
    3. ' ' → logprob: -11.875033378601074
    4. '0' → logprob: -12.125033378601074
    5. ']' → logprob: -12.625033378601074
    6. '[' → logprob: -12.750033378601074
    7. '<|end|>' → logprob: -14.125033378601074
    8. '```' → logprob: -15.000033378601074
    9. '   ' → logprob: -15.625033378601074
    10. '-' → logprob: -16.875032424926758

Token 85: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.018174059689044952
    2. ']' → logprob: -4.018174171447754
    3. '*' → logprob: -11.393174171447754
    4. '*v' → logprob: -11.643174171447754
    5. '[' → logprob: -13.018174171447754
    6. ' ]' → logprob: -14.393174171447754
    7. 'v' → logprob: -15.143174171447754
    8. '][' → logprob: -15.393174171447754
    9. '"]' → logprob: -16.143173217773438
    10. ')*' → logprob: -16.143173217773438

Token 86: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.2664456789934775e-06
    2. ' v' → logprob: -13.625000953674316
    3. ')v' → logprob: -18.375001907348633
    4. '*v' → logprob: -18.500001907348633
    5. '	v' → logprob: -19.250001907348633
    6. 'u' → logprob: -20.125001907348633
    7. '$v' → logprob: -21.500001907348633
    8. '?v' → logprob: -21.625001907348633
    9. 'vq' → logprob: -22.125001907348633
    10. 'vz' → logprob: -22.125001907348633

Token 87: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0802738870552275e-05
    2. '][' → logprob: -12.62501049041748
    3. '0' → logprob: -12.87501049041748
    4. '[
' → logprob: -13.62501049041748
    5. '3' → logprob: -13.75001049041748
    6. ']' → logprob: -14.00001049041748
    7. '```' → logprob: -14.75001049041748
    8. '2' → logprob: -15.12501049041748
    9. '1' → logprob: -15.12501049041748
    10. '   ' → logprob: -15.50001049041748

Token 88: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.947715832618997e-05
    2. '0' → logprob: -10.000089645385742
    3. ']' → logprob: -10.500089645385742
    4. ' ' → logprob: -11.375089645385742
    5. '1' → logprob: -13.000089645385742
    6. '[' → logprob: -13.500089645385742
    7. '```' → logprob: -14.500089645385742
    8. '  ' → logprob: -15.625089645385742
    9. '   ' → logprob: -15.750089645385742
    10. '])' → logprob: -16.000089645385742

Token 89: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.911954500945285e-05
    2. '}' → logprob: -9.375088691711426
    3. '<|end|>' → logprob: -13.250088691711426
    4. ')
' → logprob: -13.500088691711426
    5. ')}' → logprob: -14.750088691711426
    6. ' )' → logprob: -15.125088691711426
    7. ']' → logprob: -15.250088691711426
    8. ')return' → logprob: -16.625089645385742
    9. '<|end|>' → logprob: -17.125089645385742
    10. '),' → logprob: -17.625089645385742

Token 90: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.034149397164583206
    2. '
' → logprob: -3.409149408340454
    3. '

' → logprob: -8.284149169921875
    4. '```' → logprob: -9.159149169921875
    5. ' def' → logprob: -10.409149169921875
    6. '\' → logprob: -10.659149169921875
    7. '#' → logprob: -10.659149169921875
    8. '  
' → logprob: -11.284149169921875
    9. '
' → logprob: -11.409149169921875
    10. '<|end|>' → logprob: -11.534149169921875

Token 91: ' main' (ID: 2758)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.0018021537689492106
    2. 'cross' → logprob: -6.62680196762085
    3. ' ' → logprob: -8.751802444458008
    4. ' main' → logprob: -9.126802444458008
    5. ' add' → logprob: -9.751802444458008
    6. ' c' → logprob: -9.751802444458008
    7. ' cr' → logprob: -10.376802444458008
    8. ' sub' → logprob: -11.376802444458008
    9. ' vector' → logprob: -12.001802444458008
    10. 'c' → logprob: -12.001802444458008

Token 92: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.12834447622299194
    2. '(' → logprob: -2.1283445358276367
    3. '()' → logprob: -6.628344535827637
    4. ' ():' → logprob: -9.878344535827637
    5. '()(' → logprob: -11.503344535827637
    6. '(args' → logprob: -12.253344535827637
    7. ' (' → logprob: -12.753344535827637
    8. '():
' → logprob: -12.878344535827637
    9. '(:' → logprob: -13.003344535827637
    10. ':' → logprob: -13.003344535827637

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01073899120092392
    2. '    ' → logprob: -4.760738849639893
    3. '    
' → logprob: -7.510738849639893
    4. 'n' → logprob: -8.38573932647705
    5. ' n' → logprob: -8.76073932647705
    6. ' 
' → logprob: -8.88573932647705
    7. ' ' → logprob: -9.01073932647705
    8. ' import' → logprob: -9.01073932647705
    9. ' readline' → logprob: -9.13573932647705
    10. ' i' → logprob: -9.88573932647705

Token 94: ' input' (ID: 3422)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8502792119979858
    2. 'n' → logprob: -1.8502792119979858
    3. 'vec' → logprob: -1.9752792119979858
    4. '   ' → logprob: -2.7252793312072754
    5. ' v' → logprob: -3.2252793312072754
    6. ' n' → logprob: -3.6002793312072754
    7. 'print' → logprob: -3.6002793312072754
    8. 'vector' → logprob: -4.475279331207275
    9. 'while' → logprob: -4.600279331207275
    10. 'if' → logprob: -4.600279331207275

Token 95: '=sys' (ID: 149200)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03963218629360199
    2. '_line' → logprob: -3.7896320819854736
    3. '_data' → logprob: -5.039632320404053
    4. '_' → logprob: -5.289632320404053
    5. '(' → logprob: -6.164632320404053
    6. '_lines' → logprob: -7.539632320404053
    7. '().' → logprob: -7.664632320404053
    8. ' =' → logprob: -7.914632320404053
    9. 's' → logprob: -8.039631843566895
    10. '_text' → logprob: -9.039631843566895

Token 96: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2575223743915558
    2. '.stdin' → logprob: -1.5075223445892334
    3. '.argv' → logprob: -5.6325225830078125
    4. '.readline' → logprob: -7.1325225830078125
    5. ' .' → logprob: -7.2575225830078125
    6. '().' → logprob: -8.507522583007812
    7. '.input' → logprob: -9.257522583007812
    8. '.stdout' → logprob: -9.382522583007812
    9. '.std' → logprob: -10.632522583007812
    10. '.read' → logprob: -11.382522583007812

Token 97: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.009869529865682125
    2. '.read' → logprob: -4.759869575500488
    3. '.' → logprob: -6.884869575500488
    4. '.readlines' → logprob: -8.634869575500488
    5. 'read' → logprob: -10.009869575500488
    6. '_read' → logprob: -12.384869575500488
    7. ' .' → logprob: -13.634869575500488
    8. '.buffer' → logprob: -14.134869575500488
    9. '.Read' → logprob: -14.134869575500488
    10. '.write' → logprob: -15.009869575500488

Token 98: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0053994073532521725
    2. '().' → logprob: -5.255399227142334
    3. '(' → logprob: -9.505399703979492
    4. ' ()' → logprob: -9.630399703979492
    5. '()
' → logprob: -12.255399703979492
    6. '()

' → logprob: -12.630399703979492
    7. '())' → logprob: -12.630399703979492
    8. '（）' → logprob: -12.630399703979492
    9. '()\' → logprob: -12.880399703979492
    10. '()`' → logprob: -13.130399703979492

Token 99: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.006723540835082531
    2. 'split' → logprob: -5.006723403930664
    3. 'rstrip' → logprob: -11.756723403930664
    4. ' strip' → logprob: -16.256723403930664
    5. 'replace' → logprob: -16.506723403930664
    6. 'read' → logprob: -17.006723403930664
    7. 'decode' → logprob: -17.006723403930664
    8. ' split' → logprob: -19.381723403930664
    9. '(strip' → logprob: -21.256723403930664
    10. 's' → logprob: -21.381723403930664

Token 100: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00218392675742507
    2. '(' → logprob: -6.62718391418457
    3. '().' → logprob: -7.12718391418457
    4. '('' → logprob: -11.25218391418457
    5. '()
' → logprob: -12.25218391418457
    6. ' ()' → logprob: -12.50218391418457
    7. '()`' → logprob: -12.62718391418457
    8. '()\' → logprob: -12.62718391418457
    9. '()"' → logprob: -12.87718391418457
    10. '("' → logprob: -12.87718391418457

Token 101: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -14.500000953674316
    3. '(split' → logprob: -17.75
    4. 'strip' → logprob: -18.0
    5. 'rstrip' → logprob: -19.625
    6. 'spl' → logprob: -20.125
    7. '```' → logprob: -20.5
    8. ' ' → logprob: -20.625
    9. '   ' → logprob: -20.625
    10. 's' → logprob: -21.125

Token 102: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.10317163914442062
    2. '()' → logprob: -2.7281715869903564
    3. '(' → logprob: -3.4781715869903564
    4. '("("' → logprob: -6.4781718254089355
    5. '("' → logprob: -8.853171348571777
    6. '('\' → logprob: -9.353171348571777
    7. 'lines' → logprob: -10.603171348571777
    8. ''' → logprob: -12.103171348571777
    9. '('.')' → logprob: -12.103171348571777
    10. '(`' → logprob: -12.603171348571777

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41336894035339355
    2. 'n' → logprob: -1.6633689403533936
    3. ' n' → logprob: -2.0383689403533936
    4. 'x' → logprob: -4.913369178771973
    5. ' x' → logprob: -4.913369178771973
    6. '    ' → logprob: -6.788369178771973
    7. '    
' → logprob: -7.163369178771973
    8. ' i' → logprob: -7.913369178771973
    9. '  ' → logprob: -8.413369178771973
    10. '
' → logprob: -8.663369178771973

Token 104: ' idx' (ID: 14016)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14861418306827545
    2. ' n' → logprob: -2.1486141681671143
    3. 'x' → logprob: -4.648614406585693
    4. '   ' → logprob: -5.023614406585693
    5. 'N' → logprob: -6.148614406585693
    6. 'a' → logprob: -6.523614406585693
    7. ' x' → logprob: -7.023614406585693
    8. ' N' → logprob: -8.398613929748535
    9. ' a' → logprob: -8.773613929748535
    10. 'nx' → logprob: -9.898613929748535

Token 105: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20146869122982025
    2. '=' → logprob: -1.7014687061309814
    3. ' +=' → logprob: -10.326468467712402
    4. ' ' → logprob: -10.826468467712402
    5. '+=' → logprob: -13.451468467712402
    6. ' =)' → logprob: -14.201468467712402
    7. ' =
' → logprob: -15.951468467712402
    8. ')' → logprob: -16.07646942138672
    9. '  ' → logprob: -16.20146942138672
    10. '=int' → logprob: -16.45146942138672

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.500009536743164
    4. '1' → logprob: -20.000009536743164
    5. '  ' → logprob: -20.375009536743164
    6. '۰' → logprob: -21.875009536743164
    7. '```' → logprob: -22.000009536743164
    8. '    ' → logprob: -22.250009536743164
    9. '=' → logprob: -22.625009536743164
    10. '０' → logprob: -23.062509536743164

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10826899856328964
    2. '
' → logprob: -2.608268976211548
    3. '    
' → logprob: -3.983268976211548
    4. 'n' → logprob: -5.733269214630127
    5. ',' → logprob: -5.983269214630127
    6. 'x' → logprob: -7.233269214630127
    7. '<|end|>' → logprob: -7.233269214630127
    8. '    ' → logprob: -7.858269214630127
    9. ')' → logprob: -7.983269214630127
    10. '  
' → logprob: -8.358268737792969

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04435734823346138
    2. '
' → logprob: -4.1693572998046875
    3. '    
' → logprob: -4.5443572998046875
    4. 'n' → logprob: -4.6693572998046875
    5. ' n' → logprob: -5.9193572998046875
    6. 'x' → logprob: -6.0443572998046875
    7. ' x' → logprob: -7.7943572998046875
    8. 'num' → logprob: -7.9193572998046875
    9. '    ' → logprob: -8.419357299804688
    10. 'v' → logprob: -8.669357299804688

Token 109: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8311033844947815
    2. ' n' → logprob: -0.9561033844947815
    3. '   ' → logprob: -1.9561033248901367
    4. 'x' → logprob: -5.081103324890137
    5. ' x' → logprob: -5.081103324890137
    6. 'N' → logprob: -5.331103324890137
    7. ' N' → logprob: -5.706103324890137
    8. ' t' → logprob: -5.831103324890137
    9. ' while' → logprob: -6.081103324890137
    10. 't' → logprob: -6.081103324890137

Token 110: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -9.472211968386546e-05
    2. 'idx' → logprob: -9.625094413757324
    3. ' True' → logprob: -10.750094413757324
    4. '   ' → logprob: -12.875094413757324
    5. '(idx' → logprob: -13.625094413757324
    6. '	idx' → logprob: -13.750094413757324
    7. ' int' → logprob: -14.250094413757324
    8. ' ' → logprob: -14.375094413757324
    9. ' len' → logprob: -14.750094413757324
    10. '    ' → logprob: -15.625094413757324

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010002978378906846
    2. ':
' → logprob: -7.37600040435791
    3. '   ' → logprob: -8.25100040435791
    4. '       ' → logprob: -9.37600040435791
    5. '):' → logprob: -11.00100040435791
    6. ' and' → logprob: -12.87600040435791
    7. ',' → logprob: -13.12600040435791
    8. '<|end|>' → logprob: -13.12600040435791
    9. '():' → logprob: -14.25100040435791
    10. ' :' → logprob: -14.37600040435791

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07709556818008423
    2. '   ' → logprob: -2.7020955085754395
    3. '    ' → logprob: -5.4520955085754395
    4. ' if' → logprob: -6.7020955085754395
    5. '<|end|>' → logprob: -7.2020955085754395
    6. ' ' → logprob: -8.077095985412598
    7. '     ' → logprob: -9.202095985412598
    8. '      ' → logprob: -9.327095985412598
    9. '    
' → logprob: -9.327095985412598
    10. '        
' → logprob: -9.577095985412598

Token 113: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1866735219955444
    2. '   ' → logprob: -1.3116735219955444
    3. 'if' (adapté à ' if') → logprob: -1.4366735219955444
    4. 'n' → logprob: -2.436673641204834
    5. ' n' → logprob: -2.436673641204834
    6. '       ' → logprob: -5.186673641204834
    7. '    ' → logprob: -5.936673641204834
    8. 'i' → logprob: -6.936673641204834
    9. ' ' → logprob: -6.936673641204834
    10. ' try' → logprob: -7.186673641204834

Token 114: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0009156247251667082
    2. 'idx' → logprob: -7.00091552734375
    3. '	idx' → logprob: -12.50091552734375
    4. '   ' → logprob: -15.50091552734375
    5. '(idx' → logprob: -15.50091552734375
    6. ' index' → logprob: -18.00091552734375
    7. '[idx' → logprob: -18.12591552734375
    8. ' ' → logprob: -18.37591552734375
    9. '_idx' → logprob: -18.50091552734375
    10. '.idx' → logprob: -18.62591552734375

Token 115: '>=' (ID: 20974)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.1536921113729477
    2. '>=' → logprob: -2.0286920070648193
    3. '+' → logprob: -4.653692245483398
    4. ' ' → logprob: -6.653692245483398
    5. ' +' → logprob: -9.278692245483398
    6. ' >' → logprob: -10.653692245483398
    7. '>' → logprob: -11.778692245483398
    8. '   ' → logprob: -12.153692245483398
    9. '==' → logprob: -12.653692245483398
    10. ']>=' → logprob: -12.653692245483398

Token 116: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.165027217415627e-05
    2. ' len' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.75002098083496
    4. '       ' → logprob: -18.87502098083496
    5. '(len' → logprob: -18.87502098083496
    6. '	len' → logprob: -19.12502098083496
    7. '=len' → logprob: -19.25002098083496
    8. '<len' → logprob: -20.50002098083496
    9. ',len' → logprob: -21.25002098083496
    10. '           ' → logprob: -21.37502098083496

Token 117: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.583550642360933e-05
    2. 'input' → logprob: -10.250036239624023
    3. '(' → logprob: -15.375036239624023
    4. ' input' → logprob: -15.875036239624023
    5. ' (' → logprob: -16.875036239624023
    6. '=input' → logprob: -17.250036239624023
    7. ',input' → logprob: -17.375036239624023
    8. '<input' → logprob: -19.500036239624023
    9. '_input' → logprob: -20.500036239624023
    10. '	input' → logprob: -20.500036239624023

Token 118: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12713073194026947
    2. ')' → logprob: -2.5021307468414307
    3. '):
' → logprob: -3.8771307468414307
    4. ' or' → logprob: -4.377130508422852
    5. ' ):' → logprob: -5.627130508422852
    6. 'or' → logprob: -8.752130508422852
    7. ' )' → logprob: -8.752130508422852
    8. '   ' → logprob: -9.002130508422852
    9. ' ):
' → logprob: -9.127130508422852
    10. ':' → logprob: -10.752130508422852

Token 119: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2526136040687561
    2. '       ' → logprob: -1.5026135444641113
    3. 'break' → logprob: -7.877613544464111
    4. ' break' → logprob: -8.37761402130127
    5. '   ' → logprob: -10.37761402130127
    6. 'return' → logprob: -10.62761402130127
    7. ' return' → logprob: -12.00261402130127
    8. '```' → logprob: -12.50261402130127
    9. '	break' → logprob: -13.00261402130127
    10. '               ' → logprob: -13.12761402130127

Token 120: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4132419526576996
    2. '
' → logprob: -1.413241982460022
    3. '        
' → logprob: -2.4132418632507324
    4. '    
' → logprob: -6.288241863250732
    5. '  
' → logprob: -6.538241863250732
    6. '\n' → logprob: -7.413241863250732
    7. '<|end|>' → logprob: -7.538241863250732
    8. '   ' → logprob: -7.913241863250732
    9. ' 
' → logprob: -9.16324234008789
    10. ',' → logprob: -9.28824234008789

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059400517493486404
    2. '        
' → logprob: -3.3094005584716797
    3. '
' → logprob: -4.30940055847168
    4. '   ' → logprob: -5.68440055847168
    5. '    
' → logprob: -5.93440055847168
    6. '  
' → logprob: -7.30940055847168
    7. '\n' → logprob: -8.18440055847168
    8. '' → logprob: -9.68440055847168
    9. '<|end|>' → logprob: -9.80940055847168
    10. '    ' → logprob: -9.93440055847168

Token 122: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.14557531476020813
    2. 'N' → logprob: -3.3955752849578857
    3. '   ' → logprob: -3.3955752849578857
    4. 'x' → logprob: -3.5205752849578857
    5. 'nx' → logprob: -4.270575523376465
    6. 'a' → logprob: -4.645575523376465
    7. 'r' → logprob: -5.145575523376465
    8. ' n' → logprob: -6.895575523376465
    9. 'd' → logprob: -7.395575523376465
    10. 't' → logprob: -7.520575523376465

Token 123: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8649366497993469
    2. '=' → logprob: -1.2399365901947021
    3. '=int' → logprob: -1.2399365901947021
    4. '=float' → logprob: -9.989936828613281
    5. ' ' → logprob: -10.364936828613281
    6. ',' → logprob: -11.489936828613281
    7. '=input' → logprob: -12.239936828613281
    8. '=len' → logprob: -12.239936828613281
    9. '=num' → logprob: -12.489936828613281
    10. '   ' → logprob: -13.239936828613281

Token 124: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0788961797952652
    2. '(' → logprob: -2.5788962841033936
    3. 'input' → logprob: -12.828896522521973
    4. ' (' → logprob: -13.328896522521973
    5. '(
' → logprob: -13.578896522521973
    6. '(

' → logprob: -14.953896522521973
    7. '(in' → logprob: -15.828896522521973
    8. '=input' → logprob: -17.078895568847656
    9. ',input' → logprob: -17.203895568847656
    10. '(open' → logprob: -17.203895568847656

Token 125: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.007318977732211351
    2. '[' → logprob: -5.00731897354126
    3. ')[' → logprob: -7.88231897354126
    4. ' [' → logprob: -9.132319450378418
    5. '   ' → logprob: -9.507319450378418
    6. '[input' → logprob: -11.382319450378418
    7. ')' → logprob: -11.507319450378418
    8. ' ' → logprob: -12.007319450378418
    9. 'idx' → logprob: -12.632319450378418
    10. '[
' → logprob: -13.132319450378418

Token 126: ']);' (ID: 34389)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03877121955156326
    2. '])
' → logprob: -3.413771152496338
    3. ']);' → logprob: -5.288771152496338
    4. ')' → logprob: -10.288771629333496
    5. ']' → logprob: -11.288771629333496
    6. ' ])' → logprob: -12.413771629333496
    7. ')
' → logprob: -12.663771629333496
    8. '])
' → logprob: -12.913771629333496
    9. '])+' → logprob: -13.163771629333496
    10. ']);
' → logprob: -13.663771629333496

Token 127: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5763080716133118
    2. ' idx' → logprob: -0.8263080716133118
    3. '	idx' → logprob: -7.951308250427246
    4. '       ' → logprob: -11.201308250427246
    5. '[idx' → logprob: -13.951308250427246
    6. '   ' → logprob: -13.951308250427246
    7. '_idx' → logprob: -14.826308250427246
    8. '(idx' → logprob: -15.326308250427246
    9. '    ' → logprob: -15.576308250427246
    10. '.idx' → logprob: -16.32630729675293

Token 128: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0014837936032563448
    2. '+' → logprob: -7.001483917236328
    3. ' +=' → logprob: -7.501483917236328
    4. '++' → logprob: -11.001483917236328
    5. ']+=' → logprob: -13.876483917236328
    6. '+='' → logprob: -14.126483917236328
    7. '+="' → logprob: -14.376483917236328
    8. '+++' → logprob: -14.501483917236328
    9. '=' → logprob: -15.501483917236328
    10. '+=(' → logprob: -15.876483917236328

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -20.875001907348633
    4. '１' → logprob: -21.375001907348633
    5. '`' → logprob: -22.375001907348633
    6. '   ' → logprob: -22.500001907348633
    7. '۱' → logprob: -23.625001907348633
    8. '0' → logprob: -24.125001907348633
    9. '3' → logprob: -24.312501907348633
    10. '2' → logprob: -24.562501907348633

Token 130: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021961715538054705
    2. '        ' → logprob: -6.627196311950684
    3. ' if' → logprob: -8.377196311950684
    4. '        
' → logprob: -8.627196311950684
    5. '   ' → logprob: -9.002196311950684
    6. ' ' → logprob: -9.877196311950684
    7. 's' → logprob: -10.002196311950684
    8. '<|end|>' → logprob: -10.377196311950684
    9. ' s' → logprob: -10.502196311950684
    10. 'if' → logprob: -10.627196311950684

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015455732122063637
    2. ' if' → logprob: -5.515455722808838
    3. 'd' → logprob: -6.515455722808838
    4. 'r' → logprob: -6.765455722808838
    5. 's' → logprob: -6.890455722808838
    6. 'v' → logprob: -6.890455722808838
    7. ' s' → logprob: -7.265455722808838
    8. ' r' → logprob: -7.265455722808838
    9. 'if' → logprob: -7.515455722808838
    10. ' p' → logprob: -7.515455722808838

Token 132: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.0693485736846924
    2. ' if' → logprob: -2.0693485736846924
    3. 'p' → logprob: -2.4443485736846924
    4. 'u' → logprob: -2.8193485736846924
    5. 'r' → logprob: -2.9443485736846924
    6. 'm' → logprob: -2.9443485736846924
    7. 'a' → logprob: -3.0693485736846924
    8. 'd' → logprob: -3.4443485736846924
    9. 'c' → logprob: -3.4443485736846924
    10. 'v' → logprob: -3.5693485736846924

Token 133: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.575939953327179
    2. 'n' → logprob: -0.825939953327179
    3. '	n' → logprob: -15.575940132141113
    4. ' not' → logprob: -15.825940132141113
    5. ' ' → logprob: -16.450939178466797
    6. '(n' → logprob: -16.700939178466797
    7. 'n't' → logprob: -18.075939178466797
    8. 'not' → logprob: -18.075939178466797
    9. ' ' → logprob: -18.200939178466797
    10. '0' → logprob: -18.450939178466797

Token 134: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011360561475157738
    2. ' ==' → logprob: -4.5113606452941895
    3. '<=' → logprob: -8.136360168457031
    4. '=' → logprob: -11.386360168457031
    5. '==-' → logprob: -13.011360168457031
    6. '==
' → logprob: -13.511360168457031
    7. ' <=' → logprob: -13.636360168457031
    8. '<' → logprob: -13.761360168457031
    9. ')==' → logprob: -14.386360168457031
    10. '===' → logprob: -14.636360168457031

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170460251159966
    2. ' ' → logprob: -6.751170635223389
    3. '-' → logprob: -15.12617015838623
    4. ' ' → logprob: -17.001171112060547
    5. ' -' → logprob: -17.001171112060547
    6. '  ' → logprob: -17.876171112060547
    7. '   ' → logprob: -17.876171112060547
    8. '=' → logprob: -18.501171112060547
    9. '
' → logprob: -18.501171112060547
    10. '_' → logprob: -18.626171112060547

Token 136: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011558275582501665
    2. ':
' → logprob: -9.250115394592285
    3. ' :' → logprob: -11.000115394592285
    4. '       ' → logprob: -13.750115394592285
    5. ':return' → logprob: -14.000115394592285
    6. '   ' → logprob: -14.375115394592285
    7. '           ' → logprob: -15.375115394592285
    8. '):' → logprob: -17.7501163482666
    9. '    ' → logprob: -18.3751163482666
    10. '        ' → logprob: -18.3751163482666

Token 137: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6267921328544617
    2. '           ' → logprob: -0.8767921328544617
    3. '       ' → logprob: -3.3767921924591064
    4. 'break' → logprob: -4.251791954040527
    5. '   ' → logprob: -7.251791954040527
    6. ' return' → logprob: -8.126791954040527
    7. '	break' → logprob: -9.751791954040527
    8. 'return' → logprob: -10.126791954040527
    9. '        ' → logprob: -10.501791954040527
    10. '    ' → logprob: -11.001791954040527

Token 138: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0570526085793972
    2. ' points' → logprob: -3.9320526123046875
    3. '        
' → logprob: -3.9320526123046875
    4. '
' → logprob: -4.8070526123046875
    5. ' vectors' → logprob: -6.3070526123046875
    6. 'points' → logprob: -6.6820526123046875
    7. '   ' → logprob: -7.0570526123046875
    8. 'v' → logprob: -7.1820526123046875
    9. '    
' → logprob: -7.9320526123046875
    10. 's' → logprob: -7.9320526123046875

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02858017385005951
    2. '
' → logprob: -4.028580188751221
    3. '        
' → logprob: -4.903580188751221
    4. '   ' → logprob: -6.778580188751221
    5. 'n' → logprob: -7.778580188751221
    6. ' vectors' → logprob: -7.903580188751221
    7. '<|end|>' → logprob: -8.653579711914062
    8. '    
' → logprob: -8.653579711914062
    9. 'v' → logprob: -8.903579711914062
    10. ' points' → logprob: -9.028579711914062

Token 140: ' stars' (ID: 13701)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.3687184453010559
    2. ' points' → logprob: -2.243718385696411
    3. 'v' → logprob: -2.993718385696411
    4. 'pts' → logprob: -3.243718385696411
    5. 'vectors' → logprob: -3.368718385696411
    6. 'p' → logprob: -3.743718385696411
    7. 'a' → logprob: -5.24371862411499
    8. '   ' → logprob: -5.24371862411499
    9. '       ' → logprob: -5.49371862411499
    10. ' vectors' → logprob: -5.61871862411499

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5132898688316345
    2. '=' → logprob: -1.0132899284362793
    3. '=[]' → logprob: -3.2632899284362793
    4. '=[' → logprob: -9.513289451599121
    5. '   ' → logprob: -10.513289451599121
    6. '={}' → logprob: -10.513289451599121
    7. '=[]
' → logprob: -11.138289451599121
    8. ',' → logprob: -11.388289451599121
    9. '=[],' → logprob: -11.513289451599121
    10. '    ' → logprob: -11.888289451599121

Token 142: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04894670844078064
    2. ' []' → logprob: -3.0489466190338135
    3. '[' → logprob: -8.298946380615234
    4. ' [' → logprob: -9.673946380615234
    5. '[]
' → logprob: -10.923946380615234
    6. '[n' → logprob: -11.173946380615234
    7. '[input' → logprob: -11.798946380615234
    8. '[int' → logprob: -13.298946380615234
    9. '[(' → logprob: -13.798946380615234
    10. '[list' → logprob: -14.423946380615234

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041880760341882706
    2. ' for' → logprob: -3.9168808460235596
    3. '<|end|>' → logprob: -4.0418806076049805
    4. '
' → logprob: -6.2918806076049805
    5. 'for' → logprob: -7.1668806076049805
    6. '   ' → logprob: -8.29188060760498
    7. ' ' → logprob: -8.66688060760498
    8. '        
' → logprob: -8.79188060760498
    9. '<|end|>' → logprob: -8.79188060760498
    10. '	for' → logprob: -9.79188060760498

Token 144: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0789194256067276
    2. ' for' → logprob: -2.5789194107055664
    3. '       ' → logprob: -10.453919410705566
    4. '	for' → logprob: -14.703919410705566
    5. '   ' → logprob: -15.078919410705566
    6. '        
' → logprob: -16.953920364379883
    7. 'x' → logprob: -17.703920364379883
    8. 'while' → logprob: -18.703920364379883
    9. '```' → logprob: -18.953920364379883
    10. '
' → logprob: -19.078920364379883

Token 145: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2029668688774109
    2. ' _' → logprob: -1.7029669284820557
    3. ' i' → logprob: -6.952966690063477
    4. '_i' → logprob: -7.827966690063477
    5. 'i' → logprob: -8.577966690063477
    6. ' ' → logprob: -11.827966690063477
    7. ' in' → logprob: -13.452966690063477
    8. '_range' → logprob: -14.827966690063477
    9. ' ' → logprob: -15.452966690063477
    10. ' range' → logprob: -15.452966690063477

Token 146: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38789334893226624
    2. ' in' → logprob: -1.1378933191299438
    3. 'range' → logprob: -7.262893199920654
    4. ' ' → logprob: -8.387893676757812
    5. '  ' → logprob: -9.887893676757812
    6. 'n' → logprob: -11.137893676757812
    7. 'i' → logprob: -12.137893676757812
    8. ' range' → logprob: -12.137893676757812
    9. '   ' → logprob: -12.512893676757812
    10. 'import' → logprob: -12.637893676757812

Token 147: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005604196921922266
    2. ' range' → logprob: -7.500560283660889
    3. 'ange' → logprob: -13.000560760498047
    4. '(range' → logprob: -13.250560760498047
    5. '   ' → logprob: -14.250560760498047
    6. ' ' → logprob: -14.750560760498047
    7. '```' → logprob: -14.875560760498047
    8. '	range' → logprob: -14.875560760498047
    9. '  ' → logprob: -15.250560760498047
    10. 'input' → logprob: -15.625560760498047

Token 148: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.5776860184123507e-06
    2. 'n' → logprob: -13.75000286102295
    3. ' (' → logprob: -14.25000286102295
    4. '(' → logprob: -14.37500286102295
    5. ' n' → logprob: -15.75000286102295
    6. '	n' → logprob: -20.375001907348633
    7. ',n' → logprob: -21.375001907348633
    8. '   ' → logprob: -22.125001907348633
    9. '(N' → logprob: -22.250001907348633
    10. '(
' → logprob: -22.375001907348633

Token 149: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6932703852653503
    2. '):' → logprob: -0.6932703852653503
    3. '):
' → logprob: -9.568270683288574
    4. ' ):' → logprob: -10.818270683288574
    5. ' ):
' → logprob: -11.068270683288574
    6. ')' → logprob: -11.568270683288574
    7. ':' → logprob: -12.568270683288574
    8. '   ' → logprob: -13.318270683288574
    9. '):

' → logprob: -13.693270683288574
    10. ':
' → logprob: -13.943270683288574

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029158324003219604
    2. '   ' → logprob: -4.904158115386963
    3. ' x' → logprob: -5.029158115386963
    4. '       ' → logprob: -5.404158115386963
    5. ' stars' → logprob: -5.654158115386963
    6. ' s' → logprob: -6.279158115386963
    7. 'x' → logprob: -6.904158115386963
    8. ' points' → logprob: -7.404158115386963
    9. '<|end|>' → logprob: -7.529158115386963
    10. ',' → logprob: -7.779158115386963

Token 151: ' sx' (ID: 39428)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.043296270072460175
    2. ' x' → logprob: -3.1682963371276855
    3. '           ' → logprob: -8.793295860290527
    4. 'v' → logprob: -10.418295860290527
    5. 'a' → logprob: -10.543295860290527
    6. 'p' → logprob: -10.668295860290527
    7. 'r' → logprob: -11.168295860290527
    8. ' p' → logprob: -11.418295860290527
    9. ' stars' → logprob: -11.918295860290527
    10. ' px' → logprob: -12.668295860290527

Token 152: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38202834129333496
    2. ' =' → logprob: -1.757028341293335
    3. '=int' → logprob: -2.132028341293335
    4. '=float' → logprob: -3.757028341293335
    5. '=s' → logprob: -6.132028579711914
    6. ',' → logprob: -7.757028579711914
    7. '=x' → logprob: -8.882028579711914
    8. 'x' → logprob: -9.257028579711914
    9. '=sys' → logprob: -9.882028579711914
    10. '=input' → logprob: -10.132028579711914

Token 153: 'sy' (ID: 5611)
  Prédit: 'sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.0021956947166472673
    2. ' sy' → logprob: -6.127195835113525
    3. 'sys' → logprob: -12.252195358276367
    4. '_sy' → logprob: -12.377195358276367
    5. 's' → logprob: -13.752195358276367
    6. 'syz' → logprob: -15.502195358276367
    7. '   ' → logprob: -16.877195358276367
    8. '.sy' → logprob: -16.877195358276367
    9. 'sx' → logprob: -17.127195358276367
    10. 'sz' → logprob: -17.127195358276367

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43042877316474915
    2. ',s' → logprob: -1.0554287433624268
    3. '=' → logprob: -7.180428981781006
    4. ' =' → logprob: -8.430428504943848
    5. ',x' → logprob: -8.930428504943848
    6. ',int' → logprob: -8.930428504943848
    7. '=s' → logprob: -9.055428504943848
    8. ',z' → logprob: -9.430428504943848
    9. ',float' → logprob: -9.430428504943848
    10. ' ,' → logprob: -9.805428504943848

Token 155: 'sz' (ID: 13849)
  Prédit: 'sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -8.590104698669165e-05
    2. ' sz' → logprob: -9.375085830688477
    3. 's' → logprob: -14.625085830688477
    4. 'sx' → logprob: -15.250085830688477
    5. ' ' → logprob: -16.250085830688477
    6. '
' → logprob: -16.375085830688477
    7. '(sz' → logprob: -16.750085830688477
    8. '   ' → logprob: -16.875085830688477
    9. '

' → logprob: -17.750085830688477
    10. '  ' → logprob: -17.875085830688477

Token 156: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13302135467529297
    2. ' =' → logprob: -2.133021354675293
    3. '=int' → logprob: -5.133021354675293
    4. '=float' → logprob: -8.758021354675293
    5. '=input' → logprob: -11.883021354675293
    6. '=s' → logprob: -12.133021354675293
    7. ',' → logprob: -13.383021354675293
    8. '=sys' → logprob: -13.633021354675293
    9. '   ' → logprob: -13.758021354675293
    10. '=len' → logprob: -15.258021354675293

Token 157: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.014227439649403095
    2. ' float' → logprob: -4.264227390289307
    3. 'map' → logprob: -10.014227867126465
    4. ' map' → logprob: -11.514227867126465
    5. '(float' → logprob: -12.139227867126465
    6. '   ' → logprob: -13.014227867126465
    7. 'int' → logprob: -14.014227867126465
    8. '	float' → logprob: -14.264227867126465
    9. '  ' → logprob: -16.51422691345215
    10. ',float' → logprob: -16.88922691345215

Token 158: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.694766489090398e-05
    2. '(' → logprob: -9.625066757202148
    3. ' (' → logprob: -14.250066757202148
    4. '(s' → logprob: -17.00006675720215
    5. ',input' → logprob: -17.12506675720215
    6. 'input' → logprob: -17.37506675720215
    7. '(
' → logprob: -17.62506675720215
    8. '(x' → logprob: -18.25006675720215
    9. '(in' → logprob: -18.62506675720215
    10. '(eval' → logprob: -18.75006675720215

Token 159: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.320199877838604e-07
    2. 'idx' → logprob: -15.25
    3. '(idx' → logprob: -16.375
    4. '   ' → logprob: -17.625
    5. '[' → logprob: -18.0
    6. ' [' → logprob: -18.25
    7. ')[' → logprob: -18.625
    8. '       ' → logprob: -19.125
    9. ' idx' → logprob: -19.5
    10. '[id' → logprob: -19.625

Token 160: ']),' (ID: 19560)
  Prédit: ']),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.022391952574253082
    2. ']);' → logprob: -4.5223917961120605
    3. '[idx' → logprob: -4.7723917961120605
    4. '])' → logprob: -5.8973917961120605
    5. '+' → logprob: -11.147392272949219
    6. 'idx' → logprob: -11.397392272949219
    7. '   ' → logprob: -11.522392272949219
    8. '])
' → logprob: -11.647392272949219
    9. ' ]' → logprob: -12.147392272949219
    10. '[' → logprob: -12.272392272949219

Token 161: 'float' (ID: 7829)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.2519533634185791
    2. 'float' → logprob: -1.501953363418579
    3. '=float' → logprob: -11.001953125
    4. ',float' → logprob: -12.751953125
    5. '	float' → logprob: -13.751953125
    6. '_float' → logprob: -13.876953125
    7. ' ' → logprob: -13.876953125
    8. '(float' → logprob: -14.376953125
    9. '<float' → logprob: -14.376953125
    10. '.float' → logprob: -14.876953125

Token 162: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0006494098342955112
    2. '[input' → logprob: -7.875649452209473
    3. '(' → logprob: -8.625649452209473
    4. 'input' → logprob: -9.375649452209473
    5. ' (' → logprob: -13.125649452209473
    6. ' input' → logprob: -13.750649452209473
    7. '[' → logprob: -13.750649452209473
    8. '<input' → logprob: -15.250649452209473
    9. ',input' → logprob: -15.500649452209473
    10. '(
' → logprob: -15.875649452209473

Token 163: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00014060820103622973
    2. 'idx' → logprob: -8.875140190124512
    3. ' idx' → logprob: -15.125140190124512
    4. '[' → logprob: -15.500140190124512
    5. '	idx' → logprob: -16.250141143798828
    6. '(idx' → logprob: -16.875141143798828
    7. '[
' → logprob: -17.000141143798828
    8. ' [' → logprob: -17.250141143798828
    9. ')' → logprob: -18.000141143798828
    10. '   ' → logprob: -18.250141143798828

Token 164: '+' (ID: 10)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.30255937576293945
    2. '+' → logprob: -1.5525593757629395
    3. ']),' → logprob: -3.0525593757629395
    4. 'idx' → logprob: -6.3025593757629395
    5. '])' → logprob: -9.052558898925781
    6. ' +' → logprob: -9.427558898925781
    7. ']);' → logprob: -10.427558898925781
    8. '[' → logprob: -10.802558898925781
    9. ']+' → logprob: -11.427558898925781
    10. ' idx' → logprob: -11.552558898925781

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002141458389814943
    2. '0' → logprob: -9.500214576721191
    3. 'idx' → logprob: -9.500214576721191
    4. ' ' → logprob: -10.250214576721191
    5. '2' → logprob: -11.125214576721191
    6. '3' → logprob: -11.500214576721191
    7. '4' → logprob: -13.750214576721191
    8. '   ' → logprob: -14.000214576721191
    9. '```' → logprob: -14.875214576721191
    10. ' idx' → logprob: -15.375214576721191

Token 166: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -3.531315314830863e-06
    2. ' ),' → logprob: -13.375003814697266
    3. ',' → logprob: -14.500003814697266
    4. ')' → logprob: -14.500003814697266
    5. '],' → logprob: -15.375003814697266
    6. '),(' → logprob: -15.875003814697266
    7. ',float' → logprob: -15.875003814697266
    8. ' ' → logprob: -16.250003814697266
    9. '   ' → logprob: -16.250003814697266
    10. '"),' → logprob: -17.500003814697266

Token 167: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0002614550176076591
    2. ' float' → logprob: -8.250261306762695
    3. '=float' → logprob: -16.750261306762695
    4. '	float' → logprob: -16.875261306762695
    5. ',float' → logprob: -16.875261306762695
    6. '<float' → logprob: -17.750261306762695
    7. '(float' → logprob: -18.000261306762695
    8. 'flo' → logprob: -19.750261306762695
    9. '.float' → logprob: -20.125261306762695
    10. '_float' → logprob: -20.375261306762695

Token 168: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0011810619616881013
    2. 'input' → logprob: -6.751181125640869
    3. '[input' → logprob: -12.376180648803711
    4. 'float' → logprob: -12.501180648803711
    5. ' input' → logprob: -13.251180648803711
    6. ' (' → logprob: -14.751180648803711
    7. '=input' → logprob: -16.00118064880371
    8. '(float' → logprob: -16.12618064880371
    9. ',input' → logprob: -16.12618064880371
    10. '<input' → logprob: -16.37618064880371

Token 169: '[idx' (ID: 25582)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08786486089229584
    2. '[idx' → logprob: -2.962864875793457
    3. '+' → logprob: -3.962864875793457
    4. 'idx' → logprob: -4.337864875793457
    5. '1' → logprob: -8.962864875793457
    6. '3' → logprob: -9.587864875793457
    7. ' idx' → logprob: -10.337864875793457
    8. '   ' → logprob: -10.712864875793457
    9. '```' → logprob: -10.712864875793457
    10. '[' → logprob: -11.087864875793457

Token 170: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005092272534966469
    2. ']),' → logprob: -5.380092144012451
    3. 'idx' → logprob: -8.00509262084961
    4. '2' → logprob: -9.25509262084961
    5. '   ' → logprob: -11.38009262084961
    6. '[idx' → logprob: -11.88009262084961
    7. '])' → logprob: -12.00509262084961
    8. ' idx' → logprob: -12.13009262084961
    9. ' ' → logprob: -13.38009262084961
    10. '[' → logprob: -13.50509262084961

Token 171: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.875001907348633
    3. '3' → logprob: -15.250001907348633
    4. '```' → logprob: -16.062501907348633
    5. '   ' → logprob: -16.312501907348633
    6. '２' → logprob: -16.562501907348633
    7. '۲' → logprob: -16.687501907348633
    8. '1' → logprob: -17.125001907348633
    9. '  ' → logprob: -17.812501907348633
    10. '
' → logprob: -17.875001907348633

Token 172: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25013530254364014
    2. ');' → logprob: -1.6251353025436401
    3. ')
' → logprob: -3.8751354217529297
    4. '),' → logprob: -5.62513542175293
    5. ')
' → logprob: -11.37513542175293
    6. ' );' → logprob: -11.75013542175293
    7. ' )' → logprob: -11.87513542175293
    8. '   ' → logprob: -12.00013542175293
    9. ']);' → logprob: -12.25013542175293
    10. ')

' → logprob: -12.62513542175293

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004431659355759621
    2. 'idx' → logprob: -6.00443172454834
    3. ' idx' → logprob: -7.00443172454834
    4. ',' → logprob: -7.50443172454834
    5. '       ' → logprob: -8.50443172454834
    6. '[idx' → logprob: -9.50443172454834
    7. '	idx' → logprob: -9.75443172454834
    8. '   ' → logprob: -10.12943172454834
    9. '               ' → logprob: -10.37943172454834
    10. '		' → logprob: -11.00443172454834

Token 174: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.08019628375768661
    2. ' idx' → logprob: -2.5801963806152344
    3. '           ' → logprob: -6.705196380615234
    4. '	idx' → logprob: -10.080196380615234
    5. '       ' → logprob: -10.330196380615234
    6. '   ' → logprob: -13.455196380615234
    7. '[idx' → logprob: -13.830196380615234
    8. '               ' → logprob: -13.830196380615234
    9. '
' → logprob: -13.955196380615234
    10. '(idx' → logprob: -14.330196380615234

Token 175: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0019376773852854967
    2. ' +=' → logprob: -6.2519378662109375
    3. ']+=' → logprob: -12.126937866210938
    4. '   ' → logprob: -12.876937866210938
    5. '+' → logprob: -14.251937866210938
    6. '+=(' → logprob: -15.251937866210938
    7. '+="' → logprob: -16.001937866210938
    8. '	' → logprob: -16.501937866210938
    9. '+='' → logprob: -17.376937866210938
    10. '  ' → logprob: -17.626937866210938

Token 176: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '۳' → logprob: -20.25
    4. '   ' → logprob: -20.75
    5. '３' → logprob: -21.0
    6. '           ' → logprob: -21.5
    7. '৩' → logprob: -22.0
    8. '```' → logprob: -22.0
    9. '٣' → logprob: -22.375
    10. '' → logprob: -22.625

Token 177: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004458044422790408
    2. 'stars' → logprob: -8.625445365905762
    3. ' stars' → logprob: -9.125445365905762
    4. '       ' → logprob: -9.250445365905762
    5. '
' → logprob: -11.125445365905762
    6. '   ' → logprob: -11.125445365905762
    7. '		' → logprob: -11.375445365905762
    8. '	       ' → logprob: -12.000445365905762
    9. ',' → logprob: -13.000445365905762
    10. '	   ' → logprob: -13.125445365905762

Token 178: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007915244204923511
    2. 'stars' → logprob: -7.625791549682617
    3. '       ' → logprob: -8.375791549682617
    4. ' stars' → logprob: -9.750791549682617
    5. '   ' → logprob: -11.750791549682617
    6. '
' → logprob: -12.500791549682617
    7. 'star' → logprob: -14.125791549682617
    8. '	       ' → logprob: -14.875791549682617
    9. '		' → logprob: -15.000791549682617
    10. '<|end|>' → logprob: -15.000791549682617

Token 179: ' stars' (ID: 13701)
  Prédit: 'stars'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stars' (adapté à ' stars') → logprob: -0.023401780053973198
    2. 'r' → logprob: -4.523401737213135
    3. ' stars' → logprob: -4.898401737213135
    4. '       ' → logprob: -7.648401737213135
    5. '   ' → logprob: -7.648401737213135
    6. 'd' → logprob: -7.773401737213135
    7. 'brightness' → logprob: -7.898401737213135
    8. 's' → logprob: -8.023402214050293
    9. '           ' → logprob: -8.273402214050293
    10. 'lights' → logprob: -8.398402214050293

Token 180: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019326817709952593
    2. '.' → logprob: -6.251932621002197
    3. '.ap' → logprob: -13.251933097839355
    4. ' .' → logprob: -13.501933097839355
    5. '.app' → logprob: -14.501933097839355
    6. 'append' → logprob: -15.126933097839355
    7. '.extend' → logprob: -15.876933097839355
    8. '.add' → logprob: -18.12693214416504
    9. '.Append' → logprob: -18.12693214416504
    10. '=' → logprob: -18.62693214416504

Token 181: '(norm' (ID: 169218)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.008739731274545193
    2. '(' → logprob: -4.758739948272705
    3. '(norm' → logprob: -9.008739471435547
    4. '(s' → logprob: -13.258739471435547
    5. ' ((' → logprob: -14.383739471435547
    6. '(((' → logprob: -15.883739471435547
    7. ' (' → logprob: -16.258739471435547
    8. '([' → logprob: -16.258739471435547
    9. '(normal' → logprob: -16.633739471435547
    10. '(
' → logprob: -17.008739471435547

Token 182: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0010929503478109837
    2. '(' → logprob: -7.126092910766602
    3. '(s' → logprob: -8.251092910766602
    4. '([' → logprob: -10.626092910766602
    5. ' ((' → logprob: -13.751092910766602
    6. ' (' → logprob: -14.126092910766602
    7. ')((' → logprob: -14.751092910766602
    8. '(([' → logprob: -15.501092910766602
    9. ' ' → logprob: -15.626092910766602
    10. ')' → logprob: -15.751092910766602

Token 183: 'sx' (ID: 102754)
  Prédit: 'sx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -4.5491004129871726e-05
    2. ' sx' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.000045776367188
    4. ' ' → logprob: -19.250045776367188
    5. '(s' → logprob: -19.625045776367188
    6. '	s' → logprob: -20.000045776367188
    7. 'sz' → logprob: -20.375045776367188
    8. '-s' → logprob: -20.750045776367188
    9. 'SX' → logprob: -20.750045776367188
    10. 'sy' → logprob: -21.000045776367188

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.019237768370658e-05
    2. ' ,' → logprob: -9.375090599060059
    3. ',s' → logprob: -12.875090599060059
    4. ',
' → logprob: -13.250090599060059
    5. '<|end|>' → logprob: -15.625090599060059
    6. 'sy' → logprob: -15.750090599060059
    7. ',\
' → logprob: -16.125089645385742
    8. '_sy' → logprob: -16.250089645385742
    9. ',S' → logprob: -16.250089645385742
    10. ',float' → logprob: -16.250089645385742

Token 185: 'sy' (ID: 5611)
  Prédit: 'sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.0021960523445159197
    2. ' sy' → logprob: -6.127195835113525
    3. 'syz' → logprob: -11.627196311950684
    4. 's' → logprob: -14.627196311950684
    5. 'sys' → logprob: -14.877196311950684
    6. '_sy' → logprob: -15.002196311950684
    7. ' ' → logprob: -15.377196311950684
    8. '.sy' → logprob: -15.627196311950684
    9. 'sz' → logprob: -16.252195358276367
    10. '   ' → logprob: -16.502195358276367

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4378848391061183e-05
    2. ' ,' → logprob: -11.875014305114746
    3. ',s' → logprob: -11.875014305114746
    4. 'sz' → logprob: -16.000015258789062
    5. '_sz' → logprob: -16.875015258789062
    6. '_,' → logprob: -16.875015258789062
    7. ',
' → logprob: -17.000015258789062
    8. '	s' → logprob: -17.250015258789062
    9. '(sz' → logprob: -17.500015258789062
    10. ',,' → logprob: -17.625015258789062

Token 187: 'sz' (ID: 13849)
  Prédit: 'sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -3.5120287066092715e-05
    2. ' sz' → logprob: -10.375035285949707
    3. '(sz' → logprob: -12.625035285949707
    4. '_sz' → logprob: -15.750035285949707
    5. '.sz' → logprob: -16.12503433227539
    6. 'Sz' → logprob: -16.37503433227539
    7. ' ' → logprob: -16.75003433227539
    8. '
' → logprob: -17.12503433227539
    9. '   ' → logprob: -17.25003433227539
    10. '       ' → logprob: -17.75003433227539

Token 188: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0019393461989238858
    2. '))' → logprob: -6.251939296722412
    3. ')))
' → logprob: -12.00193977355957
    4. ')' → logprob: -12.50193977355957
    5. ' ' → logprob: -15.12693977355957
    6. ')));' → logprob: -15.50193977355957
    7. '))))' → logprob: -15.50193977355957
    8. ')))

' → logprob: -16.50193977355957
    9. '))
' → logprob: -16.75193977355957
    10. ' ))' → logprob: -18.25193977355957

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025300271809101105
    2. '        
' → logprob: -4.4003005027771
    3. '
' → logprob: -5.4003005027771
    4. '<|end|>' → logprob: -6.7753005027771
    5. '```' → logprob: -7.2753005027771
    6. 'sun' → logprob: -7.6503005027771
    7. 's' → logprob: -7.7753005027771
    8. 'angle' → logprob: -7.9003005027771
    9. 'n' → logprob: -8.025300025939941
    10. '   ' → logprob: -8.150300025939941

Token 190: ' m' (ID: 284)
  Prédit: 'light'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'light' → logprob: -1.970874547958374
    2. 'lights' → logprob: -1.970874547958374
    3. '       ' → logprob: -2.095874547958374
    4. 'sun' → logprob: -2.470874547958374
    5. 'l' → logprob: -2.970874547958374
    6. 'angles' → logprob: -3.220874547958374
    7. 'best' → logprob: -3.595874547958374
    8. 'dist' → logprob: -3.845874547958374
    9. 'angle' → logprob: -3.970874547958374
    10. 'result' → logprob: -4.095874786376953

Token 191: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1531831920146942
    2. '=int' → logprob: -2.1531832218170166
    3. ' =' → logprob: -3.6531832218170166
    4. '=float' → logprob: -13.278182983398438
    5. '=in' → logprob: -13.778182983398438
    6. '=len' → logprob: -15.153182983398438
    7. '=input' → logprob: -15.153182983398438
    8. '=i' → logprob: -15.278182983398438
    9. '   ' → logprob: -15.403182983398438
    10. '=

' → logprob: -15.653182983398438

Token 192: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004317420825827867
    2. ' int' → logprob: -7.750431537628174
    3. 'n' → logprob: -14.750432014465332
    4. '0' → logprob: -14.875432014465332
    5. '   ' → logprob: -16.250431060791016
    6. '=int' → logprob: -17.000431060791016
    7. '[int' → logprob: -17.250431060791016
    8. ' ' → logprob: -17.500431060791016
    9. '(int' → logprob: -17.750431060791016
    10. 'float' → logprob: -18.500431060791016

Token 193: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.4855663721391466e-05
    2. 'input' → logprob: -11.375015258789062
    3. '(' → logprob: -13.375015258789062
    4. ' (' → logprob: -13.625015258789062
    5. ' input' → logprob: -14.625015258789062
    6. ',input' → logprob: -16.750015258789062
    7. '=input' → logprob: -16.875015258789062
    8. '<input' → logprob: -17.750015258789062
    9. '[input' → logprob: -18.125015258789062
    10. '	input' → logprob: -19.500015258789062

Token 194: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.004095143172889948
    2. '[input' → logprob: -5.504095077514648
    3. '(idx' → logprob: -11.504095077514648
    4. '[' → logprob: -12.754095077514648
    5. '(input' → logprob: -13.254095077514648
    6. 'idx' → logprob: -14.004095077514648
    7. ' [' → logprob: -15.254095077514648
    8. 'input' → logprob: -15.254095077514648
    9. ')' → logprob: -16.12909507751465
    10. '[index' → logprob: -16.25409507751465

Token 195: ']);' (ID: 34389)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011329567059874535
    2. '])' → logprob: -4.886329650878906
    3. ');' → logprob: -6.011329650878906
    4. ')
' → logprob: -7.011329650878906
    5. ']);' → logprob: -8.386329650878906
    6. ' )' → logprob: -9.761329650878906
    7. ')]' → logprob: -10.511329650878906
    8. '),' → logprob: -11.261329650878906
    9. '）' → logprob: -11.886329650878906
    10. '       ' → logprob: -12.386329650878906

Token 196: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0019125767285004258
    2. 'idx' → logprob: -6.376912593841553
    3. '	idx' → logprob: -8.751912117004395
    4. '[idx' → logprob: -10.126912117004395
    5. '<|end|>' → logprob: -11.751912117004395
    6. '_idx' → logprob: -13.126912117004395
    7. '(idx' → logprob: -13.376912117004395
    8. '.idx' → logprob: -14.876912117004395
    9. '_IDX' → logprob: -16.12691307067871
    10. '<|end|>' → logprob: -16.37691307067871

Token 197: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -8.77627644513268e-06
    2. ' +=' → logprob: -12.125008583068848
    3. ']+=' → logprob: -12.875008583068848
    4. '+' → logprob: -14.125008583068848
    5. '```' → logprob: -17.875009536743164
    6. '++' → logprob: -18.000009536743164
    7. '   ' → logprob: -18.250009536743164
    8. '+='' → logprob: -18.875009536743164
    9. '+=(' → logprob: -19.125009536743164
    10. '+="' → logprob: -19.125009536743164

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. 'm' → logprob: -11.875011444091797
    3. ' ' → logprob: -12.250011444091797
    4. '0' → logprob: -17.250011444091797
    5. ' m' → logprob: -17.625011444091797
    6. '１' → logprob: -19.187511444091797
    7. '   ' → logprob: -19.375011444091797
    8. '(m' → logprob: -19.500011444091797
    9. '3' → logprob: -19.812511444091797
    10. '2' → logprob: -19.812511444091797

Token 199: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01298809889703989
    2. 'points' → logprob: -5.762988090515137
    3. 'targets' → logprob: -6.137988090515137
    4. '        
' → logprob: -7.262988090515137
    5. 'lights' → logprob: -7.637988090515137
    6. 'dire' → logprob: -7.637988090515137
    7. 'view' → logprob: -7.762988090515137
    8. 'stars' → logprob: -7.762988090515137
    9. 'views' → logprob: -7.887988090515137
    10. 'angles' → logprob: -8.137988090515137

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018996434286236763
    2. 'targets' → logprob: -5.768996238708496
    3. 'points' → logprob: -6.018996238708496
    4. ' directions' → logprob: -6.143996238708496
    5. 'dire' → logprob: -6.143996238708496
    6. ' targets' → logprob: -6.768996238708496
    7. '        
' → logprob: -7.268996238708496
    8. 'rot' → logprob: -7.393996238708496
    9. 'observ' → logprob: -7.393996238708496
    10. ' points' → logprob: -7.643996238708496

Token 201: ' telesc' (ID: 109816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.1779682636260986
    2. 'queries' → logprob: -2.6779682636260986
    3. 'dire' → logprob: -2.9279682636260986
    4. 'results' → logprob: -3.0529682636260986
    5. 'observ' → logprob: -3.0529682636260986
    6. 'c' → logprob: -3.3029682636260986
    7. '       ' → logprob: -3.3029682636260986
    8. 'points' → logprob: -3.4279682636260986
    9. 'angles' → logprob: -3.4279682636260986
    10. 's' → logprob: -3.5529682636260986

Token 202: 'opes' (ID: 25986)
  Prédit: 'opes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opes' → logprob: -0.04555283859372139
    2. 'ope' → logprob: -3.1705527305603027
    3. 'op' → logprob: -6.045552730560303
    4. 'e' → logprob: -9.545553207397461
    5. 'es' → logprob: -11.170553207397461
    6. 'opic' → logprob: -11.295553207397461
    7. 'ops' → logprob: -11.420553207397461
    8. '```' → logprob: -11.545553207397461
    9. '=' → logprob: -11.670553207397461
    10. 'o' → logprob: -11.795553207397461

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07947295159101486
    2. '=' → logprob: -2.5794730186462402
    3. '=[]' → logprob: -7.45447301864624
    4. '=[]
' → logprob: -14.204472541809082
    5. ' ' → logprob: -14.329472541809082
    6. '={}' → logprob: -14.829472541809082
    7. '_' → logprob: -14.829472541809082
    8. ' =[' → logprob: -14.954472541809082
    9. '[]' → logprob: -15.204472541809082
    10. '   ' → logprob: -15.579472541809082

Token 204: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00041065402911044657
    2. '[]
' → logprob: -8.000411033630371
    3. ' []' → logprob: -9.500411033630371
    4. '[' → logprob: -15.750411033630371
    5. '[]

' → logprob: -15.750411033630371
    6. ' []
' → logprob: -17.500410079956055
    7. '[]}' → logprob: -17.750410079956055
    8. '=[]' → logprob: -18.875410079956055
    9. '[])' → logprob: -19.500410079956055
    10. '[],' → logprob: -19.750410079956055

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035095500061288476
    2. '<|end|>' → logprob: -8.500350952148438
    3. ' for' → logprob: -9.375350952148438
    4. 'for' → logprob: -9.875350952148438
    5. '[' → logprob: -13.125350952148438
    6. '	' → logprob: -13.375350952148438
    7. '        
' → logprob: -13.500350952148438
    8. '   ' → logprob: -13.750350952148438
    9. '<|end|>' → logprob: -14.000350952148438
    10. '        ' → logprob: -14.375350952148438

Token 206: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000983508420176804
    2. ' for' → logprob: -7.500983715057373
    3. '       ' → logprob: -7.750983715057373
    4. '	for' → logprob: -15.875983238220215
    5. '   ' → logprob: -16.87598419189453
    6. '
' → logprob: -17.75098419189453
    7. ' ' → logprob: -20.62598419189453
    8. '_for' → logprob: -21.87598419189453
    9. 'For' → logprob: -22.12598419189453
    10. '[' → logprob: -22.25098419189453

Token 207: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0019291093340143561
    2. ' _' → logprob: -6.25192928314209
    3. '_range' → logprob: -15.37692928314209
    4. '_m' → logprob: -16.001928329467773
    5. ' in' → logprob: -16.501928329467773
    6. '_=' → logprob: -17.376928329467773
    7. '_i' → logprob: -17.626928329467773
    8. ' range' → logprob: -18.376928329467773
    9. '__' → logprob: -18.501928329467773
    10. '_in' → logprob: -18.626928329467773

Token 208: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3874537944793701
    2. ' range' → logprob: -1.1374537944793701
    3. ' in' → logprob: -7.637454032897949
    4. '_' → logprob: -9.63745403289795
    5. 'in' → logprob: -10.63745403289795
    6. ' _' → logprob: -12.01245403289795
    7. ' ' → logprob: -12.63745403289795
    8. '(range' → logprob: -13.63745403289795
    9. '_range' → logprob: -15.01245403289795
    10. '(' → logprob: -15.88745403289795

Token 209: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078401252627373
    2. ' range' → logprob: -5.504078388214111
    3. '(range' → logprob: -17.004077911376953
    4. '_' → logprob: -18.379077911376953
    5. '	range' → logprob: -19.504077911376953
    6. '_range' → logprob: -19.879077911376953
    7. ' ' → logprob: -21.254077911376953
    8. '   ' → logprob: -22.004077911376953
    9. '
' → logprob: -22.129077911376953
    10. 'in' → logprob: -22.754077911376953

Token 210: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0019337546546012163
    2. ' (' → logprob: -6.251933574676514
    3. '(' → logprob: -12.626934051513672
    4. ' m' → logprob: -13.501934051513672
    5. 'm' → logprob: -14.501934051513672
    6. '	m' → logprob: -19.376934051513672
    7. ' ' → logprob: -19.876934051513672
    8. '(range' → logprob: -20.626934051513672
    9. '   ' → logprob: -21.126934051513672
    10. '(
' → logprob: -21.501934051513672

Token 211: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002580774249508977
    2. '):' → logprob: -6.127580642700195
    3. ':
' → logprob: -8.002580642700195
    4. '           ' → logprob: -10.752580642700195
    5. '       ' → logprob: -11.377580642700195
    6. ':' → logprob: -11.502580642700195
    7. '):
' → logprob: -12.127580642700195
    8. ' ):
' → logprob: -12.252580642700195
    9. '():
' → logprob: -12.627580642700195
    10. '   ' → logprob: -13.377580642700195

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02947945147752762
    2. '   ' → logprob: -3.654479503631592
    3. '       ' → logprob: -6.529479503631592
    4. 't' → logprob: -7.904479503631592
    5. ' sx' → logprob: -8.404479026794434
    6. ' ' → logprob: -8.529479026794434
    7. '<|end|>' → logprob: -9.029479026794434
    8. '    ' → logprob: -9.154479026794434
    9. 's' → logprob: -9.529479026794434
    10. 'sx' → logprob: -9.654479026794434

Token 213: ' tx' (ID: 10400)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' (adapté à ' tx') → logprob: -0.48765552043914795
    2. 'ox' → logprob: -1.737655520439148
    3. ' tx' → logprob: -2.8626556396484375
    4. 'dx' → logprob: -3.1126556396484375
    5. 'x' → logprob: -3.6126556396484375
    6. 'ax' → logprob: -3.8626556396484375
    7. 'px' → logprob: -4.3626556396484375
    8. ' ox' → logprob: -4.9876556396484375
    9. 'rx' → logprob: -5.3626556396484375
    10. 'sx' → logprob: -5.3626556396484375

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001768947229720652
    2. ',float' → logprob: -6.876769065856934
    3. ' ,' → logprob: -7.376769065856934
    4. 'x' → logprob: -9.751769065856934
    5. ',s' → logprob: -11.251769065856934
    6. ',t' → logprob: -11.501769065856934
    7. ' =' → logprob: -11.626769065856934
    8. '=float' → logprob: -12.251769065856934
    9. ',int' → logprob: -12.751769065856934
    10. 'tx' → logprob: -13.126769065856934

Token 215: 'ty' (ID: 1206)
  Prédit: 'ty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ty' → logprob: -3.547789674485102e-05
    2. ' ty' → logprob: -10.250035285949707
    3. 'sy' → logprob: -17.750036239624023
    4. '_ty' → logprob: -18.625036239624023
    5. '   ' → logprob: -18.750036239624023
    6. 'dy' → logprob: -19.750036239624023
    7. 'Ty' → logprob: -20.500036239624023
    8. '.ty' → logprob: -20.500036239624023
    9. '

' → logprob: -20.750036239624023
    10. '
' → logprob: -20.875036239624023

Token 216: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03316839039325714
    2. ' =' → logprob: -3.783168315887451
    3. '=' → logprob: -5.158168315887451
    4. ' ,' → logprob: -6.033168315887451
    5. ',float' → logprob: -6.908168315887451
    6. ',z' → logprob: -8.15816879272461
    7. ',tp' → logprob: -8.53316879272461
    8. ',t' → logprob: -9.03316879272461
    9. '=float' → logprob: -10.15816879272461
    10. ',tr' → logprob: -11.28316879272461

Token 217: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.4906412959098816
    2. 'x' → logprob: -0.9906412959098816
    3. 'xz' → logprob: -4.115641117095947
    4. 'sz' → logprob: -10.490641593933105
    5. ',z' → logprob: -10.615641593933105
    6. 'zx' → logprob: -11.365641593933105
    7. '=' → logprob: -11.740641593933105
    8. ' =' → logprob: -12.115641593933105
    9. 'iz' → logprob: -12.615641593933105
    10. 'ext' → logprob: -12.615641593933105

Token 218: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759745240211487
    2. '=' → logprob: -0.8259745240211487
    3. '=float' → logprob: -10.575974464416504
    4. ' ' → logprob: -12.075974464416504
    5. ',' → logprob: -13.325974464416504
    6. ')' → logprob: -14.325974464416504
    7. ',float' → logprob: -14.950974464416504
    8. '=int' → logprob: -15.200974464416504
    9. '   ' → logprob: -15.325974464416504
    10. '```' → logprob: -15.950974464416504

Token 219: 'phi' (ID: 33893)
  Prédit: 'fx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fx' → logprob: -0.39027318358421326
    2. 'qx' → logprob: -2.015273094177246
    3. 'float' → logprob: -2.390273094177246
    4. 'px' → logprob: -3.765273094177246
    5. 'dx' → logprob: -4.015273094177246
    6. 'ux' → logprob: -4.640273094177246
    7. ' float' → logprob: -4.765273094177246
    8. 'ax' → logprob: -5.515273094177246
    9. 'rx' → logprob: -5.640273094177246
    10. 'td' → logprob: -5.890273094177246

Token 220: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7673251628875732
    2. ' =' → logprob: -1.0173251628875732
    3. '=' → logprob: -1.7673251628875732
    4. ',float' → logprob: -7.267325401306152
    5. '=float' → logprob: -7.892325401306152
    6. ',num' → logprob: -8.017325401306152
    7. '=int' → logprob: -8.017325401306152
    8. '=input' → logprob: -8.267325401306152
    9. ',input' → logprob: -8.392325401306152
    10. ',int' → logprob: -8.767325401306152

Token 221: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.10021023452281952
    2. ' float' → logprob: -2.350210189819336
    3. '(float' → logprob: -12.850210189819336
    4. ' ' → logprob: -14.475210189819336
    5. '   ' → logprob: -15.600210189819336
    6. '	float' → logprob: -16.100210189819336
    7. '  ' → logprob: -17.600210189819336
    8. '=float' → logprob: -17.600210189819336
    9. ',float' → logprob: -17.725210189819336
    10. 'int' → logprob: -17.725210189819336

Token 222: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001936485292389989
    2. '(' → logprob: -6.251936435699463
    3. ' (' → logprob: -12.376936912536621
    4. ',input' → logprob: -13.126936912536621
    5. '(
' → logprob: -14.751936912536621
    6. 'input' → logprob: -14.876936912536621
    7. '(inputs' → logprob: -15.251936912536621
    8. '[input' → logprob: -15.626936912536621
    9. '=input' → logprob: -16.001935958862305
    10. ' input' → logprob: -16.501935958862305

Token 223: '[idx' (ID: 25582)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4130602478981018
    2. '[input' → logprob: -1.163060188293457
    3. '[idx' → logprob: -3.663060188293457
    4. 'input' → logprob: -9.288060188293457
    5. '(idx' → logprob: -9.788060188293457
    6. ',input' → logprob: -11.038060188293457
    7. ')[' → logprob: -11.913060188293457
    8. ')' → logprob: -12.038060188293457
    9. '=input' → logprob: -12.163060188293457
    10. ' input' → logprob: -12.788060188293457

Token 224: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00030924470047466457
    2. '[idx' → logprob: -8.750308990478516
    3. ']),' → logprob: -9.250308990478516
    4. ' ),' → logprob: -10.500308990478516
    5. ')' → logprob: -11.250308990478516
    6. '   ' → logprob: -12.250308990478516
    7. '[' → logprob: -13.000308990478516
    8. '],' → logprob: -13.125308990478516
    9. ')],' → logprob: -13.375308990478516
    10. ' ' → logprob: -14.250308990478516

Token 225: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -7.719917630311102e-05
    2. ' float' → logprob: -9.500077247619629
    3. ',float' → logprob: -13.750077247619629
    4. '=float' → logprob: -14.250077247619629
    5. '<float' → logprob: -15.125077247619629
    6. '(float' → logprob: -15.250077247619629
    7. '	float' → logprob: -16.875076293945312
    8. '.float' → logprob: -18.625076293945312
    9. '_float' → logprob: -19.250076293945312
    10. '<|end|>' → logprob: -19.500076293945312

Token 226: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.019579345360398293
    2. '(input' → logprob: -4.0195794105529785
    3. '[input' → logprob: -6.7695794105529785
    4. ' input' → logprob: -8.26957893371582
    5. '=input' → logprob: -11.26957893371582
    6. '<input' → logprob: -11.76957893371582
    7. ',input' → logprob: -13.26957893371582
    8. '	input' → logprob: -14.14457893371582
    9. 'idx' → logprob: -14.39457893371582
    10. '[idx' → logprob: -15.64457893371582

Token 227: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00046808819752186537
    2. 'idx' → logprob: -7.7504682540893555
    3. '+' → logprob: -11.250468254089355
    4. ' idx' → logprob: -11.250468254089355
    5. '[' → logprob: -12.625468254089355
    6. '   ' → logprob: -12.750468254089355
    7. '	idx' → logprob: -13.000468254089355
    8. '```' → logprob: -14.125468254089355
    9. '
' → logprob: -14.250468254089355
    10. '(idx' → logprob: -14.625468254089355

Token 228: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0036200277972966433
    2. ']),' → logprob: -5.753620147705078
    3. 'idx' → logprob: -8.253620147705078
    4. '[idx' → logprob: -9.503620147705078
    5. '])' → logprob: -10.503620147705078
    6. ' +' → logprob: -10.503620147705078
    7. '),' → logprob: -11.503620147705078
    8. '   ' → logprob: -11.503620147705078
    9. ']+' → logprob: -11.878620147705078
    10. '],' → logprob: -12.128620147705078

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036279852502048016
    2. '4' → logprob: -5.878627777099609
    3. '3' → logprob: -7.128627777099609
    4. 'idx' → logprob: -11.37862777709961
    5. '+' → logprob: -12.75362777709961
    6. '2' → logprob: -12.87862777709961
    7. ' ' → logprob: -13.87862777709961
    8. '-' → logprob: -14.37862777709961
    9. '```' → logprob: -14.50362777709961
    10. '0' → logprob: -14.69112777709961

Token 230: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00012797261297237128
    2. ',' → logprob: -9.250127792358398
    3. '],' → logprob: -11.375127792358398
    4. ']),' → logprob: -12.125127792358398
    5. ' ),' → logprob: -12.250127792358398
    6. ',float' → logprob: -12.500127792358398
    7. ',),' → logprob: -13.375127792358398
    8. '   ' → logprob: -13.625127792358398
    9. '),(' → logprob: -14.000127792358398
    10. ' ' → logprob: -14.625127792358398

Token 231: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.339278580620885e-06
    2. ' float' → logprob: -13.000001907348633
    3. '(float' → logprob: -20.250001907348633
    4. '	float' → logprob: -20.750001907348633
    5. ',float' → logprob: -20.875001907348633
    6. '<float' → logprob: -21.125001907348633
    7. '=float' → logprob: -22.375001907348633
    8. '.float' → logprob: -23.125001907348633
    9. 'Float' → logprob: -23.250001907348633
    10. 'flo' → logprob: -23.500001907348633

Token 232: '(input' (ID: 10054)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.18340793251991272
    2. '(input' → logprob: -2.05840802192688
    3. '(idx' → logprob: -3.93340802192688
    4. '[input' → logprob: -4.058407783508301
    5. 'input' → logprob: -6.433407783508301
    6. 'idx' → logprob: -6.558407783508301
    7. '[' → logprob: -11.0584077835083
    8. '[index' → logprob: -12.0584077835083
    9. '```' → logprob: -12.8084077835083
    10. ' idx' → logprob: -13.1834077835083

Token 233: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.009818892925977707
    2. 'idx' → logprob: -4.634819030761719
    3. ' idx' → logprob: -10.884819030761719
    4. '	idx' → logprob: -12.009819030761719
    5. '+' → logprob: -12.134819030761719
    6. '),' → logprob: -12.259819030761719
    7. '(idx' → logprob: -12.384819030761719
    8. '```' → logprob: -12.509819030761719
    9. ']),' → logprob: -12.634819030761719
    10. '[
' → logprob: -13.134819030761719

Token 234: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005910403560847044
    2. '2' → logprob: -8.250591278076172
    3. ']),' → logprob: -8.750591278076172
    4. '[' → logprob: -9.375591278076172
    5. 'idx' → logprob: -9.875591278076172
    6. ']+' → logprob: -11.375591278076172
    7. '   ' → logprob: -11.875591278076172
    8. '])' → logprob: -12.375591278076172
    9. '3' → logprob: -13.000591278076172
    10. ' idx' → logprob: -13.125591278076172

Token 235: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.5577775128767826e-06
    2. '3' → logprob: -12.625005722045898
    3. ' ' → logprob: -14.000005722045898
    4. '4' → logprob: -14.500005722045898
    5. '   ' → logprob: -15.250005722045898
    6. '
' → logprob: -15.375005722045898
    7. '1' → logprob: -16.1250057220459
    8. '```' → logprob: -16.1250057220459
    9. '

' → logprob: -16.8750057220459
    10. '-' → logprob: -17.3750057220459

Token 236: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00015467056073248386
    2. ']),' → logprob: -9.625154495239258
    3. '],' → logprob: -10.250154495239258
    4. ',' → logprob: -10.500154495239258
    5. ' ),' → logprob: -11.125154495239258
    6. ')' → logprob: -12.875154495239258
    7. ',),' → logprob: -13.500154495239258
    8. '           ' → logprob: -13.875154495239258
    9. ' ' → logprob: -13.875154495239258
    10. '),(' → logprob: -14.000154495239258

Token 237: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.008616226725280285
    2. ' float' → logprob: -4.7586164474487305
    3. 'int' → logprob: -14.50861644744873
    4. '(float' → logprob: -14.63361644744873
    5. ',float' → logprob: -14.75861644744873
    6. '=float' → logprob: -15.25861644744873
    7. '	float' → logprob: -16.508615493774414
    8. '<float' → logprob: -17.758615493774414
    9. '   ' → logprob: -18.758615493774414
    10. 'phi' → logprob: -19.383615493774414

Token 238: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0001037815964082256
    2. '(' → logprob: -9.375103950500488
    3. ' (' → logprob: -11.750103950500488
    4. '[input' → logprob: -11.875103950500488
    5. 'input' → logprob: -12.875103950500488
    6. '(
' → logprob: -14.625103950500488
    7. ',input' → logprob: -15.125103950500488
    8. ' input' → logprob: -15.625103950500488
    9. '<input' → logprob: -15.875103950500488
    10. '=input' → logprob: -16.500102996826172

Token 239: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.676981345459353e-06
    2. 'idx' → logprob: -12.750005722045898
    3. '[' → logprob: -13.375005722045898
    4. '(idx' → logprob: -14.375005722045898
    5. '[
' → logprob: -15.250005722045898
    6. ')[' → logprob: -16.7500057220459
    7. ')' → logprob: -16.7500057220459
    8. '   ' → logprob: -17.1250057220459
    9. '[input' → logprob: -17.2500057220459
    10. ' [' → logprob: -17.3750057220459

Token 240: '+' (ID: 10)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.10036572068929672
    2. 'idx' → logprob: -2.35036563873291
    3. '+' → logprob: -9.35036563873291
    4. ' idx' → logprob: -10.10036563873291
    5. '_idx' → logprob: -11.60036563873291
    6. 'Idx' → logprob: -11.60036563873291
    7. '	idx' → logprob: -12.35036563873291
    8. '[' → logprob: -12.47536563873291
    9. '(idx' → logprob: -13.35036563873291
    10. '   ' → logprob: -14.10036563873291

Token 241: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.43486395478248596
    2. 'idx' → logprob: -1.0598639249801636
    3. '1' → logprob: -5.434864044189453
    4. '3' → logprob: -6.934864044189453
    5. ' idx' → logprob: -7.809864044189453
    6. '(idx' → logprob: -8.684864044189453
    7. '4' → logprob: -9.684864044189453
    8. '[idx' → logprob: -9.809864044189453
    9. ' ' → logprob: -10.559864044189453
    10. '   ' → logprob: -10.684864044189453

Token 242: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002367562847211957
    2. ');' → logprob: -6.6273674964904785
    3. ')
' → logprob: -6.8773674964904785
    4. '])' → logprob: -12.752367973327637
    5. ' )' → logprob: -12.877367973327637
    6. ')

' → logprob: -13.502367973327637
    7. '),' → logprob: -13.877367973327637
    8. ')
' → logprob: -14.502367973327637
    9. '))' → logprob: -15.002367973327637
    10. '<|end|>' → logprob: -15.252367973327637

Token 243: '           ' (ID: 352)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.0079139471054077
    2. '<|end|>' → logprob: -1.5079139471054077
    3. 'idx' → logprob: -1.6329139471054077
    4. '[idx' → logprob: -2.5079140663146973
    5. '
' → logprob: -2.7579140663146973
    6. '       ' → logprob: -3.8829140663146973
    7. '	idx' → logprob: -4.132914066314697
    8. '   ' → logprob: -4.132914066314697
    9. '           ' → logprob: -5.007914066314697
    10. '<|end|>' → logprob: -5.382914066314697

Token 244: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.03827064484357834
    2. 'idx' (adapté à ' idx') → logprob: -3.2882707118988037
    3. '       ' → logprob: -9.413270950317383
    4. '           ' → logprob: -9.538270950317383
    5. '	idx' → logprob: -9.913270950317383
    6. '
' → logprob: -11.038270950317383
    7. '[idx' → logprob: -12.163270950317383
    8. '   ' → logprob: -13.163270950317383
    9. '_idx' → logprob: -14.288270950317383
    10. '(idx' → logprob: -14.538270950317383

Token 245: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.5451681974809617e-05
    2. ' +=' → logprob: -11.250015258789062
    3. ']+=' → logprob: -13.500015258789062
    4. '+' → logprob: -14.250015258789062
    5. '   ' → logprob: -14.875015258789062
    6. '```' → logprob: -17.625015258789062
    7. '+=(' → logprob: -18.750015258789062
    8. '+='' → logprob: -18.875015258789062
    9. '+="' → logprob: -19.375015258789062
    10. '	' → logprob: -19.875015258789062

Token 246: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '' → logprob: -17.687501907348633
    4. '   ' → logprob: -17.875001907348633
    5. '```' → logprob: -18.000001907348633
    6. '۴' → logprob: -18.625001907348633
    7. '４' → logprob: -18.812501907348633
    8. '৪' → logprob: -19.312501907348633
    9. '٤' → logprob: -19.437501907348633
    10. '४' → logprob: -19.875001907348633

Token 247: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017588881019037217
    2. '       ' → logprob: -9.625175476074219
    3. 't' → logprob: -10.500175476074219
    4. '            
' → logprob: -10.500175476074219
    5. '   ' → logprob: -10.875175476074219
    6. '<|end|>' → logprob: -11.250175476074219
    7. '
' → logprob: -12.500175476074219
    8. '          ' → logprob: -12.750175476074219
    9. 'tel' → logprob: -13.000175476074219
    10. 'tele' → logprob: -13.375175476074219

Token 248: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.394135612528771e-05
    2. '       ' → logprob: -10.750043869018555
    3. '   ' → logprob: -12.250043869018555
    4. '<|end|>' → logprob: -12.250043869018555
    5. 't' → logprob: -12.375043869018555
    6. '            
' → logprob: -12.625043869018555
    7. '		' → logprob: -13.875043869018555
    8. '          ' → logprob: -14.125043869018555
    9. '	       ' → logprob: -14.250043869018555
    10. '	   ' → logprob: -14.375043869018555

Token 249: ' telesc' (ID: 109816)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5122894644737244
    2. 'tel' → logprob: -1.1372895240783691
    3. 't' → logprob: -3.387289524078369
    4. ' telesc' → logprob: -3.637289524078369
    5. 'tele' → logprob: -4.762289524078369
    6. 'direction' → logprob: -5.262289524078369
    7. 'te' → logprob: -6.012289524078369
    8. '       ' → logprob: -6.887289524078369
    9. 'd' → logprob: -7.387289524078369
    10. ' direction' → logprob: -7.762289524078369

Token 250: 'opes' (ID: 25986)
  Prédit: 'opes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opes' → logprob: -0.017420729622244835
    2. 'sc' → logprob: -4.142420768737793
    3. 'esc' → logprob: -6.767420768737793
    4. 'op' → logprob: -9.017420768737793
    5. '```' → logprob: -10.767420768737793
    6. 'ops' → logprob: -10.767420768737793
    7. 'osc' → logprob: -11.142420768737793
    8. 'es' → logprob: -11.267420768737793
    9. '_sc' → logprob: -11.392420768737793
    10. 't' → logprob: -12.517420768737793

Token 251: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.372294698550832e-06
    2. '.' → logprob: -11.750009536743164
    3. ' .' → logprob: -14.375009536743164
    4. '.app' → logprob: -15.125009536743164
    5. '.ap' → logprob: -15.250009536743164
    6. 'append' → logprob: -15.500009536743164
    7. '.extend' → logprob: -15.875009536743164
    8. ').' → logprob: -17.875009536743164
    9. '.add' → logprob: -18.125009536743164
    10. '.setdefault' → logprob: -18.750009536743164

Token 252: '(' (ID: 7)
  Prédit: '(norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(norm' → logprob: -0.5766746997833252
    2. '((' → logprob: -0.8266746997833252
    3. '(' → logprob: -7.451674461364746
    4. ' (' → logprob: -10.076674461364746
    5. '(normal' → logprob: -10.076674461364746
    6. '({'' → logprob: -10.701674461364746
    7. 'norm' → logprob: -10.951674461364746
    8. '(n' → logprob: -11.451674461364746
    9. '(((' → logprob: -12.076674461364746
    10. ' ((' → logprob: -12.326674461364746

Token 253: ' (' (ID: 350)
  Prédit: '(norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(norm' → logprob: -0.0033004588913172483
    2. '(tx' → logprob: -6.378300666809082
    3. '((' → logprob: -7.128300666809082
    4. ' (' → logprob: -7.753300666809082
    5. 'norm' → logprob: -8.878300666809082
    6. '(t' → logprob: -9.753300666809082
    7. '(' → logprob: -9.878300666809082
    8. '(nx' → logprob: -10.128300666809082
    9. '(n' → logprob: -10.378300666809082
    10. '(normal' → logprob: -10.878300666809082

Token 254: 'norm' (ID: 30970)
  Prédit: 'norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.04278471693396568
    2. '(norm' → logprob: -3.6677846908569336
    3. 'tx' → logprob: -4.917784690856934
    4. '(tx' → logprob: -4.917784690856934
    5. ' norm' → logprob: -6.667784690856934
    6. ' (' → logprob: -8.417784690856934
    7. '(t' → logprob: -9.667784690856934
    8. '(' → logprob: -9.917784690856934
    9. '(nx' → logprob: -10.667784690856934
    10. ')' → logprob: -10.667784690856934

Token 255: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0027513804379850626
    2. '(' → logprob: -6.627751350402832
    3. '(tx' → logprob: -6.627751350402832
    4. ')((' → logprob: -9.752751350402832
    5. ')' → logprob: -11.627751350402832
    6. '<|end|>' → logprob: -11.752751350402832
    7. ' (' → logprob: -12.002751350402832
    8. ' ((' → logprob: -12.002751350402832
    9. '([' → logprob: -13.002751350402832
    10. '(
' → logprob: -13.002751350402832

Token 256: 'tx' (ID: 6874)
  Prédit: 'tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -3.650518920039758e-06
    2. '(tx' → logprob: -12.625003814697266
    3. ' tx' → logprob: -16.250003814697266
    4. 'int' → logprob: -16.250003814697266
    5. '(' → logprob: -17.500003814697266
    6. '	tx' → logprob: -18.750003814697266
    7. '   ' → logprob: -19.625003814697266
    8. 'txt' → logprob: -19.750003814697266
    9. '
' → logprob: -20.125003814697266
    10. '

' → logprob: -20.500003814697266

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012035090912831947
    2. ',
' → logprob: -9.750120162963867
    3. ' ,' → logprob: -10.125120162963867
    4. '[' → logprob: -11.625120162963867
    5. ',t' → logprob: -12.000120162963867
    6. ',y' → logprob: -13.000120162963867
    7. ',

' → logprob: -13.500120162963867
    8. '),' → logprob: -13.625120162963867
    9. '<|end|>' → logprob: -14.375120162963867
    10. '
' → logprob: -14.750120162963867

Token 258: 'ty' (ID: 1206)
  Prédit: 'ty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ty' → logprob: -2.15310683415737e-05
    2. ' ty' → logprob: -10.750021934509277
    3. '.ty' → logprob: -19.62502098083496
    4. '
' → logprob: -20.25002098083496
    5. 'tz' → logprob: -20.50002098083496
    6. '   ' → logprob: -20.62502098083496
    7. '_ty' → logprob: -20.75002098083496
    8. '0' → logprob: -21.00002098083496
    9. 'tx' → logprob: -21.75002098083496
    10. 'Ty' → logprob: -21.87502098083496

Token 259: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.005384587682783604
    2. ',' → logprob: -5.25538444519043
    3. ' ,' → logprob: -9.00538444519043
    4. ')),' → logprob: -11.00538444519043
    5. ',
' → logprob: -12.75538444519043
    6. '   ' → logprob: -13.63038444519043
    7. '
' → logprob: -13.63038444519043
    8. ',tp' → logprob: -13.88038444519043
    9. 'tz' → logprob: -14.00538444519043
    10. '

' → logprob: -14.00538444519043

Token 260: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.011063262820243835
    2. 'tz' → logprob: -4.511063098907471
    3. 'nz' → logprob: -12.761063575744629
    4. ' tz' → logprob: -13.011063575744629
    5. ',z' → logprob: -13.886063575744629
    6. 'sz' → logprob: -13.886063575744629
    7. 'pz' → logprob: -13.886063575744629
    8. '
' → logprob: -14.136063575744629
    9. 't' → logprob: -14.261063575744629
    10. '

' → logprob: -14.511063575744629

Token 261: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.03371521085500717
    2. '),' → logprob: -3.40871524810791
    3. '))' → logprob: -10.90871524810791
    4. ' ' → logprob: -11.03371524810791
    5. ')),
' → logprob: -11.28371524810791
    6. ',' → logprob: -11.78371524810791
    7. ')' → logprob: -12.15871524810791
    8. '       ' → logprob: -12.90871524810791
    9. '           ' → logprob: -13.15871524810791
    10. '   ' → logprob: -13.15871524810791

Token 262: ' phi' (ID: 40391)
  Prédit: 'phi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phi' → logprob: -0.015570069663226604
    2. ' phi' → logprob: -4.390570163726807
    3. 'math' → logprob: -5.890570163726807
    4. ' math' → logprob: -8.515569686889648
    5. 'float' → logprob: -9.515569686889648
    6. '(phi' → logprob: -12.265569686889648
    7. ' float' → logprob: -12.765569686889648
    8. 'ph' → logprob: -13.390569686889648
    9. '   ' → logprob: -13.765569686889648
    10. ' ' → logprob: -14.515569686889648

Token 263: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006632337463088334
    2. '))' → logprob: -7.3756632804870605
    3. ' )' → logprob: -10.250662803649902
    4. ')
' → logprob: -14.500662803649902
    5. '   ' → logprob: -15.875662803649902
    6. ',' → logprob: -16.12566375732422
    7. ' ))' → logprob: -16.12566375732422
    8. ')))' → logprob: -16.25066375732422
    9. ')

' → logprob: -16.75066375732422
    10. ',)' → logprob: -16.75066375732422

Token 264: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010247035970678553
    2. '       ' → logprob: -9.500102043151855
    3. ' )' → logprob: -10.875102043151855
    4. ')
' → logprob: -12.000102043151855
    5. '<|end|>' → logprob: -13.250102043151855
    6. '   ' → logprob: -15.375102043151855
    7. '           ' → logprob: -15.625102043151855
    8. '))' → logprob: -15.750102043151855
    9. '<|end|>' → logprob: -17.250102996826172
    10. '),' → logprob: -17.375102996826172

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1449107676744461
    2. '
' → logprob: -2.6449108123779297
    3. 'for' → logprob: -3.7699108123779297
    4. ' for' → logprob: -3.8949108123779297
    5. '        
' → logprob: -4.64491081237793
    6. '<|end|>' → logprob: -4.76991081237793
    7. '```' → logprob: -7.76991081237793
    8. ')' → logprob: -8.51991081237793
    9. '   ' → logprob: -8.64491081237793
    10. '    
' → logprob: -8.89491081237793

Token 266: ' visible' (ID: 15263)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2919265925884247
    2. 'for' → logprob: -2.416926622390747
    3. ' for' → logprob: -2.791926622390747
    4. '        
' → logprob: -3.541926622390747
    5. 'results' → logprob: -3.666926622390747
    6. 'result' → logprob: -4.791926383972168
    7. 'matches' → logprob: -5.041926383972168
    8. ' results' → logprob: -5.541926383972168
    9. '   ' → logprob: -5.791926383972168
    10. '
' → logprob: -5.791926383972168

Token 267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43630048632621765
    2. ' =' → logprob: -1.06130051612854
    3. '=[]' → logprob: -6.061300277709961
    4. '_count' → logprob: -6.311300277709961
    5. '_counts' → logprob: -6.686300277709961
    6. 's' → logprob: -6.686300277709961
    7. '_angles' → logprob: -8.186300277709961
    8. 'count' → logprob: -8.686300277709961
    9. 'counts' → logprob: -9.811300277709961
    10. '_st' → logprob: -9.811300277709961

Token 268: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5527726411819458
    2. '0' → logprob: -1.0527726411819458
    3. '[' → logprob: -2.6777725219726562
    4. 'set' → logprob: -6.177772521972656
    5. ' []' → logprob: -6.177772521972656
    6. ' ' → logprob: -6.427772521972656
    7. ' [' → logprob: -7.302772521972656
    8. '[]
' → logprob: -8.052772521972656
    9. '[m' → logprob: -9.552772521972656
    10. ' set' → logprob: -10.427772521972656

Token 269: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.117345684382599e-05
    2. '(' → logprob: -11.125020980834961
    3. '()
' → logprob: -12.500020980834961
    4. ' ()' → logprob: -14.500020980834961
    5. '();' → logprob: -15.000020980834961
    6. '(range' → logprob: -15.000020980834961
    7. '([]' → logprob: -15.125020980834961
    8. '()]' → logprob: -15.250020980834961
    9. '()

' → logprob: -15.500020980834961
    10. '()\' → logprob: -15.750020980834961

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004940562648698688
    2. ' for' → logprob: -8.375494003295898
    3. 'for' → logprob: -8.500494003295898
    4. '        
' → logprob: -10.375494003295898
    5. '
' → logprob: -10.750494003295898
    6. '<|end|>' → logprob: -13.250494003295898
    7. '   ' → logprob: -13.500494003295898
    8. '	for' → logprob: -14.000494003295898
    9. '	' → logprob: -14.250494003295898
    10. '	   ' → logprob: -14.875494003295898

Token 271: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09870491921901703
    2. 'for' (adapté à ' for') → logprob: -2.8487048149108887
    3. ' for' → logprob: -3.3487048149108887
    4. '   ' → logprob: -7.723704814910889
    5. '        
' → logprob: -8.098705291748047
    6. '\' → logprob: -10.473705291748047
    7. ' \' → logprob: -10.473705291748047
    8. ' ' → logprob: -10.598705291748047
    9. '\t' → logprob: -10.598705291748047
    10. '  ' → logprob: -11.223705291748047

Token 272: ' i' (ID: 575)
  Prédit: ' star'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' star' → logprob: -1.168982744216919
    2. ' t' → logprob: -1.418982744216919
    3. ' i' → logprob: -2.168982744216919
    4. 't' → logprob: -2.168982744216919
    5. 'i' → logprob: -2.668982744216919
    6. ' telescope' → logprob: -3.168982744216919
    7. 'star' → logprob: -3.293982744216919
    8. ' (' → logprob: -3.793982744216919
    9. '(' → logprob: -4.54398250579834
    10. ' s' → logprob: -4.91898250579834

Token 273: ',s' (ID: 20379)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14704588055610657
    2. 'in' → logprob: -2.022045850753784
    3. ',' → logprob: -6.022046089172363
    4. ' ' → logprob: -6.397046089172363
    5. ' ,' → logprob: -8.397046089172363
    6. 'range' → logprob: -11.897046089172363
    7. '_' → logprob: -12.147046089172363
    8. '  ' → logprob: -12.272046089172363
    9. ',in' → logprob: -12.272046089172363
    10. '_in' → logprob: -12.897046089172363

Token 274: ' in' (ID: 306)
  Prédit: 'tar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tar' → logprob: -0.0718189924955368
    2. 't' → logprob: -2.6968190670013428
    3. ' in' → logprob: -6.821818828582764
    4. ',' → logprob: -7.821818828582764
    5. 'in' → logprob: -7.946818828582764
    6. 'tan' → logprob: -11.321819305419922
    7. 'ta' → logprob: -11.821819305419922
    8. 'stars' → logprob: -12.321819305419922
    9. 'star' → logprob: -13.071819305419922
    10. '_in' → logprob: -13.696819305419922

Token 275: ' enumerate' (ID: 29671)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6673482656478882
    2. 'in' → logprob: -1.1673482656478882
    3. ' in' → logprob: -2.1673483848571777
    4. ' range' → logprob: -3.7923483848571777
    5. 'n' → logprob: -3.9173483848571777
    6. 'enumer' → logprob: -4.417348384857178
    7. ' enumerate' → logprob: -5.542348384857178
    8. 'stars' → logprob: -6.417348384857178
    9. 't' → logprob: -8.29234790802002
    10. ' stars' → logprob: -8.54234790802002

Token 276: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.12849543988704681
    2. 'stars' → logprob: -2.128495454788208
    3. 'range' → logprob: -7.253495216369629
    4. '(range' → logprob: -7.628495216369629
    5. ' stars' → logprob: -8.378495216369629
    6. '(' → logprob: -9.878495216369629
    7. ' (' → logprob: -10.003495216369629
    8. '(s' → logprob: -11.253495216369629
    9. 'st' → logprob: -11.378495216369629
    10. ' range' → logprob: -12.628495216369629

Token 277: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.0015023599844425917
    2. 'ar' → logprob: -7.126502513885498
    3. 'stars' → logprob: -7.376502513885498
    4. ')' → logprob: -11.62650203704834
    5. ' stars' → logprob: -11.87650203704834
    6. '   ' → logprob: -12.12650203704834
    7. '       ' → logprob: -12.25150203704834
    8. 's' → logprob: -12.37650203704834
    9. 'arts' → logprob: -12.37650203704834
    10. 'rs' → logprob: -12.62650203704834

Token 278: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12702512741088867
    2. '):' → logprob: -2.1270251274108887
    3. '):
' → logprob: -9.377025604248047
    4. ' ):
' → logprob: -12.252025604248047
    5. ':' → logprob: -12.627025604248047
    6. '):

' → logprob: -13.502025604248047
    7. ' ):' → logprob: -13.877025604248047
    8. ')' → logprob: -14.127025604248047
    9. '   ' → logprob: -14.502025604248047
    10. '       ' → logprob: -14.752025604248047

Token 279: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004934277385473251
    2. '
' → logprob: -6.629934310913086
    3. '       ' → logprob: -6.879934310913086
    4. ',' → logprob: -7.004934310913086
    5. '   ' → logprob: -7.879934310913086
    6. '            
' → logprob: -7.879934310913086
    7. ' for' → logprob: -8.129934310913086
    8. '    
' → logprob: -9.254934310913086
    9. ':
' → logprob: -9.879934310913086
    10. '  
' → logprob: -10.004934310913086

Token 280: ' for' (ID: 395)
  Prédit: ' visible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visible' → logprob: -0.9032345414161682
    2. '           ' → logprob: -1.1532344818115234
    3. ' for' → logprob: -1.5282344818115234
    4. ' found' → logprob: -4.028234481811523
    5. '   ' → logprob: -4.403234481811523
    6. 'visible' → logprob: -4.778234481811523
    7. 'for' (adapté à ' for') → logprob: -5.153234481811523
    8. ' is' → logprob: -6.653234481811523
    9. ' can' → logprob: -6.653234481811523
    10. ' ' → logprob: -6.653234481811523

Token 281: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5415308475494385
    2. 't' → logprob: -1.0415308475494385
    3. ' j' → logprob: -3.4165308475494385
    4. 'j' → logprob: -3.7915308475494385
    5. '(t' → logprob: -5.041530609130859
    6. ' (' → logprob: -6.791530609130859
    7. '(' → logprob: -7.666530609130859
    8. 'tel' → logprob: -8.29153060913086
    9. '(j' → logprob: -9.04153060913086
    10. '   ' → logprob: -9.04153060913086

Token 282: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0927656888961792
    2. ',' → logprob: -2.8427658081054688
    3. 's' → logprob: -3.8427658081054688
    4. ' ,' → logprob: -5.467765808105469
    5. ',t' → logprob: -7.342765808105469
    6. 'in' → logprob: -7.467765808105469
    7. '_idx' → logprob: -7.717765808105469
    8. ',v' → logprob: -7.842765808105469
    9. ' ' → logprob: -8.092765808105469
    10. ',s' → logprob: -8.342765808105469

Token 283: 'phi' (ID: 33893)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.792175829410553
    2. '(t' → logprob: -1.1671757698059082
    3. '(s' → logprob: -2.042175769805908
    4. '(phi' → logprob: -3.042175769805908
    5. ' (' → logprob: -3.417175769805908
    6. '(st' → logprob: -4.792175769805908
    7. 'tel' → logprob: -4.917175769805908
    8. '(ts' → logprob: -6.542175769805908
    9. '(p' → logprob: -6.542175769805908
    10. 't' → logprob: -7.042175769805908

Token 284: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.633867084980011
    2. 'in' → logprob: -0.758867084980011
    3. ',' → logprob: -7.008867263793945
    4. 't' → logprob: -9.258867263793945
    5. ')' → logprob: -9.758867263793945
    6. '   ' → logprob: -10.258867263793945
    7. 's' → logprob: -10.258867263793945
    8. '
' → logprob: -10.508867263793945
    9. '),' → logprob: -11.883867263793945
    10. ' ,' → logprob: -12.008867263793945

Token 285: ' telesc' (ID: 109816)
  Prédit: ' telesc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' telesc' → logprob: -0.524739146232605
    2. 'tel' → logprob: -0.899739146232605
    3. 'tele' → logprob: -6.5247392654418945
    4. 't' → logprob: -9.024739265441895
    5. 'enumer' → logprob: -11.899739265441895
    6. '(t' → logprob: -12.524739265441895
    7. ' tel' → logprob: -12.774739265441895
    8. 'te' → logprob: -13.274739265441895
    9. 'in' → logprob: -13.274739265441895
    10. '\t' → logprob: -13.399739265441895

Token 286: 'opes' (ID: 25986)
  Prédit: 'opes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opes' → logprob: -1.1994775377388578e-05
    2. 'sc' → logprob: -11.875012397766113
    3. 'op' → logprob: -12.375012397766113
    4. 'esc' → logprob: -15.625012397766113
    5. 'ope' → logprob: -15.875012397766113
    6. 'es' → logprob: -16.500011444091797
    7. 'oped' → logprob: -16.625011444091797
    8. 'ops' → logprob: -16.625011444091797
    9. '   ' → logprob: -17.125011444091797
    10. '       ' → logprob: -17.125011444091797

Token 287: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5760567784309387
    2. ':
' → logprob: -0.8260567784309387
    3. '           ' → logprob: -9.701056480407715
    4. ':
' → logprob: -10.826056480407715
    5. ':

' → logprob: -11.201056480407715
    6. '):
' → logprob: -11.701056480407715
    7. '       ' → logprob: -12.076056480407715
    8. '               ' → logprob: -12.951056480407715
    9. ',' → logprob: -13.076056480407715
    10. ' :
' → logprob: -13.826056480407715

Token 288: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03685403987765312
    2. '           ' → logprob: -3.4118540287017822
    3. ':' → logprob: -7.286854267120361
    4. '                
' → logprob: -7.786854267120361
    5. ':
' → logprob: -7.911854267120361
    6. ',' → logprob: -7.911854267120361
    7. '            
' → logprob: -8.161853790283203
    8. '
' → logprob: -8.536853790283203
    9. '       ' → logprob: -8.661853790283203
    10. '<|end|>' → logprob: -9.411853790283203

Token 289: ' val' (ID: 1459)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.1184577941894531
    2. '               ' → logprob: -1.3684577941894531
    3. ' d' → logprob: -1.6184577941894531
    4. 'd' → logprob: -3.118457794189453
    5. ' angle' → logprob: -3.618457794189453
    6. ' dot' → logprob: -3.618457794189453
    7. 'dp' → logprob: -3.868457794189453
    8. ' cos' → logprob: -4.243457794189453
    9. '                   ' → logprob: -4.368457794189453
    10. 'dot' → logprob: -4.618457794189453

Token 290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804229199886322
    2. ' =' → logprob: -3.2880423069000244
    3. '   ' → logprob: -14.163042068481445
    4. '=d' → logprob: -16.163042068481445
    5. 'dot' → logprob: -17.538042068481445
    6. ' ' → logprob: -18.163042068481445
    7. '    ' → logprob: -18.288042068481445
    8. '  ' → logprob: -19.413042068481445
    9. ' dot' → logprob: -19.663042068481445
    10. '=line' → logprob: -19.663042068481445

Token 291: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.029937123879790306
    2. ' dot' → logprob: -3.5299370288848877
    3. 'math' → logprob: -9.154936790466309
    4. '1' → logprob: -10.154936790466309
    5. ' math' → logprob: -11.154936790466309
    6. '(dot' → logprob: -11.404936790466309
    7. ' ' → logprob: -11.904936790466309
    8. '   ' → logprob: -12.654936790466309
    9. 'max' → logprob: -12.779936790466309
    10. 'cos' → logprob: -13.904936790466309

Token 292: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -7.469590491382405e-05
    2. 's' → logprob: -10.12507438659668
    3. '(t' → logprob: -10.62507438659668
    4. '(' → logprob: -11.62507438659668
    5. ' (' → logprob: -13.75007438659668
    6. 't' → logprob: -16.00007438659668
    7. '(
' → logprob: -16.62507438659668
    8. '((' → logprob: -17.75007438659668
    9. '`s' → logprob: -18.37507438659668
    10. ' s' → logprob: -18.62507438659668

Token 293: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.282031774520874
    2. ',' → logprob: -1.407031774520874
    3. ' ,' → logprob: -7.282032012939453
    4. 't' → logprob: -8.907032012939453
    5. ' t' → logprob: -9.907032012939453
    6. ',
' → logprob: -12.282032012939453
    7. '	t' → logprob: -14.032032012939453
    8. ',s' → logprob: -14.282032012939453
    9. '(t' → logprob: -15.657032012939453
    10. '(' → logprob: -15.657032012939453

Token 294: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0182963777333498
    2. ')
' → logprob: -4.018296241760254
    3. ')>' → logprob: -9.643296241760254
    4. ' )' → logprob: -10.018296241760254
    5. ')>=' → logprob: -11.393296241760254
    6. ')

' → logprob: -12.018296241760254
    7. ')<' → logprob: -12.268296241760254
    8. ' )
' → logprob: -12.393296241760254
    9. ')`' → logprob: -12.393296241760254
    10. '())' → logprob: -14.018296241760254

Token 295: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01581474393606186
    2. ' <=' → logprob: -5.265814781188965
    3. '
' → logprob: -5.890814781188965
    4. ' >=' → logprob: -6.015814781188965
    5. '<|end|>' → logprob: -6.765814781188965
    6. '       ' → logprob: -7.015814781188965
    7. ' if' → logprob: -7.640814781188965
    8. '  
' → logprob: -7.765814781188965
    9. ' >' → logprob: -7.765814781188965
    10. '           ' → logprob: -7.765814781188965

Token 296: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5112097859382629
    2. ' if' → logprob: -1.2612097263336182
    3. 'import' → logprob: -3.261209726333618
    4. 'if' → logprob: -3.386209726333618
    5. 'angle' → logprob: -4.011209964752197
    6. ' angle' → logprob: -4.636209964752197
    7. '
' → logprob: -5.261209964752197
    8. 'theta' → logprob: -6.136209964752197
    9. ' import' → logprob: -6.636209964752197
    10. 'cos' → logprob: -7.136209964752197

Token 297: ' Clamp' (ID: 191815)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0052814483642578
    2. ' if' → logprob: -1.2552814483642578
    3. 'import' → logprob: -1.3802814483642578
    4. 'angle' → logprob: -3.255281448364258
    5. '               ' → logprob: -3.505281448364258
    6. ' angle' → logprob: -5.005281448364258
    7. 'cos' → logprob: -5.255281448364258
    8. ' import' → logprob: -5.630281448364258
    9. 'from' → logprob: -5.755281448364258
    10. ' acos' → logprob: -5.880281448364258

Token 298: ' to' (ID: 316)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.05542333796620369
    2. ' val' → logprob: -3.4304232597351074
    3. ' =' → logprob: -4.305423259735107
    4. '               ' → logprob: -5.430423259735107
    5. '=' → logprob: -5.930423259735107
    6. '(val' → logprob: -8.055423736572266
    7. ',val' → logprob: -9.055423736572266
    8. 'min' → logprob: -9.180423736572266
    9. '_val' → logprob: -9.180423736572266
    10. ' to' → logprob: -9.680423736572266

Token 299: ' avoid' (ID: 8397)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16292916238307953
    2. '-' → logprob: -2.037929058074951
    3. 'max' → logprob: -4.912929058074951
    4. ' ' → logprob: -5.412929058074951
    5. 'min' → logprob: -5.537929058074951
    6. ' max' → logprob: -6.162929058074951
    7. ' min' → logprob: -6.412929058074951
    8. ' -' → logprob: -7.537929058074951
    9. '               ' → logprob: -11.53792953491211
    10. 'val' → logprob: -12.78792953491211

Token 300: ' floating' (ID: 35887)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7026244401931763
    2. '1' → logprob: -0.8276244401931763
    3. 'math' → logprob: -3.2026243209838867
    4. '-' → logprob: -4.327624320983887
    5. ' -' → logprob: -5.077624320983887
    6. ' ' → logprob: -5.202624320983887
    7. ' acos' → logprob: -7.077624320983887
    8. ' max' → logprob: -7.452624320983887
    9. 'max' → logprob: -8.952624320983887
    10. ' min' → logprob: -9.077624320983887

Token 301: ' error' (ID: 2915)
  Prédit: ' point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -1.0623499155044556
    2. 'point' → logprob: -1.0623499155044556
    3. '-point' → logprob: -1.3123499155044556
    4. ' errors' → logprob: -3.687349796295166
    5. '_point' → logprob: -4.437349796295166
    6. 'errors' → logprob: -7.187349796295166
    7. '(' → logprob: -8.062350273132324
    8. '   ' → logprob: -8.437350273132324
    9. ' error' → logprob: -8.437350273132324
    10. ' math' → logprob: -8.687350273132324

Token 302: ' out' (ID: 842)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012424650602042675
    2. 'val' → logprob: -5.012424468994141
    3. ' =' → logprob: -6.887424468994141
    4. ' if' → logprob: -6.887424468994141
    5. ' val' → logprob: -6.887424468994141
    6. '=' → logprob: -7.012424468994141
    7. '                   ' → logprob: -7.762424468994141
    8. ',' → logprob: -8.01242446899414
    9. 'if' → logprob: -8.51242446899414
    10. '           ' → logprob: -9.13742446899414

Token 303: ' of' (ID: 328)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.2628853917121887
    2. 'puts' → logprob: -2.262885332107544
    3. 'of' → logprob: -2.512885332107544
    4. ' of' → logprob: -3.637885332107544
    5. '_of' → logprob: -4.887885570526123
    6. 'side' → logprob: -5.512885570526123
    7. '0' → logprob: -5.887885570526123
    8. 'Of' → logprob: -7.137885570526123
    9. '-of' → logprob: -7.137885570526123
    10. 's' → logprob: -7.512885570526123

Token 304: ' acos' (ID: 185572)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026407355442643166
    2. '[-' → logprob: -4.401407241821289
    3. 'domain' → logprob: -5.276407241821289
    4. 'bounds' → logprob: -5.776407241821289
    5. '1' → logprob: -5.901407241821289
    6. '-' → logprob: -6.776407241821289
    7. 'bound' → logprob: -7.401407241821289
    8. ' range' → logprob: -7.526407241821289
    9. '-range' → logprob: -8.151407241821289
    10. '[' → logprob: -8.651407241821289

Token 305: ' domain' (ID: 11819)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.925958514213562
    2. 'val' → logprob: -1.675958514213562
    3. 'max' → logprob: -2.3009586334228516
    4. 'min' → logprob: -2.4259586334228516
    5. 'import' → logprob: -2.9259586334228516
    6. '               ' → logprob: -3.3009586334228516
    7. '(
' → logprob: -3.4259586334228516
    8. 'if' → logprob: -3.6759586334228516
    9. '(val' → logprob: -4.050958633422852
    10. '(max' → logprob: -4.550958633422852

Token 306: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47030436992645264
    2. 'val' → logprob: -1.4703043699264526
    3. ' if' → logprob: -2.595304489135742
    4. 'if' → logprob: -3.095304489135742
    5. ' val' → logprob: -4.845304489135742
    6. ')' → logprob: -6.095304489135742
    7. '                   ' → logprob: -6.220304489135742
    8. '=' → logprob: -6.470304489135742
    9. ' =' → logprob: -6.595304489135742
    10. 'import' → logprob: -6.720304489135742

Token 307: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010447168024256825
    2. ' if' → logprob: -7.501044750213623
    3. ',' → logprob: -8.126044273376465
    4. ' val' → logprob: -9.126044273376465
    5. ')' → logprob: -10.626044273376465
    6. 'val' → logprob: -11.501044273376465
    7. ' =' → logprob: -12.001044273376465
    8. ' (' → logprob: -12.126044273376465
    9. 'if' → logprob: -12.126044273376465
    10. '<|end|>' → logprob: -12.126044273376465

Token 308: ' val' (ID: 1459)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8387534022331238
    2. 'val' (adapté à ' val') → logprob: -1.0887534618377686
    3. 'if' → logprob: -2.3387534618377686
    4. ' if' → logprob: -2.5887534618377686
    5. ' val' → logprob: -3.2137534618377686
    6. 'cl' → logprob: -4.0887532234191895
    7. 'v' → logprob: -6.9637532234191895
    8. 'import' → logprob: -7.3387532234191895
    9. 'value' → logprob: -8.463753700256348
    10. 'x' → logprob: -8.838753700256348

Token 309: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052342405542731285
    2. ' =' → logprob: -5.255234241485596
    3. '=max' → logprob: -15.130233764648438
    4. '=min' → logprob: -15.755233764648438
    5. 'val' → logprob: -18.255233764648438
    6. 'if' → logprob: -18.255233764648438
    7. '   ' → logprob: -18.255233764648438
    8. '=int' → logprob: -18.630233764648438
    9. '           ' → logprob: -18.880233764648438
    10. '                   ' → logprob: -18.880233764648438

Token 310: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.8417652249336243
    2. ' max' → logprob: -1.0917651653289795
    3. 'max' → logprob: -1.8417651653289795
    4. 'min' → logprob: -2.5917651653289795
    5. '1' → logprob: -13.216765403747559
    6. ' ' → logprob: -14.966765403747559
    7. '	min' → logprob: -16.216764450073242
    8. '	max' → logprob: -16.966764450073242
    9. '0' → logprob: -17.716764450073242
    10. '   ' → logprob: -18.091764450073242

Token 311: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002614550176076591
    2. '(max' → logprob: -8.250261306762695
    3. ' (' → logprob: -15.875261306762695
    4. 'max' → logprob: -17.000261306762695
    5. '(
' → logprob: -17.750261306762695
    6. '1' → logprob: -17.875261306762695
    7. ' max' → logprob: -20.375261306762695
    8. '(

' → logprob: -20.375261306762695
    9. '(val' → logprob: -20.750261306762695
    10. '((' → logprob: -21.125261306762695

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028908250387758017
    2. 'max' → logprob: -5.877890586853027
    3. ' max' → logprob: -10.002890586853027
    4. ' ' → logprob: -10.127890586853027
    5. '(max' → logprob: -15.252890586853027
    6. '
' → logprob: -15.502890586853027
    7. 'val' → logprob: -15.752890586853027
    8. ')' → logprob: -16.252891540527344
    9. '(' → logprob: -17.127891540527344
    10. '   ' → logprob: -17.502891540527344

Token 313: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17985336482524872
    2. '.' → logprob: -1.9298533201217651
    3. ',val' → logprob: -4.054853439331055
    4. ',max' → logprob: -6.429853439331055
    5. ' ,' → logprob: -7.804853439331055
    6. ',float' → logprob: -10.429853439331055
    7. '.,' → logprob: -10.679853439331055
    8. ',value' → logprob: -12.179853439331055
    9. ',v' → logprob: -12.554853439331055
    10. ',len' → logprob: -12.679853439331055

Token 314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.1080467781284824e-05
    2. ',' → logprob: -10.125041007995605
    3. ' ' → logprob: -14.750041007995605
    4. ' ,' → logprob: -15.625041007995605
    5. ')' → logprob: -16.125041961669922
    6. '.' → logprob: -17.000041961669922
    7. '000' → logprob: -17.125041961669922
    8. '   ' → logprob: -17.250041961669922
    9. '```' → logprob: -17.500041961669922
    10. ',val' → logprob: -17.875041961669922

Token 315: ',max' (ID: 81466)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011795262806117535
    2. ',val' → logprob: -4.5117950439453125
    3. ',max' → logprob: -7.2617950439453125
    4. ' ,' → logprob: -10.136795043945312
    5. ',float' → logprob: -13.011795043945312
    6. ',value' → logprob: -14.011795043945312
    7. ',min' → logprob: -14.261795043945312
    8. 'val' → logprob: -14.636795043945312
    9. ',v' → logprob: -14.886795043945312
    10. ',len' → logprob: -15.386795043945312

Token 316: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.000506326905451715
    2. '(val' → logprob: -7.875506401062012
    3. '(' → logprob: -9.375506401062012
    4. '-' → logprob: -10.125506401062012
    5. 'val' → logprob: -14.000506401062012
    6. '```' → logprob: -16.000505447387695
    7. '-val' → logprob: -16.125505447387695
    8. '(
' → logprob: -16.375505447387695
    9. ' -' → logprob: -16.375505447387695
    10. ' (-' → logprob: -16.500505447387695

Token 317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '(' → logprob: -16.75
    4. '```' → logprob: -17.625
    5. '-' → logprob: -18.0625
    6. 'val' → logprob: -18.4375
    7. '0' → logprob: -19.1875
    8. ')' → logprob: -19.1875
    9. '１' → logprob: -19.25
    10. '۱' → logprob: -19.25

Token 318: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.612634362885728e-05
    2. ',' → logprob: -10.000076293945312
    3. '1' → logprob: -10.750076293945312
    4. ',val' → logprob: -12.500076293945312
    5. '(val' → logprob: -13.750076293945312
    6. '0' → logprob: -14.125076293945312
    7. '(' → logprob: -14.125076293945312
    8. 'val' → logprob: -14.250076293945312
    9. '```' → logprob: -14.875076293945312
    10. 'e' → logprob: -14.875076293945312

Token 319: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.125000953674316
    3. 'val' → logprob: -15.000000953674316
    4. '```' → logprob: -16.500001907348633
    5. '0' → logprob: -18.125001907348633
    6. ')' → logprob: -18.187501907348633
    7. '           ' → logprob: -18.562501907348633
    8. ',' → logprob: -18.625001907348633
    9. '   ' → logprob: -18.625001907348633
    10. 'valu' → logprob: -18.687501907348633

Token 320: ',val' (ID: 126054)
  Prédit: ',val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',val' → logprob: -0.12724295258522034
    2. ',' → logprob: -2.1272430419921875
    3. ' ,' → logprob: -8.127243041992188
    4. ',value' → logprob: -11.752243041992188
    5. '))' → logprob: -12.377243041992188
    6. ',
' → logprob: -12.752243041992188
    7. ',v' → logprob: -13.752243041992188
    8. 'val' → logprob: -13.877243041992188
    9. ',float' → logprob: -14.127243041992188
    10. ' val' → logprob: -14.627243041992188

Token 321: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.1349709928035736
    2. '))' → logprob: -2.1349709033966064
    3. '               ' → logprob: -5.0099711418151855
    4. ')
' → logprob: -7.1349711418151855
    5. ')' → logprob: -7.6349711418151855
    6. '))
' → logprob: -10.259970664978027
    7. '))

' → logprob: -11.759970664978027
    8. ' ))
' → logprob: -11.759970664978027
    9. '           ' → logprob: -12.259970664978027
    10. ')))
' → logprob: -14.134970664978027

Token 322: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000798788561951369
    2. '<|end|>' → logprob: -8.625799179077148
    3. ' angle' → logprob: -9.000799179077148
    4. ')' → logprob: -9.000799179077148
    5. ',' → logprob: -9.250799179077148
    6. 'angle' → logprob: -9.375799179077148
    7. '			' → logprob: -10.250799179077148
    8. '                
' → logprob: -10.250799179077148
    9. 'import' → logprob: -10.375799179077148
    10. '<|end|>' → logprob: -10.500799179077148

Token 323: ' ang' (ID: 2929)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.646578311920166
    2. 'angle' → logprob: -1.771578311920166
    3. 'import' → logprob: -1.896578311920166
    4. ' angle' → logprob: -2.146578311920166
    5. ' from' → logprob: -4.646578311920166
    6. ')' → logprob: -4.771578311920166
    7. ' if' → logprob: -5.021578311920166
    8. 'from' → logprob: -5.271578311920166
    9. ' import' → logprob: -5.771578311920166
    10. 'theta' → logprob: -6.021578311920166

Token 324: ' =' (ID: 314)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.10549917817115784
    2. '=' → logprob: -2.730499267578125
    3. ' =' → logprob: -3.355499267578125
    4. 'l' → logprob: -10.980499267578125
    5. '   ' → logprob: -11.230499267578125
    6. '       ' → logprob: -12.980499267578125
    7. 'les' → logprob: -13.355499267578125
    8. 'e' → logprob: -13.730499267578125
    9. '_=' → logprob: -13.980499267578125
    10. '=(' → logprob: -14.105499267578125

Token 325: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0067156096920371056
    2. ' math' → logprob: -5.006715774536133
    3. '(math' → logprob: -15.631715774536133
    4. '   ' → logprob: -16.506715774536133
    5. 'Math' → logprob: -18.881715774536133
    6. '.math' → logprob: -19.381715774536133
    7. 'import' → logprob: -19.756715774536133
    8. '_math' → logprob: -20.381715774536133
    9. ' ' → logprob: -21.131715774536133
    10. 'ma' → logprob: -21.256715774536133

Token 326: '.ac' (ID: 25905)
  Prédit: '.ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ac' → logprob: -5.512236498361744e-07
    2. '.' → logprob: -15.375000953674316
    3. '.atan' → logprob: -16.375
    4. '.de' → logprob: -16.625
    5. ' acos' → logprob: -18.375
    6. '_ac' → logprob: -19.625
    7. '	ac' → logprob: -20.25
    8. 'acos' → logprob: -20.375
    9. '```' → logprob: -20.375
    10. '.cos' → logprob: -20.625

Token 327: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.00015217094914987683
    2. 'cos' → logprob: -8.875152587890625
    3. 's' → logprob: -11.500152587890625
    4. '       ' → logprob: -14.875152587890625
    5. '```' → logprob: -15.125152587890625
    6. 'math' → logprob: -15.250152587890625
    7. '(os' → logprob: -15.750152587890625
    8. 'ос' → logprob: -15.875152587890625
    9. '	os' → logprob: -16.000152587890625
    10. '[' → logprob: -16.625152587890625

Token 328: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -1.580929347255733e-05
    2. '(' → logprob: -11.250016212463379
    3. 'val' → logprob: -13.750016212463379
    4. '[val' → logprob: -14.625016212463379
    5. ',val' → logprob: -14.750016212463379
    6. '(
' → logprob: -14.875016212463379
    7. ' (' → logprob: -14.875016212463379
    8. ' val' → logprob: -16.125015258789062
    9. '	val' → logprob: -17.625015258789062
    10. ')(' → logprob: -18.250015258789062

Token 329: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03507845476269722
    2. ')
' → logprob: -3.410078525543213
    3. '               ' → logprob: -6.910078525543213
    4. ' )' → logprob: -8.410078048706055
    5. ')*' → logprob: -8.910078048706055
    6. ' )
' → logprob: -10.160078048706055
    7. ')/' → logprob: -10.660078048706055
    8. ')
' → logprob: -11.910078048706055
    9. ')

' → logprob: -13.160078048706055
    10. ')
/' → logprob: -14.035078048706055

Token 330: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001857484458014369
    2. '<|end|>' → logprob: -7.126857280731201
    3. '                
' → logprob: -7.376857280731201
    4. '
' → logprob: -8.62685775756836
    5. '  
' → logprob: -10.00185775756836
    6. ' if' → logprob: -10.00185775756836
    7. '			' → logprob: -10.37685775756836
    8. '	           ' → logprob: -10.87685775756836
    9. '		       ' → logprob: -11.12685775756836
    10. '                ' → logprob: -11.37685775756836

Token 331: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021454982459545135
    2. ' if' → logprob: -4.021454811096191
    3. ' 
' → logprob: -7.396454811096191
    4. '       ' → logprob: -7.521454811096191
    5. ' ' → logprob: -7.771454811096191
    6. '<|end|>' → logprob: -7.896454811096191
    7. '                
' → logprob: -7.896454811096191
    8. '
' → logprob: -8.271454811096191
    9. '                ' → logprob: -8.521454811096191
    10. 'if' (adapté à ' if') → logprob: -8.771454811096191

Token 332: ' ang' (ID: 2929)
  Prédit: ' ang'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ang' → logprob: -0.3132667541503906
    2. 'ang' → logprob: -1.3132667541503906
    3. '   ' → logprob: -13.93826675415039
    4. ' ' → logprob: -14.31326675415039
    5. '               ' → logprob: -14.43826675415039
    6. 'angle' → logprob: -14.43826675415039
    7. 'angs' → logprob: -15.06326675415039
    8. 'angled' → logprob: -15.18826675415039
    9. '           ' → logprob: -15.31326675415039
    10. '(' → logprob: -15.31326675415039

Token 333: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06994521617889404
    2. '<=' → logprob: -2.6949453353881836
    3. ' <' → logprob: -12.694945335388184
    4. ')<=' → logprob: -12.694945335388184
    5. '<' → logprob: -14.069945335388184
    6. ' ' → logprob: -14.444945335388184
    7. '=' → logprob: -14.944945335388184
    8. '[' → logprob: -15.194945335388184
    9. ']<=' → logprob: -15.319945335388184
    10. ' <=",' → logprob: -15.444945335388184

Token 334: ' phi' (ID: 40391)
  Prédit: 'phi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phi' → logprob: -0.28184232115745544
    2. ' phi' → logprob: -1.4068423509597778
    3. '(phi' → logprob: -7.781842231750488
    4. '=' → logprob: -8.406842231750488
    5. ' =' → logprob: -11.406842231750488
    6. '(' → logprob: -11.906842231750488
    7. ' (' → logprob: -11.906842231750488
    8. '0' → logprob: -11.906842231750488
    9. '1' → logprob: -12.281842231750488
    10. '_phi' → logprob: -12.281842231750488

Token 335: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038823045790195465
    2. ':
' → logprob: -3.288823127746582
    3. '):' → logprob: -8.163823127746582
    4. '           ' → logprob: -8.288823127746582
    5. ' :' → logprob: -9.538823127746582
    6. '):
' → logprob: -10.788823127746582
    7. ' or' → logprob: -10.913823127746582
    8. '+' → logprob: -10.913823127746582
    9. ':
' → logprob: -10.913823127746582
    10. '       ' → logprob: -11.163823127746582

Token 336: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004039785999339074
    2. '               ' → logprob: -9.375404357910156
    3. ' visible' → logprob: -9.375404357910156
    4. 'visible' → logprob: -9.500404357910156
    5. '                       ' → logprob: -10.000404357910156
    6. '
' → logprob: -10.375404357910156
    7. '		           ' → logprob: -11.000404357910156
    8. ',' → logprob: -11.375404357910156
    9. '           ' → logprob: -11.500404357910156
    10. '                    
' → logprob: -11.750404357910156

Token 337: ' visible' (ID: 15263)
  Prédit: ' visible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visible' → logprob: -0.20408591628074646
    2. 'visible' (adapté à ' visible') → logprob: -1.7040859460830688
    3. '                   ' → logprob: -5.954085826873779
    4. '                       ' → logprob: -10.454086303710938
    5. '               ' → logprob: -11.204086303710938
    6. '.visible' → logprob: -11.329086303710938
    7. '
' → logprob: -11.954086303710938
    8. '_visible' → logprob: -12.329086303710938
    9. 'Visible' → logprob: -13.079086303710938
    10. ' visibles' → logprob: -13.704086303710938

Token 338: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.029754074290394783
    2. '.' → logprob: -3.529754161834717
    3. ' .' → logprob: -12.779753684997559
    4. 'add' → logprob: -14.904753684997559
    5. '.update' → logprob: -16.279754638671875
    6. '           ' → logprob: -16.529754638671875
    7. '.Add' → logprob: -16.779754638671875
    8. '.append' → logprob: -16.904754638671875
    9. '   ' → logprob: -17.154754638671875
    10. '.
' → logprob: -17.654754638671875

Token 339: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.034592388459714e-06
    2. '((' → logprob: -12.750005722045898
    3. '(' → logprob: -12.875005722045898
    4. ' (' → logprob: -15.000005722045898
    5. 'i' → logprob: -15.750005722045898
    6. ' i' → logprob: -18.3750057220459
    7. '(s' → logprob: -20.8750057220459
    8. '(
' → logprob: -20.8750057220459
    9. '(a' → logprob: -22.3750057220459
    10. '(I' → logprob: -22.3750057220459

Token 340: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002434699417790398
    2. ')
' → logprob: -8.375243186950684
    3. ' )' → logprob: -12.500243186950684
    4. '               ' → logprob: -12.625243186950684
    5. ')return' → logprob: -13.000243186950684
    6. '                   ' → logprob: -13.875243186950684
    7. '           ' → logprob: -14.125243186950684
    8. '       ' → logprob: -14.250243186950684
    9. '<|end|>' → logprob: -14.375243186950684
    10. ')}}' → logprob: -15.500243186950684

Token 341: '                   ' (ID: 699)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041706632822752
    2. '
' → logprob: -3.4167065620422363
    3. '<|end|>' → logprob: -5.291706562042236
    4. '        
' → logprob: -6.166706562042236
    5. '   ' → logprob: -8.541707038879395
    6. '  
' → logprob: -8.666707038879395
    7. '    
' → logprob: -8.791707038879395
    8. '\n' → logprob: -9.291707038879395
    9. '<|end|>' → logprob: -10.416707038879395
    10. '           ' → logprob: -10.791707038879395

Token 342: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002651166869327426
    2. 'break' (adapté à ' break') → logprob: -6.002651214599609
    3. '               ' → logprob: -9.25265121459961
    4. ' break' → logprob: -9.62765121459961
    5. '	break' → logprob: -13.00265121459961
    6. '				' → logprob: -13.00265121459961
    7. '                       ' → logprob: -13.12765121459961
    8. '           ' → logprob: -13.25265121459961
    9. '       ' → logprob: -13.37765121459961
    10. '                  ' → logprob: -13.50265121459961

Token 343: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007913224399089813
    2. '       ' → logprob: -5.132913112640381
    3. '<|end|>' → logprob: -6.382913112640381
    4. '        
' → logprob: -8.882913589477539
    5. '  
' → logprob: -10.132913589477539
    6. '
' → logprob: -10.507913589477539
    7. '    
' → logprob: -10.632913589477539
    8. '   ' → logprob: -11.007913589477539
    9. ' 
' → logprob: -11.257913589477539
    10. '<|end|>' → logprob: -11.632913589477539

Token 344: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0827343761920929
    2. '       ' → logprob: -2.9577343463897705
    3. '
' → logprob: -3.9577343463897705
    4. '<|end|>' → logprob: -5.20773458480835
    5. 'print' → logprob: -6.20773458480835
    6. '    
' → logprob: -7.70773458480835
    7. '        
' → logprob: -8.207734107971191
    8. '```' → logprob: -10.082734107971191
    9. '<|end|>' → logprob: -10.457734107971191
    10. ' print' → logprob: -11.082734107971191

Token 345: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016737744212150574
    2. 'print' (adapté à ' print') → logprob: -4.141737937927246
    3. '
' → logprob: -7.891737937927246
    4. '    
' → logprob: -8.641737937927246
    5. ' print' → logprob: -9.266737937927246
    6. '       ' → logprob: -10.516737937927246
    7. '```' → logprob: -11.266737937927246
    8. '        
' → logprob: -11.641737937927246
    9. '<|end|>' → logprob: -12.516737937927246
    10. '  
' → logprob: -13.016737937927246

Token 346: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -11.625009536743164
    3. 'len' → logprob: -15.000009536743164
    4. '()' → logprob: -18.875009536743164
    5. '('' → logprob: -19.125009536743164
    6. '(sorted' → logprob: -19.500009536743164
    7. ' len' → logprob: -19.875009536743164
    8. '(sum' → logprob: -19.875009536743164
    9. '(f' → logprob: -20.125009536743164
    10. '(max' → logprob: -20.500009536743164

Token 347: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.696889623621246e-06
    2. 'visible' → logprob: -12.87500286102295
    3. ')' → logprob: -17.500001907348633
    4. ' (' → logprob: -18.250001907348633
    5. ' visible' → logprob: -18.250001907348633
    6. ')(' → logprob: -18.375001907348633
    7. '.visible' → logprob: -20.750001907348633
    8. '_visible' → logprob: -20.750001907348633
    9. 'Visible' → logprob: -21.375001907348633
    10. '(vis' → logprob: -22.000001907348633

Token 348: 'visible' (ID: 20450)
  Prédit: 'visible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visible' → logprob: -0.005234121344983578
    2. '(' → logprob: -5.255234241485596
    3. ' visible' → logprob: -15.255233764648438
    4. ')' → logprob: -17.630233764648438
    5. '.visible' → logprob: -19.005233764648438
    6. '_visible' → logprob: -20.880233764648438
    7. 'visibility' → logprob: -21.380233764648438
    8. 'vis' → logprob: -21.755233764648438
    9. '```' → logprob: -21.755233764648438
    10. '
' → logprob: -22.630233764648438

Token 349: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. '))' → logprob: -11.500011444091797
    3. ')
' → logprob: -14.375011444091797
    4. ')`' → logprob: -14.750011444091797
    5. ')}' → logprob: -16.375011444091797
    6. ' )' → logprob: -16.625011444091797
    7. '())' → logprob: -16.875011444091797
    8. '})' → logprob: -17.125011444091797
    9. ')")' → logprob: -17.375011444091797
    10. ')}}' → logprob: -17.625011444091797

Token 350: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0047089881263673306
    2. 'main' → logprob: -5.379708766937256
    3. ' if' → logprob: -10.379709243774414
    4. '
' → logprob: -10.379709243774414
    5. '<|end|>' → logprob: -10.879709243774414
    6. '```' → logprob: -13.254709243774414
    7. ' main' → logprob: -13.629709243774414
    8. '\n' → logprob: -13.754709243774414
    9. '    
' → logprob: -14.254709243774414
    10. '#' → logprob: -14.379709243774414

Token 351: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1270754039287567
    2. ' __' → logprob: -2.127075433731079
    3. 'name' → logprob: -8.8770751953125
    4. '_name' → logprob: -12.2520751953125
    5. ' ' → logprob: -14.3770751953125
    6. '___' → logprob: -14.3770751953125
    7. 'if' → logprob: -14.8770751953125
    8. '  ' → logprob: -15.2520751953125
    9. ' name' → logprob: -15.7520751953125
    10. '`' → logprob: -15.7520751953125

Token 352: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2805974781513214
    2. ' ==' → logprob: -1.530597448348999
    3. '==' → logprob: -3.780597448348999
    4. ' __' → logprob: -5.780597686767578
    5. '=="' → logprob: -6.655597686767578
    6. '.__' → logprob: -7.405597686767578
    7. '__.' → logprob: -9.155597686767578
    8. '__.__' → logprob: -9.655597686767578
    9. '_' → logprob: -9.905597686767578
    10. '.' → logprob: -9.905597686767578

Token 353: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0683535037969705e-05
    2. '==' → logprob: -11.62501049041748
    3. '__.__' → logprob: -13.75001049041748
    4. ' ==' → logprob: -15.87501049041748
    5. '_' → logprob: -15.87501049041748
    6. '=="' → logprob: -16.250011444091797
    7. '___' → logprob: -16.500011444091797
    8. '__.' → logprob: -16.625011444091797
    9. '__
' → logprob: -16.875011444091797
    10. '____' → logprob: -17.125011444091797

Token 354: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.029743311926722527
    2. '==' → logprob: -4.029743194580078
    3. ' ==' → logprob: -4.529743194580078
    4. '=="' → logprob: -7.279743194580078
    5. '__.__' → logprob: -10.529743194580078
    6. '=='' → logprob: -11.654743194580078
    7. '___' → logprob: -12.154743194580078
    8. '__.' → logprob: -12.404743194580078
    9. '_' → logprob: -12.904743194580078
    10. '.__' → logprob: -13.154743194580078

Token 355: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0020562850404530764
    2. '"' → logprob: -6.502056121826172
    3. ''' → logprob: -7.502056121826172
    4. 'main' → logprob: -13.377056121826172
    5. ' __' → logprob: -15.627056121826172
    6. ' "__' → logprob: -16.127056121826172
    7. '___' → logprob: -16.377056121826172
    8. '_main' → logprob: -18.877056121826172
    9. '/__' → logprob: -19.002056121826172
    10. '____' → logprob: -19.252056121826172

Token 356: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.5048530030981055e-06
    2. 'name' → logprob: -13.500001907348633
    3. '"' → logprob: -17.000001907348633
    4. ' main' → logprob: -17.125001907348633
    5. '__' → logprob: -17.500001907348633
    6. '_main' → logprob: -18.500001907348633
    7. ' "__' → logprob: -19.500001907348633
    8. ''' → logprob: -20.625001907348633
    9. 'built' → logprob: -21.250001907348633
    10. ' '__' → logprob: -21.375001907348633

Token 357: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06216968223452568
    2. '__' → logprob: -2.8121697902679443
    3. '__':
' → logprob: -9.062170028686523
    4. '__:' → logprob: -9.937170028686523
    5. ':' → logprob: -10.562170028686523
    6. '_' → logprob: -12.312170028686523
    7. '":' → logprob: -13.062170028686523
    8. '():
' → logprob: -13.562170028686523
    9. '```' → logprob: -13.562170028686523
    10. '__["' → logprob: -14.187170028686523

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.607937753200531
    2. ' main' → logprob: -1.1079378128051758
    3. 'main' → logprob: -2.107937812805176
    4. '	main' → logprob: -5.732937812805176
    5. '    
' → logprob: -8.232937812805176
    6. '_main' → logprob: -9.107937812805176
    7. '<|end|>' → logprob: -9.982937812805176
    8. '(main' → logprob: -10.107937812805176
    9. ' ' → logprob: -10.482937812805176
    10. '    ' → logprob: -11.482937812805176

Token 359: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -9.088346359931165e-07
    2. ' main' → logprob: -14.000000953674316
    3. '	main' → logprob: -17.75
    4. '   ' → logprob: -20.5
    5. '_main' → logprob: -22.875
    6. '.main' → logprob: -23.875
    7. '(main' → logprob: -24.25
    8. 'import' → logprob: -25.125
    9. 'Main' → logprob: -25.125
    10. '  ' → logprob: -26.125

Token 360: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004239381290972233
    2. '()
' → logprob: -5.754239559173584
    3. '(' → logprob: -7.004239559173584
    4. '()\' → logprob: -9.754239082336426
    5. '(
' → logprob: -10.004239082336426
    6. '```' → logprob: -11.254239082336426
    7. '
' → logprob: -11.379239082336426
    8. '()

' → logprob: -12.379239082336426
    9. ' ()' → logprob: -12.629239082336426
    10. '\' → logprob: -12.879239082336426


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 358
Tokens correctement prédits (1ère position, stricte): 198
Tokens correctement prédits (1ère position, avec adaptation): 206
Tokens correctement prédits (top 10): 317
Précision stricte (1ère position): 55.31%
Précision adaptée (1ère position): 57.54%
Précision (top 10): 88.55%
================================================================================
