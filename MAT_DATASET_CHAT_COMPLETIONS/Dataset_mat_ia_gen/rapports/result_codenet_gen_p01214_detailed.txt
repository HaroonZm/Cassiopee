================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def petoris():
    import sys

    input = sys.stdin.readline

    def rotate(shape):
        # Rotate a shape 90 degrees clockwise
        H, W = len(shape), len(shape[0])
        rotated = []
        for c in range(W):
            new_row = ''.join(shape[H - 1 - r][c] for r in range(H))
            rotated.append(new_row)
        return rotated

    def trim(shape):
        # Remove empty rows and columns around the shape
        rows = len(shape)
        cols = len(shape[0])
        top, bottom = 0, rows - 1
        while top <= bottom and all(c == '.' for c in shape[top]):
            top += 1
        while bottom >= top and all(c == '.' for c in shape[bottom]):
            bottom -= 1
        if top > bottom:
            return []

        left, right = 0, cols - 1
        while left <= right and all(shape[r][left] == '.' for r in range(top, bottom + 1)):
            left += 1
        while right >= left and all(shape[r][right] == '.' for r in range(top, bottom + 1)):
            right -= 1
        if left > right:
            return []

        return [shape[r][left:right + 1] for r in range(top, bottom + 1)]

    def shape_to_coords(shape):
        # Convert shape to list of coordinates of '#' relative to (0,0)
        coords = []
        for r, row in enumerate(shape):
            for c, ch in enumerate(row):
                if ch == '#':
                    coords.append((r, c))
        return coords

    N = int(input())

    for _ in range(N):
        # Read block shape
        Hb, Wb = map(int, input().split())
        block = [input().rstrip('\n') for __ in range(Hb)]
        block = trim(block)  # trim block shape
        # Generate all 4 rotated variants of the block
        variants = []
        base = block
        for __ in range(4):
            # trim each rotation to remove surrounding empty rows and columns
            base = trim(base)
            if base not in variants:
                variants.append(base)
            base = rotate(base)

        # Read board
        Hb_, Wb_ = map(int, input().split())
        board = [list(input().rstrip('\n')) for __ in range(Hb_)]
        board_rows = Hb_
        board_cols = Wb_

        def can_place(r0, c0, variant_coords):
            # Check if block can be placed at (r0, c0) on board without collision and inside the board
            for (r, c) in variant_coords:
                rr = r0 + r
                cc = c0 + c
                if rr < 0 or rr >= board_rows or cc < 0 or cc >= board_cols:
                    return False
                if board[rr][cc] == '#':
                    return False
            return True

        def place_block(r0, c0, variant_coords):
            # Place block on board copy and return this new board
            new_board = [row[:] for row in board]
            for (r, c) in variant_coords:
                rr = r0 + r
                cc = c0 + c
                new_board[rr][cc] = '#'
            return new_board

        def count_full_rows(b):
            # Count how many full rows (all '#') in this board
            cnt = 0
            for row in b:
                if all(ch == '#' for ch in row):
                    cnt += 1
            return cnt

        max_score = -1
        # Try to place the block in all possible positions and rotations
        for variant in variants:
            coords = shape_to_coords(variant)
            h_var = len(variant)
            w_var = len(variant[0])
            # Try all top-left positions (r0,c0)
            for r0 in range(board_rows - h_var + 1):
                for c0 in range(board_cols - w_var + 1):
                    if can_place(r0, c0, coords):
                        new_board = place_block(r0, c0, coords)
                        score = count_full_rows(new_board)
                        if score > max_score:
                            max_score = score

        print(max_score)

petoris()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' pet' (ID: 5716)
  → Token d'amorce (pas de prédiction)

Token 2: 'oris' (ID: 50689)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08110048621892929
    2. '():' → logprob: -3.2061004638671875
    3. '_' → logprob: -4.2061004638671875
    4. '.' → logprob: -4.9561004638671875
    5. ':' → logprob: -5.0811004638671875
    6. '(:' → logprob: -5.2061004638671875
    7. ' (' → logprob: -6.8311004638671875
    8. '```' → logprob: -7.5811004638671875
    9. '()' → logprob: -7.9561004638671875
    10. '(p' → logprob: -8.331100463867188

Token 4: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.11537344753742218
    2. '\' → logprob: -2.615373373031616
    3. '   ' → logprob: -3.615373373031616
    4. ':' → logprob: -6.490373611450195
    5. '' → logprob: -6.615373611450195
    6. '    
' → logprob: -6.740373611450195
    7. '    ' → logprob: -6.990373611450195
    8. '
' → logprob: -7.115373611450195
    9. '```' → logprob: -7.115373611450195
    10. '\r' → logprob: -7.615373611450195

Token 5: ' import' (ID: 1588)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.39292341470718384
    2. '   ' → logprob: -2.017923355102539
    3. '\' → logprob: -2.892923355102539
    4. 'r' → logprob: -3.767923355102539
    5. 'return' → logprob: -3.767923355102539
    6. 'pass' → logprob: -3.892923355102539
    7. 'n' → logprob: -4.267923355102539
    8. 'p' → logprob: -4.517923355102539
    9. 'a' → logprob: -4.642923355102539
    10. ' ' → logprob: -5.017923355102539

Token 6: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03850914165377617
    2. ' math' → logprob: -3.6635091304779053
    3. ' ' → logprob: -5.413509368896484
    4. ' numpy' → logprob: -6.038509368896484
    5. ' sys' → logprob: -6.163509368896484
    6. ' random' → logprob: -6.788509368896484
    7. ' tensorflow' → logprob: -7.413509368896484
    8. ' pandas' → logprob: -7.663509368896484
    9. ' json' → logprob: -7.788509368896484
    10. ' requests' → logprob: -8.788509368896484

Token 7: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014678034000098705
    2. '.readline' → logprob: -6.139678001403809
    3. '.stdout' → logprob: -6.264678001403809
    4. '\' → logprob: -6.514678001403809
    5. '\n' → logprob: -6.764678001403809
    6. '```' → logprob: -7.139678001403809
    7. ' .' → logprob: -7.264678001403809
    8. '<|end|>' → logprob: -7.389678001403809
    9. '[' → logprob: -7.514678001403809
    10. 'newline' → logprob: -7.514678001403809

Token 8: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.030992401763796806
    2. '   ' → logprob: -3.9059925079345703
    3. '    ' → logprob: -6.90599250793457
    4. '.readline' → logprob: -6.90599250793457
    5. '    
' → logprob: -7.03099250793457
    6. '_' → logprob: -7.03099250793457
    7. '\' → logprob: -7.15599250793457
    8. '[' → logprob: -7.40599250793457
    9. '.stdout' → logprob: -7.40599250793457
    10. '\n' → logprob: -7.40599250793457

Token 9: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.1135280132293701
    2. 'print' → logprob: -1.2385280132293701
    3. 'return' → logprob: -1.8635280132293701
    4. '   ' → logprob: -1.9885280132293701
    5. 'for' → logprob: -3.98852801322937
    6. '_' → logprob: -4.113528251647949
    7. 'if' → logprob: -4.363528251647949
    8. 'pass' → logprob: -4.613528251647949
    9. 'try' → logprob: -4.738528251647949
    10. 'n' → logprob: -5.488528251647949

Token 10: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00866113230586052
    2. '.' → logprob: -5.008661270141602
    3. '()' → logprob: -6.758661270141602
    4. ')' → logprob: -8.133661270141602
    5. '_' → logprob: -9.258661270141602
    6. '('' → logprob: -9.633661270141602
    7. ' (' → logprob: -10.008661270141602
    8. 's' → logprob: -10.133661270141602
    9. ' ' → logprob: -10.133661270141602
    10. ''' → logprob: -10.883661270141602

Token 11: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.08873429894447327
    2. 'sys' → logprob: -2.7137343883514404
    3. ' input' → logprob: -4.463734149932861
    4. 'input' → logprob: -4.963734149932861
    5. '	sys' → logprob: -10.58873462677002
    6. '=sys' → logprob: -10.58873462677002
    7. ' ' → logprob: -10.71373462677002
    8. '   ' → logprob: -11.46373462677002
    9. '(sys' → logprob: -11.71373462677002
    10. ' system' → logprob: -11.96373462677002

Token 12: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06275292485952377
    2. '.stdin' → logprob: -2.8127529621124268
    3. ' .' → logprob: -8.187752723693848
    4. '.readline' → logprob: -8.312752723693848
    5. '.stdout' → logprob: -8.812752723693848
    6. '.get' → logprob: -11.062752723693848
    7. '.input' → logprob: -11.187752723693848
    8. '```' → logprob: -11.437752723693848
    9. '.import' → logprob: -11.687752723693848
    10. '.argv' → logprob: -12.062752723693848

Token 13: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08280406892299652
    2. '.readline' → logprob: -2.582803964614868
    3. '.read' → logprob: -5.582804203033447
    4. 'read' → logprob: -9.832803726196289
    5. '.Read' → logprob: -10.082803726196289
    6. '.readlines' → logprob: -11.832803726196289
    7. '```' → logprob: -11.957803726196289
    8. '.\' → logprob: -12.082803726196289
    9. ' .' → logprob: -12.457803726196289
    10. ')' → logprob: -12.832803726196289

Token 14: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0237912368029356
    2. '(' → logprob: -4.273791313171387
    3. '().' → logprob: -5.148791313171387
    4. '()
' → logprob: -6.023791313171387
    5. ')' → logprob: -8.398791313171387
    6. '(
' → logprob: -8.648791313171387
    7. '()

' → logprob: -8.773791313171387
    8. ' ' → logprob: -8.898791313171387
    9. '.' → logprob: -9.148791313171387
    10. '\n' → logprob: -9.148791313171387

Token 15: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18954969942569733
    2. '(' → logprob: -1.8145496845245361
    3. '   ' → logprob: -5.189549922943115
    4. '()
' → logprob: -6.439549922943115
    5. '(
' → logprob: -6.939549922943115
    6. ' ' → logprob: -7.939549922943115
    7. '()

' → logprob: -8.314549446105957
    8. ')' → logprob: -8.564549446105957
    9. '().' → logprob: -8.939549446105957
    10. 'def' → logprob: -9.189549446105957

Token 16: ' def' (ID: 1056)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.42449602484703064
    2. '   ' → logprob: -2.1744959354400635
    3. 'x' → logprob: -2.2994959354400635
    4. 'data' → logprob: -2.6744959354400635
    5. 'd' → logprob: -3.9244959354400635
    6. 'a' → logprob: -4.799496173858643
    7. ' ' → logprob: -5.049496173858643
    8. 'q' → logprob: -5.174496173858643
    9. 't' → logprob: -5.674496173858643
    10. 'user' → logprob: -5.674496173858643

Token 17: ' rotate' (ID: 31987)
  Prédit: ' pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pet' → logprob: -0.010458610020577908
    2. ' solve' → logprob: -6.510458469390869
    3. ' factorial' → logprob: -6.885458469390869
    4. ' calculate' → logprob: -7.135458469390869
    5. ' ' → logprob: -7.260458469390869
    6. ' process' → logprob: -7.635458469390869
    7. ' split' → logprob: -7.635458469390869
    8. ' get' → logprob: -7.760458469390869
    9. ' pets' → logprob: -7.760458469390869
    10. 'pet' → logprob: -7.885458469390869

Token 18: '(shape' (ID: 58011)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021495360881090164
    2. '_' → logprob: -4.646495342254639
    3. ' (' → logprob: -5.396495342254639
    4. '(line' → logprob: -6.771495342254639
    5. '(angle' → logprob: -6.896495342254639
    6. '_left' → logprob: -7.396495342254639
    7. '_right' → logprob: -7.896495342254639
    8. '(text' → logprob: -8.146495819091797
    9. '(s' → logprob: -8.146495819091797
    10. '_string' → logprob: -8.271495819091797

Token 19: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12753786146640778
    2. '):' → logprob: -2.127537965774536
    3. ' ,' → logprob: -8.877537727355957
    4. ')' → logprob: -8.877537727355957
    5. '[' → logprob: -9.252537727355957
    6. '   ' → logprob: -9.627537727355957
    7. '):
' → logprob: -10.252537727355957
    8. '[]):' → logprob: -11.252537727355957
    9. ',size' → logprob: -11.252537727355957
    10. '_' → logprob: -11.502537727355957

Token 20: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.110018014907837
    2. '[' → logprob: -1.360018014907837
    3. ':' → logprob: -1.735018014907837
    4. '   ' → logprob: -2.360018014907837
    5. '       ' → logprob: -2.485018014907837
    6. '[]' → logprob: -4.610017776489258
    7. '):' → logprob: -4.735017776489258
    8. '[:]' → logprob: -5.235017776489258
    9. '(n' → logprob: -5.360017776489258
    10. '    ' → logprob: -5.485017776489258

Token 21: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2680135667324066
    2. 'shape' → logprob: -2.5180134773254395
    3. '[' → logprob: -2.7680134773254395
    4. '(shape' → logprob: -3.3930134773254395
    5. '   ' → logprob: -3.7680134773254395
    6. ' shape' → logprob: -4.5180134773254395
    7. ' (' → logprob: -4.6430134773254395
    8. '       ' → logprob: -5.6430134773254395
    9. 's' → logprob: -5.8930134773254395
    10. '(
' → logprob: -6.1430134773254395

Token 22: ' Rotate' (ID: 98562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9428309798240662
    2. ' ' → logprob: -1.942831039428711
    3. ' pass' → logprob: -1.942831039428711
    4. '    ' → logprob: -2.692831039428711
    5. ' """' → logprob: -3.067831039428711
    6. '       ' → logprob: -3.317831039428711
    7. '[' → logprob: -3.692831039428711
    8. ')' → logprob: -3.942831039428711
    9. '#' → logprob: -4.067831039428711
    10. '(' → logprob: -4.317831039428711

Token 23: ' a' (ID: 261)
  Prédit: '(shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(shape' → logprob: -0.2799210250377655
    2. ' shape' → logprob: -2.279921054840088
    3. '(' → logprob: -2.904921054840088
    4. ' (' → logprob: -3.029921054840088
    5. ' ' → logprob: -4.529921054840088
    6. '(
' → logprob: -4.779921054840088
    7. 'shape' → logprob: -5.029921054840088
    8. '90' → logprob: -5.904921054840088
    9. ' (
' → logprob: -6.154921054840088
    10. ' the' → logprob: -6.154921054840088

Token 24: ' shape' (ID: 9591)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2703148424625397
    2. '90' → logprob: -2.020314931869507
    3. ' shape' → logprob: -3.395314931869507
    4. 'll' → logprob: -4.020314693450928
    5. 'ny' → logprob: -4.270314693450928
    6. ' matrix' → logprob: -5.020314693450928
    7. 'shape' → logprob: -5.145314693450928
    8. 't' → logprob: -5.770314693450928
    9. 'n' → logprob: -5.770314693450928
    10. '   ' → logprob: -5.895314693450928

Token 25: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7715219855308533
    2. '(shape' → logprob: -1.271522045135498
    3. '90' → logprob: -2.021522045135498
    4. '   ' → logprob: -3.271522045135498
    5. '[' → logprob: -4.271522045135498
    6. '(
' → logprob: -4.396522045135498
    7. '```' → logprob: -4.896522045135498
    8. '_' → logprob: -5.021522045135498
    9. '(s' → logprob: -5.146522045135498
    10. ' ' → logprob: -5.271522045135498

Token 26: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.5615271925926208
    2. ' ' → logprob: -1.4365272521972656
    3. ' by' → logprob: -2.1865272521972656
    4. '(shape' → logprob: -3.0615272521972656
    5. '   ' → logprob: -5.186527252197266
    6. '45' → logprob: -5.311527252197266
    7. 'by' → logprob: -5.561527252197266
    8. '(' → logprob: -5.686527252197266
    9. ' (' → logprob: -5.936527252197266
    10. 'counter' → logprob: -6.061527252197266

Token 27: ' degrees' (ID: 18210)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: ' clockwise' (ID: 141888)
  Prédit: ' clockwise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clockwise' → logprob: -0.4378455579280853
    2. ' counter' → logprob: -1.6878455877304077
    3. ',' → logprob: -2.937845468521118
    4. ')' → logprob: -3.687845468521118
    5. '_clock' → logprob: -4.062845706939697
    6. '_counter' → logprob: -4.312845706939697
    7. ' ' → logprob: -4.562845706939697
    8. 'counter' → logprob: -4.812845706939697
    9. 'clock' → logprob: -4.937845706939697
    10. ' ,' → logprob: -5.187845706939697

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42723098397254944
    2. ':' → logprob: -1.552230954170227
    3. '):' → logprob: -2.5522310733795166
    4. '       ' → logprob: -3.9272310733795166
    5. ')' → logprob: -4.3022308349609375
    6. ':
' → logprob: -4.9272308349609375
    7. '
' → logprob: -5.0522308349609375
    8. '):
' → logprob: -5.1772308349609375
    9. '\n' → logprob: -6.6772308349609375
    10. ')
' → logprob: -7.1772308349609375

Token 30: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4067697823047638
    2. '):' → logprob: -2.0317697525024414
    3. '       ' → logprob: -2.6567697525024414
    4. ':' → logprob: -2.6567697525024414
    5. ')' → logprob: -3.5317697525024414
    6. '):
' → logprob: -4.656769752502441
    7. '
' → logprob: -5.156769752502441
    8. ':
' → logprob: -5.406769752502441
    9. '\n' → logprob: -5.531769752502441
    10. ')
' → logprob: -6.156769752502441

Token 31: ' H' (ID: 487)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11537812650203705
    2. '   ' → logprob: -2.7403781414031982
    3. 'return' → logprob: -3.6153781414031982
    4. '[' → logprob: -5.865377902984619
    5. '\n' → logprob: -5.865377902984619
    6. ' return' → logprob: -5.990377902984619
    7. ')' → logprob: -6.490377902984619
    8. '\' → logprob: -6.865377902984619
    9. 'shape' → logprob: -6.990377902984619
    10. ' shape' → logprob: -7.115377902984619

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012891247868537903
    2. ' =' → logprob: -4.7628912925720215
    3. '   ' → logprob: -6.5128912925720215
    4. ' ,' → logprob: -7.1378912925720215
    5. '=' → logprob: -7.2628912925720215
    6. '       ' → logprob: -7.2628912925720215
    7. ',W' → logprob: -8.012890815734863
    8. ',w' → logprob: -8.887890815734863
    9. '-' → logprob: -10.762890815734863
    10. '=len' → logprob: -11.262890815734863

Token 33: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.3510182499885559
    2. 'W' → logprob: -1.2260181903839111
    3. ' ' → logprob: -6.47601842880249
    4. '   ' → logprob: -7.60101842880249
    5. '  ' → logprob: -7.72601842880249
    6. '    ' → logprob: -10.726017951965332
    7. '	W' → logprob: -10.726017951965332
    8. ' =' → logprob: -12.288517951965332
    9. '`' → logprob: -12.413517951965332
    10. 'L' → logprob: -12.601017951965332

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10038071125745773
    2. '=' → logprob: -2.3503806591033936
    3. ',' → logprob: -8.725380897521973
    4. '   ' → logprob: -12.225380897521973
    5. ' ' → logprob: -12.600380897521973
    6. ')' → logprob: -13.600380897521973
    7. '=len' → logprob: -14.225380897521973
    8. '    ' → logprob: -14.975380897521973
    9. '  ' → logprob: -15.100380897521973
    10. ' ,' → logprob: -15.725380897521973

Token 35: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.4130708575248718
    2. 'len' → logprob: -1.9130709171295166
    3. ' shape' → logprob: -1.9130709171295166
    4. 'shape' → logprob: -3.1630709171295166
    5. ' ' → logprob: -8.038070678710938
    6. '   ' → logprob: -8.913070678710938
    7. '.shape' → logprob: -9.038070678710938
    8. '	len' → logprob: -9.288070678710938
    9. '(len' → logprob: -10.038070678710938
    10. '  ' → logprob: -10.538070678710938

Token 36: '(shape' (ID: 58011)
  Prédit: '(shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shape' → logprob: -0.00015872348740231246
    2. '(' → logprob: -8.875158309936523
    3. 'shape' → logprob: -11.000158309936523
    4. ' shape' → logprob: -14.250158309936523
    5. ' (' → logprob: -14.875158309936523
    6. '(sh' → logprob: -15.375158309936523
    7. '.shape' → logprob: -15.625158309936523
    8. '(H' → logprob: -16.000158309936523
    9. ')' → logprob: -16.625158309936523
    10. '(s' → logprob: -17.000158309936523

Token 37: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0007705556345172226
    2. ' ),' → logprob: -7.500770568847656
    3. ')' → logprob: -8.625770568847656
    4. '   ' → logprob: -10.625770568847656
    5. '),
' → logprob: -12.500770568847656
    6. '[' → logprob: -12.750770568847656
    7. ' ' → logprob: -12.875770568847656
    8. '       ' → logprob: -13.375770568847656
    9. ')
' → logprob: -14.000770568847656
    10. ',' → logprob: -14.375770568847656

Token 38: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3869038224220276
    2. 'len' → logprob: -1.1369037628173828
    3. '	len' → logprob: -11.261903762817383
    4. '   ' → logprob: -11.761903762817383
    5. '(len' → logprob: -12.136903762817383
    6. ' ' → logprob: -13.136903762817383
    7. '=len' → logprob: -13.261903762817383
    8. '[len' → logprob: -13.886903762817383
    9. '<|end|>' → logprob: -14.136903762817383
    10. '    ' → logprob: -14.511903762817383

Token 39: '(shape' (ID: 58011)
  Prédit: '(shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shape' → logprob: -6.869017852295656e-06
    2. '(' → logprob: -12.125006675720215
    3. 'shape' → logprob: -13.875006675720215
    4. '.shape' → logprob: -15.750006675720215
    5. ' shape' → logprob: -16.00000762939453
    6. ' (' → logprob: -17.25000762939453
    7. '[' → logprob: -18.37500762939453
    8. '(next' → logprob: -18.75000762939453
    9. '_shape' → logprob: -19.25000762939453
    10. '```' → logprob: -19.62500762939453

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1756367712223437e-05
    2. ')' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.125011444091797
    4. '\[' → logprob: -15.375011444091797
    5. '```' → logprob: -15.625011444091797
    6. ' [' → logprob: -15.750011444091797
    7. ' ' → logprob: -16.500011444091797
    8. '[-' → logprob: -16.625011444091797
    9. '#' → logprob: -17.625011444091797
    10. '0' → logprob: -17.750011444091797

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.875021934509277
    3. '[' → logprob: -13.250021934509277
    4. '   ' → logprob: -15.000021934509277
    5. ')' → logprob: -15.375021934509277
    6. '۰' → logprob: -16.00002098083496
    7. '０' → logprob: -16.37502098083496
    8. '```' → logprob: -16.43752098083496
    9. '(' → logprob: -17.18752098083496
    10. '-' → logprob: -17.62502098083496

Token 42: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.14584806561470032
    2. ')' → logprob: -2.020848035812378
    3. ')])' → logprob: -6.145848274230957
    4. ')]' → logprob: -7.645848274230957
    5. '])]' → logprob: -8.770848274230957
    6. '))' → logprob: -8.895848274230957
    7. ']' → logprob: -9.895848274230957
    8. '   ' → logprob: -10.145848274230957
    9. '])
' → logprob: -10.395848274230957
    10. '       ' → logprob: -10.645848274230957

Token 43: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.050379376858472824
    2. '   ' → logprob: -3.3003792762756348
    3. '    
' → logprob: -5.550379276275635
    4. ')' → logprob: -6.050379276275635
    5. ')
' → logprob: -6.425379276275635
    6. '\n' → logprob: -6.550379276275635
    7. '       ' → logprob: -7.300379276275635
    8. '  
' → logprob: -7.550379276275635
    9. '
' → logprob: -7.925379276275635
    10. '<|end|>' → logprob: -8.050379753112793

Token 44: ' rotated' (ID: 93819)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11631855368614197
    2. '   ' → logprob: -3.241318464279175
    3. 'return' → logprob: -3.991318464279175
    4. 'new' → logprob: -4.116318702697754
    5. ' new' → logprob: -4.366318702697754
    6. 'result' → logprob: -5.116318702697754
    7. ' rotated' → logprob: -5.241318702697754
    8. 'rot' → logprob: -5.616318702697754
    9. ' return' → logprob: -5.866318702697754
    10. 'shape' → logprob: -6.366318702697754

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860450699925423
    2. '=' → logprob: -3.0486044883728027
    3. 'shape' → logprob: -12.173604965209961
    4. ' ' → logprob: -12.798604965209961
    5. '[' → logprob: -13.423604965209961
    6. '_shape' → logprob: -13.673604965209961
    7. '   ' → logprob: -13.798604965209961
    8. '=[]' → logprob: -14.048604965209961
    9. '	' → logprob: -14.173604965209961
    10. ',' → logprob: -14.173604965209961

Token 46: ' []
' (ID: 8911)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.30427086353302
    2. '[' → logprob: -1.55427086353302
    3. '[['' → logprob: -3.5542707443237305
    4. ' [[' → logprob: -4.0542707443237305
    5. ' [' → logprob: -5.5542707443237305
    6. ' [['' → logprob: -7.5542707443237305
    7. '[list' → logprob: -8.67927074432373
    8. '["' → logprob: -8.92927074432373
    9. ' [["' → logprob: -9.05427074432373
    10. '['' → logprob: -9.17927074432373

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0929790511727333
    2. ' for' → logprob: -2.7179789543151855
    3. 'for' → logprob: -4.0929789543151855
    4. '   ' → logprob: -5.2179789543151855
    5. '	for' → logprob: -9.217979431152344
    6. ' ' → logprob: -9.217979431152344
    7. '    ' → logprob: -9.467979431152344
    8. '\n' → logprob: -9.592979431152344
    9. ')' → logprob: -9.717979431152344
    10. '(' → logprob: -9.842979431152344

Token 48: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.26102498173713684
    2. ' for' → logprob: -1.5110249519348145
    3. '   ' → logprob: -4.7610249519348145
    4. '	for' → logprob: -8.261025428771973
    5. '       ' → logprob: -8.386025428771973
    6. ' ' → logprob: -12.136025428771973
    7. '    ' → logprob: -13.636025428771973
    8. '[' → logprob: -13.886025428771973
    9. '  ' → logprob: -14.511025428771973
    10. '    
' → logprob: -14.636025428771973

Token 49: ' c' (ID: 274)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4766916334629059
    2. 'c' → logprob: -2.601691722869873
    3. 'j' → logprob: -2.726691722869873
    4. ' w' → logprob: -2.726691722869873
    5. 'x' → logprob: -2.851691722869873
    6. ' c' → logprob: -3.226691722869873
    7. ' j' → logprob: -3.851691722869873
    8. 'col' → logprob: -3.851691722869873
    9. ' col' → logprob: -4.226691722869873
    10. 'i' → logprob: -4.851691722869873

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01028660498559475
    2. 'in' → logprob: -4.635286808013916
    3. 'n' → logprob: -8.635286331176758
    4. '   ' → logprob: -8.760286331176758
    5. ' ' → logprob: -9.510286331176758
    6. 'range' → logprob: -9.885286331176758
    7. '  ' → logprob: -10.635286331176758
    8. 'i' → logprob: -11.635286331176758
    9. ' i' → logprob: -11.760286331176758
    10. '    ' → logprob: -12.635286331176758

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014173625037074089
    2. ' range' → logprob: -4.26417350769043
    3. 're' → logprob: -11.63917350769043
    4. '   ' → logprob: -14.51417350769043
    5. ' ' → logprob: -15.38917350769043
    6. '	range' → logprob: -15.51417350769043
    7. 'r' → logprob: -16.63917350769043
    8. ' reversed' → logprob: -17.01417350769043
    9. 'ran' → logprob: -17.01417350769043
    10. 'rang' → logprob: -17.13917350769043

Token 52: '(W' (ID: 26031)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.010100865736603737
    2. '(W' → logprob: -4.760100841522217
    3. ' W' → logprob: -6.635100841522217
    4. '	W' → logprob: -8.885101318359375
    5. '   ' → logprob: -10.760101318359375
    6. '0' → logprob: -12.635101318359375
    7. '<W' → logprob: -12.635101318359375
    8. '(' → logprob: -13.260101318359375
    9. '[' → logprob: -14.260101318359375
    10. ' ' → logprob: -14.260101318359375

Token 53: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28566062450408936
    2. '):' → logprob: -1.5356606245040894
    3. '):
' → logprob: -4.410660743713379
    4. ' -' → logprob: -4.535660743713379
    5. ',' → logprob: -4.910660743713379
    6. ')' → logprob: -6.535660743713379
    7. '   ' → logprob: -6.910660743713379
    8. ',-' → logprob: -8.785660743713379
    9. '       ' → logprob: -10.035660743713379
    10. ' ' → logprob: -10.285660743713379

Token 54: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.174866184592247
    2. '           ' → logprob: -2.299866199493408
    3. 'rot' → logprob: -3.424866199493408
    4. '[' → logprob: -4.674866199493408
    5. ' rotated' → logprob: -5.049866199493408
    6. '   ' → logprob: -5.549866199493408
    7. '[]' → logprob: -6.049866199493408
    8. '        ' → logprob: -7.049866199493408
    9. '[::-' → logprob: -7.049866199493408
    10. ' []' → logprob: -7.549866199493408

Token 55: ' new' (ID: 620)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5960555076599121
    2. 'row' → logprob: -1.721055507659912
    3. 'rot' → logprob: -1.971055507659912
    4. '[' → logprob: -3.471055507659912
    5. ' rotated' → logprob: -3.471055507659912
    6. '           ' → logprob: -4.096055507659912
    7. 'new' (adapté à ' new') → logprob: -4.471055507659912
    8. '[]' → logprob: -4.846055507659912
    9. ' row' → logprob: -4.971055507659912
    10. ' new' → logprob: -5.096055507659912

Token 56: '_row' (ID: 19157)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6948952674865723
    2. '_row' → logprob: -0.6948952674865723
    3. '   ' → logprob: -7.069895267486572
    4. 'shape' → logprob: -8.194894790649414
    5. ' row' → logprob: -8.569894790649414
    6. '_shape' → logprob: -8.819894790649414
    7. 'Row' → logprob: -9.194894790649414
    8. '	row' → logprob: -9.319894790649414
    9. 'line' → logprob: -11.194894790649414
    10. ' ' → logprob: -11.319894790649414

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17998822033405304
    2. '=' → logprob: -1.8049882650375366
    3. '=[]' → logprob: -8.554987907409668
    4. '.append' → logprob: -11.304987907409668
    5. '=[]
' → logprob: -11.429987907409668
    6. '       ' → logprob: -11.679987907409668
    7. ' ' → logprob: -11.804987907409668
    8. '   ' → logprob: -12.179987907409668
    9. '           ' → logprob: -13.304987907409668
    10. '    ' → logprob: -13.679987907409668

Token 58: ' ''.' (ID: 105941)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011997761204838753
    2. '[' → logprob: -4.511997699737549
    3. ' []' → logprob: -7.636997699737549
    4. '[]
' → logprob: -7.761997699737549
    5. ' [' → logprob: -11.011998176574707
    6. '[]

' → logprob: -11.886998176574707
    7. '[]"' → logprob: -12.261998176574707
    8. '[len' → logprob: -13.011998176574707
    9. '[::-' → logprob: -13.636998176574707
    10. '[n' → logprob: -13.636998176574707

Token 59: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.1008713702030946e-06
    2. ' join' → logprob: -13.750001907348633
    3. '''.' → logprob: -14.250001907348633
    4. 'jo' → logprob: -14.750001907348633
    5. 'j' → logprob: -17.250001907348633
    6. '.join' → logprob: -18.000001907348633
    7. ' ' → logprob: -19.125001907348633
    8. '   ' → logprob: -19.375001907348633
    9. ''.' → logprob: -19.500001907348633
    10. '.' → logprob: -19.625001907348633

Token 60: '(shape' (ID: 58011)
  Prédit: '(shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shape' → logprob: -0.049623481929302216
    2. 'shape' → logprob: -3.674623489379883
    3. '([' → logprob: -4.299623489379883
    4. '(re' → logprob: -5.424623489379883
    5. '(' → logprob: -5.424623489379883
    6. '(row' → logprob: -7.799623489379883
    7. 're' → logprob: -10.174623489379883
    8. '('' → logprob: -10.174623489379883
    9. '(reverse' → logprob: -10.174623489379883
    10. '[' → logprob: -10.174623489379883

Token 61: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.9186317482963204e-05
    2. '[::-' → logprob: -10.750049591064453
    3. 'H' → logprob: -11.375049591064453
    4. '[-' → logprob: -11.750049591064453
    5. '[(' → logprob: -13.125049591064453
    6. ')[' → logprob: -13.250049591064453
    7. '[len' → logprob: -13.500049591064453
    8. '[
' → logprob: -14.250049591064453
    9. '   ' → logprob: -14.750049591064453
    10. ' H' → logprob: -15.250049591064453

Token 62: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.35031741857528687
    2. '[' → logprob: -1.2253174781799316
    3. '-H' → logprob: -7.600317478179932
    4. '(H' → logprob: -7.975317478179932
    5. '][' → logprob: -8.100317001342773
    6. '[::-' → logprob: -8.350317001342773
    7. '[-' → logprob: -8.600317001342773
    8. '[c' → logprob: -8.975317001342773
    9. '-' → logprob: -10.100317001342773
    10. '[len' → logprob: -10.225317001342773

Token 63: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0025699487887322903
    2. ' -' → logprob: -6.002570152282715
    3. '1' → logprob: -9.627570152282715
    4. '-i' → logprob: -11.127570152282715
    5. '-j' → logprob: -12.377570152282715
    6. '-r' → logprob: -12.752570152282715
    7. '-l' → logprob: -12.877570152282715
    8. '-c' → logprob: -14.377570152282715
    9. ' ' → logprob: -14.627570152282715
    10. '   ' → logprob: -14.752570152282715

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.625017166137695
    3. '   ' → logprob: -11.875017166137695
    4. 'r' → logprob: -14.875017166137695
    5. '       ' → logprob: -15.500017166137695
    6. '-' → logprob: -15.750017166137695
    7. '  ' → logprob: -16.000017166137695
    8. 'j' → logprob: -16.500017166137695
    9. ')' → logprob: -16.625017166137695
    10. 'c' → logprob: -17.125017166137695

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. 'c' → logprob: -13.125004768371582
    3. ' ' → logprob: -13.625004768371582
    4. '   ' → logprob: -14.000004768371582
    5. 'j' → logprob: -14.625004768371582
    6. '
' → logprob: -15.500004768371582
    7. 'r' → logprob: -15.625004768371582
    8. '[c' → logprob: -16.3750057220459
    9. '```' → logprob: -16.8750057220459
    10. '

' → logprob: -17.1250057220459

Token 66: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31406235694885254
    2. ' -' → logprob: -1.3140623569488525
    3. '-c' → logprob: -7.189062118530273
    4. '   ' → logprob: -10.689062118530273
    5. ' ' → logprob: -12.189062118530273
    6. '-k' → logprob: -12.564062118530273
    7. '-i' → logprob: -12.689062118530273
    8. '][' → logprob: -12.939062118530273
    9. '-j' → logprob: -12.939062118530273
    10. '[c' → logprob: -12.939062118530273

Token 67: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04899165779352188
    2. 'c' → logprob: -3.2989916801452637
    3. ' r' → logprob: -4.548991680145264
    4. ' c' → logprob: -8.798991203308105
    5. 'i' → logprob: -9.923991203308105
    6. ')' → logprob: -10.298991203308105
    7. '   ' → logprob: -11.173991203308105
    8. 'row' → logprob: -11.173991203308105
    9. ']' → logprob: -11.298991203308105
    10. ')c' → logprob: -11.298991203308105

Token 68: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001593195047462359
    2. ']' → logprob: -9.50015926361084
    3. ''][' → logprob: -9.62515926361084
    4. '"][' → logprob: -11.50015926361084
    5. '])' → logprob: -12.75015926361084
    6. ' ][' → logprob: -13.12515926361084
    7. '[c' → logprob: -13.75015926361084
    8. ')][' → logprob: -14.62515926361084
    9. ']['' → logprob: -14.87515926361084
    10. '']' → logprob: -15.00015926361084

Token 69: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006289214943535626
    2. ' c' → logprob: -7.37562894821167
    3. ']' → logprob: -13.875628471374512
    4. '	c' → logprob: -14.500628471374512
    5. ')c' → logprob: -14.750628471374512
    6. '][' → logprob: -15.500628471374512
    7. ' ' → logprob: -15.625628471374512
    8. '    ' → logprob: -17.125629425048828
    9. '   ' → logprob: -17.125629425048828
    10. '[c' → logprob: -17.375629425048828

Token 70: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009122534655034542
    2. '])' → logprob: -4.759122371673584
    3. ')' → logprob: -7.884122371673584
    4. ' for' → logprob: -9.509122848510742
    5. 'for' → logprob: -10.384122848510742
    6. ' ]' → logprob: -11.009122848510742
    7. '']' → logprob: -12.259122848510742
    8. ')]' → logprob: -13.759122848510742
    9. ' ' → logprob: -14.384122848510742
    10. ' ])' → logprob: -14.509122848510742

Token 71: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49879759550094604
    2. 'for' → logprob: -1.2487976551055908
    3. ')' → logprob: -2.248797655105591
    4. ' ' → logprob: -8.248797416687012
    5. ' )' → logprob: -9.998797416687012
    6. '	for' → logprob: -10.623797416687012
    7. '   ' → logprob: -11.248797416687012
    8. ']' → logprob: -11.998797416687012
    9. '))' → logprob: -12.498797416687012
    10. '  ' → logprob: -12.748797416687012

Token 72: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.0004972710739821196
    2. 'r' → logprob: -7.625497341156006
    3. '	r' → logprob: -12.000496864318848
    4. ' ' → logprob: -13.000496864318848
    5. ' р' → logprob: -15.000496864318848
    6. ' range' → logprob: -15.125496864318848
    7. '<|end|>' → logprob: -16.375497817993164
    8. ' râ' → logprob: -16.875497817993164
    9. '_r' → logprob: -17.000497817993164
    10. '  ' → logprob: -17.500497817993164

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08099561184644699
    2. ' range' → logprob: -3.080995559692383
    3. 'range' → logprob: -4.330995559692383
    4. 'in' → logprob: -4.705995559692383
    5. '<|end|>' → logprob: -4.830995559692383
    6. ')' → logprob: -6.955995559692383
    7. ' )' → logprob: -8.580995559692383
    8. ' ' → logprob: -8.830995559692383
    9. ' xrange' → logprob: -8.955995559692383
    10. '<|end|>' → logprob: -9.330995559692383

Token 74: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023246178403496742
    2. ' range' → logprob: -3.7732462882995605
    3. '	range' → logprob: -15.523245811462402
    4. 'rang' → logprob: -15.773245811462402
    5. ' ' → logprob: -15.898245811462402
    6. 'ran' → logprob: -16.77324676513672
    7. ' xrange' → logprob: -17.02324676513672
    8. '(range' → logprob: -17.27324676513672
    9. 'r' → logprob: -17.39824676513672
    10. ' rang' → logprob: -18.14824676513672

Token 75: '(H' (ID: 20904)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0005617309361696243
    2. ' H' → logprob: -7.500561714172363
    3. '(H' → logprob: -11.875561714172363
    4. '	H' → logprob: -13.250561714172363
    5. '(' → logprob: -17.75056266784668
    6. ',H' → logprob: -18.12556266784668
    7. '   ' → logprob: -18.25056266784668
    8. '<H' → logprob: -18.37556266784668
    9. '-H' → logprob: -18.50056266784668
    10. ')' → logprob: -18.62556266784668

Token 76: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11313427984714508
    2. '))' → logprob: -2.2381343841552734
    3. '-' → logprob: -8.363134384155273
    4. ')}' → logprob: -10.613134384155273
    5. '):' → logprob: -11.363134384155273
    6. ')))' → logprob: -11.488134384155273
    7. ')]' → logprob: -11.738134384155273
    8. ' )' → logprob: -11.988134384155273
    9. '])' → logprob: -12.488134384155273
    10. '),' → logprob: -12.863134384155273

Token 77: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19237305223941803
    2. '       ' → logprob: -2.442373037338257
    3. '           ' → logprob: -2.817373037338257
    4. ' rotated' → logprob: -4.567373275756836
    5. '   ' → logprob: -4.942373275756836
    6. '')' → logprob: -5.192373275756836
    7. 'rot' → logprob: -5.817373275756836
    8. ')
' → logprob: -7.067373275756836
    9. '.append' → logprob: -7.817373275756836
    10. '(rot' → logprob: -8.192373275756836

Token 78: ' rotated' (ID: 93819)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -1.0458616018295288
    2. ')' → logprob: -1.6708616018295288
    3. ' rotated' → logprob: -1.6708616018295288
    4. '       ' → logprob: -1.7958616018295288
    5. '   ' → logprob: -3.0458617210388184
    6. '           ' → logprob: -3.5458617210388184
    7. '_rot' → logprob: -4.920861721038818
    8. '(rot' → logprob: -5.295861721038818
    9. '.' → logprob: -5.420861721038818
    10. '.append' → logprob: -5.670861721038818

Token 79: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014167623594403267
    2. '.' → logprob: -4.264167785644531
    3. ' .' → logprob: -13.139167785644531
    4. '.extend' → logprob: -14.389167785644531
    5. 'append' → logprob: -14.514167785644531
    6. '.ap' → logprob: -14.889167785644531
    7. ').' → logprob: -15.389167785644531
    8. '.setdefault' → logprob: -15.764167785644531
    9. '.Append' → logprob: -16.26416778564453
    10. '.app' → logprob: -16.26416778564453

Token 80: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -1.700132997939363e-05
    2. '(' → logprob: -11.000017166137695
    3. 'new' → logprob: -15.250017166137695
    4. ' (' → logprob: -17.625017166137695
    5. '((' → logprob: -19.000017166137695
    6. ' new' → logprob: -19.375017166137695
    7. '(
' → logprob: -19.500017166137695
    8. '('' → logprob: -20.000017166137695
    9. ')new' → logprob: -20.250017166137695
    10. '(ne' → logprob: -20.750017166137695

Token 81: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.2835405170917511
    2. 'w' → logprob: -2.1585404872894287
    3. 'row' → logprob: -2.7835404872894287
    4. 'oted' → logprob: -3.6585404872894287
    5. 'ted' → logprob: -4.408540725708008
    6. 'ot' → logprob: -4.533540725708008
    7. 'd' → logprob: -5.158540725708008
    8. 'rot' → logprob: -5.533540725708008
    9. 'uted' → logprob: -6.158540725708008
    10. 't' → logprob: -6.783540725708008

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09137392044067383
    2. '       ' → logprob: -2.716373920440674
    3. ')
' → logprob: -4.091373920440674
    4. '
' → logprob: -5.966373920440674
    5. '   ' → logprob: -6.466373920440674
    6. ')return' → logprob: -9.716373443603516
    7. ' return' → logprob: -9.966373443603516
    8. '\n' → logprob: -9.966373443603516
    9. 'return' → logprob: -10.591373443603516
    10. '
' → logprob: -10.716373443603516

Token 83: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03738678991794586
    2. '       ' → logprob: -3.412386894226074
    3. '    
' → logprob: -6.412386894226074
    4. '\n' → logprob: -7.287386894226074
    5. '
' → logprob: -7.412386894226074
    6. ' return' → logprob: -8.787386894226074
    7. '        
' → logprob: -8.912386894226074
    8. 'return' → logprob: -9.537386894226074
    9. '	return' → logprob: -9.537386894226074
    10. ')' → logprob: -9.662386894226074

Token 84: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014814290218055248
    2. '       ' → logprob: -4.889814376831055
    3. ' return' → logprob: -5.889814376831055
    4. 'return' (adapté à ' return') → logprob: -6.389814376831055
    5. '    
' → logprob: -7.264814376831055
    6. '	return' → logprob: -7.514814376831055
    7. ' ' → logprob: -7.639814376831055
    8. ')' → logprob: -8.389814376831055
    9. '    ' → logprob: -8.889814376831055
    10. '
' → logprob: -8.889814376831055

Token 85: ' rotated' (ID: 93819)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.06198213994503021
    2. ' rotated' → logprob: -2.8119821548461914
    3. ' rot' → logprob: -11.686982154846191
    4. '(rot' → logprob: -12.311982154846191
    5. 'ro' → logprob: -14.936982154846191
    6. '   ' → logprob: -15.186982154846191
    7. ' rotating' → logprob: -15.436982154846191
    8. 'rotate' → logprob: -15.436982154846191
    9. '_rot' → logprob: -15.561982154846191
    10. '[' → logprob: -15.936982154846191

Token 86: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5802404284477234
    2. '   ' → logprob: -1.0802404880523682
    3. '<|end|>' → logprob: -3.205240488052368
    4. '    
' → logprob: -3.705240488052368
    5. ' ' → logprob: -4.455240249633789
    6. '\n' → logprob: -5.330240249633789
    7. '

' → logprob: -5.330240249633789
    8. '```' → logprob: -5.705240249633789
    9. ' 
' → logprob: -5.955240249633789
    10. 'def' → logprob: -6.580240249633789

Token 88: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09211695939302444
    2. '    
' → logprob: -3.8421170711517334
    3. 'def' (adapté à ' def') → logprob: -4.342116832733154
    4. ' ' → logprob: -4.592116832733154
    5. '#' → logprob: -4.842116832733154
    6. '
' → logprob: -4.842116832733154
    7. 'n' → logprob: -5.467116832733154
    8. '    ' → logprob: -5.592116832733154
    9. '\n' → logprob: -5.717116832733154
    10. 'r' → logprob: -5.717116832733154

Token 89: ' trim' (ID: 19334)
  Prédit: ' reflect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reflect' → logprob: -2.0579047203063965
    2. 'reflect' → logprob: -2.4329047203063965
    3. ' solve' → logprob: -2.4329047203063965
    4. 'solve' → logprob: -2.5579047203063965
    5. ' pet' → logprob: -2.8079047203063965
    6. ' normalize' → logprob: -3.0579047203063965
    7. 'normalize' → logprob: -3.4329047203063965
    8. ' main' → logprob: -3.6829047203063965
    9. ' flip' → logprob: -3.8079047203063965
    10. 'expand' → logprob: -3.9329047203063965

Token 90: '(shape' (ID: 58011)
  Prédit: '(shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shape' → logprob: -0.2906227111816406
    2. '(' → logprob: -1.4156227111816406
    3. '_shape' → logprob: -5.040622711181641
    4. '_' → logprob: -6.540622711181641
    5. ' (' → logprob: -7.290622711181641
    6. '_shapes' → logprob: -8.41562271118164
    7. 'shape' → logprob: -8.66562271118164
    8. '_(' → logprob: -9.04062271118164
    9. '   ' → logprob: -9.29062271118164
    10. '('' → logprob: -10.41562271118164

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00238242675550282
    2. '():' → logprob: -6.502382278442383
    3. '):
' → logprob: -7.877382278442383
    4. '()' → logprob: -7.877382278442383
    5. '   ' → logprob: -9.752382278442383
    6. ')' → logprob: -10.127382278442383
    7. ' ):' → logprob: -12.002382278442383
    8. '[]):' → logprob: -12.127382278442383
    9. '():
' → logprob: -12.752382278442383
    10. '(' → logprob: -13.377382278442383

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027235636953264475
    2. '(' → logprob: -7.252723693847656
    3. '<|end|>' → logprob: -7.502723693847656
    4. '   ' → logprob: -7.877723693847656
    5. '[' → logprob: -8.002723693847656
    6. '[]' → logprob: -8.877723693847656
    7. ':' → logprob: -9.127723693847656
    8. '#' → logprob: -10.127723693847656
    9. ' shape' → logprob: -10.127723693847656
    10. ' (' → logprob: -10.252723693847656

Token 93: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011330858804285526
    2. '<|end|>' → logprob: -6.261331081390381
    3. ' new' → logprob: -6.511331081390381
    4. '        ' → logprob: -6.636331081390381
    5. ' #' → logprob: -7.011331081390381
    6. ' top' → logprob: -7.136331081390381
    7. '   ' → logprob: -7.511331081390381
    8. ' while' → logprob: -7.511331081390381
    9. ' shape' → logprob: -7.511331081390381
    10. ' ' → logprob: -7.511331081390381

Token 94: ' Remove' (ID: 18141)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -1.070695161819458
    2. '       ' → logprob: -1.570695161819458
    3. '   ' → logprob: -1.820695161819458
    4. '#' → logprob: -1.945695161819458
    5. '    ' → logprob: -3.945695161819458
    6. ' shape' → logprob: -4.195694923400879
    7. 'def' → logprob: -4.320694923400879
    8. 'Remove' → logprob: -4.445694923400879
    9. ' H' → logprob: -4.570694923400879
    10. ' lines' → logprob: -4.820694923400879

Token 95: ' empty' (ID: 8213)
  Prédit: ' leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leading' → logprob: -0.4898664355278015
    2. ' empty' → logprob: -0.9898664355278015
    3. 'empty' → logprob: -4.614866256713867
    4. ' all' → logprob: -6.864866256713867
    5. 'leading' → logprob: -6.864866256713867
    6. ' rows' → logprob: -6.989866256713867
    7. ' whitespace' → logprob: -7.614866256713867
    8. ' top' → logprob: -7.739866256713867
    9. '_empty' → logprob: -7.739866256713867
    10. ' blank' → logprob: -8.489866256713867

Token 96: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.0713995173573494
    2. 'rows' → logprob: -2.696399450302124
    3. '_rows' → logprob: -7.196399688720703
    4. ' top' → logprob: -8.696399688720703
    5. ' lines' → logprob: -8.696399688720703
    6. '   ' → logprob: -9.196399688720703
    7. '	rows' → logprob: -9.446399688720703
    8. ' spaces' → logprob: -10.321399688720703
    9. '    
' → logprob: -10.446399688720703
    10. 'top' → logprob: -10.446399688720703

Token 97: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8394980430603027
    2. ' and' → logprob: -1.0894980430603027
    3. '   ' → logprob: -1.5894980430603027
    4. ' at' → logprob: -5.089498043060303
    5. '<|end|>' → logprob: -5.339498043060303
    6. ' while' → logprob: -6.089498043060303
    7. '    
' → logprob: -6.339498043060303
    8. ' (' → logprob: -6.464498043060303
    9. 'def' → logprob: -6.464498043060303
    10. '(' → logprob: -6.464498043060303

Token 98: ' columns' (ID: 15697)
  Prédit: ' columns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' columns' → logprob: -0.16431784629821777
    2. 'columns' → logprob: -1.9143178462982178
    3. 'cols' → logprob: -6.164318084716797
    4. ' cols' → logprob: -6.789318084716797
    5. ' empty' → logprob: -7.414318084716797
    6. ' leading' → logprob: -9.164318084716797
    7. 'empty' → logprob: -9.664318084716797
    8. 'col' → logprob: -10.664318084716797
    9. ' col' → logprob: -11.539318084716797
    10. 'colm' → logprob: -11.914318084716797

Token 99: ' around' (ID: 2846)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6577218770980835
    2. '       ' → logprob: -0.9077218770980835
    3. '
' → logprob: -4.032721996307373
    4. '    
' → logprob: -4.032721996307373
    5. '        
' → logprob: -4.157721996307373
    6. '(shape' → logprob: -5.532721996307373
    7. '<|end|>' → logprob: -6.032721996307373
    8. ' at' → logprob: -6.157721996307373
    9. ' and' → logprob: -6.157721996307373
    10. '  
' → logprob: -6.407721996307373

Token 100: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.33604204654693604
    2. 'the' → logprob: -1.461042046546936
    3. 'shape' → logprob: -3.4610419273376465
    4. ' shape' → logprob: -3.8360419273376465
    5. '(shape' → logprob: -8.211042404174805
    6. 'a' → logprob: -9.836042404174805
    7. ' a' → logprob: -9.836042404174805
    8. ' shapes' → logprob: -10.961042404174805
    9. 'def' → logprob: -11.086042404174805
    10. '.shape' → logprob: -11.961042404174805

Token 101: ' shape' (ID: 9591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.2565044164657593
    2. ' shape' → logprob: -1.5065044164657593
    3. 'def' → logprob: -5.631504535675049
    4. ' shapes' → logprob: -7.756504535675049
    5. '   ' → logprob: -8.13150405883789
    6. '.shape' → logprob: -10.00650405883789
    7. '(shape' → logprob: -10.25650405883789
    8. '#' → logprob: -10.50650405883789
    9. ' pet' → logprob: -11.25650405883789
    10. 'pet' → logprob: -11.38150405883789

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2147442102432251
    2. '       ' → logprob: -2.0897440910339355
    3. '<|end|>' → logprob: -2.8397440910339355
    4. '
' → logprob: -5.7147440910339355
    5. '    
' → logprob: -5.9647440910339355
    6. '<|end|>' → logprob: -6.2147440910339355
    7. ':' → logprob: -6.9647440910339355
    8. '        
' → logprob: -7.0897440910339355
    9. ':
' → logprob: -8.089744567871094
    10. '  
' → logprob: -8.339744567871094

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02409060299396515
    2. '   ' → logprob: -4.024090766906738
    3. '<|end|>' → logprob: -5.524090766906738
    4. '        
' → logprob: -6.649090766906738
    5. '
' → logprob: -8.524090766906738
    6. '    
' → logprob: -8.649090766906738
    7. '<|end|>' → logprob: -9.649090766906738
    8. ',' → logprob: -10.149090766906738
    9. '```' → logprob: -10.899090766906738
    10. '  
' → logprob: -11.024090766906738

Token 104: ' rows' (ID: 13585)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.9046807885169983
    2. '       ' → logprob: -1.0296807289123535
    3. 'top' → logprob: -1.9046807289123535
    4. ' rows' → logprob: -3.2796807289123535
    5. 'rows' (adapté à ' rows') → logprob: -4.1546807289123535
    6. '   ' → logprob: -4.2796807289123535
    7. '#' → logprob: -5.0296807289123535
    8. ' #' → logprob: -5.9046807289123535
    9. ' non' → logprob: -6.0296807289123535
    10. ' shape' → logprob: -6.0296807289123535

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040076419711112976
    2. '=' → logprob: -3.415076494216919
    3. '_to' → logprob: -5.16507625579834
    4. '_' → logprob: -7.91507625579834
    5. '   ' → logprob: -9.04007625579834
    6. ',' → logprob: -9.91507625579834
    7. '       ' → logprob: -10.04007625579834
    8. '_with' → logprob: -10.54007625579834
    9. '=[]' → logprob: -11.04007625579834
    10. '[:]' → logprob: -11.79007625579834

Token 106: ' len' (ID: 4631)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5913944244384766
    2. '[len' → logprob: -1.2163944244384766
    3. ' [' → logprob: -2.4663944244384766
    4. '[i' → logprob: -3.2163944244384766
    5. '[s' → logprob: -4.591394424438477
    6. '[line' → logprob: -5.091394424438477
    7. '[r' → logprob: -6.216394424438477
    8. '[row' → logprob: -6.716394424438477
    9. '   ' → logprob: -6.966394424438477
    10. '[list' → logprob: -7.216394424438477

Token 107: '(shape' (ID: 58011)
  Prédit: '(shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shape' → logprob: -6.988221684878226e-06
    2. 'shape' → logprob: -12.000006675720215
    3. '(trim' → logprob: -14.500006675720215
    4. '(' → logprob: -15.625006675720215
    5. ' shape' → logprob: -18.00000762939453
    6. '(sh' → logprob: -18.37500762939453
    7. '.shape' → logprob: -19.00000762939453
    8. '(strip' → logprob: -19.50000762939453
    9. '(rows' → logprob: -19.75000762939453
    10. '(s' → logprob: -20.62500762939453

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6944699883460999
    2. ')
' → logprob: -0.6944699883460999
    3. '       ' → logprob: -6.819469928741455
    4. '   ' → logprob: -8.694470405578613
    5. ')

' → logprob: -10.319470405578613
    6. ')
' → logprob: -11.569470405578613
    7. 'def' → logprob: -12.069470405578613
    8. ' ' → logprob: -12.444470405578613
    9. ' )
' → logprob: -12.819470405578613
    10. ' )' → logprob: -13.069470405578613

Token 109: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' cols' (ID: 37134)
  Prédit: ' cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cols' → logprob: -0.8789665102958679
    2. ' top' → logprob: -1.2539665699005127
    3. 'cols' (adapté à ' cols') → logprob: -1.6289665699005127
    4. 'top' → logprob: -2.8789665699005127
    5. '       ' → logprob: -3.5039665699005127
    6. '   ' → logprob: -4.628966331481934
    7. '#' → logprob: -6.753966331481934
    8. ' columns' → logprob: -7.003966331481934
    9. 'columns' → logprob: -7.128966331481934
    10. ' empty' → logprob: -7.128966331481934

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023258758708834648
    2. '=' → logprob: -3.773258686065674
    3. '   ' → logprob: -11.523259162902832
    4. '=len' → logprob: -13.023259162902832
    5. ',' → logprob: -14.398259162902832
    6. ' ' → logprob: -15.023259162902832
    7. ' =
' → logprob: -16.023258209228516
    8. '    ' → logprob: -16.148258209228516
    9. ')' → logprob: -17.273258209228516
    10. 's' → logprob: -17.398258209228516

Token 112: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10021281987428665
    2. ' len' → logprob: -2.350212812423706
    3. '[len' → logprob: -12.975213050842285
    4. '(len' → logprob: -13.225213050842285
    5. 'max' → logprob: -13.975213050842285
    6. '   ' → logprob: -14.975213050842285
    7. '	len' → logprob: -15.100213050842285
    8. ' ' → logprob: -15.475213050842285
    9. '=len' → logprob: -16.10021209716797
    10. ' max' → logprob: -16.22521209716797

Token 113: '(shape' (ID: 58011)
  Prédit: '(shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shape' → logprob: -4.961759259458631e-06
    2. 'shape' → logprob: -12.250004768371582
    3. '(' → logprob: -16.2500057220459
    4. '(max' → logprob: -17.0000057220459
    5. '.shape' → logprob: -19.8750057220459
    6. '(trim' → logprob: -20.0000057220459
    7. '(sh' → logprob: -20.2500057220459
    8. '(len' → logprob: -20.2500057220459
    9. '((' → logprob: -20.5000057220459
    10. ' (' → logprob: -20.6250057220459

Token 114: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1655876636505127
    2. '[' → logprob: -1.9155876636505127
    3. ')
' → logprob: -5.290587425231934
    4. ')[' → logprob: -9.540587425231934
    5. '   ' → logprob: -9.790587425231934
    6. '(shape' → logprob: -10.540587425231934
    7. '(' → logprob: -10.665587425231934
    8. 'shape' → logprob: -10.790587425231934
    9. '       ' → logprob: -11.040587425231934
    10. '0' → logprob: -11.165587425231934

Token 115: '0' (ID: 15)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.4365921914577484
    2. '0' → logprob: -1.4365922212600708
    3. '[' → logprob: -2.1865921020507812
    4. 'len' → logprob: -6.311592102050781
    5. '   ' → logprob: -7.561592102050781
    6. '(shape' → logprob: -7.936592102050781
    7. ' ' → logprob: -8.311592102050781
    8. ' shape' → logprob: -8.436592102050781
    9. '
' → logprob: -9.061592102050781
    10. ')' → logprob: -9.186592102050781

Token 116: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005302181001752615
    2. ')
' → logprob: -5.2553019523620605
    3. '])' → logprob: -10.130302429199219
    4. '   ' → logprob: -11.880302429199219
    5. ' )' → logprob: -11.880302429199219
    6. ')

' → logprob: -12.005302429199219
    7. '       ' → logprob: -12.880302429199219
    8. '())' → logprob: -13.380302429199219
    9. '))' → logprob: -14.380302429199219
    10. 'def' → logprob: -14.630302429199219

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1035844162106514
    2. '
' → logprob: -3.1035845279693604
    3. '        
' → logprob: -3.2285845279693604
    4. '<|end|>' → logprob: -5.353584289550781
    5. '   ' → logprob: -6.103584289550781
    6. '  
' → logprob: -6.353584289550781
    7. '    
' → logprob: -6.478584289550781
    8. '#' → logprob: -7.478584289550781
    9. 'top' → logprob: -7.728584289550781
    10. ' 
' → logprob: -7.853584289550781

Token 118: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' (adapté à ' top') → logprob: -0.17255137860774994
    2. ' top' → logprob: -1.9225513935089111
    3. '       ' → logprob: -4.922551155090332
    4. '   ' → logprob: -6.297551155090332
    5. '#' → logprob: -6.422551155090332
    6. 'min' → logprob: -7.422551155090332
    7. 'row' → logprob: -8.172551155090332
    8. '
' → logprob: -9.422551155090332
    9. '	top' → logprob: -9.672551155090332
    10. 'def' → logprob: -9.672551155090332

Token 119: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4743458926677704
    2. ' =' → logprob: -0.9743459224700928
    3. '_' → logprob: -8.849346160888672
    4. ',' → logprob: -9.224346160888672
    5. '_idx' → logprob: -12.224346160888672
    6. '_cut' → logprob: -12.849346160888672
    7. '_=' → logprob: -12.974346160888672
    8. '   ' → logprob: -13.099346160888672
    9. '_trim' → logprob: -13.099346160888672
    10. ' ' → logprob: -13.599346160888672

Token 120: ' bottom' (ID: 8725)
  Prédit: ' bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.08110400289297104
    2. 'bottom' → logprob: -2.581104040145874
    3. 'bot' → logprob: -7.206103801727295
    4. ' bot' → logprob: -7.331103801727295
    5. ' left' → logprob: -7.956103801727295
    6. '0' → logprob: -8.706104278564453
    7. 'left' → logprob: -9.206104278564453
    8. '   ' → logprob: -9.331104278564453
    9. ' ' → logprob: -10.456104278564453
    10. '=' → logprob: -10.956104278564453

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2019992172718048
    2. '=' → logprob: -1.7019991874694824
    3. ',' → logprob: -7.451999187469482
    4. ' ,' → logprob: -12.82699966430664
    5. ' ' → logprob: -13.45199966430664
    6. ')' → logprob: -15.20199966430664
    7. ' =
' → logprob: -15.70199966430664
    8. ' ' → logprob: -16.07699966430664
    9. '=

' → logprob: -16.07699966430664
    10. '<|end|>' → logprob: -16.20199966430664

Token 122: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011082599870860577
    2. ' ' → logprob: -4.511082649230957
    3. ' None' → logprob: -11.261082649230957
    4. 'None' → logprob: -11.761082649230957
    5. ' rows' → logprob: -11.886082649230957
    6. 'rows' → logprob: -12.136082649230957
    7. '(' → logprob: -14.386082649230957
    8. ' (' → logprob: -14.886082649230957
    9. '   ' → logprob: -15.386082649230957
    10. '(rows' → logprob: -15.386082649230957

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.6776029699249193e-05
    2. 'rows' → logprob: -10.75002670288086
    3. ' ' → logprob: -12.25002670288086
    4. 'None' → logprob: -14.87502670288086
    5. ' rows' → logprob: -16.50002670288086
    6. '-' → logprob: -17.12502670288086
    7. '(rows' → logprob: -18.00002670288086
    8. '[' → logprob: -18.87502670288086
    9. '
' → logprob: -19.37502670288086
    10. '(' → logprob: -19.50002670288086

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8014112114906311
    2. '
' → logprob: -1.3014111518859863
    3. '<|end|>' → logprob: -1.3014111518859863
    4. '<|end|>' → logprob: -6.051411151885986
    5. ' ' → logprob: -6.926411151885986
    6. '  
' → logprob: -7.176411151885986
    7. ' ,' → logprob: -7.176411151885986
    8. ' 
' → logprob: -7.301411151885986
    9. ',
' → logprob: -7.801411151885986
    10. 'while' → logprob: -8.426411628723145

Token 125: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.20143282413482666
    2. 'rows' → logprob: -1.7014328241348267
    3. 'len' → logprob: -11.826433181762695
    4. ' len' → logprob: -12.201433181762695
    5. '	rows' → logprob: -12.701433181762695
    6. '(rows' → logprob: -12.951433181762695
    7. '0' → logprob: -14.451433181762695
    8. 'cols' → logprob: -14.826433181762695
    9. ' cols' → logprob: -15.076433181762695
    10. ' ' → logprob: -15.451433181762695

Token 126: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931501626968384
    2. ' -' → logprob: -0.6931501626968384
    3. '<|end|>' → logprob: -13.693150520324707
    4. '   ' → logprob: -13.818150520324707
    5. '
' → logprob: -15.693150520324707
    6. '<|end|>' → logprob: -15.818150520324707
    7. ' ' → logprob: -16.06814956665039
    8. ' -
' → logprob: -16.44314956665039
    9. '-
' → logprob: -16.56814956665039
    10. '1' → logprob: -16.81814956665039

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.791440293658525e-05
    2. ' ' → logprob: -9.500078201293945
    3. '0' → logprob: -12.875078201293945
    4. '
' → logprob: -14.875078201293945
    5. '   ' → logprob: -16.375078201293945
    6. 'def' → logprob: -16.875078201293945
    7. '<|end|>' → logprob: -17.875078201293945
    8. '```' → logprob: -18.125078201293945
    9. '  ' → logprob: -18.625078201293945
    10. '

' → logprob: -19.250078201293945

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. 'def' → logprob: -18.00002670288086
    4. '
' → logprob: -18.37502670288086
    5. '```' → logprob: -19.00002670288086
    6. '<|end|>' → logprob: -19.12502670288086
    7. '   ' → logprob: -19.25002670288086
    8. '  ' → logprob: -19.75002670288086
    9. '0' → logprob: -20.75002670288086
    10. '۱' → logprob: -20.75002670288086

Token 129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011795847676694393
    2. '   ' → logprob: -5.261795997619629
    3. '<|end|>' → logprob: -6.511795997619629
    4. ' 
' → logprob: -6.636795997619629
    5. ' while' → logprob: -6.636795997619629
    6. '       ' → logprob: -7.011795997619629
    7. '    
' → logprob: -7.886795997619629
    8. '  
' → logprob: -8.011795997619629
    9. 'while' → logprob: -8.011795997619629
    10. '

' → logprob: -9.011795997619629

Token 130: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13094384968280792
    2. '<|end|>' → logprob: -2.255943775177002
    3. '   ' → logprob: -4.505943775177002
    4. ' 
' → logprob: -6.255943775177002
    5. '  
' → logprob: -7.005943775177002
    6. '

' → logprob: -7.130943775177002
    7. ' while' → logprob: -7.380943775177002
    8. '    
' → logprob: -7.380943775177002
    9. '<|end|>' → logprob: -7.380943775177002
    10. '       ' → logprob: -8.38094425201416

Token 131: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.24766327440738678
    2. 'while' (adapté à ' while') → logprob: -1.9976632595062256
    3. '       ' → logprob: -2.9976632595062256
    4. '
' → logprob: -4.122663497924805
    5. '   ' → logprob: -4.497663497924805
    6. ' 
' → logprob: -6.747663497924805
    7. '	while' → logprob: -6.747663497924805
    8. '    
' → logprob: -6.872663497924805
    9. '        
' → logprob: -7.122663497924805
    10. '<|end|>' → logprob: -7.497663497924805

Token 132: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.5247205495834351
    2. ' top' → logprob: -0.8997205495834351
    3. 'shape' → logprob: -7.149720668792725
    4. ' shape' → logprob: -8.149720191955566
    5. ' not' → logprob: -8.399720191955566
    6. '(top' → logprob: -9.024720191955566
    7. 'bottom' → logprob: -10.149720191955566
    8. ' bottom' → logprob: -10.649720191955566
    9. 'not' → logprob: -10.774720191955566
    10. ' all' → logprob: -10.899720191955566

Token 133: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12839366495609283
    2. '<' → logprob: -2.1283936500549316
    3. '<len' → logprob: -6.753393650054932
    4. ' <=' → logprob: -8.50339412689209
    5. '<=' → logprob: -9.50339412689209
    6. 'rows' → logprob: -12.50339412689209
    7. '<size' → logprob: -12.62839412689209
    8. ' ' → logprob: -13.12839412689209
    9. '[' → logprob: -13.25339412689209
    10. '<th' → logprob: -13.37839412689209

Token 134: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.10149582475423813
    2. ' bottom' → logprob: -2.3514957427978516
    3. 'rows' → logprob: -6.726495742797852
    4. ' rows' → logprob: -9.351495742797852
    5. '(bottom' → logprob: -13.351495742797852
    6. 'bot' → logprob: -15.101495742797852
    7. ' ' → logprob: -15.226495742797852
    8. 'row' → logprob: -15.601495742797852
    9. 'top' → logprob: -15.601495742797852
    10. ' bottoms' → logprob: -16.47649574279785

Token 135: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029754776507616043
    2. 'and' → logprob: -3.529754877090454
    3. '   ' → logprob: -12.904754638671875
    4. ' ' → logprob: -14.154754638671875
    5. '    ' → logprob: -14.529754638671875
    6. '	and' → logprob: -15.404754638671875
    7. '       ' → logprob: -15.529754638671875
    8. ' ' → logprob: -16.779754638671875
    9. '  ' → logprob: -16.904754638671875
    10. '<|end|>' → logprob: -17.029754638671875

Token 136: ' all' (ID: 722)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.7636485695838928
    2. ' all' → logprob: -1.138648509979248
    3. ' shape' → logprob: -2.138648509979248
    4. 'all' → logprob: -2.638648509979248
    5. ' not' → logprob: -3.888648509979248
    6. 'not' → logprob: -6.013648509979248
    7. 'set' → logprob: -7.763648509979248
    8. ' set' → logprob: -8.138648986816406
    9. ''all' → logprob: -8.513648986816406
    10. '   ' → logprob: -8.513648986816406

Token 137: '(c' (ID: 2410)
  Prédit: '(cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cell' → logprob: -1.0927358865737915
    2. '(c' → logprob: -1.3427358865737915
    3. '(shape' → logprob: -1.3427358865737915
    4. '(ch' → logprob: -2.092735767364502
    5. '(row' → logprob: -4.842735767364502
    6. '(s' → logprob: -4.842735767364502
    7. '(x' → logprob: -6.967735767364502
    8. '(line' → logprob: -6.967735767364502
    9. '(char' → logprob: -7.592735767364502
    10. 'shape' → logprob: -8.09273624420166

Token 138: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47485774755477905
    2. '==' → logprob: -0.974857747554779
    3. '[' → logprob: -8.349857330322266
    4. '=='' → logprob: -8.599857330322266
    5. ' in' → logprob: -9.099857330322266
    6. ' =='' → logprob: -9.349857330322266
    7. ' ' → logprob: -9.599857330322266
    8. ' for' → logprob: -9.974857330322266
    9. '=' → logprob: -11.474857330322266
    10. ')==' → logprob: -11.974857330322266

Token 139: ' '.'' (ID: 64762)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6596716046333313
    2. ''.' → logprob: -0.7846716046333313
    3. ' '.'' → logprob: -4.034671783447266
    4. ' '' → logprob: -4.784671783447266
    5. '.' → logprob: -7.659671783447266
    6. '"' → logprob: -9.034671783447266
    7. '"."' → logprob: -10.409671783447266
    8. ' ' → logprob: -11.909671783447266
    9. ''s' → logprob: -12.159671783447266
    10. ')' → logprob: -12.534671783447266

Token 140: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.026342682540416718
    2. 'for' → logprob: -3.6513426303863525
    3. ' ' → logprob: -10.401342391967773
    4. ' in' → logprob: -12.526342391967773
    5. ')' → logprob: -12.526342391967773
    6. ' or' → logprob: -13.401342391967773
    7. '   ' → logprob: -13.651342391967773
    8. '       ' → logprob: -14.151342391967773
    9. '    ' → logprob: -14.776342391967773
    10. '[' → logprob: -15.276342391967773

Token 141: ' c' (ID: 274)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.25373491644859314
    2. 'row' → logprob: -2.003734827041626
    3. 'c' → logprob: -2.753734827041626
    4. ' shape' → logprob: -3.878734827041626
    5. ' row' → logprob: -6.128735065460205
    6. ' c' → logprob: -6.503735065460205
    7. '(shape' → logprob: -7.503735065460205
    8. 's' → logprob: -8.253734588623047
    9. ')' → logprob: -8.753734588623047
    10. 'r' → logprob: -10.003734588623047

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.028095342218875885
    2. 'in' → logprob: -3.778095245361328
    3. ' top' → logprob: -6.028095245361328
    4. 'top' → logprob: -7.153095245361328
    5. 'shape' → logprob: -7.528095245361328
    6. 'row' → logprob: -7.653095245361328
    7. ' row' → logprob: -8.278095245361328
    8. ' shape' → logprob: -8.528095245361328
    9. ')' → logprob: -9.653095245361328
    10. ' ' → logprob: -10.403095245361328

Token 143: ' shape' (ID: 9591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.0059342472814023495
    2. ' shape' → logprob: -5.130934238433838
    3. '(shape' → logprob: -12.755934715270996
    4. '.shape' → logprob: -13.880934715270996
    5. '
' → logprob: -14.130934715270996
    6. ')' → logprob: -14.505934715270996
    7. 'hape' → logprob: -15.130934715270996
    8. ' ' → logprob: -16.00593376159668
    9. '   ' → logprob: -17.38093376159668
    10. '

' → logprob: -17.63093376159668

Token 144: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -6.034592388459714e-06
    2. 'top' → logprob: -12.250005722045898
    3. '[' → logprob: -14.000005722045898
    4. ' top' → logprob: -15.750005722045898
    5. '   ' → logprob: -16.2500057220459
    6. ' [' → logprob: -17.1250057220459
    7. '(top' → logprob: -17.5000057220459
    8. '[
' → logprob: -18.0000057220459
    9. '
' → logprob: -18.0000057220459
    10. '```' → logprob: -18.1250057220459

Token 145: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.22423264384269714
    2. ']):
' → logprob: -1.8492326736450195
    3. '[' → logprob: -3.8492326736450195
    4. ']' → logprob: -4.5992326736450195
    5. '][' → logprob: -4.9742326736450195
    6. '[top' → logprob: -6.5992326736450195
    7. '   ' → logprob: -7.0992326736450195
    8. ' ]' → logprob: -7.0992326736450195
    9. '])' → logprob: -7.8492326736450195
    10. '])):
' → logprob: -7.8492326736450195

Token 146: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.604766845703125
    2. ':' → logprob: -1.229766845703125
    3. ':
' → logprob: -1.979766845703125
    4. '):
' → logprob: -4.354766845703125
    5. '   ' → logprob: -4.854766845703125
    6. '):' → logprob: -6.479766845703125
    7. '           ' → logprob: -7.979766845703125
    8. ' top' → logprob: -8.979766845703125
    9. '[top' → logprob: -8.979766845703125
    10. '
' → logprob: -9.229766845703125

Token 147: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.05226697772741318
    2. '       ' → logprob: -3.677267074584961
    3. 'top' (adapté à ' top') → logprob: -3.677267074584961
    4. '[top' → logprob: -8.927267074584961
    5. '   ' → logprob: -9.302267074584961
    6. '	top' → logprob: -9.677267074584961
    7. '           ' → logprob: -10.552267074584961
    8. '(top' → logprob: -10.927267074584961
    9. '+' → logprob: -13.177267074584961
    10. ' ' → logprob: -13.177267074584961

Token 148: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4741545021533966
    2. '+=' → logprob: -0.9741544723510742
    3. '+' → logprob: -9.849154472351074
    4. ']+=' → logprob: -11.224154472351074
    5. '   ' → logprob: -12.849154472351074
    6. '<|end|>' → logprob: -13.224154472351074
    7. '+='' → logprob: -13.349154472351074
    8. '    ' → logprob: -13.474154472351074
    9. '+="' → logprob: -13.474154472351074
    10. 'import' → logprob: -14.474154472351074

Token 149: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -16.377185821533203
    4. '
' → logprob: -18.502185821533203
    5. '```' → logprob: -18.627185821533203
    6. '１' → logprob: -18.877185821533203
    7. '    ' → logprob: -19.752185821533203
    8. '۱' → logprob: -19.814685821533203
    9. '       ' → logprob: -19.939685821533203
    10. '           ' → logprob: -20.564685821533203

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.75001335144043
    4. '```' → logprob: -18.50001335144043
    5. '
' → logprob: -18.87501335144043
    6. '۱' → logprob: -19.25001335144043
    7. '１' → logprob: -19.43751335144043
    8. 'def' → logprob: -19.68751335144043
    9. '१' → logprob: -19.87501335144043
    10. '১' → logprob: -19.93751335144043

Token 151: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10213795304298401
    2. '       ' → logprob: -2.477138042449951
    3. '<|end|>' → logprob: -4.602138042449951
    4. ' 
' → logprob: -6.977138042449951
    5. '        
' → logprob: -7.602138042449951
    6. '   ' → logprob: -7.727138042449951
    7. '    
' → logprob: -7.977138042449951
    8. '  
' → logprob: -8.602137565612793
    9. '\n' → logprob: -9.352137565612793
    10. ')' → logprob: -9.352137565612793

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.272148996591568
    2. '
' → logprob: -1.5221489667892456
    3. ' bottom' → logprob: -4.647149085998535
    4. ' while' → logprob: -5.647149085998535
    5. '   ' → logprob: -6.022149085998535
    6. '        
' → logprob: -6.772149085998535
    7. ' 
' → logprob: -6.897149085998535
    8. 'bottom' → logprob: -7.522149085998535
    9. 'while' → logprob: -7.647149085998535
    10. '    
' → logprob: -7.772149085998535

Token 153: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7811805009841919
    2. ' bottom' → logprob: -0.9061805009841919
    3. 'bottom' → logprob: -2.1561803817749023
    4. '   ' → logprob: -4.781180381774902
    5. ' while' → logprob: -4.906180381774902
    6. 'while' (adapté à ' while') → logprob: -5.156180381774902
    7. ' if' → logprob: -8.031180381774902
    8. 'if' → logprob: -8.781180381774902
    9. '    ' → logprob: -9.531180381774902
    10. 'bot' → logprob: -9.656180381774902

Token 154: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.20141646265983582
    2. ' bottom' → logprob: -1.7014164924621582
    3. 'top' → logprob: -13.576416015625
    4. '(bottom' → logprob: -13.576416015625
    5. ' ' → logprob: -15.201416015625
    6. 'bot' → logprob: -15.951416015625
    7. '   ' → logprob: -16.201416015625
    8. 'Bottom' → logprob: -16.576416015625
    9. 'b' → logprob: -16.826416015625
    10. '_bottom' → logprob: -17.201416015625

Token 155: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2014443278312683
    2. '>=' → logprob: -1.701444387435913
    3. '>' → logprob: -11.326444625854492
    4. ' >' → logprob: -11.326444625854492
    5. ' <=' → logprob: -12.826444625854492
    6. ' ' → logprob: -13.201444625854492
    7. '<=' → logprob: -13.201444625854492
    8. '   ' → logprob: -14.951444625854492
    9. '=' → logprob: -17.076444625854492
    10. '```' → logprob: -17.451444625854492

Token 156: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.014868439175188541
    2. ' top' → logprob: -4.264868259429932
    3. '0' → logprob: -7.264868259429932
    4. ' ' → logprob: -12.26486873626709
    5. '[top' → logprob: -16.139867782592773
    6. '	top' → logprob: -16.514867782592773
    7. '   ' → logprob: -17.139867782592773
    8. 'bottom' → logprob: -17.389867782592773
    9. '(top' → logprob: -17.514867782592773
    10. '  ' → logprob: -20.764867782592773

Token 157: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023248042911291122
    2. 'and' → logprob: -3.7732479572296143
    3. ' ' → logprob: -14.023247718811035
    4. '   ' → logprob: -14.148247718811035
    5. '    ' → logprob: -14.523247718811035
    6. '        ' → logprob: -15.773247718811035
    7. '0' → logprob: -16.02324867248535
    8. '           ' → logprob: -16.52324867248535
    9. '       ' → logprob: -17.14824867248535
    10. '      ' → logprob: -17.77324867248535

Token 158: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.1269993931055069
    2. 'all' → logprob: -2.1269993782043457
    3. 'shape' → logprob: -10.376999855041504
    4. ' shape' → logprob: -10.876999855041504
    5. ' ' → logprob: -12.126999855041504
    6. '(all' → logprob: -12.251999855041504
    7. ''all' → logprob: -12.751999855041504
    8. '   ' → logprob: -13.126999855041504
    9. '           ' → logprob: -14.001999855041504
    10. '       ' → logprob: -14.126999855041504

Token 159: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.375001907348633
    3. ' (' → logprob: -15.125001907348633
    4. '(shape' → logprob: -15.500001907348633
    5. 'c' → logprob: -16.500001907348633
    6. 'shape' → logprob: -18.625001907348633
    7. '(row' → logprob: -19.125001907348633
    8. '(
' → logprob: -19.125001907348633
    9. '(i' → logprob: -19.375001907348633
    10. '(cell' → logprob: -19.750001907348633

Token 160: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.043015748262405396
    2. '==' → logprob: -3.168015718460083
    3. '.' → logprob: -12.043015480041504
    4. ' ' → logprob: -12.418015480041504
    5. ')' → logprob: -12.793015480041504
    6. '=='' → logprob: -13.543015480041504
    7. '   ' → logprob: -14.793015480041504
    8. ')==' → logprob: -15.168015480041504
    9. '('.')' → logprob: -15.168015480041504
    10. '  ' → logprob: -15.293015480041504

Token 161: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0004510493890848011
    2. ' '.'' → logprob: -7.75045108795166
    3. '.' → logprob: -10.87545108795166
    4. '('.')' → logprob: -14.25045108795166
    5. ''' → logprob: -14.62545108795166
    6. '"."' → logprob: -16.250450134277344
    7. ' '.')' → logprob: -16.375450134277344
    8. '('.' → logprob: -17.625450134277344
    9. '.'.' → logprob: -17.750450134277344
    10. '')' → logprob: -17.750450134277344

Token 162: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3868827819824219
    2. 'for' → logprob: -1.1368827819824219
    3. '(shape' → logprob: -12.136882781982422
    4. ')' → logprob: -12.511882781982422
    5. 'shape' → logprob: -14.386882781982422
    6. '	for' → logprob: -14.636882781982422
    7. ' in' → logprob: -15.136882781982422
    8. 'in' → logprob: -15.261882781982422
    9. '
' → logprob: -15.511882781982422
    10. '```' → logprob: -15.511882781982422

Token 163: ' c' (ID: 274)
  Prédit: ' shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shape' → logprob: -0.0633825957775116
    2. 'shape' → logprob: -2.813382625579834
    3. '(shape' → logprob: -6.563382625579834
    4. '.shape' → logprob: -13.063382148742676
    5. ')' → logprob: -15.063382148742676
    6. '(' → logprob: -15.813382148742676
    7. ' ' → logprob: -16.813383102416992
    8. ' (' → logprob: -17.188383102416992
    9. 'Shape' → logprob: -17.813383102416992
    10. '   ' → logprob: -17.813383102416992

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012355535291135311
    2. 'shape' → logprob: -4.887355327606201
    3. 'in' → logprob: -5.387355327606201
    4. '[' → logprob: -9.51235580444336
    5. ' shape' → logprob: -9.76235580444336
    6. '.shape' → logprob: -11.76235580444336
    7. 'bottom' → logprob: -12.01235580444336
    8. '(shape' → logprob: -12.26235580444336
    9. '[in' → logprob: -12.51235580444336
    10. ' [' → logprob: -13.26235580444336

Token 165: ' shape' (ID: 9591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.16026079654693604
    2. ' shape' → logprob: -1.910260796546936
    3. '.shape' → logprob: -10.660261154174805
    4. '(shape' → logprob: -11.410261154174805
    5. ' ' → logprob: -14.535261154174805
    6. '   ' → logprob: -14.660261154174805
    7. '
' → logprob: -14.910261154174805
    8. '...' → logprob: -15.410261154174805
    9. 'hape' → logprob: -15.410261154174805
    10. ')' → logprob: -15.785261154174805

Token 166: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. 'bottom' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.375003814697266
    4. ' [' → logprob: -16.625003814697266
    5. '[b' → logprob: -16.750003814697266
    6. '[-' → logprob: -17.000003814697266
    7. '[top' → logprob: -17.125003814697266
    8. '
' → logprob: -18.500003814697266
    9. '[
' → logprob: -18.500003814697266
    10. 's' → logprob: -18.750003814697266

Token 167: 'bottom' (ID: 29677)
  Prédit: 'bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0019576558843255043
    2. '[' → logprob: -6.251957893371582
    3. ' bottom' → logprob: -10.501957893371582
    4. '(bottom' → logprob: -14.001957893371582
    5. '[-' → logprob: -14.876957893371582
    6. 'bot' → logprob: -15.626957893371582
    7. '   ' → logprob: -16.501956939697266
    8. 'rows' → logprob: -16.501956939697266
    9. '.bottom' → logprob: -17.126956939697266
    10. '
' → logprob: -17.626956939697266

Token 168: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.030521299690008163
    2. '):' → logprob: -3.5305213928222656
    3. ']):
' → logprob: -8.030521392822266
    4. '       ' → logprob: -8.280521392822266
    5. '           ' → logprob: -9.655521392822266
    6. ':' → logprob: -10.280521392822266
    7. ']):' → logprob: -10.405521392822266
    8. ']:
' → logprob: -11.030521392822266
    9. ')' → logprob: -11.280521392822266
    10. '):

' → logprob: -12.030521392822266

Token 169: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012483753263950348
    2. ' bottom' → logprob: -4.762483596801758
    3. 'bottom' → logprob: -6.137483596801758
    4. '           ' → logprob: -6.512483596801758
    5. '   ' → logprob: -9.637483596801758
    6. ':
' → logprob: -9.762483596801758
    7. '):
' → logprob: -11.012483596801758
    8. '-' → logprob: -11.012483596801758
    9. '               ' → logprob: -11.387483596801758
    10. '      ' → logprob: -11.637483596801758

Token 170: ' bottom' (ID: 8725)
  Prédit: ' bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.25194260478019714
    2. 'bottom' (adapté à ' bottom') → logprob: -1.5019426345825195
    3. '           ' → logprob: -11.37694263458252
    4. '(bottom' → logprob: -14.37694263458252
    5. '1' → logprob: -15.00194263458252
    6. '```' → logprob: -15.25194263458252
    7. '-' → logprob: -15.50194263458252
    8. '            ' → logprob: -15.50194263458252
    9. 'b' → logprob: -15.87694263458252
    10. '.bottom' → logprob: -16.626941680908203

Token 171: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.002165009966120124
    2. '-=' → logprob: -6.252164840698242
    3. '-' → logprob: -9.502164840698242
    4. '    ' → logprob: -10.002164840698242
    5. ' +=' → logprob: -10.002164840698242
    6. '   ' → logprob: -10.252164840698242
    7. ' -' → logprob: -10.752164840698242
    8. '            ' → logprob: -12.252164840698242
    9. ' ' → logprob: -12.877164840698242
    10. '           ' → logprob: -13.127164840698242

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02975071594119072
    2. ' ' → logprob: -3.5297508239746094
    3. '   ' → logprob: -16.15475082397461
    4. '```' → logprob: -16.40475082397461
    5. '0' → logprob: -17.02975082397461
    6. '۱' → logprob: -17.15475082397461
    7. '<|end|>' → logprob: -17.65475082397461
    8. ' ' → logprob: -17.90475082397461
    9. '
' → logprob: -18.59225082397461
    10. '１' → logprob: -18.65475082397461

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '۱' → logprob: -16.8750057220459
    4. '<|end|>' → logprob: -16.8750057220459
    5. '
' → logprob: -17.4375057220459
    6. '```' → logprob: -17.6875057220459
    7. '１' → logprob: -18.9375057220459
    8. '१' → logprob: -19.1250057220459
    9. '১' → logprob: -19.3125057220459
    10. '0' → logprob: -19.5000057220459

Token 174: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23222613334655762
    2. '       ' → logprob: -1.7322261333465576
    3. '<|end|>' → logprob: -3.6072261333465576
    4. '        
' → logprob: -7.107226371765137
    5. '    
' → logprob: -7.607226371765137
    6. '  
' → logprob: -7.982226371765137
    7. ' 
' → logprob: -8.107226371765137
    8. '<|end|>' → logprob: -8.482226371765137
    9. '   ' → logprob: -8.607226371765137
    10. 'newline' → logprob: -8.732226371765137

Token 175: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06490915268659592
    2. '       ' → logprob: -2.8149092197418213
    3. '<|end|>' → logprob: -6.814908981323242
    4. '        
' → logprob: -7.064908981323242
    5. '    
' → logprob: -7.814908981323242
    6. '

' → logprob: -8.189908981323242
    7. '   ' → logprob: -9.314908981323242
    8. ' 
' → logprob: -10.189908981323242
    9. '  
' → logprob: -10.189908981323242
    10. '```' → logprob: -10.564908981323242

Token 176: ' if' (ID: 538)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.3706575632095337
    2. '       ' → logprob: -1.3706575632095337
    3. '
' → logprob: -3.995657444000244
    4. ' left' → logprob: -4.120657444000244
    5. 'top' → logprob: -4.620657444000244
    6. 'if' (adapté à ' if') → logprob: -5.245657444000244
    7. '   ' → logprob: -5.745657444000244
    8. '        
' → logprob: -6.370657444000244
    9. '    
' → logprob: -7.870657444000244
    10. 'def' → logprob: -8.745657920837402

Token 177: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.1272062063217163
    2. 'top' → logprob: -2.127206325531006
    3. ' bottom' → logprob: -8.252205848693848
    4. 'bottom' → logprob: -11.252205848693848
    5. ' ' → logprob: -13.127205848693848
    6. '	top' → logprob: -14.002205848693848
    7. ' not' → logprob: -14.252205848693848
    8. '(top' → logprob: -15.252205848693848
    9. '   ' → logprob: -15.502205848693848
    10. ' ' → logprob: -15.752205848693848

Token 178: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12693241238594055
    2. ' >' → logprob: -2.126932382583618
    3. '<=' → logprob: -13.251932144165039
    4. '>
' → logprob: -14.251932144165039
    5. ' >
' → logprob: -14.876932144165039
    6. '==' → logprob: -15.126932144165039
    7. ' <=' → logprob: -15.251932144165039
    8. '   ' → logprob: -15.251932144165039
    9. '>end' → logprob: -15.376932144165039
    10. '>b' → logprob: -15.626932144165039

Token 179: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.029751179739832878
    2. ' bottom' → logprob: -3.5297510623931885
    3. 'bot' → logprob: -14.40475082397461
    4. 'b' → logprob: -16.77975082397461
    5. 'Bottom' → logprob: -18.52975082397461
    6. ' ' → logprob: -19.52975082397461
    7. '```' → logprob: -19.65475082397461
    8. '=' → logprob: -19.90475082397461
    9. '(bottom' → logprob: -19.90475082397461
    10. '_bottom' → logprob: -19.90475082397461

Token 180: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6303373575210571
    2. ':
' → logprob: -1.5053373575210571
    3. ':' → logprob: -1.6303373575210571
    4. '           ' → logprob: -3.3803372383117676
    5. ':return' → logprob: -4.630337238311768
    6. '   ' → logprob: -5.380337238311768
    7. ' return' → logprob: -7.005337238311768
    8. 'return' → logprob: -8.755337715148926
    9. ' :
' → logprob: -9.505337715148926
    10. ',' → logprob: -9.505337715148926

Token 181: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03192056342959404
    2. 'return' → logprob: -3.9069206714630127
    3. ' return' → logprob: -5.031920433044434
    4. '           ' → logprob: -5.656920433044434
    5. '        
' → logprob: -7.281920433044434
    6. '
' → logprob: -8.781920433044434
    7. '[]
' → logprob: -8.906920433044434
    8. '[]' → logprob: -9.406920433044434
    9. '    
' → logprob: -10.156920433044434
    10. '\n' → logprob: -10.781920433044434

Token 182: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3144517242908478
    2. ' return' → logprob: -1.5644516944885254
    3. '       ' → logprob: -2.8144516944885254
    4. '[]
' → logprob: -8.189452171325684
    5. '           ' → logprob: -8.689452171325684
    6. ' []
' → logprob: -9.814452171325684
    7. '[]' → logprob: -10.064452171325684
    8. '        
' → logprob: -10.439452171325684
    9. ' 
' → logprob: -11.064452171325684
    10. '	return' → logprob: -11.314452171325684

Token 183: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.031220851466059685
    2. '['' → logprob: -3.5312209129333496
    3. '["' → logprob: -6.78122091293335
    4. ' []' → logprob: -8.656220436096191
    5. '[]
' → logprob: -9.281220436096191
    6. ' ['' → logprob: -10.406220436096191
    7. '[' → logprob: -10.781220436096191
    8. '[]

' → logprob: -12.281220436096191
    9. '[],' → logprob: -12.906220436096191
    10. '[
' → logprob: -13.156220436096191

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43455398082733154
    2. '[]' → logprob: -2.059554100036621
    3. '   ' → logprob: -2.684554100036621
    4. '['' → logprob: -2.684554100036621
    5. '        
' → logprob: -3.934554100036621
    6. '[' → logprob: -4.309554100036621
    7. '[]
' → logprob: -4.559554100036621
    8. 'shape' → logprob: -4.809554100036621
    9. '    
' → logprob: -4.934554100036621
    10. '<|end|>' → logprob: -5.059554100036621

Token 185: ' left' (ID: 3561)
  Prédit: 'trim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trim' → logprob: -0.755139946937561
    2. 'left' (adapté à ' left') → logprob: -1.755139946937561
    3. ' trimmed' → logprob: -2.2551398277282715
    4. '       ' → logprob: -2.3801398277282715
    5. ' left' → logprob: -2.5051398277282715
    6. 'shape' → logprob: -3.1301398277282715
    7. ' shape' → logprob: -3.8801398277282715
    8. '   ' → logprob: -5.3801398277282715
    9. 'new' → logprob: -6.1301398277282715
    10. 'cols' → logprob: -6.2551398277282715

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014217096380889416
    2. '=' → logprob: -4.514216899871826
    3. ' ,' → logprob: -6.389216899871826
    4. ' =' → logprob: -6.514216899871826
    5. ' ' → logprob: -14.514217376708984
    6. '_,' → logprob: -14.889217376708984
    7. '<|end|>' → logprob: -15.139217376708984
    8. ')' → logprob: -15.639217376708984
    9. ',
' → logprob: -15.764217376708984
    10. ' +=' → logprob: -15.889217376708984

Token 187: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.31352484226226807
    2. 'right' → logprob: -1.313524842262268
    3. '0' → logprob: -8.313525199890137
    4. ' ' → logprob: -11.813525199890137
    5. ' top' → logprob: -12.313525199890137
    6. 'top' → logprob: -12.563525199890137
    7. '	right' → logprob: -14.188525199890137
    8. '   ' → logprob: -14.563525199890137
    9. 'Right' → logprob: -14.688525199890137
    10. 'cols' → logprob: -14.813525199890137

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002187430858612
    2. '=' → logprob: -2.3502187728881836
    3. ',' → logprob: -11.350218772888184
    4. ' ' → logprob: -15.350218772888184
    5. ' ,' → logprob: -15.850218772888184
    6. '   ' → logprob: -18.100217819213867
    7. '0' → logprob: -19.100217819213867
    8. ')' → logprob: -19.225217819213867
    9. '＝' → logprob: -20.225217819213867
    10. '  ' → logprob: -20.225217819213867

Token 189: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014167038723826408
    2. ' ' → logprob: -4.264166831970215
    3. '   ' → logprob: -12.764166831970215
    4. '       ' → logprob: -14.389166831970215
    5. '  ' → logprob: -16.51416778564453
    6. '     ' → logprob: -18.26416778564453
    7. '    ' → logprob: -18.26416778564453
    8. ',' → logprob: -19.01416778564453
    9. '=' → logprob: -19.13916778564453
    10. '۰' → logprob: -19.26416778564453

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.37502098083496
    4. 'cols' → logprob: -19.50002098083496
    5. '       ' → logprob: -20.50002098083496
    6. '۰' → logprob: -21.12502098083496
    7. '     ' → logprob: -22.12502098083496
    8. 'col' → logprob: -22.37502098083496
    9. '  ' → logprob: -22.37502098083496
    10. 'columns' → logprob: -22.37502098083496

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.802049756515771e-05
    2. ' ,' → logprob: -9.625067710876465
    3. ',len' → logprob: -14.125067710876465
    4. '<|end|>' → logprob: -14.750067710876465
    5. ',
' → logprob: -14.875067710876465
    6. ' cols' → logprob: -15.625067710876465
    7. 'cols' → logprob: -16.12506866455078
    8. ',right' → logprob: -16.25006866455078
    9. '       ' → logprob: -17.50006866455078
    10. '،' → logprob: -18.62506866455078

Token 192: ' cols' (ID: 37134)
  Prédit: 'cols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cols' → logprob: -0.06196914613246918
    2. ' cols' → logprob: -2.811969041824341
    3. 'len' → logprob: -14.186968803405762
    4. '(cols' → logprob: -15.061968803405762
    5. 'col' → logprob: -15.186968803405762
    6. ' len' → logprob: -16.061969757080078
    7. 'columns' → logprob: -16.436969757080078
    8. '   ' → logprob: -16.686969757080078
    9. ' ' → logprob: -17.061969757080078
    10. '       ' → logprob: -17.061969757080078

Token 193: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4740799069404602
    2. '-' → logprob: -0.9740799069404602
    3. ' ' → logprob: -13.599080085754395
    4. '<|end|>' → logprob: -13.599080085754395
    5. '   ' → logprob: -15.474080085754395
    6. '<|end|>' → logprob: -16.849079132080078
    7. '–' → logprob: -17.224079132080078
    8. ' –' → logprob: -17.474079132080078
    9. '[' → logprob: -17.474079132080078
    10. '−' → logprob: -17.599079132080078

Token 194: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023095356300473213
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -14.87523078918457
    4. '```' → logprob: -18.00023078918457
    5. '0' → logprob: -18.12523078918457
    6. '       ' → logprob: -18.62523078918457
    7. '  ' → logprob: -18.62523078918457
    8. '    ' → logprob: -19.00023078918457
    9. '۱' → logprob: -19.68773078918457
    10. '     ' → logprob: -19.93773078918457

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.250031471252441
    4. '```' → logprob: -17.125032424926758
    5. '       ' → logprob: -18.062532424926758
    6. '
' → logprob: -18.125032424926758
    7. '  ' → logprob: -18.812532424926758
    8. '۱' → logprob: -19.062532424926758
    9. '0' → logprob: -19.437532424926758
    10. '           ' → logprob: -19.625032424926758

Token 196: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0703558549284935
    2. '<|end|>' → logprob: -3.4453558921813965
    3. '
' → logprob: -3.5703558921813965
    4. ' while' → logprob: -5.1953558921813965
    5. 'while' → logprob: -6.6953558921813965
    6. '   ' → logprob: -7.4453558921813965
    7. '<|end|>' → logprob: -8.320355415344238
    8. ' 
' → logprob: -10.070355415344238
    9. '        
' → logprob: -10.320355415344238
    10. ' ' → logprob: -10.445355415344238

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01698940619826317
    2. '<|end|>' → logprob: -4.891989231109619
    3. ' while' → logprob: -5.016989231109619
    4. 'while' → logprob: -7.141989231109619
    5. '   ' → logprob: -7.141989231109619
    6. '
' → logprob: -7.516989231109619
    7. '	while' → logprob: -8.391989707946777
    8. '<|end|>' → logprob: -9.266989707946777
    9. '	' → logprob: -9.766989707946777
    10. '	   ' → logprob: -9.891989707946777

Token 198: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5808656215667725
    2. ' while' → logprob: -0.8308656215667725
    3. '       ' → logprob: -5.330865859985352
    4. '	while' → logprob: -10.080865859985352
    5. '   ' → logprob: -11.080865859985352
    6. 'While' → logprob: -11.330865859985352
    7. 'left' → logprob: -13.080865859985352
    8. ' ' → logprob: -14.580865859985352
    9. '
' → logprob: -14.830865859985352
    10. '           ' → logprob: -14.955865859985352

Token 199: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.10218896716833115
    2. 'left' → logprob: -2.352189064025879
    3. ' right' → logprob: -6.352189064025879
    4. 'right' → logprob: -8.352189064025879
    5. ' all' → logprob: -14.477189064025879
    6. '(left' → logprob: -14.602189064025879
    7. ' lef' → logprob: -15.352189064025879
    8. '	left' → logprob: -15.477189064025879
    9. ' ' → logprob: -15.977189064025879
    10. '[left' → logprob: -16.352188110351562

Token 200: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.014171031303703785
    2. '<=' → logprob: -4.264171123504639
    3. ' <' → logprob: -11.88917064666748
    4. ' ' → logprob: -14.88917064666748
    5. ' ≤' → logprob: -16.014171600341797
    6. '<' → logprob: -16.389171600341797
    7. ')<=' → logprob: -17.639171600341797
    8. '  ' → logprob: -18.389171600341797
    9. '<len' → logprob: -18.639171600341797
    10. ' <=",' → logprob: -18.889171600341797

Token 201: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.20141470432281494
    2. ' right' → logprob: -1.701414704322815
    3. 'left' → logprob: -14.451415061950684
    4. '	right' → logprob: -14.701415061950684
    5. '(right' → logprob: -15.451415061950684
    6. ' ' → logprob: -16.076414108276367
    7. '[right' → logprob: -16.951414108276367
    8. 'Right' → logprob: -17.701414108276367
    9. ' left' → logprob: -17.826414108276367
    10. ',right' → logprob: -18.701414108276367

Token 202: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014164687134325504
    2. 'and' → logprob: -4.264164924621582
    3. '   ' → logprob: -14.139164924621582
    4. '    ' → logprob: -15.639164924621582
    5. ' ' → logprob: -16.514163970947266
    6. '       ' → logprob: -16.764163970947266
    7. '           ' → logprob: -16.764163970947266
    8. '        ' → logprob: -16.889163970947266
    9. '      ' → logprob: -18.014163970947266
    10. ',' → logprob: -18.514163970947266

Token 203: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3484537899494171
    2. ' all' → logprob: -1.2234537601470947
    3. '(all' → logprob: -12.723453521728516
    4. ' ' → logprob: -13.098453521728516
    5. '   ' → logprob: -13.098453521728516
    6. '
' → logprob: -14.598453521728516
    7. '    ' → logprob: -15.473453521728516
    8. '	all' → logprob: -15.473453521728516
    9. '  ' → logprob: -15.598453521728516
    10. '       ' → logprob: -16.098453521728516

Token 204: '(shape' (ID: 58011)
  Prédit: '(shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shape' → logprob: -0.1014174222946167
    2. '(c' → logprob: -2.3514175415039062
    3. 'shape' → logprob: -7.101417541503906
    4. '(row' → logprob: -8.101417541503906
    5. '(' → logprob: -9.851417541503906
    6. '(cell' → logprob: -11.351417541503906
    7. '(s' → logprob: -12.476417541503906
    8. 'c' → logprob: -12.476417541503906
    9. '(line' → logprob: -12.601417541503906
    10. '((' → logprob: -13.351417541503906

Token 205: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.31402894854545593
    2. '[row' → logprob: -1.3140289783477783
    3. 'r' → logprob: -7.939028739929199
    4. '[top' → logprob: -8.1890287399292
    5. '[i' → logprob: -9.0640287399292
    6. 'row' → logprob: -11.3140287399292
    7. '[' → logprob: -12.9390287399292
    8. '[t' → logprob: -13.9390287399292
    9. '[line' → logprob: -14.0640287399292
    10. '[layer' → logprob: -16.064029693603516

Token 206: '][' (ID: 2696)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.03068661503493786
    2. '[top' → logprob: -3.905686616897583
    3. '][' → logprob: -5.030686378479004
    4. '[' → logprob: -5.905686378479004
    5. '[t' → logprob: -7.655686378479004
    6. '[row' → logprob: -8.905686378479004
    7. ' [' → logprob: -9.405686378479004
    8. 'r' → logprob: -10.655686378479004
    9. '[l' → logprob: -11.405686378479004
    10. 'top' → logprob: -11.405686378479004

Token 207: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -7.24310302757658e-05
    2. '[left' → logprob: -10.250072479248047
    3. ' left' → logprob: -10.375072479248047
    4. 'l' → logprob: -12.625072479248047
    5. 'r' → logprob: -13.500072479248047
    6. '   ' → logprob: -15.125072479248047
    7. '.left' → logprob: -15.375072479248047
    8. 'right' → logprob: -15.500072479248047
    9. '][' → logprob: -16.250072479248047
    10. ' ' → logprob: -16.250072479248047

Token 208: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013317400589585304
    2. ']==' → logprob: -4.638317584991455
    3. '==' → logprob: -5.888317584991455
    4. ' ==' → logprob: -7.263317584991455
    5. ' ]' → logprob: -10.888317108154297
    6. ']
' → logprob: -11.638317108154297
    7. 'for' → logprob: -11.763317108154297
    8. ']=='' → logprob: -11.763317108154297
    9. ')' → logprob: -11.888317108154297
    10. ' ' → logprob: -12.138317108154297

Token 209: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5236546993255615
    2. '==' → logprob: -0.8986546993255615
    3. ' for' → logprob: -8.64865493774414
    4. 'for' → logprob: -9.02365493774414
    5. ']==' → logprob: -9.77365493774414
    6. '   ' → logprob: -10.14865493774414
    7. ' ' → logprob: -10.39865493774414
    8. ']' → logprob: -10.39865493774414
    9. '.' → logprob: -10.52365493774414
    10. ')' → logprob: -11.14865493774414

Token 210: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0005567280459217727
    2. ' '.'' → logprob: -7.500556945800781
    3. '.' → logprob: -12.625556945800781
    4. '"."' → logprob: -15.250556945800781
    5. ' '.')' → logprob: -16.00055694580078
    6. '('.')' → logprob: -16.37555694580078
    7. '.'.' → logprob: -17.75055694580078
    8. '   ' → logprob: -17.75055694580078
    9. ' ' → logprob: -18.00055694580078
    10. '".' → logprob: -18.12555694580078

Token 211: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03817162662744522
    2. 'for' → logprob: -3.2881715297698975
    3. '           ' → logprob: -10.163171768188477
    4. '       ' → logprob: -10.538171768188477
    5. '   ' → logprob: -11.163171768188477
    6. ')' → logprob: -11.538171768188477
    7. '    ' → logprob: -11.663171768188477
    8. ' ' → logprob: -11.663171768188477
    9. '        ' → logprob: -11.788171768188477
    10. '            ' → logprob: -12.788171768188477

Token 212: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0018129866803064942
    2. ' r' → logprob: -6.751812934875488
    3. 'range' → logprob: -7.376812934875488
    4. ' range' → logprob: -11.001812934875488
    5. '   ' → logprob: -16.001813888549805
    6. ' ' → logprob: -16.251813888549805
    7. '	r' → logprob: -17.126813888549805
    8. ')' → logprob: -18.251813888549805
    9. '  ' → logprob: -18.376813888549805
    10. 'row' → logprob: -18.626813888549805

Token 213: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002858370542526245
    2. 'in' → logprob: -5.8778581619262695
    3. 'range' → logprob: -10.00285816192627
    4. ' range' → logprob: -12.25285816192627
    5. 'r' → logprob: -13.37785816192627
    6. ' ' → logprob: -14.37785816192627
    7. 'n' → logprob: -15.25285816192627
    8. '   ' → logprob: -15.75285816192627
    9. ')' → logprob: -16.002859115600586
    10. ' r' → logprob: -16.752859115600586

Token 214: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018152514472603798
    2. ' range' → logprob: -4.018152713775635
    3. 'top' → logprob: -12.893152236938477
    4. '   ' → logprob: -17.143152236938477
    5. ' ' → logprob: -17.643152236938477
    6. ' top' → logprob: -18.018152236938477
    7. '(range' → logprob: -18.018152236938477
    8. '	range' → logprob: -18.643152236938477
    9. ')' → logprob: -18.893152236938477
    10. '
' → logprob: -19.643152236938477

Token 215: '(top' (ID: 42605)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.10060203075408936
    2. '(top' → logprob: -2.350602149963379
    3. ' top' → logprob: -7.975602149963379
    4. 'rows' → logprob: -10.100602149963379
    5. '[top' → logprob: -11.850602149963379
    6. '	top' → logprob: -13.600602149963379
    7. '(rows' → logprob: -13.850602149963379
    8. '(' → logprob: -15.225602149963379
    9. '   ' → logprob: -15.350602149963379
    10. 'tops' → logprob: -15.350602149963379

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004043361986987293
    2. ' ,' → logprob: -8.000404357910156
    3. ',right' → logprob: -9.750404357910156
    4. ',b' → logprob: -12.125404357910156
    5. ',
' → logprob: -13.125404357910156
    6. ',left' → logprob: -14.125404357910156
    7. '[top' → logprob: -14.250404357910156
    8. '+' → logprob: -14.500404357910156
    9. '   ' → logprob: -14.750404357910156
    10. 'top' → logprob: -14.875404357910156

Token 217: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.029792843386530876
    2. ' bottom' → logprob: -3.5297927856445312
    3. 'top' → logprob: -10.404792785644531
    4. '(bottom' → logprob: -12.154792785644531
    5. '   ' → logprob: -12.279792785644531
    6. 'right' → logprob: -13.904792785644531
    7. ' top' → logprob: -14.654792785644531
    8. ' ' → logprob: -15.779792785644531
    9. '
' → logprob: -15.904792785644531
    10. '       ' → logprob: -16.15479278564453

Token 218: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47408339381217957
    2. ' +' → logprob: -0.974083423614502
    3. '   ' → logprob: -12.849082946777344
    4. ' ' → logprob: -13.974082946777344
    5. '+
' → logprob: -14.099082946777344
    6. ',' → logprob: -14.349082946777344
    7. ')' → logprob: -14.849082946777344
    8. ' +
' → logprob: -14.849082946777344
    9. ')+' → logprob: -15.974082946777344
    10. '       ' → logprob: -16.349082946777344

Token 219: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001414426224073395
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -13.750141143798828
    4. ')' → logprob: -15.375141143798828
    5. '
' → logprob: -16.000141143798828
    6. '  ' → logprob: -17.687641143798828
    7. '0' → logprob: -18.312641143798828
    8. '```' → logprob: -18.375141143798828
    9. ',' → logprob: -18.562641143798828
    10. '2' → logprob: -18.625141143798828

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.125017166137695
    3. ')' → logprob: -14.125017166137695
    4. '   ' → logprob: -14.375017166137695
    5. '
' → logprob: -15.125017166137695
    6. '))' → logprob: -16.312517166137695
    7. '2' → logprob: -16.625017166137695
    8. '):
' → logprob: -17.062517166137695
    9. '```' → logprob: -17.250017166137695
    10. '0' → logprob: -17.312517166137695

Token 221: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01332493219524622
    2. '):' → logprob: -4.388324737548828
    3. ')):
' → logprob: -7.388324737548828
    4. ' ):
' → logprob: -9.263324737548828
    5. '       ' → logprob: -10.263324737548828
    6. ')' → logprob: -10.888324737548828
    7. ')):' → logprob: -10.888324737548828
    8. '):

' → logprob: -11.763324737548828
    9. '   ' → logprob: -12.013324737548828
    10. '):
' → logprob: -12.263324737548828

Token 222: '           ' (ID: 352)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.16492010653018951
    2. '       ' → logprob: -2.5399200916290283
    3. '           ' → logprob: -3.1649200916290283
    4. 'left' → logprob: -3.5399200916290283
    5. '[left' → logprob: -7.914920330047607
    6. '   ' → logprob: -8.03991985321045
    7. '	left' → logprob: -8.16491985321045
    8. '):
' → logprob: -8.66491985321045
    9. '               ' → logprob: -8.78991985321045
    10. ':
' → logprob: -9.03991985321045

Token 223: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.1002088338136673
    2. ' left' → logprob: -2.3502087593078613
    3. '           ' → logprob: -13.47520923614502
    4. 'right' → logprob: -14.35020923614502
    5. '	left' → logprob: -16.100208282470703
    6. '(left' → logprob: -17.100208282470703
    7. ' right' → logprob: -17.100208282470703
    8. '   ' → logprob: -17.225208282470703
    9. '.left' → logprob: -17.350208282470703
    10. '[left' → logprob: -17.850208282470703

Token 224: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.014166799373924732
    2. '+=' → logprob: -4.264166831970215
    3. ' ' → logprob: -13.389166831970215
    4. ']+=' → logprob: -14.639166831970215
    5. '    ' → logprob: -14.889166831970215
    6. '+' → logprob: -15.139166831970215
    7. ' +' → logprob: -15.389166831970215
    8. '<|end|>' → logprob: -16.3891658782959
    9. '+='' → logprob: -16.5141658782959
    10. '   ' → logprob: -17.0141658782959

Token 225: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009756443090736866
    2. ' ' → logprob: -4.634756565093994
    3. '```' → logprob: -15.259756088256836
    4. '   ' → logprob: -16.197256088256836
    5. '
' → logprob: -17.009756088256836
    6. ' ' → logprob: -18.072256088256836
    7. '۱' → logprob: -18.197256088256836
    8. '<|end|>' → logprob: -18.384756088256836
    9. '１' → logprob: -18.572256088256836
    10. '0' → logprob: -18.634756088256836

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.607391408877447e-05
    2. ' ' → logprob: -10.250036239624023
    3. '
' → logprob: -15.500036239624023
    4. '```' → logprob: -15.625036239624023
    5. '<|end|>' → logprob: -16.437536239624023
    6. '   ' → logprob: -17.125036239624023
    7. '۱' → logprob: -18.187536239624023
    8. '

' → logprob: -18.500036239624023
    9. '<|end|>' → logprob: -19.187536239624023
    10. '１' → logprob: -19.250036239624023

Token 227: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007964316755533218
    2. '<|end|>' → logprob: -5.132964134216309
    3. ' right' → logprob: -6.882964134216309
    4. '
' → logprob: -7.632964134216309
    5. ' while' → logprob: -8.382964134216309
    6. 'right' → logprob: -8.632964134216309
    7. '<|end|>' → logprob: -10.757964134216309
    8. '        
' → logprob: -11.007964134216309
    9. ' 
' → logprob: -11.257964134216309
    10. '   ' → logprob: -11.382964134216309

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031543076038360596
    2. ' while' → logprob: -6.128154277801514
    3. '<|end|>' → logprob: -7.503154277801514
    4. '
' → logprob: -8.878154754638672
    5. 'while' → logprob: -9.253154754638672
    6. ' right' → logprob: -9.503154754638672
    7. '        
' → logprob: -10.128154754638672
    8. 'right' → logprob: -11.128154754638672
    9. '<|end|>' → logprob: -11.503154754638672
    10. ' 
' → logprob: -11.628154754638672

Token 229: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.1317145675420761
    2. 'while' (adapté à ' while') → logprob: -2.1317145824432373
    3. '       ' → logprob: -5.881714344024658
    4. ' right' → logprob: -6.506714344024658
    5. 'right' → logprob: -7.631714344024658
    6. '	while' → logprob: -12.631714820861816
    7. '   ' → logprob: -12.881714820861816
    8. ' ' → logprob: -15.006714820861816
    9. 'While' → logprob: -15.131714820861816
    10. '           ' → logprob: -15.256714820861816

Token 230: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.04858794063329697
    2. 'right' → logprob: -3.0485880374908447
    3. '(right' → logprob: -15.798587799072266
    4. '	right' → logprob: -15.798587799072266
    5. ' ' → logprob: -16.548587799072266
    6. '[right' → logprob: -16.548587799072266
    7. 'Right' → logprob: -16.673587799072266
    8. '.right' → logprob: -17.923587799072266
    9. '   ' → logprob: -17.923587799072266
    10. ' left' → logprob: -18.298587799072266

Token 231: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.048608142882585526
    2. '>=' → logprob: -3.0486080646514893
    3. ' <=' → logprob: -11.29860782623291
    4. ' >' → logprob: -12.17360782623291
    5. ' ' → logprob: -13.67360782623291
    6. '>' → logprob: -13.79860782623291
    7. '<=' → logprob: -14.04860782623291
    8. '   ' → logprob: -16.048608779907227
    9. '<|end|>' → logprob: -17.548608779907227
    10. ' ' → logprob: -17.798608779907227

Token 232: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.06197552755475044
    2. ' left' → logprob: -2.8119754791259766
    3. 'right' → logprob: -11.811975479125977
    4. ' right' → logprob: -14.936975479125977
    5. '[left' → logprob: -16.561975479125977
    6. '	left' → logprob: -17.311975479125977
    7. '(left' → logprob: -18.186975479125977
    8. ' lef' → logprob: -19.561975479125977
    9. '.left' → logprob: -19.936975479125977
    10. '_left' → logprob: -20.186975479125977

Token 233: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011061619967222214
    2. 'and' → logprob: -4.511061668395996
    3. '           ' → logprob: -12.011061668395996
    4. '        ' → logprob: -13.011061668395996
    5. ' ' → logprob: -13.261061668395996
    6. '            ' → logprob: -13.386061668395996
    7. '          ' → logprob: -14.636061668395996
    8. '   ' → logprob: -14.636061668395996
    9. '       ' → logprob: -14.886061668395996
    10. '    ' → logprob: -15.011061668395996

Token 234: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.6228604912757874
    2. 'all' → logprob: -1.7478604316711426
    3. 'right' → logprob: -1.8728604316711426
    4. ' right' → logprob: -1.9978604316711426
    5. 'left' → logprob: -9.6228609085083
    6. ' ' → logprob: -10.7478609085083
    7. 'shape' → logprob: -10.9978609085083
    8. ' shape' → logprob: -11.8728609085083
    9. ' left' → logprob: -12.1228609085083
    10. '   ' → logprob: -12.6228609085083

Token 235: '(shape' (ID: 58011)
  Prédit: '(shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shape' → logprob: -0.00045009577297605574
    2. 'shape' → logprob: -7.750450134277344
    3. ' shape' → logprob: -11.125450134277344
    4. '(r' → logprob: -13.125450134277344
    5. '(' → logprob: -13.250450134277344
    6. ' (' → logprob: -14.250450134277344
    7. '.shape' → logprob: -15.375450134277344
    8. '(
' → logprob: -18.625450134277344
    9. '(row' → logprob: -19.250450134277344
    10. '(range' → logprob: -19.250450134277344

Token 236: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -3.3451433409936726e-05
    2. 'r' → logprob: -10.625033378601074
    3. '   ' → logprob: -11.875033378601074
    4. '[' → logprob: -13.250033378601074
    5. ' [' → logprob: -15.625033378601074
    6. '(r' → logprob: -16.62503433227539
    7. '       ' → logprob: -17.00003433227539
    8. '	r' → logprob: -17.12503433227539
    9. '[row' → logprob: -17.12503433227539
    10. '[
' → logprob: -17.50003433227539

Token 237: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4779543876647949
    2. '[right' → logprob: -0.9779543876647949
    3. '[r' → logprob: -6.227954387664795
    4. '[' → logprob: -6.852954387664795
    5. '[left' → logprob: -7.477954387664795
    6. ')[' → logprob: -9.977954864501953
    7. 'right' → logprob: -10.102954864501953
    8. '[next' → logprob: -10.602954864501953
    9. '[row' → logprob: -10.727954864501953
    10. ' ][' → logprob: -10.727954864501953

Token 238: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -8.637786231702194e-05
    2. ' right' → logprob: -9.750086784362793
    3. '[right' → logprob: -10.875086784362793
    4. 'r' → logprob: -11.875086784362793
    5. '
' → logprob: -14.375086784362793
    6. '.' → logprob: -15.000086784362793
    7. '[' → logprob: -15.375086784362793
    8. '   ' → logprob: -15.500086784362793
    9. '.right' → logprob: -15.500086784362793
    10. '```' → logprob: -15.875086784362793

Token 239: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.48383092880249023
    2. ' ==' → logprob: -1.4838309288024902
    3. '==' → logprob: -2.1088309288024902
    4. ']==' → logprob: -3.3588309288024902
    5. ' ]' → logprob: -7.73383092880249
    6. ']=='' → logprob: -9.858831405639648
    7. ' ' → logprob: -10.108831405639648
    8. '```' → logprob: -10.483831405639648
    9. '=='' → logprob: -10.733831405639648
    10. '   ' → logprob: -11.483831405639648

Token 240: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5772711038589478
    2. '==' → logprob: -0.8272711038589478
    3. ']' → logprob: -7.452270984649658
    4. ']==' → logprob: -7.827270984649658
    5. '=='' → logprob: -9.577271461486816
    6. 'right' → logprob: -9.702271461486816
    7. ' ' → logprob: -9.702271461486816
    8. '[' → logprob: -10.327271461486816
    9. 'left' → logprob: -10.327271461486816
    10. '```' → logprob: -11.202271461486816

Token 241: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -7.362307223957032e-05
    2. ' '.'' → logprob: -9.625073432922363
    3. '.' → logprob: -12.000073432922363
    4. '('.')' → logprob: -14.500073432922363
    5. '"."' → logprob: -15.625073432922363
    6. '.'.' → logprob: -15.750073432922363
    7. ''' → logprob: -15.875073432922363
    8. '   ' → logprob: -16.25007438659668
    9. '  ' → logprob: -16.87507438659668
    10. '.'' → logprob: -17.25007438659668

Token 242: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20141683518886566
    2. 'for' → logprob: -1.7014168500900269
    3. ' ' → logprob: -13.076416969299316
    4. ')' → logprob: -14.826416969299316
    5. '	for' → logprob: -14.951416969299316
    6. '   ' → logprob: -15.326416969299316
    7. '           ' → logprob: -16.076416015625
    8. '       ' → logprob: -16.451416015625
    9. ' ' → logprob: -16.451416015625
    10. '```' → logprob: -16.951416015625

Token 243: ' r' (ID: 428)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.8943179249763489
    2. 'right' → logprob: -1.394317865371704
    3. 'left' → logprob: -1.644317865371704
    4. ' left' → logprob: -2.644317865371704
    5. ' top' → logprob: -3.394317865371704
    6. 'top' → logprob: -3.894317865371704
    7. 'r' → logprob: -4.519318103790283
    8. ' range' → logprob: -4.894318103790283
    9. 'range' → logprob: -5.144318103790283
    10. ' r' → logprob: -7.394318103790283

Token 244: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003317092312499881
    2. 'range' → logprob: -6.378316879272461
    3. 'in' → logprob: -6.503316879272461
    4. ' range' → logprob: -9.128316879272461
    5. '=' → logprob: -13.128316879272461
    6. 'ange' → logprob: -14.003316879272461
    7. '   ' → logprob: -14.003316879272461
    8. ' ' → logprob: -14.253316879272461
    9. 'for' → logprob: -15.128316879272461
    10. 'import' → logprob: -15.503316879272461

Token 245: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868812620639801
    2. ' range' → logprob: -1.1368812322616577
    3. 'top' → logprob: -11.886880874633789
    4. ' top' → logprob: -13.386880874633789
    5. '(range' → logprob: -13.636880874633789
    6. 'right' → logprob: -15.761880874633789
    7. ' ' → logprob: -16.26188087463379
    8. '   ' → logprob: -16.51188087463379
    9. 'bottom' → logprob: -16.63688087463379
    10. ' bottom' → logprob: -17.38688087463379

Token 246: '(top' (ID: 42605)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.5762959122657776
    2. '(top' → logprob: -0.8262959122657776
    3. ' top' → logprob: -8.076295852661133
    4. '[top' → logprob: -10.576295852661133
    5. ',' → logprob: -10.951295852661133
    6. '	top' → logprob: -13.451295852661133
    7. '   ' → logprob: -14.576295852661133
    8. '(bottom' → logprob: -15.576295852661133
    9. '(' → logprob: -16.076295852661133
    10. 'bottom' → logprob: -16.076295852661133

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000146687583765015
    2. ' ,' → logprob: -9.750146865844727
    3. ',right' → logprob: -10.125146865844727
    4. '+' → logprob: -11.125146865844727
    5. ',left' → logprob: -11.250146865844727
    6. ',
' → logprob: -11.625146865844727
    7. 'right' → logprob: -12.250146865844727
    8. 'left' → logprob: -12.875146865844727
    9. '   ' → logprob: -13.375146865844727
    10. ' +' → logprob: -13.750146865844727

Token 248: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.5839582085609436
    2. 'top' → logprob: -1.3339581489562988
    3. ' bottom' → logprob: -1.8339581489562988
    4. ' top' → logprob: -3.958958148956299
    5. '   ' → logprob: -12.083958625793457
    6. 'right' → logprob: -13.083958625793457
    7. 'bot' → logprob: -13.083958625793457
    8. '(bottom' → logprob: -13.083958625793457
    9. '(top' → logprob: -13.083958625793457
    10. '           ' → logprob: -13.958958625793457

Token 249: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3153369128704071
    2. '+' → logprob: -1.3153369426727295
    3. ',' → logprob: -6.19033670425415
    4. '   ' → logprob: -12.065337181091309
    5. ' -' → logprob: -12.815337181091309
    6. '-' → logprob: -12.815337181091309
    7. 'left' → logprob: -13.190337181091309
    8. 'right' → logprob: -13.315337181091309
    9. ' ,' → logprob: -13.690337181091309
    10. ' ' → logprob: -13.690337181091309

Token 250: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002668192028068006
    2. ' ' → logprob: -8.250267028808594
    3. '   ' → logprob: -13.750267028808594
    4. '+' → logprob: -13.875267028808594
    5. '
' → logprob: -14.125267028808594
    6. ')' → logprob: -14.375267028808594
    7. 'bottom' → logprob: -14.375267028808594
    8. '0' → logprob: -14.875267028808594
    9. 'right' → logprob: -15.000267028808594
    10. '           ' → logprob: -16.250267028808594

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009605350787751377
    2. ' ' → logprob: -7.000960350036621
    3. '+' → logprob: -10.750960350036621
    4. 'right' → logprob: -11.375960350036621
    5. '   ' → logprob: -11.750960350036621
    6. 'bottom' → logprob: -12.625960350036621
    7. '
' → logprob: -13.500960350036621
    8. '  ' → logprob: -14.625960350036621
    9. ' +' → logprob: -14.875960350036621
    10. 'top' → logprob: -15.000960350036621

Token 252: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.024189390242099762
    2. '):' → logprob: -3.7741894721984863
    3. '       ' → logprob: -7.399189472198486
    4. '           ' → logprob: -8.524188995361328
    5. ':' → logprob: -10.649188995361328
    6. ')' → logprob: -10.649188995361328
    7. '   ' → logprob: -10.899188995361328
    8. ':
' → logprob: -11.149188995361328
    9. '):
' → logprob: -11.649188995361328
    10. '):

' → logprob: -11.774188995361328

Token 253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33752134442329407
    2. 'right' → logprob: -1.5875213146209717
    3. ' right' → logprob: -2.7125213146209717
    4. '       ' → logprob: -4.337521553039551
    5. '	right' → logprob: -7.587521553039551
    6. ' -=' → logprob: -7.837521553039551
    7. '   ' → logprob: -7.837521553039551
    8. '-=' → logprob: -7.962521553039551
    9. '               ' → logprob: -8.21252155303955
    10. '-' → logprob: -8.58752155303955

Token 254: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6931484937667847
    2. 'right' (adapté à ' right') → logprob: -0.6931484937667847
    3. '           ' → logprob: -14.193148612976074
    4. '	right' → logprob: -15.443148612976074
    5. '   ' → logprob: -16.193147659301758
    6. ' ' → logprob: -16.193147659301758
    7. '-' → logprob: -16.693147659301758
    8. 'Right' → logprob: -16.693147659301758
    9. '       ' → logprob: -16.818147659301758
    10. '               ' → logprob: -17.193147659301758

Token 255: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.4744938015937805
    2. '-=' → logprob: -0.9744938015937805
    3. '-' → logprob: -8.599493980407715
    4. '   ' → logprob: -8.974493980407715
    5. '>=' → logprob: -10.849493980407715
    6. '           ' → logprob: -10.849493980407715
    7. '+=' → logprob: -11.099493980407715
    8. ' ' → logprob: -11.599493980407715
    9. '       ' → logprob: -12.099493980407715
    10. '=' → logprob: -12.224493980407715

Token 256: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47408226132392883
    2. '1' → logprob: -0.9740822315216064
    3. 'left' → logprob: -13.349081993103027
    4. ' right' → logprob: -13.724081993103027
    5. '0' → logprob: -13.974081993103027
    6. 'right' → logprob: -13.974081993103027
    7. ' left' → logprob: -14.099081993103027
    8. '   ' → logprob: -17.474082946777344
    9. '```' → logprob: -17.599082946777344
    10. ' ' → logprob: -17.849082946777344

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043138445471413434
    2. ' ' → logprob: -7.750431537628174
    3. '0' → logprob: -14.375431060791016
    4. 'left' → logprob: -17.250431060791016
    5. '   ' → logprob: -17.500431060791016
    6. '```' → logprob: -17.750431060791016
    7. 'right' → logprob: -19.375431060791016
    8. '<|end|>' → logprob: -19.500431060791016
    9. ')' → logprob: -20.375431060791016
    10. '
' → logprob: -20.625431060791016

Token 258: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4353642761707306
    2. '
' → logprob: -1.1853642463684082
    3. '<|end|>' → logprob: -3.310364246368408
    4. '   ' → logprob: -5.560364246368408
    5. '        
' → logprob: -6.435364246368408
    6. '    
' → logprob: -6.560364246368408
    7. '  
' → logprob: -7.060364246368408
    8. ':
' → logprob: -7.310364246368408
    9. ':' → logprob: -7.310364246368408
    10. ' 
' → logprob: -8.060364723205566

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06346774101257324
    2. '
' → logprob: -3.0634677410125732
    3. '<|end|>' → logprob: -4.438467979431152
    4. '        
' → logprob: -6.563467979431152
    5. '   ' → logprob: -7.438467979431152
    6. '    
' → logprob: -7.813467979431152
    7. '<|end|>' → logprob: -9.063467979431152
    8. ' return' → logprob: -9.063467979431152
    9. '  
' → logprob: -9.688467979431152
    10. 'return' → logprob: -9.688467979431152

Token 260: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02457285113632679
    2. '   ' → logprob: -4.149572849273682
    3. '
' → logprob: -5.774572849273682
    4. 'return' → logprob: -5.899572849273682
    5. ' return' → logprob: -6.024572849273682
    6. '        
' → logprob: -9.39957332611084
    7. '    
' → logprob: -9.39957332611084
    8. '```' → logprob: -11.39957332611084
    9. ')' → logprob: -11.77457332611084
    10. '	return' → logprob: -11.89957332611084

Token 261: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.46640726923942566
    2. 'left' → logprob: -1.091407299041748
    3. ' top' → logprob: -3.466407299041748
    4. 'top' → logprob: -5.341407299041748
    5. ' right' → logprob: -7.216407299041748
    6. 'right' → logprob: -8.46640682220459
    7. '(left' → logprob: -11.59140682220459
    8. ' lef' → logprob: -12.09140682220459
    9. ' ' → logprob: -12.21640682220459
    10. ' bottom' → logprob: -12.34140682220459

Token 262: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2014186978340149
    2. '>' → logprob: -1.7014186382293701
    3. ' <=' → logprob: -13.32641887664795
    4. ' ' → logprob: -13.82641887664795
    5. '   ' → logprob: -14.20141887664795
    6. ' >
' → logprob: -14.45141887664795
    7. '<=' → logprob: -14.57641887664795
    8. '>
' → logprob: -15.07641887664795
    9. '#' → logprob: -15.82641887664795
    10. '```' → logprob: -15.95141887664795

Token 263: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.014163628220558167
    2. ' right' → logprob: -4.264163494110107
    3. '	right' → logprob: -16.389163970947266
    4. ' ' → logprob: -18.139163970947266
    5. '[right' → logprob: -18.764163970947266
    6. '(right' → logprob: -19.139163970947266
    7. '   ' → logprob: -19.514163970947266
    8. 'left' → logprob: -20.389163970947266
    9. 'rightness' → logprob: -20.514163970947266
    10. 'Right' → logprob: -20.639163970947266

Token 264: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5047764182090759
    2. ':' → logprob: -1.2547764778137207
    3. ':
' → logprob: -2.5047764778137207
    4. ':return' → logprob: -4.129776477813721
    5. '           ' → logprob: -4.754776477813721
    6. ' return' → logprob: -6.254776477813721
    7. '<|end|>' → logprob: -7.129776477813721
    8. 'return' → logprob: -7.129776477813721
    9. '   ' → logprob: -7.379776477813721
    10. '[' → logprob: -9.129776000976562

Token 265: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28299570083618164
    2. '           ' → logprob: -1.4079957008361816
    3. 'return' → logprob: -6.907995700836182
    4. ' return' → logprob: -7.532995700836182
    5. '        
' → logprob: -9.157995223999023
    6. '[]' → logprob: -9.407995223999023
    7. '	       ' → logprob: -10.407995223999023
    8. '
' → logprob: -10.782995223999023
    9. '   ' → logprob: -11.032995223999023
    10. '[]
' → logprob: -11.532995223999023

Token 266: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4097405672073364
    2. 'return' (adapté à ' return') → logprob: -1.1597405672073364
    3. '       ' → logprob: -4.034740447998047
    4. '           ' → logprob: -5.659740447998047
    5. '[]
' → logprob: -7.159740447998047
    6. '[]' → logprob: -8.034740447998047
    7. ' []
' → logprob: -8.284740447998047
    8. '   ' → logprob: -10.409740447998047
    9. '	return' → logprob: -11.284740447998047
    10. ' ' → logprob: -11.659740447998047

Token 267: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0001398929744027555
    2. '[]
' → logprob: -9.500140190124512
    3. ' []' → logprob: -10.000140190124512
    4. '[]

' → logprob: -11.375140190124512
    5. '[' → logprob: -12.000140190124512
    6. '['' → logprob: -14.250140190124512
    7. '[],' → logprob: -15.125140190124512
    8. '[])' → logprob: -15.375140190124512
    9. '[]}' → logprob: -15.625140190124512
    10. '[
' → logprob: -16.000139236450195

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05612662807106972
    2. '   ' → logprob: -2.931126594543457
    3. '
' → logprob: -6.931126594543457
    4. ' return' → logprob: -9.056126594543457
    5. '    
' → logprob: -9.681126594543457
    6. 'return' → logprob: -9.806126594543457
    7. '        
' → logprob: -10.556126594543457
    8. ' shape' → logprob: -13.181126594543457
    9. ' 
' → logprob: -14.056126594543457
    10. '  
' → logprob: -14.181126594543457

Token 269: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3432425558567047
    2. '       ' → logprob: -1.8432425260543823
    3. ' return' → logprob: -2.218242645263672
    4. 'trim' → logprob: -3.968242645263672
    5. '   ' → logprob: -5.843242645263672
    6. ' trimmed' → logprob: -6.718242645263672
    7. 'shape' → logprob: -9.093242645263672
    8. 'result' → logprob: -9.343242645263672
    9. '[
' → logprob: -9.718242645263672
    10. ' shape' → logprob: -10.593242645263672

Token 270: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04876381903886795
    2. ' [' → logprob: -3.0487637519836426
    3. '[s' → logprob: -9.7987642288208
    4. '[line' → logprob: -10.2987642288208
    5. '[row' → logprob: -11.1737642288208
    6. '[
' → logprob: -11.2987642288208
    7. '[layer' → logprob: -11.4237642288208
    8. '[p' → logprob: -11.7987642288208
    9. '[state' → logprob: -11.7987642288208
    10. '   ' → logprob: -12.5487642288208

Token 271: 'shape' (ID: 25343)
  Prédit: 'shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.10727640986442566
    2. 'row' → logprob: -2.357276439666748
    3. ' shape' → logprob: -5.107276439666748
    4. ' row' → logprob: -7.357276439666748
    5. 'line' → logprob: -7.982276439666748
    6. 's' → logprob: -12.10727596282959
    7. '   ' → logprob: -12.23227596282959
    8. ' line' → logprob: -13.85727596282959
    9. '.shape' → logprob: -14.73227596282959
    10. '       ' → logprob: -15.35727596282959

Token 272: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.027681933715939522
    2. 'r' → logprob: -3.777681827545166
    3. '[row' → logprob: -6.277681827545166
    4. '[top' → logprob: -6.652681827545166
    5. '[t' → logprob: -7.152681827545166
    6. '[i' → logprob: -7.902681827545166
    7. 'row' → logprob: -9.527682304382324
    8. 't' → logprob: -11.277682304382324
    9. '[' → logprob: -11.902682304382324
    10. '   ' → logprob: -12.027682304382324

Token 273: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0017870404990389943
    2. '[top' → logprob: -6.501787185668945
    3. '[left' → logprob: -8.251787185668945
    4. '[' → logprob: -11.751787185668945
    5. 'top' → logprob: -12.001787185668945
    6. ']' → logprob: -12.501787185668945
    7. '   ' → logprob: -13.001787185668945
    8. ' ][' → logprob: -13.001787185668945
    9. 'left' → logprob: -14.751787185668945
    10. '[right' → logprob: -15.626787185668945

Token 274: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.1472419600977446e-06
    2. ' left' → logprob: -13.875000953674316
    3. '[left' → logprob: -16.375001907348633
    4. ':left' → logprob: -17.500001907348633
    5. '   ' → logprob: -18.375001907348633
    6. '
' → logprob: -19.375001907348633
    7. '(left' → logprob: -19.500001907348633
    8. '	left' → logprob: -19.875001907348633
    9. 'lef' → logprob: -20.375001907348633
    10. ',left' → logprob: -20.750001907348633

Token 275: ':right' (ID: 107608)
  Prédit: ':right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':right' → logprob: -0.0010010129772126675
    2. ' :' → logprob: -7.001000881195068
    3. ':' → logprob: -9.376001358032227
    4. 'right' → logprob: -13.251001358032227
    5. '[right' → logprob: -13.626001358032227
    6. '   ' → logprob: -14.001001358032227
    7. ',right' → logprob: -14.501001358032227
    8. ':(' → logprob: -15.251001358032227
    9. ':left' → logprob: -16.501001358032227
    10. '(right' → logprob: -16.876001358032227

Token 276: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015023599844425917
    2. ' +' → logprob: -6.501502513885498
    3. '＋' → logprob: -18.626502990722656
    4. '+r' → logprob: -18.876502990722656
    5. ']+' → logprob: -19.751502990722656
    6. '1' → logprob: -20.376502990722656
    7. '[' → logprob: -20.751502990722656
    8. '   ' → logprob: -21.001502990722656
    9. '+
' → logprob: -21.751502990722656
    10. '+s' → logprob: -22.251502990722656

Token 277: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.500001907348633
    4. ']' → logprob: -17.500001907348633
    5. '+' → logprob: -18.125001907348633
    6. '```' → logprob: -18.625001907348633
    7. '
' → logprob: -18.750001907348633
    8. 'r' → logprob: -19.250001907348633
    9. '``' → logprob: -19.375001907348633
    10. '11' → logprob: -20.562501907348633

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.500000953674316
    3. ']' → logprob: -15.375000953674316
    4. '
' → logprob: -16.000001907348633
    5. '```' → logprob: -16.375001907348633
    6. '   ' → logprob: -17.000001907348633
    7. '2' → logprob: -18.437501907348633
    8. ']
' → logprob: -18.437501907348633
    9. '``' → logprob: -18.562501907348633
    10. 'r' → logprob: -18.625001907348633

Token 279: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.008129963040119e-06
    2. ' ]' → logprob: -12.625003814697266
    3. 'r' → logprob: -15.250003814697266
    4. 'for' → logprob: -15.375003814697266
    5. ']
' → logprob: -17.250003814697266
    6. '   ' → logprob: -17.375003814697266
    7. ')' → logprob: -17.500003814697266
    8. ' for' → logprob: -18.000003814697266
    9. ']]' → logprob: -18.250003814697266
    10. '].' → logprob: -18.875003814697266

Token 280: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2521842420101166
    2. 'for' → logprob: -1.502184271812439
    3. '   ' → logprob: -8.62718391418457
    4. '       ' → logprob: -10.75218391418457
    5. '    ' → logprob: -11.50218391418457
    6. '	for' → logprob: -11.50218391418457
    7. ']' → logprob: -11.62718391418457
    8. 'top' → logprob: -11.75218391418457
    9. ' ' → logprob: -12.12718391418457
    10. '           ' → logprob: -12.75218391418457

Token 281: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10021863132715225
    2. ' r' → logprob: -2.3502185344696045
    3. 'range' → logprob: -11.600218772888184
    4. ' range' → logprob: -12.850218772888184
    5. '	r' → logprob: -15.850218772888184
    6. ' ' → logprob: -16.850217819213867
    7. '   ' → logprob: -18.475217819213867
    8. '_r' → logprob: -18.850217819213867
    9. '  ' → logprob: -19.475217819213867
    10. ' ' → logprob: -20.475217819213867

Token 282: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01273659709841013
    2. 'in' → logprob: -4.637736797332764
    3. ' range' → logprob: -6.262736797332764
    4. 'range' → logprob: -7.012736797332764
    5. ' r' → logprob: -9.262736320495605
    6. 'r' → logprob: -9.637736320495605
    7. ' ' → logprob: -11.762736320495605
    8. '	range' → logprob: -14.887736320495605
    9. '   ' → logprob: -15.012736320495605
    10. 'ange' → logprob: -15.262736320495605

Token 283: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011047814972698689
    2. ' range' → logprob: -4.511047840118408
    3. '(range' → logprob: -19.26104736328125
    4. '	range' → logprob: -19.63604736328125
    5. '   ' → logprob: -20.01104736328125
    6. ' ' → logprob: -21.13604736328125
    7. 'r' → logprob: -22.38604736328125
    8. '_range' → logprob: -23.26104736328125
    9. 'Range' → logprob: -23.38604736328125
    10. 'rang' → logprob: -24.01104736328125

Token 284: '(top' (ID: 42605)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.02327296882867813
    2. '(top' → logprob: -3.77327299118042
    3. ' top' → logprob: -10.523272514343262
    4. '[top' → logprob: -14.648272514343262
    5. '	top' → logprob: -16.148273468017578
    6. 'Top' → logprob: -19.148273468017578
    7. 'TOP' → logprob: -19.648273468017578
    8. 'tops' → logprob: -20.023273468017578
    9. '_top' → logprob: -20.023273468017578
    10. '(' → logprob: -20.398273468017578

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007591230678372085
    2. ',b' → logprob: -8.00075912475586
    3. 'bottom' → logprob: -8.12575912475586
    4. 'top' → logprob: -9.75075912475586
    5. ' ,' → logprob: -10.25075912475586
    6. '(bottom' → logprob: -11.00075912475586
    7. ' bottom' → logprob: -12.50075912475586
    8. '+' → logprob: -13.00075912475586
    9. '(top' → logprob: -13.00075912475586
    10. '[top' → logprob: -13.00075912475586

Token 286: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.003679528832435608
    2. ' bottom' → logprob: -5.6286797523498535
    3. 'top' → logprob: -9.503679275512695
    4. 'right' → logprob: -12.753679275512695
    5. '   ' → logprob: -14.253679275512695
    6. '(bottom' → logprob: -14.253679275512695
    7. 'bot' → logprob: -14.878679275512695
    8. ' top' → logprob: -15.628679275512695
    9. 'b' → logprob: -16.878679275512695
    10. '
' → logprob: -17.503679275512695

Token 287: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25193148851394653
    2. '+' → logprob: -1.5019314289093018
    3. '   ' → logprob: -14.001931190490723
    4. ')]' → logprob: -14.501931190490723
    5. ')' → logprob: -14.751931190490723
    6. ' ' → logprob: -15.876931190490723
    7. ']' → logprob: -16.25193214416504
    8. '1' → logprob: -16.37693214416504
    9. ' +
' → logprob: -16.50193214416504
    10. '＋' → logprob: -17.12693214416504

Token 288: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005734055885113776
    2. ' ' → logprob: -7.500573635101318
    3. '+' → logprob: -11.62557315826416
    4. '   ' → logprob: -11.87557315826416
    5. ')' → logprob: -13.12557315826416
    6. ',' → logprob: -14.68807315826416
    7. '
' → logprob: -14.81307315826416
    8. ' +' → logprob: -15.12557315826416
    9. '```' → logprob: -15.18807315826416
    10. ']' → logprob: -15.93807315826416

Token 289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.286852345103398e-05
    2. '+' → logprob: -10.125042915344238
    3. ' ' → logprob: -13.000042915344238
    4. '   ' → logprob: -15.625042915344238
    5. '2' → logprob: -15.750042915344238
    6. '
' → logprob: -16.375041961669922
    7. ')' → logprob: -16.750041961669922
    8. ' +' → logprob: -17.375041961669922
    9. '```' → logprob: -17.500041961669922
    10. '-' → logprob: -18.187541961669922

Token 290: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.9623810658231378e-05
    2. ')]' → logprob: -11.125020027160645
    3. ' ]' → logprob: -13.000020027160645
    4. ']
' → logprob: -14.000020027160645
    5. ')' → logprob: -14.125020027160645
    6. '   ' → logprob: -14.250020027160645
    7. '       ' → logprob: -15.625020027160645
    8. '()]' → logprob: -16.250019073486328
    9. '])' → logprob: -17.500019073486328
    10. '`]' → logprob: -17.625019073486328

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6312732100486755
    2. '
' → logprob: -1.0062732696533203
    3. '<|end|>' → logprob: -2.6312732696533203
    4. '    
' → logprob: -4.00627326965332
    5. '\n' → logprob: -6.00627326965332
    6. '  
' → logprob: -6.00627326965332
    7. ' 
' → logprob: -6.25627326965332
    8. 'def' → logprob: -7.25627326965332
    9. '```' → logprob: -7.50627326965332
    10. '<|end|>' → logprob: -7.63127326965332

Token 292: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19544966518878937
    2. '   ' → logprob: -1.820449709892273
    3. '    
' → logprob: -4.4454498291015625
    4. '```' → logprob: -6.0704498291015625
    5. 'def' (adapté à ' def') → logprob: -7.6954498291015625
    6. 'n' → logprob: -8.445449829101562
    7. '

' → logprob: -8.445449829101562
    8. '\n' → logprob: -8.570449829101562
    9. 'input' → logprob: -9.570449829101562
    10. 'rows' → logprob: -9.695449829101562

Token 293: ' shape' (ID: 9591)
  Prédit: ' normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' normalize' → logprob: -1.2278292179107666
    2. ' solve' → logprob: -1.7278292179107666
    3. 'solve' → logprob: -2.1028292179107666
    4. 'normalize' → logprob: -2.4778292179107666
    5. ' can' → logprob: -3.1028292179107666
    6. 'can' → logprob: -3.2278292179107666
    7. ' place' → logprob: -3.7278292179107666
    8. ' find' → logprob: -3.8528292179107666
    9. ' main' → logprob: -3.9778292179107666
    10. ' shapes' → logprob: -4.3528289794921875

Token 294: '_to' (ID: 5089)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17575153708457947
    2. '_to' → logprob: -3.5507514476776123
    3. '(' → logprob: -3.8007514476776123
    4. '():' → logprob: -4.425751686096191
    5. '_key' → logprob: -4.550751686096191
    6. '):' → logprob: -4.550751686096191
    7. '_coords' → logprob: -4.675751686096191
    8. '_equals' → logprob: -4.925751686096191
    9. '_id' → logprob: -5.050751686096191
    10. '_matches' → logprob: -5.175751686096191

Token 295: '_coords' (ID: 77948)
  Prédit: '_tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.8204144239425659
    2. '_string' → logprob: -1.445414423942566
    3. 'string' → logprob: -2.3204145431518555
    4. 'str' → logprob: -2.9454145431518555
    5. '_str' → logprob: -3.0704145431518555
    6. 'tuple' → logprob: -3.1954145431518555
    7. '_key' → logprob: -3.3204145431518555
    8. 'set' → logprob: -4.1954145431518555
    9. '_hash' → logprob: -4.3204145431518555
    10. '_set' → logprob: -4.9454145431518555

Token 296: '(shape' (ID: 58011)
  Prédit: '(shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shape' → logprob: -5.073596548754722e-05
    2. '(' → logprob: -10.00005054473877
    3. ' (' → logprob: -12.87505054473877
    4. '(sh' → logprob: -13.37505054473877
    5. '(s' → logprob: -13.75005054473877
    6. 'shape' → logprob: -17.750051498413086
    7. '(
' → logprob: -18.750051498413086
    8. '(def' → logprob: -19.500051498413086
    9. '.shape' → logprob: -19.625051498413086
    10. '   ' → logprob: -19.750051498413086

Token 297: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01817312277853489
    2. '):
' → logprob: -4.0181732177734375
    3. '():' → logprob: -11.893173217773438
    4. ')' → logprob: -12.018173217773438
    5. ' ):' → logprob: -12.768173217773438
    6. '   ' → logprob: -12.893173217773438
    7. '):
' → logprob: -13.268173217773438
    8. '(' → logprob: -13.643173217773438
    9. '(shape' → logprob: -14.018173217773438
    10. '():
' → logprob: -14.393173217773438

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09301044046878815
    2. '(' → logprob: -2.968010425567627
    3. '[' → logprob: -4.718010425567627
    4. '   ' → logprob: -4.968010425567627
    5. '[]' → logprob: -5.218010425567627
    6. '[
' → logprob: -5.218010425567627
    7. '<|end|>' → logprob: -5.968010425567627
    8. '(
' → logprob: -6.218010425567627
    9. '(rows' → logprob: -6.468010425567627
    10. '(coords' → logprob: -6.968010425567627

Token 299: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.689856767654419
    2. ' coords' → logprob: -0.814856767654419
    3. 'coords' → logprob: -2.939856767654419
    4. ' coordinates' → logprob: -6.68985652923584
    5. '   ' → logprob: -7.81485652923584
    6. '(coords' → logprob: -8.43985652923584
    7. ' result' → logprob: -9.06485652923584
    8. 'result' → logprob: -9.06485652923584
    9. 'coordinates' → logprob: -9.18985652923584
    10. '[' → logprob: -9.31485652923584

Token 300: ' Convert' (ID: 15629)
  Prédit: ' coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coords' → logprob: -0.20154178142547607
    2. 'coords' → logprob: -1.701541781425476
    3. ' coordinates' → logprob: -9.451541900634766
    4. 'coordinates' → logprob: -11.326541900634766
    5. ' points' → logprob: -11.576541900634766
    6. 'return' → logprob: -12.076541900634766
    7. '   ' → logprob: -12.201541900634766
    8. ' result' → logprob: -12.451541900634766
    9. ' return' → logprob: -12.576541900634766
    10. 'result' → logprob: -12.701541900634766

Token 301: ' shape' (ID: 9591)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.1291660070419312
    2. '[(' → logprob: -1.1291660070419312
    3. 'shape' → logprob: -2.0041661262512207
    4. '[' → logprob: -2.5041661262512207
    5. ' [(' → logprob: -3.6291661262512207
    6. '[r' → logprob: -4.004166126251221
    7. ' shape' → logprob: -4.129166126251221
    8. 'coords' → logprob: -4.129166126251221
    9. '(shape' → logprob: -4.504166126251221
    10. '   ' → logprob: -4.879166126251221

Token 302: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8840578198432922
    2. '(shape' → logprob: -1.8840577602386475
    3. ' to' → logprob: -2.2590577602386475
    4. '(
' → logprob: -2.8840577602386475
    5. ' =' → logprob: -3.0090577602386475
    6. '       ' → logprob: -3.5090577602386475
    7. ':' → logprob: -3.5090577602386475
    8. 'to' → logprob: -3.6340577602386475
    9. 'def' → logprob: -4.009057998657227
    10. '=' → logprob: -4.134057998657227

Token 303: ' list' (ID: 1562)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.05344463512301445
    2. '[
' → logprob: -3.0534446239471436
    3. ' [(' → logprob: -5.553444862365723
    4. 'set' → logprob: -7.928444862365723
    5. '[' → logprob: -8.428444862365723
    6. '[]' → logprob: -9.303444862365723
    7. 'coords' → logprob: -9.553444862365723
    8. ' [
' → logprob: -9.803444862365723
    9. '[r' → logprob: -9.928444862365723
    10. 'coordinates' → logprob: -10.053444862365723

Token 304: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.18428444862365723
    2. '[' → logprob: -1.9342844486236572
    3. '[int' → logprob: -4.934284210205078
    4. '[(' → logprob: -5.309284210205078
    5. '[
' → logprob: -5.434284210205078
    6. '   ' → logprob: -6.309284210205078
    7. '[str' → logprob: -6.684284210205078
    8. '<|end|>' → logprob: -6.684284210205078
    9. '(range' → logprob: -7.809284210205078
    10. 'of' → logprob: -8.184284210205078

Token 305: ' coordinates' (ID: 27933)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.029791107401251793
    2. '(' → logprob: -4.154790878295898
    3. ' (' → logprob: -4.404790878295898
    4. '(x' → logprob: -7.029790878295898
    5. '(row' → logprob: -8.279790878295898
    6. '(i' → logprob: -9.029790878295898
    7. '(y' → logprob: -9.779790878295898
    8. '   ' → logprob: -10.779790878295898
    9. '(c' → logprob: -11.154790878295898
    10. '(
' → logprob: -11.279790878295898

Token 306: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7989098429679871
    2. '(' → logprob: -1.6739099025726318
    3. '[' → logprob: -2.048909902572632
    4. '       ' → logprob: -2.298909902572632
    5. '(
' → logprob: -3.173909902572632
    6. ':' → logprob: -3.673909902572632
    7. '[
' → logprob: -4.048909664154053
    8. '(s' → logprob: -5.173909664154053
    9. '(r' → logprob: -5.173909664154053
    10. ' (' → logprob: -5.423909664154053

Token 307: ' '#'' (ID: 139870)
  Prédit: ' '#''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '#'' → logprob: -0.3601319193840027
    2. ''#' → logprob: -1.2351319789886475
    3. '('#' → logprob: -5.735131740570068
    4. '(' → logprob: -5.985131740570068
    5. ' '#' → logprob: -6.110131740570068
    6. '#' → logprob: -6.485131740570068
    7. ' (' → logprob: -7.985131740570068
    8. 'filled' → logprob: -8.360132217407227
    9. 'cells' → logprob: -8.735132217407227
    10. ''' → logprob: -8.735132217407227

Token 308: ' relative' (ID: 15001)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7976952791213989
    2. ':
' → logprob: -1.922695279121399
    3. '       ' → logprob: -2.4226951599121094
    4. ':' → logprob: -2.4226951599121094
    5. '   ' → logprob: -2.5476951599121094
    6. ',' → logprob: -3.1726951599121094
    7. '():
' → logprob: -3.5476951599121094
    8. ' in' → logprob: -4.547695159912109
    9. '(s' → logprob: -4.672695159912109
    10. ' for' → logprob: -4.672695159912109

Token 309: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.14545679092407227
    2. 'to' → logprob: -2.0204567909240723
    3. '=' → logprob: -6.770456790924072
    4. '   ' → logprob: -7.395456790924072
    5. '       ' → logprob: -7.645456790924072
    6. '_to' → logprob: -8.395456314086914
    7. ' =' → logprob: -9.145456314086914
    8. '	to' → logprob: -10.020456314086914
    9. '    ' → logprob: -10.270456314086914
    10. '0' → logprob: -10.270456314086914

Token 310: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2927708327770233
    2. '(' → logprob: -1.5427708625793457
    3. ' (' → logprob: -3.7927708625793457
    4. ' top' → logprob: -5.667770862579346
    5. 'top' → logprob: -6.167770862579346
    6. ' ' → logprob: -6.417770862579346
    7. ' the' → logprob: -6.667770862579346
    8. ' shape' → logprob: -6.667770862579346
    9. 'range' → logprob: -6.667770862579346
    10. 'the' → logprob: -6.792770862579346

Token 311: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012515183538198471
    2. ' ' → logprob: -4.387515068054199
    3. ')' → logprob: -13.3875150680542
    4. '       ' → logprob: -13.5125150680542
    5. '   ' → logprob: -14.2625150680542
    6. ',' → logprob: -14.3875150680542
    7. ' (' → logprob: -15.2625150680542
    8. '  ' → logprob: -15.3875150680542
    9. '1' → logprob: -15.5125150680542
    10. '(' → logprob: -15.8875150680542

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045677117304876447
    2. ' ,' → logprob: -8.000456809997559
    3. '0' → logprob: -9.875456809997559
    4. ')' → logprob: -10.750456809997559
    5. ',
' → logprob: -10.875456809997559
    6. '   ' → logprob: -11.000456809997559
    7. '	' → logprob: -12.500456809997559
    8. ' ' → logprob: -12.625456809997559
    9. '<|end|>' → logprob: -13.500456809997559
    10. '    ' → logprob: -13.625456809997559

Token 313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028093906585127115
    2. ' ' → logprob: -5.877809524536133
    3. '   ' → logprob: -13.127809524536133
    4. '       ' → logprob: -13.877809524536133
    5. ')' → logprob: -14.877809524536133
    6. '  ' → logprob: -15.127809524536133
    7. '    ' → logprob: -15.252809524536133
    8. '1' → logprob: -15.502809524536133
    9. '
' → logprob: -16.252809524536133
    10. '     ' → logprob: -16.877809524536133

Token 314: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2903658449649811
    2. '):
' → logprob: -1.5403658151626587
    3. ')' → logprob: -3.2903659343719482
    4. '       ' → logprob: -8.665366172790527
    5. ')
' → logprob: -9.290366172790527
    6. '   ' → logprob: -9.290366172790527
    7. '):

' → logprob: -10.290366172790527
    8. '):
' → logprob: -10.290366172790527
    9. ' ):' → logprob: -11.290366172790527
    10. ' ):
' → logprob: -11.665366172790527

Token 315: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2702791690826416
    2. '(' → logprob: -1.7702791690826416
    3. '       ' → logprob: -3.7702791690826416
    4. ':' → logprob: -4.2702789306640625
    5. '<|end|>' → logprob: -4.7702789306640625
    6. '(
' → logprob: -5.0202789306640625
    7. '[' → logprob: -5.3952789306640625
    8. 'def' → logprob: -5.7702789306640625
    9. '[
' → logprob: -6.3952789306640625
    10. '(n' → logprob: -7.0202789306640625

Token 316: ' coords' (ID: 53253)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' (adapté à ' coords') → logprob: -0.334357351064682
    2. ' coords' → logprob: -1.3343573808670044
    3. '   ' → logprob: -4.334357261657715
    4. '       ' → logprob: -5.709357261657715
    5. ' coordinates' → logprob: -5.959357261657715
    6. 'coordinates' → logprob: -6.709357261657715
    7. '_coords' → logprob: -8.834357261657715
    8. 'result' → logprob: -8.959357261657715
    9. ' result' → logprob: -9.584357261657715
    10. 'points' → logprob: -9.709357261657715

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869081139564514
    2. ' =' → logprob: -1.1369080543518066
    3. '=[]' → logprob: -10.261908531188965
    4. '   ' → logprob: -15.136908531188965
    5. '=[]
' → logprob: -15.136908531188965
    6. ',' → logprob: -15.136908531188965
    7. '(' → logprob: -15.261908531188965
    8. ')' → logprob: -15.511908531188965
    9. 's' → logprob: -15.636908531188965
    10. '[]' → logprob: -15.886908531188965

Token 318: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.021612493321299553
    2. '[(' → logprob: -4.521612644195557
    3. '[]
' → logprob: -5.021612644195557
    4. ' []' → logprob: -5.771612644195557
    5. '[
' → logprob: -7.521612644195557
    6. '[' → logprob: -8.521612167358398
    7. ' [(' → logprob: -9.896612167358398
    8. ' []
' → logprob: -12.146612167358398
    9. '[]

' → logprob: -13.271612167358398
    10. ' [' → logprob: -14.271612167358398

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10263627022504807
    2. '   ' → logprob: -2.6026363372802734
    3. '(' → logprob: -4.602636337280273
    4. ' for' → logprob: -4.852636337280273
    5. ':' → logprob: -6.477636337280273
    6. '\' → logprob: -7.227636337280273
    7. '(
' → logprob: -7.477636337280273
    8. ' (' → logprob: -7.727636337280273
    9. '\n' → logprob: -7.727636337280273
    10. '[' → logprob: -8.102636337280273

Token 320: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1706625372171402
    2. '       ' → logprob: -2.1706626415252686
    3. 'for' (adapté à ' for') → logprob: -3.1706626415252686
    4. '   ' → logprob: -7.1706624031066895
    5. '	for' → logprob: -10.295662879943848
    6. '	   ' → logprob: -11.795662879943848
    7. ' ' → logprob: -13.545662879943848
    8. '	' → logprob: -14.170662879943848
    9. '           ' → logprob: -14.420662879943848
    10. ' ' → logprob: -14.545662879943848

Token 321: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0181526318192482
    2. ' r' → logprob: -4.018152713775635
    3. 'i' → logprob: -12.893152236938477
    4. 'y' → logprob: -16.018152236938477
    5. ' i' → logprob: -16.143152236938477
    6. ' y' → logprob: -17.643152236938477
    7. '   ' → logprob: -18.268152236938477
    8. 'row' → logprob: -18.893152236938477
    9. '	r' → logprob: -19.518152236938477
    10. 'x' → logprob: -20.393152236938477

Token 322: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02308986522257328
    2. ',' → logprob: -3.89808988571167
    3. 'in' → logprob: -6.02308988571167
    4. ' ,' → logprob: -9.273089408874512
    5. ' ' → logprob: -11.148089408874512
    6. '   ' → logprob: -12.773089408874512
    7. '	in' → logprob: -12.898089408874512
    8. '    ' → logprob: -13.398089408874512
    9. ',row' → logprob: -13.898089408874512
    10. '<|end|>' → logprob: -13.898089408874512

Token 323: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5777355432510376
    2. ' row' → logprob: -0.8277355432510376
    3. 'line' → logprob: -6.577735424041748
    4. ' line' → logprob: -7.827735424041748
    5. '   ' → logprob: -13.702735900878906
    6. 'rows' → logprob: -13.952735900878906
    7. 'r' → logprob: -14.077735900878906
    8. ' ' → logprob: -14.202735900878906
    9. '	row' → logprob: -14.202735900878906
    10. 's' → logprob: -15.327735900878906

Token 324: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00672922981902957
    2. 'in' → logprob: -5.0067291259765625
    3. ' ' → logprob: -12.006729125976562
    4. ',' → logprob: -12.256729125976562
    5. 's' → logprob: -13.381729125976562
    6. 'import' → logprob: -15.006729125976562
    7. '	in' → logprob: -15.506729125976562
    8. '<|end|>' → logprob: -15.506729125976562
    9. '   ' → logprob: -15.631729125976562
    10. ' ,' → logprob: -16.131729125976562

Token 325: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.014163863845169544
    2. ' enumerate' → logprob: -4.264163970947266
    3. 'enum' → logprob: -16.014163970947266
    4. 'en' → logprob: -16.389163970947266
    5. '```' → logprob: -16.764163970947266
    6. 'Enumer' → logprob: -17.264163970947266
    7. '.enumer' → logprob: -17.889163970947266
    8. '(en' → logprob: -18.014163970947266
    9. 'enqueue' → logprob: -20.389163970947266
    10. 'range' → logprob: -20.514163970947266

Token 326: '(shape' (ID: 58011)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.01117101963609457
    2. '(shape' → logprob: -4.511170864105225
    3. ' shape' → logprob: -9.011171340942383
    4. ')' → logprob: -14.886171340942383
    5. 'enumer' → logprob: -15.136171340942383
    6. 'range' → logprob: -15.761171340942383
    7. '.shape' → logprob: -16.136171340942383
    8. '(' → logprob: -16.511171340942383
    9. '   ' → logprob: -16.761171340942383
    10. '(range' → logprob: -17.511171340942383

Token 327: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002966888016089797
    2. '):' → logprob: -5.87796688079834
    3. '():
' → logprob: -9.37796688079834
    4. ':' → logprob: -10.37796688079834
    5. ':
' → logprob: -10.37796688079834
    6. '):
' → logprob: -11.50296688079834
    7. '   ' → logprob: -12.62796688079834
    8. '       ' → logprob: -13.75296688079834
    9. '()):
' → logprob: -15.62796688079834
    10. '():' → logprob: -15.75296688079834

Token 328: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5514727830886841
    2. '       ' → logprob: -1.301472783088684
    3. ' for' → logprob: -1.926472783088684
    4. '   ' → logprob: -5.1764726638793945
    5. '	   ' → logprob: -8.926472663879395
    6. '	       ' → logprob: -9.551472663879395
    7. '```' → logprob: -9.926472663879395
    8. 'for' → logprob: -10.051472663879395
    9. ' ' → logprob: -10.301472663879395
    10. '<|end|>' → logprob: -11.176472663879395

Token 329: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.007986674085259438
    2. 'for' (adapté à ' for') → logprob: -4.882986545562744
    3. '   ' → logprob: -8.632987022399902
    4. '       ' → logprob: -8.882987022399902
    5. '           ' → logprob: -11.132987022399902
    6. '    ' → logprob: -11.132987022399902
    7. ' ' → logprob: -11.132987022399902
    8. '	for' → logprob: -11.382987022399902
    9. '        ' → logprob: -12.382987022399902
    10. '               ' → logprob: -13.007987022399902

Token 330: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006716079078614712
    2. ' c' → logprob: -5.006716251373291
    3. '   ' → logprob: -15.256715774536133
    4. '	c' → logprob: -15.631715774536133
    5. ' ' → logprob: -16.756715774536133
    6. '
' → logprob: -16.881715774536133
    7. '[c' → logprob: -17.506715774536133
    8. 'x' → logprob: -17.631715774536133
    9. 'i' → logprob: -17.631715774536133
    10. 'r' → logprob: -17.881715774536133

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21157070994377136
    2. ' in' → logprob: -1.7115707397460938
    3. ' ,' → logprob: -5.211570739746094
    4. 'in' → logprob: -5.586570739746094
    5. ' ' → logprob: -7.086570739746094
    6. '<|end|>' → logprob: -11.086570739746094
    7. '  ' → logprob: -11.961570739746094
    8. 's' → logprob: -12.336570739746094
    9. ',c' → logprob: -12.586570739746094
    10. 'In' → logprob: -12.836570739746094

Token 332: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.012844767421483994
    2. 'cell' → logprob: -4.762844562530518
    3. ' ch' → logprob: -5.512844562530518
    4. 'char' → logprob: -9.012845039367676
    5. 'val' → logprob: -10.137845039367676
    6. ' cell' → logprob: -10.637845039367676
    7. 'v' → logprob: -13.887845039367676
    8. ' val' → logprob: -16.13784408569336
    9. 'col' → logprob: -17.13784408569336
    10. ' char' → logprob: -17.38784408569336

Token 333: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014195713214576244
    2. 'in' → logprob: -4.264195919036865
    3. ' ' → logprob: -11.014195442199707
    4. '  ' → logprob: -12.639195442199707
    5. 's' → logprob: -12.639195442199707
    6. '<|end|>' → logprob: -12.764195442199707
    7. '	in' → logprob: -13.264195442199707
    8. '   ' → logprob: -13.764195442199707
    9. ',' → logprob: -14.139195442199707
    10. ')' → logprob: -14.139195442199707

Token 334: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.16022492945194244
    2. ' enumerate' → logprob: -1.9102249145507812
    3. '```' → logprob: -15.035224914550781
    4. 'range' → logprob: -16.16022491455078
    5. 'en' → logprob: -16.28522491455078
    6. ' ' → logprob: -16.41022491455078
    7. 'enum' → logprob: -16.53522491455078
    8. 'r' → logprob: -16.91022491455078
    9. 'c' → logprob: -17.41022491455078
    10. '   ' → logprob: -17.66022491455078

Token 335: '(row' (ID: 15945)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.10494581609964371
    2. '(row' → logprob: -2.3549458980560303
    3. ' row' → logprob: -5.354945659637451
    4. ' (' → logprob: -13.60494613647461
    5. '	row' → logprob: -14.22994613647461
    6. '(' → logprob: -14.47994613647461
    7. '=row' → logprob: -14.97994613647461
    8. ' ' → logprob: -15.85494613647461
    9. ',row' → logprob: -15.97994613647461
    10. '[row' → logprob: -16.10494613647461

Token 336: '):
' (ID: 1883)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18614792823791504
    2. '):
' → logprob: -2.436147928237915
    3. ' if' → logprob: -2.811147928237915
    4. 'in' → logprob: -4.686147689819336
    5. 'if' → logprob: -6.186147689819336
    6. '():
' → logprob: -6.311147689819336
    7. '<|end|>' → logprob: -6.561147689819336
    8. '           ' → logprob: -6.811147689819336
    9. ')' → logprob: -6.811147689819336
    10. '<|end|>' → logprob: -6.811147689819336

Token 337: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001721934968372807
    2. ' if' → logprob: -9.25017261505127
    3. '           ' → logprob: -10.12517261505127
    4. '	           ' → logprob: -12.25017261505127
    5. '<|end|>' → logprob: -12.37517261505127
    6. '                       ' → logprob: -12.50017261505127
    7. '              ' → logprob: -12.87517261505127
    8. 'if' → logprob: -13.12517261505127
    9. '            ' → logprob: -13.37517261505127
    10. '                   ' → logprob: -13.37517261505127

Token 338: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2222878485918045
    2. '               ' → logprob: -2.472287893295288
    3. '                   ' → logprob: -2.972287893295288
    4. '                ' → logprob: -2.972287893295288
    5. ' ' → logprob: -5.222287654876709
    6. 'if' (adapté à ' if') → logprob: -5.847287654876709
    7. '                    ' → logprob: -6.347287654876709
    8. '            ' → logprob: -7.222287654876709
    9. '    ' → logprob: -8.097288131713867
    10. '<|end|>' → logprob: -8.347288131713867

Token 339: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.10020839422941208
    2. 'ch' → logprob: -2.350208282470703
    3. '	ch' → logprob: -13.600208282470703
    4. '(ch' → logprob: -15.350208282470703
    5. 'c' → logprob: -16.350208282470703
    6. '[ch' → logprob: -16.600208282470703
    7. ' ' → logprob: -17.100208282470703
    8. '               ' → logprob: -17.975208282470703
    9. '_ch' → logprob: -17.975208282470703
    10. ' ' → logprob: -18.225208282470703

Token 340: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12706102430820465
    2. '==' → logprob: -2.127061128616333
    3. '=='' → logprob: -9.752060890197754
    4. '=' → logprob: -9.877060890197754
    5. '#' → logprob: -11.752060890197754
    6. '==
' → logprob: -12.127060890197754
    7. ')==' → logprob: -13.002060890197754
    8. ')' → logprob: -13.252060890197754
    9. ' ==
' → logprob: -13.627060890197754
    10. ' =' → logprob: -13.752060890197754

Token 341: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.08366326987743378
    2. ' '#'' → logprob: -2.70866322517395
    3. ' '#' → logprob: -4.333663463592529
    4. '#' → logprob: -7.958663463592529
    5. '"#' → logprob: -9.208662986755371
    6. ''' → logprob: -10.208662986755371
    7. '('#' → logprob: -11.833662986755371
    8. ' '' → logprob: -11.958662986755371
    9. ' ' → logprob: -12.458662986755371
    10. ' "#"' → logprob: -12.958662986755371

Token 342: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.3728596270084381
    2. '':' → logprob: -2.1228597164154053
    3. '):
' → logprob: -2.6228597164154053
    4. ''):
' → logprob: -3.1228597164154053
    5. ':
' → logprob: -3.2478597164154053
    6. ':' → logprob: -3.7478597164154053
    7. '):' → logprob: -4.622859477996826
    8. ')' → logprob: -6.747859477996826
    9. ''):' → logprob: -7.372859477996826
    10. '':
' → logprob: -8.372859954833984

Token 343: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03445488214492798
    2. ' coords' → logprob: -3.534454822540283
    3. 'coords' → logprob: -6.159454822540283
    4. '(coords' → logprob: -7.159454822540283
    5. '                       ' → logprob: -7.284454822540283
    6. ' coordinates' → logprob: -7.409454822540283
    7. '                    
' → logprob: -9.159455299377441
    8. 'coordinates' → logprob: -9.159455299377441
    9. '               ' → logprob: -9.784455299377441
    10. '                           ' → logprob: -10.034455299377441

Token 344: ' coords' (ID: 53253)
  Prédit: ' coords'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coords' → logprob: -0.1437556892633438
    2. 'coords' (adapté à ' coords') → logprob: -2.0187556743621826
    3. '(coords' → logprob: -8.018755912780762
    4. ' coordinates' → logprob: -8.018755912780762
    5. '                   ' → logprob: -8.268755912780762
    6. '_coords' → logprob: -10.393755912780762
    7. 'coordinates' → logprob: -10.393755912780762
    8. '                       ' → logprob: -10.393755912780762
    9. '               ' → logprob: -10.643755912780762
    10. '                    ' → logprob: -11.268755912780762

Token 345: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001394284307025373
    2. '.' → logprob: -6.626394271850586
    3. ' .' → logprob: -10.376394271850586
    4. 'append' → logprob: -10.626394271850586
    5. '                   ' → logprob: -12.501394271850586
    6. '.Append' → logprob: -12.501394271850586
    7. '                       ' → logprob: -13.876394271850586
    8. ').' → logprob: -14.251394271850586
    9. '().' → logprob: -14.251394271850586
    10. '.push' → logprob: -14.626394271850586

Token 346: '((' (ID: 2054)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3267582058906555
    2. '(r' → logprob: -1.3267581462860107
    3. '(' → logprob: -4.32675838470459
    4. '(c' → logprob: -8.57675838470459
    5. '   ' → logprob: -12.95175838470459
    6. '((' → logprob: -13.07675838470459
    7. '(
' → logprob: -13.82675838470459
    8. '    ' → logprob: -14.82675838470459
    9. '(rc' → logprob: -15.70175838470459
    10. '<|end|>' → logprob: -15.95175838470459

Token 347: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.9027791495318525e-05
    2. ' r' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.500019073486328
    4. '_r' → logprob: -19.250019073486328
    5. '	r' → logprob: -19.375019073486328
    6. ')' → logprob: -20.500019073486328
    7. 'c' → logprob: -21.500019073486328
    8. '
' → logprob: -21.750019073486328
    9. '0' → logprob: -22.250019073486328
    10. ' ' → logprob: -22.375019073486328

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026499660685658455
    2. ',c' → logprob: -3.6514997482299805
    3. ' ,' → logprob: -8.65149974822998
    4. '   ' → logprob: -11.27649974822998
    5. ',
' → logprob: -11.77649974822998
    6. '       ' → logprob: -13.65149974822998
    7. '<|end|>' → logprob: -13.65149974822998
    8. ')' → logprob: -15.15149974822998
    9. '‌,' → logprob: -15.90149974822998
    10. ' ' → logprob: -15.90149974822998

Token 349: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004078639671206474
    2. ' c' → logprob: -5.5040788650512695
    3. ')c' → logprob: -15.75407886505127
    4. '   ' → logprob: -17.254077911376953
    5. '	c' → logprob: -17.379077911376953
    6. '0' → logprob: -17.379077911376953
    7. ' ' → logprob: -18.754077911376953
    8. ')' → logprob: -19.504077911376953
    9. '<|end|>' → logprob: -20.004077911376953
    10. '    ' → logprob: -20.129077911376953

Token 350: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0024448581971228123
    2. '))
' → logprob: -6.502444744110107
    3. ')' → logprob: -7.002444744110107
    4. '               ' → logprob: -11.252445220947266
    5. '                   ' → logprob: -12.002445220947266
    6. '           ' → logprob: -12.877445220947266
    7. ')))' → logprob: -12.877445220947266
    8. '))}
' → logprob: -13.502445220947266
    9. '       ' → logprob: -13.627445220947266
    10. ' ))' → logprob: -13.752445220947266

Token 351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022086147218942642
    2. '<|end|>' → logprob: -4.397086143493652
    3. ')' → logprob: -5.272086143493652
    4. '               ' → logprob: -7.147086143493652
    5. '<|end|>' → logprob: -7.272086143493652
    6. '
' → logprob: -7.272086143493652
    7. ',' → logprob: -7.397086143493652
    8. '                   ' → logprob: -8.147086143493652
    9. '           ' → logprob: -8.272086143493652
    10. '   ' → logprob: -8.647086143493652

Token 352: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04102791100740433
    2. '
' → logprob: -3.4160280227661133
    3. '<|end|>' → logprob: -5.541028022766113
    4. '   ' → logprob: -6.666028022766113
    5. ' return' → logprob: -6.666028022766113
    6. ')' → logprob: -8.416028022766113
    7. '<|end|>' → logprob: -9.166028022766113
    8. 'return' (adapté à ' return') → logprob: -9.166028022766113
    9. '	return' → logprob: -9.291028022766113
    10. '    
' → logprob: -9.416028022766113

Token 353: ' coords' (ID: 53253)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.061978891491889954
    2. ' coords' → logprob: -2.811978816986084
    3. '(coords' → logprob: -11.811979293823242
    4. 'coordinates' → logprob: -13.186979293823242
    5. '_coords' → logprob: -14.686979293823242
    6. 'Coords' → logprob: -14.811979293823242
    7. 'coord' → logprob: -15.061979293823242
    8. '   ' → logprob: -15.186979293823242
    9. '.coords' → logprob: -15.686979293823242
    10. ' coordinates' → logprob: -15.936979293823242

Token 354: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6986145973205566
    2. '<|end|>' → logprob: -0.6986145973205566
    3. '   ' → logprob: -6.073614597320557
    4. '

' → logprob: -6.823614597320557
    5. '    
' → logprob: -6.948614597320557
    6. '<|end|>' → logprob: -7.073614597320557
    7. '  
' → logprob: -9.198614120483398
    8. 'newline' → logprob: -10.198614120483398
    9. ')' → logprob: -10.948614120483398
    10. '```' → logprob: -11.073614120483398

Token 355: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10726944357156754
    2. '<|end|>' → logprob: -2.982269525527954
    3. '   ' → logprob: -3.107269525527954
    4. 'def' → logprob: -6.107269287109375
    5. '    
' → logprob: -6.357269287109375
    6. '```' → logprob: -6.982269287109375
    7. '

' → logprob: -7.357269287109375
    8. '<|end|>' → logprob: -7.607269287109375
    9. 'newline' → logprob: -9.857269287109375
    10. '  
' → logprob: -9.982269287109375

Token 356: ' N' (ID: 478)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7173578143119812
    2. '   ' → logprob: -0.8423578143119812
    3. 'def' → logprob: -2.592357873916626
    4. '    
' → logprob: -6.342357635498047
    5. '

' → logprob: -6.592357635498047
    6. '<|end|>' → logprob: -6.967357635498047
    7. '```' → logprob: -7.592357635498047
    8. ' def' → logprob: -8.092357635498047
    9. 'newline' → logprob: -8.217357635498047
    10. ' lines' → logprob: -8.842357635498047

Token 357: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024540048092603683
    2. '=' → logprob: -4.024539947509766
    3. ',' → logprob: -5.149539947509766
    4. ' ' → logprob: -8.274539947509766
    5. ')' → logprob: -8.649539947509766
    6. '   ' → logprob: -9.774539947509766
    7. ' ,' → logprob: -10.024539947509766
    8. '  ' → logprob: -11.524539947509766
    9. ' )' → logprob: -12.024539947509766
    10. ' =
' → logprob: -12.149539947509766

Token 358: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.02346186153590679
    2. 'int' → logprob: -3.7734618186950684
    3. ' ' → logprob: -9.023462295532227
    4. '5' → logprob: -9.898462295532227
    5. '10' → logprob: -10.398462295532227
    6. '3' → logprob: -11.898462295532227
    7. '7' → logprob: -13.023462295532227
    8. '0' → logprob: -13.648462295532227
    9. '4' → logprob: -14.023462295532227
    10. '[int' → logprob: -14.023462295532227

Token 359: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008662551641464233
    2. '(' → logprob: -4.758662700653076
    3. 'input' → logprob: -10.258662223815918
    4. '('' → logprob: -12.383662223815918
    5. ' (' → logprob: -12.508662223815918
    6. '()' → logprob: -13.008662223815918
    7. '(sys' → logprob: -13.633662223815918
    8. ' input' → logprob: -14.133662223815918
    9. '(
' → logprob: -14.883662223815918
    10. '("' → logprob: -15.133662223815918

Token 360: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009972932748496532
    2. '()' → logprob: -5.009973049163818
    3. '().' → logprob: -5.759973049163818
    4. ')' → logprob: -9.50997257232666
    5. '()))' → logprob: -11.50997257232666
    6. '())
' → logprob: -12.13497257232666
    7. ' ())' → logprob: -12.13497257232666
    8. '(' → logprob: -12.50997257232666
    9. '();)' → logprob: -13.50997257232666
    10. '()
' → logprob: -15.00997257232666

Token 361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03123738057911396
    2. ' shapes' → logprob: -3.9062373638153076
    3. '    
' → logprob: -5.281237602233887
    4. 'for' → logprob: -6.781237602233887
    5. '<|end|>' → logprob: -6.906237602233887
    6. '#' → logprob: -7.781237602233887
    7. ' for' → logprob: -7.906237602233887
    8. 'shape' → logprob: -7.906237602233887
    9. ')' → logprob: -8.031237602233887
    10. 's' → logprob: -8.281237602233887

Token 362: ' for' (ID: 395)
  Prédit: 'sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sh' → logprob: -0.08071666955947876
    2. 'for' (adapté à ' for') → logprob: -3.580716609954834
    3. 'results' → logprob: -4.205716609954834
    4. 'pieces' → logprob: -4.705716609954834
    5. 'result' → logprob: -4.830716609954834
    6. 'answers' → logprob: -4.955716609954834
    7. 'blocks' → logprob: -6.330716609954834
    8. 'answer' → logprob: -6.580716609954834
    9. 'ans' → logprob: -6.705716609954834
    10. ' shapes' → logprob: -7.455716609954834

Token 363: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0020460553932935
    2. '_' → logprob: -6.37704610824585
    3. ' i' → logprob: -8.002045631408691
    4. ' ' → logprob: -11.627045631408691
    5. ' ' → logprob: -16.252046585083008
    6. '_i' → logprob: -17.752046585083008
    7. 'i' → logprob: -18.377046585083008
    8. ' ‌' → logprob: -18.502046585083008
    9. ' _
' → logprob: -18.627046585083008
    10. ' range' → logprob: -18.627046585083008

Token 364: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002781100571155548
    2. 'in' → logprob: -6.002780914306641
    3. ' ' → logprob: -8.12778091430664
    4. 'range' → logprob: -12.12778091430664
    5. ' _' → logprob: -13.25278091430664
    6. 'n' → logprob: -14.12778091430664
    7. '  ' → logprob: -14.62778091430664
    8. '	in' → logprob: -15.12778091430664
    9. '_' → logprob: -15.50278091430664
    10. ' range' → logprob: -15.62778091430664

Token 365: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141977071762085
    2. ' range' → logprob: -1.7014198303222656
    3. '(range' → logprob: -12.451419830322266
    4. 'N' → logprob: -14.451419830322266
    5. ' ' → logprob: -14.451419830322266
    6. '	range' → logprob: -14.576419830322266
    7. '  ' → logprob: -15.451419830322266
    8. '   ' → logprob: -15.576419830322266
    9. 'input' → logprob: -16.576419830322266
    10. '[' → logprob: -16.576419830322266

Token 366: '(N' (ID: 10564)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7742746472358704
    2. ' N' → logprob: -1.5242745876312256
    3. '(N' → logprob: -1.5242745876312256
    4. '(' → logprob: -2.2742745876312256
    5. ' )' → logprob: -8.649274826049805
    6. ' ' → logprob: -9.024274826049805
    7. 'N' → logprob: -9.024274826049805
    8. ' ()' → logprob: -9.899274826049805
    9. ')' → logprob: -10.524274826049805
    10. '()' → logprob: -11.274274826049805

Token 367: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010299502173438668
    2. '):
' → logprob: -7.501029968261719
    3. ':' → logprob: -8.001029968261719
    4. ')' → logprob: -9.501029968261719
    5. '():' → logprob: -9.876029968261719
    6. ',' → logprob: -12.251029968261719
    7. ' ):' → logprob: -12.251029968261719
    8. '   ' → logprob: -12.376029968261719
    9. '():
' → logprob: -15.126029968261719
    10. ']:' → logprob: -15.376029968261719

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001433324534446001
    2. '        
' → logprob: -7.751433372497559
    3. '<|end|>' → logprob: -7.751433372497559
    4. '   ' → logprob: -8.376433372497559
    5. ',' → logprob: -10.126433372497559
    6. '(' → logprob: -10.126433372497559
    7. ':' → logprob: -10.751433372497559
    8. '    
' → logprob: -11.126433372497559
    9. '    ' → logprob: -11.126433372497559
    10. ' ' → logprob: -11.251433372497559

Token 369: ' #' (ID: 1069)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -1.0331538915634155
    2. ' h' → logprob: -1.7831538915634155
    3. ' R' → logprob: -2.283154010772705
    4. '   ' → logprob: -2.658154010772705
    5. 'H' → logprob: -3.033154010772705
    6. 'h' → logprob: -3.283154010772705
    7. ' M' → logprob: -3.408154010772705
    8. ' S' → logprob: -3.408154010772705
    9. ' size' → logprob: -3.408154010772705
    10. '       ' → logprob: -3.533154010772705

Token 370: ' Read' (ID: 5405)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.2977702617645264
    2. 'h' → logprob: -1.4227702617645264
    3. ' H' → logprob: -2.1727702617645264
    4. 'shape' → logprob: -2.4227702617645264
    5. ' shape' → logprob: -2.6727702617645264
    6. 'R' → logprob: -3.1727702617645264
    7. ' h' → logprob: -3.1727702617645264
    8. '   ' → logprob: -3.9227702617645264
    9. ' R' → logprob: -4.2977705001831055
    10. ' size' → logprob: -4.4227705001831055

Token 371: ' block' (ID: 4355)
  Prédit: ' shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shape' → logprob: -0.5955542922019958
    2. 'shape' → logprob: -1.4705543518066406
    3. ' shapes' → logprob: -3.4705543518066406
    4. ' size' → logprob: -3.7205543518066406
    5. ' s' → logprob: -3.8455543518066406
    6. 's' → logprob: -4.095554351806641
    7. '   ' → logprob: -4.470554351806641
    8. '       ' → logprob: -4.470554351806641
    9. 'size' → logprob: -4.720554351806641
    10. '_' → logprob: -4.720554351806641

Token 372: ' shape' (ID: 9591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5966640114784241
    2. '   ' → logprob: -1.7216639518737793
    3. '_shape' → logprob: -2.4716639518737793
    4. 's' → logprob: -2.7216639518737793
    5. '=' → logprob: -4.096663951873779
    6. '_type' → logprob: -4.471663951873779
    7. '_shapes' → logprob: -4.596663951873779
    8. '_' → logprob: -4.596663951873779
    9. '_name' → logprob: -4.721663951873779
    10. '_size' → logprob: -4.721663951873779

Token 373: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10633791238069534
    2. '        
' → logprob: -3.8563380241394043
    3. 'size' → logprob: -4.106338024139404
    4. ' size' → logprob: -4.981338024139404
    5. 's' → logprob: -5.106338024139404
    6. '   ' → logprob: -5.106338024139404
    7. '        ' → logprob: -5.231338024139404
    8. 'n' → logprob: -5.356338024139404
    9. ' H' → logprob: -5.356338024139404
    10. 'shape' → logprob: -5.481338024139404

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010415913537144661
    2. ' shape' → logprob: -5.635416030883789
    3. 'shape' → logprob: -6.885416030883789
    4. '        ' → logprob: -6.885416030883789
    5. '        
' → logprob: -7.135416030883789
    6. '   ' → logprob: -7.385416030883789
    7. 'block' → logprob: -7.635416030883789
    8. ' block' → logprob: -7.885416030883789
    9. '           ' → logprob: -8.135416030883789
    10. '()' → logprob: -8.385416030883789

Token 375: ' Hb' (ID: 195354)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.8316695094108582
    2. 'H' → logprob: -1.706669569015503
    3. ' shape' → logprob: -1.706669569015503
    4. ' H' → logprob: -2.956669569015503
    5. 'R' → logprob: -3.831669569015503
    6. 'block' → logprob: -4.206669330596924
    7. ' size' → logprob: -4.456669330596924
    8. 'M' → logprob: -4.456669330596924
    9. 'size' → logprob: -4.581669330596924
    10. ' R' → logprob: -4.581669330596924

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12351115047931671
    2. ' =' → logprob: -2.2485110759735107
    3. '=' → logprob: -5.37351131439209
    4. '   ' → logprob: -5.49851131439209
    5. ' ,' → logprob: -8.12351131439209
    6. '    ' → logprob: -8.37351131439209
    7. ' ' → logprob: -8.49851131439209
    8. 'b' → logprob: -8.62351131439209
    9. '       ' → logprob: -8.74851131439209
    10. 'w' → logprob: -8.87351131439209

Token 377: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.7017538547515869
    2. 'W' → logprob: -0.8267538547515869
    3. ' input' → logprob: -3.201753854751587
    4. 'input' → logprob: -4.451753616333008
    5. ' ' → logprob: -6.201753616333008
    6. '    ' → logprob: -6.201753616333008
    7. ' =' → logprob: -6.451753616333008
    8. 'int' → logprob: -6.451753616333008
    9. ' int' → logprob: -7.076753616333008
    10. ',' → logprob: -7.201753616333008

Token 378: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6383941173553467
    2. '=' → logprob: -1.2633941173553467
    3. ' =' → logprob: -1.7633941173553467
    4. ',' → logprob: -4.138394355773926
    5. ')' → logprob: -6.638394355773926
    6. '_b' → logprob: -9.263394355773926
    7. ',b' → logprob: -9.388394355773926
    8. '   ' → logprob: -9.513394355773926
    9. ' ' → logprob: -9.763394355773926
    10. ' b' → logprob: -10.138394355773926

Token 379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576724648475647
    2. '=' → logprob: -0.826724648475647
    3. ',' → logprob: -7.201724529266357
    4. '   ' → logprob: -11.076725006103516
    5. ' ' → logprob: -11.451725006103516
    6. ')' → logprob: -11.951725006103516
    7. ' ,' → logprob: -13.201725006103516
    8. '=int' → logprob: -13.326725006103516
    9. '=input' → logprob: -14.076725006103516
    10. ')=' → logprob: -14.451725006103516

Token 380: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.014165983535349369
    2. 'map' → logprob: -4.264165878295898
    3. '	map' → logprob: -14.014165878295898
    4. ' list' → logprob: -14.514165878295898
    5. '    ' → logprob: -15.139165878295898
    6. '[' → logprob: -15.389165878295898
    7. 'list' → logprob: -15.514165878295898
    8. ' [' → logprob: -16.0141658782959
    9. '(map' → logprob: -16.1391658782959
    10. ' mapa' → logprob: -16.6391658782959

Token 381: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.101369894575328e-05
    2. '(' → logprob: -9.500081062316895
    3. 'int' → logprob: -12.500081062316895
    4. '(str' → logprob: -13.625081062316895
    5. '(
' → logprob: -14.375081062316895
    6. '(lambda' → logprob: -15.500081062316895
    7. '=int' → logprob: -16.250080108642578
    8. ' (' → logprob: -16.250080108642578
    9. '(input' → logprob: -16.625080108642578
    10. '<int' → logprob: -16.750080108642578

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6610002517700195
    2. ',input' → logprob: -0.7860002517700195
    3. '(input' → logprob: -3.9110002517700195
    4. 'input' → logprob: -5.6610002517700195
    5. '   ' → logprob: -6.1610002517700195
    6. ' ,' → logprob: -6.7860002517700195
    7. ')' → logprob: -7.7860002517700195
    8. ',int' → logprob: -8.03600025177002
    9. ' input' → logprob: -8.53600025177002
    10. '=input' → logprob: -9.28600025177002

Token 383: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022534668445587
    2. ' input' → logprob: -1.9102253913879395
    3. '(input' → logprob: -14.660224914550781
    4. ',input' → logprob: -15.035224914550781
    5. ')' → logprob: -15.660224914550781
    6. '   ' → logprob: -16.03522491455078
    7. ' ' → logprob: -16.78522491455078
    8. '	input' → logprob: -17.16022491455078
    9. 'map' → logprob: -17.16022491455078
    10. '=input' → logprob: -17.28522491455078

Token 384: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -13.625000953674316
    3. '(' → logprob: -17.250001907348633
    4. ' ().' → logprob: -17.875001907348633
    5. '()
' → logprob: -19.625001907348633
    6. 'split' → logprob: -19.750001907348633
    7. '()[' → logprob: -20.625001907348633
    8. '   ' → logprob: -21.500001907348633
    9. '.split' → logprob: -21.500001907348633
    10. '().
' → logprob: -22.875001907348633

Token 385: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005262218415737152
    2. 'strip' → logprob: -5.25526237487793
    3. 'rstrip' → logprob: -10.50526237487793
    4. '().' → logprob: -14.50526237487793
    5. ' split' → logprob: -14.75526237487793
    6. '(split' → logprob: -15.50526237487793
    7. 'spl' → logprob: -18.13026237487793
    8. '.split' → logprob: -18.63026237487793
    9. ' strip' → logprob: -18.63026237487793
    10. '_split' → logprob: -18.88026237487793

Token 386: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4776674807071686
    2. ')' → logprob: -0.9776674509048462
    3. '())
' → logprob: -6.102667331695557
    4. '()' → logprob: -6.852667331695557
    5. ')
' → logprob: -8.227667808532715
    6. '(' → logprob: -11.477667808532715
    7. '()
' → logprob: -12.727667808532715
    8. ' )' → logprob: -12.977667808532715
    9. '())
' → logprob: -13.102667808532715
    10. '))' → logprob: -13.352667808532715

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03883381932973862
    2. '<|end|>' → logprob: -3.7888338565826416
    3. '        
' → logprob: -5.1638336181640625
    4. '
' → logprob: -5.9138336181640625
    5. ')' → logprob: -6.6638336181640625
    6. '  
' → logprob: -6.9138336181640625
    7. ' ' → logprob: -7.0388336181640625
    8. 'b' → logprob: -7.1638336181640625
    9. ' 
' → logprob: -7.4138336181640625
    10. ',' → logprob: -7.7888336181640625

Token 388: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' (adapté à ' block') → logprob: -0.2667412757873535
    2. 'shape' → logprob: -1.7667412757873535
    3. ' block' → logprob: -3.3917412757873535
    4. ' shape' → logprob: -3.6417412757873535
    5. 'b' → logprob: -6.3917412757873535
    6. '       ' → logprob: -7.2667412757873535
    7. 'blocks' → logprob: -8.641740798950195
    8. '   ' → logprob: -8.891740798950195
    9. '
' → logprob: -9.141740798950195
    10. 'board' → logprob: -9.391740798950195

Token 389: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25342121720314026
    2. '=' → logprob: -1.5034211874008179
    3. '_shape' → logprob: -7.503421306610107
    4. 'shape' → logprob: -9.00342082977295
    5. '=[]' → logprob: -9.12842082977295
    6. '   ' → logprob: -9.25342082977295
    7. '[' → logprob: -9.37842082977295
    8. ',' → logprob: -9.62842082977295
    9. '_lines' → logprob: -9.62842082977295
    10. ' ' → logprob: -9.87842082977295

Token 390: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12777592241764069
    2. '[input' → logprob: -2.1277759075164795
    3. ' [' → logprob: -7.377776145935059
    4. '[str' → logprob: -9.127776145935059
    5. '[line' → logprob: -10.502776145935059
    6. '[ind' → logprob: -11.502776145935059
    7. '[int' → logprob: -11.502776145935059
    8. '   ' → logprob: -11.877776145935059
    9. '[temp' → logprob: -11.877776145935059
    10. '[t' → logprob: -12.002776145935059

Token 391: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -6.2729995988775045e-06
    2. ' input' → logprob: -12.000006675720215
    3. '(input' → logprob: -19.7500057220459
    4. '<input' → logprob: -21.0000057220459
    5. '.input' → logprob: -21.2500057220459
    6. '=input' → logprob: -21.6250057220459
    7. '	input' → logprob: -22.0000057220459
    8. '
' → logprob: -22.5000057220459
    9. '_input' → logprob: -22.6250057220459
    10. ',input' → logprob: -22.7500057220459

Token 392: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.318681188422488e-05
    2. '()' → logprob: -11.25001335144043
    3. '(' → logprob: -16.75001335144043
    4. ' ().' → logprob: -17.37501335144043
    5. '()
' → logprob: -19.37501335144043
    6. '.rstrip' → logprob: -20.50001335144043
    7. 'rstrip' → logprob: -21.00001335144043
    8. '.strip' → logprob: -21.62501335144043
    9. '()

' → logprob: -22.12501335144043
    10. '("").' → logprob: -22.62501335144043

Token 393: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.47407761216163635
    2. 'rstrip' → logprob: -0.974077582359314
    3. 'r' → logprob: -14.974077224731445
    4. ' strip' → logprob: -15.224077224731445
    5. '.rstrip' → logprob: -16.224077224731445
    6. 'rs' → logprob: -18.224077224731445
    7. '(strip' → logprob: -19.224077224731445
    8. '.strip' → logprob: -20.224077224731445
    9. '_strip' → logprob: -20.224077224731445
    10. 'decode' → logprob: -20.349077224731445

Token 394: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005798388738185167
    2. '('\' → logprob: -7.500579833984375
    3. '()\' → logprob: -11.500579833984375
    4. '()]' → logprob: -11.875579833984375
    5. '()
' → logprob: -12.000579833984375
    6. '())' → logprob: -12.875579833984375
    7. ')' → logprob: -14.625579833984375
    8. '(' → logprob: -15.125579833984375
    9. ' ()' → logprob: -16.000579833984375
    10. ''\' → logprob: -16.375579833984375

Token 395: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.165027217415627e-05
    2. '\n' → logprob: -10.750021934509277
    3. '
' → logprob: -16.25002098083496
    4. 'r' → logprob: -19.25002098083496
    5. ' n' → logprob: -19.37502098083496
    6. '012' → logprob: -19.62502098083496
    7. 't' → logprob: -20.75002098083496
    8. '')' → logprob: -20.87502098083496
    9. '

' → logprob: -21.50002098083496
    10. ' \' → logprob: -21.62502098083496

Token 396: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.1804492324590683
    2. ')' → logprob: -1.9304492473602295
    3. '')]' → logprob: -4.05544900894165
    4. ')]' → logprob: -6.30544900894165
    5. '()' → logprob: -7.18044900894165
    6. '').' → logprob: -10.305449485778809
    7. '())' → logprob: -10.930449485778809
    8. ']' → logprob: -11.180449485778809
    9. '")' → logprob: -11.930449485778809
    10. '']' → logprob: -12.555449485778809

Token 397: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05966166406869888
    2. '()' → logprob: -3.559661626815796
    3. 'for' → logprob: -3.934661626815796
    4. ')' → logprob: -5.309661865234375
    5. '       ' → logprob: -5.809661865234375
    6. '	for' → logprob: -6.934661865234375
    7. '   ' → logprob: -8.309661865234375
    8. ']' → logprob: -8.309661865234375
    9. '<|end|>' → logprob: -8.434661865234375
    10. '           ' → logprob: -9.809661865234375

Token 398: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.16052784025669098
    2. '_' → logprob: -1.9105278253555298
    3. '__' → logprob: -9.035528182983398
    4. ' __' → logprob: -9.160528182983398
    5. ' ' → logprob: -10.535528182983398
    6. '_b' → logprob: -10.785528182983398
    7. ' ' → logprob: -10.910528182983398
    8. '___' → logprob: -12.910528182983398
    9. '_h' → logprob: -13.285528182983398
    10. '   ' → logprob: -13.535528182983398

Token 399: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014688261784613132
    2. '_' → logprob: -4.389688491821289
    3. ' ' → logprob: -7.014688491821289
    4. 'range' → logprob: -7.764688491821289
    5. ' _' → logprob: -8.014688491821289
    6. 'in' → logprob: -8.139688491821289
    7. ' range' → logprob: -8.514688491821289
    8. '__' → logprob: -11.014688491821289
    9. ' __' → logprob: -11.639688491821289
    10. '_range' → logprob: -13.264688491821289

Token 400: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015023599844425917
    2. ' range' → logprob: -6.501502513885498
    3. '(range' → logprob: -18.501502990722656
    4. '	range' → logprob: -19.001502990722656
    5. '
' → logprob: -19.501502990722656
    6. '_range' → logprob: -19.876502990722656
    7. 'rang' → logprob: -20.751502990722656
    8. ' ' → logprob: -21.126502990722656
    9. 'r' → logprob: -21.251502990722656
    10. 'ran' → logprob: -21.251502990722656

Token 401: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.9385402993066236e-05
    2. 'Hb' → logprob: -11.125019073486328
    3. '(' → logprob: -13.000019073486328
    4. ' Hb' → logprob: -13.375019073486328
    5. '(W' → logprob: -14.250019073486328
    6. ' (' → logprob: -15.875019073486328
    7. '   ' → logprob: -17.750019073486328
    8. 'H' → logprob: -17.750019073486328
    9. '	H' → logprob: -19.375019073486328
    10. '(int' → logprob: -19.625019073486328

Token 402: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.088346359931165e-07
    2. 'Hb' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.500000953674316
    4. ')' → logprob: -16.25
    5. '_b' → logprob: -16.625
    6. '       ' → logprob: -17.0
    7. ' b' → logprob: -17.875
    8. '           ' → logprob: -17.875
    9. '
' → logprob: -18.125
    10. '```' → logprob: -18.375

Token 403: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010747690976131707
    2. ')' → logprob: -9.250107765197754
    3. '       ' → logprob: -12.125107765197754
    4. '   ' → logprob: -12.875107765197754
    5. ')]
' → logprob: -13.375107765197754
    6. ']' → logprob: -14.125107765197754
    7. ' )' → logprob: -15.375107765197754
    8. '')]' → logprob: -16.000106811523438
    9. ')
' → logprob: -16.250106811523438
    10. ')],' → logprob: -16.375106811523438

Token 404: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6707637906074524
    2. '
' → logprob: -1.0457637310028076
    3. '<|end|>' → logprob: -2.5457637310028076
    4. '        
' → logprob: -2.9207637310028076
    5. '<|end|>' → logprob: -6.670763969421387
    6. '    
' → logprob: -7.045763969421387
    7. '  
' → logprob: -7.670763969421387
    8. '
' → logprob: -8.420763969421387
    9. '

' → logprob: -8.545763969421387
    10. ')' → logprob: -8.670763969421387

Token 405: ' block' (ID: 4355)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11771989613771439
    2. '#' → logprob: -3.617719888687134
    3. '   ' → logprob: -4.742720127105713
    4. 'block' (adapté à ' block') → logprob: -4.742720127105713
    5. 'for' → logprob: -4.992720127105713
    6. 'S' → logprob: -4.992720127105713
    7. 'rot' → logprob: -5.117720127105713
    8. 'M' → logprob: -5.367720127105713
    9. 'shape' → logprob: -5.742720127105713
    10. ' S' → logprob: -5.867720127105713

Token 406: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34909820556640625
    2. '=' → logprob: -1.2240982055664062
    3. '_coords' → logprob: -8.224098205566406
    4. '_trim' → logprob: -8.724098205566406
    5. '_' → logprob: -9.349098205566406
    6. ' ' → logprob: -10.724098205566406
    7. 's' → logprob: -10.724098205566406
    8. ',' → logprob: -11.349098205566406
    9. '[' → logprob: -11.599098205566406
    10. '   ' → logprob: -11.849098205566406

Token 407: ' trim' (ID: 19334)
  Prédit: ' trim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trim' → logprob: -0.10021615028381348
    2. 'trim' → logprob: -2.3502161502838135
    3. '(trim' → logprob: -13.350215911865234
    4. ' rotate' → logprob: -13.725215911865234
    5. ' strip' → logprob: -13.725215911865234
    6. 'tr' → logprob: -13.725215911865234
    7. '[' → logprob: -13.850215911865234
    8. '   ' → logprob: -14.350215911865234
    9. ' trimmed' → logprob: -14.600215911865234
    10. 'strip' → logprob: -14.850215911865234

Token 408: '(block' (ID: 36179)
  Prédit: '(block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -9.610702363715973e-06
    2. '(' → logprob: -11.625009536743164
    3. '(shape' → logprob: -14.625009536743164
    4. '(
' → logprob: -16.500009536743164
    5. '(Block' → logprob: -16.625009536743164
    6. ':block' → logprob: -17.250009536743164
    7. ' (' → logprob: -17.500009536743164
    8. 'block' → logprob: -18.375009536743164
    9. '(rot' → logprob: -18.625009536743164
    10. '	block' → logprob: -18.750009536743164

Token 409: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017445837147533894
    2. ')
' → logprob: -8.750174522399902
    3. ')

' → logprob: -11.125174522399902
    4. '   ' → logprob: -14.125174522399902
    5. ' )' → logprob: -15.125174522399902
    6. '       ' → logprob: -15.875174522399902
    7. ')
' → logprob: -17.000173568725586
    8. ')`' → logprob: -17.750173568725586
    9. '())' → logprob: -18.250173568725586
    10. '),' → logprob: -18.250173568725586

Token 410: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 411: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027981046587228775
    2. '       ' → logprob: -3.7779810428619385
    3. '        
' → logprob: -6.402981281280518
    4. '<|end|>' → logprob: -6.902981281280518
    5. '

' → logprob: -7.027981281280518
    6. '
' → logprob: -7.777981281280518
    7. '    
' → logprob: -8.27798080444336
    8. '  
' → logprob: -8.65298080444336
    9. ',' → logprob: -9.27798080444336
    10. '#' → logprob: -9.65298080444336

Token 412: ' trim' (ID: 19334)
  Prédit: ' block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.8389573097229004
    2. 'block' → logprob: -1.4639573097229004
    3. '
' → logprob: -1.5889573097229004
    4. ' shapes' → logprob: -2.9639573097229004
    5. ' for' → logprob: -4.0889573097229
    6. ' 
' → logprob: -4.5889573097229
    7. ' coords' → logprob: -4.7139573097229
    8. ' rotations' → logprob: -4.7139573097229
    9. 'coords' → logprob: -5.3389573097229
    10. '    
' → logprob: -5.5889573097229

Token 413: ' block' (ID: 4355)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5720148086547852
    2. '       ' → logprob: -1.5720148086547852
    3. '<|end|>' → logprob: -1.5720148086547852
    4. '        
' → logprob: -5.072014808654785
    5. '<|end|>' → logprob: -5.322014808654785
    6. '(block' → logprob: -6.322014808654785
    7. 'block' → logprob: -6.572014808654785
    8. '

' → logprob: -6.697014808654785
    9. ',' → logprob: -6.822014808654785
    10. '#' → logprob: -7.447014808654785

Token 414: ' shape' (ID: 9591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 415: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015581219457089901
    2. '
' → logprob: -4.765581130981445
    3. '<|end|>' → logprob: -5.640581130981445
    4. '        
' → logprob: -5.890581130981445
    5. '    
' → logprob: -9.015581130981445
    6. '   ' → logprob: -9.140581130981445
    7. ',' → logprob: -9.390581130981445
    8. '#' → logprob: -10.015581130981445
    9. '  
' → logprob: -10.140581130981445
    10. ' for' → logprob: -10.515581130981445

Token 417: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13188090920448303
    2. '#' (adapté à ' #') → logprob: -3.38188099861145
    3. 'for' → logprob: -3.75688099861145
    4. 'rot' → logprob: -4.256880760192871
    5. ' for' → logprob: -5.256880760192871
    6. 'R' → logprob: -5.256880760192871
    7. '   ' → logprob: -5.631880760192871
    8. 'M' → logprob: -5.631880760192871
    9. ' rotations' → logprob: -5.756880760192871
    10. '
' → logprob: -6.006880760192871

Token 418: ' Generate' (ID: 33886)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.7359293103218079
    2. '#' → logprob: -1.985929250717163
    3. 'sh' → logprob: -1.985929250717163
    4. 'block' → logprob: -2.360929250717163
    5. '   ' → logprob: -4.110929489135742
    6. ' rotations' → logprob: -4.110929489135742
    7. 'rots' → logprob: -4.235929489135742
    8. 'for' → logprob: -4.360929489135742
    9. 'shape' → logprob: -4.610929489135742
    10. 'orient' → logprob: -5.110929489135742

Token 419: ' all' (ID: 722)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -1.0935503244400024
    2. 'all' → logprob: -1.8435503244400024
    3. ' rotations' → logprob: -1.8435503244400024
    4. 'sh' → logprob: -2.093550205230713
    5. '   ' → logprob: -2.968550205230713
    6. ' shapes' → logprob: -3.093550205230713
    7. 'block' → logprob: -3.218550205230713
    8. ' all' → logprob: -3.343550205230713
    9. 'blocks' → logprob: -4.218550205230713
    10. 'variants' → logprob: -4.968550205230713

Token 420: ' ' (ID: 220)
  Prédit: ' rotations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rotations' → logprob: -1.137935757637024
    2. '_rot' → logprob: -1.387935757637024
    3. '   ' → logprob: -1.637935757637024
    4. 'rot' → logprob: -1.637935757637024
    5. '       ' → logprob: -4.012935638427734
    6. ' rotated' → logprob: -5.387935638427734
    7. 'orient' → logprob: -5.512935638427734
    8. ' shapes' → logprob: -5.637935638427734
    9. 'block' → logprob: -5.762935638427734
    10. ' orientations' → logprob: -6.512935638427734

Token 421: '4' (ID: 19)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.009731059893965721
    2. 'orient' → logprob: -5.384731292724609
    3. ' rotations' → logprob: -6.134731292724609
    4. 'block' → logprob: -6.759731292724609
    5. '_rot' → logprob: -7.134731292724609
    6. '   ' → logprob: -7.884731292724609
    7. 'rots' → logprob: -8.25973129272461
    8. ' rotated' → logprob: -9.25973129272461
    9. ' ' → logprob: -9.88473129272461
    10. 'variants' → logprob: -10.38473129272461

Token 422: ' rotated' (ID: 93819)
  Prédit: ' rotations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rotations' → logprob: -0.24351821839809418
    2. '_rot' → logprob: -1.8685182332992554
    3. 'rot' → logprob: -2.993518114089966
    4. ' rotated' → logprob: -5.368518352508545
    5. ' orientations' → logprob: -6.118518352508545
    6. '   ' → logprob: -6.368518352508545
    7. ' block' → logprob: -6.618518352508545
    8. 'block' → logprob: -6.868518352508545
    9. ' rotation' → logprob: -9.368517875671387
    10. '_rotation' → logprob: -9.618517875671387

Token 423: ' variants' (ID: 46908)
  Prédit: 'sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sh' → logprob: -0.7945848107337952
    2. 'block' → logprob: -1.1695847511291504
    3. 'versions' → logprob: -2.2945847511291504
    4. ' shapes' → logprob: -3.4195847511291504
    5. '_block' → logprob: -3.7945847511291504
    6. '_shapes' → logprob: -3.7945847511291504
    7. '_versions' → logprob: -4.04458475112915
    8. ' versions' → logprob: -4.29458475112915
    9. 'blocks' → logprob: -4.91958475112915
    10. ' block' → logprob: -4.91958475112915

Token 424: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013081998564302921
    2. '
' → logprob: -5.138082027435303
    3. 'blocks' → logprob: -5.763082027435303
    4. 'variants' → logprob: -6.638082027435303
    5. 'block' → logprob: -7.013082027435303
    6. ' variants' → logprob: -7.388082027435303
    7. '        
' → logprob: -8.513081550598145
    8. ' blocks' → logprob: -8.638081550598145
    9. ' block' → logprob: -8.888081550598145
    10. 's' → logprob: -9.138081550598145

Token 425: ' the' (ID: 290)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.02327156811952591
    2. ' block' → logprob: -3.7732715606689453
    3. 'the' → logprob: -10.898271560668945
    4. '   ' → logprob: -12.648271560668945
    5. ' the' → logprob: -12.898271560668945
    6. '	block' → logprob: -14.648271560668945
    7. 'b' → logprob: -14.773271560668945
    8. '
' → logprob: -14.773271560668945
    9. ' ' → logprob: -16.023271560668945
    10. '(block' → logprob: -16.023271560668945

Token 426: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.02977907471358776
    2. ' block' → logprob: -3.5297789573669434
    3. 'b' → logprob: -11.154779434204102
    4. 'trim' → logprob: -12.904779434204102
    5. 'bloc' → logprob: -13.029779434204102
    6. '   ' → logprob: -13.279779434204102
    7. '	block' → logprob: -13.779779434204102
    8. 'blocked' → logprob: -13.904779434204102
    9. ' ' → logprob: -14.279779434204102
    10. '`' → logprob: -14.279779434204102

Token 427: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04556696489453316
    2. 'variants' → logprob: -4.170567035675049
    3. '
' → logprob: -5.045567035675049
    4. 'blocks' → logprob: -5.170567035675049
    5. 'block' → logprob: -5.545567035675049
    6. '   ' → logprob: -5.795567035675049
    7. ' variants' → logprob: -5.795567035675049
    8. ' shapes' → logprob: -6.670567035675049
    9. '        
' → logprob: -6.795567035675049
    10. ',' → logprob: -7.045567035675049

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031184181571006775
    2. 'variants' → logprob: -6.878118515014648
    3. ' variants' → logprob: -7.503118515014648
    4. 'block' → logprob: -7.753118515014648
    5. 'blocks' → logprob: -8.128118515014648
    6. '
' → logprob: -8.253118515014648
    7. ' block' → logprob: -9.003118515014648
    8. '        
' → logprob: -9.003118515014648
    9. '   ' → logprob: -9.628118515014648
    10. ' shapes' → logprob: -9.878118515014648

Token 429: ' variants' (ID: 46908)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.36302292346954346
    2. 'variants' (adapté à ' variants') → logprob: -2.113022804260254
    3. 'sh' → logprob: -2.363022804260254
    4. '       ' → logprob: -2.738022804260254
    5. 'block' → logprob: -4.363022804260254
    6. 'rot' → logprob: -5.488022804260254
    7. ' variants' → logprob: -5.988022804260254
    8. ' blocks' → logprob: -6.113022804260254
    9. ' shapes' → logprob: -6.863022804260254
    10. '   ' → logprob: -7.113022804260254

Token 430: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020893067121506
    2. '=' → logprob: -2.3502089977264404
    3. '=[]' → logprob: -13.47520923614502
    4. '   ' → logprob: -15.35020923614502
    5. '=[]
' → logprob: -15.35020923614502
    6. ',' → logprob: -15.97520923614502
    7. ' =[' → logprob: -16.100208282470703
    8. 's' → logprob: -16.850208282470703
    9. '=[' → logprob: -16.975208282470703
    10. '[' → logprob: -16.975208282470703

Token 431: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005335385911166668
    2. ' [' → logprob: -5.255335330963135
    3. '{' → logprob: -9.880335807800293
    4. '[]
' → logprob: -10.505335807800293
    5. '[array' → logprob: -12.380335807800293
    6. '   ' → logprob: -12.505335807800293
    7. '[]' → logprob: -12.630335807800293
    8. ' ' → logprob: -12.755335807800293
    9. '[b' → logprob: -13.380335807800293
    10. 'set' → logprob: -13.380335807800293

Token 432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015612556599080563
    2. ' for' → logprob: -4.890612602233887
    3. '
' → logprob: -5.015612602233887
    4. '   ' → logprob: -8.015612602233887
    5. 'for' → logprob: -8.140612602233887
    6. '<|end|>' → logprob: -9.015612602233887
    7. '        
' → logprob: -9.515612602233887
    8. ' 
' → logprob: -9.515612602233887
    9. ',' → logprob: -9.515612602233887
    10. '  
' → logprob: -9.640612602233887

Token 433: ' base' (ID: 3611)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3266390264034271
    2. 'current' → logprob: -2.70163893699646
    3. 'shape' → logprob: -2.82663893699646
    4. ' for' → logprob: -3.32663893699646
    5. 'curr' → logprob: -3.32663893699646
    6. 'cur' → logprob: -3.70163893699646
    7. 'variant' → logprob: -3.95163893699646
    8. 'block' → logprob: -4.451639175415039
    9. '       ' → logprob: -4.951639175415039
    10. ' curr' → logprob: -5.201639175415039

Token 434: ' =' (ID: 314)
  Prédit: '_shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shape' → logprob: -0.7469130754470825
    2. ' =' → logprob: -0.9969130754470825
    3. '_block' → logprob: -1.9969130754470825
    4. '=' → logprob: -4.746912956237793
    5. '_variant' → logprob: -4.996912956237793
    6. 'shape' → logprob: -5.371912956237793
    7. 'block' → logprob: -7.246912956237793
    8. '_' → logprob: -7.746912956237793
    9. '_vari' → logprob: -10.496912956237793
    10. '   ' → logprob: -11.121912956237793

Token 435: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.30735018849372864
    2. ' block' → logprob: -1.4323501586914062
    3. 'trim' → logprob: -4.182350158691406
    4. ' trim' → logprob: -4.557350158691406
    5. '[' → logprob: -9.932350158691406
    6. ' ' → logprob: -11.432350158691406
    7. ' [' → logprob: -11.682350158691406
    8. '	block' → logprob: -12.057350158691406
    9. 'blk' → logprob: -12.619850158691406
    10. 'b' → logprob: -12.869850158691406

Token 436: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2572331130504608
    2. '       ' → logprob: -1.5072331428527832
    3. 'for' → logprob: -6.007233142852783
    4. '
' → logprob: -7.007233142852783
    5. ')
' → logprob: -7.882233142852783
    6. ' for' → logprob: -8.257232666015625
    7. '        
' → logprob: -8.382232666015625
    8. '   ' → logprob: -8.632232666015625
    9. '<|end|>' → logprob: -8.882232666015625
    10. ')' → logprob: -9.007232666015625

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1875302493572235
    2. '
' → logprob: -1.812530279159546
    3. ' for' → logprob: -5.312530040740967
    4. '<|end|>' → logprob: -7.062530040740967
    5. ',
' → logprob: -7.812530040740967
    6. 'for' → logprob: -8.062530517578125
    7. '   ' → logprob: -8.312530517578125
    8. ',' → logprob: -9.062530517578125
    9. '  
' → logprob: -9.062530517578125
    10. '        
' → logprob: -9.187530517578125

Token 438: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4796312153339386
    2. ' for' → logprob: -1.1046311855316162
    3. '   ' → logprob: -3.479631185531616
    4. '
' → logprob: -4.729631423950195
    5. 'variants' → logprob: -4.729631423950195
    6. ' variants' → logprob: -7.354631423950195
    7. '       ' → logprob: -7.979631423950195
    8. '```' → logprob: -9.729631423950195
    9. '    
' → logprob: -10.229631423950195
    10. '	for' → logprob: -10.229631423950195

Token 439: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.011061854660511017
    2. '_' → logprob: -4.511061668395996
    3. ' i' → logprob: -11.261061668395996
    4. 'i' → logprob: -14.511061668395996
    5. '_i' → logprob: -14.761061668395996
    6. ' ' → logprob: -15.511061668395996
    7. ' _
' → logprob: -17.136062622070312
    8. '   ' → logprob: -18.511062622070312
    9. '_=' → logprob: -18.511062622070312
    10. '__' → logprob: -18.636062622070312

Token 440: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029790299013257027
    2. 'in' → logprob: -3.5297904014587402
    3. '_' → logprob: -11.029789924621582
    4. ' ' → logprob: -11.154789924621582
    5. ' _' → logprob: -12.904789924621582
    6. '_in' → logprob: -12.904789924621582
    7. ' i' → logprob: -13.279789924621582
    8. 'import' → logprob: -14.404789924621582
    9. 'i' → logprob: -14.904789924621582
    10. ',' → logprob: -15.529789924621582

Token 441: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0619712732732296
    2. ' range' → logprob: -2.8119711875915527
    3. '[' → logprob: -12.686971664428711
    4. ' ' → logprob: -15.311971664428711
    5. '   ' → logprob: -15.811971664428711
    6. '0' → logprob: -16.93697166442871
    7. '	range' → logprob: -17.18697166442871
    8. '  ' → logprob: -17.56197166442871
    9. '(range' → logprob: -17.93697166442871
    10. '    ' → logprob: -18.43697166442871

Token 442: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0009140860638581216
    2. '(' → logprob: -7.250914096832275
    3. ' ' → logprob: -8.500913619995117
    4. '   ' → logprob: -14.125913619995117
    5. '3' → logprob: -15.750913619995117
    6. '(
' → logprob: -17.125913619995117
    7. ',' → logprob: -18.250913619995117
    8. ' (' → logprob: -18.500913619995117
    9. '```' → logprob: -18.625913619995117
    10. '' → logprob: -18.625913619995117

Token 443: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '3' → logprob: -16.625
    4. '   ' → logprob: -17.625
    5. ')' → logprob: -18.375
    6. '```' → logprob: -18.5
    7. '' → logprob: -18.875
    8. '1' → logprob: -18.875
    9. '４' → logprob: -19.375
    10. '
' → logprob: -19.5

Token 444: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0013652353081852198
    2. '):' → logprob: -6.7513651847839355
    3. ':
' → logprob: -8.876365661621094
    4. '   ' → logprob: -10.501365661621094
    5. '):
' → logprob: -10.876365661621094
    6. ':' → logprob: -12.126365661621094
    7. '       ' → logprob: -13.876365661621094
    8. '():
' → logprob: -14.126365661621094
    9. ')' → logprob: -14.376365661621094
    10. ' ):
' → logprob: -14.501365661621094

Token 445: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0058299642987549305
    2. '
' → logprob: -5.880829811096191
    3. '       ' → logprob: -6.380829811096191
    4. '<|end|>' → logprob: -7.880829811096191
    5. '<|end|>' → logprob: -8.630829811096191
    6. '    
' → logprob: -8.880829811096191
    7. '            
' → logprob: -9.005829811096191
    8. ',' → logprob: -9.255829811096191
    9. '   ' → logprob: -9.380829811096191
    10. ' 
' → logprob: -10.005829811096191

Token 446: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7413739562034607
    2. '       ' → logprob: -1.4913740158081055
    3. ' variants' → logprob: -1.6163740158081055
    4. ' base' → logprob: -3.2413740158081055
    5. '   ' → logprob: -3.3663740158081055
    6. 'base' → logprob: -4.8663740158081055
    7. 'variants' → logprob: -4.8663740158081055
    8. ' rotated' → logprob: -5.3663740158081055
    9. ' block' → logprob: -5.6163740158081055
    10. ' if' → logprob: -7.2413740158081055

Token 447: ' trim' (ID: 19334)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.5354853272438049
    2. ' base' → logprob: -1.1604852676391602
    3. ' variants' → logprob: -3.41048526763916
    4. 'variants' → logprob: -3.53548526763916
    5. 'block' → logprob: -4.66048526763916
    6. '           ' → logprob: -4.66048526763916
    7. '   ' → logprob: -4.91048526763916
    8. ' block' → logprob: -5.53548526763916
    9. ' rotated' → logprob: -6.28548526763916
    10. 'trim' → logprob: -6.53548526763916

Token 448: ' each' (ID: 2454)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.24707210063934326
    2. '           ' → logprob: -1.9970721006393433
    3. 'base' → logprob: -2.747072219848633
    4. '(base' → logprob: -3.997072219848633
    5. '   ' → logprob: -8.872072219848633
    6. '               ' → logprob: -8.872072219848633
    7. ' variant' → logprob: -9.747072219848633
    8. '
' → logprob: -9.747072219848633
    9. '       ' → logprob: -9.872072219848633
    10. '(' → logprob: -10.122072219848633

Token 449: ' rotation' (ID: 23769)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.5532853603363037
    2. 'base' → logprob: -0.9282853603363037
    3. ' variant' → logprob: -4.678285598754883
    4. '           ' → logprob: -4.928285598754883
    5. '(base' → logprob: -4.928285598754883
    6. 'variant' → logprob: -5.428285598754883
    7. '   ' → logprob: -7.178285598754883
    8. '
' → logprob: -7.803285598754883
    9. 'shape' → logprob: -9.178285598754883
    10. '       ' → logprob: -9.803285598754883

Token 450: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008832012303173542
    2. '
' → logprob: -5.133831977844238
    3. '       ' → logprob: -6.883831977844238
    4. ',' → logprob: -7.758831977844238
    5. '<|end|>' → logprob: -7.758831977844238
    6. '   ' → logprob: -8.883831977844238
    7. '
' → logprob: -9.258831977844238
    8. ' base' → logprob: -9.258831977844238
    9. '<|end|>' → logprob: -9.258831977844238
    10. ' =' → logprob: -9.383831977844238

Token 451: ' remove' (ID: 6234)
  Prédit: 'trim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trim' → logprob: -0.5485600233078003
    2. 'base' → logprob: -1.0485600233078003
    3. ' trim' → logprob: -3.54856014251709
    4. 'rotate' → logprob: -3.92356014251709
    5. ' base' → logprob: -4.04856014251709
    6. 'shape' → logprob: -5.92356014251709
    7. 'block' → logprob: -7.04856014251709
    8. '   ' → logprob: -7.67356014251709
    9. ' rotate' → logprob: -7.79856014251709
    10. 'strip' → logprob: -8.42356014251709

Token 452: ' surrounding' (ID: 20708)
  Prédit: ' leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' leading' → logprob: -0.173566535115242
    2. ' extr' → logprob: -3.0485665798187256
    3. ' empty' → logprob: -3.5485665798187256
    4. ' unnecessary' → logprob: -4.0485663414001465
    5. ' extra' → logprob: -4.1735663414001465
    6. ' excess' → logprob: -4.1735663414001465
    7. 'leading' → logprob: -5.0485663414001465
    8. 'empty' → logprob: -5.2985663414001465
    9. ' outer' → logprob: -5.5485663414001465
    10. 'extr' → logprob: -5.6735663414001465

Token 453: ' empty' (ID: 8213)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03397715464234352
    2. ' spaces' → logprob: -5.283977031707764
    3. ' empty' → logprob: -5.408977031707764
    4. ' .' → logprob: -5.408977031707764
    5. ' dots' → logprob: -5.533977031707764
    6. 'spaces' → logprob: -5.533977031707764
    7. 'empty' → logprob: -5.908977031707764
    8. ' whitespace' → logprob: -6.033977031707764
    9. '.
' → logprob: -6.283977031707764
    10. 'dots' → logprob: -6.533977031707764

Token 454: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.14910447597503662
    2. ' rows' → logprob: -2.524104595184326
    3. 'lines' → logprob: -3.399104595184326
    4. ' lines' → logprob: -4.149104595184326
    5. 'spaces' → logprob: -5.524104595184326
    6. ' spaces' → logprob: -5.774104595184326
    7. 'cells' → logprob: -7.524104595184326
    8. '   ' → logprob: -7.524104595184326
    9. 'space' → logprob: -8.274104118347168
    10. 'blocks' → logprob: -8.774104118347168

Token 455: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012636194005608559
    2. ' and' → logprob: -4.637636184692383
    3. ',' → logprob: -6.762636184692383
    4. '<|end|>' → logprob: -7.387636184692383
    5. 'and' → logprob: -7.762636184692383
    6. '   ' → logprob: -8.012636184692383
    7. '       ' → logprob: -8.762636184692383
    8. ')' → logprob: -10.012636184692383
    9. '<|end|>' → logprob: -10.137636184692383
    10. '[' → logprob: -11.137636184692383

Token 456: ' columns' (ID: 15697)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.011772874742746353
    2. 'cols' → logprob: -4.761773109436035
    3. ' columns' → logprob: -5.761773109436035
    4. ' cols' → logprob: -12.136773109436035
    5. '   ' → logprob: -13.261773109436035
    6. ' ' → logprob: -15.011773109436035
    7. 'col' → logprob: -15.761773109436035
    8. '.columns' → logprob: -16.63677215576172
    9. '-columns' → logprob: -17.13677215576172
    10. '  ' → logprob: -17.51177215576172

Token 457: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020949281752109528
    2. '       ' → logprob: -4.020949363708496
    3. '
' → logprob: -6.270949363708496
    4. '   ' → logprob: -7.395949363708496
    5. ',' → logprob: -9.520949363708496
    6. '               ' → logprob: -10.020949363708496
    7. '{
' → logprob: -10.395949363708496
    8. '```' → logprob: -10.770949363708496
    9. '[' → logprob: -11.020949363708496
    10. '<|end|>' → logprob: -11.145949363708496

Token 458: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14982083439826965
    2. '       ' → logprob: -2.1498208045959473
    3. '   ' → logprob: -4.024820804595947
    4. '
' → logprob: -5.649820804595947
    5. ' rotated' → logprob: -7.899820804595947
    6. '{
' → logprob: -8.899821281433105
    7. '    
' → logprob: -9.149821281433105
    8. ',' → logprob: -9.399821281433105
    9. '               ' → logprob: -9.399821281433105
    10. '    ' → logprob: -10.149821281433105

Token 459: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.19021284580230713
    2. 'base' (adapté à ' base') → logprob: -1.8152128458023071
    3. '           ' → logprob: -4.940212726593018
    4. '   ' → logprob: -6.065212726593018
    5. '       ' → logprob: -7.940212726593018
    6. ' rotated' → logprob: -8.690213203430176
    7. ' block' → logprob: -8.815213203430176
    8. 'block' → logprob: -9.440213203430176
    9. ' variant' → logprob: -10.065213203430176
    10. ' variants' → logprob: -10.565213203430176

Token 460: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. '=

' → logprob: -17.01104736328125
    4. '＝' → logprob: -17.38604736328125
    5. '   ' → logprob: -18.01104736328125
    6. '=
' → logprob: -19.26104736328125
    7. ' ' → logprob: -19.51104736328125
    8. ')' → logprob: -20.51104736328125
    9. '	' → logprob: -21.01104736328125
    10. '[' → logprob: -21.01104736328125

Token 461: ' trim' (ID: 19334)
  Prédit: ' trim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trim' → logprob: -0.6945756673812866
    2. 'trim' → logprob: -0.6945756673812866
    3. 'rotate' → logprob: -7.194575786590576
    4. ' rotate' → logprob: -7.319575786590576
    5. '   ' → logprob: -11.819575309753418
    6. '(trim' → logprob: -13.069575309753418
    7. ' ' → logprob: -13.569575309753418
    8. 'rot' → logprob: -14.194575309753418
    9. 'strip' → logprob: -14.444575309753418
    10. '_trim' → logprob: -14.694575309753418

Token 462: '(base' (ID: 25314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.5597102396423e-05
    2. '(base' → logprob: -10.250035285949707
    3. '(
' → logprob: -15.875035285949707
    4. 'rotate' → logprob: -16.500036239624023
    5. '(rot' → logprob: -17.250036239624023
    6. ' (' → logprob: -17.625036239624023
    7. '(rotation' → logprob: -18.000036239624023
    8. '((' → logprob: -18.250036239624023
    9. '(

' → logprob: -20.500036239624023
    10. '(rename' → logprob: -20.750036239624023

Token 463: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005607473198324442
    2. '(' → logprob: -5.755607604980469
    3. ')
' → logprob: -6.380607604980469
    4. '(rot' → logprob: -8.130607604980469
    5. ' )' → logprob: -9.005607604980469
    6. '())' → logprob: -9.130607604980469
    7. '(
' → logprob: -9.505607604980469
    8. 'rotate' → logprob: -10.005607604980469
    9. '(rotation' → logprob: -10.505607604980469
    10. '))' → logprob: -11.255607604980469

Token 464: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022414572536945343
    2. '       ' → logprob: -4.272414684295654
    3. '
' → logprob: -5.272414684295654
    4. '   ' → logprob: -6.772414684295654
    5. 'tokens' → logprob: -7.897414684295654
    6. 'variants' → logprob: -7.897414684295654
    7. ',' → logprob: -8.022414207458496
    8. '<|end|>' → logprob: -8.522414207458496
    9. 'base' → logprob: -8.772414207458496
    10. ' variants' → logprob: -9.522414207458496

Token 465: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23559854924678802
    2. 'variants' → logprob: -1.9855985641479492
    3. '       ' → logprob: -3.235598564147949
    4. ' variants' → logprob: -3.860598564147949
    5. '   ' → logprob: -4.485598564147949
    6. ' rotated' → logprob: -8.36059856414795
    7. 'vari' → logprob: -8.86059856414795
    8. 'block' → logprob: -8.86059856414795
    9. 'base' → logprob: -9.11059856414795
    10. ' if' → logprob: -10.11059856414795

Token 466: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.4762413799762726
    2. ' base' → logprob: -0.9762413501739502
    3. ' not' → logprob: -6.351241588592529
    4. 'not' → logprob: -8.726241111755371
    5. ' all' → logprob: -9.476241111755371
    6. ' ' → logprob: -9.601241111755371
    7. '(base' → logprob: -10.101241111755371
    8. 'all' → logprob: -10.601241111755371
    9. '   ' → logprob: -10.851241111755371
    10. ' any' → logprob: -12.101241111755371

Token 467: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.007836227305233479
    2. 'not' → logprob: -4.88283634185791
    3. ')' → logprob: -8.50783634185791
    4. ']' → logprob: -11.50783634185791
    5. ':' → logprob: -11.75783634185791
    6. '<|end|>' → logprob: -13.38283634185791
    7. '	not' → logprob: -13.63283634185791
    8. ' in' → logprob: -13.88283634185791
    9. '[:]' → logprob: -13.88283634185791
    10. ',' → logprob: -14.00783634185791

Token 468: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005885302554816008
    2. ' variants' → logprob: -5.755885124206543
    3. 'in' → logprob: -6.005885124206543
    4. 'variants' → logprob: -8.505885124206543
    5. ')' → logprob: -11.380885124206543
    6. '<|end|>' → logprob: -12.505885124206543
    7. ',' → logprob: -12.630885124206543
    8. '<|end|>' → logprob: -12.630885124206543
    9. '_vari' → logprob: -12.755885124206543
    10. ' to' → logprob: -12.880885124206543

Token 469: ' variants' (ID: 46908)
  Prédit: 'variants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variants' → logprob: -0.00024620062322355807
    2. ' variants' → logprob: -8.625246047973633
    3. '[' → logprob: -9.625246047973633
    4. '   ' → logprob: -15.375246047973633
    5. 'vari' → logprob: -15.875246047973633
    6. 'variables' → logprob: -16.375246047973633
    7. 'variant' → logprob: -16.875246047973633
    8. '[[' → logprob: -17.625246047973633
    9. '```' → logprob: -17.750246047973633
    10. ' [' → logprob: -17.750246047973633

Token 470: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43161293864250183
    2. ':
' → logprob: -1.0566129684448242
    3. '):
' → logprob: -6.431612968444824
    4. '           ' → logprob: -6.931612968444824
    5. '):' → logprob: -8.681612968444824
    6. ',' → logprob: -10.431612968444824
    7. ')' → logprob: -10.681612968444824
    8. '       ' → logprob: -10.806612968444824
    9. '               ' → logprob: -10.931612968444824
    10. ':
' → logprob: -11.306612968444824

Token 471: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06995344161987305
    2. '           ' → logprob: -3.319953441619873
    3. ' variants' → logprob: -3.569953441619873
    4. 'variants' → logprob: -5.819953441619873
    5. ',' → logprob: -10.069953918457031
    6. '<|end|>' → logprob: -10.194953918457031
    7. 'Variants' → logprob: -10.194953918457031
    8. '                   ' → logprob: -10.819953918457031
    9. '```' → logprob: -10.944953918457031
    10. ' tokens' → logprob: -11.194953918457031

Token 472: ' variants' (ID: 46908)
  Prédit: 'variants'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variants' (adapté à ' variants') → logprob: -0.25974607467651367
    2. ' variants' → logprob: -2.1347460746765137
    3. '               ' → logprob: -2.7597460746765137
    4. '           ' → logprob: -3.2597460746765137
    5. '                   ' → logprob: -5.134746074676514
    6. '       ' → logprob: -6.384746074676514
    7. '   ' → logprob: -6.759746074676514
    8. 'vari' → logprob: -11.009746551513672
    9. '_vari' → logprob: -11.884746551513672
    10. '                       ' → logprob: -12.384746551513672

Token 473: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005551783833652735
    2. '.' → logprob: -7.500555038452148
    3. '.extend' → logprob: -14.125555038452148
    4. '.add' → logprob: -14.625555038452148
    5. '.app' → logprob: -14.875555038452148
    6. '.Append' → logprob: -15.500555038452148
    7. 'append' → logprob: -15.500555038452148
    8. ').' → logprob: -16.62555503845215
    9. '.push' → logprob: -16.62555503845215
    10. '.setdefault' → logprob: -16.87555503845215

Token 474: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.500003814697266
    3. '(
' → logprob: -17.375003814697266
    4. ' (' → logprob: -18.000003814697266
    5. '(b' → logprob: -18.375003814697266
    6. '(block' → logprob: -18.625003814697266
    7. 'base' → logprob: -19.125003814697266
    8. '((' → logprob: -20.500003814697266
    9. '(copy' → logprob: -20.500003814697266
    10. '(BASE' → logprob: -21.125003814697266

Token 475: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016712533542886376
    2. ')
' → logprob: -6.501671314239502
    3. '           ' → logprob: -8.751670837402344
    4. '       ' → logprob: -12.251670837402344
    5. '               ' → logprob: -13.251670837402344
    6. ')

' → logprob: -14.126670837402344
    7. '<|end|>' → logprob: -14.376670837402344
    8. '')' → logprob: -14.876670837402344
    9. ')
' → logprob: -15.251670837402344
    10. '   ' → logprob: -15.251670837402344

Token 476: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2627634108066559
    2. '
' → logprob: -1.7627633810043335
    3. '       ' → logprob: -3.887763500213623
    4. '   ' → logprob: -4.512763500213623
    5. '<|end|>' → logprob: -4.762763500213623
    6. '    
' → logprob: -5.387763500213623
    7. '        
' → logprob: -5.887763500213623
    8. '		' → logprob: -6.012763500213623
    9. '<|end|>' → logprob: -6.137763500213623
    10. '
' → logprob: -7.262763500213623

Token 477: ' base' (ID: 3611)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7285716533660889
    2. '       ' → logprob: -1.2285716533660889
    3. 'base' (adapté à ' base') → logprob: -2.103571653366089
    4. '   ' → logprob: -2.478571653366089
    5. ' base' → logprob: -3.978571653366089
    6. ' ' → logprob: -10.103571891784668
    7. '	base' → logprob: -10.853571891784668
    8. '     ' → logprob: -11.853571891784668
    9. '               ' → logprob: -11.978571891784668
    10. '(base' → logprob: -12.103571891784668

Token 478: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '＝' → logprob: -16.413042068481445
    4. ' ' → logprob: -19.913042068481445
    5. '=
' → logprob: -21.038042068481445
    6. '    ' → logprob: -21.913042068481445
    7. '   ' → logprob: -22.163042068481445
    8. '=

' → logprob: -22.163042068481445
    9. '.=' → logprob: -22.288042068481445
    10. ',' → logprob: -22.913042068481445

Token 479: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.029750604182481766
    2. ' rotate' → logprob: -3.5297505855560303
    3. 'rot' → logprob: -17.40475082397461
    4. ' ' → logprob: -17.52975082397461
    5. '.rotate' → logprob: -17.52975082397461
    6. '   ' → logprob: -18.15475082397461
    7. '  ' → logprob: -19.27975082397461
    8. '_rotate' → logprob: -19.52975082397461
    9. ' ' → logprob: -20.52975082397461
    10. 'Rotate' → logprob: -20.65475082397461

Token 480: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -5.872261317563243e-05
    2. '(' → logprob: -9.750059127807617
    3. '(
' → logprob: -15.375059127807617
    4. ' (' → logprob: -16.750059127807617
    5. 'base' → logprob: -17.375059127807617
    6. '(block' → logprob: -18.500059127807617
    7. '(b' → logprob: -19.750059127807617
    8. ' base' → logprob: -19.750059127807617
    9. '(Base' → logprob: -20.000059127807617
    10. '(

' → logprob: -20.125059127807617

Token 481: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ')
' → logprob: -11.875009536743164
    3. '())' → logprob: -13.375009536743164
    4. ' )' → logprob: -14.625009536743164
    5. '   ' → logprob: -15.250009536743164
    6. '<|end|>' → logprob: -16.250009536743164
    7. '[' → logprob: -16.750009536743164
    8. '()' → logprob: -17.000009536743164
    9. '))' → logprob: -17.125009536743164
    10. '(' → logprob: -17.250009536743164

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4836927652359009
    2. '<|end|>' → logprob: -1.2336927652359009
    3. '
' → logprob: -2.4836926460266113
    4. '        
' → logprob: -5.608692646026611
    5. '   ' → logprob: -5.733692646026611
    6. '<|end|>' → logprob: -7.608692646026611
    7. '    
' → logprob: -7.733692646026611
    8. '#' → logprob: -8.48369312286377
    9. ')' → logprob: -8.73369312286377
    10. 'newline' → logprob: -9.73369312286377

Token 483: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40039384365081787
    2. 'H' → logprob: -1.2753938436508179
    3. '#' (adapté à ' #') → logprob: -4.150393962860107
    4. '   ' → logprob: -4.400393962860107
    5. 'M' → logprob: -4.775393962860107
    6. 'R' → logprob: -6.150393962860107
    7. ' H' → logprob: -6.150393962860107
    8. 'Hb' → logprob: -6.650393962860107
    9. 'Q' → logprob: -7.025393962860107
    10. 'h' → logprob: -7.212893962860107

Token 484: ' Read' (ID: 5405)
  Prédit: 'Hb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Hb' → logprob: -1.1673551797866821
    2. 'H' → logprob: -1.7923551797866821
    3. 'Hr' → logprob: -1.7923551797866821
    4. 'Hs' → logprob: -2.4173550605773926
    5. '#' → logprob: -2.9173550605773926
    6. 'Ha' → logprob: -3.0423550605773926
    7. 'Hw' → logprob: -3.2923550605773926
    8. 'Hg' → logprob: -3.5423550605773926
    9. 'Hi' → logprob: -3.5423550605773926
    10. 'Ht' → logprob: -4.042355060577393

Token 485: ' board' (ID: 6796)
  Prédit: 'Hb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Hb' → logprob: -1.0739365816116333
    2. 'H' → logprob: -1.5739365816116333
    3. 'board' → logprob: -2.8239364624023438
    4. '   ' → logprob: -2.8239364624023438
    5. 'Hi' → logprob: -2.9489364624023438
    6. 'Hs' → logprob: -3.0739364624023438
    7. 'Hm' → logprob: -3.0739364624023438
    8. 'Ht' → logprob: -3.9489364624023438
    9. 'Hp' → logprob: -3.9489364624023438
    10. 'Hr' → logprob: -4.198936462402344

Token 486: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5702862739562988
    2. 'H' → logprob: -1.9452862739562988
    3. ' H' → logprob: -2.195286273956299
    4. ' Hb' → logprob: -2.445286273956299
    5. 'Hb' → logprob: -2.820286273956299
    6. '(H' → logprob: -4.320286273956299
    7. 'Hs' → logprob: -4.945286273956299
    8. '   ' → logprob: -6.195286273956299
    9. '           ' → logprob: -6.695286273956299
    10. '        ' → logprob: -6.695286273956299

Token 487: '       ' (ID: 309)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6887832880020142
    2. '       ' → logprob: -0.9387832880020142
    3. ' H' → logprob: -2.6887831687927246
    4. 'Hb' → logprob: -4.063783168792725
    5. 'Hr' → logprob: -5.688783168792725
    6. ' Hb' → logprob: -5.813783168792725
    7. ' Hr' → logprob: -6.188783168792725
    8. '   ' → logprob: -6.188783168792725
    9. '(H' → logprob: -7.063783168792725
    10. 'Hx' → logprob: -7.188783168792725

Token 488: ' Hb' (ID: 195354)
  Prédit: 'Hb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hb' (adapté à ' Hb') → logprob: -0.04542731121182442
    2. ' Hb' → logprob: -3.7954273223876953
    3. 'H' → logprob: -4.045427322387695
    4. ' H' → logprob: -7.045427322387695
    5. 'Hr' → logprob: -7.045427322387695
    6. 'Hs' → logprob: -7.295427322387695
    7. 'Hp' → logprob: -7.545427322387695
    8. 'Hm' → logprob: -7.795427322387695
    9. 'Ha' → logprob: -8.045427322387695
    10. 'Ht' → logprob: -8.670427322387695

Token 489: '_,' (ID: 14152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007795536890625954
    2. 'b' → logprob: -4.882795333862305
    3. 'B' → logprob: -10.507795333862305
    4. '2' → logprob: -10.507795333862305
    5. ' ,' → logprob: -10.507795333862305
    6. '_b' → logprob: -10.507795333862305
    7. 'board' → logprob: -10.757795333862305
    8. 'o' → logprob: -11.257795333862305
    9. '_board' → logprob: -11.507795333862305
    10. 'w' → logprob: -12.007795333862305

Token 490: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.20154938101768494
    2. ' W' → logprob: -1.7015494108200073
    3. '	W' → logprob: -9.826549530029297
    4. 'Wd' → logprob: -10.076549530029297
    5. '   ' → logprob: -11.326549530029297
    6. '    ' → logprob: -11.701549530029297
    7. '_W' → logprob: -12.576549530029297
    8. 'Hb' → logprob: -13.201549530029297
    9. ' Wh' → logprob: -13.451549530029297
    10. '  ' → logprob: -13.576549530029297

Token 491: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07442933320999146
    2. '_' → logprob: -2.8244292736053467
    3. ',' → logprob: -5.074429512023926
    4. '_,' → logprob: -5.324429512023926
    5. '=' → logprob: -7.449429512023926
    6. '_b' → logprob: -8.324429512023926
    7. '_=' → logprob: -8.324429512023926
    8. ' =' → logprob: -8.824429512023926
    9. 'board' → logprob: -11.699429512023926
    10. '_board' → logprob: -11.949429512023926

Token 492: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49560460448265076
    2. '=' → logprob: -1.1206046342849731
    3. ' =' → logprob: -2.7456045150756836
    4. ',' → logprob: -8.370604515075684
    5. '_=' → logprob: -8.745604515075684
    6. 'b' → logprob: -10.120604515075684
    7. '   ' → logprob: -10.245604515075684
    8. '_,' → logprob: -11.245604515075684
    9. ' ' → logprob: -11.620604515075684
    10. ')' → logprob: -12.120604515075684

Token 493: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08895047754049301
    2. ' =' → logprob: -2.4639503955841064
    3. ',' → logprob: -11.963950157165527
    4. '   ' → logprob: -12.838950157165527
    5. ' ' → logprob: -14.213950157165527
    6. ')' → logprob: -14.338950157165527
    7. ')=' → logprob: -15.338950157165527
    8. 'b' → logprob: -15.713950157165527
    9. '    ' → logprob: -16.713951110839844
    10. '=

' → logprob: -16.838951110839844

Token 494: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3132641315460205
    2. 'map' → logprob: -1.3132641315460205
    3. '    ' → logprob: -13.563263893127441
    4. '   ' → logprob: -14.188263893127441
    5. ' ' → logprob: -15.063263893127441
    6. '	map' → logprob: -16.938264846801758
    7. '  ' → logprob: -17.188264846801758
    8. 'm' → logprob: -17.813264846801758
    9. '(map' → logprob: -18.438264846801758
    10. '        ' → logprob: -18.563264846801758

Token 495: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00014764121442567557
    2. 'int' → logprob: -8.875147819519043
    3. '=int' → logprob: -12.250147819519043
    4. '(str' → logprob: -13.500147819519043
    5. '[int' → logprob: -13.875147819519043
    6. '(input' → logprob: -15.500147819519043
    7. '<int' → logprob: -16.000146865844727
    8. ' (' → logprob: -16.000146865844727
    9. '(lambda' → logprob: -16.000146865844727
    10. '```' → logprob: -16.875146865844727

Token 496: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.33448857069015503
    2. ',' → logprob: -1.3344886302947998
    3. '(' → logprob: -4.959488391876221
    4. ',input' → logprob: -5.209488391876221
    5. ' (' → logprob: -5.959488391876221
    6. '=input' → logprob: -5.959488391876221
    7. '(int' → logprob: -6.834488391876221
    8. ')' → logprob: -6.834488391876221
    9. 'input' → logprob: -7.584488391876221
    10. '   ' → logprob: -8.334488868713379

Token 497: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06198841333389282
    2. ' input' → logprob: -2.811988353729248
    3. 'int' → logprob: -10.936988830566406
    4. '(input' → logprob: -12.811988830566406
    5. 'map' → logprob: -16.436988830566406
    6. '=input' → logprob: -16.811988830566406
    7. ' int' → logprob: -17.561988830566406
    8. 'str' → logprob: -17.936988830566406
    9. ',input' → logprob: -18.061988830566406
    10. '   ' → logprob: -18.686988830566406

Token 498: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -14.75
    3. ' ().' → logprob: -18.375
    4. '.split' → logprob: -18.625
    5. '()
' → logprob: -19.5
    6. '   ' → logprob: -19.75
    7. '.' → logprob: -20.375
    8. '(' → logprob: -20.75
    9. '().__' → logprob: -22.5
    10. ' .' → logprob: -22.5

Token 499: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. 'strip' → logprob: -15.500000953674316
    3. ' split' → logprob: -15.875000953674316
    4. '(split' → logprob: -16.25
    5. 'rstrip' → logprob: -17.5
    6. 'spl' → logprob: -17.75
    7. '().' → logprob: -18.625
    8. '.split' → logprob: -18.875
    9. ')' → logprob: -19.25
    10. 'skip' → logprob: -19.75

Token 500: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038629011251032352
    2. ')
' → logprob: -5.8788628578186035
    3. '()' → logprob: -7.1288628578186035
    4. '())' → logprob: -8.378863334655762
    5. '()
' → logprob: -11.128863334655762
    6. '())
' → logprob: -12.128863334655762
    7. '   ' → logprob: -12.628863334655762
    8. ')

' → logprob: -14.128863334655762
    9. ')
' → logprob: -14.503863334655762
    10. '(' → logprob: -14.503863334655762

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007925973040983081
    2. '
' → logprob: -8.375792503356934
    3. '	' → logprob: -8.875792503356934
    4. 'board' → logprob: -9.125792503356934
    5. '<|end|>' → logprob: -9.250792503356934
    6. '        
' → logprob: -9.625792503356934
    7. '   ' → logprob: -10.125792503356934
    8. '	board' → logprob: -10.125792503356934
    9. '(board' → logprob: -11.000792503356934
    10. '           ' → logprob: -11.875792503356934

Token 502: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.009656929410994053
    2. '       ' → logprob: -5.13465690612793
    3. ' board' → logprob: -5.63465690612793
    4. '	board' → logprob: -10.13465690612793
    5. '_board' → logprob: -10.25965690612793
    6. 'block' → logprob: -11.00965690612793
    7. '(board' → logprob: -11.38465690612793
    8. 'b' → logprob: -11.63465690612793
    9. 'Board' → logprob: -11.88465690612793
    10. '   ' → logprob: -12.25965690612793

Token 503: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02054912969470024
    2. '=' → logprob: -3.8955490589141846
    3. '   ' → logprob: -13.020548820495605
    4. '       ' → logprob: -13.145548820495605
    5. 's' → logprob: -14.270548820495605
    6. '_' → logprob: -14.395548820495605
    7. ' ' → logprob: -14.770548820495605
    8. '        ' → logprob: -15.020548820495605
    9. '=[]' → logprob: -15.270548820495605
    10. '    ' → logprob: -15.395548820495605

Token 504: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.018413888290524483
    2. '[' → logprob: -4.01841402053833
    3. ' [' → logprob: -8.268413543701172
    4. '[int' → logprob: -12.143413543701172
    5. '['' → logprob: -14.268413543701172
    6. '[in' → logprob: -14.393413543701172
    7. '[array' → logprob: -15.893413543701172
    8. '[ind' → logprob: -16.018413543701172
    9. '[item' → logprob: -16.018413543701172
    10. '[i' → logprob: -16.143413543701172

Token 505: 'list' (ID: 2641)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -4.036524842376821e-05
    2. ' input' → logprob: -10.125040054321289
    3. '(input' → logprob: -15.750040054321289
    4. '<input' → logprob: -17.37504005432129
    5. 'list' → logprob: -17.62504005432129
    6. '[input' → logprob: -17.75004005432129
    7. '	input' → logprob: -18.62504005432129
    8. '   ' → logprob: -18.62504005432129
    9. 'rstrip' → logprob: -18.62504005432129
    10. '.input' → logprob: -18.87504005432129

Token 506: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0015043864259496331
    2. 'input' → logprob: -6.501504421234131
    3. '(map' → logprob: -13.501503944396973
    4. '(' → logprob: -14.626503944396973
    5. ' input' → logprob: -17.25150489807129
    6. '('.' → logprob: -17.37650489807129
    7. '[input' → logprob: -17.37650489807129
    8. '=input' → logprob: -17.75150489807129
    9. '<input' → logprob: -17.87650489807129
    10. ',input' → logprob: -18.12650489807129

Token 507: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.372294698550832e-06
    2. '())' → logprob: -12.375009536743164
    3. '()' → logprob: -12.500009536743164
    4. '.rstrip' → logprob: -15.000009536743164
    5. ' ().' → logprob: -15.125009536743164
    6. 'rstrip' → logprob: -15.500009536743164
    7. '.readline' → logprob: -15.625009536743164
    8. '()
' → logprob: -16.000009536743164
    9. '(' → logprob: -16.125009536743164
    10. '   ' → logprob: -16.250009536743164

Token 508: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -1.27099974633893e-05
    2. 'strip' → logprob: -11.375012397766113
    3. '.rstrip' → logprob: -14.375012397766113
    4. 'r' → logprob: -14.750012397766113
    5. 'read' → logprob: -15.750012397766113
    6. '().' → logprob: -16.37501335144043
    7. '   ' → logprob: -19.50001335144043
    8. ')' → logprob: -19.62501335144043
    9. '()' → logprob: -20.00001335144043
    10. 'decode' → logprob: -20.25001335144043

Token 509: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -3.440506407059729e-05
    2. '())' → logprob: -11.12503433227539
    3. '()' → logprob: -11.75003433227539
    4. ''\' → logprob: -11.75003433227539
    5. '())
' → logprob: -13.25003433227539
    6. '()\' → logprob: -14.25003433227539
    7. '()
' → logprob: -14.50003433227539
    8. '("\' → logprob: -14.75003433227539
    9. '='\' → logprob: -15.37503433227539
    10. '(' → logprob: -16.25003433227539

Token 510: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6933026313781738
    2. '\n' → logprob: -0.6933026313781738
    3. ''\' → logprob: -8.943302154541016
    4. ''n' → logprob: -10.693302154541016
    5. '('\' → logprob: -13.443302154541016
    6. '
' → logprob: -14.693302154541016
    7. '_n' → logprob: -16.318302154541016
    8. '(n' → logprob: -16.818302154541016
    9. '')' → logprob: -16.818302154541016
    10. '\u' → logprob: -16.943302154541016

Token 511: ''))' (ID: 7974)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4583185315132141
    2. '())' → logprob: -1.8333184719085693
    3. ')]' → logprob: -2.3333184719085693
    4. '')' → logprob: -2.7083184719085693
    5. '')]' → logprob: -3.4583184719085693
    6. '))' → logprob: -4.583318710327148
    7. '()' → logprob: -6.583318710327148
    8. ''))' → logprob: -8.083318710327148
    9. '])' → logprob: -8.708318710327148
    10. '()))' → logprob: -8.708318710327148

Token 512: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4858003556728363
    2. 'for' → logprob: -0.9858003854751587
    3. '()' → logprob: -5.235800266265869
    4. ')' → logprob: -5.610800266265869
    5. '       ' → logprob: -6.110800266265869
    6. '   ' → logprob: -9.110800743103027
    7. ']' → logprob: -9.485800743103027
    8. '           ' → logprob: -9.735800743103027
    9. '	for' → logprob: -9.735800743103027
    10. '(H' → logprob: -9.735800743103027

Token 513: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.43309643864631653
    2. 'range' → logprob: -1.4330964088439941
    3. '_' → logprob: -2.183096408843994
    4. ' in' → logprob: -8.933096885681152
    5. '(range' → logprob: -10.308096885681152
    6. 'in' → logprob: -10.433096885681152
    7. ' _' → logprob: -10.808096885681152
    8. '_range' → logprob: -11.808096885681152
    9. '   ' → logprob: -12.058096885681152
    10. '__' → logprob: -12.683096885681152

Token 514: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008375093340873718
    2. 'in' → logprob: -5.50837516784668
    3. ' range' → logprob: -5.88337516784668
    4. 'range' → logprob: -6.50837516784668
    5. '(range' → logprob: -12.25837516784668
    6. '_' → logprob: -12.63337516784668
    7. '(' → logprob: -13.38337516784668
    8. ')' → logprob: -14.50837516784668
    9. ' (' → logprob: -15.00837516784668
    10. '_range' → logprob: -16.00837516784668

Token 515: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759400725364685
    2. ' range' → logprob: -0.8259400725364685
    3. '(range' → logprob: -14.575940132141113
    4. 'Range' → logprob: -17.075939178466797
    5. '	range' → logprob: -17.575939178466797
    6. '[' → logprob: -17.825939178466797
    7. '   ' → logprob: -17.825939178466797
    8. 'H' → logprob: -18.325939178466797
    9. '_range' → logprob: -18.575939178466797
    10. ' ' → logprob: -18.950939178466797

Token 516: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.43048498034477234
    2. 'Hb' → logprob: -1.0554850101470947
    3. ' Hb' → logprob: -6.555484771728516
    4. 'H' → logprob: -8.180484771728516
    5. '(W' → logprob: -10.930484771728516
    6. 'W' → logprob: -10.930484771728516
    7. '   ' → logprob: -11.430484771728516
    8. ' (' → logprob: -11.680484771728516
    9. '(' → logprob: -11.805484771728516
    10. 'Hm' → logprob: -12.930484771728516

Token 517: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.42914995551109314
    2. '_' → logprob: -1.1791499853134155
    3. '_)' → logprob: -3.304149866104126
    4. '_b' → logprob: -6.179150104522705
    5. 'Hb' → logprob: -6.429150104522705
    6. 'B' → logprob: -7.804150104522705
    7. ')' → logprob: -9.054149627685547
    8. '_]' → logprob: -9.304149627685547
    9. '])' → logprob: -9.429149627685547
    10. 'Bb' → logprob: -10.429149627685547

Token 518: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16114382445812225
    2. ')]' → logprob: -1.9111437797546387
    3. '_)' → logprob: -7.161143779754639
    4. '')]' → logprob: -10.161144256591797
    5. '_]' → logprob: -10.536144256591797
    6. ')]
' → logprob: -10.661144256591797
    7. ')])' → logprob: -11.286144256591797
    8. ')' → logprob: -11.661144256591797
    9. '])]' → logprob: -12.161144256591797
    10. ')][' → logprob: -12.536144256591797

Token 519: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.288163083605468e-05
    2. ']' → logprob: -10.375052452087402
    3. '       ' → logprob: -11.250052452087402
    4. ')]
' → logprob: -12.125052452087402
    5. ')' → logprob: -13.625052452087402
    6. '])' → logprob: -14.750052452087402
    7. '   ' → logprob: -14.875052452087402
    8. '])]' → logprob: -15.125052452087402
    9. '')]' → logprob: -15.500052452087402
    10. '>]' → logprob: -16.12505340576172

Token 520: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03812938928604126
    2. '       ' → logprob: -3.9131293296813965
    3. '<|end|>' → logprob: -4.1631293296813965
    4. '

' → logprob: -7.5381293296813965
    5. '<|end|>' → logprob: -8.038129806518555
    6. '        
' → logprob: -8.038129806518555
    7. '   ' → logprob: -8.288129806518555
    8. '    
' → logprob: -8.538129806518555
    9. '
' → logprob: -9.788129806518555
    10. '```' → logprob: -10.288129806518555

Token 521: ' board' (ID: 6796)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14674894511699677
    2. '   ' → logprob: -2.6467490196228027
    3. '
' → logprob: -3.7717490196228027
    4. 'score' → logprob: -4.021749019622803
    5. 'for' → logprob: -5.396749019622803
    6. 'found' → logprob: -5.646749019622803
    7. 'empty' → logprob: -5.771749019622803
    8. '#' → logprob: -6.271749019622803
    9. 'count' → logprob: -6.396749019622803
    10. '        
' → logprob: -6.896749019622803

Token 522: '_rows' (ID: 26013)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6328038573265076
    2. '=' → logprob: -1.3828039169311523
    3. '_rows' → logprob: -3.1328039169311523
    4. '_coords' → logprob: -3.1328039169311523
    5. '_height' → logprob: -3.7578039169311523
    6. '_' → logprob: -3.7578039169311523
    7. '_size' → logprob: -3.8828039169311523
    8. '   ' → logprob: -4.382803916931152
    9. ':' → logprob: -4.882803916931152
    10. ')' → logprob: -5.132803916931152

Token 523: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4030352532863617
    2. ' =' → logprob: -1.153035283088684
    3. ',' → logprob: -4.1530351638793945
    4. ')' → logprob: -9.028035163879395
    5. '   ' → logprob: -9.778035163879395
    6. ' ,' → logprob: -10.028035163879395
    7. '<|end|>' → logprob: -10.403035163879395
    8. '    ' → logprob: -10.903035163879395
    9. '=len' → logprob: -11.653035163879395
    10. '.' → logprob: -11.903035163879395

Token 524: ' Hb' (ID: 195354)
  Prédit: 'Hb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hb' → logprob: -0.11732339859008789
    2. 'len' → logprob: -2.867323398590088
    3. ' Hb' → logprob: -2.992323398590088
    4. ' len' → logprob: -5.617323398590088
    5. 'Hp' → logprob: -11.74232292175293
    6. 'H' → logprob: -12.11732292175293
    7. 'Hd' → logprob: -12.24232292175293
    8. 'Hg' → logprob: -12.36732292175293
    9. '   ' → logprob: -12.49232292175293
    10. 'HB' → logprob: -12.86732292175293

Token 525: '_
' (ID: 27437)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0001769616355886683
    2. '_
' → logprob: -8.750177383422852
    3. '_

' → logprob: -11.250177383422852
    4. '_
' → logprob: -12.250177383422852
    5. '_,' → logprob: -15.500177383422852
    6. '_=' → logprob: -15.875177383422852
    7. '_]' → logprob: -16.37517738342285
    8. '_\' → logprob: -16.62517738342285
    9. '_)' → logprob: -17.37517738342285
    10. '_,
' → logprob: -17.62517738342285

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007993417792022228
    2. ',' → logprob: -5.132993221282959
    3. '<|end|>' → logprob: -6.632993221282959
    4. '   ' → logprob: -8.757993698120117
    5. 'board' → logprob: -9.382993698120117
    6. '
' → logprob: -9.382993698120117
    7. ',
' → logprob: -9.507993698120117
    8. '<|end|>' → logprob: -9.632993698120117
    9. '_board' → logprob: -9.757993698120117
    10. '      ' → logprob: -10.132993698120117

Token 527: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.0009517176658846438
    2. ' board' → logprob: -7.000951766967773
    3. '       ' → logprob: -11.000951766967773
    4. '   ' → logprob: -11.625951766967773
    5. '	board' → logprob: -12.375951766967773
    6. '
' → logprob: -13.125951766967773
    7. 'block' → logprob: -13.125951766967773
    8. 'b' → logprob: -13.500951766967773
    9. '(board' → logprob: -13.625951766967773
    10. ' ' → logprob: -14.000951766967773

Token 528: '_cols' (ID: 60927)
  Prédit: '_cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cols' → logprob: -0.010427123866975307
    2. '_' → logprob: -4.635426998138428
    3. '_columns' → logprob: -8.010427474975586
    4. 'cols' → logprob: -9.260427474975586
    5. '_width' → logprob: -9.760427474975586
    6. '_col' → logprob: -10.635427474975586
    7. '=' → logprob: -10.760427474975586
    8. '   ' → logprob: -11.010427474975586
    9. '_len' → logprob: -11.135427474975586
    10. ' =' → logprob: -11.260427474975586

Token 529: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4744550585746765
    2. ' =' → logprob: -0.9744550585746765
    3. ',' → logprob: -8.599454879760742
    4. '<|end|>' → logprob: -8.974454879760742
    5. '=len' → logprob: -10.849454879760742
    6. ' ' → logprob: -11.474454879760742
    7. '<|end|>' → logprob: -11.724454879760742
    8. ')' → logprob: -12.099454879760742
    9. '   ' → logprob: -12.224454879760742
    10. '       ' → logprob: -12.724454879760742

Token 530: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.001965270144864917
    2. ' W' → logprob: -6.251965045928955
    3. 'len' → logprob: -10.251965522766113
    4. '   ' → logprob: -14.626965522766113
    5. ' len' → logprob: -15.751965522766113
    6. ' ' → logprob: -15.876965522766113
    7. '  ' → logprob: -16.126964569091797
    8. '	W' → logprob: -16.126964569091797
    9. '    ' → logprob: -16.626964569091797
    10. 'int' → logprob: -16.876964569091797

Token 531: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.941850526549388e-06
    2. '_' → logprob: -11.875007629394531
    3. '-' → logprob: -15.375007629394531
    4. '_b' → logprob: -16.12500762939453
    5. ' ' → logprob: -16.25000762939453
    6. '   ' → logprob: -16.25000762939453
    7. '```' → logprob: -16.87500762939453
    8. 'c' → logprob: -17.12500762939453
    9. ' b' → logprob: -17.25000762939453
    10. 'd' → logprob: -17.25000762939453

Token 532: '_

' (ID: 44557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.704273118884885e-07
    2. '_
' → logprob: -15.125000953674316
    3. '_

' → logprob: -16.25
    4. '_
' → logprob: -16.25
    5. '_)' → logprob: -17.5
    6. '_=' → logprob: -17.5
    7. '_]' → logprob: -17.5
    8. '_^(' → logprob: -19.375
    9. '_,' → logprob: -19.5
    10. '__' → logprob: -20.25

Token 533: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.516431987285614
    2. '
' → logprob: -1.6414320468902588
    3. '<|end|>' → logprob: -1.6414320468902588
    4. '   ' → logprob: -5.14143180847168
    5. '<|end|>' → logprob: -5.51643180847168
    6. '        
' → logprob: -5.64143180847168
    7. '    
' → logprob: -6.89143180847168
    8. '

' → logprob: -8.64143180847168
    9. '  
' → logprob: -9.14143180847168
    10. 'for' → logprob: -9.14143180847168

Token 534: ' def' (ID: 1056)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2350373268127441
    2. '       ' → logprob: -2.110037326812744
    3. 'found' → logprob: -2.110037326812744
    4. 'score' → logprob: -2.485037326812744
    5. 'result' → logprob: -2.735037326812744
    6. 'placed' → logprob: -2.860037326812744
    7. 'for' → logprob: -2.985037326812744
    8. 'def' (adapté à ' def') → logprob: -3.110037326812744
    9. '   ' → logprob: -3.110037326812744
    10. 'answer' → logprob: -3.610037326812744

Token 535: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.26237624883651733
    2. 'can' → logprob: -2.262376308441162
    3. ' place' → logprob: -2.887376308441162
    4. ' find' → logprob: -3.512376308441162
    5. ' valid' → logprob: -3.762376308441162
    6. 'place' → logprob: -5.012376308441162
    7. 'valid' → logprob: -5.887376308441162
    8. ' check' → logprob: -6.512376308441162
    9. ' try' → logprob: -6.637376308441162
    10. ' is' → logprob: -7.012376308441162

Token 536: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -0.0008440529345534742
    2. '_' → logprob: -8.00084400177002
    3. '_put' → logprob: -8.00084400177002
    4. '_fit' → logprob: -9.00084400177002
    5. '_attach' → logprob: -11.37584400177002
    6. '_fill' → logprob: -11.50084400177002
    7. '_insert' → logprob: -11.75084400177002
    8. ' place' → logprob: -12.50084400177002
    9. 'Place' → logprob: -12.62584400177002
    10. 'place' → logprob: -12.87584400177002

Token 537: '(r' (ID: 4729)
  Prédit: '(shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(shape' → logprob: -0.2217610478401184
    2. '(block' → logprob: -1.8467609882354736
    3. '(' → logprob: -3.2217609882354736
    4. '(board' → logprob: -7.846761226654053
    5. ' (' → logprob: -8.471760749816895
    6. '(row' → logprob: -8.721760749816895
    7. '(tile' → logprob: -8.846760749816895
    8. '(token' → logprob: -9.721760749816895
    9. '(layer' → logprob: -10.221760749816895
    10. '(position' → logprob: -10.471760749816895

Token 538: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016187099739909172
    2. ' ,' → logprob: -4.3911871910095215
    3. ',r' → logprob: -5.7661871910095215
    4. ',p' → logprob: -9.141186714172363
    5. ',row' → logprob: -9.391186714172363
    6. ',i' → logprob: -10.141186714172363
    7. ')' → logprob: -10.266186714172363
    8. '   ' → logprob: -10.391186714172363
    9. ',pos' → logprob: -10.391186714172363
    10. ',c' → logprob: -10.641186714172363

Token 539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00806590635329485
    2. ' ,' → logprob: -5.008065700531006
    3. ',r' → logprob: -6.633065700531006
    4. '   ' → logprob: -11.258066177368164
    5. ',
' → logprob: -11.633066177368164
    6. '       ' → logprob: -12.883066177368164
    7. ',p' → logprob: -13.633066177368164
    8. ',row' → logprob: -13.883066177368164
    9. ',k' → logprob: -14.508066177368164
    10. ' ' → logprob: -14.758066177368164

Token 540: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026312140747904778
    2. 'shape' → logprob: -4.401312351226807
    3. ' c' → logprob: -4.526312351226807
    4. 'block' → logprob: -6.901312351226807
    5. ' shape' → logprob: -7.151312351226807
    6. 'w' → logprob: -7.526312351226807
    7. '   ' → logprob: -8.776311874389648
    8. 'base' → logprob: -9.401311874389648
    9. 'b' → logprob: -9.401311874389648
    10. 'variant' → logprob: -10.026311874389648

Token 541: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09523407369852066
    2. '0' → logprob: -2.4702341556549072
    3. ' ,' → logprob: -5.220233917236328
    4. '_,' → logprob: -8.470233917236328
    5. ',r' → logprob: -9.095233917236328
    6. '   ' → logprob: -9.095233917236328
    7. '       ' → logprob: -9.345233917236328
    8. ',
' → logprob: -9.720233917236328
    9. ')' → logprob: -9.720233917236328
    10. ' ' → logprob: -10.345233917236328

Token 542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.114600834436715e-05
    2. ' ,' → logprob: -9.375091552734375
    3. '   ' → logprob: -13.250091552734375
    4. ',r' → logprob: -13.375091552734375
    5. '       ' → logprob: -13.750091552734375
    6. '):' → logprob: -14.000091552734375
    7. ',row' → logprob: -15.750091552734375
    8. '           ' → logprob: -15.750091552734375
    9. ',
' → logprob: -16.125091552734375
    10. ',b' → logprob: -16.250091552734375

Token 543: ' variant' (ID: 16914)
  Prédit: 'variant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variant' → logprob: -0.45355215668678284
    2. 'shape' → logprob: -1.0785521268844604
    3. 'block' → logprob: -4.07855224609375
    4. ' variant' → logprob: -5.20355224609375
    5. ' shape' → logprob: -6.32855224609375
    6. ' block' → logprob: -9.20355224609375
    7. 'var' → logprob: -9.32855224609375
    8. '   ' → logprob: -9.70355224609375
    9. 'pattern' → logprob: -10.70355224609375
    10. 'piece' → logprob: -10.82855224609375

Token 544: '_coords' (ID: 77948)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31539997458457947
    2. '):
' → logprob: -1.3154000043869019
    3. ',' → logprob: -6.190400123596191
    4. ')' → logprob: -10.190400123596191
    5. '):

' → logprob: -11.065400123596191
    6. '   ' → logprob: -11.315400123596191
    7. '):
' → logprob: -11.815400123596191
    8. ' ):' → logprob: -11.940400123596191
    9. '       ' → logprob: -12.565400123596191
    10. ' ,' → logprob: -14.315400123596191

Token 545: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19698582589626312
    2. '):
' → logprob: -2.1969857215881348
    3. ',' → logprob: -2.6969857215881348
    4. '   ' → logprob: -9.196986198425293
    5. ')' → logprob: -10.196986198425293
    6. ' ):' → logprob: -10.321986198425293
    7. ' ,' → logprob: -10.696986198425293
    8. '       ' → logprob: -11.071986198425293
    9. '):
' → logprob: -11.196986198425293
    10. '):

' → logprob: -11.821986198425293

Token 546: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28203797340393066
    2. '(' → logprob: -2.1570379734039307
    3. '           ' → logprob: -2.5320379734039307
    4. '        ' → logprob: -4.157037734985352
    5. ':' → logprob: -4.407037734985352
    6. '   ' → logprob: -5.657037734985352
    7. ' (' → logprob: -5.657037734985352
    8. ':
' → logprob: -6.532037734985352
    9. '(space' → logprob: -6.532037734985352
    10. '(n' → logprob: -6.657037734985352

Token 547: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062288977205753326
    2. ' for' → logprob: -3.437288999557495
    3. ' 
' → logprob: -4.062288761138916
    4. ' if' → logprob: -5.312288761138916
    5. '   ' → logprob: -6.437288761138916
    6. '           ' → logprob: -7.062288761138916
    7. '        
' → logprob: -7.437288761138916
    8. '    
' → logprob: -7.437288761138916
    9. '               ' → logprob: -7.812288761138916
    10. ' return' → logprob: -7.937288761138916

Token 548: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.270143985748291
    2. ' for' → logprob: -2.020143985748291
    3. '       ' → logprob: -2.270143985748291
    4. '   ' → logprob: -7.645143985748291
    5. 'if' → logprob: -8.395143508911133
    6. '           ' → logprob: -10.020143508911133
    7. ' if' → logprob: -10.395143508911133
    8. 'return' → logprob: -12.020143508911133
    9. '	for' → logprob: -12.395143508911133
    10. '               ' → logprob: -12.770143508911133

Token 549: ' if' (ID: 538)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -1.4300739765167236
    2. ' board' → logprob: -1.4300739765167236
    3. ' if' → logprob: -1.6800739765167236
    4. ' r' → logprob: -1.6800739765167236
    5. '   ' → logprob: -2.8050739765167236
    6. '    ' → logprob: -3.6800739765167236
    7. ' (' → logprob: -3.9300739765167236
    8. 'r' → logprob: -4.3050737380981445
    9. ' all' → logprob: -4.6800737380981445
    10. '(board' → logprob: -5.3050737380981445

Token 550: ' block' (ID: 4355)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3606502413749695
    2. '0' → logprob: -1.4856503009796143
    3. ' r' → logprob: -3.3606503009796143
    4. 'board' → logprob: -3.9856503009796143
    5. '   ' → logprob: -4.610650062561035
    6. '(r' → logprob: -5.360650062561035
    7. ' ' → logprob: -5.485650062561035
    8. ' (' → logprob: -6.235650062561035
    9. ' board' → logprob: -6.985650062561035
    10. '(' → logprob: -7.110650062561035

Token 551: ' can' (ID: 665)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.08649294078350067
    2. ' can' → logprob: -2.9614930152893066
    3. 'can' → logprob: -4.461493015289307
    4. '   ' → logprob: -4.961493015289307
    5. '(r' → logprob: -5.461493015289307
    6. '           ' → logprob: -5.836493015289307
    7. '_can' → logprob: -6.711493015289307
    8. '       ' → logprob: -6.961493015289307
    9. '[' → logprob: -7.711493015289307
    10. ')' → logprob: -7.711493015289307

Token 552: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.11312032490968704
    2. 'be' → logprob: -2.2381203174591064
    3. '   ' → logprob: -9.363120079040527
    4. ')' → logprob: -9.863120079040527
    5. '_be' → logprob: -9.863120079040527
    6. '```' → logprob: -10.488120079040527
    7. 'placed' → logprob: -10.863120079040527
    8. 'fit' → logprob: -11.238120079040527
    9. ' placed' → logprob: -11.863120079040527
    10. ' fit' → logprob: -12.113120079040527

Token 553: ' placed' (ID: 12989)
  Prédit: 'placed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placed' → logprob: -0.0015059324214234948
    2. ' placed' → logprob: -6.5015058517456055
    3. '```' → logprob: -13.251505851745605
    4. '   ' → logprob: -13.876505851745605
    5. '           ' → logprob: -14.751505851745605
    6. '       ' → logprob: -15.751505851745605
    7. 'place' → logprob: -16.126506805419922
    8. 'put' → logprob: -16.626506805419922
    9. 'Placed' → logprob: -17.001506805419922
    10. ' ' → logprob: -17.501506805419922

Token 554: ' at' (ID: 540)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.39580243825912476
    2. ' at' → logprob: -1.6458024978637695
    3. ' without' → logprob: -3.3958024978637695
    4. ' (' → logprob: -3.5208024978637695
    5. 'at' → logprob: -3.6458024978637695
    6. '(' → logprob: -4.1458024978637695
    7. 'without' → logprob: -4.1458024978637695
    8. '   ' → logprob: -5.5208024978637695
    9. '(i' → logprob: -5.6458024978637695
    10. ' ' → logprob: -6.7708024978637695

Token 555: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.5996394753456116
    2. ' (' → logprob: -0.8496394753456116
    3. 'r' → logprob: -4.349639415740967
    4. ' r' → logprob: -4.599639415740967
    5. '(' → logprob: -8.224639892578125
    6. ')' → logprob: -8.724639892578125
    7. ' ' → logprob: -12.099639892578125
    8. '   ' → logprob: -12.349639892578125
    9. ' )' → logprob: -12.724639892578125
    10. '(
' → logprob: -12.724639892578125

Token 556: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07896767556667328
    2. ' r' → logprob: -2.578967571258545
    3. ')' → logprob: -9.578968048095703
    4. ',' → logprob: -12.453968048095703
    5. ' )' → logprob: -13.578968048095703
    6. '               ' → logprob: -14.078968048095703
    7. ' (' → logprob: -14.203968048095703
    8. ' ' → logprob: -14.953968048095703
    9. '           ' → logprob: -15.078968048095703
    10. '   ' → logprob: -15.203968048095703

Token 557: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008240377064794302
    2. ',' → logprob: -7.125823974609375
    3. '   ' → logprob: -12.125823974609375
    4. ' ,' → logprob: -12.375823974609375
    5. '_' → logprob: -12.875823974609375
    6. ' ' → logprob: -13.250823974609375
    7. ',
' → logprob: -13.750823974609375
    8. '_,' → logprob: -14.000823974609375
    9. '       ' → logprob: -14.250823974609375
    10. ')' → logprob: -14.500823974609375

Token 558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00385387078858912
    2. ' ,' → logprob: -6.003853797912598
    3. '+' → logprob: -7.628853797912598
    4. ' +' → logprob: -7.753853797912598
    5. ',c' → logprob: -8.128853797912598
    6. '   ' → logprob: -9.128853797912598
    7. ',
' → logprob: -11.378853797912598
    8. '       ' → logprob: -11.378853797912598
    9. ',r' → logprob: -11.628853797912598
    10. '+,' → logprob: -11.628853797912598

Token 559: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10025304555892944
    2. ' c' → logprob: -2.350253105163574
    3. ',' → logprob: -10.225253105163574
    4. ',c' → logprob: -11.600253105163574
    5. ' ' → logprob: -14.350253105163574
    6. '	c' → logprob: -15.350253105163574
    7. ')c' → logprob: -16.975252151489258
    8. '
' → logprob: -17.350252151489258
    9. ' ' → logprob: -17.600252151489258
    10. '   ' → logprob: -17.725252151489258

Token 560: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06992320716381073
    2. ',' → logprob: -2.819923162460327
    3. ')' → logprob: -5.944923400878906
    4. '   ' → logprob: -6.069923400878906
    5. '_' → logprob: -7.444923400878906
    6. ',c' → logprob: -7.569923400878906
    7. ' ,' → logprob: -7.819923400878906
    8. ' ' → logprob: -7.944923400878906
    9. '    ' → logprob: -8.444923400878906
    10. 'c' → logprob: -8.819923400878906

Token 561: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001871997956186533
    2. '):
' → logprob: -7.2518720626831055
    3. '):' → logprob: -7.3768720626831055
    4. ' )' → logprob: -8.251872062683105
    5. ',' → logprob: -9.376872062683105
    6. ' without' → logprob: -9.876872062683105
    7. 'without' → logprob: -10.626872062683105
    8. '   ' → logprob: -10.751872062683105
    9. '       ' → logprob: -10.876872062683105
    10. '           ' → logprob: -10.876872062683105

Token 562: ' on' (ID: 402)
  Prédit: ' without'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' without' → logprob: -0.5480374097824097
    2. ' and' → logprob: -2.173037528991699
    3. '           ' → logprob: -2.298037528991699
    4. 'without' → logprob: -2.298037528991699
    5. '       ' → logprob: -3.673037528991699
    6. 'and' → logprob: -4.298037528991699
    7. ' with' → logprob: -4.548037528991699
    8. 'with' → logprob: -4.673037528991699
    9. '               ' → logprob: -4.798037528991699
    10. '   ' → logprob: -4.923037528991699

Token 563: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.10047666728496552
    2. ' board' → logprob: -2.3504767417907715
    3. ' the' → logprob: -8.600476264953613
    4. 'the' → logprob: -9.725476264953613
    5. '	board' → logprob: -11.600476264953613
    6. '(board' → logprob: -11.850476264953613
    7. '   ' → logprob: -11.975476264953613
    8. ')' → logprob: -13.850476264953613
    9. ' ' → logprob: -14.100476264953613
    10. '.board' → logprob: -14.350476264953613

Token 564: ' without' (ID: 2935)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7000877261161804
    2. '   ' → logprob: -1.2000877857208252
    3. '       ' → logprob: -2.700087785720825
    4. ':
' → logprob: -3.075087785720825
    5. ' without' → logprob: -3.450087785720825
    6. '           ' → logprob: -4.200087547302246
    7. ' and' → logprob: -4.325087547302246
    8. '):' → logprob: -4.825087547302246
    9. '<|end|>' → logprob: -5.575087547302246
    10. '):
' → logprob: -5.825087547302246

Token 565: ' collision' (ID: 34967)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.09062183648347855
    2. ' overlapping' → logprob: -3.4656219482421875
    3. ' overlap' → logprob: -3.7156219482421875
    4. '   ' → logprob: -5.0906219482421875
    5. 'collision' → logprob: -5.4656219482421875
    6. ' conflicts' → logprob: -5.7156219482421875
    7. ' going' → logprob: -6.2156219482421875
    8. 'conf' → logprob: -6.2156219482421875
    9. 'out' → logprob: -6.3406219482421875
    10. ' overlaps' → logprob: -6.4656219482421875

Token 566: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.110913634300232
    2. ' and' → logprob: -1.735913634300232
    3. '   ' → logprob: -1.860913634300232
    4. ':' → logprob: -2.4859137535095215
    5. '       ' → logprob: -2.8609137535095215
    6. ')' → logprob: -3.3609137535095215
    7. '               ' → logprob: -3.4859137535095215
    8. '(' → logprob: -3.4859137535095215
    9. ':
' → logprob: -3.8609137535095215
    10. '(r' → logprob: -4.3609137535095215

Token 567: ' inside' (ID: 6772)
  Prédit: ' out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' out' → logprob: -1.114424705505371
    2. ' going' → logprob: -1.614424705505371
    3. 'out' → logprob: -1.739424705505371
    4. ' overlap' → logprob: -2.114424705505371
    5. ' overlapping' → logprob: -2.489424705505371
    6. 'over' → logprob: -3.239424705505371
    7. '   ' → logprob: -3.864424705505371
    8. ' over' → logprob: -5.239424705505371
    9. 'return' → logprob: -5.489424705505371
    10. ' touching' → logprob: -5.739424705505371

Token 568: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.11714930832386017
    2. 'the' → logprob: -2.4921493530273438
    3. ')' → logprob: -4.367149353027344
    4. ' )' → logprob: -5.617149353027344
    5. 'bounds' → logprob: -5.617149353027344
    6. 'r' → logprob: -5.992149353027344
    7. 'board' → logprob: -6.117149353027344
    8. ' bounds' → logprob: -6.617149353027344
    9. '   ' → logprob: -8.117149353027344
    10. ' (' → logprob: -8.242149353027344

Token 569: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.1712425798177719
    2. ' board' → logprob: -2.1712424755096436
    3. 'bounds' → logprob: -4.296242713928223
    4. ')' → logprob: -4.546242713928223
    5. ' bounds' → logprob: -4.921242713928223
    6. ' boundaries' → logprob: -5.046242713928223
    7. 'bound' → logprob: -7.171242713928223
    8. ')
' → logprob: -7.171242713928223
    9. ' )' → logprob: -7.296242713928223
    10. '   ' → logprob: -7.546242713928223

Token 570: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.199826717376709
    2. ':' → logprob: -1.449826717376709
    3. ':
' → logprob: -2.324826717376709
    4. '):' → logprob: -2.574826717376709
    5. '):
' → logprob: -2.699826717376709
    6. ')' → logprob: -2.949826717376709
    7. '(r' → logprob: -3.074826717376709
    8. '       ' → logprob: -3.199826717376709
    9. '(' → logprob: -3.574826717376709
    10. '           ' → logprob: -4.074826717376709

Token 571: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7991806268692017
    2. '       ' → logprob: -1.6741806268692017
    3. ':' → logprob: -2.299180507659912
    4. '           ' → logprob: -2.424180507659912
    5. '(' → logprob: -2.549180507659912
    6. ':
' → logprob: -3.674180507659912
    7. '(r' → logprob: -4.049180507659912
    8. '               ' → logprob: -4.299180507659912
    9. ' (' → logprob: -5.049180507659912
    10. ' and' → logprob: -5.549180507659912

Token 572: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9582858681678772
    2. ' 
' → logprob: -1.3332858085632324
    3. ' ' → logprob: -1.8332858085632324
    4. ' if' → logprob: -2.9582858085632324
    5. '   ' → logprob: -3.0832858085632324
    6. ' for' → logprob: -4.083285808563232
    7. ' i' → logprob: -4.333285808563232
    8. 'i' → logprob: -4.833285808563232
    9. '    ' → logprob: -5.208285808563232
    10. '        ' → logprob: -5.583285808563232

Token 573: ' (' (ID: 350)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.4216003119945526
    2. 'r' → logprob: -1.546600341796875
    3. '(r' → logprob: -2.296600341796875
    4. ' dr' → logprob: -3.921600341796875
    5. '(dr' → logprob: -4.796600341796875
    6. ' (' → logprob: -6.421600341796875
    7. '(' → logprob: -8.171600341796875
    8. ' r' → logprob: -8.671600341796875
    9. 'vr' → logprob: -9.421600341796875
    10. '   ' → logprob: -9.671600341796875

Token 574: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3548949658870697
    2. 'dr' → logprob: -1.229894995689392
    3. 'rr' → logprob: -5.354895114898682
    4. ' dr' → logprob: -6.604895114898682
    5. '   ' → logprob: -9.229894638061523
    6. 'pr' → logprob: -9.604894638061523
    7. ' r' → logprob: -9.979894638061523
    8. ')' → logprob: -10.854894638061523
    9. 'sr' → logprob: -10.979894638061523
    10. 'rd' → logprob: -11.604894638061523

Token 575: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36501121520996094
    2. ',' → logprob: -1.240011215209961
    3. '_,' → logprob: -4.490011215209961
    4. ' ,' → logprob: -5.740011215209961
    5. ',r' → logprob: -6.990011215209961
    6. '_' → logprob: -7.990011215209961
    7. ')' → logprob: -8.740011215209961
    8. '_r' → logprob: -8.740011215209961
    9. '),' → logprob: -9.115011215209961
    10. 'r' → logprob: -9.240011215209961

Token 576: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.048734184354543686
    2. ' c' → logprob: -3.048734188079834
    3. ')c' → logprob: -9.048733711242676
    4. ')' → logprob: -11.173733711242676
    5. ',c' → logprob: -12.298733711242676
    6. ',' → logprob: -12.298733711242676
    7. '   ' → logprob: -12.548733711242676
    8. ' ' → logprob: -14.298733711242676
    9. '	c' → logprob: -14.798733711242676
    10. '  ' → logprob: -15.173733711242676

Token 577: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002975679701194167
    2. '),' → logprob: -6.3779754638671875
    3. '           ' → logprob: -7.3779754638671875
    4. ' )' → logprob: -8.752975463867188
    5. ')
' → logprob: -9.502975463867188
    6. ')+' → logprob: -9.627975463867188
    7. '            ' → logprob: -9.877975463867188
    8. '               ' → logprob: -9.877975463867188
    9. '0' → logprob: -10.127975463867188
    10. '        ' → logprob: -10.627975463867188

Token 578: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2623341679573059
    2. ' in' → logprob: -1.7623341083526611
    3. ',' → logprob: -3.887334108352661
    4. '           ' → logprob: -4.26233434677124
    5. '               ' → logprob: -4.88733434677124
    6. '),' → logprob: -5.51233434677124
    7. '):
' → logprob: -5.88733434677124
    8. 'in' → logprob: -5.88733434677124
    9. '<|end|>' → logprob: -6.51233434677124
    10. '        ' → logprob: -7.26233434677124

Token 579: ' variant' (ID: 16914)
  Prédit: 'variant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variant' → logprob: -0.06245418265461922
    2. ' variant' → logprob: -2.8124542236328125
    3. ')' → logprob: -7.8124542236328125
    4. '   ' → logprob: -10.187454223632812
    5. '(' → logprob: -10.812454223632812
    6. ' ' → logprob: -12.312454223632812
    7. ' (' → logprob: -12.937454223632812
    8. '           ' → logprob: -13.187454223632812
    9. '    ' → logprob: -13.437454223632812
    10. '(r' → logprob: -13.687454223632812

Token 580: '_coords' (ID: 77948)
  Prédit: '_coords'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coords' → logprob: -0.00019066639652010053
    2. '):' → logprob: -9.500190734863281
    3. ')' → logprob: -10.375190734863281
    4. 'coords' → logprob: -11.000190734863281
    5. '(coords' → logprob: -11.000190734863281
    6. '_coordinates' → logprob: -11.125190734863281
    7. ')_' → logprob: -11.625190734863281
    8. 's' → logprob: -12.250190734863281
    9. 'Coords' → logprob: -12.250190734863281
    10. '):
' → logprob: -12.500190734863281

Token 581: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35335054993629456
    2. ':
' → logprob: -1.2283505201339722
    3. '       ' → logprob: -6.353350639343262
    4. '):
' → logprob: -6.853350639343262
    5. '<|end|>' → logprob: -6.978350639343262
    6. ',' → logprob: -8.353350639343262
    7. '):' → logprob: -8.353350639343262
    8. '():
' → logprob: -8.728350639343262
    9. '           ' → logprob: -8.853350639343262
    10. ')' → logprob: -9.353350639343262

Token 582: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7231407165527344
    2. '               ' → logprob: -0.9731407165527344
    3. ',' → logprob: -2.8481407165527344
    4. '<|end|>' → logprob: -3.0981407165527344
    5. '       ' → logprob: -4.473140716552734
    6. ' if' → logprob: -4.723140716552734
    7. '<|end|>' → logprob: -5.598140716552734
    8. '            
' → logprob: -5.598140716552734
    9. ':
' → logprob: -6.848140716552734
    10. '        
' → logprob: -7.098140716552734

Token 583: ' rr' (ID: 54129)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6535764336585999
    2. ' if' → logprob: -0.7785764336585999
    3. 'if' → logprob: -5.028576374053955
    4. '               ' → logprob: -5.028576374053955
    5. ' r' → logprob: -5.653576374053955
    6. '                ' → logprob: -6.903576374053955
    7. '                    ' → logprob: -7.028576374053955
    8. '                       ' → logprob: -7.403576374053955
    9. '           ' → logprob: -7.528576374053955
    10. 'r' → logprob: -8.653576850891113

Token 584: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4350409209728241
    2. ' =' → logprob: -1.0600409507751465
    3. '+' → logprob: -6.0600409507751465
    4. ',' → logprob: -6.3100409507751465
    5. '0' → logprob: -7.0600409507751465
    6. ' +' → logprob: -7.0600409507751465
    7. '=r' → logprob: -8.435040473937988
    8. ')' → logprob: -9.560040473937988
    9. '               ' → logprob: -10.310040473937988
    10. '+=' → logprob: -10.560040473937988

Token 585: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07888978719711304
    2. ' r' → logprob: -2.578889846801758
    3. '_r' → logprob: -18.078889846801758
    4. '                   ' → logprob: -18.703889846801758
    5. '	r' → logprob: -18.703889846801758
    6. '               ' → logprob: -18.828889846801758
    7. '   ' → logprob: -18.953889846801758
    8. '(r' → logprob: -19.328889846801758
    9. '
' → logprob: -20.203889846801758
    10. ' ' → logprob: -20.203889846801758

Token 586: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025769672356545925
    2. '+' → logprob: -6.25257682800293
    3. ' +' → logprob: -7.37757682800293
    4. '+r' → logprob: -11.00257682800293
    5. 'r' → logprob: -13.12757682800293
    6. ' ' → logprob: -14.00257682800293
    7. '<|end|>' → logprob: -14.00257682800293
    8. '
' → logprob: -14.37757682800293
    9. '+
' → logprob: -15.00257682800293
    10. ' r' → logprob: -15.00257682800293

Token 587: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4782886505126953
    2. ' +' → logprob: -0.9782886505126953
    3. '+r' → logprob: -5.478288650512695
    4. '+c' → logprob: -10.728288650512695
    5. '+
' → logprob: -13.603288650512695
    6. '+t' → logprob: -13.978288650512695
    7. '+i' → logprob: -14.478288650512695
    8. '+s' → logprob: -14.728288650512695
    9. '+k' → logprob: -14.853288650512695
    10. ' +
' → logprob: -15.728288650512695

Token 588: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.6550729419104755e-05
    2. ' r' → logprob: -10.250036239624023
    3. 'rr' → logprob: -15.000036239624023
    4. '(r' → logprob: -15.000036239624023
    5. 'c' → logprob: -15.125036239624023
    6. '1' → logprob: -16.625036239624023
    7. '   ' → logprob: -17.000036239624023
    8. '_r' → logprob: -17.875036239624023
    9. ' ' → logprob: -18.000036239624023
    10. '	r' → logprob: -18.125036239624023

Token 589: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04690443351864815
    2. '<|end|>' → logprob: -3.9219043254852295
    3. '
' → logprob: -4.046904563903809
    4. '           ' → logprob: -5.546904563903809
    5. '                   ' → logprob: -6.546904563903809
    6. ',' → logprob: -7.046904563903809
    7. 'if' → logprob: -8.046904563903809
    8. '                ' → logprob: -8.046904563903809
    9. ',c' → logprob: -8.296904563903809
    10. '       ' → logprob: -8.296904563903809

Token 590: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01008858997374773
    2. ' <' → logprob: -5.2600884437561035
    3. ' >=' → logprob: -5.6350884437561035
    4. '           ' → logprob: -7.5100884437561035
    5. '<' → logprob: -8.135088920593262
    6. '>=' → logprob: -9.010088920593262
    7. '                ' → logprob: -9.510088920593262
    8. '                   ' → logprob: -9.635088920593262
    9. '              ' → logprob: -10.510088920593262
    10. '       ' → logprob: -10.510088920593262

Token 591: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' (adapté à ' cc') → logprob: -0.6673372387886047
    2. 'c' → logprob: -1.04233717918396
    3. '               ' → logprob: -2.66733717918396
    4. ' c' → logprob: -2.91733717918396
    5. ' cc' → logprob: -4.792337417602539
    6. '                ' → logprob: -7.167337417602539
    7. '                   ' → logprob: -7.292337417602539
    8. '                               ' → logprob: -7.667337417602539
    9. ' ' → logprob: -8.542337417602539
    10. 'if' → logprob: -9.917337417602539

Token 592: ' =' (ID: 314)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09268571436405182
    2. '==' → logprob: -3.3426856994628906
    3. ' ==' → logprob: -3.7176856994628906
    4. '<|end|>' → logprob: -4.092685699462891
    5. '=' → logprob: -5.342685699462891
    6. ')' → logprob: -6.092685699462891
    7. ' =' → logprob: -6.467685699462891
    8. '_' → logprob: -7.217685699462891
    9. ' <=' → logprob: -7.592685699462891
    10. ' >=' → logprob: -7.842685699462891

Token 593: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16022443771362305
    2. ' c' → logprob: -1.910224437713623
    3. '   ' → logprob: -16.53522491455078
    4. 'cc' → logprob: -17.03522491455078
    5. '0' → logprob: -17.28522491455078
    6. '	c' → logprob: -17.66022491455078
    7. ')c' → logprob: -17.66022491455078
    8. '           ' → logprob: -17.91022491455078
    9. '               ' → logprob: -18.03522491455078
    10. ' ' → logprob: -18.41022491455078

Token 594: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007332704844884574
    2. '+' → logprob: -7.375733375549316
    3. ' +' → logprob: -9.250733375549316
    4. ' ' → logprob: -12.125733375549316
    5. '   ' → logprob: -13.250733375549316
    6. '_' → logprob: -13.625733375549316
    7. ')' → logprob: -14.500733375549316
    8. '[' → logprob: -15.000733375549316
    9. 'o' → logprob: -15.125733375549316
    10. '           ' → logprob: -15.500733375549316

Token 595: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 596: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0017060093814507127
    2. ' c' → logprob: -6.376706123352051
    3. 'cc' → logprob: -12.87670612335205
    4. '   ' → logprob: -14.62670612335205
    5. '           ' → logprob: -15.87670612335205
    6. '       ' → logprob: -16.126705169677734
    7. '
' → logprob: -16.126705169677734
    8. '0' → logprob: -16.376705169677734
    9. ' ' → logprob: -16.751705169677734
    10. ')c' → logprob: -16.751705169677734

Token 597: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04863539710640907
    2. '           ' → logprob: -4.298635482788086
    3. '<|end|>' → logprob: -4.423635482788086
    4. ' >=' → logprob: -4.798635482788086
    5. '                   ' → logprob: -5.048635482788086
    6. ')' → logprob: -6.298635482788086
    7. ' if' → logprob: -6.548635482788086
    8. ' <' → logprob: -6.673635482788086
    9. '                ' → logprob: -7.673635482788086
    10. '>=' → logprob: -8.173635482788086

Token 598: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029342982918024063
    2. '           ' → logprob: -3.7793428897857666
    3. '<|end|>' → logprob: -5.529343128204346
    4. ' if' → logprob: -6.904343128204346
    5. '                   ' → logprob: -8.529342651367188
    6. '<|end|>' → logprob: -8.779342651367188
    7. 'if' → logprob: -9.279342651367188
    8. ' >=' → logprob: -9.529342651367188
    9. '
' → logprob: -9.654342651367188
    10. ')' → logprob: -9.779342651367188

Token 599: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27821165323257446
    2. '               ' → logprob: -1.5282115936279297
    3. 'if' (adapté à ' if') → logprob: -3.6532115936279297
    4. '           ' → logprob: -11.02821159362793
    5. '                
' → logprob: -12.52821159362793
    6. 'If' → logprob: -12.77821159362793
    7. '<|end|>' → logprob: -12.90321159362793
    8. '```' → logprob: -13.15321159362793
    9. '                   ' → logprob: -13.27821159362793
    10. '                ' → logprob: -13.90321159362793

Token 600: ' rr' (ID: 54129)
  Prédit: ' rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rr' → logprob: -0.018594687804579735
    2. 'rr' → logprob: -4.143594741821289
    3. ' not' → logprob: -6.143594741821289
    4. '(rr' → logprob: -8.143594741821289
    5. 'not' → logprob: -9.143594741821289
    6. '   ' → logprob: -12.018594741821289
    7. '_rr' → logprob: -13.143594741821289
    8. '0' → logprob: -13.643594741821289
    9. 'r' → logprob: -14.018594741821289
    10. '           ' → logprob: -14.393594741821289

Token 601: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.008620720356702805
    2. ' <' → logprob: -4.758620738983154
    3. '>=' → logprob: -12.258620262145996
    4. ' >=' → logprob: -14.633620262145996
    5. '   ' → logprob: -14.883620262145996
    6. ')' → logprob: -14.883620262145996
    7. '[' → logprob: -16.258621215820312
    8. 'not' → logprob: -16.883621215820312
    9. ' not' → logprob: -17.008621215820312
    10. ')<' → logprob: -17.508621215820312

Token 602: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021853535436093807
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -15.502185821533203
    4. '=' → logprob: -17.877185821533203
    5. '           ' → logprob: -18.377185821533203
    6. '```' → logprob: -18.502185821533203
    7. '۰' → logprob: -18.752185821533203
    8. '       ' → logprob: -18.877185821533203
    9. '00' → logprob: -19.127185821533203
    10. '
' → logprob: -19.189685821533203

Token 603: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.125009536743164
    4. '           ' → logprob: -16.875009536743164
    5. '=' → logprob: -17.812509536743164
    6. '       ' → logprob: -17.875009536743164
    7. '
' → logprob: -18.125009536743164
    8. '۰' → logprob: -18.250009536743164
    9. '00' → logprob: -18.375009536743164
    10. 'or' → logprob: -18.562509536743164

Token 604: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.07892900705337524
    2. 'or' → logprob: -2.5789289474487305
    3. '               ' → logprob: -10.45392894744873
    4. '           ' → logprob: -11.82892894744873
    5. '                   ' → logprob: -13.70392894744873
    6. '	or' → logprob: -13.70392894744873
    7. '                ' → logprob: -15.70392894744873
    8. '            ' → logprob: -16.078929901123047
    9. '              ' → logprob: -16.578929901123047
    10. ')' → logprob: -16.578929901123047

Token 605: ' rr' (ID: 54129)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.3741516172885895
    2. 'rr' → logprob: -1.249151587486267
    3. ' rr' → logprob: -4.124151706695557
    4. ' cc' → logprob: -4.749151706695557
    5. 'rc' → logprob: -8.624151229858398
    6. '           ' → logprob: -9.249151229858398
    7. '	cc' → logprob: -9.874151229858398
    8. '               ' → logprob: -9.999151229858398
    9. '(rr' → logprob: -10.624151229858398
    10. '   ' → logprob: -10.749151229858398

Token 606: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.08896858245134354
    2. ' >=' → logprob: -2.463968515396118
    3. '>' → logprob: -11.338968276977539
    4. ']>=' → logprob: -11.838968276977539
    5. ')>=' → logprob: -12.338968276977539
    6. '   ' → logprob: -12.713968276977539
    7. '≥' → logprob: -14.588968276977539
    8. '```' → logprob: -14.713968276977539
    9. ')' → logprob: -14.963968276977539
    10. '<|end|>' → logprob: -15.338968276977539

Token 607: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.0019374389667063951
    2. ' board' → logprob: -6.251937389373779
    3. '   ' → logprob: -12.126937866210938
    4. 'len' → logprob: -14.126937866210938
    5. '           ' → logprob: -14.376937866210938
    6. '	board' → logprob: -14.751937866210938
    7. 'b' → logprob: -14.876937866210938
    8. '
' → logprob: -15.126937866210938
    9. ' ' → logprob: -15.251937866210938
    10. '               ' → logprob: -15.751937866210938

Token 608: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -8.65707261255011e-06
    2. 'rows' → logprob: -12.375008583068848
    3. '_' → logprob: -13.125008583068848
    4. '_cols' → logprob: -14.125008583068848
    5. '
' → logprob: -14.250008583068848
    6. '   ' → logprob: -15.000008583068848
    7. '_
' → logprob: -15.125008583068848
    8. '_lines' → logprob: -16.125009536743164
    9. '_ROWS' → logprob: -16.500009536743164
    10. '       ' → logprob: -17.125009536743164

Token 609: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0003831252979580313
    2. 'or' → logprob: -7.875382900238037
    3. '	or' → logprob: -13.625383377075195
    4. '           ' → logprob: -14.250383377075195
    5. '               ' → logprob: -14.875383377075195
    6. '       ' → logprob: -15.250383377075195
    7. '<|end|>' → logprob: -15.500383377075195
    8. ' ' → logprob: -15.750383377075195
    9. '   ' → logprob: -17.250383377075195
    10. '        ' → logprob: -17.375383377075195

Token 610: ' cc' (ID: 22988)
  Prédit: ' cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cc' → logprob: -0.061981577426195145
    2. 'cc' → logprob: -2.811981678009033
    3. '(cc' → logprob: -12.061981201171875
    4. '               ' → logprob: -12.436981201171875
    5. '	cc' → logprob: -12.811981201171875
    6. '           ' → logprob: -14.311981201171875
    7. '                   ' → logprob: -14.686981201171875
    8. '_cc' → logprob: -16.436981201171875
    9. ' ' → logprob: -16.936981201171875
    10. ' ' → logprob: -17.061981201171875

Token 611: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.18519072234630585
    2. ' <' → logprob: -2.1851906776428223
    3. '>=' → logprob: -3.1851906776428223
    4. '<' → logprob: -4.185190677642822
    5. ' ' → logprob: -13.43519115447998
    6. ' >' → logprob: -13.56019115447998
    7. '>' → logprob: -13.81019115447998
    8. '[' → logprob: -13.93519115447998
    9. '   ' → logprob: -14.06019115447998
    10. ' ==' → logprob: -14.43519115447998

Token 612: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032664805185049772
    2. ' ' → logprob: -5.753266334533691
    3. 'board' → logprob: -9.378266334533691
    4. ' board' → logprob: -13.128266334533691
    5. '   ' → logprob: -13.503266334533691
    6. '
' → logprob: -14.503266334533691
    7. '  ' → logprob: -16.003267288208008
    8. 'col' → logprob: -17.003267288208008
    9. '(board' → logprob: -17.003267288208008
    10. '       ' → logprob: -17.503267288208008

Token 613: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.204720582696609e-05
    2. ' ' → logprob: -10.500052452087402
    3. 'board' → logprob: -10.625052452087402
    4. '
' → logprob: -16.875051498413086
    5. '   ' → logprob: -17.000051498413086
    6. 'col' → logprob: -17.500051498413086
    7. ' board' → logprob: -17.875051498413086
    8. '00' → logprob: -19.875051498413086
    9. '  ' → logprob: -20.250051498413086
    10. '```' → logprob: -20.500051498413086

Token 614: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.011064678430557251
    2. 'or' → logprob: -4.511064529418945
    3. ' ' → logprob: -11.636064529418945
    4. '	or' → logprob: -13.136064529418945
    5. '           ' → logprob: -13.261064529418945
    6. ')' → logprob: -14.011064529418945
    7. '   ' → logprob: -14.136064529418945
    8. '       ' → logprob: -14.136064529418945
    9. '<|end|>' → logprob: -14.636064529418945
    10. '0' → logprob: -14.636064529418945

Token 615: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.011048289015889168
    2. ' cc' → logprob: -4.511048316955566
    3. '	cc' → logprob: -14.886048316955566
    4. '(cc' → logprob: -16.38604736328125
    5. ' ' → logprob: -17.51104736328125
    6. 'col' → logprob: -17.88604736328125
    7. '   ' → logprob: -18.13604736328125
    8. 'c' → logprob: -18.51104736328125
    9. 'ccc' → logprob: -19.13604736328125
    10. '  ' → logprob: -19.26104736328125

Token 616: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.023258639499545097
    2. ' >=' → logprob: -3.773258686065674
    3. '<' → logprob: -12.523258209228516
    4. '>' → logprob: -12.523258209228516
    5. ']>=' → logprob: -12.648258209228516
    6. ')>=' → logprob: -13.148258209228516
    7. '≥' → logprob: -15.273258209228516
    8. '0' → logprob: -15.773258209228516
    9. ' ' → logprob: -16.273258209228516
    10. ' <' → logprob: -17.023258209228516

Token 617: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -3.1424973713001236e-05
    2. ' board' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.125030517578125
    4. '(board' → logprob: -17.375030517578125
    5. '	board' → logprob: -18.000030517578125
    6. ' ' → logprob: -18.375030517578125
    7. 'boards' → logprob: -19.625030517578125
    8. '
' → logprob: -19.750030517578125
    9. '  ' → logprob: -20.500030517578125
    10. '       ' → logprob: -20.500030517578125

Token 618: '_cols' (ID: 60927)
  Prédit: '_cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cols' → logprob: -8.41866585687967e-06
    2. 'cols' → logprob: -11.875008583068848
    3. '_rows' → logprob: -14.000008583068848
    4. '_columns' → logprob: -14.750008583068848
    5. 'Cols' → logprob: -16.12500762939453
    6. '-cols' → logprob: -16.50000762939453
    7. '_col' → logprob: -17.37500762939453
    8. '_' → logprob: -18.37500762939453
    9. 's' → logprob: -18.50000762939453
    10. '_c' → logprob: -18.75000762939453

Token 619: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.026546897366642952
    2. '               ' → logprob: -3.7765469551086426
    3. '                   ' → logprob: -6.776546955108643
    4. ':' → logprob: -7.151546955108643
    5. 'or' → logprob: -7.151546955108643
    6. '           ' → logprob: -7.901546955108643
    7. ':
' → logprob: -9.526546478271484
    8. '              ' → logprob: -9.776546478271484
    9. '                       ' → logprob: -9.901546478271484
    10. '                ' → logprob: -11.026546478271484

Token 620: '                   ' (ID: 699)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4383760094642639
    2. '                   ' → logprob: -1.0633759498596191
    3. '               ' → logprob: -4.813375949859619
    4. '                       ' → logprob: -7.438375949859619
    5. 'or' → logprob: -7.688375949859619
    6. ' return' → logprob: -8.813376426696777
    7. '                  ' → logprob: -8.938376426696777
    8. 'return' → logprob: -9.938376426696777
    9. ':return' → logprob: -10.688376426696777
    10. '                    ' → logprob: -10.813376426696777

Token 621: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5593975782394409
    2. 'return' (adapté à ' return') → logprob: -1.059397578239441
    3. '                   ' → logprob: -2.5593976974487305
    4. '               ' → logprob: -5.6843976974487305
    5. ' 
' → logprob: -8.05939769744873
    6. '                ' → logprob: -8.80939769744873
    7. '                       ' → logprob: -8.93439769744873
    8. '
' → logprob: -9.05939769744873
    9. '                    ' → logprob: -9.05939769744873
    10. '\n' → logprob: -9.80939769744873

Token 622: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01416350994259119
    2. ' False' → logprob: -4.264163494110107
    3. '(False' → logprob: -19.514163970947266
    4. 'True' → logprob: -20.014163970947266
    5. 'false' → logprob: -21.639163970947266
    6. '   ' → logprob: -22.139163970947266
    7. '_false' → logprob: -23.014163970947266
    8. '=False' → logprob: -23.514163970947266
    9. ' True' → logprob: -23.764163970947266
    10. 'F' → logprob: -23.764163970947266

Token 623: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05526147782802582
    2. '
' → logprob: -3.1802613735198975
    3. '  
' → logprob: -5.680261611938477
    4. '                
' → logprob: -6.180261611938477
    5. '\n' → logprob: -6.430261611938477
    6. '<|end|>' → logprob: -6.930261611938477
    7. '\
' → logprob: -7.180261611938477
    8. '    
' → logprob: -7.305261611938477
    9. '           ' → logprob: -7.680261611938477
    10. ' 
' → logprob: -7.930261611938477

Token 624: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005647073267027736
    2. '
' → logprob: -8.000564575195312
    3. '                
' → logprob: -9.250564575195312
    4. '  
' → logprob: -10.125564575195312
    5. '           ' → logprob: -10.500564575195312
    6. '<|end|>' → logprob: -11.125564575195312
    7. '       ' → logprob: -11.750564575195312
    8. '                   ' → logprob: -11.875564575195312
    9. '    
' → logprob: -11.875564575195312
    10. '                ' → logprob: -12.250564575195312

Token 625: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27265238761901855
    2. '               ' → logprob: -1.5226523876190186
    3. 'if' (adapté à ' if') → logprob: -3.8976523876190186
    4. ' or' → logprob: -8.772652626037598
    5. '       ' → logprob: -11.022652626037598
    6. ' ' → logprob: -11.397652626037598
    7. '                
' → logprob: -11.647652626037598
    8. '                ' → logprob: -12.272652626037598
    9. '   ' → logprob: -12.272652626037598
    10. '              ' → logprob: -12.522652626037598

Token 626: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.10021217912435532
    2. ' board' → logprob: -2.3502120971679688
    3. '   ' → logprob: -13.350212097167969
    4. '               ' → logprob: -14.100212097167969
    5. '           ' → logprob: -14.100212097167969
    6. '	board' → logprob: -14.600212097167969
    7. '(board' → logprob: -14.725212097167969
    8. ' ' → logprob: -14.725212097167969
    9. '                   ' → logprob: -15.225212097167969
    10. 'block' → logprob: -15.225212097167969

Token 627: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.643152740551159e-05
    2. '[r' → logprob: -10.375036239624023
    3. 'rr' → logprob: -12.500036239624023
    4. '(rr' → logprob: -15.125036239624023
    5. ' [' → logprob: -15.500036239624023
    6. '   ' → logprob: -15.625036239624023
    7. '_rr' → logprob: -15.875036239624023
    8. '       ' → logprob: -16.000036239624023
    9. '][' → logprob: -16.250036239624023
    10. '```' → logprob: -16.250036239624023

Token 628: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.00019603055261541158
    2. ' rr' → logprob: -9.25019645690918
    3. 'r' → logprob: -9.62519645690918
    4. '(rr' → logprob: -11.25019645690918
    5. '[' → logprob: -11.75019645690918
    6. '           ' → logprob: -12.12519645690918
    7. '_rr' → logprob: -13.12519645690918
    8. '
' → logprob: -13.62519645690918
    9. '][' → logprob: -13.75019645690918
    10. '               ' → logprob: -13.87519645690918

Token 629: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011649888008832932
    2. '[' → logprob: -4.511650085449219
    3. '[r' → logprob: -7.511650085449219
    4. '[c' → logprob: -10.761650085449219
    5. '[row' → logprob: -12.011650085449219
    6. ']' → logprob: -12.136650085449219
    7. '               ' → logprob: -12.261650085449219
    8. ' ][' → logprob: -12.511650085449219
    9. '           ' → logprob: -12.636650085449219
    10. ''][' → logprob: -13.261650085449219

Token 630: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -9.088346359931165e-07
    2. ' cc' → logprob: -14.125000953674316
    3. '	cc' → logprob: -16.375
    4. 'c' → logprob: -16.875
    5. '(cc' → logprob: -18.375
    6. '   ' → logprob: -18.75
    7. '
' → logprob: -20.625
    8. '_cc' → logprob: -20.625
    9. 'ccc' → logprob: -21.125
    10. '           ' → logprob: -21.75

Token 631: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03849709406495094
    2. ']==' → logprob: -3.41349720954895
    3. ']!=' → logprob: -6.038496971130371
    4. '==' → logprob: -6.288496971130371
    5. ']=='' → logprob: -8.663496971130371
    6. ' ==' → logprob: -9.288496971130371
    7. '!=' → logprob: -9.288496971130371
    8. '[' → logprob: -9.538496971130371
    9. ' ]' → logprob: -9.913496971130371
    10. ' !=' → logprob: -10.288496971130371

Token 632: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07866183668375015
    2. '!=' → logprob: -3.0786619186401367
    3. ' ==' → logprob: -3.7036619186401367
    4. ' !=' → logprob: -5.953661918640137
    5. ']==' → logprob: -6.828661918640137
    6. '=='' → logprob: -7.578661918640137
    7. '[' → logprob: -8.328661918640137
    8. ']' → logprob: -8.953661918640137
    9. '#' → logprob: -9.078661918640137
    10. '!='' → logprob: -9.203661918640137

Token 633: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.013137991540133953
    2. ''' → logprob: -4.6381378173828125
    3. ''*' → logprob: -6.7631378173828125
    4. ''x' → logprob: -6.8881378173828125
    5. ''.' → logprob: -7.0131378173828125
    6. ' '#'' → logprob: -9.263137817382812
    7. ''o' → logprob: -9.263137817382812
    8. '#' → logprob: -10.638137817382812
    9. '"#' → logprob: -10.888137817382812
    10. ''O' → logprob: -11.388137817382812

Token 634: '':
' (ID: 7669)
  Prédit: ''):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.9977322220802307
    2. ':
' → logprob: -1.247732162475586
    3. '):
' → logprob: -1.997732162475586
    4. ':' → logprob: -2.747732162475586
    5. '                   ' → logprob: -3.372732162475586
    6. ':return' → logprob: -3.622732162475586
    7. '':
' → logprob: -3.872732162475586
    8. '':' → logprob: -4.372732162475586
    9. ''):' → logprob: -4.497732162475586
    10. '):' → logprob: -4.622732162475586

Token 635: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007885907776653767
    2. '                       ' → logprob: -5.632885932922363
    3. '               ' → logprob: -5.757885932922363
    4. 'return' → logprob: -8.257885932922363
    5. ':return' → logprob: -8.257885932922363
    6. ' return' → logprob: -8.507885932922363
    7. '                  ' → logprob: -9.382885932922363
    8. '           ' → logprob: -9.382885932922363
    9. ':' → logprob: -9.507885932922363
    10. ':
' → logprob: -9.507885932922363

Token 636: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7267786860466003
    2. 'return' (adapté à ' return') → logprob: -0.9767786860466003
    3. '                   ' → logprob: -1.9767787456512451
    4. '               ' → logprob: -6.726778507232666
    5. '                       ' → logprob: -8.726778984069824
    6. '                ' → logprob: -10.476778984069824
    7. '           ' → logprob: -10.976778984069824
    8. '	return' → logprob: -11.101778984069824
    9. '                  ' → logprob: -11.351778984069824
    10. ' 
' → logprob: -11.476778984069824

Token 637: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.093505099765025e-05
    2. ' False' → logprob: -11.250020980834961
    3. 'True' → logprob: -11.750020980834961
    4. ' True' → logprob: -21.75002098083496
    5. '(False' → logprob: -22.00002098083496
    6. '   ' → logprob: -23.62502098083496
    7. 'F' → logprob: -24.50002098083496
    8. 'false' → logprob: -25.00002098083496
    9. '=False' → logprob: -25.87502098083496
    10. '
' → logprob: -26.00002098083496

Token 638: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 639: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1570766419172287
    2. '               ' → logprob: -2.657076597213745
    3. '
' → logprob: -3.657076597213745
    4. '       ' → logprob: -3.782076597213745
    5. '<|end|>' → logprob: -3.907076597213745
    6. 'return' → logprob: -6.532076835632324
    7. '            
' → logprob: -6.782076835632324
    8. ' return' → logprob: -6.782076835632324
    9. '    
' → logprob: -7.282076835632324
    10. '  
' → logprob: -7.657076835632324

Token 640: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023799849674105644
    2. '           ' → logprob: -4.023799896240234
    3. 'return' (adapté à ' return') → logprob: -6.023799896240234
    4. ' return' → logprob: -6.648799896240234
    5. '
' → logprob: -7.023799896240234
    6. '   ' → logprob: -8.023799896240234
    7. '	return' → logprob: -8.023799896240234
    8. '<|end|>' → logprob: -8.898799896240234
    9. '        
' → logprob: -9.523799896240234
    10. '    
' → logprob: -10.273799896240234

Token 641: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0067154900170862675
    2. ' True' → logprob: -5.006715297698975
    3. 'False' → logprob: -16.131715774536133
    4. '   ' → logprob: -17.131715774536133
    5. '(True' → logprob: -18.006715774536133
    6. '    ' → logprob: -20.506715774536133
    7. '=True' → logprob: -22.131715774536133
    8. 'true' → logprob: -22.756715774536133
    9. '           ' → logprob: -22.756715774536133
    10. '
' → logprob: -23.131715774536133

Token 642: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 643: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 644: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0043617598712444305
    2. 'for' → logprob: -6.504361629486084
    3. 'def' (adapté à ' def') → logprob: -7.254361629486084
    4. '   ' → logprob: -7.504361629486084
    5. ' for' → logprob: -7.504361629486084
    6. 'place' → logprob: -8.629362106323242
    7. '        
' → logprob: -8.879362106323242
    8. '           ' → logprob: -9.004362106323242
    9. 'count' → logprob: -9.004362106323242
    10. '#' → logprob: -9.504362106323242

Token 645: ' place' (ID: 2475)
  Prédit: ' place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' place' → logprob: -0.5249630808830261
    2. 'place' → logprob: -0.8999630808830261
    3. '_place' → logprob: -7.274962902069092
    4. ' fill' → logprob: -8.52496337890625
    5. 'fill' → logprob: -8.89996337890625
    6. '   ' → logprob: -9.52496337890625
    7. ' can' → logprob: -9.52496337890625
    8. ' find' → logprob: -9.77496337890625
    9. 'try' → logprob: -9.77496337890625
    10. 'can' → logprob: -9.77496337890625

Token 646: '_block' (ID: 15644)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7109710574150085
    2. '(r' → logprob: -0.7109710574150085
    3. ' (' → logprob: -4.085970878601074
    4. '_' → logprob: -7.835970878601074
    5. '(block' → logprob: -8.460970878601074
    6. '(row' → logprob: -9.710970878601074
    7. ' ' → logprob: -10.085970878601074
    8. '   ' → logprob: -11.085970878601074
    9. '(board' → logprob: -11.210970878601074
    10. '[' → logprob: -11.210970878601074

Token 647: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.002881903201341629
    2. '(' → logprob: -5.87788200378418
    3. ' (' → logprob: -9.87788200378418
    4. '   ' → logprob: -10.75288200378418
    5. '       ' → logprob: -13.00288200378418
    6. '(row' → logprob: -14.25288200378418
    7. ' ' → logprob: -14.37788200378418
    8. '(
' → logprob: -14.87788200378418
    9. '    ' → logprob: -16.12788200378418
    10. '           ' → logprob: -16.50288200378418

Token 648: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2246291337069124e-05
    2. ',' → logprob: -11.000021934509277
    3. ' ' → logprob: -12.375021934509277
    4. ' ,' → logprob: -14.500021934509277
    5. '   ' → logprob: -15.625021934509277
    6. '       ' → logprob: -15.750021934509277
    7. '         ' → logprob: -16.875022888183594
    8. ')' → logprob: -16.875022888183594
    9. '_' → logprob: -17.000022888183594
    10. '  ' → logprob: -17.250022888183594

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035083942930214107
    2. ',c' → logprob: -8.125350952148438
    3. ' ,' → logprob: -10.000350952148438
    4. ',r' → logprob: -12.500350952148438
    5. ',
' → logprob: -12.625350952148438
    6. '       ' → logprob: -14.000350952148438
    7. '           ' → logprob: -14.750350952148438
    8. '   ' → logprob: -15.000350952148438
    9. ',p' → logprob: -16.375350952148438
    10. ')' → logprob: -16.625350952148438

Token 650: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.020542940124869347
    2. ' c' → logprob: -3.895542860031128
    3. '   ' → logprob: -15.270543098449707
    4. ' ' → logprob: -15.395543098449707
    5. '    ' → logprob: -15.645543098449707
    6. '     ' → logprob: -16.39554214477539
    7. '  ' → logprob: -16.52054214477539
    8. '	c' → logprob: -16.64554214477539
    9. '       ' → logprob: -16.89554214477539
    10. '      ' → logprob: -17.02054214477539

Token 651: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.9650025428272784e-05
    2. ',' → logprob: -10.250040054321289
    3. '       ' → logprob: -13.625040054321289
    4. ' ' → logprob: -13.750040054321289
    5. '```' → logprob: -14.375040054321289
    6. '   ' → logprob: -14.750040054321289
    7. '           ' → logprob: -15.500040054321289
    8. ' ,' → logprob: -15.500040054321289
    9. '         ' → logprob: -16.12504005432129
    10. '        ' → logprob: -16.12504005432129

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.706686690449715e-05
    2. ' ,' → logprob: -10.125066757202148
    3. '           ' → logprob: -10.750066757202148
    4. '       ' → logprob: -13.000066757202148
    5. ',
' → logprob: -14.125066757202148
    6. '               ' → logprob: -14.250066757202148
    7. '   ' → logprob: -14.250066757202148
    8. '[],' → logprob: -16.12506675720215
    9. ',var' → logprob: -16.12506675720215
    10. '[' → logprob: -16.50006675720215

Token 653: ' variant' (ID: 16914)
  Prédit: 'variant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variant' → logprob: -0.04876381903886795
    2. ' variant' → logprob: -3.0487637519836426
    3. '           ' → logprob: -9.7987642288208
    4. '       ' → logprob: -10.2987642288208
    5. 'coords' → logprob: -10.5487642288208
    6. '   ' → logprob: -11.1737642288208
    7. 'block' → logprob: -11.1737642288208
    8. '     ' → logprob: -11.9237642288208
    9. 'variants' → logprob: -12.0487642288208
    10. '    ' → logprob: -12.6737642288208

Token 654: '_coords' (ID: 77948)
  Prédit: '_coords'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coords' → logprob: -0.00011403311509639025
    2. ')_' → logprob: -9.500114440917969
    3. '           ' → logprob: -11.625114440917969
    4. '_chars' → logprob: -12.625114440917969
    5. '_coordinates' → logprob: -12.875114440917969
    6. '```' → logprob: -12.875114440917969
    7. 'coords' → logprob: -13.000114440917969
    8. ')' → logprob: -13.125114440917969
    9. '               ' → logprob: -13.250114440917969
    10. ''_' → logprob: -13.375114440917969

Token 655: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005070421029813588
    2. '           ' → logprob: -7.87550687789917
    3. ' ,' → logprob: -10.125507354736328
    4. '       ' → logprob: -10.625507354736328
    5. '):' → logprob: -10.750507354736328
    6. '   ' → logprob: -10.875507354736328
    7. '):
' → logprob: -11.250507354736328
    8. '               ' → logprob: -12.500507354736328
    9. ':' → logprob: -13.125507354736328
    10. ',
' → logprob: -13.875507354736328

Token 656: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4800586998462677
    2. '           ' → logprob: -0.9800586700439453
    3. '   ' → logprob: -5.230058670043945
    4. ' for' → logprob: -8.230058670043945
    5. '	       ' → logprob: -8.355058670043945
    6. 'for' → logprob: -9.980058670043945
    7. '	   ' → logprob: -11.480058670043945
    8. '               ' → logprob: -11.480058670043945
    9. '<|end|>' → logprob: -11.480058670043945
    10. '```' → logprob: -11.855058670043945

Token 657: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005564447958022356
    2. '           ' → logprob: -5.505564212799072
    3. '   ' → logprob: -7.380564212799072
    4. ' for' → logprob: -7.505564212799072
    5. 'for' → logprob: -8.13056468963623
    6. '               ' → logprob: -11.63056468963623
    7. '	       ' → logprob: -12.13056468963623
    8. '	for' → logprob: -13.63056468963623
    9. '	   ' → logprob: -14.25556468963623
    10. '<|end|>' → logprob: -14.88056468963623

Token 658: ' Place' (ID: 16303)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4206061065196991
    2. '       ' → logprob: -1.1706061363220215
    3. ' for' → logprob: -4.1706061363220215
    4. '   ' → logprob: -4.4206061363220215
    5. '           ' → logprob: -5.1706061363220215
    6. '               ' → logprob: -11.670605659484863
    7. '	for' → logprob: -11.670605659484863
    8. ' ' → logprob: -13.420605659484863
    9. '                   ' → logprob: -13.795605659484863
    10. '     ' → logprob: -14.295605659484863

Token 659: ' block' (ID: 4355)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5315405130386353
    2. 'for' → logprob: -1.0315405130386353
    3. '           ' → logprob: -3.2815403938293457
    4. '   ' → logprob: -5.031540393829346
    5. '       ' → logprob: -5.156540393829346
    6. 'block' → logprob: -6.031540393829346
    7. ' block' → logprob: -6.031540393829346
    8. ' ' → logprob: -8.031540870666504
    9. '               ' → logprob: -8.031540870666504
    10. '_block' → logprob: -9.031540870666504

Token 660: ' on' (ID: 402)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.09016771614551544
    2. '           ' → logprob: -2.840167760848999
    3. '   ' → logprob: -4.34016752243042
    4. ' at' → logprob: -4.96516752243042
    5. '[r' → logprob: -5.46516752243042
    6. '               ' → logprob: -7.09016752243042
    7. ' (' → logprob: -7.09016752243042
    8. '       ' → logprob: -7.59016752243042
    9. ' ' → logprob: -7.84016752243042
    10. '    ' → logprob: -8.590167999267578

Token 661: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.08559536933898926
    2. 'r' → logprob: -2.7105953693389893
    3. ' board' → logprob: -4.33559513092041
    4. ' r' → logprob: -6.08559513092041
    5. '   ' → logprob: -9.96059513092041
    6. '           ' → logprob: -10.33559513092041
    7. '(r' → logprob: -10.71059513092041
    8. '(board' → logprob: -10.96059513092041
    9. '       ' → logprob: -11.21059513092041
    10. '[r' → logprob: -11.46059513092041

Token 662: ' copy' (ID: 5150)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012789263855665922
    2. ' for' → logprob: -7.501278877258301
    3. '   ' → logprob: -8.2512788772583
    4. '
' → logprob: -8.3762788772583
    5. '               ' → logprob: -9.5012788772583
    6. '       ' → logprob: -9.8762788772583
    7. ' at' → logprob: -10.7512788772583
    8. 'for' → logprob: -10.8762788772583
    9. '	       ' → logprob: -11.6262788772583
    10. ',' → logprob: -11.7512788772583

Token 663: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021068404894322157
    2. '
' → logprob: -7.627106666564941
    3. '       ' → logprob: -7.877106666564941
    4. '               ' → logprob: -8.252106666564941
    5. ' (' → logprob: -8.502106666564941
    6. '   ' → logprob: -8.877106666564941
    7. '(' → logprob: -9.002106666564941
    8. ',' → logprob: -9.127106666564941
    9. '(r' → logprob: -9.252106666564941
    10. ' for' → logprob: -10.002106666564941

Token 664: ' return' (ID: 622)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2354124784469604
    2. ' return' → logprob: -1.7354124784469604
    3. 'return' → logprob: -1.9854124784469604
    4. '           ' → logprob: -1.9854124784469604
    5. 'for' → logprob: -2.11041259765625
    6. '       ' → logprob: -2.73541259765625
    7. '
' → logprob: -3.11041259765625
    8. '   ' → logprob: -4.11041259765625
    9. 'def' → logprob: -4.98541259765625
    10. '               ' → logprob: -7.23541259765625

Token 665: ' this' (ID: 495)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.8117502927780151
    2. '[r' → logprob: -1.6867502927780151
    3. '[' → logprob: -1.8117502927780151
    4. 'new' → logprob: -2.3117504119873047
    5. ' [' → logprob: -3.8117504119873047
    6. '[b' → logprob: -3.9367504119873047
    7. 'board' → logprob: -4.061750411987305
    8. '[row' → logprob: -4.436750411987305
    9. '['' → logprob: -4.561750411987305
    10. 'copy' → logprob: -5.811750411987305

Token 666: ' new' (ID: 620)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6069801449775696
    2. '[' → logprob: -1.7319800853729248
    3. '[
' → logprob: -2.606980085372925
    4. 'board' → logprob: -2.731980085372925
    5. '[new' → logprob: -3.106980085372925
    6. '[r' → logprob: -3.856980085372925
    7. ' [
' → logprob: -4.606980323791504
    8. ' ' → logprob: -4.981980323791504
    9. '
' → logprob: -4.981980323791504
    10. '   ' → logprob: -5.231980323791504

Token 667: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.5866965055465698
    2. '_board' → logprob: -0.8366965055465698
    3. ' board' → logprob: -5.711696624755859
    4. '
' → logprob: -5.836696624755859
    5. 'copy' → logprob: -6.961696624755859
    6. '[
' → logprob: -7.211696624755859
    7. '[' → logprob: -7.461696624755859
    8. '_' → logprob: -7.461696624755859
    9. '   ' → logprob: -8.33669662475586
    10. ' [' → logprob: -8.71169662475586

Token 668: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9233839511871338
    2. '(r' → logprob: -2.048383951187134
    3. '(' → logprob: -2.298383951187134
    4. '(board' → logprob: -2.548383951187134
    5. '
' → logprob: -2.923383951187134
    6. '       ' → logprob: -3.173383951187134
    7. '(rows' → logprob: -3.548383951187134
    8. ' (' → logprob: -3.548383951187134
    9. '(copy' → logprob: -4.173383712768555
    10. '(row' → logprob: -4.423383712768555

Token 669: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6714188456535339
    2. '
' → logprob: -0.7964188456535339
    3. '       ' → logprob: -3.4214189052581787
    4. '<|end|>' → logprob: -6.7964186668396
    5. '            
' → logprob: -7.2964186668396
    6. '        
' → logprob: -7.5464186668396
    7. '    
' → logprob: -7.6714186668396
    8. '               ' → logprob: -7.7964186668396
    9. ' 
' → logprob: -8.046419143676758
    10. '  
' → logprob: -8.171419143676758

Token 670: ' new' (ID: 620)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22025427222251892
    2. 'new' (adapté à ' new') → logprob: -2.2202541828155518
    3. ' new' → logprob: -2.5952541828155518
    4. 'import' → logprob: -4.970254421234131
    5. 'return' → logprob: -6.720254421234131
    6. 'copy' → logprob: -6.720254421234131
    7. '
' → logprob: -6.845254421234131
    8. 'board' → logprob: -7.345254421234131
    9. ' copy' → logprob: -7.595254421234131
    10. ' return' → logprob: -7.595254421234131

Token 671: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -0.0010927118128165603
    2. 'board' → logprob: -7.376092910766602
    3. '_' → logprob: -7.751092910766602
    4. ' =' → logprob: -10.751092910766602
    5. '=' → logprob: -11.876092910766602
    6. '_
' → logprob: -13.626092910766602
    7. '   ' → logprob: -13.626092910766602
    8. '_bo' → logprob: -13.876092910766602
    9. '_b' → logprob: -14.126092910766602
    10. 'Board' → logprob: -14.126092910766602

Token 672: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142006874084473
    2. ' =' → logprob: -1.7014200687408447
    3. '   ' → logprob: -12.326419830322266
    4. '=
' → logprob: -13.701419830322266
    5. '       ' → logprob: -15.201419830322266
    6. ',' → logprob: -16.201419830322266
    7. '[' → logprob: -16.201419830322266
    8. ' ' → logprob: -16.201419830322266
    9. '=[' → logprob: -16.201419830322266
    10. ' =
' → logprob: -16.326419830322266

Token 673: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014394075609743595
    2. '[r' → logprob: -4.514394283294678
    3. '[row' → logprob: -6.514394283294678
    4. '[b' → logprob: -7.139394283294678
    5. ' [' → logprob: -7.514394283294678
    6. '[list' → logprob: -8.88939380645752
    7. '[line' → logprob: -8.88939380645752
    8. '[result' → logprob: -10.38939380645752
    9. '[array' → logprob: -10.51439380645752
    10. '[cell' → logprob: -11.13939380645752

Token 674: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0011896300129592419
    2. 'list' → logprob: -6.751189708709717
    3. ' row' → logprob: -11.001189231872559
    4. '[row' → logprob: -13.376189231872559
    5. 'board' → logprob: -14.251189231872559
    6. 'b' → logprob: -15.876189231872559
    7. 'r' → logprob: -16.001190185546875
    8. '[' → logprob: -16.376190185546875
    9. 'line' → logprob: -16.626190185546875
    10. '['' → logprob: -17.751190185546875

Token 675: '[:]' (ID: 194237)
  Prédit: '[:]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.00043221889063715935
    2. '.copy' → logprob: -7.750432014465332
    3. '[:' → logprob: -13.375432014465332
    4. '[' → logprob: -17.62543296813965
    5. 'copy' → logprob: -18.87543296813965
    6. '   ' → logprob: -19.25043296813965
    7. '.' → logprob: -20.50043296813965
    8. 'for' → logprob: -20.75043296813965
    9. '[::-' → logprob: -20.75043296813965
    10. '[...]' → logprob: -20.87543296813965

Token 676: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2563049793243408
    2. 'for' → logprob: -1.5063049793243408
    3. '           ' → logprob: -5.506304740905762
    4. '               ' → logprob: -8.756304740905762
    5. '       ' → logprob: -9.756304740905762
    6. '          ' → logprob: -10.631304740905762
    7. '            ' → logprob: -11.131304740905762
    8. '   ' → logprob: -11.756304740905762
    9. '        ' → logprob: -12.006304740905762
    10. ')' → logprob: -12.006304740905762

Token 677: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.00013333676906768233
    2. 'board' → logprob: -9.500133514404297
    3. ' row' → logprob: -9.750133514404297
    4. 'r' → logprob: -17.750133514404297
    5. '   ' → logprob: -17.750133514404297
    6. ' ' → logprob: -18.000133514404297
    7. '(row' → logprob: -18.000133514404297
    8. ' board' → logprob: -18.500133514404297
    9. '	row' → logprob: -18.625133514404297
    10. '_' → logprob: -19.000133514404297

Token 678: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3132691979408264
    2. 'in' → logprob: -1.3132691383361816
    3. 'row' → logprob: -12.81326961517334
    4. ' ' → logprob: -12.93826961517334
    5. '   ' → logprob: -14.31326961517334
    6. '  ' → logprob: -14.31326961517334
    7. '    ' → logprob: -14.68826961517334
    8. 'board' → logprob: -16.188268661499023
    9. '          ' → logprob: -16.563268661499023
    10. '
' → logprob: -16.563268661499023

Token 679: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -5.848420551046729e-05
    2. ' board' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.625059127807617
    4. '
' → logprob: -18.000059127807617
    5. ' ' → logprob: -18.125059127807617
    6. '(board' → logprob: -18.125059127807617
    7. '	board' → logprob: -18.750059127807617
    8. 'book' → logprob: -19.000059127807617
    9. 'block' → logprob: -19.000059127807617
    10. '  ' → logprob: -19.375059127807617

Token 680: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18914169073104858
    2. ']
' → logprob: -1.9391417503356934
    3. '           ' → logprob: -3.5641417503356934
    4. ']

' → logprob: -9.689141273498535
    5. ']
' → logprob: -9.939141273498535
    6. '       ' → logprob: -10.064141273498535
    7. '               ' → logprob: -11.689141273498535
    8. ' ]' → logprob: -12.314141273498535
    9. '<|end|>' → logprob: -12.314141273498535
    10. '   ' → logprob: -12.689141273498535

Token 681: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044044392416253686
    2. '
' → logprob: -8.25044059753418
    3. '       ' → logprob: -9.62544059753418
    4. '<|end|>' → logprob: -9.75044059753418
    5. 'for' → logprob: -11.25044059753418
    6. ' for' → logprob: -11.62544059753418
    7. '   ' → logprob: -11.62544059753418
    8. '               ' → logprob: -12.12544059753418
    9. '<|end|>' → logprob: -12.25044059753418
    10. '            
' → logprob: -12.50044059753418

Token 682: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05563049763441086
    2. 'for' (adapté à ' for') → logprob: -3.3056304454803467
    3. ' for' → logprob: -4.055630683898926
    4. '   ' → logprob: -9.805630683898926
    5. '       ' → logprob: -10.055630683898926
    6. '	       ' → logprob: -12.555630683898926
    7. '	for' → logprob: -12.805630683898926
    8. '               ' → logprob: -12.930630683898926
    9. '                   ' → logprob: -14.055630683898926
    10. '<|end|>' → logprob: -14.055630683898926

Token 683: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2594231367111206
    2. '(r' → logprob: -1.5094231367111206
    3. ' r' → logprob: -5.50942325592041
    4. 'r' → logprob: -5.75942325592041
    5. '(rr' → logprob: -8.38442325592041
    6. '(' → logprob: -11.38442325592041
    7. ' rr' → logprob: -11.38442325592041
    8. 'rr' → logprob: -12.63442325592041
    9. '[r' → logprob: -13.00942325592041
    10. ' ' → logprob: -13.13442325592041

Token 684: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002646735229063779
    2. 'rr' → logprob: -8.375265121459961
    3. '(r' → logprob: -10.500265121459961
    4. ' r' → logprob: -12.250265121459961
    5. '(rr' → logprob: -13.875265121459961
    6. ' rr' → logprob: -15.250265121459961
    7. '   ' → logprob: -16.12526512145996
    8. 'tr' → logprob: -16.87526512145996
    9. ' (' → logprob: -16.87526512145996
    10. '	r' → logprob: -17.12526512145996

Token 685: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22720101475715637
    2. ',' → logprob: -1.602200984954834
    3. ' ,' → logprob: -6.977200984954834
    4. '           ' → logprob: -7.477200984954834
    5. '               ' → logprob: -9.227201461791992
    6. ' ' → logprob: -9.602201461791992
    7. '_,' → logprob: -9.977201461791992
    8. ',r' → logprob: -11.102201461791992
    9. ')' → logprob: -11.477201461791992
    10. 'r' → logprob: -11.477201461791992

Token 686: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07889925688505173
    2. ' c' → logprob: -2.5788991451263428
    3. '   ' → logprob: -12.953899383544922
    4. ' ' → logprob: -13.453899383544922
    5. ')c' → logprob: -13.703899383544922
    6. ',' → logprob: -14.203899383544922
    7. '    ' → logprob: -14.453899383544922
    8. '  ' → logprob: -14.578899383544922
    9. ',c' → logprob: -14.578899383544922
    10. ')' → logprob: -14.703899383544922

Token 687: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041482248343527317
    2. ' )' → logprob: -8.750414848327637
    3. 'in' → logprob: -9.250414848327637
    4. ' in' → logprob: -9.375414848327637
    5. '),' → logprob: -10.250414848327637
    6. '           ' → logprob: -11.625414848327637
    7. '0' → logprob: -12.000414848327637
    8. ',' → logprob: -12.125414848327637
    9. ')
' → logprob: -12.500414848327637
    10. '   ' → logprob: -12.875414848327637

Token 688: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043211109936237335
    2. 'in' → logprob: -3.1682112216949463
    3. ',' → logprob: -9.668210983276367
    4. ')' → logprob: -10.168210983276367
    5. '               ' → logprob: -10.168210983276367
    6. '           ' → logprob: -10.293210983276367
    7. '            ' → logprob: -11.918210983276367
    8. '<|end|>' → logprob: -12.043210983276367
    9. '       ' → logprob: -13.293210983276367
    10. '        ' → logprob: -13.293210983276367

Token 689: ' variant' (ID: 16914)
  Prédit: 'variant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variant' → logprob: -0.004773172549903393
    2. ' variant' → logprob: -5.629773139953613
    3. 'range' → logprob: -7.879773139953613
    4. '[(' → logprob: -8.754773139953613
    5. '           ' → logprob: -9.129773139953613
    6. 'place' → logprob: -9.379773139953613
    7. '   ' → logprob: -9.504773139953613
    8. 'r' → logprob: -9.504773139953613
    9. '(' → logprob: -9.629773139953613
    10. '                   ' → logprob: -9.754773139953613

Token 690: '_coords' (ID: 77948)
  Prédit: '_coords'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coords' → logprob: -0.00025204161647707224
    2. 'coords' → logprob: -8.375251770019531
    3. 'Coords' → logprob: -11.375251770019531
    4. '
' → logprob: -12.875251770019531
    5. 'variant' → logprob: -13.125251770019531
    6. '.coords' → logprob: -13.875251770019531
    7. 'block' → logprob: -14.125251770019531
    8. '       ' → logprob: -14.375251770019531
    9. '   ' → logprob: -14.375251770019531
    10. '(coords' → logprob: -14.875251770019531

Token 691: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.365225613117218
    2. '               ' → logprob: -1.3652255535125732
    3. ':' → logprob: -3.1152255535125732
    4. '           ' → logprob: -5.365225791931152
    5. '):
' → logprob: -6.990225791931152
    6. ',' → logprob: -7.740225791931152
    7. 'new' → logprob: -10.490225791931152
    8. ')' → logprob: -10.740225791931152
    9. '                   ' → logprob: -10.740225791931152
    10. ':
' → logprob: -10.990225791931152

Token 692: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004097003838978708
    2. ' new' → logprob: -7.8754096031188965
    3. '           ' → logprob: -11.750410079956055
    4. '<|end|>' → logprob: -12.500410079956055
    5. '
' → logprob: -12.625410079956055
    6. ',' → logprob: -13.000410079956055
    7. '   ' → logprob: -13.125410079956055
    8. 'new' → logprob: -13.250410079956055
    9. '                   ' → logprob: -13.500410079956055
    10. '       ' → logprob: -13.750410079956055

Token 693: ' rr' (ID: 54129)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.9931814074516296
    2. ' new' → logprob: -1.1181814670562744
    3. '           ' → logprob: -1.2431814670562744
    4. 'rr' (adapté à ' rr') → logprob: -4.868181228637695
    5. ' rr' → logprob: -5.368181228637695
    6. '               ' → logprob: -6.493181228637695
    7. 'r' → logprob: -8.993181228637695
    8. '   ' → logprob: -9.243181228637695
    9. '                   ' → logprob: -9.868181228637695
    10. ' r' → logprob: -10.868181228637695

Token 694: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05461639165878296
    2. '=' → logprob: -3.0546164512634277
    3. '[r' → logprob: -6.054616451263428
    4. '=r' → logprob: -7.054616451263428
    5. '0' → logprob: -7.554616451263428
    6. ',' → logprob: -7.929616451263428
    7. '][' → logprob: -8.05461597442627
    8. ' +=' → logprob: -8.17961597442627
    9. '[' → logprob: -8.42961597442627
    10. '               ' → logprob: -8.55461597442627

Token 695: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0015023599844425917
    2. ' r' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.251502990722656
    4. '(r' → logprob: -19.626502990722656
    5. '	r' → logprob: -19.751502990722656
    6. '_r' → logprob: -20.251502990722656
    7. ' ' → logprob: -20.626502990722656
    8. '[r' → logprob: -20.626502990722656
    9. '    ' → logprob: -20.751502990722656
    10. '=r' → logprob: -21.251502990722656

Token 696: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008111746865324676
    2. '+' → logprob: -8.000811576843262
    3. 'r' → logprob: -8.500811576843262
    4. ' +' → logprob: -8.625811576843262
    5. '+r' → logprob: -10.000811576843262
    6. ' ' → logprob: -10.750811576843262
    7. ' r' → logprob: -11.125811576843262
    8. '   ' → logprob: -11.750811576843262
    9. '+c' → logprob: -14.375811576843262
    10. 'o' → logprob: -14.750811576843262

Token 697: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132690191268921
    2. '+' → logprob: -1.313269019126892
    3. '+r' → logprob: -12.813268661499023
    4. '+c' → logprob: -12.938268661499023
    5. '               ' → logprob: -14.063268661499023
    6. ',' → logprob: -15.188268661499023
    7. ' ' → logprob: -15.938268661499023
    8. '+
' → logprob: -15.938268661499023
    9. '           ' → logprob: -16.188268661499023
    10. ' ' → logprob: -16.188268661499023

Token 698: ' r' (ID: 428)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01038452796638012
    2. 'r' → logprob: -4.635384559631348
    3. ' c' → logprob: -7.385384559631348
    4. ' r' → logprob: -12.260384559631348
    5. '   ' → logprob: -13.635384559631348
    6. 'rr' → logprob: -14.010384559631348
    7. '           ' → logprob: -15.260384559631348
    8. ' ' → logprob: -15.510384559631348
    9. '    ' → logprob: -15.510384559631348
    10. ')c' → logprob: -15.510384559631348

Token 699: '
' (ID: 198)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.08212874084711075
    2. '               ' → logprob: -2.5821287631988525
    3. '[c' → logprob: -7.082128524780273
    4. ' cc' → logprob: -7.207128524780273
    5. 'c' → logprob: -7.707128524780273
    6. '[' → logprob: -8.207128524780273
    7. '	cc' → logprob: -8.332128524780273
    8. '(cc' → logprob: -8.457128524780273
    9. '           ' → logprob: -8.832128524780273
    10. '][' → logprob: -8.832128524780273

Token 700: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010472200810909271
    2. ' new' → logprob: -7.126047134399414
    3. 'new' → logprob: -8.501047134399414
    4. '           ' → logprob: -11.376047134399414
    5. 'cc' → logprob: -11.501047134399414
    6. ' cc' → logprob: -12.126047134399414
    7. '              ' → logprob: -13.001047134399414
    8. '                   ' → logprob: -13.126047134399414
    9. ' c' → logprob: -13.376047134399414
    10. '
' → logprob: -13.376047134399414

Token 701: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' (adapté à ' cc') → logprob: -1.688212614681106e-05
    2. ' cc' → logprob: -11.000017166137695
    3. '	cc' → logprob: -15.750017166137695
    4. '               ' → logprob: -17.625017166137695
    5. '(cc' → logprob: -19.125017166137695
    6. '           ' → logprob: -20.000017166137695
    7. '   ' → logprob: -20.125017166137695
    8. '                   ' → logprob: -20.625017166137695
    9. '_cc' → logprob: -21.375017166137695
    10. '       ' → logprob: -21.375017166137695

Token 702: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4903603494167328
    2. '=' → logprob: -0.9903603792190552
    3. '0' → logprob: -4.490360260009766
    4. '               ' → logprob: -6.240360260009766
    5. '[' → logprob: -6.365360260009766
    6. '                   ' → logprob: -7.490360260009766
    7. '                ' → logprob: -8.865360260009766
    8. ' +=' → logprob: -8.865360260009766
    9. '           ' → logprob: -9.115360260009766
    10. ']' → logprob: -10.115360260009766

Token 703: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007299474673345685
    2. ' c' → logprob: -7.250730037689209
    3. 'cc' → logprob: -11.12572956085205
    4. '   ' → logprob: -12.50072956085205
    5. '           ' → logprob: -14.37572956085205
    6. '               ' → logprob: -15.75072956085205
    7. '    ' → logprob: -15.75072956085205
    8. '       ' → logprob: -15.87572956085205
    9. ' ' → logprob: -16.250730514526367
    10. ' cc' → logprob: -16.250730514526367

Token 704: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043925188947468996
    2. '+' → logprob: -9.375439643859863
    3. '           ' → logprob: -9.375439643859863
    4. 'c' → logprob: -9.625439643859863
    5. '               ' → logprob: -9.875439643859863
    6. 'cc' → logprob: -10.125439643859863
    7. '        ' → logprob: -10.875439643859863
    8. '[c' → logprob: -11.000439643859863
    9. ' ' → logprob: -11.250439643859863
    10. '       ' → logprob: -11.375439643859863

Token 705: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31329071521759033
    2. '+' → logprob: -1.3132907152175903
    3. '[' → logprob: -11.1882905960083
    4. '               ' → logprob: -12.6882905960083
    5. '0' → logprob: -12.9382905960083
    6. '           ' → logprob: -13.4382905960083
    7. '=' → logprob: -13.4382905960083
    8. '[c' → logprob: -14.0632905960083
    9. '+
' → logprob: -14.1882905960083
    10. '+c' → logprob: -14.3132905960083

Token 706: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003863438032567501
    2. ' c' → logprob: -8.250386238098145
    3. 'cc' → logprob: -9.000386238098145
    4. '   ' → logprob: -14.875386238098145
    5. ' cc' → logprob: -15.500386238098145
    6. '0' → logprob: -15.750386238098145
    7. '	c' → logprob: -15.875386238098145
    8. '
' → logprob: -16.00038719177246
    9. '(c' → logprob: -16.25038719177246
    10. '       ' → logprob: -16.25038719177246

Token 707: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8361690044403076
    2. '           ' → logprob: -1.4611690044403076
    3. ' new' → logprob: -1.9611690044403076
    4. 'new' → logprob: -2.0861690044403076
    5. '                   ' → logprob: -3.5861690044403076
    6. ' =' → logprob: -4.336169242858887
    7. '=' → logprob: -4.586169242858887
    8. ']' → logprob: -4.961169242858887
    9. '[new' → logprob: -5.086169242858887
    10. '=new' → logprob: -7.336169242858887

Token 708: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01137541327625513
    2. 'new' → logprob: -4.886375427246094
    3. ' new' → logprob: -5.886375427246094
    4. '                   ' → logprob: -7.386375427246094
    5. ' =' → logprob: -9.136375427246094
    6. '=' → logprob: -9.386375427246094
    7. '           ' → logprob: -9.636375427246094
    8. '```' → logprob: -9.886375427246094
    9. '
' → logprob: -10.761375427246094
    10. '                
' → logprob: -11.886375427246094

Token 709: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.011055956594645977
    2. ' new' → logprob: -4.511055946350098
    3. '                   ' → logprob: -12.261055946350098
    4. '           ' → logprob: -13.136055946350098
    5. '               ' → logprob: -13.511055946350098
    6. '_new' → logprob: -17.636056900024414
    7. '                       ' → logprob: -17.761056900024414
    8. '   ' → logprob: -17.886056900024414
    9. '	new' → logprob: -18.011056900024414
    10. '#' → logprob: -18.636056900024414

Token 710: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -6.704273118884885e-07
    2. 'board' → logprob: -15.250000953674316
    3. '_BOARD' → logprob: -15.500000953674316
    4. '_' → logprob: -15.750000953674316
    5. '_bo' → logprob: -17.5
    6. '[' → logprob: -17.625
    7. 'Board' → logprob: -18.0
    8. '	board' → logprob: -18.625
    9. ' board' → logprob: -18.75
    10. '   ' → logprob: -19.125

Token 711: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.75
    3. '           ' → logprob: -17.25
    4. 'rr' → logprob: -17.75
    5. '   ' → logprob: -18.0
    6. '       ' → logprob: -18.125
    7. '\[' → logprob: -18.5
    8. '[r' → logprob: -18.75
    9. '
' → logprob: -18.875
    10. '][' → logprob: -19.375

Token 712: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -7.703443770878948e-06
    2. ' rr' → logprob: -12.000007629394531
    3. '(rr' → logprob: -14.250007629394531
    4. '[' → logprob: -15.000007629394531
    5. '_rr' → logprob: -15.375007629394531
    6. 'r' → logprob: -15.375007629394531
    7. 'rrrr' → logprob: -17.75000762939453
    8. '           ' → logprob: -18.37500762939453
    9. '   ' → logprob: -19.00000762939453
    10. '
' → logprob: -19.12500762939453

Token 713: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04866219684481621
    2. '[' → logprob: -3.0486621856689453
    3. ']' → logprob: -10.548662185668945
    4. ''][' → logprob: -10.673662185668945
    5. '               ' → logprob: -12.298662185668945
    6. ' ][' → logprob: -12.298662185668945
    7. '           ' → logprob: -12.673662185668945
    8. '"][' → logprob: -12.798662185668945
    9. 'cc' → logprob: -13.048662185668945
    10. '[c' → logprob: -13.298662185668945

Token 714: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -2.696889623621246e-06
    2. 'c' → logprob: -13.00000286102295
    3. ' cc' → logprob: -14.87500286102295
    4. '	cc' → logprob: -18.625001907348633
    5. 'ccc' → logprob: -19.625001907348633
    6. '(cc' → logprob: -20.000001907348633
    7. '_cc' → logprob: -20.625001907348633
    8. '=' → logprob: -20.625001907348633
    9. 'ccb' → logprob: -21.000001907348633
    10. '#' → logprob: -21.250001907348633

Token 715: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003108430653810501
    2. ']=' → logprob: -5.878108501434326
    3. '=' → logprob: -8.253108024597168
    4. ']='' → logprob: -11.003108024597168
    5. ' ]' → logprob: -11.378108024597168
    6. '='#' → logprob: -12.378108024597168
    7. ' =' → logprob: -12.878108024597168
    8. ']==' → logprob: -13.128108024597168
    9. '']' → logprob: -13.378108024597168
    10. '[' → logprob: -13.503108024597168

Token 716: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015241486253216863
    2. ' =' → logprob: -6.501523971557617
    3. '='#' → logprob: -10.876523971557617
    4. ']' → logprob: -13.126523971557617
    5. '#' → logprob: -15.251523971557617
    6. '=
' → logprob: -15.876523971557617
    7. ']=' → logprob: -16.001523971557617
    8. '=#' → logprob: -16.001523971557617
    9. ')' → logprob: -16.376523971557617
    10. '[' → logprob: -16.626523971557617

Token 717: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -3.1782583391759545e-05
    2. ' '#'' → logprob: -11.250031471252441
    3. '#' → logprob: -11.500031471252441
    4. ''' → logprob: -12.375031471252441
    5. '"#' → logprob: -12.875031471252441
    6. ''*' → logprob: -14.250031471252441
    7. '('#' → logprob: -15.000031471252441
    8. '`' → logprob: -15.500031471252441
    9. '','#' → logprob: -15.625031471252441
    10. '')' → logprob: -16.500032424926758

Token 718: ''
' (ID: 2207)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0188642740249634
    2. ')' → logprob: -1.1438642740249634
    3. '<|end|>' → logprob: -1.6438642740249634
    4. '           ' → logprob: -2.643864154815674
    5. ')
' → logprob: -3.643864154815674
    6. '       ' → logprob: -5.143864154815674
    7. ']' → logprob: -5.268864154815674
    8. 'return' → logprob: -5.393864154815674
    9. '```' → logprob: -5.768864154815674
    10. '')' → logprob: -6.018864154815674

Token 719: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003933768020942807
    2. ' return' → logprob: -9.00039291381836
    3. '
' → logprob: -9.12539291381836
    4. '<|end|>' → logprob: -9.75039291381836
    5. '       ' → logprob: -9.87539291381836
    6. 'return' → logprob: -10.37539291381836
    7. '		' → logprob: -11.62539291381836
    8. '          ' → logprob: -13.50039291381836
    9. '    
' → logprob: -13.62539291381836
    10. '   ' → logprob: -13.75039291381836

Token 720: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3295861780643463
    2. 'return' (adapté à ' return') → logprob: -1.704586148262024
    3. ' return' → logprob: -2.9545862674713135
    4. '           ' → logprob: -3.0795862674713135
    5. '   ' → logprob: -7.829586029052734
    6. '
' → logprob: -8.454586029052734
    7. '<|end|>' → logprob: -9.079586029052734
    8. '	return' → logprob: -9.579586029052734
    9. '               ' → logprob: -11.329586029052734
    10. '```' → logprob: -11.454586029052734

Token 721: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.004078401252627373
    2. ' new' → logprob: -5.504078388214111
    3. '[new' → logprob: -18.129077911376953
    4. '	new' → logprob: -21.254077911376953
    5. '   ' → logprob: -22.129077911376953
    6. '[' → logprob: -22.879077911376953
    7. ' ' → logprob: -23.504077911376953
    8. '_new' → logprob: -23.754077911376953
    9. '新' → logprob: -23.754077911376953
    10. '```' → logprob: -23.754077911376953

Token 722: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -4.246537173457909e-06
    2. 'board' → logprob: -12.500003814697266
    3. '_' → logprob: -15.000003814697266
    4. '_bo' → logprob: -17.000003814697266
    5. '_block' → logprob: -17.625003814697266
    6. 'new' → logprob: -18.625003814697266
    7. '_BOARD' → logprob: -18.750003814697266
    8. ' board' → logprob: -18.875003814697266
    9. '_b' → logprob: -19.125003814697266
    10. 'Board' → logprob: -19.750003814697266

Token 723: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 724: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014050206169486046
    2. '<|end|>' → logprob: -5.264050006866455
    3. '   ' → logprob: -5.639050006866455
    4. '
' → logprob: -5.639050006866455
    5. '        
' → logprob: -7.514050006866455
    6. '```' → logprob: -8.514050483703613
    7. '    
' → logprob: -8.639050483703613
    8. '<|end|>' → logprob: -9.139050483703613
    9. 'for' → logprob: -9.514050483703613
    10. '           ' → logprob: -9.639050483703613

Token 725: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47483623027801514
    2. 'max' → logprob: -1.9748362302780151
    3. 'score' → logprob: -2.0998363494873047
    4. 'best' → logprob: -3.0998363494873047
    5. 'result' → logprob: -3.7248363494873047
    6. 'answer' → logprob: -3.9748363494873047
    7. 'count' → logprob: -4.599836349487305
    8. 'ans' → logprob: -5.849836349487305
    9. 'valid' → logprob: -5.974836349487305
    10. '   ' → logprob: -6.099836349487305

Token 726: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0876729488372803
    2. ' count' → logprob: -1.5876729488372803
    3. ' find' → logprob: -2.4626729488372803
    4. 'max' → logprob: -2.7126729488372803
    5. 'score' → logprob: -2.7126729488372803
    6. 'solve' → logprob: -3.2126729488372803
    7. ' max' → logprob: -3.3376729488372803
    8. 'find' → logprob: -3.7126729488372803
    9. ' can' → logprob: -4.212673187255859
    10. 'dfs' → logprob: -4.212673187255859

Token 727: '_full' (ID: 36973)
  Prédit: '_hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_hash' → logprob: -1.1625866889953613
    2. '_' → logprob: -1.2875866889953613
    3. '_blocks' → logprob: -1.7875866889953613
    4. '_f' → logprob: -1.9125866889953613
    5. '_empty' → logprob: -3.1625866889953613
    6. '_cells' → logprob: -4.287586688995361
    7. '_fill' → logprob: -4.287586688995361
    8. '_positions' → logprob: -5.537586688995361
    9. '_places' → logprob: -5.787586688995361
    10. '_free' → logprob: -5.912586688995361

Token 728: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.018072091042995453
    2. '_lines' → logprob: -4.143072128295898
    3. 'rows' → logprob: -6.268072128295898
    4. '_row' → logprob: -9.518072128295898
    5. '(rows' → logprob: -10.768072128295898
    6. 'lines' → logprob: -11.768072128295898
    7. '_' → logprob: -12.268072128295898
    8. '_columns' → logprob: -12.268072128295898
    9. '_cols' → logprob: -12.268072128295898
    10. '_line' → logprob: -12.518072128295898

Token 729: '(b' (ID: 3229)
  Prédit: '(board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.5879873037338257
    2. '(new' → logprob: -0.8379873037338257
    3. '(' → logprob: -4.962987422943115
    4. '():' → logprob: -5.712987422943115
    5. '(b' → logprob: -6.837987422943115
    6. '():
' → logprob: -8.462986946105957
    7. '(rows' → logprob: -8.962986946105957
    8. '(r' → logprob: -9.212986946105957
    9. '(row' → logprob: -9.337986946105957
    10. '(
' → logprob: -10.712986946105957

Token 730: '):
' (ID: 1883)
  Prédit: 'oard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oard' → logprob: -0.002075432799756527
    2. '):
' → logprob: -6.8770751953125
    3. '):' → logprob: -8.2520751953125
    4. '(board' → logprob: -8.5020751953125
    5. 'board' → logprob: -8.6270751953125
    6. 'b' → logprob: -9.3770751953125
    7. '   ' → logprob: -9.3770751953125
    8. 'o' → logprob: -9.5020751953125
    9. ')' → logprob: -10.2520751953125
    10. 'd' → logprob: -10.3770751953125

Token 731: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07196485996246338
    2. '       ' → logprob: -2.696964740753174
    3. '   ' → logprob: -7.321964740753174
    4. 'count' → logprob: -7.821964740753174
    5. '
' → logprob: -7.946964740753174
    6. 'rows' → logprob: -8.446965217590332
    7. '```' → logprob: -9.696965217590332
    8. '         ' → logprob: -10.071965217590332
    9. 'for' → logprob: -10.196965217590332
    10. 'return' → logprob: -10.321965217590332

Token 732: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4196726381778717
    2. 'cnt' → logprob: -1.1696726083755493
    3. 'full' → logprob: -4.66967248916626
    4. '           ' → logprob: -4.79467248916626
    5. '       ' → logprob: -5.04467248916626
    6. 'return' → logprob: -5.54467248916626
    7. ' cnt' → logprob: -6.66967248916626
    8. 'rows' → logprob: -7.04467248916626
    9. ' count' → logprob: -7.41967248916626
    10. ' full' → logprob: -7.66967248916626

Token 733: ' Count' (ID: 6789)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3781459331512451
    2. 'return' → logprob: -1.3781459331512451
    3. 'cnt' → logprob: -2.878145933151245
    4. '   ' → logprob: -5.503146171569824
    5. '       ' → logprob: -6.378146171569824
    6. 'def' → logprob: -8.378146171569824
    7. 'sum' → logprob: -8.628146171569824
    8. 'rows' → logprob: -8.878146171569824
    9. 'counter' → logprob: -9.503146171569824
    10. ' return' → logprob: -10.128146171569824

Token 734: ' how' (ID: 1495)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.22559091448783875
    2. ' sum' → logprob: -1.9755909442901611
    3. '(' → logprob: -3.850590944290161
    4. 'full' → logprob: -4.475590705871582
    5. '   ' → logprob: -4.725590705871582
    6. '(sum' → logprob: -4.850590705871582
    7. 'cnt' → logprob: -5.600590705871582
    8. 'def' → logprob: -5.850590705871582
    9. ' full' → logprob: -6.100590705871582
    10. 'return' → logprob: -6.725590705871582

Token 735: ' many' (ID: 1991)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7581462860107422
    2. 'many' → logprob: -1.1331462860107422
    3. '(len' → logprob: -3.258146286010742
    4. ' many' → logprob: -3.383146286010742
    5. '=' → logprob: -3.758146286010742
    6. 'sum' → logprob: -4.133146286010742
    7. 'len' → logprob: -4.383146286010742
    8. '       ' → logprob: -4.633146286010742
    9. '(sum' → logprob: -4.633146286010742
    10. '(' → logprob: -4.633146286010742

Token 736: ' full' (ID: 3149)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.3017532229423523
    2. 'full' → logprob: -2.176753282546997
    3. 'row' → logprob: -2.676753282546997
    4. 'r' → logprob: -3.676753282546997
    5. ' full' → logprob: -3.676753282546997
    6. ' rows' → logprob: -4.301753044128418
    7. '   ' → logprob: -4.801753044128418
    8. 'for' → logprob: -6.926753044128418
    9. ' row' → logprob: -7.301753044128418
    10. 'lines' → logprob: -7.301753044128418

Token 737: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.1771772801876068
    2. '_rows' → logprob: -1.9271773099899292
    3. ' rows' → logprob: -4.177177429199219
    4. 'lines' → logprob: -7.427177429199219
    5. '_lines' → logprob: -8.052177429199219
    6. '   ' → logprob: -8.427177429199219
    7. '(rows' → logprob: -9.427177429199219
    8. 'r' → logprob: -9.552177429199219
    9. '	rows' → logprob: -9.677177429199219
    10. ' lines' → logprob: -9.802177429199219

Token 738: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22906318306922913
    2. ' =' → logprob: -1.6040631532669067
    3. '           ' → logprob: -6.729063034057617
    4. '       ' → logprob: -7.104063034057617
    5. ' are' → logprob: -7.604063034057617
    6. '   ' → logprob: -8.104063034057617
    7. 'are' → logprob: -8.354063034057617
    8. 'for' → logprob: -8.979063034057617
    9. 'with' → logprob: -9.479063034057617
    10. ' in' → logprob: -9.729063034057617

Token 739: 'all' (ID: 586)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.033207718282938004
    2. 'all' → logprob: -3.658207654953003
    3. '   ' → logprob: -5.908207893371582
    4. '       ' → logprob: -6.908207893371582
    5. '           ' → logprob: -7.158207893371582
    6. 'range' → logprob: -7.533207893371582
    7. '1' → logprob: -7.783207893371582
    8. 'r' → logprob: -8.158207893371582
    9. 'rows' → logprob: -8.283207893371582
    10. ')' → logprob: -8.408207893371582

Token 740: ' '#' (ID: 11284)
  Prédit: '('#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('#' → logprob: -0.01795055903494358
    2. '(ch' → logprob: -5.017950534820557
    3. ''#' → logprob: -5.267950534820557
    4. '(c' → logprob: -6.517950534820557
    5. 'cells' → logprob: -6.767950534820557
    6. 'c' → logprob: -7.267950534820557
    7. 'ch' → logprob: -7.392950534820557
    8. '(' → logprob: -7.517950534820557
    9. '(cell' → logprob: -8.017951011657715
    10. ' '#'' → logprob: -8.642951011657715

Token 741: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0009463535388931632
    2. ')' → logprob: -7.375946521759033
    3. ''' → logprob: -8.375946044921875
    4. '')
' → logprob: -10.250946044921875
    5. ''s' → logprob: -11.000946044921875
    6. '.')' → logprob: -11.875946044921875
    7. ']' → logprob: -12.250946044921875
    8. 'def' → logprob: -12.750946044921875
    9. ')'' → logprob: -12.750946044921875
    10. '   ' → logprob: -13.250946044921875

Token 742: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7917425632476807
    2. ' =' → logprob: -1.4167425632476807
    3. '           ' → logprob: -2.2917425632476807
    4. '       ' → logprob: -2.7917425632476807
    5. ' are' → logprob: -2.9167425632476807
    6. ' in' → logprob: -3.1667425632476807
    7. '   ' → logprob: -4.166742324829102
    8. '==' → logprob: -4.916742324829102
    9. ' ==' → logprob: -5.041742324829102
    10. 'in' → logprob: -5.666742324829102

Token 743: ' this' (ID: 495)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003178544342517853
    2. ' b' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.878178596496582
    4. 'range' → logprob: -15.503178596496582
    5. '       ' → logprob: -15.628178596496582
    6. ' range' → logprob: -17.003177642822266
    7. '
' → logprob: -17.253177642822266
    8. '           ' → logprob: -17.753177642822266
    9. '    ' → logprob: -18.503177642822266
    10. '[b' → logprob: -18.753177642822266

Token 744: ' board' (ID: 6796)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02184334024786949
    2. ' b' → logprob: -4.146843433380127
    3. 'board' → logprob: -5.271843433380127
    4. '       ' → logprob: -8.146842956542969
    5. ' board' → logprob: -9.146842956542969
    6. '   ' → logprob: -9.646842956542969
    7. '           ' → logprob: -9.771842956542969
    8. '
' → logprob: -9.896842956542969
    9. 'def' → logprob: -10.521842956542969
    10. '_board' → logprob: -10.646842956542969

Token 745: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.781022846698761
    2. '(b' → logprob: -1.2810227870941162
    3. '           ' → logprob: -2.656022787094116
    4. ':
' → logprob: -2.906022787094116
    5. '
' → logprob: -3.031022787094116
    6. '(' → logprob: -3.156022787094116
    7. '   ' → logprob: -3.531022787094116
    8. ':' → logprob: -4.781023025512695
    9. '(rows' → logprob: -5.781023025512695
    10. '(
' → logprob: -6.531023025512695

Token 746: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014693187549710274
    2. '           ' → logprob: -4.889693260192871
    3. '   ' → logprob: -5.014693260192871
    4. 'def' → logprob: -9.389693260192871
    5. ' lines' → logprob: -9.514693260192871
    6. '
' → logprob: -9.889693260192871
    7. '	   ' → logprob: -10.139693260192871
    8. 'count' → logprob: -10.389693260192871
    9. '```' → logprob: -10.514693260192871
    10. '	' → logprob: -10.639693260192871

Token 747: ' cnt' (ID: 27340)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07993395626544952
    2. 'cnt' (adapté à ' cnt') → logprob: -2.9549338817596436
    3. 'full' → logprob: -4.454934120178223
    4. '       ' → logprob: -4.954934120178223
    5. '           ' → logprob: -5.704934120178223
    6. ' count' → logprob: -6.954934120178223
    7. 'return' → logprob: -7.829934120178223
    8. 'total' → logprob: -7.954934120178223
    9. ' full' → logprob: -8.204934120178223
    10. 'counter' → logprob: -8.454934120178223

Token 748: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804229199886322
    2. ' =' → logprob: -3.2880423069000244
    3. ' ' → logprob: -15.038042068481445
    4. ',' → logprob: -15.288042068481445
    5. '   ' → logprob: -15.538042068481445
    6. '  ' → logprob: -16.788042068481445
    7. '=
' → logprob: -17.788042068481445
    8. 's' → logprob: -18.038042068481445
    9. '_=' → logprob: -18.288042068481445
    10. ')' → logprob: -18.538042068481445

Token 749: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016384923947043717
    2. ' ' → logprob: -8.750164031982422
    3. 'sum' → logprob: -12.375164031982422
    4. '   ' → logprob: -14.125164031982422
    5. ' sum' → logprob: -15.250164031982422
    6. 'len' → logprob: -16.750164031982422
    7. 'b' → logprob: -17.000164031982422
    8. '       ' → logprob: -17.125164031982422
    9. '=' → logprob: -18.500164031982422
    10. '  ' → logprob: -18.625164031982422

Token 750: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002614550176076591
    2. 'sum' → logprob: -8.250261306762695
    3. ' ' → logprob: -15.875261306762695
    4. 'b' → logprob: -17.000261306762695
    5. 'len' → logprob: -17.000261306762695
    6. ' sum' → logprob: -17.000261306762695
    7. 'board' → logprob: -18.625261306762695
    8. '   ' → logprob: -18.875261306762695
    9. '
' → logprob: -20.250261306762695
    10. '1' → logprob: -20.750261306762695

Token 751: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1812523901462555
    2. '
' → logprob: -1.806252360343933
    3. 'for' → logprob: -7.681252479553223
    4. ' for' → logprob: -7.806252479553223
    5. '       ' → logprob: -7.931252479553223
    6. '   ' → logprob: -9.306252479553223
    7. '\n' → logprob: -10.056252479553223
    8. '               ' → logprob: -10.181252479553223
    9. '
' → logprob: -10.556252479553223
    10. '                   ' → logprob: -10.806252479553223

Token 752: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4572039544582367
    2. '           ' → logprob: -1.332203984260559
    3. '       ' → logprob: -2.3322038650512695
    4. ' for' → logprob: -5.9572038650512695
    5. 'for' → logprob: -6.9572038650512695
    6. '   ' → logprob: -7.4572038650512695
    7. '<|end|>' → logprob: -7.4572038650512695
    8. '\n' → logprob: -8.08220386505127
    9. '
' → logprob: -8.20720386505127
    10. '               ' → logprob: -8.58220386505127

Token 753: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00016623330884613097
    2. ' for' → logprob: -9.000165939331055
    3. '           ' → logprob: -10.250165939331055
    4. '       ' → logprob: -12.750165939331055
    5. '
' → logprob: -12.875165939331055
    6. '   ' → logprob: -13.250165939331055
    7. '	for' → logprob: -16.125165939331055
    8. '               ' → logprob: -17.375165939331055
    9. '0' → logprob: -19.375165939331055
    10. '```' → logprob: -19.375165939331055

Token 754: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.04860168322920799
    2. ' row' → logprob: -3.0486016273498535
    3. 'r' → logprob: -11.548602104187012
    4. '   ' → logprob: -12.423602104187012
    5. ' ' → logprob: -15.548602104187012
    6. '	row' → logprob: -15.798602104187012
    7. '    ' → logprob: -16.798601150512695
    8. '  ' → logprob: -16.798601150512695
    9. ' r' → logprob: -17.048601150512695
    10. 'rows' → logprob: -17.173601150512695

Token 755: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0380612351000309
    2. 'in' → logprob: -3.2880611419677734
    3. ' ' → logprob: -12.288061141967773
    4. '   ' → logprob: -12.538061141967773
    5. '	in' → logprob: -13.163061141967773
    6. 'b' → logprob: -13.663061141967773
    7. 's' → logprob: -13.663061141967773
    8. '[' → logprob: -13.788061141967773
    9. ')' → logprob: -13.788061141967773
    10. '[:]' → logprob: -14.038061141967773

Token 756: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004307884373702109
    2. ' b' → logprob: -7.750430583953857
    3. 'board' → logprob: -17.750431060791016
    4. '   ' → logprob: -17.875431060791016
    5. '
' → logprob: -18.125431060791016
    6. '    ' → logprob: -18.500431060791016
    7. '	b' → logprob: -19.250431060791016
    8. ')b' → logprob: -19.250431060791016
    9. '
' → logprob: -19.875431060791016
    10. '[b' → logprob: -20.000431060791016

Token 757: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.048673663288354874
    2. ':' → logprob: -3.048673629760742
    3. '):
' → logprob: -10.548673629760742
    4. '           ' → logprob: -10.923673629760742
    5. '       ' → logprob: -11.048673629760742
    6. ':
' → logprob: -11.923673629760742
    7. '   ' → logprob: -12.298673629760742
    8. ' in' → logprob: -12.923673629760742
    9. ':

' → logprob: -12.923673629760742
    10. 'if' → logprob: -13.048673629760742

Token 758: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13402897119522095
    2. '           ' → logprob: -2.384028911590576
    3. ' if' → logprob: -3.509028911590576
    4. 'if' → logprob: -5.759028911590576
    5. '	       ' → logprob: -10.384029388427734
    6. '	           ' → logprob: -10.759029388427734
    7. '       ' → logprob: -10.884029388427734
    8. ',' → logprob: -11.009029388427734
    9. '   ' → logprob: -11.259029388427734
    10. '
' → logprob: -11.384029388427734

Token 759: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5767983198165894
    2. 'if' (adapté à ' if') → logprob: -0.8267983198165894
    3. '               ' → logprob: -7.201798439025879
    4. '           ' → logprob: -9.201798439025879
    5. '                   ' → logprob: -11.826798439025879
    6. '   ' → logprob: -13.451798439025879
    7. '	if' → logprob: -13.576798439025879
    8. 'cnt' → logprob: -14.201798439025879
    9. ' ' → logprob: -14.701798439025879
    10. ' cnt' → logprob: -15.326798439025879

Token 760: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0010381679749116302
    2. ' all' → logprob: -6.876038074493408
    3. '   ' → logprob: -12.876038551330566
    4. ''all' → logprob: -13.501038551330566
    5. 'len' → logprob: -14.876038551330566
    6. ' ' → logprob: -15.251038551330566
    7. '	all' → logprob: -15.751038551330566
    8. '''.' → logprob: -15.751038551330566
    9. '  ' → logprob: -16.12603759765625
    10. ''#' → logprob: -16.50103759765625

Token 761: '(ch' (ID: 15574)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.34179699420928955
    2. '(ch' → logprob: -1.3417969942092896
    3. '(cell' → logprob: -3.591796875
    4. '((' → logprob: -7.466796875
    5. '(x' → logprob: -12.341796875
    6. '(' → logprob: -12.341796875
    7. 'c' → logprob: -13.591796875
    8. 'cell' → logprob: -14.341796875
    9. 'ch' → logprob: -14.591796875
    10. ' (' → logprob: -16.341796875

Token 762: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.15647852420806885
    2. ' ==' → logprob: -2.4064784049987793
    3. '=='' → logprob: -2.9064784049987793
    4. '==
' → logprob: -11.281478881835938
    5. '=="' → logprob: -11.656478881835938
    6. '=' → logprob: -11.781478881835938
    7. '#' → logprob: -12.656478881835938
    8. '   ' → logprob: -12.781478881835938
    9. 's' → logprob: -13.031478881835938
    10. ' =='' → logprob: -13.031478881835938

Token 763: ' '#'' (ID: 139870)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -6.749814019713085e-06
    2. ' '#'' → logprob: -12.125006675720215
    3. '"#' → logprob: -14.000006675720215
    4. '('#' → logprob: -15.875006675720215
    5. ' '#' → logprob: -15.875006675720215
    6. ''' → logprob: -16.12500762939453
    7. '#' → logprob: -17.50000762939453
    8. ':'#' → logprob: -18.50000762939453
    9. ''\' → logprob: -18.62500762939453
    10. '='#' → logprob: -18.62500762939453

Token 764: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5764633417129517
    2. 'for' → logprob: -0.8264633417129517
    3. ')' → logprob: -7.576463222503662
    4. '       ' → logprob: -13.45146369934082
    5. '   ' → logprob: -13.45146369934082
    6. '               ' → logprob: -13.57646369934082
    7. '           ' → logprob: -13.57646369934082
    8. ' ' → logprob: -13.82646369934082
    9. '                   ' → logprob: -13.82646369934082
    10. '	for' → logprob: -13.95146369934082

Token 765: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.06496155261993408
    2. ' ch' → logprob: -2.8149614334106445
    3. 'row' → logprob: -6.0649614334106445
    4. ' row' → logprob: -7.3149614334106445
    5. '	ch' → logprob: -14.064961433410645
    6. ' ' → logprob: -15.814961433410645
    7. '(ch' → logprob: -16.56496238708496
    8. '[ch' → logprob: -17.43996238708496
    9. '  ' → logprob: -17.68996238708496
    10. '   ' → logprob: -17.93996238708496

Token 766: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4784090220928192
    2. 'row' → logprob: -1.2284090518951416
    3. ' row' → logprob: -2.7284090518951416
    4. 'in' → logprob: -3.8534090518951416
    5. 'ch' → logprob: -7.1034088134765625
    6. ' ' → logprob: -9.603408813476562
    7. ' ch' → logprob: -10.478408813476562
    8. ',row' → logprob: -11.978408813476562
    9. '(row' → logprob: -12.103408813476562
    10. '  ' → logprob: -12.478408813476562

Token 767: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0024756586644798517
    2. ' row' → logprob: -6.002475738525391
    3. '	row' → logprob: -19.87747573852539
    4. ' ' → logprob: -20.50247573852539
    5. '(row' → logprob: -20.62747573852539
    6. 'ro' → logprob: -22.12747573852539
    7. '
' → logprob: -22.62747573852539
    8. '   ' → logprob: -22.75247573852539
    9. '[row' → logprob: -22.87747573852539
    10. '  ' → logprob: -23.12747573852539

Token 768: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31330180168151855
    2. '):' → logprob: -1.3133018016815186
    3. '):
' → logprob: -10.438302040100098
    4. ')' → logprob: -12.813302040100098
    5. '               ' → logprob: -13.063302040100098
    6. '           ' → logprob: -13.313302040100098
    7. '                   ' → logprob: -13.438302040100098
    8. '):

' → logprob: -13.563302040100098
    9. '       ' → logprob: -14.938302040100098
    10. ' ):
' → logprob: -15.063302040100098

Token 769: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002457460854202509
    2. '           ' → logprob: -7.127457618713379
    3. ':
' → logprob: -7.252457618713379
    4. '               ' → logprob: -7.377457618713379
    5. '                       ' → logprob: -8.877457618713379
    6. '
' → logprob: -9.627457618713379
    7. ',' → logprob: -10.627457618713379
    8. '		           ' → logprob: -10.752457618713379
    9. ':' → logprob: -11.377457618713379
    10. '```' → logprob: -11.627457618713379

Token 770: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.18465685844421387
    2. '                   ' → logprob: -2.309656858444214
    3. ' cnt' → logprob: -2.934656858444214
    4. '               ' → logprob: -4.559657096862793
    5. '                       ' → logprob: -5.684657096862793
    6. '           ' → logprob: -6.934657096862793
    7. '	cnt' → logprob: -7.434657096862793
    8. '       ' → logprob: -8.309657096862793
    9. '
' → logprob: -8.559657096862793
    10. '   ' → logprob: -8.809657096862793

Token 771: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011066801846027374
    2. ' +=' → logprob: -4.511066913604736
    3. '                   ' → logprob: -11.636066436767578
    4. '+' → logprob: -12.886066436767578
    5. '               ' → logprob: -13.136066436767578
    6. '           ' → logprob: -13.261066436767578
    7. '=' → logprob: -13.261066436767578
    8. ']+=' → logprob: -13.886066436767578
    9. '                    ' → logprob: -15.386066436767578
    10. '                  ' → logprob: -15.386066436767578

Token 772: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.250001907348633
    4. '
' → logprob: -22.125001907348633
    5. '           ' → logprob: -22.250001907348633
    6. '```' → logprob: -23.000001907348633
    7. '       ' → logprob: -23.500001907348633
    8. '+' → logprob: -24.000001907348633
    9. '１' → logprob: -24.750001907348633
    10. ' ' → logprob: -25.125001907348633

Token 773: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -20.625
    4. '```' → logprob: -21.625
    5. '
' → logprob: -21.75
    6. '１' → logprob: -22.625
    7. '+' → logprob: -22.75
    8. '       ' → logprob: -23.5
    9. '2' → logprob: -23.625
    10. '۱' → logprob: -23.625

Token 774: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6766390800476074
    2. '
' → logprob: -0.8016390800476074
    3. '       ' → logprob: -3.9266390800476074
    4. '<|end|>' → logprob: -4.176639080047607
    5. 'return' → logprob: -5.551639080047607
    6. ' return' → logprob: -6.551639080047607
    7. '<|end|>' → logprob: -6.801639080047607
    8. '   ' → logprob: -8.426639556884766
    9. '               ' → logprob: -8.676639556884766
    10. '    
' → logprob: -8.676639556884766

Token 775: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08052421361207962
    2. '       ' → logprob: -2.955524206161499
    3. '
' → logprob: -3.705524206161499
    4. 'return' → logprob: -8.205524444580078
    5. ' return' → logprob: -8.580524444580078
    6. '   ' → logprob: -10.080524444580078
    7. '		' → logprob: -10.080524444580078
    8. '	return' → logprob: -10.330524444580078
    9. '    
' → logprob: -10.455524444580078
    10. '<|end|>' → logprob: -10.580524444580078

Token 776: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2766011357307434
    2. 'return' (adapté à ' return') → logprob: -1.7766010761260986
    3. '
' → logprob: -3.0266010761260986
    4. '           ' → logprob: -4.026601314544678
    5. ' return' → logprob: -5.526601314544678
    6. '   ' → logprob: -6.401601314544678
    7. '	return' → logprob: -8.27660083770752
    8. '
' → logprob: -9.27660083770752
    9. '<|end|>' → logprob: -9.65160083770752
    10. '```' → logprob: -11.40160083770752

Token 777: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.004078639671206474
    2. ' cnt' → logprob: -5.5040788650512695
    3. '	cnt' → logprob: -16.504077911376953
    4. '(cnt' → logprob: -16.754077911376953
    5. '[cnt' → logprob: -18.129077911376953
    6. 'ct' → logprob: -20.379077911376953
    7. 'counter' → logprob: -20.754077911376953
    8. '_cnt' → logprob: -20.879077911376953
    9. '   ' → logprob: -20.879077911376953
    10. '
' → logprob: -21.254077911376953

Token 778: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 779: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028020231053233147
    2. 'best' → logprob: -3.778020143508911
    3. '
' → logprob: -6.15302038192749
    4. ' best' → logprob: -7.15302038192749
    5. '   ' → logprob: -7.27802038192749
    6. 'max' → logprob: -7.40302038192749
    7. '        
' → logprob: -9.028019905090332
    8. '```' → logprob: -9.153019905090332
    9. 'result' → logprob: -9.278019905090332
    10. '_best' → logprob: -9.403019905090332

Token 780: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.11798909306526184
    2. 'best' → logprob: -2.3679890632629395
    3. 'result' → logprob: -4.7429890632629395
    4. 'answer' → logprob: -5.2429890632629395
    5. 'ans' → logprob: -6.3679890632629395
    6. '       ' → logprob: -7.2429890632629395
    7. 'res' → logprob: -7.4929890632629395
    8. 'results' → logprob: -7.8679890632629395
    9. 'answers' → logprob: -9.367989540100098
    10. '   ' → logprob: -9.867989540100098

Token 781: '_score' (ID: 22555)
  Prédit: '_full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_full' → logprob: -0.17315086722373962
    2. '_count' → logprob: -2.4231507778167725
    3. '_rows' → logprob: -2.6731507778167725
    4. '_score' → logprob: -7.923151016235352
    5. '_fill' → logprob: -8.048151016235352
    6. '_blocks' → logprob: -8.298151016235352
    7. '_' → logprob: -8.298151016235352
    8. '_lines' → logprob: -10.423151016235352
    9. '_cnt' → logprob: -10.923151016235352
    10. '_f' → logprob: -10.923151016235352

Token 782: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326186656951904
    2. '=' → logprob: -1.313261866569519
    3. ',' → logprob: -16.313261032104492
    4. ' ' → logprob: -17.313261032104492
    5. '   ' → logprob: -17.938261032104492
    6. '  ' → logprob: -18.563261032104492
    7. ' =
' → logprob: -18.688261032104492
    8. '＝' → logprob: -18.813261032104492
    9. '=max' → logprob: -19.188261032104492
    10. '=

' → logprob: -19.813261032104492

Token 783: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006763683166354895
    2. ' ' → logprob: -5.006763458251953
    3. '-' → logprob: -10.256763458251953
    4. ' -' → logprob: -11.256763458251953
    5. '   ' → logprob: -15.381763458251953
    6. ' ' → logprob: -16.881763458251953
    7. '  ' → logprob: -18.881763458251953
    8. '1' → logprob: -19.069263458251953
    9. '000' → logprob: -19.944263458251953
    10. 'float' → logprob: -20.506763458251953

Token 784: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002728985855355859
    2. 'float' → logprob: -8.250272750854492
    3. '10' → logprob: -11.750272750854492
    4. '100' → logprob: -13.375272750854492
    5. 'int' → logprob: -13.625272750854492
    6. '(' → logprob: -15.375272750854492
    7. '999' → logprob: -15.625272750854492
    8. '2' → logprob: -15.875272750854492
    9. 'import' → logprob: -16.250272750854492
    10. '   ' → logprob: -16.625272750854492

Token 785: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08879374712705612
    2. '       ' → logprob: -2.7137937545776367
    3. '<|end|>' → logprob: -4.963793754577637
    4. '        
' → logprob: -5.338793754577637
    5. ' 
' → logprob: -6.338793754577637
    6. ',' → logprob: -6.588793754577637
    7. '    
' → logprob: -6.588793754577637
    8. '  
' → logprob: -7.088793754577637
    9. ' for' → logprob: -7.588793754577637
    10. '   ' → logprob: -8.213793754577637

Token 786: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3210546374320984
    2. '
' → logprob: -1.8210546970367432
    3. '        
' → logprob: -2.446054697036743
    4. '    
' → logprob: -4.696054458618164
    5. ' 
' → logprob: -5.196054458618164
    6. '  
' → logprob: -5.321054458618164
    7. '<|end|>' → logprob: -5.696054458618164
    8. '   
' → logprob: -7.571054458618164
    9. '		
' → logprob: -7.696054458618164
    10. ' for' → logprob: -8.196054458618164

Token 787: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028371751308441162
    2. 'best' → logprob: -3.778371810913086
    3. 'max' → logprob: -5.528371810913086
    4. '       ' → logprob: -7.528371810913086
    5. ' for' → logprob: -8.778371810913086
    6. 'positions' → logprob: -9.028371810913086
    7. 'block' → logprob: -9.278371810913086
    8. 'result' → logprob: -9.528371810913086
    9. 'answer' → logprob: -10.278371810913086
    10. 'variant' → logprob: -10.403371810913086

Token 788: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00021224225929472595
    2. 'best' → logprob: -8.875212669372559
    3. ' for' → logprob: -10.875212669372559
    4. '   ' → logprob: -11.625212669372559
    5. 'block' → logprob: -11.625212669372559
    6. 'found' → logprob: -11.875212669372559
    7. 'result' → logprob: -11.875212669372559
    8. '       ' → logprob: -12.125212669372559
    9. 'variant' → logprob: -12.375212669372559
    10. 'variants' → logprob: -12.750212669372559

Token 789: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12867626547813416
    2. '   ' → logprob: -2.378676176071167
    3. '           ' → logprob: -4.503676414489746
    4. ' all' → logprob: -5.378676414489746
    5. 'all' → logprob: -5.628676414489746
    6. ':' → logprob: -5.628676414489746
    7. ' placing' → logprob: -6.628676414489746
    8. ' r' → logprob: -6.878676414489746
    9. ' for' → logprob: -7.378676414489746
    10. ' to' → logprob: -7.378676414489746

Token 790: ' place' (ID: 2475)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5402531027793884
    2. 'for' → logprob: -1.0402531623840332
    3. 'place' → logprob: -3.415253162384033
    4. ' range' → logprob: -3.665253162384033
    5. ' for' → logprob: -5.415253162384033
    6. '   ' → logprob: -7.790253162384033
    7. 'r' → logprob: -8.290252685546875
    8. '(range' → logprob: -9.040252685546875
    9. ' place' → logprob: -9.290252685546875
    10. '       ' → logprob: -9.915252685546875

Token 791: ' the' (ID: 290)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.22177842259407043
    2. '       ' → logprob: -2.971778392791748
    3. ' block' → logprob: -3.096778392791748
    4. 'r' → logprob: -3.346778392791748
    5. 'for' → logprob: -3.596778392791748
    6. ' for' → logprob: -4.096778392791748
    7. ' r' → logprob: -4.721778392791748
    8. '   ' → logprob: -6.096778392791748
    9. 'i' → logprob: -6.346778392791748
    10. ' the' → logprob: -6.596778392791748

Token 792: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.002353883581236005
    2. ' block' → logprob: -6.377353668212891
    3. 'b' → logprob: -8.50235366821289
    4. '_' → logprob: -9.00235366821289
    5. 'for' → logprob: -9.12735366821289
    6. '#' → logprob: -9.75235366821289
    7. 'variant' → logprob: -10.62735366821289
    8. '_block' → logprob: -11.00235366821289
    9. ' ' → logprob: -11.12735366821289
    10. '   ' → logprob: -11.25235366821289

Token 793: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2843364477157593
    2. ' at' → logprob: -2.034336566925049
    3. ' for' → logprob: -2.784336566925049
    4. 'for' → logprob: -3.034336566925049
    5. 'at' → logprob: -5.284336566925049
    6. ' in' → logprob: -7.159336566925049
    7. '   ' → logprob: -8.28433609008789
    8. ',' → logprob: -8.53433609008789
    9. 'in' → logprob: -9.28433609008789
    10. ' on' → logprob: -9.28433609008789

Token 794: ' all' (ID: 722)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002763518423307687
    2. ' range' → logprob: -8.250276565551758
    3. 'board' → logprob: -11.875276565551758
    4. 'all' → logprob: -12.250276565551758
    5. '0' → logprob: -13.875276565551758
    6. '   ' → logprob: -14.375276565551758
    7. '[' → logprob: -14.500276565551758
    8. 'for' → logprob: -15.000276565551758
    9. '(range' → logprob: -15.125276565551758
    10. 'r' → logprob: -16.000276565551758

Token 795: ' possible' (ID: 4149)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.13582399487495422
    2. ' positions' → logprob: -2.135823965072632
    3. 'possible' → logprob: -5.010824203491211
    4. 'r' → logprob: -6.885824203491211
    5. ' r' → logprob: -7.760824203491211
    6. ' possible' → logprob: -7.885824203491211
    7. 'board' → logprob: -9.135824203491211
    8. 'valid' → logprob: -9.760824203491211
    9. 'range' → logprob: -10.260824203491211
    10. 'placements' → logprob: -10.635824203491211

Token 796: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.1006530374288559
    2. ' positions' → logprob: -2.3506529331207275
    3. 'places' → logprob: -8.475652694702148
    4. ' r' → logprob: -9.475652694702148
    5. 'r' → logprob: -9.600652694702148
    6. 'locations' → logprob: -10.225652694702148
    7. ' places' → logprob: -10.975652694702148
    8. 'placements' → logprob: -11.100652694702148
    9. ' locations' → logprob: -11.475652694702148
    10. '_positions' → logprob: -12.975652694702148

Token 797: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007563083898276091
    2. ' and' → logprob: -5.75756311416626
    3. '
' → logprob: -6.25756311416626
    4. ' for' → logprob: -6.88256311416626
    5. '   ' → logprob: -7.88256311416626
    6. '<|end|>' → logprob: -8.007562637329102
    7. '        
' → logprob: -8.132562637329102
    8. ',' → logprob: -9.007562637329102
    9. '           ' → logprob: -9.382562637329102
    10. ' 
' → logprob: -9.507562637329102

Token 798: ' rotations' (ID: 141136)
  Prédit: 'variants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'variants' → logprob: -0.23110844194889069
    2. 'for' → logprob: -2.7311084270477295
    3. 'orient' → logprob: -2.9811084270477295
    4. ' orientations' → logprob: -3.4811084270477295
    5. 'rot' → logprob: -3.6061084270477295
    6. ' variants' → logprob: -3.7311084270477295
    7. 'sh' → logprob: -6.356108665466309
    8. 'variant' → logprob: -6.356108665466309
    9. ' for' → logprob: -6.481108665466309
    10. 'positions' → logprob: -6.856108665466309

Token 799: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005392295774072409
    2. '
' → logprob: -5.505392074584961
    3. ' for' → logprob: -7.755392074584961
    4. '        
' → logprob: -7.880392074584961
    5. 'for' → logprob: -8.255392074584961
    6. '   ' → logprob: -9.255392074584961
    7. ',' → logprob: -10.130392074584961
    8. '    
' → logprob: -10.130392074584961
    9. '           ' → logprob: -11.130392074584961
    10. ' and' → logprob: -11.130392074584961

Token 800: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10957306623458862
    2. ' for' → logprob: -2.3595731258392334
    3. 'for' → logprob: -4.734572887420654
    4. '
' → logprob: -8.109573364257812
    5. '   ' → logprob: -9.609573364257812
    6. '        
' → logprob: -9.734573364257812
    7. '<|end|>' → logprob: -9.984573364257812
    8. ' and' → logprob: -10.734573364257812
    9. ',' → logprob: -11.609573364257812
    10. '```' → logprob: -11.734573364257812

Token 801: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.264897882938385
    2. ' for' → logprob: -1.6398978233337402
    3. '       ' → logprob: -3.2648978233337402
    4. '   ' → logprob: -8.514898300170898
    5. 'variant' → logprob: -9.264898300170898
    6. 'variants' → logprob: -9.514898300170898
    7. 'block' → logprob: -9.889898300170898
    8. 'coords' → logprob: -10.389898300170898
    9. ' variants' → logprob: -10.514898300170898
    10. ' coords' → logprob: -11.389898300170898

Token 802: ' variant' (ID: 16914)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.15928752720355988
    2. 'variant' → logprob: -2.534287452697754
    3. ' variant' → logprob: -3.284287452697754
    4. ' r' → logprob: -3.534287452697754
    5. '0' → logprob: -8.284287452697754
    6. 'row' → logprob: -8.284287452697754
    7. 'var' → logprob: -9.034287452697754
    8. 'rot' → logprob: -9.409287452697754
    9. 'rb' → logprob: -9.534287452697754
    10. '   ' → logprob: -9.784287452697754

Token 803: ' in' (ID: 306)
  Prédit: '_coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coords' → logprob: -0.02635127305984497
    2. ' in' → logprob: -3.7763512134552
    3. '_idx' → logprob: -6.526351451873779
    4. '_' → logprob: -7.401351451873779
    5. 'in' → logprob: -7.526351451873779
    6. '_index' → logprob: -8.151350975036621
    7. '_in' → logprob: -10.026350975036621
    8. 's' → logprob: -10.651350975036621
    9. '_i' → logprob: -11.026350975036621
    10. '_tokens' → logprob: -11.151350975036621

Token 804: ' variants' (ID: 46908)
  Prédit: 'variants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variants' → logprob: -4.68022444692906e-05
    2. ' variants' → logprob: -10.000046730041504
    3. 'vari' → logprob: -14.125046730041504
    4. 'variables' → logprob: -15.000046730041504
    5. 'var' → logprob: -15.500046730041504
    6. 'variant' → logprob: -15.750046730041504
    7. 'versions' → logprob: -17.75004768371582
    8. '   ' → logprob: -18.00004768371582
    9. '[' → logprob: -20.00004768371582
    10. ' ' → logprob: -20.87504768371582

Token 805: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10048647969961166
    2. ':
' → logprob: -2.3504865169525146
    3. '           ' → logprob: -8.975486755371094
    4. '       ' → logprob: -9.225486755371094
    5. ',' → logprob: -10.475486755371094
    6. '):
' → logprob: -11.725486755371094
    7. '   ' → logprob: -12.600486755371094
    8. ':
' → logprob: -12.725486755371094
    9. ':

' → logprob: -12.975486755371094
    10. '=' → logprob: -13.350486755371094

Token 806: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014034684747457504
    2. '       ' → logprob: -5.264034748077393
    3. ' for' → logprob: -5.764034748077393
    4. ':' → logprob: -6.139034748077393
    5. '   ' → logprob: -6.389034748077393
    6. ':
' → logprob: -7.014034748077393
    7. ',' → logprob: -7.889034748077393
    8. '               ' → logprob: -9.014034271240234
    9. '
' → logprob: -9.889034271240234
    10. ' and' → logprob: -9.889034271240234

Token 807: ' coords' (ID: 53253)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1340065449476242
    2. ' variant' → logprob: -3.1340065002441406
    3. ' coords' → logprob: -3.3840065002441406
    4. 'coords' (adapté à ' coords') → logprob: -3.8840065002441406
    5. 'variant' → logprob: -4.259006500244141
    6. ' shape' → logprob: -4.884006500244141
    7. '       ' → logprob: -6.634006500244141
    8. '   ' → logprob: -6.759006500244141
    9. 'shape' → logprob: -6.884006500244141
    10. ' for' → logprob: -7.009006500244141

Token 808: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687217235565186
    2. ' =' → logprob: -1.1368721723556519
    3. '＝' → logprob: -15.511872291564941
    4. '_coords' → logprob: -15.511872291564941
    5. '_=' → logprob: -16.261871337890625
    6. '_tokens' → logprob: -16.261871337890625
    7. '_' → logprob: -16.386871337890625
    8. '=_' → logprob: -16.511871337890625
    9. 's' → logprob: -16.636871337890625
    10. '_to' → logprob: -17.011871337890625

Token 809: ' shape' (ID: 9591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.00671584764495492
    2. ' shape' → logprob: -5.006715774536133
    3. '[' → logprob: -15.006715774536133
    4. '   ' → logprob: -17.381715774536133
    5. '(shape' → logprob: -17.756715774536133
    6. '.shape' → logprob: -17.881715774536133
    7. 'set' → logprob: -18.631715774536133
    8. ' [' → logprob: -18.631715774536133
    9. '           ' → logprob: -18.756715774536133
    10. '                   ' → logprob: -18.881715774536133

Token 810: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.4121114822482923e-06
    2. '_coords' → logprob: -12.875003814697266
    3. 'To' → logprob: -14.875003814697266
    4. 'to' → logprob: -15.375003814697266
    5. '_coordinates' → logprob: -16.125003814697266
    6. '_' → logprob: -17.500003814697266
    7. 'coords' → logprob: -17.875003814697266
    8. ')_' → logprob: -18.000003814697266
    9. '_TO' → logprob: -18.375003814697266
    10. 't' → logprob: -18.625003814697266

Token 811: '_coords' (ID: 77948)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.014182545244693756
    2. '_coords' → logprob: -4.2641825675964355
    3. 'Coords' → logprob: -11.014182090759277
    4. '(coords' → logprob: -13.514182090759277
    5. ' coords' → logprob: -14.639182090759277
    6. 'coord' → logprob: -14.639182090759277
    7. 'coordinates' → logprob: -15.014182090759277
    8. '.coords' → logprob: -17.514183044433594
    9. 'variant' → logprob: -18.139183044433594
    10. 'co' → logprob: -18.889183044433594

Token 812: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0280383548888494e-06
    2. '(variable' → logprob: -15.500000953674316
    3. '(
' → logprob: -15.625000953674316
    4. ' (' → logprob: -15.750000953674316
    5. '(var' → logprob: -15.875000953674316
    6. '((' → logprob: -15.875000953674316
    7. '(shape' → logprob: -16.500001907348633
    8. 'variant' → logprob: -16.625001907348633
    9. '(version' → logprob: -17.625001907348633
    10. ')' → logprob: -18.250001907348633

Token 813: 'variant' (ID: 27649)
  Prédit: 'variant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variant' → logprob: -0.0001254693343071267
    2. '(' → logprob: -9.000125885009766
    3. ' variant' → logprob: -13.375125885009766
    4. ')' → logprob: -15.375125885009766
    5. '[' → logprob: -15.375125885009766
    6. '
' → logprob: -17.250125885009766
    7. 'var' → logprob: -18.000125885009766
    8. 'variance' → logprob: -18.000125885009766
    9. '.variant' → logprob: -18.500125885009766
    10. 'variation' → logprob: -19.250125885009766

Token 814: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3166695833206177
    2. ')
' → logprob: -1.3166695833206177
    3. '):
' → logprob: -5.941669464111328
    4. '           ' → logprob: -7.941669464111328
    5. '):' → logprob: -8.066669464111328
    6. ')
' → logprob: -9.691669464111328
    7. ':
' → logprob: -11.816669464111328
    8. ':' → logprob: -11.816669464111328
    9. ')

' → logprob: -11.941669464111328
    10. '   ' → logprob: -12.441669464111328

Token 815: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014794440940022469
    2. ' for' → logprob: -5.38979434967041
    3. ' 
' → logprob: -5.88979434967041
    4. '            
' → logprob: -5.88979434967041
    5. '       ' → logprob: -6.38979434967041
    6. '        
' → logprob: -6.76479434967041
    7. '    
' → logprob: -7.76479434967041
    8. '  
' → logprob: -8.01479434967041
    9. '<|end|>' → logprob: -8.26479434967041
    10. '               ' → logprob: -9.26479434967041

Token 816: ' h' (ID: 312)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02466927468776703
    2. 'for' → logprob: -3.7746691703796387
    3. '           ' → logprob: -6.774669170379639
    4. '       ' → logprob: -8.274669647216797
    5. '
' → logprob: -11.274669647216797
    6. ' 
' → logprob: -12.399669647216797
    7. '               ' → logprob: -13.149669647216797
    8. '   ' → logprob: -13.274669647216797
    9. ' ' → logprob: -14.024669647216797
    10. '         ' → logprob: -14.149669647216797

Token 817: '_var' (ID: 12782)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3750062584877014
    2. ',' → logprob: -1.3750061988830566
    3. '=' → logprob: -3.0000061988830566
    4. '           ' → logprob: -5.000006198883057
    5. '       ' → logprob: -6.375006198883057
    6. 't' → logprob: -7.000006198883057
    7. '   ' → logprob: -8.750006675720215
    8. 'for' → logprob: -9.375006675720215
    9. ' ,' → logprob: -10.125006675720215
    10. 'eight' → logprob: -10.125006675720215

Token 818: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1925826221704483
    2. ',' → logprob: -2.192582607269287
    3. '=' → logprob: -2.817582607269287
    4. '       ' → logprob: -6.692582607269287
    5. 't' → logprob: -7.067582607269287
    6. '   ' → logprob: -7.317582607269287
    7. '           ' → logprob: -7.317582607269287
    8. 'eight' → logprob: -8.817583084106445
    9. 'ight' → logprob: -10.567583084106445
    10. '      ' → logprob: -10.942583084106445

Token 819: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.547789674485102e-05
    2. ' len' → logprob: -10.250035285949707
    3. '(len' → logprob: -16.125036239624023
    4. '[len' → logprob: -18.125036239624023
    5. '=len' → logprob: -18.875036239624023
    6. '	len' → logprob: -21.125036239624023
    7. ',len' → logprob: -21.250036239624023
    8. '   ' → logprob: -22.250036239624023
    9. 'Len' → logprob: -22.250036239624023
    10. '<len' → logprob: -23.500036239624023

Token 820: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010385708883404732
    2. '(coords' → logprob: -4.635385513305664
    3. 'variant' → logprob: -7.385385513305664
    4. 'coords' → logprob: -12.260385513305664
    5. ' variant' → logprob: -14.010385513305664
    6. '(variable' → logprob: -14.260385513305664
    7. '(var' → logprob: -14.385385513305664
    8. '(coord' → logprob: -14.635385513305664
    9. '(
' → logprob: -14.885385513305664
    10. '(co' → logprob: -15.010385513305664

Token 821: 'variant' (ID: 27649)
  Prédit: 'variant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variant' → logprob: -1.6286106983898208e-05
    2. ' variant' → logprob: -11.625016212463379
    3. 'coords' → logprob: -12.250016212463379
    4. '(' → logprob: -13.375016212463379
    5. 'variants' → logprob: -14.500016212463379
    6. 'var' → logprob: -16.250017166137695
    7. '[' → logprob: -16.250017166137695
    8. 'variance' → logprob: -17.125017166137695
    9. '   ' → logprob: -17.250017166137695
    10. 'variation' → logprob: -17.500017166137695

Token 822: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0387447215616703
    2. ')' → logprob: -3.2887446880340576
    3. '           ' → logprob: -7.288744926452637
    4. '[' → logprob: -11.038744926452637
    5. ')
' → logprob: -13.663744926452637
    6. '),' → logprob: -14.413744926452637
    7. '       ' → logprob: -14.663744926452637
    8. '               ' → logprob: -14.788744926452637
    9. ')

' → logprob: -15.538744926452637
    10. ' )
' → logprob: -16.03874397277832

Token 823: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009430267964489758
    2. '       ' → logprob: -8.125943183898926
    3. '<|end|>' → logprob: -8.875943183898926
    4. ' for' → logprob: -9.125943183898926
    5. '            
' → logprob: -9.250943183898926
    6. '  
' → logprob: -10.000943183898926
    7. ' 
' → logprob: -10.000943183898926
    8. '
' → logprob: -10.000943183898926
    9. '               ' → logprob: -10.625943183898926
    10. ' ' → logprob: -10.625943183898926

Token 824: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.3874574601650238
    2. ' w' → logprob: -1.1374574899673462
    3. ' W' → logprob: -8.137457847595215
    4. 'W' → logprob: -8.637457847595215
    5. '           ' → logprob: -9.137457847595215
    6. '   ' → logprob: -12.887457847595215
    7. '	w' → logprob: -13.012457847595215
    8. '_w' → logprob: -13.637457847595215
    9. ' ' → logprob: -14.262457847595215
    10. '       ' → logprob: -14.387457847595215

Token 825: '_var' (ID: 12782)
  Prédit: '_var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_var' → logprob: -0.00013858173042535782
    2. 'var' → logprob: -9.000138282775879
    3. ' =' → logprob: -11.750138282775879
    4. '=' → logprob: -12.750138282775879
    5. '_variant' → logprob: -13.250138282775879
    6. '[var' → logprob: -14.125138282775879
    7. '_' → logprob: -14.875138282775879
    8. '[' → logprob: -15.375138282775879
    9. '_VAR' → logprob: -15.375138282775879
    10. '_vari' → logprob: -15.500138282775879

Token 826: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932852268218994
    2. ' =' → logprob: -0.6932852268218994
    3. '           ' → logprob: -9.06828498840332
    4. '            ' → logprob: -11.94328498840332
    5. ')' → logprob: -12.44328498840332
    6. ' ' → logprob: -12.81828498840332
    7. '   ' → logprob: -13.06828498840332
    8. '=len' → logprob: -13.81828498840332
    9. ',' → logprob: -13.94328498840332
    10. '       ' → logprob: -14.06828498840332

Token 827: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.615255839889869e-05
    2. ' len' → logprob: -9.250096321105957
    3. '(len' → logprob: -18.87509536743164
    4. '[len' → logprob: -21.00009536743164
    5. '   ' → logprob: -21.87509536743164
    6. '	len' → logprob: -22.62509536743164
    7. '=len' → logprob: -23.50009536743164
    8. '           ' → logprob: -24.25009536743164
    9. 'max' → logprob: -24.25009536743164
    10. ' ' → logprob: -24.75009536743164

Token 828: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.5776860184123507e-06
    2. 'variant' → logprob: -12.87500286102295
    3. ' (' → logprob: -17.750001907348633
    4. '[' → logprob: -18.125001907348633
    5. '(var' → logprob: -18.750001907348633
    6. '   ' → logprob: -19.375001907348633
    7. '(variable' → logprob: -19.375001907348633
    8. ' variant' → logprob: -19.500001907348633
    9. '((' → logprob: -19.500001907348633
    10. '(
' → logprob: -20.625001907348633

Token 829: 'variant' (ID: 27649)
  Prédit: 'variant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variant' → logprob: -4.4849443838757e-06
    2. ' variant' → logprob: -12.375004768371582
    3. '[' → logprob: -16.500003814697266
    4. '(' → logprob: -17.750003814697266
    5. '.variant' → logprob: -17.750003814697266
    6. 'variance' → logprob: -18.500003814697266
    7. '   ' → logprob: -18.625003814697266
    8. 'variable' → logprob: -18.625003814697266
    9. '_variant' → logprob: -18.750003814697266
    10. 'variation' → logprob: -19.375003814697266

Token 830: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018214326351881027
    2. ')
' → logprob: -4.018214225769043
    3. '           ' → logprob: -10.143214225769043
    4. '[' → logprob: -12.393214225769043
    5. ')

' → logprob: -12.393214225769043
    6. '   ' → logprob: -12.518214225769043
    7. '       ' → logprob: -12.768214225769043
    8. ' )' → logprob: -12.893214225769043
    9. '               ' → logprob: -14.018214225769043
    10. '):
' → logprob: -14.268214225769043

Token 831: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.875004768371582
    3. '   ' → logprob: -14.000004768371582
    4. '[' → logprob: -14.000004768371582
    5. '-' → logprob: -15.875004768371582
    6. '
' → logprob: -15.875004768371582
    7. 'variant' → logprob: -16.375003814697266
    8. ')' → logprob: -16.875003814697266
    9. '(' → logprob: -17.125003814697266
    10. '           ' → logprob: -17.750003814697266

Token 832: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.251144677400589
    2. '])' → logprob: -1.8761446475982666
    3. ')
' → logprob: -2.7511446475982666
    4. '])
' → logprob: -5.376144886016846
    5. '           ' → logprob: -8.751144409179688
    6. ')]' → logprob: -9.376144409179688
    7. ']' → logprob: -9.626144409179688
    8. '       ' → logprob: -10.376144409179688
    9. ')])' → logprob: -10.376144409179688
    10. ']
' → logprob: -11.376144409179688

Token 833: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005234848940744996
    2. '
' → logprob: -8.750523567199707
    3. '            
' → logprob: -8.875523567199707
    4. '        
' → logprob: -9.375523567199707
    5. '       ' → logprob: -9.875523567199707
    6. ' for' → logprob: -10.375523567199707
    7. '<|end|>' → logprob: -11.125523567199707
    8. '    
' → logprob: -11.250523567199707
    9. '  
' → logprob: -11.625523567199707
    10. '               ' → logprob: -12.625523567199707

Token 834: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6040069460868835
    2. ' for' → logprob: -1.2290070056915283
    3. '       ' → logprob: -2.2290070056915283
    4. 'for' → logprob: -2.9790070056915283
    5. '   ' → logprob: -6.854006767272949
    6. '
' → logprob: -7.229006767272949
    7. '	for' → logprob: -8.85400676727295
    8. '               ' → logprob: -9.72900676727295
    9. '	   ' → logprob: -9.72900676727295
    10. '        
' → logprob: -10.22900676727295

Token 835: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07975564897060394
    2. ' for' → logprob: -2.5797555446624756
    3. '           ' → logprob: -7.079755783081055
    4. '   ' → logprob: -11.329755783081055
    5. '       ' → logprob: -11.454755783081055
    6. '            
' → logprob: -15.329755783081055
    7. '
' → logprob: -15.454755783081055
    8. '	for' → logprob: -15.579755783081055
    9. ' ' → logprob: -15.704755783081055
    10. '```' → logprob: -16.579755783081055

Token 836: ' all' (ID: 722)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24262477457523346
    2. ' for' → logprob: -2.1176247596740723
    3. '           ' → logprob: -3.1176247596740723
    4. 'for' → logprob: -4.117624759674072
    5. ' r' → logprob: -4.242624759674072
    6. 'r' → logprob: -4.492624759674072
    7. '   ' → logprob: -5.617624759674072
    8. '                   ' → logprob: -5.742624759674072
    9. '       ' → logprob: -7.617624759674072
    10. ' to' → logprob: -7.867624759674072

Token 837: ' top' (ID: 2344)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04896180331707001
    2. ' r' → logprob: -3.048961877822876
    3. '           ' → logprob: -8.423961639404297
    4. '               ' → logprob: -9.798961639404297
    5. ' for' → logprob: -10.298961639404297
    6. 'for' → logprob: -10.673961639404297
    7. '                   ' → logprob: -11.423961639404297
    8. '   ' → logprob: -11.548961639404297
    9. 'row' → logprob: -11.923961639404297
    10. 'range' → logprob: -12.548961639404297

Token 838: '-left' (ID: 17007)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1212365627288818
    2. '           ' → logprob: -1.1212365627288818
    3. ',' → logprob: -2.121236562728882
    4. '               ' → logprob: -2.871236562728882
    5. ' in' → logprob: -3.246236562728882
    6. '-' → logprob: -3.746236562728882
    7. 'in' → logprob: -4.121236801147461
    8. '+' → logprob: -4.371236801147461
    9. ' -' → logprob: -4.871236801147461
    10. '                   ' → logprob: -5.121236801147461

Token 839: ' positions' (ID: 15897)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1266992837190628
    2. 'positions' → logprob: -2.376699209213257
    3. ' positions' → logprob: -3.751699209213257
    4. ' r' → logprob: -6.751699447631836
    5. '_r' → logprob: -8.001699447631836
    6. '(r' → logprob: -8.626699447631836
    7. '_positions' → logprob: -8.876699447631836
    8. ' ' → logprob: -9.126699447631836
    9. '   ' → logprob: -9.251699447631836
    10. '+' → logprob: -9.251699447631836

Token 840: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0498233400285244
    2. ' for' → logprob: -3.04982328414917
    3. 'for' → logprob: -7.29982328414917
    4. '
' → logprob: -8.174823760986328
    5. ' in' → logprob: -8.924823760986328
    6. ',' → logprob: -10.174823760986328
    7. '   ' → logprob: -10.674823760986328
    8. '       ' → logprob: -11.049823760986328
    9. '               ' → logprob: -11.424823760986328
    10. '            
' → logprob: -11.424823760986328

Token 841: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03059367835521698
    2. ' r' → logprob: -3.5305936336517334
    3. '0' → logprob: -7.5305938720703125
    4. ')' → logprob: -8.655593872070312
    5. 'range' → logprob: -9.780593872070312
    6. ' for' → logprob: -11.280593872070312
    7. ' range' → logprob: -11.405593872070312
    8. '           ' → logprob: -11.655593872070312
    9. '   ' → logprob: -11.655593872070312
    10. ' ' → logprob: -11.780593872070312

Token 842: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49982133507728577
    2. '0' → logprob: -1.7498213052749634
    3. '=' → logprob: -2.624821424484253
    4. ' ,' → logprob: -2.749821424484253
    5. ' =' → logprob: -2.874821424484253
    6. ')' → logprob: -4.249821186065674
    7. ' in' → logprob: -4.874821186065674
    8. '           ' → logprob: -5.999821186065674
    9. '               ' → logprob: -7.624821186065674
    10. ' ' → logprob: -8.124821662902832

Token 843: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4878169596195221
    2. ')' → logprob: -1.3628169298171997
    3. ' in' → logprob: -2.6128170490264893
    4. '           ' → logprob: -3.2378170490264893
    5. '=' → logprob: -5.11281681060791
    6. 'in' → logprob: -5.86281681060791
    7. '               ' → logprob: -5.86281681060791
    8. '+' → logprob: -6.86281681060791
    9. ' for' → logprob: -7.11281681060791
    10. ' ,' → logprob: -7.36281681060791

Token 844: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026150496676564217
    2. ')' → logprob: -3.7761504650115967
    3. ',' → logprob: -6.026150703430176
    4. '           ' → logprob: -8.901150703430176
    5. ')
' → logprob: -9.151150703430176
    6. '_' → logprob: -10.026150703430176
    7. ' ' → logprob: -10.401150703430176
    8. '
' → logprob: -10.401150703430176
    9. '       ' → logprob: -10.526150703430176
    10. '               ' → logprob: -10.651150703430176

Token 845: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.34363168478012085
    2. ')' → logprob: -1.5936317443847656
    3. '):' → logprob: -2.4686317443847656
    4. '           ' → logprob: -6.343631744384766
    5. ')
' → logprob: -6.968631744384766
    6. '               ' → logprob: -10.468631744384766
    7. '):

' → logprob: -10.468631744384766
    8. '=' → logprob: -10.593631744384766
    9. ' in' → logprob: -10.593631744384766
    10. '):
' → logprob: -10.968631744384766

Token 846: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012136027216911316
    2. ':
' → logprob: -5.137135982513428
    3. '       ' → logprob: -6.387135982513428
    4. ':' → logprob: -6.512135982513428
    5. '               ' → logprob: -6.637135982513428
    6. ' for' → logprob: -6.887135982513428
    7. '                   ' → logprob: -9.012136459350586
    8. '   ' → logprob: -9.137136459350586
    9. 'for' → logprob: -9.387136459350586
    10. '
' → logprob: -9.762136459350586

Token 847: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5978070497512817
    2. '           ' → logprob: -0.8478070497512817
    3. 'for' (adapté à ' for') → logprob: -3.847806930541992
    4. '       ' → logprob: -8.347806930541992
    5. '               ' → logprob: -10.722806930541992
    6. '   ' → logprob: -10.972806930541992
    7. '
' → logprob: -12.597806930541992
    8. '            
' → logprob: -12.972806930541992
    9. ' ' → logprob: -13.097806930541992
    10. '                   ' → logprob: -13.097806930541992

Token 848: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.25193241238594055
    2. ' r' → logprob: -1.5019323825836182
    3. '0' → logprob: -13.501932144165039
    4. '   ' → logprob: -14.376932144165039
    5. ' ' → logprob: -14.751932144165039
    6. ' ' → logprob: -15.251932144165039
    7. '	r' → logprob: -15.626932144165039
    8. '_r' → logprob: -16.12693214416504
    9. '    ' → logprob: -16.25193214416504
    10. '```' → logprob: -16.25193214416504

Token 849: '0' (ID: 15)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007139320485293865
    2. '0' → logprob: -5.382139205932617
    3. 'in' → logprob: -6.007139205932617
    4. ' ' → logprob: -10.007139205932617
    5. '	in' → logprob: -13.007139205932617
    6. '_' → logprob: -13.382139205932617
    7. ',' → logprob: -13.757139205932617
    8. '   ' → logprob: -14.507139205932617
    9. ' ,' → logprob: -14.632139205932617
    10. '1' → logprob: -14.632139205932617

Token 850: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02325398102402687
    2. 'in' → logprob: -3.773253917694092
    3. ' ' → logprob: -12.89825439453125
    4. '	in' → logprob: -13.27325439453125
    5. '   ' → logprob: -13.77325439453125
    6. ',' → logprob: -14.52325439453125
    7. ')' → logprob: -14.77325439453125
    8. 'In' → logprob: -14.89825439453125
    9. '0' → logprob: -14.89825439453125
    10. 'range' → logprob: -15.02325439453125

Token 851: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078997299075127
    2. ' range' → logprob: -5.5040788650512695
    3. '0' → logprob: -15.62907886505127
    4. ' ' → logprob: -15.62907886505127
    5. '   ' → logprob: -15.62907886505127
    6. '  ' → logprob: -18.129079818725586
    7. '(range' → logprob: -18.879079818725586
    8. '	range' → logprob: -19.129079818725586
    9. '    ' → logprob: -19.254079818725586
    10. '
' → logprob: -19.629079818725586

Token 852: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -8.947715832618997e-05
    2. 'board' → logprob: -9.625089645385742
    3. '(' → logprob: -10.875089645385742
    4. '0' → logprob: -13.000089645385742
    5. '   ' → logprob: -14.000089645385742
    6. '	board' → logprob: -14.250089645385742
    7. ' board' → logprob: -14.500089645385742
    8. '(-' → logprob: -16.750089645385742
    9. ' ' → logprob: -16.750089645385742
    10. '(len' → logprob: -17.375089645385742

Token 853: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.0005541055579669774
    2. '_cols' → logprob: -7.625554084777832
    3. '       ' → logprob: -11.500554084777832
    4. '   ' → logprob: -11.875554084777832
    5. '_ROWS' → logprob: -12.125554084777832
    6. '_' → logprob: -12.125554084777832
    7. '+' → logprob: -12.250554084777832
    8. ')' → logprob: -12.500554084777832
    9. 'rows' → logprob: -12.625554084777832
    10. '0' → logprob: -12.750554084777832

Token 854: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6808304190635681
    2. '):
' → logprob: -1.055830478668213
    3. '-' → logprob: -2.805830478668213
    4. '       ' → logprob: -3.305830478668213
    5. ' -' → logprob: -3.930830478668213
    6. '+' → logprob: -4.055830478668213
    7. '   ' → logprob: -5.055830478668213
    8. '           ' → logprob: -5.805830478668213
    9. ' +' → logprob: -7.680830478668213
    10. ')' → logprob: -7.805830478668213

Token 855: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0003436872211750597
    2. ' h' → logprob: -8.000343322753906
    3. '(h' → logprob: -11.875343322753906
    4. '+h' → logprob: -14.375343322753906
    5. '	h' → logprob: -15.250343322753906
    6. 'max' → logprob: -15.875343322753906
    7. '   ' → logprob: -16.250343322753906
    8. '[h' → logprob: -16.625343322753906
    9. '<h' → logprob: -16.750343322753906
    10. '+' → logprob: -16.750343322753906

Token 856: '_var' (ID: 12782)
  Prédit: '_var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_var' → logprob: -6.670925358776003e-05
    2. 'var' → logprob: -9.750066757202148
    3. '+' → logprob: -12.250066757202148
    4. '       ' → logprob: -13.875066757202148
    5. '   ' → logprob: -14.000066757202148
    6. '           ' → logprob: -15.125066757202148
    7. ')' → logprob: -15.250066757202148
    8. ' +' → logprob: -15.250066757202148
    9. '_VAR' → logprob: -15.750066757202148
    10. '_' → logprob: -15.875066757202148

Token 857: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740819036960602
    2. ' +' → logprob: -0.9740818738937378
    3. '   ' → logprob: -12.599081993103027
    4. '+
' → logprob: -14.349081993103027
    5. ' ' → logprob: -15.099081993103027
    6. ' +
' → logprob: -15.474081993103027
    7. '       ' → logprob: -15.724081993103027
    8. ')+' → logprob: -16.34908103942871
    9. ')' → logprob: -16.59908103942871
    10. '    ' → logprob: -16.84908103942871

Token 858: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.500009536743164
    4. '```' → logprob: -19.875009536743164
    5. '2' → logprob: -20.750009536743164
    6. '  ' → logprob: -21.000009536743164
    7. '
' → logprob: -21.375009536743164
    8. '0' → logprob: -21.812509536743164
    9. ')' → logprob: -21.812509536743164
    10. '    ' → logprob: -22.000009536743164

Token 859: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '
' → logprob: -16.500001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '```' → logprob: -17.375001907348633
    6. '{
' → logprob: -19.000001907348633
    7. '2' → logprob: -19.312501907348633
    8. '

' → logprob: -20.312501907348633
    9. '``' → logprob: -20.312501907348633
    10. '  ' → logprob: -20.375001907348633

Token 860: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.055115047842264175
    2. '):' → logprob: -2.930114984512329
    3. '+' → logprob: -8.93011474609375
    4. '   ' → logprob: -10.55511474609375
    5. '       ' → logprob: -10.80511474609375
    6. '):
' → logprob: -11.30511474609375
    7. ')' → logprob: -11.68011474609375
    8. '           ' → logprob: -11.80511474609375
    9. '```' → logprob: -12.18011474609375
    10. ':' → logprob: -12.43011474609375

Token 861: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07864000648260117
    2. '           ' → logprob: -2.7036399841308594
    3. ':' → logprob: -5.578639984130859
    4. '       ' → logprob: -5.828639984130859
    5. ':
' → logprob: -7.703639984130859
    6. '                   ' → logprob: -8.20363998413086
    7. ' for' → logprob: -8.45363998413086
    8. ',' → logprob: -8.45363998413086
    9. '[' → logprob: -8.95363998413086
    10. '<|end|>' → logprob: -9.32863998413086

Token 862: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03544590622186661
    2. '                   ' → logprob: -3.7854459285736084
    3. 'for' (adapté à ' for') → logprob: -5.285445690155029
    4. '               ' → logprob: -5.410445690155029
    5. '                ' → logprob: -6.035445690155029
    6. '                 ' → logprob: -9.785446166992188
    7. '                    
' → logprob: -10.785446166992188
    8. ' ' → logprob: -10.910446166992188
    9. '                    ' → logprob: -10.910446166992188
    10. ' c' → logprob: -10.910446166992188

Token 863: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6931476593017578
    2. ' c' → logprob: -0.6931476593017578
    3. '               ' → logprob: -15.443147659301758
    4. '                   ' → logprob: -15.818147659301758
    5. '   ' → logprob: -17.318147659301758
    6. '_c' → logprob: -17.318147659301758
    7. '	c' → logprob: -17.568147659301758
    8. ' ' → logprob: -17.693147659301758
    9. '           ' → logprob: -18.443147659301758
    10. '       ' → logprob: -19.068147659301758

Token 864: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.470901229884475e-05
    2. ' in' → logprob: -9.75008487701416
    3. ' ' → logprob: -10.62508487701416
    4. 'in' → logprob: -13.62508487701416
    5. '_' → logprob: -15.50008487701416
    6. 'o' → logprob: -16.500083923339844
    7. '               ' → logprob: -16.750083923339844
    8. '=' → logprob: -16.875083923339844
    9. '                   ' → logprob: -17.000083923339844
    10. ')' → logprob: -17.000083923339844

Token 865: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038042064756155014
    2. 'in' → logprob: -3.2880420684814453
    3. '	in' → logprob: -15.788042068481445
    4. 'In' → logprob: -15.913042068481445
    5. ' ' → logprob: -16.038042068481445
    6. '<|end|>' → logprob: -16.663042068481445
    7. ')' → logprob: -17.413042068481445
    8. '_in' → logprob: -17.413042068481445
    9. ',' → logprob: -17.413042068481445
    10. '   ' → logprob: -17.913042068481445

Token 866: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018151817843317986
    2. ' range' → logprob: -4.018151760101318
    3. '0' → logprob: -13.393152236938477
    4. 'board' → logprob: -15.268152236938477
    5. '(range' → logprob: -16.143152236938477
    6. ' ' → logprob: -17.393152236938477
    7. '   ' → logprob: -19.518152236938477
    8. ' board' → logprob: -20.018152236938477
    9. '(' → logprob: -20.268152236938477
    10. '
' → logprob: -21.143152236938477

Token 867: '(board' (ID: 41261)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03987414389848709
    2. ' range' → logprob: -3.2898740768432617
    3. 'board' → logprob: -6.539874076843262
    4. '(board' → logprob: -7.914874076843262
    5. '(range' → logprob: -11.664874076843262
    6. ' board' → logprob: -11.914874076843262
    7. '0' → logprob: -13.164874076843262
    8. '   ' → logprob: -13.414874076843262
    9. 'in' → logprob: -14.414874076843262
    10. ' in' → logprob: -14.664874076843262

Token 868: '_cols' (ID: 60927)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012781916186213493
    2. '_' → logprob: -4.762782096862793
    3. '+' → logprob: -6.512782096862793
    4. '_cols' → logprob: -7.012782096862793
    5. ' ' → logprob: -7.387782096862793
    6. '   ' → logprob: -8.012782096862793
    7. ' _' → logprob: -9.012782096862793
    8. '_rows' → logprob: -9.262782096862793
    9. 'range' → logprob: -9.387782096862793
    10. ' +' → logprob: -9.512782096862793

Token 869: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0014235681155696511
    2. '-' → logprob: -6.626423358917236
    3. '-w' → logprob: -9.626423835754395
    4. '+' → logprob: -11.251423835754395
    5. ' +' → logprob: -12.501423835754395
    6. ' ' → logprob: -13.251423835754395
    7. '   ' → logprob: -13.501423835754395
    8. ',' → logprob: -13.751423835754395
    9. '-r' → logprob: -13.751423835754395
    10. '               ' → logprob: -13.876423835754395

Token 870: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.03318822383880615
    2. ' w' → logprob: -3.6581883430480957
    3. '(w' → logprob: -5.033188343048096
    4. '1' → logprob: -8.158187866210938
    5. '   ' → logprob: -10.283187866210938
    6. ' (' → logprob: -11.408187866210938
    7. '(' → logprob: -12.533187866210938
    8. ' ' → logprob: -13.033187866210938
    9. '           ' → logprob: -13.658187866210938
    10. '       ' → logprob: -13.783187866210938

Token 871: '_var' (ID: 12782)
  Prédit: '_var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_var' → logprob: -9.245724504580721e-05
    2. 'var' → logprob: -9.375092506408691
    3. '0' → logprob: -12.125092506408691
    4. '+' → logprob: -13.875092506408691
    5. '   ' → logprob: -15.000092506408691
    6. '_' → logprob: -15.125092506408691
    7. ')' → logprob: -15.625092506408691
    8. 'Var' → logprob: -16.375091552734375
    9. '
' → logprob: -16.750091552734375
    10. '```' → logprob: -17.000091552734375

Token 872: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20142921805381775
    2. ' +' → logprob: -1.7014292478561401
    3. '):
' → logprob: -12.20142936706543
    4. '+
' → logprob: -12.82642936706543
    5. '):' → logprob: -12.82642936706543
    6. ')' → logprob: -13.57642936706543
    7. ' +
' → logprob: -13.70142936706543
    8. ')+' → logprob: -13.95142936706543
    9. '+)' → logprob: -14.70142936706543
    10. '0' → logprob: -14.95142936706543

Token 873: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002319071936653927
    2. ' ' → logprob: -8.375231742858887
    3. '   ' → logprob: -14.375231742858887
    4. '+' → logprob: -14.875231742858887
    5. '```' → logprob: -16.375232696533203
    6. ')' → logprob: -16.625232696533203
    7. '１' → logprob: -17.875232696533203
    8. '  ' → logprob: -17.875232696533203
    9. '     ' → logprob: -18.000232696533203
    10. '2' → logprob: -18.062732696533203

Token 874: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.000006675720215
    4. '+' → logprob: -15.125006675720215
    5. '```' → logprob: -16.50000762939453
    6. '2' → logprob: -16.56250762939453
    7. ')' → logprob: -16.68750762939453
    8. '
' → logprob: -17.18750762939453
    9. '       ' → logprob: -17.87500762939453
    10. '           ' → logprob: -18.06250762939453

Token 875: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2516082227230072
    2. ':
' → logprob: -2.00160813331604
    3. '                   ' → logprob: -2.50160813331604
    4. '):
' → logprob: -5.751608371734619
    5. '):' → logprob: -6.876608371734619
    6. '                       ' → logprob: -7.876608371734619
    7. '               ' → logprob: -8.251607894897461
    8. '<|end|>' → logprob: -9.126607894897461
    9. ',' → logprob: -9.501607894897461
    10. ')' → logprob: -10.001607894897461

Token 876: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000285530521068722
    2. '                       ' → logprob: -9.375285148620605
    3. '                    
' → logprob: -9.375285148620605
    4. ' if' → logprob: -10.625285148620605
    5. '                  ' → logprob: -11.125285148620605
    6. '                           ' → logprob: -11.125285148620605
    7. '                    ' → logprob: -11.250285148620605
    8. '<|end|>' → logprob: -11.875285148620605
    9. '                                           ' → logprob: -12.000285148620605
    10. '                        
' → logprob: -12.250285148620605

Token 877: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7469431757926941
    2. ' if' → logprob: -1.1219432353973389
    3. 'if' (adapté à ' if') → logprob: -1.9969432353973389
    4. '                   ' → logprob: -2.746943235397339
    5. '                    ' → logprob: -8.871943473815918
    6. '               ' → logprob: -9.121943473815918
    7. '                           ' → logprob: -9.246943473815918
    8. '                        
' → logprob: -9.246943473815918
    9. '                     ' → logprob: -9.996943473815918
    10. '                    
' → logprob: -10.371943473815918

Token 878: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.03804505243897438
    2. 'can' → logprob: -3.2880451679229736
    3. '	can' → logprob: -12.788044929504395
    4. '(can' → logprob: -14.538044929504395
    5. '_can' → logprob: -15.663044929504395
    6. ' not' → logprob: -16.28804588317871
    7. ' could' → logprob: -17.16304588317871
    8. '                   ' → logprob: -17.78804588317871
    9. '.can' → logprob: -17.91304588317871
    10. ' is' → logprob: -18.41304588317871

Token 879: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -1.3425219549390022e-05
    2. '_' → logprob: -12.00001335144043
    3. ' _' → logprob: -12.12501335144043
    4. '_put' → logprob: -13.50001335144043
    5. 'place' → logprob: -15.75001335144043
    6. '_PLACE' → logprob: -16.50001335144043
    7. ' place' → logprob: -16.62501335144043
    8. '_places' → logprob: -17.50001335144043
    9. 'Place' → logprob: -17.87501335144043
    10. '(place' → logprob: -19.12501335144043

Token 880: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0039803278632462025
    2. ' (' → logprob: -5.6289801597595215
    3. '(' → logprob: -7.8789801597595215
    4. '                   ' → logprob: -14.87898063659668
    5. '(
' → logprob: -14.87898063659668
    6. '   ' → logprob: -15.50398063659668
    7. ' ' → logprob: -15.62898063659668
    8. '(c' → logprob: -16.87898063659668
    9. '               ' → logprob: -16.87898063659668
    10. '    ' → logprob: -17.00398063659668

Token 881: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ',' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '               ' → logprob: -15.625001907348633
    5. '   ' → logprob: -16.125001907348633
    6. '```' → logprob: -16.250001907348633
    7. '                   ' → logprob: -16.750001907348633
    8. ')' → logprob: -17.000001907348633
    9. '           ' → logprob: -17.125001907348633
    10. '       ' → logprob: -17.625001907348633

Token 882: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046856500557623804
    2. ' ,' → logprob: -7.875468730926514
    3. ',c' → logprob: -9.375468254089355
    4. ',
' → logprob: -13.000468254089355
    5. '                   ' → logprob: -15.125468254089355
    6. '           ' → logprob: -15.375468254089355
    7. '   ' → logprob: -15.750468254089355
    8. ',r' → logprob: -16.000469207763672
    9. '‌,' → logprob: -16.500469207763672
    10. '                           ' → logprob: -16.500469207763672

Token 883: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.029750604182481766
    2. ' c' → logprob: -3.5297505855560303
    3. ')c' → logprob: -17.02975082397461
    4. ',c' → logprob: -17.40475082397461
    5. '                   ' → logprob: -17.77975082397461
    6. '                           ' → logprob: -18.65475082397461
    7. '	c' → logprob: -18.77975082397461
    8. ' ' → logprob: -18.77975082397461
    9. '                    ' → logprob: -19.15475082397461
    10. '   ' → logprob: -19.77975082397461

Token 884: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -15.000000953674316
    3. '```' → logprob: -15.375000953674316
    4. ',' → logprob: -15.500000953674316
    5. ')' → logprob: -15.625000953674316
    6. 'c' → logprob: -16.750001907348633
    7. '   ' → logprob: -16.875001907348633
    8. 'o' → logprob: -17.500001907348633
    9. ',c' → logprob: -17.875001907348633
    10. '[c' → logprob: -18.000001907348633

Token 885: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000581388536375016
    2. ' ,' → logprob: -7.50058126449585
    3. ',
' → logprob: -11.875581741333008
    4. '<|end|>' → logprob: -12.000581741333008
    5. ',c' → logprob: -12.250581741333008
    6. '                   ' → logprob: -12.500581741333008
    7. ',{
' → logprob: -13.875581741333008
    8. ',(' → logprob: -14.625581741333008
    9. '‌,' → logprob: -14.750581741333008
    10. ',r' → logprob: -14.750581741333008

Token 886: ' coords' (ID: 53253)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.0015062900492921472
    2. ' coords' → logprob: -6.501506328582764
    3. 'coordinates' → logprob: -13.501505851745605
    4. '                   ' → logprob: -13.626505851745605
    5. '(coords' → logprob: -13.626505851745605
    6. '.coords' → logprob: -16.751506805419922
    7. '               ' → logprob: -17.251506805419922
    8. '                       ' → logprob: -17.876506805419922
    9. '_coords' → logprob: -18.501506805419922
    10. ')' → logprob: -18.501506805419922

Token 887: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6263030171394348
    2. '):
' → logprob: -1.62630295753479
    3. '                       ' → logprob: -2.00130295753479
    4. ':' → logprob: -2.37630295753479
    5. '                   ' → logprob: -3.62630295753479
    6. ' and' → logprob: -4.876303195953369
    7. ':
' → logprob: -5.376303195953369
    8. '                    ' → logprob: -8.001302719116211
    9. '                      ' → logprob: -8.376302719116211
    10. ')' → logprob: -8.626302719116211

Token 888: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0006099864258430898
    2. '                        
' → logprob: -7.750609874725342
    3. '                   ' → logprob: -10.6256103515625
    4. ' new' → logprob: -10.8756103515625
    5. ':
' → logprob: -10.8756103515625
    6. '                        ' → logprob: -11.0006103515625
    7. 'new' → logprob: -11.0006103515625
    8. ':' → logprob: -11.2506103515625
    9. '#' → logprob: -11.3756103515625
    10. '```' → logprob: -11.5006103515625

Token 889: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.573011577129364
    2. ' new' → logprob: -1.0730116367340088
    3. '                       ' → logprob: -2.698011636734009
    4. '                           ' → logprob: -3.823011636734009
    5. 'b' → logprob: -6.69801139831543
    6. 'score' → logprob: -6.82301139831543
    7. 'placed' → logprob: -6.94801139831543
    8. 'board' → logprob: -7.07301139831543
    9. ' placed' → logprob: -8.19801139831543
    10. '   ' → logprob: -8.82301139831543

Token 890: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -0.0029848329722881317
    2. '_' → logprob: -5.877985000610352
    3. '_block' → logprob: -10.002985000610352
    4. ' _' → logprob: -10.377985000610352
    5. '_score' → logprob: -10.502985000610352
    6. '<|end|>' → logprob: -11.502985000610352
    7. ')_' → logprob: -11.627985000610352
    8. '_b' → logprob: -11.752985000610352
    9. '```' → logprob: -12.252985000610352
    10. '_code' → logprob: -12.252985000610352

Token 891: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142298936843872
    2. '=' → logprob: -1.701422929763794
    3. '                   ' → logprob: -12.701422691345215
    4. '                       ' → logprob: -13.451422691345215
    5. '<|end|>' → logprob: -13.701422691345215
    6. '=create' → logprob: -14.201422691345215
    7. '=new' → logprob: -14.326422691345215
    8. ')' → logprob: -14.826422691345215
    9. '[' → logprob: -15.076422691345215
    10. ')=' → logprob: -15.451422691345215

Token 892: ' place' (ID: 2475)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.011047935113310814
    2. ' place' → logprob: -4.511047840118408
    3. '(place' → logprob: -16.76104736328125
    4. '.place' → logprob: -20.63604736328125
    5. '-place' → logprob: -20.88604736328125
    6. '   ' → logprob: -21.13604736328125
    7. '
' → logprob: -21.38604736328125
    8. 'plac' → logprob: -21.38604736328125
    9. '_place' → logprob: -21.76104736328125
    10. 'Place' → logprob: -21.88604736328125

Token 893: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -0.0001664717128733173
    2. '(r' → logprob: -8.750166893005371
    3. 'block' → logprob: -12.250166893005371
    4. '_board' → logprob: -14.250166893005371
    5. '           ' → logprob: -15.000166893005371
    6. '_BLOCK' → logprob: -15.125166893005371
    7. '(_' → logprob: -15.250166893005371
    8. '(' → logprob: -15.250166893005371
    9. '_bloc' → logprob: -15.250166893005371
    10. ' (' → logprob: -15.750166893005371

Token 894: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.339278580620885e-06
    2. ' (' → logprob: -13.625001907348633
    3. '(' → logprob: -13.750001907348633
    4. '(
' → logprob: -17.375001907348633
    5. '           ' → logprob: -19.000001907348633
    6. '                   ' → logprob: -19.125001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '               ' → logprob: -19.625001907348633
    9. '(row' → logprob: -20.250001907348633
    10. '```' → logprob: -20.250001907348633

Token 895: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. '(r' → logprob: -13.37500286102295
    3. ' ' → logprob: -15.00000286102295
    4. '[r' → logprob: -15.12500286102295
    5. ',' → logprob: -15.37500286102295
    6. 'o' → logprob: -15.50000286102295
    7. '```' → logprob: -15.62500286102295
    8. '   ' → logprob: -16.125003814697266
    9. '(' → logprob: -16.500003814697266
    10. '[' → logprob: -16.625003814697266

Token 896: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020389800192788243
    2. ',c' → logprob: -8.625204086303711
    3. ' ,' → logprob: -11.375204086303711
    4. '           ' → logprob: -11.625204086303711
    5. '       ' → logprob: -14.125204086303711
    6. ',new' → logprob: -14.250204086303711
    7. ',
' → logprob: -14.750204086303711
    8. '                   ' → logprob: -14.875204086303711
    9. '               ' → logprob: -15.125204086303711
    10. '```' → logprob: -15.750204086303711

Token 897: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0001234428636962548
    2. ' c' → logprob: -9.000123023986816
    3. '                           ' → logprob: -17.125123977661133
    4. '                               ' → logprob: -18.125123977661133
    5. '                       ' → logprob: -19.500123977661133
    6. ')c' → logprob: -19.500123977661133
    7. '   ' → logprob: -20.000123977661133
    8. '                                   ' → logprob: -20.375123977661133
    9. '                             ' → logprob: -20.500123977661133
    10. '	c' → logprob: -20.500123977661133

Token 898: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.045823566731997e-05
    2. 'o' → logprob: -11.500020027160645
    3. 'c' → logprob: -12.125020027160645
    4. ' ' → logprob: -14.000020027160645
    5. 'coords' → logprob: -14.000020027160645
    6. '   ' → logprob: -14.375020027160645
    7. '```' → logprob: -15.375020027160645
    8. '+' → logprob: -15.687520027160645
    9. ')' → logprob: -15.875020027160645
    10. '[' → logprob: -16.00002098083496

Token 899: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9875325708417222e-05
    2. ' ,' → logprob: -10.500029563903809
    3. '                           ' → logprob: -14.875029563903809
    4. '                       ' → logprob: -14.875029563903809
    5. ',c' → logprob: -15.000029563903809
    6. '<|end|>' → logprob: -15.000029563903809
    7. ',
' → logprob: -15.375029563903809
    8. '           ' → logprob: -15.625029563903809
    9. '                   ' → logprob: -16.000030517578125
    10. '               ' → logprob: -17.125030517578125

Token 900: ' coords' (ID: 53253)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' → logprob: -3.643152740551159e-05
    2. ' coords' → logprob: -10.250036239624023
    3. 'coordinates' → logprob: -14.125036239624023
    4. '(coords' → logprob: -15.500036239624023
    5. '                   ' → logprob: -15.875036239624023
    6. '                       ' → logprob: -17.750036239624023
    7. '               ' → logprob: -18.750036239624023
    8. '.coords' → logprob: -19.500036239624023
    9. '           ' → logprob: -19.875036239624023
    10. 'cols' → logprob: -19.875036239624023

Token 901: ')
' (ID: 446)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.17533396184444427
    2. ')' → logprob: -1.9253339767456055
    3. ')
' → logprob: -4.9253339767456055
    4. '                   ' → logprob: -5.8003339767456055
    5. '
' → logprob: -6.5503339767456055
    6. '<|end|>' → logprob: -6.6753339767456055
    7. '                        
' → logprob: -7.3003339767456055
    8. ',' → logprob: -8.175333976745605
    9. '```' → logprob: -8.300333976745605
    10. '           ' → logprob: -8.550333976745605

Token 902: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0018625955563038588
    2. '
' → logprob: -6.501862525939941
    3. '```' → logprob: -8.876862525939941
    4. '                   ' → logprob: -9.376862525939941
    5. '                        
' → logprob: -9.751862525939941
    6. 'score' → logprob: -10.376862525939941
    7. '                           ' → logprob: -10.751862525939941
    8. '                      ' → logprob: -12.001862525939941
    9. '                        ' → logprob: -12.251862525939941
    10. '           ' → logprob: -12.626862525939941

Token 903: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' (adapté à ' score') → logprob: -0.031763747334480286
    2. ' score' → logprob: -3.656763792037964
    3. '                       ' → logprob: -5.406763553619385
    4. 'count' → logprob: -8.156764030456543
    5. 'rows' → logprob: -8.531764030456543
    6. ' rows' → logprob: -8.906764030456543
    7. '
' → logprob: -9.656764030456543
    8. '                           ' → logprob: -9.781764030456543
    9. 'scores' → logprob: -10.031764030456543
    10. 'full' → logprob: -10.656764030456543

Token 904: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197631359100342
    2. '=' → logprob: -2.811976432800293
    3. '                       ' → logprob: -12.436976432800293
    4. '=count' → logprob: -13.061976432800293
    5. ' +=' → logprob: -13.936976432800293
    6. '                        ' → logprob: -14.561976432800293
    7. '           ' → logprob: -15.186976432800293
    8. '+=' → logprob: -15.811976432800293
    9. '                   ' → logprob: -15.936976432800293
    10. '=max' → logprob: -16.186975479125977

Token 905: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0007100477814674377
    2. ' count' → logprob: -7.2507100105285645
    3. 'max' → logprob: -17.750709533691406
    4. '                   ' → logprob: -21.500709533691406
    5. ' max' → logprob: -22.250709533691406
    6. '(count' → logprob: -22.375709533691406
    7. '                       ' → logprob: -23.250709533691406
    8. 'score' → logprob: -23.375709533691406
    9. '[count' → logprob: -23.375709533691406
    10. '               ' → logprob: -24.250709533691406

Token 906: '_full' (ID: 36973)
  Prédit: '_full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_full' → logprob: -1.6166903151315637e-05
    2. 'full' → logprob: -11.125016212463379
    3. '_' → logprob: -14.250016212463379
    4. '_new' → logprob: -15.375016212463379
    5. '(full' → logprob: -16.375015258789062
    6. '_f' → logprob: -16.875015258789062
    7. '```' → logprob: -17.000015258789062
    8. ' full' → logprob: -17.250015258789062
    9. '_(' → logprob: -17.375015258789062
    10. '_FULL' → logprob: -17.875015258789062

Token 907: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -4.36574100604048e-06
    2. 'rows' → logprob: -13.000004768371582
    3. '_' → logprob: -13.500004768371582
    4. '_row' → logprob: -15.125004768371582
    5. '_lines' → logprob: -15.375004768371582
    6. 's' → logprob: -17.375003814697266
    7. '
' → logprob: -17.375003814697266
    8. ' _' → logprob: -17.875003814697266
    9. '```' → logprob: -17.875003814697266
    10. ' rows' → logprob: -18.000003814697266

Token 908: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -2.8206473871250637e-05
    2. '(' → logprob: -10.500028610229492
    3. 'new' → logprob: -14.625028610229492
    4. '(
' → logprob: -16.375028610229492
    5. ' new' → logprob: -17.250028610229492
    6. '[new' → logprob: -17.500028610229492
    7. ' (' → logprob: -18.500028610229492
    8. ')new' → logprob: -19.000028610229492
    9. ',new' → logprob: -20.875028610229492
    10. '```' → logprob: -21.375028610229492

Token 909: '_board' (ID: 55737)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.07926692813634872
    2. '(new' → logprob: -2.5792670249938965
    3. '_board' → logprob: -8.329266548156738
    4. '[new' → logprob: -9.329266548156738
    5. ' new' → logprob: -10.829266548156738
    6. ')' → logprob: -11.704266548156738
    7. '_new' → logprob: -12.454266548156738
    8. '(' → logprob: -12.579266548156738
    9. '[' → logprob: -12.704266548156738
    10. 'w' → logprob: -13.079266548156738

Token 910: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006446303799748421
    2. ')
' → logprob: -5.131446361541748
    3. '                   ' → logprob: -8.13144588470459
    4. '<|end|>' → logprob: -9.75644588470459
    5. '                       ' → logprob: -10.00644588470459
    6. '+' → logprob: -10.38144588470459
    7. ')+' → logprob: -10.50644588470459
    8. '                           ' → logprob: -11.63144588470459
    9. ' )' → logprob: -11.63144588470459
    10. ' +' → logprob: -11.88144588470459

Token 911: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.003428769763559103
    2. '
' → logprob: -6.003428936004639
    3. '                        
' → logprob: -7.753428936004639
    4. '                           ' → logprob: -9.00342845916748
    5. '                   ' → logprob: -9.50342845916748
    6. 'if' → logprob: -9.87842845916748
    7. '<|end|>' → logprob: -9.87842845916748
    8. '```' → logprob: -10.00342845916748
    9. ' if' → logprob: -10.25342845916748
    10. '           ' → logprob: -10.37842845916748

Token 912: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.024635538458824158
    2. ' if' → logprob: -4.024635314941406
    3. 'if' (adapté à ' if') → logprob: -5.149635314941406
    4. '                           ' → logprob: -7.524635314941406
    5. '           ' → logprob: -9.899635314941406
    6. '                               ' → logprob: -10.274635314941406
    7. '                   ' → logprob: -11.399635314941406
    8. '               ' → logprob: -11.774635314941406
    9. '       ' → logprob: -12.024635314941406
    10. '                        ' → logprob: -12.274635314941406

Token 913: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.251935213804245
    2. ' score' → logprob: -1.5019352436065674
    3. '(score' → logprob: -12.251935005187988
    4. '	score' → logprob: -14.501935005187988
    5. 'max' → logprob: -15.001935005187988
    6. '                       ' → logprob: -15.251935005187988
    7. '                           ' → logprob: -16.376935958862305
    8. 'Score' → logprob: -16.626935958862305
    9. '   ' → logprob: -17.251935958862305
    10. '_score' → logprob: -18.001935958862305

Token 914: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.38691890239715576
    2. ' >' → logprob: -1.1369189023971558
    3. '>
' → logprob: -10.761919021606445
    4. '   ' → logprob: -11.886919021606445
    5. '                           ' → logprob: -12.636919021606445
    6. ' >
' → logprob: -13.011919021606445
    7. '           ' → logprob: -13.511919021606445
    8. ' ' → logprob: -13.511919021606445
    9. ')' → logprob: -13.636919021606445
    10. '                               ' → logprob: -13.636919021606445

Token 915: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004078758880496025
    2. ' max' → logprob: -5.5040788650512695
    3. '                           ' → logprob: -15.37907886505127
    4. '(max' → logprob: -17.129077911376953
    5. '                       ' → logprob: -17.254077911376953
    6. '
' → logprob: -17.879077911376953
    7. '=max' → logprob: -18.004077911376953
    8. '	max' → logprob: -18.754077911376953
    9. '```' → logprob: -18.879077911376953
    10. '=' → logprob: -19.004077911376953

Token 916: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -4.179569077678025e-05
    2. 'score' → logprob: -10.125041961669922
    3. 'max' → logprob: -14.125041961669922
    4. '_' → logprob: -14.750041961669922
    5. '_max' → logprob: -15.375041961669922
    6. ' score' → logprob: -16.875041961669922
    7. '           ' → logprob: -17.000041961669922
    8. '```' → logprob: -17.000041961669922
    9. '   ' → logprob: -17.500041961669922
    10. '       ' → logprob: -17.500041961669922

Token 917: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6448047757148743
    2. '                           ' → logprob: -1.3948047161102295
    3. ':' → logprob: -1.5198047161102295
    4. '                       ' → logprob: -4.894804954528809
    5. '                               ' → logprob: -7.269804954528809
    6. '           ' → logprob: -9.394804954528809
    7. '=' → logprob: -9.769804954528809
    8. '                   ' → logprob: -9.894804954528809
    9. '):
' → logprob: -10.144804954528809
    10. '                          ' → logprob: -10.269804954528809

Token 918: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0010403135092929006
    2. '                               ' → logprob: -7.501040458679199
    3. '                       ' → logprob: -7.876040458679199
    4. ' max' → logprob: -10.0010404586792
    5. 'max' → logprob: -10.7510404586792
    6. '                                   ' → logprob: -11.1260404586792
    7. '           ' → logprob: -11.5010404586792
    8. '```' → logprob: -12.5010404586792
    9. '                   ' → logprob: -13.1260404586792
    10. '                                       ' → logprob: -13.3760404586792

Token 919: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3295407295227051
    2. 'max' (adapté à ' max') → logprob: -1.954540729522705
    3. '                               ' → logprob: -2.454540729522705
    4. '                           ' → logprob: -2.954540729522705
    5. '                                   ' → logprob: -7.454540729522705
    6. '                       ' → logprob: -8.829540252685547
    7. '                                       ' → logprob: -9.079540252685547
    8. '                            ' → logprob: -9.454540252685547
    9. '```' → logprob: -10.204540252685547
    10. '                                           ' → logprob: -10.579540252685547

Token 920: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -3.4121114822482923e-06
    2. '_scores' → logprob: -13.750003814697266
    3. 'score' → logprob: -14.250003814697266
    4. '_s' → logprob: -14.875003814697266
    5. '_code' → logprob: -14.875003814697266
    6. '_token' → logprob: -15.125003814697266
    7. '_' → logprob: -15.125003814697266
    8. 'Score' → logprob: -16.125003814697266
    9. '_SCORE' → logprob: -16.625003814697266
    10. '_place' → logprob: -16.875003814697266

Token 921: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4743814766407013
    2. '=' → logprob: -0.9743814468383789
    3. '                               ' → logprob: -8.474381446838379
    4. '                           ' → logprob: -9.474381446838379
    5. '=max' → logprob: -11.599381446838379
    6. '=
' → logprob: -13.224381446838379
    7. ',' → logprob: -13.724381446838379
    8. ' =
' → logprob: -13.724381446838379
    9. '                                   ' → logprob: -14.099381446838379
    10. '                            ' → logprob: -14.224381446838379

Token 922: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.31326186656951904
    2. ' score' → logprob: -1.313261866569519
    3. '	score' → logprob: -17.188261032104492
    4. '(score' → logprob: -17.313261032104492
    5. '                           ' → logprob: -17.438261032104492
    6. '                               ' → logprob: -18.063261032104492
    7. '                       ' → logprob: -19.438261032104492
    8. '_score' → logprob: -19.563261032104492
    9. '                                   ' → logprob: -20.313261032104492
    10. '.score' → logprob: -20.563261032104492

Token 923: '

' (ID: 279)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.06679842621088028
    2. '                       ' → logprob: -3.691798448562622
    3. '<|end|>' → logprob: -4.191798210144043
    4. '                            
' → logprob: -5.066798210144043
    5. '                               ' → logprob: -5.691798210144043
    6. '
' → logprob: -6.191798210144043
    7. '           ' → logprob: -6.191798210144043
    8. '                            ' → logprob: -6.316798210144043
    9. ',' → logprob: -6.316798210144043
    10. '                                   ' → logprob: -6.566798210144043

Token 924: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18833091855049133
    2. '   ' → logprob: -2.313330888748169
    3. '       ' → logprob: -2.688330888748169
    4. '<|end|>' → logprob: -6.063331127166748
    5. 'return' → logprob: -6.938331127166748
    6. '    
' → logprob: -7.688331127166748
    7. 'print' → logprob: -8.06333065032959
    8. ' return' → logprob: -8.68833065032959
    9. '```' → logprob: -8.68833065032959
    10. '        
' → logprob: -9.68833065032959

Token 925: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.38688430190086365
    2. '   ' → logprob: -1.136884331703186
    3. ' print' → logprob: -11.636884689331055
    4. '       ' → logprob: -13.386884689331055
    5. '```' → logprob: -13.386884689331055
    6. 'if' → logprob: -14.261884689331055
    7. '
' → logprob: -14.511884689331055
    8. '	print' → logprob: -15.886884689331055
    9. '    
' → logprob: -16.636884689331055
    10. 'return' → logprob: -17.386884689331055

Token 926: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0003422567679081112
    2. '(' → logprob: -8.00034236907959
    3. '('' → logprob: -12.37534236907959
    4. 'max' → logprob: -13.50034236907959
    5. '()' → logprob: -14.50034236907959
    6. '(f' → logprob: -15.25034236907959
    7. '("' → logprob: -15.50034236907959
    8. ' (' → logprob: -16.125341415405273
    9. '(
' → logprob: -16.375341415405273
    10. ' max' → logprob: -17.000341415405273

Token 927: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.00010914575977949426
    2. 'score' → logprob: -9.12510871887207
    3. 'Score' → logprob: -15.87510871887207
    4. 'max' → logprob: -17.37510871887207
    5. '(score' → logprob: -17.37510871887207
    6. '_scores' → logprob: -18.25010871887207
    7. ')' → logprob: -18.25010871887207
    8. '_SCORE' → logprob: -18.37510871887207
    9. '(max' → logprob: -18.50010871887207
    10. '(' → logprob: -19.12510871887207

Token 928: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.286852345103398e-05
    2. '<|end|>' → logprob: -10.500042915344238
    3. ')
' → logprob: -12.125042915344238
    4. '())' → logprob: -12.500042915344238
    5. ' )' → logprob: -13.375042915344238
    6. '```' → logprob: -13.500042915344238
    7. '')' → logprob: -13.875042915344238
    8. '()' → logprob: -14.125042915344238
    9. '   ' → logprob: -14.750042915344238
    10. '`)' → logprob: -15.375042915344238

Token 929: 'pet' (ID: 9456)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 930: 'oris' (ID: 50689)
  Prédit: 'oris'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oris' → logprob: -0.025101136416196823
    2. '()' → logprob: -3.7751011848449707
    3. 'or' → logprob: -6.775101184844971
    4. '())' → logprob: -8.400100708007812
    5. 'ori' → logprob: -8.525100708007812
    6. ' or' → logprob: -9.525100708007812
    7. '()`' → logprob: -10.650100708007812
    8. ')' → logprob: -10.775100708007812
    9. '```' → logprob: -10.775100708007812
    10. '(' → logprob: -10.900100708007812

Token 931: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001145337475463748
    2. '(' → logprob: -7.001145362854004
    3. '()
' → logprob: -9.251145362854004
    4. '().' → logprob: -9.626145362854004
    5. '.' → logprob: -10.376145362854004
    6. '<|end|>' → logprob: -11.751145362854004
    7. ' ()' → logprob: -12.001145362854004
    8. '()

' → logprob: -12.376145362854004
    9. '(
' → logprob: -12.376145362854004
    10. '())' → logprob: -12.876145362854004


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 929
Tokens correctement prédits (1ère position, stricte): 403
Tokens correctement prédits (1ère position, avec adaptation): 427
Tokens correctement prédits (top 10): 800
Précision stricte (1ère position): 43.38%
Précision adaptée (1ère position): 45.96%
Précision (top 10): 86.11%
================================================================================
