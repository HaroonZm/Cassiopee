================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:21:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
b1, b2, b3 = map(int, input().split())
if (b1 == 1 and b2 == 1 and b3 == 0) or (b1 == 0 and b2 == 0 and b3 == 1):
    print("Open")
else:
    print("Close")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'b' (ID: 65)
  → Token d'amorce (pas de prédiction)

Token 1: '1' (ID: 16)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' b' (ID: 287)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9706088304519653
    2. 'b' → logprob: -1.0956088304519653
    3. '2' → logprob: -2.720608711242676
    4. '=' → logprob: -2.720608711242676
    5. '[' → logprob: -2.970608711242676
    6. ',' → logprob: -3.470608711242676
    7. ':' → logprob: -4.220608711242676
    8. ' =' → logprob: -4.470608711242676
    9. '_' → logprob: -4.470608711242676
    10. '+' → logprob: -4.720608711242676

Token 4: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5238410234451294
    2. '1' → logprob: -1.2738410234451294
    3. '[' → logprob: -2.77384090423584
    4. ',' → logprob: -3.27384090423584
    5. '.' → logprob: -4.02384090423584
    6. '_' → logprob: -5.89884090423584
    7. ''' → logprob: -6.52384090423584
    8. ')' → logprob: -6.64884090423584
    9. '```' → logprob: -7.14884090423584
    10. '+' → logprob: -7.52384090423584

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6318960785865784
    2. ',' → logprob: -0.8818960785865784
    3. '.' → logprob: -3.2568960189819336
    4. '_' → logprob: -5.381896018981934
    5. ' =' → logprob: -5.881896018981934
    6. '**' → logprob: -6.131896018981934
    7. '*' → logprob: -6.506896018981934
    8. '```' → logprob: -6.756896018981934
    9. '+' → logprob: -6.881896018981934
    10. ',
' → logprob: -7.381896018981934

Token 6: ' b' (ID: 287)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6762759685516357
    2. '=' → logprob: -1.3012759685516357
    3. ',' → logprob: -1.6762759685516357
    4. ' ' → logprob: -4.926276206970215
    5. ')' → logprob: -5.051276206970215
    6. 'b' → logprob: -5.176276206970215
    7. ' ,' → logprob: -5.676276206970215
    8. ';' → logprob: -5.801276206970215
    9. ' b' → logprob: -6.301276206970215
    10. '_' → logprob: -6.676276206970215

Token 7: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7279441356658936
    2. '3' → logprob: -0.7279441356658936
    3. '_' → logprob: -3.6029441356658936
    4. '2' → logprob: -5.602944374084473
    5. '.' → logprob: -6.602944374084473
    6. ''' → logprob: -7.727944374084473
    7. ',' → logprob: -7.727944374084473
    8. ')' → logprob: -8.477944374084473
    9. '[' → logprob: -9.102944374084473
    10. ';' → logprob: -9.227944374084473

Token 8: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08332233130931854
    2. '=' → logprob: -3.083322286605835
    3. '.' → logprob: -3.833322286605835
    4. '_' → logprob: -4.833322525024414
    5. '```' → logprob: -6.708322525024414
    6. ';' → logprob: -7.583322525024414
    7. ',
' → logprob: -7.583322525024414
    8. ')' → logprob: -7.708322525024414
    9. '**' → logprob: -7.833322525024414
    10. '*' → logprob: -7.833322525024414

Token 9: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8056153655052185
    2. '0' → logprob: -1.3056154251098633
    3. ' [' → logprob: -2.3056154251098633
    4. ' []' → logprob: -3.0556154251098633
    5. ' b' → logprob: -3.1806154251098633
    6. '[' → logprob: -3.5556154251098633
    7. ' map' → logprob: -3.9306154251098633
    8. '1' → logprob: -4.680615425109863
    9. '[]' → logprob: -4.805615425109863
    10. 'b' → logprob: -4.805615425109863

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007107717450708151
    2. '(lambda' → logprob: -5.007107734680176
    3. '```' → logprob: -9.007107734680176
    4. '<|end|>' → logprob: -9.632107734680176
    5. '(int' → logprob: -9.757107734680176
    6. ')' → logprob: -10.757107734680176
    7. '(str' → logprob: -10.757107734680176
    8. '(user' → logprob: -11.757107734680176
    9. '(
' → logprob: -11.757107734680176
    10. ' (' → logprob: -12.132107734680176

Token 11: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19097839295864105
    2. '(' → logprob: -1.9409784078598022
    3. '(input' → logprob: -4.315978527069092
    4. '```' → logprob: -5.315978527069092
    5. '(user' → logprob: -6.190978527069092
    6. '(token' → logprob: -6.315978527069092
    7. '<|end|>' → logprob: -6.565978527069092
    8. ')(' → logprob: -7.065978527069092
    9. '(b' → logprob: -7.315978527069092
    10. '`)' → logprob: -7.315978527069092

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.033908240497112274
    2. ' input' → logprob: -3.4089081287384033
    3. ')' → logprob: -8.408907890319824
    4. '(input' → logprob: -10.283907890319824
    5. ',input' → logprob: -13.658907890319824
    6. ' )' → logprob: -14.033907890319824
    7. 'b' → logprob: -14.283907890319824
    8. '```' → logprob: -14.533907890319824
    9. '=input' → logprob: -14.908907890319824
    10. '[input' → logprob: -15.033907890319824

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.49530497193336487
    2. '())' → logprob: -1.2453049421310425
    3. '(' → logprob: -2.995305061340332
    4. '(()' → logprob: -4.120305061340332
    5. ')' → logprob: -4.245305061340332
    6. '('' → logprob: -5.245305061340332
    7. '(""))' → logprob: -5.245305061340332
    8. '`()' → logprob: -6.120305061340332
    9. '```' → logprob: -6.620305061340332
    10. '();)' → logprob: -7.120305061340332

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.3676733690081164e-05
    2. 'strip' → logprob: -10.75002384185791
    3. ' split' → logprob: -13.25002384185791
    4. 'rstrip' → logprob: -15.25002384185791
    5. '(split' → logprob: -16.375022888183594
    6. 'spl' → logprob: -16.875022888183594
    7. 'replace' → logprob: -19.750022888183594
    8. 'startswith' → logprob: -19.875022888183594
    9. 's' → logprob: -20.500022888183594
    10. ')' → logprob: -20.500022888183594

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1361643522977829
    2. '())' → logprob: -2.136164426803589
    3. '`)' → logprob: -5.38616418838501
    4. '))' → logprob: -6.01116418838501
    5. '()' → logprob: -6.26116418838501
    6. '(' → logprob: -9.261164665222168
    7. '()))' → logprob: -10.136164665222168
    8. '```' → logprob: -10.886164665222168
    9. ')`' → logprob: -10.886164665222168
    10. '')' → logprob: -11.511164665222168

Token 16: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1935187578201294
    2. 'if' → logprob: -2.44351863861084
    3. ',' → logprob: -4.19351863861084
    4. '+
' → logprob: -4.19351863861084
    5. '#' → logprob: -4.44351863861084
    6. '*' → logprob: -4.69351863861084
    7. '**' → logprob: -5.06851863861084
    8. ' if' → logprob: -5.31851863861084
    9. '```' → logprob: -5.56851863861084
    10. ':' → logprob: -5.81851863861084

Token 17: ' (' (ID: 350)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.01133604533970356
    2. 'b' → logprob: -4.511335849761963
    3. ' ' → logprob: -8.261336326599121
    4. ' not' → logprob: -11.136336326599121
    5. ' (' → logprob: -11.761336326599121
    6. ' ' → logprob: -13.136336326599121
    7. '(b' → logprob: -13.511336326599121
    8. '_b' → logprob: -14.261336326599121
    9. ' a' → logprob: -14.511336326599121
    10. '(' → logprob: -14.511336326599121

Token 18: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.34998053312301636
    2. ' b' → logprob: -1.2249805927276611
    3. ' (' → logprob: -7.224980354309082
    4. '(b' → logprob: -7.599980354309082
    5. '(' → logprob: -9.099980354309082
    6. 'abs' → logprob: -9.474980354309082
    7. ' abs' → logprob: -10.099980354309082
    8. ' ' → logprob: -10.849980354309082
    9. 'a' → logprob: -11.349980354309082
    10. ' not' → logprob: -11.474980354309082

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1438739001750946
    2. '_' → logprob: -2.018873929977417
    3. '2' → logprob: -7.393873691558838
    4. ' _' → logprob: -8.643874168395996
    5. '3' → logprob: -9.643874168395996
    6. ' ==' → logprob: -9.768874168395996
    7. ' ' → logprob: -10.018874168395996
    8. ' >' → logprob: -10.268874168395996
    9. '_)' → logprob: -10.268874168395996
    10. '>' → logprob: -10.643874168395996

Token 20: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8435354828834534
    2. ' >' → logprob: -1.2185354232788086
    3. '==' → logprob: -2.9685354232788086
    4. ' >=' → logprob: -2.9685354232788086
    5. ' +' → logprob: -3.3435354232788086
    6. '>' → logprob: -3.4685354232788086
    7. '+' → logprob: -3.9685354232788086
    8. ' !=' → logprob: -4.093535423278809
    9. ' and' → logprob: -4.218535423278809
    10. ' <=' → logprob: -4.218535423278809

Token 21: ' ' (ID: 220)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.8846023082733154
    2. 'b' → logprob: -1.2596023082733154
    3. ' ' → logprob: -1.6346023082733154
    4. '0' → logprob: -2.6346023082733154
    5. '1' → logprob: -3.3846023082733154
    6. '3' → logprob: -6.5096025466918945
    7. '7' → logprob: -8.384602546691895
    8. '2' → logprob: -8.884602546691895
    9. '5' → logprob: -9.134602546691895
    10. '6' → logprob: -9.259602546691895

Token 22: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08069093525409698
    2. '1' → logprob: -3.330690860748291
    3. '0' → logprob: -3.455690860748291
    4. ' b' → logprob: -5.330690860748291
    5. ' ' → logprob: -5.830690860748291
    6. '3' → logprob: -6.955690860748291
    7. '2' → logprob: -7.955690860748291
    8. '7' → logprob: -8.08069133758545
    9. '5' → logprob: -8.83069133758545
    10. '4' → logprob: -9.45569133758545

Token 23: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03543014079332352
    2. 'and' → logprob: -4.285429954528809
    3. ')' → logprob: -4.535429954528809
    4. ' or' → logprob: -4.660429954528809
    5. ' )' → logprob: -7.535429954528809
    6. '):' → logprob: -8.535429954528809
    7. 'or' → logprob: -9.785429954528809
    8. ' ' → logprob: -10.535429954528809
    9. ' ):' → logprob: -10.785429954528809
    10. ',' → logprob: -12.035429954528809

Token 24: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.015540138818323612
    2. 'b' → logprob: -4.39054012298584
    3. ' ' → logprob: -6.39054012298584
    4. ' (' → logprob: -6.76554012298584
    5. ' not' → logprob: -9.39054012298584
    6. '(b' → logprob: -9.51554012298584
    7. '(' → logprob: -11.51554012298584
    8. ' )' → logprob: -11.89054012298584
    9. ' ' → logprob: -11.89054012298584
    10. ')' → logprob: -12.51554012298584

Token 25: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000284696085145697
    2. '3' → logprob: -8.625285148620605
    3. '1' → logprob: -9.375285148620605
    4. '_' → logprob: -11.125285148620605
    5. ' ' → logprob: -12.625285148620605
    6. '₂' → logprob: -13.875285148620605
    7. '```' → logprob: -14.500285148620605
    8. ' _' → logprob: -15.812785148620605
    9. ' ==' → logprob: -16.25028419494629
    10. '==' → logprob: -16.81278419494629

Token 26: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.009345541708171368
    2. '==' → logprob: -4.759345531463623
    3. ' ' → logprob: -7.509345531463623
    4. ' !=' → logprob: -9.384346008300781
    5. ')' → logprob: -10.009346008300781
    6. ' )' → logprob: -10.634346008300781
    7. ' and' → logprob: -11.509346008300781
    8. ' >' → logprob: -12.509346008300781
    9. ' <=' → logprob: -12.759346008300781
    10. ' ' → logprob: -12.884346008300781

Token 27: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04432199150323868
    2. '1' → logprob: -3.1693220138549805
    3. '0' → logprob: -6.9193220138549805
    4. '2' → logprob: -8.16932201385498
    5. '3' → logprob: -10.91932201385498
    6. ' b' → logprob: -11.35682201385498
    7. '4' → logprob: -12.35682201385498
    8. ' -' → logprob: -13.04432201385498
    9. 'b' → logprob: -13.10682201385498
    10. ' )' → logprob: -13.35682201385498

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.27075567841529846
    2. ' ' → logprob: -1.520755648612976
    3. '0' → logprob: -4.395755767822266
    4. '2' → logprob: -5.145755767822266
    5. '3' → logprob: -8.270755767822266
    6. ' b' → logprob: -9.770755767822266
    7. 'b' → logprob: -9.895755767822266
    8. '4' → logprob: -10.083255767822266
    9. '5' → logprob: -10.895755767822266
    10. ' -' → logprob: -11.520755767822266

Token 29: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06977401673793793
    2. ')' → logprob: -2.9447739124298096
    3. ' )' → logprob: -4.444774150848389
    4. 'and' → logprob: -5.819774150848389
    5. ' ' → logprob: -9.69477367401123
    6. ' ' → logprob: -12.44477367401123
    7. '),' → logprob: -13.31977367401123
    8. ' ),' → logprob: -13.56977367401123
    9. '	and' → logprob: -14.19477367401123
    10. ' or' → logprob: -14.69477367401123

Token 30: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.048803672194480896
    2. 'b' → logprob: -3.0488035678863525
    3. ' ' → logprob: -8.923803329467773
    4. '1' → logprob: -10.423803329467773
    5. ')' → logprob: -11.423803329467773
    6. ' not' → logprob: -11.548803329467773
    7. ' (' → logprob: -11.673803329467773
    8. ' ' → logprob: -11.986303329467773
    9. '(b' → logprob: -12.236303329467773
    10. ')b' → logprob: -13.173803329467773

Token 31: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0031556154135614634
    2. '1' → logprob: -6.128155708312988
    3. '2' → logprob: -7.503155708312988
    4. '==' → logprob: -8.753155708312988
    5. ' ==' → logprob: -8.878155708312988
    6. '_' → logprob: -9.503155708312988
    7. ')' → logprob: -10.878155708312988
    8. ' ' → logprob: -11.253155708312988
    9. '```' → logprob: -12.878155708312988
    10. '<|end|>' → logprob: -13.753155708312988

Token 32: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23498614132404327
    2. ')' → logprob: -1.7349861860275269
    3. '==' → logprob: -3.8599860668182373
    4. ' )' → logprob: -4.484986305236816
    5. ' ' → logprob: -7.859986305236816
    6. ' ' → logprob: -8.859986305236816
    7. ')==' → logprob: -9.609986305236816
    8. ' and' → logprob: -10.734986305236816
    9. ' !=' → logprob: -11.359986305236816
    10. '1' → logprob: -11.609986305236816

Token 33: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2814958393573761
    2. '1' → logprob: -1.4064958095550537
    3. '0' → logprob: -8.031496047973633
    4. ')' → logprob: -11.656496047973633
    5. ' )' → logprob: -12.156496047973633
    6. '2' → logprob: -13.593996047973633
    7. '  ' → logprob: -14.218996047973633
    8. '3' → logprob: -14.281496047973633
    9. ' ' → logprob: -14.343996047973633
    10. '=' → logprob: -14.906496047973633

Token 34: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0038727547507733107
    2. '0' → logprob: -5.878872871398926
    3. ' ' → logprob: -6.878872871398926
    4. '2' → logprob: -10.878872871398926
    5. ')' → logprob: -12.316372871398926
    6. '3' → logprob: -12.378872871398926
    7. '-' → logprob: -13.628872871398926
    8. 'b' → logprob: -13.628872871398926
    9. '4' → logprob: -13.941372871398926
    10. ''' → logprob: -14.003872871398926

Token 35: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004755496047437191
    2. ' )' → logprob: -5.87975549697876
    3. '):' → logprob: -6.25475549697876
    4. ' ):' → logprob: -10.754755020141602
    5. ' and' → logprob: -12.629755020141602
    6. ' or' → logprob: -13.754755020141602
    7. ':' → logprob: -13.754755020141602
    8. 'and' → logprob: -15.379755020141602
    9. ' ' → logprob: -15.754755020141602
    10. 'or' → logprob: -16.1297550201416

Token 36: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012959542218595743
    2. ' :' → logprob: -6.751296043395996
    3. ' and' → logprob: -9.626296043395996
    4. ':
' → logprob: -10.376296043395996
    5. '):' → logprob: -11.251296043395996
    6. ' or' → logprob: -12.001296043395996
    7. ')' → logprob: -12.876296043395996
    8. 'and' → logprob: -13.126296043395996
    9. ',' → logprob: -13.876296043395996
    10. '   ' → logprob: -13.876296043395996

Token 37: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.008953479118645191
    2. '(b' → logprob: -4.75895357131958
    3. ' ' → logprob: -9.008953094482422
    4. '(' → logprob: -9.133953094482422
    5. ' b' → logprob: -9.758953094482422
    6. ' ' → logprob: -10.633953094482422
    7. '(space' → logprob: -11.633953094482422
    8. ' \(' → logprob: -12.383953094482422
    9. ' ((' → logprob: -12.633953094482422
    10. 'b' → logprob: -13.133953094482422

Token 38: 'b' (ID: 65)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3186403214931488
    2. 'b' → logprob: -1.3186403512954712
    3. ' (' → logprob: -5.818640232086182
    4. '(b' → logprob: -6.068640232086182
    5. ' ' → logprob: -9.81864070892334
    6. '(' → logprob: -12.06864070892334
    7. ' ' → logprob: -12.31864070892334
    8. '	b' → logprob: -12.31864070892334
    9. '   ' → logprob: -12.94364070892334
    10. '  ' → logprob: -13.19364070892334

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000998155795969069
    2. '2' → logprob: -7.125998020172119
    3. '3' → logprob: -8.625998497009277
    4. ' ' → logprob: -11.375998497009277
    5. '```' → logprob: -13.500998497009277
    6. '_' → logprob: -15.438498497009277
    7. ' ' → logprob: -15.625998497009277
    8. ' _' → logprob: -15.688498497009277
    9. '  ' → logprob: -15.813498497009277
    10. ' ==' → logprob: -16.50099754333496

Token 40: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0032210873905569315
    2. '==' → logprob: -5.753221035003662
    3. ' ' → logprob: -10.25322151184082
    4. '<|end|>' → logprob: -12.62822151184082
    5. ' ' → logprob: -13.50322151184082
    6. ')' → logprob: -13.87822151184082
    7. ',' → logprob: -15.00322151184082
    8. ' =' → logprob: -15.00322151184082
    9. '1' → logprob: -15.12822151184082
    10. ' !=' → logprob: -15.25322151184082

Token 41: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16035695374011993
    2. '1' → logprob: -1.9103569984436035
    3. '0' → logprob: -9.160356521606445
    4. 'b' → logprob: -11.910356521606445
    5. ' b' → logprob: -11.910356521606445
    6. '<|end|>' → logprob: -12.035356521606445
    7. ' ' → logprob: -13.472856521606445
    8. '  ' → logprob: -13.722856521606445
    9. '2' → logprob: -13.847856521606445
    10. '3' → logprob: -14.347856521606445

Token 42: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.056360915303230286
    2. ' ' → logprob: -2.931360960006714
    3. '0' → logprob: -6.556360721588135
    4. '2' → logprob: -10.431361198425293
    5. 'b' → logprob: -11.556361198425293
    6. '3' → logprob: -11.806361198425293
    7. ' b' → logprob: -12.556361198425293
    8. '  ' → logprob: -13.806361198425293
    9. '`' → logprob: -14.431361198425293
    10. ' ' → logprob: -14.493861198425293

Token 43: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0012638057814911008
    2. 'and' → logprob: -6.751263618469238
    3. ' ' → logprob: -9.376263618469238
    4. ')' → logprob: -12.376263618469238
    5. ' ' → logprob: -12.626263618469238
    6. ' )' → logprob: -15.126263618469238
    7. '```' → logprob: -15.626263618469238
    8. '<|end|>' → logprob: -15.751263618469238
    9. '1' → logprob: -15.876263618469238
    10. ' и' → logprob: -16.376264572143555

Token 44: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.13080759346485138
    2. 'b' → logprob: -2.130807638168335
    3. ' ' → logprob: -5.755807399749756
    4. ')' → logprob: -8.755807876586914
    5. ' ' → logprob: -8.880807876586914
    6. '1' → logprob: -9.255807876586914
    7. ''' → logprob: -10.005807876586914
    8. ' not' → logprob: -10.130807876586914
    9. ',' → logprob: -10.380807876586914
    10. '"' → logprob: -10.755807876586914

Token 45: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6992293000221252
    2. '2' → logprob: -0.6992293000221252
    3. ' ' → logprob: -5.6992292404174805
    4. '3' → logprob: -5.9492292404174805
    5. '<|end|>' → logprob: -9.32422924041748
    6. '  ' → logprob: -12.63672924041748
    7. '_' → logprob: -12.82422924041748
    8. '<|end|>' → logprob: -13.13672924041748
    9. '0' → logprob: -13.88672924041748
    10. ')' → logprob: -13.94922924041748

Token 46: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.009884171187877655
    2. '==' → logprob: -4.634884357452393
    3. ' ' → logprob: -9.509883880615234
    4. ' ' → logprob: -10.759883880615234
    5. '<|end|>' → logprob: -10.884883880615234
    6. ')' → logprob: -12.509883880615234
    7. ' ===' → logprob: -12.884883880615234
    8. ' =' → logprob: -13.134883880615234
    9. '`' → logprob: -14.009883880615234
    10. '=' → logprob: -14.259883880615234

Token 47: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3904528021812439
    2. '1' → logprob: -1.1404528617858887
    3. '0' → logprob: -5.640452861785889
    4. '<|end|>' → logprob: -10.89045238494873
    5. ' ' → logprob: -13.01545238494873
    6. '2' → logprob: -15.07795238494873
    7. '```' → logprob: -15.20295238494873
    8. '3' → logprob: -15.20295238494873
    9. 's' → logprob: -15.57795238494873
    10. ' b' → logprob: -15.64045238494873

Token 48: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01219432894140482
    2. ' ' → logprob: -4.8871941566467285
    3. '0' → logprob: -5.3871941566467285
    4. '<|end|>' → logprob: -14.012194633483887
    5. '```' → logprob: -15.137194633483887
    6. '-' → logprob: -15.262194633483887
    7. '2' → logprob: -15.262194633483887
    8. 'b' → logprob: -15.512194633483887
    9. '3' → logprob: -15.824694633483887
    10. '`' → logprob: -15.887194633483887

Token 49: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0024945642799139023
    2. 'and' → logprob: -6.0024943351745605
    3. ' ' → logprob: -11.627494812011719
    4. ')' → logprob: -11.752494812011719
    5. ' )' → logprob: -13.627494812011719
    6. '```' → logprob: -14.752494812011719
    7. ' ' → logprob: -15.377494812011719
    8. '<|end|>' → logprob: -16.37749481201172
    9. ' и' → logprob: -16.50249481201172
    10. '	and' → logprob: -16.87749481201172

Token 50: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.08109476417303085
    2. 'b' → logprob: -3.081094741821289
    3. ' ' → logprob: -4.331094741821289
    4. '1' → logprob: -4.456094741821289
    5. '0' → logprob: -4.956094741821289
    6. ' ' → logprob: -9.581094741821289
    7. ')' → logprob: -10.206094741821289
    8. '3' → logprob: -11.081094741821289
    9. ' not' → logprob: -11.206094741821289
    10. '`' → logprob: -11.331094741821289

Token 51: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.21134290099143982
    2. '1' → logprob: -1.7113429307937622
    3. '0' → logprob: -4.711342811584473
    4. ' ' → logprob: -7.086342811584473
    5. '2' → logprob: -10.461342811584473
    6. '_' → logprob: -12.148842811584473
    7. '```' → logprob: -12.711342811584473
    8. '-' → logprob: -12.773842811584473
    9. '  ' → logprob: -13.273842811584473
    10. ')' → logprob: -13.523842811584473

Token 52: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006851058453321457
    2. '==' → logprob: -5.1318511962890625
    3. ')' → logprob: -7.5068511962890625
    4. ' ' → logprob: -8.256851196289062
    5. ' )' → logprob: -9.381851196289062
    6. ' ' → logprob: -12.131851196289062
    7. ' =' → logprob: -12.256851196289062
    8. '0' → logprob: -13.006851196289062
    9. '<|end|>' → logprob: -13.006851196289062
    10. '=' → logprob: -13.131851196289062

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20184199512004852
    2. ' ' → logprob: -1.826841950416565
    3. '0' → logprob: -3.8268420696258545
    4. ')' → logprob: -10.639342308044434
    5. '3' → logprob: -11.576842308044434
    6. ' ' → logprob: -11.826842308044434
    7. '```' → logprob: -12.639342308044434
    8. '-' → logprob: -12.701842308044434
    9. '`' → logprob: -12.889342308044434
    10. ' b' → logprob: -13.201842308044434

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03938351199030876
    2. '0' → logprob: -3.2893834114074707
    3. ' ' → logprob: -6.664383411407471
    4. ')' → logprob: -11.039383888244629
    5. 'b' → logprob: -11.414383888244629
    6. '-' → logprob: -11.914383888244629
    7. '```' → logprob: -12.539383888244629
    8. '3' → logprob: -12.664383888244629
    9. '   ' → logprob: -12.664383888244629
    10. '`' → logprob: -12.851883888244629

Token 55: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04889051616191864
    2. '):' → logprob: -3.0488905906677246
    3. ' )' → logprob: -8.423890113830566
    4. ' ):' → logprob: -9.548890113830566
    5. ':' → logprob: -11.673890113830566
    6. '):
' → logprob: -13.423890113830566
    7. '))' → logprob: -14.798890113830566
    8. ''):' → logprob: -15.423890113830566
    9. '`)' → logprob: -15.548890113830566
    10. ')):' → logprob: -15.673890113830566

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48751258850097656
    2. ':' → logprob: -1.8625125885009766
    3. ' print' → logprob: -1.9875125885009766
    4. 'print' → logprob: -3.1125125885009766
    5. ' :' → logprob: -3.9875125885009766
    6. '    ' → logprob: -4.237512588500977
    7. ' ' → logprob: -5.487512588500977
    8. '\n' → logprob: -5.737512588500977
    9. ':
' → logprob: -6.112512588500977
    10. ' :
' → logprob: -6.362512588500977

Token 57: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2695516347885132
    2. 'print' (adapté à ' print') → logprob: -2.0195517539978027
    3. '   ' → logprob: -2.2695517539978027
    4. ' pass' → logprob: -9.269551277160645
    5. ' ' → logprob: -10.644551277160645
    6. '    ' → logprob: -11.269551277160645
    7. 'pass' → logprob: -11.269551277160645
    8. '	print' → logprob: -11.644551277160645
    9. '```' → logprob: -11.769551277160645
    10. '       ' → logprob: -12.144551277160645

Token 58: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08090303838253021
    2. '("' → logprob: -2.7059030532836914
    3. '('' → logprob: -5.330903053283691
    4. '(True' → logprob: -5.580903053283691
    5. '("("' → logprob: -6.205903053283691
    6. '()' → logprob: -9.330903053283691
    7. '(False' → logprob: -9.830903053283691
    8. '(-' → logprob: -10.330903053283691
    9. '("")' → logprob: -10.455903053283691
    10. '(true' → logprob: -11.080903053283691

Token 59: 'Open' (ID: 6447)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.6358082294464111
    2. 'Yes' → logprob: -1.1358082294464111
    3. '1' → logprob: -3.635808229446411
    4. 'NO' → logprob: -4.260807991027832
    5. 'True' → logprob: -4.385807991027832
    6. 'WIN' → logprob: -4.635807991027832
    7. 'yes' → logprob: -4.760807991027832
    8. 'No' → logprob: -4.885807991027832
    9. 'Win' → logprob: -5.135807991027832
    10. 'AC' → logprob: -5.385807991027832

Token 60: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.06848511099815369
    2. ')' → logprob: -3.4434850215911865
    3. 'Door' → logprob: -4.193485260009766
    4. ' Door' → logprob: -4.318485260009766
    5. ' door' → logprob: -5.818485260009766
    6. '"' → logprob: -7.693485260009766
    7. 'AI' → logprob: -7.693485260009766
    8. ')")' → logprob: -7.943485260009766
    9. ' ")' → logprob: -8.193485260009766
    10. ' ' → logprob: -8.943485260009766

Token 61: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07589201629161835
    2. ' else' → logprob: -3.9508919715881348
    3. 'elif' → logprob: -4.075891971588135
    4. '<|end|>' → logprob: -4.075891971588135
    5. '
' → logprob: -4.325891971588135
    6. ':' → logprob: -5.825891971588135
    7. '```' → logprob: -6.450891971588135
    8. ')' → logprob: -7.575891971588135
    9. '\n' → logprob: -7.950891971588135
    10. '   ' → logprob: -8.825892448425293

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1756367712223437e-05
    2. ':
' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.000011444091797
    4. ' :' → logprob: -14.625011444091797
    5. '):' → logprob: -16.625011444091797
    6. '():' → logprob: -17.125011444091797
    7. ':**' → logprob: -17.625011444091797
    8. ':

' → logprob: -18.250011444091797
    9. '```' → logprob: -18.375011444091797
    10. ':def' → logprob: -18.500011444091797

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0066871945746243
    2. 'print' → logprob: -5.131687164306641
    3. ' print' → logprob: -7.256687164306641
    4. '"' → logprob: -10.50668716430664
    5. '```' → logprob: -11.13168716430664
    6. '   ' → logprob: -12.63168716430664
    7. '       ' → logprob: -13.13168716430664
    8. '	print' → logprob: -13.25668716430664
    9. '    
' → logprob: -14.25668716430664
    10. '`' → logprob: -14.38168716430664

Token 64: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3869245648384094
    2. 'print' (adapté à ' print') → logprob: -1.1369245052337646
    3. '    ' → logprob: -10.386924743652344
    4. '   ' → logprob: -11.511924743652344
    5. '```' → logprob: -12.261924743652344
    6. ' ' → logprob: -13.261924743652344
    7. '"' → logprob: -13.386924743652344
    8. '	print' → logprob: -13.511924743652344
    9. ' ' → logprob: -13.636924743652344
    10. '`' → logprob: -14.636924743652344

Token 65: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5792800784111023
    2. '("' → logprob: -0.8292800784111023
    3. '("("' → logprob: -5.829279899597168
    4. '("")' → logprob: -7.954279899597168
    5. '('' → logprob: -10.954279899597168
    6. '()' → logprob: -11.579279899597168
    7. '("""' → logprob: -12.079279899597168
    8. '("(' → logprob: -12.954279899597168
    9. '(""' → logprob: -13.204279899597168
    10. '(
' → logprob: -13.329279899597168

Token 66: 'Close' (ID: 11200)
  Prédit: 'Closed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Closed' → logprob: -0.11348818987607956
    2. 'Close' → logprob: -2.61348819732666
    3. '"' → logprob: -3.86348819732666
    4. 'Locked' → logprob: -4.61348819732666
    5. 'Lock' → logprob: -6.61348819732666
    6. '")' → logprob: -7.86348819732666
    7. 'Open' → logprob: -7.86348819732666
    8. 'Blocked' → logprob: -8.11348819732666
    9. 'C' → logprob: -8.86348819732666
    10. 'Stay' → logprob: -9.48848819732666

Token 67: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -2.5107177862082608e-05
    2. ')' → logprob: -11.375024795532227
    3. ')")' → logprob: -11.375024795532227
    4. '")
' → logprob: -13.750024795532227
    5. '"' → logprob: -13.875024795532227
    6. 'd' → logprob: -17.750024795532227
    7. '()' → logprob: -17.750024795532227
    8. '')' → logprob: -18.125024795532227
    9. '")

' → logprob: -18.125024795532227
    10. '!")' → logprob: -18.375024795532227


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 65
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 58
Précision stricte (1ère position): 55.38%
Précision adaptée (1ère position): 55.38%
Précision (top 10): 89.23%
================================================================================
