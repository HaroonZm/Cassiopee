================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:13:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    a,b,c = map(int,input().split())
    if a==0 and b==0 and c==0:
        break
    N = int(input())
    tests = []
    for _ in range(N):
        i,j,k,r = map(int,input().split())
        tests.append((i,j,k,r))
    n = a+b+c
    status = [2]*(n+1) # 0: broken,1:ok,2:unknown

    changed = True
    while changed:
        changed = False
        for i,j,k,r in tests:
            parts = [i,j,k]
            if r==1:
                # all 3 parts good
                for p in parts:
                    if status[p]==0:
                        # conflict but problem states no contradictions, just ignore
                        pass
                    if status[p]!=1:
                        status[p]=1
                        changed = True
            else:
                # r==0 means at least one part broken
                # if all parts known good, conflict but ignore
                if all(status[p]==1 for p in parts):
                    continue
                # if one part known broken, no new info
                if any(status[p]==0 for p in parts):
                    continue
                # if two known good, third must be broken
                good = [p for p in parts if status[p]==1]
                unknown = [p for p in parts if status[p]==2]
                if len(good)==2 and len(unknown)==1:
                    p = unknown[0]
                    if status[p]!=0:
                        status[p]=0
                        changed = True
                # if one good one unknown one unknown, no certain info
                # if zero known, no info
                # if one broken part, skip

    for i in range(1,n+1):
        print(status[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ',b' (ID: 17568)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8761464357376099
    2. ' ' → logprob: -1.2511464357376099
    3. 'd' → logprob: -2.7511463165283203
    4. ' =' → logprob: -2.8761463165283203
    5. '   ' → logprob: -3.1261463165283203
    6. '+' → logprob: -3.3761463165283203
    7. ' +=' → logprob: -4.00114631652832
    8. '.' → logprob: -4.37614631652832
    9. '[' → logprob: -4.75114631652832
    10. 'n' → logprob: -4.87614631652832

Token 6: ',c' (ID: 22261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4199080169200897
    2. '=' → logprob: -1.419908046722412
    3. ',' → logprob: -2.419908046722412
    4. ' ,' → logprob: -4.544908046722412
    5. ' ' → logprob: -7.169908046722412
    6. ')' → logprob: -7.669908046722412
    7. '[' → logprob: -9.419907569885254
    8. ' =
' → logprob: -9.919907569885254
    9. '```' → logprob: -10.419907569885254
    10. '<|end|>' → logprob: -10.669907569885254

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16556896269321442
    2. '=' → logprob: -2.5405690670013428
    3. ',' → logprob: -2.6655690670013428
    4. ' ,' → logprob: -5.790568828582764
    5. ' ' → logprob: -8.040569305419922
    6. ')' → logprob: -8.290569305419922
    7. '   ' → logprob: -8.540569305419922
    8. '<|end|>' → logprob: -9.415569305419922
    9. '  ' → logprob: -9.540569305419922
    10. '    ' → logprob: -9.790569305419922

Token 8: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6300217509269714
    2. ' input' → logprob: -0.8800217509269714
    3. ' ' → logprob: -3.880021810531616
    4. 'input' → logprob: -4.255021572113037
    5. 'map' → logprob: -4.630021572113037
    6. '0' → logprob: -5.255021572113037
    7. '1' → logprob: -7.505021572113037
    8. ' (' → logprob: -8.130022048950195
    9. ' list' → logprob: -8.380022048950195
    10. ' [' → logprob: -8.505022048950195

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5519950985908508
    2. '(lambda' → logprob: -1.301995038986206
    3. '(' → logprob: -2.301995038986206
    4. '(str' → logprob: -3.051995038986206
    5. '<|end|>' → logprob: -5.926995277404785
    6. 'int' → logprob: -7.801995277404785
    7. '()' → logprob: -8.301995277404785
    8. '(
' → logprob: -8.676995277404785
    9. '(input' → logprob: -9.051995277404785
    10. '```' → logprob: -9.176995277404785

Token 10: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.28637877106666565
    2. ')' → logprob: -1.9113787412643433
    3. '(' → logprob: -2.411378860473633
    4. '(user' → logprob: -5.536378860473633
    5. 'input' → logprob: -6.661378860473633
    6. '(range' → logprob: -6.786378860473633
    7. '(str' → logprob: -6.911378860473633
    8. '(data' → logprob: -7.161378860473633
    9. '<|end|>' → logprob: -7.411378860473633
    10. ',' → logprob: -8.786378860473633

Token 11: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2742505967617035
    2. '()' → logprob: -1.5242506265640259
    3. '(' → logprob: -4.899250507354736
    4. ')' → logprob: -5.149250507354736
    5. '('' → logprob: -5.274250507354736
    6. '().' → logprob: -7.149250507354736
    7. '());' → logprob: -7.524250507354736
    8. '(""))' → logprob: -8.024250984191895
    9. '()>' → logprob: -8.274250984191895
    10. ' ())' → logprob: -8.399250984191895

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000205566844670102
    2. 'strip' → logprob: -8.750205993652344
    3. 'rstrip' → logprob: -10.125205993652344
    4. '(split' → logprob: -12.500205993652344
    5. ' split' → logprob: -12.750205993652344
    6. ')' → logprob: -16.000205993652344
    7. 'replace' → logprob: -16.250205993652344
    8. 'spl' → logprob: -17.125205993652344
    9. 's' → logprob: -17.250205993652344
    10. '```' → logprob: -17.625205993652344

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3519454598426819
    2. ')' → logprob: -1.351945400238037
    3. '))' → logprob: -3.976945400238037
    4. '()))' → logprob: -4.101945400238037
    5. '()' → logprob: -5.976945400238037
    6. '(' → logprob: -10.851945877075195
    7. '`)' → logprob: -11.101945877075195
    8. ')))' → logprob: -11.101945877075195
    9. ' ())' → logprob: -11.476945877075195
    10. '('' → logprob: -12.226945877075195

Token 14: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16795676946640015
    2. '<|end|>' → logprob: -2.792956829071045
    3. '   ' → logprob: -3.542956829071045
    4. ')' → logprob: -3.667956829071045
    5. ' if' → logprob: -3.917956829071045
    6. ',' → logprob: -4.792956829071045
    7. '\n' → logprob: -6.042956829071045
    8. ' ' → logprob: -6.667956829071045
    9. '```' → logprob: -6.792956829071045
    10. ':
' → logprob: -6.792956829071045

Token 15: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3857726454734802
    2. 'a' → logprob: -1.510772705078125
    3. ' not' → logprob: -2.385772705078125
    4. ' c' → logprob: -6.010772705078125
    5. ' ' → logprob: -6.135772705078125
    6. 'not' → logprob: -6.510772705078125
    7. ' b' → logprob: -7.510772705078125
    8. 'c' → logprob: -7.760772705078125
    9. 'b' → logprob: -9.635772705078125
    10. ' (' → logprob: -9.760772705078125

Token 17: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06746958196163177
    2. ' <' → logprob: -3.692469596862793
    3. '==' → logprob: -3.817469596862793
    4. ' <=' → logprob: -4.817469596862793
    5. ' >' → logprob: -5.817469596862793
    6. '<' → logprob: -6.067469596862793
    7. ' ' → logprob: -6.567469596862793
    8. ' !=' → logprob: -6.817469596862793
    9. ' >=' → logprob: -6.817469596862793
    10. '>' → logprob: -7.942469596862793

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11606479436159134
    2. ' ' → logprob: -2.3660647869110107
    3. 'b' → logprob: -4.24106502532959
    4. ' b' → logprob: -6.74106502532959
    5. '-' → logprob: -9.24106502532959
    6. '1' → logprob: -11.17856502532959
    7. ' -' → logprob: -11.61606502532959
    8. 'c' → logprob: -11.86606502532959
    9. '   ' → logprob: -12.05356502532959
    10. '  ' → logprob: -12.17856502532959

Token 19: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04894659295678139
    2. 'and' → logprob: -3.2989466190338135
    3. ':' → logprob: -4.548946380615234
    4. ' or' → logprob: -8.548946380615234
    5. '   ' → logprob: -10.173946380615234
    6. ' ' → logprob: -10.923946380615234
    7. ',' → logprob: -12.548946380615234
    8. '	and' → logprob: -12.548946380615234
    9. '  ' → logprob: -13.048946380615234
    10. ':return' → logprob: -13.173946380615234

Token 20: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2519339919090271
    2. ' b' → logprob: -1.5019340515136719
    3. ' ' → logprob: -12.251934051513672
    4. '<|end|>' → logprob: -17.126934051513672
    5. '	b' → logprob: -17.376934051513672
    6. '    ' → logprob: -18.001934051513672
    7. 'a' → logprob: -18.501934051513672
    8. ' ' → logprob: -18.751934051513672
    9. ',b' → logprob: -19.126934051513672
    10. '   ' → logprob: -19.376934051513672

Token 21: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28168603777885437
    2. ' ==' → logprob: -1.4066860675811768
    3. '<|end|>' → logprob: -7.656685829162598
    4. ' and' → logprob: -10.781685829162598
    5. '=' → logprob: -11.156685829162598
    6. ' ' → logprob: -11.656685829162598
    7. '<|end|>' → logprob: -11.656685829162598
    8. '===' → logprob: -13.406685829162598
    9. 'and' → logprob: -13.531685829162598
    10. '()==' → logprob: -13.656685829162598

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002476135268807411
    2. ' ' → logprob: -6.002476215362549
    3. 'c' → logprob: -15.37747573852539
    4. '  ' → logprob: -17.25247573852539
    5. '۰' → logprob: -17.25247573852539
    6. '1' → logprob: -17.31497573852539
    7. ' c' → logprob: -17.50247573852539
    8. 'and' → logprob: -17.62747573852539
    9. ' and' → logprob: -17.81497573852539
    10. '   ' → logprob: -17.93997573852539

Token 23: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005241821985691786
    2. 'and' → logprob: -5.255241870880127
    3. '<|end|>' → logprob: -12.755241394042969
    4. ' ' → logprob: -12.880241394042969
    5. '	and' → logprob: -14.005241394042969
    6. '```' → logprob: -14.630241394042969
    7. '<|end|>' → logprob: -14.630241394042969
    8. '   ' → logprob: -14.880241394042969
    9. ' и' → logprob: -15.630241394042969
    10. '``' → logprob: -16.63024139404297

Token 24: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6931584477424622
    2. ' c' → logprob: -0.6931584477424622
    3. ' ' → logprob: -11.693158149719238
    4. '  ' → logprob: -13.943158149719238
    5. '	c' → logprob: -14.443158149719238
    6. '0' → logprob: -15.068158149719238
    7. '   ' → logprob: -15.068158149719238
    8. '<|end|>' → logprob: -15.193158149719238
    9. ')c' → logprob: -15.568158149719238
    10. '_c' → logprob: -15.693158149719238

Token 25: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6342985033988953
    2. '==' → logprob: -0.7592985033988953
    3. '<|end|>' → logprob: -7.259298324584961
    4. ' ' → logprob: -8.259298324584961
    5. '=' → logprob: -8.634298324584961
    6. ')==' → logprob: -8.759298324584961
    7. '<|end|>' → logprob: -8.884298324584961
    8. '0' → logprob: -9.634298324584961
    9. ' ' → logprob: -10.009298324584961
    10. '()==' → logprob: -10.384298324584961

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003178544342517853
    2. ' ' → logprob: -5.753178596496582
    3. '  ' → logprob: -15.565678596496582
    4. ' ' → logprob: -16.128177642822266
    5. '```' → logprob: -16.128177642822266
    6. '   ' → logprob: -16.253177642822266
    7. '۰' → logprob: -16.503177642822266
    8. '1' → logprob: -16.690677642822266
    9. '०' → logprob: -17.378177642822266
    10. 'o' → logprob: -17.503177642822266

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00029363270732574165
    2. ':
' → logprob: -8.375293731689453
    3. '   ' → logprob: -10.125293731689453
    4. '       ' → logprob: -11.125293731689453
    5. ':return' → logprob: -12.625293731689453
    6. '):' → logprob: -13.125293731689453
    7. ' :' → logprob: -13.250293731689453
    8. ',' → logprob: -15.375293731689453
    9. '.' → logprob: -16.000293731689453
    10. ':\' → logprob: -16.250293731689453

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01989690028131008
    2. '   ' → logprob: -4.269896984100342
    3. '\n' → logprob: -5.394896984100342
    4. ' break' → logprob: -8.269896507263184
    5. '	break' → logprob: -8.519896507263184
    6. '<|end|>' → logprob: -8.519896507263184
    7. ':' → logprob: -8.894896507263184
    8. '	' → logprob: -9.894896507263184
    9. '\' → logprob: -10.019896507263184
    10. '\t' → logprob: -10.144896507263184

Token 29: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.09606815129518509
    2. '       ' → logprob: -2.5960681438446045
    3. 'break' (adapté à ' break') → logprob: -4.096068382263184
    4. '           ' → logprob: -8.346068382263184
    5. '   ' → logprob: -9.221068382263184
    6. '	break' → logprob: -9.846068382263184
    7. ' ' → logprob: -13.721068382263184
    8. '_break' → logprob: -13.971068382263184
    9. '```' → logprob: -14.221068382263184
    10. ' ' → logprob: -14.596068382263184

Token 30: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6140047907829285
    2. '\n' → logprob: -1.3640048503875732
    3. '
' → logprob: -1.7390048503875732
    4. '    
' → logprob: -3.9890048503875732
    5. '  
' → logprob: -5.864004611968994
    6. '<|end|>' → logprob: -6.239004611968994
    7. '\r' → logprob: -7.364004611968994
    8. ' 
' → logprob: -7.489004611968994
    9. '   
' → logprob: -7.739004611968994
    10. '```' → logprob: -7.739004611968994

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059697601944208145
    2. '
' → logprob: -3.8096976280212402
    3. '\n' → logprob: -4.18469762802124
    4. '```' → logprob: -4.68469762802124
    5. '<|end|>' → logprob: -4.93469762802124
    6. '    
' → logprob: -5.80969762802124
    7. '  
' → logprob: -7.93469762802124
    8. '   
' → logprob: -9.184697151184082
    9. '<|end|>' → logprob: -9.184697151184082
    10. '  ' → logprob: -9.309697151184082

Token 32: ' N' (ID: 478)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6148420572280884
    2. '   ' → logprob: -0.8648420572280884
    3. '<|end|>' → logprob: -4.614841938018799
    4. '    
' → logprob: -5.114841938018799
    5. '```' → logprob: -5.239841938018799
    6. '
' → logprob: -5.489841938018799
    7. '\' → logprob: -5.864841938018799
    8. '\r' → logprob: -6.239841938018799
    9. '  
' → logprob: -6.239841938018799
    10. '   
' → logprob: -6.239841938018799

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5628241896629333
    2. '=' → logprob: -0.9378241896629333
    3. ',' → logprob: -3.937824249267578
    4. 'um' → logprob: -5.687824249267578
    5. '=max' → logprob: -6.062824249267578
    6. '=int' → logprob: -6.562824249267578
    7. '-' → logprob: -6.812824249267578
    8. 'ext' → logprob: -6.812824249267578
    9. ',a' → logprob: -7.187824249267578
    10. '=a' → logprob: -7.312824249267578

Token 34: ' int' (ID: 677)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7995302677154541
    2. ' a' → logprob: -1.174530267715454
    3. ' max' → logprob: -2.424530267715454
    4. ' (' → logprob: -2.799530267715454
    5. 'max' → logprob: -3.674530267715454
    6. '(a' → logprob: -3.674530267715454
    7. ' ' → logprob: -5.049530029296875
    8. '   ' → logprob: -5.299530029296875
    9. ' b' → logprob: -5.424530029296875
    10. ' int' → logprob: -5.549530029296875

Token 35: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1010691374540329
    2. '(a' → logprob: -3.101069211959839
    3. '(' → logprob: -3.726069211959839
    4. '((' → logprob: -3.851069211959839
    5. '(c' → logprob: -5.85106897354126
    6. 'input' → logprob: -6.35106897354126
    7. '(max' → logprob: -8.101069450378418
    8. '('' → logprob: -8.851069450378418
    9. '(abs' → logprob: -9.226069450378418
    10. '(len' → logprob: -9.351069450378418

Token 36: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03832455724477768
    2. '()' → logprob: -3.2883245944976807
    3. ')' → logprob: -8.288324356079102
    4. '().' → logprob: -11.413324356079102
    5. ' ())' → logprob: -11.413324356079102
    6. '(' → logprob: -12.663324356079102
    7. '();)' → logprob: -13.288324356079102
    8. '())
' → logprob: -13.538324356079102
    9. '()))' → logprob: -14.163324356079102
    10. '()
' → logprob: -14.538324356079102

Token 37: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5280718803405762
    2. '   ' → logprob: -2.028071880340576
    3. ' ' → logprob: -2.153071880340576
    4. '<|end|>' → logprob: -2.778071880340576
    5. '\n' → logprob: -3.653071880340576
    6. ' )' → logprob: -4.403071880340576
    7. ' 
' → logprob: -4.653071880340576
    8. '    ' → logprob: -4.778071880340576
    9. '    
' → logprob: -5.028071880340576
    10. '  ' → logprob: -5.153071880340576

Token 38: ' tests' (ID: 10742)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9896813035011292
    2. '   ' → logprob: -2.1146812438964844
    3. 'for' → logprob: -2.2396812438964844
    4. ')' → logprob: -2.6146812438964844
    5. ' for' → logprob: -2.8646812438964844
    6. ' if' → logprob: -3.1146812438964844
    7. 'n' → logprob: -3.2396812438964844
    8. '<|end|>' → logprob: -3.7396812438964844
    9. 'if' → logprob: -3.8646812438964844
    10. 's' → logprob: -3.8646812438964844

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43903255462646484
    2. '[' → logprob: -1.5640325546264648
    3. '.' → logprob: -2.689032554626465
    4. '=' → logprob: -4.189032554626465
    5. '   ' → logprob: -4.189032554626465
    6. '_' → logprob: -4.439032554626465
    7. '[:]' → logprob: -4.814032554626465
    8. ' .' → logprob: -5.314032554626465
    9. ' ' → logprob: -5.439032554626465
    10. ')' → logprob: -5.564032554626465

Token 40: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.849510133266449
    2. ' []' → logprob: -1.4745101928710938
    3. '[' → logprob: -1.7245101928710938
    4. '[input' → logprob: -2.7245101928710938
    5. 'list' → logprob: -3.0995101928710938
    6. ' [' → logprob: -3.4745101928710938
    7. ' list' → logprob: -4.724510192871094
    8. '[list' → logprob: -4.849510192871094
    9. '[int' → logprob: -5.599510192871094
    10. 'input' → logprob: -6.474510192871094

Token 41: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.149251103401184
    2. '   ' → logprob: -1.274251103401184
    3. '<|end|>' → logprob: -1.399251103401184
    4. ' for' → logprob: -2.2742509841918945
    5. '	for' → logprob: -4.5242509841918945
    6. '[' → logprob: -4.7742509841918945
    7. ' ' → logprob: -4.7742509841918945
    8. '<|end|>' → logprob: -5.0242509841918945
    9. '    
' → logprob: -5.8992509841918945
    10. ' 
' → logprob: -5.8992509841918945

Token 42: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.40315672755241394
    2. ' for' → logprob: -1.1531567573547363
    3. '[' → logprob: -4.903156757354736
    4. '   ' → logprob: -5.653156757354736
    5. '	for' → logprob: -6.028156757354736
    6. '<|end|>' → logprob: -6.653156757354736
    7. '\t' → logprob: -7.528156757354736
    8. ' ' → logprob: -8.153156280517578
    9. '\n' → logprob: -8.903156280517578
    10. '\' → logprob: -9.403156280517578

Token 43: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6159642338752747
    2. ' _' → logprob: -0.8659642338752747
    3. ' i' → logprob: -3.24096417427063
    4. ' ' → logprob: -9.61596393585205
    5. 'i' → logprob: -10.61596393585205
    6. '_i' → logprob: -11.36596393585205
    7. ' ' → logprob: -13.74096393585205
    8. ' t' → logprob: -13.74096393585205
    9. ' ‌' → logprob: -13.99096393585205
    10. ' in' → logprob: -14.11596393585205

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5249569416046143
    2. ' i' → logprob: -1.6499569416046143
    3. '_' → logprob: -2.0249569416046143
    4. 'i' → logprob: -3.1499569416046143
    5. ' _' → logprob: -3.7749569416046143
    6. 'in' → logprob: -4.524956703186035
    7. ' ' → logprob: -5.524956703186035
    8. 'n' → logprob: -6.149956703186035
    9. '  ' → logprob: -8.149956703186035
    10. ')' → logprob: -8.399956703186035

Token 45: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.28125813603401184
    2. ' range' → logprob: -1.4062581062316895
    3. 'ran' → logprob: -10.906258583068848
    4. 'rang' → logprob: -11.281258583068848
    5. 'ra' → logprob: -11.531258583068848
    6. ' ' → logprob: -11.656258583068848
    7. 'r' → logprob: -11.656258583068848
    8. '	range' → logprob: -12.156258583068848
    9. 'input' → logprob: -12.281258583068848
    10. ' ran' → logprob: -12.406258583068848

Token 46: '(N' (ID: 10564)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.9118701815605164
    2. '(' → logprob: -1.1618702411651611
    3. '(N' → logprob: -1.4118702411651611
    4. ' (' → logprob: -3.411870241165161
    5. ' ' → logprob: -5.286870002746582
    6. '  ' → logprob: -6.786870002746582
    7. ' )' → logprob: -7.161870002746582
    8. 'N' → logprob: -7.161870002746582
    9. '(n' → logprob: -7.411870002746582
    10. ' range' → logprob: -9.661870002746582

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033187614753842354
    2. ')' → logprob: -5.878318786621094
    3. ':' → logprob: -8.003318786621094
    4. '):
' → logprob: -9.378318786621094
    5. ' ):' → logprob: -9.503318786621094
    6. '   ' → logprob: -11.378318786621094
    7. '+' → logprob: -13.253318786621094
    8. ' )' → logprob: -13.253318786621094
    9. '():' → logprob: -13.628318786621094
    10. ',' → logprob: -14.128318786621094

Token 48: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10604965686798096
    2. '<|end|>' → logprob: -3.1060495376586914
    3. '    ' → logprob: -3.7310495376586914
    4. ' ' → logprob: -4.606049537658691
    5. '       ' → logprob: -4.856049537658691
    6. '    
' → logprob: -5.481049537658691
    7. '<|end|>' → logprob: -6.231049537658691
    8. ' 
' → logprob: -6.356049537658691
    9. '	tests' → logprob: -6.481049537658691
    10. '```' → logprob: -7.731049537658691

Token 49: ' i' (ID: 575)
  Prédit: ' tests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tests' → logprob: -1.0444812774658203
    2. 'x' → logprob: -1.9194812774658203
    3. ' x' → logprob: -1.9194812774658203
    4. 'tests' → logprob: -2.1694812774658203
    5. 't' → logprob: -2.4194812774658203
    6. ' t' → logprob: -2.7944812774658203
    7. ' test' → logprob: -3.9194812774658203
    8. '   ' → logprob: -4.04448127746582
    9. ' line' → logprob: -4.41948127746582
    10. 's' → logprob: -5.04448127746582

Token 50: ',j' (ID: 22712)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18688757717609406
    2. ',n' → logprob: -2.811887502670288
    3. ',' → logprob: -3.186887502670288
    4. 'tem' → logprob: -4.186887741088867
    5. ',j' → logprob: -4.686887741088867
    6. ',a' → logprob: -4.811887741088867
    7. '=' → logprob: -5.561887741088867
    8. 'nt' → logprob: -5.686887741088867
    9. ' =' → logprob: -5.936887741088867
    10. ',t' → logprob: -6.061887741088867

Token 51: ',k' (ID: 35155)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40121161937713623
    2. '=' → logprob: -1.2762116193771362
    3. ',' → logprob: -3.026211738586426
    4. ',k' → logprob: -7.276211738586426
    5. ' ,' → logprob: -7.401211738586426
    6. ',v' → logprob: -8.651211738586426
    7. ',n' → logprob: -8.776211738586426
    8. ',input' → logprob: -8.901211738586426
    9. ',d' → logprob: -9.026211738586426
    10. ' ' → logprob: -9.276211738586426

Token 52: ',r' (ID: 33654)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231544971466064
    2. '=' → logprob: -0.8981544971466064
    3. ',' → logprob: -10.773154258728027
    4. ' ' → logprob: -12.898154258728027
    5. '=input' → logprob: -13.273154258728027
    6. '   ' → logprob: -13.648154258728027
    7. ')' → logprob: -14.023154258728027
    8. '  ' → logprob: -14.273154258728027
    9. '=int' → logprob: -14.273154258728027
    10. '    ' → logprob: -14.398154258728027

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1290655881166458
    2. '=' → logprob: -2.12906551361084
    3. ',' → logprob: -6.25406551361084
    4. ' ' → logprob: -9.50406551361084
    5. '=input' → logprob: -10.50406551361084
    6. ' ,' → logprob: -10.75406551361084
    7. '=int' → logprob: -10.87906551361084
    8. ',r' → logprob: -11.12906551361084
    9. ',e' → logprob: -11.87906551361084
    10. '  ' → logprob: -12.12906551361084

Token 54: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.08902627229690552
    2. 'map' → logprob: -2.4640262126922607
    3. '	map' → logprob: -10.46402645111084
    4. ' ' → logprob: -10.58902645111084
    5. '   ' → logprob: -11.58902645111084
    6. ' list' → logprob: -11.83902645111084
    7. ' input' → logprob: -12.21402645111084
    8. 'm' → logprob: -12.83902645111084
    9. '  ' → logprob: -12.96402645111084
    10. 'input' → logprob: -13.33902645111084

Token 55: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001584850688232109
    2. '(' → logprob: -9.000158309936523
    3. '<int' → logprob: -10.875158309936523
    4. '=int' → logprob: -12.250158309936523
    5. 'int' → logprob: -13.125158309936523
    6. ',int' → logprob: -13.125158309936523
    7. '[int' → logprob: -13.250158309936523
    8. '<|end|>' → logprob: -13.250158309936523
    9. ' (' → logprob: -13.500158309936523
    10. ']int' → logprob: -13.875158309936523

Token 56: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.8671345710754395
    2. ',input' → logprob: -1.2421345710754395
    3. '()' → logprob: -1.6171345710754395
    4. '(),' → logprob: -2.9921345710754395
    5. ')' → logprob: -4.2421345710754395
    6. '().' → logprob: -4.4921345710754395
    7. '(' → logprob: -4.7421345710754395
    8. ',' → logprob: -5.2421345710754395
    9. '=input' → logprob: -6.8671345710754395
    10. '())' → logprob: -7.7421345710754395

Token 57: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.226628895296017e-06
    2. '()' → logprob: -11.875007629394531
    3. ' ().' → logprob: -16.75000762939453
    4. ')' → logprob: -17.12500762939453
    5. '())' → logprob: -17.62500762939453
    6. '(' → logprob: -17.62500762939453
    7. '.' → logprob: -17.87500762939453
    8. '   ' → logprob: -18.25000762939453
    9. '()
' → logprob: -19.25000762939453
    10. '().__' → logprob: -19.50000762939453

Token 58: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. ' split' → logprob: -14.250000953674316
    3. 'strip' → logprob: -16.25
    4. 'spl' → logprob: -16.625
    5. '(split' → logprob: -17.375
    6. ')' → logprob: -17.5
    7. 'rstrip' → logprob: -17.875
    8. 'plit' → logprob: -18.875
    9. '.split' → logprob: -18.875
    10. 's' → logprob: -19.125

Token 59: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23282454907894135
    2. '())' → logprob: -1.7328245639801025
    3. '()' → logprob: -3.4828245639801025
    4. '())
' → logprob: -9.482824325561523
    5. ')
' → logprob: -9.857824325561523
    6. '))' → logprob: -10.607824325561523
    7. ' )' → logprob: -11.357824325561523
    8. '   ' → logprob: -11.482824325561523
    9. '()
' → logprob: -12.107824325561523
    10. '(' → logprob: -12.107824325561523

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17799225449562073
    2. '<|end|>' → logprob: -2.802992343902588
    3. '   ' → logprob: -2.927992343902588
    4. '        
' → logprob: -4.302992343902588
    5. ')' → logprob: -4.427992343902588
    6. '    
' → logprob: -5.177992343902588
    7. '
' → logprob: -5.302992343902588
    8. ' ' → logprob: -5.677992343902588
    9. '    ' → logprob: -6.302992343902588
    10. '<|end|>' → logprob: -6.427992343902588

Token 61: ' tests' (ID: 10742)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11381813883781433
    2. '   ' → logprob: -3.1138181686401367
    3. ' tests' → logprob: -3.4888181686401367
    4. '
' → logprob: -4.363818168640137
    5. '<|end|>' → logprob: -5.488818168640137
    6. ' if' → logprob: -5.738818168640137
    7. '        
' → logprob: -5.863818168640137
    8. 'tests' (adapté à ' tests') → logprob: -6.113818168640137
    9. '	tests' → logprob: -6.238818168640137
    10. '<|end|>' → logprob: -7.113818168640137

Token 62: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3132920265197754
    2. '.append' → logprob: -1.3132920265197754
    3. '.extend' → logprob: -11.938291549682617
    4. '.setdefault' → logprob: -12.438291549682617
    5. ' .' → logprob: -12.688291549682617
    6. '​.' → logprob: -12.813291549682617
    7. '.push' → logprob: -12.938291549682617
    8. '.app' → logprob: -13.063291549682617
    9. '.add' → logprob: -13.063291549682617
    10. '.​' → logprob: -13.438291549682617

Token 63: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0015043864259496331
    2. '(' → logprob: -6.501504421234131
    3. '(
' → logprob: -14.251503944396973
    4. '([' → logprob: -14.251503944396973
    5. '(i' → logprob: -14.751503944396973
    6. '(((' → logprob: -15.126503944396973
    7. '()' → logprob: -17.37650489807129
    8. '(('' → logprob: -17.62650489807129
    9. '(a' → logprob: -17.75150489807129
    10. '(tuple' → logprob: -18.50150489807129

Token 64: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000779369322117418
    2. ' i' → logprob: -7.250779151916504
    3. '   ' → logprob: -10.000779151916504
    4. ' ' → logprob: -11.375779151916504
    5. 'a' → logprob: -12.625779151916504
    6. '  ' → logprob: -12.750779151916504
    7. '(i' → logprob: -13.125779151916504
    8. '    ' → logprob: -13.250779151916504
    9. ')' → logprob: -14.250779151916504
    10. '	i' → logprob: -14.625779151916504

Token 65: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42888638377189636
    2. ',j' → logprob: -1.0538864135742188
    3. ' ,' → logprob: -8.678886413574219
    4. '-' → logprob: -11.928886413574219
    5. ',
' → logprob: -12.928886413574219
    6. ' ' → logprob: -13.428886413574219
    7. ',b' → logprob: -14.303886413574219
    8. '	' → logprob: -14.553886413574219
    9. ',)' → logprob: -14.553886413574219
    10. '   ' → logprob: -14.803886413574219

Token 66: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.00039158877916634083
    2. ',' → logprob: -8.125391960144043
    3. ' ,' → logprob: -9.375391960144043
    4. 'k' → logprob: -12.250391960144043
    5. '),' → logprob: -13.875391960144043
    6. ',j' → logprob: -14.500391960144043
    7. ',c' → logprob: -14.625391960144043
    8. ',
' → logprob: -14.750391960144043
    9. ',i' → logprob: -14.875391960144043
    10. ',l' → logprob: -15.000391960144043

Token 67: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.004265369847416878
    2. ',' → logprob: -5.504265308380127
    3. 'r' → logprob: -8.879265785217285
    4. ' ,' → logprob: -10.504265785217285
    5. ' r' → logprob: -11.754265785217285
    6. '))' → logprob: -12.629265785217285
    7. ',n' → logprob: -13.629265785217285
    8. '	r' → logprob: -14.379265785217285
    9. ',t' → logprob: -14.629265785217285
    10. ',j' → logprob: -14.629265785217285

Token 68: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08917413651943207
    2. ')' → logprob: -2.4641740322113037
    3. '))
' → logprob: -8.839174270629883
    4. ')))' → logprob: -10.339174270629883
    5. ' ))' → logprob: -10.464174270629883
    6. '   ' → logprob: -11.339174270629883
    7. ')
' → logprob: -12.214174270629883
    8. ' )' → logprob: -12.714174270629883
    9. ',' → logprob: -12.964174270629883
    10. ' ' → logprob: -13.464174270629883

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31298941373825073
    2. 'for' → logprob: -1.6879894733428955
    3. ' for' → logprob: -3.4379894733428955
    4. '<|end|>' → logprob: -4.437989234924316
    5. '    
' → logprob: -5.187989234924316
    6. 'results' → logprob: -5.312989234924316
    7. 'n' → logprob: -5.437989234924316
    8. 't' → logprob: -5.812989234924316
    9. 'result' → logprob: -5.812989234924316
    10. '```' → logprob: -5.937989234924316

Token 70: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4460802972316742
    2. ' for' → logprob: -2.696080207824707
    3. 'for' → logprob: -2.946080207824707
    4. 's' → logprob: -3.696080207824707
    5. '    ' → logprob: -3.946080207824707
    6. 'r' → logprob: -3.946080207824707
    7. ' ' → logprob: -4.196080207824707
    8. 'n' (adapté à ' n') → logprob: -4.196080207824707
    9. 't' → logprob: -4.196080207824707
    10. 'result' → logprob: -4.321080207824707

Token 71: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6032535433769226
    2. 'ew' → logprob: -2.4782536029815674
    3. '=' → logprob: -2.6032536029815674
    4. 'o' → logprob: -2.9782536029815674
    5. 'a' → logprob: -3.1032536029815674
    6. 'w' → logprob: -3.2282536029815674
    7. ' =' → logprob: -3.3532536029815674
    8. '_' → logprob: -3.7282536029815674
    9. 'um' → logprob: -4.353253364562988
    10. 'u' → logprob: -4.353253364562988

Token 72: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7339427471160889
    2. 'len' → logprob: -1.4839427471160889
    3. ' len' → logprob: -2.233942747116089
    4. 'a' → logprob: -3.358942747116089
    5. ' ' → logprob: -3.358942747116089
    6. '[]' → logprob: -4.108942985534668
    7. 'N' → logprob: -4.108942985534668
    8. ' N' → logprob: -4.233942985534668
    9. 'int' → logprob: -4.233942985534668
    10. ' a' → logprob: -4.358942985534668

Token 73: '+b' (ID: 76609)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13063699007034302
    2. ' +' → logprob: -3.0056369304656982
    3. '-' → logprob: -3.7556369304656982
    4. '+b' → logprob: -4.130637168884277
    5. ',' → logprob: -4.380637168884277
    6. '*' → logprob: -4.755637168884277
    7. ',b' → logprob: -5.880637168884277
    8. ' *' → logprob: -6.005637168884277
    9. '**' → logprob: -7.380637168884277
    10. ' ' → logprob: -7.380637168884277

Token 74: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.03840475156903267
    2. '+' → logprob: -3.288404703140259
    3. ' +' → logprob: -8.28840446472168
    4. '<|end|>' → logprob: -9.53840446472168
    5. 'c' → logprob: -10.41340446472168
    6. '+C' → logprob: -12.53840446472168
    7. '*c' → logprob: -13.03840446472168
    8. '+</' → logprob: -14.03840446472168
    9. '+
' → logprob: -14.41340446472168
    10. '>' → logprob: -14.41340446472168

Token 75: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15316857397556305
    2. '<|end|>' → logprob: -2.6531686782836914
    3. '
' → logprob: -3.5281686782836914
    4. '    
' → logprob: -3.9031686782836914
    5. 'for' → logprob: -5.778168678283691
    6. '    ' → logprob: -5.903168678283691
    7. '```' → logprob: -5.903168678283691
    8. 'n' → logprob: -6.403168678283691
    9. ' for' → logprob: -6.528168678283691
    10. ')' → logprob: -6.653168678283691

Token 77: ' status' (ID: 4495)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2909733057022095
    2. ' for' → logprob: -1.5409733057022095
    3. 'for' → logprob: -2.79097318649292
    4. 'd' → logprob: -2.91597318649292
    5. 'dp' → logprob: -3.04097318649292
    6. 'n' → logprob: -3.16597318649292
    7. ' dp' → logprob: -3.66597318649292
    8. 's' → logprob: -3.91597318649292
    9. 'result' → logprob: -3.91597318649292
    10. ' 
' → logprob: -4.29097318649292

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6298825740814209
    2. 'es' → logprob: -1.129882574081421
    3. '=' → logprob: -2.504882574081421
    4. '_' → logprob: -3.379882574081421
    5. '[' → logprob: -3.879882574081421
    6. 's' → logprob: -5.2548828125
    7. ' ' → logprob: -7.1298828125
    8. ')' → logprob: -8.1298828125
    9. '[:]' → logprob: -8.2548828125
    10. ',' → logprob: -8.6298828125

Token 79: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.18832221627235413
    2. ' []' → logprob: -2.8133223056793213
    3. '[' → logprob: -2.9383223056793213
    4. ' ' → logprob: -4.313322067260742
    5. ' ['' → logprob: -4.563322067260742
    6. ' '' → logprob: -4.688322067260742
    7. ' "' → logprob: -4.813322067260742
    8. '[]' → logprob: -5.688322067260742
    9. '0' → logprob: -5.938322067260742
    10. ' {}' → logprob: -6.313322067260742

Token 80: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21789446473121643
    2. 'False' → logprob: -1.842894434928894
    3. ''' → logprob: -4.717894554138184
    4. '-' → logprob: -4.842894554138184
    5. 'True' → logprob: -4.967894554138184
    6. '1' → logprob: -5.967894554138184
    7. '"' → logprob: -6.217894554138184
    8. '[' → logprob: -6.342894554138184
    9. ''.' → logprob: -6.467894554138184
    10. ''-' → logprob: -6.717894554138184

Token 81: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08022136241197586
    2. ']*' → logprob: -3.08022141456604
    3. ']*(' → logprob: -4.330221176147461
    4. ' ]' → logprob: -4.580221176147461
    5. ' for' → logprob: -5.705221176147461
    6. '0' → logprob: -6.330221176147461
    7. '**' → logprob: -7.455221176147461
    8. ',' → logprob: -7.705221176147461
    9. ']+' → logprob: -7.705221176147461
    10. 'for' → logprob: -8.205221176147461

Token 82: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002624086628202349
    2. ' n' → logprob: -8.625262260437012
    3. 'a' → logprob: -11.250262260437012
    4. '100' → logprob: -11.250262260437012
    5. '0' → logprob: -11.750262260437012
    6. '10' → logprob: -11.875262260437012
    7. ')n' → logprob: -11.875262260437012
    8. '3' → logprob: -12.125262260437012
    9. '   ' → logprob: -12.625262260437012
    10. '(n' → logprob: -12.875262260437012

Token 83: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008542943745851517
    2. '+' → logprob: -5.008543014526367
    3. ' )' → logprob: -6.383543014526367
    4. '+)' → logprob: -9.758543014526367
    5. '-' → logprob: -10.758543014526367
    6. '*' → logprob: -10.883543014526367
    7. ' +' → logprob: -11.008543014526367
    8. ')
' → logprob: -12.383543014526367
    9. '))' → logprob: -13.258543014526367
    10. ' -' → logprob: -13.633543014526367

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001048646867275238
    2. '2' → logprob: -7.626048564910889
    3. ' ' → logprob: -8.626049041748047
    4. '10' → logprob: -8.876049041748047
    5. '3' → logprob: -9.251049041748047
    6. '5' → logprob: -9.751049041748047
    7. '4' → logprob: -10.376049041748047
    8. '100' → logprob: -10.876049041748047
    9. '7' → logprob: -12.188549041748047
    10. '6' → logprob: -12.188549041748047

Token 85: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.341087570646778e-05
    2. ' )' → logprob: -9.500093460083008
    3. ')
' → logprob: -11.250093460083008
    4. ']' → logprob: -12.625093460083008
    5. '),' → logprob: -14.625093460083008
    6. '<|end|>' → logprob: -14.875093460083008
    7. ')

' → logprob: -15.250093460083008
    8. '}' → logprob: -15.750093460083008
    9. '[' → logprob: -15.875093460083008
    10. ')]' → logprob: -16.000093460083008

Token 86: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6207077503204346
    2. '<|end|>' → logprob: -0.9957077503204346
    3. '   ' → logprob: -3.6207077503204346
    4. 'for' → logprob: -3.9957077503204346
    5. ' 
' → logprob: -4.3707075119018555
    6. ' for' → logprob: -4.9957075119018555
    7. '    
' → logprob: -5.1207075119018555
    8. ' ' → logprob: -5.3707075119018555
    9. '\n' → logprob: -5.3707075119018555
    10. '  
' → logprob: -5.8707075119018555

Token 87: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14480403065681458
    2. ' #' → logprob: -3.019804000854492
    3. '0' → logprob: -4.144804000854492
    4. '#' → logprob: -4.144804000854492
    5. ' status' → logprob: -4.769804000854492
    6. ' index' → logprob: -4.769804000854492
    7. 'index' → logprob: -4.894804000854492
    8. 'status' → logprob: -5.644804000854492
    9. '1' → logprob: -5.769804000854492
    10. 'The' → logprob: -6.144804000854492

Token 88: '0' (ID: 15)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4815056324005127
    2. '0' → logprob: -1.4815056324005127
    3. ' ' → logprob: -3.2315056324005127
    4. ' #' → logprob: -3.6065056324005127
    5. '1' → logprob: -3.9815056324005127
    6. 'status' → logprob: -4.856505393981934
    7. '2' → logprob: -4.856505393981934
    8. '"' → logprob: -5.481505393981934
    9. 'len' → logprob: -5.731505393981934
    10. '[' → logprob: -5.731505393981934

Token 89: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7178835272789001
    2. '<|end|>' → logprob: -1.342883586883545
    3. ' for' → logprob: -2.842883586883545
    4. ' is' → logprob: -3.092883586883545
    5. ' #' → logprob: -3.592883586883545
    6. '=' → logprob: -4.092883586883545
    7. ' =' → logprob: -4.342883586883545
    8. ' (' → logprob: -4.467883586883545
    9. ' ' → logprob: -4.467883586883545
    10. ',' → logprob: -4.592883586883545

Token 90: ' broken' (ID: 17162)
  Prédit: 'alive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alive' → logprob: -1.740283489227295
    2. ' alive' → logprob: -2.302783489227295
    3. 'unknown' → logprob: -2.802783489227295
    4. ' ' → logprob: -3.177783489227295
    5. 'safe' → logprob: -3.177783489227295
    6. 'not' → logprob: -3.240283489227295
    7. '1' → logprob: -3.302783489227295
    8. ' safe' → logprob: -3.615283489227295
    9. 'dead' → logprob: -3.865283489227295
    10. 'ok' → logprob: -4.177783489227295

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20818713307380676
    2. '<|end|>' → logprob: -2.0831871032714844
    3. ' ' → logprob: -3.3331871032714844
    4. ' ,' → logprob: -4.333187103271484
    5. '1' → logprob: -5.333187103271484
    6. '
' → logprob: -5.708187103271484
    7. '0' → logprob: -6.208187103271484
    8. '  ' → logprob: -6.958187103271484
    9. '<|end|>' → logprob: -7.208187103271484
    10. ';' → logprob: -7.208187103271484

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22549626231193542
    2. ' ' → logprob: -1.6004962921142578
    3. '<|end|>' → logprob: -10.475496292114258
    4. '2' → logprob: -10.850496292114258
    5. '#' → logprob: -12.162996292114258
    6. ' ' → logprob: -12.225496292114258
    7. '...' → logprob: -12.412996292114258
    8. '  ' → logprob: -12.787996292114258
    9. '    ' → logprob: -12.787996292114258
    10. '   ' → logprob: -13.287996292114258

Token 93: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003993296413682401
    2. ' :' → logprob: -7.875399112701416
    3. ',' → logprob: -12.625399589538574
    4. ':not' → logprob: -13.000399589538574
    5. '：' → logprob: -14.000399589538574
    6. ':block' → logprob: -14.125399589538574
    7. ':selected' → logprob: -14.125399589538574
    8. '<|end|>' → logprob: -14.125399589538574
    9. ':none' → logprob: -14.250399589538574
    10. ':index' → logprob: -14.375399589538574

Token 94: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -2.144285202026367
    2. 'normal' → logprob: -2.519285202026367
    3. ' normal' → logprob: -2.644285202026367
    4. ' good' → logprob: -2.831785202026367
    5. ' intact' → logprob: -2.831785202026367
    6. ' not' → logprob: -2.894285202026367
    7. ' ok' → logprob: -2.956785202026367
    8. 'good' → logprob: -3.394285202026367
    9. 'not' → logprob: -3.456785202026367
    10. 'und' → logprob: -3.581785202026367

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.324325293302536
    2. '<|end|>' → logprob: -1.5743253231048584
    3. '   ' → logprob: -3.1993253231048584
    4. '2' → logprob: -4.324325084686279
    5. '#' → logprob: -4.949325084686279
    6. ' ' → logprob: -5.949325084686279
    7. ' ,' → logprob: -6.199325084686279
    8. '<|end|>' → logprob: -6.949325084686279
    9. '
' → logprob: -7.699325084686279
    10. '  ' → logprob: -7.824325084686279

Token 96: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05679844319820404
    2. '#' → logprob: -3.3067984580993652
    3. ' ' → logprob: -4.306798458099365
    4. '0' → logprob: -5.931798458099365
    5. '3' → logprob: -6.431798458099365
    6. '1' → logprob: -7.806798458099365
    7. ' #' → logprob: -9.056797981262207
    8. '```' → logprob: -9.056797981262207
    9. '4' → logprob: -9.556797981262207
    10. '    ' → logprob: -10.681797981262207

Token 97: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3544423381972592e-05
    2. ' :' → logprob: -11.62501335144043
    3. ':not' → logprob: -13.25001335144043
    4. ':hidden' → logprob: -15.00001335144043
    5. ':return' → logprob: -15.00001335144043
    6. ':none' → logprob: -15.12501335144043
    7. ':user' → logprob: -15.50001335144043
    8. ':init' → logprob: -15.62501335144043
    9. ':#' → logprob: -15.62501335144043
    10. ':def' → logprob: -15.75001335144043

Token 98: 'unknown' (ID: 33936)
  Prédit: 'unknown'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.06030010059475899
    2. ' unknown' → logprob: -3.18530011177063
    3. 'und' → logprob: -5.935299873352051
    4. 'unk' → logprob: -6.060299873352051
    5. 'undefined' → logprob: -6.185299873352051
    6. 'not' → logprob: -6.435299873352051
    7. 'none' → logprob: -6.685299873352051
    8. 'un' → logprob: -6.685299873352051
    9. 'unchecked' → logprob: -6.935299873352051
    10. ' not' → logprob: -7.310299873352051

Token 99: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8058301210403442
    2. '   ' → logprob: -1.1808301210403442
    3. '<|end|>' → logprob: -2.5558300018310547
    4. ' 
' → logprob: -3.3058300018310547
    5. '    
' → logprob: -3.3058300018310547
    6. ' for' → logprob: -3.8058300018310547
    7. 'for' → logprob: -3.8058300018310547
    8. '  
' → logprob: -4.180830001831055
    9. ' ' → logprob: -4.305830001831055
    10. '\n' → logprob: -4.805830001831055

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8012894988059998
    2. '<|end|>' → logprob: -1.6762895584106445
    3. ' ' → logprob: -1.9262895584106445
    4. '
' → logprob: -2.8012895584106445
    5. '\n' → logprob: -2.9262895584106445
    6. ' 
' → logprob: -3.1762895584106445
    7. '    
' → logprob: -3.9262895584106445
    8. ')' → logprob: -4.8012895584106445
    9. ' for' → logprob: -5.3012895584106445
    10. '  
' → logprob: -5.3012895584106445

Token 101: ' changed' (ID: 9180)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18533988296985626
    2. ' for' → logprob: -1.8103399276733398
    3. '<|end|>' → logprob: -6.43533992767334
    4. '   ' → logprob: -6.56033992767334
    5. '
' → logprob: -6.81033992767334
    6. ' ' → logprob: -7.18533992767334
    7. ' 
' → logprob: -9.31033992767334
    8. '    ' → logprob: -9.56033992767334
    9. '	for' → logprob: -9.56033992767334
    10. '    
' → logprob: -9.68533992767334

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18125475943088531
    2. '=' → logprob: -1.8062547445297241
    3. '_' → logprob: -7.556254863739014
    4. '=[]' → logprob: -8.556254386901855
    5. ',' → logprob: -8.681254386901855
    6. '[' → logprob: -8.681254386901855
    7. ' ' → logprob: -9.181254386901855
    8. '=True' → logprob: -9.556254386901855
    9. '_count' → logprob: -9.806254386901855
    10. ' =[' → logprob: -10.681254386901855

Token 103: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.05721867457032204
    2. 'True' → logprob: -2.9322187900543213
    3. ' False' → logprob: -6.432218551635742
    4. 'False' → logprob: -7.432218551635742
    5. '[]' → logprob: -9.432218551635742
    6. ' []' → logprob: -10.057218551635742
    7. ' ' → logprob: -12.307218551635742
    8. '0' → logprob: -12.807218551635742
    9. '   ' → logprob: -13.557218551635742
    10. '(True' → logprob: -14.807218551635742

Token 104: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11779828369617462
    2. '<|end|>' → logprob: -3.742798328399658
    3. ' while' → logprob: -3.867798328399658
    4. '
' → logprob: -3.992798328399658
    5. 'while' → logprob: -4.617798328399658
    6. '    
' → logprob: -4.617798328399658
    7. '\n' → logprob: -4.742798328399658
    8. ':' → logprob: -4.742798328399658
    9. ' ' → logprob: -6.117798328399658
    10. '	while' → logprob: -6.242798328399658

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07888680696487427
    2. '<|end|>' → logprob: -2.8288867473602295
    3. ' while' → logprob: -4.828886985778809
    4. '
' → logprob: -5.953886985778809
    5. ' ' → logprob: -6.328886985778809
    6. 'while' → logprob: -6.828886985778809
    7. '    ' → logprob: -7.203886985778809
    8. '    
' → logprob: -7.328886985778809
    9. '  ' → logprob: -7.953886985778809
    10. ':' → logprob: -7.953886985778809

Token 106: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16974671185016632
    2. ' while' → logprob: -2.1697466373443604
    3. 'while' (adapté à ' while') → logprob: -4.0447468757629395
    4. '	while' → logprob: -4.6697468757629395
    5. '
' → logprob: -5.5447468757629395
    6. '    
' → logprob: -5.6697468757629395
    7. ' ' → logprob: -6.2947468757629395
    8. '\n' → logprob: -6.4197468757629395
    9. ' 
' → logprob: -6.6697468757629395
    10. '\t' → logprob: -7.1697468757629395

Token 107: ' changed' (ID: 9180)
  Prédit: ' changed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' changed' → logprob: -8.721228368813172e-05
    2. 'changed' → logprob: -9.375086784362793
    3. ' ' → logprob: -13.250086784362793
    4. ' ' → logprob: -14.875086784362793
    5. ' True' → logprob: -16.75008773803711
    6. '_changed' → logprob: -16.87508773803711
    7. '.changed' → logprob: -17.25008773803711
    8. ' not' → logprob: -17.37508773803711
    9. '  ' → logprob: -18.37508773803711
    10. '   ' → logprob: -18.87508773803711

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010214977664873004
    2. ' and' → logprob: -7.126021385192871
    3. 'and' → logprob: -9.001021385192871
    4. ':
' → logprob: -9.376021385192871
    5. ' :' → logprob: -12.376021385192871
    6. '=' → logprob: -13.376021385192871
    7. '):' → logprob: -14.376021385192871
    8. '   ' → logprob: -14.501021385192871
    9. ':**' → logprob: -14.751021385192871
    10. '==' → logprob: -15.376021385192871

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0041943867690861225
    2. ':' → logprob: -6.129194259643555
    3. '   ' → logprob: -6.754194259643555
    4. '<|end|>' → logprob: -7.379194259643555
    5. ':
' → logprob: -9.754194259643555
    6. '    ' → logprob: -10.004194259643555
    7. '<|end|>' → logprob: -10.629194259643555
    8. ',' → logprob: -10.879194259643555
    9. '
' → logprob: -11.379194259643555
    10. '        
' → logprob: -11.754194259643555

Token 110: ' changed' (ID: 9180)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2346682846546173
    2. ' changed' → logprob: -1.734668254852295
    3. 'changed' (adapté à ' changed') → logprob: -3.484668254852295
    4. '       ' → logprob: -6.234668254852295
    5. '   ' → logprob: -11.234668731689453
    6. '	' → logprob: -11.359668731689453
    7. '.changed' → logprob: -11.609668731689453
    8. ' ' → logprob: -11.734668731689453
    9. '_changed' → logprob: -11.859668731689453
    10. '    
' → logprob: -11.984668731689453

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324967086315155
    2. '=' → logprob: -3.773249626159668
    3. ',' → logprob: -13.023249626159668
    4. ' ' → logprob: -14.273249626159668
    5. '=True' → logprob: -14.648249626159668
    6. '=False' → logprob: -15.398249626159668
    7. ' =)' → logprob: -15.898249626159668
    8. ' |=' → logprob: -16.023250579833984
    9. ')' → logprob: -16.023250579833984
    10. ' =
' → logprob: -16.148250579833984

Token 112: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.06219017878174782
    2. 'False' → logprob: -2.812190294265747
    3. ' True' → logprob: -8.437190055847168
    4. 'True' → logprob: -12.062190055847168
    5. ' ' → logprob: -16.687191009521484
    6. '(False' → logprob: -17.812191009521484
    7. ' false' → logprob: -18.062191009521484
    8. ' ' → logprob: -18.187191009521484
    9. '0' → logprob: -19.812191009521484
    10. '_false' → logprob: -19.937191009521484

Token 113: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16064906120300293
    2. ' for' → logprob: -1.910649061203003
    3. '   ' → logprob: -7.785649299621582
    4. '       ' → logprob: -12.285649299621582
    5. '	for' → logprob: -12.910649299621582
    6. '<|end|>' → logprob: -14.410649299621582
    7. ' ' → logprob: -14.535649299621582
    8. '
' → logprob: -14.660649299621582
    9. '```' → logprob: -15.285649299621582
    10. '  ' → logprob: -15.285649299621582

Token 116: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0266000684350729
    2. 'i' → logprob: -4.276599884033203
    3. ' (' → logprob: -5.276599884033203
    4. ' idx' → logprob: -5.526599884033203
    5. '(i' → logprob: -6.901599884033203
    6. ' t' → logprob: -7.776599884033203
    7. ' _' → logprob: -8.026599884033203
    8. ' x' → logprob: -8.151599884033203
    9. '(' → logprob: -8.401599884033203
    10. ' ' → logprob: -8.401599884033203

Token 117: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5671067833900452
    2. ' in' → logprob: -1.8171067237854004
    3. ',(' → logprob: -2.0671067237854004
    4. ',j' → logprob: -2.9421067237854004
    5. ' ,' → logprob: -3.4421067237854004
    6. ',t' → logprob: -4.1921067237854
    7. ',n' → logprob: -4.4421067237854
    8. 'n' → logprob: -5.1921067237854
    9. 'range' → logprob: -5.1921067237854
    10. ',d' → logprob: -6.0671067237854

Token 118: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.00014084660506341606
    2. ',' → logprob: -9.375141143798828
    3. ',r' → logprob: -10.750141143798828
    4. ' ,' → logprob: -10.750141143798828
    5. 'k' → logprob: -11.875141143798828
    6. ',_' → logprob: -13.375141143798828
    7. ',c' → logprob: -13.500141143798828
    8. '```' → logprob: -14.125141143798828
    9. '_,' → logprob: -14.875141143798828
    10. ',j' → logprob: -15.250141143798828

Token 119: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.0012895208783447742
    2. ',' → logprob: -6.751289367675781
    3. ' ,' → logprob: -9.751289367675781
    4. ',k' → logprob: -10.001289367675781
    5. 'r' → logprob: -12.251289367675781
    6. ' in' → logprob: -13.001289367675781
    7. ',j' → logprob: -13.751289367675781
    8. ',value' → logprob: -14.001289367675781
    9. ',l' → logprob: -14.126289367675781
    10. ',c' → logprob: -14.376289367675781

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033668406307697296
    2. 'in' → logprob: -3.4086685180664062
    3. ' ' → logprob: -11.533668518066406
    4. ',' → logprob: -12.408668518066406
    5. '	in' → logprob: -13.408668518066406
    6. ' ,' → logprob: -13.783668518066406
    7. 'n' → logprob: -13.783668518066406
    8. '    ' → logprob: -13.908668518066406
    9. '   ' → logprob: -14.158668518066406
    10. '<|end|>' → logprob: -14.408668518066406

Token 121: ' tests' (ID: 10742)
  Prédit: ' tests'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tests' → logprob: -0.4740951359272003
    2. 'tests' → logprob: -0.9740951061248779
    3. '	tests' → logprob: -11.224095344543457
    4. 'test' → logprob: -13.474095344543457
    5. ' ' → logprob: -13.599095344543457
    6. 't' → logprob: -13.724095344543457
    7. '   ' → logprob: -14.724095344543457
    8. 'tes' → logprob: -16.09909439086914
    9. '.tests' → logprob: -16.09909439086914
    10. '  ' → logprob: -16.09909439086914

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003788204165175557
    2. ':
' → logprob: -5.628787994384766
    3. '<|end|>' → logprob: -8.878787994384766
    4. '       ' → logprob: -11.128787994384766
    5. '<|end|>' → logprob: -11.378787994384766
    6. '):' → logprob: -12.253787994384766
    7. ':

' → logprob: -12.253787994384766
    8. '   ' → logprob: -12.503787994384766
    9. '):
' → logprob: -12.753787994384766
    10. ',' → logprob: -13.503787994384766

Token 123: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07052905857563019
    2. '       ' → logprob: -3.070528984069824
    3. '<|end|>' → logprob: -4.195528984069824
    4. ':
' → logprob: -6.195528984069824
    5. '           ' → logprob: -6.320528984069824
    6. '        ' → logprob: -7.195528984069824
    7. ' ' → logprob: -7.695528984069824
    8. '<|end|>' → logprob: -7.945528984069824
    9. '   ' → logprob: -8.445528984069824
    10. ' :' → logprob: -8.570528984069824

Token 124: ' parts' (ID: 7881)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7015028595924377
    2. ' ' → logprob: -1.076502799987793
    3. '<|end|>' → logprob: -2.576502799987793
    4. '
' → logprob: -3.326502799987793
    5. ' 
' → logprob: -4.201502799987793
    6. ' status' → logprob: -4.451502799987793
    7. 'if' → logprob: -4.451502799987793
    8. 'status' → logprob: -5.326502799987793
    9. '        ' → logprob: -6.326502799987793
    10. '       ' → logprob: -6.451502799987793

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04434514790773392
    2. '=' → logprob: -3.6693451404571533
    3. '_status' → logprob: -4.419345378875732
    4. '   ' → logprob: -7.044345378875732
    5. 'status' → logprob: -7.044345378875732
    6. '_count' → logprob: -7.544345378875732
    7. '_sum' → logprob: -7.544345378875732
    8. '_indices' → logprob: -7.544345378875732
    9. '[' → logprob: -7.919345378875732
    10. ' =[' → logprob: -8.294344902038574

Token 126: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.2314421832561493
    2. '[i' → logprob: -1.9814422130584717
    3. '[' → logprob: -3.1064422130584717
    4. '[a' → logprob: -4.231441974639893
    5. '[j' → logprob: -5.606441974639893
    6. '[]' → logprob: -6.856441974639893
    7. ' status' → logprob: -7.981441974639893
    8. '[s' → logprob: -7.981441974639893
    9. '[r' → logprob: -7.981441974639893
    10. '[int' → logprob: -8.10644245147705

Token 127: 'i' (ID: 72)
  Prédit: 'status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'status' → logprob: -0.03739195689558983
    2. 'i' → logprob: -4.0373921394348145
    3. ' status' → logprob: -4.7873921394348145
    4. 'a' → logprob: -4.7873921394348145
    5. '(status' → logprob: -6.7873921394348145
    6. '(i' → logprob: -7.4123921394348145
    7. '   ' → logprob: -8.537391662597656
    8. ' i' → logprob: -9.162391662597656
    9. '(' → logprob: -9.162391662597656
    10. '(a' → logprob: -10.287391662597656

Token 128: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.16497530043125153
    2. '-' → logprob: -2.28997540473938
    3. ',' → logprob: -3.03997540473938
    4. ' ,' → logprob: -6.039975166320801
    5. ' -' → logprob: -7.914975166320801
    6. ',b' → logprob: -9.5399751663208
    7. ' ' → logprob: -9.9149751663208
    8. ',k' → logprob: -10.4149751663208
    9. '   ' → logprob: -10.5399751663208
    10. '```' → logprob: -11.7899751663208

Token 129: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.0011587966000661254
    2. ' ,' → logprob: -7.251158714294434
    3. ',' → logprob: -8.001158714294434
    4. 'k' → logprob: -9.251158714294434
    5. ',c' → logprob: -11.501158714294434
    6. '-' → logprob: -14.001158714294434
    7. ' ' → logprob: -14.126158714294434
    8. ' k' → logprob: -14.251158714294434
    9. ',j' → logprob: -14.251158714294434
    10. '   ' → logprob: -14.376158714294434

Token 130: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5776594877243042
    2. ']
' → logprob: -0.8276594877243042
    3. ']

' → logprob: -7.577659606933594
    4. ' ]
' → logprob: -7.702659606933594
    5. ' ]' → logprob: -7.952659606933594
    6. ']
' → logprob: -8.077659606933594
    7. ',' → logprob: -9.702659606933594
    8. '   ' → logprob: -11.452659606933594
    9. '       ' → logprob: -12.452659606933594
    10. '           ' → logprob: -12.577659606933594

Token 131: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5960373282432556
    2. '           ' → logprob: -0.8460373282432556
    3. ']' → logprob: -4.8460373878479
    4. ']
' → logprob: -5.4710373878479
    5. '            
' → logprob: -6.2210373878479
    6. ',' → logprob: -6.4710373878479
    7. ' 
' → logprob: -7.0960373878479
    8. '       ' → logprob: -7.3460373878479
    9. '
' → logprob: -7.5960373878479
    10. ' if' → logprob: -7.7210373878479

Token 132: ' if' (ID: 538)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7163224816322327
    2. 'ok' → logprob: -1.591322422027588
    3. 'counts' → logprob: -2.591322422027588
    4. 'cnt' → logprob: -2.716322422027588
    5. ' count' → logprob: -3.216322422027588
    6. 'known' → logprob: -3.341322422027588
    7. ' ok' → logprob: -3.841322422027588
    8. ' counts' → logprob: -4.591322422027588
    9. '           ' → logprob: -4.716322422027588
    10. ' known' → logprob: -4.716322422027588

Token 133: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.031502604484558
    2. ' r' → logprob: -1.031502604484558
    3. ' status' → logprob: -1.656502604484558
    4. 'status' → logprob: -3.0315027236938477
    5. ' all' → logprob: -3.4065027236938477
    6. ' any' → logprob: -5.406502723693848
    7. 'all' → logprob: -5.656502723693848
    8. ' sum' → logprob: -6.906502723693848
    9. '(status' → logprob: -7.281502723693848
    10. 'sum' → logprob: -7.281502723693848

Token 134: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.42880523204803467
    2. ' ==' → logprob: -1.0538052320480347
    3. '=' → logprob: -10.428805351257324
    4. ' ' → logprob: -10.803805351257324
    5. '0' → logprob: -11.803805351257324
    6. ']==' → logprob: -11.928805351257324
    7. '[' → logprob: -12.053805351257324
    8. '==
' → logprob: -12.053805351257324
    9. ')==' → logprob: -12.303805351257324
    10. ' ' → logprob: -12.303805351257324

Token 135: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5518650412559509
    2. '1' → logprob: -0.9268650412559509
    3. ' ' → logprob: -3.9268651008605957
    4. '2' → logprob: -4.926865100860596
    5. '-' → logprob: -6.801865100860596
    6. '3' → logprob: -9.051864624023438
    7. ' -' → logprob: -10.239364624023438
    8. '   ' → logprob: -10.614364624023438
    9. '"' → logprob: -10.676864624023438
    10. '  ' → logprob: -11.114364624023438

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16053950786590576
    2. ':
' → logprob: -1.9105395078659058
    3. ' and' → logprob: -8.285539627075195
    4. ' :
' → logprob: -10.410539627075195
    5. ' :' → logprob: -11.285539627075195
    6. ':

' → logprob: -11.535539627075195
    7. ':
' → logprob: -12.285539627075195
    8. 'and' → logprob: -12.410539627075195
    9. '):' → logprob: -14.160539627075195
    10. '):
' → logprob: -14.660539627075195

Token 137: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4932917654514313
    2. ':
' → logprob: -1.6182917356491089
    3. ':' → logprob: -2.2432918548583984
    4. '
' → logprob: -2.8682918548583984
    5. '               ' → logprob: -4.118291854858398
    6. ' and' → logprob: -5.118291854858398
    7. '       ' → logprob: -5.993291854858398
    8. '):
' → logprob: -7.368291854858398
    9. '```' → logprob: -7.868291854858398
    10. '#' → logprob: -8.118291854858398

Token 138: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25620803236961365
    2. 'for' → logprob: -2.2562079429626465
    3. '
' → logprob: -2.3812079429626465
    4. '               ' → logprob: -4.2562079429626465
    5. '           ' → logprob: -5.0062079429626465
    6. '                   ' → logprob: -6.2562079429626465
    7. ':
' → logprob: -6.6312079429626465
    8. ':' → logprob: -6.8812079429626465
    9. ' if' → logprob: -7.3812079429626465
    10. '#' (adapté à ' #') → logprob: -7.3812079429626465

Token 139: ' all' (ID: 722)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6404122710227966
    2. 'for' → logprob: -0.7654122710227966
    3. 'if' → logprob: -5.765412330627441
    4. ' if' → logprob: -5.890412330627441
    5. ' count' → logprob: -7.515412330627441
    6. 'count' → logprob: -7.640412330627441
    7. ' cnt' → logprob: -8.265412330627441
    8. 'cnt' → logprob: -8.390412330627441
    9. '#' → logprob: -8.765412330627441
    10. ' ok' → logprob: -9.765412330627441

Token 140: ' ' (ID: 220)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.33768075704574585
    2. 'parts' → logprob: -2.5876808166503906
    3. ' for' → logprob: -2.7126808166503906
    4. '(parts' → logprob: -3.4626808166503906
    5. ' ok' → logprob: -3.8376808166503906
    6. 'ok' → logprob: -3.8376808166503906
    7. 'for' → logprob: -4.337680816650391
    8. ' in' → logprob: -4.712680816650391
    9. ' ' → logprob: -5.087680816650391
    10. ' are' → logprob: -5.087680816650391

Token 141: '3' (ID: 18)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.6056482791900635
    2. 'parts' → logprob: -1.2306482791900635
    3. '(parts' → logprob: -2.8556482791900635
    4. 'ok' → logprob: -3.7306482791900635
    5. '(p' → logprob: -3.8556482791900635
    6. 'status' → logprob: -3.9806482791900635
    7. '(' → logprob: -4.980648040771484
    8. '(status' → logprob: -5.105648040771484
    9. ' ok' → logprob: -5.355648040771484
    10. ' status' → logprob: -5.480648040771484

Token 142: ' parts' (ID: 7881)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.127099633216858
    2. ' are' → logprob: -1.502099633216858
    3. ':' → logprob: -1.877099633216858
    4. ' in' → logprob: -3.1270995140075684
    5. 'for' → logprob: -3.2520995140075684
    6. ')' → logprob: -3.5020995140075684
    7. ' must' → logprob: -3.7520995140075684
    8. ' parts' → logprob: -3.7520995140075684
    9. ' ' → logprob: -4.127099514007568
    10. ' ok' → logprob: -4.252099514007568

Token 143: ' good' (ID: 1899)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.39835086464881897
    2. ' must' → logprob: -3.148350954055786
    3. ' have' → logprob: -3.148350954055786
    4. '=' → logprob: -3.398350954055786
    5. '               ' → logprob: -3.523350954055786
    6. ' =' → logprob: -3.648350954055786
    7. ' ' → logprob: -3.773350954055786
    8. ' status' → logprob: -3.773350954055786
    9. 'status' → logprob: -4.273350715637207
    10. ' in' → logprob: -4.398350715637207

Token 144: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8543131947517395
    2. '               ' → logprob: -1.4793131351470947
    3. '           ' → logprob: -1.6043131351470947
    4. '<|end|>' → logprob: -2.6043131351470947
    5. ' and' → logprob: -3.7293131351470947
    6. ':
' → logprob: -4.604313373565674
    7. '                   ' → logprob: -4.604313373565674
    8. '
' → logprob: -5.604313373565674
    9. '<|end|>' → logprob: -5.729313373565674
    10. ' ' → logprob: -5.729313373565674

Token 145: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24634452164173126
    2. '           ' → logprob: -1.8713445663452148
    3. '<|end|>' → logprob: -3.246344566345215
    4. ' for' → logprob: -4.121344566345215
    5. ',' → logprob: -6.371344566345215
    6. '<|end|>' → logprob: -6.621344566345215
    7. '                   ' → logprob: -6.746344566345215
    8. ':' → logprob: -6.746344566345215
    9. ' ' → logprob: -6.746344566345215
    10. ')' → logprob: -8.121344566345215

Token 146: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.326088011264801
    2. 'for' (adapté à ' for') → logprob: -1.3260879516601562
    3. '           ' → logprob: -4.451087951660156
    4. ' if' → logprob: -8.076087951660156
    5. 'if' → logprob: -8.701087951660156
    6. '<|end|>' → logprob: -8.701087951660156
    7. '	for' → logprob: -8.701087951660156
    8. '               ' → logprob: -8.826087951660156
    9. ' ' → logprob: -10.451087951660156
    10. '   ' → logprob: -11.201087951660156

Token 147: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.15249879658222198
    2. ' p' → logprob: -2.777498722076416
    3. 'part' → logprob: -2.902498722076416
    4. ' part' → logprob: -3.777498722076416
    5. 'x' → logprob: -7.902498722076416
    6. ' idx' → logprob: -8.027499198913574
    7. 'idx' → logprob: -8.027499198913574
    8. 'parts' → logprob: -8.152499198913574
    9. ' parts' → logprob: -9.402499198913574
    10. ' x' → logprob: -10.027499198913574

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003630242543295026
    2. 'in' → logprob: -5.6286301612854
    3. ' ' → logprob: -10.503630638122559
    4. ' p' → logprob: -13.628630638122559
    5. 's' → logprob: -15.503630638122559
    6. '<|end|>' → logprob: -15.503630638122559
    7. 'p' → logprob: -15.628630638122559
    8. '    ' → logprob: -16.253629684448242
    9. '_in' → logprob: -16.253629684448242
    10. ')' → logprob: -16.378629684448242

Token 149: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.2519945204257965
    2. 'parts' → logprob: -1.5019944906234741
    3. '(parts' → logprob: -10.251994132995605
    4. ' range' → logprob: -11.126994132995605
    5. 'range' → logprob: -11.626994132995605
    6. '[' → logprob: -12.626994132995605
    7. ' ' → logprob: -13.751994132995605
    8. ' [' → logprob: -14.251994132995605
    9. '.parts' → logprob: -14.501994132995605
    10. ' partes' → logprob: -15.126994132995605

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004653099924325943
    2. ':
' → logprob: -5.379652976989746
    3. ' :' → logprob: -10.629652976989746
    4. ':
' → logprob: -13.129652976989746
    5. '                   ' → logprob: -13.254652976989746
    6. ':

' → logprob: -13.504652976989746
    7. '):' → logprob: -13.629652976989746
    8. '               ' → logprob: -14.504652976989746
    9. ' :
' → logprob: -15.004652976989746
    10. '):
' → logprob: -15.004652976989746

Token 151: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4578734040260315
    2. '           ' → logprob: -1.8328733444213867
    3. '                   ' → logprob: -2.7078733444213867
    4. ':
' → logprob: -2.7078733444213867
    5. '               ' → logprob: -3.4578733444213867
    6. '<|end|>' → logprob: -3.5828733444213867
    7. ' if' → logprob: -5.082873344421387
    8. ',' → logprob: -6.207873344421387
    9. '<|end|>' → logprob: -6.457873344421387
    10. '   ' → logprob: -6.957873344421387

Token 152: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14608541131019592
    2. 'if' (adapté à ' if') → logprob: -2.021085500717163
    3. '       ' → logprob: -6.771085262298584
    4. '               ' → logprob: -7.396085262298584
    5. '                       ' → logprob: -7.896085262298584
    6. '<|end|>' → logprob: -8.021085739135742
    7. '   ' → logprob: -8.146085739135742
    8. ' ' → logprob: -8.146085739135742
    9. '
' → logprob: -9.146085739135742
    10. ' 
' → logprob: -9.771085739135742

Token 153: ' status' (ID: 4495)
  Prédit: 'status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'status' → logprob: -0.20141801238059998
    2. ' status' → logprob: -1.7014180421829224
    3. '   ' → logprob: -12.826417922973633
    4. '	status' → logprob: -14.326417922973633
    5. ' ' → logprob: -14.826417922973633
    6. '(status' → logprob: -15.076417922973633
    7. ' p' → logprob: -15.451417922973633
    8. 'p' → logprob: -15.576417922973633
    9. '$status' → logprob: -16.201417922973633
    10. 'Status' → logprob: -16.451417922973633

Token 154: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.00014203863975126296
    2. '[' → logprob: -9.000142097473145
    3. 'p' → logprob: -11.125142097473145
    4. ' [' → logprob: -13.250142097473145
    5. '```' → logprob: -13.375142097473145
    6. '<p' → logprob: -16.000141143798828
    7. '\[' → logprob: -16.750141143798828
    8. '	p' → logprob: -16.875141143798828
    9. '[
' → logprob: -16.875141143798828
    10. '[P' → logprob: -17.000141143798828

Token 155: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24297168850898743
    2. ']==' → logprob: -1.742971658706665
    3. ']!=' → logprob: -3.867971658706665
    4. ' ]' → logprob: -4.117971897125244
    5. '==' → logprob: -5.992971897125244
    6. '!=' → logprob: -7.492971897125244
    7. ' ==' → logprob: -8.617971420288086
    8. ']>' → logprob: -8.992971420288086
    9. ' !=' → logprob: -9.367971420288086
    10. ' ' → logprob: -10.742971420288086

Token 156: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005406428826972842
    2. ' ' → logprob: -8.000540733337402
    3. '0' → logprob: -8.500540733337402
    4. '   ' → logprob: -13.750540733337402
    5. '```' → logprob: -15.500540733337402
    6. '  ' → logprob: -15.688040733337402
    7. '    ' → logprob: -15.938040733337402
    8. '1' → logprob: -16.000539779663086
    9. '۲' → logprob: -16.375539779663086
    10. '২' → logprob: -17.313039779663086

Token 157: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07075754553079605
    2. ':
' → logprob: -2.6957576274871826
    3. ' or' → logprob: -7.5707573890686035
    4. ' and' → logprob: -9.195757865905762
    5. ' :' → logprob: -9.320757865905762
    6. ' :
' → logprob: -9.945757865905762
    7. '<|end|>' → logprob: -10.945757865905762
    8. 'and' → logprob: -11.570757865905762
    9. '):
' → logprob: -11.820757865905762
    10. ':

' → logprob: -11.945757865905762

Token 158: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.05658060684800148
    2. '                   ' → logprob: -3.0565805435180664
    3. 'status' → logprob: -6.181580543518066
    4. ' status' → logprob: -6.556580543518066
    5. ' ' → logprob: -6.806580543518066
    6. '               ' → logprob: -7.056580543518066
    7. '```' → logprob: -7.681580543518066
    8. '<|end|>' → logprob: -7.931580543518066
    9. '                        
' → logprob: -8.056580543518066
    10. '1' → logprob: -8.056580543518066

Token 159: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.738019585609436
    2. '                   ' → logprob: -1.863019585609436
    3. '                       ' → logprob: -1.863019585609436
    4. 'status' → logprob: -2.3630194664001465
    5. ' break' → logprob: -3.1130194664001465
    6. 'raise' → logprob: -3.3630194664001465
    7. 'changed' → logprob: -4.8630194664001465
    8. 'change' → logprob: -5.2380194664001465
    9. ' status' → logprob: -5.2380194664001465
    10. 'return' → logprob: -5.7380194664001465

Token 160: ' conflict' (ID: 21461)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -1.2488681077957153
    2. 'break' → logprob: -1.2488681077957153
    3. 'status' → logprob: -1.9988681077957153
    4. 'return' → logprob: -2.623867988586426
    5. ' status' → logprob: -2.873867988586426
    6. '                       ' → logprob: -3.373867988586426
    7. 'raise' → logprob: -3.873867988586426
    8. '                   ' → logprob: -3.998867988586426
    9. ' return' → logprob: -3.998867988586426
    10. 'print' → logprob: -4.123867988586426

Token 161: ' but' (ID: 889)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8454148173332214
    2. '                           ' → logprob: -1.5954148769378662
    3. ' =' → logprob: -2.095414876937866
    4. '=' → logprob: -2.095414876937866
    5. '                   ' → logprob: -2.720414876937866
    6. ' break' → logprob: -4.470414638519287
    7. 'raise' → logprob: -4.470414638519287
    8. '=False' → logprob: -4.970414638519287
    9. ' raise' → logprob: -5.095414638519287
    10. '           ' → logprob: -5.845414638519287

Token 162: ' problem' (ID: 4792)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.0402307510375977
    2. 'True' → logprob: -1.7902307510375977
    3. ' break' → logprob: -2.0402307510375977
    4. 'False' → logprob: -2.0402307510375977
    5. ' False' → logprob: -2.4152307510375977
    6. 'break' → logprob: -2.7902307510375977
    7. ' status' → logprob: -3.5402307510375977
    8. 'status' → logprob: -4.290230751037598
    9. ' changed' → logprob: -5.165230751037598
    10. 'changed' → logprob: -5.290230751037598

Token 163: ' states' (ID: 9407)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.2711474895477295
    2. ' =' → logprob: -1.5211474895477295
    3. '=' → logprob: -2.0211474895477295
    4. '                           ' → logprob: -2.2711474895477295
    5. '                   ' → logprob: -2.3961474895477295
    6. '<|end|>' → logprob: -2.5211474895477295
    7. '=False' → logprob: -3.6461474895477295
    8. ':' → logprob: -4.271147727966309
    9. '.' → logprob: -4.896147727966309
    10. '=True' → logprob: -5.146147727966309

Token 164: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.30627864599227905
    2. 'no' → logprob: -2.306278705596924
    3. ' that' → logprob: -2.806278705596924
    4. 'that' → logprob: -3.806278705596924
    5. 'pass' → logprob: -4.056278705596924
    6. 'break' → logprob: -4.306278705596924
    7. ' nothing' → logprob: -4.931278705596924
    8. 'nothing' → logprob: -5.056278705596924
    9. 'there' → logprob: -5.056278705596924
    10. ' there' → logprob: -5.181278705596924

Token 165: ' contradictions' (ID: 176907)
  Prédit: 'conf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conf' → logprob: -0.29813623428344727
    2. ' need' → logprob: -2.4231362342834473
    3. ' conflict' → logprob: -2.4231362342834473
    4. 'need' → logprob: -3.4231362342834473
    5. ' conflicts' → logprob: -3.9231362342834473
    6. 'break' → logprob: -4.798136234283447
    7. ' break' → logprob: -5.673136234283447
    8. 'input' → logprob: -6.548136234283447
    9. 'continue' → logprob: -6.673136234283447
    10. 'change' → logprob: -6.798136234283447

Token 166: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19990377128124237
    2. '
' → logprob: -2.574903726577759
    3. '                       ' → logprob: -3.199903726577759
    4. '                           ' → logprob: -3.574903726577759
    5. ' continue' → logprob: -4.949903964996338
    6. 'continue' → logprob: -5.199903964996338
    7. '<|end|>' → logprob: -5.324903964996338
    8. '               ' → logprob: -6.074903964996338
    9. '                        
' → logprob: -6.074903964996338
    10. '           ' → logprob: -6.199903964996338

Token 167: ' just' (ID: 1327)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.20274876058101654
    2. '                           ' → logprob: -2.0777487754821777
    3. ' continue' → logprob: -3.7027487754821777
    4. ' pass' → logprob: -4.202748775482178
    5. '                   ' → logprob: -4.827748775482178
    6. ' break' → logprob: -5.702748775482178
    7. 'continue' → logprob: -6.077748775482178
    8. 'pass' → logprob: -6.952748775482178
    9. '                        ' → logprob: -7.077748775482178
    10. 'break' → logprob: -7.202748775482178

Token 168: ' ignore' (ID: 17887)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.6882926225662231
    2. 'continue' → logprob: -1.5632926225662231
    3. 'break' → logprob: -2.0632925033569336
    4. ' pass' → logprob: -2.5632925033569336
    5. ' break' → logprob: -3.3132925033569336
    6. ' continue' → logprob: -3.8132925033569336
    7. 'ignore' → logprob: -3.9382925033569336
    8. '   ' → logprob: -6.313292503356934
    9. 'skip' → logprob: -6.688292503356934
    10. ' ignore' → logprob: -6.938292503356934

Token 169: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.09036964178085327
    2. '                   ' → logprob: -2.590369701385498
    3. '                           ' → logprob: -5.090369701385498
    4. ' continue' → logprob: -5.965369701385498
    5. '           ' → logprob: -7.715369701385498
    6. '                        
' → logprob: -7.715369701385498
    7. '               ' → logprob: -7.840369701385498
    8. 'continue' → logprob: -7.840369701385498
    9. '
' → logprob: -8.46536922454834
    10. ' pass' → logprob: -8.96536922454834

Token 170: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5005428194999695
    2. '                       ' → logprob: -1.1255428791046143
    3. ' continue' → logprob: -2.8755428791046143
    4. '                           ' → logprob: -4.875542640686035
    5. 'continue' → logprob: -6.250542640686035
    6. '           ' → logprob: -6.875542640686035
    7. '               ' → logprob: -7.000542640686035
    8. ' ' → logprob: -8.000542640686035
    9. '                        
' → logprob: -8.375542640686035
    10. ' pass' → logprob: -8.625542640686035

Token 171: ' pass' (ID: 1853)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6483677625656128
    2. '                       ' → logprob: -1.3983677625656128
    3. 'continue' → logprob: -1.7733677625656128
    4. ' pass' → logprob: -3.2733678817749023
    5. '                   ' → logprob: -4.523367881774902
    6. 'pass' (adapté à ' pass') → logprob: -4.898367881774902
    7. '                           ' → logprob: -5.648367881774902
    8. '           ' → logprob: -8.898367881774902
    9. '   ' → logprob: -9.148367881774902
    10. '               ' → logprob: -9.648367881774902

Token 172: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005921131814830005
    2. 'else' → logprob: -8.625592231750488
    3. 'elif' → logprob: -8.750592231750488
    4. '               ' → logprob: -9.125592231750488
    5. ' else' → logprob: -9.375592231750488
    6. '           ' → logprob: -10.875592231750488
    7. ' elif' → logprob: -11.125592231750488
    8. '                       ' → logprob: -12.000592231750488
    9. '                  ' → logprob: -12.375592231750488
    10. '				' → logprob: -12.375592231750488

Token 173: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00036406738217920065
    2. '               ' → logprob: -8.500364303588867
    3. 'elif' → logprob: -9.875364303588867
    4. 'else' → logprob: -10.000364303588867
    5. '           ' → logprob: -10.750364303588867
    6. ' else' → logprob: -10.875364303588867
    7. ' elif' → logprob: -12.500364303588867
    8. '                       ' → logprob: -12.500364303588867
    9. '				' → logprob: -13.000364303588867
    10. '```' → logprob: -13.375364303588867

Token 174: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01902216300368309
    2. 'elif' → logprob: -4.269021987915039
    3. 'else' → logprob: -5.644021987915039
    4. ' elif' → logprob: -7.644021987915039
    5. ' else' → logprob: -7.644021987915039
    6. '               ' → logprob: -8.144021987915039
    7. '           ' → logprob: -11.394021987915039
    8. ',' → logprob: -11.519021987915039
    9. '                       ' → logprob: -11.769021987915039
    10. '   ' → logprob: -12.144021987915039

Token 175: ' status' (ID: 4495)
  Prédit: ' status'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' status' → logprob: -0.06995277106761932
    2. 'status' → logprob: -2.6949527263641357
    3. '	status' → logprob: -11.694952964782715
    4. '   ' → logprob: -12.819952964782715
    5. ' ' → logprob: -13.194952964782715
    6. '           ' → logprob: -13.944952964782715
    7. '(status' → logprob: -14.194952964782715
    8. '               ' → logprob: -14.694952964782715
    9. '$status' → logprob: -14.944952964782715
    10. '=status' → logprob: -15.069952964782715

Token 176: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.00013929695705883205
    2. '[' → logprob: -9.000139236450195
    3. ' [' → logprob: -11.125139236450195
    4. 'p' → logprob: -14.500139236450195
    5. '```' → logprob: -15.000139236450195
    6. '	p' → logprob: -16.750139236450195
    7. '   ' → logprob: -17.500139236450195
    8. '[
' → logprob: -17.625139236450195
    9. '[P' → logprob: -17.625139236450195
    10. '\[' → logprob: -18.000139236450195

Token 177: ']!=' (ID: 85780)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.49185115098953247
    2. ']!=' → logprob: -1.3668510913848877
    3. ']' → logprob: -2.1168510913848877
    4. ' ]' → logprob: -4.991851329803467
    5. '!=' → logprob: -5.741851329803467
    6. '==' → logprob: -6.241851329803467
    7. ' !=' → logprob: -7.491851329803467
    8. ' ==' → logprob: -8.616850852966309
    9. ']<' → logprob: -8.616850852966309
    10. ')!=' → logprob: -8.866850852966309

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012606535165105015
    2. ' ' → logprob: -9.000125885009766
    3. '   ' → logprob: -14.000125885009766
    4. '0' → logprob: -14.375125885009766
    5. '2' → logprob: -14.750125885009766
    6. '  ' → logprob: -14.812625885009766
    7. '    ' → logprob: -16.250125885009766
    8. '                   ' → logprob: -17.250125885009766
    9. '۱' → logprob: -17.250125885009766
    10. '```' → logprob: -17.500125885009766

Token 179: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08955143392086029
    2. ':
' → logprob: -2.4645514488220215
    3. '):
' → logprob: -8.714550971984863
    4. ' :' → logprob: -8.714550971984863
    5. '):' → logprob: -9.089550971984863
    6. ' :
' → logprob: -9.339550971984863
    7. '                       ' → logprob: -10.839550971984863
    8. ':

' → logprob: -11.214550971984863
    9. '                           ' → logprob: -11.339550971984863
    10. '<|end|>' → logprob: -11.714550971984863

Token 180: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.23154477775096893
    2. ':' → logprob: -2.2315447330474854
    3. ':
' → logprob: -2.6065447330474854
    4. '                   ' → logprob: -3.8565447330474854
    5. '                           ' → logprob: -6.4815449714660645
    6. '):
' → logprob: -7.4815449714660645
    7. '               ' → logprob: -8.106544494628906
    8. '<|end|>' → logprob: -8.106544494628906
    9. '                        
' → logprob: -8.356544494628906
    10. ' :
' → logprob: -8.481544494628906

Token 181: ' status' (ID: 4495)
  Prédit: ' status'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' status' → logprob: -0.053537629544734955
    2. 'status' (adapté à ' status') → logprob: -3.053537607192993
    3. '                       ' → logprob: -5.803537845611572
    4. '                           ' → logprob: -6.303537845611572
    5. '
' → logprob: -10.928537368774414
    6. '                               ' → logprob: -11.053537368774414
    7. '	status' → logprob: -11.428537368774414
    8. ' ' → logprob: -11.678537368774414
    9. '                   ' → logprob: -11.803537368774414
    10. '                        
' → logprob: -12.053537368774414

Token 182: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -3.309382373117842e-05
    2. '[' → logprob: -10.375033378601074
    3. ' [' → logprob: -13.625033378601074
    4. 'p' → logprob: -14.375033378601074
    5. '[
' → logprob: -17.625032424926758
    6. '	p' → logprob: -18.000032424926758
    7. ' ' → logprob: -18.125032424926758
    8. '<p' → logprob: -18.125032424926758
    9. '

' → logprob: -18.375032424926758
    10. '[P' → logprob: -18.375032424926758

Token 183: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9951884746551514
    2. ']=' → logprob: -1.1201884746551514
    3. ']' → logprob: -1.2451884746551514
    4. ' =' → logprob: -4.2451887130737305
    5. ' ]' → logprob: -6.4951887130737305
    6. '[p' → logprob: -8.87018871307373
    7. '[' → logprob: -8.99518871307373
    8. ')=' → logprob: -10.12018871307373
    9. '=p' → logprob: -10.62018871307373
    10. ')' → logprob: -10.99518871307373

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029637437546625733
    2. ' ' → logprob: -8.125296592712402
    3. '<|end|>' → logprob: -15.750296592712402
    4. '```' → logprob: -17.125295639038086
    5. '   ' → logprob: -17.875295639038086
    6. '۱' → logprob: -18.437795639038086
    7. '`' → logprob: -18.687795639038086
    8. '' → logprob: -18.875295639038086
    9. '  ' → logprob: -19.000295639038086
    10. '[' → logprob: -19.375295639038086

Token 185: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.000850605487357825
    2. '               ' → logprob: -8.125850677490234
    3. '           ' → logprob: -8.875850677490234
    4. '<|end|>' → logprob: -9.125850677490234
    5. '                   ' → logprob: -9.375850677490234
    6. ',' → logprob: -9.375850677490234
    7. '                           ' → logprob: -9.750850677490234
    8. '					' → logprob: -11.125850677490234
    9. '                        ' → logprob: -11.250850677490234
    10. '       ' → logprob: -11.375850677490234

Token 186: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00024048985505942255
    2. '               ' → logprob: -9.750240325927734
    3. ',' → logprob: -10.000240325927734
    4. '<|end|>' → logprob: -10.250240325927734
    5. '                   ' → logprob: -10.625240325927734
    6. '           ' → logprob: -11.000240325927734
    7. '                        
' → logprob: -11.000240325927734
    8. '                        ' → logprob: -11.625240325927734
    9. '                           ' → logprob: -11.875240325927734
    10. '       ' → logprob: -12.125240325927734

Token 187: ' changed' (ID: 9180)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' (adapté à ' changed') → logprob: -0.12694847583770752
    2. ' changed' → logprob: -2.126948356628418
    3. '                       ' → logprob: -11.126948356628418
    4. '               ' → logprob: -13.126948356628418
    5. '                   ' → logprob: -13.501948356628418
    6. '   ' → logprob: -13.876948356628418
    7. '       ' → logprob: -14.251948356628418
    8. '           ' → logprob: -14.751948356628418
    9. '
' → logprob: -16.126949310302734
    10. '                           ' → logprob: -16.126949310302734

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04865129664540291
    2. '=' → logprob: -3.0486512184143066
    3. '=True' → logprob: -9.673651695251465
    4. ' |=' → logprob: -14.423651695251465
    5. ' ' → logprob: -14.923651695251465
    6. '<|end|>' → logprob: -16.92365074157715
    7. '=False' → logprob: -17.17365074157715
    8. '=true' → logprob: -17.54865074157715
    9. 'True' → logprob: -17.54865074157715
    10. ' True' → logprob: -17.67365074157715

Token 189: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3132616877555847
    2. ' True' → logprob: -1.3132617473602295
    3. '=True' → logprob: -18.563261032104492
    4. '(True' → logprob: -18.688261032104492
    5. 'true' → logprob: -21.313261032104492
    6. '1' → logprob: -21.688261032104492
    7. '_true' → logprob: -22.063261032104492
    8. '.True' → logprob: -22.938261032104492
    9. ' true' → logprob: -23.188261032104492
    10. 'False' → logprob: -23.688261032104492

Token 190: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011533168144524097
    2. '                   ' → logprob: -7.501153469085693
    3. 'elif' → logprob: -8.251152992248535
    4. '               ' → logprob: -8.626152992248535
    5. 'else' → logprob: -9.376152992248535
    6. '       ' → logprob: -10.751152992248535
    7. ' else' → logprob: -11.376152992248535
    8. '		' → logprob: -12.001152992248535
    9. '          ' → logprob: -12.001152992248535
    10. ' elif' → logprob: -12.126152992248535

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007847348228096962
    2. '                   ' → logprob: -5.382847309112549
    3. '               ' → logprob: -5.882847309112549
    4. 'elif' → logprob: -9.132847785949707
    5. 'else' → logprob: -9.382847785949707
    6. '       ' → logprob: -9.507847785949707
    7. '```' → logprob: -9.507847785949707
    8. '		' → logprob: -10.757847785949707
    9. '          ' → logprob: -10.882847785949707
    10. '            ' → logprob: -11.257847785949707

Token 192: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6109522581100464
    2. 'else' (adapté à ' else') → logprob: -0.8609522581100464
    3. ' else' → logprob: -3.485952377319336
    4. 'elif' → logprob: -5.860952377319336
    5. '       ' → logprob: -7.235952377319336
    6. ' elif' → logprob: -9.235952377319336
    7. '               ' → logprob: -9.610952377319336
    8. '   ' → logprob: -10.985952377319336
    9. '          ' → logprob: -11.735952377319336
    10. 'if' → logprob: -12.360952377319336

Token 193: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.480337917804718
    2. ':
' → logprob: -0.980337917804718
    3. '               ' → logprob: -5.480338096618652
    4. '           ' → logprob: -6.480338096618652
    5. '       ' → logprob: -7.855338096618652
    6. ' :
' → logprob: -9.855338096618652
    7. '   ' → logprob: -10.355338096618652
    8. ':

' → logprob: -11.105338096618652
    9. ' :' → logprob: -11.105338096618652
    10. '                   ' → logprob: -12.105338096618652

Token 194: '               ' (ID: 506)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42683282494544983
    2. '       ' → logprob: -1.3018327951431274
    3. '               ' → logprob: -3.301832914352417
    4. 'for' → logprob: -3.676832914352417
    5. '           ' → logprob: -4.801832675933838
    6. '   ' → logprob: -6.551832675933838
    7. '        ' → logprob: -7.426832675933838
    8. ' #' → logprob: -7.551832675933838
    9. ' ' → logprob: -7.926832675933838
    10. ' ' → logprob: -8.051833152770996

Token 195: ' #' (ID: 1069)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.1456435918807983
    2. ' good' → logprob: -1.5206435918807983
    3. ' ok' → logprob: -2.520643711090088
    4. ' cnt' → logprob: -2.645643711090088
    5. ' for' → logprob: -2.895643711090088
    6. ' unknown' → logprob: -3.270643711090088
    7. ' parts' → logprob: -3.770643711090088
    8. '               ' → logprob: -3.770643711090088
    9. ' all' → logprob: -3.770643711090088
    10. 'count' → logprob: -4.020643711090088

Token 196: ' r' (ID: 428)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.2713016271591187
    2. 'count' → logprob: -1.6463016271591187
    3. ' at' → logprob: -2.021301746368408
    4. ' cnt' → logprob: -3.021301746368408
    5. 'cnt' → logprob: -3.021301746368408
    6. ' good' → logprob: -3.146301746368408
    7. 'found' → logprob: -3.271301746368408
    8. '#' → logprob: -3.396301746368408
    9. 'ok' → logprob: -4.021301746368408
    10. ' any' → logprob: -4.146301746368408

Token 197: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0017973965732380748
    2. ' ==' → logprob: -6.626797199249268
    3. '!=' → logprob: -7.751797199249268
    4. '=' → logprob: -10.751797676086426
    5. '0' → logprob: -12.001797676086426
    6. '==
' → logprob: -12.751797676086426
    7. ' !=' → logprob: -13.001797676086426
    8. '```' → logprob: -13.251797676086426
    9. ' ' → logprob: -13.501797676086426
    10. '==-' → logprob: -13.501797676086426

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014859484508633614
    2. ' ' → logprob: -9.62514877319336
    3. '2' → logprob: -9.75014877319336
    4. '-' → logprob: -11.37514877319336
    5. '1' → logprob: -12.75014877319336
    6. '   ' → logprob: -13.06264877319336
    7. '```' → logprob: -13.56264877319336
    8. '
' → logprob: -13.93764877319336
    9. '3' → logprob: -14.00014877319336
    10. '  ' → logprob: -14.25014877319336

Token 199: ' means' (ID: 4748)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3890523314476013
    2. ':
' → logprob: -1.639052391052246
    3. ':' → logprob: -2.639052391052246
    4. ' for' → logprob: -3.014052391052246
    5. 'for' → logprob: -5.514052391052246
    6. '                   ' → logprob: -7.014052391052246
    7. ',' → logprob: -7.639052391052246
    8. '           ' → logprob: -7.764052391052246
    9. ' :
' → logprob: -8.014052391052246
    10. '
' → logprob: -8.139052391052246

Token 200: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.07294046133756638
    2. 'at' → logprob: -2.9479403495788574
    3. ' one' → logprob: -5.072940349578857
    4. ' not' → logprob: -5.197940349578857
    5. ' ' → logprob: -6.447940349578857
    6. '#' → logprob: -6.447940349578857
    7. ' #' → logprob: -7.447940349578857
    8. 'not' → logprob: -7.572940349578857
    9. ' some' → logprob: -8.072940826416016
    10. 'one' → logprob: -8.197940826416016

Token 201: ' least' (ID: 5153)
  Prédit: ' least'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' least' → logprob: -0.31339162588119507
    2. 'least' → logprob: -1.3133916854858398
    3. '   ' → logprob: -10.06339168548584
    4. '```' → logprob: -10.81339168548584
    5. '
' → logprob: -11.18839168548584
    6. ' ' → logprob: -11.43839168548584
    7. '_le' → logprob: -11.56339168548584
    8. 'lease' → logprob: -11.93839168548584
    9. '#' → logprob: -12.06339168548584
    10. ' ' → logprob: -12.43839168548584

Token 202: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.47409558296203613
    2. ' one' → logprob: -0.9740955829620361
    3. '_one' → logprob: -11.724095344543457
    4. ' ' → logprob: -12.349095344543457
    5. '1' → logprob: -13.224095344543457
    6. 'One' → logprob: -13.474095344543457
    7. '   ' → logprob: -13.474095344543457
    8. '```' → logprob: -13.474095344543457
    9. '
' → logprob: -16.224096298217773
    10. '  ' → logprob: -17.849096298217773

Token 203: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.37548497319221497
    2. ' of' → logprob: -1.2504849433898926
    3. 'part' → logprob: -4.000484943389893
    4. 'of' → logprob: -5.750484943389893
    5. ' status' → logprob: -6.750484943389893
    6. ' is' → logprob: -7.125484943389893
    7. 'status' → logprob: -7.375484943389893
    8. ' bad' → logprob: -7.500484943389893
    9. ' parts' → logprob: -7.500484943389893
    10. '                   ' → logprob: -8.00048542022705

Token 204: ' broken' (ID: 17162)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1501164436340332
    2. ' in' → logprob: -2.525116443634033
    3. ' has' → logprob: -4.025116443634033
    4. 'is' → logprob: -4.400116443634033
    5. ' not' → logprob: -5.150116443634033
    6. ' ' → logprob: -5.400116443634033
    7. '                   ' → logprob: -5.525116443634033
    8. 'not' → logprob: -5.650116443634033
    9. ' broken' → logprob: -6.775116443634033
    10. 'in' → logprob: -7.025116443634033

Token 205: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016166802495718002
    2. ' for' → logprob: -4.641166687011719
    3. ',' → logprob: -5.891166687011719
    4. 'for' → logprob: -7.141166687011719
    5. '                
' → logprob: -7.391166687011719
    6. '
' → logprob: -7.516166687011719
    7. '                   ' → logprob: -7.766166687011719
    8. '           ' → logprob: -8.891166687011719
    9. '                ' → logprob: -8.891166687011719
    10. ' parts' → logprob: -9.266166687011719

Token 206: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27466437220573425
    2. ' for' → logprob: -1.6496644020080566
    3. '           ' → logprob: -4.024664402008057
    4. '                   ' → logprob: -4.649664402008057
    5. '                ' → logprob: -5.524664402008057
    6. 'for' → logprob: -5.899664402008057
    7. '
' → logprob: -6.024664402008057
    8. '       ' → logprob: -6.399664402008057
    9. '   ' → logprob: -6.774664402008057
    10. '  
' → logprob: -6.774664402008057

Token 207: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.4126249551773071
    2. ' good' → logprob: -2.1626248359680176
    3. ' count' → logprob: -2.4126248359680176
    4. 'unknown' → logprob: -2.4126248359680176
    5. 'good' → logprob: -2.5376248359680176
    6. 'found' → logprob: -2.7876248359680176
    7. 'cnt' → logprob: -2.7876248359680176
    8. 'all' → logprob: -3.4126248359680176
    9. 'ok' → logprob: -3.7876248359680176
    10. ' ok' → logprob: -4.162624835968018

Token 208: ' if' (ID: 538)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.5182609558105469
    2. ' good' → logprob: -2.018260955810547
    3. ' count' → logprob: -2.018260955810547
    4. 'unknown' → logprob: -2.018260955810547
    5. 'cnt' → logprob: -2.268260955810547
    6. 'ok' → logprob: -3.143260955810547
    7. 'good' → logprob: -3.393260955810547
    8. ' cnt' → logprob: -3.393260955810547
    9. ' unknown' → logprob: -3.768260955810547
    10. 'known' → logprob: -3.768260955810547

Token 209: ' all' (ID: 722)
  Prédit: ' status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' status' → logprob: -0.17122501134872437
    2. 'status' → logprob: -2.046225070953369
    3. ' sum' → logprob: -4.171225070953369
    4. ' all' → logprob: -5.296225070953369
    5. 'sum' → logprob: -5.296225070953369
    6. ' parts' → logprob: -6.796225070953369
    7. 'all' → logprob: -7.921225070953369
    8. '(status' → logprob: -8.046224594116211
    9. ' ' → logprob: -8.171224594116211
    10. '   ' → logprob: -8.796224594116211

Token 210: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -1.071169376373291
    2. ' status' → logprob: -1.196169376373291
    3. 'status' → logprob: -1.696169376373291
    4. ' p' → logprob: -2.571169376373291
    5. '(status' → logprob: -3.696169376373291
    6. 'parts' → logprob: -3.946169376373291
    7. 'p' → logprob: -4.071169376373291
    8. '[p' → logprob: -4.196169376373291
    9. '(p' → logprob: -4.571169376373291
    10. '[' → logprob: -5.446169376373291

Token 211: ' known' (ID: 5542)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.418102741241455
    2. '==' → logprob: -1.543102741241455
    3. 'have' → logprob: -1.918102741241455
    4. 'status' → logprob: -2.043102741241455
    5. '[p' → logprob: -2.668102741241455
    6. ' have' → logprob: -3.168102741241455
    7. 'are' → logprob: -3.543102741241455
    8. ' are' → logprob: -3.793102741241455
    9. '!=' → logprob: -3.793102741241455
    10. 'p' → logprob: -3.793102741241455

Token 212: ' good' (ID: 1899)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.07059827446937561
    2. '==' → logprob: -3.6955983638763428
    3. 'to' → logprob: -4.195598125457764
    4. ' ==' → logprob: -4.570598125457764
    5. ' ' → logprob: -4.695598125457764
    6. ' and' → logprob: -6.195598125457764
    7. 'and' → logprob: -6.445598125457764
    8. ' p' → logprob: -6.820598125457764
    9. ' good' → logprob: -7.195598125457764
    10. '   ' → logprob: -7.695598125457764

Token 213: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12178177386522293
    2. 'and' → logprob: -2.246781826019287
    3. ':' → logprob: -5.246781826019287
    4. ',' → logprob: -6.121781826019287
    5. ':
' → logprob: -6.746781826019287
    6. ' ' → logprob: -9.746781349182129
    7. ' ,' → logprob: -10.121781349182129
    8. '                   ' → logprob: -10.121781349182129
    9. '   ' → logprob: -10.246781349182129
    10. ' :
' → logprob: -10.621781349182129

Token 214: ' conflict' (ID: 21461)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3738221824169159
    2. ' continue' → logprob: -1.8738222122192383
    3. '                       ' → logprob: -2.1238222122192383
    4. '               ' → logprob: -4.248822212219238
    5. 'continue' → logprob: -4.498822212219238
    6. ' status' → logprob: -5.498822212219238
    7. ' changed' → logprob: -5.748822212219238
    8. '           ' → logprob: -6.248822212219238
    9. '   ' → logprob: -6.498822212219238
    10. '                           ' → logprob: -7.748822212219238

Token 215: ' but' (ID: 889)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012475868687033653
    2. '           ' → logprob: -4.512475967407227
    3. '
' → logprob: -8.137475967407227
    4. '                   ' → logprob: -8.387475967407227
    5. '                
' → logprob: -8.387475967407227
    6. ',' → logprob: -8.637475967407227
    7. ' if' → logprob: -9.387475967407227
    8. '    
' → logprob: -9.387475967407227
    9. '       ' → logprob: -10.012475967407227
    10. '   ' → logprob: -10.012475967407227

Token 216: ' ignore' (ID: 17887)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.029019378125667572
    2. 'pass' → logprob: -4.529019355773926
    3. ' continue' → logprob: -4.529019355773926
    4. '               ' → logprob: -5.654019355773926
    5. '                   ' → logprob: -6.904019355773926
    6. '#' → logprob: -7.154019355773926
    7. '                       ' → logprob: -7.654019355773926
    8. 'continue' → logprob: -7.654019355773926
    9. '           ' → logprob: -8.654019355773926
    10. ' break' → logprob: -9.154019355773926

Token 217: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005199724342674017
    2. '           ' → logprob: -5.755199909210205
    3. '                   ' → logprob: -7.130199909210205
    4. '
' → logprob: -7.130199909210205
    5. ',' → logprob: -9.005199432373047
    6. '                
' → logprob: -9.755199432373047
    7. '                       ' → logprob: -10.130199432373047
    8. '    
' → logprob: -10.755199432373047
    9. ' if' → logprob: -10.755199432373047
    10. '   ' → logprob: -10.880199432373047

Token 218: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050726402550935745
    2. '               ' → logprob: -3.0507264137268066
    3. '
' → logprob: -6.925726413726807
    4. '            
' → logprob: -8.050725936889648
    5. '                   ' → logprob: -8.300725936889648
    6. '    
' → logprob: -9.425725936889648
    7. '                
' → logprob: -9.675725936889648
    8. '   ' → logprob: -9.675725936889648
    9. ' if' → logprob: -9.925725936889648
    10. '  
' → logprob: -10.050725936889648

Token 219: ' if' (ID: 538)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.5428073406219482
    2. ' good' → logprob: -2.4178073406219482
    3. 'good' → logprob: -2.4178073406219482
    4. ' unknown' → logprob: -3.0428073406219482
    5. 'count' → logprob: -3.1678073406219482
    6. 'cnt' → logprob: -3.1678073406219482
    7. 'all' → logprob: -4.042807579040527
    8. 'if' (adapté à ' if') → logprob: -4.042807579040527
    9. ' count' → logprob: -4.417807579040527
    10. ' cnt' → logprob: -4.417807579040527

Token 220: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.0221807099878788
    2. ' status' → logprob: -4.272180557250977
    3. 'all' → logprob: -4.897180557250977
    4. 'status' → logprob: -7.897180557250977
    5. ' any' → logprob: -9.522180557250977
    6. '(all' → logprob: -10.897180557250977
    7. '(status' → logprob: -11.022180557250977
    8. ' ' → logprob: -11.272180557250977
    9. '   ' → logprob: -12.272180557250977
    10. ' not' → logprob: -12.522180557250977

Token 221: '(status' (ID: 26454)
  Prédit: '(status'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(status' → logprob: -0.0001487140398239717
    2. '(' → logprob: -9.37514877319336
    3. '([' → logprob: -10.12514877319336
    4. 'status' → logprob: -10.87514877319336
    5. ' (' → logprob: -13.00014877319336
    6. '((' → logprob: -13.12514877319336
    7. ' status' → logprob: -15.25014877319336
    8. '=status' → logprob: -15.62514877319336
    9. '[' → logprob: -15.87514877319336
    10. '	status' → logprob: -17.37514877319336

Token 222: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -3.1424973713001236e-05
    2. '[' → logprob: -10.625031471252441
    3. ' [' → logprob: -12.500031471252441
    4. 'p' → logprob: -13.375031471252441
    5. '[x' → logprob: -14.250031471252441
    6. '   ' → logprob: -15.000031471252441
    7. '(p' → logprob: -15.375031471252441
    8. '[pos' → logprob: -15.375031471252441
    9. '```' → logprob: -16.375030517578125
    10. '[
' → logprob: -16.750030517578125

Token 223: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.0033591510728001595
    2. ']' → logprob: -5.753359317779541
    3. '==' → logprob: -9.378358840942383
    4. ']!=' → logprob: -9.878358840942383
    5. ' ]' → logprob: -10.128358840942383
    6. '']==' → logprob: -12.878358840942383
    7. ')==' → logprob: -13.753358840942383
    8. '[' → logprob: -14.378358840942383
    9. '```' → logprob: -15.003358840942383
    10. ' ==' → logprob: -15.003358840942383

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009159822366200387
    2. ' ' → logprob: -7.000916004180908
    3. '   ' → logprob: -13.00091552734375
    4. '  ' → logprob: -13.87591552734375
    5. '0' → logprob: -14.50091552734375
    6. '```' → logprob: -15.62591552734375
    7. '    ' → logprob: -16.12591552734375
    8. '=' → logprob: -16.37591552734375
    9. '>' → logprob: -17.12591552734375
    10. '`' → logprob: -17.43841552734375

Token 225: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06203490495681763
    2. 'for' → logprob: -2.812034845352173
    3. ' ' → logprob: -9.937034606933594
    4. ')' → logprob: -11.062034606933594
    5. '	for' → logprob: -14.187034606933594
    6. ' p' → logprob: -14.187034606933594
    7. 'p' → logprob: -14.562034606933594
    8. '   ' → logprob: -15.062034606933594
    9. ' )' → logprob: -15.437034606933594
    10. '    ' → logprob: -15.562034606933594

Token 226: ' p' (ID: 275)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.5577866435050964
    2. 'p' → logprob: -1.8077867031097412
    3. 'parts' → logprob: -1.8077867031097412
    4. ' p' → logprob: -2.307786703109741
    5. 'part' → logprob: -12.30778694152832
    6. ' ' → logprob: -13.43278694152832
    7. '(parts' → logprob: -13.93278694152832
    8. ' partes' → logprob: -14.30778694152832
    9. ' part' → logprob: -14.30778694152832
    10. '	p' → logprob: -14.55778694152832

Token 227: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.626978874206543
    2. 'p' → logprob: -1.251978874206543
    3. ' p' → logprob: -1.876978874206543
    4. 'in' → logprob: -3.626978874206543
    5. ' ' → logprob: -9.376978874206543
    6. ' parts' → logprob: -10.251978874206543
    7. 'parts' → logprob: -10.251978874206543
    8. 's' → logprob: -10.626978874206543
    9. '(p' → logprob: -12.251978874206543
    10. ',p' → logprob: -12.376978874206543

Token 228: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.201447531580925
    2. ' parts' → logprob: -1.7014474868774414
    3. ' ' → logprob: -10.951447486877441
    4. '   ' → logprob: -11.701447486877441
    5. '(parts' → logprob: -12.576447486877441
    6. '  ' → logprob: -14.201447486877441
    7. '    ' → logprob: -14.451447486877441
    8. '[' → logprob: -14.451447486877441
    9. '.parts' → logprob: -14.451447486877441
    10. 'part' → logprob: -14.951447486877441

Token 229: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5762389302253723
    2. '):
' → logprob: -0.8262389302253723
    3. ')' → logprob: -9.076238632202148
    4. '):
' → logprob: -9.826238632202148
    5. ' ):' → logprob: -9.951238632202148
    6. ' ):
' → logprob: -10.326238632202148
    7. '):

' → logprob: -10.701238632202148
    8. '           ' → logprob: -11.576238632202148
    9. '       ' → logprob: -11.951238632202148
    10. ')==' → logprob: -12.826238632202148

Token 230: '                   ' (ID: 699)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43523314595222473
    2. '                   ' → logprob: -1.4352331161499023
    3. ':' → logprob: -2.9352331161499023
    4. '               ' → logprob: -3.1852331161499023
    5. '                       ' → logprob: -4.310233116149902
    6. '           ' → logprob: -6.060233116149902
    7. '):
' → logprob: -6.560233116149902
    8. ' continue' → logprob: -7.060233116149902
    9. ' :
' → logprob: -7.185233116149902
    10. '                           ' → logprob: -7.310233116149902

Token 231: ' continue' (ID: 4901)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.904777467250824
    2. ' continue' → logprob: -1.4047775268554688
    3. ' pass' → logprob: -1.9047775268554688
    4. 'continue' (adapté à ' continue') → logprob: -2.0297775268554688
    5. '                   ' → logprob: -2.9047775268554688
    6. 'pass' → logprob: -5.029777526855469
    7. '               ' → logprob: -5.654777526855469
    8. '           ' → logprob: -5.904777526855469
    9. '   ' → logprob: -7.154777526855469
    10. ' break' → logprob: -7.654777526855469

Token 232: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06391124427318573
    2. '           ' → logprob: -2.813911199569702
    3. '
' → logprob: -6.688911437988281
    4. '       ' → logprob: -8.313911437988281
    5. 'else' → logprob: -8.938911437988281
    6. '                
' → logprob: -9.313911437988281
    7. '            
' → logprob: -10.063911437988281
    8. 'elif' → logprob: -10.063911437988281
    9. '<|end|>' → logprob: -10.188911437988281
    10. '                   ' → logprob: -10.688911437988281

Token 233: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43339109420776367
    2. '           ' → logprob: -1.0583910942077637
    3. '       ' → logprob: -6.183391094207764
    4. 'if' → logprob: -7.933391094207764
    5. '            
' → logprob: -7.933391094207764
    6. '
' → logprob: -8.183391571044922
    7. 'else' → logprob: -8.308391571044922
    8. '                
' → logprob: -8.433391571044922
    9. 'rest' → logprob: -8.683391571044922
    10. 'for' → logprob: -8.933391571044922

Token 234: ' #' (ID: 1069)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.4558112919330597
    2. 'count' → logprob: -1.8308112621307373
    3. 'broken' → logprob: -1.9558112621307373
    4. 'cnt' → logprob: -3.5808112621307373
    5. 'good' → logprob: -4.955811500549316
    6. '               ' → logprob: -4.955811500549316
    7. 'if' → logprob: -5.205811500549316
    8. 'num' → logprob: -5.830811500549316
    9. 'break' → logprob: -5.830811500549316
    10. 'bad' → logprob: -5.955811500549316

Token 235: ' if' (ID: 538)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.33201518654823303
    2. 'broken' → logprob: -1.9570151567459106
    3. 'cnt' → logprob: -2.9570152759552
    4. 'count' → logprob: -3.3320152759552
    5. 'known' → logprob: -3.5820152759552
    6. 'if' → logprob: -4.457015037536621
    7. 'c' → logprob: -4.957015037536621
    8. 'possible' → logprob: -6.457015037536621
    9. 'for' → logprob: -6.707015037536621
    10. 'poss' → logprob: -7.457015037536621

Token 236: ' one' (ID: 1001)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.1241400241851807
    2. 'status' → logprob: -1.3741400241851807
    3. ' status' → logprob: -1.3741400241851807
    4. ' sum' → logprob: -1.8741400241851807
    5. ' any' → logprob: -4.749139785766602
    6. ' parts' → logprob: -6.124139785766602
    7. 'parts' → logprob: -6.249139785766602
    8. 'any' → logprob: -6.874139785766602
    9. ' all' → logprob: -7.749139785766602
    10. '[' → logprob: -8.249139785766602

Token 237: ' part' (ID: 997)
  Prédit: ' status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' status' → logprob: -0.6970823407173157
    2. 'status' → logprob: -0.9470823407173157
    3. 'sum' → logprob: -2.947082281112671
    4. 'parts' → logprob: -4.32208251953125
    5. ' sum' → logprob: -4.57208251953125
    6. ' parts' → logprob: -4.57208251953125
    7. ' p' → logprob: -4.82208251953125
    8. '(status' → logprob: -5.19708251953125
    9. ' in' → logprob: -5.69708251953125
    10. 'p' → logprob: -5.69708251953125

Token 238: ' known' (ID: 5542)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.413242906332016
    2. 'status' → logprob: -1.9132429361343384
    3. ' in' → logprob: -3.163242816925049
    4. ' ==' → logprob: -3.663242816925049
    5. 'known' → logprob: -4.413242816925049
    6. ' status' → logprob: -4.788242816925049
    7. '```' → logprob: -4.788242816925049
    8. '                   ' → logprob: -4.913242816925049
    9. '               ' → logprob: -4.913242816925049
    10. '   ' → logprob: -4.913242816925049

Token 239: ' broken' (ID: 17162)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023315943777561188
    2. '0' → logprob: -4.898315906524658
    3. ' ==' → logprob: -5.148315906524658
    4. '               ' → logprob: -5.648315906524658
    5. '                   ' → logprob: -7.023315906524658
    6. '
' → logprob: -7.148315906524658
    7. 'broken' → logprob: -7.148315906524658
    8. ' ' → logprob: -7.398315906524658
    9. '           ' → logprob: -7.523315906524658
    10. '=' → logprob: -7.523315906524658

Token 240: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7047258019447327
    2. ' and' → logprob: -1.829725742340088
    3. ' for' → logprob: -2.079725742340088
    4. 'and' → logprob: -2.954725742340088
    5. '               ' → logprob: -3.079725742340088
    6. ':
' → logprob: -3.204725742340088
    7. ',' → logprob: -3.579725742340088
    8. ' or' → logprob: -4.079725742340088
    9. 'for' → logprob: -4.579725742340088
    10. ' in' → logprob: -4.829725742340088

Token 241: ' no' (ID: 860)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7351810932159424
    2. ' for' → logprob: -1.1101810932159424
    3. '                   ' → logprob: -2.2351810932159424
    4. 'if' → logprob: -3.6101810932159424
    5. 'count' → logprob: -4.110180854797363
    6. 'continue' → logprob: -4.735180854797363
    7. '               ' → logprob: -4.985180854797363
    8. ' if' → logprob: -5.110180854797363
    9. ' continue' → logprob: -5.485180854797363
    10. 'broken' → logprob: -5.610180854797363

Token 242: ' new' (ID: 620)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.9748098850250244
    2. ' need' → logprob: -1.9748098850250244
    3. 'need' → logprob: -1.9748098850250244
    4. ' changes' → logprob: -2.3498098850250244
    5. 'changes' → logprob: -2.4748098850250244
    6. 'w' → logprob: -3.2248098850250244
    7. ' change' → logprob: -3.3498098850250244
    8. 'continue' → logprob: -3.4748098850250244
    9. 'changed' → logprob: -3.9748098850250244
    10. 'elif' → logprob: -5.099809646606445

Token 243: ' info' (ID: 5377)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.3034724295139313
    2. 'changes' → logprob: -2.0534725189208984
    3. ' changes' → logprob: -3.3034725189208984
    4. ' change' → logprob: -3.3034725189208984
    5. 'update' → logprob: -4.178472518920898
    6. 'action' → logprob: -4.678472518920898
    7. 'if' → logprob: -5.178472518920898
    8. 'changed' → logprob: -5.553472518920898
    9. '   ' → logprob: -5.803472518920898
    10. '               ' → logprob: -6.053472518920898

Token 244: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013556169345974922
    2. ' continue' → logprob: -4.888556003570557
    3. 'continue' → logprob: -6.013556003570557
    4. '                   ' → logprob: -6.263556003570557
    5. '           ' → logprob: -6.888556003570557
    6. ',' → logprob: -8.638556480407715
    7. ':' → logprob: -9.263556480407715
    8. '       ' → logprob: -9.388556480407715
    9. ' if' → logprob: -9.763556480407715
    10. 'if' → logprob: -10.513556480407715

Token 245: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007052833680063486
    2. '<|end|>' → logprob: -8.50070571899414
    3. '       ' → logprob: -9.25070571899414
    4. ' if' → logprob: -9.37570571899414
    5. '```' → logprob: -9.50070571899414
    6. ' for' → logprob: -9.62570571899414
    7. '           ' → logprob: -9.75070571899414
    8. 'if' → logprob: -10.50070571899414
    9. '                   ' → logprob: -10.75070571899414
    10. ',' → logprob: -11.25070571899414

Token 246: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11575363576412201
    2. '               ' → logprob: -2.365753650665283
    3. ' if' → logprob: -4.365753650665283
    4. 'continue' → logprob: -6.740753650665283
    5. 'count' → logprob: -7.115753650665283
    6. 'found' → logprob: -8.240753173828125
    7. 'unknown' → logprob: -9.115753173828125
    8. 'parts' → logprob: -9.365753173828125
    9. 'broken' → logprob: -9.990753173828125
    10. '                   ' → logprob: -10.115753173828125

Token 247: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.2519293427467346
    2. ' any' → logprob: -1.5019292831420898
    3. '(any' → logprob: -15.25192928314209
    4. '   ' → logprob: -17.626930236816406
    5. ' ' → logprob: -19.001930236816406
    6. 'all' → logprob: -19.376930236816406
    7. '.any' → logprob: -19.751930236816406
    8. ':any' → logprob: -20.501930236816406
    9. '_any' → logprob: -20.501930236816406
    10. '  ' → logprob: -20.751930236816406

Token 248: '(status' (ID: 26454)
  Prédit: '(status'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(status' → logprob: -0.0004032634024042636
    2. 'status' → logprob: -8.37540340423584
    3. '[' → logprob: -9.37540340423584
    4. ' status' → logprob: -9.87540340423584
    5. ' (' → logprob: -10.37540340423584
    6. '=status' → logprob: -12.75040340423584
    7. ',status' → logprob: -14.12540340423584
    8. '(' → logprob: -14.25040340423584
    9. '	status' → logprob: -14.87540340423584
    10. '$status' → logprob: -15.62540340423584

Token 249: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.3856492842023727e-06
    2. ' [' → logprob: -14.125000953674316
    3. '[' → logprob: -14.875000953674316
    4. 'p' → logprob: -16.250001907348633
    5. '(p' → logprob: -16.625001907348633
    6. '```' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.375001907348633
    8. '[
' → logprob: -17.625001907348633
    9. '<p' → logprob: -18.500001907348633
    10. '
' → logprob: -18.500001907348633

Token 250: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0904773473739624
    2. ']==' → logprob: -2.465477466583252
    3. ' ==' → logprob: -6.715477466583252
    4. '[p' → logprob: -8.840476989746094
    5. ')==' → logprob: -9.215476989746094
    6. '()==' → logprob: -10.215476989746094
    7. '[' → logprob: -11.090476989746094
    8. '']==' → logprob: -11.465476989746094
    9. ']' → logprob: -12.090476989746094
    10. '```' → logprob: -12.340476989746094

Token 251: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -16.37500762939453
    4. '```' → logprob: -18.12500762939453
    5. '1' → logprob: -18.43750762939453
    6. '=' → logprob: -19.25000762939453
    7. '۰' → logprob: -19.25000762939453
    8. '[' → logprob: -19.25000762939453
    9. '  ' → logprob: -19.31250762939453
    10. '    ' → logprob: -20.06250762939453

Token 252: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06196948140859604
    2. 'for' → logprob: -2.811969518661499
    3. ' ' → logprob: -14.436969757080078
    4. '	for' → logprob: -14.436969757080078
    5. '(p' → logprob: -14.436969757080078
    6. ')' → logprob: -15.936969757080078
    7. ' in' → logprob: -17.311969757080078
    8. '[p' → logprob: -17.436969757080078
    9. '   ' → logprob: -17.811969757080078
    10. '```' → logprob: -18.311969757080078

Token 253: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4743987023830414
    2. ' p' → logprob: -0.9743987321853638
    3. ' parts' → logprob: -8.474398612976074
    4. 'parts' → logprob: -9.099398612976074
    5. 'part' → logprob: -14.724398612976074
    6. '(p' → logprob: -16.09939956665039
    7. ')p' → logprob: -16.22439956665039
    8. ' part' → logprob: -16.47439956665039
    9. 'Parts' → logprob: -16.59939956665039
    10. '[p' → logprob: -16.72439956665039

Token 254: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048267658799886703
    2. 'in' → logprob: -3.7982676029205322
    3. ' p' → logprob: -4.673267841339111
    4. 'p' → logprob: -4.798267841339111
    5. ' parts' → logprob: -5.423267841339111
    6. 'parts' → logprob: -6.173267841339111
    7. '(parts' → logprob: -8.173267364501953
    8. '[p' → logprob: -8.423267364501953
    9. '(p' → logprob: -9.548267364501953
    10. ')' → logprob: -10.923267364501953

Token 255: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.474122554063797
    2. ' parts' → logprob: -0.9741225242614746
    3. '(parts' → logprob: -10.474123001098633
    4. 'p' → logprob: -12.099123001098633
    5. '   ' → logprob: -12.849123001098633
    6. '[' → logprob: -12.849123001098633
    7. ' ' → logprob: -13.349123001098633
    8. '.parts' → logprob: -13.599123001098633
    9. ')' → logprob: -14.849123001098633
    10. ' p' → logprob: -14.849123001098633

Token 256: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018209410831332207
    2. '):' → logprob: -4.018209457397461
    3. '                   ' → logprob: -10.768209457397461
    4. '               ' → logprob: -11.393209457397461
    5. '):
' → logprob: -11.768209457397461
    6. ')==' → logprob: -12.143209457397461
    7. ':
' → logprob: -12.518209457397461
    8. '           ' → logprob: -12.643209457397461
    9. '):

' → logprob: -13.143209457397461
    10. ' ):
' → logprob: -13.143209457397461

Token 257: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22720232605934143
    2. 'continue' → logprob: -2.3522024154663086
    3. '           ' → logprob: -3.1022024154663086
    4. '               ' → logprob: -3.3522024154663086
    5. ' continue' → logprob: -3.6022024154663086
    6. '                       ' → logprob: -7.727202415466309
    7. '   ' → logprob: -8.352202415466309
    8. '       ' → logprob: -9.102202415466309
    9. '	continue' → logprob: -10.227202415466309
    10. '
' → logprob: -11.352202415466309

Token 258: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6094093918800354
    2. 'continue' (adapté à ' continue') → logprob: -0.8594093918800354
    3. '                       ' → logprob: -3.7344093322753906
    4. '                   ' → logprob: -4.859409332275391
    5. '               ' → logprob: -7.359409332275391
    6. '   ' → logprob: -8.35940933227539
    7. '	continue' → logprob: -8.98440933227539
    8. '           ' → logprob: -9.10940933227539
    9. '       ' → logprob: -9.35940933227539
    10. 'pass' → logprob: -10.23440933227539

Token 259: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003564383659977466
    2. '           ' → logprob: -8.750356674194336
    3. '                
' → logprob: -9.625356674194336
    4. '                   ' → logprob: -10.000356674194336
    5. '<|end|>' → logprob: -10.625356674194336
    6. '       ' → logprob: -11.000356674194336
    7. '
' → logprob: -11.250356674194336
    8. '              ' → logprob: -12.250356674194336
    9. 'else' → logprob: -12.500356674194336
    10. '```' → logprob: -12.625356674194336

Token 260: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00030829108436591923
    2. '           ' → logprob: -8.8753080368042
    3. '                
' → logprob: -10.0003080368042
    4. '```' → logprob: -10.6253080368042
    5. '<|end|>' → logprob: -10.7503080368042
    6. '       ' → logprob: -11.0003080368042
    7. 'else' → logprob: -11.2503080368042
    8. '                   ' → logprob: -11.7503080368042
    9. 'if' → logprob: -12.1253080368042
    10. '
' → logprob: -12.1253080368042

Token 261: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6947475671768188
    2. '               ' → logprob: -1.6947475671768188
    3. 'unknown' → logprob: -1.6947475671768188
    4. 'for' → logprob: -2.8197474479675293
    5. ' for' → logprob: -3.9447474479675293
    6. '#' (adapté à ' #') → logprob: -4.194747447967529
    7. ' count' → logprob: -4.819747447967529
    8. 'cnt' → logprob: -4.944747447967529
    9. ' unknown' → logprob: -5.444747447967529
    10. 'else' → logprob: -5.569747447967529

Token 262: ' if' (ID: 538)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.08963610976934433
    2. 'cnt' → logprob: -3.3396360874176025
    3. 'count' → logprob: -3.4646360874176025
    4. 'for' → logprob: -5.339636325836182
    5. 'unk' → logprob: -5.339636325836182
    6. '#' → logprob: -5.964636325836182
    7. 'c' → logprob: -6.339636325836182
    8. ' unknown' → logprob: -6.714636325836182
    9. 'broken' → logprob: -7.214636325836182
    10. 'break' → logprob: -7.589636325836182

Token 263: ' two' (ID: 1920)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7509027719497681
    2. 'status' → logprob: -1.500902771949768
    3. 'parts' → logprob: -2.2509026527404785
    4. ' sum' → logprob: -2.5009026527404785
    5. ' status' → logprob: -2.7509026527404785
    6. ' parts' → logprob: -3.1259026527404785
    7. ' exactly' → logprob: -6.2509026527404785
    8. 'len' → logprob: -6.6259026527404785
    9. ' one' → logprob: -7.0009026527404785
    10. 'one' → logprob: -7.0009026527404785

Token 264: ' known' (ID: 5542)
  Prédit: 'status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'status' → logprob: -1.1752641201019287
    2. ' parts' → logprob: -1.5502641201019287
    3. 'parts' → logprob: -1.5502641201019287
    4. ' of' → logprob: -2.0502641201019287
    5. ' status' → logprob: -2.6752641201019287
    6. 'if' → logprob: -4.550264358520508
    7. 'of' → logprob: -4.800264358520508
    8. '(status' → logprob: -4.925264358520508
    9. '
' → logprob: -5.050264358520508
    10. '(parts' → logprob: -5.425264358520508

Token 265: ' good' (ID: 1899)
  Prédit: ' good'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' good' → logprob: -0.8062641620635986
    2. 'broken' → logprob: -1.5562641620635986
    3. ' broken' → logprob: -1.6812641620635986
    4. 'good' → logprob: -2.0562641620635986
    5. ' parts' → logprob: -5.1812639236450195
    6. ' p' → logprob: -5.1812639236450195
    7. 'bad' → logprob: -5.3062639236450195
    8. ' ' → logprob: -5.8062639236450195
    9. '_good' → logprob: -6.0562639236450195
    10. ' bad' → logprob: -6.3062639236450195

Token 266: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4103327691555023
    2. 'and' → logprob: -1.7853327989578247
    3. 'parts' → logprob: -2.910332679748535
    4. ' for' → logprob: -3.035332679748535
    5. ' and' → logprob: -3.785332679748535
    6. ' parts' → logprob: -4.035332679748535
    7. '(parts' → logprob: -4.535332679748535
    8. ',' → logprob: -5.410332679748535
    9. '   ' → logprob: -6.035332679748535
    10. 's' → logprob: -6.035332679748535

Token 267: ' third' (ID: 6914)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6429144740104675
    2. ' for' → logprob: -0.7679144740104675
    3. 'unknown' → logprob: -5.392914295196533
    4. ' unknown' → logprob: -5.892914295196533
    5. '                   ' → logprob: -6.892914295196533
    6. '               ' → logprob: -7.642914295196533
    7. ' one' → logprob: -8.142914772033691
    8. ' rest' → logprob: -9.017914772033691
    9. 'idx' → logprob: -9.267914772033691
    10. 'bad' → logprob: -9.392914772033691

Token 268: ' must' (ID: 2804)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.7821999192237854
    2. '==' → logprob: -1.6571998596191406
    3. ' part' → logprob: -1.7821998596191406
    4. 'part' → logprob: -2.5321998596191406
    5. ' ==' → logprob: -3.1571998596191406
    6. ' is' → logprob: -4.532199859619141
    7. '_parts' → logprob: -5.032199859619141
    8. '```' → logprob: -5.032199859619141
    9. '_unknown' → logprob: -5.407199859619141
    10. ']==' → logprob: -5.782199859619141

Token 269: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.04879583790898323
    2. '=' → logprob: -3.7987959384918213
    3. ' be' → logprob: -4.173795700073242
    4. '==' → logprob: -4.673795700073242
    5. '_be' → logprob: -8.173795700073242
    6. '```' → logprob: -9.923795700073242
    7. 'status' → logprob: -10.423795700073242
    8. 'p' → logprob: -10.673795700073242
    9. '=status' → logprob: -11.048795700073242
    10. 'Be' → logprob: -11.173795700073242

Token 270: ' broken' (ID: 17162)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003148472751490772
    2. ' ' → logprob: -8.125314712524414
    3. '```' → logprob: -11.875314712524414
    4. 'broken' → logprob: -12.000314712524414
    5. '   ' → logprob: -12.500314712524414
    6. '=' → logprob: -15.125314712524414
    7. 'break' → logprob: -15.500314712524414
    8. ' broken' → logprob: -15.500314712524414
    9. '           ' → logprob: -15.625314712524414
    10. '                       ' → logprob: -15.875314712524414

Token 271: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005681568756699562
    2. '                   ' → logprob: -6.38068151473999
    3. '<|end|>' → logprob: -7.25568151473999
    4. 'else' → logprob: -7.63068151473999
    5. '			' → logprob: -7.88068151473999
    6. ',' → logprob: -7.88068151473999
    7. '                
' → logprob: -8.005681991577148
    8. ' for' → logprob: -8.130681991577148
    9. '```' → logprob: -8.505681991577148
    10. '
' → logprob: -8.630681991577148

Token 272: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010597254149615765
    2. ' for' → logprob: -7.751059532165527
    3. '```' → logprob: -8.876059532165527
    4. '<|end|>' → logprob: -8.876059532165527
    5. '                
' → logprob: -9.251059532165527
    6. 'for' → logprob: -9.501059532165527
    7. ',' → logprob: -9.876059532165527
    8. '       ' → logprob: -10.251059532165527
    9. '
' → logprob: -11.251059532165527
    10. '                   ' → logprob: -11.376059532165527

Token 273: ' good' (ID: 1899)
  Prédit: 'good'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'good' (adapté à ' good') → logprob: -0.002504674717783928
    2. ' good' → logprob: -6.377504825592041
    3. 'goods' → logprob: -7.752504825592041
    4. 'known' → logprob: -8.752504348754883
    5. 'count' → logprob: -9.127504348754883
    6. 'ok' → logprob: -10.002504348754883
    7. 'cnt' → logprob: -10.752504348754883
    8. 'unknown' → logprob: -12.252504348754883
    9. 'Good' → logprob: -12.502504348754883
    10. 'gs' → logprob: -12.502504348754883

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8407741785049438
    2. '_parts' → logprob: -1.5907741785049438
    3. '_count' → logprob: -1.7157741785049438
    4. '=' → logprob: -1.8407741785049438
    5. 's' → logprob: -3.7157740592956543
    6. '_good' → logprob: -7.465774059295654
    7. '_cnt' → logprob: -7.840774059295654
    8. '=[' → logprob: -7.965774059295654
    9. '_counts' → logprob: -8.840774536132812
    10. '=count' → logprob: -9.215774536132812

Token 275: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04458128288388252
    2. 'sum' → logprob: -3.294581174850464
    3. ' [' → logprob: -6.169581413269043
    4. '[s' → logprob: -6.669581413269043
    5. 'parts' → logprob: -6.794581413269043
    6. ' sum' → logprob: -7.294581413269043
    7. '0' → logprob: -7.419581413269043
    8. '[p' → logprob: -7.794581413269043
    9. '[]
' → logprob: -9.294581413269043
    10. '[len' → logprob: -9.294581413269043

Token 276: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.843177233240567e-05
    2. ' p' → logprob: -11.250018119812012
    3. 'idx' → logprob: -12.250018119812012
    4. 'x' → logprob: -14.875018119812012
    5. 'i' → logprob: -16.125019073486328
    6. 'index' → logprob: -17.375019073486328
    7. 'pos' → logprob: -17.375019073486328
    8. 'status' → logprob: -18.000019073486328
    9. '(p' → logprob: -18.500019073486328
    10. ' idx' → logprob: -18.625019073486328

Token 277: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3869136571884155
    2. 'for' → logprob: -1.1369136571884155
    3. ' ' → logprob: -10.386913299560547
    4. '
' → logprob: -12.261913299560547
    5. '   ' → logprob: -13.011913299560547
    6. '==' → logprob: -13.261913299560547
    7. 'p' → logprob: -14.386913299560547
    8. '  ' → logprob: -14.636913299560547
    9. '	for' → logprob: -15.136913299560547
    10. '           ' → logprob: -15.136913299560547

Token 278: ' p' (ID: 275)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.10247735679149628
    2. ' parts' → logprob: -2.3524773120880127
    3. 'p' → logprob: -6.102477550506592
    4. ' p' → logprob: -10.727477073669434
    5. '(parts' → logprob: -11.977477073669434
    6. ' ' → logprob: -14.102477073669434
    7. 'points' → logprob: -15.102477073669434
    8. '   ' → logprob: -15.227477073669434
    9. '
' → logprob: -15.352477073669434
    10. 'Parts' → logprob: -15.727477073669434

Token 279: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023625344038009644
    2. 'in' → logprob: -3.773625373840332
    3. ',' → logprob: -8.773625373840332
    4. ',p' → logprob: -9.648625373840332
    5. 's' → logprob: -10.148625373840332
    6. 'status' → logprob: -10.148625373840332
    7. ',status' → logprob: -10.898625373840332
    8. 'p' → logprob: -11.023625373840332
    9. 'parts' → logprob: -11.273625373840332
    10. ' p' → logprob: -11.398625373840332

Token 280: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.0036044635344296694
    2. ' parts' → logprob: -5.628604412078857
    3. '(parts' → logprob: -13.128604888916016
    4. ' ' → logprob: -14.378604888916016
    5. '[' → logprob: -14.503604888916016
    6. '   ' → logprob: -14.878604888916016
    7. 'p' → logprob: -15.628604888916016
    8. 'points' → logprob: -15.753604888916016
    9. '.parts' → logprob: -15.878604888916016
    10. 'part' → logprob: -15.878604888916016

Token 281: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5759482979774475
    2. 'if' → logprob: -0.8259482979774475
    3. '   ' → logprob: -12.200948715209961
    4. ' ' → logprob: -13.325948715209961
    5. 'in' → logprob: -14.325948715209961
    6. '  ' → logprob: -15.075948715209961
    7. '       ' → logprob: -15.200948715209961
    8. 'status' → logprob: -15.200948715209961
    9. '           ' → logprob: -15.575948715209961
    10. ' in' → logprob: -15.575948715209961

Token 282: ' status' (ID: 4495)
  Prédit: 'status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'status' → logprob: -0.06197787821292877
    2. ' status' → logprob: -2.8119778633117676
    3. '   ' → logprob: -11.936978340148926
    4. '(status' → logprob: -13.561978340148926
    5. ' ' → logprob: -13.936978340148926
    6. '	status' → logprob: -14.186978340148926
    7. '    ' → logprob: -15.686978340148926
    8. '$status' → logprob: -16.06197738647461
    9. '  ' → logprob: -16.43697738647461
    10. '=status' → logprob: -16.43697738647461

Token 283: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -5.9153885558771435e-06
    2. 'p' → logprob: -12.375005722045898
    3. ' [' → logprob: -13.625005722045898
    4. '[' → logprob: -16.0000057220459
    5. '[
' → logprob: -16.2500057220459
    6. '```' → logprob: -17.3750057220459
    7. '==' → logprob: -17.5000057220459
    8. '
' → logprob: -17.8750057220459
    9. '(p' → logprob: -18.1250057220459
    10. '	p' → logprob: -18.2500057220459

Token 284: ']==' (ID: 34128)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.09395100176334381
    2. '==' → logprob: -2.8439509868621826
    3. ']==' → logprob: -3.4689509868621826
    4. ']' → logprob: -9.093951225280762
    5. ' ==' → logprob: -9.343951225280762
    6. 'p' → logprob: -9.468951225280762
    7. '[' → logprob: -10.593951225280762
    8. ')==' → logprob: -11.843951225280762
    9. '```' → logprob: -12.718951225280762
    10. '']==' → logprob: -12.843951225280762

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9040898880339228e-05
    2. ' ' → logprob: -10.500028610229492
    3. '   ' → logprob: -13.750028610229492
    4. '  ' → logprob: -15.500028610229492
    5. '=' → logprob: -17.125028610229492
    6. '0' → logprob: -17.125028610229492
    7. '```' → logprob: -17.187528610229492
    8. '
' → logprob: -17.812528610229492
    9. '    ' → logprob: -18.062528610229492
    10. '[' → logprob: -18.250028610229492

Token 286: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.20243452489376068
    2. ']' → logprob: -1.7024345397949219
    3. ' ]
' → logprob: -7.327434539794922
    4. ']

' → logprob: -8.452434539794922
    5. ' ]' → logprob: -9.452434539794922
    6. ']
' → logprob: -9.702434539794922
    7. '       ' → logprob: -12.202434539794922
    8. '   ' → logprob: -13.827434539794922
    9. ']==' → logprob: -14.077434539794922
    10. '           ' → logprob: -14.452434539794922

Token 287: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7703874111175537
    2. ' if' → logprob: -1.0203874111175537
    3. '
' → logprob: -2.0203874111175537
    4. '       ' → logprob: -3.7703874111175537
    5. '           ' → logprob: -5.270387649536133
    6. '                   ' → logprob: -5.645387649536133
    7. '                       ' → logprob: -5.895387649536133
    8. ')' → logprob: -6.520387649536133
    9. ',' → logprob: -6.520387649536133
    10. '<|end|>' → logprob: -6.520387649536133

Token 288: ' unknown' (ID: 17927)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3212719261646271
    2. 'bad' → logprob: -1.6962718963623047
    3. ' if' → logprob: -2.6962718963623047
    4. 'broken' → logprob: -4.446271896362305
    5. 'unknown' (adapté à ' unknown') → logprob: -4.946271896362305
    6. ' bad' → logprob: -5.696271896362305
    7. '               ' → logprob: -7.321271896362305
    8. ' broken' → logprob: -8.571271896362305
    9. 'unk' → logprob: -8.821271896362305
    10. '   ' → logprob: -8.821271896362305

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326979398727417
    2. '=' → logprob: -1.313269853591919
    3. '=[' → logprob: -12.06326961517334
    4. ' =[' → logprob: -13.68826961517334
    5. ' ' → logprob: -14.81326961517334
    6. 's' → logprob: -15.18826961517334
    7. '＝' → logprob: -15.56326961517334
    8. ']' → logprob: -16.313270568847656
    9. '=p' → logprob: -16.688270568847656
    10. '	' → logprob: -16.813270568847656

Token 290: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.03017275035381317
    2. ' [' → logprob: -3.530172824859619
    3. '[' → logprob: -7.780172824859619
    4. '   ' → logprob: -13.530172348022461
    5. '[k' → logprob: -14.405172348022461
    6. ' ' → logprob: -14.405172348022461
    7. '[t' → logprob: -15.280172348022461
    8. '[q' → logprob: -15.405172348022461
    9. '[s' → logprob: -15.780172348022461
    10. '  ' → logprob: -15.905172348022461

Token 291: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.2729995988775045e-06
    2. ' p' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.6250057220459
    4. '[p' → logprob: -19.6250057220459
    5. '	p' → logprob: -20.1250057220459
    6. 'q' → logprob: -20.1250057220459
    7. ' ' → logprob: -20.2500057220459
    8. '(p' → logprob: -20.7500057220459
    9. '  ' → logprob: -20.8750057220459
    10. '
' → logprob: -20.8750057220459

Token 292: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47414764761924744
    2. 'for' → logprob: -0.9741476774215698
    3. '[p' → logprob: -10.09914779663086
    4. 'p' → logprob: -10.84914779663086
    5. '(p' → logprob: -12.34914779663086
    6. ' ' → logprob: -13.09914779663086
    7. '
' → logprob: -13.97414779663086
    8. '   ' → logprob: -14.34914779663086
    9. 'd' → logprob: -14.84914779663086
    10. '	for' → logprob: -15.09914779663086

Token 293: ' p' (ID: 275)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.024943722411990166
    2. ' parts' → logprob: -3.7749438285827637
    3. 'p' → logprob: -6.399943828582764
    4. '(parts' → logprob: -10.399943351745605
    5. ' p' → logprob: -12.899943351745605
    6. 'part' → logprob: -13.399943351745605
    7. '   ' → logprob: -15.274943351745605
    8. '.parts' → logprob: -16.024944305419922
    9. ' ' → logprob: -16.399944305419922
    10. '[' → logprob: -16.524944305419922

Token 294: ' in' (ID: 306)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2217641919851303
    2. 'for' → logprob: -1.7217642068862915
    3. ' parts' → logprob: -4.346764087677002
    4. ' in' → logprob: -5.596764087677002
    5. 'parts' → logprob: -6.221764087677002
    6. '(parts' → logprob: -8.34676456451416
    7. ' not' → logprob: -8.34676456451416
    8. '[' → logprob: -8.84676456451416
    9. 'status' → logprob: -8.84676456451416
    10. '=' → logprob: -8.97176456451416

Token 295: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.007616325747221708
    2. ' parts' → logprob: -4.8826165199279785
    3. '(parts' → logprob: -11.88261604309082
    4. '[' → logprob: -13.50761604309082
    5. ' ' → logprob: -14.75761604309082
    6. '   ' → logprob: -15.13261604309082
    7. 'status' → logprob: -15.13261604309082
    8. 'p' → logprob: -15.25761604309082
    9. '.parts' → logprob: -15.38261604309082
    10. 'part' → logprob: -15.88261604309082

Token 296: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.014222975820302963
    2. 'if' → logprob: -4.264223098754883
    3. ' for' → logprob: -9.764223098754883
    4. 'for' → logprob: -13.264223098754883
    5. '   ' → logprob: -16.014223098754883
    6. '	if' → logprob: -16.889223098754883
    7. '           ' → logprob: -16.889223098754883
    8. '       ' → logprob: -18.139223098754883
    9. ' ' → logprob: -18.139223098754883
    10. '               ' → logprob: -19.139223098754883

Token 297: ' status' (ID: 4495)
  Prédit: 'status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'status' → logprob: -0.1426970660686493
    2. ' status' → logprob: -2.0176970958709717
    3. '   ' → logprob: -11.51769733428955
    4. '(status' → logprob: -11.89269733428955
    5. ' ' → logprob: -13.01769733428955
    6. '	status' → logprob: -13.51769733428955
    7. '$status' → logprob: -15.01769733428955
    8. '    ' → logprob: -15.51769733428955
    9. '  ' → logprob: -15.64269733428955
    10. '.status' → logprob: -15.76769733428955

Token 298: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -2.339278580620885e-06
    2. '==' → logprob: -13.375001907348633
    3. '[' → logprob: -15.125001907348633
    4. 'p' → logprob: -15.250001907348633
    5. '[
' → logprob: -17.000001907348633
    6. '<p' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.500001907348633
    8. ' ==' → logprob: -17.625001907348633
    9. '	p' → logprob: -17.625001907348633
    10. '```' → logprob: -17.875001907348633

Token 299: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0012657057959586382
    2. ']==' → logprob: -6.751265525817871
    3. ' ==' → logprob: -9.501265525817871
    4. '2' → logprob: -11.126265525817871
    5. '[' → logprob: -12.626265525817871
    6. '=' → logprob: -14.251265525817871
    7. '!=' → logprob: -14.376265525817871
    8. ' ' → logprob: -14.626265525817871
    9. '==
' → logprob: -14.876265525817871
    10. ']' → logprob: -15.251265525817871

Token 300: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -17.875003814697266
    4. '
' → logprob: -18.000003814697266
    5. '۲' → logprob: -18.750003814697266
    6. '   ' → logprob: -19.125003814697266
    7. '２' → logprob: -19.750003814697266
    8. '[' → logprob: -19.875003814697266
    9. '

' → logprob: -20.312503814697266
    10. '  ' → logprob: -20.562503814697266

Token 301: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07890807837247849
    2. ']
' → logprob: -2.5789079666137695
    3. ' ]' → logprob: -11.95390796661377
    4. ']
' → logprob: -12.07890796661377
    5. ']

' → logprob: -12.45390796661377
    6. ' ]
' → logprob: -13.45390796661377
    7. '               ' → logprob: -15.20390796661377
    8. '       ' → logprob: -15.57890796661377
    9. '   ' → logprob: -15.82890796661377
    10. '']' → logprob: -16.578908920288086

Token 302: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001492961309850216
    2. ' if' → logprob: -7.501492977142334
    3. '[' → logprob: -7.626492977142334
    4. 'if' → logprob: -8.126492500305176
    5. '```' → logprob: -9.501492500305176
    6. '                   ' → logprob: -11.501492500305176
    7. '                       ' → logprob: -11.501492500305176
    8. '       ' → logprob: -11.626492500305176
    9. '<|end|>' → logprob: -12.001492500305176
    10. '			' → logprob: -12.126492500305176

Token 303: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0093437684699893
    2. ' if' → logprob: -4.75934362411499
    3. '               ' → logprob: -7.38434362411499
    4. 'for' → logprob: -9.259344100952148
    5. '           ' → logprob: -12.884344100952148
    6. '                   ' → logprob: -13.009344100952148
    7. '       ' → logprob: -13.134344100952148
    8. '```' → logprob: -13.384344100952148
    9. '                       ' → logprob: -13.509344100952148
    10. '   ' → logprob: -14.134344100952148

Token 304: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.4740964472293854
    2. 'len' → logprob: -0.974096417427063
    3. '   ' → logprob: -11.849096298217773
    4. ' ' → logprob: -12.349096298217773
    5. ' good' → logprob: -12.849096298217773
    6. '(len' → logprob: -13.099096298217773
    7. 'good' → logprob: -13.349096298217773
    8. '	len' → logprob: -13.724096298217773
    9. '  ' → logprob: -15.849096298217773
    10. 'status' → logprob: -16.224096298217773

Token 305: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -3.7146746763028204e-05
    2. '(' → logprob: -10.25003719329834
    3. ' (' → logprob: -14.00003719329834
    4. 'good' → logprob: -14.12503719329834
    5. '(go' → logprob: -16.500036239624023
    6. '(goods' → logprob: -17.250036239624023
    7. ' good' → logprob: -18.125036239624023
    8. '(G' → logprob: -18.125036239624023
    9. ' ' → logprob: -18.125036239624023
    10. '(s' → logprob: -18.375036239624023

Token 306: 'ood' (ID: 1762)
  Prédit: 'ood'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ood' → logprob: -0.05528482422232628
    2. 'good' → logprob: -2.9302847385406494
    3. 'unknown' → logprob: -8.30528450012207
    4. '[' → logprob: -9.43028450012207
    5. ' good' → logprob: -11.05528450012207
    6. '_good' → logprob: -11.30528450012207
    7. 'oods' → logprob: -11.43028450012207
    8. '   ' → logprob: -11.43028450012207
    9. 'old' → logprob: -12.05528450012207
    10. '{' → logprob: -12.93028450012207

Token 307: ')==' (ID: 35269)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04577844589948654
    2. ')==' → logprob: -3.420778512954712
    3. ')' → logprob: -4.795778274536133
    4. ' ==' → logprob: -6.295778274536133
    5. ']==' → logprob: -6.670778274536133
    6. '>=' → logprob: -7.420778274536133
    7. ')>=' → logprob: -10.045778274536133
    8. ']' → logprob: -11.920778274536133
    9. '']==' → logprob: -11.920778274536133
    10. '```' → logprob: -11.920778274536133

Token 308: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.096126576769166e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.375041007995605
    4. '1' → logprob: -16.62504005432129
    5. '２' → logprob: -17.37504005432129
    6. '```' → logprob: -17.37504005432129
    7. '  ' → logprob: -17.81254005432129
    8. '۲' → logprob: -18.00004005432129
    9. '    ' → logprob: -18.31254005432129
    10. '	' → logprob: -18.56254005432129

Token 309: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011425025761127472
    2. 'and' → logprob: -4.511425018310547
    3. ':' → logprob: -8.261425018310547
    4. ':
' → logprob: -9.136425018310547
    5. '   ' → logprob: -12.261425018310547
    6. ' ' → logprob: -12.886425018310547
    7. '	and' → logprob: -13.511425018310547
    8. '           ' → logprob: -14.511425018310547
    9. '                           ' → logprob: -15.011425018310547
    10. '               ' → logprob: -15.511425018310547

Token 310: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0028060602489858866
    2. ' len' → logprob: -5.877806186676025
    3. '   ' → logprob: -14.377805709838867
    4. ' ' → logprob: -15.502805709838867
    5. '	len' → logprob: -15.627805709838867
    6. '(len' → logprob: -16.252805709838867
    7. '  ' → logprob: -17.252805709838867
    8. '
' → logprob: -17.377805709838867
    9. '           ' → logprob: -18.127805709838867
    10. 'unknown' → logprob: -18.252805709838867

Token 311: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. ' (' → logprob: -14.625000953674316
    3. 'unknown' → logprob: -15.875000953674316
    4. '(
' → logprob: -18.375
    5. '```' → logprob: -19.0
    6. '(g' → logprob: -19.25
    7. '((' → logprob: -19.75
    8. ' ' → logprob: -19.875
    9. '`' → logprob: -19.875
    10. '
' → logprob: -20.375

Token 312: 'unknown' (ID: 33936)
  Prédit: 'unknown'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.003318642033264041
    2. ' unknown' → logprob: -5.753318786621094
    3. '(' → logprob: -8.878318786621094
    4. 'unk' → logprob: -13.753318786621094
    5. ' ' → logprob: -16.503318786621094
    6. '_unknown' → logprob: -16.503318786621094
    7. 'undefined' → logprob: -16.753318786621094
    8. 'Unknown' → logprob: -16.878318786621094
    9. 'good' → logprob: -17.128318786621094
    10. '
' → logprob: -17.128318786621094

Token 313: ')==' (ID: 35269)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0023906370624899864
    2. ')==' → logprob: -6.1273908615112305
    3. ']==' → logprob: -9.25239086151123
    4. ' ==' → logprob: -9.37739086151123
    5. ')' → logprob: -11.25239086151123
    6. '=' → logprob: -12.12739086151123
    7. '()==' → logprob: -12.50239086151123
    8. '```' → logprob: -13.50239086151123
    9. '==
' → logprob: -14.12739086151123
    10. '===' → logprob: -14.87739086151123

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.375028610229492
    4. '```' → logprob: -16.625028610229492
    5. '<|end|>' → logprob: -17.562528610229492
    6. '۱' → logprob: -17.625028610229492
    7. '=' → logprob: -17.875028610229492
    8. '  ' → logprob: -18.000028610229492
    9. '１' → logprob: -18.187528610229492
    10. '0' → logprob: -18.250028610229492

Token 315: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25199487805366516
    2. ':' → logprob: -1.5019948482513428
    3. '):
' → logprob: -10.376995086669922
    4. ' and' → logprob: -11.126995086669922
    5. ':
' → logprob: -11.751995086669922
    6. ':

' → logprob: -12.376995086669922
    7. '                   ' → logprob: -12.626995086669922
    8. '                           ' → logprob: -13.626995086669922
    9. '               ' → logprob: -14.001995086669922
    10. '                       ' → logprob: -14.126995086669922

Token 316: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04009714722633362
    2. '                       ' → logprob: -3.790097236633301
    3. ' status' → logprob: -5.165097236633301
    4. 'status' → logprob: -5.290097236633301
    5. '   ' → logprob: -5.790097236633301
    6. '               ' → logprob: -6.790097236633301
    7. '                           ' → logprob: -7.165097236633301
    8. ':
' → logprob: -8.7900972366333
    9. '           ' → logprob: -8.9150972366333
    10. ' p' → logprob: -9.2900972366333

Token 317: ' p' (ID: 275)
  Prédit: 'status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'status' → logprob: -0.3958168029785156
    2. ' status' → logprob: -1.1458168029785156
    3. ' p' → logprob: -5.895816802978516
    4. '                       ' → logprob: -6.145816802978516
    5. '                   ' → logprob: -6.395816802978516
    6. 'p' (adapté à ' p') → logprob: -6.395816802978516
    7. '   ' → logprob: -7.520816802978516
    8. '               ' → logprob: -10.395816802978516
    9. '	status' → logprob: -10.895816802978516
    10. ' ' → logprob: -11.145816802978516

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29216310381889343
    2. '=' → logprob: -1.4171631336212158
    3. 'unknown' → logprob: -5.667162895202637
    4. '_unknown' → logprob: -5.792162895202637
    5. 'u' → logprob: -6.792162895202637
    6. 'p' → logprob: -6.792162895202637
    7. '[' → logprob: -7.042162895202637
    8. 's' → logprob: -8.042162895202637
    9. '_' → logprob: -8.042162895202637
    10. '_=' → logprob: -8.792162895202637

Token 319: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.03804539144039154
    2. ' unknown' → logprob: -3.2880454063415527
    3. 'unk' → logprob: -12.788044929504395
    4. '   ' → logprob: -14.038044929504395
    5. ' ' → logprob: -15.538044929504395
    6. ' ' → logprob: -17.16304588317871
    7. 'undefined' → logprob: -17.28804588317871
    8. 'Unknown' → logprob: -17.28804588317871
    9. '_unknown' → logprob: -17.28804588317871
    10. '  ' → logprob: -17.78804588317871

Token 320: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '.pop' → logprob: -15.75
    3. '[p' → logprob: -17.5
    4. 'p' → logprob: -18.625
    5. '```' → logprob: -18.625
    6. '0' → logprob: -19.0
    7. 'pop' → logprob: -20.125
    8. '   ' → logprob: -20.125
    9. ' [' → logprob: -20.25
    10. '.p' → logprob: -20.875

Token 321: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '
' → logprob: -18.375
    4. '   ' → logprob: -18.5
    5. '-' → logprob: -18.625
    6. ']' → logprob: -19.5
    7. '1' → logprob: -19.75
    8. '۰' → logprob: -20.25
    9. '```' → logprob: -20.375
    10. '

' → logprob: -20.875

Token 322: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.47502920031547546
    2. ']' → logprob: -0.9750292301177979
    3. ')
' → logprob: -8.100028991699219
    4. '                   ' → logprob: -8.475028991699219
    5. ']
' → logprob: -8.475028991699219
    6. ')' → logprob: -8.600028991699219
    7. '                       ' → logprob: -10.600028991699219
    8. ']

' → logprob: -11.600028991699219
    9. '               ' → logprob: -12.725028991699219
    10. '                           ' → logprob: -13.350028991699219

Token 323: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.319161981344223
    2. 'status' → logprob: -1.3191620111465454
    3. ' status' → logprob: -5.819161891937256
    4. '           ' → logprob: -6.819161891937256
    5. '               ' → logprob: -7.069161891937256
    6. '   ' → logprob: -8.194162368774414
    7. '                       ' → logprob: -8.194162368774414
    8. '
' → logprob: -8.569162368774414
    9. '       ' → logprob: -9.069162368774414
    10. ',status' → logprob: -10.319162368774414

Token 324: ' if' (ID: 538)
  Prédit: 'status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'status' → logprob: -0.1530625969171524
    2. 'if' (adapté à ' if') → logprob: -2.153062582015991
    3. ' status' → logprob: -4.02806282043457
    4. ' if' → logprob: -4.90306282043457
    5. '                   ' → logprob: -7.77806282043457
    6. '                       ' → logprob: -9.27806282043457
    7. '           ' → logprob: -11.27806282043457
    8. '   ' → logprob: -11.65306282043457
    9. '               ' → logprob: -11.65306282043457
    10. '                           ' → logprob: -12.02806282043457

Token 325: ' status' (ID: 4495)
  Prédit: 'status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'status' → logprob: -0.07890795916318893
    2. ' status' → logprob: -2.5789079666137695
    3. '                       ' → logprob: -11.95390796661377
    4. '                   ' → logprob: -12.07890796661377
    5. '   ' → logprob: -13.20390796661377
    6. '                           ' → logprob: -13.70390796661377
    7. ' ' → logprob: -13.95390796661377
    8. '	status' → logprob: -14.57890796661377
    9. '               ' → logprob: -14.70390796661377
    10. '(status' → logprob: -15.07890796661377

Token 326: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -9.088346359931165e-07
    2. 'p' → logprob: -14.500000953674316
    3. '[' → logprob: -15.000000953674316
    4. ' [' → logprob: -18.0
    5. '```' → logprob: -18.125
    6. '[
' → logprob: -19.25
    7. '[P' → logprob: -19.625
    8. '	p' → logprob: -21.125
    9. '][' → logprob: -21.25
    10. '(p' → logprob: -21.5

Token 327: ']!=' (ID: 85780)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7559307217597961
    2. ']!=' → logprob: -0.8809307217597961
    3. ']==' → logprob: -2.7559306621551514
    4. '[p' → logprob: -3.0059306621551514
    5. '!=' → logprob: -6.2559309005737305
    6. ' ]' → logprob: -7.3809309005737305
    7. '==' → logprob: -9.00593090057373
    8. ']=' → logprob: -9.13093090057373
    9. '[' → logprob: -9.25593090057373
    10. ' !=' → logprob: -10.25593090057373

Token 328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -18.25
    4. '   ' → logprob: -19.0
    5. '۰' → logprob: -19.75
    6. '  ' → logprob: -20.8125
    7. '`' → logprob: -20.9375
    8. '``' → logprob: -21.6875
    9. '０' → logprob: -21.875
    10. ' ' → logprob: -21.9375

Token 329: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9123769998550415
    2. ':
' → logprob: -1.0373769998550415
    3. '                       ' → logprob: -1.4123769998550415
    4. '):
' → logprob: -8.66237735748291
    5. '                   ' → logprob: -8.91237735748291
    6. '<|end|>' → logprob: -9.78737735748291
    7. '                           ' → logprob: -10.91237735748291
    8. ':
' → logprob: -10.91237735748291
    9. ':

' → logprob: -11.03737735748291
    10. ' :
' → logprob: -11.16237735748291

Token 330: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -7.517272024415433e-05
    2. ' status' → logprob: -10.375075340270996
    3. 'status' → logprob: -10.625075340270996
    4. '                           ' → logprob: -11.250075340270996
    5. '                   ' → logprob: -12.625075340270996
    6. '                        
' → logprob: -14.000075340270996
    7. '                               ' → logprob: -14.375075340270996
    8. '                        ' → logprob: -14.875075340270996
    9. '               ' → logprob: -15.000075340270996
    10. '       ' → logprob: -15.250075340270996

Token 331: ' status' (ID: 4495)
  Prédit: ' status'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' status' → logprob: -0.04954780638217926
    2. 'status' (adapté à ' status') → logprob: -3.1745479106903076
    3. '                       ' → logprob: -5.0495476722717285
    4. '                           ' → logprob: -9.299548149108887
    5. ',status' → logprob: -12.174548149108887
    6. '
' → logprob: -12.549548149108887
    7. '                               ' → logprob: -12.549548149108887
    8. '	status' → logprob: -12.924548149108887
    9. '=status' → logprob: -13.299548149108887
    10. '                   ' → logprob: -13.424548149108887

Token 332: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -6.704273118884885e-07
    2. 'p' → logprob: -14.875000953674316
    3. '[' → logprob: -15.500000953674316
    4. '```' → logprob: -18.0
    5. ' [' → logprob: -18.125
    6. '=p' → logprob: -18.625
    7. '	p' → logprob: -18.75
    8. '[P' → logprob: -18.875
    9. '\[' → logprob: -19.375
    10. '=[' → logprob: -19.875

Token 333: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.0643574446439743
    2. ']' → logprob: -2.8143575191497803
    3. '=' → logprob: -6.439357280731201
    4. '[p' → logprob: -7.189357280731201
    5. '=p' → logprob: -11.06435775756836
    6. ' =' → logprob: -12.18935775756836
    7. ' ]' → logprob: -12.18935775756836
    8. ']=-' → logprob: -13.18935775756836
    9. ')=' → logprob: -13.56435775756836
    10. '[' → logprob: -13.56435775756836

Token 334: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۰' → logprob: -23.125
    4. '```' → logprob: -25.375
    5. '   ' → logprob: -25.5
    6. '<|end|>' → logprob: -26.25
    7. '`' → logprob: -26.375
    8. '０' → logprob: -26.375
    9. '  ' → logprob: -26.5
    10. ' ' → logprob: -26.875

Token 335: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00030197695014066994
    2. '
' → logprob: -9.3753023147583
    3. '                        
' → logprob: -9.8753023147583
    4. '<|end|>' → logprob: -10.2503023147583
    5. '                   ' → logprob: -10.3753023147583
    6. '               ' → logprob: -10.6253023147583
    7. '       ' → logprob: -10.8753023147583
    8. '           ' → logprob: -11.0003023147583
    9. '                           ' → logprob: -11.1253023147583
    10. '					' → logprob: -11.6253023147583

Token 336: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0021440740674734116
    2. '
' → logprob: -6.627143859863281
    3. '<|end|>' → logprob: -7.627143859863281
    4. '                        
' → logprob: -8.502143859863281
    5. '                   ' → logprob: -10.127143859863281
    6. '                           ' → logprob: -10.752143859863281
    7. '               ' → logprob: -11.002143859863281
    8. '           ' → logprob: -11.502143859863281
    9. '                        ' → logprob: -11.627143859863281
    10. '       ' → logprob: -11.627143859863281

Token 337: ' changed' (ID: 9180)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' (adapté à ' changed') → logprob: -0.5759853720664978
    2. ' changed' → logprob: -0.8259853720664978
    3. '                       ' → logprob: -10.200984954833984
    4. ' True' → logprob: -12.575984954833984
    5. 'True' → logprob: -12.950984954833984
    6. '.changed' → logprob: -13.325984954833984
    7. '                           ' → logprob: -14.700984954833984
    8. '                   ' → logprob: -14.950984954833984
    9. 'Changed' → logprob: -15.950984954833984
    10. '   ' → logprob: -16.075984954833984

Token 338: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12713156640529633
    2. '=' → logprob: -2.127131462097168
    3. '=True' → logprob: -8.502131462097168
    4. '   ' → logprob: -15.252131462097168
    5. ' ' → logprob: -16.002132415771484
    6. 'True' → logprob: -17.127132415771484
    7. ' True' → logprob: -17.252132415771484
    8. '=true' → logprob: -17.252132415771484
    9. '    ' → logprob: -18.377132415771484
    10. '	' → logprob: -19.002132415771484

Token 339: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.3132616877555847
    2. 'True' → logprob: -1.3132617473602295
    3. '(True' → logprob: -18.688261032104492
    4. '=True' → logprob: -19.063261032104492
    5. '.True' → logprob: -22.938261032104492
    6. '1' → logprob: -23.438261032104492
    7. 'true' → logprob: -24.063261032104492
    8. '_true' → logprob: -24.188261032104492
    9. ' ' → logprob: -24.188261032104492
    10. ' true' → logprob: -24.438261032104492

Token 340: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 341: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3074415326118469
    2. 'print' → logprob: -2.057441473007202
    3. '       ' → logprob: -2.557441473007202
    4. '<|end|>' → logprob: -3.307441473007202
    5. '\n' → logprob: -4.807441711425781
    6. ')' → logprob: -5.432441711425781
    7. '           ' → logprob: -6.432441711425781
    8. 'while' → logprob: -6.682441711425781
    9. 'for' → logprob: -6.682441711425781
    10. '    
' → logprob: -6.682441711425781

Token 342: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3128657042980194
    2. '       ' → logprob: -2.562865734100342
    3. '   ' → logprob: -3.062865734100342
    4. '           ' → logprob: -3.312865734100342
    5. 'while' → logprob: -3.312865734100342
    6. 'return' → logprob: -3.437865734100342
    7. 'elif' → logprob: -4.687865734100342
    8. '<|end|>' → logprob: -4.937865734100342
    9. 'continue' → logprob: -5.312865734100342
    10. '        ' → logprob: -6.062865734100342

Token 343: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.10710719227790833
    2. 'else' → logprob: -2.607107162475586
    3. 'continue' → logprob: -4.482107162475586
    4. ' elif' → logprob: -5.232107162475586
    5. ' else' → logprob: -5.482107162475586
    6. 'if' → logprob: -5.732107162475586
    7. ' continue' → logprob: -6.732107162475586
    8. '<|end|>' → logprob: -6.982107162475586
    9. '```' → logprob: -7.732107162475586
    10. '       ' → logprob: -8.357107162475586

Token 344: ' one' (ID: 1001)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.18018275499343872
    2. ' len' → logprob: -1.805182695388794
    3. ' all' → logprob: -9.305182456970215
    4. ' one' → logprob: -9.555182456970215
    5. 'all' → logprob: -9.930182456970215
    6. 'one' → logprob: -10.430182456970215
    7. ' ' → logprob: -10.805182456970215
    8. '(len' → logprob: -10.805182456970215
    9. 'sum' → logprob: -10.930182456970215
    10. ' no' → logprob: -10.930182456970215

Token 345: ' good' (ID: 1899)
  Prédit: ' good'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' good' → logprob: -0.6256089806556702
    2. ' known' → logprob: -1.7506089210510254
    3. 'good' → logprob: -2.0006089210510254
    4. 'known' → logprob: -2.3756089210510254
    5. '<|end|>' → logprob: -4.375608921051025
    6. '_known' → logprob: -4.750608921051025
    7. 'elif' → logprob: -4.875608921051025
    8. '_good' → logprob: -5.375608921051025
    9. ' p' → logprob: -5.750608921051025
    10. ' elif' → logprob: -6.125608921051025

Token 346: ' one' (ID: 1001)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0017681121826172
    2. ' and' → logprob: -1.1267681121826172
    3. 'and' → logprob: -1.8767681121826172
    4. ' ==' → logprob: -2.501768112182617
    5. ',' → logprob: -3.876768112182617
    6. ' or' → logprob: -4.126768112182617
    7. '=' → logprob: -5.251768112182617
    8. 'elif' → logprob: -5.251768112182617
    9. '               ' → logprob: -5.626768112182617
    10. ']==' → logprob: -5.626768112182617

Token 347: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.18078039586544037
    2. ' unknown' → logprob: -1.8057804107666016
    3. '_unknown' → logprob: -8.180780410766602
    4. 'and' → logprob: -8.555780410766602
    5. ' and' → logprob: -9.055780410766602
    6. 'known' → logprob: -9.430780410766602
    7. 'good' → logprob: -9.680780410766602
    8. ' good' → logprob: -9.805780410766602
    9. '   ' → logprob: -10.055780410766602
    10. 's' → logprob: -10.305780410766602

Token 348: ' one' (ID: 1001)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2824398875236511
    2. 'and' → logprob: -1.407439947128296
    3. '               ' → logprob: -7.407439708709717
    4. ',' → logprob: -8.407440185546875
    5. ':' → logprob: -8.782440185546875
    6. 's' → logprob: -9.532440185546875
    7. '	and' → logprob: -9.657440185546875
    8. ':
' → logprob: -10.032440185546875
    9. 'elif' → logprob: -11.032440185546875
    10. '                   ' → logprob: -11.032440185546875

Token 349: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.07948803901672363
    2. ' unknown' → logprob: -2.5794880390167236
    3. 'good' → logprob: -8.829487800598145
    4. '2' → logprob: -9.329487800598145
    5. ' good' → logprob: -9.454487800598145
    6. 'known' → logprob: -9.579487800598145
    7. 's' → logprob: -9.954487800598145
    8. '_unknown' → logprob: -10.079487800598145
    9. '==' → logprob: -10.329487800598145
    10. '
' → logprob: -11.204487800598145

Token 350: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30221304297447205
    2. ' and' → logprob: -2.802212953567505
    3. ':' → logprob: -3.427212953567505
    4. 'elif' → logprob: -3.427212953567505
    5. '                   ' → logprob: -3.552212953567505
    6. 'and' → logprob: -3.802212953567505
    7. '<|end|>' → logprob: -3.927212953567505
    8. ',' → logprob: -4.177213191986084
    9. ' elif' → logprob: -4.802213191986084
    10. '           ' → logprob: -4.802213191986084

Token 351: ' no' (ID: 860)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5738409757614136
    2. ' if' → logprob: -2.448841094970703
    3. '                   ' → logprob: -2.448841094970703
    4. ' pass' → logprob: -2.698841094970703
    5. 'continue' → logprob: -2.823841094970703
    6. '               ' → logprob: -3.198841094970703
    7. '#' → logprob: -3.823841094970703
    8. 'pass' → logprob: -4.323841094970703
    9. ' #' → logprob: -4.323841094970703
    10. 'if' → logprob: -4.573841094970703

Token 352: ' certain' (ID: 4454)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.31905004382133484
    2. ' new' → logprob: -2.1940500736236572
    3. 'change' → logprob: -3.0690500736236572
    4. 'action' → logprob: -3.3190500736236572
    5. ' action' → logprob: -3.5690500736236572
    6. 'more' → logprob: -4.069049835205078
    7. ' further' → logprob: -5.194049835205078
    8. 'info' → logprob: -5.444049835205078
    9. 'f' → logprob: -5.694049835205078
    10. ' change' → logprob: -5.944049835205078

Token 353: ' info' (ID: 5377)
  Prédit: 'information'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'information' → logprob: -0.5839965343475342
    2. 'info' → logprob: -1.5839965343475342
    3. 'change' → logprob: -2.458996534347534
    4. 'elif' → logprob: -3.083996534347534
    5. ' information' → logprob: -3.333996534347534
    6. 'con' → logprob: -4.208996772766113
    7. 'update' → logprob: -4.583996772766113
    8. '
' → logprob: -4.833996772766113
    9. 'action' → logprob: -5.458996772766113
    10. '   ' → logprob: -5.583996772766113

Token 354: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 355: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 356: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 358: ' zero' (ID: 12421)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.017375385388731956
    2. 'all' → logprob: -5.392375469207764
    3. ' len' → logprob: -5.392375469207764
    4. 'good' → logprob: -5.392375469207764
    5. 'one' → logprob: -6.642375469207764
    6. 'no' → logprob: -7.392375469207764
    7. ' all' → logprob: -7.892375469207764
    8. 'zero' → logprob: -7.892375469207764
    9. 'two' → logprob: -9.142374992370605
    10. ' good' → logprob: -9.142374992370605

Token 359: ' known' (ID: 5542)
  Prédit: ' good'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' good' → logprob: -0.6364243626594543
    2. 'good' → logprob: -0.7614243626594543
    3. '_good' → logprob: -6.636424541473389
    4. 'known' → logprob: -6.636424541473389
    5. ' known' → logprob: -7.011424541473389
    6. 'unknown' → logprob: -9.26142406463623
    7. ' unknown' → logprob: -10.51142406463623
    8. '_known' → logprob: -10.51142406463623
    9. 's' → logprob: -10.63642406463623
    10. ' ' → logprob: -10.76142406463623

Token 360: ',' (ID: 11)
  Prédit: 'good'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'good' → logprob: -0.09038499742746353
    2. ' good' → logprob: -2.4653849601745605
    3. '_good' → logprob: -7.0903849601745605
    4. 'p' → logprob: -8.340385437011719
    5. ' p' → logprob: -9.215385437011719
    6. ' ' → logprob: -9.590385437011719
    7. '[' → logprob: -10.465385437011719
    8. '[p' → logprob: -10.465385437011719
    9. 'Good' → logprob: -10.715385437011719
    10. '1' → logprob: -11.090385437011719

Token 361: ' no' (ID: 860)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.156298041343689
    2. ' no' → logprob: -1.656298041343689
    3. ' unknown' → logprob: -2.1562981605529785
    4. ' pass' → logprob: -2.4062981605529785
    5. 'pass' → logprob: -2.6562981605529785
    6. '#' → logprob: -2.6562981605529785
    7. 'continue' → logprob: -3.1562981605529785
    8. 'unknown' → logprob: -3.4062981605529785
    9. ' #' → logprob: -3.5312981605529785
    10. 'len' → logprob: -3.9062981605529785

Token 362: ' info' (ID: 5377)
  Prédit: 'certain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'certain' → logprob: -0.010316339321434498
    2. ' certain' → logprob: -4.885316371917725
    3. 'new' → logprob: -7.385316371917725
    4. 'sure' → logprob: -7.760316371917725
    5. 'known' → logprob: -8.135315895080566
    6. ' ' → logprob: -8.260315895080566
    7. ' new' → logprob: -8.760315895080566
    8. 'certainty' → logprob: -9.135315895080566
    9. 'cert' → logprob: -9.385315895080566
    10. ' sure' → logprob: -9.635315895080566

Token 363: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 364: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 366: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9281377792358398
    2. 'continue' → logprob: -1.6781377792358398
    3. ' continue' → logprob: -2.05313777923584
    4. 'pass' → logprob: -2.17813777923584
    5. ' pass' → logprob: -2.42813777923584
    6. ' for' → logprob: -3.80313777923584
    7. 'for' → logprob: -3.92813777923584
    8. ' print' → logprob: -4.05313777923584
    9. '   ' → logprob: -4.17813777923584
    10. '       ' → logprob: -5.42813777923584

Token 367: ' one' (ID: 1001)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.11526722460985184
    2. 'one' → logprob: -2.490267276763916
    3. ' len' → logprob: -4.365267276763916
    4. ' one' → logprob: -4.615267276763916
    5. 'all' → logprob: -6.990267276763916
    6. 'good' → logprob: -7.240267276763916
    7. 'two' → logprob: -8.115266799926758
    8. 'sum' → logprob: -8.740266799926758
    9. ' all' → logprob: -8.740266799926758
    10. 'three' → logprob: -8.990266799926758

Token 368: ' broken' (ID: 17162)
  Prédit: ' known'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' known' → logprob: -0.6471496224403381
    2. 'known' → logprob: -1.5221495628356934
    3. ' good' → logprob: -1.6471495628356934
    4. 'good' → logprob: -2.7721495628356934
    5. 'unknown' → logprob: -7.272149562835693
    6. ' unknown' → logprob: -7.772149562835693
    7. '==' → logprob: -7.897149562835693
    8. '_known' → logprob: -8.022150039672852
    9. ' status' → logprob: -8.647150039672852
    10. ' p' → logprob: -8.772150039672852

Token 369: ' part' (ID: 997)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.6875889301300049
    2. ' one' → logprob: -1.8125889301300049
    3. ' in' → logprob: -2.062588930130005
    4. ' known' → logprob: -2.312588930130005
    5. ' not' → logprob: -2.437588930130005
    6. ' and' → logprob: -2.562588930130005
    7. ' for' → logprob: -3.312588930130005
    8. ' among' → logprob: -3.437588930130005
    9. ',' → logprob: -3.562588930130005
    10. ' is' → logprob: -4.187588691711426

Token 370: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7562475204467773
    2. ',' → logprob: -2.0062475204467773
    3. ' and' → logprob: -2.6312475204467773
    4. ':' → logprob: -2.8812475204467773
    5. 'in' → logprob: -3.0062475204467773
    6. ' known' → logprob: -3.5062475204467773
    7. ' among' → logprob: -3.6312475204467773
    8. 'and' → logprob: -3.6312475204467773
    9. ' is' → logprob: -4.006247520446777
    10. ' or' → logprob: -4.381247520446777

Token 371: ' skip' (ID: 16677)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.19033071398735046
    2. 'pass' → logprob: -2.815330743789673
    3. ' pass' → logprob: -3.440330743789673
    4. ' continue' → logprob: -3.440330743789673
    5. 'continue' → logprob: -3.690330743789673
    6. '#' → logprob: -5.315330505371094
    7. 'no' → logprob: -5.440330505371094
    8. '                   ' → logprob: -5.690330505371094
    9. ' #' → logprob: -6.065330505371094
    10. ' none' → logprob: -6.440330505371094

Token 372: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 374: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14520537853240967
    2. '   ' → logprob: -2.770205497741699
    3. 'for' (adapté à ' for') → logprob: -2.770205497741699
    4. 'count' → logprob: -6.020205497741699
    5. ' for' → logprob: -6.270205497741699
    6. 'broken' → logprob: -6.270205497741699
    7. ' print' → logprob: -6.895205497741699
    8. 'result' → logprob: -7.770205497741699
    9. 'answer' → logprob: -7.770205497741699
    10. '    
' → logprob: -8.1452054977417

Token 375: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3728085160255432
    2. ' i' → logprob: -2.3728084564208984
    3. 'p' → logprob: -2.6228084564208984
    4. 'x' → logprob: -2.8728084564208984
    5. ' idx' → logprob: -3.2478084564208984
    6. 'idx' → logprob: -3.6228084564208984
    7. ' x' → logprob: -4.622808456420898
    8. ' p' → logprob: -4.747808456420898
    9. ' part' → logprob: -5.997808456420898
    10. 'part' → logprob: -6.747808456420898

Token 376: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02796505019068718
    2. 'in' → logprob: -3.6529650688171387
    3. ',' → logprob: -7.027965068817139
    4. ' ' → logprob: -7.277965068817139
    5. 'n' → logprob: -10.90296459197998
    6. '  ' → logprob: -11.52796459197998
    7. ' ,' → logprob: -11.52796459197998
    8. '   ' → logprob: -11.65296459197998
    9. ',status' → logprob: -12.15296459197998
    10. 'range' → logprob: -12.27796459197998

Token 377: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012569108977913857
    2. ' range' → logprob: -4.387568950653076
    3. 'status' → logprob: -9.762569427490234
    4. '[' → logprob: -14.262569427490234
    5. ' status' → logprob: -15.012569427490234
    6. '(range' → logprob: -15.387569427490234
    7. '   ' → logprob: -16.262569427490234
    8. ' ' → logprob: -16.262569427490234
    9. '  ' → logprob: -16.762569427490234
    10. '	range' → logprob: -16.887569427490234

Token 378: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00019018957391381264
    2. '(n' → logprob: -8.750189781188965
    3. '1' → logprob: -11.500189781188965
    4. '   ' → logprob: -11.875189781188965
    5. '(a' → logprob: -11.875189781188965
    6. '(len' → logprob: -12.000189781188965
    7. ' (' → logprob: -13.875189781188965
    8. 'a' → logprob: -15.625189781188965
    9. 'n' → logprob: -16.12519073486328
    10. '(
' → logprob: -16.37519073486328

Token 379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007438759785145521
    2. 'n' → logprob: -7.500743865966797
    3. 'len' → logprob: -9.000743865966797
    4. ' ' → logprob: -10.625743865966797
    5. '   ' → logprob: -10.750743865966797
    6. 'a' → logprob: -11.250743865966797
    7. '0' → logprob: -12.250743865966797
    8. '2' → logprob: -13.625743865966797
    9. '(' → logprob: -14.125743865966797
    10. ' n' → logprob: -14.375743865966797

Token 380: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5775066018104553
    2. ',n' → logprob: -0.8275066018104553
    3. ' ,' → logprob: -6.8275065422058105
    4. ',len' → logprob: -7.7025065422058105
    5. '   ' → logprob: -11.077507019042969
    6. ',a' → logprob: -11.577507019042969
    7. ',num' → logprob: -13.452507019042969
    8. ' ' → logprob: -13.702507019042969
    9. ',N' → logprob: -14.077507019042969
    10. '(n' → logprob: -14.827507019042969

Token 381: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00018399098189547658
    2. ' +' → logprob: -8.750184059143066
    3. '):
' → logprob: -11.000184059143066
    4. '):' → logprob: -12.000184059143066
    5. '   ' → logprob: -13.375184059143066
    6. '+
' → logprob: -14.250184059143066
    7. ')' → logprob: -16.75018310546875
    8. '+i' → logprob: -17.00018310546875
    9. '
' → logprob: -17.12518310546875
    10. '```' → logprob: -17.50018310546875

Token 382: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.875001907348633
    4. '):
' → logprob: -17.750001907348633
    5. ')' → logprob: -19.250001907348633
    6. '```' → logprob: -19.375001907348633
    7. '):' → logprob: -19.500001907348633
    8. '  ' → logprob: -21.000001907348633
    9. '
' → logprob: -21.000001907348633
    10. '+' → logprob: -21.625001907348633

Token 383: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1612340211868286
    2. '):' → logprob: -2.036233901977539
    3. ':' → logprob: -4.036233901977539
    4. ':
' → logprob: -7.411233901977539
    5. ')' → logprob: -9.786233901977539
    6. '):
' → logprob: -10.536233901977539
    7. '   ' → logprob: -11.161233901977539
    8. ' ):
' → logprob: -11.161233901977539
    9. ' :' → logprob: -12.661233901977539
    10. ' ):' → logprob: -13.661233901977539

Token 384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027075186371803284
    2. '   ' → logprob: -3.6520752906799316
    3. ' if' → logprob: -7.527075290679932
    4. ' print' → logprob: -8.902074813842773
    5. 'print' → logprob: -9.777074813842773
    6. 'if' → logprob: -11.152074813842773
    7. '	   ' → logprob: -11.652074813842773
    8. '	' → logprob: -12.277074813842773
    9. '	print' → logprob: -12.652074813842773
    10. '```' → logprob: -12.902074813842773

Token 385: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3515826463699341
    2. 'if' → logprob: -2.1015825271606445
    3. ' if' → logprob: -2.3515825271606445
    4. ' print' → logprob: -2.9765825271606445
    5. '   ' → logprob: -4.1015825271606445
    6. '       ' → logprob: -4.4765825271606445
    7. ' ' → logprob: -10.976582527160645
    8. '	print' → logprob: -11.226582527160645
    9. '```' → logprob: -11.726582527160645
    10. '    ' → logprob: -12.101582527160645

Token 386: '(status' (ID: 26454)
  Prédit: '(status'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(status' → logprob: -0.04032352939248085
    2. '("' → logprob: -3.915323495864868
    3. '('' → logprob: -4.415323734283447
    4. '(' → logprob: -5.290323734283447
    5. 'status' → logprob: -6.040323734283447
    6. '(i' → logprob: -10.665323257446289
    7. '(("' → logprob: -12.040323257446289
    8. '((' → logprob: -12.165323257446289
    9. '(
' → logprob: -12.290323257446289
    10. '(""' → logprob: -12.415323257446289

Token 387: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.500000953674316
    3. ')[' → logprob: -15.500000953674316
    4. ')' → logprob: -16.625
    5. ' [' → logprob: -16.875
    6. '   ' → logprob: -18.5
    7. '[
' → logprob: -18.625
    8. '[p' → logprob: -19.25
    9. '[I' → logprob: -20.0
    10. '```' → logprob: -20.0

Token 388: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09271419048309326
    2. ',end' → logprob: -2.467714309692383
    3. ',' → logprob: -5.717714309692383
    4. '])' → logprob: -8.967714309692383
    5. ' if' → logprob: -9.092714309692383
    6. '))' → logprob: -9.217714309692383
    7. ' )' → logprob: -9.717714309692383
    8. '==' → logprob: -10.717714309692383
    9. '),' → logprob: -11.092714309692383
    10. ' ,' → logprob: -11.342714309692383


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 386
Tokens correctement prédits (1ère position, stricte): 162
Tokens correctement prédits (1ère position, avec adaptation): 170
Tokens correctement prédits (top 10): 300
Précision stricte (1ère position): 41.97%
Précision adaptée (1ère position): 44.04%
Précision (top 10): 77.72%
================================================================================
