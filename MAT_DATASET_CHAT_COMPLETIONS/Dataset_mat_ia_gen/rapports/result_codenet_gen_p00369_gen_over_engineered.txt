================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:07:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Tuple, Protocol, runtime_checkable

@runtime_checkable
class Segmenter(Protocol):
    def segment(self, number_str: str) -> List[int]:
        ...

class AbstractSegmenter:
    def __init__(self, number_str: str):
        self.number_str = number_str
        self.length = len(number_str)

    def segment(self) -> List[int]:
        raise NotImplementedError()

class RecursiveSegmenter(AbstractSegmenter):
    def __init__(self, number_str: str):
        super().__init__(number_str)
        self.memo = {}

    def segment(self) -> int:
        # Find the minimal difference over all valid partitions of the string into at least two parts.
        # Returns minimal difference (int)
        return self._min_difference(0, [])

    def _min_difference(self, index: int, segments: List[int]) -> int:
        if index == self.length:
            if len(segments) > 1:
                return max(segments) - min(segments)
            else:
                return float('inf')

        key = (index, tuple(segments))
        if key in self.memo:
            return self.memo[key]

        min_diff = float('inf')
        # To avoid super long segments that are large numbers, impose a max segment length?
        # But problem states up to length 100000, so max segment length can be entire string.
        # However, long segments convert to int might be huge, Python can still handle it.

        # Try every possible cut from index+1 to end
        for end in range(index + 1, self.length + 1):
            segment_str = self.number_str[index:end]
            # All digits between 1-9 so no check for zero digit needed
            segment_val = int(segment_str)
            min_diff = min(min_diff, self._min_difference(end, segments + [segment_val]))
            # To prevent useless computations, if min_diff is zero already, return immediately
            if min_diff == 0:
                break

        self.memo[key] = min_diff
        return min_diff

class IterativeSegmenter(AbstractSegmenter):
    # Dynamic programming based approach to handle large inputs efficiently.
    # DP: dp[i] = minimal difference for substring number_str[0:i], storing min and max segments in tuple
    
    def segment(self) -> int:
        # We need to find min diff over partitions into at least two parts.
        # Since numbers can be large (length up to 100000), we cannot store all segment values.
        # Instead, we'll keep track for each position i:
        # dp[i] = set of tuples (min_segment_val, max_segment_val) reachable from 0 to i
        # We update dp[i] from dp[j] and segment number_str[j:i]
        # To limit memory and runtime, we can prune states by keeping only minimal differences.

        from collections import defaultdict
        dp = [dict() for _ in range(self.length + 1)] 
        # dp[0] = {None: None} no segments chosen yet
        dp[0][(float('inf'), float('-inf'))] = True  # min_val, max_val

        for i in range(1, self.length + 1):
            for j in range(max(0, i-10), i): 
                # Limit max segment length to 10 digits for performance (since digits 1-9 only, fits int easily)
                segment_str = self.number_str[j:i]
                segment_val = int(segment_str)
                for (min_v, max_v) in dp[j]:
                    # create new state
                    new_min = min(min_v, segment_val)
                    new_max = max(max_v, segment_val)
                    # update dp[i]
                    if (new_min, new_max) not in dp[i]:
                        dp[i][(new_min, new_max)] = True

        # find minimal difference with at least two parts
        # That means dp[length] with min_val != inf and max_val != -inf and segments count > 1
        # Our dp does not track segment counts, so we backtrack segment counts via a bit more complex approach,
        # or instead, note that dp[0] state start is (inf, -inf), that we count segments as transitions
        # So instead, we filter for (min_v, max_v) where min_v != inf and max_v != -inf and that resulted from at least one segment

        # To check segments count, a trick: initial dp[0] min=max=inf/-inf, next steps update these.
        # So any min=max=some val means one segment, else >1 segments.

        # Actually min=max after the first segment:
        # So difference == 0 means one segment => only one segment invalid
        # So minimum difference > 0 means at least two segments

        min_diff = float('inf')
        for (min_v, max_v) in dp[self.length]:
            diff = max_v - min_v
            if diff > 0 and diff < min_diff:
                min_diff = diff

        return min_diff if min_diff != float('inf') else 0

class FortuneYearsPredictor:
    def __init__(self, number_str: str, strategy: Segmenter = None):
        self.number_str = number_str
        if strategy is None:
            # Choose strategy based on length of the string
            if len(number_str) <= 20:
                self.segmenter = RecursiveSegmenter(number_str)
            else:
                self.segmenter = IterativeSegmenter(number_str)
        else:
            self.segmenter = strategy

    def predict_min_years(self) -> int:
        return self.segmenter.segment()

class IOHandler:
    def __init__(self):
        pass

    def read_input(self) -> str:
        # read single line input string
        return input().strip()

    def output(self, result: int) -> None:
        print(result)

def main():
    io = IOHandler()
    number_str = io.read_input()
    predictor = FortuneYearsPredictor(number_str)
    result = predictor.predict_min_years()
    io.output(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.10354583710432053
    2. ' Any' → logprob: -2.478545904159546
    3. ' Optional' → logprob: -4.603545665740967
    4. 'Any' → logprob: -6.478545665740967
    5. ' Union' → logprob: -6.603545665740967
    6. 'List' → logprob: -6.978545665740967
    7. ' Generator' → logprob: -8.103546142578125
    8. ' ' → logprob: -8.978546142578125
    9. ' Tuple' → logprob: -9.853546142578125
    10. 'Optional' → logprob: -9.853546142578125

Token 4: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4863593876361847
    2. '```' → logprob: -1.9863593578338623
    3. 'def' → logprob: -2.1113593578338623
    4. ',' → logprob: -2.8613593578338623
    5. '\[' → logprob: -4.361359596252441
    6. ':' → logprob: -4.486359596252441
    7. 'a' → logprob: -4.736359596252441
    8. '\' → logprob: -5.111359596252441
    9. 'import' → logprob: -5.236359596252441
    10. '.' → logprob: -5.611359596252441

Token 5: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.7062650322914124
    2. 'Optional' → logprob: -0.7062650322914124
    3. 'Dict' → logprob: -5.331264972686768
    4. 'Tuple' → logprob: -5.581264972686768
    5. ' Dict' → logprob: -6.081264972686768
    6. ' Union' → logprob: -7.081264972686768
    7. ' Tuple' → logprob: -7.456264972686768
    8. 'Union' → logprob: -7.956264972686768
    9. 'Any' → logprob: -8.956265449523926
    10. 'Iterable' → logprob: -9.331265449523926

Token 6: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6632801294326782
    2. '```' → logprob: -1.1632801294326782
    3. '[' → logprob: -3.1632800102233887
    4. ',' → logprob: -3.5382800102233887
    5. '\' → logprob: -3.6632800102233887
    6. 'a' → logprob: -4.038280010223389
    7. ':' → logprob: -4.538280010223389
    8. '(' → logprob: -4.663280010223389
    9. '\n' → logprob: -4.913280010223389
    10. '`' → logprob: -4.913280010223389

Token 7: ' Protocol' (ID: 41914)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.7376053929328918
    2. ' Dict' → logprob: -0.7376053929328918
    3. 'Optional' → logprob: -4.237605571746826
    4. ' Union' → logprob: -4.862605571746826
    5. 'Union' → logprob: -4.987605571746826
    6. ' Optional' → logprob: -5.112605571746826
    7. 'Iterable' → logprob: -5.987605571746826
    8. 'Set' → logprob: -6.362605571746826
    9. 'Any' → logprob: -6.612605571746826
    10. ' Callable' → logprob: -6.862605571746826

Token 8: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.927920401096344
    2. '```' → logprob: -1.1779203414916992
    3. ',' → logprob: -2.052920341491699
    4. 'class' → logprob: -2.052920341491699
    5. '

' → logprob: -4.302920341491699
    6. '
' → logprob: -4.927920341491699
    7. '\n' → logprob: -5.802920341491699
    8. '<class' → logprob: -5.802920341491699
    9. '<|end|>' → logprob: -6.177920341491699
    10. ':

' → logprob: -6.302920341491699

Token 9: ' runtime' (ID: 32103)
  Prédit: ' runtime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' runtime' → logprob: -0.4736150801181793
    2. 'runtime' → logprob: -1.098615050315857
    3. ' Callable' → logprob: -4.2236151695251465
    4. 'Iterable' → logprob: -4.5986151695251465
    5. 'Callable' → logprob: -5.0986151695251465
    6. 'Any' → logprob: -5.5986151695251465
    7. ' Optional' → logprob: -6.4736151695251465
    8. ' Iterable' → logprob: -6.7236151695251465
    9. 'Optional' → logprob: -6.8486151695251465
    10. ' Any' → logprob: -7.2236151695251465

Token 10: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -0.041469354182481766
    2. 'check' → logprob: -3.2914693355560303
    3. 'import' → logprob: -6.916469573974609
    4. '```' → logprob: -7.166469573974609
    5. '_checks' → logprob: -7.416469573974609
    6. '-check' → logprob: -8.16646957397461
    7. 'checking' → logprob: -9.29146957397461
    8. '.check' → logprob: -9.41646957397461
    9. '_checker' → logprob: -9.79146957397461
    10. '_' → logprob: -9.91646957397461

Token 11: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0382208414375782
    2. 'ing' → logprob: -3.2882208824157715
    3. 'al' → logprob: -8.788220405578613
    4. '```' → logprob: -11.413220405578613
    5. 'ed' → logprob: -11.788220405578613
    6. 'ng' → logprob: -12.913220405578613
    7. 'abl' → logprob: -14.163220405578613
    8. 'nable' → logprob: -14.788220405578613
    9. 'import' → logprob: -14.913220405578613
    10. '@' → logprob: -15.038220405578613

Token 12: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.30026161670684814
    2. '
' → logprob: -1.5502616167068481
    3. '```' → logprob: -4.175261497497559
    4. '@' → logprob: -4.300261497497559
    5. '\n' → logprob: -4.425261497497559
    6. ',' → logprob: -6.550261497497559
    7. '
' → logprob: -7.300261497497559
    8. '


' → logprob: -7.300261497497559
    9. '\' → logprob: -7.800261497497559
    10. '
 
' → logprob: -7.800261497497559

Token 13: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.21339236199855804
    2. 'class' → logprob: -2.4633922576904297
    3. '```' → logprob: -2.9633922576904297
    4. '

' → logprob: -4.08839225769043
    5. ',' → logprob: -4.21339225769043
    6. '
' → logprob: -4.83839225769043
    7. ':' → logprob: -5.71339225769043
    8. 'import' → logprob: -6.46339225769043
    9. ' class' → logprob: -6.71339225769043
    10. '<|end|>' → logprob: -6.83839225769043

Token 14: 'runtime' (ID: 48702)
  Prédit: 'runtime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runtime' → logprob: -5.512236498361744e-07
    2. 'dat' → logprob: -14.625000953674316
    3. ' runtime' → logprob: -17.625
    4. '(runtime' → logprob: -18.0
    5. 'run' → logprob: -19.875
    6. 'staticmethod' → logprob: -20.25
    7. '.runtime' → logprob: -20.625
    8. 'Runtime' → logprob: -21.375
    9. '_runtime' → logprob: -21.625
    10. '```' → logprob: -21.625

Token 15: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -0.00032068457221612334
    2. '@' → logprob: -9.875320434570312
    3. '_safe' → logprob: -10.125320434570312
    4. 'def' → logprob: -10.375320434570312
    5. '_' → logprob: -10.500320434570312
    6. '(_' → logprob: -10.750320434570312
    7. '```' → logprob: -10.750320434570312
    8. '_checked' → logprob: -11.125320434570312
    9. '_checker' → logprob: -11.250320434570312
    10. '_callable' → logprob: -11.625320434570312

Token 16: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -6.704273118884885e-07
    2. '@' → logprob: -15.625000953674316
    3. 'al' → logprob: -15.875000953674316
    4. 'abled' → logprob: -16.25
    5. 'ed' → logprob: -17.375
    6. 'ing' → logprob: -17.5
    7. 'ably' → logprob: -17.75
    8. 'alable' → logprob: -17.875
    9. 'ables' → logprob: -18.0
    10. 'abl' → logprob: -18.625

Token 17: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4109424948692322
    2. 'protocol' → logprob: -2.285942554473877
    3. ' Protocol' → logprob: -2.535942554473877
    4. '  
' → logprob: -3.160942554473877
    5. '(protocol' → logprob: -3.160942554473877
    6. ' protocol' → logprob: -4.035942554473877
    7. '(
' → logprob: -4.535942554473877
    8. '(' → logprob: -4.660942554473877
    9. ' class' → logprob: -4.910942554473877
    10. '_protocol' → logprob: -4.910942554473877

Token 18: 'class' (ID: 1444)
  Prédit: 'Protocol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Protocol' → logprob: -0.7192329168319702
    2. ' Protocol' → logprob: -0.7192329168319702
    3. 'protocol' → logprob: -4.59423303604126
    4. 'class' → logprob: -5.09423303604126
    5. '
' → logprob: -5.96923303604126
    6. ' class' → logprob: -6.46923303604126
    7. '(' → logprob: -6.59423303604126
    8. ' protocol' → logprob: -6.71923303604126
    9. '.Protocol' → logprob: -7.59423303604126
    10. 'Protocols' → logprob: -7.59423303604126

Token 19: ' Segment' (ID: 64922)
  Prédit: ' Protocol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Protocol' → logprob: -0.014303941279649734
    2. ' Iterable' → logprob: -4.264304161071777
    3. ' Runnable' → logprob: -10.139304161071777
    4. ' Serializable' → logprob: -10.139304161071777
    5. ' Callable' → logprob: -10.889304161071777
    6. ' Sequence' → logprob: -11.014304161071777
    7. ' Iterator' → logprob: -12.014304161071777
    8. ' List' → logprob: -12.889304161071777
    9. ' Predicate' → logprob: -13.014304161071777
    10. ' Sized' → logprob: -13.389304161071777

Token 20: 'er' (ID: 259)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005852030590176582
    2. 'Protocol' → logprob: -7.500585079193115
    3. ':' → logprob: -10.500585556030273
    4. '(S' → logprob: -14.375585556030273
    5. '```' → logprob: -14.375585556030273
    6. ' Protocol' → logprob: -14.875585556030273
    7. 'Segment' → logprob: -15.000585556030273
    8. ' (' → logprob: -15.125585556030273
    9. 'protocol' → logprob: -15.250585556030273
    10. 'Protocols' → logprob: -15.375585556030273

Token 21: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006416652468033135
    2. ':' → logprob: -7.375641822814941
    3. '(protocol' → logprob: -11.625641822814941
    4. '(S' → logprob: -12.750641822814941
    5. '():' → logprob: -14.000641822814941
    6. 'Protocol' → logprob: -14.375641822814941
    7. ' Protocol' → logprob: -14.875641822814941
    8. '```' → logprob: -15.625641822814941
    9. ' (' → logprob: -16.250640869140625
    10. '.Protocol' → logprob: -16.250640869140625

Token 22: 'Protocol' (ID: 19824)
  Prédit: 'Protocol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Protocol' → logprob: -0.0019699118565768003
    2. ' Protocol' → logprob: -6.251969814300537
    3. ')' → logprob: -10.376970291137695
    4. '   ' → logprob: -12.126970291137695
    5. 'protocol' → logprob: -13.126970291137695
    6. '.Protocol' → logprob: -14.001970291137695
    7. 'Protocols' → logprob: -14.376970291137695
    8. '):
' → logprob: -15.126970291137695
    9. 'Proto' → logprob: -15.876970291137695
    10. ' protocol' → logprob: -16.001970291137695

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002514455991331488
    2. '):
' → logprob: -8.875251770019531
    3. '[' → logprob: -9.750251770019531
    4. ':' → logprob: -10.125251770019531
    5. '):
' → logprob: -12.625251770019531
    6. ')' → logprob: -12.875251770019531
    7. '[int' → logprob: -13.125251770019531
    8. ']:' → logprob: -13.750251770019531
    9. '[]):' → logprob: -13.875251770019531
    10. '[str' → logprob: -14.125251770019531

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053843580186367035
    2. '
' → logprob: -3.8038434982299805
    3. '    
' → logprob: -4.0538434982299805
    4. ' def' → logprob: -5.8038434982299805
    5. 'def' → logprob: -5.8038434982299805
    6. '\n' → logprob: -6.1788434982299805
    7. ' 
' → logprob: -6.5538434982299805
    8. '```' → logprob: -6.9288434982299805
    9. '    ' → logprob: -7.8038434982299805
    10. ' ' → logprob: -8.30384349822998

Token 25: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.05396522954106331
    2. 'def' (adapté à ' def') → logprob: -3.0539653301239014
    3. '   ' → logprob: -5.303965091705322
    4. '    ' → logprob: -8.92896556854248
    5. '    
' → logprob: -9.30396556854248
    6. ' 
' → logprob: -10.17896556854248
    7. ' ' → logprob: -10.42896556854248
    8. '
' → logprob: -10.55396556854248
    9. '	def' → logprob: -10.55396556854248
    10. '\n' → logprob: -11.42896556854248

Token 26: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.020043209195137024
    2. 'segment' → logprob: -4.02004337310791
    3. '_segment' → logprob: -7.14504337310791
    4. ' segmentation' → logprob: -7.77004337310791
    5. ' tokenize' → logprob: -7.89504337310791
    6. ' process' → logprob: -9.27004337310791
    7. ' segments' → logprob: -9.64504337310791
    8. ' split' → logprob: -10.14504337310791
    9. ' cut' → logprob: -10.89504337310791
    10. ' def' → logprob: -11.39504337310791

Token 27: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03431665897369385
    2. '(' → logprob: -3.4093165397644043
    3. ' (' → logprob: -8.159317016601562
    4. '(
' → logprob: -8.409317016601562
    5. 'self' → logprob: -9.409317016601562
    6. ' self' → logprob: -11.034317016601562
    7. '_text' → logprob: -11.409317016601562
    8. ')' → logprob: -11.659317016601562
    9. '(s' → logprob: -12.034317016601562
    10. '_' → logprob: -12.034317016601562

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.047764431685209274
    2. 'self' → logprob: -3.297764539718628
    3. 'text' → logprob: -5.422764301300049
    4. ':' → logprob: -6.672764301300049
    5. '_text' → logprob: -6.797764301300049
    6. ')' → logprob: -7.172764301300049
    7. ' ,' → logprob: -7.422764301300049
    8. 's' → logprob: -7.547764301300049
    9. ' text' → logprob: -8.172764778137207
    10. ',text' → logprob: -8.172764778137207

Token 29: ' number' (ID: 2086)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2642214298248291
    2. 'self' → logprob: -1.639221429824829
    3. ' text' → logprob: -3.514221429824829
    4. 'text' → logprob: -5.01422119140625
    5. ' input' → logprob: -7.51422119140625
    6. ')' → logprob: -8.13922119140625
    7. ' sentence' → logprob: -8.76422119140625
    8. 'sentence' → logprob: -9.13922119140625
    9. ' data' → logprob: -9.26422119140625
    10. 'input' → logprob: -9.76422119140625

Token 30: '_str' (ID: 6182)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003469057264737785
    2. 's' → logprob: -8.125347137451172
    3. ')' → logprob: -11.125347137451172
    4. ':str' → logprob: -11.375347137451172
    5. ' :' → logprob: -11.500347137451172
    6. ':int' → logprob: -12.125347137451172
    7. ':number' → logprob: -12.250347137451172
    8. '_:' → logprob: -13.750347137451172
    9. '):' → logprob: -14.750347137451172
    10. '_str' → logprob: -15.125347137451172

Token 31: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020389800192788243
    2. ':str' → logprob: -8.500204086303711
    3. ')' → logprob: -15.250204086303711
    4. ' :' → logprob: -16.37520408630371
    5. 'str' → logprob: -16.87520408630371
    6. 's' → logprob: -16.87520408630371
    7. '[str' → logprob: -17.37520408630371
    8. '):' → logprob: -17.37520408630371
    9. ':string' → logprob: -17.75020408630371
    10. '_:' → logprob: -18.00020408630371

Token 32: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.4741368889808655
    2. 'str' → logprob: -0.9741368889808655
    3. ')' → logprob: -9.974137306213379
    4. 's' → logprob: -11.724137306213379
    5. ' ' → logprob: -13.349137306213379
    6. ' )' → logprob: -14.099137306213379
    7. '   ' → logprob: -14.599137306213379
    8. '[str' → logprob: -14.724137306213379
    9. '	str' → logprob: -14.724137306213379
    10. 'string' → logprob: -15.224137306213379

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.925185440806672e-05
    2. ',' → logprob: -9.375099182128906
    3. ' )' → logprob: -11.375099182128906
    4. ')->' → logprob: -13.750099182128906
    5. '   ' → logprob: -14.125099182128906
    6. ',)' → logprob: -14.375099182128906
    7. '`)' → logprob: -16.000099182128906
    8. ':' → logprob: -16.625099182128906
    9. '")' → logprob: -16.875099182128906
    10. '')' → logprob: -17.375099182128906

Token 34: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.13454677164554596
    2. '->' → logprob: -2.1345467567443848
    3. ')' → logprob: -4.884546756744385
    4. ')->' → logprob: -11.009547233581543
    5. '   ' → logprob: -11.884547233581543
    6. ' )' → logprob: -13.634547233581543
    7. ' ' → logprob: -14.009547233581543
    8. '->[' → logprob: -14.134547233581543
    9. ' )->' → logprob: -14.759547233581543
    10. '       ' → logprob: -15.634547233581543

Token 35: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.11293933540582657
    2. 'List' → logprob: -2.2379393577575684
    3. 'Iterable' → logprob: -10.73793888092041
    4. ' Iterator' → logprob: -10.86293888092041
    5. ' Iterable' → logprob: -10.86293888092041
    6. '	List' → logprob: -10.98793888092041
    7. '   ' → logprob: -11.36293888092041
    8. ' ' → logprob: -12.11293888092041
    9. 'Iterator' → logprob: -12.11293888092041
    10. ' ' → logprob: -12.48793888092041

Token 36: '[int' (ID: 40124)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.00847131572663784
    2. '[' → logprob: -5.258471488952637
    3. '[int' → logprob: -6.258471488952637
    4. '[List' → logprob: -6.633471488952637
    5. '[
' → logprob: -14.508471488952637
    6. 'str' → logprob: -14.883471488952637
    7. '[String' → logprob: -14.883471488952637
    8. '[...]' → logprob: -15.258471488952637
    9. '[]' → logprob: -15.508471488952637
    10. ' [' → logprob: -16.25847053527832

Token 37: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.06227945536375046
    2. ']' → logprob: -2.812279462814331
    3. '):' → logprob: -8.18727970123291
    4. ']):' → logprob: -11.81227970123291
    5. ']>' → logprob: -12.06227970123291
    6. ')' → logprob: -12.18727970123291
    7. ':' → logprob: -12.18727970123291
    8. ' ]' → logprob: -12.81227970123291
    9. ']:
' → logprob: -13.18727970123291
    10. ']:
' → logprob: -13.18727970123291

Token 38: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' ...

' (ID: 5231)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -0.01714562252163887
    2. '   ' → logprob: -4.76714563369751
    3. ' ...' → logprob: -5.39214563369751
    4. '<|end|>' → logprob: -6.01714563369751
    5. ' pass' → logprob: -7.76714563369751
    6. '       ' → logprob: -7.76714563369751
    7. 'pass' → logprob: -8.767145156860352
    8. '...
' → logprob: -9.392145156860352
    9. '...)' → logprob: -9.517145156860352
    10. '  ' → logprob: -9.517145156860352

Token 40: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' Abstract' (ID: 17413)
  Prédit: ' Simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Simple' → logprob: -1.0139250755310059
    2. ' Space' → logprob: -1.8889250755310059
    3. ' Number' → logprob: -2.013925075531006
    4. ' Phone' → logprob: -2.513925075531006
    5. ' Digit' → logprob: -2.638925075531006
    6. ' My' → logprob: -2.888925075531006
    7. ' ' → logprob: -3.263925075531006
    8. ' Basic' → logprob: -3.513925075531006
    9. ' Smart' → logprob: -4.388925075531006
    10. ' L' → logprob: -4.638925075531006

Token 42: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.003944706171751022
    2. 'Seg' → logprob: -6.2539448738098145
    3. ' Segment' → logprob: -6.3789448738098145
    4. 'Number' → logprob: -9.503944396972656
    5. 'Tokenizer' → logprob: -10.253944396972656
    6. ' ' → logprob: -10.378944396972656
    7. ' Seg' → logprob: -10.628944396972656
    8. 'S' → logprob: -10.753944396972656
    9. 'Parser' → logprob: -10.753944396972656
    10. 'Digit' → logprob: -11.003944396972656

Token 43: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: 0.0
    2. '   ' → logprob: -17.875
    3. '```' → logprob: -17.875
    4. 'ter' → logprob: -18.0
    5. ' er' → logprob: -18.75
    6. 'Segment' → logprob: -18.75
    7. 'or' → logprob: -19.125
    8. 'ation' → logprob: -19.25
    9. 'erer' → logprob: -19.375
    10. 'ers' → logprob: -20.0

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029532164335250854
    2. '(S' → logprob: -6.377953052520752
    3. '(' → logprob: -6.752953052520752
    4. ':
' → logprob: -9.75295352935791
    5. '():' → logprob: -11.25295352935791
    6. ' :' → logprob: -12.87795352935791
    7. '(Abstract' → logprob: -13.25295352935791
    8. '):' → logprob: -13.75295352935791
    9. '```' → logprob: -13.75295352935791
    10. ':**' → logprob: -14.00295352935791

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2311849743127823
    2. ':' → logprob: -1.731184959411621
    3. ':
' → logprob: -3.731184959411621
    4. '
' → logprob: -5.606184959411621
    5. '    
' → logprob: -7.356184959411621
    6. '  ' → logprob: -8.481184959411621
    7. 'def' → logprob: -8.731184959411621
    8. 'Segment' → logprob: -8.981184959411621
    9. ' def' → logprob: -9.231184959411621
    10. '    ' → logprob: -9.481184959411621

Token 46: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.05227681249380112
    2. 'def' (adapté à ' def') → logprob: -3.052276849746704
    3. '   ' → logprob: -5.677276611328125
    4. ' pass' → logprob: -8.802276611328125
    5. '    ' → logprob: -10.052276611328125
    6. ' _' → logprob: -10.802276611328125
    7. ' indentation' → logprob: -11.427276611328125
    8. ' ' → logprob: -11.677276611328125
    9. 'pass' → logprob: -11.677276611328125
    10. ' @' → logprob: -13.052276611328125

Token 47: ' __' (ID: 2516)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.5871841907501221
    2. ' ' → logprob: -0.8371841907501221
    3. ' __' → logprob: -4.837183952331543
    4. 'segment' → logprob: -6.337183952331543
    5. ' def' → logprob: -6.962183952331543
    6. ' segmentation' → logprob: -8.962183952331543
    7. '_segment' → logprob: -9.087183952331543
    8. ' _' → logprob: -9.712183952331543
    9. ' ' → logprob: -9.962183952331543
    10. ' seg' → logprob: -10.337183952331543

Token 48: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.15310683415737e-05
    2. 'ini' → logprob: -11.125021934509277
    3. 'in' → logprob: -12.125021934509277
    4. 'call' → logprob: -14.625021934509277
    5. 'i' → logprob: -15.125021934509277
    6. 'int' → logprob: -15.125021934509277
    7. 'new' → logprob: -16.25002098083496
    8. ' init' → logprob: -16.87502098083496
    9. 'sub' → logprob: -17.12502098083496
    10. 'initi' → logprob: -17.50002098083496

Token 49: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.004700326360762119
    2. '(self' → logprob: -5.629700183868408
    3. '__' → logprob: -7.629700183868408
    4. '__(
' → logprob: -7.879700183868408
    5. '(' → logprob: -8.504700660705566
    6. '_(' → logprob: -11.754700660705566
    7. '__((' → logprob: -11.754700660705566
    8. '__('' → logprob: -12.379700660705566
    9. '__(*' → logprob: -12.504700660705566
    10. '```' → logprob: -13.504700660705566

Token 50: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010864014038816094
    2. ' self' → logprob: -6.876086235046387
    3. ')' → logprob: -10.126086235046387
    4. '
' → logprob: -11.876086235046387
    5. '   ' → logprob: -12.626086235046387
    6. ' ' → logprob: -13.001086235046387
    7. '  ' → logprob: -15.126086235046387
    8. '0' → logprob: -16.251087188720703
    9. '       ' → logprob: -16.251087188720703
    10. ' )' → logprob: -16.251087188720703

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006361891864798963
    2. ' ,' → logprob: -7.625636100769043
    3. 'self' → logprob: -9.375636100769043
    4. ')' → logprob: -10.250636100769043
    5. '):' → logprob: -11.125636100769043
    6. '   ' → logprob: -12.250636100769043
    7. ',self' → logprob: -13.375636100769043
    8. ',
' → logprob: -14.000636100769043
    9. ' )' → logprob: -14.125636100769043
    10. '       ' → logprob: -14.250636100769043

Token 52: ' number' (ID: 2086)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -1.2878072261810303
    2. ' number' → logprob: -1.5378072261810303
    3. 'segment' → logprob: -1.9128072261810303
    4. ' segments' → logprob: -2.4128072261810303
    5. 'segments' → logprob: -2.7878072261810303
    6. ' min' → logprob: -3.4128072261810303
    7. ' max' → logprob: -3.4128072261810303
    8. ' separator' → logprob: -4.162807464599609
    9. 'separator' → logprob: -4.287807464599609
    10. 'number' → logprob: -4.412807464599609

Token 53: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.012772851623594761
    2. '_' → logprob: -5.387773036956787
    3. '_segments' → logprob: -6.137773036956787
    4. '_length' → logprob: -6.262773036956787
    5. '_separator' → logprob: -7.012773036956787
    6. '_parts' → logprob: -7.637773036956787
    7. '_format' → logprob: -8.012772560119629
    8. '_string' → logprob: -8.387772560119629
    9. '_digits' → logprob: -8.512772560119629
    10. 's' → logprob: -8.637772560119629

Token 54: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.949026571121067e-05
    2. ':str' → logprob: -9.250099182128906
    3. '):' → logprob: -12.875099182128906
    4. ')' → logprob: -14.625099182128906
    5. ' :' → logprob: -15.750099182128906
    6. ' ):' → logprob: -18.125099182128906
    7. ' )' → logprob: -19.250099182128906
    8. '):
' → logprob: -19.625099182128906
    9. '   ' → logprob: -19.875099182128906
    10. ':int' → logprob: -20.125099182128906

Token 55: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.030455736443400383
    2. 'str' → logprob: -3.5304558277130127
    3. ')' → logprob: -7.405455589294434
    4. ' ' → logprob: -10.155455589294434
    5. ' )' → logprob: -10.530455589294434
    6. 's' → logprob: -11.905455589294434
    7. ' Optional' → logprob: -12.155455589294434
    8. ' ' → logprob: -12.405455589294434
    9. '	str' → logprob: -12.530455589294434
    10. ':str' → logprob: -12.530455589294434

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25238174200057983
    2. ')' → logprob: -1.5023818016052246
    3. ':' → logprob: -8.252381324768066
    4. '):
' → logprob: -9.002381324768066
    5. '   ' → logprob: -9.752381324768066
    6. '):
' → logprob: -12.502381324768066
    7. ',' → logprob: -13.252381324768066
    8. ' )' → logprob: -13.627381324768066
    9. '       ' → logprob: -13.752381324768066
    10. ' ):' → logprob: -13.752381324768066

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001358400477329269
    2. 'self' → logprob: -9.62513542175293
    3. '   ' → logprob: -10.62513542175293
    4. '    ' → logprob: -10.87513542175293
    5. ' self' → logprob: -11.25013542175293
    6. '     ' → logprob: -12.12513542175293
    7. '      ' → logprob: -12.50013542175293
    8. '        ' → logprob: -13.25013542175293
    9. ' ' → logprob: -14.37513542175293
    10. '           ' → logprob: -14.75013542175293

Token 58: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8326724171638489
    2. 'self' (adapté à ' self') → logprob: -0.9576724171638489
    3. '       ' → logprob: -1.707672357559204
    4. '   ' → logprob: -10.707672119140625
    5. '        ' → logprob: -12.082672119140625
    6. '	self' → logprob: -12.457672119140625
    7. ' ' → logprob: -12.582672119140625
    8. '      ' → logprob: -12.957672119140625
    9. '    ' → logprob: -13.957672119140625
    10. 'super' → logprob: -14.082672119140625

Token 59: '.number' (ID: 25737)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.8284657597541809
    2. '.number' → logprob: -0.9534657597541809
    3. '.' → logprob: -1.8284657001495361
    4. '_number' → logprob: -4.703465938568115
    5. '_str' → logprob: -5.578465938568115
    6. 'number' → logprob: -6.578465938568115
    7. '_string' → logprob: -7.203465938568115
    8. ' .' → logprob: -7.578465938568115
    9. '.string' → logprob: -7.703465938568115
    10. '.segment' → logprob: -7.828465938568115

Token 60: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00023858259373810142
    2. '_s' → logprob: -8.375238418579102
    3. '_string' → logprob: -13.000238418579102
    4. '_segments' → logprob: -13.375238418579102
    5. '_parts' → logprob: -13.750238418579102
    6. 'str' → logprob: -13.750238418579102
    7. 's' → logprob: -14.125238418579102
    8. '_' → logprob: -14.875238418579102
    9. '_seg' → logprob: -15.375238418579102
    10. '_chars' → logprob: -16.0002384185791

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08897611498832703
    2. '=' → logprob: -2.4639761447906494
    3. ' ' → logprob: -10.58897590637207
    4. ':' → logprob: -11.58897590637207
    5. ')' → logprob: -14.33897590637207
    6. ' :' → logprob: -15.08897590637207
    7. '    ' → logprob: -15.21397590637207
    8. '   ' → logprob: -15.71397590637207
    9. '_' → logprob: -16.08897590637207
    10. '.' → logprob: -16.21397590637207

Token 62: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.38688352704048157
    2. 'number' → logprob: -1.1368834972381592
    3. ' ' → logprob: -11.636883735656738
    4. '	number' → logprob: -13.636883735656738
    5. ' ' → logprob: -13.761883735656738
    6. 'Number' → logprob: -14.511883735656738
    7. '_number' → logprob: -14.761883735656738
    8. '(number' → logprob: -16.136882781982422
    9. '[number' → logprob: -16.636882781982422
    10. '```' → logprob: -16.636882781982422

Token 63: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.3856492842023727e-06
    2. 'str' → logprob: -13.625000953674316
    3. '_s' → logprob: -16.750001907348633
    4. ' _' → logprob: -17.000001907348633
    5. '_string' → logprob: -17.500001907348633
    6. '_' → logprob: -18.875001907348633
    7. '_STR' → logprob: -19.625001907348633
    8. '__' → logprob: -20.375001907348633
    9. 'Str' → logprob: -20.750001907348633
    10. 'r' → logprob: -21.000001907348633

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5894932150840759
    2. '<|end|>' → logprob: -0.8394932150840759
    3. '   ' → logprob: -4.589493274688721
    4. '<|end|>' → logprob: -6.089493274688721
    5. '    
' → logprob: -7.964493274688721
    6. 'def' → logprob: -8.589492797851562
    7. '

' → logprob: -8.964492797851562
    8. ' ' → logprob: -9.464492797851562
    9. ' 
' → logprob: -9.839492797851562
    10. '       ' → logprob: -9.839492797851562

Token 65: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2303471714258194
    2. '<|end|>' → logprob: -1.9803471565246582
    3. '   ' → logprob: -2.730347156524658
    4. '

' → logprob: -7.105347156524658
    5. '<|end|>' → logprob: -7.355347156524658
    6. '    
' → logprob: -7.355347156524658
    7. 'def' → logprob: -8.480347633361816
    8. '       ' → logprob: -9.605347633361816
    9. '    ' → logprob: -10.480347633361816
    10. '  ' → logprob: -11.355347633361816

Token 66: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00293586403131485
    2. 'def' → logprob: -6.002935886383057
    3. '       ' → logprob: -8.502935409545898
    4. ' self' → logprob: -8.627935409545898
    5. '   ' → logprob: -9.627935409545898
    6. '@property' → logprob: -12.377935409545898
    7. '
' → logprob: -13.377935409545898
    8. 'pass' → logprob: -13.502935409545898
    9. 'super' → logprob: -13.752935409545898
    10. '@' → logprob: -14.252935409545898

Token 67: '.length' (ID: 3116)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.018006883561611176
    2. '_parts' → logprob: -4.893006801605225
    3. '_list' → logprob: -6.393006801605225
    4. '_tokens' → logprob: -6.393006801605225
    5. 'segments' → logprob: -6.643006801605225
    6. '_s' → logprob: -7.018006801605225
    7. '._' → logprob: -7.268006801605225
    8. '_' → logprob: -7.518006801605225
    9. 's' → logprob: -7.643006801605225
    10. '.' → logprob: -8.018007278442383

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020657742395997047
    2. '=' → logprob: -3.895657777786255
    3. '<|end|>' → logprob: -9.395657539367676
    4. ' ' → logprob: -11.395657539367676
    5. '=len' → logprob: -11.520657539367676
    6. '=int' → logprob: -12.520657539367676
    7. '<|end|>' → logprob: -12.895657539367676
    8. 's' → logprob: -13.145657539367676
    9. ':' → logprob: -14.020657539367676
    10. '  ' → logprob: -14.770657539367676

Token 69: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.008615872822701931
    2. 'len' → logprob: -4.758615970611572
    3. ' ' → logprob: -13.758615493774414
    4. '(len' → logprob: -16.258615493774414
    5. '=len' → logprob: -16.758615493774414
    6. '	len' → logprob: -17.133615493774414
    7. ' ' → logprob: -18.258615493774414
    8. '[len' → logprob: -18.758615493774414
    9. '   ' → logprob: -18.883615493774414
    10. '<len' → logprob: -20.258615493774414

Token 70: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.0015431918436661363
    2. '(' → logprob: -7.001543045043945
    3. '(self' → logprob: -7.376543045043945
    4. 'number' → logprob: -12.126543045043945
    5. '(numbers' → logprob: -16.376543045043945
    6. '(
' → logprob: -17.001543045043945
    7. '(object' → logprob: -17.126543045043945
    8. 'self' → logprob: -17.251543045043945
    9. '(numero' → logprob: -17.251543045043945
    10. '(n' → logprob: -17.376543045043945

Token 71: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -2.935296834039036e-06
    2. 'str' → logprob: -12.75000286102295
    3. '_' → logprob: -18.250003814697266
    4. 'Str' → logprob: -19.375003814697266
    5. 'self' → logprob: -19.500003814697266
    6. ')' → logprob: -19.625003814697266
    7. '_s' → logprob: -19.750003814697266
    8. '```' → logprob: -20.000003814697266
    9. '_STR' → logprob: -21.000003814697266
    10. '(self' → logprob: -21.250003814697266

Token 72: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.24179228907451e-05
    2. '<|end|>' → logprob: -10.000061988830566
    3. ' )' → logprob: -11.750061988830566
    4. ')
' → logprob: -12.000061988830566
    5. '<|end|>' → logprob: -13.750061988830566
    6. '       ' → logprob: -14.750061988830566
    7. '   ' → logprob: -15.000061988830566
    8. '}' → logprob: -15.250061988830566
    9. ')return' → logprob: -15.875061988830566
    10. '```' → logprob: -15.875061988830566

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.701654314994812
    2. '<|end|>' → logprob: -1.326654314994812
    3. '
' → logprob: -1.451654314994812
    4. '    
' → logprob: -6.076654434204102
    5. '<|end|>' → logprob: -6.326654434204102
    6. 'def' → logprob: -8.326654434204102
    7. '

' → logprob: -9.326654434204102
    8. '```' → logprob: -9.701654434204102
    9. '\n' → logprob: -10.201654434204102
    10. '    ' → logprob: -10.326654434204102

Token 74: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008161448873579502
    2. '   ' → logprob: -4.883161544799805
    3. ' def' → logprob: -7.508161544799805
    4. ' ' → logprob: -13.133161544799805
    5. '    
' → logprob: -13.883161544799805
    6. '  ' → logprob: -14.008161544799805
    7. '<|end|>' → logprob: -14.383161544799805
    8. '@property' → logprob: -14.508161544799805
    9. '
' → logprob: -14.633161544799805
    10. '    ' → logprob: -14.758161544799805

Token 75: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.27350130677223206
    2. 'segment' → logprob: -1.7735012769699097
    3. ' def' → logprob: -2.898501396179199
    4. '_segment' → logprob: -5.648501396179199
    5. ' get' → logprob: -5.773501396179199
    6. ' process' → logprob: -6.148501396179199
    7. 'def' → logprob: -6.648501396179199
    8. ' split' → logprob: -6.898501396179199
    9. ' segments' → logprob: -7.648501396179199
    10. ' abstract' → logprob: -8.2735013961792

Token 76: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000170882252859883
    2. '(' → logprob: -8.750170707702637
    3. 'self' → logprob: -11.500170707702637
    4. '(
' → logprob: -13.625170707702637
    5. ' (' → logprob: -14.375170707702637
    6. '(s' → logprob: -16.375171661376953
    7. 's' → logprob: -16.750171661376953
    8. ' self' → logprob: -16.875171661376953
    9. ')(' → logprob: -17.250171661376953
    10. '_self' → logprob: -17.375171661376953

Token 77: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018717197701334953
    2. ')' → logprob: -4.393717288970947
    3. 'self' → logprob: -5.143717288970947
    4. '):' → logprob: -9.393716812133789
    5. '   ' → logprob: -9.518716812133789
    6. '(self' → logprob: -9.643716812133789
    7. ' ,' → logprob: -10.518716812133789
    8. '       ' → logprob: -11.143716812133789
    9. '_str' → logprob: -11.143716812133789
    10. ':' → logprob: -11.643716812133789

Token 78: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.208663210272789
    2. '->' → logprob: -1.8336632251739502
    3. ':' → logprob: -3.70866322517395
    4. '(self' → logprob: -6.583662986755371
    5. '       ' → logprob: -6.958662986755371
    6. '   ' → logprob: -7.083662986755371
    7. ')' → logprob: -7.958662986755371
    8. ')->' → logprob: -8.333662986755371
    9. ':
' → logprob: -8.958662986755371
    10. '(' → logprob: -9.833662986755371

Token 79: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.3505401015281677
    2. ' List' → logprob: -1.2255401611328125
    3. '[List' → logprob: -6.3505401611328125
    4. '[]' → logprob: -8.975540161132812
    5. '   ' → logprob: -9.475540161132812
    6. 'None' → logprob: -9.975540161132812
    7. ' []' → logprob: -10.975540161132812
    8. ' None' → logprob: -10.975540161132812
    9. ' ' → logprob: -11.475540161132812
    10. '[' → logprob: -11.725540161132812

Token 80: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.896309739408025e-07
    2. 'int' → logprob: -14.875000953674316
    3. '[' → logprob: -15.125000953674316
    4. '<int' → logprob: -16.125
    5. '[Int' → logprob: -18.375
    6. '[str' → logprob: -18.5
    7. '[in' → logprob: -18.625
    8. '[i' → logprob: -19.625
    9. '[
' → logprob: -19.625
    10. '   ' → logprob: -19.75

Token 81: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.023500755429267883
    2. '):' → logprob: -3.773500680923462
    3. ']:
' → logprob: -9.273500442504883
    4. ']' → logprob: -9.648500442504883
    5. ':' → logprob: -10.023500442504883
    6. '   ' → logprob: -11.273500442504883
    7. '       ' → logprob: -11.773500442504883
    8. ']:
' → logprob: -11.773500442504883
    9. '>:' → logprob: -11.898500442504883
    10. '):
' → logprob: -12.398500442504883

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.4656579120783135e-05
    2. '...' → logprob: -10.875044822692871
    3. ' raise' → logprob: -11.375044822692871
    4. '   ' → logprob: -12.250044822692871
    5. 'raise' → logprob: -12.750044822692871
    6. '      ' → logprob: -13.750044822692871
    7. '    ' → logprob: -13.875044822692871
    8. '[]' → logprob: -14.125044822692871
    9. '        
' → logprob: -14.250044822692871
    10. ' ...' → logprob: -14.750044822692871

Token 83: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5240492224693298
    2. 'raise' (adapté à ' raise') → logprob: -1.0240492820739746
    3. '...' → logprob: -3.3990492820739746
    4. ' raise' → logprob: -5.149049282073975
    5. '[]' → logprob: -5.399049282073975
    6. '   ' → logprob: -5.649049282073975
    7. 'pass' → logprob: -6.774049282073975
    8. 'return' → logprob: -8.774048805236816
    9. '	raise' → logprob: -9.774048805236816
    10. '#' → logprob: -10.774048805236816

Token 84: ' Not' (ID: 4037)
  Prédit: ' Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Not' → logprob: -0.06197911128401756
    2. 'Not' → logprob: -2.811979055404663
    3. '(Not' → logprob: -12.436979293823242
    4. '_Not' → logprob: -12.686979293823242
    5. '@Not' → logprob: -13.186979293823242
    6. '_not' → logprob: -14.061979293823242
    7. '\Not' → logprob: -14.811979293823242
    8. '<|end|>' → logprob: -14.811979293823242
    9. ' not' → logprob: -14.936979293823242
    10. '...' → logprob: -15.061979293823242

Token 85: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.25979334115982056
    2. 'plement' → logprob: -1.5097932815551758
    3. 'implemented' → logprob: -5.384793281555176
    4. 'm' → logprob: -5.884793281555176
    5. 'ple' → logprob: -9.009793281555176
    6. 'Implement' → logprob: -9.134793281555176
    7. 'lement' → logprob: -9.884793281555176
    8. 'mp' → logprob: -10.759793281555176
    9. 'mented' → logprob: -10.884793281555176
    10. 'pleted' → logprob: -10.884793281555176

Token 86: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -5.438573680294212e-06
    2. 'rror' → logprob: -12.750005722045898
    3. 'ed' → logprob: -13.125005722045898
    4. 'error' → logprob: -15.000005722045898
    5. 'ated' → logprob: -16.5000057220459
    6. 'Method' → logprob: -17.3750057220459
    7. '```' → logprob: -17.8750057220459
    8. 'Warning' → logprob: -18.1250057220459
    9. 'Implemented' → logprob: -18.6250057220459
    10. 'ror' → logprob: -18.8750057220459

Token 87: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7389029264450073
    2. '
' → logprob: -0.8639029264450073
    3. '<|end|>' → logprob: -2.363903045654297
    4. '\n' → logprob: -5.988903045654297
    5. ' class' → logprob: -6.863903045654297
    6. '<|end|>' → logprob: -6.863903045654297
    7. '   ' → logprob: -7.488903045654297
    8. '

' → logprob: -7.988903045654297
    9. '<class' → logprob: -8.363903045654297
    10. ' 
' → logprob: -8.488903045654297

Token 89: ' Recursive' (ID: 174533)
  Prédit: ' Simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Simple' → logprob: -0.9504553079605103
    2. ' Concrete' → logprob: -1.5754553079605103
    3. 'Concrete' → logprob: -2.4504551887512207
    4. ' Digit' → logprob: -3.2004551887512207
    5. ' Space' → logprob: -3.4504551887512207
    6. ' ' → logprob: -3.4504551887512207
    7. 'Space' → logprob: -3.5754551887512207
    8. ' Abstract' → logprob: -3.8254551887512207
    9. 'Whitespace' → logprob: -3.8254551887512207
    10. ' Numeric' → logprob: -3.9504551887512207

Token 90: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -6.921253225300461e-05
    2. 'Digit' → logprob: -10.625069618225098
    3. 'Seg' → logprob: -11.000069618225098
    4. 'Split' → logprob: -11.375069618225098
    5. 'Splitter' → logprob: -12.750069618225098
    6. 'Recursive' → logprob: -13.125069618225098
    7. 'Sum' → logprob: -13.625069618225098
    8. ' Segment' → logprob: -14.125069618225098
    9. 'Partition' → logprob: -14.375069618225098
    10. 'Abstract' → logprob: -14.500069618225098

Token 91: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00012047011114191264
    2. 'Segment' → logprob: -9.125120162963867
    3. '```' → logprob: -13.000120162963867
    4. '   ' → logprob: -13.125120162963867
    5. 'erer' → logprob: -13.125120162963867
    6. ' er' → logprob: -14.125120162963867
    7. 'segment' → logprob: -14.250120162963867
    8. 'ation' → logprob: -14.875120162963867
    9. '(' → logprob: -15.000120162963867
    10. 'ter' → logprob: -15.000120162963867

Token 92: '(Abstract' (ID: 94462)
  Prédit: '(Abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Abstract' → logprob: -0.0005517214885912836
    2. '(' → logprob: -7.625551700592041
    3. ':' → logprob: -9.7505521774292
    4. '(S' → logprob: -12.2505521774292
    5. ' :' → logprob: -15.6255521774292
    6. '<Abstract' → logprob: -15.6255521774292
    7. '(AST' → logprob: -16.750551223754883
    8. '(Base' → logprob: -17.625551223754883
    9. ':
' → logprob: -17.625551223754883
    10. '(Simple' → logprob: -18.000551223754883

Token 93: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -7.226628895296017e-06
    2. 'Seg' → logprob: -13.125007629394531
    3. '_segment' → logprob: -13.250007629394531
    4. ' Segment' → logprob: -13.500007629394531
    5. 'segment' → logprob: -13.875007629394531
    6. ')' → logprob: -14.750007629394531
    7. 'S' → logprob: -15.500007629394531
    8. 'egment' → logprob: -16.25000762939453
    9. '```' → logprob: -16.50000762939453
    10. '
' → logprob: -17.12500762939453

Token 94: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.8624639324116288e-06
    2. 'Segment' → logprob: -14.375001907348633
    3. '```' → logprob: -14.375001907348633
    4. 'ter' → logprob: -16.000001907348633
    5. 'erer' → logprob: -16.125001907348633
    6. 'segment' → logprob: -16.625001907348633
    7. 'class' → logprob: -16.750001907348633
    8. '   ' → logprob: -16.750001907348633
    9. ' er' → logprob: -16.875001907348633
    10. 'ent' → logprob: -17.125001907348633

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00023441045777872205
    2. '):
' → logprob: -8.500234603881836
    3. ')' → logprob: -11.375234603881836
    4. ' ):' → logprob: -11.375234603881836
    5. ',' → logprob: -12.125234603881836
    6. '   ' → logprob: -13.750234603881836
    7. ':' → logprob: -14.125234603881836
    8. '):

' → logprob: -14.750234603881836
    9. '):
' → logprob: -15.125234603881836
    10. '():' → logprob: -17.875234603881836

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00036906293826177716
    2. ' def' → logprob: -8.50036907196045
    3. 'def' → logprob: -9.37536907196045
    4. ':' → logprob: -9.75036907196045
    5. '    ' → logprob: -11.75036907196045
    6. '    
' → logprob: -12.37536907196045
    7. '<|end|>' → logprob: -12.37536907196045
    8. ':def' → logprob: -13.50036907196045
    9. '
' → logprob: -13.62536907196045
    10. ')' → logprob: -13.87536907196045

Token 97: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6941199898719788
    2. 'def' (adapté à ' def') → logprob: -0.8191199898719788
    3. '   ' → logprob: -2.819119930267334
    4. 'de' → logprob: -12.819120407104492
    5. '	def' → logprob: -13.444120407104492
    6. '    ' → logprob: -13.944120407104492
    7. ' ' → logprob: -14.194120407104492
    8. ':def' → logprob: -14.569120407104492
    9. '    
' → logprob: -14.944120407104492
    10. '
' → logprob: -15.069120407104492

Token 98: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.21705362200737
    2. ' segment' → logprob: -2.0920536518096924
    3. ' __' → logprob: -2.9670536518096924
    4. ' ' → logprob: -3.9670536518096924
    5. 'segment' → logprob: -7.467053413391113
    6. ' _' → logprob: -8.092053413391113
    7. ' init' → logprob: -8.967053413391113
    8. 'def' → logprob: -9.092053413391113
    9. ' seg' → logprob: -10.092053413391113
    10. '_segment' → logprob: -10.217053413391113

Token 99: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.12731128931045532
    2. 'nit' → logprob: -2.1273112297058105
    3. 'it' → logprob: -8.377311706542969
    4. 'def' → logprob: -8.877311706542969
    5. '   ' → logprob: -11.877311706542969
    6. ' init' → logprob: -14.252311706542969
    7. '```' → logprob: -14.252311706542969
    8. '_' → logprob: -14.377311706542969
    9. ' nit' → logprob: -14.377311706542969
    10. '  ' → logprob: -14.627311706542969

Token 100: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0005044196150265634
    2. '__' → logprob: -7.625504493713379
    3. '(self' → logprob: -11.625504493713379
    4. '__(
' → logprob: -12.250504493713379
    5. '_(' → logprob: -13.875504493713379
    6. '__((' → logprob: -14.000504493713379
    7. '___' → logprob: -14.250504493713379
    8. '__('' → logprob: -15.875504493713379
    9. '(' → logprob: -17.250503540039062
    10. '__.__' → logprob: -17.500503540039062

Token 101: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0032913058530539274
    2. ' self' → logprob: -5.753291130065918
    3. '       ' → logprob: -9.253291130065918
    4. ',' → logprob: -11.628291130065918
    5. '   ' → logprob: -11.878291130065918
    6. '
' → logprob: -14.003291130065918
    7. '    ' → logprob: -15.503291130065918
    8. ',self' → logprob: -15.503291130065918
    9. '(self' → logprob: -15.753291130065918
    10. '	self' → logprob: -15.753291130065918

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004067202680744231
    2. ' ,' → logprob: -8.125406265258789
    3. 'self' → logprob: -9.250406265258789
    4. ',self' → logprob: -11.375406265258789
    5. '(self' → logprob: -13.500406265258789
    6. '   ' → logprob: -14.500406265258789
    7. '       ' → logprob: -14.500406265258789
    8. ' self' → logprob: -14.875406265258789
    9. ',
' → logprob: -16.25040626525879
    10. ' ' → logprob: -16.62540626525879

Token 103: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.4607761800289154
    2. 'self' → logprob: -1.0857762098312378
    3. ' number' → logprob: -3.7107760906219482
    4. ' self' → logprob: -4.960776329040527
    5. '   ' → logprob: -9.960776329040527
    6. '       ' → logprob: -10.460776329040527
    7. ',' → logprob: -11.835776329040527
    8. ' ' → logprob: -11.960776329040527
    9. '(self' → logprob: -13.835776329040527
    10. '_number' → logprob: -13.960776329040527

Token 104: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.2664456789934775e-06
    2. 'str' → logprob: -14.375000953674316
    3. ' _' → logprob: -15.500000953674316
    4. '_s' → logprob: -15.625000953674316
    5. '_string' → logprob: -15.750000953674316
    6. '   ' → logprob: -17.250001907348633
    7. ':' → logprob: -18.250001907348633
    8. '       ' → logprob: -18.250001907348633
    9. ')_' → logprob: -18.250001907348633
    10. ':str' → logprob: -18.375001907348633

Token 105: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001375089050270617
    2. '):' → logprob: -9.375137329101562
    3. ':str' → logprob: -10.375137329101562
    4. ' :' → logprob: -11.250137329101562
    5. '):
' → logprob: -12.125137329101562
    6. ' ):' → logprob: -13.750137329101562
    7. ')' → logprob: -14.000137329101562
    8. '   ' → logprob: -14.500137329101562
    9. ' ' → logprob: -15.500137329101562
    10. ',' → logprob: -15.750137329101562

Token 106: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.029772015288472176
    2. 'str' → logprob: -3.5297720432281494
    3. ' ' → logprob: -12.40477180480957
    4. ')' → logprob: -12.52977180480957
    5. '       ' → logprob: -12.77977180480957
    6. '   ' → logprob: -13.02977180480957
    7. ':str' → logprob: -13.27977180480957
    8. '):
' → logprob: -13.77977180480957
    9. '	str' → logprob: -13.90477180480957
    10. '    ' → logprob: -14.02977180480957

Token 107: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5344286561012268
    2. '):' → logprob: -1.284428596496582
    3. ',' → logprob: -2.034428596496582
    4. ')' → logprob: -5.284428596496582
    5. '   ' → logprob: -7.284428596496582
    6. '):
' → logprob: -7.659428596496582
    7. ' ):
' → logprob: -9.784428596496582
    8. ' ):' → logprob: -9.909428596496582
    9. '       ' → logprob: -10.034428596496582
    10. ':' → logprob: -10.909428596496582

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08837611973285675
    2. ' super' → logprob: -2.588376045227051
    3. 'super' → logprob: -4.713376045227051
    4. ' self' → logprob: -8.21337604522705
    5. 'self' → logprob: -8.71337604522705
    6. '   ' → logprob: -11.46337604522705
    7. '	super' → logprob: -11.96337604522705
    8. '      ' → logprob: -12.46337604522705
    9. ',' → logprob: -13.21337604522705
    10. ' ' → logprob: -13.21337604522705

Token 109: ' super' (ID: 2539)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6583493947982788
    2. 'super' (adapté à ' super') → logprob: -1.1583493947982788
    3. ' super' → logprob: -1.7833493947982788
    4. '	super' → logprob: -9.40834903717041
    5. '   ' → logprob: -9.65834903717041
    6. 'self' → logprob: -10.15834903717041
    7. ' ' → logprob: -10.90834903717041
    8. '           ' → logprob: -12.40834903717041
    9. ' self' → logprob: -12.53334903717041
    10. '      ' → logprob: -13.40834903717041

Token 110: '().__' (ID: 57377)
  Prédit: '().__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().__' → logprob: -1.0921942703134846e-05
    2. '().' → logprob: -11.75001049041748
    3. '()' → logprob: -12.75001049041748
    4. ').__' → logprob: -19.875011444091797
    5. '()-' → logprob: -20.000011444091797
    6. '()`' → logprob: -20.125011444091797
    7. '(' → logprob: -20.375011444091797
    8. '.__' → logprob: -20.375011444091797
    9. '():' → logprob: -21.250011444091797
    10. '().'' → logprob: -22.250011444091797

Token 111: 'init' (ID: 3287)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1397109478712082
    2. 'init' → logprob: -2.1397109031677246
    3. '_init' → logprob: -4.389710903167725
    4. '___' → logprob: -9.014711380004883
    5. 'number' → logprob: -10.389711380004883
    6. '__(' → logprob: -10.764711380004883
    7. '(init' → logprob: -10.889711380004883
    8. '____' → logprob: -11.014711380004883
    9. ' __' → logprob: -11.139711380004883
    10. 'Recursive' → logprob: -11.514711380004883

Token 112: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.015478266403079033
    2. '(number' → logprob: -4.515478134155273
    3. '(' → logprob: -5.515478134155273
    4. '_(' → logprob: -8.765478134155273
    5. '__' → logprob: -9.015478134155273
    6. '(n' → logprob: -10.515478134155273
    7. '__(
' → logprob: -10.765478134155273
    8. ')(' → logprob: -11.140478134155273
    9. ' (' → logprob: -12.015478134155273
    10. '(f' → logprob: -12.390478134155273

Token 113: 'number' (ID: 8096)
  Prédit: 'number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -7.505351095460355e-05
    2. ' number' → logprob: -9.500075340270996
    3. ')' → logprob: -16.50007438659668
    4. '	number' → logprob: -18.62507438659668
    5. '(number' → logprob: -18.75007438659668
    6. '   ' → logprob: -19.12507438659668
    7. '       ' → logprob: -19.37507438659668
    8. 'Number' → logprob: -19.75007438659668
    9. 'numbers' → logprob: -20.12507438659668
    10. '```' → logprob: -20.37507438659668

Token 114: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0002966127940453589
    2. 'str' → logprob: -8.125296592712402
    3. '```' → logprob: -16.12529754638672
    4. '__' → logprob: -16.50029754638672
    5. 'Str' → logprob: -16.62529754638672
    6. ')' → logprob: -17.00029754638672
    7. '_s' → logprob: -17.00029754638672
    8. '   ' → logprob: -17.75029754638672
    9. '_string' → logprob: -18.00029754638672
    10. 's' → logprob: -18.00029754638672

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025162079837173223
    2. ')
' → logprob: -6.002516269683838
    3. '       ' → logprob: -10.37751579284668
    4. '   ' → logprob: -11.87751579284668
    5. ' )' → logprob: -13.62751579284668
    6. '
' → logprob: -14.50251579284668
    7. ')

' → logprob: -15.50251579284668
    8. ')
' → logprob: -16.12751579284668
    9. '))' → logprob: -16.62751579284668
    10. 'def' → logprob: -16.87751579284668

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4378470182418823
    2. '   ' → logprob: -1.8128470182418823
    3. '<|end|>' → logprob: -1.8128470182418823
    4. '
' → logprob: -3.812847137451172
    5. '    ' → logprob: -6.187847137451172
    6. '<|end|>' → logprob: -6.687847137451172
    7. 'def' → logprob: -7.312847137451172
    8. '        ' → logprob: -7.937847137451172
    9. ' ' → logprob: -8.437847137451172
    10. '    
' → logprob: -8.437847137451172

Token 117: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.20187218487262726
    2. '       ' → logprob: -1.7018722295761108
    3. ' self' → logprob: -8.201871871948242
    4. 'def' → logprob: -9.326871871948242
    5. '   ' → logprob: -9.451871871948242
    6. 'pass' → logprob: -11.826871871948242
    7. '	self' → logprob: -12.951871871948242
    8. '#' → logprob: -13.451871871948242
    9. '      ' → logprob: -13.576871871948242
    10. 'from' → logprob: -14.076871871948242

Token 118: '.memo' (ID: 161018)
  Prédit: '.se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.634863555431366
    2. '.memo' → logprob: -1.1348636150360107
    3. '._' → logprob: -2.8848636150360107
    4. '.cache' → logprob: -3.3848636150360107
    5. '.segment' → logprob: -3.3848636150360107
    6. '.dp' → logprob: -4.884863376617432
    7. '.result' → logprob: -5.384863376617432
    8. '.results' → logprob: -5.634863376617432
    9. '.' → logprob: -5.884863376617432
    10. '.memory' → logprob: -6.884863376617432

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134576082229614
    2. '=' → logprob: -1.3134576082229614
    3. ':' → logprob: -8.563457489013672
    4. '={}' → logprob: -12.813457489013672
    5. ' ' → logprob: -14.188457489013672
    6. '=[]' → logprob: -14.563457489013672
    7. '=None' → logprob: -15.563457489013672
    8. ')' → logprob: -16.188457489013672
    9. '   ' → logprob: -16.438457489013672
    10. 's' → logprob: -16.563457489013672

Token 120: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -4.203409844194539e-05
    2. ' {}' → logprob: -10.125041961669922
    3. 'dict' → logprob: -14.000041961669922
    4. '{}
' → logprob: -14.250041961669922
    5. '{})' → logprob: -15.625041961669922
    6. '{}

' → logprob: -15.875041961669922
    7. '{' → logprob: -16.750041961669922
    8. '={}' → logprob: -17.625041961669922
    9. ' dict' → logprob: -18.000041961669922
    10. '{},' → logprob: -18.125041961669922

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11127548664808273
    2. '<|end|>' → logprob: -2.3612754344940186
    3. 'def' → logprob: -4.736275672912598
    4. '<|end|>' → logprob: -7.111275672912598
    5. ' def' → logprob: -7.736275672912598
    6. ')' → logprob: -7.861275672912598
    7. '    
' → logprob: -7.986275672912598
    8. '
' → logprob: -8.986275672912598
    9. ' ' → logprob: -10.111275672912598
    10. '    ' → logprob: -10.236275672912598

Token 122: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.033712901175022125
    2. '   ' → logprob: -3.533712863922119
    3. ' def' → logprob: -5.533712863922119
    4. '    
' → logprob: -13.033713340759277
    5. '	def' → logprob: -14.658713340759277
    6. ')' → logprob: -15.033713340759277
    7. '
' → logprob: -15.783713340759277
    8. ' ' → logprob: -16.40871238708496
    9. '  ' → logprob: -17.03371238708496
    10. ':def' → logprob: -17.40871238708496

Token 123: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.04872169345617294
    2. 'segment' → logprob: -3.0487217903137207
    3. '_segment' → logprob: -9.548721313476562
    4. ' def' → logprob: -10.173721313476562
    5. '.segment' → logprob: -12.298721313476562
    6. 'def' → logprob: -12.423721313476562
    7. 'seg' → logprob: -12.798721313476562
    8. '(segment' → logprob: -12.798721313476562
    9. '   ' → logprob: -13.048721313476562
    10. ' segmentation' → logprob: -13.048721313476562

Token 124: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001034714630804956
    2. '(' → logprob: -6.876034736633301
    3. ' (' → logprob: -13.6260347366333
    4. '(
' → logprob: -14.7510347366333
    5. 'self' → logprob: -15.7510347366333
    6. '   ' → logprob: -16.001033782958984
    7. '()' → logprob: -18.876033782958984
    8. ' ' → logprob: -18.876033782958984
    9. '(Self' → logprob: -19.001033782958984
    10. '       ' → logprob: -19.251033782958984

Token 125: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07805933803319931
    2. ')' → logprob: -3.453059434890747
    3. 'self' → logprob: -3.828059434890747
    4. ',' → logprob: -3.953059434890747
    5. '   ' → logprob: -6.828059196472168
    6. ')(' → logprob: -7.453059196472168
    7. '(' → logprob: -8.078059196472168
    8. '       ' → logprob: -8.953059196472168
    9. ' self' → logprob: -8.953059196472168
    10. ',self' → logprob: -9.703059196472168

Token 126: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012159519828855991
    2. '(' → logprob: -6.876215934753418
    3. ' (' → logprob: -9.001215934753418
    4. '(
' → logprob: -10.251215934753418
    5. 'self' → logprob: -11.001215934753418
    6. '   ' → logprob: -12.501215934753418
    7. ' self' → logprob: -13.751215934753418
    8. '(s' → logprob: -14.001215934753418
    9. '       ' → logprob: -14.126215934753418
    10. ' ' → logprob: -14.376215934753418

Token 127: ' int' (ID: 677)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.28149738907814026
    2. 'List' → logprob: -1.4064973592758179
    3. '[List' → logprob: -9.78149700164795
    4. ' None' → logprob: -9.90649700164795
    5. ' Optional' → logprob: -9.90649700164795
    6. '       ' → logprob: -10.03149700164795
    7. 'Optional' → logprob: -10.15649700164795
    8. '   ' → logprob: -10.53149700164795
    9. 'None' → logprob: -10.53149700164795
    10. ' list' → logprob: -11.15649700164795

Token 128: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014392898418009281
    2. ':
' → logprob: -4.389392852783203
    3. '       ' → logprob: -6.889392852783203
    4. '   ' → logprob: -7.764392852783203
    5. '[' → logprob: -8.514392852783203
    6. '(self' → logprob: -9.764392852783203
    7. '():' → logprob: -9.889392852783203
    8. '):' → logprob: -10.014392852783203
    9. '(' → logprob: -10.389392852783203
    10. ':
' → logprob: -11.389392852783203

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011539128609001637
    2. 'n' → logprob: -8.376153945922852
    3. ' if' → logprob: -8.751153945922852
    4. 'def' → logprob: -8.751153945922852
    5. 'if' → logprob: -8.876153945922852
    6. 'pass' → logprob: -8.876153945922852
    7. 'return' → logprob: -9.626153945922852
    8. ' pass' → logprob: -9.751153945922852
    9. '   ' → logprob: -10.001153945922852
    10. '    ' → logprob: -10.501153945922852

Token 130: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.586127758026123
    2. '       ' → logprob: -1.336127758026123
    3. ' if' → logprob: -2.711127758026123
    4. ' def' → logprob: -2.836127758026123
    5. 'if' → logprob: -3.336127758026123
    6. '   ' → logprob: -4.461127758026123
    7. 'return' → logprob: -6.336127758026123
    8. '
' → logprob: -6.461127758026123
    9. ' self' → logprob: -6.836127758026123
    10. 'self' → logprob: -6.961127758026123

Token 131: ' Find' (ID: 9764)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5180836915969849
    2. 'def' → logprob: -1.0180836915969849
    3. ' self' → logprob: -4.518083572387695
    4. ' ' → logprob: -4.768083572387695
    5. ' return' → logprob: -5.893083572387695
    6. 'from' → logprob: -5.893083572387695
    7. '    ' → logprob: -6.143083572387695
    8. 'self' → logprob: -6.143083572387695
    9. 'return' → logprob: -6.268083572387695
    10. ' length' → logprob: -6.393083572387695

Token 132: ' the' (ID: 290)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -1.4853814840316772
    2. 'self' → logprob: -1.7353814840316772
    3. ' all' → logprob: -2.235381603240967
    4. ' self' → logprob: -2.235381603240967
    5. 'segments' → logprob: -2.360381603240967
    6. '(self' → logprob: -2.485381603240967
    7. ' the' → logprob: -2.735381603240967
    8. 'all' → logprob: -3.610381603240967
    9. ' segments' → logprob: -3.985381603240967
    10. 's' → logprob: -4.360381603240967

Token 133: ' minimal' (ID: 19957)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.6336719393730164
    2. 'best' → logprob: -2.383671998977661
    3. 'def' → logprob: -2.508671998977661
    4. ' length' → logprob: -2.883671998977661
    5. ' next' → logprob: -3.133671998977661
    6. ' segments' → logprob: -3.133671998977661
    7. 'length' → logprob: -3.508671998977661
    8. 'segments' → logprob: -3.508671998977661
    9. 'max' → logprob: -3.883671998977661
    10. ' def' → logprob: -4.258671760559082

Token 134: ' difference' (ID: 9809)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.6372317671775818
    2. ' segments' → logprob: -2.2622318267822266
    3. 'segments' → logprob: -2.2622318267822266
    4. ' cost' → logprob: -2.3872318267822266
    5. 'number' → logprob: -3.1372318267822266
    6. '_segments' → logprob: -3.3872318267822266
    7. ' sum' → logprob: -3.7622318267822266
    8. ' segmentation' → logprob: -4.387231826782227
    9. 'cost' → logprob: -4.512231826782227
    10. ' segment' → logprob: -4.887231826782227

Token 135: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6673098206520081
    2. '()' → logprob: -1.2923097610473633
    3. '   ' → logprob: -2.4173097610473633
    4. '(self' → logprob: -3.2923097610473633
    5. ' between' → logprob: -3.4173097610473633
    6. 'def' → logprob: -4.417309761047363
    7. '(' → logprob: -4.917309761047363
    8. ' ' → logprob: -5.542309761047363
    9. 'self' → logprob: -5.667309761047363
    10. ',' → logprob: -5.917309761047363

Token 136: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.0527581050992012
    2. 'all' → logprob: -3.30275821685791
    3. ' possible' → logprob: -5.67775821685791
    4. ' segments' → logprob: -6.05275821685791
    5. ' self' → logprob: -6.17775821685791
    6. ' the' → logprob: -6.17775821685791
    7. '       ' → logprob: -6.80275821685791
    8. 'possible' → logprob: -6.92775821685791
    9. 'segments' → logprob: -7.05275821685791
    10. 'self' → logprob: -7.42775821685791

Token 137: ' valid' (ID: 4529)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.3378326892852783
    2. ' possible' → logprob: -1.4628326892852783
    3. ' segments' → logprob: -1.4628326892852783
    4. 'possible' → logprob: -2.5878326892852783
    5. '       ' → logprob: -3.2128326892852783
    6. ' def' → logprob: -3.7128326892852783
    7. ' segment' → logprob: -3.8378326892852783
    8. '   ' → logprob: -3.9628326892852783
    9. 'segment' → logprob: -3.9628326892852783
    10. 'def' → logprob: -4.087832450866699

Token 138: ' partitions' (ID: 89097)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -1.4962221384048462
    2. 'segment' → logprob: -1.4962221384048462
    3. 'segments' → logprob: -1.4962221384048462
    4. ' splits' → logprob: -1.9962221384048462
    5. ' segments' → logprob: -2.3712220191955566
    6. 'spl' → logprob: -2.8712220191955566
    7. ' partitions' → logprob: -4.496222019195557
    8. ' ways' → logprob: -4.871222019195557
    9. '   ' → logprob: -5.371222019195557
    10. 'def' → logprob: -5.871222019195557

Token 139: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13948264718055725
    2. ':' → logprob: -2.3894827365875244
    3. '<|end|>' → logprob: -4.014482498168945
    4. '   ' → logprob: -4.764482498168945
    5. ' ' → logprob: -5.889482498168945
    6. '<|end|>' → logprob: -6.014482498168945
    7. '
' → logprob: -6.264482498168945
    8. '        ' → logprob: -7.014482498168945
    9. ' :' → logprob: -7.264482498168945
    10. ',' → logprob: -7.639482498168945

Token 140: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.523283839225769
    2. ' the' → logprob: -1.648283839225769
    3. ' self' → logprob: -1.773283839225769
    4. 'the' → logprob: -3.1482839584350586
    5. '       ' → logprob: -6.398283958435059
    6. 'number' → logprob: -8.648283958435059
    7. ' number' → logprob: -9.523283958435059
    8. 'range' → logprob: -9.773283958435059
    9. ')' → logprob: -10.273283958435059
    10. '   ' → logprob: -10.648283958435059

Token 141: ' string' (ID: 1621)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.08323819935321808
    2. ' number' → logprob: -2.833238124847412
    3. 'string' → logprob: -4.958238124847412
    4. 'self' → logprob: -5.083238124847412
    5. 'def' → logprob: -5.708238124847412
    6. ' string' → logprob: -7.458238124847412
    7. 'rest' → logprob: -7.708238124847412
    8. 'digits' → logprob: -7.708238124847412
    9. 'sequence' → logprob: -7.958238124847412
    10. 'length' → logprob: -8.20823860168457

Token 142: ' into' (ID: 1511)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0883338451385498
    2. '       ' → logprob: -1.2133338451385498
    3. '(self' → logprob: -2.21333384513855
    4. '<|end|>' → logprob: -2.21333384513855
    5. 'def' → logprob: -2.83833384513855
    6. '<|end|>' → logprob: -3.83833384513855
    7. ' def' → logprob: -4.338334083557129
    8. ',' → logprob: -4.463334083557129
    9. ':' → logprob: -4.463334083557129
    10. ' ' → logprob: -5.088334083557129

Token 143: ' at' (ID: 540)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.8317059874534607
    2. ' segments' → logprob: -1.0817060470581055
    3. ' parts' → logprob: -3.0817060470581055
    4. ' three' → logprob: -3.5817060470581055
    5. 'digits' → logprob: -3.5817060470581055
    6. ' two' → logprob: -3.7067060470581055
    7. 'sub' → logprob: -4.3317060470581055
    8. ' digits' → logprob: -4.7067060470581055
    9. 'two' → logprob: -4.7067060470581055
    10. 'int' → logprob: -4.8317060470581055

Token 144: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.018078532069921494
    2. ' least' → logprob: -4.768078327178955
    3. 'most' → logprob: -4.768078327178955
    4. 'self' → logprob: -8.643078804016113
    5. 'segments' → logprob: -8.768078804016113
    6. 'okens' → logprob: -8.768078804016113
    7. 'tokens' → logprob: -9.768078804016113
    8. '   ' → logprob: -9.768078804016113
    9. 'list' → logprob: -10.393078804016113
    10. '_le' → logprob: -10.393078804016113

Token 145: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.7018598318099976
    2. 'two' → logprob: -0.7018598318099976
    3. '2' → logprob: -4.951859951019287
    4. 'three' → logprob: -7.201859951019287
    5. ' three' → logprob: -8.201859474182129
    6. ' one' → logprob: -8.701859474182129
    7. '1' → logprob: -8.951859474182129
    8. 'one' → logprob: -8.951859474182129
    9. ' ' → logprob: -9.826859474182129
    10. '3' → logprob: -9.951859474182129

Token 146: ' parts' (ID: 7881)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.0857115983963013
    2. ' parts' → logprob: -1.5857115983963013
    3. ' segments' → logprob: -1.5857115983963013
    4. 'def' → logprob: -1.8357115983963013
    5. 'parts' → logprob: -2.9607114791870117
    6. '   ' → logprob: -4.585711479187012
    7. 'pieces' → logprob: -4.835711479187012
    8. ' def' → logprob: -5.085711479187012
    9. 'tokens' → logprob: -5.585711479187012
    10. ' pieces' → logprob: -5.835711479187012

Token 147: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017719989642500877
    2. '<|end|>' → logprob: -5.1427202224731445
    3. '
' → logprob: -5.2677202224731445
    4. ',' → logprob: -6.5177202224731445
    5. '<|end|>' → logprob: -6.5177202224731445
    6. ':' → logprob: -6.7677202224731445
    7. '   ' → logprob: -6.7677202224731445
    8. ' ' → logprob: -8.017720222473145
    9. ')' → logprob: -8.392720222473145
    10. '        ' → logprob: -8.892720222473145

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1594744324684143
    2. '<|end|>' → logprob: -2.6594743728637695
    3. 'def' → logprob: -3.6594743728637695
    4. ' def' → logprob: -4.0344743728637695
    5. '   ' → logprob: -4.2844743728637695
    6. ' ' → logprob: -4.7844743728637695
    7. ')' → logprob: -5.5344743728637695
    8. '        ' → logprob: -5.5344743728637695
    9. '    ' → logprob: -6.0344743728637695
    10. '<|end|>' → logprob: -7.4094743728637695

Token 149: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17262710630893707
    2. '       ' → logprob: -1.9226270914077759
    3. ' def' → logprob: -5.672626972198486
    4. 'if' → logprob: -5.922626972198486
    5. '   ' → logprob: -6.672626972198486
    6. 'from' → logprob: -6.797626972198486
    7. '...' → logprob: -6.922626972198486
    8. 'n' → logprob: -7.047626972198486
    9. ' if' → logprob: -7.422626972198486
    10. 'pass' → logprob: -7.922626972198486

Token 150: ' Returns' (ID: 9609)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0645177364349365
    2. '       ' → logprob: -1.6895177364349365
    3. ' n' → logprob: -1.9395177364349365
    4. ' if' → logprob: -2.3145177364349365
    5. ' def' → logprob: -2.3145177364349365
    6. 'if' → logprob: -2.5645177364349365
    7. 'n' → logprob: -3.3145177364349365
    8. '   ' → logprob: -5.689517974853516
    9. ' min' → logprob: -5.689517974853516
    10. 'min' → logprob: -5.814517974853516

Token 151: ' minimal' (ID: 19957)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2496323585510254
    2. 'self' → logprob: -2.4996323585510254
    3. 'float' → logprob: -2.9996323585510254
    4. ' int' → logprob: -3.3746323585510254
    5. ' self' → logprob: -4.374632358551025
    6. '   ' → logprob: -4.624632358551025
    7. '0' → logprob: -4.874632358551025
    8. ' float' → logprob: -5.374632358551025
    9. ' the' → logprob: -5.749632358551025
    10. 'min' → logprob: -5.874632358551025

Token 152: ' difference' (ID: 9809)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20069371163845062
    2. ' int' → logprob: -2.5756936073303223
    3. 'difference' → logprob: -3.0756936073303223
    4. 'float' → logprob: -4.200693607330322
    5. '[int' → logprob: -4.450693607330322
    6. ' difference' → logprob: -5.075693607330322
    7. ' float' → logprob: -5.325693607330322
    8. 'diff' → logprob: -5.575693607330322
    9. 'def' → logprob: -5.825693607330322
    10. 'value' → logprob: -6.325693607330322

Token 153: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25696274638175964
    2. 'def' → logprob: -2.381962776184082
    3. '   ' → logprob: -3.131962776184082
    4. '<|end|>' → logprob: -3.756962776184082
    5. ',' → logprob: -3.881962776184082
    6. '
' → logprob: -4.506962776184082
    7. '(self' → logprob: -5.006962776184082
    8. ')' → logprob: -5.256962776184082
    9. '<|end|>' → logprob: -5.381962776184082
    10. '()' → logprob: -5.506962776184082

Token 154: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04509670287370682
    2. 'Optional' → logprob: -4.1700968742370605
    3. ' int' → logprob: -4.6700968742370605
    4. ')' → logprob: -4.9200968742370605
    5. 'float' → logprob: -5.6700968742370605
    6. 'self' → logprob: -5.7950968742370605
    7. 'None' → logprob: -6.2950968742370605
    8. '       ' → logprob: -6.6700968742370605
    9. ' or' → logprob: -7.4200968742370605
    10. ' Optional' → logprob: -7.6700968742370605

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08002441376447678
    2. ',' → logprob: -3.205024480819702
    3. '):' → logprob: -3.455024480819702
    4. '):
' → logprob: -6.205024242401123
    5. '       ' → logprob: -6.955024242401123
    6. ')
' → logprob: -7.205024242401123
    7. '   ' → logprob: -7.955024242401123
    8. ' )' → logprob: -8.330024719238281
    9. 'def' → logprob: -8.705024719238281
    10. ' ,' → logprob: -9.705024719238281

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004486258141696453
    2. '   ' → logprob: -6.379486083984375
    3. 'def' → logprob: -6.754486083984375
    4. ')' → logprob: -6.879486083984375
    5. '<|end|>' → logprob: -8.129486083984375
    6. ' def' → logprob: -9.754486083984375
    7. ' ' → logprob: -10.129486083984375
    8. '    ' → logprob: -10.129486083984375
    9. ',' → logprob: -10.754486083984375
    10. '
' → logprob: -10.754486083984375

Token 157: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13189919292926788
    2. '       ' → logprob: -2.381899118423462
    3. 'if' → logprob: -4.256899356842041
    4. 'n' → logprob: -4.381899356842041
    5. ' def' → logprob: -6.006899356842041
    6. ' n' → logprob: -7.631899356842041
    7. 'pass' → logprob: -7.756899356842041
    8. '...' → logprob: -7.881899356842041
    9. ' if' → logprob: -8.256898880004883
    10. '   ' → logprob: -8.506898880004883

Token 158: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1914435178041458
    2. '0' → logprob: -1.9414435625076294
    3. 'min' → logprob: -3.94144344329834
    4. ' self' → logprob: -4.56644344329834
    5. 'float' → logprob: -8.06644344329834
    6. ' ' → logprob: -8.19144344329834
    7. ' min' → logprob: -8.81644344329834
    8. 'max' → logprob: -10.06644344329834
    9. 'super' → logprob: -10.31644344329834
    10. '-' → logprob: -10.81644344329834

Token 159: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.014694368466734886
    2. '.memo' → logprob: -4.8896942138671875
    3. '.segment' → logprob: -5.0146942138671875
    4. '.solve' → logprob: -9.514694213867188
    5. '.' → logprob: -9.639694213867188
    6. '.helper' → logprob: -9.764694213867188
    7. '.find' → logprob: -9.889694213867188
    8. '.min' → logprob: -10.639694213867188
    9. '.calculate' → logprob: -10.764694213867188
    10. '.rec' → logprob: -10.889694213867188

Token 160: 'min' (ID: 1493)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.0448496341705322
    2. 'dfs' → logprob: -1.1698496341705322
    3. 'min' → logprob: -1.6698496341705322
    4. 'find' → logprob: -2.9198496341705322
    5. 'search' → logprob: -3.9198496341705322
    6. 'helper' → logprob: -3.9198496341705322
    7. 'solve' → logprob: -4.294849395751953
    8. 'minimal' → logprob: -4.294849395751953
    9. 'recursive' → logprob: -4.669849395751953
    10. 'compute' → logprob: -4.919849395751953

Token 161: '_difference' (ID: 123771)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.19936345517635345
    2. '_difference' → logprob: -1.9493634700775146
    3. 'imize' → logprob: -4.0743632316589355
    4. 'imal' → logprob: -4.8243632316589355
    5. '_segment' → logprob: -4.8243632316589355
    6. '_partition' → logprob: -6.5743632316589355
    7. '_' → logprob: -6.9493632316589355
    8. 'imum' → logprob: -7.1993632316589355
    9. '_distance' → logprob: -7.5743632316589355
    10. 'diff' → logprob: -8.449363708496094

Token 162: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06555009633302689
    2. '(self' → logprob: -2.8155500888824463
    3. '_recursive' → logprob: -6.190550327301025
    4. 'self' → logprob: -7.815550327301025
    5. ' (' → logprob: -8.690549850463867
    6. '()' → logprob: -8.940549850463867
    7. '(
' → logprob: -8.940549850463867
    8. 's' → logprob: -9.190549850463867
    9. '   ' → logprob: -9.190549850463867
    10. '(len' → logprob: -9.690549850463867

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015179737471044064
    2. 'self' → logprob: -4.265179634094238
    3. 'len' → logprob: -7.265179634094238
    4. ' ' → logprob: -8.890179634094238
    5. ')' → logprob: -9.515179634094238
    6. '(' → logprob: -10.265179634094238
    7. '(self' → logprob: -10.390179634094238
    8. ' self' → logprob: -11.015179634094238
    9. '   ' → logprob: -11.640179634094238
    10. '(len' → logprob: -11.765179634094238

Token 164: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026328498497605324
    2. ',' → logprob: -6.1276326179504395
    3. ' )' → logprob: -7.7526326179504395
    4. '   ' → logprob: -11.502633094787598
    5. ',)' → logprob: -12.752633094787598
    6. ')
' → logprob: -13.252633094787598
    7. ' ,' → logprob: -14.502633094787598
    8. '<|end|>' → logprob: -14.502633094787598
    9. '<|end|>' → logprob: -14.877633094787598
    10. ' ' → logprob: -15.127633094787598

Token 165: ' [])

' (ID: 124233)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02744547836482525
    2. 'len' → logprob: -4.402445316314697
    3. ' self' → logprob: -5.027445316314697
    4. '1' → logprob: -5.652445316314697
    5. '0' → logprob: -6.402445316314697
    6. '2' → logprob: -7.027445316314697
    7. ')' → logprob: -7.402445316314697
    8. '[])' → logprob: -7.652445316314697
    9. '[]' → logprob: -8.027445793151855
    10. ' ' → logprob: -8.277445793151855

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43797850608825684
    2. ':' → logprob: -1.3129785060882568
    3. ')' → logprob: -3.062978506088257
    4. 'def' → logprob: -4.062978744506836
    5. '
' → logprob: -4.937978744506836
    6. '(' → logprob: -5.437978744506836
    7. '<|end|>' → logprob: -5.437978744506836
    8. ',' → logprob: -6.562978744506836
    9. '):' → logprob: -7.062978744506836
    10. ':
' → logprob: -7.312978744506836

Token 167: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5099428296089172
    2. 'def' (adapté à ' def') → logprob: -1.5099427700042725
    3. ')' → logprob: -2.5099427700042725
    4. ',' → logprob: -2.7599427700042725
    5. '0' → logprob: -3.8849427700042725
    6. ' def' → logprob: -6.259943008422852
    7. '1' → logprob: -6.384943008422852
    8. ' ' → logprob: -6.509943008422852
    9. 'number' → logprob: -6.509943008422852
    10. '(' → logprob: -7.009943008422852

Token 168: ' _' (ID: 1175)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0007188651943579316
    2. ' _' → logprob: -7.25071907043457
    3. '_m' → logprob: -13.25071907043457
    4. '_segment' → logprob: -13.37571907043457
    5. '_max' → logprob: -13.62571907043457
    6. '_' → logprob: -14.37571907043457
    7. '_def' → logprob: -14.50071907043457
    8. 'min' → logprob: -15.25071907043457
    9. '._' → logprob: -15.37571907043457
    10. ' ' → logprob: -15.37571907043457

Token 169: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -4.723352049040841e-06
    2. '_min' → logprob: -12.375004768371582
    3. ' min' → logprob: -15.875004768371582
    4. 'segment' → logprob: -16.750003814697266
    5. '(min' → logprob: -16.875003814697266
    6. '_segment' → logprob: -17.875003814697266
    7. '	min' → logprob: -18.125003814697266
    8. '_recursive' → logprob: -18.625003814697266
    9. 'max' → logprob: -18.875003814697266
    10. 'def' → logprob: -19.375003814697266

Token 170: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -1.0280383548888494e-06
    2. 'difference' → logprob: -14.250000953674316
    3. 'ifference' → logprob: -16.375001907348633
    4. '_diff' → logprob: -16.500001907348633
    5. '_distance' → logprob: -17.000001907348633
    6. '_d' → logprob: -17.000001907348633
    7. 'Difference' → logprob: -18.000001907348633
    8. '_definition' → logprob: -18.500001907348633
    9. '```' → logprob: -18.625001907348633
    10. ' difference' → logprob: -18.750001907348633

Token 171: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005822229431942105
    2. '(' → logprob: -7.500582218170166
    3. 'self' → logprob: -10.500582695007324
    4. '}(' → logprob: -14.750582695007324
    5. '   ' → logprob: -14.875582695007324
    6. 'def' → logprob: -15.375582695007324
    7. ' (' → logprob: -15.375582695007324
    8. '(s' → logprob: -16.000581741333008
    9. '(
' → logprob: -16.000581741333008
    10. '__(' → logprob: -16.375581741333008

Token 172: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.22025446593761444
    2. ',' → logprob: -2.345254421234131
    3. ')(' → logprob: -2.845254421234131
    4. '(' → logprob: -3.345254421234131
    5. 'self' → logprob: -5.595254421234131
    6. ')' → logprob: -6.095254421234131
    7. ' (' → logprob: -7.345254421234131
    8. 'def' → logprob: -7.970254421234131
    9. ')(
' → logprob: -7.970254421234131
    10. '}(' → logprob: -8.345254898071289

Token 173: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.4691970944404602
    2. 'start' → logprob: -1.4691970348358154
    3. 'self' → logprob: -2.5941970348358154
    4. 'pos' → logprob: -2.9691970348358154
    5. 'idx' → logprob: -4.8441972732543945
    6. ' index' → logprob: -5.0941972732543945
    7. ' start' → logprob: -6.0941972732543945
    8. ' self' → logprob: -7.0941972732543945
    9. ' pos' → logprob: -7.3441972732543945
    10. ' idx' → logprob: -7.9691972732543945

Token 174: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011841575615108013
    2. ' ,' → logprob: -7.126183986663818
    3. 'self' → logprob: -8.251184463500977
    4. ':' → logprob: -9.876184463500977
    5. ')' → logprob: -10.501184463500977
    6. '   ' → logprob: -11.001184463500977
    7. ',self' → logprob: -11.751184463500977
    8. '):' → logprob: -12.251184463500977
    9. '(self' → logprob: -12.751184463500977
    10. ' self' → logprob: -13.001184463500977

Token 175: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02474568784236908
    2. ' int' → logprob: -3.7747457027435303
    3. ')' → logprob: -6.649745464324951
    4. 'self' → logprob: -9.64974594116211
    5. ',' → logprob: -9.77474594116211
    6. 'List' → logprob: -10.52474594116211
    7. '   ' → logprob: -11.52474594116211
    8. 'list' → logprob: -12.14974594116211
    9. ':int' → logprob: -12.14974594116211
    10. ',int' → logprob: -12.27474594116211

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.933173426659778e-05
    2. ' ,' → logprob: -9.625069618225098
    3. ')' → logprob: -13.000069618225098
    4. '   ' → logprob: -14.625069618225098
    5. ',
' → logprob: -15.500069618225098
    6. ',List' → logprob: -16.50006866455078
    7. '):' → logprob: -17.12506866455078
    8. ',int' → logprob: -17.62506866455078
    9. ' ' → logprob: -18.00006866455078
    10. ',p' → logprob: -18.25006866455078

Token 177: ' segments' (ID: 33749)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.3235624134540558
    2. 'segments' → logprob: -1.4485623836517334
    3. 'current' → logprob: -3.6985623836517334
    4. 'path' → logprob: -4.8235626220703125
    5. 'prev' → logprob: -5.8235626220703125
    6. ' parts' → logprob: -6.4485626220703125
    7. 'partition' → logprob: -6.9485626220703125
    8. 'part' → logprob: -7.3235626220703125
    9. 'previous' → logprob: -7.3235626220703125
    10. ' segments' → logprob: -7.5735626220703125

Token 178: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4773263931274414
    2. '):' → logprob: -1.6023263931274414
    3. ')' → logprob: -1.7273263931274414
    4. ':)' → logprob: -8.852326393127441
    5. '):
' → logprob: -9.102326393127441
    6. ' ):' → logprob: -10.102326393127441
    7. '   ' → logprob: -10.477326393127441
    8. ' )' → logprob: -10.727326393127441
    9. ':list' → logprob: -11.727326393127441
    10. '):

' → logprob: -11.977326393127441

Token 179: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00269787828437984
    2. 'list' → logprob: -6.002697944641113
    3. 'Tuple' → logprob: -9.002697944641113
    4. ')' → logprob: -9.377697944641113
    5. ' List' → logprob: -11.627697944641113
    6. 'tuple' → logprob: -12.752697944641113
    7. ' list' → logprob: -13.752697944641113
    8. '[List' → logprob: -13.752697944641113
    9. 'int' → logprob: -15.502697944641113
    10. '[])' → logprob: -16.002696990966797

Token 180: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.2200749754119897e-06
    2. ')' → logprob: -14.000001907348633
    3. 'int' → logprob: -14.000001907348633
    4. '[' → logprob: -15.625001907348633
    5. '[str' → logprob: -16.000001907348633
    6. '<int' → logprob: -16.625001907348633
    7. '[Int' → logprob: -17.875001907348633
    8. '[List' → logprob: -18.625001907348633
    9. ']int' → logprob: -19.250001907348633
    10. '   ' → logprob: -19.375001907348633

Token 181: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.25197476148605347
    2. ')' → logprob: -1.5019748210906982
    3. ']):' → logprob: -11.251975059509277
    4. '):' → logprob: -11.376975059509277
    5. '))' → logprob: -12.251975059509277
    6. ']' → logprob: -12.251975059509277
    7. '   ' → logprob: -13.126975059509277
    8. ''])' → logprob: -13.376975059509277
    9. '>)' → logprob: -13.376975059509277
    10. ' )' → logprob: -13.751975059509277

Token 182: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39722877740859985
    2. ')' → logprob: -1.272228717803955
    3. ')->' → logprob: -4.272228717803955
    4. ' ->' → logprob: -4.397228717803955
    5. '):' → logprob: -4.647228717803955
    6. '->' → logprob: -5.022228717803955
    7. '   ' → logprob: -5.772228717803955
    8. '       ' → logprob: -6.647228717803955
    9. '(self' → logprob: -8.397229194641113
    10. '():' → logprob: -8.522229194641113

Token 183: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003322473494336009
    2. 'Optional' → logprob: -8.50033187866211
    3. ' int' → logprob: -9.12533187866211
    4. '[int' → logprob: -11.37533187866211
    5. '(int' → logprob: -12.50033187866211
    6. 'Union' → logprob: -12.75033187866211
    7. 'None' → logprob: -14.50033187866211
    8. ' Optional' → logprob: -14.75033187866211
    9. 'float' → logprob: -15.62533187866211
    10. 'Int' → logprob: -16.25033187866211

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009412388317286968
    2. '):' → logprob: -7.125941276550293
    3. ':
' → logprob: -9.250941276550293
    4. '       ' → logprob: -10.875941276550293
    5. '   ' → logprob: -11.625941276550293
    6. ')' → logprob: -12.375941276550293
    7. '():' → logprob: -12.875941276550293
    8. ',' → logprob: -13.625941276550293
    9. '):
' → logprob: -13.750941276550293
    10. ':**' → logprob: -14.000941276550293

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006840797723270953
    2. ' if' → logprob: -8.000683784484863
    3. '<|end|>' → logprob: -8.375683784484863
    4. ')' → logprob: -10.250683784484863
    5. 'if' → logprob: -10.875683784484863
    6. ',' → logprob: -11.375683784484863
    7. '        ' → logprob: -11.500683784484863
    8. '   ' → logprob: -11.500683784484863
    9. ' ' → logprob: -11.625683784484863
    10. '...' → logprob: -12.375683784484863

Token 186: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09629197418689728
    2. '       ' → logprob: -2.971292018890381
    3. ' if' → logprob: -3.221292018890381
    4. '        ' → logprob: -7.721292018890381
    5. '#' → logprob: -9.721291542053223
    6. 'n' → logprob: -9.971291542053223
    7. '...' → logprob: -10.596291542053223
    8. '   ' → logprob: -10.596291542053223
    9. 'pass' → logprob: -10.971291542053223
    10. ' ' → logprob: -11.596291542053223

Token 187: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.003177952254191041
    2. ' index' → logprob: -5.753178119659424
    3. 'self' → logprob: -16.253177642822266
    4. '   ' → logprob: -16.503177642822266
    5. '       ' → logprob: -17.003177642822266
    6. '(index' → logprob: -17.003177642822266
    7. 'len' → logprob: -17.878177642822266
    8. '	index' → logprob: -17.878177642822266
    9. ' ' → logprob: -18.503177642822266
    10. '#index' → logprob: -18.753177642822266

Token 188: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.32622334361076355
    2. '>=' → logprob: -1.326223373413086
    3. ' ==' → logprob: -4.701223373413086
    4. ' >=' → logprob: -5.576223373413086
    5. '=' → logprob: -13.201223373413086
    6. '>' → logprob: -13.201223373413086
    7. '```' → logprob: -14.451223373413086
    8. ']>=' → logprob: -14.701223373413086
    9. '===' → logprob: -14.951223373413086
    10. ')' → logprob: -15.076223373413086

Token 189: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016325322212651372
    2. 'len' → logprob: -9.250163078308105
    3. ' self' → logprob: -9.625163078308105
    4. '       ' → logprob: -14.125163078308105
    5. '   ' → logprob: -15.500163078308105
    6. '
' → logprob: -16.375164031982422
    7. ' len' → logprob: -17.000164031982422
    8. '	self' → logprob: -19.375164031982422
    9. '```' → logprob: -19.375164031982422
    10. ' ' → logprob: -19.500164031982422

Token 190: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.00021307668066583574
    2. 'length' → logprob: -8.625212669372559
    3. '.' → logprob: -10.375212669372559
    4. '.len' → logprob: -14.000212669372559
    5. ' .' → logprob: -14.750212669372559
    6. '.number' → logprob: -15.125212669372559
    7. ':length' → logprob: -15.125212669372559
    8. '.l' → logprob: -15.500212669372559
    9. 'ength' → logprob: -16.625213623046875
    10. '	length' → logprob: -17.375213623046875

Token 191: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010484098456799984
    2. ':
' → logprob: -5.010484218597412
    3. ' and' → logprob: -5.760484218597412
    4. 'and' → logprob: -7.510484218597412
    5. ' or' → logprob: -10.135483741760254
    6. ' :' → logprob: -11.635483741760254
    7. ':return' → logprob: -11.635483741760254
    8. '   ' → logprob: -13.135483741760254
    9. 'or' → logprob: -13.510483741760254
    10. '):' → logprob: -13.760483741760254

Token 192: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09651411324739456
    2. ':' → logprob: -3.4715142250061035
    3. ' if' → logprob: -3.4715142250061035
    4. '           ' → logprob: -3.8465142250061035
    5. 'if' → logprob: -5.4715142250061035
    6. '   ' → logprob: -5.8465142250061035
    7. ' and' → logprob: -7.7215142250061035
    8. 'return' → logprob: -8.096513748168945
    9. '<|end|>' → logprob: -8.846513748168945
    10. ' return' → logprob: -9.096513748168945

Token 193: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.048835691064596176
    2. ' if' → logprob: -3.2988357543945312
    3. '       ' → logprob: -4.548835754394531
    4. '           ' → logprob: -9.298835754394531
    5. 'return' → logprob: -10.173835754394531
    6. '   ' → logprob: -11.048835754394531
    7. '#' → logprob: -11.923835754394531
    8. ' ' → logprob: -13.298835754394531
    9. ' return' → logprob: -14.423835754394531
    10. '
' → logprob: -14.548835754394531

Token 194: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20141372084617615
    2. ' len' → logprob: -1.7014137506484985
    3. '(len' → logprob: -14.951414108276367
    4. '   ' → logprob: -17.576414108276367
    5. '
' → logprob: -18.076414108276367
    6. '	len' → logprob: -18.076414108276367
    7. '[len' → logprob: -18.326414108276367
    8. '=len' → logprob: -18.451414108276367
    9. ',len' → logprob: -18.951414108276367
    10. '<len' → logprob: -18.951414108276367

Token 195: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.836499985889532e-05
    2. 'segments' → logprob: -9.7500581741333
    3. '(
' → logprob: -17.750059127807617
    4. ' (' → logprob: -17.750059127807617
    5. '(parts' → logprob: -17.750059127807617
    6. ' segments' → logprob: -18.375059127807617
    7. '(segment' → logprob: -19.125059127807617
    8. '(seg' → logprob: -19.250059127807617
    9. '(s' → logprob: -19.625059127807617
    10. 'Segments' → logprob: -19.875059127807617

Token 196: 'segments' (ID: 110314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931732296943665
    2. 'segments' → logprob: -0.6931732296943665
    3. ' segments' → logprob: -10.5681734085083
    4. 'Segments' → logprob: -15.5681734085083
    5. '_segments' → logprob: -16.693172454833984
    6. '(seg' → logprob: -16.943172454833984
    7. '(segment' → logprob: -16.943172454833984
    8. '(parts' → logprob: -17.443172454833984
    9. ')' → logprob: -17.568172454833984
    10. 'seg' → logprob: -17.568172454833984

Token 197: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033748385030776262
    2. '<' → logprob: -5.753375053405762
    3. '>=' → logprob: -9.753375053405762
    4. ')<' → logprob: -9.753375053405762
    5. ' <' → logprob: -10.253375053405762
    6. ')>=' → logprob: -10.878375053405762
    7. '()' → logprob: -11.753375053405762
    8. '>' → logprob: -12.253375053405762
    9. ' >=' → logprob: -12.378375053405762
    10. ' )' → logprob: -12.503375053405762

Token 198: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08912954479455948
    2. ' <' → logprob: -2.7141294479370117
    3. '>=' → logprob: -4.089129447937012
    4. ' >=' → logprob: -6.464129447937012
    5. '()<' → logprob: -8.464129447937012
    6. ')' → logprob: -9.089129447937012
    7. '<=' → logprob: -9.214129447937012
    8. '>' → logprob: -9.339129447937012
    9. '<|end|>' → logprob: -9.589129447937012
    10. ' ' → logprob: -11.214129447937012

Token 199: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014072739577386528
    2. ' ' → logprob: -8.875141143798828
    3. '=' → logprob: -14.750141143798828
    4. '```' → logprob: -16.000141143798828
    5. '   ' → logprob: -16.500141143798828
    6. '>' → logprob: -16.625141143798828
    7. '0' → logprob: -16.750141143798828
    8. '<|end|>' → logprob: -17.250141143798828
    9. '[' → logprob: -17.500141143798828
    10. '.' → logprob: -18.250141143798828

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.32392441527918e-05
    2. ' ' → logprob: -10.125053405761719
    3. '0' → logprob: -11.500053405761719
    4. '=' → logprob: -12.875053405761719
    5. '```' → logprob: -16.18755340576172
    6. '<|end|>' → logprob: -16.62505340576172
    7. '   ' → logprob: -17.50005340576172
    8. '[' → logprob: -17.56255340576172
    9. '>' → logprob: -17.56255340576172
    10. '
' → logprob: -17.81255340576172

Token 201: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1620716005563736
    2. ':
' → logprob: -1.9120715856552124
    3. ' and' → logprob: -6.412071704864502
    4. 'and' → logprob: -8.912071228027344
    5. ':return' → logprob: -10.037071228027344
    6. ' :' → logprob: -12.162071228027344
    7. '):' → logprob: -12.287071228027344
    8. ':

' → logprob: -12.537071228027344
    9. '           ' → logprob: -12.662071228027344
    10. ':
' → logprob: -12.912071228027344

Token 202: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00805821642279625
    2. ':' → logprob: -5.008058071136475
    3. ' and' → logprob: -7.883058071136475
    4. '               ' → logprob: -8.008058547973633
    5. 'return' → logprob: -8.633058547973633
    6. ' return' → logprob: -9.133058547973633
    7. ',' → logprob: -9.383058547973633
    8. ')' → logprob: -9.758058547973633
    9. '       ' → logprob: -9.883058547973633
    10. '):' → logprob: -9.883058547973633

Token 203: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.34743732213974
    2. ' return' → logprob: -1.5974373817443848
    3. '           ' → logprob: -3.0974373817443848
    4. 'max' → logprob: -3.3474373817443848
    5. ' max' → logprob: -5.222437381744385
    6. 'diff' → logprob: -6.097437381744385
    7. 'abs' → logprob: -7.472437381744385
    8. '   ' → logprob: -7.972437381744385
    9. 'nums' → logprob: -8.097436904907227
    10. 'dif' → logprob: -8.097436904907227

Token 204: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03434154391288757
    2. 'abs' → logprob: -3.40934157371521
    3. '0' → logprob: -7.909341335296631
    4. ' max' → logprob: -9.159341812133789
    5. 'self' → logprob: -9.659341812133789
    6. 'segments' → logprob: -9.659341812133789
    7. '(max' → logprob: -9.909341812133789
    8. 'min' → logprob: -11.284341812133789
    9. 'float' → logprob: -11.534341812133789
    10. 'int' → logprob: -11.659341812133789

Token 205: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.061054359131958e-06
    2. 'segments' → logprob: -11.750007629394531
    3. '(
' → logprob: -16.62500762939453
    4. ' (' → logprob: -17.00000762939453
    5. ')' → logprob: -18.62500762939453
    6. '(seg' → logprob: -18.87500762939453
    7. '([' → logprob: -19.50000762939453
    8. '(parts' → logprob: -19.87500762939453
    9. ' segments' → logprob: -19.87500762939453
    10. '(segment' → logprob: -20.00000762939453

Token 206: 'segments' (ID: 110314)
  Prédit: 'segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.018177449703216553
    2. '(' → logprob: -4.018177509307861
    3. ' segments' → logprob: -10.643177032470703
    4. ')' → logprob: -12.768177032470703
    5. 'seg' → logprob: -15.518177032470703
    6. '_segments' → logprob: -15.518177032470703
    7. '[' → logprob: -15.643177032470703
    8. 's' → logprob: -16.393177032470703
    9. 'Segments' → logprob: -16.518177032470703
    10. '([' → logprob: -17.393177032470703

Token 207: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024834630312398076
    2. ')-' → logprob: -8.625247955322266
    3. ' )' → logprob: -10.250247955322266
    4. ' -' → logprob: -11.375247955322266
    5. '-' → logprob: -12.000247955322266
    6. '       ' → logprob: -12.375247955322266
    7. '-)' → logprob: -12.375247955322266
    8. '           ' → logprob: -12.625247955322266
    9. '")' → logprob: -13.500247955322266
    10. '）' → logprob: -15.000247955322266

Token 208: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029756855219602585
    2. '-' → logprob: -3.529756784439087
    3. ' ' → logprob: -12.279756546020508
    4. ' ' → logprob: -13.779756546020508
    5. '-min' → logprob: -15.154756546020508
    6. '   ' → logprob: -15.779756546020508
    7. ' –' → logprob: -15.904756546020508
    8. '−' → logprob: -17.279756546020508
    9. '  ' → logprob: -17.404756546020508
    10. '–' → logprob: -17.654756546020508

Token 209: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.008615161292254925
    2. ' min' → logprob: -4.758615016937256
    3. '(min' → logprob: -14.883615493774414
    4. '	min' → logprob: -15.633615493774414
    5. 'max' → logprob: -17.883615493774414
    6. '
' → logprob: -18.133615493774414
    7. '.min' → logprob: -18.133615493774414
    8. '-min' → logprob: -18.383615493774414
    9. '[min' → logprob: -18.383615493774414
    10. ' ' → logprob: -18.633615493774414

Token 210: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. 'segments' → logprob: -14.875000953674316
    3. '(
' → logprob: -16.0
    4. ' (' → logprob: -16.0
    5. '<|end|>' → logprob: -17.625
    6. '(max' → logprob: -17.875
    7. '```' → logprob: -19.0
    8. '(min' → logprob: -19.25
    9. 'max' → logprob: -19.375
    10. ')' → logprob: -19.375

Token 211: 'segments' (ID: 110314)
  Prédit: 'segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.12708044052124023
    2. '(' → logprob: -2.1270804405212402
    3. ' segments' → logprob: -9.377080917358398
    4. ')' → logprob: -9.627080917358398
    5. '_segments' → logprob: -14.002080917358398
    6. 'Segments' → logprob: -14.752080917358398
    7. 'seg' → logprob: -15.627080917358398
    8. 'segment' → logprob: -16.1270809173584
    9. '[' → logprob: -16.6270809173584
    10. '<|end|>' → logprob: -17.0020809173584

Token 212: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13641108572483063
    2. ')
' → logprob: -2.136411190032959
    3. '       ' → logprob: -4.761411190032959
    4. '           ' → logprob: -7.261411190032959
    5. 'else' → logprob: -9.5114107131958
    6. ')return' → logprob: -10.6364107131958
    7. 'return' → logprob: -11.0114107131958
    8. ' )' → logprob: -11.0114107131958
    9. '
' → logprob: -12.0114107131958
    10. '   ' → logprob: -12.1364107131958

Token 213: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009224193054251373
    2. '
' → logprob: -7.375922203063965
    3. '        
' → logprob: -9.125922203063965
    4. '           ' → logprob: -9.250922203063965
    5. 'return' → logprob: -10.375922203063965
    6. 'else' → logprob: -10.500922203063965
    7. ' else' → logprob: -11.500922203063965
    8. '        ' → logprob: -12.750922203063965
    9. '   ' → logprob: -12.750922203063965
    10. ' return' → logprob: -12.875922203063965

Token 214: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005178258754312992
    2. 'else' (adapté à ' else') → logprob: -5.755178451538086
    3. ' else' → logprob: -6.505178451538086
    4. '           ' → logprob: -8.005178451538086
    5. 'return' → logprob: -9.380178451538086
    6. '
' → logprob: -9.880178451538086
    7. '   ' → logprob: -11.630178451538086
    8. ' return' → logprob: -11.880178451538086
    9. '               ' → logprob: -12.380178451538086
    10. '        ' → logprob: -12.505178451538086

Token 215: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03075622394680977
    2. '               ' → logprob: -3.7807562351226807
    3. '       ' → logprob: -5.530755996704102
    4. ' return' → logprob: -6.905755996704102
    5. ':' → logprob: -7.780755996704102
    6. 'return' → logprob: -7.780755996704102
    7. '          ' → logprob: -7.780755996704102
    8. ',' → logprob: -8.030755996704102
    9. '   ' → logprob: -8.655755996704102
    10. '
' → logprob: -8.905755996704102

Token 216: '               ' (ID: 506)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.4991651475429535
    2. '           ' → logprob: -0.9991651773452759
    3. '       ' → logprob: -4.624165058135986
    4. 'return' → logprob: -4.874165058135986
    5. ' float' → logprob: -5.124165058135986
    6. '999' → logprob: -7.874165058135986
    7. '   ' → logprob: -7.999165058135986
    8. '               ' → logprob: -8.749165534973145
    9. '10' → logprob: -8.874165534973145
    10. ' return' → logprob: -9.249165534973145

Token 217: ' return' (ID: 622)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.2564924359321594
    2. 'return' (adapté à ' return') → logprob: -1.8814923763275146
    3. '           ' → logprob: -2.7564923763275146
    4. ' float' → logprob: -5.131492614746094
    5. ' return' → logprob: -6.381492614746094
    6. '       ' → logprob: -6.756492614746094
    7. '               ' → logprob: -7.131492614746094
    8. '999' → logprob: -8.006492614746094
    9. '   ' → logprob: -8.631492614746094
    10. '10' → logprob: -9.006492614746094

Token 218: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0005019200034439564
    2. '10' → logprob: -8.25050163269043
    3. ' float' → logprob: -8.50050163269043
    4. '999' → logprob: -10.62550163269043
    5. '   ' → logprob: -12.37550163269043
    6. '100' → logprob: -12.50050163269043
    7. '1' → logprob: -13.62550163269043
    8. 'int' → logprob: -13.87550163269043
    9. ' ' → logprob: -14.25050163269043
    10. '0' → logprob: -14.37550163269043

Token 219: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.43807002902030945
    2. '('' → logprob: -1.0630700588226318
    3. ''' → logprob: -4.813069820404053
    4. ''s' → logprob: -9.313070297241211
    5. 'inf' → logprob: -9.313070297241211
    6. ''inc' → logprob: -9.313070297241211
    7. ''ins' → logprob: -9.813070297241211
    8. ''t' → logprob: -9.813070297241211
    9. '"' → logprob: -9.813070297241211
    10. ''im' → logprob: -9.938070297241211

Token 220: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -7.147740689106286e-05
    2. ''in' → logprob: -9.75007152557373
    3. ''' → logprob: -11.25007152557373
    4. '-inf' → logprob: -17.500070571899414
    5. ''s' → logprob: -17.875070571899414
    6. 'info' → logprob: -17.875070571899414
    7. '
' → logprob: -18.125070571899414
    8. '_inf' → logprob: -18.375070571899414
    9. 'in' → logprob: -18.500070571899414
    10. ' inf' → logprob: -18.875070571899414

Token 221: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001877827919088304
    2. '')' → logprob: -6.376877784729004
    3. '       ' → logprob: -8.876877784729004
    4. ' )' → logprob: -11.376877784729004
    5. ')
' → logprob: -12.001877784729004
    6. '()' → logprob: -12.126877784729004
    7. '}' → logprob: -13.001877784729004
    8. ')return' → logprob: -13.001877784729004
    9. '())' → logprob: -13.126877784729004
    10. '")' → logprob: -13.251877784729004

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41889360547065735
    2. '
' → logprob: -1.918893575668335
    3. '   ' → logprob: -2.043893575668335
    4. ')' → logprob: -4.168893814086914
    5. '    
' → logprob: -4.293893814086914
    6. '        
' → logprob: -4.543893814086914
    7. 'n' → logprob: -5.043893814086914
    8. '    ' → logprob: -5.668893814086914
    9. '<|end|>' → logprob: -6.043893814086914
    10. ' 
' → logprob: -6.543893814086914

Token 223: ' key' (ID: 2140)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00697584031149745
    2. 'key' (adapté à ' key') → logprob: -5.1319756507873535
    3. 'best' → logprob: -7.3819756507873535
    4. ' min' → logprob: -8.381976127624512
    5. '       ' → logprob: -10.131976127624512
    6. 'minimal' → logprob: -10.381976127624512
    7. ' key' → logprob: -10.506976127624512
    8. 'minimum' → logprob: -10.631976127624512
    9. 'if' → logprob: -10.756976127624512
    10. 'res' → logprob: -11.131976127624512

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519373297691345
    2. '=' → logprob: -1.5019373893737793
    3. ')' → logprob: -12.751936912536621
    4. ':' → logprob: -13.251936912536621
    5. ',' → logprob: -13.751936912536621
    6. '=(' → logprob: -14.001936912536621
    7. ' =(' → logprob: -14.126936912536621
    8. '<|end|>' → logprob: -15.251936912536621
    9. '```' → logprob: -15.876936912536621
    10. ' ' → logprob: -16.126937866210938

Token 225: ' (' (ID: 350)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.4776894152164459
    2. 'index' → logprob: -0.9776893854141235
    3. ' (' → logprob: -5.852689266204834
    4. ' index' → logprob: -7.602689266204834
    5. '(' → logprob: -8.477689743041992
    6. '(key' → logprob: -12.227689743041992
    7. '[index' → logprob: -12.227689743041992
    8. ',index' → logprob: -13.227689743041992
    9. '#index' → logprob: -13.227689743041992
    10. '(idx' → logprob: -13.727689743041992

Token 226: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.2664456789934775e-06
    2. ' index' → logprob: -13.625000953674316
    3. ')' → logprob: -21.250001907348633
    4. ' ' → logprob: -21.625001907348633
    5. '(index' → logprob: -21.750001907348633
    6. '#index' → logprob: -22.500001907348633
    7. '@index' → logprob: -22.500001907348633
    8. '[index' → logprob: -22.625001907348633
    9. '   ' → logprob: -22.625001907348633
    10. 'id' → logprob: -22.750001907348633

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.723973582556937e-05
    2. 'tuple' → logprob: -11.750017166137695
    3. ',
' → logprob: -12.125017166137695
    4. ' ,' → logprob: -13.375017166137695
    5. ',)' → logprob: -13.750017166137695
    6. ',len' → logprob: -14.000017166137695
    7. ')' → logprob: -16.000017166137695
    8. ' tuple' → logprob: -16.125017166137695
    9. 'len' → logprob: -16.875017166137695
    10. '(tuple' → logprob: -17.375017166137695

Token 228: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0006290406454354525
    2. ' tuple' → logprob: -7.75062894821167
    3. 'len' → logprob: -8.875629425048828
    4. ')' → logprob: -9.875629425048828
    5. '(tuple' → logprob: -12.000629425048828
    6. '))' → logprob: -15.500629425048828
    7. 'tu' → logprob: -16.000629425048828
    8. '),' → logprob: -16.000629425048828
    9. '
' → logprob: -16.125629425048828
    10. ')
' → logprob: -16.500629425048828

Token 229: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.505351095460355e-05
    2. 'segments' → logprob: -9.500075340270996
    3. ')' → logprob: -17.12507438659668
    4. ' segments' → logprob: -17.37507438659668
    5. '(sorted' → logprob: -17.75007438659668
    6. ' (' → logprob: -17.87507438659668
    7. 'Segments' → logprob: -18.00007438659668
    8. '(
' → logprob: -18.12507438659668
    9. '(segment' → logprob: -18.25007438659668
    10. '(seg' → logprob: -18.87507438659668

Token 230: 'segments' (ID: 110314)
  Prédit: 'segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -5.5577775128767826e-06
    2. ' segments' → logprob: -12.125005722045898
    3. ')' → logprob: -17.6250057220459
    4. '(' → logprob: -18.2500057220459
    5. '[' → logprob: -18.3750057220459
    6. '_segments' → logprob: -18.6250057220459
    7. 'seg' → logprob: -19.0000057220459
    8. 'segment' → logprob: -19.6250057220459
    9. 'Segments' → logprob: -19.7500057220459
    10. 'sorted' → logprob: -19.7500057220459

Token 231: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0023390199057757854
    2. '))
' → logprob: -6.127338886260986
    3. ')' → logprob: -9.002339363098145
    4. ' ))' → logprob: -11.127339363098145
    5. '))

' → logprob: -11.627339363098145
    6. '()))' → logprob: -12.252339363098145
    7. ')
' → logprob: -14.252339363098145
    8. ')))' → logprob: -14.627339363098145
    9. '),' → logprob: -15.002339363098145
    10. ' ))
' → logprob: -16.002338409423828

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6757603287696838
    2. ')' → logprob: -1.425760269165039
    3. ':' → logprob: -2.300760269165039
    4. '
' → logprob: -2.300760269165039
    5. ' if' → logprob: -4.050760269165039
    6. '   ' → logprob: -4.800760269165039
    7. 'if' → logprob: -5.175760269165039
    8. ' ' → logprob: -5.550760269165039
    9. '<|end|>' → logprob: -5.550760269165039
    10. ':
' → logprob: -6.675760269165039

Token 233: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.579336404800415
    2. 'if' (adapté à ' if') → logprob: -0.829336404800415
    3. '       ' → logprob: -5.704336166381836
    4. ')' → logprob: -10.329336166381836
    5. '   ' → logprob: -11.329336166381836
    6. '	if' → logprob: -11.954336166381836
    7. 'If' → logprob: -13.454336166381836
    8. ',' → logprob: -13.579336166381836
    9. '        
' → logprob: -13.704336166381836
    10. '
' → logprob: -14.079336166381836

Token 234: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.20141343772411346
    2. ' key' → logprob: -1.7014133930206299
    3. '_key' → logprob: -16.201414108276367
    4. '   ' → logprob: -17.451414108276367
    5. '	key' → logprob: -17.701414108276367
    6. 'Key' → logprob: -17.826414108276367
    7. '       ' → logprob: -19.451414108276367
    8. ' ' → logprob: -19.701414108276367
    9. '           ' → logprob: -20.076414108276367
    10. '
' → logprob: -20.576414108276367

Token 235: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34853750467300415
    2. 'in' → logprob: -1.2235374450683594
    3. ')' → logprob: -9.47353744506836
    4. ']' → logprob: -11.47353744506836
    5. '	in' → logprob: -13.09853744506836
    6. ' ' → logprob: -13.97353744506836
    7. 'n' → logprob: -14.09853744506836
    8. 'In' → logprob: -14.47353744506836
    9. '   ' → logprob: -14.97353744506836
    10. 's' → logprob: -16.22353744506836

Token 236: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018165510147809982
    2. ' self' → logprob: -4.018165588378906
    3. '       ' → logprob: -11.268165588378906
    4. '           ' → logprob: -13.518165588378906
    5. '(self' → logprob: -14.643165588378906
    6. '	self' → logprob: -15.393165588378906
    7. '   ' → logprob: -15.643165588378906
    8. '
' → logprob: -15.768165588378906
    9. '[self' → logprob: -15.768165588378906
    10. '=self' → logprob: -16.768165588378906

Token 237: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -7.088138227118179e-05
    2. '.' → logprob: -9.875070571899414
    3. '.memory' → logprob: -11.625070571899414
    4. '.mem' → logprob: -11.750070571899414
    5. 'memo' → logprob: -13.500070571899414
    6. '.m' → logprob: -14.500070571899414
    7. ' .' → logprob: -15.500070571899414
    8. '.cache' → logprob: -16.000070571899414
    9. '.mime' → logprob: -16.625070571899414
    10. '.mu' → logprob: -16.625070571899414

Token 238: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04887143895030022
    2. ':
' → logprob: -3.0488715171813965
    3. ':return' → logprob: -8.298871040344238
    4. '):' → logprob: -10.798871040344238
    5. '):
' → logprob: -11.923871040344238
    6. ' :' → logprob: -12.298871040344238
    7. '       ' → logprob: -13.798871040344238
    8. ':
' → logprob: -14.298871040344238
    9. ' :
' → logprob: -14.423871040344238
    10. ':

' → logprob: -14.673871040344238

Token 239: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012491409666836262
    2. 'return' → logprob: -4.762491226196289
    3. ' return' → logprob: -6.512491226196289
    4. ':return' → logprob: -7.012491226196289
    5. ':' → logprob: -7.262491226196289
    6. ':
' → logprob: -7.387491226196289
    7. '       ' → logprob: -9.137491226196289
    8. '):
' → logprob: -10.762491226196289
    9. '<|end|>' → logprob: -11.762491226196289
    10. '   ' → logprob: -12.012491226196289

Token 240: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0069196149706840515
    2. ' return' → logprob: -5.0069193840026855
    3. '           ' → logprob: -8.506919860839844
    4. '   ' → logprob: -14.006919860839844
    5. '       ' → logprob: -14.256919860839844
    6. '
' → logprob: -15.131919860839844
    7. ':return' → logprob: -15.756919860839844
    8. '	return' → logprob: -16.131919860839844
    9. '               ' → logprob: -16.256919860839844
    10. ')return' → logprob: -16.631919860839844

Token 241: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002475777640938759
    2. ' self' → logprob: -6.002475738525391
    3. '[self' → logprob: -17.25247573852539
    4. '           ' → logprob: -18.12747573852539
    5. '       ' → logprob: -18.25247573852539
    6. '(self' → logprob: -18.37747573852539
    7. '	self' → logprob: -18.87747573852539
    8. '
' → logprob: -19.50247573852539
    9. '   ' → logprob: -19.87747573852539
    10. 'Self' → logprob: -20.37747573852539

Token 242: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.0015890118665993214
    2. '.' → logprob: -6.501588821411133
    3. '.memory' → logprob: -10.501588821411133
    4. ' .' → logprob: -10.626588821411133
    5. '.m' → logprob: -11.001588821411133
    6. '.mem' → logprob: -11.876588821411133
    7. '.mime' → logprob: -12.251588821411133
    8. '.motor' → logprob: -13.001588821411133
    9. '.mu' → logprob: -13.626588821411133
    10. 'memo' → logprob: -14.376588821411133

Token 243: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: 0.0
    2. 'key' → logprob: -17.875
    3. '[' → logprob: -18.375
    4. '[token' → logprob: -20.25
    5. '(key' → logprob: -20.5
    6. '[value' → logprob: -20.875
    7. '```' → logprob: -20.875
    8. '_key' → logprob: -21.0
    9. ',key' → logprob: -21.375
    10. '$key' → logprob: -21.5

Token 244: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.8908587662735954e-05
    2. ')]' → logprob: -12.000019073486328
    3. ' ]' → logprob: -12.250019073486328
    4. ']
' → logprob: -12.375019073486328
    5. ')' → logprob: -13.250019073486328
    6. ']

' → logprob: -13.625019073486328
    7. '])' → logprob: -15.125019073486328
    8. ']()' → logprob: -16.000019073486328
    9. '()]' → logprob: -16.125019073486328
    10. ']}' → logprob: -17.125019073486328

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008775289170444012
    2. '   ' → logprob: -5.633775234222412
    3. ' next' → logprob: -6.758775234222412
    4. 'result' → logprob: -7.258775234222412
    5. '        
' → logprob: -7.383775234222412
    6. 'next' → logprob: -7.758775234222412
    7. ' min' → logprob: -8.63377571105957
    8. 'number' → logprob: -8.63377571105957
    9. ' result' → logprob: -8.88377571105957
    10. ' number' → logprob: -8.88377571105957

Token 246: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.004749337211251259
    2. 'result' → logprob: -6.004749298095703
    3. '       ' → logprob: -6.754749298095703
    4. ' min' → logprob: -7.504749298095703
    5. 'res' → logprob: -7.879749298095703
    6. 'best' → logprob: -8.754749298095703
    7. 'minimum' → logprob: -12.004749298095703
    8. ' result' → logprob: -12.629749298095703
    9. 'minimal' → logprob: -12.879749298095703
    10. 'ans' → logprob: -13.129749298095703

Token 247: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.0006928971270099282
    2. 'diff' → logprob: -8.125693321228027
    3. '_val' → logprob: -8.750693321228027
    4. '_difference' → logprob: -9.000693321228027
    5. '_value' → logprob: -9.125693321228027
    6. '_result' → logprob: -13.500693321228027
    7. '_' → logprob: -13.625693321228027
    8. '_d' → logprob: -14.000693321228027
    9. 'difference' → logprob: -14.000693321228027
    10. '_dist' → logprob: -14.625693321228027

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282773315906525
    2. '=' → logprob: -2.237827777862549
    3. '   ' → logprob: -13.61282730102539
    4. '       ' → logprob: -13.73782730102539
    5. ',' → logprob: -14.11282730102539
    6. ' ' → logprob: -14.11282730102539
    7. ':' → logprob: -14.86282730102539
    8. '        ' → logprob: -15.36282730102539
    9. ')' → logprob: -15.48782730102539
    10. '    ' → logprob: -15.61282730102539

Token 249: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0002613358374219388
    2. ' float' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.500261306762695
    4. '	float' → logprob: -18.625261306762695
    5. '=float' → logprob: -19.375261306762695
    6. ',float' → logprob: -19.375261306762695
    7. '<float' → logprob: -19.750261306762695
    8. '(float' → logprob: -19.750261306762695
    9. 'flo' → logprob: -20.375261306762695
    10. '       ' → logprob: -21.250261306762695

Token 250: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.1186566047836095e-05
    2. ''in' → logprob: -10.500031471252441
    3. 'inf' → logprob: -13.500031471252441
    4. '(' → logprob: -14.125031471252441
    5. ''s' → logprob: -14.375031471252441
    6. ''' → logprob: -15.125031471252441
    7. '(in' → logprob: -16.250030517578125
    8. '("' → logprob: -16.625030517578125
    9. ''inc' → logprob: -16.750030517578125
    10. '_inf' → logprob: -16.875030517578125

Token 251: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. ''' → logprob: -17.5
    3. '')' → logprob: -18.25
    4. 'info' → logprob: -20.75
    5. ''in' → logprob: -20.875
    6. ' inf' → logprob: -20.875
    7. 'in' → logprob: -21.625
    8. 'pos' → logprob: -22.0
    9. 'max' → logprob: -22.125
    10. '('' → logprob: -22.375

Token 252: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036385576240718365
    2. ')
' → logprob: -6.128638744354248
    3. '')' → logprob: -6.878638744354248
    4. '       ' → logprob: -7.878638744354248
    5. ' )' → logprob: -10.62863826751709
    6. '')
' → logprob: -11.75363826751709
    7. '   ' → logprob: -12.50363826751709
    8. ')

' → logprob: -12.62863826751709
    9. ')
' → logprob: -14.00363826751709
    10. ')'' → logprob: -14.50363826751709

Token 253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35434943437576294
    2. ' for' → logprob: -1.8543493747711182
    3. 'for' → logprob: -2.229349374771118
    4. '        
' → logprob: -4.229349613189697
    5. '
' → logprob: -4.979349613189697
    6. '   ' → logprob: -5.729349613189697
    7. ' 
' → logprob: -5.729349613189697
    8. '    
' → logprob: -6.104349613189697
    9. ' ' → logprob: -6.979349613189697
    10. '  
' → logprob: -7.479349613189697

Token 254: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08053597807884216
    2. ' for' → logprob: -2.580535888671875
    3. '       ' → logprob: -6.455535888671875
    4. 'num' → logprob: -11.080535888671875
    5. 'current' → logprob: -11.080535888671875
    6. 'end' → logprob: -11.205535888671875
    7. 'segment' → logprob: -12.205535888671875
    8. ' ' → logprob: -12.705535888671875
    9. '        
' → logprob: -12.705535888671875
    10. '   ' → logprob: -12.830535888671875

Token 255: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038063179701566696
    2. ' for' → logprob: -3.2880632877349854
    3. '       ' → logprob: -10.788063049316406
    4. 'end' → logprob: -15.288063049316406
    5. '   ' → logprob: -15.413063049316406
    6. ' i' → logprob: -15.538063049316406
    7. 'i' → logprob: -15.788063049316406
    8. '        
' → logprob: -16.288063049316406
    9. '
' → logprob: -16.913063049316406
    10. 'next' → logprob: -16.913063049316406

Token 256: ' avoid' (ID: 8397)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4425586760044098
    2. ' range' → logprob: -1.6925586462020874
    3. 'for' → logprob: -2.317558765411377
    4. ' for' → logprob: -2.817558765411377
    5. 'self' → logprob: -5.317558765411377
    6. ')' → logprob: -6.192558765411377
    7. ' in' → logprob: -6.567558765411377
    8. ' self' → logprob: -6.692558765411377
    9. 'len' → logprob: -6.817558765411377
    10. 'max' → logprob: -7.317558765411377

Token 257: ' super' (ID: 2539)
  Prédit: ' leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' leading' → logprob: -0.4329037368297577
    2. ' for' → logprob: -2.18290376663208
    3. 'leading' → logprob: -2.43290376663208
    4. ' in' → logprob: -3.30790376663208
    5. 'for' → logprob: -3.93290376663208
    6. ' avoiding' → logprob: -4.05790376663208
    7. ' i' → logprob: -4.68290376663208
    8. 'self' → logprob: -4.93290376663208
    9. 'max' → logprob: -4.93290376663208
    10. 'i' → logprob: -5.80790376663208

Token 258: ' long' (ID: 1701)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.16548188030719757
    2. 'flu' → logprob: -3.0404818058013916
    3. 'long' → logprob: -3.5404818058013916
    4. 'ex' → logprob: -4.165482044219971
    5. 'exp' → logprob: -4.665482044219971
    6. 'optimization' → logprob: -5.165482044219971
    7. ' inefficient' → logprob: -5.665482044219971
    8. 'inear' → logprob: -5.665482044219971
    9. 'expl' → logprob: -5.790482044219971
    10. '_linear' → logprob: -6.040482044219971

Token 259: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.3449830114841461
    2. 'segments' → logprob: -1.4699829816818237
    3. ' loops' → logprob: -3.9699831008911133
    4. 'for' → logprob: -4.844983100891113
    5. ' substr' → logprob: -5.094983100891113
    6. ' for' → logprob: -5.219983100891113
    7. 'ranges' → logprob: -5.844983100891113
    8. ' parts' → logprob: -5.969983100891113
    9. 'loops' → logprob: -6.094983100891113
    10. 'segment' → logprob: -6.219983100891113

Token 260: ' that' (ID: 484)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3948791027069092
    2. 'for' → logprob: -1.1448791027069092
    3. ',' → logprob: -5.019879341125488
    4. '       ' → logprob: -7.394879341125488
    5. '   ' → logprob: -7.769879341125488
    6. ':' → logprob: -8.894879341125488
    7. ' ' → logprob: -10.019879341125488
    8. ' ,' → logprob: -10.394879341125488
    9. ')' → logprob: -10.894879341125488
    10. ' in' → logprob: -11.269879341125488

Token 261: ' are' (ID: 553)
  Prédit: ' could'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' could' → logprob: -0.6998041272163391
    2. ' may' → logprob: -1.5748040676116943
    3. ' might' → logprob: -2.1998040676116943
    4. ' can' → logprob: -2.6998040676116943
    5. ' self' → logprob: -3.3248040676116943
    6. ' exceed' → logprob: -3.6998040676116943
    7. ' are' → logprob: -4.074804306030273
    8. 'self' → logprob: -4.449804306030273
    9. 'could' → logprob: -4.574804306030273
    10. '   ' → logprob: -5.949804306030273

Token 262: ' large' (ID: 4410)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0705478191375732
    2. 'not' → logprob: -1.6955478191375732
    3. ' not' → logprob: -2.1955478191375732
    4. 'unlikely' → logprob: -2.6955478191375732
    5. 'len' → logprob: -2.8205478191375732
    6. 'too' → logprob: -3.1955478191375732
    7. ' too' → logprob: -3.5705478191375732
    8. '0' → logprob: -3.6955478191375732
    9. '100' → logprob: -4.070548057556152
    10. ' self' → logprob: -4.195548057556152

Token 263: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.321101188659668
    2. ',' → logprob: -2.571101188659668
    3. ' in' → logprob: -2.821101188659668
    4. ' numbers' → logprob: -2.821101188659668
    5. 'in' → logprob: -2.946101188659668
    6. 'and' → logprob: -3.071101188659668
    7. 'to' → logprob: -3.071101188659668
    8. 'for' → logprob: -3.071101188659668
    9. 'or' → logprob: -3.196101188659668
    10. '   ' → logprob: -3.196101188659668

Token 264: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5346485376358032
    2. ',' → logprob: -1.6596485376358032
    3. 'for' → logprob: -1.7846485376358032
    4. '       ' → logprob: -2.9096484184265137
    5. '   ' → logprob: -7.284648418426514
    6. ',
' → logprob: -8.159648895263672
    7. ' ,' → logprob: -8.534648895263672
    8. ' in' → logprob: -9.159648895263672
    9. ':' → logprob: -9.784648895263672
    10. ' ' → logprob: -10.034648895263672

Token 265: ' impose' (ID: 68003)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20143194496631622
    2. 'for' → logprob: -2.2014319896698
    3. ' max' → logprob: -3.0764319896698
    4. '       ' → logprob: -4.076431751251221
    5. 'max' → logprob: -4.826431751251221
    6. ' limit' → logprob: -8.826432228088379
    7. 'limit' → logprob: -9.326432228088379
    8. 'n' → logprob: -9.576432228088379
    9. ' n' → logprob: -9.576432228088379
    10. ',' → logprob: -9.826432228088379

Token 266: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.19028536975383759
    2. 'a' → logprob: -1.815285325050354
    3. 'max' → logprob: -5.6902852058410645
    4. '10' → logprob: -6.1902852058410645
    5. ' max' → logprob: -6.1902852058410645
    6. ' some' → logprob: -6.5652852058410645
    7. ' an' → logprob: -7.1902852058410645
    8. '       ' → logprob: -8.815285682678223
    9. 'for' → logprob: -9.190285682678223
    10. 'limit' → logprob: -9.565285682678223

Token 267: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7798550128936768
    2. 'limit' → logprob: -0.9048550128936768
    3. ' limit' → logprob: -2.2798550128936768
    4. ' max' → logprob: -3.7798550128936768
    5. 'maximum' → logprob: -5.529854774475098
    6. ' maximum' → logprob: -6.029854774475098
    7. 'length' → logprob: -6.529854774475098
    8. ' reasonable' → logprob: -6.654854774475098
    9. 'reasonable' → logprob: -6.779854774475098
    10. 'maxlength' → logprob: -7.529854774475098

Token 268: ' segment' (ID: 14806)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.40548038482666016
    2. '_length' → logprob: -1.2804803848266602
    3. 'segment' → logprob: -3.78048038482666
    4. ' segment' → logprob: -4.15548038482666
    5. ' length' → logprob: -5.03048038482666
    6. 'length' → logprob: -5.15548038482666
    7. '_len' → logprob: -5.78048038482666
    8. '_seg' → logprob: -6.90548038482666
    9. 'len' → logprob: -9.03048038482666
    10. '_' → logprob: -9.78048038482666

Token 269: ' length' (ID: 5517)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.5271645188331604
    2. 'length' → logprob: -1.0271644592285156
    3. ' length' → logprob: -3.0271644592285156
    4. '_len' → logprob: -6.152164459228516
    5. 'len' → logprob: -7.152164459228516
    6. '_size' → logprob: -9.027164459228516
    7. 'size' → logprob: -9.277164459228516
    8. '_' → logprob: -9.777164459228516
    9. '=' → logprob: -10.652164459228516
    10. ' size' → logprob: -12.027164459228516

Token 270: '?
' (ID: 3901)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742008447647095
    2. ' =' → logprob: -0.9742008447647095
    3. '       ' → logprob: -9.724201202392578
    4. '   ' → logprob: -10.474201202392578
    5. ',' → logprob: -11.849201202392578
    6. 'for' → logprob: -12.224201202392578
    7. '10' → logprob: -12.349201202392578
    8. ' for' → logprob: -12.474201202392578
    9. '7' → logprob: -13.349201202392578
    10. ' ' → logprob: -13.474201202392578

Token 271: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1774439513683319
    2. 'for' → logprob: -2.3024439811706543
    3. '       ' → logprob: -2.8024439811706543
    4. ' max' → logprob: -7.302443981170654
    5. '   ' → logprob: -7.927443981170654
    6. ' 
' → logprob: -8.427443504333496
    7. ' ' → logprob: -8.802443504333496
    8. 'max' → logprob: -8.802443504333496
    9. '        
' → logprob: -9.427443504333496
    10. ')' → logprob: -9.927443504333496

Token 272: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3427009582519531
    2. 'for' → logprob: -1.8427009582519531
    3. ' max' → logprob: -2.467700958251953
    4. 'max' → logprob: -3.342700958251953
    5. '       ' → logprob: -4.467700958251953
    6. ' segment' → logprob: -10.592700958251953
    7. '        
' → logprob: -10.967700958251953
    8. ' ' → logprob: -11.092700958251953
    9. '   ' → logprob: -11.092700958251953
    10. 'segment' → logprob: -11.342700958251953

Token 273: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8163701295852661
    2. 'max' → logprob: -1.3163701295852661
    3. ' for' → logprob: -1.8163701295852661
    4. ' max' → logprob: -2.0663700103759766
    5. '       ' → logprob: -7.441370010375977
    6. '   ' → logprob: -11.941370010375977
    7. '        
' → logprob: -12.816370010375977
    8. ' ' → logprob: -13.941370010375977
    9. '```' → logprob: -14.441370010375977
    10. '
' → logprob: -14.566370010375977

Token 274: ' problem' (ID: 4792)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08385752886533737
    2. 'for' → logprob: -2.583857536315918
    3. ' max' → logprob: -6.083857536315918
    4. 'max' → logprob: -6.333857536315918
    5. '       ' → logprob: -8.083857536315918
    6. ' in' → logprob: -8.958857536315918
    7. ' range' → logprob: -9.958857536315918
    8. ',' → logprob: -10.083857536315918
    9. ' continue' → logprob: -10.083857536315918
    10. 'range' → logprob: -10.333857536315918

Token 275: ' states' (ID: 9407)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0430965423583984
    2. ':' → logprob: -1.4180965423583984
    3. '=' → logprob: -2.7930965423583984
    4. ' in' → logprob: -3.1680965423583984
    5. ' for' → logprob: -3.1680965423583984
    6. '       ' → logprob: -3.2930965423583984
    7. '<|end|>' → logprob: -3.2930965423583984
    8. 'for' → logprob: -3.4180965423583984
    9. ' continues' → logprob: -3.7930965423583984
    10. '<|end|>' → logprob: -4.043096542358398

Token 276: ' up' (ID: 869)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.49612319469451904
    2. ' that' → logprob: -2.3711233139038086
    3. ' the' → logprob: -2.4961233139038086
    4. ' segments' → logprob: -3.2461233139038086
    5. 'the' → logprob: -3.6211233139038086
    6. 'no' → logprob: -3.9961233139038086
    7. 'max' → logprob: -3.9961233139038086
    8. 'segments' → logprob: -4.371123313903809
    9. 'that' → logprob: -4.496123313903809
    10. 'self' → logprob: -4.621123313903809

Token 277: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.024423135444521904
    2. ' to' → logprob: -4.524423122406006
    3. 't' → logprob: -5.149423122406006
    4. '_to' → logprob: -5.899423122406006
    5. 'pto' → logprob: -7.399423122406006
    6. 'To' → logprob: -7.524423122406006
    7. 'o' → logprob: -7.774423122406006
    8. '1' → logprob: -8.274423599243164
    9. '       ' → logprob: -8.274423599243164
    10. '3' → logprob: -8.399423599243164

Token 278: ' length' (ID: 5517)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.7325117588043213
    2. '10' → logprob: -1.6075117588043213
    3. '20' → logprob: -2.2325117588043213
    4. '5' → logprob: -2.8575117588043213
    5. '3' → logprob: -3.1075117588043213
    6. '4' → logprob: -3.8575117588043213
    7. '7' → logprob: -4.232511520385742
    8. '18' → logprob: -4.357511520385742
    9. '19' → logprob: -4.482511520385742
    10. '100' → logprob: -4.482511520385742

Token 279: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4466369152069092
    2. ' for' → logprob: -1.3216369152069092
    3. '+' → logprob: -2.946636915206909
    4. '       ' → logprob: -3.946636915206909
    5. '   ' → logprob: -4.821637153625488
    6. '=' → logprob: -5.571637153625488
    7. ' +' → logprob: -5.696637153625488
    8. '(' → logprob: -6.446637153625488
    9. 'range' → logprob: -6.946637153625488
    10. '1' → logprob: -7.821637153625488

Token 280: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2777753472328186
    2. '3' → logprob: -2.527775287628174
    3. '=' → logprob: -3.027775287628174
    4. '9' → logprob: -3.652775287628174
    5. '20' → logprob: -3.902775287628174
    6. '5' → logprob: -4.277775287628174
    7. '6' → logprob: -4.402775287628174
    8. 'self' → logprob: -4.777775287628174
    9. '100' → logprob: -5.277775287628174
    10. '4' → logprob: -5.777775287628174

Token 281: '000' (ID: 1302)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6490753889083862
    2. 'for' → logprob: -0.7740753889083862
    3. ' 
' → logprob: -5.149075508117676
    4. '
' → logprob: -5.899075508117676
    5. ')' → logprob: -6.274075508117676
    6. ' ' → logprob: -6.649075508117676
    7. '   ' → logprob: -6.774075508117676
    8. '       ' → logprob: -6.774075508117676
    9. '\' → logprob: -8.024075508117676
    10. '    
' → logprob: -8.149075508117676

Token 282: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6537163853645325
    2. ' for' → logprob: -0.7787163853645325
    3. '
' → logprob: -4.278716564178467
    4. ' 
' → logprob: -6.153716564178467
    5. '   ' → logprob: -6.528716564178467
    6. ')' → logprob: -7.153716564178467
    7. '       ' → logprob: -7.528716564178467
    8. ' ' → logprob: -7.903716564178467
    9. '\n' → logprob: -8.028716087341309
    10. '\' → logprob: -8.403716087341309

Token 283: ' so' (ID: 813)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2707940638065338
    2. 'for' → logprob: -1.5207940340042114
    3. ' ' → logprob: -4.270793914794922
    4. ')' → logprob: -6.645793914794922
    5. ' )' → logprob: -7.270793914794922
    6. ' i' → logprob: -8.020793914794922
    7. ' if' → logprob: -8.520793914794922
    8. ' max' → logprob: -8.520793914794922
    9. '    ' → logprob: -8.645793914794922
    10. '       ' → logprob: -8.645793914794922

Token 284: ' max' (ID: 2999)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7596905827522278
    2. 'max' → logprob: -1.509690523147583
    3. 'for' → logprob: -1.759690523147583
    4. ' max' → logprob: -2.384690523147583
    5. ' pass' → logprob: -3.634690523147583
    6. 'pass' → logprob: -4.009690761566162
    7. '       ' → logprob: -7.259690761566162
    8. ' segment' → logprob: -7.759690761566162
    9. 'segment' → logprob: -8.134690284729004
    10. '...' → logprob: -8.634690284729004

Token 285: ' segment' (ID: 14806)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.23922233283519745
    2. '_len' → logprob: -2.364222288131714
    3. '_seg' → logprob: -2.614222288131714
    4. '_length' → logprob: -3.489222288131714
    5. 'segment' → logprob: -4.614222526550293
    6. 'len' → logprob: -5.739222526550293
    7. 'seg' → logprob: -7.239222526550293
    8. '```' → logprob: -7.864222526550293
    9. 'length' → logprob: -8.364222526550293
    10. '(' → logprob: -8.739222526550293

Token 286: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.1281938999891281
    2. '_length' → logprob: -2.2531938552856445
    3. 'len' → logprob: -4.6281938552856445
    4. '_len' → logprob: -5.5031938552856445
    5. '=' → logprob: -7.2531938552856445
    6. ' length' → logprob: -7.7531938552856445
    7. ')' → logprob: -9.878193855285645
    8. ' =' → logprob: -10.003193855285645
    9. '<|end|>' → logprob: -10.503193855285645
    10. '_' → logprob: -10.628193855285645

Token 287: ' can' (ID: 665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0021970022935420275
    2. ' =' → logprob: -6.127196788787842
    3. '10' → logprob: -13.252197265625
    4. '=None' → logprob: -13.252197265625
    5. '=max' → logprob: -13.627197265625
    6. 'for' → logprob: -13.877197265625
    7. ' is' → logprob: -14.127197265625
    8. ')' → logprob: -14.377197265625
    9. '=int' → logprob: -14.377197265625
    10. '=min' → logprob: -14.502197265625

Token 288: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043504007160663605
    2. '10' → logprob: -4.168504238128662
    3. '1' → logprob: -4.918504238128662
    4. ' be' → logprob: -5.793504238128662
    5. 'be' → logprob: -6.043504238128662
    6. '20' → logprob: -6.168504238128662
    7. '3' → logprob: -6.418504238128662
    8. '5' → logprob: -6.668504238128662
    9. ' =' → logprob: -6.668504238128662
    10. '100' → logprob: -6.918504238128662

Token 289: ' entire' (ID: 6508)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5968098640441895
    2. '6' → logprob: -1.2218098640441895
    3. '5' → logprob: -2.3468098640441895
    4. '9' → logprob: -3.4718098640441895
    5. '20' → logprob: -4.0968098640441895
    6. '18' → logprob: -5.2218098640441895
    7. '11' → logprob: -6.0968098640441895
    8. '7' → logprob: -7.0968098640441895
    9. '15' → logprob: -7.4718098640441895
    10. '12' → logprob: -7.5968098640441895

Token 290: ' string' (ID: 1621)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04052789881825447
    2. ' self' → logprob: -3.540527820587158
    3. 'number' → logprob: -4.665527820587158
    4. ' number' → logprob: -7.415527820587158
    5. 'string' → logprob: -8.415528297424316
    6. '       ' → logprob: -9.290528297424316
    7. ')' → logprob: -9.415528297424316
    8. '   ' → logprob: -9.415528297424316
    9. '1' → logprob: -10.290528297424316
    10. ' ' → logprob: -10.415528297424316

Token 291: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4989120066165924
    2. ' for' → logprob: -0.99891197681427
    3. '       ' → logprob: -4.8739118576049805
    4. '   ' → logprob: -5.4989118576049805
    5. '
' → logprob: -5.6239118576049805
    6. ' 
' → logprob: -5.6239118576049805
    7. ' ' → logprob: -6.4989118576049805
    8. ')' → logprob: -6.8739118576049805
    9. '    
' → logprob: -7.4989118576049805
    10. '\' → logprob: -7.8739118576049805

Token 292: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32494741678237915
    2. 'for' → logprob: -1.4499473571777344
    3. '   ' → logprob: -3.5749473571777344
    4. '       ' → logprob: -4.324947357177734
    5. '    
' → logprob: -7.574947357177734
    6. ' 
' → logprob: -8.324947357177734
    7. '        
' → logprob: -8.699947357177734
    8. ' ' → logprob: -8.824947357177734
    9. ')' → logprob: -9.199947357177734
    10. '
' → logprob: -9.824947357177734

Token 293: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3895390033721924
    2. ' for' → logprob: -1.1395390033721924
    3. '       ' → logprob: -6.014538764953613
    4. '
' → logprob: -9.139538764953613
    5. '   ' → logprob: -10.264538764953613
    6. '        
' → logprob: -10.514538764953613
    7. ' 
' → logprob: -11.264538764953613
    8. ' i' → logprob: -11.389538764953613
    9. 'n' → logprob: -12.014538764953613
    10. 'i' → logprob: -12.014538764953613

Token 294: ' However' (ID: 5551)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3142242431640625
    2. ' for' → logprob: -1.3142242431640625
    3. '       ' → logprob: -7.0642242431640625
    4. 'max' → logprob: -10.064224243164062
    5. 'end' → logprob: -11.064224243164062
    6. ' max' → logprob: -11.564224243164062
    7. 'segment' → logprob: -11.689224243164062
    8. '   ' → logprob: -11.814224243164062
    9. '        
' → logprob: -12.189224243164062
    10. ' i' → logprob: -12.689224243164062

Token 295: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2169525921344757
    2. 'for' → logprob: -2.3419525623321533
    3. '       ' → logprob: -2.3419525623321533
    4. ',' → logprob: -6.591952800750732
    5. ' max' → logprob: -7.966952800750732
    6. 'max' → logprob: -8.591952323913574
    7. ' if' → logprob: -8.966952323913574
    8. '   ' → logprob: -9.341952323913574
    9. ' in' → logprob: -9.591952323913574
    10. ' to' → logprob: -10.216952323913574

Token 296: ' long' (ID: 1701)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.050597552210092545
    2. ' for' → logprob: -3.300597667694092
    3. 'max' → logprob: -4.425597667694092
    4. '       ' → logprob: -9.050597190856934
    5. ' max' → logprob: -9.050597190856934
    6. '#' → logprob: -9.300597190856934
    7. 'end' → logprob: -9.425597190856934
    8. 'n' → logprob: -10.175597190856934
    9. 'segment' → logprob: -10.800597190856934
    10. 'num' → logprob: -11.300597190856934

Token 297: ' segments' (ID: 33749)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6228741407394409
    2. 'for' → logprob: -0.9978741407394409
    3. ' segments' → logprob: -3.1228742599487305
    4. '_' → logprob: -4.1228742599487305
    5. ')' → logprob: -5.4978742599487305
    6. ' if' → logprob: -5.4978742599487305
    7. 's' → logprob: -5.9978742599487305
    8. 'segments' → logprob: -5.9978742599487305
    9. '_segments' → logprob: -6.3728742599487305
    10. ' ' → logprob: -6.6228742599487305

Token 298: ' convert' (ID: 8452)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8954296708106995
    2. ' may' → logprob: -1.6454296112060547
    3. 'for' → logprob: -1.8954296112060547
    4. '=' → logprob: -2.8954296112060547
    5. ' for' → logprob: -3.1454296112060547
    6. ' are' → logprob: -3.5204296112060547
    7. ' might' → logprob: -4.020429611206055
    8. ':' → logprob: -4.145429611206055
    9. ' =' → logprob: -4.395429611206055
    10. 'import' → logprob: -4.770429611206055

Token 299: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6143755316734314
    2. 'to' → logprob: -1.1143755912780762
    3. 'from' → logprob: -4.239375591278076
    4. '   ' → logprob: -4.364375591278076
    5. 'number' → logprob: -4.489375591278076
    6. ' ' → logprob: -4.614375591278076
    7. ' into' → logprob: -4.864375591278076
    8. 'int' → logprob: -5.114375591278076
    9. ' tokens' → logprob: -5.239375591278076
    10. 'self' → logprob: -5.239375591278076

Token 300: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007166666444391012
    2. ' int' → logprob: -5.007166862487793
    3. 'inte' → logprob: -9.007166862487793
    4. 'ints' → logprob: -9.007166862487793
    5. ' integers' → logprob: -9.257166862487793
    6. 'integer' → logprob: -9.632166862487793
    7. ' integer' → logprob: -11.132166862487793
    8. 'float' → logprob: -12.132166862487793
    9. 'numbers' → logprob: -12.132166862487793
    10. ' numbers' → logprob: -12.507166862487793

Token 301: ' might' (ID: 3572)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.326702743768692
    2. 'for' → logprob: -1.5767027139663696
    3. '       ' → logprob: -2.951702833175659
    4. ':' → logprob: -4.95170259475708
    5. ',' → logprob: -5.82670259475708
    6. '   ' → logprob: -5.82670259475708
    7. ':
' → logprob: -6.20170259475708
    8. '
' → logprob: -6.95170259475708
    9. ' and' → logprob: -7.57670259475708
    10. '.' → logprob: -7.70170259475708

Token 302: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.2593544721603394
    2. ' cause' → logprob: -1.2593544721603394
    3. 'cause' → logprob: -1.7593544721603394
    4. ' overflow' → logprob: -2.259354591369629
    5. 'be' → logprob: -2.259354591369629
    6. 'overflow' → logprob: -3.259354591369629
    7. ' lead' → logprob: -5.134354591369629
    8. 'lead' → logprob: -6.884354591369629
    9. ' raise' → logprob: -7.009354591369629
    10. 'raise' → logprob: -7.009354591369629

Token 303: ' huge' (ID: 9560)
  Prédit: ' expensive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' expensive' → logprob: -0.8401368856430054
    2. 'exp' → logprob: -1.3401368856430054
    3. ' costly' → logprob: -2.715137004852295
    4. 'very' → logprob: -2.840137004852295
    5. 'slow' → logprob: -2.965137004852295
    6. ' very' → logprob: -3.340137004852295
    7. 'ine' → logprob: -3.840137004852295
    8. 'too' → logprob: -4.090137004852295
    9. ' too' → logprob: -4.215137004852295
    10. 'cost' → logprob: -4.340137004852295

Token 304: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5129189491271973
    2. 'for' → logprob: -1.7629189491271973
    3. '       ' → logprob: -2.1379189491271973
    4. ',' → logprob: -2.5129189491271973
    5. '.' → logprob: -3.8879189491271973
    6. '   ' → logprob: -6.137918949127197
    7. '<|end|>' → logprob: -6.512918949127197
    8. '
' → logprob: -6.637918949127197
    9. ':' → logprob: -7.012918949127197
    10. ',
' → logprob: -7.012918949127197

Token 305: ' Python' (ID: 26534)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14019028842449188
    2. 'for' → logprob: -3.015190362930298
    3. '       ' → logprob: -3.140190362930298
    4. ' so' → logprob: -3.390190362930298
    5. ' but' → logprob: -6.890190124511719
    6. ' 
' → logprob: -6.890190124511719
    7. ' return' → logprob: -7.640190124511719
    8. ' and' → logprob: -7.890190124511719
    9. ' ' → logprob: -7.890190124511719
    10. '        
' → logprob: -8.265190124511719

Token 306: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.10980969667434692
    2. ' handles' → logprob: -3.109809637069702
    3. 'int' → logprob: -3.359809637069702
    4. ' int' → logprob: -4.609809875488281
    5. 'can' → logprob: -5.109809875488281
    6. ''s' → logprob: -5.484809875488281
    7. ' integers' → logprob: -6.984809875488281
    8. ' is' → logprob: -7.609809875488281
    9. ' has' → logprob: -7.734809875488281
    10. 'handles' → logprob: -7.734809875488281

Token 307: ' still' (ID: 2928)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.00528308842331171
    2. ' handle' → logprob: -5.255282878875732
    3. 'int' → logprob: -10.25528335571289
    4. 'convert' → logprob: -11.38028335571289
    5. '```' → logprob: -14.38028335571289
    6. '_handle' → logprob: -14.88028335571289
    7. 'ar' → logprob: -14.88028335571289
    8. 'manage' → logprob: -15.13028335571289
    9. 'continue' → logprob: -15.25528335571289
    10. 'support' → logprob: -15.63028335571289

Token 308: ' handle' (ID: 5318)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.002030826872214675
    2. ' handle' → logprob: -6.252030849456787
    3. 'int' → logprob: -9.377030372619629
    4. 'convert' → logprob: -11.002030372619629
    5. '_handle' → logprob: -14.502030372619629
    6. 'manage' → logprob: -15.752030372619629
    7. '```' → logprob: -16.752031326293945
    8. '
' → logprob: -17.377031326293945
    9. '   ' → logprob: -17.377031326293945
    10. '	handle' → logprob: -17.502031326293945

Token 309: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.7292026877403259
    2. 'it' → logprob: -0.9792026877403259
    3. '       ' → logprob: -3.2292027473449707
    4. 'ar' → logprob: -4.104202747344971
    5. ' them' → logprob: -4.354202747344971
    6. 'this' → logprob: -4.479202747344971
    7. 'int' → logprob: -4.729202747344971
    8. ' this' → logprob: -4.854202747344971
    9. 'them' → logprob: -4.854202747344971
    10. ' that' → logprob: -4.979202747344971

Token 310: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01574586145579815
    2. ')' → logprob: -5.265745639801025
    3. ',' → logprob: -5.640745639801025
    4. ' for' → logprob: -5.890745639801025
    5. '.' → logprob: -6.265745639801025
    6. '   ' → logprob: -7.140745639801025
    7. '        
' → logprob: -7.765745639801025
    8. 'for' → logprob: -8.265746116638184
    9. '<|end|>' → logprob: -8.390746116638184
    10. '<|end|>' → logprob: -8.890746116638184

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23111268877983093
    2. ' for' → logprob: -1.8561127185821533
    3. 'for' → logprob: -3.7311127185821533
    4. '   ' → logprob: -3.8561127185821533
    5. '
' → logprob: -6.606112480163574
    6. '        
' → logprob: -6.981112480163574
    7. ' 
' → logprob: -7.106112480163574
    8. '    
' → logprob: -7.231112480163574
    9. ' i' → logprob: -7.606112480163574
    10. '\' → logprob: -8.731112480163574

Token 312: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4761284589767456
    2. ' for' → logprob: -0.9761284589767456
    3. '       ' → logprob: -6.226128578186035
    4. ' i' → logprob: -9.851128578186035
    5. 'i' → logprob: -11.351128578186035
    6. '   ' → logprob: -12.226128578186035
    7. 'start' → logprob: -14.101128578186035
    8. 'next' → logprob: -14.601128578186035
    9. ' ' → logprob: -15.101128578186035
    10. 'end' → logprob: -15.601128578186035

Token 313: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003197677666321397
    2. ' for' → logprob: -5.75319766998291
    3. '       ' → logprob: -11.00319766998291
    4. '   ' → logprob: -13.12819766998291
    5. 'i' → logprob: -14.00319766998291
    6. '
' → logprob: -15.50319766998291
    7. '```' → logprob: -16.628198623657227
    8. ' i' → logprob: -17.003198623657227
    9. 'next' → logprob: -17.128198623657227
    10. '        
' → logprob: -17.378198623657227

Token 314: ' every' (ID: 1753)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.702035129070282
    2. 'for' → logprob: -0.702035129070282
    3. '       ' → logprob: -5.577034950256348
    4. 'next' → logprob: -6.077034950256348
    5. ' next' → logprob: -6.952034950256348
    6. 'length' → logprob: -7.327034950256348
    7. '   ' → logprob: -8.077034950256348
    8. 'end' → logprob: -8.202034950256348
    9. 'segment' → logprob: -8.827034950256348
    10. ' i' → logprob: -9.827034950256348

Token 315: ' possible' (ID: 4149)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.02641245909035206
    2. ' end' → logprob: -4.026412487030029
    3. 'length' → logprob: -5.401412487030029
    4. 'next' → logprob: -5.901412487030029
    5. 'split' → logprob: -7.901412487030029
    6. ' next' → logprob: -8.026412010192871
    7. ' length' → logprob: -8.651412010192871
    8. 'i' → logprob: -10.151412010192871
    9. ' split' → logprob: -10.526412010192871
    10. 'j' → logprob: -11.401412010192871

Token 316: ' cut' (ID: 6092)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -1.060225009918213
    2. 'next' → logprob: -1.435225009918213
    3. ' next' → logprob: -1.560225009918213
    4. 'length' → logprob: -2.185225009918213
    5. ' end' → logprob: -3.060225009918213
    6. ' length' → logprob: -3.685225009918213
    7. 'split' → logprob: -4.310225009918213
    8. 'segment' → logprob: -5.935225009918213
    9. ' split' → logprob: -6.060225009918213
    10. ' segment' → logprob: -6.810225009918213

Token 317: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23528125882148743
    2. ' for' → logprob: -2.985281229019165
    3. 'for' → logprob: -3.360281229019165
    4. '   ' → logprob: -3.610281229019165
    5. 'from' → logprob: -3.610281229019165
    6. ' at' → logprob: -4.235281467437744
    7. '(' → logprob: -4.485281467437744
    8. ' from' → logprob: -4.735281467437744
    9. ',' → logprob: -4.860281467437744
    10. '(index' → logprob: -5.235281467437744

Token 318: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.004079828038811684
    2. ' index' → logprob: -5.504079818725586
    3. '   ' → logprob: -14.004079818725586
    4. '1' → logprob: -14.754079818725586
    5. '
' → logprob: -17.004079818725586
    6. ' ' → logprob: -17.129079818725586
    7. '```' → logprob: -17.379079818725586
    8. '       ' → logprob: -17.879079818725586
    9. '(index' → logprob: -17.879079818725586
    10. 'idx' → logprob: -18.879079818725586

Token 319: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5001518130302429
    2. ' +' → logprob: -1.1251518726348877
    3. ',' → logprob: -3.3751518726348877
    4. ' in' → logprob: -5.000151634216309
    5. '       ' → logprob: -5.125151634216309
    6. '   ' → logprob: -5.375151634216309
    7. '+i' → logprob: -5.375151634216309
    8. 'for' → logprob: -5.625151634216309
    9. ' for' → logprob: -5.750151634216309
    10. '1' → logprob: -7.000151634216309

Token 320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.000003814697266
    4. '
' → logprob: -15.625003814697266
    5. '```' → logprob: -17.250003814697266
    6. 'index' → logprob: -19.000003814697266
    7. ',' → logprob: -19.250003814697266
    8. '`' → logprob: -19.375003814697266
    9. '

' → logprob: -19.500003814697266
    10. '       ' → logprob: -19.875003814697266

Token 321: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5826590061187744
    2. 'to' → logprob: -0.8326590061187744
    3. ',' → logprob: -5.082658767700195
    4. ' in' → logprob: -8.332658767700195
    5. '   ' → logprob: -9.457658767700195
    6. '       ' → logprob: -10.082658767700195
    7. 'in' → logprob: -10.457658767700195
    8. '
' → logprob: -10.832658767700195
    9. ' ' → logprob: -11.082658767700195
    10. 'for' → logprob: -11.457658767700195

Token 322: ' end' (ID: 1268)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012522017583251
    2. ' self' → logprob: -4.387522220611572
    3. 'len' → logprob: -11.637521743774414
    4. '   ' → logprob: -13.512521743774414
    5. '
' → logprob: -14.137521743774414
    6. ' len' → logprob: -14.887521743774414
    7. 'range' → logprob: -15.512521743774414
    8. '(self' → logprob: -15.637521743774414
    9. '       ' → logprob: -15.887521743774414
    10. ' ' → logprob: -16.512521743774414

Token 323: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9006655812263489
    2. ' in' → logprob: -1.525665521621704
    3. ' for' → logprob: -2.025665521621704
    4. 'for' → logprob: -2.275665521621704
    5. ' +' → logprob: -2.650665521621704
    6. '       ' → logprob: -3.025665521621704
    7. 'range' → logprob: -4.525665760040283
    8. '   ' → logprob: -5.900665760040283
    9. 'in' → logprob: -6.275665760040283
    10. ':
' → logprob: -6.650665760040283

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4565410912036896
    2. ' for' → logprob: -1.4565410614013672
    3. 'for' → logprob: -3.206541061401367
    4. ' in' → logprob: -3.331541061401367
    5. '   ' → logprob: -3.581541061401367
    6. '+' → logprob: -4.956541061401367
    7. ',' → logprob: -4.956541061401367
    8. ':' → logprob: -4.956541061401367
    9. ':
' → logprob: -6.206541061401367
    10. ' +' → logprob: -6.331541061401367

Token 325: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24429182708263397
    2. 'for' (adapté à ' for') → logprob: -1.6192917823791504
    3. '       ' → logprob: -3.9942917823791504
    4. '
' → logprob: -9.119292259216309
    5. '   ' → logprob: -9.119292259216309
    6. ' 
' → logprob: -10.744292259216309
    7. '        
' → logprob: -11.494292259216309
    8. ' range' → logprob: -12.369292259216309
    9. 'range' → logprob: -12.494292259216309
    10. 'index' → logprob: -12.744292259216309

Token 326: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.14032146334648132
    2. 'i' → logprob: -2.1403214931488037
    3. ' end' → logprob: -5.140321254730225
    4. 'cut' → logprob: -5.140321254730225
    5. ' i' → logprob: -6.765321254730225
    6. 'split' → logprob: -8.890321731567383
    7. 'next' → logprob: -9.140321731567383
    8. ' cut' → logprob: -9.890321731567383
    9. 'length' → logprob: -10.015321731567383
    10. 'j' → logprob: -10.140321731567383

Token 327: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014185599982738495
    2. 'in' → logprob: -4.264185428619385
    3. 'range' → logprob: -12.639185905456543
    4. ' ' → logprob: -12.889185905456543
    5. 'index' → logprob: -13.014185905456543
    6. '_in' → logprob: -13.139185905456543
    7. '   ' → logprob: -13.264185905456543
    8. 'In' → logprob: -13.514185905456543
    9. '```' → logprob: -13.889185905456543
    10. '
' → logprob: -14.014185905456543

Token 328: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008614926598966122
    2. ' range' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.383614540100098
    4. '(range' → logprob: -16.508615493774414
    5. ' ' → logprob: -17.008615493774414
    6. '  ' → logprob: -18.758615493774414
    7. '	range' → logprob: -19.883615493774414
    8. '    ' → logprob: -22.008615493774414
    9. '     ' → logprob: -22.758615493774414
    10. ')' → logprob: -22.758615493774414

Token 329: '(index' (ID: 13517)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.16071189939975739
    2. '(index' → logprob: -1.9107118844985962
    3. ' index' → logprob: -7.660711765289307
    4. '[index' → logprob: -11.910712242126465
    5. '   ' → logprob: -12.160712242126465
    6. '=index' → logprob: -13.035712242126465
    7. ',index' → logprob: -13.785712242126465
    8. '	index' → logprob: -14.410712242126465
    9. '(' → logprob: -15.160712242126465
    10. '#index' → logprob: -15.910712242126465

Token 330: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5760922431945801
    2. '+' → logprob: -0.8260922431945801
    3. ',' → logprob: -8.826091766357422
    4. ' ,' → logprob: -13.201091766357422
    5. '+,' → logprob: -13.951091766357422
    6. ',index' → logprob: -13.951091766357422
    7. 'index' → logprob: -14.326091766357422
    8. '=index' → logprob: -14.326091766357422
    9. '1' → logprob: -14.826091766357422
    10. '   ' → logprob: -15.326091766357422

Token 331: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.620622712536715e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.125045776367188
    4. '  ' → logprob: -18.125045776367188
    5. '2' → logprob: -18.750045776367188
    6. '```' → logprob: -19.125045776367188
    7. '
' → logprob: -19.375045776367188
    8. '    ' → logprob: -19.625045776367188
    9. '<|end|>' → logprob: -20.000045776367188
    10. ',' → logprob: -20.062545776367188

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -16.875
    4. '2' → logprob: -17.25
    5. '
' → logprob: -17.75
    6. '51' → logprob: -19.1875
    7. '100' → logprob: -19.6875
    8. '20' → logprob: -19.8125
    9. '

' → logprob: -19.9375
    10. '11' → logprob: -20.1875

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012725738633889705
    2. ' ,' → logprob: -9.000126838684082
    3. ',self' → logprob: -13.250126838684082
    4. 'self' → logprob: -13.625126838684082
    5. ',len' → logprob: -14.875126838684082
    6. ',
' → logprob: -16.2501277923584
    7. ')' → logprob: -16.5001277923584
    8. '   ' → logprob: -16.5001277923584
    9. ' self' → logprob: -16.6251277923584
    10. '1' → logprob: -17.1251277923584

Token 334: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.8802491215174086e-05
    2. ' self' → logprob: -10.500028610229492
    3. '       ' → logprob: -14.375028610229492
    4. '
' → logprob: -14.875028610229492
    5. '   ' → logprob: -15.500028610229492
    6. '(self' → logprob: -17.750028610229492
    7. '[self' → logprob: -17.875028610229492
    8. '           ' → logprob: -18.000028610229492
    9. '=self' → logprob: -18.625028610229492
    10. 'len' → logprob: -18.875028610229492

Token 335: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -1.0802738870552275e-05
    2. 'length' → logprob: -11.62501049041748
    3. '.' → logprob: -13.37501049041748
    4. ' .' → logprob: -15.62501049041748
    5. ':length' → logprob: -17.125011444091797
    6. '	length' → logprob: -17.500011444091797
    7. ',length' → logprob: -17.625011444091797
    8. '   ' → logprob: -18.000011444091797
    9. '.height' → logprob: -18.750011444091797
    10. '.number' → logprob: -19.000011444091797

Token 336: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931495666503906
    2. ' +' → logprob: -0.6931495666503906
    3. '   ' → logprob: -13.06814956665039
    4. ' ' → logprob: -16.31814956665039
    5. '    ' → logprob: -17.19314956665039
    6. '       ' → logprob: -17.19314956665039
    7. '()+' → logprob: -17.69314956665039
    8. ')' → logprob: -17.81814956665039
    9. '  ' → logprob: -18.44314956665039
    10. '＋' → logprob: -18.69314956665039

Token 337: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '0' → logprob: -16.375003814697266
    4. '   ' → logprob: -16.750003814697266
    5. ')' → logprob: -19.500003814697266
    6. '  ' → logprob: -20.375003814697266
    7. '```' → logprob: -20.750003814697266
    8. '
' → logprob: -21.125003814697266
    9. '           ' → logprob: -21.500003814697266
    10. '=' → logprob: -21.625003814697266

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.500001907348633
    4. '0' → logprob: -17.875001907348633
    5. ')' → logprob: -18.375001907348633
    6. '(' → logprob: -19.625001907348633
    7. '
' → logprob: -19.625001907348633
    8. '```' → logprob: -20.625001907348633
    9. '2' → logprob: -21.000001907348633
    10. '  ' → logprob: -21.000001907348633

Token 339: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25333887338638306
    2. '):
' → logprob: -1.5033388137817383
    3. ':' → logprob: -6.753338813781738
    4. '       ' → logprob: -8.878338813781738
    5. '):
' → logprob: -10.003338813781738
    6. '           ' → logprob: -10.378338813781738
    7. ',' → logprob: -11.378338813781738
    8. '):

' → logprob: -12.253338813781738
    9. ')' → logprob: -12.503338813781738
    10. ':
' → logprob: -12.878338813781738

Token 340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.2855416066013277e-05
    2. 'try' → logprob: -12.125032424926758
    3. 'num' → logprob: -12.375032424926758
    4. '```' → logprob: -12.500032424926758
    5. '            
' → logprob: -12.750032424926758
    6. 'segment' → logprob: -12.875032424926758
    7. '       ' → logprob: -13.000032424926758
    8. 'token' → logprob: -13.125032424926758
    9. ' try' → logprob: -13.125032424926758
    10. '               ' → logprob: -13.125032424926758

Token 341: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' (adapté à ' segment') → logprob: -0.1903749704360962
    2. '           ' → logprob: -2.0653748512268066
    3. 'num' → logprob: -3.5653748512268066
    4. 'try' → logprob: -4.565374851226807
    5. ' segment' → logprob: -5.440374851226807
    6. 'part' → logprob: -6.565374851226807
    7. 'seg' → logprob: -6.815374851226807
    8. 'current' → logprob: -8.190375328063965
    9. 'token' → logprob: -8.440375328063965
    10. ' try' → logprob: -8.940375328063965

Token 342: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.027809588238596916
    2. '_val' → logprob: -4.2778096199035645
    3. '_value' → logprob: -5.1528096199035645
    4. '_num' → logprob: -5.4028096199035645
    5. ' =' → logprob: -6.1528096199035645
    6. '_int' → logprob: -7.0278096199035645
    7. '=' → logprob: -9.152809143066406
    8. 'str' → logprob: -10.027809143066406
    9. '_' → logprob: -10.277809143066406
    10. 'int' → logprob: -11.027809143066406

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014167606830597
    2. '=' → logprob: -1.7014167308807373
    3. '           ' → logprob: -12.826416969299316
    4. '=self' → logprob: -14.826416969299316
    5. ')' → logprob: -16.701416015625
    6. '            ' → logprob: -16.826416015625
    7. ' ' → logprob: -17.076416015625
    8. '               ' → logprob: -17.076416015625
    9. '=int' → logprob: -17.076416015625
    10. ',' → logprob: -17.451416015625

Token 344: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0036531719379127026
    2. ' self' → logprob: -5.628653049468994
    3. '           ' → logprob: -9.878653526306152
    4. '               ' → logprob: -13.503653526306152
    5. '	self' → logprob: -16.253652572631836
    6. '   ' → logprob: -16.503652572631836
    7. '
' → logprob: -16.628652572631836
    8. '(self' → logprob: -17.003652572631836
    9. '[self' → logprob: -17.378652572631836
    10. '```' → logprob: -17.378652572631836

Token 345: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.018176397308707237
    2. 'number' → logprob: -4.018176555633545
    3. '.' → logprob: -11.018176078796387
    4. 'umber' → logprob: -11.893176078796387
    5. '[number' → logprob: -13.018176078796387
    6. ' number' → logprob: -14.893176078796387
    7. '<number' → logprob: -15.643176078796387
    8. '	number' → logprob: -16.268177032470703
    9. '.user' → logprob: -16.768177032470703
    10. ' .' → logprob: -16.893177032470703

Token 346: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -6.64708495605737e-05
    2. 'str' → logprob: -9.625066757202148
    3. 'Str' → logprob: -14.875066757202148
    4. '_string' → logprob: -18.87506675720215
    5. '_s' → logprob: -19.00006675720215
    6. 'string' → logprob: -19.12506675720215
    7. '_' → logprob: -19.50006675720215
    8. '_STR' → logprob: -19.50006675720215
    9. 's' → logprob: -19.62506675720215
    10. '[str' → logprob: -19.62506675720215

Token 347: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -4.11996734328568e-05
    2. '[' → logprob: -10.125041007995605
    3. '[end' → logprob: -14.750041007995605
    4. '[Index' → logprob: -15.750041007995605
    5. '[in' → logprob: -15.875041007995605
    6. 'index' → logprob: -16.125041961669922
    7. '[
' → logprob: -16.500041961669922
    8. '[ind' → logprob: -17.250041961669922
    9. '[start' → logprob: -17.375041961669922
    10. '#index' → logprob: -17.875041961669922

Token 348: ':end' (ID: 63990)
  Prédit: ':end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':end' → logprob: -7.941850526549388e-06
    2. ':' → logprob: -12.250007629394531
    3. ' :' → logprob: -12.750007629394531
    4. 'end' → logprob: -16.25000762939453
    5. '@end' → logprob: -18.25000762939453
    6. ',end' → logprob: -18.87500762939453
    7. '[end' → logprob: -19.87500762939453
    8. '	end' → logprob: -20.00000762939453
    9. '   ' → logprob: -20.62500762939453
    10. ' ' → logprob: -20.75000762939453

Token 349: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5343708992004395
    2. '           ' → logprob: -1.0343708992004395
    3. ')' → logprob: -2.9093708992004395
    4. ']
' → logprob: -5.7843708992004395
    5. ']' → logprob: -7.0343708992004395
    6. '               ' → logprob: -11.284370422363281
    7. ')
' → logprob: -11.409370422363281
    8. '])
' → logprob: -11.784370422363281
    9. '       ' → logprob: -12.784370422363281
    10. ')

' → logprob: -13.159370422363281

Token 350: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006124787032604218
    2. '            
' → logprob: -8.000612258911133
    3. 'try' → logprob: -9.000612258911133
    4. ' try' → logprob: -9.125612258911133
    5. ',' → logprob: -10.875612258911133
    6. 'int' → logprob: -12.250612258911133
    7. '               ' → logprob: -12.375612258911133
    8. 'segment' → logprob: -12.625612258911133
    9. '
' → logprob: -13.125612258911133
    10. '       ' → logprob: -13.125612258911133

Token 351: ' #' (ID: 1069)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.12020216137170792
    2. 'try' → logprob: -2.99520206451416
    3. '           ' → logprob: -3.49520206451416
    4. 'if' → logprob: -3.49520206451416
    5. '#' (adapté à ' #') → logprob: -6.49520206451416
    6. ' segment' → logprob: -7.99520206451416
    7. 'num' → logprob: -8.37020206451416
    8. 'seg' → logprob: -8.37020206451416
    9. ' if' → logprob: -9.24520206451416
    10. ' try' → logprob: -10.12020206451416

Token 352: ' All' (ID: 2545)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24376356601715088
    2. 'segment' → logprob: -1.8687635660171509
    3. 'try' → logprob: -3.2437634468078613
    4. '#' → logprob: -4.243763446807861
    5. '           ' → logprob: -4.868763446807861
    6. 'num' → logprob: -7.618763446807861
    7. ' if' → logprob: -8.36876392364502
    8. 'current' → logprob: -10.11876392364502
    9. 'If' → logprob: -10.61876392364502
    10. 'seg' → logprob: -10.61876392364502

Token 353: ' digits' (ID: 37806)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.065406084060669
    2. 'segment' → logprob: -1.315406084060669
    3. ' if' → logprob: -1.940406084060669
    4. 'digits' → logprob: -2.315406084060669
    5. '           ' → logprob: -2.815406084060669
    6. 'segments' → logprob: -3.565406084060669
    7. '(segment' → logprob: -4.06540584564209
    8. ' segment' → logprob: -4.19040584564209
    9. ' segments' → logprob: -4.81540584564209
    10. ' digits' → logprob: -5.69040584564209

Token 354: ' between' (ID: 2870)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.9101748466491699
    2. ' are' → logprob: -1.03517484664917
    3. 'must' → logprob: -1.78517484664917
    4. 'are' → logprob: -3.53517484664917
    5. 'if' → logprob: -4.16017484664917
    6. '0' → logprob: -5.41017484664917
    7. ' valid' → logprob: -5.41017484664917
    8. 'valid' → logprob: -5.66017484664917
    9. 'segment' → logprob: -5.66017484664917
    10. ' in' → logprob: -5.78517484664917

Token 355: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4151901602745056
    2. '0' → logprob: -1.2901902198791504
    3. 'segment' → logprob: -3.1651902198791504
    4. '1' → logprob: -4.66519021987915
    5. '"' → logprob: -5.29019021987915
    6. 'if' → logprob: -6.66519021987915
    7. ' '' → logprob: -6.66519021987915
    8. 'def' → logprob: -7.04019021987915
    9. ''s' → logprob: -7.29019021987915
    10. ' segment' → logprob: -7.41519021987915

Token 356: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3894030749797821
    2. '0' → logprob: -1.3894031047821045
    3. 'segment' → logprob: -3.1394031047821045
    4. 'segments' → logprob: -4.139402866363525
    5. '1' → logprob: -4.889402866363525
    6. '"' → logprob: -6.639402866363525
    7. ''end' → logprob: -6.889402866363525
    8. ''s' → logprob: -7.139402866363525
    9. 'digits' → logprob: -7.264402866363525
    10. 'end' → logprob: -7.639402866363525

Token 357: '-' (ID: 12)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.12797576189041138
    2. ' and' → logprob: -2.1279757022857666
    3. '9' → logprob: -7.377975940704346
    4. 'if' → logprob: -8.877975463867188
    5. '-' → logprob: -10.127975463867188
    6. '<=' → logprob: -10.252975463867188
    7. '<|end|>' → logprob: -10.252975463867188
    8. ' ' → logprob: -10.752975463867188
    9. '6' → logprob: -11.002975463867188
    10. '7' → logprob: -11.252975463867188

Token 358: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.771655115589965e-05
    2. '0' → logprob: -11.625018119812012
    3. 'end' → logprob: -12.750018119812012
    4. '999' → logprob: -13.625018119812012
    5. '```' → logprob: -13.750018119812012
    6. '100' → logprob: -14.250018119812012
    7. '99' → logprob: -14.375018119812012
    8. '
' → logprob: -14.875018119812012
    9. ''' → logprob: -15.250018119812012
    10. ' ' → logprob: -15.375018119812012

Token 359: ' so' (ID: 813)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3502521812915802
    2. '           ' → logprob: -2.225252151489258
    3. 'if' → logprob: -2.475252151489258
    4. ' and' → logprob: -2.600252151489258
    5. 'and' → logprob: -3.850252151489258
    6. ' for' → logprob: -6.725252151489258
    7. ' or' → logprob: -6.725252151489258
    8. 'for' → logprob: -6.850252151489258
    9. '               ' → logprob: -7.100252151489258
    10. ',' → logprob: -7.225252151489258

Token 360: ' no' (ID: 860)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2712383270263672
    2. 'if' → logprob: -1.2712383270263672
    3. ' if' → logprob: -1.3962383270263672
    4. ' no' → logprob: -2.021238327026367
    5. 'no' → logprob: -4.021238327026367
    6. 'segment' → logprob: -4.396238327026367
    7. 'int' → logprob: -4.646238327026367
    8. ' not' → logprob: -5.521238327026367
    9. '   ' → logprob: -5.646238327026367
    10. 'not' → logprob: -5.896238327026367

Token 361: ' check' (ID: 2371)
  Prédit: 'leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leading' → logprob: -0.07090714573860168
    2. ' leading' → logprob: -2.6959071159362793
    3. 'need' → logprob: -7.445907115936279
    4. 'segment' → logprob: -8.570907592773438
    5. ' need' → logprob: -9.070907592773438
    6. ' segment' → logprob: -10.570907592773438
    7. 'int' → logprob: -11.320907592773438
    8. 'invalid' → logprob: -11.570907592773438
    9. 'lead' → logprob: -11.695907592773438
    10. 'segments' → logprob: -11.820907592773438

Token 362: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013975088484585285
    2. ' if' → logprob: -5.263975143432617
    3. '
' → logprob: -5.763975143432617
    4. '            
' → logprob: -6.638975143432617
    5. ' for' → logprob: -6.763975143432617
    6. ',' → logprob: -6.888975143432617
    7. '               ' → logprob: -7.263975143432617
    8. ' is' → logprob: -8.513975143432617
    9. ' needed' → logprob: -9.513975143432617
    10. ' to' → logprob: -9.638975143432617

Token 363: ' zero' (ID: 12421)
  Prédit: ' leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leading' → logprob: -0.7431712746620178
    2. 'leading' → logprob: -0.8681712746620178
    3. ' segment' → logprob: -2.743171215057373
    4. 'segment' → logprob: -3.243171215057373
    5. ''' → logprob: -7.993171215057373
    6. ' invalid' → logprob: -8.243171691894531
    7. ' zero' → logprob: -8.868171691894531
    8. '0' → logprob: -8.993171691894531
    9. 'zero' → logprob: -8.993171691894531
    10. 'invalid' → logprob: -9.618171691894531

Token 364: ' digit' (ID: 19181)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9079925417900085
    2. 'if' → logprob: -1.2829926013946533
    3. ' or' → logprob: -2.2829926013946533
    4. ' in' → logprob: -2.6579926013946533
    5. 'leading' → logprob: -3.2829926013946533
    6. 'in' → logprob: -3.5329926013946533
    7. ' leading' → logprob: -3.6579926013946533
    8. ' not' → logprob: -4.032992362976074
    9. '           ' → logprob: -4.532992362976074
    10. 'startswith' → logprob: -5.157992362976074

Token 365: ' needed' (ID: 6118)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017513417406007648
    2. ',' → logprob: -6.87675142288208
    3. '            
' → logprob: -8.376750946044922
    4. 's' → logprob: -8.751750946044922
    5. ' or' → logprob: -9.876750946044922
    6. '<|end|>' → logprob: -9.876750946044922
    7. ')' → logprob: -10.126750946044922
    8. '               ' → logprob: -10.376750946044922
    9. ' if' → logprob: -10.626750946044922
    10. '.' → logprob: -11.126750946044922

Token 366: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001696902181720361
    2. ',' → logprob: -9.00016975402832
    3. '            
' → logprob: -10.37516975402832
    4. '               ' → logprob: -12.12516975402832
    5. ',
' → logprob: -13.25016975402832
    6. '
' → logprob: -13.25016975402832
    7. '		' → logprob: -14.12516975402832
    8. ';' → logprob: -14.12516975402832
    9. '          ' → logprob: -14.12516975402832
    10. '.' → logprob: -14.25016975402832

Token 367: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.8550976164988242e-05
    2. 'segment' → logprob: -11.875018119812012
    3. ',' → logprob: -12.125018119812012
    4. '            
' → logprob: -13.250018119812012
    5. '       ' → logprob: -13.875018119812012
    6. ' segment' → logprob: -14.125018119812012
    7. '               ' → logprob: -14.125018119812012
    8. '		' → logprob: -15.000018119812012
    9. 'try' → logprob: -15.250018119812012
    10. '          ' → logprob: -15.375018119812012

Token 368: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' (adapté à ' segment') → logprob: -0.16584745049476624
    2. '           ' → logprob: -1.9158474206924438
    3. ' segment' → logprob: -5.290847301483154
    4. 'seg' → logprob: -8.165847778320312
    5. 'try' → logprob: -8.915847778320312
    6. 'num' → logprob: -9.665847778320312
    7. 'current' → logprob: -11.290847778320312
    8. '            
' → logprob: -11.290847778320312
    9. 'number' → logprob: -11.415847778320312
    10. 'segments' → logprob: -11.665847778320312

Token 369: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.4805004894733429
    2. '_value' → logprob: -1.8555004596710205
    3. '_num' → logprob: -2.2305004596710205
    4. ' =' → logprob: -2.6055004596710205
    5. '_int' → logprob: -3.3555004596710205
    6. '=' → logprob: -5.1055006980896
    7. '=int' → logprob: -6.7305006980896
    8. 'num' → logprob: -7.2305006980896
    9. 'val' → logprob: -7.7305006980896
    10. 'int' → logprob: -8.480500221252441

Token 370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931799054145813
    2. ' =' → logprob: -0.6931799054145813
    3. '=int' → logprob: -10.443180084228516
    4. '           ' → logprob: -12.693180084228516
    5. 'int' → logprob: -15.068180084228516
    6. ' ' → logprob: -17.068180084228516
    7. '   ' → logprob: -17.568180084228516
    8. '               ' → logprob: -17.818180084228516
    9. ')' → logprob: -17.943180084228516
    10. '       ' → logprob: -18.193180084228516

Token 371: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.088346359931165e-07
    2. ' int' → logprob: -14.000000953674316
    3. '   ' → logprob: -23.75
    4. '	int' → logprob: -25.125
    5. '           ' → logprob: -25.375
    6. '[int' → logprob: -26.375
    7. '(int' → logprob: -26.625
    8. '<int' → logprob: -26.75
    9. '       ' → logprob: -27.0
    10. '=int' → logprob: -27.25

Token 372: '(segment' (ID: 144369)
  Prédit: '(segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(segment' → logprob: -0.018152514472603798
    2. 'segment' → logprob: -4.018152713775635
    3. '(' → logprob: -13.143152236938477
    4. ' segment' → logprob: -14.393152236938477
    5. '(
' → logprob: -18.143152236938477
    6. '.segment' → logprob: -18.268152236938477
    7. '(seg' → logprob: -18.393152236938477
    8. '```' → logprob: -18.518152236938477
    9. 'Segment' → logprob: -19.143152236938477
    10. ' (' → logprob: -19.393152236938477

Token 373: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0013394085690379143
    2. 'str' → logprob: -6.626339435577393
    3. 'segment' → logprob: -11.626338958740234
    4. 'Str' → logprob: -13.001338958740234
    5. '```' → logprob: -14.126338958740234
    6. ')' → logprob: -14.251338958740234
    7. 'string' → logprob: -15.751338958740234
    8. '_val' → logprob: -15.876338958740234
    9. '[str' → logprob: -16.876338958740234
    10. 's' → logprob: -17.001338958740234

Token 374: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011112074367702007
    2. ')
' → logprob: -4.511112213134766
    3. '           ' → logprob: -10.511112213134766
    4. ')
' → logprob: -10.511112213134766
    5. ')

' → logprob: -12.136112213134766
    6. ' )' → logprob: -12.761112213134766
    7. '       ' → logprob: -15.011112213134766
    8. '               ' → logprob: -15.261112213134766
    9. ')`' → logprob: -15.261112213134766
    10. ' )
' → logprob: -15.386112213134766

Token 375: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003298632800579071
    2. '
' → logprob: -8.500329971313477
    3. '            
' → logprob: -9.125329971313477
    4. '<|end|>' → logprob: -12.375329971313477
    5. ',' → logprob: -12.500329971313477
    6. '       ' → logprob: -13.125329971313477
    7. '          ' → logprob: -13.875329971313477
    8. '               ' → logprob: -14.000329971313477
    9. '<|end|>' → logprob: -14.000329971313477
    10. '           
' → logprob: -14.375329971313477

Token 376: ' min' (ID: 1349)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05371467396616936
    2. 'diff' → logprob: -3.6787147521972656
    3. 'min' (adapté à ' min') → logprob: -4.178714752197266
    4. 'next' → logprob: -5.553714752197266
    5. 'new' → logprob: -5.928714752197266
    6. 'current' → logprob: -6.678714752197266
    7. ' min' → logprob: -7.053714752197266
    8. ' diff' → logprob: -7.178714752197266
    9. ' next' → logprob: -7.553714752197266
    10. ' new' → logprob: -7.678714752197266

Token 377: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.015387294813990593
    2. 'diff' → logprob: -4.515387058258057
    3. '           ' → logprob: -6.140387058258057
    4. '_difference' → logprob: -6.890387058258057
    5. '_val' → logprob: -8.015387535095215
    6. '_segment' → logprob: -8.265387535095215
    7. '               ' → logprob: -9.890387535095215
    8. 'difference' → logprob: -10.015387535095215
    9. '       ' → logprob: -10.265387535095215
    10. 'val' → logprob: -10.390387535095215

Token 378: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575941264629364
    2. ' =' → logprob: -0.825941264629364
    3. '   ' → logprob: -14.07594108581543
    4. '           ' → logprob: -14.70094108581543
    5. '=min' → logprob: -16.20094108581543
    6. '_candidate' → logprob: -16.20094108581543
    7. ' ' → logprob: -16.45094108581543
    8. 'new' → logprob: -16.82594108581543
    9. '_=' → logprob: -16.95094108581543
    10. 'candidate' → logprob: -16.95094108581543

Token 379: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.006716317031532526
    2. 'min' → logprob: -5.006716251373291
    3. '	min' → logprob: -14.13171672821045
    4. ' ' → logprob: -16.381715774536133
    5. '   ' → logprob: -16.881715774536133
    6. ' ' → logprob: -17.631715774536133
    7. '(min' → logprob: -17.881715774536133
    8. '           ' → logprob: -18.256715774536133
    9. '=min' → logprob: -18.506715774536133
    10. '    ' → logprob: -18.631715774536133

Token 380: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.023262716829776764
    2. '(' → logprob: -3.7732627391815186
    3. '(
' → logprob: -11.023262977600098
    4. '(

' → logprob: -14.523262977600098
    5. '(max' → logprob: -15.898262977600098
    6. 'min' → logprob: -16.27326202392578
    7. ' (' → logprob: -16.27326202392578
    8. '(`' → logprob: -17.39826202392578
    9. '[min' → logprob: -17.64826202392578
    10. '=min' → logprob: -17.77326202392578

Token 381: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.0012099954765290022
    2. 'diff' → logprob: -6.8762102127075195
    3. 'Diff' → logprob: -8.75121021270752
    4. 'min' → logprob: -12.75121021270752
    5. '_DIFF' → logprob: -12.75121021270752
    6. '	diff' → logprob: -13.12621021270752
    7. '_difference' → logprob: -13.37621021270752
    8. '_d' → logprob: -13.62621021270752
    9. '```' → logprob: -13.62621021270752
    10. 'difference' → logprob: -13.75121021270752

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004462993238121271
    2. ',min' → logprob: -6.004463195800781
    3. ',
' → logprob: -6.629463195800781
    4. '(' → logprob: -8.129463195800781
    5. '(min' → logprob: -8.254463195800781
    6. '(
' → logprob: -9.504463195800781
    7. ' ,' → logprob: -11.254463195800781
    8. 'min' → logprob: -11.629463195800781
    9. ',self' → logprob: -12.629463195800781
    10. '(self' → logprob: -13.129463195800781

Token 383: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008709711022675037
    2. ' self' → logprob: -4.758709907531738
    3. '           ' → logprob: -9.508709907531738
    4. '               ' → logprob: -10.883709907531738
    5. '                   ' → logprob: -14.258709907531738
    6. '             ' → logprob: -14.883709907531738
    7. '   ' → logprob: -15.633709907531738
    8. '            ' → logprob: -15.883709907531738
    9. '          ' → logprob: -16.008708953857422
    10. '(self' → logprob: -16.008708953857422

Token 384: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.547789674485102e-05
    2. '_min' → logprob: -10.750035285949707
    3. '.min' → logprob: -11.375035285949707
    4. '.' → logprob: -13.000035285949707
    5. ' .' → logprob: -15.875035285949707
    6. '   ' → logprob: -17.500036239624023
    7. '_.' → logprob: -17.625036239624023
    8. '.Min' → logprob: -18.000036239624023
    9. '.MIN' → logprob: -18.125036239624023
    10. ' _' → logprob: -18.375036239624023

Token 385: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -6.704273118884885e-07
    2. '_min' → logprob: -14.375000953674316
    3. ' min' → logprob: -17.0
    4. '(min' → logprob: -19.375
    5. '.min' → logprob: -19.5
    6. 'max' → logprob: -19.625
    7. '-min' → logprob: -19.625
    8. 'm' → logprob: -20.0
    9. '```' → logprob: -20.25
    10. '	min' → logprob: -20.75

Token 386: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -3.619311974034645e-05
    2. 'difference' → logprob: -10.250036239624023
    3. 'Difference' → logprob: -15.000036239624023
    4. 'ifference' → logprob: -15.750036239624023
    5. 'min' → logprob: -16.375036239624023
    6. '```' → logprob: -16.500036239624023
    7. 'd' → logprob: -17.125036239624023
    8. '\' → logprob: -17.125036239624023
    9. '
' → logprob: -17.875036239624023
    10. '_distance' → logprob: -17.875036239624023

Token 387: '(end' (ID: 29409)
  Prédit: '(end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.0004131536406930536
    2. 'end' → logprob: -7.875412940979004
    3. '(' → logprob: -11.250412940979004
    4. '(
' → logprob: -11.250412940979004
    5. ',end' → logprob: -12.750412940979004
    6. '[end' → logprob: -13.250412940979004
    7. ',' → logprob: -14.000412940979004
    8. ' (' → logprob: -14.500412940979004
    9. ')' → logprob: -15.250412940979004
    10. '@end' → logprob: -15.875412940979004

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018619995098561049
    2. 'segments' → logprob: -6.751862049102783
    3. ' ,' → logprob: -7.876862049102783
    4. ' segments' → logprob: -8.501861572265625
    5. '[' → logprob: -10.001861572265625
    6. ',[' → logprob: -10.251861572265625
    7. ',
' → logprob: -11.126861572265625
    8. '   ' → logprob: -12.626861572265625
    9. ' [' → logprob: -13.376861572265625
    10. ' ,[' → logprob: -13.501861572265625

Token 389: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.00020580526324920356
    2. ' segments' → logprob: -8.500205993652344
    3. '   ' → logprob: -14.125205993652344
    4. '           ' → logprob: -14.250205993652344
    5. '       ' → logprob: -14.625205993652344
    6. '[' → logprob: -15.375205993652344
    7. '               ' → logprob: -16.500205993652344
    8. '          ' → logprob: -17.000205993652344
    9. '         ' → logprob: -17.000205993652344
    10. '                           ' → logprob: -17.125205993652344

Token 390: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5777275562286377
    2. '+' → logprob: -0.8277275562286377
    3. '+[' → logprob: -6.327727317810059
    4. '[' → logprob: -15.202727317810059
    5. '＋' → logprob: -15.827727317810059
    6. '+
' → logprob: -17.452728271484375
    7. '```' → logprob: -17.577728271484375
    8. '   ' → logprob: -18.202728271484375
    9. '
' → logprob: -19.077728271484375
    10. ' ' → logprob: -19.452728271484375

Token 391: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.338466093642637e-05
    2. ' [' → logprob: -9.750073432922363
    3. '[element' → logprob: -12.000073432922363
    4. '[int' → logprob: -13.875073432922363
    5. '[number' → logprob: -13.875073432922363
    6. '[selected' → logprob: -14.000073432922363
    7. '[current' → logprob: -14.250073432922363
    8. '[state' → logprob: -14.625073432922363
    9. '[next' → logprob: -14.750073432922363
    10. '[event' → logprob: -14.875073432922363

Token 392: 'segment' (ID: 45362)
  Prédit: 'segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -2.5107177862082608e-05
    2. ' segment' → logprob: -10.625024795532227
    3. '(segment' → logprob: -14.500024795532227
    4. '[' → logprob: -16.000024795532227
    5. '   ' → logprob: -16.375024795532227
    6. '
' → logprob: -18.250024795532227
    7. 'seg' → logprob: -18.750024795532227
    8. '           ' → logprob: -19.000024795532227
    9. '.segment' → logprob: -19.000024795532227
    10. ' ' → logprob: -20.000024795532227

Token 393: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.00011415231710998341
    2. 'Val' → logprob: -9.500114440917969
    3. 'val' → logprob: -10.375114440917969
    4. '_VAL' → logprob: -13.000114440917969
    5. 's' → logprob: -13.250114440917969
    6. 'al' → logprob: -14.000114440917969
    7. ']' → logprob: -14.500114440917969
    8. '])' → logprob: -14.750114440917969
    9. '-val' → logprob: -15.000114440917969
    10. '{' → logprob: -15.750114440917969

Token 394: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -4.7755875129951164e-05
    2. '))
' → logprob: -10.37504768371582
    3. '))

' → logprob: -11.25004768371582
    4. ')' → logprob: -12.87504768371582
    5. ' ))' → logprob: -14.25004768371582
    6. ')))' → logprob: -15.50004768371582
    7. '       ' → logprob: -16.75004768371582
    8. '   ' → logprob: -17.50004768371582
    9. '))


' → logprob: -18.50004768371582
    10. '           ' → logprob: -18.62504768371582

Token 395: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01877371035516262
    2. '
' → logprob: -4.018773555755615
    3. '        
' → logprob: -8.018774032592773
    4. '<|end|>' → logprob: -9.268774032592773
    5. 'return' → logprob: -9.393774032592773
    6. ')' → logprob: -10.268774032592773
    7. 'self' → logprob: -10.518774032592773
    8. '

' → logprob: -11.018774032592773
    9. '
' → logprob: -11.643774032592773
    10. ' return' → logprob: -11.893774032592773

Token 396: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00876677967607975
    2. 'return' → logprob: -5.0087666511535645
    3. '
' → logprob: -7.2587666511535645
    4. 'self' → logprob: -7.3837666511535645
    5. '<|end|>' → logprob: -8.008767127990723
    6. '        
' → logprob: -8.383767127990723
    7. ')' → logprob: -9.633767127990723
    8. ' return' → logprob: -10.508767127990723
    9. '        

' → logprob: -11.133767127990723
    10. '<|end|>' → logprob: -11.633767127990723

Token 397: ' To' (ID: 2514)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04612726345658302
    2. 'return' → logprob: -3.1711273193359375
    3. '       ' → logprob: -6.5461273193359375
    4. '           ' → logprob: -6.7961273193359375
    5. ' if' → logprob: -8.046127319335938
    6. '#' → logprob: -8.421127319335938
    7. '
' → logprob: -11.296127319335938
    8. ' return' → logprob: -12.046127319335938
    9. '   ' → logprob: -12.421127319335938
    10. 'If' → logprob: -13.046127319335938

Token 398: ' prevent' (ID: 7332)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0168817043304443
    2. 'continue' → logprob: -2.3918817043304443
    3. '   ' → logprob: -2.5168817043304443
    4. '       ' → logprob: -2.5168817043304443
    5. '           ' → logprob: -2.6418817043304443
    6. '#' → logprob: -3.1418817043304443
    7. 'break' → logprob: -3.2668817043304443
    8. 'early' → logprob: -3.2668817043304443
    9. ')' → logprob: -3.5168817043304443
    10. ' ' → logprob: -4.141881942749023

Token 399: ' useless' (ID: 52837)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.11527805775403976
    2. ' min' → logprob: -2.8652780055999756
    3. '#' → logprob: -3.8652780055999756
    4. 'if' → logprob: -4.490278244018555
    5. 'segments' → logprob: -4.990278244018555
    6. ' segments' → logprob: -6.115278244018555
    7. '(min' → logprob: -6.490278244018555
    8. 'segment' → logprob: -6.490278244018555
    9. 'self' → logprob: -6.740278244018555
    10. 'early' → logprob: -6.740278244018555

Token 400: ' computations' (ID: 192859)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6218621730804443
    2. ' if' → logprob: -0.8718621730804443
    3. 'break' → logprob: -4.246862411499023
    4. 'segments' → logprob: -5.246862411499023
    5. '       ' → logprob: -5.496862411499023
    6. 'early' → logprob: -5.746862411499023
    7. ' early' → logprob: -5.871862411499023
    8. ' segments' → logprob: -5.996862411499023
    9. '           ' → logprob: -6.121862411499023
    10. 'diff' → logprob: -6.871862411499023

Token 401: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005470762262120843
    2. ' if' → logprob: -7.875546932220459
    3. '       ' → logprob: -9.125547409057617
    4. ',' → logprob: -10.625547409057617
    5. '               ' → logprob: -11.250547409057617
    6. 'if' → logprob: -11.500547409057617
    7. '          ' → logprob: -12.875547409057617
    8. '   ' → logprob: -13.125547409057617
    9. '                   ' → logprob: -13.500547409057617
    10. '	       ' → logprob: -13.625547409057617

Token 402: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04890935495495796
    2. '           ' → logprob: -3.2989094257354736
    3. ' if' → logprob: -4.5489091873168945
    4. '               ' → logprob: -8.423909187316895
    5. '```' → logprob: -12.423909187316895
    6. '                   ' → logprob: -12.923909187316895
    7. '       ' → logprob: -13.298909187316895
    8. '                       ' → logprob: -14.298909187316895
    9. '          ' → logprob: -14.548909187316895
    10. '   ' → logprob: -14.673909187316895

Token 403: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06196802109479904
    2. ' min' → logprob: -2.8119680881500244
    3. 'segment' → logprob: -15.311967849731445
    4. '(min' → logprob: -16.311967849731445
    5. '	min' → logprob: -16.561967849731445
    6. ' segment' → logprob: -17.561967849731445
    7. '0' → logprob: -18.311967849731445
    8. 'minimum' → logprob: -18.436967849731445
    9. '   ' → logprob: -18.561967849731445
    10. ' ' → logprob: -18.936967849731445

Token 404: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -9.729906196298543e-06
    2. 'diff' → logprob: -11.625009536743164
    3. '_min' → logprob: -15.000009536743164
    4. '_difference' → logprob: -15.500009536743164
    5. '_d' → logprob: -16.625009536743164
    6. 'min' → logprob: -17.500009536743164
    7. 'if' → logprob: -17.625009536743164
    8. '	diff' → logprob: -18.000009536743164
    9. '(diff' → logprob: -18.250009536743164
    10. 'Diff' → logprob: -18.500009536743164

Token 405: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.048828303813934326
    2. ' ==' → logprob: -3.048828363418579
    3. '<=' → logprob: -8.423828125
    4. ' <=' → logprob: -11.798828125
    5. ')==' → logprob: -12.298828125
    6. '=' → logprob: -12.548828125
    7. ']==' → logprob: -12.673828125
    8. '===' → logprob: -14.173828125
    9. '()==' → logprob: -14.173828125
    10. '==
' → logprob: -14.298828125

Token 406: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.25
    3. '==' → logprob: -16.375
    4. 'zero' → logprob: -19.375
    5. ' ==' → logprob: -20.0
    6. 'already' → logprob: -20.0
    7. '=' → logprob: -20.125
    8. '   ' → logprob: -20.125
    9. '```' → logprob: -20.125
    10. '۰' → logprob: -20.625

Token 407: ' already' (ID: 4279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40396007895469666
    2. '               ' → logprob: -1.778960108757019
    3. ':
' → logprob: -2.1539599895477295
    4. '           ' → logprob: -3.4039599895477295
    5. ',' → logprob: -4.403960227966309
    6. ':return' → logprob: -6.528960227966309
    7. '                   ' → logprob: -8.528960227966309
    8. '   ' → logprob: -9.153960227966309
    9. '              ' → logprob: -9.528960227966309
    10. ' :' → logprob: -10.278960227966309

Token 408: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6753043532371521
    2. '               ' → logprob: -1.0503044128417969
    3. ':
' → logprob: -2.300304412841797
    4. '           ' → logprob: -3.550304412841797
    5. ',' → logprob: -4.425304412841797
    6. '              ' → logprob: -9.425304412841797
    7. ':return' → logprob: -9.425304412841797
    8. '                   ' → logprob: -10.925304412841797
    9. ':
' → logprob: -11.175304412841797
    10. '          ' → logprob: -11.675304412841797

Token 409: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012059949338436127
    2. 'break' → logprob: -5.012060165405273
    3. ' break' → logprob: -5.262060165405273
    4. '           ' → logprob: -9.012060165405273
    5. '                   ' → logprob: -11.887060165405273
    6. 'return' → logprob: -12.137060165405273
    7. '              ' → logprob: -12.262060165405273
    8. ' return' → logprob: -12.762060165405273
    9. '                ' → logprob: -13.637060165405273
    10. '   ' → logprob: -14.012060165405273

Token 410: ' immediately' (ID: 10731)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.14431132376194
    2. '0' → logprob: -2.6443114280700684
    3. ' min' → logprob: -2.7693114280700684
    4. ' ' → logprob: -7.769311428070068
    5. '           ' → logprob: -8.89431095123291
    6. '               ' → logprob: -10.51931095123291
    7. '                   ' → logprob: -11.76931095123291
    8. '   ' → logprob: -12.01931095123291
    9. '            ' → logprob: -12.51931095123291
    10. '       ' → logprob: -12.89431095123291

Token 411: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020608574151992798
    2. '               ' → logprob: -3.89560866355896
    3. ' if' → logprob: -10.770608901977539
    4. ',' → logprob: -11.520608901977539
    5. '            
' → logprob: -11.645608901977539
    6. '                   ' → logprob: -11.770608901977539
    7. '            ' → logprob: -12.520608901977539
    8. '       ' → logprob: -12.520608901977539
    9. '		' → logprob: -13.270608901977539
    10. '
' → logprob: -13.270608901977539

Token 412: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0205889530479908
    2. '               ' → logprob: -3.8955888748168945
    3. '       ' → logprob: -10.895588874816895
    4. ' if' → logprob: -11.145588874816895
    5. '                   ' → logprob: -12.520588874816895
    6. '            ' → logprob: -12.895588874816895
    7. '            
' → logprob: -13.270588874816895
    8. '          ' → logprob: -13.645588874816895
    9. '   ' → logprob: -14.020588874816895
    10. '
' → logprob: -14.270588874816895

Token 413: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004327333997935057
    2. 'if' (adapté à ' if') → logprob: -6.004327297210693
    3. ' if' → logprob: -6.379327297210693
    4. '               ' → logprob: -8.879327774047852
    5. '       ' → logprob: -11.629327774047852
    6. '   ' → logprob: -12.754327774047852
    7. '
' → logprob: -14.379327774047852
    8. '                   ' → logprob: -14.379327774047852
    9. '		' → logprob: -14.754327774047852
    10. '          ' → logprob: -15.004327774047852

Token 414: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011047814972698689
    2. ' min' → logprob: -4.511047840118408
    3. '0' → logprob: -17.38604736328125
    4. '	min' → logprob: -18.13604736328125
    5. '   ' → logprob: -19.51104736328125
    6. '_min' → logprob: -20.38604736328125
    7. '(min' → logprob: -20.76104736328125
    8. ' ' → logprob: -21.01104736328125
    9. 'minimal' → logprob: -21.88604736328125
    10. '[min' → logprob: -22.13604736328125

Token 415: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -2.236549335066229e-05
    2. 'diff' → logprob: -10.750021934509277
    3. 'Diff' → logprob: -14.625021934509277
    4. '	diff' → logprob: -15.750021934509277
    5. '_d' → logprob: -16.250022888183594
    6. '_DIFF' → logprob: -16.625022888183594
    7. '_difference' → logprob: -18.875022888183594
    8. '```' → logprob: -19.000022888183594
    9. 'iff' → logprob: -19.000022888183594
    10. '(diff' → logprob: -19.625022888183594

Token 416: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3132629990577698
    2. '==' → logprob: -1.313262939453125
    3. '==
' → logprob: -14.688262939453125
    4. '=' → logprob: -15.188262939453125
    5. ')==' → logprob: -16.063262939453125
    6. '0' → logprob: -16.313262939453125
    7. '===' → logprob: -16.438262939453125
    8. ' ' → logprob: -16.563262939453125
    9. '```' → logprob: -16.813262939453125
    10. '<=' → logprob: -16.938262939453125

Token 417: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '۰' → logprob: -18.750009536743164
    4. ' ' → logprob: -20.125009536743164
    5. '０' → logprob: -21.000009536743164
    6. '   ' → logprob: -21.250009536743164
    7. '٠' → logprob: -21.250009536743164
    8. '000' → logprob: -21.750009536743164
    9. '00' → logprob: -22.000009536743164
    10. '०' → logprob: -22.000009536743164

Token 418: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '۰' → logprob: -20.375
    4. '000' → logprob: -22.375
    5. '```' → logprob: -22.625
    6. '00' → logprob: -22.75
    7. '٠' → logprob: -22.75
    8. 'zero' → logprob: -22.875
    9. '０' → logprob: -23.125
    10. '०' → logprob: -23.5

Token 419: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5446190237998962
    2. ':
' → logprob: -1.419619083404541
    3. ':' → logprob: -1.794619083404541
    4. '           ' → logprob: -4.669619083404541
    5. ':return' → logprob: -6.044619083404541
    6. '                   ' → logprob: -9.919618606567383
    7. '              ' → logprob: -10.169618606567383
    8. ':
' → logprob: -10.419618606567383
    9. '       ' → logprob: -10.919618606567383
    10. 'return' → logprob: -11.544618606567383

Token 420: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011597428238019347
    2. 'return' → logprob: -6.87615966796875
    3. '           ' → logprob: -9.50115966796875
    4. ' return' → logprob: -10.62615966796875
    5. 'break' → logprob: -11.00115966796875
    6. '                   ' → logprob: -11.62615966796875
    7. '              ' → logprob: -14.37615966796875
    8. ' break' → logprob: -14.75115966796875
    9. '   ' → logprob: -15.12615966796875
    10. ':return' → logprob: -15.12615966796875

Token 421: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10059298574924469
    2. 'break' (adapté à ' break') → logprob: -2.350593090057373
    3. '               ' → logprob: -8.600592613220215
    4. ' return' → logprob: -9.100592613220215
    5. '           ' → logprob: -10.225592613220215
    6. ' break' → logprob: -10.225592613220215
    7. '                   ' → logprob: -11.225592613220215
    8. '   ' → logprob: -12.475592613220215
    9. '       ' → logprob: -15.100592613220215
    10. ':return' → logprob: -15.350592613220215

Token 422: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007345246616750956
    2. '
' → logprob: -5.632345199584961
    3. 'return' → logprob: -6.007345199584961
    4. '        
' → logprob: -7.132345199584961
    5. ' return' → logprob: -7.882345199584961
    6. '<|end|>' → logprob: -10.257345199584961
    7. '```' → logprob: -11.632345199584961
    8. 'self' → logprob: -11.632345199584961
    9. '        

' → logprob: -11.882345199584961
    10. '    
' → logprob: -12.132345199584961

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000691824359819293
    2. 'return' → logprob: -7.375691890716553
    3. ' return' → logprob: -10.375691413879395
    4. 'self' → logprob: -11.125691413879395
    5. '<|end|>' → logprob: -11.625691413879395
    6. '        
' → logprob: -12.500691413879395
    7. '```' → logprob: -13.000691413879395
    8. '
' → logprob: -13.625691413879395
    9. '   ' → logprob: -14.125691413879395
    10. '           ' → logprob: -14.625691413879395

Token 424: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2620002031326294
    2. 'self' (adapté à ' self') → logprob: -1.5120002031326294
    3. 'return' → logprob: -4.76200008392334
    4. ' self' → logprob: -6.63700008392334
    5. ' return' → logprob: -9.51200008392334
    6. '
' → logprob: -10.26200008392334
    7. '   ' → logprob: -11.01200008392334
    8. '```' → logprob: -11.51200008392334
    9. '        
' → logprob: -11.88700008392334
    10. ')' → logprob: -12.13700008392334

Token 425: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.0008121283026412129
    2. '.' → logprob: -8.000812530517578
    3. '.mem' → logprob: -8.375812530517578
    4. '.memory' → logprob: -8.625812530517578
    5. ' .' → logprob: -10.500812530517578
    6. '.mime' → logprob: -11.125812530517578
    7. '.motor' → logprob: -12.125812530517578
    8. '.m' → logprob: -12.750812530517578
    9. '​.' → logprob: -12.875812530517578
    10. '.micro' → logprob: -12.875812530517578

Token 426: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.875001907348633
    3. '[(' → logprob: -14.250001907348633
    4. 'key' → logprob: -18.375001907348633
    5. '[self' → logprob: -19.000001907348633
    6. '[token' → logprob: -19.375001907348633
    7. '[user' → logprob: -20.000001907348633
    8. '(key' → logprob: -20.500001907348633
    9. '\[' → logprob: -20.500001907348633
    10. '[...]' → logprob: -20.500001907348633

Token 427: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.364928700961173e-05
    2. ']=' → logprob: -9.875093460083008
    3. '=' → logprob: -10.125093460083008
    4. ' ]' → logprob: -13.250093460083008
    5. ' =' → logprob: -15.125093460083008
    6. ')' → logprob: -18.375093460083008
    7. ']=(' → logprob: -21.875093460083008
    8. '}' → logprob: -22.000093460083008
    9. ']
' → logprob: -22.000093460083008
    10. ']

' → logprob: -22.625093460083008

Token 428: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '=
' → logprob: -18.663042068481445
    4. '=

' → logprob: -19.538042068481445
    5. '＝' → logprob: -20.538042068481445
    6. ']=' → logprob: -21.038042068481445
    7. ' =
' → logprob: -21.038042068481445
    8. '.=' → logprob: -21.413042068481445
    9. ')=' → logprob: -21.663042068481445
    10. '=}' → logprob: -21.788042068481445

Token 429: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0009114635176956654
    2. ' min' → logprob: -7.000911235809326
    3. '	min' → logprob: -19.750911712646484
    4. 'int' → logprob: -20.625911712646484
    5. '   ' → logprob: -21.250911712646484
    6. '(min' → logprob: -22.000911712646484
    7. '_min' → logprob: -22.125911712646484
    8. '[min' → logprob: -22.250911712646484
    9. '=min' → logprob: -22.750911712646484
    10. '```' → logprob: -23.625911712646484

Token 430: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -2.7491250875755213e-05
    2. '(min' → logprob: -11.250027656555176
    3. 'diff' → logprob: -12.125027656555176
    4. 'min' → logprob: -12.500027656555176
    5. 'Diff' → logprob: -12.500027656555176
    6. '_DIFF' → logprob: -14.500027656555176
    7. '(diff' → logprob: -14.625027656555176
    8. '	diff' → logprob: -15.625027656555176
    9. '_val' → logprob: -16.75002670288086
    10. '_min' → logprob: -16.75002670288086

Token 431: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001239156350493431
    2. 'return' → logprob: -6.75123929977417
    3. ' return' → logprob: -9.876238822937012
    4. '
' → logprob: -11.751238822937012
    5. '   ' → logprob: -13.126238822937012
    6. '	return' → logprob: -13.376238822937012
    7. ':return' → logprob: -13.376238822937012
    8. '	' → logprob: -13.501238822937012
    9. '        
' → logprob: -13.626238822937012
    10. '<|end|>' → logprob: -14.751238822937012

Token 432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005670914542861283
    2. 'return' → logprob: -7.7505669593811035
    3. ' return' → logprob: -9.375567436218262
    4. '	' → logprob: -10.875567436218262
    5. '	return' → logprob: -11.500567436218262
    6. '
' → logprob: -11.500567436218262
    7. '   ' → logprob: -12.000567436218262
    8. '        
' → logprob: -13.250567436218262
    9. ':return' → logprob: -13.625567436218262
    10. '```' → logprob: -14.125567436218262

Token 433: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3138650357723236
    2. 'return' (adapté à ' return') → logprob: -1.313865065574646
    3. ' return' → logprob: -7.4388651847839355
    4. '	return' → logprob: -11.813864707946777
    5. '   ' → logprob: -12.063864707946777
    6. ':return' → logprob: -14.063864707946777
    7. '	' → logprob: -14.438864707946777
    8. '{return' → logprob: -16.063865661621094
    9. ')return' → logprob: -16.313865661621094
    10. '<|end|>' → logprob: -16.438865661621094

Token 434: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01814994215965271
    2. ' min' → logprob: -4.0181498527526855
    3. '	min' → logprob: -19.893150329589844
    4. '   ' → logprob: -21.393150329589844
    5. '_min' → logprob: -21.393150329589844
    6. '(min' → logprob: -21.768150329589844
    7. '[min' → logprob: -23.018150329589844
    8. '.min' → logprob: -24.643150329589844
    9. ' ' → logprob: -24.643150329589844
    10. 'm' → logprob: -24.768150329589844

Token 435: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.00017028623551595956
    2. 'diff' → logprob: -8.750170707702637
    3. 'Diff' → logprob: -11.750170707702637
    4. 'min' → logprob: -12.750170707702637
    5. '	diff' → logprob: -15.250170707702637
    6. '_difference' → logprob: -15.375170707702637
    7. '_DIFF' → logprob: -15.625170707702637
    8. 'difference' → logprob: -16.12516975402832
    9. '(min' → logprob: -16.62516975402832
    10. 'dif' → logprob: -16.87516975402832

Token 436: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: ' Iter' (ID: 24464)
  Prédit: 'Iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iter' → logprob: -0.5188759565353394
    2. 'Dynamic' → logprob: -1.7688759565353394
    3. 'DP' → logprob: -1.8938759565353394
    4. 'Gre' → logprob: -3.393876075744629
    5. ' Dynamic' → logprob: -4.018876075744629
    6. 'Memo' → logprob: -4.893876075744629
    7. ' DP' → logprob: -5.018876075744629
    8. ' Iter' → logprob: -5.518876075744629
    9. 'Segment' → logprob: -5.643876075744629
    10. 'Optim' → logprob: -5.893876075744629

Token 439: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -4.60414821645827e-06
    2. 'Recursive' → logprob: -13.500004768371582
    3. 'active' → logprob: -13.875004768371582
    4. '_' → logprob: -14.500004768371582
    5. 'a' → logprob: -14.750004768371582
    6. 'Segment' → logprob: -14.750004768371582
    7. 'segment' → logprob: -15.750004768371582
    8. 'recursive' → logprob: -16.125003814697266
    9. 'At' → logprob: -16.500003814697266
    10. '_recursive' → logprob: -16.750003814697266

Token 440: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -4.723352049040841e-06
    2. '_segment' → logprob: -13.500004768371582
    3. ' Segment' → logprob: -13.625004768371582
    4. 'Seg' → logprob: -14.250004768371582
    5. 'Recursive' → logprob: -14.375004768371582
    6. 'segment' → logprob: -14.375004768371582
    7. 'Abstract' → logprob: -16.625003814697266
    8. '```' → logprob: -17.375003814697266
    9. '(S' → logprob: -17.500003814697266
    10. 'class' → logprob: -17.750003814697266

Token 441: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -2.816093228830141e-06
    2. 'erer' → logprob: -13.75000286102295
    3. 'class' → logprob: -13.87500286102295
    4. '```' → logprob: -15.25000286102295
    5. 'Segment' → logprob: -15.62500286102295
    6. ' er' → logprob: -15.87500286102295
    7. 'segment' → logprob: -17.000001907348633
    8. '_er' → logprob: -17.125001907348633
    9. 'izer' → logprob: -17.250001907348633
    10. '_segment' → logprob: -17.875001907348633

Token 442: '(Abstract' (ID: 94462)
  Prédit: '(Abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Abstract' → logprob: -0.00018375257786829025
    2. ':' → logprob: -8.625184059143066
    3. '(' → logprob: -12.625184059143066
    4. ':
' → logprob: -14.625184059143066
    5. '<Abstract' → logprob: -15.000184059143066
    6. '(AST' → logprob: -18.25018310546875
    7. '_Abstract' → logprob: -18.37518310546875
    8. '{' → logprob: -19.37518310546875
    9. 'Abstract' → logprob: -19.50018310546875
    10. '():' → logprob: -19.50018310546875

Token 443: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -4.723352049040841e-06
    2. 'Abstract' → logprob: -13.125004768371582
    3. 'segment' → logprob: -13.750004768371582
    4. '_segment' → logprob: -14.500004768371582
    5. '```' → logprob: -15.375004768371582
    6. ')' → logprob: -15.750004768371582
    7. '):
' → logprob: -15.875004768371582
    8. ' Segment' → logprob: -16.125003814697266
    9. '-' → logprob: -16.250003814697266
    10. '(Abstract' → logprob: -16.875003814697266

Token 444: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.2233183042553719e-05
    2. 'Segment' → logprob: -11.625012397766113
    3. 'erer' → logprob: -13.750012397766113
    4. 'class' → logprob: -14.375012397766113
    5. '```' → logprob: -14.750012397766113
    6. 'izer' → logprob: -15.875012397766113
    7. '__' → logprob: -15.875012397766113
    8. 'Abstract' → logprob: -16.250011444091797
    9. 'ater' → logprob: -16.500011444091797
    10. '   ' → logprob: -16.500011444091797

Token 445: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20483702421188354
    2. '):
' → logprob: -1.7048370838165283
    3. ':' → logprob: -5.829836845397949
    4. ':
' → logprob: -7.704836845397949
    5. '   ' → logprob: -11.20483684539795
    6. '):
' → logprob: -12.45483684539795
    7. ')' → logprob: -12.82983684539795
    8. ',' → logprob: -13.57983684539795
    9. '(' → logprob: -13.57983684539795
    10. 'def' → logprob: -13.57983684539795

Token 446: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19131702184677124
    2. ' def' → logprob: -2.441317081451416
    3. 'def' → logprob: -2.441317081451416
    4. ':' → logprob: -10.816316604614258
    5. '	def' → logprob: -12.191316604614258
    6. ':def' → logprob: -12.566316604614258
    7. '
' → logprob: -12.691316604614258
    8. ')' → logprob: -12.816316604614258
    9. ' segment' → logprob: -14.316316604614258
    10. ' ' → logprob: -14.691316604614258

Token 447: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009699412039481103
    2. ' def' → logprob: -7.000969886779785
    3. '   ' → logprob: -9.750969886779785
    4. '	def' → logprob: -16.1259708404541
    5. 'from' → logprob: -17.0009708404541
    6. '#' (adapté à ' #') → logprob: -17.7509708404541
    7. 'class' → logprob: -17.8759708404541
    8. ' ' → logprob: -18.5009708404541
    9. 'import' → logprob: -19.2509708404541
    10. '  ' → logprob: -19.3759708404541

Token 448: ' Dynamic' (ID: 37191)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002637199067976326
    2. ' def' → logprob: -8.250264167785645
    3. '   ' → logprob: -13.625264167785645
    4. 'from' → logprob: -14.500264167785645
    5. 'class' → logprob: -14.625264167785645
    6. '```' → logprob: -16.125263214111328
    7. '#' → logprob: -17.250263214111328
    8. '"""
' → logprob: -17.500263214111328
    9. 'import' → logprob: -17.750263214111328
    10. '	def' → logprob: -18.125263214111328

Token 449: ' programming' (ID: 23238)
  Prédit: ' programming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.7172694206237793
    2. 'Programming' → logprob: -0.7172694206237793
    3. ' Programming' → logprob: -4.467269420623779
    4. 'program' → logprob: -4.467269420623779
    5. '   ' → logprob: -8.092269897460938
    6. '_program' → logprob: -8.467269897460938
    7. 'def' → logprob: -9.717269897460938
    8. 'Program' → logprob: -9.842269897460938
    9. 'import' → logprob: -9.967269897460938
    10. 'class' → logprob: -10.092269897460938

Token 450: ' based' (ID: 4122)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5220791697502136
    2. '   ' → logprob: -1.0220792293548584
    3. ' def' → logprob: -3.1470792293548584
    4. '
' → logprob: -6.022078990936279
    5. ':' → logprob: -7.022078990936279
    6. ':
' → logprob: -8.147079467773438
    7. '	def' → logprob: -9.022079467773438
    8. 'class' → logprob: -9.522079467773438
    9. ':def' → logprob: -10.647079467773438
    10. '    
' → logprob: -11.272079467773438

Token 451: ' approach' (ID: 7139)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004460623953491449
    2. ' def' → logprob: -5.62946081161499
    3. '   ' → logprob: -7.12946081161499
    4. '
' → logprob: -10.379460334777832
    5. 'class' → logprob: -10.879460334777832
    6. ':' → logprob: -12.754460334777832
    7. 'from' → logprob: -13.504460334777832
    8. ':
' → logprob: -13.879460334777832
    9. '	def' → logprob: -13.879460334777832
    10. ':def' → logprob: -14.004460334777832

Token 452: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10252878814935684
    2. 'def' → logprob: -2.3525288105010986
    3. ' def' → logprob: -6.2275285720825195
    4. '
' → logprob: -8.47752857208252
    5. ':' → logprob: -9.35252857208252
    6. '	def' → logprob: -10.60252857208252
    7. ':
' → logprob: -11.60252857208252
    8. '    
' → logprob: -11.85252857208252
    9. ':def' → logprob: -12.60252857208252
    10. 'from' → logprob: -12.72752857208252

Token 453: ' handle' (ID: 5318)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.46023914217948914
    2. ' segment' → logprob: -2.0852391719818115
    3. ' find' → logprob: -2.4602391719818115
    4. 'find' → logprob: -2.7102391719818115
    5. 'solve' → logprob: -3.3352391719818115
    6. 'def' → logprob: -3.9602391719818115
    7. ' solve' → logprob: -4.710238933563232
    8. 'min' → logprob: -4.835238933563232
    9. 'compute' → logprob: -5.085238933563232
    10. ' def' → logprob: -5.335238933563232

Token 454: ' large' (ID: 4410)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.6993588805198669
    2. 'very' → logprob: -0.9493588805198669
    3. 'long' → logprob: -2.4493589401245117
    4. ' large' → logprob: -4.199358940124512
    5. 'the' → logprob: -4.949358940124512
    6. ' very' → logprob: -5.449358940124512
    7. '#' → logprob: -7.324358940124512
    8. ' long' → logprob: -7.574358940124512
    9. 'length' → logprob: -7.824358940124512
    10. 'this' → logprob: -7.824358940124512

Token 455: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.2416606843471527
    2. ' inputs' → logprob: -1.741660714149475
    3. 'input' → logprob: -4.1166605949401855
    4. 'strings' → logprob: -4.4916605949401855
    5. ' strings' → logprob: -5.4916605949401855
    6. ' input' → logprob: -5.8666605949401855
    7. '   ' → logprob: -6.2416605949401855
    8. 'numbers' → logprob: -6.7416605949401855
    9. 'number' → logprob: -6.8666605949401855
    10. ' numbers' → logprob: -8.991661071777344

Token 456: ' efficiently' (ID: 34229)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.260910302400589
    2. 'def' → logprob: -2.0109102725982666
    3. ' def' → logprob: -2.3859102725982666
    4. '
' → logprob: -5.635910511016846
    5. ':' → logprob: -9.010910034179688
    6. '	def' → logprob: -10.510910034179688
    7. ':
' → logprob: -11.010910034179688
    8. ')' → logprob: -11.635910034179688
    9. '    
' → logprob: -11.760910034179688
    10. ':def' → logprob: -11.760910034179688

Token 457: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0922648012638092
    2. '
' → logprob: -2.8422648906707764
    3. 'def' → logprob: -3.9672648906707764
    4. ' def' → logprob: -4.592264652252197
    5. ':' → logprob: -7.467264652252197
    6. ':
' → logprob: -9.342265129089355
    7. '    
' → logprob: -9.467265129089355
    8. '	def' → logprob: -11.217265129089355
    9. ':def' → logprob: -11.342265129089355
    10. ')' → logprob: -11.717265129089355

Token 458: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.09777520596981049
    2. 'def' → logprob: -2.8477752208709717
    3. '   ' → logprob: -3.3477752208709717
    4. '
' → logprob: -12.09777545928955
    5. '    ' → logprob: -13.22277545928955
    6. '	def' → logprob: -13.47277545928955
    7. '    
' → logprob: -14.09777545928955
    8. ' ' → logprob: -14.59777545928955
    9. '  ' → logprob: -14.84777545928955
    10. 'from' → logprob: -14.97277545928955

Token 459: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008034566417336464
    2. ' def' → logprob: -4.883034706115723
    3. '   ' → logprob: -7.758034706115723
    4. '	def' → logprob: -15.258034706115723
    5. 'from' → logprob: -15.383034706115723
    6. ' ' → logprob: -15.508034706115723
    7. 'import' → logprob: -15.883034706115723
    8. '  ' → logprob: -16.133033752441406
    9. '
' → logprob: -16.633033752441406
    10. '#' (adapté à ' #') → logprob: -17.133033752441406

Token 460: ' DP' (ID: 51992)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015310514718294144
    2. ' def' → logprob: -6.50153112411499
    3. '   ' → logprob: -11.001530647277832
    4. 'from' → logprob: -11.626530647277832
    5. 'import' → logprob: -13.001530647277832
    6. '
' → logprob: -14.501530647277832
    7. '```' → logprob: -15.751530647277832
    8. '#' → logprob: -16.00153160095215
    9. '	def' → logprob: -16.62653160095215
    10. 'class' → logprob: -16.87653160095215

Token 461: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7530956864356995
    2. 'def' → logprob: -1.1280956268310547
    3. '   ' → logprob: -2.5030956268310547
    4. ':' → logprob: -2.7530956268310547
    5. ' def' → logprob: -3.1280956268310547
    6. '=' → logprob: -4.503095626831055
    7. '_length' → logprob: -6.128095626831055
    8. ')' → logprob: -7.753095626831055
    9. 'dp' → logprob: -8.003095626831055
    10. '_size' → logprob: -8.253095626831055

Token 462: ' dp' (ID: 21546)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08850280195474625
    2. 'dp' → logprob: -3.338502883911133
    3. '#' → logprob: -3.713502883911133
    4. '   ' → logprob: -4.338502883911133
    5. ' def' → logprob: -5.463502883911133
    6. 'from' → logprob: -5.588502883911133
    7. 'self' → logprob: -6.588502883911133
    8. '
' → logprob: -7.213502883911133
    9. 'length' → logprob: -8.338502883911133
    10. 'We' → logprob: -8.463502883911133

Token 463: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009333016350865364
    2. ':' → logprob: -4.75933313369751
    3. '=' → logprob: -7.25933313369751
    4. '   ' → logprob: -12.509332656860352
    5. ' :' → logprob: -13.134332656860352
    6. '```' → logprob: -13.384332656860352
    7. ')' → logprob: -13.634332656860352
    8. '=[' → logprob: -13.634332656860352
    9. ']' → logprob: -13.759332656860352
    10. ' ' → logprob: -14.634332656860352

Token 464: ']' (ID: 60)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6740188598632812
    2. ']' → logprob: -1.2990188598632812
    3. ' =' → logprob: -1.5490188598632812
    4. '=' → logprob: -5.424018859863281
    5. ']=' → logprob: -8.299018859863281
    6. ']:' → logprob: -8.549018859863281
    7. ':int' → logprob: -9.799018859863281
    8. ')' → logprob: -9.799018859863281
    9. ':]' → logprob: -10.174018859863281
    10. ' ]' → logprob: -10.924018859863281

Token 465: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12390848249197006
    2. '=' → logprob: -2.623908519744873
    3. ':' → logprob: -3.123908519744873
    4. '   ' → logprob: -11.123908042907715
    5. ' :' → logprob: -12.498908042907715
    6. ')' → logprob: -12.873908042907715
    7. ' is' → logprob: -12.998908042907715
    8. '[' → logprob: -13.373908042907715
    9. '=[' → logprob: -13.373908042907715
    10. '=None' → logprob: -13.498908042907715

Token 466: ' minimal' (ID: 19957)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.006265181582421064
    2. 'None' → logprob: -5.506265163421631
    3. 'inf' → logprob: -6.631265163421631
    4. '0' → logprob: -8.006265640258789
    5. 'the' → logprob: -8.881265640258789
    6. 'min' → logprob: -9.131265640258789
    7. 'minimum' → logprob: -9.256265640258789
    8. '(float' → logprob: -9.881265640258789
    9. ' float' → logprob: -10.381265640258789
    10. 'minimal' → logprob: -10.381265640258789

Token 467: ' difference' (ID: 9809)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.10079595446586609
    2. ' difference' → logprob: -2.4757959842681885
    3. 'max' → logprob: -5.350795745849609
    4. 'float' → logprob: -6.225795745849609
    5. 'int' → logprob: -6.350795745849609
    6. 'diff' → logprob: -6.475795745849609
    7. 'Difference' → logprob: -8.10079574584961
    8. 'dp' → logprob: -8.22579574584961
    9. 'possible' → logprob: -8.47579574584961
    10. '_difference' → logprob: -8.85079574584961

Token 468: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.068631649017334
    2. 'from' → logprob: -1.693631649017334
    3. ' for' → logprob: -1.818631649017334
    4. ' from' → logprob: -2.568631649017334
    5. ' at' → logprob: -2.818631649017334
    6. '=' → logprob: -3.193631649017334
    7. '   ' → logprob: -3.443631649017334
    8. '       ' → logprob: -3.443631649017334
    9. 'for' → logprob: -3.443631649017334
    10. ' after' → logprob: -5.068631649017334

Token 469: ' substring' (ID: 89494)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.7702538967132568
    2. 'self' → logprob: -1.1452538967132568
    3. 'number' → logprob: -2.645253896713257
    4. ' the' → logprob: -3.395253896713257
    5. ' self' → logprob: -3.395253896713257
    6. 'the' → logprob: -3.520253896713257
    7. ' segment' → logprob: -3.645253896713257
    8. 'partition' → logprob: -5.145254135131836
    9. 'segments' → logprob: -5.270254135131836
    10. ' number' → logprob: -5.395254135131836

Token 470: ' number' (ID: 2086)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.898518443107605
    2. ' up' → logprob: -1.273518443107605
    3. 'from' → logprob: -1.648518443107605
    4. ' self' → logprob: -2.7735185623168945
    5. 'self' → logprob: -3.3985185623168945
    6. '(self' → logprob: -5.2735185623168945
    7. 's' → logprob: -5.3985185623168945
    8. 'up' → logprob: -5.6485185623168945
    9. '[' → logprob: -5.7735185623168945
    10. '(' → logprob: -5.7735185623168945

Token 471: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.008727441541850567
    2. 'str' → logprob: -6.258727550506592
    3. '_s' → logprob: -6.383727550506592
    4. '   ' → logprob: -6.383727550506592
    5. '       ' → logprob: -6.383727550506592
    6. 's' → logprob: -7.758727550506592
    7. 'self' → logprob: -8.008727073669434
    8. '_' → logprob: -9.008727073669434
    9. ' =' → logprob: -9.258727073669434
    10. ' ' → logprob: -9.383727073669434

Token 472: '[' (ID: 58)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.8004418611526489
    2. '[i' → logprob: -1.300441861152649
    3. ' from' → logprob: -1.800441861152649
    4. 'from' → logprob: -2.8004417419433594
    5. ' up' → logprob: -3.3004417419433594
    6. '[' → logprob: -4.675441741943359
    7. ' starting' → logprob: -5.550441741943359
    8. 's' → logprob: -7.550441741943359
    9. 'up' → logprob: -7.675441741943359
    10. '(i' → logprob: -8.05044174194336

Token 473: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7195039391517639
    2. '0' → logprob: -0.9695039391517639
    3. ':i' → logprob: -2.219503879547119
    4. ':' → logprob: -3.719503879547119
    5. ' :' → logprob: -7.969503879547119
    6. '
' → logprob: -8.219504356384277
    7. ' i' → logprob: -9.594504356384277
    8. ':]' → logprob: -10.469504356384277
    9. ':
' → logprob: -10.844504356384277
    10. '[i' → logprob: -10.969504356384277

Token 474: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.0026196548715233803
    2. ':' → logprob: -6.127619743347168
    3. ' :' → logprob: -8.127619743347168
    4. 'i' → logprob: -9.127619743347168
    5. ' i' → logprob: -11.627619743347168
    6. '1' → logprob: -12.252619743347168
    7. '
' → logprob: -12.502619743347168
    8. ' ' → logprob: -12.877619743347168
    9. '0' → logprob: -13.377619743347168
    10. '...' → logprob: -13.627619743347168

Token 475: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011310477275401354
    2. '],' → logprob: -7.001131057739258
    3. '].' → logprob: -9.251131057739258
    4. ' ]' → logprob: -9.876131057739258
    5. '+' → logprob: -10.126131057739258
    6. ']
' → logprob: -11.501131057739258
    7. '   ' → logprob: -12.751131057739258
    8. ']

' → logprob: -12.876131057739258
    9. '])' → logprob: -12.876131057739258
    10. ']'' → logprob: -13.001131057739258

Token 476: ' storing' (ID: 42787)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2405240535736084
    2. 'from' → logprob: -1.7405240535736084
    3. '[' → logprob: -2.3655240535736084
    4. '   ' → logprob: -2.8655240535736084
    5. 'None' → logprob: -2.8655240535736084
    6. ' dp' → logprob: -3.2405240535736084
    7. 'default' → logprob: -3.4905240535736084
    8. ' i' → logprob: -3.4905240535736084
    9. ' where' → logprob: -3.4905240535736084
    10. ' default' → logprob: -3.6155240535736084

Token 477: ' min' (ID: 1349)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.5714370012283325
    2. 'None' → logprob: -2.571436882019043
    3. 'float' → logprob: -2.946436882019043
    4. '(min' → logprob: -3.571436882019043
    5. 'min' → logprob: -3.696436882019043
    6. 'int' → logprob: -3.696436882019043
    7. '(int' → logprob: -3.946436882019043
    8. 'Tuple' → logprob: -3.946436882019043
    9. 'the' → logprob: -4.071436882019043
    10. '(None' → logprob: -4.071436882019043

Token 478: ' and' (ID: 326)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.10996048152446747
    2. '_' → logprob: -2.9849605560302734
    3. '_difference' → logprob: -4.109960556030273
    4. '_val' → logprob: -4.734960556030273
    5. '_segments' → logprob: -4.984960556030273
    6. '_segment' → logprob: -5.484960556030273
    7. 'max' → logprob: -5.609960556030273
    8. '_max' → logprob: -5.734960556030273
    9. ' and' → logprob: -6.609960556030273
    10. 'diff' → logprob: -6.859960556030273

Token 479: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014165041036903858
    2. ' max' → logprob: -4.264164924621582
    3. 'dp' → logprob: -14.889164924621582
    4. '_max' → logprob: -15.014164924621582
    5. '	max' → logprob: -15.139164924621582
    6. '(max' → logprob: -15.139164924621582
    7. 'min' → logprob: -16.7641658782959
    8. ',max' → logprob: -16.8891658782959
    9. '[max' → logprob: -17.1391658782959
    10. 'maxlength' → logprob: -17.1391658782959

Token 480: ' segments' (ID: 33749)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5750386714935303
    2. ' =' → logprob: -1.4500386714935303
    3. ',' → logprob: -3.0750386714935303
    4. 'from' → logprob: -3.2000386714935303
    5. 'values' → logprob: -4.075038909912109
    6. '=' → logprob: -4.200038909912109
    7. ' values' → logprob: -4.325038909912109
    8. '_values' → logprob: -4.700038909912109
    9. ' and' → logprob: -5.075038909912109
    10. ' segments' → logprob: -5.075038909912109

Token 481: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3805396258831024
    2. ' =' → logprob: -1.8805396556854248
    3. ' as' → logprob: -3.380539655685425
    4. '
' → logprob: -3.505539655685425
    5. ' with' → logprob: -4.130539417266846
    6. '       ' → logprob: -4.255539417266846
    7. 'from' → logprob: -4.255539417266846
    8. ' from' → logprob: -4.505539417266846
    9. ',' → logprob: -4.755539417266846
    10. ':' → logprob: -5.380539417266846

Token 482: ' tuple' (ID: 31311)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2608330249786377
    2. 'a' → logprob: -1.3858330249786377
    3. 'each' → logprob: -1.6358330249786377
    4. ' tuples' → logprob: -3.1358330249786377
    5. ' each' → logprob: -3.3858330249786377
    6. 'the' → logprob: -3.3858330249786377
    7. 'Tuple' → logprob: -3.5108330249786377
    8. 'segments' → logprob: -3.7608330249786377
    9. 'tuple' → logprob: -3.8858330249786377
    10. ' a' → logprob: -4.135832786560059

Token 483: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7096140384674072
    2. ' =' → logprob: -0.9596140384674072
    3. ':' → logprob: -2.9596140384674072
    4. 'from' → logprob: -3.7096140384674072
    5. '=' → logprob: -4.334613800048828
    6. ' from' → logprob: -4.459613800048828
    7. '
' → logprob: -4.834613800048828
    8. ':
' → logprob: -5.834613800048828
    9. '):
' → logprob: -6.209613800048828
    10. ' ' → logprob: -6.209613800048828

Token 484: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1349872499704361
    2. '
' → logprob: -2.6349873542785645
    3. 'def' → logprob: -3.6349873542785645
    4. ' def' → logprob: -4.1349873542785645
    5. ':
' → logprob: -5.1349873542785645
    6. ':' → logprob: -5.5099873542785645
    7. '):
' → logprob: -7.8849873542785645
    8. '    
' → logprob: -7.8849873542785645
    9. '

' → logprob: -8.759986877441406
    10. '```' → logprob: -8.884986877441406

Token 485: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01850610412657261
    2. ' def' → logprob: -4.018506050109863
    3. '   ' → logprob: -8.143506050109863
    4. 'class' → logprob: -10.518506050109863
    5. 'from' → logprob: -10.643506050109863
    6. '
' → logprob: -12.268506050109863
    7. 'dp' → logprob: -13.143506050109863
    8. 'import' → logprob: -13.393506050109863
    9. '	def' → logprob: -13.518506050109863
    10. ' ' → logprob: -13.768506050109863

Token 486: ' segment' (ID: 14806)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.604202151298523
    2. 'segment' → logprob: -0.979202151298523
    3. ' segment' → logprob: -3.3542022705078125
    4. ' __' → logprob: -3.3542022705078125
    5. 'def' → logprob: -4.9792022705078125
    6. ' def' → logprob: -7.4792022705078125
    7. '_segment' → logprob: -7.8542022705078125
    8. 'seg' → logprob: -9.104202270507812
    9. '___' → logprob: -11.354202270507812
    10. '```' → logprob: -11.979202270507812

Token 487: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.4987974029500037e-05
    2. '(' → logprob: -10.750024795532227
    3. '   ' → logprob: -13.375024795532227
    4. ' (' → logprob: -13.750024795532227
    5. '       ' → logprob: -14.125024795532227
    6. 'self' → logprob: -16.250024795532227
    7. ' ' → logprob: -17.750024795532227
    8. '```' → logprob: -18.500024795532227
    9. 'def' → logprob: -19.000024795532227
    10. '(
' → logprob: -19.500024795532227

Token 488: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7696973085403442
    2. ',' → logprob: -0.8946973085403442
    3. '):' → logprob: -2.5196971893310547
    4. ')' → logprob: -3.5196971893310547
    5. '   ' → logprob: -4.394697189331055
    6. '       ' → logprob: -6.144697189331055
    7. '(self' → logprob: -6.269697189331055
    8. '):
' → logprob: -6.769697189331055
    9. ' self' → logprob: -8.644697189331055
    10. ' ' → logprob: -9.519697189331055

Token 489: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.14509317278862
    2. '->' → logprob: -2.3950932025909424
    3. ' ->' → logprob: -3.3950932025909424
    4. 'self' → logprob: -5.520092964172363
    5. '       ' → logprob: -5.895092964172363
    6. '   ' → logprob: -6.520092964172363
    7. ')' → logprob: -7.020092964172363
    8. '(' → logprob: -7.270092964172363
    9. ':' → logprob: -7.895092964172363
    10. ' self' → logprob: -9.520092964172363

Token 490: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011086373589932919
    2. ' int' → logprob: -5.011086463928223
    3. 'Tuple' → logprob: -6.011086463928223
    4. 'List' → logprob: -6.511086463928223
    5. 'Optional' → logprob: -9.261086463928223
    6. '(int' → logprob: -9.511086463928223
    7. '   ' → logprob: -9.636086463928223
    8. 'float' → logprob: -9.636086463928223
    9. ' Tuple' → logprob: -9.886086463928223
    10. '[int' → logprob: -10.886086463928223

Token 491: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4853975772857666
    2. ':
' → logprob: -1.4853975772857666
    3. '       ' → logprob: -1.8603975772857666
    4. '():
' → logprob: -6.9853973388671875
    5. '():' → logprob: -7.3603973388671875
    6. '):
' → logprob: -7.7353973388671875
    7. '   ' → logprob: -8.735397338867188
    8. '):' → logprob: -8.860397338867188
    9. '(self' → logprob: -9.235397338867188
    10. ':
' → logprob: -10.110397338867188

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005202664178796113
    2. 'dp' → logprob: -7.7505202293396
    3. 'n' → logprob: -10.125520706176758
    4. ' dp' → logprob: -10.500520706176758
    5. 'from' → logprob: -11.125520706176758
    6. ' from' → logprob: -13.125520706176758
    7. ' n' → logprob: -13.500520706176758
    8. '   ' → logprob: -13.625520706176758
    9. 'import' → logprob: -14.000520706176758
    10. '      ' → logprob: -14.625520706176758

Token 493: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4535869061946869
    2. 'n' → logprob: -1.4535869359970093
    3. '       ' → logprob: -2.4535868167877197
    4. 'from' → logprob: -3.5785868167877197
    5. 'import' → logprob: -5.203587055206299
    6. ' n' → logprob: -5.203587055206299
    7. 'length' → logprob: -5.453587055206299
    8. ' dp' → logprob: -7.078587055206299
    9. 'max' → logprob: -8.45358657836914
    10. '   ' → logprob: -8.45358657836914

Token 494: ' We' (ID: 1416)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23267747461795807
    2. 'dp' → logprob: -1.9826774597167969
    3. 'length' → logprob: -3.107677459716797
    4. 'from' → logprob: -4.232677459716797
    5. '   ' → logprob: -5.482677459716797
    6. '       ' → logprob: -5.732677459716797
    7. ' n' → logprob: -6.357677459716797
    8. 'import' → logprob: -7.107677459716797
    9. 'max' → logprob: -8.357677459716797
    10. '#' → logprob: -9.107677459716797

Token 495: ' need' (ID: 1309)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4808400869369507
    2. '       ' → logprob: -1.2308400869369507
    3. 'from' → logprob: -3.6058402061462402
    4. 'n' → logprob: -3.7308402061462402
    5. '   ' → logprob: -4.23084020614624
    6. ' length' → logprob: -4.60584020614624
    7. '_length' → logprob: -5.60584020614624
    8. 'ength' → logprob: -6.10584020614624
    9. '```' → logprob: -6.48084020614624
    10. 'def' → logprob: -6.48084020614624

Token 496: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.25661537051200867
    2. 'to' → logprob: -1.631615400314331
    3. 'from' → logprob: -4.006615161895752
    4. ' from' → logprob: -5.756615161895752
    5. '       ' → logprob: -5.881615161895752
    6. '   ' → logprob: -6.131615161895752
    7. 'dp' → logprob: -6.506615161895752
    8. 'import' → logprob: -6.881615161895752
    9. 'n' → logprob: -7.381615161895752
    10. ' dp' → logprob: -8.00661563873291

Token 497: ' find' (ID: 1646)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5617350339889526
    2. 'from' → logprob: -1.1867350339889526
    3. 'store' → logprob: -3.186735153198242
    4. 'initialize' → logprob: -3.311735153198242
    5. 'find' → logprob: -4.811735153198242
    6. 'length' → logprob: -4.936735153198242
    7. 'return' → logprob: -5.561735153198242
    8. 'import' → logprob: -5.561735153198242
    9. 'handle' → logprob: -5.811735153198242
    10. 'consider' → logprob: -5.811735153198242

Token 498: ' min' (ID: 1349)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4179494082927704
    2. 'the' → logprob: -2.0429494380950928
    3. 'minimal' → logprob: -3.1679494380950928
    4. 'self' → logprob: -3.2929494380950928
    5. 'min' → logprob: -3.2929494380950928
    6. ' minimal' → logprob: -3.7929494380950928
    7. ' the' → logprob: -3.7929494380950928
    8. 'a' → logprob: -3.7929494380950928
    9. ' dp' → logprob: -4.917949199676514
    10. '   ' → logprob: -5.417949199676514

Token 499: ' diff' (ID: 8868)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.0832735151052475
    2. 'import' → logprob: -3.958273410797119
    3. '_difference' → logprob: -3.958273410797119
    4. 'diff' → logprob: -4.833273410797119
    5. 'max' → logprob: -5.083273410797119
    6. ',' → logprob: -5.333273410797119
    7. '_max' → logprob: -5.833273410797119
    8. '_' → logprob: -6.083273410797119
    9. '_d' → logprob: -6.333273410797119
    10. 'and' → logprob: -6.333273410797119

Token 500: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7714837193489075
    2. ' over' → logprob: -1.7714836597442627
    3. ' for' → logprob: -2.0214836597442627
    4. ' =' → logprob: -2.3964836597442627
    5. ' between' → logprob: -2.6464836597442627
    6. '=' → logprob: -4.021483898162842
    7. ',' → logprob: -4.646483898162842
    8. '   ' → logprob: -5.146483898162842
    9. 'for' → logprob: -5.271483898162842
    10. ' of' → logprob: -5.896483898162842

Token 501: ' partitions' (ID: 89097)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9550310969352722
    2. 'all' → logprob: -1.705031156539917
    3. ' all' → logprob: -1.830031156539917
    4. 'range' → logprob: -2.330031156539917
    5. ' self' → logprob: -2.705031156539917
    6. 'the' → logprob: -3.705031156539917
    7. ' the' → logprob: -3.955031156539917
    8. ' range' → logprob: -4.455030918121338
    9. 'number' → logprob: -4.705030918121338
    10. '   ' → logprob: -4.955030918121338

Token 502: ' into' (ID: 1511)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05841995030641556
    2. 'from' → logprob: -3.183419942855835
    3. ' from' → logprob: -5.308420181274414
    4. ' =' → logprob: -6.058420181274414
    5. '=' → logprob: -6.058420181274414
    6. ' of' → logprob: -6.183420181274414
    7. ':' → logprob: -6.933420181274414
    8. ',' → logprob: -6.933420181274414
    9. '(' → logprob: -8.183420181274414
    10. '   ' → logprob: -8.308420181274414

Token 503: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.021790148690342903
    2. ' at' → logprob: -3.8967902660369873
    3. '[' → logprob: -7.271790027618408
    4. 'two' → logprob: -8.021790504455566
    5. '2' → logprob: -9.396790504455566
    6. 'range' → logprob: -10.521790504455566
    7. '>=' → logprob: -10.646790504455566
    8. 'segments' → logprob: -10.646790504455566
    9. 'ranges' → logprob: -11.896790504455566
    10. 'parts' → logprob: -12.021790504455566

Token 504: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.0008664412307552993
    2. ' least' → logprob: -7.250866413116455
    3. '2' → logprob: -9.250866889953613
    4. 'at' → logprob: -10.250866889953613
    5. '1' → logprob: -11.875866889953613
    6. 'list' → logprob: -12.375866889953613
    7. 'Least' → logprob: -12.500866889953613
    8. 'lease' → logprob: -12.625866889953613
    9. 'two' → logprob: -13.750866889953613
    10. 'le' → logprob: -13.750866889953613

Token 505: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.13944168388843536
    2. ' two' → logprob: -2.139441728591919
    3. '2' → logprob: -4.38944149017334
    4. ' ' → logprob: -11.01444149017334
    5. '   ' → logprob: -11.88944149017334
    6. '_two' → logprob: -12.88944149017334
    7. 'Two' → logprob: -13.51444149017334
    8. '[' → logprob: -15.13944149017334
    9. ' zwei' → logprob: -16.764442443847656
    10. 'def' → logprob: -16.889442443847656

Token 506: ' parts' (ID: 7881)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.8342090845108032
    2. ' parts' → logprob: -0.9592090845108032
    3. 'segments' → logprob: -1.9592090845108032
    4. 'parts' → logprob: -3.2092089653015137
    5. '   ' → logprob: -7.584208965301514
    6. '       ' → logprob: -8.959209442138672
    7. 'pieces' → logprob: -8.959209442138672
    8. ' pieces' → logprob: -9.084209442138672
    9. ' lists' → logprob: -9.834209442138672
    10. ' ' → logprob: -9.959209442138672

Token 507: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004698426462709904
    2. '
' → logprob: -6.004698276519775
    3. ',' → logprob: -7.004698276519775
    4. 'from' → logprob: -7.254698276519775
    5. 'dp' → logprob: -8.379698753356934
    6. 'number' → logprob: -9.129698753356934
    7. '        
' → logprob: -9.379698753356934
    8. ':' → logprob: -10.129698753356934
    9. ' from' → logprob: -10.379698753356934
    10. '   ' → logprob: -10.504698753356934

Token 508: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00641811266541481
    2. 'n' → logprob: -5.506418228149414
    3. 'dp' → logprob: -6.506418228149414
    4. 'from' → logprob: -7.881418228149414
    5. ' n' → logprob: -8.131418228149414
    6. ' dp' → logprob: -9.881418228149414
    7. ' from' → logprob: -10.256418228149414
    8. 'length' → logprob: -10.631418228149414
    9. ' length' → logprob: -10.756418228149414
    10. '   ' → logprob: -11.381418228149414

Token 509: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6926279664039612
    2. '       ' → logprob: -1.1926279067993164
    3. 'dp' → logprob: -1.8176279067993164
    4. 'length' → logprob: -4.317627906799316
    5. 'from' → logprob: -4.567627906799316
    6. ' n' → logprob: -4.817627906799316
    7. 'number' → logprob: -7.442627906799316
    8. ' length' → logprob: -7.442627906799316
    9. '   ' → logprob: -7.817627906799316
    10. ' dp' → logprob: -8.192627906799316

Token 510: ' Since' (ID: 12265)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3532288670539856
    2. 'dp' → logprob: -1.7282288074493408
    3. '       ' → logprob: -2.853228807449341
    4. 'from' → logprob: -3.478228807449341
    5. 'length' → logprob: -4.35322904586792
    6. 'number' → logprob: -4.60322904586792
    7. ' n' → logprob: -4.97822904586792
    8. '   ' → logprob: -7.47822904586792
    9. 'import' → logprob: -7.72822904586792
    10. ' length' → logprob: -8.603228569030762

Token 511: ' numbers' (ID: 8663)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13431040942668915
    2. 'from' → logprob: -2.634310483932495
    3. ' self' → logprob: -3.509310483932495
    4. 'n' → logprob: -4.259310245513916
    5. ' from' → logprob: -6.134310245513916
    6. '       ' → logprob: -6.134310245513916
    7. '
' → logprob: -6.634310245513916
    8. 'length' → logprob: -6.634310245513916
    9. 'import' → logprob: -7.134310245513916
    10. ' n' → logprob: -7.259310245513916

Token 512: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8784033060073853
    2. '_str' → logprob: -1.5034033060073853
    3. '       ' → logprob: -1.6284033060073853
    4. ' are' → logprob: -2.7534031867980957
    5. '=' → logprob: -3.0034031867980957
    6. '_len' → logprob: -4.503403186798096
    7. ' can' → logprob: -4.753403186798096
    8. '_' → logprob: -5.003403186798096
    9. '   ' → logprob: -5.628403186798096
    10. '_length' → logprob: -5.878403186798096

Token 513: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.6399861574172974
    2. ' be' → logprob: -0.7649861574172974
    3. 'have' → logprob: -6.139986038208008
    4. ' have' → logprob: -6.764986038208008
    5. 'range' → logprob: -6.889986038208008
    6. 'go' → logprob: -6.889986038208008
    7. ' go' → logprob: -7.389986038208008
    8. ' range' → logprob: -8.264986038208008
    9. '   ' → logprob: -8.764986038208008
    10. ' only' → logprob: -8.889986038208008

Token 514: ' large' (ID: 4410)
  Prédit: 'very'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'very' → logprob: -0.4578775465488434
    2. 'large' → logprob: -1.207877516746521
    3. ' large' → logprob: -4.0828776359558105
    4. ' very' → logprob: -4.2078776359558105
    5. 'long' → logprob: -4.7078776359558105
    6. 'ar' → logprob: -4.8328776359558105
    7. 'hu' → logprob: -4.9578776359558105
    8. 'up' → logprob: -5.5828776359558105
    9. '0' → logprob: -6.0828776359558105
    10. 'big' → logprob: -6.4578776359558105

Token 515: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034282803535461426
    2. '       ' → logprob: -3.534282684326172
    3. ' ,' → logprob: -6.034282684326172
    4. ' and' → logprob: -7.659282684326172
    5. ',
' → logprob: -7.909282684326172
    6. '
' → logprob: -8.159282684326172
    7. ' but' → logprob: -8.534282684326172
    8. 'and' → logprob: -8.659282684326172
    9. 'import' → logprob: -9.034282684326172
    10. '   ' → logprob: -9.159282684326172

Token 516: 'length' (ID: 7914)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5194251537322998
    2. '100' → logprob: -2.3944251537323
    3. ')' → logprob: -2.7694251537323
    4. 'len' → logprob: -2.8944251537323
    5. 'up' → logprob: -3.3944251537323
    6. '),' → logprob: -3.5194251537323
    7. 'length' → logprob: -4.019425392150879
    8. ' self' → logprob: -4.144425392150879
    9. '       ' → logprob: -4.269425392150879
    10. '#' → logprob: -4.644425392150879

Token 517: ' up' (ID: 869)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2454512119293213
    2. ' up' → logprob: -1.2454512119293213
    3. '=' → logprob: -2.4954512119293213
    4. '   ' → logprob: -2.4954512119293213
    5. '>' → logprob: -3.1204512119293213
    6. ' >' → logprob: -3.2454512119293213
    7. ' =' → logprob: -3.4954512119293213
    8. '),' → logprob: -3.8704512119293213
    9. '
' → logprob: -3.9954512119293213
    10. ' ' → logprob: -4.120450973510742

Token 518: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.18486009538173676
    2. '100' → logprob: -2.4348599910736084
    3. '       ' → logprob: -3.3098599910736084
    4. '=' → logprob: -3.4348599910736084
    5. '1' → logprob: -5.6848602294921875
    6. '```' → logprob: -5.8098602294921875
    7. '   ' → logprob: -6.5598602294921875
    8. 'o' → logprob: -7.0598602294921875
    9. 'def' → logprob: -7.4348602294921875
    10. 'p' → logprob: -7.4348602294921875

Token 519: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0038405712693929672
    2. '10' → logprob: -6.503840446472168
    3. ' ' → logprob: -6.753840446472168
    4. 'self' → logprob: -6.878840446472168
    5. 'len' → logprob: -9.253840446472168
    6. '1' → logprob: -11.253840446472168
    7. ' self' → logprob: -11.503840446472168
    8. '```' → logprob: -11.628840446472168
    9. '   ' → logprob: -12.003840446472168
    10. '
' → logprob: -13.253840446472168

Token 520: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0002901757834479213
    2. '10' → logprob: -8.250289916992188
    3. 'self' → logprob: -11.750289916992188
    4. '5' → logprob: -12.000289916992188
    5. '6' → logprob: -12.125289916992188
    6. 'len' → logprob: -12.500289916992188
    7. '1' → logprob: -12.625289916992188
    8. ' ' → logprob: -13.750289916992188
    9. '```' → logprob: -15.125289916992188
    10. '
' → logprob: -15.750289916992188

Token 521: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0017821642104536295
    2. '0' → logprob: -7.001781940460205
    3. '):
' → logprob: -7.626781940460205
    4. '_' → logprob: -8.751782417297363
    5. '),' → logprob: -9.376782417297363
    6. ')' → logprob: -10.626782417297363
    7. '```' → logprob: -10.626782417297363
    8. '   ' → logprob: -10.751782417297363
    9. '):' → logprob: -10.751782417297363
    10. '       ' → logprob: -11.376782417297363

Token 522: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.017497800290584564
    2. '       ' → logprob: -4.267498016357422
    3. '):
' → logprob: -6.142498016357422
    4. ')' → logprob: -7.267498016357422
    5. '):' → logprob: -9.017498016357422
    6. '),
' → logprob: -9.017498016357422
    7. ',' → logprob: -9.142498016357422
    8. ')
' → logprob: -10.392498016357422
    9. '
' → logprob: -10.517498016357422
    10. ' ),' → logprob: -10.642498016357422

Token 523: ' we' (ID: 581)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2686293125152588
    2. 'from' → logprob: -2.893629312515259
    3. 'import' → logprob: -3.018629312515259
    4. 'max' → logprob: -3.018629312515259
    5. '       ' → logprob: -3.268629312515259
    6. ' dp' → logprob: -4.26862907409668
    7. ' max' → logprob: -4.51862907409668
    8. ' from' → logprob: -5.14362907409668
    9. '#' → logprob: -5.39362907409668
    10. ' import' → logprob: -6.01862907409668

Token 524: ' cannot' (ID: 6284)
  Prédit: 'cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cannot' → logprob: -0.7396493554115295
    2. ' cannot' → logprob: -0.8646493554115295
    3. ' need' → logprob: -3.7396492958068848
    4. ' can't' → logprob: -3.8646492958068848
    5. 'need' → logprob: -4.364649295806885
    6. 'can't' → logprob: -4.489649295806885
    7. '       ' → logprob: -4.864649295806885
    8. 'should' → logprob: -5.239649295806885
    9. ' should' → logprob: -5.739649295806885
    10. ' will' → logprob: -6.114649295806885

Token 525: ' store' (ID: 4897)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.0859568640589714
    2. ' store' → logprob: -2.9609568119049072
    3. 'convert' → logprob: -4.210957050323486
    4. 'use' → logprob: -5.210957050323486
    5. 'parse' → logprob: -6.460957050323486
    6. 'compare' → logprob: -6.460957050323486
    7. 'do' → logprob: -6.960957050323486
    8. ' use' → logprob: -7.085957050323486
    9. 'enumer' → logprob: -7.210957050323486
    10. 'process' → logprob: -7.585957050323486

Token 526: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7230204939842224
    2. 'full' → logprob: -1.3480205535888672
    3. 'min' → logprob: -1.8480205535888672
    4. ' full' → logprob: -3.348020553588867
    5. 'max' → logprob: -4.723020553588867
    6. ' all' → logprob: -4.848020553588867
    7. 'int' → logprob: -5.098020553588867
    8. ' min' → logprob: -5.098020553588867
    9. 'the' → logprob: -5.348020553588867
    10. 'large' → logprob: -5.348020553588867

Token 527: ' segment' (ID: 14806)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.276910424232483
    2. '       ' → logprob: -1.901910424232483
    3. 'min' → logprob: -1.901910424232483
    4. 'possible' → logprob: -2.0269103050231934
    5. 'segments' → logprob: -2.4019103050231934
    6. ' min' → logprob: -3.4019103050231934
    7. ' possible' → logprob: -3.5269103050231934
    8. ' dp' → logprob: -3.5269103050231934
    9. ' segments' → logprob: -4.026910305023193
    10. '   ' → logprob: -4.151910305023193

Token 528: ' values' (ID: 4824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14351199567317963
    2. '   ' → logprob: -3.518512010574341
    3. 'min' → logprob: -3.893512010574341
    4. 'values' → logprob: -3.893512010574341
    5. ' min' → logprob: -4.143511772155762
    6. ' values' → logprob: -4.393511772155762
    7. 'max' → logprob: -4.768511772155762
    8. '_min' → logprob: -5.018511772155762
    9. ' max' → logprob: -5.768511772155762
    10. '       ' → logprob: -5.893511772155762

Token 529: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18553656339645386
    2. ',' → logprob: -2.6855366230010986
    3. ' as' → logprob: -3.0605366230010986
    4. ' in' → logprob: -3.8105366230010986
    5. ' directly' → logprob: -4.9355363845825195
    6. ' or' → logprob: -5.5605363845825195
    7. '   ' → logprob: -5.5605363845825195
    8. '.' → logprob: -5.6855363845825195
    9. 'in' → logprob: -5.9355363845825195
    10. '
' → logprob: -6.1855363845825195

Token 530: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.615255839889869e-05
    2. '        
' → logprob: -10.125096321105957
    3. 'dp' → logprob: -10.875096321105957
    4. '
' → logprob: -12.125096321105957
    5. '#' → logprob: -12.250096321105957
    6. 'from' → logprob: -12.375096321105957
    7. '   ' → logprob: -12.375096321105957
    8. ' from' → logprob: -12.625096321105957
    9. ' dp' → logprob: -13.125096321105957
    10. 'import' → logprob: -13.250096321105957

Token 531: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014460697770118713
    2. 'dp' → logprob: -5.264460563659668
    3. '#' (adapté à ' #') → logprob: -5.764460563659668
    4. ' dp' → logprob: -6.514460563659668
    5. '
' → logprob: -6.889460563659668
    6. '        
' → logprob: -6.889460563659668
    7. ' n' → logprob: -7.264460563659668
    8. 'n' → logprob: -7.264460563659668
    9. ' max' → logprob: -8.639460563659668
    10. ' #' → logprob: -9.139460563659668

Token 532: ' Instead' (ID: 21050)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5380942821502686
    2. '#' → logprob: -1.6630942821502686
    3. 'n' → logprob: -2.6630942821502686
    4. '       ' → logprob: -2.7880942821502686
    5. 'import' → logprob: -3.1630942821502686
    6. 'from' → logprob: -3.5380942821502686
    7. 'max' → logprob: -4.163094520568848
    8. 'length' → logprob: -5.913094520568848
    9. 'We' → logprob: -6.663094520568848
    10. '
' → logprob: -7.038094520568848

Token 533: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1295238584280014
    2. '#' → logprob: -2.754523754119873
    3. ',' → logprob: -3.004523754119873
    4. ':' → logprob: -6.254523754119873
    5. 'import' → logprob: -6.504523754119873
    6. 'from' → logprob: -6.629523754119873
    7. ' we' → logprob: -7.129523754119873
    8. 'we' → logprob: -7.504523754119873
    9. 'def' → logprob: -7.629523754119873
    10. ' of' → logprob: -7.879523754119873

Token 534: ' we'll' (ID: 22782)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45755571126937866
    2. 'dp' → logprob: -1.4575557708740234
    3. 'from' → logprob: -2.9575557708740234
    4. 'import' → logprob: -3.0825557708740234
    5. '       ' → logprob: -3.5825557708740234
    6. 'we' → logprob: -5.332555770874023
    7. 'max' → logprob: -6.957555770874023
    8. 'n' → logprob: -6.957555770874023
    9. 'We' → logprob: -7.207555770874023
    10. '
' → logprob: -7.332555770874023

Token 535: ' keep' (ID: 3357)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.1270909458398819
    2. 'use' → logprob: -2.2520909309387207
    3. ' store' → logprob: -6.252090930938721
    4. ' use' → logprob: -6.252090930938721
    5. 'maint' → logprob: -6.252090930938721
    6. 'try' → logprob: -6.627090930938721
    7. 'limit' → logprob: -6.752090930938721
    8. 'implement' → logprob: -6.877090930938721
    9. 'track' → logprob: -7.002090930938721
    10. 'simulate' → logprob: -7.127090930938721

Token 536: ' track' (ID: 5290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04469938576221466
    2. 'a' → logprob: -3.4196994304656982
    3. 'track' → logprob: -5.169699192047119
    4. 'for' → logprob: -6.044699192047119
    5. 'import' → logprob: -6.919699192047119
    6. 'from' → logprob: -7.669699192047119
    7. '#' → logprob: -8.169699668884277
    8. 'two' → logprob: -8.294699668884277
    9. ' dp' → logprob: -8.419699668884277
    10. '   ' → logprob: -8.919699668884277

Token 537: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48153194785118103
    2. ' of' → logprob: -0.9815319776535034
    3. 'of' → logprob: -5.856532096862793
    4. ',' → logprob: -6.606532096862793
    5. 'import' → logprob: -6.606532096862793
    6. ' =' → logprob: -7.231532096862793
    7. 'from' → logprob: -8.481532096862793
    8. '=' → logprob: -8.606532096862793
    9. ':' → logprob: -8.856532096862793
    10. 'dp' → logprob: -9.356532096862793

Token 538: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.04289218410849571
    2. 'dp' → logprob: -4.167891979217529
    3. 'i' → logprob: -4.417891979217529
    4. ' each' → logprob: -4.417891979217529
    5. 'every' → logprob: -6.917891979217529
    6. '   ' → logprob: -7.667891979217529
    7. 'all' → logprob: -8.792892456054688
    8. 'index' → logprob: -9.167892456054688
    9. ' dp' → logprob: -9.292892456054688
    10. ' i' → logprob: -9.292892456054688

Token 539: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.46981048583984375
    2. 'index' → logprob: -1.7198104858398438
    3. 'i' → logprob: -1.8448104858398438
    4. ' position' → logprob: -3.9698104858398438
    5. 'dp' → logprob: -4.969810485839844
    6. 'prefix' → logprob: -5.844810485839844
    7. ' index' → logprob: -6.094810485839844
    8. ' i' → logprob: -6.219810485839844
    9. 'partition' → logprob: -6.469810485839844
    10. 'substring' → logprob: -6.719810485839844

Token 540: ' i' (ID: 575)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.27138474583625793
    2. 'of' → logprob: -2.1463847160339355
    3. '       ' → logprob: -2.2713847160339355
    4. 'dp' → logprob: -4.5213847160339355
    5. '   ' → logprob: -6.2713847160339355
    6. ',' → logprob: -6.3963847160339355
    7. ' dp' → logprob: -6.7713847160339355
    8. ':' → logprob: -8.021385192871094
    9. '    ' → logprob: -8.646385192871094
    10. '        ' → logprob: -8.771385192871094

Token 541: ':
' (ID: 734)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3053607940673828
    2. 'of' → logprob: -1.6803607940673828
    3. '       ' → logprob: -2.805360794067383
    4. 'dp' → logprob: -4.930360794067383
    5. ':' → logprob: -5.555360794067383
    6. ',' → logprob: -6.055360794067383
    7. ' dp' → logprob: -7.305360794067383
    8. '   ' → logprob: -7.555360794067383
    9. '
' → logprob: -8.680360794067383
    10. '        ' → logprob: -8.930360794067383

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05922437086701393
    2. 'dp' → logprob: -3.6842243671417236
    3. 'from' → logprob: -4.309224605560303
    4. ' dp' → logprob: -4.684224605560303
    5. ' from' → logprob: -4.934224605560303
    6. 'import' → logprob: -6.184224605560303
    7. '```' → logprob: -9.934224128723145
    8. '   ' → logprob: -10.184224128723145
    9. '	dp' → logprob: -10.184224128723145
    10. '        
' → logprob: -10.184224128723145

Token 543: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.164979949593544
    2. '#' (adapté à ' #') → logprob: -2.664979934692383
    3. 'import' → logprob: -3.289979934692383
    4. 'from' → logprob: -3.414979934692383
    5. '       ' → logprob: -4.664979934692383
    6. ' dp' → logprob: -6.289979934692383
    7. ' from' → logprob: -7.914979934692383
    8. 'max' → logprob: -8.289979934692383
    9. '
' → logprob: -9.164979934692383
    10. ' import' → logprob: -9.539979934692383

Token 544: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07644432783126831
    2. '#' → logprob: -3.326444387435913
    3. 'from' → logprob: -3.826444387435913
    4. 'import' → logprob: -5.076444149017334
    5. ' dp' → logprob: -5.326444149017334
    6. '       ' → logprob: -5.576444149017334
    7. ' from' → logprob: -7.701444149017334
    8. '
' → logprob: -8.326444625854492
    9. 'max' → logprob: -9.076444625854492
    10. ' #' → logprob: -9.951444625854492

Token 545: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0170678049325943
    2. ':' → logprob: -4.142067909240723
    3. '=' → logprob: -6.892067909240723
    4. ' :' → logprob: -11.892067909240723
    5. ':int' → logprob: -13.267067909240723
    6. '=[' → logprob: -13.392067909240723
    7. '   ' → logprob: -13.642067909240723
    8. ' ' → logprob: -13.767067909240723
    9. ')' → logprob: -13.892067909240723
    10. ']' → logprob: -14.517067909240723

Token 546: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12847962975502014
    2. ':' → logprob: -2.2534797191619873
    3. ']' → logprob: -4.503479480743408
    4. '=' → logprob: -5.628479480743408
    5. ')' → logprob: -7.378479480743408
    6. ']:' → logprob: -9.753479957580566
    7. ' :' → logprob: -9.878479957580566
    8. ']=' → logprob: -10.378479957580566
    9. '):' → logprob: -10.628479957580566
    10. '   ' → logprob: -10.753479957580566

Token 547: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09778493642807007
    2. '=' → logprob: -2.847784996032715
    3. ':' → logprob: -3.347784996032715
    4. ' :' → logprob: -11.972784996032715
    5. ')' → logprob: -12.222784996032715
    6. '   ' → logprob: -13.097784996032715
    7. ',' → logprob: -13.347784996032715
    8. '=None' → logprob: -13.597784996032715
    9. ']' → logprob: -14.472784996032715
    10. ' ' → logprob: -14.597784996032715

Token 548: ' set' (ID: 920)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.7780218720436096
    2. '(None' → logprob: -1.2780218124389648
    3. 'List' → logprob: -1.6530218124389648
    4. '(Optional' → logprob: -4.278021812438965
    5. '(min' → logprob: -4.403021812438965
    6. '{' → logprob: -4.778021812438965
    7. '[' → logprob: -5.028021812438965
    8. '[(' → logprob: -5.528021812438965
    9. '{
' → logprob: -5.528021812438965
    10. '[]' → logprob: -5.778021812438965

Token 549: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.02330813929438591
    2. '()' → logprob: -4.273308277130127
    3. '[' → logprob: -5.773308277130127
    4. 'of' → logprob: -6.023308277130127
    5. '   ' → logprob: -6.523308277130127
    6. '       ' → logprob: -7.148308277130127
    7. '{' → logprob: -8.023307800292969
    8. ':' → logprob: -8.773307800292969
    9. ' =' → logprob: -8.898307800292969
    10. '[(' → logprob: -9.023307800292969

Token 550: ' tuples' (ID: 112464)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.027699442580342293
    2. ' (' → logprob: -3.9026994705200195
    3. ' tuples' → logprob: -5.7776994705200195
    4. '(m' → logprob: -6.1526994705200195
    5. '(max' → logprob: -7.1526994705200195
    6. 'tu' → logprob: -8.02769947052002
    7. '(pos' → logprob: -8.90269947052002
    8. '(None' → logprob: -9.02769947052002
    9. 'Tuple' → logprob: -9.15269947052002
    10. '(prev' → logprob: -9.40269947052002

Token 551: ' (' (ID: 350)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.1780935525894165
    2. '[(' → logprob: -1.4280935525894165
    3. ' =' → logprob: -1.6780935525894165
    4. ':' → logprob: -2.928093433380127
    5. ' (' → logprob: -2.928093433380127
    6. '[int' → logprob: -2.928093433380127
    7. '()' → logprob: -3.053093433380127
    8. '   ' → logprob: -4.053093433380127
    9. '       ' → logprob: -4.803093433380127
    10. '[' → logprob: -5.178093433380127

Token 552: 'min' (ID: 1493)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.6352651715278625
    2. 'min' → logprob: -0.7602651715278625
    3. ' (' → logprob: -7.385265350341797
    4. ' min' → logprob: -7.510265350341797
    5. 'int' → logprob: -7.885265350341797
    6. '   ' → logprob: -7.885265350341797
    7. '(int' → logprob: -8.885265350341797
    8. '(i' → logprob: -8.885265350341797
    9. ')' → logprob: -9.135265350341797
    10. '(max' → logprob: -9.385265350341797

Token 553: '_segment' (ID: 71041)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.14288577437400818
    2. '_segment' → logprob: -2.642885684967041
    3. '_seg' → logprob: -3.017885684967041
    4. '_value' → logprob: -4.642885684967041
    5. '_int' → logprob: -6.892885684967041
    6. ',' → logprob: -7.142885684967041
    7. '_num' → logprob: -7.267885684967041
    8. '_min' → logprob: -8.0178861618042
    9. '_,' → logprob: -8.5178861618042
    10. '_diff' → logprob: -9.1428861618042

Token 554: '_val' (ID: 13694)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015203919261693954
    2. '_val' → logprob: -5.015203952789307
    3. ' ,' → logprob: -5.265203952789307
    4. ',int' → logprob: -6.390203952789307
    5. '_value' → logprob: -7.265203952789307
    6. 'int' → logprob: -8.015203475952148
    7. ',val' → logprob: -9.140203475952148
    8. ',min' → logprob: -9.390203475952148
    9. 'val' → logprob: -9.640203475952148
    10. ',
' → logprob: -9.765203475952148

Token 555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005126410396769643
    2. ' ,' → logprob: -7.750512599945068
    3. ',int' → logprob: -10.125513076782227
    4. ',
' → logprob: -10.625513076782227
    5. ',min' → logprob: -12.125513076782227
    6. 'import' → logprob: -12.500513076782227
    7. ',max' → logprob: -13.750513076782227
    8. '   ' → logprob: -14.000513076782227
    9. '<|end|>' → logprob: -14.375513076782227
    10. ',val' → logprob: -14.375513076782227

Token 556: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.38694825768470764
    2. ' max' → logprob: -1.1369482278823853
    3. ')' → logprob: -11.636948585510254
    4. ',' → logprob: -12.011948585510254
    5. ',max' → logprob: -12.011948585510254
    6. '(max' → logprob: -12.136948585510254
    7. 'min' → logprob: -12.261948585510254
    8. '_max' → logprob: -12.261948585510254
    9. '            ' → logprob: -12.386948585510254
    10. '	max' → logprob: -12.511948585510254

Token 557: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.0009145628428086638
    2. '_val' → logprob: -7.125914573669434
    3. '_seg' → logprob: -9.375914573669434
    4. '_value' → logprob: -11.625914573669434
    5. ',' → logprob: -12.500914573669434
    6. '_segments' → logprob: -12.625914573669434
    7. '_' → logprob: -12.750914573669434
    8. ')_' → logprob: -13.375914573669434
    9. 'segment' → logprob: -13.750914573669434
    10. '_diff' → logprob: -14.750914573669434

Token 558: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0090776477009058
    2. 'val' → logprob: -4.759077548980713
    3. ',' → logprob: -7.884077548980713
    4. ',val' → logprob: -10.634078025817871
    5. '_value' → logprob: -11.259078025817871
    6. 'Val' → logprob: -11.384078025817871
    7. '
' → logprob: -12.134078025817871
    8. ' val' → logprob: -12.259078025817871
    9. '_vals' → logprob: -12.759078025817871
    10. '_VAL' → logprob: -13.009078025817871

Token 559: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09054844826459885
    2. ')' → logprob: -2.465548515319824
    3. '       ' → logprob: -7.590548515319824
    4. ' ,' → logprob: -7.590548515319824
    5. '),' → logprob: -8.590548515319824
    6. ',
' → logprob: -9.340548515319824
    7. ' )' → logprob: -9.965548515319824
    8. ')
' → logprob: -10.215548515319824
    9. '   ' → logprob: -10.340548515319824
    10. '           ' → logprob: -10.465548515319824

Token 560: ' reachable' (ID: 143580)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37124741077423096
    2. '       ' → logprob: -1.246247410774231
    3. ',' → logprob: -5.246247291564941
    4. '=' → logprob: -5.746247291564941
    5. '
' → logprob: -5.746247291564941
    6. ' with' → logprob: -6.121247291564941
    7. ')' → logprob: -6.121247291564941
    8. ':' → logprob: -6.371247291564941
    9. 'from' → logprob: -6.996247291564941
    10. ' from' → logprob: -7.121247291564941

Token 561: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.2799479961395264
    2. ' at' → logprob: -1.6549479961395264
    3. ' from' → logprob: -1.7799479961395264
    4. '       ' → logprob: -2.0299479961395264
    5. ')' → logprob: -2.4049479961395264
    6. ' =' → logprob: -2.9049479961395264
    7. ',' → logprob: -3.1549479961395264
    8. ' with' → logprob: -4.2799482345581055
    9. 'with' → logprob: -5.2799482345581055
    10. 'at' → logprob: -5.4049482345581055

Token 562: ' ' (ID: 220)
  Prédit: ' previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' previous' → logprob: -1.0742968320846558
    2. 'previous' → logprob: -1.1992968320846558
    3. '0' → logprob: -1.9492968320846558
    4. 'the' → logprob: -3.6992969512939453
    5. 'segment' → logprob: -3.6992969512939453
    6. 'part' → logprob: -3.9492969512939453
    7. ' the' → logprob: -4.074296951293945
    8. ' segment' → logprob: -4.199296951293945
    9. 'positions' → logprob: -4.574296951293945
    10. 'i' → logprob: -4.574296951293945

Token 563: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9153455495834351
    2. 'previous' → logprob: -1.415345549583435
    3. 'start' → logprob: -2.6653456687927246
    4. 'segment' → logprob: -2.9153456687927246
    5. ' previous' → logprob: -3.0403456687927246
    6. 'dp' → logprob: -3.1653456687927246
    7. 'part' → logprob: -3.9153456687927246
    8. 'the' → logprob: -4.290345668792725
    9. 'segments' → logprob: -4.290345668792725
    10. 'positions' → logprob: -4.415345668792725

Token 564: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5023376941680908
    2. ' to' → logprob: -1.3773376941680908
    3. ',' → logprob: -2.502337694168091
    4. '       ' → logprob: -3.252337694168091
    5. ':' → logprob: -5.002337455749512
    6. ' ,' → logprob: -5.752337455749512
    7. '   ' → logprob: -6.002337455749512
    8. ')' → logprob: -6.627337455749512
    9. ':i' → logprob: -6.877337455749512
    10. ' ' → logprob: -7.127337455749512

Token 565: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931672692298889
    2. ' i' → logprob: -0.6931672692298889
    3. 'index' → logprob: -11.943167686462402
    4. ' index' → logprob: -12.568167686462402
    5. '   ' → logprob: -13.068167686462402
    6. ' ' → logprob: -13.068167686462402
    7. '	i' → logprob: -13.568167686462402
    8. '[i' → logprob: -14.068167686462402
    9. ' here' → logprob: -14.193167686462402
    10. 'here' → logprob: -14.568167686462402

Token 566: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14846006035804749
    2. ' =' → logprob: -2.6484601497650146
    3. '
' → logprob: -4.0234599113464355
    4. ',' → logprob: -4.1484599113464355
    5. ')' → logprob: -4.2734599113464355
    6. '        
' → logprob: -5.2734599113464355
    7. ':' → logprob: -5.6484599113464355
    8. '=' → logprob: -5.7734599113464355
    9. '   ' → logprob: -7.0234599113464355
    10. 'from' → logprob: -7.1484599113464355

Token 567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0122842937707901
    2. '
' → logprob: -4.637284278869629
    3. '        
' → logprob: -6.387284278869629
    4. ',' → logprob: -7.887284278869629
    5. ' =' → logprob: -9.387284278869629
    6. '   ' → logprob: -9.762284278869629
    7. ':' → logprob: -10.387284278869629
    8. ')' → logprob: -10.637284278869629
    9. '        ' → logprob: -10.762284278869629
    10. '
' → logprob: -10.887284278869629

Token 568: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5934930443763733
    2. '
' → logprob: -0.8434930443763733
    3. '        
' → logprob: -5.0934929847717285
    4. 'dp' → logprob: -5.4684929847717285
    5. ' dp' → logprob: -6.2184929847717285
    6. '
' → logprob: -6.3434929847717285
    7. '```' → logprob: -7.4684929847717285
    8. ',' → logprob: -7.7184929847717285
    9. 'import' → logprob: -8.093493461608887
    10. '   ' → logprob: -8.218493461608887

Token 569: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25316721200942993
    2. 'dp' → logprob: -1.7531671524047852
    3. 'from' → logprob: -3.878167152404785
    4. 'number' → logprob: -4.253167152404785
    5. ' number' → logprob: -5.378167152404785
    6. 'import' → logprob: -5.503167152404785
    7. ' dp' → logprob: -5.628167152404785
    8. ' from' → logprob: -6.628167152404785
    9. '
' → logprob: -7.378167152404785
    10. '   ' → logprob: -7.503167152404785

Token 570: ' update' (ID: 4027)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7382568120956421
    2. '   ' → logprob: -1.738256812095642
    3. 'def' → logprob: -2.3632569313049316
    4. ' def' → logprob: -2.4882569313049316
    5. ' will' → logprob: -2.8632569313049316
    6. '    ' → logprob: -3.8632569313049316
    7. 'import' → logprob: -3.9882569313049316
    8. ' can' → logprob: -3.9882569313049316
    9. ' need' → logprob: -4.738256931304932
    10. ' cannot' → logprob: -4.988256931304932

Token 571: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23773764073848724
    2. ' dp' → logprob: -2.1127376556396484
    3. '       ' → logprob: -2.7377376556396484
    4. 'self' → logprob: -3.8627376556396484
    5. ' self' → logprob: -6.237737655639648
    6. ' for' → logprob: -7.362737655639648
    7. '   ' → logprob: -7.487737655639648
    8. 'for' → logprob: -7.737737655639648
    9. 'from' → logprob: -7.737737655639648
    10. ' the' → logprob: -8.612737655639648

Token 572: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11552458256483078
    2. '=' → logprob: -2.9905245304107666
    3. '       ' → logprob: -2.9905245304107666
    4. '[i' → logprob: -5.115524768829346
    5. ':' → logprob: -6.990524768829346
    6. '   ' → logprob: -7.740524768829346
    7. '[' → logprob: -7.865524768829346
    8. '=[' → logprob: -7.990524768829346
    9. '```' → logprob: -9.115524291992188
    10. '           ' → logprob: -9.240524291992188

Token 573: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1661054491996765
    2. ' =' → logprob: -2.6661055088043213
    3. ')' → logprob: -2.7911055088043213
    4. '       ' → logprob: -5.041105270385742
    5. '=' → logprob: -5.416105270385742
    6. ':' → logprob: -6.166105270385742
    7. ']=' → logprob: -6.291105270385742
    8. '[i' → logprob: -6.541105270385742
    9. '[' → logprob: -6.541105270385742
    10. '   ' → logprob: -7.041105270385742

Token 574: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1307665854692459
    2. '=' → logprob: -2.1307666301727295
    3. '       ' → logprob: -6.13076639175415
    4. ':' → logprob: -7.25576639175415
    5. 'from' → logprob: -7.63076639175415
    6. '   ' → logprob: -8.755766868591309
    7. '[' → logprob: -9.505766868591309
    8. ' from' → logprob: -10.255766868591309
    9. '=[' → logprob: -10.505766868591309
    10. ',' → logprob: -10.630766868591309

Token 575: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05368044972419739
    2. 'i' → logprob: -3.553680419921875
    3. ' dp' → logprob: -4.053680419921875
    4. ' i' → logprob: -6.303680419921875
    5. '0' → logprob: -6.803680419921875
    6. '   ' → logprob: -7.553680419921875
    7. 'range' → logprob: -7.678680419921875
    8. ' ' → logprob: -8.053680419921875
    9. 'for' → logprob: -8.303680419921875
    10. 'previous' → logprob: -8.428680419921875

Token 576: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7008972764015198
    2. '[j' → logprob: -0.7008972764015198
    3. '[' → logprob: -5.950897216796875
    4. 'j' → logprob: -6.825897216796875
    5. 'for' → logprob: -6.825897216796875
    6. '[:' → logprob: -7.325897216796875
    7. '
' → logprob: -7.950897216796875
    8. '   ' → logprob: -8.200897216796875
    9. ' =' → logprob: -8.325897216796875
    10. '       ' → logprob: -8.825897216796875

Token 577: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11750073730945587
    2. '+' → logprob: -2.8675007820129395
    3. 'for' → logprob: -3.4925007820129395
    4. ' for' → logprob: -4.4925007820129395
    5. ' +' → logprob: -5.3675007820129395
    6. '],' → logprob: -5.9925007820129395
    7. ':' → logprob: -7.1175007820129395
    8. '-' → logprob: -7.3675007820129395
    9. ']+' → logprob: -7.3675007820129395
    10. '
' → logprob: -7.8675007820129395

Token 578: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.265878289937973
    2. 'for' → logprob: -2.015878200531006
    3. ' in' → logprob: -2.890878200531006
    4. '       ' → logprob: -3.515878200531006
    5. ',' → logprob: -5.140878200531006
    6. '           ' → logprob: -6.390878200531006
    7. '[j' → logprob: -6.390878200531006
    8. ' where' → logprob: -7.015878200531006
    9. ' =' → logprob: -7.265878200531006
    10. ':' → logprob: -7.390878200531006

Token 579: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.7708368301391602
    2. 'number' → logprob: -1.7708368301391602
    3. 'the' → logprob: -2.02083683013916
    4. 'for' → logprob: -3.02083683013916
    5. ' the' → logprob: -3.64583683013916
    6. ' segment' → logprob: -4.02083683013916
    7. 'try' → logprob: -4.02083683013916
    8. 'self' → logprob: -4.27083683013916
    9. 'consider' → logprob: -4.52083683013916
    10. 'j' → logprob: -4.64583683013916

Token 580: ' number' (ID: 2086)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.8811464309692383
    2. '_val' → logprob: -0.8811464309692383
    3. ' =' → logprob: -2.6311464309692383
    4. 's' → logprob: -3.2561464309692383
    5. '_len' → logprob: -3.2561464309692383
    6. '_vals' → logprob: -4.756146430969238
    7. '_start' → logprob: -5.131146430969238
    8. '_length' → logprob: -6.506146430969238
    9. '_end' → logprob: -6.881146430969238
    10. '=' → logprob: -7.006146430969238

Token 581: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.11632141470909119
    2. 's' → logprob: -3.366321325302124
    3. '_start' → logprob: -3.741321325302124
    4. ' =' → logprob: -4.241321563720703
    5. '       ' → logprob: -4.741321563720703
    6. '_s' → logprob: -4.991321563720703
    7. '_val' → logprob: -5.366321563720703
    8. '_' → logprob: -5.491321563720703
    9. 'str' → logprob: -5.866321563720703
    10. '   ' → logprob: -6.491321563720703

Token 582: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0033700885251164436
    2. '       ' → logprob: -6.62837028503418
    3. '
' → logprob: -7.75337028503418
    4. '           ' → logprob: -8.00337028503418
    5. '=' → logprob: -8.62837028503418
    6. '   ' → logprob: -9.00337028503418
    7. '[' → logprob: -9.12837028503418
    8. ' =' → logprob: -9.12837028503418
    9. '=j' → logprob: -9.25337028503418
    10. '```' → logprob: -9.62837028503418

Token 583: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -2.963691804325208e-05
    2. ':' → logprob: -11.125029563903809
    3. ' :' → logprob: -11.375029563903809
    4. 'i' → logprob: -13.125029563903809
    5. '[i' → logprob: -14.375029563903809
    6. ':end' → logprob: -15.250029563903809
    7. ',i' → logprob: -15.500029563903809
    8. ':j' → logprob: -15.750029563903809
    9. ']' → logprob: -16.750030517578125
    10. '+' → logprob: -16.750030517578125

Token 584: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04802260547876358
    2. '])' → logprob: -3.173022508621216
    3. '],' → logprob: -6.423022747039795
    4. '].' → logprob: -6.548022747039795
    5. ']
' → logprob: -7.298022747039795
    6. ']:' → logprob: -8.173022270202637
    7. ')' → logprob: -8.923022270202637
    8. '])
' → logprob: -8.923022270202637
    9. ')]' → logprob: -9.173022270202637
    10. ' ]' → logprob: -9.173022270202637

Token 585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010405645705759525
    2. '
' → logprob: -4.885405540466309
    3. '        
' → logprob: -6.510405540466309
    4. ',' → logprob: -7.760405540466309
    5. '```' → logprob: -8.010405540466309
    6. 'import' → logprob: -9.760405540466309
    7. ':' → logprob: -9.760405540466309
    8. '`' → logprob: -10.010405540466309
    9. 'from' → logprob: -10.010405540466309
    10. '   ' → logprob: -10.385405540466309

Token 586: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007796077989041805
    2. '
' → logprob: -8.125779151916504
    3. '        
' → logprob: -8.750779151916504
    4. 'from' → logprob: -9.375779151916504
    5. '```' → logprob: -10.000779151916504
    6. 'n' → logprob: -10.250779151916504
    7. 'dp' → logprob: -10.250779151916504
    8. 'number' → logprob: -10.750779151916504
    9. 'import' → logprob: -10.875779151916504
    10. ',' → logprob: -11.125779151916504

Token 587: ' To' (ID: 2514)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033475786447525024
    2. 'dp' → logprob: -4.033475875854492
    3. 'n' → logprob: -4.908475875854492
    4. 'from' → logprob: -5.658475875854492
    5. 'import' → logprob: -6.658475875854492
    6. 'length' → logprob: -7.033475875854492
    7. 'number' → logprob: -7.408475875854492
    8. 'def' → logprob: -7.658475875854492
    9. '```' → logprob: -8.408475875854492
    10. ' n' → logprob: -8.783475875854492

Token 588: ' limit' (ID: 5967)
  Prédit: ' avoid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avoid' → logprob: -0.7133062481880188
    2. ' reduce' → logprob: -2.213306188583374
    3. 'reduce' → logprob: -2.338306188583374
    4. 'avoid' → logprob: -2.713306188583374
    5. 'limit' → logprob: -3.088306188583374
    6. ' limit' → logprob: -3.213306188583374
    7. 'import' → logprob: -3.713306188583374
    8. ' keep' → logprob: -3.963306188583374
    9. ' optimize' → logprob: -3.963306188583374
    10. 'def' → logprob: -4.338306427001953

Token 589: ' memory' (ID: 8197)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.17173665761947632
    2. ' segment' → logprob: -2.421736717224121
    3. ' memory' → logprob: -3.421736717224121
    4. 'the' → logprob: -3.921736717224121
    5. ' max' → logprob: -5.421736717224121
    6. 'segment' → logprob: -5.421736717224121
    7. 'max' → logprob: -5.796736717224121
    8. ' length' → logprob: -6.546736717224121
    9. ' self' → logprob: -7.171736717224121
    10. 'self' → logprob: -7.296736717224121

Token 590: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1654897928237915
    2. 'usage' → logprob: -1.7904897928237915
    3. ' usage' → logprob: -1.9154897928237915
    4. ',' → logprob: -2.040489673614502
    5. 'and' → logprob: -2.415489673614502
    6. ' and' → logprob: -2.915489673614502
    7. '_usage' → logprob: -3.040489673614502
    8. '   ' → logprob: -3.540489673614502
    9. ' use' → logprob: -5.665489673614502
    10. '=' → logprob: -5.790489673614502

Token 591: ' runtime' (ID: 32103)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.5765318870544434
    2. 'time' → logprob: -1.5765318870544434
    3. ' computation' → logprob: -2.2015318870544434
    4. 'compute' → logprob: -3.4515318870544434
    5. ' time' → logprob: -3.5765318870544434
    6. 'performance' → logprob: -3.5765318870544434
    7. 'runtime' → logprob: -4.201531887054443
    8. ' runtime' → logprob: -5.326531887054443
    9. 'processing' → logprob: -5.326531887054443
    10. ' prevent' → logprob: -6.576531887054443

Token 592: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021932559087872505
    2. '       ' → logprob: -4.146932601928711
    3. ',
' → logprob: -6.271932601928711
    4. ' we' → logprob: -7.021932601928711
    5. ' and' → logprob: -7.271932601928711
    6. '   ' → logprob: -8.146932601928711
    7. 'we' → logprob: -8.146932601928711
    8. 'and' → logprob: -8.146932601928711
    9. ' ,' → logprob: -8.271932601928711
    10. ' constraints' → logprob: -8.646932601928711

Token 593: ' we' (ID: 581)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6214951276779175
    2. 'max' → logprob: -1.3714951276779175
    3. '       ' → logprob: -1.7464951276779175
    4. '#' → logprob: -3.871495246887207
    5. 'import' → logprob: -5.121495246887207
    6. ' import' → logprob: -6.121495246887207
    7. 'MAX' → logprob: -6.246495246887207
    8. ' #' → logprob: -7.496495246887207
    9. ' MAX' → logprob: -7.496495246887207
    10. 'dp' → logprob: -7.746495246887207

Token 594: ' can' (ID: 665)
  Prédit: ' limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.5433943271636963
    2. ' will' → logprob: -2.0433943271636963
    3. ' can' → logprob: -2.1683943271636963
    4. ' implement' → logprob: -3.2933943271636963
    5. 'limit' → logprob: -3.5433943271636963
    6. ' prune' → logprob: -3.7933943271636963
    7. '   ' → logprob: -3.9183943271636963
    8. '    ' → logprob: -4.918394088745117
    9. ' def' → logprob: -5.043394088745117
    10. ' keep' → logprob: -5.043394088745117

Token 595: ' prune' (ID: 140388)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.07115474343299866
    2. ' limit' → logprob: -2.696154832839966
    3. 'implement' → logprob: -7.696154594421387
    4. '   ' → logprob: -8.946154594421387
    5. 'use' → logprob: -9.321154594421387
    6. 'im' → logprob: -9.321154594421387
    7. ' implement' → logprob: -9.571154594421387
    8. 'restrict' → logprob: -9.696154594421387
    9. 'pr' → logprob: -9.946154594421387
    10. 'consider' → logprob: -10.446154594421387

Token 596: ' states' (ID: 9407)
  Prédit: ' states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -1.380272626876831
    2. 'dp' → logprob: -1.630272626876831
    3. ' the' → logprob: -2.005272626876831
    4. ' dp' → logprob: -2.130272626876831
    5. ' some' → logprob: -2.380272626876831
    6. '       ' → logprob: -2.505272626876831
    7. '   ' → logprob: -4.50527286529541
    8. '(dp' → logprob: -4.63027286529541
    9. ' at' → logprob: -4.75527286529541
    10. ' old' → logprob: -4.88027286529541

Token 597: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06791254878044128
    2. '        
' → logprob: -3.6929125785827637
    3. '
' → logprob: -3.8179125785827637
    4. ',' → logprob: -5.692912578582764
    5. ' by' → logprob: -5.692912578582764
    6. ':' → logprob: -6.192912578582764
    7. 'import' → logprob: -6.442912578582764
    8. ' =' → logprob: -6.567912578582764
    9. ' at' → logprob: -6.942912578582764
    10. '   ' → logprob: -7.567912578582764

Token 598: ' keeping' (ID: 13958)
  Prédit: 'keeping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keeping' → logprob: -1.1855669021606445
    2. ' merging' → logprob: -1.6855669021606445
    3. ' limiting' → logprob: -1.8105669021606445
    4. 'mer' → logprob: -2.5605669021606445
    5. ' keeping' → logprob: -2.5605669021606445
    6. 'lim' → logprob: -2.8105669021606445
    7. 'max' → logprob: -3.1855669021606445
    8. 'only' → logprob: -3.3105669021606445
    9. ' only' → logprob: -3.4355669021606445
    10. '   ' → logprob: -5.8105669021606445

Token 599: ' only' (ID: 1606)
  Prédit: ' only'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.18493810296058655
    2. 'only' → logprob: -1.8099380731582642
    3. 'dp' → logprob: -6.059937953948975
    4. 'a' → logprob: -6.684937953948975
    5. ' a' → logprob: -7.309937953948975
    6. ' dp' → logprob: -8.059938430786133
    7. ' at' → logprob: -8.559938430786133
    8. 'top' → logprob: -8.934938430786133
    9. '   ' → logprob: -9.559938430786133
    10. 'the' → logprob: -10.184938430786133

Token 600: ' minimal' (ID: 19957)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.6282472014427185
    2. 'a' → logprob: -1.0032472610473633
    3. 'the' → logprob: -3.2532472610473633
    4. ' one' → logprob: -3.7532472610473633
    5. ' a' → logprob: -4.003247261047363
    6. 'two' → logprob: -5.753247261047363
    7. 'top' → logprob: -6.253247261047363
    8. '...' → logprob: -6.378247261047363
    9. ' the' → logprob: -6.503247261047363
    10. 'best' → logprob: -6.628247261047363

Token 601: ' differences' (ID: 19504)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6966333389282227
    2. ' and' → logprob: -1.0716333389282227
    3. 'diff' → logprob: -2.9466333389282227
    4. 'min' → logprob: -3.4466333389282227
    5. 'dif' → logprob: -3.6966333389282227
    6. 'import' → logprob: -4.446633338928223
    7. '_diff' → logprob: -5.196633338928223
    8. 'difference' → logprob: -5.321633338928223
    9. 'd' → logprob: -5.696633338928223
    10. ',' → logprob: -5.696633338928223

Token 602: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07911571115255356
    2. ',' → logprob: -3.954115629196167
    3. '.' → logprob: -4.454115867614746
    4. ' at' → logprob: -4.579115867614746
    5. '        
' → logprob: -4.954115867614746
    6. '[i' → logprob: -5.204115867614746
    7. '   ' → logprob: -5.579115867614746
    8. ' =' → logprob: -5.829115867614746
    9. ' and' → logprob: -6.329115867614746
    10. '=' → logprob: -6.579115867614746

Token 603: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.481510692741722e-05
    2. 'from' → logprob: -10.00007438659668
    3. '
' → logprob: -11.62507438659668
    4. 'import' → logprob: -11.87507438659668
    5. '```' → logprob: -12.00007438659668
    6. '        
' → logprob: -12.62507438659668
    7. ' from' → logprob: -12.75007438659668
    8. ',' → logprob: -15.62507438659668
    9. '    ' → logprob: -16.12507438659668
    10. '
' → logprob: -16.12507438659668

Token 604: ' from' (ID: 591)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.24601221084594727
    2. '       ' → logprob: -2.6210122108459473
    3. 'from' (adapté à ' from') → logprob: -2.9960122108459473
    4. 'n' → logprob: -2.9960122108459473
    5. 'dp' → logprob: -3.2460122108459473
    6. 'length' → logprob: -5.746012210845947
    7. 'import' → logprob: -5.996012210845947
    8. ' number' → logprob: -7.996012210845947
    9. 'def' → logprob: -8.996011734008789
    10. '   ' → logprob: -9.746011734008789

Token 605: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.00013035668234806508
    2. 'typing' → logprob: -9.250130653381348
    3. ' collections' → logprob: -11.000130653381348
    4. 'heap' → logprob: -11.625130653381348
    5. 'math' → logprob: -11.750130653381348
    6. 'copy' → logprob: -14.875130653381348
    7. 'sys' → logprob: -15.250130653381348
    8. 'bis' → logprob: -16.62512969970703
    9. 'collection' → logprob: -17.12512969970703
    10. ' typing' → logprob: -17.50012969970703

Token 606: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.07402779161930084
    2. ' import' → logprob: -4.449028015136719
    3. 'ptions' → logprob: -4.449028015136719
    4. 'tion' → logprob: -4.574028015136719
    5. 'port' → logprob: -4.949028015136719
    6. 'n' → logprob: -5.449028015136719
    7. 'ections' → logprob: -5.449028015136719
    8. 'ns' → logprob: -5.449028015136719
    9. 'ctions' → logprob: -5.574028015136719
    10. 'ations' → logprob: -6.199028015136719

Token 607: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.38706791400909424
    2. 'deque' → logprob: -1.1370679140090942
    3. ' defaultdict' → logprob: -8.637067794799805
    4. ' deque' → logprob: -10.887067794799805
    5. 'de' → logprob: -14.262067794799805
    6. 'collections' → logprob: -17.012067794799805
    7. '```' → logprob: -18.387067794799805
    8. '.default' → logprob: -18.762067794799805
    9. '(default' → logprob: -19.512067794799805
    10. '
' → logprob: -19.637067794799805

Token 608: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07649015635251999
    2. '       ' → logprob: -2.7014901638031006
    3. '        
' → logprob: -5.8264899253845215
    4. '

' → logprob: -5.9514899253845215
    5. ',' → logprob: -7.7014899253845215
    6. '
' → logprob: -8.45149040222168
    7. 'dp' → logprob: -8.82649040222168
    8. '    
' → logprob: -10.57649040222168
    9. ',
' → logprob: -10.82649040222168
    10. '```' → logprob: -10.95149040222168

Token 609: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5261315703392029
    2. '       ' → logprob: -0.9011315703392029
    3. 'dp' → logprob: -6.276131629943848
    4. '        
' → logprob: -6.901131629943848
    5. 'import' → logprob: -10.526131629943848
    6. '
' → logprob: -10.901131629943848
    7. ' dp' → logprob: -11.026131629943848
    8. '

' → logprob: -11.151131629943848
    9. '    
' → logprob: -11.776131629943848
    10. '   ' → logprob: -11.776131629943848

Token 610: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.012989388778805733
    2. '
' → logprob: -5.762989521026611
    3. '       ' → logprob: -5.762989521026611
    4. 'number' → logprob: -6.012989521026611
    5. 'n' → logprob: -6.262989521026611
    6. 'length' → logprob: -6.762989521026611
    7. 'max' → logprob: -7.012989521026611
    8. 'import' → logprob: -8.887989044189453
    9. 'self' → logprob: -10.887989044189453
    10. 'class' → logprob: -11.262989044189453

Token 611: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31957533955574036
    2. '=' → logprob: -1.319575309753418
    3. ':' → logprob: -5.069575309753418
    4. '=[]' → logprob: -12.569575309753418
    5. '[' → logprob: -14.069575309753418
    6. ' :' → logprob: -14.194575309753418
    7. '   ' → logprob: -14.194575309753418
    8. ',' → logprob: -14.319575309753418
    9. '=[' → logprob: -14.444575309753418
    10. ' ' → logprob: -14.694575309753418

Token 612: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030643155798316002
    2. 'default' → logprob: -3.5306432247161865
    3. ' [' → logprob: -7.030642986297607
    4. ' defaultdict' → logprob: -12.655643463134766
    5. '   ' → logprob: -12.780643463134766
    6. '[{' → logprob: -15.030643463134766
    7. '(default' → logprob: -15.280643463134766
    8. '       ' → logprob: -15.280643463134766
    9. '.default' → logprob: -15.405643463134766
    10. '"default' → logprob: -15.530643463134766

Token 613: 'dict' (ID: 20993)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.736944317817688
    2. 'default' → logprob: -1.361944317817688
    3. '{}' → logprob: -1.861944317817688
    4. 'dict' → logprob: -2.2369441986083984
    5. '[]' → logprob: -6.736944198608398
    6. 'None' → logprob: -6.861944198608398
    7. '{' → logprob: -7.236944198608398
    8. ']' → logprob: -9.736944198608398
    9. 'list' → logprob: -10.861944198608398
    10. '[' → logprob: -11.111944198608398

Token 614: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6951234340667725
    2. '()]' → logprob: -0.6951234340667725
    3. '()]
' → logprob: -6.820123672485352
    4. ']()' → logprob: -7.695123672485352
    5. ']' → logprob: -7.945123672485352
    6. '()
' → logprob: -10.445123672485352
    7. '(min' → logprob: -11.570123672485352
    8. ' ()' → logprob: -11.695123672485352
    9. ']()
' → logprob: -12.320123672485352
    10. '{}' → logprob: -12.570123672485352

Token 615: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16606062650680542
    2. ' for' → logprob: -2.16606068611145
    3. 'for' → logprob: -3.29106068611145
    4. ']' → logprob: -7.291060447692871
    5. '()]' → logprob: -8.041060447692871
    6. '   ' → logprob: -9.791060447692871
    7. '       ' → logprob: -10.166060447692871
    8. ' ' → logprob: -11.291060447692871
    9. ' ()' → logprob: -11.541060447692871
    10. ')' → logprob: -12.291060447692871

Token 616: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0016312669031322002
    2. ' _' → logprob: -6.501631259918213
    3. ' i' → logprob: -10.126631736755371
    4. ' range' → logprob: -10.126631736755371
    5. 'i' → logprob: -10.501631736755371
    6. '_range' → logprob: -11.876631736755371
    7. ' in' → logprob: -12.001631736755371
    8. 'range' → logprob: -12.626631736755371
    9. '_i' → logprob: -12.751631736755371
    10. ' ' → logprob: -14.876631736755371

Token 617: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009787020273506641
    2. ' range' → logprob: -4.634787082672119
    3. 'in' → logprob: -10.759786605834961
    4. '(range' → logprob: -11.884786605834961
    5. ' in' → logprob: -13.634786605834961
    6. '	range' → logprob: -15.134786605834961
    7. '...' → logprob: -15.509786605834961
    8. '_range' → logprob: -15.509786605834961
    9. ' ' → logprob: -15.509786605834961
    10. '0' → logprob: -15.759786605834961

Token 618: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233763717114925
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -17.005233764648438
    4. '	range' → logprob: -20.130233764648438
    5. '   ' → logprob: -22.005233764648438
    6. '
' → logprob: -22.755233764648438
    7. ' ' → logprob: -22.880233764648438
    8. 'Range' → logprob: -23.630233764648438
    9. '_range' → logprob: -23.880233764648438
    10. '.range' → logprob: -24.380233764648438

Token 619: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002736138121690601
    2. '(len' → logprob: -8.250273704528809
    3. 'self' → logprob: -11.500273704528809
    4. '(' → logprob: -13.500273704528809
    5. ' (' → logprob: -14.875273704528809
    6. '((' → logprob: -15.375273704528809
    7. 'len' → logprob: -15.375273704528809
    8. '(range' → logprob: -17.625272750854492
    9. '   ' → logprob: -17.750272750854492
    10. '(
' → logprob: -18.000272750854492

Token 620: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.00038086410495452583
    2. 'length' → logprob: -7.875380992889404
    3. '+' → logprob: -15.625380516052246
    4. '.' → logprob: -16.500381469726562
    5. '(length' → logprob: -16.500381469726562
    6. '.size' → logprob: -16.750381469726562
    7. ')' → logprob: -16.875381469726562
    8. '.len' → logprob: -17.000381469726562
    9. '	length' → logprob: -17.125381469726562
    10. '.l' → logprob: -17.125381469726562

Token 621: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004707087762653828
    2. '+' → logprob: -5.379706859588623
    3. ' +' → logprob: -9.879707336425781
    4. ')]
' → logprob: -10.629707336425781
    5. ')' → logprob: -12.254707336425781
    6. ' )' → logprob: -13.129707336425781
    7. '       ' → logprob: -13.254707336425781
    8. '   ' → logprob: -14.629707336425781
    9. ')]

' → logprob: -14.754707336425781
    10. ']' → logprob: -15.004707336425781

Token 622: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.500001907348633
    4. '0' → logprob: -17.250001907348633
    5. '
' → logprob: -18.250001907348633
    6. '       ' → logprob: -18.625001907348633
    7. '```' → logprob: -18.750001907348633
    8. '           ' → logprob: -18.875001907348633
    9. '+' → logprob: -19.062501907348633
    10. '2' → logprob: -19.250001907348633

Token 623: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.500004768371582
    3. '0' → logprob: -14.000004768371582
    4. '   ' → logprob: -15.625004768371582
    5. '
' → logprob: -17.3750057220459
    6. '2' → logprob: -17.7500057220459
    7. '```' → logprob: -18.1250057220459
    8. '  ' → logprob: -19.3125057220459
    9. ')' → logprob: -19.7500057220459
    10. '       ' → logprob: -19.8125057220459

Token 624: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.693814754486084
    2. ')]' → logprob: -0.693814754486084
    3. ')' → logprob: -7.818814754486084
    4. ']
' → logprob: -8.693815231323242
    5. ')]
' → logprob: -9.568815231323242
    6. ' ]' → logprob: -11.443815231323242
    7. '()]' → logprob: -12.568815231323242
    8. '       ' → logprob: -12.568815231323242
    9. ']

' → logprob: -12.943815231323242
    10. ']
' → logprob: -13.068815231323242

Token 625: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09102189540863037
    2. 'dp' → logprob: -2.46602201461792
    3. ' dp' → logprob: -6.34102201461792
    4. '	dp' → logprob: -8.341021537780762
    5. '(dp' → logprob: -10.591021537780762
    6. '   ' → logprob: -11.216021537780762
    7. '        
' → logprob: -11.466021537780762
    8. '[' → logprob: -11.966021537780762
    9. '
' → logprob: -12.466021537780762
    10. '<|end|>' → logprob: -12.716021537780762

Token 626: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16034120321273804
    2. 'dp' → logprob: -1.9103412628173828
    3. ' dp' → logprob: -9.285341262817383
    4. '	dp' → logprob: -10.910341262817383
    5. '   ' → logprob: -13.160341262817383
    6. '#' → logprob: -14.035341262817383
    7. '(dp' → logprob: -14.160341262817383
    8. '_dp' → logprob: -14.285341262817383
    9. '           ' → logprob: -14.660341262817383
    10. 'for' → logprob: -14.910341262817383

Token 627: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02333609201014042
    2. '       ' → logprob: -3.773336172103882
    3. ' dp' → logprob: -9.898336410522461
    4. 'import' → logprob: -10.773336410522461
    5. 'for' → logprob: -12.023336410522461
    6. '#' (adapté à ' #') → logprob: -12.148336410522461
    7. '	dp' → logprob: -12.148336410522461
    8. '   ' → logprob: -13.773336410522461
    9. 'from' → logprob: -13.898336410522461
    10. '(dp' → logprob: -15.398336410522461

Token 628: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00017433916218578815
    2. 'import' → logprob: -9.625174522399902
    3. '#' → logprob: -10.000174522399902
    4. '       ' → logprob: -10.125174522399902
    5. 'for' → logprob: -11.000174522399902
    6. 'from' → logprob: -12.500174522399902
    7. ' dp' → logprob: -13.375174522399902
    8. '
' → logprob: -15.250174522399902
    9. 'For' → logprob: -16.250173568725586
    10. '	dp' → logprob: -16.250173568725586

Token 629: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.523948907968588e-05
    2. '[i' → logprob: -11.125035285949707
    3. ' =' → logprob: -11.500035285949707
    4. '=' → logprob: -12.625035285949707
    5. 'dp' → logprob: -13.000035285949707
    6. '\[' → logprob: -13.500035285949707
    7. '=[' → logprob: -14.250035285949707
    8. '][' → logprob: -14.625035285949707
    9. ' [' → logprob: -14.625035285949707
    10. '       ' → logprob: -15.000035285949707

Token 630: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001347672223346308
    2. '[' → logprob: -9.000134468078613
    3. ' ' → logprob: -11.875134468078613
    4. '
' → logprob: -13.125134468078613
    5. ']' → logprob: -14.125134468078613
    6. '#' → logprob: -15.000134468078613
    7. '1' → logprob: -15.500134468078613
    8. 'i' → logprob: -15.500134468078613
    9. '][' → logprob: -15.750134468078613
    10. '   ' → logprob: -16.25013542175293

Token 631: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05652415379881859
    2. '][' → logprob: -3.0565240383148193
    3. ' =' → logprob: -5.306524276733398
    4. ']' → logprob: -6.181524276733398
    5. '=' → logprob: -7.556524276733398
    6. ']=' → logprob: -9.431524276733398
    7. '{' → logprob: -10.056524276733398
    8. '[{' → logprob: -10.056524276733398
    9. ']={' → logprob: -10.056524276733398
    10. '['' → logprob: -10.431524276733398

Token 632: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03024422936141491
    2. ' =' → logprob: -4.15524435043335
    3. '=' → logprob: -4.28024435043335
    4. '={' → logprob: -9.155243873596191
    5. '       ' → logprob: -10.405243873596191
    6. '{' → logprob: -10.655243873596191
    7. '   ' → logprob: -10.655243873596191
    8. 'dp' → logprob: -11.030243873596191
    9. '['' → logprob: -11.030243873596191
    10. '["' → logprob: -11.530243873596191

Token 633: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0007079057977534831
    2. '{}' → logprob: -7.375708103179932
    3. '{-' → logprob: -10.000707626342773
    4. ' {' → logprob: -10.625707626342773
    5. '{"' → logprob: -12.375707626342773
    6. '{'' → logprob: -13.000707626342773
    7. ' {(' → logprob: -13.375707626342773
    8. '{}
' → logprob: -14.000707626342773
    9. '{i' → logprob: -14.750707626342773
    10. 'dict' → logprob: -14.750707626342773

Token 634: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9426312446594238
    2. '(' → logprob: -1.0676312446594238
    3. 'None' → logprob: -2.067631244659424
    4. '-' → logprob: -3.192631244659424
    5. '():' → logprob: -3.192631244659424
    6. 'float' → logprob: -4.317631244659424
    7. '(-' → logprob: -4.442631244659424
    8. '()}' → logprob: -4.567631244659424
    9. '(None' → logprob: -4.942631244659424
    10. '}' → logprob: -4.942631244659424

Token 635: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019681276753544807
    2. ' :' → logprob: -6.251967906951904
    3. '       ' → logprob: -12.251968383789062
    4. '   ' → logprob: -12.251968383789062
    5. ':
' → logprob: -12.501968383789062
    6. 'None' → logprob: -12.501968383789062
    7. '(None' → logprob: -12.626968383789062
    8. ':{' → logprob: -12.751968383789062
    9. ':{}' → logprob: -13.251968383789062
    10. '[' → logprob: -13.376968383789062

Token 636: ' None' (ID: 4662)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.7602968811988831
    2. '(' → logprob: -0.8852968811988831
    3. '(None' → logprob: -2.8852968215942383
    4. ' (' → logprob: -3.8852968215942383
    5. '-' → logprob: -4.260296821594238
    6. 'None' → logprob: -4.760296821594238
    7. '(True' → logprob: -4.760296821594238
    8. '0' → logprob: -5.385296821594238
    9. ' (-' → logprob: -6.260296821594238
    10. 'True' → logprob: -6.885296821594238

Token 637: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.2847331464290619
    2. '}
' → logprob: -1.4097331762313843
    3. '       ' → logprob: -6.284733295440674
    4. ' }' → logprob: -6.784733295440674
    5. ' }
' → logprob: -7.659733295440674
    6. '}

' → logprob: -10.159732818603516
    7. '}
' → logprob: -10.659732818603516
    8. '   ' → logprob: -10.909732818603516
    9. ',' → logprob: -11.659732818603516
    10. '()}
' → logprob: -13.159732818603516

Token 638: ' no' (ID: 860)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26216623187065125
    2. '
' → logprob: -1.5121662616729736
    3. '{' → logprob: -5.2621660232543945
    4. 'dp' → logprob: -5.8871660232543945
    5. '        
' → logprob: -7.3871660232543945
    6. ',' → logprob: -8.262166023254395
    7. ';' → logprob: -8.762166023254395
    8. '[' → logprob: -8.762166023254395
    9. ' dp' → logprob: -8.887166023254395
    10. '   ' → logprob: -9.012166023254395

Token 639: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.3971426486968994
    2. ' -' → logprob: -2.2721426486968994
    3. '-' → logprob: -2.8971426486968994
    4. 'segments' → logprob: -3.1471426486968994
    5. 'None' → logprob: -3.5221426486968994
    6. ' None' → logprob: -3.6471426486968994
    7. ':' → logprob: -3.6471426486968994
    8. '(None' → logprob: -5.52214241027832
    9. ')' → logprob: -5.89714241027832
    10. '_segments' → logprob: -6.02214241027832

Token 640: ' chosen' (ID: 16180)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1435430943965912
    2. '
' → logprob: -2.143543004989624
    3. '        
' → logprob: -5.143543243408203
    4. 'dp' → logprob: -5.768543243408203
    5. '[' → logprob: -6.393543243408203
    6. ',' → logprob: -6.643543243408203
    7. '{' → logprob: -6.893543243408203
    8. '   ' → logprob: -7.143543243408203
    9. '    
' → logprob: -8.393543243408203
    10. '
' → logprob: -8.518543243408203

Token 641: ' yet' (ID: 5073)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39767932891845703
    2. '
' → logprob: -1.272679328918457
    3. 'dp' → logprob: -3.147679328918457
    4. '[' → logprob: -6.397679328918457
    5. ' dp' → logprob: -7.272679328918457
    6. '        
' → logprob: -7.272679328918457
    7. ',' → logprob: -7.522679328918457
    8. '{' → logprob: -8.272679328918457
    9. '(dp' → logprob: -8.272679328918457
    10. ')
' → logprob: -8.772679328918457

Token 642: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012415464967489243
    2. 'dp' → logprob: -4.762415409088135
    3. '
' → logprob: -5.762415409088135
    4. ' dp' → logprob: -8.387415885925293
    5. ',' → logprob: -8.887415885925293
    6. '        
' → logprob: -9.387415885925293
    7. '{' → logprob: -9.512415885925293
    8. ';' → logprob: -10.387415885925293
    9. '(dp' → logprob: -10.512415885925293
    10. '[' → logprob: -11.262415885925293

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006928373593837023
    2. 'dp' → logprob: -5.006928443908691
    3. ' dp' → logprob: -9.006928443908691
    4. '{' → logprob: -10.506928443908691
    5. '
' → logprob: -10.631928443908691
    6. '[' → logprob: -11.756928443908691
    7. '   ' → logprob: -12.006928443908691
    8. '	dp' → logprob: -12.006928443908691
    9. '        
' → logprob: -12.256928443908691
    10. '(dp' → logprob: -12.381928443908691

Token 644: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.015166468918323517
    2. '       ' → logprob: -4.890166282653809
    3. ' dp' → logprob: -4.890166282653809
    4. '{' → logprob: -11.765166282653809
    5. '	dp' → logprob: -12.890166282653809
    6. '   ' → logprob: -14.890166282653809
    7. '(dp' → logprob: -15.265166282653809
    8. 'import' → logprob: -15.640166282653809
    9. '[' → logprob: -16.140167236328125
    10. '0' → logprob: -16.640167236328125

Token 645: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5928495486150496e-05
    2. '][' → logprob: -11.875016212463379
    3. '
' → logprob: -13.125016212463379
    4. '```' → logprob: -13.500016212463379
    5. ' [' → logprob: -13.875016212463379
    6. ')[' → logprob: -14.000016212463379
    7. ' =' → logprob: -14.250016212463379
    8. 'dp' → logprob: -14.375016212463379
    9. '=' → logprob: -14.500016212463379
    10. '0' → logprob: -15.250016212463379

Token 646: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -12.875005722045898
    3. ' ' → logprob: -13.375005722045898
    4. '
' → logprob: -14.000005722045898
    5. '{' → logprob: -14.500005722045898
    6. '   ' → logprob: -16.7500057220459
    7. '][' → logprob: -16.7500057220459
    8. ']' → logprob: -17.0000057220459
    9. '```' → logprob: -17.3750057220459
    10. '-' → logprob: -17.5000057220459

Token 647: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03049667365849018
    2. ']=' → logprob: -4.030496597290039
    3. ']={' → logprob: -4.655496597290039
    4. '][' → logprob: -6.405496597290039
    5. '=' → logprob: -7.780496597290039
    6. '[' → logprob: -8.155496597290039
    7. ' ]' → logprob: -8.155496597290039
    8. ' =' → logprob: -10.280496597290039
    9. '={' → logprob: -10.780496597290039
    10. '}' → logprob: -10.780496597290039

Token 648: '(' (ID: 7)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1173006072640419
    2. '(None' → logprob: -2.242300510406494
    3. '()' → logprob: -6.617300510406494
    4. '(' → logprob: -6.617300510406494
    5. '(-' → logprob: -7.117300510406494
    6. '()]' → logprob: -7.742300510406494
    7. ' None' → logprob: -8.242300987243652
    8. '-' → logprob: -9.242300987243652
    9. '():' → logprob: -10.242300987243652
    10. '0' → logprob: -10.367300987243652

Token 649: 'float' (ID: 7829)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07708331197500229
    2. ')]' → logprob: -2.8270833492279053
    3. ')' → logprob: -5.077083110809326
    4. 'float' → logprob: -5.202083110809326
    5. '0' → logprob: -6.077083110809326
    6. '-' → logprob: -8.327083587646484
    7. ')>' → logprob: -8.452083587646484
    8. ' None' → logprob: -9.077083587646484
    9. ')][' → logprob: -9.702083587646484
    10. 'inf' → logprob: -10.077083587646484

Token 650: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.011758388951420784
    2. '('-' → logprob: -4.511758327484131
    3. ''in' → logprob: -7.636758327484131
    4. ''' → logprob: -8.761758804321289
    5. ''-' → logprob: -10.136758804321289
    6. 'inf' → logprob: -10.761758804321289
    7. ''s' → logprob: -12.761758804321289
    8. '_inf' → logprob: -13.386758804321289
    9. '("' → logprob: -14.011758804321289
    10. '(' → logprob: -14.136758804321289

Token 651: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.3902266323566437
    2. ''in' → logprob: -1.1402266025543213
    3. ''' → logprob: -5.7652268409729
    4. ''-' → logprob: -9.765226364135742
    5. '-inf' → logprob: -9.765226364135742
    6. ''ex' → logprob: -10.140226364135742
    7. ''n' → logprob: -11.515226364135742
    8. ''ins' → logprob: -11.765226364135742
    9. 'in' → logprob: -12.015226364135742
    10. ''e' → logprob: -12.765226364135742

Token 652: ''),' (ID: 10047)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.010315154679119587
    2. ',' → logprob: -5.01031494140625
    3. ' ),' → logprob: -6.01031494140625
    4. ',),' → logprob: -7.13531494140625
    5. ''),' → logprob: -8.63531494140625
    6. ')' → logprob: -9.88531494140625
    7. 'float' → logprob: -10.26031494140625
    8. ',float' → logprob: -10.88531494140625
    9. ' ,' → logprob: -11.13531494140625
    10. '),(' → logprob: -11.38531494140625

Token 653: ' float' (ID: 4428)
  Prédit: '-f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-f' → logprob: -0.002887491136789322
    2. 'float' → logprob: -6.377887725830078
    3. ' -' → logprob: -7.002887725830078
    4. '-' → logprob: -9.127887725830078
    5. ' float' → logprob: -10.252887725830078
    6. '-inf' → logprob: -10.377887725830078
    7. '-fl' → logprob: -10.877887725830078
    8. '-int' → logprob: -11.002887725830078
    9. '-floor' → logprob: -11.627887725830078
    10. '0' → logprob: -12.252887725830078

Token 654: '('-' (ID: 33343)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1287812888622284
    2. '('-' → logprob: -2.128781318664551
    3. ''-' → logprob: -7.378781318664551
    4. '('+' → logprob: -7.878781318664551
    5. 'inf' → logprob: -8.37878131866455
    6. ''in' → logprob: -8.75378131866455
    7. '-inf' → logprob: -8.87878131866455
    8. ''' → logprob: -9.37878131866455
    9. ''s' → logprob: -9.75378131866455
    10. '_inf' → logprob: -9.75378131866455

Token 655: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. '1' → logprob: -19.125
    3. ' inf' → logprob: -19.5
    4. 'float' → logprob: -20.625
    5. '_inf' → logprob: -20.625
    6. 'Inf' → logprob: -21.25
    7. 'int' → logprob: -22.125
    8. '.inf' → logprob: -22.375
    9. ''' → logprob: -22.875
    10. '')' → logprob: -23.0

Token 656: ''))' (ID: 7974)
  Prédit: ''))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.4307427406311035
    2. '))' → logprob: -1.0557427406311035
    3. '')]' → logprob: -6.4307427406311035
    4. ')]' → logprob: -8.555742263793945
    5. ')' → logprob: -8.805742263793945
    6. ' ))' → logprob: -10.555742263793945
    7. '   ' → logprob: -11.305742263793945
    8. '']))' → logprob: -11.680742263793945
    9. '')' → logprob: -11.930742263793945
    10. '))]
' → logprob: -12.055742263793945

Token 657: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001279045594856143
    2. ']=' → logprob: -6.751278877258301
    3. ' ]' → logprob: -9.3762788772583
    4. ')]' → logprob: -10.7512788772583
    5. ')' → logprob: -13.8762788772583
    6. '()]' → logprob: -14.0012788772583
    7. '=' → logprob: -15.1262788772583
    8. '`]' → logprob: -15.6262788772583
    9. ']=(' → logprob: -16.126279830932617
    10. ']={' → logprob: -16.751279830932617

Token 658: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023383723571896553
    2. ' =' → logprob: -3.773383617401123
    3. ']' → logprob: -9.273384094238281
    4. ']=' → logprob: -10.148384094238281
    5. '=True' → logprob: -12.398384094238281
    6. ')' → logprob: -15.023384094238281
    7. '   ' → logprob: -15.523384094238281
    8. ')=' → logprob: -15.648384094238281
    9. '        ' → logprob: -16.52338409423828
    10. '    ' → logprob: -16.52338409423828

Token 659: ' True' (ID: 6432)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6907755732536316
    2. 'True' → logprob: -0.8157755732536316
    3. 'None' → logprob: -2.9407756328582764
    4. '-' → logprob: -5.815775394439697
    5. ' True' → logprob: -8.440775871276855
    6. 'False' → logprob: -8.940775871276855
    7. '[]' → logprob: -9.315775871276855
    8. '1' → logprob: -9.440775871276855
    9. '(True' → logprob: -9.940775871276855
    10. ' None' → logprob: -10.315775871276855

Token 660: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003902076743543148
    2. '
' → logprob: -5.753901958465576
    3. '        
' → logprob: -8.253902435302734
    4. '   ' → logprob: -8.503902435302734
    5. ' for' → logprob: -9.128902435302734
    6. 'for' → logprob: -9.253902435302734
    7. '<|end|>' → logprob: -10.753902435302734
    8. ',' → logprob: -11.128902435302734
    9. '```' → logprob: -12.128902435302734
    10. '    
' → logprob: -12.253902435302734

Token 661: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016059475019574165
    2. '
' → logprob: -4.391059398651123
    3. 'for' → logprob: -5.891059398651123
    4. ' for' → logprob: -7.766059398651123
    5. '        
' → logprob: -8.516059875488281
    6. '   ' → logprob: -9.391059875488281
    7. '	' → logprob: -10.641059875488281
    8. ',' → logprob: -11.391059875488281
    9. '<|end|>' → logprob: -11.766059875488281
    10. '```' → logprob: -11.891059875488281

Token 662: ' min' (ID: 1349)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 663: '_val' (ID: 13694)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.7188398838043213
    2. '_' → logprob: -1.4688398838043213
    3. '<|end|>' → logprob: -1.5938398838043213
    4. '_segments' → logprob: -3.3438398838043213
    5. ',' → logprob: -4.468839645385742
    6. '_val' → logprob: -5.093839645385742
    7. ')' → logprob: -5.218839645385742
    8. '_seg' → logprob: -6.093839645385742
    9. '_value' → logprob: -6.093839645385742
    10. ' _' → logprob: -6.093839645385742

Token 664: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 665: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00033581978641450405
    2. ' max' → logprob: -8.000335693359375
    3. ' ' → logprob: -16.000335693359375
    4. 'True' → logprob: -16.375335693359375
    5. '_max' → logprob: -16.875335693359375
    6. 'maxlength' → logprob: -17.500335693359375
    7. '	max' → logprob: -17.750335693359375
    8. '   ' → logprob: -18.250335693359375
    9. '(max' → logprob: -18.625335693359375
    10. '
' → logprob: -18.750335693359375

Token 666: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.1527664065361023
    2. '_segment' → logprob: -2.277766466140747
    3. '_float' → logprob: -4.402766227722168
    4. '_segments' → logprob: -4.527766227722168
    5. '_diff' → logprob: -4.652766227722168
    6. '_seg' → logprob: -6.027766227722168
    7. '_inf' → logprob: -7.027766227722168
    8. ')' → logprob: -7.027766227722168
    9. '_value' → logprob: -7.277766227722168
    10. '_' → logprob: -7.652766227722168

Token 667: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10166189074516296
    2. '
' → logprob: -2.3516619205474854
    3. '        
' → logprob: -6.601661682128906
    4. '   ' → logprob: -10.726661682128906
    5. '```' → logprob: -10.851661682128906
    6. 'for' → logprob: -10.976661682128906
    7. ' for' → logprob: -11.601661682128906
    8. '    
' → logprob: -11.726661682128906
    9. ',' → logprob: -12.476661682128906
    10. '
' → logprob: -12.726661682128906

Token 668: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1041145626222715e-05
    2. 'for' → logprob: -11.875011444091797
    3. '   ' → logprob: -13.125011444091797
    4. '
' → logprob: -13.875011444091797
    5. ' for' → logprob: -14.750011444091797
    6. '```' → logprob: -15.250011444091797
    7. '        
' → logprob: -16.250011444091797
    8. '           ' → logprob: -16.250011444091797
    9. 'import' → logprob: -16.500011444091797
    10. 'from' → logprob: -17.000011444091797

Token 669: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023428553715348244
    2. '       ' → logprob: -3.773428440093994
    3. ' for' → logprob: -8.773428916931152
    4. 'import' → logprob: -10.648428916931152
    5. '   ' → logprob: -12.398428916931152
    6. 'min' → logprob: -16.023427963256836
    7. 'from' → logprob: -16.398427963256836
    8. '	for' → logprob: -16.648427963256836
    9. '```' → logprob: -18.023427963256836
    10. '           ' → logprob: -18.148427963256836

Token 670: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12807036936283112
    2. 'end' → logprob: -2.12807035446167
    3. ' i' → logprob: -7.25307035446167
    4. 'j' → logprob: -8.628070831298828
    5. ' end' → logprob: -8.878070831298828
    6. 'pos' → logprob: -9.503070831298828
    7. 'start' → logprob: -11.378070831298828
    8. 'cut' → logprob: -11.503070831298828
    9. 'idx' → logprob: -12.003070831298828
    10. 'index' → logprob: -12.128070831298828

Token 671: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04859418421983719
    2. 'in' → logprob: -3.0485942363739014
    3. 'In' → logprob: -13.17359447479248
    4. '   ' → logprob: -14.04859447479248
    5. '_in' → logprob: -14.04859447479248
    6. 'n' → logprob: -14.54859447479248
    7. '	in' → logprob: -14.54859447479248
    8. 'import' → logprob: -14.54859447479248
    9. '1' → logprob: -14.67359447479248
    10. ' ' → logprob: -15.04859447479248

Token 672: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '1' → logprob: -17.250431060791016
    4. '   ' → logprob: -17.875431060791016
    5. ' ' → logprob: -18.625431060791016
    6. '(range' → logprob: -18.875431060791016
    7. 'in' → logprob: -19.000431060791016
    8. '  ' → logprob: -19.375431060791016
    9. '	range' → logprob: -19.875431060791016
    10. '
' → logprob: -20.250431060791016

Token 673: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038048721849918365
    2. '1' → logprob: -3.28804874420166
    3. '(self' → logprob: -12.03804874420166
    4. '   ' → logprob: -14.41304874420166
    5. '       ' → logprob: -15.16304874420166
    6. 'self' → logprob: -15.41304874420166
    7. '(
' → logprob: -15.53804874420166
    8. ' (' → logprob: -16.663047790527344
    9. ' ' → logprob: -16.788047790527344
    10. '
' → logprob: -17.413047790527344

Token 674: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. 'self' → logprob: -17.625
    4. '   ' → logprob: -18.75
    5. '
' → logprob: -20.125
    6. '0' → logprob: -21.0
    7. '(' → logprob: -21.25
    8. ')' → logprob: -21.75
    9. '１' → logprob: -22.75
    10. 'for' → logprob: -23.0

Token 675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.64708495605737e-05
    2. ' ,' → logprob: -10.125066757202148
    3. ',self' → logprob: -10.875066757202148
    4. 'self' → logprob: -12.250066757202148
    5. ',
' → logprob: -14.125066757202148
    6. '   ' → logprob: -14.250066757202148
    7. '       ' → logprob: -14.250066757202148
    8. ' self' → logprob: -15.625066757202148
    9. '(self' → logprob: -16.00006675720215
    10. ',len' → logprob: -16.62506675720215

Token 676: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.000763510703109e-05
    2. ' self' → logprob: -10.250040054321289
    3. '
' → logprob: -12.875040054321289
    4. '       ' → logprob: -13.375040054321289
    5. '           ' → logprob: -15.875040054321289
    6. '   ' → logprob: -15.875040054321289
    7. '(self' → logprob: -16.87504005432129
    8. ')' → logprob: -17.62504005432129
    9. 'len' → logprob: -18.12504005432129
    10. '        
' → logprob: -18.25004005432129

Token 677: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.021189730614423752
    2. 'length' → logprob: -3.8961896896362305
    3. '+' → logprob: -7.5211896896362305
    4. ' length' → logprob: -10.52118968963623
    5. '.' → logprob: -10.89618968963623
    6. '_length' → logprob: -11.14618968963623
    7. '   ' → logprob: -11.64618968963623
    8. ' +' → logprob: -11.77118968963623
    9. 'ength' → logprob: -12.14618968963623
    10. ')' → logprob: -12.39618968963623

Token 678: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16066387295722961
    2. ' +' → logprob: -1.9106638431549072
    3. '):' → logprob: -8.285663604736328
    4. '):
' → logprob: -8.785663604736328
    5. '   ' → logprob: -11.035663604736328
    6. '       ' → logprob: -11.410663604736328
    7. '+
' → logprob: -12.535663604736328
    8. '
' → logprob: -14.410663604736328
    9. ' +
' → logprob: -14.660663604736328
    10. '    ' → logprob: -14.785663604736328

Token 679: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.12500762939453
    4. '
' → logprob: -19.12500762939453
    5. 'self' → logprob: -19.87500762939453
    6. '  ' → logprob: -20.75000762939453
    7. '```' → logprob: -21.12500762939453
    8. 'i' → logprob: -21.37500762939453
    9. '       ' → logprob: -21.62500762939453
    10. '+' → logprob: -21.75000762939453

Token 680: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.5
    4. '
' → logprob: -19.875
    5. '+' → logprob: -20.625
    6. '       ' → logprob: -21.375
    7. '```' → logprob: -21.375
    8. '           ' → logprob: -21.625
    9. '2' → logprob: -21.875
    10. ')' → logprob: -22.1875

Token 681: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38849207758903503
    2. '):' → logprob: -1.1384921073913574
    3. '       ' → logprob: -6.763492107391357
    4. ':' → logprob: -8.2634916305542
    5. '           ' → logprob: -8.8884916305542
    6. '):
' → logprob: -9.8884916305542
    7. ':
' → logprob: -11.7634916305542
    8. ',' → logprob: -13.2634916305542
    9. '):

' → logprob: -13.3884916305542
    10. '   ' → logprob: -13.7634916305542

Token 682: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5570885807392187e-05
    2. ' for' → logprob: -11.750015258789062
    3. '       ' → logprob: -12.250015258789062
    4. 'for' → logprob: -13.750015258789062
    5. '   ' → logprob: -14.375015258789062
    6. '         ' → logprob: -15.000015258789062
    7. '          ' → logprob: -15.000015258789062
    8. '	       ' → logprob: -15.500015258789062
    9. '```' → logprob: -16.500015258789062
    10. '               ' → logprob: -16.500015258789062

Token 683: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0066155497916042805
    2. '           ' → logprob: -5.25661563873291
    3. ' for' → logprob: -6.75661563873291
    4. 'j' → logprob: -9.00661563873291
    5. 'max' → logprob: -9.63161563873291
    6. '   ' → logprob: -10.88161563873291
    7. 'found' → logprob: -12.63161563873291
    8. 'dp' → logprob: -13.13161563873291
    9. 'min' → logprob: -13.25661563873291
    10. ' ' → logprob: -14.13161563873291

Token 684: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.0100624169572257e-05
    2. 'start' → logprob: -11.125020027160645
    3. ' j' → logprob: -12.625020027160645
    4. 'prev' → logprob: -13.375020027160645
    5. '   ' → logprob: -15.125020027160645
    6. 'k' → logprob: -16.62502098083496
    7. 'length' → logprob: -17.12502098083496
    8. '```' → logprob: -17.75002098083496
    9. '	j' → logprob: -18.25002098083496
    10. '#' → logprob: -18.62502098083496

Token 685: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20141762495040894
    2. 'in' → logprob: -1.7014176845550537
    3. 'range' → logprob: -13.326417922973633
    4. 'import' → logprob: -13.826417922973633
    5. 'In' → logprob: -14.451417922973633
    6. ' ' → logprob: -14.451417922973633
    7. 'n' → logprob: -15.701417922973633
    8. '	in' → logprob: -16.076417922973633
    9. 'int' → logprob: -16.576417922973633
    10. ')' → logprob: -17.076417922973633

Token 686: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.306760805164231e-05
    2. ' range' → logprob: -11.25001335144043
    3. 'dp' → logprob: -16.75001335144043
    4. '(range' → logprob: -17.37501335144043
    5. '   ' → logprob: -19.25001335144043
    6. '	range' → logprob: -20.12501335144043
    7. '
' → logprob: -20.25001335144043
    8. 're' → logprob: -20.62501335144043
    9. 'list' → logprob: -21.25001335144043
    10. 'Range' → logprob: -21.37501335144043

Token 687: '(max' (ID: 17178)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01881781406700611
    2. '(' → logprob: -4.143817901611328
    3. '(max' → logprob: -5.893817901611328
    4. '(j' → logprob: -11.518817901611328
    5. 'max' → logprob: -12.268817901611328
    6. '(range' → logprob: -12.643817901611328
    7. ' (' → logprob: -13.143817901611328
    8. '0' → logprob: -13.643817901611328
    9. '((' → logprob: -14.143817901611328
    10. '(
' → logprob: -14.893817901611328

Token 688: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00028398085851222277
    2. '(i' → logprob: -8.250284194946289
    3. '0' → logprob: -10.750284194946289
    4. '(j' → logprob: -14.125284194946289
    5. ' (' → logprob: -15.125284194946289
    6. '(
' → logprob: -16.00028419494629
    7. 'i' → logprob: -16.25028419494629
    8. 'j' → logprob: -18.12528419494629
    9. ' ' → logprob: -19.12528419494629
    10. '((' → logprob: -19.62528419494629

Token 689: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.036524842376821e-05
    2. 'i' → logprob: -10.125040054321289
    3. ' ' → logprob: -16.12504005432129
    4. '(' → logprob: -16.62504005432129
    5. '
' → logprob: -17.25004005432129
    6. 'j' → logprob: -17.50004005432129
    7. ')' → logprob: -17.50004005432129
    8. '(i' → logprob: -17.62504005432129
    9. '   ' → logprob: -18.00004005432129
    10. ' i' → logprob: -18.87504005432129

Token 690: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10190685093402863
    2. '(i' → logprob: -2.3519067764282227
    3. '(' → logprob: -7.101906776428223
    4. ',i' → logprob: -7.101906776428223
    5. ' ,' → logprob: -10.476906776428223
    6. ',
' → logprob: -11.476906776428223
    7. '       ' → logprob: -12.851906776428223
    8. '   ' → logprob: -12.851906776428223
    9. ',j' → logprob: -12.976906776428223
    10. '           ' → logprob: -13.351906776428223

Token 691: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.292907877039397e-06
    2. ' i' → logprob: -13.25000286102295
    3. 'j' → logprob: -14.25000286102295
    4. '           ' → logprob: -14.62500286102295
    5. '0' → logprob: -15.62500286102295
    6. '       ' → logprob: -16.250003814697266
    7. '   ' → logprob: -16.375003814697266
    8. '               ' → logprob: -17.500003814697266
    9. '         ' → logprob: -17.625003814697266
    10. '          ' → logprob: -18.000003814697266

Token 692: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023247575387358665
    2. ' -' → logprob: -3.773247480392456
    3. '   ' → logprob: -14.898247718811035
    4. '-j' → logprob: -14.898247718811035
    5. '-
' → logprob: -15.523247718811035
    6. '       ' → logprob: -15.523247718811035
    7. '-i' → logprob: -15.773247718811035
    8. ' ' → logprob: -16.14824676513672
    9. '()-' → logprob: -16.14824676513672
    10. '	' → logprob: -16.39824676513672

Token 693: '10' (ID: 702)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.7329443097114563
    2. '10' → logprob: -0.7329443097114563
    3. '15' → logprob: -4.357944488525391
    4. '100' → logprob: -4.857944488525391
    5. '9' → logprob: -4.982944488525391
    6. '6' → logprob: -5.232944488525391
    7. '12' → logprob: -5.857944488525391
    8. '11' → logprob: -6.482944488525391
    9. '18' → logprob: -7.607944488525391
    10. '7' → logprob: -7.607944488525391

Token 694: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0004082699597347528
    2. ' ),' → logprob: -8.250408172607422
    3. ',' → logprob: -8.875408172607422
    4. '   ' → logprob: -13.125408172607422
    5. '):' → logprob: -13.375408172607422
    6. '       ' → logprob: -14.125408172607422
    7. '},' → logprob: -14.750408172607422
    8. ')' → logprob: -15.000408172607422
    9. '           ' → logprob: -15.125408172607422
    10. ' ' → logprob: -15.250408172607422

Token 695: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007114782347343862
    2. ' i' → logprob: -7.250711441040039
    3. '           ' → logprob: -14.250711441040039
    4. '   ' → logprob: -14.875711441040039
    5. '       ' → logprob: -15.750711441040039
    6. 'j' → logprob: -16.37571144104004
    7. '	i' → logprob: -16.75071144104004
    8. '               ' → logprob: -17.12571144104004
    9. '[i' → logprob: -17.12571144104004
    10. '{i' → logprob: -17.25071144104004

Token 696: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2820762097835541
    2. '):' → logprob: -1.4070762395858765
    3. '           ' → logprob: -7.532076358795166
    4. ':' → logprob: -8.657075881958008
    5. ':
' → logprob: -9.657075881958008
    6. '       ' → logprob: -10.032075881958008
    7. '):
' → logprob: -10.657075881958008
    8. '               ' → logprob: -10.657075881958008
    9. ' ):
' → logprob: -11.032075881958008
    10. ' ):' → logprob: -11.532075881958008

Token 697: ' 
' (ID: 793)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004541486850939691
    2. ' segment' → logprob: -8.62545394897461
    3. 'segment' → logprob: -8.75045394897461
    4. ' number' → logprob: -10.75045394897461
    5. 'number' → logprob: -10.87545394897461
    6. ' for' → logprob: -11.12545394897461
    7. ' token' → logprob: -11.50045394897461
    8. 'token' → logprob: -11.50045394897461
    9. 'num' → logprob: -12.00045394897461
    10. '           ' → logprob: -12.12545394897461

Token 698: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023379470221698284
    2. 'segment' → logprob: -6.75233793258667
    3. ' segment' → logprob: -6.87733793258667
    4. '           ' → logprob: -9.377338409423828
    5. 'token' → logprob: -11.877338409423828
    6. '   ' → logprob: -12.252338409423828
    7. 'num' → logprob: -12.377338409423828
    8. '                
' → logprob: -12.752338409423828
    9. '```' → logprob: -12.877338409423828
    10. ' token' → logprob: -13.002338409423828

Token 699: ' #' (ID: 1069)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.007219688035547733
    2. ' segment' → logprob: -5.1322197914123535
    3. '               ' → logprob: -6.8822197914123535
    4. '           ' → logprob: -9.007219314575195
    5. 'seg' → logprob: -9.757219314575195
    6. '                   ' → logprob: -10.007219314575195
    7. '   ' → logprob: -11.007219314575195
    8. 'num' → logprob: -11.507219314575195
    9. 'substring' → logprob: -12.757219314575195
    10. 'segments' → logprob: -12.882219314575195

Token 700: ' Limit' (ID: 46480)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.007409389596432447
    2. ' segment' → logprob: -5.007409572601318
    3. '               ' → logprob: -7.632409572601318
    4. 'try' → logprob: -9.25740909576416
    5. 'seg' → logprob: -9.75740909576416
    6. 'substring' → logprob: -11.00740909576416
    7. '                   ' → logprob: -11.38240909576416
    8. 'num' → logprob: -11.50740909576416
    9. 'substr' → logprob: -12.88240909576416
    10. 'sub' → logprob: -13.00740909576416

Token 701: ' max' (ID: 2999)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.08603856712579727
    2. ' segment' → logprob: -3.211038589477539
    3. '           ' → logprob: -3.461038589477539
    4. '               ' → logprob: -5.336038589477539
    5. '(segment' → logprob: -6.211038589477539
    6. 'length' → logprob: -6.711038589477539
    7. '_segment' → logprob: -7.211038589477539
    8. '                   ' → logprob: -7.836038589477539
    9. ' for' → logprob: -8.086038589477539
    10. 'number' → logprob: -8.336038589477539

Token 702: ' segment' (ID: 14806)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.8279157280921936
    2. 'segment' → logprob: -1.0779156684875488
    3. ' segment' → logprob: -1.7029156684875488
    4. '_length' → logprob: -3.702915668487549
    5. 'length' → logprob: -5.077915668487549
    6. ' length' → logprob: -5.202915668487549
    7. '_len' → logprob: -5.827915668487549
    8. 'len' → logprob: -7.952915668487549
    9. '_seg' → logprob: -8.077916145324707
    10. '(segment' → logprob: -8.202916145324707

Token 703: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.04294724017381668
    2. ' length' → logprob: -3.292947292327881
    3. '_length' → logprob: -5.542947292327881
    4. '_len' → logprob: -7.667947292327881
    5. '               ' → logprob: -8.167946815490723
    6. 'len' → logprob: -8.667946815490723
    7. 'size' → logprob: -10.042946815490723
    8. 'leng' → logprob: -13.542946815490723
    9. ' size' → logprob: -13.792946815490723
    10. 'ength' → logprob: -13.917946815490723

Token 704: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22113028168678284
    2. '               ' → logprob: -2.22113037109375
    3. '=' → logprob: -3.09613037109375
    4. ' to' → logprob: -3.84613037109375
    5. ' =' → logprob: -4.72113037109375
    6. ',' → logprob: -5.59613037109375
    7. 'to' → logprob: -5.84613037109375
    8. ':' → logprob: -6.84613037109375
    9. ' (' → logprob: -7.22113037109375
    10. '       ' → logprob: -7.22113037109375

Token 705: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.1080467781284824e-05
    2. ' ' → logprob: -10.125041007995605
    3. '```' → logprob: -14.625041007995605
    4. '   ' → logprob: -16.000041961669922
    5. '11' → logprob: -16.500041961669922
    6. '9' → logprob: -16.750041961669922
    7. '
' → logprob: -16.750041961669922
    8. 'max' → logprob: -17.000041961669922
    9. '100' → logprob: -18.500041961669922
    10. '20' → logprob: -18.750041961669922

Token 706: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -15.875000953674316
    4. '11' → logprob: -16.625001907348633
    5. '9' → logprob: -16.625001907348633
    6. '
' → logprob: -17.750001907348633
    7. '20' → logprob: -18.250001907348633
    8. '12' → logprob: -19.375001907348633
    9. '``' → logprob: -19.500001907348633
    10. '   ' → logprob: -19.750001907348633

Token 707: ' digits' (ID: 37806)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2592833340167999
    2. '           ' → logprob: -1.5092833042144775
    3. ',' → logprob: -5.759283542633057
    4. ' to' → logprob: -7.009283542633057
    5. '
' → logprob: -7.509283542633057
    6. ' for' → logprob: -7.509283542633057
    7. '            
' → logprob: -8.009283065795898
    8. '                
' → logprob: -8.009283065795898
    9. 'tokens' → logprob: -8.384283065795898
    10. ' (' → logprob: -9.134283065795898

Token 708: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00174158182926476
    2. '           ' → logprob: -7.126741409301758
    3. ',' → logprob: -8.001741409301758
    4. ' to' → logprob: -8.376741409301758
    5. ' for' → logprob: -9.126741409301758
    6. '                
' → logprob: -9.626741409301758
    7. '
' → logprob: -10.251741409301758
    8. '<|end|>' → logprob: -10.376741409301758
    9. '<|end|>' → logprob: -10.876741409301758
    10. ' because' → logprob: -11.126741409301758

Token 709: ' performance' (ID: 6198)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.6252713799476624
    2. 'performance' → logprob: -1.6252713203430176
    3. ' performance' → logprob: -2.2502713203430176
    4. 'memory' → logprob: -3.1252713203430176
    5. ' memory' → logprob: -3.2502713203430176
    6. ' segment' → logprob: -3.3752713203430176
    7. 'pr' → logprob: -5.000271320343018
    8. 'digit' → logprob: -5.500271320343018
    9. ' j' → logprob: -5.625271320343018
    10. '#' → logprob: -5.750271320343018

Token 710: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003297440707683563
    2. '
' → logprob: -9.000329971313477
    3. '                
' → logprob: -9.125329971313477
    4. ',' → logprob: -10.000329971313477
    5. '           ' → logprob: -10.625329971313477
    6. 'segment' → logprob: -12.500329971313477
    7. ' segment' → logprob: -12.875329971313477
    8. '                   ' → logprob: -13.000329971313477
    9. '<|end|>' → logprob: -13.000329971313477
    10. '<|end|>' → logprob: -13.250329971313477

Token 711: 'since' (ID: 21910)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38574159145355225
    2. ')' → logprob: -1.3857415914535522
    3. '):
' → logprob: -3.260741710662842
    4. '               ' → logprob: -4.385741710662842
    5. 'segment' → logprob: -4.635741710662842
    6. ' )
' → logprob: -5.760741710662842
    7. ' segment' → logprob: -6.635741710662842
    8. '           ' → logprob: -7.010741710662842
    9. ' )' → logprob: -7.260741710662842
    10. '):' → logprob: -7.510741710662842

Token 712: ' digits' (ID: 37806)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.225316047668457
    2. 'number' → logprob: -1.475316047668457
    3. 'segment' → logprob: -1.725316047668457
    4. 'int' → logprob: -1.975316047668457
    5. ' segment' → logprob: -3.350316047668457
    6. ' number' → logprob: -3.600316047668457
    7. ' self' → logprob: -3.850316047668457
    8. 'digits' → logprob: -4.350316047668457
    9. ' int' → logprob: -4.850316047668457
    10. ' all' → logprob: -4.850316047668457

Token 713: ' ' (ID: 220)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.11413979530334473
    2. 'are' → logprob: -2.4891397953033447
    3. '[' → logprob: -4.989139556884766
    4. '[i' → logprob: -5.489139556884766
    5. ' can' → logprob: -5.739139556884766
    6. ' between' → logprob: -5.864139556884766
    7. ' in' → logprob: -6.489139556884766
    8. ')' → logprob: -6.489139556884766
    9. '[j' → logprob: -6.989139556884766
    10. 'between' → logprob: -6.989139556884766

Token 714: '1' (ID: 16)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.5781236886978149
    2. ' are' → logprob: -1.328123688697815
    3. '0' → logprob: -2.9531235694885254
    4. 'between' → logprob: -3.7031235694885254
    5. 'in' → logprob: -3.9531235694885254
    6. '[i' → logprob: -4.078123569488525
    7. '<=' → logprob: -4.453123569488525
    8. '[' → logprob: -4.703123569488525
    9. '1' → logprob: -5.078123569488525
    10. ' in' → logprob: -5.203123569488525

Token 715: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12714123725891113
    2. ' to' → logprob: -3.127141237258911
    3. 'to' → logprob: -3.252141237258911
    4. '<=' → logprob: -3.627141237258911
    5. ',' → logprob: -5.877140998840332
    6. ' <=' → logprob: -6.377140998840332
    7. '0' → logprob: -6.752140998840332
    8. ' through' → logprob: -7.377140998840332
    9. '```' → logprob: -7.502140998840332
    10. ' are' → logprob: -7.752140998840332

Token 716: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.2200749754119897e-06
    2. '```' → logprob: -13.875001907348633
    3. '
' → logprob: -14.500001907348633
    4. ' ' → logprob: -15.125001907348633
    5. '-' → logprob: -16.000001907348633
    6. ')' → logprob: -16.500001907348633
    7. 'to' → logprob: -17.000001907348633
    8. '...' → logprob: -17.250001907348633
    9. '999' → logprob: -18.000001907348633
    10. '   ' → logprob: -18.000001907348633

Token 717: ' only' (ID: 1606)
  Prédit: ' only'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.7894023060798645
    2. ')
' → logprob: -1.4144022464752197
    3. '):
' → logprob: -1.7894022464752197
    4. 'only' → logprob: -2.6644022464752197
    5. ' are' → logprob: -3.2894022464752197
    6. ')' → logprob: -4.289402484893799
    7. ',' → logprob: -5.539402484893799
    8. '               ' → logprob: -6.289402484893799
    9. '),' → logprob: -6.539402484893799
    10. '):' → logprob: -6.664402484893799

Token 718: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10420572757720947
    2. '               ' → logprob: -2.72920560836792
    3. '):' → logprob: -3.47920560836792
    4. '                   ' → logprob: -6.97920560836792
    5. '           ' → logprob: -7.35420560836792
    6. '):

' → logprob: -7.85420560836792
    7. ')
' → logprob: -7.97920560836792
    8. ')' → logprob: -8.104206085205078
    9. '):
' → logprob: -9.229206085205078
    10. ',' → logprob: -10.604206085205078

Token 719: ' fits' (ID: 23440)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.7175465226173401
    2. 'segment' → logprob: -0.8425465226173401
    3. '                   ' → logprob: -2.8425464630126953
    4. ')' → logprob: -4.592546463012695
    5. '               ' → logprob: -5.717546463012695
    6. '):
' → logprob: -5.842546463012695
    7. ')
' → logprob: -5.842546463012695
    8. '```' → logprob: -7.467546463012695
    9. 'segments' → logprob: -7.467546463012695
    10. '#' → logprob: -8.092546463012695

Token 720: ' int' (ID: 677)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.647889256477356
    2. ' in' → logprob: -1.022889256477356
    3. 'int' → logprob: -2.6478891372680664
    4. '           ' → logprob: -4.022889137268066
    5. 'within' → logprob: -4.647889137268066
    6. ' within' → logprob: -5.272889137268066
    7. ' into' → logprob: -5.647889137268066
    8. 'into' → logprob: -5.647889137268066
    9. ' int' → logprob: -6.397889137268066
    10. '               ' → logprob: -7.272889137268066

Token 721: ' easily' (ID: 7835)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5120742321014404
    2. '(segment' → logprob: -1.7620742321014404
    3. ')
' → logprob: -2.6370742321014404
    4. '()' → logprob: -3.3870742321014404
    5. '())' → logprob: -3.6370742321014404
    6. '(' → logprob: -4.2620744705200195
    7. '())
' → logprob: -4.6370744705200195
    8. ',' → logprob: -4.7620744705200195
    9. 'segment' → logprob: -4.8870744705200195
    10. 'range' → logprob: -5.0120744705200195

Token 722: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5483805537223816
    2. '):
' → logprob: -0.9233805537223816
    3. '):' → logprob: -4.423380374908447
    4. ')' → logprob: -5.173380374908447
    5. '           ' → logprob: -5.548380374908447
    6. ')
' → logprob: -6.048380374908447
    7. '                   ' → logprob: -7.423380374908447
    8. '):

' → logprob: -8.673380851745605
    9. '):
' → logprob: -9.423380851745605
    10. ',' → logprob: -10.548380851745605

Token 723: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013786651834379882
    2. '                
' → logprob: -10.125138282775879
    3. 'segment' → logprob: -10.125138282775879
    4. ' segment' → logprob: -10.875138282775879
    5. '           ' → logprob: -11.125138282775879
    6. '
' → logprob: -11.125138282775879
    7. '                   ' → logprob: -13.125138282775879
    8. '   ' → logprob: -13.625138282775879
    9. ',' → logprob: -14.000138282775879
    10. '	           ' → logprob: -14.375138282775879

Token 724: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' (adapté à ' segment') → logprob: -0.22968341410160065
    2. '               ' → logprob: -1.6046833992004395
    3. ' segment' → logprob: -5.6046833992004395
    4. '                   ' → logprob: -8.229683876037598
    5. '           ' → logprob: -9.354683876037598
    6. 'seg' → logprob: -9.354683876037598
    7. 'segments' → logprob: -9.479683876037598
    8. '   ' → logprob: -10.354683876037598
    9. 'for' → logprob: -12.104683876037598
    10. '                
' → logprob: -12.729683876037598

Token 725: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -6.682846287731081e-05
    2. '_val' → logprob: -9.625066757202148
    3. 'str' → logprob: -15.125066757202148
    4. '_' → logprob: -15.500066757202148
    5. '_string' → logprob: -17.00006675720215
    6. ' =' → logprob: -17.37506675720215
    7. '_len' → logprob: -17.50006675720215
    8. '_s' → logprob: -17.87506675720215
    9. '_value' → logprob: -17.87506675720215
    10. '=_' → logprob: -18.50006675720215

Token 726: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587825149297714
    2. ' =' → logprob: -3.0485877990722656
    3. '=self' → logprob: -14.923587799072266
    4. '=
' → logprob: -17.673587799072266
    5. '=

' → logprob: -17.673587799072266
    6. ' ' → logprob: -17.798587799072266
    7. '＝' → logprob: -18.798587799072266
    8. '=}' → logprob: -19.923587799072266
    9. 's' → logprob: -20.173587799072266
    10. '           ' → logprob: -20.548587799072266

Token 727: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078639671206474
    2. ' self' → logprob: -5.5040788650512695
    3. '           ' → logprob: -15.62907886505127
    4. '(self' → logprob: -17.879077911376953
    5. '
' → logprob: -18.129077911376953
    6. '	self' → logprob: -18.254077911376953
    7. '       ' → logprob: -18.504077911376953
    8. '   ' → logprob: -18.754077911376953
    9. '               ' → logprob: -18.879077911376953
    10. '=self' → logprob: -18.879077911376953

Token 728: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.0013634508941322565
    2. 'number' → logprob: -6.626363277435303
    3. '.' → logprob: -10.376363754272461
    4. ' number' → logprob: -13.126363754272461
    5. '[number' → logprob: -13.501363754272461
    6. 'self' → logprob: -13.626363754272461
    7. ' .' → logprob: -14.626363754272461
    8. '	number' → logprob: -14.876363754272461
    9. 'umber' → logprob: -15.376363754272461
    10. '.user' → logprob: -15.626363754272461

Token 729: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0022343553137034178
    2. 'str' → logprob: -6.12723445892334
    3. 'self' → logprob: -10.25223445892334
    4. 'Str' → logprob: -11.37723445892334
    5. 's' → logprob: -14.25223445892334
    6. '_s' → logprob: -14.87723445892334
    7. '_string' → logprob: -15.12723445892334
    8. '[self' → logprob: -16.002233505249023
    9. '_self' → logprob: -16.127233505249023
    10. 'string' → logprob: -16.127233505249023

Token 730: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.3856492842023727e-06
    2. 'j' → logprob: -13.875000953674316
    3. '[' → logprob: -15.000000953674316
    4. '
' → logprob: -17.500001907348633
    5. '```' → logprob: -17.500001907348633
    6. '[i' → logprob: -18.500001907348633
    7. '[
' → logprob: -18.625001907348633
    8. '                   ' → logprob: -19.250001907348633
    9. ' [' → logprob: -19.250001907348633
    10. '   ' → logprob: -19.250001907348633

Token 731: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.00031866179779171944
    2. 'i' → logprob: -8.37531852722168
    3. ' i' → logprob: -10.25031852722168
    4. ':' → logprob: -10.75031852722168
    5. '[i' → logprob: -10.87531852722168
    6. ',i' → logprob: -12.00031852722168
    7. ' :' → logprob: -12.50031852722168
    8. '   ' → logprob: -14.62531852722168
    9. '	i' → logprob: -14.62531852722168
    10. ';i' → logprob: -14.87531852722168

Token 732: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6221562027931213
    2. '           ' → logprob: -1.1221561431884766
    3. ')' → logprob: -1.9971561431884766
    4. ']
' → logprob: -6.872156143188477
    5. ']' → logprob: -7.372156143188477
    6. 'segment' → logprob: -9.122156143188477
    7. '               ' → logprob: -9.997156143188477
    8. ')
' → logprob: -10.872156143188477
    9. '          ' → logprob: -10.997156143188477
    10. '       ' → logprob: -11.372156143188477

Token 733: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016108620911836624
    2. 'segment' → logprob: -4.141108512878418
    3. ' segment' → logprob: -9.766108512878418
    4. 'try' → logprob: -11.891108512878418
    5. '           ' → logprob: -12.016108512878418
    6. 'segments' → logprob: -13.516108512878418
    7. '                
' → logprob: -14.141108512878418
    8. '                   ' → logprob: -14.141108512878418
    9. 'token' → logprob: -15.141108512878418
    10. '			' → logprob: -15.641108512878418

Token 734: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' (adapté à ' segment') → logprob: -0.06661006063222885
    2. '               ' → logprob: -3.066610097885132
    3. ' segment' → logprob: -4.066609859466553
    4. '           ' → logprob: -7.316609859466553
    5. '                   ' → logprob: -10.691610336303711
    6. 'seg' → logprob: -11.316610336303711
    7. '   ' → logprob: -11.941610336303711
    8. 'try' → logprob: -12.316610336303711
    9. 'segments' → logprob: -12.566610336303711
    10. 'section' → logprob: -13.441610336303711

Token 735: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -6.153795766294934e-06
    2. 'Val' → logprob: -12.500005722045898
    3. 'val' → logprob: -13.750005722045898
    4. '_' → logprob: -14.250005722045898
    5. '_value' → logprob: -15.000005722045898
    6. '_str' → logprob: -15.625005722045898
    7. '_vals' → logprob: -16.2500057220459
    8. '_VAL' → logprob: -16.3750057220459
    9. '_len' → logprob: -17.3750057220459
    10. '}_' → logprob: -17.7500057220459

Token 736: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0619698166847229
    2. ' =' → logprob: -2.811969757080078
    3. '=int' → logprob: -13.061969757080078
    4. 'int' → logprob: -18.811969757080078
    5. '=
' → logprob: -19.561969757080078
    6. '   ' → logprob: -19.811969757080078
    7. '=

' → logprob: -19.936969757080078
    8. ' ' → logprob: -20.186969757080078
    9. '＝' → logprob: -20.686969757080078
    10. '=}' → logprob: -21.061969757080078

Token 737: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.306760805164231e-05
    2. ' int' → logprob: -11.25001335144043
    3. '(int' → logprob: -25.00001335144043
    4. '   ' → logprob: -25.12501335144043
    5. '	int' → logprob: -25.62501335144043
    6. '<int' → logprob: -25.75001335144043
    7. '[int' → logprob: -25.75001335144043
    8. '               ' → logprob: -26.25001335144043
    9. '=int' → logprob: -26.37501335144043
    10. '           ' → logprob: -26.87501335144043

Token 738: '(segment' (ID: 144369)
  Prédit: '(segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(segment' → logprob: -2.339278580620885e-06
    2. 'segment' → logprob: -13.000001907348633
    3. '(' → logprob: -18.000001907348633
    4. '(seg' → logprob: -18.125001907348633
    5. '(section' → logprob: -18.625001907348633
    6. ' (' → logprob: -20.000001907348633
    7. ' segment' → logprob: -20.125001907348633
    8. '(
' → logprob: -20.875001907348633
    9. '(sequence' → logprob: -21.625001907348633
    10. '(fragment' → logprob: -22.000001907348633

Token 739: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.0445127372804563e-05
    2. 'str' → logprob: -11.75001049041748
    3. '_val' → logprob: -13.00001049041748
    4. 'Str' → logprob: -16.000009536743164
    5. 'segment' → logprob: -16.125009536743164
    6. 'val' → logprob: -17.625009536743164
    7. '```' → logprob: -17.625009536743164
    8. '[str' → logprob: -17.875009536743164
    9. '[' → logprob: -19.000009536743164
    10. '_seg' → logprob: -19.750009536743164

Token 740: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760423541069031
    2. ')
' → logprob: -0.8260423541069031
    3. ')

' → logprob: -9.951042175292969
    4. ')
' → logprob: -10.076042175292969
    5. '               ' → logprob: -12.326042175292969
    6. ' )
' → logprob: -12.951042175292969
    7. ')`
' → logprob: -13.326042175292969
    8. '           ' → logprob: -13.451042175292969
    9. ' )' → logprob: -13.951042175292969
    10. '   ' → logprob: -14.076042175292969

Token 741: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001972053898498416
    2. '           ' → logprob: -6.876972198486328
    3. 'for' → logprob: -7.126972198486328
    4. ' for' → logprob: -9.001972198486328
    5. '                   ' → logprob: -12.751972198486328
    6. '                
' → logprob: -13.001972198486328
    7. '```' → logprob: -13.251972198486328
    8. '   ' → logprob: -13.626972198486328
    9. 'import' → logprob: -13.876972198486328
    10. '       ' → logprob: -14.126972198486328

Token 742: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.33367258310317993
    2. '               ' → logprob: -1.3336725234985352
    3. ' for' → logprob: -3.958672523498535
    4. '                
' → logprob: -7.333672523498535
    5. 'if' → logprob: -7.958672523498535
    6. '
' → logprob: -9.833672523498535
    7. '           ' → logprob: -11.083672523498535
    8. '                   ' → logprob: -12.208672523498535
    9. '#' → logprob: -12.208672523498535
    10. ' ' → logprob: -12.583672523498535

Token 743: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.005027271341532469
    2. '(prev' → logprob: -6.1300272941589355
    3. 'min' → logprob: -6.3800272941589355
    4. ' (' → logprob: -7.2550272941589355
    5. '(' → logprob: -8.255026817321777
    6. 'prev' → logprob: -10.005026817321777
    7. '(old' → logprob: -10.255026817321777
    8. ' min' → logprob: -10.380026817321777
    9. '(existing' → logprob: -10.880026817321777
    10. '(m' → logprob: -11.005026817321777

Token 744: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07052605599164963
    2. '(min' → logprob: -2.695526123046875
    3. 'cur' → logprob: -8.320526123046875
    4. 'curr' → logprob: -8.695526123046875
    5. 'prev' → logprob: -9.695526123046875
    6. 'mn' → logprob: -10.695526123046875
    7. ' min' → logprob: -10.695526123046875
    8. 'mini' → logprob: -10.945526123046875
    9. 'current' → logprob: -11.320526123046875
    10. '(curr' → logprob: -11.445526123046875

Token 745: '_v' (ID: 5390)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0006379772676154971
    2. '_segment' → logprob: -8.125638008117676
    3. '_seg' → logprob: -8.250638008117676
    4. '_min' → logprob: -9.875638008117676
    5. '_,' → logprob: -11.375638008117676
    6. '_v' → logprob: -11.875638008117676
    7. 'val' → logprob: -12.125638008117676
    8. '_' → logprob: -13.000638008117676
    9. '_s' → logprob: -14.500638008117676
    10. '_value' → logprob: -14.500638008117676

Token 746: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023250321100931615
    2. ',min' → logprob: -8.750232696533203
    3. ',val' → logprob: -10.625232696533203
    4. ' ,' → logprob: -10.750232696533203
    5. ',max' → logprob: -11.625232696533203
    6. ',current' → logprob: -11.875232696533203
    7. '_,' → logprob: -12.500232696533203
    8. '_val' → logprob: -13.250232696533203
    9. ',s' → logprob: -13.875232696533203
    10. ',v' → logprob: -14.250232696533203

Token 747: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011048289015889168
    2. ' max' → logprob: -4.511048316955566
    3. '_max' → logprob: -15.636048316955566
    4. ' ' → logprob: -15.886048316955566
    5. '	max' → logprob: -16.76104736328125
    6. '   ' → logprob: -17.01104736328125
    7. '(max' → logprob: -18.26104736328125
    8. '```' → logprob: -18.38604736328125
    9. '  ' → logprob: -18.63604736328125
    10. 'min' → logprob: -18.76104736328125

Token 748: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.001190702780149877
    2. '_val' → logprob: -6.751190662384033
    3. ',' → logprob: -12.251191139221191
    4. 'v' → logprob: -12.626191139221191
    5. 'Val' → logprob: -12.751191139221191
    6. 'val' → logprob: -13.126191139221191
    7. ')_' → logprob: -13.626191139221191
    8. '_,' → logprob: -13.876191139221191
    9. ' _' → logprob: -14.376191139221191
    10. ')' → logprob: -14.376191139221191

Token 749: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23130103945732117
    2. '),' → logprob: -2.1063010692596436
    3. ',' → logprob: -2.4813010692596436
    4. ',)' → logprob: -7.7313008308410645
    5. 'in' → logprob: -7.9813008308410645
    6. ' in' → logprob: -8.981301307678223
    7. ' ,' → logprob: -8.981301307678223
    8. ' )' → logprob: -9.731301307678223
    9. ',),' → logprob: -10.856301307678223
    10. '),(' → logprob: -10.981301307678223

Token 750: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1273266077041626
    2. 'in' → logprob: -2.127326488494873
    3. ',' → logprob: -7.877326488494873
    4. '_in' → logprob: -11.252326965332031
    5. 'In' → logprob: -13.877326965332031
    6. ' ,' → logprob: -14.127326965332031
    7. '                   ' → logprob: -14.502326965332031
    8. '               ' → logprob: -14.502326965332031
    9. ')' → logprob: -14.752326965332031
    10. ',in' → logprob: -14.877326965332031

Token 751: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00022010602697264403
    2. ' dp' → logprob: -9.00022029876709
    3. 'list' → logprob: -9.25022029876709
    4. ' list' → logprob: -14.75022029876709
    5. '(dp' → logprob: -17.000219345092773
    6. '   ' → logprob: -17.250219345092773
    7. '	dp' → logprob: -17.250219345092773
    8. '
' → logprob: -17.375219345092773
    9. '_dp' → logprob: -18.625219345092773
    10. '

' → logprob: -18.750219345092773

Token 752: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -16.5
    3. 'j' → logprob: -17.25
    4. '
' → logprob: -17.375
    5. '[
' → logprob: -18.375
    6. '[' → logprob: -18.375
    7. ' [' → logprob: -18.625
    8. '[js' → logprob: -18.875
    9. '```' → logprob: -19.25
    10. '[i' → logprob: -19.5

Token 753: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18602749705314636
    2. ']:
' → logprob: -2.0610275268554688
    3. '.keys' → logprob: -4.186027526855469
    4. '):' → logprob: -4.936027526855469
    5. ':
' → logprob: -5.311027526855469
    6. '].' → logprob: -5.436027526855469
    7. ').' → logprob: -5.936027526855469
    8. '           ' → logprob: -6.186027526855469
    9. ']:' → logprob: -6.311027526855469
    10. '       ' → logprob: -6.811027526855469

Token 754: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01916099339723587
    2. ' new' → logprob: -4.269161224365234
    3. ' min' → logprob: -6.019161224365234
    4. 'new' → logprob: -6.769161224365234
    5. 'min' → logprob: -7.644161224365234
    6. ' if' → logprob: -7.894161224365234
    7. '   ' → logprob: -9.269161224365234
    8. ' dp' → logprob: -9.644161224365234
    9. ' updated' → logprob: -10.019161224365234
    10. 'diff' → logprob: -10.144161224365234

Token 755: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.3281509280204773
    2. 'new' → logprob: -1.453150987625122
    3. ' min' → logprob: -3.828150987625122
    4. 'min' → logprob: -4.578150749206543
    5. '                       ' → logprob: -5.578150749206543
    6. '                   ' → logprob: -5.828150749206543
    7. ' key' → logprob: -6.078150749206543
    8. '   ' → logprob: -6.328150749206543
    9. 'diff' → logprob: -6.578150749206543
    10. 'key' → logprob: -7.828150749206543

Token 756: ' create' (ID: 2501)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.1614033430814743
    2. 'min' → logprob: -1.9114032983779907
    3. ' new' → logprob: -7.911403179168701
    4. '                   ' → logprob: -8.41140365600586
    5. '                       ' → logprob: -8.91140365600586
    6. 'curr' → logprob: -9.28640365600586
    7. '   ' → logprob: -9.41140365600586
    8. 'cur' → logprob: -9.78640365600586
    9. 'key' → logprob: -9.91140365600586
    10. 'dp' → logprob: -10.16140365600586

Token 757: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5862315893173218
    2. 'new' → logprob: -0.8362315893173218
    3. ' key' → logprob: -5.461231708526611
    4. 'key' → logprob: -6.461231708526611
    5. '                   ' → logprob: -6.836231708526611
    6. 'min' → logprob: -7.086231708526611
    7. ' (' → logprob: -7.586231708526611
    8. '                       ' → logprob: -7.711231708526611
    9. '(new' → logprob: -8.086231231689453
    10. ' min' → logprob: -8.086231231689453

Token 758: ' state' (ID: 2608)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.37151554226875305
    2. 'min' → logprob: -1.2465155124664307
    3. 'key' → logprob: -4.37151575088501
    4. '_key' → logprob: -5.87151575088501
    5. 'diff' → logprob: -5.99651575088501
    6. 'state' → logprob: -6.12151575088501
    7. '_diff' → logprob: -6.74651575088501
    8. 'tuple' → logprob: -7.87151575088501
    9. 'range' → logprob: -7.99651575088501
    10. '(min' → logprob: -8.996515274047852

Token 759: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6551225185394287
    2. ' =' → logprob: -0.7801225185394287
    3. '                       ' → logprob: -4.905122756958008
    4. 'new' → logprob: -5.530122756958008
    5. ' new' → logprob: -5.530122756958008
    6. '=' → logprob: -6.155122756958008
    7. ',' → logprob: -7.155122756958008
    8. '               ' → logprob: -7.655122756958008
    9. '_new' → logprob: -7.655122756958008
    10. ' key' → logprob: -7.780122756958008

Token 760: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5838565826416016
    2. ' =' → logprob: -0.8338565826416016
    3. '                       ' → logprob: -6.083856582641602
    4. '=' → logprob: -6.208856582641602
    5. 'new' → logprob: -6.458856582641602
    6. ' new' → logprob: -6.833856582641602
    7. '               ' → logprob: -8.333856582641602
    8. '   ' → logprob: -8.958856582641602
    9. ' next' → logprob: -9.708856582641602
    10. '_new' → logprob: -9.708856582641602

Token 761: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.2144552767276764
    2. 'new' (adapté à ' new') → logprob: -1.714455246925354
    3. ' min' → logprob: -4.8394551277160645
    4. 'min' → logprob: -5.7144551277160645
    5. ' key' → logprob: -7.3394551277160645
    6. '                   ' → logprob: -7.8394551277160645
    7. '   ' → logprob: -8.214455604553223
    8. '                       ' → logprob: -8.714455604553223
    9. 'key' → logprob: -9.964455604553223
    10. 'state' → logprob: -10.464455604553223

Token 762: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0005838918150402606
    2. 'min' → logprob: -7.750584125518799
    3. '_key' → logprob: -9.50058364868164
    4. '_state' → logprob: -9.87558364868164
    5. 'state' → logprob: -11.37558364868164
    6. '_val' → logprob: -12.37558364868164
    7. ' =' → logprob: -13.00058364868164
    8. '_' → logprob: -13.37558364868164
    9. '_tuple' → logprob: -13.37558364868164
    10. '_states' → logprob: -14.00058364868164

Token 763: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2897542119026184
    2. '_v' → logprob: -2.0397541522979736
    3. ' =' → logprob: -2.4147541522979736
    4. '=min' → logprob: -4.039754390716553
    5. 'v' → logprob: -4.914754390716553
    6. '_val' → logprob: -5.789754390716553
    7. ',' → logprob: -6.289754390716553
    8. 'val' → logprob: -7.414754390716553
    9. '                   ' → logprob: -7.789754390716553
    10. ',v' → logprob: -8.039753913879395

Token 764: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0009286141721531749
    2. ' min' → logprob: -7.0009284019470215
    3. '(min' → logprob: -11.37592887878418
    4. 'segment' → logprob: -12.12592887878418
    5. '	min' → logprob: -15.87592887878418
    6. '   ' → logprob: -16.50092887878418
    7. ',min' → logprob: -17.25092887878418
    8. 'minimum' → logprob: -17.25092887878418
    9. '                           ' → logprob: -18.12592887878418
    10. '=min' → logprob: -18.12592887878418

Token 765: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0004915529862046242
    2. 'min' → logprob: -8.12549114227295
    3. '(' → logprob: -9.25049114227295
    4. '(segment' → logprob: -9.62549114227295
    5. 'segment' → logprob: -10.62549114227295
    6. ' (' → logprob: -12.62549114227295
    7. '(max' → logprob: -13.75049114227295
    8. '((' → logprob: -13.87549114227295
    9. ' min' → logprob: -14.00049114227295
    10. '=min' → logprob: -14.25049114227295

Token 766: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.28833073377609253
    2. '(segment' → logprob: -1.6633307933807373
    3. 'segment' → logprob: -3.2883307933807373
    4. '(min' → logprob: -4.538330554962158
    5. 'v' → logprob: -4.913330554962158
    6. 'val' → logprob: -5.913330554962158
    7. '(' → logprob: -7.038330554962158
    8. 'min' → logprob: -7.163330554962158
    9. '(v' → logprob: -7.288330554962158
    10. '((' → logprob: -9.038331031799316

Token 767: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021617230959236622
    2. 'segment' → logprob: -9.000216484069824
    3. '(segment' → logprob: -9.500216484069824
    4. ' ,' → logprob: -11.625216484069824
    5. ',min' → logprob: -12.500216484069824
    6. ',
' → logprob: -12.750216484069824
    7. ' segment' → logprob: -14.125216484069824
    8. '                           ' → logprob: -15.875216484069824
    9. ',new' → logprob: -16.000215530395508
    10. ')' → logprob: -16.125215530395508

Token 768: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.001326433615759015
    2. ' segment' → logprob: -6.626326560974121
    3. '                   ' → logprob: -15.251326560974121
    4. '(segment' → logprob: -16.001325607299805
    5. '               ' → logprob: -16.626325607299805
    6. '                       ' → logprob: -17.251325607299805
    7. '                           ' → logprob: -17.751325607299805
    8. '   ' → logprob: -18.126325607299805
    9. '           ' → logprob: -18.501325607299805
    10. '.segment' → logprob: -18.751325607299805

Token 769: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -8.180258191714529e-06
    2. 'val' → logprob: -11.750008583068848
    3. 'Val' → logprob: -15.750008583068848
    4. 'segment' → logprob: -15.875008583068848
    5. '_VAL' → logprob: -18.25000762939453
    6. ')' → logprob: -19.25000762939453
    7. '	val' → logprob: -19.75000762939453
    8. '_v' → logprob: -19.87500762939453
    9. '_seg' → logprob: -19.87500762939453
    10. '-val' → logprob: -19.87500762939453

Token 770: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07906867563724518
    2. ')' → logprob: -2.579068660736084
    3. '                   ' → logprob: -8.704069137573242
    4. '),' → logprob: -12.204069137573242
    5. '               ' → logprob: -12.704069137573242
    6. ')
' → logprob: -13.329069137573242
    7. ' )
' → logprob: -13.579069137573242
    8. ')

' → logprob: -14.329069137573242
    9. '                       ' → logprob: -14.954069137573242
    10. '           ' → logprob: -15.204069137573242

Token 771: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007703160867094994
    2. '<|end|>' → logprob: -5.6327033042907715
    3. ',' → logprob: -6.8827033042907715
    4. 'new' → logprob: -7.1327033042907715
    5. ' new' → logprob: -7.1327033042907715
    6. '               ' → logprob: -7.6327033042907715
    7. '
' → logprob: -8.382702827453613
    8. '                    
' → logprob: -8.632702827453613
    9. '<|end|>' → logprob: -8.882702827453613
    10. '           ' → logprob: -9.132702827453613

Token 772: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.062003422528505325
    2. ' new' → logprob: -2.8120033740997314
    3. '                   ' → logprob: -10.437003135681152
    4. '               ' → logprob: -13.187003135681152
    5. '	new' → logprob: -13.437003135681152
    6. '           ' → logprob: -14.062003135681152
    7. '                    ' → logprob: -14.812003135681152
    8. '                       ' → logprob: -14.812003135681152
    9. ' ' → logprob: -15.062003135681152
    10. 'max' → logprob: -15.062003135681152

Token 773: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.011054662987589836
    2. 'max' → logprob: -4.511054515838623
    3. ' max' → logprob: -13.136054992675781
    4. '	max' → logprob: -13.636054992675781
    5. 'maxlength' → logprob: -14.136054992675781
    6. 'Max' → logprob: -14.261054992675781
    7. '(max' → logprob: -14.636054992675781
    8. '```' → logprob: -14.761054992675781
    9. '
' → logprob: -15.136054992675781
    10. '_MAX' → logprob: -15.261054992675781

Token 774: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061991218477487564
    2. '=' → logprob: -2.8119912147521973
    3. '=max' → logprob: -10.686991691589355
    4. ')' → logprob: -15.811991691589355
    5. '   ' → logprob: -15.936991691589355
    6. '                   ' → logprob: -16.06199073791504
    7. ',' → logprob: -16.18699073791504
    8. 'max' → logprob: -16.81199073791504
    9. '           ' → logprob: -16.93699073791504
    10. ' ' → logprob: -17.31199073791504

Token 775: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00020354038861114532
    2. ' max' → logprob: -8.500203132629395
    3. '(max' → logprob: -17.62520408630371
    4. '	max' → logprob: -21.87520408630371
    5. '[max' → logprob: -22.00020408630371
    6. '=max' → logprob: -22.75020408630371
    7. '   ' → logprob: -22.87520408630371
    8. ' ' → logprob: -23.00020408630371
    9. 'Max' → logprob: -23.75020408630371
    10. '.max' → logprob: -24.12520408630371

Token 776: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0009171743295155466
    2. 'max' → logprob: -7.000916957855225
    3. ' max' → logprob: -13.000917434692383
    4. '(' → logprob: -14.000917434692383
    5. '[max' → logprob: -14.000917434692383
    6. '=max' → logprob: -14.375917434692383
    7. '_max' → logprob: -15.000917434692383
    8. '	max' → logprob: -15.250917434692383
    9. ',max' → logprob: -15.750917434692383
    10. '_v' → logprob: -15.875917434692383

Token 777: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -2.081584716506768e-05
    2. '(max' → logprob: -10.875020980834961
    3. 'v' → logprob: -13.500020980834961
    4. '(' → logprob: -16.25002098083496
    5. '(v' → logprob: -16.37502098083496
    6. 'max' → logprob: -16.50002098083496
    7. 'val' → logprob: -16.50002098083496
    8. '_val' → logprob: -17.37502098083496
    9. '=max' → logprob: -18.12502098083496
    10. '_' → logprob: -18.37502098083496

Token 778: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2007883671903983e-05
    2. ' ,' → logprob: -10.875021934509277
    3. ',
' → logprob: -14.375021934509277
    4. '                   ' → logprob: -14.500021934509277
    5. 'segment' → logprob: -14.500021934509277
    6. '(segment' → logprob: -14.625021934509277
    7. ')' → logprob: -15.250021934509277
    8. '),' → logprob: -15.750021934509277
    9. '                           ' → logprob: -15.750021934509277
    10. ' segment' → logprob: -16.625022888183594

Token 779: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0024768433067947626
    2. ' segment' → logprob: -6.002476692199707
    3. '(segment' → logprob: -13.877476692199707
    4. 'seg' → logprob: -15.752476692199707
    5. '.segment' → logprob: -17.252477645874023
    6. 'sector' → logprob: -18.877477645874023
    7. 'Segment' → logprob: -18.877477645874023
    8. '   ' → logprob: -18.877477645874023
    9. ' ' → logprob: -19.002477645874023
    10. 'sequence' → logprob: -19.252477645874023

Token 780: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.00020747410599142313
    2. 'val' → logprob: -8.500207901000977
    3. 'Val' → logprob: -12.625207901000977
    4. 'v' → logprob: -15.375207901000977
    5. 'segment' → logprob: -15.750207901000977
    6. '_v' → logprob: -16.375207901000977
    7. '_str' → logprob: -16.500207901000977
    8. '_seg' → logprob: -16.875207901000977
    9. '```' → logprob: -18.375207901000977
    10. '	val' → logprob: -18.375207901000977

Token 781: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7875394821166992
    2. '                   ' → logprob: -0.7875394821166992
    3. ')' → logprob: -2.412539482116699
    4. '):
' → logprob: -8.1625394821167
    5. '               ' → logprob: -9.1625394821167
    6. '                  ' → logprob: -10.9125394821167
    7. '                       ' → logprob: -11.1625394821167
    8. ' )
' → logprob: -11.1625394821167
    9. '           ' → logprob: -11.6625394821167
    10. '                    ' → logprob: -12.1625394821167

Token 782: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.5027299822540954e-05
    2. '               ' → logprob: -10.625055313110352
    3. '
' → logprob: -10.875055313110352
    4. '                    
' → logprob: -12.750055313110352
    5. '           ' → logprob: -12.875055313110352
    6. '                       ' → logprob: -13.000055313110352
    7. '                  ' → logprob: -13.750055313110352
    8. '                    ' → logprob: -14.000055313110352
    9. ',' → logprob: -14.875055313110352
    10. '<|end|>' → logprob: -15.125055313110352

Token 783: ' #' (ID: 1069)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3838420808315277
    2. '                   ' → logprob: -1.88384211063385
    3. 'new' → logprob: -2.7588419914245605
    4. 'dp' → logprob: -3.3838419914245605
    5. 'if' → logprob: -3.7588419914245605
    6. ' diff' → logprob: -3.8838419914245605
    7. ' new' → logprob: -4.5088419914245605
    8. ' if' → logprob: -4.6338419914245605
    9. ' dp' → logprob: -6.3838419914245605
    10. ' key' → logprob: -7.0088419914245605

Token 784: ' update' (ID: 4027)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.1185128316283226
    2. ' diff' → logprob: -2.4935128688812256
    3. 'new' → logprob: -4.8685126304626465
    4. 'if' → logprob: -5.2435126304626465
    5. '                   ' → logprob: -5.4935126304626465
    6. ' new' → logprob: -5.7435126304626465
    7. 'min' → logprob: -5.9935126304626465
    8. ' if' → logprob: -6.7435126304626465
    9. '                       ' → logprob: -6.7435126304626465
    10. 'dp' → logprob: -6.9935126304626465

Token 785: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0066169500350952
    2. 'if' → logprob: -1.3816169500350952
    3. ' if' → logprob: -1.8816169500350952
    4. ' dp' → logprob: -2.2566170692443848
    5. '                   ' → logprob: -2.7566170692443848
    6. 'diff' → logprob: -3.1316170692443848
    7. 'state' → logprob: -5.006617069244385
    8. ' diff' → logprob: -6.006617069244385
    9. ' key' → logprob: -6.256617069244385
    10. ' new' → logprob: -6.631617069244385

Token 786: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011856284982059151
    2. '[j' → logprob: -10.250118255615234
    3. '                   ' → logprob: -10.500118255615234
    4. 'i' → logprob: -11.125118255615234
    5. '           ' → logprob: -11.125118255615234
    6. '_i' → logprob: -11.500118255615234
    7. '               ' → logprob: -11.875118255615234
    8. ' [' → logprob: -13.125118255615234
    9. '                       ' → logprob: -13.750118255615234
    10. '_entry' → logprob: -13.750118255615234

Token 787: ']
' (ID: 1592)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.23917663097381592
    2. '[(' → logprob: -2.2391767501831055
    3. '][' → logprob: -2.6141767501831055
    4. '.setdefault' → logprob: -3.7391767501831055
    5. ')[' → logprob: -6.2391767501831055
    6. '[' → logprob: -6.4891767501831055
    7. 'new' → logprob: -6.8641767501831055
    8. '
' → logprob: -6.8641767501831055
    9. '                   ' → logprob: -7.2391767501831055
    10. '].' → logprob: -7.6141767501831055

Token 788: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3208410441875458
    2. '[new' → logprob: -1.5708410739898682
    3. '[(' → logprob: -2.945841073989868
    4. '[' → logprob: -5.195840835571289
    5. '.setdefault' → logprob: -5.945840835571289
    6. '
' → logprob: -6.570840835571289
    7. 'new' → logprob: -7.070840835571289
    8. ' =' → logprob: -7.195840835571289
    9. '[next' → logprob: -7.445840835571289
    10. '               ' → logprob: -7.820840835571289

Token 789: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.251258909702301
    2. 'if' (adapté à ' if') → logprob: -2.0012588500976562
    3. '                   ' → logprob: -3.1262588500976562
    4. 'diff' → logprob: -3.8762588500976562
    5. ' dp' → logprob: -5.001258850097656
    6. 'key' → logprob: -5.251258850097656
    7. 'state' → logprob: -5.376258850097656
    8. ' if' → logprob: -5.876258850097656
    9. 'current' → logprob: -6.626258850097656
    10. 'new' → logprob: -7.751258850097656

Token 790: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.016305554658174515
    2. ' (' → logprob: -4.141305446624756
    3. 'new' → logprob: -8.766305923461914
    4. '   ' → logprob: -9.766305923461914
    5. ' new' → logprob: -10.891305923461914
    6. '(min' → logprob: -11.641305923461914
    7. '(max' → logprob: -12.016305923461914
    8. '                   ' → logprob: -12.016305923461914
    9. '(not' → logprob: -12.016305923461914
    10. '(' → logprob: -12.891305923461914

Token 791: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -6.718606891809031e-05
    2. ' new' → logprob: -10.000066757202148
    3. '(new' → logprob: -10.750066757202148
    4. '   ' → logprob: -15.750066757202148
    5. ')new' → logprob: -16.00006675720215
    6. '                   ' → logprob: -17.62506675720215
    7. '	new' → logprob: -17.75006675720215
    8. '[new' → logprob: -18.00006675720215
    9. ' (' → logprob: -18.75006675720215
    10. '                       ' → logprob: -18.87506675720215

Token 792: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -4.723352049040841e-06
    2. 'min' → logprob: -12.375004768371582
    3. '_new' → logprob: -16.000003814697266
    4. '_max' → logprob: -16.000003814697266
    5. '(min' → logprob: -16.125003814697266
    6. '_v' → logprob: -17.000003814697266
    7. '_m' → logprob: -17.500003814697266
    8. 'v' → logprob: -18.375003814697266
    9. '_MIN' → logprob: -18.375003814697266
    10. 's' → logprob: -19.125003814697266

Token 793: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009390931227244437
    2. ',new' → logprob: -7.000938892364502
    3. ' ,' → logprob: -10.62593936920166
    4. ',
' → logprob: -13.37593936920166
    5. '                   ' → logprob: -14.62593936920166
    6. ',(' → logprob: -15.62593936920166
    7. ',max' → logprob: -15.75093936920166
    8. ',min' → logprob: -16.000938415527344
    9. 'new' → logprob: -16.125938415527344
    10. ',None' → logprob: -16.250938415527344

Token 794: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0013260759878903627
    2. ' new' → logprob: -6.626326084136963
    3. '                   ' → logprob: -17.501325607299805
    4. '
' → logprob: -17.501325607299805
    5. 'New' → logprob: -17.876325607299805
    6. ')new' → logprob: -18.376325607299805
    7. '
' → logprob: -18.501325607299805
    8. '_new' → logprob: -18.501325607299805
    9. '	new' → logprob: -18.626325607299805
    10. '                    ' → logprob: -18.876325607299805

Token 795: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0011730826226994395
    2. 'max' → logprob: -6.75117301940918
    3. 'Max' → logprob: -13.87617301940918
    4. '_new' → logprob: -13.87617301940918
    5. 'new' → logprob: -14.62617301940918
    6. ' max' → logprob: -15.25117301940918
    7. '_min' → logprob: -16.12617301940918
    8. ')' → logprob: -16.50117301940918
    9. 'v' → logprob: -17.25117301940918
    10. '_MAX' → logprob: -17.62617301940918

Token 796: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009298062650486827
    2. ' )' → logprob: -7.375929832458496
    3. ' not' → logprob: -8.250929832458496
    4. 'not' → logprob: -10.250929832458496
    5. 'in' → logprob: -13.375929832458496
    6. ']' → logprob: -13.875929832458496
    7. '   ' → logprob: -14.000929832458496
    8. ' in' → logprob: -14.375929832458496
    9. '                   ' → logprob: -14.375929832458496
    10. ')
' → logprob: -15.125929832458496

Token 797: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0796397477388382
    2. 'not' → logprob: -2.5796396732330322
    3. ' in' → logprob: -7.829639911651611
    4. 'in' → logprob: -7.954639911651611
    5. '	not' → logprob: -14.454639434814453
    6. ')' → logprob: -14.954639434814453
    7. ':not' → logprob: -17.829639434814453
    8. '_not' → logprob: -17.829639434814453
    9. ']' → logprob: -18.204639434814453
    10. '
' → logprob: -18.454639434814453

Token 798: ' in' (ID: 306)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8414590358734131
    2. 'in' → logprob: -1.091459035873413
    3. ' in' → logprob: -1.716459035873413
    4. '(dp' → logprob: -3.466459035873413
    5. ' dp' → logprob: -3.841459035873413
    6. '	dp' → logprob: -8.216459274291992
    7. '_dp' → logprob: -8.466459274291992
    8. '[' → logprob: -8.466459274291992
    9. '                   ' → logprob: -10.716459274291992
    10. '           ' → logprob: -11.216459274291992

Token 799: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00033546582562848926
    2. ' dp' → logprob: -8.000335693359375
    3. '	dp' → logprob: -17.000335693359375
    4. '(dp' → logprob: -18.125335693359375
    5. '_dp' → logprob: -18.500335693359375
    6. '
' → logprob: -21.375335693359375
    7. '.dp' → logprob: -22.125335693359375
    8. 'd' → logprob: -22.375335693359375
    9. 'DP' → logprob: -22.750335693359375
    10. '           ' → logprob: -22.875335693359375

Token 800: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'dp' → logprob: -16.25
    3. 'i' → logprob: -16.75
    4. '
' → logprob: -16.875
    5. '```' → logprob: -17.25
    6. '[j' → logprob: -17.625
    7. '[' → logprob: -18.375
    8. '[
' → logprob: -18.375
    9. '\[' → logprob: -20.75
    10. '`' → logprob: -21.0

Token 801: ']:
' (ID: 22152)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.9035682082176208
    2. ']:
' → logprob: -1.2785682678222656
    3. ']' → logprob: -1.9035682678222656
    4. ':
' → logprob: -2.7785682678222656
    5. '                   ' → logprob: -2.9035682678222656
    6. ' or' → logprob: -4.153568267822266
    7. '):
' → logprob: -4.153568267822266
    8. ']:' → logprob: -4.903568267822266
    9. '                           ' → logprob: -5.278568267822266
    10. ':' → logprob: -5.528568267822266

Token 802: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3597259819507599
    2. ' or' → logprob: -1.4847259521484375
    3. ' dp' → logprob: -3.2347259521484375
    4. 'dp' → logprob: -3.3597259521484375
    5. '                   ' → logprob: -6.9847259521484375
    6. 'or' → logprob: -8.109725952148438
    7. '(dp' → logprob: -8.984725952148438
    8. '```' → logprob: -10.734725952148438
    9. '               ' → logprob: -10.859725952148438
    10. '	dp' → logprob: -10.984725952148438

Token 803: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.03806892782449722
    2. ' dp' → logprob: -3.288069009780884
    3. '                       ' → logprob: -10.538068771362305
    4. '                   ' → logprob: -15.038068771362305
    5. '                           ' → logprob: -15.038068771362305
    6. '	dp' → logprob: -15.288068771362305
    7. '(dp' → logprob: -16.663068771362305
    8. '_dp' → logprob: -17.913068771362305
    9. '   ' → logprob: -18.038068771362305
    10. '               ' → logprob: -18.663068771362305

Token 804: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -15.750000953674316
    3. '           ' → logprob: -16.0
    4. '
' → logprob: -16.0
    5. '```' → logprob: -16.0
    6. '                   ' → logprob: -16.125
    7. 'i' → logprob: -16.25
    8. '[
' → logprob: -18.625
    9. '               ' → logprob: -18.625
    10. '       ' → logprob: -18.75

Token 805: '][' (ID: 2696)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.1251428872346878
    2. '[i' → logprob: -2.500142812728882
    3. '][' → logprob: -3.375142812728882
    4. '(i' → logprob: -7.125143051147461
    5. ']' → logprob: -8.375143051147461
    6. '[new' → logprob: -9.750143051147461
    7. '[' → logprob: -10.000143051147461
    8. ']=(' → logprob: -10.125143051147461
    9. '   ' → logprob: -11.000143051147461
    10. ' (' → logprob: -11.125143051147461

Token 806: '(' (ID: 7)
  Prédit: '(True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(True' → logprob: -0.28429752588272095
    2. '(new' → logprob: -1.7842974662780762
    3. 'True' → logprob: -2.534297466278076
    4. ' (' → logprob: -8.784297943115234
    5. ' True' → logprob: -10.034297943115234
    6. '[new' → logprob: -11.409297943115234
    7. '
' → logprob: -12.534297943115234
    8. 'new' → logprob: -12.659297943115234
    9. '(New' → logprob: -12.784297943115234
    10. '(' → logprob: -13.159297943115234

Token 807: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -4.961759259458631e-06
    2. ' new' → logprob: -12.250004768371582
    3. '
' → logprob: -17.2500057220459
    4. '	new' → logprob: -17.7500057220459
    5. '   ' → logprob: -18.3750057220459
    6. '_new' → logprob: -18.7500057220459
    7. ')new' → logprob: -19.0000057220459
    8. '(new' → logprob: -19.5000057220459
    9. 'New' → logprob: -19.6250057220459
    10. '[new' → logprob: -19.7500057220459

Token 808: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -2.2127087504486553e-05
    2. 'min' → logprob: -10.875021934509277
    3. '_val' → logprob: -12.875021934509277
    4. 'Min' → logprob: -15.625021934509277
    5. '_max' → logprob: -15.875021934509277
    6. '_MIN' → logprob: -16.375022888183594
    7. '(min' → logprob: -17.000022888183594
    8. '-min' → logprob: -17.500022888183594
    9. '	min' → logprob: -17.625022888183594
    10. 'val' → logprob: -17.750022888183594

Token 809: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002482553943991661
    2. ',new' → logprob: -6.0024824142456055
    3. ' ,' → logprob: -12.252482414245605
    4. ',
' → logprob: -14.002482414245605
    5. 'new' → logprob: -14.377482414245605
    6. ',max' → logprob: -14.877482414245605
    7. ',true' → logprob: -17.377483367919922
    8. ',current' → logprob: -17.627483367919922
    9. ',next' → logprob: -17.627483367919922
    10. ',user' → logprob: -17.752483367919922

Token 810: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0006268949946388602
    2. ' new' → logprob: -7.375627040863037
    3. 'New' → logprob: -17.125627517700195
    4. '	new' → logprob: -17.125627517700195
    5. ')new' → logprob: -17.500627517700195
    6. '                       ' → logprob: -17.875627517700195
    7. '[new' → logprob: -17.875627517700195
    8. '_new' → logprob: -18.000627517700195
    9. '                   ' → logprob: -18.000627517700195
    10. 'max' → logprob: -18.125627517700195

Token 811: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.1607816368341446
    2. 'max' → logprob: -1.9107816219329834
    3. 'ax' → logprob: -7.6607818603515625
    4. 'Max' → logprob: -9.535781860351562
    5. 'v' → logprob: -12.035781860351562
    6. 'val' → logprob: -13.660781860351562
    7. ' max' → logprob: -13.785781860351562
    8. ',max' → logprob: -14.160781860351562
    9. 'x' → logprob: -14.285781860351562
    10. 'i' → logprob: -14.285781860351562

Token 812: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015512866666540504
    2. ']=' → logprob: -6.501551151275635
    3. ')]' → logprob: -10.001551628112793
    4. ' ]' → logprob: -13.126551628112793
    5. ')' → logprob: -13.501551628112793
    6. ']]' → logprob: -17.001550674438477
    7. '])' → logprob: -17.376550674438477
    8. '`]' → logprob: -18.001550674438477
    9. '       ' → logprob: -18.251550674438477
    10. ')=' → logprob: -18.251550674438477

Token 813: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010463856160640717
    2. ' =' → logprob: -6.876046180725098
    3. '=True' → logprob: -11.501046180725098
    4. ']=' → logprob: -13.001046180725098
    5. '                       ' → logprob: -14.501046180725098
    6. ']' → logprob: -14.626046180725098
    7. '                           ' → logprob: -16.001047134399414
    8. '=
' → logprob: -17.126047134399414
    9. '[' → logprob: -17.251047134399414
    10. '                        ' → logprob: -18.001047134399414

Token 814: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.8624639324116288e-06
    2. ' True' → logprob: -13.250001907348633
    3. '   ' → logprob: -21.375001907348633
    4. '(True' → logprob: -21.625001907348633
    5. '1' → logprob: -22.625001907348633
    6. '           ' → logprob: -23.000001907348633
    7. 'true' → logprob: -23.000001907348633
    8. '=True' → logprob: -23.500001907348633
    9. '       ' → logprob: -24.500001907348633
    10. 'False' → logprob: -25.250001907348633

Token 815: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 816: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45158612728118896
    2. '
' → logprob: -1.076586127281189
    3. '           ' → logprob: -4.4515862464904785
    4. '

' → logprob: -5.4515862464904785
    5. 'if' → logprob: -5.4515862464904785
    6. '        
' → logprob: -6.8265862464904785
    7. ' if' → logprob: -7.3265862464904785
    8. '```' → logprob: -8.70158576965332
    9. '               ' → logprob: -8.95158576965332
    10. 'import' → logprob: -9.82658576965332

Token 817: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.48873671889305115
    2. '       ' → logprob: -1.8637367486953735
    3. 'result' → logprob: -1.9887367486953735
    4. 'if' → logprob: -3.363736629486084
    5. 'diff' → logprob: -3.738736629486084
    6. '#' (adapté à ' #') → logprob: -4.613736629486084
    7. 'best' → logprob: -5.238736629486084
    8. 'possible' → logprob: -5.363736629486084
    9. 'valid' → logprob: -5.488736629486084
    10. 'results' → logprob: -5.488736629486084

Token 818: ' find' (ID: 1646)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.23103216290473938
    2. 'results' → logprob: -2.356032133102417
    3. 'result' → logprob: -2.606032133102417
    4. '#' → logprob: -4.106032371520996
    5. 'res' → logprob: -4.231032371520996
    6. '       ' → logprob: -5.481032371520996
    7. 'possible' → logprob: -7.481032371520996
    8. 'ans' → logprob: -7.606032371520996
    9. 'valid' → logprob: -7.856032371520996
    10. 'best' → logprob: -8.106032371520996

Token 819: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0039055191446095705
    2. ' min' → logprob: -5.878905296325684
    3. 'result' → logprob: -7.503905296325684
    4. 'diff' → logprob: -8.753905296325684
    5. '       ' → logprob: -9.003905296325684
    6. '   ' → logprob: -9.253905296325684
    7. 'res' → logprob: -9.878905296325684
    8. 'minimal' → logprob: -10.003905296325684
    9. '           ' → logprob: -11.253905296325684
    10. '
' → logprob: -11.378905296325684

Token 820: ' difference' (ID: 9809)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.03927142173051834
    2. 'min' → logprob: -3.289271354675293
    3. 'difference' → logprob: -7.789271354675293
    4. '_diff' → logprob: -8.164271354675293
    5. 'result' → logprob: -8.414271354675293
    6. ' diff' → logprob: -8.914271354675293
    7. 'res' → logprob: -9.289271354675293
    8. ' min' → logprob: -10.414271354675293
    9. '(min' → logprob: -11.789271354675293
    10. '```' → logprob: -11.914271354675293

Token 821: ' with' (ID: 483)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.48534634709358215
    2. 'result' → logprob: -1.4853463172912598
    3. '       ' → logprob: -2.8603463172912598
    4. 'return' → logprob: -3.2353463172912598
    5. 'diff' → logprob: -3.6103463172912598
    6. 'ans' → logprob: -4.48534631729126
    7. 'res' → logprob: -4.73534631729126
    8. 'if' → logprob: -5.48534631729126
    9. '=' → logprob: -6.23534631729126
    10. ' min' → logprob: -6.48534631729126

Token 822: ' at' (ID: 540)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3958361148834229
    2. 'any' → logprob: -1.3958361148834229
    3. 'len' → logprob: -1.7708361148834229
    4. 'self' → logprob: -2.270836114883423
    5. 'at' → logprob: -2.770836114883423
    6. ' at' → logprob: -2.770836114883423
    7. 'min' → logprob: -3.395836114883423
    8. 'length' → logprob: -3.895836114883423
    9. 'key' → logprob: -4.395835876464844
    10. 'dp' → logprob: -4.895835876464844

Token 823: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.00015598179015796632
    2. ' least' → logprob: -9.37515640258789
    3. 'len' → logprob: -10.00015640258789
    4. 'east' → logprob: -11.62515640258789
    5. 'at' → logprob: -12.62515640258789
    6. 'Least' → logprob: -12.62515640258789
    7. 'length' → logprob: -12.75015640258789
    8. 'last' → logprob: -13.12515640258789
    9. 'lest' → logprob: -13.50015640258789
    10. 'le' → logprob: -13.62515640258789

Token 824: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.006426755804568529
    2. '2' → logprob: -5.631426811218262
    3. ' two' → logprob: -5.881426811218262
    4. 'one' → logprob: -10.881426811218262
    5. '   ' → logprob: -12.506426811218262
    6. '1' → logprob: -12.756426811218262
    7. '_two' → logprob: -12.756426811218262
    8. '
' → logprob: -13.256426811218262
    9. 'Two' → logprob: -13.631426811218262
    10. 'len' → logprob: -15.756426811218262

Token 825: ' parts' (ID: 7881)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.5719932317733765
    2. 'parts' → logprob: -2.196993350982666
    3. 'for' → logprob: -2.446993350982666
    4. ' for' → logprob: -2.571993350982666
    5. ' segments' → logprob: -2.946993350982666
    6. 'keys' → logprob: -3.071993350982666
    7. 'segment' → logprob: -3.696993350982666
    8. ' parts' → logprob: -4.571993350982666
    9. ' keys' → logprob: -4.946993350982666
    10. 'part' → logprob: -5.571993350982666

Token 826: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3286992609500885
    2. 'min' → logprob: -2.3286993503570557
    3. '       ' → logprob: -2.7036993503570557
    4. ' result' → logprob: -3.0786993503570557
    5. 'res' → logprob: -4.078699111938477
    6. 'diff' → logprob: -4.203699111938477
    7. ' min' → logprob: -4.453699111938477
    8. 'results' → logprob: -4.703699111938477
    9. 'ans' → logprob: -5.328699111938477
    10. ' for' → logprob: -6.078699111938477

Token 827: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4404795467853546
    2. 'min' → logprob: -1.3154795169830322
    3. 'result' → logprob: -3.1904795169830322
    4. 'diff' → logprob: -3.8154795169830322
    5. '   ' → logprob: -4.815479755401611
    6. ' min' → logprob: -5.065479755401611
    7. '
' → logprob: -5.690479755401611
    8. 'res' → logprob: -6.565479755401611
    9. 'ans' → logprob: -6.815479755401611
    10. ' result' → logprob: -6.940479755401611

Token 828: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.006001552101224661
    2. 'result' → logprob: -5.5060014724731445
    3. 'res' → logprob: -7.3810014724731445
    4. '       ' → logprob: -7.3810014724731445
    5. ' min' → logprob: -7.8810014724731445
    6. '
' → logprob: -9.381001472473145
    7. '   ' → logprob: -9.381001472473145
    8. 'ans' → logprob: -9.881001472473145
    9. 'results' → logprob: -11.006001472473145
    10. 'minimal' → logprob: -11.006001472473145

Token 829: ' That' (ID: 4569)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.02593098022043705
    2. 'result' → logprob: -3.900930881500244
    3. 'res' → logprob: -6.025930881500244
    4. ' min' → logprob: -6.150930881500244
    5. 'results' → logprob: -8.525931358337402
    6. '       ' → logprob: -8.525931358337402
    7. 'ans' → logprob: -8.775931358337402
    8. 'diff' → logprob: -9.525931358337402
    9. 'answer' → logprob: -9.900931358337402
    10. 'minimal' → logprob: -10.150931358337402

Token 830: ' means' (ID: 4748)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.4304218292236328
    2. ' means' → logprob: -1.9304218292236328
    3. ' =' → logprob: -2.055421829223633
    4. ' for' → logprob: -2.430421829223633
    5. 'for' → logprob: -2.680421829223633
    6. '       ' → logprob: -2.805421829223633
    7. 'means' → logprob: -2.805421829223633
    8. ' at' → logprob: -3.430421829223633
    9. '#' → logprob: -3.430421829223633
    10. 'is' → logprob: -3.680421829223633

Token 831: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.398089051246643
    2. 'result' → logprob: -1.523089051246643
    3. '       ' → logprob: -1.648089051246643
    4. 'min' → logprob: -2.3980889320373535
    5. 'minimal' → logprob: -3.1480889320373535
    6. 'res' → logprob: -3.2730889320373535
    7. ' for' → logprob: -3.3980889320373535
    8. 'results' → logprob: -3.5230889320373535
    9. 'possible' → logprob: -4.1480889320373535
    10. ' minimal' → logprob: -4.1480889320373535

Token 832: '[length' (ID: 130091)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.01528328750282526
    2. '[-' → logprob: -4.765283107757568
    3. 'self' → logprob: -5.015283107757568
    4. '
' → logprob: -11.890283584594727
    5. '[len' → logprob: -14.390283584594727
    6. '[
' → logprob: -14.390283584594727
    7. ' self' → logprob: -14.890283584594727
    8. 'final' → logprob: -15.265283584594727
    9. 'for' → logprob: -15.390283584594727
    10. '[' → logprob: -15.390283584594727

Token 833: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8937504291534424
    2. '][' → logprob: -1.0187504291534424
    3. '[self' → logprob: -2.5187504291534424
    4. '[' → logprob: -2.8937504291534424
    5. '[len' → logprob: -4.018750190734863
    6. '].' → logprob: -4.518750190734863
    7. '[length' → logprob: -4.643750190734863
    8. '[-' → logprob: -4.643750190734863
    9. '][-' → logprob: -5.018750190734863
    10. '[:-' → logprob: -5.518750190734863

Token 834: ' with' (ID: 483)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1265275478363037
    2. ' =' → logprob: -1.1265275478363037
    3. 'keys' → logprob: -3.5015275478363037
    4. 'states' → logprob: -3.5015275478363037
    5. 'pop' → logprob: -3.6265275478363037
    6. 'if' → logprob: -3.7515275478363037
    7. '.keys' → logprob: -3.8765275478363037
    8. 'for' → logprob: -4.001527786254883
    9. '_states' → logprob: -4.001527786254883
    10. 'items' → logprob: -4.126527786254883

Token 835: ' min' (ID: 1349)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.6147607564926147
    2. ' at' → logprob: -2.3647608757019043
    3. 'len' → logprob: -2.6147608757019043
    4. 'min' → logprob: -2.9897608757019043
    5. ' any' → logprob: -2.9897608757019043
    6. 'keys' → logprob: -3.6147608757019043
    7. 'more' → logprob: -3.7397608757019043
    8. 'segments' → logprob: -3.7397608757019043
    9. 'at' → logprob: -3.8647608757019043
    10. ' keys' → logprob: -4.114760875701904

Token 836: '_val' (ID: 13694)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.286281019449234
    2. '_val' → logprob: -2.161281108856201
    3. '(dp' → logprob: -3.161281108856201
    4. '_' → logprob: -3.786281108856201
    5. '_dp' → logprob: -4.661281108856201
    6. 'dp' → logprob: -4.786281108856201
    7. '_segments' → logprob: -5.161281108856201
    8. '_,' → logprob: -5.286281108856201
    9. '_diff' → logprob: -5.536281108856201
    10. ',' → logprob: -5.661281108856201

Token 837: ' !=' (ID: 1666)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1405248641967773
    2. 's' → logprob: -1.6405248641967773
    3. ' =' → logprob: -2.7655248641967773
    4. ' !=' → logprob: -2.7655248641967773
    5. 'for' → logprob: -2.8905248641967773
    6. '!=' → logprob: -2.8905248641967773
    7. '=' → logprob: -3.1405248641967773
    8. 'keys' → logprob: -3.1405248641967773
    9. '   ' → logprob: -4.265524864196777
    10. '       ' → logprob: -4.390524864196777

Token 838: ' inf' (ID: 5603)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00017755765293259174
    2. 'max' → logprob: -8.750177383422852
    3. 'dp' → logprob: -11.125177383422852
    4. ' float' → logprob: -12.625177383422852
    5. 'new' → logprob: -14.875177383422852
    6. '
' → logprob: -15.500177383422852
    7. 'segment' → logprob: -15.875177383422852
    8. '   ' → logprob: -16.00017738342285
    9. '(float' → logprob: -16.00017738342285
    10. '=float' → logprob: -17.87517738342285

Token 839: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3310091197490692
    2. '       ' → logprob: -1.9560091495513916
    3. ',' → logprob: -3.2060091495513916
    4. 'and' → logprob: -3.4560091495513916
    5. ' =' → logprob: -3.7060091495513916
    6. '
' → logprob: -4.4560089111328125
    7. ' for' → logprob: -4.8310089111328125
    8. 'for' → logprob: -5.4560089111328125
    9. '   ' → logprob: -5.8310089111328125
    10. '=' → logprob: -5.9560089111328125

Token 840: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.003359866328537464
    2. ' max' → logprob: -5.878359794616699
    3. '(max' → logprob: -8.1283597946167
    4. 'min' → logprob: -8.7533597946167
    5. 'len' → logprob: -10.6283597946167
    6. 'float' → logprob: -11.1283597946167
    7. 'dp' → logprob: -11.1283597946167
    8. '(' → logprob: -11.6283597946167
    9. '
' → logprob: -11.7533597946167
    10. 'any' → logprob: -11.7533597946167

Token 841: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.252300888299942
    2. '_v' → logprob: -1.5023008584976196
    3. '```' → logprob: -9.502301216125488
    4. '!=' → logprob: -9.627301216125488
    5. 'Val' → logprob: -9.752301216125488
    6. '>' → logprob: -10.127301216125488
    7. '}_' → logprob: -10.752301216125488
    8. '\' → logprob: -11.127301216125488
    9. ''_' → logprob: -11.377301216125488
    10. 'val' → logprob: -11.627301216125488

Token 842: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.08264186233282089
    2. ' !=' → logprob: -2.582641839981079
    3. '!=-' → logprob: -6.582642078399658
    4. ']!=' → logprob: -7.582642078399658
    5. ')!=' → logprob: -7.707642078399658
    6. '!' → logprob: -8.0826416015625
    7. 'float' → logprob: -8.2076416015625
    8. '!=(' → logprob: -8.9576416015625
    9. '-' → logprob: -9.2076416015625
    10. ')' → logprob: -9.2076416015625

Token 843: ' -' (ID: 533)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.4092124402523041
    2. '-inf' → logprob: -1.4092124700546265
    3. '-f' → logprob: -2.409212350845337
    4. ' float' → logprob: -6.659212589263916
    5. ' -' → logprob: -8.159212112426758
    6. 'inf' → logprob: -11.284212112426758
    7. '-' → logprob: -11.534212112426758
    8. '(float' → logprob: -12.159212112426758
    9. '=float' → logprob: -12.659212112426758
    10. '-fl' → logprob: -13.034212112426758

Token 844: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.25193095207214355
    2. 'float' → logprob: -1.5019309520721436
    3. 'int' → logprob: -14.251931190490723
    4. '1' → logprob: -15.001931190490723
    5. '-inf' → logprob: -15.376931190490723
    6. '_inf' → logprob: -15.876931190490723
    7. ' float' → logprob: -15.876931190490723
    8. '
' → logprob: -16.001930236816406
    9. 'import' → logprob: -16.251930236816406
    10. ' inf' → logprob: -16.751930236816406

Token 845: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05312353000044823
    2. 'min' → logprob: -3.8031234741210938
    3. 'diff' → logprob: -4.053123474121094
    4. '
' → logprob: -5.053123474121094
    5. 'result' → logprob: -5.428123474121094
    6. '   ' → logprob: -8.428123474121094
    7. 'possible' → logprob: -8.928123474121094
    8. 'dif' → logprob: -8.928123474121094
    9. '        
' → logprob: -9.178123474121094
    10. 'ans' → logprob: -9.178123474121094

Token 846: ' segments' (ID: 33749)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6345329284667969
    2. 'any' → logprob: -1.8845329284667969
    3. 'min' → logprob: -2.259532928466797
    4. '(len' → logprob: -2.259532928466797
    5. '(min' → logprob: -2.884532928466797
    6. '(any' → logprob: -3.759532928466797
    7. 'length' → logprob: -5.009532928466797
    8. 'max' → logprob: -5.884532928466797
    9. '(dp' → logprob: -6.134532928466797
    10. '(self' → logprob: -6.134532928466797

Token 847: ' count' (ID: 3605)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.731268048286438
    2. '_len' → logprob: -2.1062679290771484
    3. '>' → logprob: -2.2312679290771484
    4. ' with' → logprob: -2.3562679290771484
    5. ' =' → logprob: -2.7312679290771484
    6. 'with' → logprob: -2.8562679290771484
    7. '.keys' → logprob: -3.1062679290771484
    8. 'count' → logprob: -3.1062679290771484
    9. '_count' → logprob: -3.2312679290771484
    10. '=' → logprob: -3.2312679290771484

Token 848: ' >' (ID: 1424)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8568267822265625
    2. ' =' → logprob: -1.4818267822265625
    3. '
' → logprob: -1.4818267822265625
    4. '=' → logprob: -3.2318267822265625
    5. ',' → logprob: -4.2318267822265625
    6. ' is' → logprob: -4.2318267822265625
    7. '        
' → logprob: -5.1068267822265625
    8. ':
' → logprob: -5.2318267822265625
    9. ' and' → logprob: -5.3568267822265625
    10. ' if' → logprob: -5.6068267822265625

Token 849: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017112065688706934
    2. ' ' → logprob: -8.750170707702637
    3. '=' → logprob: -11.500170707702637
    4. '0' → logprob: -13.750170707702637
    5. '
' → logprob: -14.375170707702637
    6. '>' → logprob: -15.500170707702637
    7. '   ' → logprob: -15.750170707702637
    8. '```' → logprob: -16.125171661376953
    9. ' ' → logprob: -16.250171661376953
    10. '１' → logprob: -16.500171661376953

Token 850: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -14.000001907348633
    3. '=' → logprob: -14.375001907348633
    4. '0' → logprob: -15.000001907348633
    5. '
' → logprob: -17.250001907348633
    6. '１' → logprob: -17.500001907348633
    7. '>' → logprob: -18.250001907348633
    8. '```' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.500001907348633
    10. '2' → logprob: -19.625001907348633

Token 851: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0597902350127697
    2. '
' → logprob: -2.9347901344299316
    3. 'diff' → logprob: -5.934790134429932
    4. 'result' → logprob: -7.059790134429932
    5. 'min' → logprob: -8.05979061126709
    6. '        
' → logprob: -8.05979061126709
    7. '   ' → logprob: -8.68479061126709
    8. ',' → logprob: -8.68479061126709
    9. 'possible' → logprob: -9.43479061126709
    10. ' result' → logprob: -9.68479061126709

Token 852: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04731110855937004
    2. '
' → logprob: -3.9223110675811768
    3. 'diff' → logprob: -3.9223110675811768
    4. 'min' → logprob: -5.797311305999756
    5. 'result' → logprob: -6.797311305999756
    6. '   ' → logprob: -7.172311305999756
    7. '        
' → logprob: -7.922311305999756
    8. ' min' → logprob: -8.047310829162598
    9. 'possible' → logprob: -8.297310829162598
    10. 'dif' → logprob: -8.672310829162598

Token 853: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4619837701320648
    2. ' min' → logprob: -1.7119837999343872
    3. '       ' → logprob: -1.8369837999343872
    4. 'result' → logprob: -4.336983680725098
    5. '
' → logprob: -5.086983680725098
    6. 'diff' → logprob: -5.586983680725098
    7. ' result' → logprob: -5.836983680725098
    8. '   ' → logprob: -6.586983680725098
    9. 'res' → logprob: -7.086983680725098
    10. 'dif' → logprob: -7.836983680725098

Token 854: ' Our' (ID: 5339)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2559658885002136
    2. 'min' → logprob: -1.6309659481048584
    3. 'result' → logprob: -4.005965709686279
    4. ' min' → logprob: -5.380965709686279
    5. 'diff' → logprob: -6.005965709686279
    6. 'res' → logprob: -6.380965709686279
    7. '   ' → logprob: -6.630965709686279
    8. 'best' → logprob: -7.880965709686279
    9. 'possible' → logprob: -7.880965709686279
    10. ' result' → logprob: -8.005966186523438

Token 855: ' dp' (ID: 21546)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6119189262390137
    2. 'code' → logprob: -1.6119189262390137
    3. ' code' → logprob: -1.9869189262390137
    4. 'for' → logprob: -2.1119189262390137
    5. ' for' → logprob: -3.2369189262390137
    6. 'current' → logprob: -3.3619189262390137
    7. 'final' → logprob: -3.6119189262390137
    8. 'length' → logprob: -3.8619189262390137
    9. 'answer' → logprob: -4.111918926239014
    10. 'return' → logprob: -4.111918926239014

Token 856: ' does' (ID: 2226)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.4554449319839478
    2. '_count' → logprob: -1.7054449319839478
    3. ' =' → logprob: -1.8304449319839478
    4. '_counts' → logprob: -2.205444812774658
    5. '_length' → logprob: -3.455444812774658
    6. 'count' → logprob: -3.580444812774658
    7. '_lengths' → logprob: -3.830444812774658
    8. 'length' → logprob: -3.955444812774658
    9. '_state' → logprob: -4.080444812774658
    10. 'states' → logprob: -4.080444812774658

Token 857: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10072750598192215
    2. ' not' → logprob: -2.3507275581359863
    3. 'n't' → logprob: -7.725727558135986
    4. '_not' → logprob: -9.475727081298828
    5. '#' → logprob: -13.850727081298828
    6. 'have' → logprob: -14.850727081298828
    7. '   ' → logprob: -14.850727081298828
    8. 'continue' → logprob: -15.225727081298828
    9. '
' → logprob: -15.350727081298828
    10. '```' → logprob: -15.600727081298828

Token 858: ' track' (ID: 5290)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.04151006415486336
    2. 'track' → logprob: -3.7915101051330566
    3. ' store' → logprob: -4.916510105133057
    4. 'keep' → logprob: -5.041510105133057
    5. ' track' → logprob: -6.041510105133057
    6. 'count' → logprob: -6.541510105133057
    7. 'have' → logprob: -8.541509628295898
    8. ' keep' → logprob: -10.041509628295898
    9. 'record' → logprob: -10.041509628295898
    10. 'maint' → logprob: -10.416509628295898

Token 859: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.4636926054954529
    2. 'segments' → logprob: -1.0886926651000977
    3. ' segment' → logprob: -4.213692665100098
    4. 'number' → logprob: -5.213692665100098
    5. 'count' → logprob: -5.338692665100098
    6. 'counts' → logprob: -5.588692665100098
    7. ' segments' → logprob: -6.088692665100098
    8. 'the' → logprob: -6.213692665100098
    9. ' the' → logprob: -7.588692665100098
    10. ' number' → logprob: -7.963692665100098

Token 860: ' counts' (ID: 28991)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6360883712768555
    2. 'counts' → logprob: -1.1360883712768555
    3. ' counts' → logprob: -3.1360883712768555
    4. '_counts' → logprob: -3.2610883712768555
    5. '_count' → logprob: -3.5110883712768555
    6. 's' → logprob: -3.6360883712768555
    7. ' count' → logprob: -4.7610883712768555
    8. 'length' → logprob: -6.2610883712768555
    9. '_lengths' → logprob: -7.8860883712768555
    10. ' lengths' → logprob: -8.761088371276855

Token 861: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10351789742708206
    2. '       ' → logprob: -2.353518009185791
    3. '        
' → logprob: -5.978518009185791
    4. '

' → logprob: -7.853518009185791
    5. ',' → logprob: -9.103517532348633
    6. '<|end|>' → logprob: -9.228517532348633
    7. '
' → logprob: -9.853517532348633
    8. '    
' → logprob: -11.228517532348633
    9. '  
' → logprob: -11.353517532348633
    10. '#' → logprob: -11.478517532348633

Token 862: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.40754950046539307
    2. '       ' → logprob: -1.657549500465393
    3. ' but' → logprob: -2.2825493812561035
    4. 'but' → logprob: -4.1575493812561035
    5. 'so' → logprob: -4.4075493812561035
    6. ' continue' → logprob: -5.4075493812561035
    7. 'continue' → logprob: -5.6575493812561035
    8. '#' → logprob: -6.2825493812561035
    9. ' and' → logprob: -7.0325493812561035
    10. 'and' → logprob: -7.1575493812561035

Token 863: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8082032799720764
    2. '       ' → logprob: -1.1832032203674316
    3. 'result' → logprob: -2.5582032203674316
    4. ' for' → logprob: -3.3082032203674316
    5. 'for' → logprob: -3.3082032203674316
    6. 'min' → logprob: -3.5582032203674316
    7. ' result' → logprob: -4.558203220367432
    8. 'segments' → logprob: -4.558203220367432
    9. ' #' → logprob: -4.808203220367432
    10. ' min' → logprob: -4.933203220367432

Token 864: ' back' (ID: 1602)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.5492925643920898
    2. ' need' → logprob: -0.9242925643920898
    3. ' must' → logprob: -5.29929256439209
    4. ' can' → logprob: -5.42429256439209
    5. '       ' → logprob: -5.67429256439209
    6. 'must' → logprob: -5.67429256439209
    7. 'can' → logprob: -5.92429256439209
    8. 'know' → logprob: -6.42429256439209
    9. 'have' → logprob: -6.92429256439209
    10. 'continue' → logprob: -7.04929256439209

Token 865: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.046336688101291656
    2. 'trace' → logprob: -3.1713366508483887
    3. 'ward' → logprob: -7.296336650848389
    4. 'pack' → logprob: -7.421336650848389
    5. '```' → logprob: -7.921336650848389
    6. '       ' → logprob: -7.921336650848389
    7. 'tracking' → logprob: -8.046337127685547
    8. '           ' → logprob: -8.546337127685547
    9. 'up' → logprob: -9.046337127685547
    10. '   ' → logprob: -9.296337127685547

Token 866: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057951293885707855
    2. '
' → logprob: -3.4329512119293213
    3. ' to' → logprob: -4.9329514503479
    4. '#' → logprob: -5.3079514503479
    5. '```' → logprob: -5.5579514503479
    6. 'from' → logprob: -6.5579514503479
    7. 'def' → logprob: -6.6829514503479
    8. 'to' → logprob: -7.8079514503479
    9. ' for' → logprob: -7.9329514503479
    10. ' or' → logprob: -7.9329514503479

Token 867: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.6559393405914307
    2. 'count' → logprob: -1.6559393405914307
    3. '_counts' → logprob: -2.2809393405914307
    4. 's' → logprob: -2.5309393405914307
    5. ' counts' → logprob: -2.7809393405914307
    6. '_count' → logprob: -3.4059393405914307
    7. 'length' → logprob: -5.905939102172852
    8. ' count' → logprob: -6.155939102172852
    9. '_lengths' → logprob: -6.655939102172852
    10. '       ' → logprob: -6.905939102172852

Token 868: ' via' (ID: 4493)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21539652347564697
    2. '
' → logprob: -2.0903964042663574
    3. 'count' → logprob: -3.5903964042663574
    4. 'counts' → logprob: -4.340396404266357
    5. 'min' → logprob: -4.715396404266357
    6. '        
' → logprob: -5.215396404266357
    7. 'segments' → logprob: -5.715396404266357
    8. ',' → logprob: -6.340396404266357
    9. '```' → logprob: -6.465396404266357
    10. ' counts' → logprob: -6.715396404266357

Token 869: ' a' (ID: 261)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.1099534034729004
    2. 'True' → logprob: -2.1099534034729004
    3. 'None' → logprob: -2.2349534034729004
    4. '...' → logprob: -2.2349534034729004
    5. 'dp' → logprob: -2.4849534034729004
    6. 'segment' → logprob: -2.7349534034729004
    7. 'segments' → logprob: -2.8599534034729004
    8. ' True' → logprob: -3.3599534034729004
    9. 'for' → logprob: -3.3599534034729004
    10. '#' → logprob: -3.4849534034729004

Token 870: ' bit' (ID: 3546)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -1.0538396835327148
    2. 'queue' → logprob: -1.4288396835327148
    3. 'count' → logprob: -2.303839683532715
    4. '...' → logprob: -2.553839683532715
    5. 'segment' → logprob: -3.303839683532715
    6. 'class' → logprob: -3.428839683532715
    7. 'counts' → logprob: -3.678839683532715
    8. '#' → logprob: -3.803839683532715
    9. 'parent' → logprob: -3.803839683532715
    10. 'def' → logprob: -4.428839683532715

Token 871: ' more' (ID: 945)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0447640419006348
    2. 'mask' → logprob: -1.0447640419006348
    3. 'space' → logprob: -2.4197640419006348
    4. '   ' → logprob: -3.0447640419006348
    5. 'wise' → logprob: -3.5447640419006348
    6. '```' → logprob: -3.5447640419006348
    7. '        
' → logprob: -4.544764041900635
    8. ' more' → logprob: -4.669764041900635
    9. '...' → logprob: -4.919764041900635
    10. '[' → logprob: -5.169764041900635

Token 872: ' complex' (ID: 8012)
  Prédit: ' complex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complex' → logprob: -0.5129426121711731
    2. 'complex' → logprob: -1.8879425525665283
    3. ' for' → logprob: -3.1379425525665283
    4. '
' → logprob: -3.2629425525665283
    5. '       ' → logprob: -3.5129425525665283
    6. ' of' → logprob: -4.012942790985107
    7. ' here' → logprob: -4.262942790985107
    8. ' code' → logprob: -4.762942790985107
    9. ' elaborate' → logprob: -4.762942790985107
    10. '        
' → logprob: -5.012942790985107

Token 873: ' approach' (ID: 7139)
  Prédit: ' approach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.18210597336292267
    2. ' logic' → logprob: -2.8071060180664062
    3. '
' → logprob: -3.3071060180664062
    4. ' process' → logprob: -3.6821060180664062
    5. ' code' → logprob: -3.8071060180664062
    6. 'appro' → logprob: -5.557106018066406
    7. '       ' → logprob: -5.932106018066406
    8. ' implementation' → logprob: -6.182106018066406
    9. '<|end|>' → logprob: -6.432106018066406
    10. ' for' → logprob: -6.432106018066406

Token 874: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4117625951766968
    2. '
' → logprob: -1.1617625951766968
    3. '<|end|>' → logprob: -3.9117627143859863
    4. '        
' → logprob: -5.911762714385986
    5. '<|end|>' → logprob: -8.036762237548828
    6. 'diff' → logprob: -8.036762237548828
    7. '```' → logprob: -8.411762237548828
    8. ',' → logprob: -9.036762237548828
    9. 'min' → logprob: -9.036762237548828
    10. '#' → logprob: -9.286762237548828

Token 875: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019150346517562866
    2. ' but' → logprob: -4.269150257110596
    3. '#' → logprob: -6.394150257110596
    4. '
' → logprob: -6.519150257110596
    5. '           ' → logprob: -7.144150257110596
    6. 'but' → logprob: -7.519150257110596
    7. '```' → logprob: -8.644150733947754
    8. '        
' → logprob: -10.019150733947754
    9. ' and' → logprob: -10.144150733947754
    10. ' continue' → logprob: -10.394150733947754

Token 876: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08665157109498978
    2. '#' (adapté à ' #') → logprob: -3.211651563644409
    3. ' but' → logprob: -3.836651563644409
    4. 'but' → logprob: -3.961651563644409
    5. '
' → logprob: -6.461651802062988
    6. 'import' → logprob: -8.586651802062988
    7. 'and' → logprob: -9.461651802062988
    8. '           ' → logprob: -9.836651802062988
    9. '   ' → logprob: -9.961651802062988
    10. '```' → logprob: -10.086651802062988

Token 877: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14267173409461975
    2. '#' → logprob: -2.142671823501587
    3. ' but' → logprob: -4.517671585083008
    4. 'but' → logprob: -6.267671585083008
    5. ' or' → logprob: -7.392671585083008
    6. ' #' → logprob: -7.892671585083008
    7. '           ' → logprob: -8.267671585083008
    8. 'import' → logprob: -8.267671585083008
    9. '
' → logprob: -8.642671585083008
    10. ' continue' → logprob: -8.767671585083008

Token 878: ' instead' (ID: 7665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.953582763671875
    2. 'we' → logprob: -1.453582763671875
    3. '#' → logprob: -1.578582763671875
    4. ' we' → logprob: -3.078582763671875
    5. '
' → logprob: -3.328582763671875
    6. 'continue' → logprob: -3.328582763671875
    7. 'consider' → logprob: -4.828582763671875
    8. 'return' → logprob: -5.453582763671875
    9. ' continue' → logprob: -5.453582763671875
    10. 'count' → logprob: -5.578582763671875

Token 879: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22498777508735657
    2. '
' → logprob: -1.9749877452850342
    3. ',' → logprob: -3.724987745285034
    4. '#' → logprob: -4.849987983703613
    5. '           ' → logprob: -5.224987983703613
    6. ' continue' → logprob: -5.224987983703613
    7. '        
' → logprob: -5.474987983703613
    8. ' we' → logprob: -5.724987983703613
    9. ' for' → logprob: -5.974987983703613
    10. 'continue' → logprob: -6.224987983703613

Token 880: ' note' (ID: 7477)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19426172971725464
    2. 'for' → logprob: -2.5692617893218994
    3. 'continue' → logprob: -3.1942617893218994
    4. 'return' → logprob: -4.19426155090332
    5. 'min' → logprob: -4.19426155090332
    6. 'we' → logprob: -4.31926155090332
    7. '       ' → logprob: -5.56926155090332
    8. '
' → logprob: -5.81926155090332
    9. '           ' → logprob: -6.19426155090332
    10. ' for' → logprob: -6.69426155090332

Token 881: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.6366357207298279
    2. '       ' → logprob: -1.1366357803344727
    3. 'that' → logprob: -2.2616357803344727
    4. '           ' → logprob: -3.5116357803344727
    5. ' for' → logprob: -5.636635780334473
    6. '
' → logprob: -6.011635780334473
    7. 'from' → logprob: -6.136635780334473
    8. 'for' → logprob: -6.636635780334473
    9. 'import' → logprob: -6.636635780334473
    10. ' from' → logprob: -7.511635780334473

Token 882: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.615338921546936
    2. ' for' → logprob: -1.615338921546936
    3. '#' → logprob: -2.9903388023376465
    4. 'len' → logprob: -3.3653388023376465
    5. ' all' → logprob: -3.4903388023376465
    6. 'the' → logprob: -3.9903388023376465
    7. 'True' → logprob: -3.9903388023376465
    8. ' the' → logprob: -3.9903388023376465
    9. 'dp' → logprob: -3.9903388023376465
    10. 'all' → logprob: -4.2403388023376465

Token 883: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21459609270095825
    2. '[length' → logprob: -1.9645960330963135
    3. '[i' → logprob: -3.9645960330963135
    4. '[len' → logprob: -4.089596271514893
    5. 'length' → logprob: -5.714596271514893
    6. '[-' → logprob: -6.214596271514893
    7. 'count' → logprob: -6.464596271514893
    8. '[self' → logprob: -6.589596271514893
    9. 's' → logprob: -6.964596271514893
    10. 'for' → logprob: -7.089596271514893

Token 884: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31299254298210144
    2. '1' → logprob: -2.312992572784424
    3. 'self' → logprob: -2.562992572784424
    4. 'length' → logprob: -3.187992572784424
    5. 'i' → logprob: -3.562992572784424
    6. 'len' → logprob: -5.312992572784424
    7. '-' → logprob: -5.562992572784424
    8. '
' → logprob: -5.937992572784424
    9. ']' → logprob: -6.562992572784424
    10. '[' → logprob: -6.812992572784424

Token 885: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6221420764923096
    2. '].' → logprob: -1.2471420764923096
    3. '][' → logprob: -1.8721420764923096
    4. ']:
' → logprob: -4.7471418380737305
    5. '],' → logprob: -4.8721418380737305
    6. ']
' → logprob: -6.6221418380737305
    7. ']!=' → logprob: -7.7471418380737305
    8. ']=' → logprob: -7.9971418380737305
    9. '           ' → logprob: -8.12214183807373
    10. '       ' → logprob: -8.24714183807373

Token 886: ' state' (ID: 2608)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -1.3275364637374878
    2. '.keys' → logprob: -1.9525364637374878
    3. 'has' → logprob: -2.3275365829467773
    4. '[(' → logprob: -2.3275365829467773
    5. ' and' → logprob: -3.0775365829467773
    6. '=' → logprob: -3.5775365829467773
    7. ')' → logprob: -3.5775365829467773
    8. ' =' → logprob: -3.7025365829467773
    9. 'and' → logprob: -3.7025365829467773
    10. '           ' → logprob: -3.7025365829467773

Token 887: ' start' (ID: 1604)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.3638496398925781
    2. ' =' → logprob: -1.7388496398925781
    3. ' has' → logprob: -2.738849639892578
    4. '[' → logprob: -2.988849639892578
    5. '       ' → logprob: -3.113849639892578
    6. 'for' → logprob: -3.363849639892578
    7. 'is' → logprob: -3.363849639892578
    8. '           ' → logprob: -3.488849639892578
    9. 'has' → logprob: -3.488849639892578
    10. '=' → logprob: -3.488849639892578

Token 888: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6103307604789734
    2. 'ing' → logprob: -1.3603308200836182
    3. 'ed' → logprob: -1.8603308200836182
    4. 'from' → logprob: -4.235330581665039
    5. 'with' → logprob: -5.235330581665039
    6. 'd' → logprob: -5.360330581665039
    7. '       ' → logprob: -5.485330581665039
    8. 'dp' → logprob: -5.735330581665039
    9. '=' → logprob: -5.860330581665039
    10. '           ' → logprob: -6.110330581665039

Token 889: ' (' (ID: 350)
  Prédit: '(float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.14963260293006897
    2. 'with' → logprob: -2.774632692337036
    3. ' (' → logprob: -3.274632692337036
    4. '{' → logprob: -4.399632453918457
    5. '(in' → logprob: -4.899632453918457
    6. '(not' → logprob: -6.149632453918457
    7. ' with' → logprob: -6.149632453918457
    8. 'not' → logprob: -6.274632453918457
    9. '(with' → logprob: -6.649632453918457
    10. 'only' → logprob: -6.649632453918457

Token 890: 'inf' (ID: 22226)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -7.719917630311102e-05
    2. '(float' → logprob: -9.500077247619629
    3. ' float' → logprob: -13.750077247619629
    4. '
' → logprob: -14.750077247619629
    5. ',float' → logprob: -14.750077247619629
    6. '   ' → logprob: -15.250077247619629
    7. 'inf' → logprob: -17.000076293945312
    8. ')' → logprob: -17.625076293945312
    9. '```' → logprob: -17.625076293945312
    10. '(' → logprob: -17.625076293945312

Token 891: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009151478880085051
    2. ',float' → logprob: -7.375915050506592
    3. ' ,' → logprob: -8.50091552734375
    4. '),' → logprob: -9.62591552734375
    5. ',
' → logprob: -11.75091552734375
    6. ',None' → logprob: -12.62591552734375
    7. 'float' → logprob: -13.62591552734375
    8. ')' → logprob: -13.75091552734375
    9. '
' → logprob: -13.87591552734375
    10. ',),' → logprob: -14.00091552734375

Token 892: ' -' (ID: 533)
  Prédit: '-inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-inf' → logprob: -0.03193534165620804
    2. ' -' → logprob: -3.531935453414917
    3. 'float' → logprob: -6.656935214996338
    4. '-int' → logprob: -7.156935214996338
    5. '-' → logprob: -10.031935691833496
    6. ' float' → logprob: -10.156935691833496
    7. '-info' → logprob: -11.781935691833496
    8. '-s' → logprob: -12.031935691833496
    9. '-max' → logprob: -12.656935691833496
    10. '-num' → logprob: -12.906935691833496

Token 893: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -5.860340752406046e-05
    2. 'float' → logprob: -9.7500581741333
    3. '1' → logprob: -16.625059127807617
    4. '_inf' → logprob: -17.000059127807617
    5. ' inf' → logprob: -17.250059127807617
    6. 'int' → logprob: -17.625059127807617
    7. '-inf' → logprob: -18.250059127807617
    8. '.inf' → logprob: -18.625059127807617
    9. 'Inf' → logprob: -19.125059127807617
    10. '
' → logprob: -19.250059127807617

Token 894: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45837724208831787
    2. ')
' → logprob: -1.7083772420883179
    3. '),' → logprob: -1.7083772420883179
    4. ',' → logprob: -6.333377361297607
    5. '       ' → logprob: -7.083377361297607
    6. ')

' → logprob: -7.208377361297607
    7. '):
' → logprob: -7.208377361297607
    8. '),
' → logprob: -7.708377361297607
    9. ').' → logprob: -8.45837688446045
    10. ');' → logprob: -8.95837688446045

Token 895: ' that' (ID: 484)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.9973453283309937
    2. ' and' → logprob: -1.8723453283309937
    3. ' so' → logprob: -1.9973453283309937
    4. '           ' → logprob: -2.747345447540283
    5. ' for' → logprob: -2.997345447540283
    6. 'for' → logprob: -3.122345447540283
    7. '       ' → logprob: -3.372345447540283
    8. 'continue' → logprob: -3.372345447540283
    9. ' continue' → logprob: -3.872345447540283
    10. ' but' → logprob: -3.872345447540283

Token 896: ' we' (ID: 581)
  Prédit: ' means'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' means' → logprob: -0.6626307368278503
    2. 'means' → logprob: -0.7876307368278503
    3. ' is' → logprob: -4.662630558013916
    4. 'is' → logprob: -5.037630558013916
    5. 'for' → logprob: -5.912630558013916
    6. '#' → logprob: -5.912630558013916
    7. ' implies' → logprob: -6.287630558013916
    8. ' for' → logprob: -7.412630558013916
    9. '
' → logprob: -7.662630558013916
    10. ''s' → logprob: -7.787630558013916

Token 897: ' count' (ID: 3605)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.5838441848754883
    2. ' skip' → logprob: -1.5838441848754883
    3. 'skip' → logprob: -2.2088441848754883
    4. ' only' → logprob: -2.7088441848754883
    5. 'ignore' → logprob: -2.9588441848754883
    6. ' do' → logprob: -3.0838441848754883
    7. 'exclude' → logprob: -3.0838441848754883
    8. 'can' → logprob: -3.5838441848754883
    9. ' exclude' → logprob: -3.5838441848754883
    10. ' never' → logprob: -3.8338441848754883

Token 898: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.8354857563972473
    2. ' segments' → logprob: -1.5854856967926025
    3. ' the' → logprob: -1.8354856967926025
    4. 'the' → logprob: -3.3354856967926025
    5. ' only' → logprob: -3.7104856967926025
    6. 'from' → logprob: -3.9604856967926025
    7. 'only' → logprob: -4.085485935211182
    8. ' at' → logprob: -4.460485935211182
    9. ' for' → logprob: -4.960485935211182
    10. 'for' → logprob: -4.960485935211182

Token 899: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18528659641742706
    2. '       ' → logprob: -1.8102866411209106
    3. '        
' → logprob: -6.185286521911621
    4. '<|end|>' → logprob: -6.560286521911621
    5. ',' → logprob: -7.560286521911621
    6. ' and' → logprob: -8.060286521911621
    7. ' for' → logprob: -8.310286521911621
    8. '           ' → logprob: -8.810286521911621
    9. '<|end|>' → logprob: -9.060286521911621
    10. '
' → logprob: -9.185286521911621

Token 900: ' transitions' (ID: 59824)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0482770204544067
    2. ' at' → logprob: -1.7982770204544067
    3. 'for' → logprob: -2.548276901245117
    4. 'at' → logprob: -2.548276901245117
    5. 'False' → logprob: -2.923276901245117
    6. '0' → logprob: -3.423276901245117
    7. '#' → logprob: -3.548276901245117
    8. 'len' → logprob: -3.673276901245117
    9. 'def' → logprob: -3.673276901245117
    10. 'from' → logprob: -3.923276901245117

Token 901: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48150336742401123
    2. '
' → logprob: -0.9815033674240112
    3. 'min' → logprob: -5.606503486633301
    4. 'diff' → logprob: -6.606503486633301
    5. '        
' → logprob: -6.606503486633301
    6. 'result' → logprob: -8.3565034866333
    7. '```' → logprob: -8.4815034866333
    8. ' min' → logprob: -9.2315034866333
    9. 'import' → logprob: -9.4815034866333
    10. 'from' → logprob: -9.8565034866333

Token 902: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025069991126656532
    2. '
' → logprob: -3.9000699520111084
    3. ' and' → logprob: -6.5250701904296875
    4. ',' → logprob: -7.1500701904296875
    5. '           ' → logprob: -8.025070190429688
    6. '        
' → logprob: -8.025070190429688
    7. 'and' → logprob: -8.150070190429688
    8. '.' → logprob: -8.275070190429688
    9. '<|end|>' → logprob: -8.275070190429688
    10. 'from' → logprob: -8.650070190429688

Token 903: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07319121807813644
    2. '
' → logprob: -2.6981911659240723
    3. '<|end|>' → logprob: -6.948191165924072
    4. '        
' → logprob: -7.698191165924072
    5. ',' → logprob: -7.698191165924072
    6. ' and' → logprob: -7.823191165924072
    7. ' for' → logprob: -8.07319164276123
    8. '.' → logprob: -8.94819164276123
    9. '```' → logprob: -9.44819164276123
    10. '<|end|>' → logprob: -9.69819164276123

Token 904: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15633252263069153
    2. 'min' → logprob: -2.781332492828369
    3. 'diff' → logprob: -3.281332492828369
    4. 'result' → logprob: -3.781332492828369
    5. '#' → logprob: -5.031332492828369
    6. 'for' → logprob: -5.906332492828369
    7. '
' → logprob: -6.031332492828369
    8. 'dp' → logprob: -6.781332492828369
    9. ' min' → logprob: -6.906332492828369
    10. ' for' → logprob: -7.031332492828369

Token 905: ' instead' (ID: 7665)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.3830598592758179
    2. ' min' → logprob: -1.6330598592758179
    3. '#' → logprob: -2.1330599784851074
    4. '       ' → logprob: -2.2580599784851074
    5. ' for' → logprob: -2.3830599784851074
    6. 'result' → logprob: -2.5080599784851074
    7. ' result' → logprob: -3.2580599784851074
    8. 'segments' → logprob: -3.7580599784851074
    9. 'for' → logprob: -4.008059978485107
    10. ' minimal' → logprob: -4.383059978485107

Token 906: ',' (ID: 11)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.6581073999404907
    2. '       ' → logprob: -1.0331073999404907
    3. ' of' → logprob: -2.158107280731201
    4. '           ' → logprob: -5.033107280731201
    5. '   ' → logprob: -6.533107280731201
    6. ',' → logprob: -6.908107280731201
    7. ':' → logprob: -7.658107280731201
    8. '               ' → logprob: -8.03310775756836
    9. '=' → logprob: -8.28310775756836
    10. '.' → logprob: -9.15810775756836

Token 907: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7301744222640991
    2. 'for' → logprob: -1.1051744222640991
    3. ' for' → logprob: -2.6051745414733887
    4. '       ' → logprob: -3.2301745414733887
    5. 'continue' → logprob: -3.8551745414733887
    6. '           ' → logprob: -4.730174541473389
    7. 'segments' → logprob: -4.980174541473389
    8. 'min' → logprob: -4.980174541473389
    9. 'return' → logprob: -5.230174541473389
    10. ' #' → logprob: -5.730174541473389

Token 908: ' filter' (ID: 6690)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -1.385390043258667
    2. ' can' → logprob: -1.510390043258667
    3. ' need' → logprob: -1.635390043258667
    4. 'continue' → logprob: -1.760390043258667
    5. 'can' → logprob: -2.385390043258667
    6. 'return' → logprob: -4.010390281677246
    7. ' continue' → logprob: -4.260390281677246
    8. '       ' → logprob: -5.385390281677246
    9. 'initialize' → logprob: -6.135390281677246
    10. '           ' → logprob: -6.135390281677246

Token 909: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.666620135307312
    2. 'for' → logprob: -1.291620135307312
    3. 'states' → logprob: -3.2916202545166016
    4. 'i' → logprob: -3.4166202545166016
    5. ' states' → logprob: -3.5416202545166016
    6. ' =' → logprob: -3.7916202545166016
    7. ' i' → logprob: -4.541620254516602
    8. ' out' → logprob: -4.541620254516602
    9. 'out' → logprob: -4.666620254516602
    10. ' key' → logprob: -4.916620254516602

Token 910: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8261787295341492
    2. 'key' → logprob: -1.576178789138794
    3. 'state' → logprob: -2.576178789138794
    4. '(i' → logprob: -2.701178789138794
    5. 'states' → logprob: -2.826178789138794
    6. 'len' → logprob: -3.201178789138794
    7. 'k' → logprob: -3.576178789138794
    8. '(key' → logprob: -3.951178789138794
    9. '(len' → logprob: -4.326178550720215
    10. ' key' → logprob: -4.326178550720215

Token 911: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.046592842787504196
    2. 'new' → logprob: -3.546592950820923
    3. '(min' → logprob: -4.421592712402344
    4. 'mv' → logprob: -6.671592712402344
    5. 'key' → logprob: -6.796592712402344
    6. 'k' → logprob: -7.171592712402344
    7. 'v' → logprob: -8.171592712402344
    8. 'state' → logprob: -8.296592712402344
    9. 'm' → logprob: -8.671592712402344
    10. 'inf' → logprob: -8.921592712402344

Token 912: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.008776235394179821
    2. '_val' → logprob: -4.8837761878967285
    3. 'val' → logprob: -8.008776664733887
    4. 'float' → logprob: -8.383776664733887
    5. ',float' → logprob: -9.008776664733887
    6. 'v' → logprob: -9.133776664733887
    7. ',' → logprob: -9.258776664733887
    8. '_,' → logprob: -9.258776664733887
    9. '=float' → logprob: -10.383776664733887
    10. '_' → logprob: -10.508776664733887

Token 913: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20539526641368866
    2. ' !=' → logprob: -2.455395221710205
    3. ',float' → logprob: -2.830395221710205
    4. '!=' → logprob: -3.705395221710205
    5. ' ,' → logprob: -4.455395221710205
    6. ')!=' → logprob: -6.580395221710205
    7. ')' → logprob: -7.705395221710205
    8. 'not' → logprob: -8.205395698547363
    9. 'float' → logprob: -8.205395698547363
    10. ',v' → logprob: -8.205395698547363

Token 914: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0015059324214234948
    2. ' max' → logprob: -6.5015058517456055
    3. 'float' → logprob: -13.626505851745605
    4. ' ' → logprob: -14.251505851745605
    5. '(max' → logprob: -14.751505851745605
    6. '   ' → logprob: -15.751505851745605
    7. ',max' → logprob: -15.751505851745605
    8. '	max' → logprob: -15.876505851745605
    9. ')' → logprob: -16.501506805419922
    10. '...' → logprob: -16.501506805419922

Token 915: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.007088065147399902
    2. '_val' → logprob: -5.0070881843566895
    3. '_,' → logprob: -8.632087707519531
    4. ',' → logprob: -9.882087707519531
    5. 'val' → logprob: -10.257087707519531
    6. 'Val' → logprob: -10.507087707519531
    7. 'v' → logprob: -11.007087707519531
    8. '   ' → logprob: -11.257087707519531
    9. '_' → logprob: -11.507087707519531
    10. ')_' → logprob: -11.882087707519531

Token 916: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001654229243285954
    2. ')!=' → logprob: -6.751654148101807
    3. '),' → logprob: -8.876654624938965
    4. 'for' → logprob: -9.251654624938965
    5. ')!' → logprob: -9.251654624938965
    6. '                   ' → logprob: -10.876654624938965
    7. '):
' → logprob: -11.376654624938965
    8. ',' → logprob: -11.376654624938965
    9. 'v' → logprob: -11.501654624938965
    10. ' for' → logprob: -11.501654624938965

Token 917: ' where' (ID: 1919)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7325750589370728
    2. '
' → logprob: -1.8575750589370728
    3. ' in' → logprob: -2.607574939727783
    4. ' =' → logprob: -2.732574939727783
    5. 'if' → logprob: -2.982574939727783
    6. ' for' → logprob: -2.982574939727783
    7. '           ' → logprob: -3.482574939727783
    8. 'for' → logprob: -3.607574939727783
    9. '       ' → logprob: -4.482574939727783
    10. '.items' → logprob: -4.982574939727783

Token 918: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03942832723259926
    2. '(min' → logprob: -3.289428234100342
    3. 'not' → logprob: -8.1644287109375
    4. '(' → logprob: -8.2894287109375
    5. 'len' → logprob: -8.9144287109375
    6. 'float' → logprob: -9.0394287109375
    7. 'inf' → logprob: -9.6644287109375
    8. ' min' → logprob: -9.6644287109375
    9. '(float' → logprob: -9.6644287109375
    10. 'max' → logprob: -9.9144287109375

Token 919: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0008604847243987024
    2. '_' → logprob: -7.750860691070557
    3. '_val' → logprob: -8.500860214233398
    4. 'v' → logprob: -10.250860214233398
    5. '(_' → logprob: -10.500860214233398
    6. '!=' → logprob: -11.000860214233398
    7. 'val' → logprob: -11.125860214233398
    8. '(dp' → logprob: -11.375860214233398
    9. '!==' → logprob: -11.500860214233398
    10. '(' → logprob: -11.625860214233398

Token 920: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2865782082080841
    2. '!=' → logprob: -1.4115781784057617
    3. ')' → logprob: -6.286578178405762
    4. ' ' → logprob: -7.661578178405762
    5. ')!=' → logprob: -7.786578178405762
    6. ' is' → logprob: -7.911578178405762
    7. '```' → logprob: -8.161578178405762
    8. 'import' → logprob: -8.661578178405762
    9. '<float' → logprob: -8.786578178405762
    10. 'float' → logprob: -8.786578178405762

Token 921: ' inf' (ID: 5603)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -8.65707261255011e-06
    2. ' float' → logprob: -12.250008583068848
    3. 'inf' → logprob: -13.000008583068848
    4. '   ' → logprob: -13.750008583068848
    5. '
' → logprob: -14.750008583068848
    6. '=float' → logprob: -16.875009536743164
    7. '	float' → logprob: -17.500009536743164
    8. '(float' → logprob: -17.625009536743164
    9. '```' → logprob: -17.625009536743164
    10. '       ' → logprob: -18.250009536743164

Token 922: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06590719521045685
    2. 'and' → logprob: -2.9409072399139404
    3. '       ' → logprob: -4.815907001495361
    4. ',' → logprob: -7.190907001495361
    5. '           ' → logprob: -7.565907001495361
    6. ')' → logprob: -7.565907001495361
    7. ' or' → logprob: -7.815907001495361
    8. '
' → logprob: -8.69090747833252
    9. '   ' → logprob: -9.19090747833252
    10. ']' → logprob: -9.94090747833252

Token 923: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01211825106292963
    2. ' max' → logprob: -4.512118339538574
    3. 'min' → logprob: -7.387118339538574
    4. '(max' → logprob: -7.887118339538574
    5. '
' → logprob: -11.012118339538574
    6. 'new' → logprob: -11.137118339538574
    7. 'not' → logprob: -11.512118339538574
    8. ' min' → logprob: -12.012118339538574
    9. ' (' → logprob: -12.012118339538574
    10. '(' → logprob: -12.512118339538574

Token 924: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -9.729906196298543e-06
    2. '_val' → logprob: -12.000009536743164
    3. 'v' → logprob: -12.875009536743164
    4. '```' → logprob: -14.625009536743164
    5. '_' → logprob: -16.250009536743164
    6. 'val' → logprob: -16.500009536743164
    7. 'Val' → logprob: -16.500009536743164
    8. '\' → logprob: -16.625009536743164
    9. '_f' → logprob: -17.125009536743164
    10. ''_' → logprob: -17.500009536743164

Token 925: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.22942830622196198
    2. ' !=' → logprob: -1.6044282913208008
    3. '!=-' → logprob: -5.729428291320801
    4. '()!=' → logprob: -8.6044282913208
    5. '_v' → logprob: -8.9794282913208
    6. ')!=' → logprob: -9.1044282913208
    7. '!='' → logprob: -9.3544282913208
    8. '!=(' → logprob: -9.6044282913208
    9. ']!=' → logprob: -10.1044282913208
    10. '```' → logprob: -10.2294282913208

Token 926: ' -' (ID: 533)
  Prédit: '-inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-inf' → logprob: -0.0009027653140947223
    2. ' -' → logprob: -7.7509026527404785
    3. 'inf' → logprob: -8.250903129577637
    4. '-' → logprob: -8.750903129577637
    5. 'float' → logprob: -10.125903129577637
    6. '-v' → logprob: -12.375903129577637
    7. '-f' → logprob: -12.875903129577637
    8. '-inc' → logprob: -13.250903129577637
    9. ' inf' → logprob: -14.500903129577637
    10. '(-' → logprob: -14.625903129577637

Token 927: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0002632430987432599
    2. 'float' → logprob: -8.250263214111328
    3. '-inf' → logprob: -13.625263214111328
    4. '1' → logprob: -15.125263214111328
    5. ' inf' → logprob: -15.625263214111328
    6. '_inf' → logprob: -16.250263214111328
    7. 'int' → logprob: -16.875263214111328
    8. '.inf' → logprob: -17.125263214111328
    9. '
' → logprob: -18.625263214111328
    10. 'v' → logprob: -18.875263214111328

Token 928: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3215464651584625
    2. '
' → logprob: -1.3215464353561401
    3. '        
' → logprob: -5.44654655456543
    4. '           ' → logprob: -6.82154655456543
    5. ' and' → logprob: -6.82154655456543
    6. ',' → logprob: -7.07154655456543
    7. '

' → logprob: -8.44654655456543
    8. ',
' → logprob: -9.32154655456543
    9. 'and' → logprob: -9.32154655456543
    10. '<|end|>' → logprob: -9.32154655456543

Token 929: ' that' (ID: 484)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3413358926773071
    2. '(i' → logprob: -1.4663358926773071
    3. 'len' → logprob: -1.5913358926773071
    4. 'any' → logprob: -2.9663357734680176
    5. '(len' → logprob: -3.0913357734680176
    6. ' (' → logprob: -3.5913357734680176
    7. ' any' → logprob: -3.7163357734680176
    8. ' len' → logprob: -3.8413357734680176
    9. ' i' → logprob: -3.9663357734680176
    10. 'dp' → logprob: -3.9663357734680176

Token 930: ' resulted' (ID: 32871)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0023529529571533
    2. 'i' → logprob: -1.7523529529571533
    3. 'any' → logprob: -1.7523529529571533
    4. ' any' → logprob: -2.5023529529571533
    5. 'self' → logprob: -3.1273529529571533
    6. ' len' → logprob: -3.2523529529571533
    7. '(i' → logprob: -3.8773529529571533
    8. ' (' → logprob: -4.127352714538574
    9. ' i' → logprob: -4.127352714538574
    10. '(len' → logprob: -4.127352714538574

Token 931: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0072243004105985165
    2. 'in' → logprob: -5.382224082946777
    3. ' from' → logprob: -6.007224082946777
    4. ' in' → logprob: -9.007224082946777
    5. '   ' → logprob: -12.007224082946777
    6. '           ' → logprob: -12.632224082946777
    7. '       ' → logprob: -13.007224082946777
    8. 'len' → logprob: -13.757224082946777
    9. '
' → logprob: -14.132224082946777
    10. ' ' → logprob: -14.757224082946777

Token 932: ' at' (ID: 540)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35604792833328247
    2. 'j' → logprob: -2.6060478687286377
    3. ' at' → logprob: -2.9810478687286377
    4. 'some' → logprob: -3.1060478687286377
    5. 'at' → logprob: -3.3560478687286377
    6. 'dp' → logprob: -3.9810478687286377
    7. ' i' → logprob: -4.106048107147217
    8. 'more' → logprob: -4.231048107147217
    9. 'any' → logprob: -4.606048107147217
    10. ' j' → logprob: -5.481048107147217

Token 933: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.0009782671695575118
    2. ' least' → logprob: -7.375978469848633
    3. 'i' → logprob: -9.500978469848633
    4. 'last' → logprob: -9.875978469848633
    5. 'lease' → logprob: -10.250978469848633
    6. '1' → logprob: -10.625978469848633
    7. 'Least' → logprob: -10.750978469848633
    8. 'east' → logprob: -10.750978469848633
    9. 'lest' → logprob: -10.875978469848633
    10. '2' → logprob: -11.375978469848633

Token 934: ' one' (ID: 1001)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.019297350198030472
    2. ' two' → logprob: -4.644297122955322
    3. 'one' → logprob: -5.269297122955322
    4. '2' → logprob: -5.519297122955322
    5. '1' → logprob: -8.64429759979248
    6. ' one' → logprob: -9.39429759979248
    7. '```' → logprob: -9.76929759979248
    8. '_two' → logprob: -11.76929759979248
    9. '   ' → logprob: -12.14429759979248
    10. ' ' → logprob: -12.51929759979248

Token 935: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.7148779630661011
    2. ' segment' → logprob: -1.089877963066101
    3. ' more' → logprob: -3.0898780822753906
    4. ' cut' → logprob: -3.7148780822753906
    5. ' transition' → logprob: -3.8398780822753906
    6. ' additional' → logprob: -3.8398780822753906
    7. 'more' → logprob: -4.214878082275391
    8. 'transition' → logprob: -4.339878082275391
    9. 'cut' → logprob: -4.839878082275391
    10. 'additional' → logprob: -4.964878082275391

Token 936: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1394437700510025
    2. '       ' → logprob: -2.139443874359131
    3. '        
' → logprob: -5.389443874359131
    4. '<|end|>' → logprob: -5.514443874359131
    5. '

' → logprob: -6.264443874359131
    6. ',' → logprob: -7.389443874359131
    7. '
' → logprob: -8.264443397521973
    8. ' and' → logprob: -8.889443397521973
    9. '<|end|>' → logprob: -8.889443397521973
    10. '           ' → logprob: -9.014443397521973

Token 937: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04393705725669861
    2. '       ' → logprob: -3.1689369678497314
    3. '        
' → logprob: -7.9189372062683105
    4. 'diff' → logprob: -8.543936729431152
    5. '

' → logprob: -8.918936729431152
    6. '   ' → logprob: -9.918936729431152
    7. 'result' → logprob: -10.168936729431152
    8. ',' → logprob: -10.168936729431152
    9. '
' → logprob: -10.293936729431152
    10. 'min' → logprob: -10.668936729431152

Token 938: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5854187607765198
    2. '       ' → logprob: -1.210418701171875
    3. 'result' → logprob: -2.335418701171875
    4. ' min' → logprob: -3.710418701171875
    5. 'diff' → logprob: -4.835418701171875
    6. 'res' → logprob: -5.085418701171875
    7. ' result' → logprob: -5.710418701171875
    8. 'results' → logprob: -5.960418701171875
    9. 'possible' → logprob: -7.085418701171875
    10. 'valid' → logprob: -7.460418701171875

Token 939: ' To' (ID: 2514)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.725004255771637
    2. 'result' → logprob: -1.2250041961669922
    3. '       ' → logprob: -1.9750041961669922
    4. '#' → logprob: -3.975004196166992
    5. ' min' → logprob: -4.225004196166992
    6. 'diff' → logprob: -4.225004196166992
    7. 'results' → logprob: -4.350004196166992
    8. 'res' → logprob: -4.475004196166992
    9. ' result' → logprob: -5.725004196166992
    10. 'valid' → logprob: -6.475004196166992

Token 940: ' check' (ID: 2371)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.089176058769226
    2. 'compute' → logprob: -1.589176058769226
    3. 'answer' → logprob: -2.4641761779785156
    4. 'min' → logprob: -2.9641761779785156
    5. 'get' → logprob: -3.0891761779785156
    6. 'exclude' → logprob: -3.3391761779785156
    7. 'handle' → logprob: -3.4641761779785156
    8. 'extract' → logprob: -3.5891761779785156
    9. 'calculate' → logprob: -3.8391761779785156
    10. '       ' → logprob: -3.8391761779785156

Token 941: ' segments' (ID: 33749)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.4145555794239044
    2. 'segment' → logprob: -1.789555549621582
    3. ' for' → logprob: -3.039555549621582
    4. ' segments' → logprob: -3.789555549621582
    5. ' if' → logprob: -4.039555549621582
    6. 'segments' → logprob: -4.164555549621582
    7. ' the' → logprob: -4.539555549621582
    8. 'for' → logprob: -4.789555549621582
    9. ' counts' → logprob: -4.914555549621582
    10. ' min' → logprob: -5.164555549621582

Token 942: ' count' (ID: 3605)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -1.2032893896102905
    2. 'counts' → logprob: -1.3282893896102905
    3. '_count' → logprob: -1.9532893896102905
    4. 'count' → logprob: -2.07828950881958
    5. '_counts' → logprob: -2.07828950881958
    6. '       ' → logprob: -3.95328950881958
    7. ' count' → logprob: -4.07828950881958
    8. 's' → logprob: -5.57828950881958
    9. '   ' → logprob: -7.70328950881958
    10. ',' → logprob: -7.95328950881958

Token 943: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6162298917770386
    2. ',' → logprob: -2.491230010986328
    3. 'count' → logprob: -2.491230010986328
    4. ' for' → logprob: -2.741230010986328
    5. ' counts' → logprob: -2.741230010986328
    6. 'counts' → logprob: -2.866230010986328
    7. 'for' → logprob: -3.366230010986328
    8. '_count' → logprob: -4.241230010986328
    9. '_counts' → logprob: -4.366230010986328
    10. ' is' → logprob: -4.741230010986328

Token 944: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9634585976600647
    2. '#' → logprob: -1.46345853805542
    3. '       ' → logprob: -1.83845853805542
    4. 'for' → logprob: -2.21345853805542
    5. 'return' → logprob: -4.08845853805542
    6. ' min' → logprob: -4.33845853805542
    7. ' we' → logprob: -4.46345853805542
    8. ' return' → logprob: -4.58845853805542
    9. ' #' → logprob: -4.71345853805542
    10. 'min' → logprob: -4.71345853805542

Token 945: ' trick' (ID: 28864)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.17045919597148895
    2. 'pp' → logprob: -2.545459270477295
    3. 'dding' → logprob: -4.170459270477295
    4. 'better' → logprob: -4.670459270477295
    5. 'dp' → logprob: -4.795459270477295
    6. 'll' → logprob: -5.045459270477295
    7. '#' → logprob: -5.295459270477295
    8. 'ss' → logprob: -5.670459270477295
    9. 's' → logprob: -5.795459270477295
    10. 't' → logprob: -5.920459270477295

Token 946: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2022581696510315
    2. ' is' → logprob: -2.0772581100463867
    3. '
' → logprob: -4.327258110046387
    4. ' for' → logprob: -4.577258110046387
    5. ':' → logprob: -4.827258110046387
    6. ' would' → logprob: -5.452258110046387
    7. ',' → logprob: -5.452258110046387
    8. '#' → logprob: -5.702258110046387
    9. 'is' → logprob: -6.202258110046387
    10. ' will' → logprob: -6.327258110046387

Token 947: ' initial' (ID: 4871)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.2633920907974243
    2. ' result' → logprob: -1.5133920907974243
    3. 'result' → logprob: -1.8883920907974243
    4. ' for' → logprob: -2.3883919715881348
    5. 'min' → logprob: -2.7633919715881348
    6. '       ' → logprob: -3.1383919715881348
    7. ' res' → logprob: -3.3883919715881348
    8. 'res' → logprob: -3.8883919715881348
    9. '#' → logprob: -4.263391971588135
    10. ' #' → logprob: -4.513391971588135

Token 948: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9591023325920105
    2. ' dp' → logprob: -0.9591023325920105
    3. 'state' → logprob: -2.2091023921966553
    4. ' state' → logprob: -2.4591023921966553
    5. ' for' → logprob: -4.459102153778076
    6. ' states' → logprob: -5.209102153778076
    7. 'for' → logprob: -5.709102153778076
    8. '       ' → logprob: -5.834102153778076
    9. ' code' → logprob: -5.959102153778076
    10. ' entry' → logprob: -6.834102153778076

Token 949: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24069446325302124
    2. ' =' → logprob: -2.115694522857666
    3. 'state' → logprob: -3.865694522857666
    4. ' states' → logprob: -4.240694522857666
    5. '```' → logprob: -4.740694522857666
    6. '_states' → logprob: -4.865694522857666
    7. 'states' → logprob: -4.865694522857666
    8. ' state' → logprob: -4.865694522857666
    9. '0' → logprob: -5.115694522857666
    10. '=' → logprob: -5.615694522857666

Token 950: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1757703274488449
    2. '[' → logprob: -1.9257702827453613
    3. 'state' → logprob: -4.550770282745361
    4. 'count' → logprob: -7.425770282745361
    5. '][' → logprob: -8.05077075958252
    6. '       ' → logprob: -8.05077075958252
    7. 'value' → logprob: -8.17577075958252
    8. '           ' → logprob: -8.30077075958252
    9. 'states' → logprob: -8.30077075958252
    10. 'entry' → logprob: -8.42577075958252

Token 951: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.571478545665741
    2. '].' → logprob: -1.4464786052703857
    3. '][' → logprob: -1.6964786052703857
    4. '[(' → logprob: -5.821478366851807
    5. ']
' → logprob: -5.946478366851807
    6. 'state' → logprob: -6.696478366851807
    7. ']:
' → logprob: -7.071478366851807
    8. ']=' → logprob: -7.196478366851807
    9. ']={' → logprob: -7.196478366851807
    10. ']{' → logprob: -7.446478366851807

Token 952: ' min' (ID: 1349)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.7396843433380127
    2. ' has' → logprob: -1.3646843433380127
    3. 'has' → logprob: -2.2396843433380127
    4. 'state' → logprob: -3.1146843433380127
    5. ' states' → logprob: -4.239684104919434
    6. '```' → logprob: -4.364684104919434
    7. 'states' → logprob: -4.364684104919434
    8. ' only' → logprob: -4.739684104919434
    9. ' is' → logprob: -4.989684104919434
    10. '
' → logprob: -5.114684104919434

Token 953: '=max' (ID: 102952)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.3651072680950165
    2. '_v' → logprob: -1.2401072978973389
    3. '_' → logprob: -5.11510705947876
    4. '_segment' → logprob: -5.74010705947876
    5. '```' → logprob: -5.86510705947876
    6. '_vals' → logprob: -7.36510705947876
    7. '_inf' → logprob: -7.49010705947876
    8. 'val' → logprob: -7.61510705947876
    9. '_diff' → logprob: -7.74010705947876
    10. '_value' → logprob: -8.240107536315918

Token 954: '=' (ID: 28)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.717401385307312
    2. ' =' → logprob: -1.717401385307312
    3. '=' → logprob: -1.967401385307312
    4. ',' → logprob: -2.2174015045166016
    5. '_v' → logprob: -3.5924015045166016
    6. '=float' → logprob: -3.8424015045166016
    7. '```' → logprob: -4.967401504516602
    8. 'val' → logprob: -4.967401504516602
    9. '=_' → logprob: -5.967401504516602
    10. '_inf' → logprob: -6.342401504516602

Token 955: 'inf' (ID: 22226)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -7.5649528298527e-05
    2. 'inf' → logprob: -10.125075340270996
    3. '(float' → logprob: -10.375075340270996
    4. ' float' → logprob: -12.500075340270996
    5. '=float' → logprob: -15.750075340270996
    6. '
' → logprob: -15.875075340270996
    7. '   ' → logprob: -15.875075340270996
    8. '{' → logprob: -17.125076293945312
    9. '(' → logprob: -17.125076293945312
    10. 'flo' → logprob: -17.375076293945312

Token 956: '/-' (ID: 35891)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6903085112571716
    2. ' and' → logprob: -1.1903085708618164
    3. 'and' → logprob: -2.4403085708618164
    4. '       ' → logprob: -3.1903085708618164
    5. '
' → logprob: -4.440308570861816
    6. ' is' → logprob: -4.440308570861816
    7. ' ,' → logprob: -4.690308570861816
    8. ')' → logprob: -5.440308570861816
    9. '-' → logprob: -5.440308570861816
    10. '   ' → logprob: -5.565308570861816

Token 957: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -7.839121826691553e-05
    2. 'float' → logprob: -9.500078201293945
    3. '1' → logprob: -12.875078201293945
    4. '```' → logprob: -15.375078201293945
    5. '`' → logprob: -16.125078201293945
    6. ' inf' → logprob: -16.375078201293945
    7. '_inf' → logprob: -16.375078201293945
    8. '-inf' → logprob: -16.375078201293945
    9. '``' → logprob: -16.500078201293945
    10. 'int' → logprob: -17.500078201293945

Token 958: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25037914514541626
    2. '       ' → logprob: -1.8753790855407715
    3. ',' → logprob: -3.5003790855407715
    4. '<|end|>' → logprob: -4.5003790855407715
    5. ' and' → logprob: -5.2503790855407715
    6. ' for' → logprob: -5.5003790855407715
    7. '        
' → logprob: -5.6253790855407715
    8. ' is' → logprob: -5.8753790855407715
    9. '<|end|>' → logprob: -6.3753790855407715
    10. ')' → logprob: -6.5003790855407715

Token 959: ' next' (ID: 2613)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.626775860786438
    2. 'so' → logprob: -1.751775860786438
    3. 'and' → logprob: -2.2517757415771484
    4. '       ' → logprob: -2.5017757415771484
    5. 'continue' → logprob: -2.5017757415771484
    6. ' so' → logprob: -2.6267757415771484
    7. 'we' → logprob: -3.0017757415771484
    8. 'but' → logprob: -3.0017757415771484
    9. 'for' → logprob: -3.1267757415771484
    10. '           ' → logprob: -3.7517757415771484

Token 960: ' steps' (ID: 10331)
  Prédit: ' iteration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' iteration' → logprob: -0.8807846903800964
    2. 'for' → logprob: -2.380784749984741
    3. ' iterations' → logprob: -2.630784749984741
    4. ' for' → logprob: -2.755784749984741
    5. ' states' → logprob: -2.880784749984741
    6. 'dp' → logprob: -3.380784749984741
    7. ' step' → logprob: -3.505784749984741
    8. ' line' → logprob: -4.005784511566162
    9. 'segment' → logprob: -4.005784511566162
    10. 'states' → logprob: -4.005784511566162

Token 961: ' update' (ID: 4027)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' have' → logprob: -2.3401896953582764
    2. 'dp' → logprob: -2.3401896953582764
    3. ' are' → logprob: -2.7151896953582764
    4. ' will' → logprob: -2.9651896953582764
    5. 's' → logprob: -2.9651896953582764
    6. ' only' → logprob: -3.0901896953582764
    7. ' states' → logprob: -3.2151896953582764
    8. ' store' → logprob: -3.2151896953582764
    9. 'have' → logprob: -3.2151896953582764
    10. ' dp' → logprob: -3.3401896953582764

Token 962: ' these' (ID: 1879)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.869682252407074
    2. ' for' → logprob: -1.1196823120117188
    3. 'for' → logprob: -1.9946823120117188
    4. '
' → logprob: -2.9946823120117188
    5. '           ' → logprob: -3.6196823120117188
    6. 'count' → logprob: -5.619682312011719
    7. '   ' → logprob: -6.244682312011719
    8. ',' → logprob: -6.244682312011719
    9. '               ' → logprob: -6.244682312011719
    10. '                       ' → logprob: -6.244682312011719

Token 963: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49637240171432495
    2. '
' → logprob: -0.996372401714325
    3. '        
' → logprob: -4.371372222900391
    4. '<|end|>' → logprob: -5.996372222900391
    5. ',' → logprob: -6.246372222900391
    6. '

' → logprob: -7.371372222900391
    7. ' and' → logprob: -7.746372222900391
    8. '   ' → logprob: -7.871372222900391
    9. '#' → logprob: -7.996372222900391
    10. '
' → logprob: -8.12137222290039

Token 964: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015599739272147417
    2. '
' → logprob: -6.501560211181641
    3. '        
' → logprob: -11.12656021118164
    4. '   ' → logprob: -11.50156021118164
    5. 'import' → logprob: -11.75156021118164
    6. ' for' → logprob: -12.37656021118164
    7. 'for' → logprob: -12.87656021118164
    8. '```' → logprob: -13.00156021118164
    9. 'Since' → logprob: -13.00156021118164
    10. '           ' → logprob: -13.50156021118164

Token 965: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045494742691516876
    2. '
' → logprob: -3.170494794845581
    3. 'min' → logprob: -7.170494556427002
    4. '        
' → logprob: -7.295494556427002
    5. ' min' → logprob: -8.17049503326416
    6. 'result' → logprob: -8.29549503326416
    7. '   ' → logprob: -8.54549503326416
    8. 'diff' → logprob: -9.42049503326416
    9. 'best' → logprob: -10.04549503326416
    10. '```' → logprob: -10.42049503326416

Token 966: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01787375658750534
    2. 'min' → logprob: -4.892873764038086
    3. 'result' → logprob: -5.517873764038086
    4. '
' → logprob: -5.642873764038086
    5. ' min' → logprob: -7.017873764038086
    6. '#' → logprob: -8.142873764038086
    7. 'best' → logprob: -8.392873764038086
    8. '   ' → logprob: -8.767873764038086
    9. '        
' → logprob: -8.767873764038086
    10. 'minimum' → logprob: -8.767873764038086

Token 967: ' any' (ID: 1062)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.0267534255981445
    2. ' for' → logprob: -1.4017534255981445
    3. ' result' → logprob: -1.9017534255981445
    4. 'result' → logprob: -2.2767534255981445
    5. 'min' → logprob: -2.6517534255981445
    6. '#' → logprob: -4.2767534255981445
    7. 'for' → logprob: -4.4017534255981445
    8. ' minimal' → logprob: -4.5267534255981445
    9. '       ' → logprob: -4.9017534255981445
    10. ' #' → logprob: -5.0267534255981445

Token 968: ' min' (ID: 1349)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.3016797304153442
    2. ' segment' → logprob: -1.5516797304153442
    3. ' state' → logprob: -2.1766796112060547
    4. 'segment' → logprob: -2.3016796112060547
    5. ' (' → logprob: -2.4266796112060547
    6. 'i' → logprob: -3.0516796112060547
    7. ' key' → logprob: -3.4266796112060547
    8. ' i' → logprob: -3.8016796112060547
    9. ' new' → logprob: -4.051679611206055
    10. 'key' → logprob: -4.301679611206055

Token 969: '=max' (ID: 102952)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.020739592611789703
    2. '_val' → logprob: -4.020739555358887
    3. '_' → logprob: -6.145739555358887
    4. 'val' → logprob: -9.770739555358887
    5. '!=' → logprob: -9.770739555358887
    6. ' !=' → logprob: -9.895739555358887
    7. 'v' → logprob: -10.145739555358887
    8. '_value' → logprob: -10.145739555358887
    9. '(_' → logprob: -10.520739555358887
    10. '   ' → logprob: -10.770739555358887

Token 970: '=' (ID: 28)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.42912575602531433
    2. '_v' → logprob: -1.5541257858276367
    3. '=' → logprob: -2.5541257858276367
    4. ' !=' → logprob: -3.4291257858276367
    5. '_val' → logprob: -4.679125785827637
    6. ',' → logprob: -5.804125785827637
    7. '```' → logprob: -6.304125785827637
    8. '=float' → logprob: -6.554125785827637
    9. 'v' → logprob: -6.929125785827637
    10. 'and' → logprob: -7.054125785827637

Token 971: 'some' (ID: 25231)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.38951852917671204
    2. 'float' → logprob: -1.1395184993743896
    3. 'segment' → logprob: -7.014518737792969
    4. ' float' → logprob: -7.514518737792969
    5. 'max' → logprob: -7.889518737792969
    6. '-inf' → logprob: -8.639518737792969
    7. '0' → logprob: -9.014518737792969
    8. 'new' → logprob: -9.014518737792969
    9. ' inf' → logprob: -9.389518737792969
    10. '=float' → logprob: -9.889518737792969

Token 972: ' val' (ID: 1459)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.6701675057411194
    2. '_v' → logprob: -1.7951674461364746
    3. 'thing' → logprob: -2.6701674461364746
    4. 'val' → logprob: -2.9201674461364746
    5. 'number' → logprob: -3.5451674461364746
    6. 'value' → logprob: -3.5451674461364746
    7. 'v' → logprob: -3.6701674461364746
    8. 'int' → logprob: -3.9201674461364746
    9. ' number' → logprob: -4.045167446136475
    10. 'segment' → logprob: -4.545167446136475

Token 973: ' means' (ID: 4748)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3399781286716461
    2. 'and' → logprob: -1.7149780988693237
    3. ' only' → logprob: -4.214978218078613
    4. ' or' → logprob: -4.339978218078613
    5. ',' → logprob: -4.714978218078613
    6. ')' → logprob: -4.714978218078613
    7. '       ' → logprob: -4.839978218078613
    8. ':' → logprob: -4.964978218078613
    9. ' if' → logprob: -5.089978218078613
    10. ' is' → logprob: -5.464978218078613

Token 974: ' one' (ID: 1001)
  Prédit: ' there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' there' → logprob: -1.2446285486221313
    2. ' at' → logprob: -1.8696285486221313
    3. ' segments' → logprob: -2.494628429412842
    4. 'there' → logprob: -2.619628429412842
    5. ' more' → logprob: -2.869628429412842
    6. ' the' → logprob: -2.869628429412842
    7. ' that' → logprob: -2.869628429412842
    8. 'segments' → logprob: -3.244628429412842
    9. ' only' → logprob: -3.369628429412842
    10. 'more' → logprob: -3.869628429412842

Token 975: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.5360348224639893
    2. 'segment' → logprob: -1.1610348224639893
    3. ' more' → logprob: -3.5360348224639893
    4. '   ' → logprob: -4.66103458404541
    5. '_segment' → logprob: -5.03603458404541
    6. 'token' → logprob: -5.41103458404541
    7. 'digit' → logprob: -5.53603458404541
    8. ' difference' → logprob: -5.66103458404541
    9. 'difference' → logprob: -5.66103458404541
    10. ')' → logprob: -5.78603458404541

Token 976: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43403732776641846
    2. '       ' → logprob: -1.0590373277664185
    3. '        
' → logprob: -6.184037208557129
    4. '
' → logprob: -7.184037208557129
    5. '

' → logprob: -7.309037208557129
    6. ',' → logprob: -7.809037208557129
    7. '           ' → logprob: -7.934037208557129
    8. '<|end|>' → logprob: -7.934037208557129
    9. ' and' → logprob: -9.059037208557129
    10. '               ' → logprob: -9.809037208557129

Token 977: ' else' (ID: 1203)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.019468903541565
    2. '       ' → logprob: -1.269468903541565
    3. ' so' → logprob: -2.3944687843322754
    4. 'and' → logprob: -2.7694687843322754
    5. ' but' → logprob: -2.8944687843322754
    6. ' and' → logprob: -3.1444687843322754
    7. ' not' → logprob: -3.3944687843322754
    8. ' #' → logprob: -4.269468784332275
    9. 'but' → logprob: -4.269468784332275
    10. '           ' → logprob: -4.644468784332275

Token 978: ' >' (ID: 1424)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.6694912910461426
    2. ' more' → logprob: -1.5444912910461426
    3. ' multiple' → logprob: -2.6694912910461426
    4. 'more' → logprob: -3.1694912910461426
    5. ' there' → logprob: -3.6694912910461426
    6. ' min' → logprob: -3.7944912910461426
    7. ' we' → logprob: -4.419491291046143
    8. ' two' → logprob: -4.419491291046143
    9. ' segments' → logprob: -4.419491291046143
    10. 'min' → logprob: -4.669491291046143

Token 979: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020677708089351654
    2. ' ' → logprob: -4.14567756652832
    3. '=' → logprob: -5.89567756652832
    4. 'than' → logprob: -7.02067756652832
    5. '0' → logprob: -7.89567756652832
    6. ' than' → logprob: -8.14567756652832
    7. '2' → logprob: -9.27067756652832
    8. '>' → logprob: -9.89567756652832
    9. ' one' → logprob: -10.27067756652832
    10. '```' → logprob: -10.89567756652832

Token 980: ' segments' (ID: 33749)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1837201714515686
    2. '
' → logprob: -1.8087201118469238
    3. '        
' → logprob: -6.058720111846924
    4. ',' → logprob: -7.558720111846924
    5. '<|end|>' → logprob: -7.683720111846924
    6. '
' → logprob: -9.183720588684082
    7. '<|end|>' → logprob: -9.683720588684082
    8. '

' → logprob: -9.683720588684082
    9. 's' → logprob: -10.121220588684082
    10. '```' → logprob: -10.558720588684082

Token 981: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3917505741119385
    2. '
' → logprob: -1.1417505741119385
    3. '        
' → logprob: -6.516750335693359
    4. '<|end|>' → logprob: -6.516750335693359
    5. ',' → logprob: -7.016750335693359
    6. '
' → logprob: -7.766750335693359
    7. '<|end|>' → logprob: -8.64175033569336
    8. '

' → logprob: -8.89175033569336
    9. 'from' → logprob: -10.39175033569336
    10. '        

' → logprob: -10.76675033569336

Token 982: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018622078001499176
    2. '
' → logprob: -4.018621921539307
    3. '        
' → logprob: -7.768621921539307
    4. '
' → logprob: -11.018622398376465
    5. '   ' → logprob: -12.143622398376465
    6. ',' → logprob: -12.518622398376465
    7. '	' → logprob: -12.643622398376465
    8. '

' → logprob: -13.018622398376465
    9. '           ' → logprob: -13.018622398376465
    10. '<|end|>' → logprob: -13.393622398376465

Token 983: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017882289830595255
    2. '
' → logprob: -6.501788139343262
    3. 'min' → logprob: -8.376788139343262
    4. 'diff' → logprob: -10.751788139343262
    5. '   ' → logprob: -10.876788139343262
    6. 'result' → logprob: -12.501788139343262
    7. '        
' → logprob: -12.626788139343262
    8. '```' → logprob: -12.626788139343262
    9. ' min' → logprob: -13.376788139343262
    10. 'best' → logprob: -13.751788139343262

Token 984: ' Actually' (ID: 50557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020267529413104057
    2. 'min' → logprob: -4.520267486572266
    3. ' min' → logprob: -5.520267486572266
    4. 'result' → logprob: -6.645267486572266
    5. 'diff' → logprob: -6.895267486572266
    6. 'best' → logprob: -7.270267486572266
    7. '#' → logprob: -7.770267486572266
    8. '
' → logprob: -7.895267486572266
    9. ' result' → logprob: -8.395267486572266
    10. 'import' → logprob: -8.770267486572266

Token 985: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08785000443458557
    2. '
' → logprob: -3.0878500938415527
    3. ' for' → logprob: -4.087850093841553
    4. ',' → logprob: -5.462850093841553
    5. 'for' → logprob: -5.462850093841553
    6. '           ' → logprob: -5.962850093841553
    7. '#' → logprob: -6.212850093841553
    8. ' we' → logprob: -6.462850093841553
    9. '   ' → logprob: -7.087850093841553
    10. '        
' → logprob: -7.337850093841553

Token 986: '=max' (ID: 102952)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.9357492923736572
    2. '_diff' → logprob: -1.0607492923736572
    3. '_v' → logprob: -1.8107492923736572
    4. '_' → logprob: -2.9357492923736572
    5. 'diff' → logprob: -4.185749053955078
    6. '_segments' → logprob: -4.685749053955078
    7. '_vals' → logprob: -5.060749053955078
    8. '_segment' → logprob: -5.685749053955078
    9. '_d' → logprob: -6.935749053955078
    10. 's' → logprob: -7.060749053955078

Token 987: ' after' (ID: 1934)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5497953295707703
    2. '!=' → logprob: -1.299795389175415
    3. '==' → logprob: -2.924795389175415
    4. '=' → logprob: -3.424795389175415
    5. ' ==' → logprob: -4.049795150756836
    6. '       ' → logprob: -4.424795150756836
    7. ' =' → logprob: -4.924795150756836
    8. ',' → logprob: -5.049795150756836
    9. '           ' → logprob: -5.299795150756836
    10. ':' → logprob: -6.299795150756836

Token 988: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1897332668304443
    2. 'the' → logprob: -1.4397332668304443
    3. 'segment' → logprob: -1.8147332668304443
    4. 'first' → logprob: -3.1897332668304443
    5. 'dp' → logprob: -3.4397332668304443
    6. ' the' → logprob: -3.8147332668304443
    7. 'this' → logprob: -4.064733505249023
    8. 'one' → logprob: -4.189733505249023
    9. 'def' → logprob: -4.314733505249023
    10. 'range' → logprob: -4.439733505249023

Token 989: ' first' (ID: 1577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5699411630630493
    2. 'loop' → logprob: -1.4449411630630493
    3. ' loop' → logprob: -3.0699410438537598
    4. 'first' → logprob: -3.1949410438537598
    5. 'last' → logprob: -3.8199410438537598
    6. ' for' → logprob: -3.8199410438537598
    7. 'final' → logprob: -4.06994104385376
    8. 'segment' → logprob: -4.31994104385376
    9. '`' → logprob: -4.94494104385376
    10. ' last' → logprob: -5.56994104385376

Token 990: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.1860949844121933
    2. 'segment' → logprob: -2.3110949993133545
    3. ' step' → logprob: -4.686094760894775
    4. '_' → logprob: -4.936094760894775
    5. ' segments' → logprob: -4.936094760894775
    6. ')' → logprob: -5.061094760894775
    7. ' iteration' → logprob: -5.186094760894775
    8. '   ' → logprob: -5.311094760894775
    9. '_val' → logprob: -5.436094760894775
    10. '_segment' → logprob: -5.561094760894775

Token 991: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06321945786476135
    2. ',' → logprob: -4.0632195472717285
    3. ' is' → logprob: -4.4382195472717285
    4. ' for' → logprob: -5.1882195472717285
    5. ' and' → logprob: -6.0632195472717285
    6. ':' → logprob: -6.0632195472717285
    7. '.' → logprob: -6.1882195472717285
    8. ')' → logprob: -6.1882195472717285
    9. '
' → logprob: -6.5632195472717285
    10. ':
' → logprob: -6.5632195472717285

Token 992: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004452083958312869
    2. '#' → logprob: -8.500445365905762
    3. '
' → logprob: -9.500445365905762
    4. ' for' → logprob: -10.250445365905762
    5. 'from' → logprob: -11.125445365905762
    6. '           ' → logprob: -11.250445365905762
    7. '   ' → logprob: -11.250445365905762
    8. ',' → logprob: -11.250445365905762
    9. '```' → logprob: -11.375445365905762
    10. ' from' → logprob: -11.750445365905762

Token 993: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045217134058475494
    2. ' for' → logprob: -3.2952170372009277
    3. 'for' → logprob: -5.545217037200928
    4. '           ' → logprob: -6.795217037200928
    5. '#' (adapté à ' #') → logprob: -7.170217037200928
    6. '   ' → logprob: -7.670217037200928
    7. ' ' → logprob: -8.920217514038086
    8. '
' → logprob: -9.170217514038086
    9. ' return' → logprob: -9.170217514038086
    10. ' if' → logprob: -9.420217514038086

Token 994: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023943213745951653
    2. '
' → logprob: -7.002394199371338
    3. 'diff' → logprob: -7.502394199371338
    4. '#' → logprob: -7.877394199371338
    5. 'result' → logprob: -8.877394676208496
    6. 'min' → logprob: -9.627394676208496
    7. '   ' → logprob: -10.252394676208496
    8. 'import' → logprob: -10.377394676208496
    9. ' result' → logprob: -10.377394676208496
    10. 'dp' → logprob: -10.377394676208496

Token 995: ' difference' (ID: 9809)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5179416537284851
    2. '       ' → logprob: -1.3929417133331299
    3. ' min' → logprob: -2.26794171333313
    4. 'result' → logprob: -3.39294171333313
    5. ' result' → logprob: -5.392941474914551
    6. 'diff' → logprob: -5.517941474914551
    7. 'minimal' → logprob: -6.142941474914551
    8. ' minimal' → logprob: -6.392941474914551
    9. '   ' → logprob: -6.517941474914551
    10. 'res' → logprob: -7.267941474914551

Token 996: ' ==' (ID: 951)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6113027930259705
    2. '       ' → logprob: -1.4863028526306152
    3. '=' → logprob: -1.8613028526306152
    4. '>' → logprob: -3.6113028526306152
    5. ' !=' → logprob: -3.9863028526306152
    6. ' >' → logprob: -4.986302852630615
    7. '           ' → logprob: -5.736302852630615
    8. '   ' → logprob: -5.736302852630615
    9. '!=' → logprob: -6.236302852630615
    10. 's' → logprob: -6.361302852630615

Token 997: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01974824257194996
    2. 'max' → logprob: -4.144748210906982
    3. ' ' → logprob: -6.769748210906982
    4. 'new' → logprob: -7.144748210906982
    5. '(max' → logprob: -7.894748210906982
    6. 'min' → logprob: -8.39474868774414
    7. 'float' → logprob: -8.39474868774414
    8. ' max' → logprob: -8.51974868774414
    9. 'abs' → logprob: -8.64474868774414
    10. 'self' → logprob: -8.76974868774414

Token 998: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009988710517063737
    2. 'max' → logprob: -7.3759989738464355
    3. ' ' → logprob: -9.375998497009277
    4. 'float' → logprob: -9.375998497009277
    5. 'new' → logprob: -9.750998497009277
    6. '(max' → logprob: -10.000998497009277
    7. 'min' → logprob: -10.250998497009277
    8. '(' → logprob: -10.375998497009277
    9. 'abs' → logprob: -11.875998497009277
    10. '(min' → logprob: -12.375998497009277

Token 999: ' means' (ID: 4748)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3293502926826477
    2. '
' → logprob: -1.329350233078003
    3. ',' → logprob: -6.329350471496582
    4. '        
' → logprob: -6.329350471496582
    5. ':
' → logprob: -6.329350471496582
    6. ' if' → logprob: -6.579350471496582
    7. ' and' → logprob: -6.579350471496582
    8. '
' → logprob: -7.079350471496582
    9. ' or' → logprob: -7.204350471496582
    10. '```' → logprob: -7.204350471496582

Token 1000: ' one' (ID: 1001)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.234325885772705
    2. '0' → logprob: -1.984325885772705
    3. ' we' → logprob: -2.234325885772705
    4. ' there' → logprob: -2.734325885772705
    5. ' min' → logprob: -2.984325885772705
    6. ' the' → logprob: -2.984325885772705
    7. ' multiple' → logprob: -3.109325885772705
    8. ' segments' → logprob: -3.234325885772705
    9. ' more' → logprob: -3.359325885772705
    10. '           ' → logprob: -3.484325885772705

Token 1001: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.32922595739364624
    2. 'segment' → logprob: -2.454226016998291
    3. '_segment' → logprob: -3.579226016998291
    4. ')' → logprob: -3.704226016998291
    5. ' difference' → logprob: -3.954226016998291
    6. ' ' → logprob: -4.204226016998291
    7. '_' → logprob: -4.204226016998291
    8. ' more' → logprob: -4.329226016998291
    9. ' segments' → logprob: -4.579226016998291
    10. '   ' → logprob: -5.204226016998291

Token 1002: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23329101502895355
    2. '
' → logprob: -1.6082910299301147
    3. ',' → logprob: -5.858291149139404
    4. ' and' → logprob: -6.608291149139404
    5. '           ' → logprob: -7.358291149139404
    6. '        
' → logprob: -7.358291149139404
    7. ' or' → logprob: -8.358290672302246
    8. '   ' → logprob: -8.733290672302246
    9. '```' → logprob: -8.733290672302246
    10. '.' → logprob: -8.983290672302246

Token 1003: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.724756121635437
    2. ' continue' → logprob: -2.0997562408447266
    3. 'return' → logprob: -2.0997562408447266
    4. 'continue' → logprob: -2.3497562408447266
    5. ' return' → logprob: -2.5997562408447266
    6. '           ' → logprob: -3.2247562408447266
    7. '#' → logprob: -3.2247562408447266
    8. ' we' → logprob: -4.849756240844727
    9. ' #' → logprob: -5.724756240844727
    10. 'we' → logprob: -6.474756240844727

Token 1004: ' one' (ID: 1001)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0468182563781738
    2. 'consider' → logprob: -1.9218182563781738
    3. 'continue' → logprob: -2.171818256378174
    4. 'possible' → logprob: -2.921818256378174
    5. 'segments' → logprob: -3.171818256378174
    6. 'one' → logprob: -3.171818256378174
    7. ' if' → logprob: -3.421818256378174
    8. 'return' → logprob: -3.796818256378174
    9. ' segments' → logprob: -3.921818256378174
    10. 'difference' → logprob: -4.171818256378174

Token 1005: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.34826555848121643
    2. 'segment' → logprob: -1.848265528678894
    3. ' for' → logprob: -3.8482656478881836
    4. '   ' → logprob: -3.8482656478881836
    5. ' difference' → logprob: -4.348265647888184
    6. '           ' → logprob: -4.598265647888184
    7. '       ' → logprob: -4.723265647888184
    8. ')' → logprob: -4.973265647888184
    9. ' if' → logprob: -5.098265647888184
    10. ' ' → logprob: -5.348265647888184

Token 1006: ' invalid' (ID: 15796)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16310741007328033
    2. '
' → logprob: -1.9131073951721191
    3. ',' → logprob: -7.288107395172119
    4. '           ' → logprob: -7.538107395172119
    5. '        
' → logprob: -8.038107872009277
    6. ' and' → logprob: -8.788107872009277
    7. ' for' → logprob: -8.788107872009277
    8. '
' → logprob: -8.913107872009277
    9. ',
' → logprob: -9.163107872009277
    10. '   ' → logprob: -9.163107872009277

Token 1007: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07023105770349503
    2. '
' → logprob: -2.6952309608459473
    3. ',' → logprob: -9.070231437683105
    4. '        
' → logprob: -9.820231437683105
    5. '
' → logprob: -10.570231437683105
    6. '           ' → logprob: -11.195231437683105
    7. '```' → logprob: -11.570231437683105
    8. '

' → logprob: -11.570231437683105
    9. '   ' → logprob: -11.695231437683105
    10. ' for' → logprob: -11.695231437683105

Token 1008: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00869517307728529
    2. '
' → logprob: -4.758695125579834
    3. ',' → logprob: -10.258695602416992
    4. '        
' → logprob: -10.758695602416992
    5. '   ' → logprob: -12.133695602416992
    6. '           ' → logprob: -12.758695602416992
    7. '```' → logprob: -13.008695602416992
    8. '#' → logprob: -13.133695602416992
    9. ' and' → logprob: -13.258695602416992
    10. '
' → logprob: -13.633695602416992

Token 1009: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014203116297721863
    2. '
' → logprob: -4.264203071594238
    3. '   ' → logprob: -11.014203071594238
    4. ',' → logprob: -12.389203071594238
    5. '```' → logprob: -12.389203071594238
    6. '#' (adapté à ' #') → logprob: -12.764203071594238
    7. '        
' → logprob: -12.764203071594238
    8. '           ' → logprob: -13.264203071594238
    9. '
' → logprob: -13.639203071594238
    10. ' if' → logprob: -14.264203071594238

Token 1010: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002979240380227566
    2. '
' → logprob: -8.375297546386719
    3. 'diff' → logprob: -10.375297546386719
    4. '   ' → logprob: -10.750297546386719
    5. 'result' → logprob: -12.500297546386719
    6. '           ' → logprob: -13.500297546386719
    7. 'difference' → logprob: -13.625297546386719
    8. '```' → logprob: -13.875297546386719
    9. ' diff' → logprob: -14.125297546386719
    10. 'dif' → logprob: -14.250297546386719

Token 1011: ' minimum' (ID: 11085)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7619507908821106
    2. 'min' → logprob: -1.3869507312774658
    3. ' min' → logprob: -1.5119507312774658
    4. 'result' → logprob: -3.761950731277466
    5. ' result' → logprob: -4.261950969696045
    6. 'diff' → logprob: -4.386950969696045
    7. ' minimal' → logprob: -5.636950969696045
    8. '
' → logprob: -6.261950969696045
    9. 'dif' → logprob: -6.636950969696045
    10. 'return' → logprob: -6.886950969696045

Token 1012: ' difference' (ID: 9809)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.7464683651924133
    2. 'diff' → logprob: -0.9964683651924133
    3. 'difference' → logprob: -2.6214683055877686
    4. '_difference' → logprob: -2.9964683055877686
    5. ' difference' → logprob: -3.8714683055877686
    6. '       ' → logprob: -5.621468544006348
    7. '           ' → logprob: -6.371468544006348
    8. ' diff' → logprob: -6.496468544006348
    9. '_' → logprob: -6.746468544006348
    10. '_val' → logprob: -6.996468544006348

Token 1013: ' >' (ID: 1424)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5243385434150696
    2. '=' → logprob: -1.1493384838104248
    3. '_candidates' → logprob: -3.149338483810425
    4. '       ' → logprob: -4.774338722229004
    5. 'diff' → logprob: -4.899338722229004
    6. 's' → logprob: -4.899338722229004
    7. '_result' → logprob: -5.149338722229004
    8. 'result' → logprob: -5.399338722229004
    9. '_values' → logprob: -5.899338722229004
    10. '>' → logprob: -6.274338722229004

Token 1014: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001394284307025373
    2. ' ' → logprob: -7.126394271850586
    3. '=' → logprob: -7.501394271850586
    4. '1' → logprob: -11.751394271850586
    5. '>' → logprob: -12.126394271850586
    6. '```' → logprob: -12.126394271850586
    7. 'from' → logprob: -12.626394271850586
    8. '==' → logprob: -12.626394271850586
    9. '
' → logprob: -12.751394271850586
    10. '   ' → logprob: -13.251394271850586

Token 1015: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.110668618930504e-05
    2. ' ' → logprob: -9.87506103515625
    3. '=' → logprob: -11.87506103515625
    4. '1' → logprob: -13.87506103515625
    5. 'from' → logprob: -14.62506103515625
    6. '
' → logprob: -15.37506103515625
    7. '   ' → logprob: -15.37506103515625
    8. '>' → logprob: -15.50006103515625
    9. '#' → logprob: -15.87506103515625
    10. '```' → logprob: -16.12506103515625

Token 1016: ' means' (ID: 4748)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06500109285116196
    2. '
' → logprob: -2.8150010108947754
    3. ',' → logprob: -6.815001010894775
    4. ':' → logprob: -8.315001487731934
    5. '        
' → logprob: -8.315001487731934
    6. ':
' → logprob: -8.690001487731934
    7. '.' → logprob: -8.815001487731934
    8. ')' → logprob: -8.940001487731934
    9. '
' → logprob: -8.940001487731934
    10. '<|end|>' → logprob: -9.065001487731934

Token 1017: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.7817161679267883
    2. 'there' → logprob: -1.7817161083221436
    3. 'more' → logprob: -2.0317161083221436
    4. ' at' → logprob: -2.4067161083221436
    5. 'segments' → logprob: -2.9067161083221436
    6. 'multiple' → logprob: -3.4067161083221436
    7. 'we' → logprob: -4.406716346740723
    8. '2' → logprob: -5.031716346740723
    9. ' more' → logprob: -5.031716346740723
    10. ' there' → logprob: -5.281716346740723

Token 1018: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.0003111519617959857
    2. ' least' → logprob: -8.125310897827148
    3. 'minimum' → logprob: -12.000310897827148
    4. 'at' → logprob: -12.125310897827148
    5. '```' → logprob: -14.375310897827148
    6. '#' → logprob: -14.375310897827148
    7. 'east' → logprob: -14.750310897827148
    8. 'length' → logprob: -15.000310897827148
    9. 'Least' → logprob: -15.000310897827148
    10. 'last' → logprob: -15.000310897827148

Token 1019: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.4919796884059906
    2. 'two' → logprob: -1.741979718208313
    3. ' one' → logprob: -1.991979718208313
    4. '1' → logprob: -3.4919795989990234
    5. '2' → logprob: -3.4919795989990234
    6. 'one' → logprob: -4.366979598999023
    7. ' ' → logprob: -5.866979598999023
    8. '   ' → logprob: -8.616979598999023
    9. '_two' → logprob: -8.616979598999023
    10. ' least' → logprob: -9.366979598999023

Token 1020: ' segments' (ID: 33749)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5118182301521301
    2. '
' → logprob: -1.8868181705474854
    3. 'segments' → logprob: -2.8868181705474854
    4. '   ' → logprob: -3.5118181705474854
    5. ' parts' → logprob: -3.5118181705474854
    6. ' segments' → logprob: -3.6368181705474854
    7. ':' → logprob: -4.1368184089660645
    8. ':
' → logprob: -4.3868184089660645
    9. '           ' → logprob: -4.6368184089660645
    10. 'parts' → logprob: -5.1368184089660645

Token 1021: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28294944763183594
    2. '
' → logprob: -1.407949447631836
    3. '        
' → logprob: -7.782949447631836
    4. '
' → logprob: -8.157949447631836
    5. ',' → logprob: -8.407949447631836
    6. '           ' → logprob: -8.532949447631836
    7. '   ' → logprob: -9.282949447631836
    8. '0' → logprob: -9.657949447631836
    9. ' =' → logprob: -10.032949447631836
    10. 'return' → logprob: -10.407949447631836

Token 1022: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06250781565904617
    2. '
' → logprob: -2.8125078678131104
    3. '        
' → logprob: -7.812507629394531
    4. '   ' → logprob: -10.312507629394531
    5. '
' → logprob: -10.437507629394531
    6. 'diff' → logprob: -10.687507629394531
    7. '    
' → logprob: -11.687507629394531
    8. '           ' → logprob: -11.687507629394531
    9. '```' → logprob: -12.062507629394531
    10. ',' → logprob: -12.812507629394531

Token 1023: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019697926472872496
    2. '
' → logprob: -7.376969814300537
    3. 'diff' → logprob: -7.376969814300537
    4. 'min' (adapté à ' min') → logprob: -7.626969814300537
    5. 'result' → logprob: -9.126969337463379
    6. '   ' → logprob: -10.001969337463379
    7. '        
' → logprob: -10.501969337463379
    8. ' min' → logprob: -11.126969337463379
    9. 'difference' → logprob: -12.001969337463379
    10. 'return' → logprob: -12.376969337463379

Token 1024: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -6.492120155598968e-05
    2. 'diff' → logprob: -9.875064849853516
    3. 'Diff' → logprob: -12.000064849853516
    4. '_difference' → logprob: -12.375064849853516
    5. '_val' → logprob: -13.375064849853516
    6. '_d' → logprob: -14.875064849853516
    7. '_dist' → logprob: -15.000064849853516
    8. '       ' → logprob: -15.375064849853516
    9. '_' → logprob: -16.000064849853516
    10. '(diff' → logprob: -16.625064849853516

Token 1025: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804183006286621
    2. ' =' → logprob: -3.288041830062866
    3. '   ' → logprob: -16.163042068481445
    4. 's' → logprob: -16.413042068481445
    5. '=float' → logprob: -16.538042068481445
    6. '       ' → logprob: -16.788042068481445
    7. ':' → logprob: -17.413042068481445
    8. ',' → logprob: -17.538042068481445
    9. ' ' → logprob: -17.663042068481445
    10. '=int' → logprob: -18.538042068481445

Token 1026: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -7.743758760625497e-05
    2. ' float' → logprob: -9.500077247619629
    3. 'min' → logprob: -13.500077247619629
    4. '   ' → logprob: -13.875077247619629
    5. 'None' → logprob: -15.500077247619629
    6. '       ' → logprob: -17.125078201293945
    7. '	float' → logprob: -17.375078201293945
    8. '
' → logprob: -18.500078201293945
    9. '  ' → logprob: -18.750078201293945
    10. ' ' → logprob: -19.500078201293945

Token 1027: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.5048530030981055e-06
    2. 'inf' → logprob: -14.375001907348633
    3. ''s' → logprob: -14.625001907348633
    4. '(' → logprob: -15.875001907348633
    5. '('+' → logprob: -15.875001907348633
    6. ' ('' → logprob: -16.500001907348633
    7. '(in' → logprob: -16.625001907348633
    8. '('-' → logprob: -16.875001907348633
    9. ''in' → logprob: -17.250001907348633
    10. '("' → logprob: -17.625001907348633

Token 1028: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.9361264946837764e-07
    2. '-inf' → logprob: -15.75
    3. ' inf' → logprob: -18.125
    4. '')' → logprob: -18.875
    5. '.inf' → logprob: -19.125
    6. '_inf' → logprob: -19.375
    7. ''' → logprob: -19.875
    8. ''in' → logprob: -20.5
    9. 'in' → logprob: -21.5
    10. '''' → logprob: -21.5

Token 1029: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.020165305584669113
    2. ')' → logprob: -4.02016544342041
    3. '       ' → logprob: -6.27016544342041
    4. '')
' → logprob: -9.27016544342041
    5. ')
' → logprob: -11.39516544342041
    6. ')

' → logprob: -12.02016544342041
    7. '')' → logprob: -12.89516544342041
    8. ')'
' → logprob: -13.02016544342041
    9. '   ' → logprob: -13.64516544342041
    10. '
' → logprob: -13.89516544342041

Token 1030: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008653684053570032
    2. 'for' → logprob: -7.125865459442139
    3. ' for' → logprob: -10.25086498260498
    4. '
' → logprob: -11.25086498260498
    5. '   ' → logprob: -11.50086498260498
    6. '```' → logprob: -13.62586498260498
    7. '        
' → logprob: -14.37586498260498
    8. '           ' → logprob: -14.75086498260498
    9. 'next' → logprob: -17.250865936279297
    10. ',' → logprob: -17.250865936279297

Token 1031: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3984932005405426
    2. 'for' (adapté à ' for') → logprob: -1.1484931707382202
    3. ' for' → logprob: -4.52349328994751
    4. '   ' → logprob: -7.27349328994751
    5. '           ' → logprob: -12.023492813110352
    6. '```' → logprob: -13.398492813110352
    7. '
' → logprob: -14.523492813110352
    8. '        
' → logprob: -14.523492813110352
    9. '	for' → logprob: -14.773492813110352
    10. ' ' → logprob: -15.023492813110352

Token 1032: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.145036980509758
    2. 'min' → logprob: -2.0200369358062744
    3. 'new' → logprob: -6.7700371742248535
    4. '(new' → logprob: -7.2700371742248535
    5. ' (' → logprob: -8.645036697387695
    6. ' min' → logprob: -8.895036697387695
    7. '(i' → logprob: -10.270036697387695
    8. '(m' → logprob: -10.270036697387695
    9. '(' → logprob: -10.395036697387695
    10. 'diff' → logprob: -10.520036697387695

Token 1033: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.3199920178740285e-05
    2. '(min' → logprob: -11.750022888183594
    3. 'mn' → logprob: -11.875022888183594
    4. 'mini' → logprob: -13.250022888183594
    5. 'new' → logprob: -13.375022888183594
    6. '_min' → logprob: -13.500022888183594
    7. ' min' → logprob: -13.625022888183594
    8. 'mv' → logprob: -13.875022888183594
    9. 'mi' → logprob: -14.250022888183594
    10. 'm' → logprob: -14.750022888183594

Token 1034: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.001341315801255405
    2. '_val' → logprob: -6.626341342926025
    3. 'v' → logprob: -11.626340866088867
    4. ',' → logprob: -12.626340866088867
    5. 'val' → logprob: -13.501340866088867
    6. '_,' → logprob: -14.501340866088867
    7. 'Val' → logprob: -14.876340866088867
    8. '_s' → logprob: -15.126340866088867
    9. ',v' → logprob: -15.126340866088867
    10. '_vals' → logprob: -16.751340866088867

Token 1035: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.35706390615087e-05
    2. ' ,' → logprob: -10.750033378601074
    3. ',max' → logprob: -11.375033378601074
    4. ',min' → logprob: -15.125033378601074
    5. ',
' → logprob: -15.250033378601074
    6. '   ' → logprob: -17.00003433227539
    7. 'max' → logprob: -18.00003433227539
    8. '
' → logprob: -18.37503433227539
    9. ',v' → logprob: -18.62503433227539
    10. '‌,' → logprob: -18.75003433227539

Token 1036: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0005530327325686812
    2. ' max' → logprob: -7.500553131103516
    3. '_max' → logprob: -17.750553131103516
    4. ' ' → logprob: -18.500553131103516
    5. '   ' → logprob: -18.875553131103516
    6. '	max' → logprob: -19.125553131103516
    7. '(max' → logprob: -19.375553131103516
    8. 'min' → logprob: -19.625553131103516
    9. ',max' → logprob: -19.875553131103516
    10. '[max' → logprob: -20.375553131103516

Token 1037: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -1.3306015716807451e-05
    2. ')_' → logprob: -12.37501335144043
    3. '_val' → logprob: -13.62501335144043
    4. '   ' → logprob: -13.62501335144043
    5. ',' → logprob: -13.75001335144043
    6. ' _' → logprob: -13.87501335144043
    7. ')' → logprob: -14.25001335144043
    8. ',_' → logprob: -14.37501335144043
    9. '}_' → logprob: -14.62501335144043
    10. '_i' → logprob: -15.00001335144043

Token 1038: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.85104202805087e-05
    2. 'in' → logprob: -10.000078201293945
    3. ' )' → logprob: -10.750078201293945
    4. '),' → logprob: -11.875078201293945
    5. ',)' → logprob: -12.875078201293945
    6. ',' → logprob: -13.625078201293945
    7. ' in' → logprob: -14.625078201293945
    8. '   ' → logprob: -16.000078201293945
    9. ')
' → logprob: -16.000078201293945
    10. '       ' → logprob: -17.250078201293945

Token 1039: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4757273495197296
    2. 'in' → logprob: -0.9757273197174072
    3. ',' → logprob: -6.475727558135986
    4. ')' → logprob: -10.350727081298828
    5. '           ' → logprob: -10.475727081298828
    6. '       ' → logprob: -10.850727081298828
    7. ':' → logprob: -12.350727081298828
    8. '        ' → logprob: -12.475727081298828
    9. '   ' → logprob: -12.725727081298828
    10. '	in' → logprob: -12.725727081298828

Token 1040: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0001593195047462359
    2. ' dp' → logprob: -8.75015926361084
    3. '(dp' → logprob: -14.87515926361084
    4. '	dp' → logprob: -15.37515926361084
    5. '
' → logprob: -16.375160217285156
    6. '   ' → logprob: -16.750160217285156
    7. '_dp' → logprob: -17.500160217285156
    8. '           ' → logprob: -18.250160217285156
    9. '```' → logprob: -18.375160217285156
    10. 'd' → logprob: -18.625160217285156

Token 1041: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.018944380804896355
    2. 'self' → logprob: -4.018944263458252
    3. '[-' → logprob: -7.143944263458252
    4. ' self' → logprob: -13.26894474029541
    5. '
' → logprob: -14.01894474029541
    6. '[len' → logprob: -14.76894474029541
    7. '(self' → logprob: -14.89394474029541
    8. 's' → logprob: -15.01894474029541
    9. '	self' → logprob: -15.64394474029541
    10. '-self' → logprob: -15.76894474029541

Token 1042: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -1.0206720617134124e-05
    2. 'length' → logprob: -11.50001049041748
    3. 'self' → logprob: -18.125009536743164
    4. '.' → logprob: -18.875009536743164
    5. '.len' → logprob: -19.125009536743164
    6. '.l' → logprob: -19.750009536743164
    7. ' .' → logprob: -19.875009536743164
    8. ':length' → logprob: -20.500009536743164
    9. ',length' → logprob: -20.625009536743164
    10. 'ength' → logprob: -20.750009536743164

Token 1043: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.044617537409067154
    2. ']:' → logprob: -3.1696176528930664
    3. '):
' → logprob: -7.044617652893066
    4. '   ' → logprob: -8.169617652893066
    5. ']:
' → logprob: -8.919617652893066
    6. '       ' → logprob: -9.419617652893066
    7. ']' → logprob: -9.419617652893066
    8. ']):
' → logprob: -10.294617652893066
    9. ']:

' → logprob: -10.419617652893066
    10. '):' → logprob: -11.044617652893066

Token 1044: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.7014437364414334e-05
    2. '       ' → logprob: -11.62502670288086
    3. ' if' → logprob: -12.00002670288086
    4. '               ' → logprob: -12.62502670288086
    5. '	       ' → logprob: -12.75002670288086
    6. '   ' → logprob: -13.12502670288086
    7. '```' → logprob: -13.50002670288086
    8. '          ' → logprob: -14.37502670288086
    9. 'if' → logprob: -15.00002670288086
    10. '		' → logprob: -15.25002670288086

Token 1045: ' diff' (ID: 8868)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09502184391021729
    2. ' if' → logprob: -2.8450217247009277
    3. 'if' → logprob: -3.8450217247009277
    4. '       ' → logprob: -4.845021724700928
    5. '   ' → logprob: -6.095021724700928
    6. '               ' → logprob: -7.595021724700928
    7. 'diff' (adapté à ' diff') → logprob: -7.720021724700928
    8. '	       ' → logprob: -11.095022201538086
    9. ' diff' → logprob: -11.220022201538086
    10. 'min' → logprob: -12.220022201538086

Token 1046: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06210660934448242
    2. ' =' → logprob: -2.8121066093444824
    3. '=min' → logprob: -8.93710708618164
    4. '           ' → logprob: -12.43710708618164
    5. '   ' → logprob: -14.18710708618164
    6. ')' → logprob: -14.31210708618164
    7. '=max' → logprob: -14.31210708618164
    8. '=int' → logprob: -15.06210708618164
    9. 'min' → logprob: -15.68710708618164
    10. '       ' → logprob: -15.81210708618164

Token 1047: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011048289015889168
    2. ' max' → logprob: -4.511048316955566
    3. '(max' → logprob: -15.636048316955566
    4. 'abs' → logprob: -15.761048316955566
    5. '           ' → logprob: -16.01104736328125
    6. '	max' → logprob: -17.76104736328125
    7. 'min' → logprob: -18.01104736328125
    8. '=max' → logprob: -19.76104736328125
    9. '               ' → logprob: -19.88604736328125
    10. '_max' → logprob: -20.51104736328125

Token 1048: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0007991461316123605
    2. '(max' → logprob: -7.250799179077148
    3. '(' → logprob: -10.375799179077148
    4. '-v' → logprob: -11.000799179077148
    5. ' -' → logprob: -11.125799179077148
    6. '-' → logprob: -11.250799179077148
    7. 'v' → logprob: -12.750799179077148
    8. '=max' → logprob: -13.375799179077148
    9. ')' → logprob: -13.750799179077148
    10. '   ' → logprob: -14.000799179077148

Token 1049: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10022953152656555
    2. '-' → logprob: -2.350229501724243
    3. '-min' → logprob: -10.725229263305664
    4. ' ' → logprob: -15.350229263305664
    5. '-
' → logprob: -16.475229263305664
    6. '−' → logprob: -16.475229263305664
    7. '
' → logprob: -16.475229263305664
    8. ' ' → logprob: -16.725229263305664
    9. '–' → logprob: -16.725229263305664
    10. '-token' → logprob: -16.725229263305664

Token 1050: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0206720617134124e-05
    2. ' min' → logprob: -11.50001049041748
    3. 'max' → logprob: -21.250009536743164
    4. '(min' → logprob: -24.250009536743164
    5. '	min' → logprob: -24.500009536743164
    6. '_min' → logprob: -24.500009536743164
    7. ' ' → logprob: -25.625009536743164
    8. 'mini' → logprob: -26.000009536743164
    9. '=min' → logprob: -26.000009536743164
    10. '
' → logprob: -26.375009536743164

Token 1051: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0019380348967388272
    2. 'v' → logprob: -6.2519378662109375
    3. 'val' → logprob: -12.876937866210938
    4. 'min' → logprob: -13.376937866210938
    5. '(min' → logprob: -13.501937866210938
    6. '(' → logprob: -13.751937866210938
    7. '(v' → logprob: -14.251937866210938
    8. '(_' → logprob: -15.376937866210938
    9. 'V' → logprob: -15.501937866210938
    10. 'segment' → logprob: -15.501937866210938

Token 1052: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009351630578748882
    2. '
' → logprob: -7.750935077667236
    3. '<|end|>' → logprob: -8.125935554504395
    4. ' if' → logprob: -9.500935554504395
    5. '<|end|>' → logprob: -10.125935554504395
    6. '               ' → logprob: -11.000935554504395
    7. '       ' → logprob: -11.125935554504395
    8. ',' → logprob: -11.250935554504395
    9. '          ' → logprob: -11.500935554504395
    10. 'if' → logprob: -11.625935554504395

Token 1053: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.930552313453518e-05
    2. '       ' → logprob: -11.375049591064453
    3. '   ' → logprob: -11.625049591064453
    4. ' if' → logprob: -11.875049591064453
    5. '	       ' → logprob: -12.000049591064453
    6. 'if' → logprob: -12.125049591064453
    7. '```' → logprob: -12.125049591064453
    8. '               ' → logprob: -13.875049591064453
    9. ' ' → logprob: -14.000049591064453
    10. '		' → logprob: -14.000049591064453

Token 1054: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020937572699040174
    2. 'if' (adapté à ' if') → logprob: -6.37709379196167
    3. ' if' → logprob: -8.002093315124512
    4. '   ' → logprob: -10.002093315124512
    5. '       ' → logprob: -11.627093315124512
    6. '          ' → logprob: -14.377093315124512
    7. ' ' → logprob: -14.502093315124512
    8. '               ' → logprob: -14.627093315124512
    9. '	       ' → logprob: -15.002093315124512
    10. '		' → logprob: -15.502093315124512

Token 1055: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0742507129907608
    2. 'min' → logprob: -2.8242506980895996
    3. ' diff' → logprob: -4.8242506980896
    4. 'max' → logprob: -6.3242506980896
    5. '(diff' → logprob: -7.1992506980896
    6. '(min' → logprob: -7.6992506980896
    7. 'dp' → logprob: -7.9492506980896
    8. ' min' → logprob: -7.9492506980896
    9. ' (' → logprob: -8.449251174926758
    10. '0' → logprob: -9.324251174926758

Token 1056: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.475086510181427
    2. ' >' → logprob: -0.975086510181427
    3. ' !=' → logprob: -7.725086688995361
    4. '!=' → logprob: -7.850086688995361
    5. 'and' → logprob: -9.725086212158203
    6. '0' → logprob: -9.850086212158203
    7. ' and' → logprob: -10.350086212158203
    8. '&gt' → logprob: -11.475086212158203
    9. '<|end|>' → logprob: -12.600086212158203
    10. ')>' → logprob: -12.975086212158203

Token 1057: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -19.000024795532227
    4. '۰' → logprob: -19.750024795532227
    5. ' ' → logprob: -21.375024795532227
    6. '  ' → logprob: -21.875024795532227
    7. '=' → logprob: -21.875024795532227
    8. '       ' → logprob: -22.250024795532227
    9. ')' → logprob: -22.375024795532227
    10. '<|end|>' → logprob: -22.375024795532227

Token 1058: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '=' → logprob: -17.5000057220459
    4. '۰' → logprob: -17.7500057220459
    5. '   ' → logprob: -17.8750057220459
    6. '
' → logprob: -17.8750057220459
    7. 'zero' → logprob: -19.3750057220459
    8. '-' → logprob: -19.5000057220459
    9. '  ' → logprob: -19.8125057220459
    10. ')' → logprob: -19.9375057220459

Token 1059: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06598877161741257
    2. '               ' → logprob: -2.940988779067993
    3. 'and' → logprob: -5.190988540649414
    4. '           ' → logprob: -5.940988540649414
    5. ':
' → logprob: -5.940988540649414
    6. ':' → logprob: -9.315988540649414
    7. '              ' → logprob: -9.565988540649414
    8. '            ' → logprob: -10.690988540649414
    9. '                   ' → logprob: -11.565988540649414
    10. '             ' → logprob: -11.690988540649414

Token 1060: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.044155947864055634
    2. ' diff' → logprob: -3.1691558361053467
    3. '               ' → logprob: -7.169156074523926
    4. '           ' → logprob: -8.044156074523926
    5. 'min' → logprob: -10.544156074523926
    6. '	diff' → logprob: -10.919156074523926
    7. '            ' → logprob: -11.669156074523926
    8. '              ' → logprob: -12.544156074523926
    9. 'dp' → logprob: -12.919156074523926
    10. '(diff' → logprob: -13.169156074523926

Token 1061: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.18059620261192322
    2. '<' → logprob: -1.8055962324142456
    3. '           ' → logprob: -8.055596351623535
    4. '<|end|>' → logprob: -8.305596351623535
    5. '<int' → logprob: -9.055596351623535
    6. '               ' → logprob: -10.555596351623535
    7. '<size' → logprob: -10.930596351623535
    8. 'min' → logprob: -11.180596351623535
    9. '<std' → logprob: -11.555596351623535
    10. '<|end|>' → logprob: -11.555596351623535

Token 1062: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -3.7697225252486533e-06
    2. ' min' → logprob: -12.500003814697266
    3. '=min' → logprob: -20.000003814697266
    4. '	min' → logprob: -20.500003814697266
    5. '   ' → logprob: -20.875003814697266
    6. '_min' → logprob: -22.125003814697266
    7. 'float' → logprob: -22.125003814697266
    8. '(min' → logprob: -23.000003814697266
    9. '```' → logprob: -23.000003814697266
    10. 'm' → logprob: -23.125003814697266

Token 1063: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.000533136713784188
    2. 'diff' → logprob: -7.625533103942871
    3. '(diff' → logprob: -11.000533103942871
    4. '_dp' → logprob: -11.125533103942871
    5. 'Diff' → logprob: -12.125533103942871
    6. '_val' → logprob: -13.125533103942871
    7. '_' → logprob: -13.375533103942871
    8. '	diff' → logprob: -14.375533103942871
    9. '(dp' → logprob: -14.750533103942871
    10. 'self' → logprob: -14.875533103942871

Token 1064: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3523624539375305
    2. ':
' → logprob: -1.2273623943328857
    3. ':' → logprob: -5.602362632751465
    4. '):
' → logprob: -9.227362632751465
    5. '                   ' → logprob: -10.227362632751465
    6. '           ' → logprob: -10.352362632751465
    7. '              ' → logprob: -11.102362632751465
    8. '                       ' → logprob: -11.227362632751465
    9. ':min' → logprob: -12.352362632751465
    10. 'min' → logprob: -12.727362632751465

Token 1065: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00045379105722531676
    2. 'min' → logprob: -8.00045394897461
    3. ' min' → logprob: -9.75045394897461
    4. '           ' → logprob: -10.62545394897461
    5. '```' → logprob: -10.87545394897461
    6. '                   ' → logprob: -11.25045394897461
    7. '              ' → logprob: -13.75045394897461
    8. '(min' → logprob: -14.25045394897461
    9. '[min' → logprob: -15.00045394897461
    10. '                       ' → logprob: -15.12545394897461

Token 1066: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.012673276476562023
    2. ' min' → logprob: -4.762673377990723
    3. '               ' → logprob: -5.512673377990723
    4. '                   ' → logprob: -11.387673377990723
    5. '           ' → logprob: -13.137673377990723
    6. '[min' → logprob: -14.262673377990723
    7. '(min' → logprob: -14.512673377990723
    8. '	min' → logprob: -15.387673377990723
    9. ',min' → logprob: -15.637673377990723
    10. '_min' → logprob: -16.012672424316406

Token 1067: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.00012368128227535635
    2. 'diff' → logprob: -9.000123977661133
    3. 'Diff' → logprob: -16.125123977661133
    4. '	diff' → logprob: -16.125123977661133
    5. '_DIFF' → logprob: -17.875123977661133
    6. 'dif' → logprob: -18.125123977661133
    7. '_d' → logprob: -18.375123977661133
    8. ' diff' → logprob: -18.750123977661133
    9. '_difference' → logprob: -19.250123977661133
    10. 'difference' → logprob: -19.375123977661133

Token 1068: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000553151941858232
    2. ' =' → logprob: -7.500553131103516
    3. '               ' → logprob: -16.250553131103516
    4. '=
' → logprob: -16.250553131103516
    5. '=min' → logprob: -17.250553131103516
    6. '                   ' → logprob: -17.750553131103516
    7. '=

' → logprob: -18.125553131103516
    8. '＝' → logprob: -19.125553131103516
    9. '                ' → logprob: -19.500553131103516
    10. '           ' → logprob: -19.750553131103516

Token 1069: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.00020354038861114532
    2. ' diff' → logprob: -8.500203132629395
    3. '	diff' → logprob: -18.62520408630371
    4. 'dif' → logprob: -21.50020408630371
    5. '           ' → logprob: -21.62520408630371
    6. '               ' → logprob: -21.75020408630371
    7. '(diff' → logprob: -22.75020408630371
    8. '_diff' → logprob: -24.00020408630371
    9. '.diff' → logprob: -24.25020408630371
    10. 'd' → logprob: -24.37520408630371

Token 1070: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41688272356987
    2. '
' → logprob: -1.5418827533721924
    3. 'return' → logprob: -2.1668827533721924
    4. ' return' → logprob: -4.541882514953613
    5. '        
' → logprob: -6.541882514953613
    6. '<|end|>' → logprob: -9.291882514953613
    7. '

' → logprob: -10.166882514953613
    8. '    
' → logprob: -10.791882514953613
    9. ':return' → logprob: -10.791882514953613
    10. '  
' → logprob: -10.916882514953613

Token 1071: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3425469398498535
    2. '
' → logprob: -1.3425469398498535
    3. 'return' → logprob: -3.5925469398498535
    4. '   ' → logprob: -7.3425469398498535
    5. '        
' → logprob: -8.092546463012695
    6. ' return' → logprob: -8.342546463012695
    7. '```' → logprob: -9.842546463012695
    8. '    
' → logprob: -10.592546463012695
    9. '
' → logprob: -11.092546463012695
    10. '  
' → logprob: -11.717546463012695

Token 1072: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5380369424819946
    2. 'return' (adapté à ' return') → logprob: -1.0380369424819946
    3. '
' → logprob: -2.788036823272705
    4. ' return' → logprob: -8.038037300109863
    5. 'if' → logprob: -10.288037300109863
    6. '   ' → logprob: -10.413037300109863
    7. '        
' → logprob: -10.788037300109863
    8. '	return' → logprob: -12.788037300109863
    9. '
' → logprob: -13.913037300109863
    10. '	' → logprob: -14.413037300109863

Token 1073: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00038658222183585167
    2. ' min' → logprob: -8.500386238098145
    3. 'int' → logprob: -8.750386238098145
    4. '0' → logprob: -10.625386238098145
    5. '(min' → logprob: -15.875386238098145
    6. ' int' → logprob: -16.25038719177246
    7. '	min' → logprob: -17.25038719177246
    8. ' ' → logprob: -18.25038719177246
    9. '   ' → logprob: -18.50038719177246
    10. '_min' → logprob: -18.62538719177246

Token 1074: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -2.816093228830141e-06
    2. 'diff' → logprob: -12.87500286102295
    3. 'Diff' → logprob: -16.375001907348633
    4. '_DIFF' → logprob: -17.000001907348633
    5. '_difference' → logprob: -17.375001907348633
    6. '_min' → logprob: -18.125001907348633
    7. '	diff' → logprob: -18.375001907348633
    8. '_' → logprob: -18.500001907348633
    9. '_d' → logprob: -19.000001907348633
    10. 'iff' → logprob: -19.125001907348633

Token 1075: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1076: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.9361264946837764e-07
    2. ' min' → logprob: -16.5
    3. '(min' → logprob: -23.0
    4. '_min' → logprob: -24.25
    5. '=min' → logprob: -24.25
    6. '	min' → logprob: -24.5
    7. '   ' → logprob: -25.25
    8. '[min' → logprob: -25.875
    9. '```' → logprob: -26.5
    10. '
' → logprob: -26.625

Token 1077: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.00026264708139933646
    2. 'diff' → logprob: -8.375262260437012
    3. 'Diff' → logprob: -11.125262260437012
    4. 'min' → logprob: -11.875262260437012
    5. '(min' → logprob: -12.125262260437012
    6. '(diff' → logprob: -14.250262260437012
    7. '_DIFF' → logprob: -14.375262260437012
    8. '	diff' → logprob: -14.500262260437012
    9. '_min' → logprob: -14.625262260437012
    10. 'if' → logprob: -14.625262260437012

Token 1078: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.03262336552143097
    2. '<' → logprob: -3.532623291015625
    3. ' !=' → logprob: -5.907623291015625
    4. '<int' → logprob: -9.532623291015625
    5. '<float' → logprob: -10.532623291015625
    6. '<>' → logprob: -11.782623291015625
    7. '<n' → logprob: -11.907623291015625
    8. '!=-' → logprob: -11.907623291015625
    9. ' <' → logprob: -12.157623291015625
    10. '>' → logprob: -12.532623291015625

Token 1079: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -9.088346359931165e-07
    2. ' float' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.625
    4. '
' → logprob: -20.0
    5. '```' → logprob: -20.5
    6. '=float' → logprob: -21.375
    7. '	float' → logprob: -21.5
    8. '(float' → logprob: -21.625
    9. 'flo' → logprob: -22.375
    10. ',float' → logprob: -23.5

Token 1080: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.02165413647890091
    2. ''in' → logprob: -4.02165412902832
    3. ''s' → logprob: -6.64665412902832
    4. ''' → logprob: -6.64665412902832
    5. ''as' → logprob: -8.27165412902832
    6. ''h' → logprob: -9.64665412902832
    7. ''ins' → logprob: -9.77165412902832
    8. ''name' → logprob: -10.14665412902832
    9. ''ex' → logprob: -10.27165412902832
    10. ''on' → logprob: -10.52165412902832

Token 1081: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0581534244120121
    2. ''' → logprob: -3.4331533908843994
    3. ''in' → logprob: -3.8081533908843994
    4. ''ex' → logprob: -6.6831536293029785
    5. ''ap' → logprob: -8.18315315246582
    6. ''s' → logprob: -9.30815315246582
    7. ''un' → logprob: -9.93315315246582
    8. ''app' → logprob: -10.55815315246582
    9. ''ad' → logprob: -10.55815315246582
    10. ''en' → logprob: -10.80815315246582

Token 1082: '')' (ID: 1542)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.01815556176006794
    2. 'else' → logprob: -4.018155574798584
    3. ')' → logprob: -12.143155097961426
    4. ' )' → logprob: -16.143156051635742
    5. '       ' → logprob: -17.143156051635742
    6. '        ' → logprob: -17.143156051635742
    7. '	else' → logprob: -18.643156051635742
    8. 'Else' → logprob: -18.768156051635742
    9. '_else' → logprob: -19.143156051635742
    10. ' ' → logprob: -19.393156051635742

Token 1083: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3869393765926361
    2. ' else' → logprob: -1.1369394063949585
    3. '       ' → logprob: -10.88693904876709
    4. 'return' → logprob: -11.26193904876709
    5. '
' → logprob: -11.38693904876709
    6. '   ' → logprob: -12.01193904876709
    7. '	else' → logprob: -12.26193904876709
    8. ' or' → logprob: -13.01193904876709
    9. '```' → logprob: -13.01193904876709
    10. '<|end|>' → logprob: -13.26193904876709

Token 1084: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00028183520771563053
    2. '0' → logprob: -8.750282287597656
    3. ' -' → logprob: -9.625282287597656
    4. 'None' → logprob: -9.875282287597656
    5. 'float' → logprob: -13.125282287597656
    6. '-f' → logprob: -13.250282287597656
    7. '   ' → logprob: -14.500282287597656
    8. '-inf' → logprob: -14.500282287597656
    9. ' None' → logprob: -15.500282287597656
    10. '-none' → logprob: -15.625282287597656

Token 1085: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007925973040983081
    2. '0' → logprob: -7.500792503356934
    3. 'None' → logprob: -8.500792503356934
    4. '-f' → logprob: -11.250792503356934
    5. 'float' → logprob: -11.250792503356934
    6. '-inf' → logprob: -12.500792503356934
    7. ' -' → logprob: -12.625792503356934
    8. '-none' → logprob: -13.750792503356934
    9. '-print' → logprob: -15.125792503356934
    10. '-ex' → logprob: -15.750792503356934

Token 1086: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1087: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1088: ' Fortune' (ID: 57526)
  Prédit: 'Gre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Gre' → logprob: -0.5961982011795044
    2. 'Br' → logprob: -2.346198081970215
    3. 'Solution' → logprob: -2.721198081970215
    4. 'DP' → logprob: -2.971198081970215
    5. 'Segment' → logprob: -3.221198081970215
    6. 'Memo' → logprob: -3.471198081970215
    7. 'Simple' → logprob: -3.721198081970215
    8. 'Dynamic' → logprob: -3.721198081970215
    9. 'Optim' → logprob: -3.971198081970215
    10. 'Test' → logprob: -4.346198081970215

Token 1089: 'Years' (ID: 64708)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.03723784163594246
    2. 'Segment' → logprob: -3.6622378826141357
    3. 'Cookie' → logprob: -4.787237644195557
    4. ' Teller' → logprob: -6.912237644195557
    5. 'Fort' → logprob: -7.412237644195557
    6. 'Finder' → logprob: -8.412238121032715
    7. 'Hunter' → logprob: -9.162238121032715
    8. 'Extractor' → logprob: -9.412238121032715
    9. ' teller' → logprob: -9.662238121032715
    10. 'Splitter' → logprob: -9.662238121032715

Token 1090: 'Predict' (ID: 97802)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024701956659555435
    2. ':
' → logprob: -4.524702072143555
    3. '(' → logprob: -5.274702072143555
    4. '(Abstract' → logprob: -5.399702072143555
    5. 'Segment' → logprob: -6.024702072143555
    6. '(S' → logprob: -6.649702072143555
    7. '(
' → logprob: -10.274702072143555
    8. 'Abstract' → logprob: -10.899702072143555
    9. 'Seg' → logprob: -10.899702072143555
    10. 'Segments' → logprob: -11.274702072143555

Token 1091: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.017771758139133453
    2. 'er' → logprob: -4.1427717208862305
    3. 'ion' → logprob: -6.7677717208862305
    4. 'ed' → logprob: -8.26777172088623
    5. 's' → logprob: -8.64277172088623
    6. 'tor' → logprob: -10.51777172088623
    7. '(or' → logprob: -10.64277172088623
    8. 'ctor' → logprob: -10.76777172088623
    9. 'ct' → logprob: -11.14277172088623
    10. 'ior' → logprob: -11.64277172088623

Token 1092: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22652621567249298
    2. '(Abstract' → logprob: -1.6015262603759766
    3. ':
' → logprob: -7.101526260375977
    4. '(' → logprob: -8.351526260375977
    5. '<Abstract' → logprob: -10.351526260375977
    6. '(S' → logprob: -12.101526260375977
    7. '):' → logprob: -13.351526260375977
    8. '_Abstract' → logprob: -13.351526260375977
    9. ' :' → logprob: -13.476526260375977
    10. 'Abstract' → logprob: -13.476526260375977

Token 1093: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026741522015072405
    2. 'def' → logprob: -8.500267028808594
    3. 'class' → logprob: -10.000267028808594
    4. '```' → logprob: -11.125267028808594
    5. ' def' → logprob: -12.875267028808594
    6. '   ' → logprob: -14.875267028808594
    7. '	def' → logprob: -15.000267028808594
    8. '    
' → logprob: -15.250267028808594
    9. '
' → logprob: -16.125267028808594
    10. ':' → logprob: -16.125267028808594

Token 1094: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04263485595583916
    2. '   ' → logprob: -3.292634963989258
    3. ' def' → logprob: -5.417634963989258
    4. 'class' → logprob: -8.917634963989258
    5. '```' → logprob: -11.667634963989258
    6. '__' → logprob: -13.667634963989258
    7. '	def' → logprob: -14.167634963989258
    8. ' ' → logprob: -15.167634963989258
    9. ':' → logprob: -15.917634963989258
    10. ':def' → logprob: -16.167634963989258

Token 1095: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.47856405377388
    2. 'init' → logprob: -0.9785640239715576
    3. '```' → logprob: -6.353564262390137
    4. 'def' → logprob: -6.603564262390137
    5. '_init' → logprob: -7.728564262390137
    6. ' __' → logprob: -7.853564262390137
    7. 'segment' → logprob: -8.228564262390137
    8. '...' → logprob: -8.978564262390137
    9. '___' → logprob: -9.603564262390137
    10. '____' → logprob: -10.978564262390137

Token 1096: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.5
    3. 'ini' → logprob: -20.375
    4. 'in' → logprob: -20.75
    5. '_init' → logprob: -20.75
    6. 'def' → logprob: -21.125
    7. 'code' → logprob: -21.5
    8. 'initi' → logprob: -21.5
    9. '	init' → logprob: -21.5
    10. '(init' → logprob: -22.125

Token 1097: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0021874953527003527
    2. '(' → logprob: -7.002187728881836
    3. 'self' → logprob: -7.877187728881836
    4. ' (' → logprob: -7.877187728881836
    5. '__(' → logprob: -8.877187728881836
    6. '<|end|>' → logprob: -8.877187728881836
    7. '(
' → logprob: -9.127187728881836
    8. '   ' → logprob: -10.252187728881836
    9. ',' → logprob: -10.252187728881836
    10. '```' → logprob: -11.502187728881836

Token 1098: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.9650025428272784e-05
    2. ' self' → logprob: -10.375040054321289
    3. '(self' → logprob: -12.875040054321289
    4. 'number' → logprob: -13.125040054321289
    5. '
' → logprob: -13.375040054321289
    6. '   ' → logprob: -14.375040054321289
    7. '       ' → logprob: -14.500040054321289
    8. ')' → logprob: -14.625040054321289
    9. ',' → logprob: -14.875040054321289
    10. ',self' → logprob: -16.25004005432129

Token 1099: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08288022130727768
    2. ',' → logprob: -2.5828802585601807
    3. '(self' → logprob: -5.832880020141602
    4. ' self' → logprob: -7.457880020141602
    5. '   ' → logprob: -8.457880020141602
    6. ',self' → logprob: -9.082880020141602
    7. ' (' → logprob: -10.082880020141602
    8. 'number' → logprob: -10.457880020141602
    9. ')' → logprob: -10.957880020141602
    10. '       ' → logprob: -11.082880020141602

Token 1100: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.00388071546331048
    2. 'self' → logprob: -6.253880500793457
    3. 'year' → logprob: -6.878880500793457
    4. ' number' → logprob: -8.128880500793457
    5. 'years' → logprob: -8.878880500793457
    6. 'numbers' → logprob: -8.878880500793457
    7. 'segment' → logprob: -9.253880500793457
    8. 'prediction' → logprob: -9.378880500793457
    9. ')' → logprob: -10.378880500793457
    10. 'pred' → logprob: -11.128880500793457

Token 1101: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00023560250701848418
    2. 'str' → logprob: -8.500235557556152
    3. '_string' → logprob: -10.875235557556152
    4. ':' → logprob: -12.000235557556152
    5. 's' → logprob: -13.375235557556152
    6. ':str' → logprob: -13.375235557556152
    7. 'Str' → logprob: -14.000235557556152
    8. '_strings' → logprob: -14.500235557556152
    9. '_s' → logprob: -14.500235557556152
    10. ')' → logprob: -14.625235557556152

Token 1102: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9027791495318525e-05
    2. '):' → logprob: -11.000019073486328
    3. '):
' → logprob: -13.375019073486328
    4. ':str' → logprob: -14.500019073486328
    5. ')' → logprob: -15.375019073486328
    6. '```' → logprob: -17.375019073486328
    7. ' :' → logprob: -17.500019073486328
    8. '_:' → logprob: -17.875019073486328
    9. '   ' → logprob: -18.375019073486328
    10. '=' → logprob: -18.875019073486328

Token 1103: ' str' (ID: 989)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.38828927278518677
    2. 'str' → logprob: -1.138289213180542
    3. ' number' → logprob: -7.138289451599121
    4. ' str' → logprob: -7.513289451599121
    5. ':str' → logprob: -10.763289451599121
    6. 'self' → logprob: -11.013289451599121
    7. ')' → logprob: -11.013289451599121
    8. 'string' → logprob: -11.388289451599121
    9. '       ' → logprob: -12.513289451599121
    10. '   ' → logprob: -13.013289451599121

Token 1104: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6363419890403748
    2. '):' → logprob: -0.7613419890403748
    3. ')' → logprob: -6.3863420486450195
    4. '       ' → logprob: -6.6363420486450195
    5. '   ' → logprob: -7.5113420486450195
    6. '):
' → logprob: -8.88634204864502
    7. ':' → logprob: -10.13634204864502
    8. '):

' → logprob: -12.63634204864502
    9. ''):
' → logprob: -13.26134204864502
    10. ',' → logprob: -13.63634204864502

Token 1105: ' strategy' (ID: 10772)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5868502259254456
    2. 'segment' → logprob: -0.9618502259254456
    3. 'method' → logprob: -3.961850166320801
    4. 'min' → logprob: -4.461850166320801
    5. ' max' → logprob: -4.836850166320801
    6. 'k' → logprob: -5.461850166320801
    7. 'segments' → logprob: -5.586850166320801
    8. 'years' → logprob: -5.836850166320801
    9. ' segment' → logprob: -6.086850166320801
    10. 'num' → logprob: -6.211850166320801

Token 1106: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014516636729240417
    2. '):' → logprob: -6.75145149230957
    3. '=' → logprob: -8.37645149230957
    4. '=None' → logprob: -10.00145149230957
    5. '):
' → logprob: -13.37645149230957
    6. ')' → logprob: -13.50145149230957
    7. ':str' → logprob: -13.62645149230957
    8. ' :' → logprob: -14.25145149230957
    9. '='' → logprob: -15.75145149230957
    10. '}:' → logprob: -15.75145149230957

Token 1107: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.041583143174648285
    2. 'Abstract' → logprob: -3.7915830612182617
    3. 'str' → logprob: -4.041583061218262
    4. 'Recursive' → logprob: -7.666583061218262
    5. ' Segment' → logprob: -9.791583061218262
    6. 'Iter' → logprob: -10.666583061218262
    7. 'int' → logprob: -10.916583061218262
    8. 'Iterable' → logprob: -11.916583061218262
    9. ' str' → logprob: -12.041583061218262
    10. 'Seg' → logprob: -12.416583061218262

Token 1108: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: 0.0
    2. ''er' → logprob: -17.25
    3. '       ' → logprob: -17.75
    4. '   ' → logprob: -18.0
    5. 'ation' → logprob: -18.125
    6. 'method' → logprob: -18.375
    7. 'ter' → logprob: -18.875
    8. ')' → logprob: -19.0
    9. '('' → logprob: -19.375
    10. 'erer' → logprob: -19.375

Token 1109: ' =' (ID: 314)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.19462358951568604
    2. '):' → logprob: -1.819623589515686
    3. ')' → logprob: -4.3196234703063965
    4. '=' → logprob: -6.9446234703063965
    5. '):
' → logprob: -8.694623947143555
    6. ':' → logprob: -8.944623947143555
    7. '=None' → logprob: -9.069623947143555
    8. '   ' → logprob: -10.194623947143555
    9. '):

' → logprob: -10.819623947143555
    10. '<|end|>' → logprob: -11.694623947143555

Token 1110: ' None' (ID: 4662)
  Prédit: 'Recursive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Recursive' → logprob: -0.06040189415216446
    2. 'None' → logprob: -2.9354019165039062
    3. ' Recursive' → logprob: -5.560401916503906
    4. 'Iter' → logprob: -6.810401916503906
    5. '=None' → logprob: -8.310401916503906
    6. ' None' → logprob: -8.310401916503906
    7. 'Rec' → logprob: -10.310401916503906
    8. 'Iterable' → logprob: -12.185401916503906
    9. '   ' → logprob: -12.435401916503906
    10. '=' → logprob: -12.685401916503906

Token 1111: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.029845133423805237
    2. '):' → logprob: -3.5298452377319336
    3. '   ' → logprob: -10.154845237731934
    4. ')' → logprob: -10.279845237731934
    5. '):
' → logprob: -11.529845237731934
    6. '       ' → logprob: -12.404845237731934
    7. ':' → logprob: -13.154845237731934
    8. '=None' → logprob: -13.404845237731934
    9. ' ):
' → logprob: -13.529845237731934
    10. '=' → logprob: -13.904845237731934

Token 1112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017656205454841256
    2. '   ' → logprob: -6.626765727996826
    3. 'self' → logprob: -8.376765251159668
    4. '```' → logprob: -9.001765251159668
    5. ' self' → logprob: -10.001765251159668
    6. ',' → logprob: -11.501765251159668
    7. ':' → logprob: -12.001765251159668
    8. ' ' → logprob: -12.876765251159668
    9. '           ' → logprob: -12.876765251159668
    10. ')' → logprob: -13.001765251159668

Token 1113: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0008274946012534201
    2. ' self' → logprob: -7.500827312469482
    3. '       ' → logprob: -8.25082778930664
    4. 'if' → logprob: -11.25082778930664
    5. '	self' → logprob: -15.75082778930664
    6. ' if' → logprob: -15.87582778930664
    7. '   ' → logprob: -16.37582778930664
    8. 'super' → logprob: -19.75082778930664
    9. ' ' → logprob: -20.25082778930664
    10. '	' → logprob: -20.62582778930664

Token 1114: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.000543261703569442
    2. '.strategy' → logprob: -8.000543594360352
    3. 'number' → logprob: -9.125543594360352
    4. '.' → logprob: -9.250543594360352
    5. 'strategy' → logprob: -13.625543594360352
    6. '.segment' → logprob: -13.750543594360352
    7. '.str' → logprob: -15.000543594360352
    8. ' .' → logprob: -15.750543594360352
    9. '	number' → logprob: -17.75054359436035
    10. '._' → logprob: -17.75054359436035

Token 1115: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -4.961759259458631e-06
    2. 'str' → logprob: -12.250004768371582
    3. '_string' → logprob: -16.8750057220459
    4. 'Str' → logprob: -17.1250057220459
    5. '_strategy' → logprob: -17.3750057220459
    6. '       ' → logprob: -17.8750057220459
    7. '   ' → logprob: -17.8750057220459
    8. '_s' → logprob: -18.1250057220459
    9. '_' → logprob: -18.1250057220459
    10. '__' → logprob: -18.6250057220459

Token 1116: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00020616286201402545
    2. ' =' → logprob: -8.500205993652344
    3. '=self' → logprob: -13.750205993652344
    4. '       ' → logprob: -14.250205993652344
    5. '   ' → logprob: -14.625205993652344
    6. '    ' → logprob: -16.250205993652344
    7. ',' → logprob: -16.250205993652344
    8. '        ' → logprob: -16.500205993652344
    9. ')' → logprob: -16.500205993652344
    10. 'self' → logprob: -17.250205993652344

Token 1117: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.0031777136027812958
    2. ' number' → logprob: -5.753177642822266
    3. '(number' → logprob: -18.128177642822266
    4. '	number' → logprob: -18.128177642822266
    5. '   ' → logprob: -18.253177642822266
    6. '    ' → logprob: -19.128177642822266
    7. '
' → logprob: -19.503177642822266
    8. 'strategy' → logprob: -20.003177642822266
    9. '       ' → logprob: -20.253177642822266
    10. ' ' → logprob: -20.753177642822266

Token 1118: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.0206720617134124e-05
    2. 'str' → logprob: -11.50001049041748
    3. 'Str' → logprob: -18.000009536743164
    4. '```' → logprob: -19.375009536743164
    5. 's' → logprob: -19.500009536743164
    6. '_STR' → logprob: -19.750009536743164
    7. '	str' → logprob: -19.750009536743164
    8. '__' → logprob: -19.875009536743164
    9. ''_' → logprob: -20.250009536743164
    10. 'string' → logprob: -20.500009536743164

Token 1119: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.893480243277736e-05
    2. 'self' → logprob: -10.500039100646973
    3. '<|end|>' → logprob: -12.750039100646973
    4. '
' → logprob: -12.875039100646973
    5. ',' → logprob: -12.875039100646973
    6. '   ' → logprob: -13.625039100646973
    7. 'if' → logprob: -14.875039100646973
    8. '           ' → logprob: -15.125039100646973
    9. '        
' → logprob: -15.250039100646973
    10. ' if' → logprob: -15.500039100646973

Token 1120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002090899972245097
    2. 'self' → logprob: -6.252090930938721
    3. '<|end|>' → logprob: -9.627090454101562
    4. '
' → logprob: -10.127090454101562
    5. ' self' → logprob: -11.127090454101562
    6. '```' → logprob: -11.377090454101562
    7. '   ' → logprob: -11.502090454101562
    8. ',' → logprob: -11.627090454101562
    9. '           ' → logprob: -13.252090454101562
    10. '{
' → logprob: -13.377090454101562

Token 1121: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014767316170036793
    2. '       ' → logprob: -4.264767169952393
    3. 'if' (adapté à ' if') → logprob: -7.514767169952393
    4. ' self' → logprob: -9.76476764678955
    5. ' if' → logprob: -14.26476764678955
    6. '   ' → logprob: -14.51476764678955
    7. '
' → logprob: -16.139766693115234
    8. '	self' → logprob: -18.014766693115234
    9. '           ' → logprob: -19.139766693115234
    10. 'def' → logprob: -19.514766693115234

Token 1122: ' strategy' (ID: 10772)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -0.01416350994259119
    2. ' strategy' → logprob: -4.264163494110107
    3. 'strateg' → logprob: -17.389163970947266
    4. '   ' → logprob: -19.639163970947266
    5. '_strategy' → logprob: -19.889163970947266
    6. '(strategy' → logprob: -20.014163970947266
    7. 'Strategy' → logprob: -20.514163970947266
    8. 'not' → logprob: -21.139163970947266
    9. '       ' → logprob: -21.139163970947266
    10. '.strategy' → logprob: -21.139163970947266

Token 1123: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.693147599697113
    2. ' is' → logprob: -0.693147599697113
    3. '	is' → logprob: -15.193147659301758
    4. '=is' → logprob: -16.818147659301758
    5. '=None' → logprob: -16.943147659301758
    6. '
' → logprob: -17.693147659301758
    7. '=' → logprob: -17.693147659301758
    8. '   ' → logprob: -17.818147659301758
    9. ')is' → logprob: -17.943147659301758
    10. 'in' → logprob: -18.318147659301758

Token 1124: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.7014437364414334e-05
    2. ' None' → logprob: -11.00002670288086
    3. 'not' → logprob: -11.50002670288086
    4. '   ' → logprob: -15.75002670288086
    5. ' not' → logprob: -17.12502670288086
    6. 'none' → logprob: -18.87502670288086
    7. 'Not' → logprob: -19.12502670288086
    8. '=None' → logprob: -19.62502670288086
    9. '_None' → logprob: -20.37502670288086
    10. '       ' → logprob: -21.25002670288086

Token 1125: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3167596459388733
    2. ':' → logprob: -1.3167595863342285
    3. '       ' → logprob: -6.1917595863342285
    4. ' or' → logprob: -7.5667595863342285
    5. ',' → logprob: -8.066760063171387
    6. '():
' → logprob: -9.066760063171387
    7. '           ' → logprob: -9.191760063171387
    8. '<|end|>' → logprob: -9.316760063171387
    9. '=' → logprob: -9.691760063171387
    10. '<|end|>' → logprob: -9.816760063171387

Token 1126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009498942643404007
    2. 'self' → logprob: -4.8844990730285645
    3. '       ' → logprob: -6.8844990730285645
    4. ':
' → logprob: -8.134498596191406
    5. ' self' → logprob: -8.259498596191406
    6. '   ' → logprob: -9.259498596191406
    7. ':' → logprob: -9.509498596191406
    8. '(self' → logprob: -10.634498596191406
    9. '
' → logprob: -10.884498596191406
    10. '               ' → logprob: -11.259498596191406

Token 1127: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.020052088424563408
    2. 'strategy' → logprob: -4.020051956176758
    3. ' self' → logprob: -6.645051956176758
    4. '           ' → logprob: -8.020051956176758
    5. ' strategy' → logprob: -8.770051956176758
    6. '       ' → logprob: -9.145051956176758
    7. 'strateg' → logprob: -12.395051956176758
    8. '   ' → logprob: -12.895051956176758
    9. '_strategy' → logprob: -14.270051956176758
    10. '=self' → logprob: -14.520051956176758

Token 1128: ' Choose' (ID: 25151)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009428679943084717
    2. 'strategy' → logprob: -4.88442850112915
    3. '           ' → logprob: -6.75942850112915
    4. ' self' → logprob: -7.38442850112915
    5. ' strategy' → logprob: -10.759428977966309
    6. '       ' → logprob: -11.509428977966309
    7. '#' → logprob: -12.384428977966309
    8. 'strateg' → logprob: -13.509428977966309
    9. '   ' → logprob: -13.634428977966309
    10. '               ' → logprob: -15.384428977966309

Token 1129: ' strategy' (ID: 10772)
  Prédit: 'Recursive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Recursive' → logprob: -0.08506482094526291
    2. 'Iter' → logprob: -2.5850648880004883
    3. ' Recursive' → logprob: -5.335064888000488
    4. 'strategy' → logprob: -7.335064888000488
    5. 'self' → logprob: -7.585064888000488
    6. 'Rec' → logprob: -9.585064888000488
    7. '           ' → logprob: -10.460064888000488
    8. ' strategy' → logprob: -10.710064888000488
    9. '       ' → logprob: -10.710064888000488
    10. ' Iter' → logprob: -11.335064888000488

Token 1130: ' based' (ID: 4122)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03582506999373436
    2. ' =' → logprob: -4.160825252532959
    3. '=self' → logprob: -4.785825252532959
    4. 'if' → logprob: -5.285825252532959
    5. 'self' → logprob: -5.785825252532959
    6. ' if' → logprob: -6.160825252532959
    7. '           ' → logprob: -7.160825252532959
    8. ' self' → logprob: -9.6608247756958
    9. '       ' → logprob: -9.9108247756958
    10. '=
' → logprob: -10.0358247756958

Token 1131: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -4.263011578586884e-05
    2. ' on' → logprob: -10.625042915344238
    3. 'default' → logprob: -12.375042915344238
    4. 'd' → logprob: -12.750042915344238
    5. '       ' → logprob: -13.250042915344238
    6. 'ed' → logprob: -13.625042915344238
    7. 'ont' → logprob: -13.750042915344238
    8. 'f' → logprob: -14.250042915344238
    9. '_on' → logprob: -14.250042915344238
    10. 'ased' → logprob: -14.250042915344238

Token 1132: ' length' (ID: 5517)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00010115911572938785
    2. 'self' → logprob: -9.250101089477539
    3. 'length' → logprob: -12.875101089477539
    4. ' len' → logprob: -13.000101089477539
    5. 'strategy' → logprob: -17.00010108947754
    6. '(len' → logprob: -17.25010108947754
    7. '   ' → logprob: -17.25010108947754
    8. '=len' → logprob: -19.12510108947754
    9. '       ' → logprob: -19.62510108947754
    10. '	len' → logprob: -19.87510108947754

Token 1133: ' of' (ID: 328)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5205343961715698
    2. ' if' → logprob: -1.0205343961715698
    3. '           ' → logprob: -3.1455345153808594
    4. '       ' → logprob: -6.895534515380859
    5. 'self' → logprob: -6.895534515380859
    6. ' self' → logprob: -8.89553451538086
    7. 'len' → logprob: -9.52053451538086
    8. ' and' → logprob: -10.14553451538086
    9. '               ' → logprob: -10.77053451538086
    10. '(len' → logprob: -11.64553451538086

Token 1134: ' the' (ID: 290)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.00021843716967850924
    2. 'self' → logprob: -8.500218391418457
    3. ' number' → logprob: -11.125218391418457
    4. 'the' → logprob: -16.250219345092773
    5. '(number' → logprob: -17.375219345092773
    6. '```' → logprob: -17.500219345092773
    7. '   ' → logprob: -18.750219345092773
    8. ' self' → logprob: -19.125219345092773
    9. '	number' → logprob: -19.250219345092773
    10. '
' → logprob: -19.500219345092773

Token 1135: ' string' (ID: 1621)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -1.306760805164231e-05
    2. ' number' → logprob: -11.25001335144043
    3. 'string' → logprob: -18.25001335144043
    4. '.number' → logprob: -18.87501335144043
    5. '_number' → logprob: -21.12501335144043
    6. '
' → logprob: -21.50001335144043
    7. '	number' → logprob: -22.12501335144043
    8. '[number' → logprob: -22.62501335144043
    9. '```' → logprob: -22.87501335144043
    10. '(number' → logprob: -23.50001335144043

Token 1136: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.531133234500885
    2. '           ' → logprob: -1.0311331748962402
    3. 'if' → logprob: -2.9061331748962402
    4. ' and' → logprob: -7.90613317489624
    5. ' self' → logprob: -8.906133651733398
    6. 'self' → logprob: -9.031133651733398
    7. '       ' → logprob: -9.281133651733398
    8. ':' → logprob: -11.406133651733398
    9. ',' → logprob: -11.406133651733398
    10. '               ' → logprob: -12.281133651733398

Token 1137: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004219670780003071
    2. ' if' → logprob: -6.3792195320129395
    3. 'if' → logprob: -6.5042195320129395
    4. 'self' → logprob: -7.1292195320129395
    5. ' self' → logprob: -8.754220008850098
    6. ' and' → logprob: -11.004220008850098
    7. '(self' → logprob: -11.879220008850098
    8. ':' → logprob: -11.879220008850098
    9. '=' → logprob: -12.254220008850098
    10. '               ' → logprob: -12.504220008850098

Token 1138: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2521814703941345
    2. 'self' → logprob: -1.5021815299987793
    3. ' if' → logprob: -8.502181053161621
    4. '           ' → logprob: -10.502181053161621
    5. ' self' → logprob: -10.752181053161621
    6. '       ' → logprob: -14.627181053161621
    7. '```' → logprob: -18.502182006835938
    8. '   ' → logprob: -18.752182006835938
    9. 'length' → logprob: -19.752182006835938
    10. '               ' → logprob: -20.877182006835938

Token 1139: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005427849246188998
    2. ' len' → logprob: -8.000542640686035
    3. 'self' → logprob: -8.500542640686035
    4. '           ' → logprob: -12.500542640686035
    5. '(len' → logprob: -16.50054359436035
    6. ' self' → logprob: -17.37554359436035
    7. '   ' → logprob: -17.50054359436035
    8. '       ' → logprob: -17.50054359436035
    9. '               ' → logprob: -18.62554359436035
    10. '```' → logprob: -19.87554359436035

Token 1140: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.03127526491880417
    2. '(self' → logprob: -3.5312752723693848
    3. 'number' → logprob: -6.531275272369385
    4. 'self' → logprob: -9.656274795532227
    5. '(' → logprob: -13.406274795532227
    6. ' number' → logprob: -15.281274795532227
    7. ' (' → logprob: -15.656274795532227
    8. '[number' → logprob: -16.031274795532227
    9. '```' → logprob: -16.156274795532227
    10. '.number' → logprob: -16.656274795532227

Token 1141: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00019853383128065616
    2. 'self' → logprob: -9.250198364257812
    3. 'str' → logprob: -9.375198364257812
    4. ')' → logprob: -12.125198364257812
    5. '(self' → logprob: -12.500198364257812
    6. '>' → logprob: -12.875198364257812
    7. '```' → logprob: -13.625198364257812
    8. '<=' → logprob: -13.875198364257812
    9. '_s' → logprob: -14.125198364257812
    10. '   ' → logprob: -14.375198364257812

Token 1142: ')' (ID: 8)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8009461760520935
    2. '<=' → logprob: -0.8009461760520935
    3. ')' → logprob: -2.9259462356567383
    4. '>' → logprob: -3.9259462356567383
    5. '<' → logprob: -4.050946235656738
    6. ' <' → logprob: -4.675946235656738
    7. ' >' → logprob: -6.800946235656738
    8. ')<=' → logprob: -7.175946235656738
    9. '   ' → logprob: -9.675946235656738
    10. '>=' → logprob: -9.800946235656738

Token 1143: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0993872657418251
    2. ' <=' → logprob: -2.9743871688842773
    3. '>' → logprob: -3.7243871688842773
    4. '<' → logprob: -3.9743871688842773
    5. ' <' → logprob: -7.974387168884277
    6. ' >' → logprob: -8.474387168884277
    7. '>=' → logprob: -10.224387168884277
    8. '```' → logprob: -11.599387168884277
    9. '   ' → logprob: -12.099387168884277
    10. '<len' → logprob: -13.349387168884277

Token 1144: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1705501675605774
    2. '20' → logprob: -2.1705501079559326
    3. '15' → logprob: -3.6705501079559326
    4. '100' → logprob: -4.545550346374512
    5. '12' → logprob: -5.670550346374512
    6. '9' → logprob: -6.920550346374512
    7. '50' → logprob: -7.170550346374512
    8. '18' → logprob: -7.295550346374512
    9. '7' → logprob: -7.920550346374512
    10. '30' → logprob: -9.045550346374512

Token 1145: '20' (ID: 455)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.09015616774559021
    2. '20' → logprob: -3.090156078338623
    3. '15' → logprob: -4.090156078338623
    4. '100' → logprob: -4.340156078338623
    5. '12' → logprob: -5.090156078338623
    6. '50' → logprob: -6.715156078338623
    7. '18' → logprob: -6.965156078338623
    8. '9' → logprob: -7.090156078338623
    9. '7' → logprob: -7.465156078338623
    10. '30' → logprob: -7.965156078338623

Token 1146: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17375290393829346
    2. '           ' → logprob: -2.423752784729004
    3. ':' → logprob: -2.673752784729004
    4. '):
' → logprob: -7.048752784729004
    5. '               ' → logprob: -7.298752784729004
    6. ' and' → logprob: -8.423752784729004
    7. '       ' → logprob: -10.548752784729004
    8. '():
' → logprob: -10.798752784729004
    9. ',' → logprob: -10.923752784729004
    10. ' or' → logprob: -11.548752784729004

Token 1147: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00560403848066926
    2. '               ' → logprob: -5.255604267120361
    3. ':
' → logprob: -9.130603790283203
    4. ':' → logprob: -9.255603790283203
    5. 'self' → logprob: -9.880603790283203
    6. ' self' → logprob: -10.130603790283203
    7. '
' → logprob: -10.505603790283203
    8. '):
' → logprob: -11.255603790283203
    9. '       ' → logprob: -11.630603790283203
    10. ' and' → logprob: -12.755603790283203

Token 1148: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002871207892894745
    2. 'strategy' → logprob: -6.252871036529541
    3. ' self' → logprob: -7.002871036529541
    4. ' strategy' → logprob: -10.8778715133667
    5. '           ' → logprob: -11.8778715133667
    6. '               ' → logprob: -12.0028715133667
    7. '                   ' → logprob: -15.3778715133667
    8. '   ' → logprob: -15.6278715133667
    9. 'strateg' → logprob: -15.7528715133667
    10. '_strategy' → logprob: -16.127870559692383

Token 1149: '.segment' (ID: 137597)
  Prédit: '.strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strategy' → logprob: -0.10098712891340256
    2. 'strategy' → logprob: -2.350987195968628
    3. '.number' → logprob: -8.850987434387207
    4. 'number' → logprob: -8.850987434387207
    5. '.segment' → logprob: -9.100987434387207
    6. '.str' → logprob: -9.100987434387207
    7. '._' → logprob: -9.350987434387207
    8. '.predict' → logprob: -9.850987434387207
    9. 'str' → logprob: -10.100987434387207
    10. '_strategy' → logprob: -11.350987434387207

Token 1150: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.008981835097074509
    2. '(strategy' → logprob: -5.883981704711914
    3. '=' → logprob: -6.633981704711914
    4. '_strategy' → logprob: -6.883981704711914
    5. '(str' → logprob: -7.008981704711914
    6. ' =' → logprob: -7.508981704711914
    7. '=str' → logprob: -7.758981704711914
    8. '_str' → logprob: -7.758981704711914
    9. 'ation' → logprob: -8.008981704711914
    10. 'str' → logprob: -8.133981704711914

Token 1151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001170225441455841
    2. ' =' → logprob: -6.7511701583862305
    3. '=

' → logprob: -19.751171112060547
    4. '＝' → logprob: -20.001171112060547
    5. '=
' → logprob: -20.501171112060547
    6. '=}' → logprob: -21.751171112060547
    7. ':' → logprob: -22.251171112060547
    8. '=self' → logprob: -23.126171112060547
    9. '=None' → logprob: -23.251171112060547
    10. ' ' → logprob: -23.501171112060547

Token 1152: ' Recursive' (ID: 174533)
  Prédit: 'Recursive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Recursive' → logprob: -8.061054359131958e-06
    2. ' Recursive' → logprob: -11.750007629394531
    3. 'Rec' → logprob: -16.50000762939453
    4. '_recursive' → logprob: -19.62500762939453
    5. 'Recurring' → logprob: -21.12500762939453
    6. 'recursive' → logprob: -22.00000762939453
    7. ' recursive' → logprob: -22.87500762939453
    8. '   ' → logprob: -24.12500762939453
    9. ' recursively' → logprob: -24.50000762939453
    10. '递' → logprob: -25.37500762939453

Token 1153: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -3.531315314830863e-06
    2. 'segment' → logprob: -13.000003814697266
    3. '_segment' → logprob: -14.000003814697266
    4. 'Recursive' → logprob: -15.375003814697266
    5. 'Seg' → logprob: -16.500003814697266
    6. '(' → logprob: -17.375003814697266
    7. 'self' → logprob: -18.125003814697266
    8. ' Segment' → logprob: -18.250003814697266
    9. '```' → logprob: -18.375003814697266
    10. '(self' → logprob: -19.250003814697266

Token 1154: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00034273360506631434
    2. 'Segment' → logprob: -8.00034236907959
    3. 'ter' → logprob: -12.00034236907959
    4. 'Seg' → logprob: -15.25034236907959
    5. 'ater' → logprob: -16.000343322753906
    6. 'segment' → logprob: -16.125343322753906
    7. 'Iter' → logprob: -16.250343322753906
    8. '```' → logprob: -16.375343322753906
    9. 'e' → logprob: -16.500343322753906
    10. '_segment' → logprob: -16.750343322753906

Token 1155: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.625001907348633
    3. 'number' → logprob: -14.625001907348633
    4. '(
' → logprob: -15.625001907348633
    5. '[number' → logprob: -15.750001907348633
    6. '(self' → logprob: -16.250001907348633
    7. '(numbers' → logprob: -17.125001907348633
    8. '```' → logprob: -17.125001907348633
    9. '(numero' → logprob: -17.500001907348633
    10. '(object' → logprob: -17.875001907348633

Token 1156: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -2.451116051815916e-05
    2. 'str' → logprob: -10.625024795532227
    3. 'Str' → logprob: -16.125024795532227
    4. 'self' → logprob: -18.125024795532227
    5. '_string' → logprob: -18.250024795532227
    6. ')' → logprob: -18.375024795532227
    7. 'string' → logprob: -18.625024795532227
    8. '	str' → logprob: -19.500024795532227
    9. '$str' → logprob: -20.000024795532227
    10. '_STR' → logprob: -20.250024795532227

Token 1157: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03948574140667915
    2. ')' → logprob: -3.2894856929779053
    3. '       ' → logprob: -6.914485931396484
    4. '           ' → logprob: -7.789485931396484
    5. 'else' → logprob: -10.914485931396484
    6. ')
' → logprob: -11.539485931396484
    7. '               ' → logprob: -12.164485931396484
    8. ')

' → logprob: -13.539485931396484
    9. ' else' → logprob: -15.289485931396484
    10. '   ' → logprob: -15.414485931396484

Token 1158: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022760258987545967
    2. '           ' → logprob: -4.272760391235352
    3. 'else' → logprob: -4.772760391235352
    4. ' else' → logprob: -9.647760391235352
    5. '
' → logprob: -10.897760391235352
    6. 'elif' → logprob: -11.522760391235352
    7. '```' → logprob: -12.647760391235352
    8. '               ' → logprob: -13.272760391235352
    9. '   ' → logprob: -13.647760391235352
    10. '	       ' → logprob: -14.397760391235352

Token 1159: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.579302966594696
    2. 'else' (adapté à ' else') → logprob: -0.829302966594696
    3. ' else' → logprob: -5.704302787780762
    4. 'elif' → logprob: -10.829302787780762
    5. '           ' → logprob: -12.704302787780762
    6. '
' → logprob: -13.829302787780762
    7. '   ' → logprob: -14.829302787780762
    8. '```' → logprob: -14.829302787780762
    9. '	else' → logprob: -15.079302787780762
    10. '               ' → logprob: -15.079302787780762

Token 1160: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.37009865045547485
    2. '               ' → logprob: -1.24509859085083
    3. ':' → logprob: -3.99509859085083
    4. '           ' → logprob: -6.49509859085083
    5. '):
' → logprob: -7.37009859085083
    6. 'self' → logprob: -8.370099067687988
    7. ',' → logprob: -8.870099067687988
    8. '              ' → logprob: -8.995099067687988
    9. '<|end|>' → logprob: -9.870099067687988
    10. '       ' → logprob: -10.120099067687988

Token 1161: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2423381507396698
    2. 'self' → logprob: -1.8673381805419922
    3. '               ' → logprob: -2.867338180541992
    4. ' self' → logprob: -5.617338180541992
    5. '
' → logprob: -9.242338180541992
    6. '       ' → logprob: -9.992338180541992
    7. ' ' → logprob: -11.617338180541992
    8. '```' → logprob: -11.742338180541992
    9. '	       ' → logprob: -12.117338180541992
    10. '   ' → logprob: -12.492338180541992

Token 1162: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003814210882410407
    2. ' self' → logprob: -5.628814220428467
    3. '               ' → logprob: -8.503813743591309
    4. 'Iter' → logprob: -12.128813743591309
    5. '           ' → logprob: -12.628813743591309
    6. '(self' → logprob: -13.628813743591309
    7. '	self' → logprob: -15.128813743591309
    8. '
' → logprob: -15.128813743591309
    9. '[self' → logprob: -15.253813743591309
    10. '=self' → logprob: -16.003814697265625

Token 1163: '.segment' (ID: 137597)
  Prédit: '.segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.segment' → logprob: -0.018151935189962387
    2. 'segment' → logprob: -4.018151760101318
    3. '.' → logprob: -14.018152236938477
    4. 'seg' → logprob: -14.893152236938477
    5. 'Segment' → logprob: -15.143152236938477
    6. '.seg' → logprob: -15.643152236938477
    7. ' segment' → logprob: -16.018152236938477
    8. '.strategy' → logprob: -16.018152236938477
    9. '_segment' → logprob: -16.643152236938477
    10. '.section' → logprob: -17.768152236938477

Token 1164: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: 0.0
    2. 'erer' → logprob: -17.375
    3. 'ер' → logprob: -20.125
    4. 'r' → logprob: -21.0
    5. 'arer' → logprob: -21.375
    6. 'ter' → logprob: -21.5
    7. 'iter' → logprob: -21.625
    8. 'ater' → logprob: -22.25
    9. '```' → logprob: -22.375
    10. 'erder' → logprob: -22.5

Token 1165: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967797577381134
    2. ' =' → logprob: -2.8119678497314453
    3. 'er' → logprob: -16.311967849731445
    4. ')' → logprob: -18.061967849731445
    5. '=
' → logprob: -18.186967849731445
    6. '=

' → logprob: -18.436967849731445
    7. '=None' → logprob: -18.436967849731445
    8. '＝' → logprob: -18.936967849731445
    9. '=A' → logprob: -20.061967849731445
    10. '           ' → logprob: -20.061967849731445

Token 1166: ' Iter' (ID: 24464)
  Prédit: 'Iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iter' → logprob: -3.547789674485102e-05
    2. ' Iter' → logprob: -10.250035285949707
    3. 'Inter' → logprob: -18.500036239624023
    4. 'Iteration' → logprob: -18.625036239624023
    5. 'Recursive' → logprob: -18.750036239624023
    6. '   ' → logprob: -19.250036239624023
    7. 'Interactive' → logprob: -19.500036239624023
    8. 'Iterable' → logprob: -19.875036239624023
    9. '       ' → logprob: -20.125036239624023
    10. 'Iterations' → logprob: -20.375036239624023

Token 1167: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.5759968757629395
    2. 'er' → logprob: -0.8259968757629395
    3. 'utive' → logprob: -10.950996398925781
    4. 'ert' → logprob: -11.450996398925781
    5. 'ensive' → logprob: -11.575996398925781
    6. 'erm' → logprob: -11.950996398925781
    7. '   ' → logprob: -13.200996398925781
    8. 'r' → logprob: -13.200996398925781
    9. 'Er' → logprob: -13.450996398925781
    10. '```' → logprob: -13.700996398925781

Token 1168: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: 0.0
    2. 'segment' → logprob: -17.0
    3. '_segment' → logprob: -17.5
    4. 'Seg' → logprob: -18.25
    5. ' Segment' → logprob: -19.625
    6. '```' → logprob: -19.875
    7. 'egment' → logprob: -20.0
    8. 'Segments' → logprob: -20.875
    9. '   ' → logprob: -21.625
    10. '_SEG' → logprob: -22.125

Token 1169: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -9.674858301877975e-05
    2. 'Segment' → logprob: -9.250096321105957
    3. 'ter' → logprob: -15.000096321105957
    4. '```' → logprob: -16.375097274780273
    5. 'izer' → logprob: -16.875097274780273
    6. 'Iter' → logprob: -16.875097274780273
    7. 'ater' → logprob: -17.500097274780273
    8. 'Seg' → logprob: -17.500097274780273
    9. '   ' → logprob: -17.625097274780273
    10. 'iter' → logprob: -17.875097274780273

Token 1170: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.375005722045898
    3. 'number' → logprob: -14.625005722045898
    4. '[number' → logprob: -14.625005722045898
    5. '(
' → logprob: -15.250005722045898
    6. '(Number' → logprob: -16.7500057220459
    7. ' (' → logprob: -16.8750057220459
    8. '(numbers' → logprob: -17.1250057220459
    9. '```' → logprob: -17.1250057220459
    10. '(object' → logprob: -17.7500057220459

Token 1171: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -8.792751032160595e-05
    2. 'str' → logprob: -9.37508773803711
    3. 'Str' → logprob: -13.25008773803711
    4. ')' → logprob: -14.50008773803711
    5. 'string' → logprob: -14.87508773803711
    6. '_string' → logprob: -16.00008773803711
    7. '```' → logprob: -16.25008773803711
    8. '       ' → logprob: -17.00008773803711
    9. '   ' → logprob: -17.50008773803711
    10. '	str' → logprob: -18.00008773803711

Token 1172: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011074823327362537
    2. ')
' → logprob: -4.761075019836426
    3. '       ' → logprob: -6.011075019836426
    4. '   ' → logprob: -13.386075019836426
    5. '           ' → logprob: -13.636075019836426
    6. ' )' → logprob: -13.761075019836426
    7. ')

' → logprob: -14.386075019836426
    8. 'else' → logprob: -14.511075019836426
    9. '               ' → logprob: -15.261075019836426
    10. ')
' → logprob: -15.386075019836426

Token 1173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.97155623533763e-05
    2. 'else' → logprob: -10.375089645385742
    3. '<|end|>' → logprob: -10.500089645385742
    4. ' else' → logprob: -11.125089645385742
    5. '   ' → logprob: -11.625089645385742
    6. '           ' → logprob: -12.750089645385742
    7. '```' → logprob: -13.250089645385742
    8. '
' → logprob: -14.625089645385742
    9. '      ' → logprob: -14.750089645385742
    10. '<|end|>' → logprob: -15.125089645385742

Token 1174: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.879768967628479
    2. '       ' → logprob: -1.129768967628479
    3. ' else' → logprob: -1.504768967628479
    4. '<|end|>' → logprob: -3.8797688484191895
    5. '   ' → logprob: -4.3797688484191895
    6. 'def' → logprob: -5.2547688484191895
    7. '
' → logprob: -7.8797688484191895
    8. ' def' → logprob: -8.129769325256348
    9. '	else' → logprob: -8.504769325256348
    10. '<|end|>' → logprob: -8.754769325256348

Token 1175: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7621696591377258
    2. ':
' → logprob: -0.7621696591377258
    3. '           ' → logprob: -3.262169599533081
    4. '       ' → logprob: -4.51216983795166
    5. '=' → logprob: -5.01216983795166
    6. ' and' → logprob: -5.63716983795166
    7. ' =' → logprob: -6.13716983795166
    8. '<|end|>' → logprob: -7.01216983795166
    9. 'and' → logprob: -7.26216983795166
    10. '<|end|>' → logprob: -7.51216983795166

Token 1176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40658998489379883
    2. 'self' → logprob: -1.4065899848937988
    3. '       ' → logprob: -2.531589984893799
    4. ' self' → logprob: -4.781589984893799
    5. '
' → logprob: -7.406589984893799
    6. '   ' → logprob: -7.656589984893799
    7. '	self' → logprob: -10.15658950805664
    8. '	       ' → logprob: -10.40658950805664
    9. '	   ' → logprob: -11.78158950805664
    10. ' ' → logprob: -11.90658950805664

Token 1177: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00021998681768309325
    2. ' self' → logprob: -9.00022029876709
    3. '       ' → logprob: -9.25022029876709
    4. '           ' → logprob: -15.00022029876709
    5. '
' → logprob: -16.000219345092773
    6. '	self' → logprob: -17.750219345092773
    7. '   ' → logprob: -18.500219345092773
    8. '(self' → logprob: -18.875219345092773
    9. '[self' → logprob: -21.375219345092773
    10. '﻿' → logprob: -21.625219345092773

Token 1178: '.segment' (ID: 137597)
  Prédit: '.segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.segment' → logprob: -2.7610454708337784e-05
    2. '.strategy' → logprob: -11.125027656555176
    3. 'segment' → logprob: -11.500027656555176
    4. '.' → logprob: -13.375027656555176
    5. '.user' → logprob: -14.250027656555176
    6. ' .' → logprob: -15.625027656555176
    7. '.seg' → logprob: -16.37502670288086
    8. '.fragment' → logprob: -17.62502670288086
    9. '.section' → logprob: -17.87502670288086
    10. ' segment' → logprob: -18.62502670288086

Token 1179: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -4.320199877838604e-07
    2. 'strategy' → logprob: -15.25
    3. '_strategy' → logprob: -17.5
    4. 'r' → logprob: -17.75
    5. 'ер' → logprob: -18.625
    6. ' strategy' → logprob: -19.0
    7. 'erer' → logprob: -19.125
    8. '   ' → logprob: -19.75
    9. '(strategy' → logprob: -19.875
    10. '[' → logprob: -20.125

Token 1180: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023255378007888794
    2. ' =' → logprob: -3.7732553482055664
    3. '.segment' → logprob: -11.648255348205566
    4. '.' → logprob: -14.773255348205566
    5. '.strategy' → logprob: -15.398255348205566
    6. '.=' → logprob: -15.648255348205566
    7. '=self' → logprob: -16.148256301879883
    8. ':' → logprob: -16.898256301879883
    9. '   ' → logprob: -17.023256301879883
    10. 'segment' → logprob: -17.023256301879883

Token 1181: ' strategy' (ID: 10772)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -1.0206720617134124e-05
    2. ' strategy' → logprob: -11.50001049041748
    3. 'strateg' → logprob: -18.625009536743164
    4. '(strategy' → logprob: -20.000009536743164
    5. 'Strategy' → logprob: -21.625009536743164
    6. 'segment' → logprob: -21.625009536743164
    7. '   ' → logprob: -22.000009536743164
    8. '.strategy' → logprob: -22.250009536743164
    9. 'strategie' → logprob: -22.750009536743164
    10. '_strategy' → logprob: -23.250009536743164

Token 1182: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1183: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09232035279273987
    2. '   ' → logprob: -2.467320442199707
    3. ' def' → logprob: -6.342320442199707
    4. '```' → logprob: -6.592320442199707
    5. '
' → logprob: -8.592320442199707
    6. '<|end|>' → logprob: -10.592320442199707
    7. '    
' → logprob: -11.467320442199707
    8. '	def' → logprob: -11.717320442199707
    9. '        
' → logprob: -12.592320442199707
    10. '<|end|>' → logprob: -13.092320442199707

Token 1184: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.8961017202818766e-05
    2. ' def' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.625059127807617
    4. '
' → logprob: -16.375059127807617
    5. '```' → logprob: -17.750059127807617
    6. '    
' → logprob: -18.250059127807617
    7. '<|end|>' → logprob: -18.375059127807617
    8. '        
' → logprob: -18.875059127807617
    9. '	def' → logprob: -19.500059127807617
    10. '@property' → logprob: -20.000059127807617

Token 1185: ' predict' (ID: 17946)
  Prédit: 'predict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'predict' → logprob: -0.0010019666515290737
    2. ' predict' → logprob: -7.001001834869385
    3. 'compute' → logprob: -10.626002311706543
    4. 'get' → logprob: -10.626002311706543
    5. 'calculate' → logprob: -10.751002311706543
    6. 'segment' → logprob: -11.751002311706543
    7. 'redict' → logprob: -12.876002311706543
    8. '_predict' → logprob: -12.876002311706543
    9. 'forecast' → logprob: -13.001002311706543
    10. 'find' → logprob: -13.626002311706543

Token 1186: '_min' (ID: 15950)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012070851516909897
    2. '(' → logprob: -9.125121116638184
    3. '():' → logprob: -12.375121116638184
    4. '()' → logprob: -12.500121116638184
    5. 'self' → logprob: -13.625121116638184
    6. '_year' → logprob: -14.375121116638184
    7. '()(' → logprob: -14.875121116638184
    8. '(
' → logprob: -15.125121116638184
    9. ' (' → logprob: -15.250121116638184
    10. 'def' → logprob: -15.750121116638184

Token 1187: '_year' (ID: 33489)
  Prédit: '_difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.017452111467719078
    2. 'imal' → logprob: -4.142452239990234
    3. 'imum' → logprob: -7.267452239990234
    4. '_diff' → logprob: -7.892452239990234
    5. '_segment' → logprob: -9.142452239990234
    6. '_' → logprob: -9.267452239990234
    7. '_f' → logprob: -9.892452239990234
    8. 'difference' → logprob: -10.142452239990234
    9. '_segments' → logprob: -10.642452239990234
    10. '_distance' → logprob: -12.142452239990234

Token 1188: 's' (ID: 82)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.634323000907898
    2. 's' → logprob: -0.759323000907898
    3. '(s' → logprob: -6.7593231201171875
    4. '_difference' → logprob: -7.8843231201171875
    5. 'self' → logprob: -9.509323120117188
    6. '()' → logprob: -10.384323120117188
    7. 'difference' → logprob: -10.634323120117188
    8. '_diff' → logprob: -11.259323120117188
    9. '_s' → logprob: -11.384323120117188
    10. '(' → logprob: -12.009323120117188

Token 1189: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.4736459888808895e-05
    2. '(' → logprob: -11.500014305114746
    3. 'self' → logprob: -13.375014305114746
    4. '   ' → logprob: -13.625014305114746
    5. '       ' → logprob: -13.875014305114746
    6. ' (' → logprob: -15.000014305114746
    7. '(
' → logprob: -16.125015258789062
    8. 'def' → logprob: -16.750015258789062
    9. 's' → logprob: -17.000015258789062
    10. '_to' → logprob: -17.125015258789062

Token 1190: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3139663338661194
    2. ')' → logprob: -1.8139662742614746
    3. 'self' → logprob: -2.6889662742614746
    4. '):' → logprob: -4.313966274261475
    5. '   ' → logprob: -4.563966274261475
    6. '):
' → logprob: -4.813966274261475
    7. '       ' → logprob: -5.313966274261475
    8. ')->' → logprob: -7.688966274261475
    9. '(' → logprob: -8.188966751098633
    10. '_to' → logprob: -8.813966751098633

Token 1191: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009364743018522859
    2. '(' → logprob: -7.000936508178711
    3. 'self' → logprob: -11.500936508178711
    4. '->' → logprob: -12.125936508178711
    5. ' (' → logprob: -12.750936508178711
    6. '(
' → logprob: -13.000936508178711
    7. '   ' → logprob: -13.875936508178711
    8. '()->' → logprob: -13.875936508178711
    9. '       ' → logprob: -14.125936508178711
    10. 'def' → logprob: -15.000936508178711

Token 1192: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.7848862373502925e-05
    2. ' int' → logprob: -10.500027656555176
    3. '(int' → logprob: -16.250028610229492
    4. '   ' → logprob: -16.500028610229492
    5. '[int' → logprob: -17.375028610229492
    6. 'Int' → logprob: -19.250028610229492
    7. '=int' → logprob: -20.000028610229492
    8. '	int' → logprob: -20.000028610229492
    9. ':int' → logprob: -20.125028610229492
    10. 'self' → logprob: -20.375028610229492

Token 1193: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0042848424054682255
    2. '       ' → logprob: -5.504284858703613
    3. '(' → logprob: -9.004284858703613
    4. '   ' → logprob: -10.129284858703613
    5. '(
' → logprob: -10.754284858703613
    6. 'self' → logprob: -12.004284858703613
    7. ':
' → logprob: -12.004284858703613
    8. '():
' → logprob: -12.254284858703613
    9. ':' → logprob: -13.629284858703613
    10. '(Self' → logprob: -13.879284858703613

Token 1194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006451221415773034
    2. 'return' → logprob: -7.375645160675049
    3. ' return' → logprob: -11.00064468383789
    4. '```' → logprob: -14.12564468383789
    5. '   ' → logprob: -14.25064468383789
    6. '	return' → logprob: -15.50064468383789
    7. '	' → logprob: -15.62564468383789
    8. '{return' → logprob: -15.87564468383789
    9. '	   ' → logprob: -17.25064468383789
    10. '           ' → logprob: -17.87564468383789

Token 1195: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011750847101211548
    2. '       ' → logprob: -4.5117506980896
    3. ' return' → logprob: -7.2617506980896
    4. '   ' → logprob: -14.511751174926758
    5. '	return' → logprob: -15.261751174926758
    6. '```' → logprob: -15.761751174926758
    7. '{return' → logprob: -18.636751174926758
    8. 'result' → logprob: -19.511751174926758
    9. '_return' → logprob: -19.636751174926758
    10. ':return' → logprob: -19.761751174926758

Token 1196: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067154900170862675
    2. ' self' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.881715774536133
    4. '       ' → logprob: -17.131715774536133
    5. '(self' → logprob: -17.381715774536133
    6. '	self' → logprob: -19.506715774536133
    7. '
' → logprob: -21.756715774536133
    8. '[self' → logprob: -22.506715774536133
    9. '```' → logprob: -22.631715774536133
    10. '           ' → logprob: -22.756715774536133

Token 1197: '.segment' (ID: 137597)
  Prédit: '.segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.segment' → logprob: -6.110668618930504e-05
    2. '.' → logprob: -9.75006103515625
    3. '.seg' → logprob: -13.00006103515625
    4. ' .' → logprob: -15.25006103515625
    5. 'segment' → logprob: -15.87506103515625
    6. '.se' → logprob: -16.12506103515625
    7. '._' → logprob: -17.87506103515625
    8. '.predict' → logprob: -19.37506103515625
    9. '.self' → logprob: -19.50006103515625
    10. '.section' → logprob: -19.87506103515625

Token 1198: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0034495643340051174
    2. '()' → logprob: -6.003449440002441
    3. '().' → logprob: -7.753449440002441
    4. '.' → logprob: -8.628449440002441
    5. '.segment' → logprob: -8.753449440002441
    6. 'segment' → logprob: -9.628449440002441
    7. '(' → logprob: -10.378449440002441
    8. '._' → logprob: -10.878449440002441
    9. 'ter' → logprob: -10.878449440002441
    10. '_segment' → logprob: -11.003449440002441

Token 1199: '.segment' (ID: 137597)
  Prédit: '.segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.segment' → logprob: -1.2664456789934775e-06
    2. 'segment' → logprob: -14.375000953674316
    3. '.' → logprob: -14.625000953674316
    4. ' .' → logprob: -16.250001907348633
    5. '.seg' → logprob: -17.875001907348633
    6. '.se' → logprob: -20.625001907348633
    7. '(segment' → logprob: -20.875001907348633
    8. ' segment' → logprob: -21.500001907348633
    9. '.section' → logprob: -22.375001907348633
    10. '```' → logprob: -22.500001907348633

Token 1200: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.5358694731257856e-05
    2. '()
' → logprob: -10.375035285949707
    3. '(' → logprob: -13.250035285949707
    4. '().' → logprob: -14.625035285949707
    5. '()

' → logprob: -14.750035285949707
    6. '()`' → logprob: -14.750035285949707
    7. ' ()' → logprob: -15.500035285949707
    8. '())' → logprob: -15.750035285949707
    9. '()[' → logprob: -16.125036239624023
    10. '()]' → logprob: -16.250036239624023

Token 1201: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1202: ' IO' (ID: 10357)
  Prédit: 'Fort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Fort' → logprob: -1.4262235164642334
    2. ' Fortune' → logprob: -1.5512235164642334
    3. ' Segment' → logprob: -2.1762235164642334
    4. 'Test' → logprob: -2.3012235164642334
    5. 'Segment' → logprob: -2.4262235164642334
    6. ' Test' → logprob: -3.1762235164642334
    7. ' Solution' → logprob: -3.3012235164642334
    8. ' Fort' → logprob: -3.5512235164642334
    9. 'Solution' → logprob: -3.5512235164642334
    10. 'User' → logprob: -4.6762237548828125

Token 1203: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.5852347016334534
    2. 'class' → logprob: -1.8352346420288086
    3. 'Stream' → logprob: -2.8352346420288086
    4. ':' → logprob: -2.8352346420288086
    5. 'Helper' → logprob: -3.3352346420288086
    6. 'Manager' → logprob: -3.4602346420288086
    7. 'import' → logprob: -4.085234642028809
    8. ':
' → logprob: -4.085234642028809
    9. '():
' → logprob: -4.710234642028809
    10. 'Processor' → logprob: -4.835234642028809

Token 1204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011057606898248196
    2. ':
' → logprob: -4.511057376861572
    3. ':def' → logprob: -12.38605785369873
    4. ':

' → logprob: -13.13605785369873
    5. '<|end|>' → logprob: -14.01105785369873
    6. '():' → logprob: -14.01105785369873
    7. '(object' → logprob: -14.38605785369873
    8. 'def' → logprob: -15.13605785369873
    9. '(' → logprob: -15.26105785369873
    10. '():
' → logprob: -15.63605785369873

Token 1205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035353288985788822
    2. 'def' → logprob: -6.253535270690918
    3. 'class' → logprob: -7.003535270690918
    4. ' def' → logprob: -7.503535270690918
    5. '```' → logprob: -9.003535270690918
    6. 'import' → logprob: -11.628535270690918
    7. ' class' → logprob: -12.128535270690918
    8. '	def' → logprob: -12.128535270690918
    9. '   ' → logprob: -14.503535270690918
    10. '...' → logprob: -14.878535270690918

Token 1206: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003338717622682452
    2. ' def' → logprob: -5.753338813781738
    3. '   ' → logprob: -8.753338813781738
    4. 'import' → logprob: -13.253338813781738
    5. '@' → logprob: -14.378338813781738
    6. 'class' → logprob: -14.503338813781738
    7. '```' → logprob: -15.378338813781738
    8. '	def' → logprob: -17.503337860107422
    9. '
' → logprob: -17.878337860107422
    10. 'from' → logprob: -19.878337860107422

Token 1207: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.006778373382985592
    2. 'init' → logprob: -5.631778240203857
    3. 'classmethod' → logprob: -5.881778240203857
    4. '__' → logprob: -8.256778717041016
    5. 'def' → logprob: -9.631778717041016
    6. '...' → logprob: -10.256778717041016
    7. 'object' → logprob: -11.381778717041016
    8. '```' → logprob: -11.756778717041016
    9. '___' → logprob: -14.131778717041016
    10. 'None' → logprob: -14.381778717041016

Token 1208: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.225939872208983e-05
    2. '__' → logprob: -10.750032424926758
    3. 'call' → logprob: -12.000032424926758
    4. ' init' → logprob: -13.000032424926758
    5. ' __' → logprob: -14.250032424926758
    6. 'iter' → logprob: -14.375032424926758
    7. 'new' → logprob: -14.625032424926758
    8. 'class' → logprob: -15.500032424926758
    9. 'predict' → logprob: -16.125032424926758
    10. 'staticmethod' → logprob: -16.375032424926758

Token 1209: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005313328001648188
    2. '__(' → logprob: -5.380313396453857
    3. 'self' → logprob: -8.2553129196167
    4. '(' → logprob: -8.5053129196167
    5. '   ' → logprob: -8.8803129196167
    6. ' (' → logprob: -9.8803129196167
    7. '__(
' → logprob: -11.7553129196167
    8. '(
' → logprob: -12.0053129196167
    9. '       ' → logprob: -12.5053129196167
    10. '<|end|>' → logprob: -12.7553129196167

Token 1210: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0564331205387134e-05
    2. ')' → logprob: -12.25001049041748
    3. ' self' → logprob: -12.75001049041748
    4. '):
' → logprob: -12.87501049041748
    5. '(self' → logprob: -16.625011444091797
    6. '   ' → logprob: -16.750011444091797
    7. '	self' → logprob: -17.375011444091797
    8. '       ' → logprob: -17.500011444091797
    9. '):' → logprob: -17.500011444091797
    10. '
' → logprob: -17.500011444091797

Token 1211: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8140217661857605
    2. 'self' → logprob: -1.0640218257904053
    3. ',' → logprob: -1.9390218257904053
    4. '):
' → logprob: -2.8140218257904053
    5. '):' → logprob: -5.814021587371826
    6. '__(' → logprob: -6.814021587371826
    7. '   ' → logprob: -6.939021587371826
    8. ' (' → logprob: -7.064021587371826
    9. ')(' → logprob: -7.314021587371826
    10. ' self' → logprob: -7.564021587371826

Token 1212: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009738749358803034
    2. '   ' → logprob: -7.250973701477051
    3. 'def' → logprob: -8.37597370147705
    4. ' self' → logprob: -10.75097370147705
    5. '       ' → logprob: -11.62597370147705
    6. '	self' → logprob: -13.50097370147705
    7. '
' → logprob: -14.12597370147705
    8. '(self' → logprob: -14.75097370147705
    9. '```' → logprob: -15.12597370147705
    10. ' ' → logprob: -15.62597370147705

Token 1213: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.4652967154979706
    2. '       ' → logprob: -1.590296745300293
    3. 'self' → logprob: -1.965296745300293
    4. 'def' → logprob: -4.215296745300293
    5. '   ' → logprob: -4.590296745300293
    6. ' pass' → logprob: -5.840296745300293
    7. 'import' → logprob: -9.590296745300293
    8. '
' → logprob: -9.715296745300293
    9. ' self' → logprob: -9.840296745300293
    10. '	pass' → logprob: -10.715296745300293

Token 1214: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0054390160366892815
    2. '
' → logprob: -5.880438804626465
    3. 'def' → logprob: -6.255438804626465
    4. ' def' → logprob: -7.380438804626465
    5. '    
' → logprob: -9.630438804626465
    6. '	def' → logprob: -12.005438804626465
    7. '<|end|>' → logprob: -12.005438804626465
    8. 'import' → logprob: -13.130438804626465
    9. '```' → logprob: -13.380438804626465
    10. ' ' → logprob: -13.755438804626465

Token 1215: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4855214059352875
    2. '   ' → logprob: -0.9855214357376099
    3. ' def' → logprob: -4.48552131652832
    4. '	def' → logprob: -10.23552131652832
    5. '
' → logprob: -10.36052131652832
    6. 'import' → logprob: -10.73552131652832
    7. '    
' → logprob: -11.23552131652832
    8. '```' → logprob: -12.73552131652832
    9. 'class' → logprob: -14.73552131652832
    10. '\' → logprob: -14.86052131652832

Token 1216: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.1472419600977446e-06
    2. ' def' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.750001907348633
    4. 'import' → logprob: -20.375001907348633
    5. 'async' → logprob: -21.750001907348633
    6. '@' → logprob: -22.000001907348633
    7. '```' → logprob: -22.250001907348633
    8. '
' → logprob: -22.750001907348633
    9. 'class' → logprob: -22.750001907348633
    10. '	def' → logprob: -23.000001907348633

Token 1217: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -7.016616291366518e-05
    2. ' read' → logprob: -10.750070571899414
    3. 'handle' → logprob: -10.750070571899414
    4. 'process' → logprob: -11.000070571899414
    5. 'run' → logprob: -11.625070571899414
    6. 'parse' → logprob: -13.875070571899414
    7. 'input' → logprob: -15.000070571899414
    8. '_read' → logprob: -16.750070571899414
    9. 'solve' → logprob: -17.000070571899414
    10. 'write' → logprob: -17.125070571899414

Token 1218: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3152681291103363
    2. '_line' → logprob: -1.6902681589126587
    3. 'self' → logprob: -2.815268039703369
    4. '_input' → logprob: -3.940268039703369
    5. 'line' → logprob: -5.190268039703369
    6. '_number' → logprob: -7.565268039703369
    7. 'input' → logprob: -8.565268516540527
    8. '_self' → logprob: -9.565268516540527
    9. 'from' → logprob: -9.815268516540527
    10. ' self' → logprob: -10.440268516540527

Token 1219: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.517272024415433e-05
    2. '(' → logprob: -9.625075340270996
    3. 'self' → logprob: -11.750075340270996
    4. '(
' → logprob: -14.000075340270996
    5. ' (' → logprob: -16.00007438659668
    6. '   ' → logprob: -16.62507438659668
    7. 'def' → logprob: -17.37507438659668
    8. '	self' → logprob: -18.25007438659668
    9. '=self' → logprob: -18.37507438659668
    10. ' self' → logprob: -18.37507438659668

Token 1220: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.291460245847702
    2. 'self' → logprob: -2.0414602756500244
    3. ')' → logprob: -2.7914602756500244
    4. '):' → logprob: -2.7914602756500244
    5. ',' → logprob: -8.791460037231445
    6. ')->' → logprob: -9.791460037231445
    7. '   ' → logprob: -9.916460037231445
    8. '(self' → logprob: -10.666460037231445
    9. ' self' → logprob: -11.416460037231445
    10. '
' → logprob: -11.666460037231445

Token 1221: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009485119953751564
    2. 'self' → logprob: -4.884485244750977
    3. '->' → logprob: -6.759485244750977
    4. '   ' → logprob: -8.134485244750977
    5. '       ' → logprob: -8.384485244750977
    6. ' ->' → logprob: -9.259485244750977
    7. '(' → logprob: -10.259485244750977
    8. ')' → logprob: -11.509485244750977
    9. ')->' → logprob: -11.759485244750977
    10. '(
' → logprob: -11.759485244750977

Token 1222: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.002548316027969122
    2. ' str' → logprob: -6.0025482177734375
    3. '[str' → logprob: -9.877548217773438
    4. 'self' → logprob: -11.002548217773438
    5. '(str' → logprob: -13.252548217773438
    6. 'int' → logprob: -13.377548217773438
    7. '=str' → logprob: -14.502548217773438
    8. 'input' → logprob: -15.502548217773438
    9. '	str' → logprob: -16.002548217773438
    10. '   ' → logprob: -16.252548217773438

Token 1223: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3517855703830719
    2. '(self' → logprob: -1.3517855405807495
    3. '   ' → logprob: -3.476785659790039
    4. 'self' → logprob: -5.351785659790039
    5. ':
' → logprob: -7.226785659790039
    6. '->' → logprob: -8.351785659790039
    7. '(' → logprob: -8.476785659790039
    8. ':' → logprob: -8.476785659790039
    9. '(
' → logprob: -8.601785659790039
    10. ' self' → logprob: -9.351785659790039

Token 1224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009817242622375488
    2. 'return' → logprob: -4.634817123413086
    3. ' return' → logprob: -10.009817123413086
    4. '```' → logprob: -11.509817123413086
    5. 'input' → logprob: -13.009817123413086
    6. 'try' → logprob: -14.384817123413086
    7. '   ' → logprob: -14.884817123413086
    8. '	' → logprob: -14.884817123413086
    9. 'n' → logprob: -15.134817123413086
    10. '{return' → logprob: -15.384817123413086

Token 1225: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011612888425588608
    2. '       ' → logprob: -4.511612892150879
    3. ' return' → logprob: -7.761612892150879
    4. 'import' → logprob: -8.886612892150879
    5. '```' → logprob: -15.011612892150879
    6. 'number' → logprob: -15.886612892150879
    7. '   ' → logprob: -16.011611938476562
    8. '	return' → logprob: -16.136611938476562
    9. 's' → logprob: -17.136611938476562
    10. 'input' → logprob: -17.136611938476562

Token 1226: ' read' (ID: 1729)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.022961482405662537
    2. 'import' → logprob: -4.772961616516113
    3. 'number' → logprob: -5.522961616516113
    4. '       ' → logprob: -5.647961616516113
    5. 'line' → logprob: -6.022961616516113
    6. 'input' → logprob: -6.147961616516113
    7. '#' → logprob: -6.897961616516113
    8. ' return' → logprob: -7.147961616516113
    9. 'raise' → logprob: -9.272961616516113
    10. 's' → logprob: -9.647961616516113

Token 1227: ' single' (ID: 4590)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.052644792944192886
    2. 'return' → logprob: -3.802644729614258
    3. 'input' → logprob: -4.302644729614258
    4. 'line' → logprob: -4.552644729614258
    5. ' self' → logprob: -6.677644729614258
    6. '       ' → logprob: -6.802644729614258
    7. ' line' → logprob: -7.302644729614258
    8. 'import' → logprob: -7.302644729614258
    9. '   ' → logprob: -7.802644729614258
    10. '```' → logprob: -8.052644729614258

Token 1228: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004844003822654486
    2. ' line' → logprob: -5.5048441886901855
    3. 'input' → logprob: -7.5048441886901855
    4. '_line' → logprob: -8.754843711853027
    5. '()' → logprob: -10.379843711853027
    6. 'self' → logprob: -12.004843711853027
    7. 'number' → logprob: -12.129843711853027
    8. 'import' → logprob: -12.379843711853027
    9. 'Line' → logprob: -12.754843711853027
    10. '-line' → logprob: -13.129843711853027

Token 1229: ' input' (ID: 3422)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6536251306533813
    2. '       ' → logprob: -0.7786251306533813
    3. '()' → logprob: -4.778625011444092
    4. 'self' → logprob: -4.903625011444092
    5. 'line' → logprob: -6.653625011444092
    6. ' return' → logprob: -7.028625011444092
    7. 'input' → logprob: -7.028625011444092
    8. '()
' → logprob: -8.15362548828125
    9. ' =' → logprob: -8.40362548828125
    10. '().' → logprob: -8.52862548828125

Token 1230: ' string' (ID: 1621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004942343104630709
    2. 'return' → logprob: -5.379942417144775
    3. 'self' → logprob: -9.879941940307617
    4. ' return' → logprob: -9.879941940307617
    5. 'line' → logprob: -9.879941940307617
    6. '   ' → logprob: -10.504941940307617
    7. 'input' → logprob: -10.504941940307617
    8. '
' → logprob: -10.879941940307617
    9. '()' → logprob: -11.004941940307617
    10. '	' → logprob: -11.004941940307617

Token 1231: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006021226872690022
    2. 'return' → logprob: -7.5006022453308105
    3. '()' → logprob: -11.375601768493652
    4. '
' → logprob: -11.875601768493652
    5. ' return' → logprob: -12.000601768493652
    6. 'import' → logprob: -12.250601768493652
    7. 'input' → logprob: -12.250601768493652
    8. 'line' → logprob: -12.750601768493652
    9. '```' → logprob: -13.000601768493652
    10. '   ' → logprob: -13.000601768493652

Token 1232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.4418171455617994e-05
    2. 'return' → logprob: -10.125044822692871
    3. '   ' → logprob: -13.875044822692871
    4. '```' → logprob: -13.875044822692871
    5. ' return' → logprob: -14.375044822692871
    6. '	' → logprob: -14.750044822692871
    7. 'import' → logprob: -14.875044822692871
    8. 'input' → logprob: -15.000044822692871
    9. '           ' → logprob: -15.250044822692871
    10. '        
' → logprob: -16.250043869018555

Token 1233: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008782617747783661
    2. '       ' → logprob: -5.008782386779785
    3. ' return' → logprob: -6.508782386779785
    4. 'import' → logprob: -7.508782386779785
    5. 'number' → logprob: -11.008782386779785
    6. 'line' → logprob: -12.008782386779785
    7. 's' → logprob: -13.383782386779785
    8. 'input' → logprob: -13.508782386779785
    9. '   ' → logprob: -15.133782386779785
    10. '```' → logprob: -15.383782386779785

Token 1234: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006715370807796717
    2. ' input' → logprob: -5.006715297698975
    3. '(input' → logprob: -20.756715774536133
    4. '=input' → logprob: -21.881715774536133
    5. '<input' → logprob: -22.131715774536133
    6. '	input' → logprob: -22.256715774536133
    7. '.input' → logprob: -24.131715774536133
    8. '```' → logprob: -24.131715774536133
    9. ' ' → logprob: -24.256715774536133
    10. 'sys' → logprob: -24.381715774536133

Token 1235: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.20142260193824768
    2. '()' → logprob: -1.7014225721359253
    3. '()
' → logprob: -12.326422691345215
    4. '()

' → logprob: -13.451422691345215
    5. '()\' → logprob: -13.826422691345215
    6. '.strip' → logprob: -14.576422691345215
    7. '()<' → logprob: -14.826422691345215
    8. '(' → logprob: -14.826422691345215
    9. '())' → logprob: -15.076422691345215
    10. '();' → logprob: -15.576422691345215

Token 1236: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.5491004129871726e-05
    2. 'rstrip' → logprob: -10.000045776367188
    3. ' strip' → logprob: -18.000045776367188
    4. '_strip' → logprob: -19.250045776367188
    5. 'read' → logprob: -22.000045776367188
    6. '-strip' → logprob: -22.250045776367188
    7. '.strip' → logprob: -23.125045776367188
    8. 'str' → logprob: -23.500045776367188
    9. '(strip' → logprob: -24.500045776367188
    10. 'Strip' → logprob: -25.500045776367188

Token 1237: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6456785202026367
    2. '<|end|>' → logprob: -0.7706785202026367
    3. '
' → logprob: -5.145678520202637
    4. '()
' → logprob: -5.770678520202637
    5. '<|end|>' → logprob: -6.645678520202637
    6. '   ' → logprob: -6.645678520202637
    7. '()

' → logprob: -7.270678520202637
    8. '

' → logprob: -8.145678520202637
    9. '    
' → logprob: -9.645678520202637
    10. '```' → logprob: -9.770678520202637

Token 1238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008037998341023922
    2. '```' → logprob: -5.25803804397583
    3. 'def' → logprob: -6.25803804397583
    4. '
' → logprob: -7.38303804397583
    5. '<|end|>' → logprob: -8.508037567138672
    6. '    
' → logprob: -10.258037567138672
    7. 'class' → logprob: -12.133037567138672
    8. '<|end|>' → logprob: -12.383037567138672
    9. 'import' → logprob: -12.633037567138672
    10. ' def' → logprob: -12.633037567138672

Token 1239: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.629921436891891e-05
    2. '
' → logprob: -11.12502670288086
    3. ' def' → logprob: -12.12502670288086
    4. '   ' → logprob: -12.12502670288086
    5. '```' → logprob: -14.50002670288086
    6. '	def' → logprob: -15.87502670288086
    7. '    
' → logprob: -18.25002670288086
    8. 'class' → logprob: -19.12502670288086
    9. 'import' → logprob: -19.37502670288086
    10. '

' → logprob: -20.25002670288086

Token 1240: ' output' (ID: 4733)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.023267609998583794
    2. 'print' → logprob: -3.7732675075531006
    3. 'output' → logprob: -11.02326774597168
    4. 'process' → logprob: -12.52326774597168
    5. 'read' → logprob: -14.14826774597168
    6. ' write' → logprob: -14.27326774597168
    7. 'parse' → logprob: -15.14826774597168
    8. 'main' → logprob: -15.77326774597168
    9. 'display' → logprob: -15.77326774597168
    10. 'produce' → logprob: -16.39826774597168

Token 1241: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019639628008008003
    2. '(' → logprob: -7.376964092254639
    3. '_result' → logprob: -7.501964092254639
    4. 'self' → logprob: -8.37696361541748
    5. '_line' → logprob: -8.37696361541748
    6. 'def' → logprob: -8.62696361541748
    7. '_min' → logprob: -10.00196361541748
    8. '_value' → logprob: -10.12696361541748
    9. ' (' → logprob: -11.62696361541748
    10. '_string' → logprob: -11.87696361541748

Token 1242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22093874216079712
    2. ')' → logprob: -1.8459386825561523
    3. 'self' → logprob: -4.095938682556152
    4. '(self' → logprob: -4.720938682556152
    5. '   ' → logprob: -5.095938682556152
    6. '):' → logprob: -5.845938682556152
    7. '       ' → logprob: -6.095938682556152
    8. '):
' → logprob: -7.220938682556152
    9. ')->' → logprob: -7.970938682556152
    10. ',self' → logprob: -8.345938682556152

Token 1243: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.14385946094989777
    2. ' result' → logprob: -2.143859386444092
    3. 'value' → logprob: -4.393859386444092
    4. ' value' → logprob: -5.768859386444092
    5. 'answer' → logprob: -6.893859386444092
    6. ' answer' → logprob: -9.14385986328125
    7. 'self' → logprob: -9.14385986328125
    8. 'min' → logprob: -10.89385986328125
    9. 'output' → logprob: -11.14385986328125
    10. 'text' → logprob: -11.39385986328125

Token 1244: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24283070862293243
    2. '(self' → logprob: -2.117830753326416
    3. '   ' → logprob: -3.367830753326416
    4. '       ' → logprob: -3.617830753326416
    5. 'self' → logprob: -4.367830753326416
    6. ')' → logprob: -4.492830753326416
    7. '):
' → logprob: -5.242830753326416
    8. '):' → logprob: -5.742830753326416
    9. ':self' → logprob: -7.367830753326416
    10. ',' → logprob: -7.492830753326416

Token 1245: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02523110620677471
    2. 'print' → logprob: -4.025230884552002
    3. 'str' → logprob: -5.025230884552002
    4. ' int' → logprob: -7.900230884552002
    5. ')' → logprob: -9.65023136138916
    6. '   ' → logprob: -10.65023136138916
    7. ' str' → logprob: -11.40023136138916
    8. 'result' → logprob: -11.52523136138916
    9. ' print' → logprob: -12.40023136138916
    10. '
' → logprob: -14.40023136138916

Token 1246: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015642479062080383
    2. '):' → logprob: -4.5156426429748535
    3. '):
' → logprob: -5.3906426429748535
    4. ')->' → logprob: -11.015642166137695
    5. '   ' → logprob: -12.140642166137695
    6. ':' → logprob: -13.515642166137695
    7. '):
' → logprob: -13.640642166137695
    8. '       ' → logprob: -14.515642166137695
    9. ' )' → logprob: -16.765642166137695
    10. ').' → logprob: -17.015642166137695

Token 1247: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08350865542888641
    2. '(self' → logprob: -2.7085087299346924
    3. '->' → logprob: -5.083508491516113
    4. 'print' → logprob: -5.958508491516113
    5. ':' → logprob: -6.583508491516113
    6. ':
' → logprob: -7.083508491516113
    7. '(' → logprob: -7.708508491516113
    8. '):
' → logprob: -7.958508491516113
    9. 'self' → logprob: -8.208508491516113
    10. ' print' → logprob: -8.333508491516113

Token 1248: ' None' (ID: 4662)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.054500666621607e-06
    2. '   ' → logprob: -13.50000286102295
    3. ' print' → logprob: -13.50000286102295
    4. 'None' → logprob: -15.87500286102295
    5. ' None' → logprob: -19.625003814697266
    6. '  ' → logprob: -19.750003814697266
    7. '       ' → logprob: -19.875003814697266
    8. ' ' → logprob: -20.375003814697266
    9. '(print' → logprob: -20.875003814697266
    10. '```' → logprob: -21.750003814697266

Token 1249: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009830316994339228
    2. ':
' → logprob: -8.000983238220215
    3. ':' → logprob: -8.375983238220215
    4. '   ' → logprob: -9.000983238220215
    5. '(self' → logprob: -9.250983238220215
    6. '):
' → logprob: -9.875983238220215
    7. ',' → logprob: -10.250983238220215
    8. '<|end|>' → logprob: -10.500983238220215
    9. '```' → logprob: -10.875983238220215
    10. '(' → logprob: -10.875983238220215

Token 1250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.179569077678025e-05
    2. 'print' → logprob: -10.250041961669922
    3. ' print' → logprob: -13.000041961669922
    4. '   ' → logprob: -13.125041961669922
    5. '```' → logprob: -13.125041961669922
    6. '	' → logprob: -17.625041961669922
    7. '           ' → logprob: -18.000041961669922
    8. '	print' → logprob: -18.875041961669922
    9. '      ' → logprob: -19.125041961669922
    10. '`' → logprob: -19.500041961669922

Token 1251: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.7432603272027336e-06
    2. '       ' → logprob: -13.750001907348633
    3. ' print' → logprob: -14.250001907348633
    4. '```' → logprob: -20.250001907348633
    5. '   ' → logprob: -20.875001907348633
    6. '	print' → logprob: -23.625001907348633
    7. 'Print' → logprob: -24.750001907348633
    8. '
' → logprob: -24.875001907348633
    9. 'println' → logprob: -25.750001907348633
    10. '#print' → logprob: -26.000001907348633

Token 1252: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.12692810595035553
    2. 'result' → logprob: -2.1269280910491943
    3. ' result' → logprob: -17.376928329467773
    4. '{' → logprob: -18.376928329467773
    5. '=result' → logprob: -18.626928329467773
    6. '$result' → logprob: -18.876928329467773
    7. '[result' → logprob: -19.001928329467773
    8. ',result' → logprob: -19.251928329467773
    9. '(f' → logprob: -19.251928329467773
    10. '(' → logprob: -19.626928329467773

Token 1253: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.5
    3. '())' → logprob: -16.25
    4. '()' → logprob: -16.375
    5. ' )' → logprob: -17.0
    6. '))' → logprob: -17.5
    7. '   ' → logprob: -18.375
    8. '")' → logprob: -18.625
    9. '`)' → logprob: -18.875
    10. '')' → logprob: -18.875

Token 1254: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03864884749054909
    2. 'if' → logprob: -3.288648843765259
    3. '```' → logprob: -7.413649082183838
    4. ' def' → logprob: -13.41364860534668
    5. '<|end|>' → logprob: -13.66364860534668
    6. 'import' → logprob: -14.53864860534668
    7. ' if' → logprob: -14.78864860534668
    8. '``' → logprob: -15.41364860534668
    9. '
' → logprob: -16.16364860534668
    10. '#' → logprob: -16.41364860534668

Token 1255: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.018190208822488785
    2. 'main' → logprob: -4.018190383911133
    3. ' run' → logprob: -10.143190383911133
    4. 'run' → logprob: -14.643190383911133
    5. ' solve' → logprob: -15.143190383911133
    6. '_main' → logprob: -15.893190383911133
    7. ' solution' → logprob: -16.643190383911133
    8. 'def' → logprob: -17.518190383911133
    9. '	main' → logprob: -17.893190383911133
    10. 'solve' → logprob: -18.518190383911133

Token 1256: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00026419671485200524
    2. '():
' → logprob: -8.250264167785645
    3. '()' → logprob: -13.000264167785645
    4. ' ():' → logprob: -14.500264167785645
    5. '():
' → logprob: -17.37526512145996
    6. '()->' → logprob: -17.62526512145996
    7. '():

' → logprob: -17.62526512145996
    8. '().' → logprob: -18.50026512145996
    9. '()>' → logprob: -18.50026512145996
    10. 'def' → logprob: -19.37526512145996

Token 1257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07935590296983719
    2. 'io' → logprob: -2.5793559551239014
    3. 'ih' → logprob: -8.57935619354248
    4. 'handler' → logprob: -9.32935619354248
    5. ' ioh' → logprob: -9.70435619354248
    6. '_io' → logprob: -10.32935619354248
    7. 'import' → logprob: -10.45435619354248
    8. ' io' → logprob: -10.57935619354248
    9. '   ' → logprob: -11.07935619354248
    10. '	io' → logprob: -11.07935619354248

Token 1258: ' io' (ID: 9818)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' (adapté à ' io') → logprob: -0.025958050042390823
    2. '   ' → logprob: -3.7759580612182617
    3. 'handler' → logprob: -6.150958061218262
    4. 'import' → logprob: -7.900958061218262
    5. ' io' → logprob: -8.775958061218262
    6. ' ioh' → logprob: -10.525958061218262
    7. 'ih' → logprob: -11.150958061218262
    8. ' handler' → logprob: -13.275958061218262
    9. '	io' → logprob: -13.275958061218262
    10. 'handle' → logprob: -13.400958061218262

Token 1259: ' =' (ID: 314)
  Prédit: '_handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.10623639822006226
    2. ' =' → logprob: -2.606236457824707
    3. '=' → logprob: -3.856236457824707
    4. 'handler' → logprob: -5.356236457824707
    5. 'h' → logprob: -7.106236457824707
    6. 'Handler' → logprob: -8.856236457824707
    7. '   ' → logprob: -9.856236457824707
    8. 'def' → logprob: -9.856236457824707
    9. '_handle' → logprob: -11.731236457824707
    10. 'er' → logprob: -12.731236457824707

Token 1260: ' IO' (ID: 10357)
  Prédit: 'IO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IO' → logprob: -4.842555426876061e-06
    2. ' IO' → logprob: -12.250004768371582
    3. 'IODevice' → logprob: -17.6250057220459
    4. '_IO' → logprob: -18.0000057220459
    5. '(IO' → logprob: -18.1250057220459
    6. '.IO' → logprob: -20.0000057220459
    7. 'io' → logprob: -20.5000057220459
    8. 'I' → logprob: -21.0000057220459
    9. 'Io' → logprob: -21.7500057220459
    10. '_io' → logprob: -22.2500057220459

Token 1261: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -3.8889261304575484e-06
    2. 'handler' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.875003814697266
    4. 'def' → logprob: -18.500003814697266
    5. '_Handler' → logprob: -18.625003814697266
    6. '_handler' → logprob: -18.750003814697266
    7. 'Handle' → logprob: -18.875003814697266
    8. ' Handler' → logprob: -19.125003814697266
    9. 'handle' → logprob: -19.250003814697266
    10. '
' → logprob: -19.750003814697266

Token 1262: '()
' (ID: 1234)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.16062012314796448
    2. '   ' → logprob: -1.910620093345642
    3. 'input' → logprob: -8.910619735717773
    4. '
' → logprob: -8.910619735717773
    5. ' number' → logprob: -10.035619735717773
    6. '```' → logprob: -10.535619735717773
    7. '	number' → logprob: -10.785619735717773
    8. 'num' → logprob: -11.160619735717773
    9. '(number' → logprob: -12.035619735717773
    10. '    
' → logprob: -12.410619735717773

Token 1263: '   ' (ID: 271)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.014167741872370243
    2. '   ' → logprob: -4.264167785644531
    3. ' number' → logprob: -13.514167785644531
    4. 'num' → logprob: -13.764167785644531
    5. 'n' → logprob: -13.889167785644531
    6. 'input' → logprob: -15.139167785644531
    7. '	number' → logprob: -15.139167785644531
    8. 's' → logprob: -15.764167785644531
    9. '```' → logprob: -16.26416778564453
    10. '
' → logprob: -16.26416778564453

Token 1264: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' (adapté à ' number') → logprob: -1.0280383548888494e-06
    2. '   ' → logprob: -14.250000953674316
    3. 'num' → logprob: -15.500000953674316
    4. ' number' → logprob: -16.250001907348633
    5. 's' → logprob: -18.250001907348633
    6. 'input' → logprob: -18.750001907348633
    7. '```' → logprob: -19.125001907348633
    8. '	number' → logprob: -21.000001907348633
    9. 'n' → logprob: -21.375001907348633
    10. '
' → logprob: -21.750001907348633

Token 1265: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -4.60414821645827e-06
    2. 'str' → logprob: -12.750004768371582
    3. '   ' → logprob: -13.625004768371582
    4. '_string' → logprob: -14.625004768371582
    5. 'Str' → logprob: -17.250003814697266
    6. '_s' → logprob: -18.125003814697266
    7. ' =' → logprob: -18.500003814697266
    8. '_' → logprob: -18.625003814697266
    9. '=' → logprob: -18.750003814697266
    10. '	str' → logprob: -19.000003814697266

Token 1266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022585332393646
    2. ' =' → logprob: -1.9102258682250977
    3. '   ' → logprob: -13.285225868225098
    4. ' ' → logprob: -19.03522491455078
    5. '    ' → logprob: -19.28522491455078
    6. '=input' → logprob: -19.41022491455078
    7. ')' → logprob: -19.41022491455078
    8. ' ' → logprob: -19.53522491455078
    9. '	' → logprob: -20.03522491455078
    10. ':' → logprob: -20.28522491455078

Token 1267: ' io' (ID: 9818)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' → logprob: -0.005234356038272381
    2. ' io' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.380234718322754
    4. '(io' → logprob: -15.505234718322754
    5. '	io' → logprob: -15.880234718322754
    6. '/io' → logprob: -18.255233764648438
    7. '.io' → logprob: -18.755233764648438
    8. '_io' → logprob: -19.255233764648438
    9. 'IO' → logprob: -19.630233764648438
    10. 'input' → logprob: -19.630233764648438

Token 1268: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.014170088805258274
    2. 'read' → logprob: -4.264170169830322
    3. '.readline' → logprob: -12.139169692993164
    4. '_read' → logprob: -14.264169692993164
    5. '.' → logprob: -15.264169692993164
    6. ' read' → logprob: -15.389169692993164
    7. '```' → logprob: -16.389169692993164
    8. '.readlines' → logprob: -17.014169692993164
    9. '(read' → logprob: -18.264169692993164
    10. '	read' → logprob: -18.264169692993164

Token 1269: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.173704271830502e-06
    2. 'input' → logprob: -13.00000286102295
    3. '_line' → logprob: -14.37500286102295
    4. '```' → logprob: -16.250003814697266
    5. 'Input' → logprob: -17.000003814697266
    6. '_output' → logprob: -17.625003814697266
    7. 'line' → logprob: -17.875003814697266
    8. '()' → logprob: -18.125003814697266
    9. '_INPUT' → logprob: -18.875003814697266
    10. '
' → logprob: -19.125003814697266

Token 1270: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06282737106084824
    2. '
' → logprob: -2.8128273487091064
    3. 'predict' → logprob: -7.3128275871276855
    4. '    
' → logprob: -8.812827110290527
    5. ' predictor' → logprob: -11.937827110290527
    6. 'pred' → logprob: -12.062827110290527
    7. '   ' → logprob: -12.187827110290527
    8. 'result' → logprob: -12.312827110290527
    9. '
' → logprob: -12.562827110290527
    10. 'prediction' → logprob: -12.687827110290527

Token 1271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2095755785703659
    2. 'predict' → logprob: -1.7095755338668823
    3. ' predictor' → logprob: -4.834575653076172
    4. '   ' → logprob: -9.959575653076172
    5. 'pred' → logprob: -9.959575653076172
    6. 'fp' → logprob: -10.209575653076172
    7. '```' → logprob: -11.084575653076172
    8. ' predict' → logprob: -11.459575653076172
    9. 'prediction' → logprob: -11.459575653076172
    10. '_predict' → logprob: -13.084575653076172

Token 1272: ' predictor' (ID: 134424)
  Prédit: 'predict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'predict' → logprob: -0.00024608144303783774
    2. ' predictor' → logprob: -9.000246047973633
    3. '   ' → logprob: -9.625246047973633
    4. 'pred' → logprob: -9.875246047973633
    5. 'fp' → logprob: -13.250246047973633
    6. 'prediction' → logprob: -13.375246047973633
    7. 'fy' → logprob: -14.625246047973633
    8. 'forecast' → logprob: -14.875246047973633
    9. 'py' → logprob: -15.875246047973633
    10. 'f' → logprob: -16.250246047973633

Token 1273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01814994215965271
    2. '=' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.768150329589844
    4. '   ' → logprob: -17.893150329589844
    5. ' =
' → logprob: -18.768150329589844
    6. ' ' → logprob: -19.018150329589844
    7. '  ' → logprob: -19.268150329589844
    8. '.' → logprob: -19.518150329589844
    9. '=
' → logprob: -19.768150329589844
    10. '	' → logprob: -20.018150329589844

Token 1274: ' Fortune' (ID: 57526)
  Prédit: 'Fort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fort' → logprob: -0.00033558503491804004
    2. ' Fortune' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.625335693359375
    4. ' Fort' → logprob: -18.250335693359375
    5. 'Faith' → logprob: -19.125335693359375
    6. 'fortune' → logprob: -19.125335693359375
    7. 'Fore' → logprob: -19.250335693359375
    8. 'Fruit' → logprob: -19.375335693359375
    9. 'Forest' → logprob: -19.375335693359375
    10. 'Forecast' → logprob: -19.500335693359375

Token 1275: 'Years' (ID: 64708)
  Prédit: 'Years'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Years' → logprob: -1.9361264946837764e-07
    2. 'years' → logprob: -17.0
    3. '   ' → logprob: -17.375
    4. ' Years' → logprob: -17.625
    5. '       ' → logprob: -18.5
    6. '\' → logprob: -19.75
    7. ' ' → logprob: -19.875
    8. '```' → logprob: -20.0
    9. ' years' → logprob: -20.625
    10. 'Months' → logprob: -20.625

Token 1276: 'Predict' (ID: 97802)
  Prédit: 'Predict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Predict' → logprob: -0.0014853432076051831
    2. 'Years' → logprob: -6.876485347747803
    3. 'predict' → logprob: -7.876485347747803
    4. '   ' → logprob: -10.501484870910645
    5. ' predictor' → logprob: -10.626484870910645
    6. '.predict' → logprob: -11.251484870910645
    7. '       ' → logprob: -12.626484870910645
    8. ' Predictor' → logprob: -13.501484870910645
    9. 'Pred' → logprob: -13.876484870910645
    10. 'Months' → logprob: -14.751484870910645

Token 1277: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.026617947965860367
    2. 'ctor' → logprob: -4.026618003845215
    3. 'tor' → logprob: -5.651618003845215
    4. 'Years' → logprob: -6.276618003845215
    5. 'ector' → logprob: -6.526618003845215
    6. 'ator' → logprob: -7.401618003845215
    7. 'ors' → logprob: -7.776618003845215
    8. 'years' → logprob: -8.776618003845215
    9. 'predict' → logprob: -9.901618003845215
    10. 'ct' → logprob: -9.901618003845215

Token 1278: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.0009176511666737497
    2. 'number' → logprob: -7.000917434692383
    3. '   ' → logprob: -12.125917434692383
    4. '(' → logprob: -14.625917434692383
    5. '[number' → logprob: -15.375917434692383
    6. '(numbers' → logprob: -17.375917434692383
    7. ' number' → logprob: -17.500917434692383
    8. '(
' → logprob: -17.500917434692383
    9. 'Number' → logprob: -18.750917434692383
    10. '(n' → logprob: -18.875917434692383

Token 1279: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -3.893480243277736e-05
    2. 'str' → logprob: -10.250039100646973
    3. 'Str' → logprob: -12.625039100646973
    4. '   ' → logprob: -16.125038146972656
    5. '_string' → logprob: -18.000038146972656
    6. 'string' → logprob: -18.125038146972656
    7. '```' → logprob: -18.500038146972656
    8. '_STR' → logprob: -18.625038146972656
    9. '_Str' → logprob: -19.125038146972656
    10. '	str' → logprob: -19.125038146972656

Token 1280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02135416306555271
    2. '()' → logprob: -4.2713541984558105
    3. '())' → logprob: -5.8963541984558105
    4. ')
' → logprob: -6.1463541984558105
    5. '()
' → logprob: -6.1463541984558105
    6. '())
' → logprob: -9.521353721618652
    7. '   ' → logprob: -10.396353721618652
    8. '(number' → logprob: -11.146353721618652
    9. ' )' → logprob: -11.896353721618652
    10. ').' → logprob: -13.271353721618652

Token 1281: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.006822285708039999
    2. '   ' → logprob: -5.006822109222412
    3. 'print' → logprob: -9.25682258605957
    4. ' result' → logprob: -11.75682258605957
    5. '```' → logprob: -12.75682258605957
    6. 'res' → logprob: -15.25682258605957
    7. '
' → logprob: -15.50682258605957
    8. '	result' → logprob: -16.00682258605957
    9. 'output' → logprob: -16.63182258605957
    10. '    
' → logprob: -16.63182258605957

Token 1282: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -6.0391463193809614e-05
    2. 'print' → logprob: -9.750060081481934
    3. 'io' → logprob: -14.250060081481934
    4. 'res' → logprob: -14.500060081481934
    5. ' result' → logprob: -14.500060081481934
    6. '   ' → logprob: -15.750060081481934
    7. 'output' → logprob: -16.50006103515625
    8. '```' → logprob: -16.50006103515625
    9. 'answer' → logprob: -16.62506103515625
    10. 'results' → logprob: -18.00006103515625

Token 1283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5235912203788757
    2. '=' → logprob: -0.8985912203788757
    3. '   ' → logprob: -7.773591041564941
    4. '.' → logprob: -11.023591041564941
    5. '=result' → logprob: -11.398591041564941
    6. ')' → logprob: -12.023591041564941
    7. '=p' → logprob: -13.148591041564941
    8. '.segment' → logprob: -13.523591041564941
    9. '.predict' → logprob: -13.648591041564941
    10. '.=' → logprob: -13.648591041564941

Token 1284: ' predictor' (ID: 134424)
  Prédit: 'predict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'predict' → logprob: -7.493430894101039e-05
    2. ' predictor' → logprob: -9.500075340270996
    3. 'pred' → logprob: -20.00007438659668
    4. '_predict' → logprob: -20.25007438659668
    5. '.predict' → logprob: -20.62507438659668
    6. 'Predict' → logprob: -21.75007438659668
    7. ' predict' → logprob: -22.25007438659668
    8. 'prediction' → logprob: -22.37507438659668
    9. 'predicate' → logprob: -24.25007438659668
    10. '   ' → logprob: -25.62507438659668

Token 1285: '.predict' (ID: 57874)
  Prédit: '.predict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.predict' → logprob: -0.07900963723659515
    2. '.segment' → logprob: -2.579009532928467
    3. '.' → logprob: -9.079010009765625
    4. ' .' → logprob: -12.829010009765625
    5. 'predict' → logprob: -13.204010009765625
    6. '.pred' → logprob: -14.079010009765625
    7. 'segment' → logprob: -14.579010009765625
    8. '.result' → logprob: -17.204010009765625
    9. '_predict' → logprob: -17.579010009765625
    10. '.output' → logprob: -17.954010009765625

Token 1286: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -3.128163257315464e-07
    2. '_max' → logprob: -15.875
    3. 'min' → logprob: -17.25
    4. 's' → logprob: -17.875
    5. '```' → logprob: -17.875
    6. 'ion' → logprob: -18.25
    7. '(min' → logprob: -18.875
    8. '_year' → logprob: -20.125
    9. '_num' → logprob: -20.25
    10. '\' → logprob: -20.5

Token 1287: '_year' (ID: 33489)
  Prédit: '_year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_year' → logprob: -0.0004206634475849569
    2. '_min' → logprob: -8.125420570373535
    3. 'years' → logprob: -10.625420570373535
    4. '_max' → logprob: -10.750420570373535
    5. '```' → logprob: -11.125420570373535
    6. 'Years' → logprob: -11.250420570373535
    7. '_days' → logprob: -11.875420570373535
    8. '\' → logprob: -12.250420570373535
    9. '_num' → logprob: -12.500420570373535
    10. '_age' → logprob: -12.625420570373535

Token 1288: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019298245897516608
    2. 'ars' → logprob: -6.501929759979248
    3. 'years' → logprob: -8.001930236816406
    4. 'als' → logprob: -9.626930236816406
    5. 'rs' → logprob: -12.126930236816406
    6. '_year' → logprob: -12.626930236816406
    7. 'ths' → logprob: -12.751930236816406
    8. 'days' → logprob: -12.876930236816406
    9. '_days' → logprob: -12.876930236816406
    10. '   ' → logprob: -13.251930236816406

Token 1289: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024012157693505287
    2. 'io' → logprob: -3.7740120887756348
    3. '	io' → logprob: -7.649012088775635
    4. '(io' → logprob: -8.524012565612793
    5. ' io' → logprob: -10.524012565612793
    6. '
' → logprob: -10.524012565612793
    7. '_io' → logprob: -10.774012565612793
    8. '"io' → logprob: -11.774012565612793
    9. '    
' → logprob: -12.649012565612793
    10. '```' → logprob: -13.274012565612793

Token 1290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024904031306505203
    2. 'io' → logprob: -6.002490520477295
    3. '	io' → logprob: -11.502490043640137
    4. ' io' → logprob: -13.002490043640137
    5. '_io' → logprob: -13.877490043640137
    6. '"io' → logprob: -14.627490043640137
    7. '(io' → logprob: -15.002490043640137
    8. '```' → logprob: -15.252490043640137
    9. '
' → logprob: -15.377490043640137
    10. '/io' → logprob: -16.752490997314453

Token 1291: ' io' (ID: 9818)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' (adapté à ' io') → logprob: -0.0031821096781641245
    2. '   ' → logprob: -5.7531819343566895
    3. ' io' → logprob: -12.503182411193848
    4. '	io' → logprob: -14.378182411193848
    5. '_io' → logprob: -16.50318145751953
    6. '(io' → logprob: -17.37818145751953
    7. '
' → logprob: -17.50318145751953
    8. '.io' → logprob: -18.25318145751953
    9. '"io' → logprob: -19.62818145751953
    10. 'IO' → logprob: -20.00318145751953

Token 1292: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -3.128163257315464e-07
    2. 'output' → logprob: -15.125
    3. '.' → logprob: -17.375
    4. ' .' → logprob: -19.375
    5. '.input' → logprob: -21.75
    6. '(output' → logprob: -22.125
    7. '	output' → logprob: -22.25
    8. '.out' → logprob: -22.375
    9. ' output' → logprob: -22.625
    10. '.Output' → logprob: -22.625

Token 1293: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -2.15310683415737e-05
    2. 'result' → logprob: -10.750021934509277
    3. '(results' → logprob: -17.50002098083496
    4. '(' → logprob: -18.50002098083496
    5. '=result' → logprob: -18.62502098083496
    6. '[result' → logprob: -19.25002098083496
    7. ' result' → logprob: -19.37502098083496
    8. '(
' → logprob: -19.87502098083496
    9. ',result' → logprob: -20.12502098083496
    10. '(resultado' → logprob: -20.62502098083496

Token 1294: ')

' (ID: 1029)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3308795690536499
    2. ')' → logprob: -1.58087956905365
    3. '()' → logprob: -2.5808796882629395
    4. '()
' → logprob: -8.955879211425781
    5. '())
' → logprob: -9.830879211425781
    6. '   ' → logprob: -11.830879211425781
    7. ')
' → logprob: -12.205879211425781
    8. ' )' → logprob: -12.580879211425781
    9. ' ())' → logprob: -13.330879211425781
    10. '```' → logprob: -13.330879211425781

Token 1295: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003217574267182499
    2. '```' → logprob: -8.125321388244629
    3. '
' → logprob: -11.250321388244629
    4. ' if' → logprob: -11.500321388244629
    5. '``' → logprob: -13.750321388244629
    6. '<|end|>' → logprob: -14.125321388244629
    7. '  
' → logprob: -15.375321388244629
    8. '\' → logprob: -15.500321388244629
    9. '    
' → logprob: -16.375322341918945
    10. '        
' → logprob: -16.750322341918945

Token 1296: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4741591513156891
    2. ' __' → logprob: -0.9741591215133667
    3. 'name' → logprob: -9.599159240722656
    4. '_name' → logprob: -12.349159240722656
    5. '```' → logprob: -12.349159240722656
    6. '___' → logprob: -12.974159240722656
    7. 'True' → logprob: -13.599159240722656
    8. ' True' → logprob: -14.974159240722656
    9. 'Name' → logprob: -15.099159240722656
    10. '/__' → logprob: -15.099159240722656

Token 1297: 'name' (ID: 897)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2795867919921875
    2. ' ==' → logprob: -1.9045867919921875
    3. '__' → logprob: -2.5295867919921875
    4. '=="' → logprob: -4.4045867919921875
    5. '=='' → logprob: -6.4045867919921875
    6. 'name' → logprob: -6.6545867919921875
    7. 'if' → logprob: -9.779586791992188
    8. ' __' → logprob: -10.029586791992188
    9. '```' → logprob: -10.779586791992188
    10. '==
' → logprob: -11.904586791992188

Token 1298: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001305950863752514
    2. '==' → logprob: -9.250130653381348
    3. '__.__' → logprob: -10.625130653381348
    4. ' ==' → logprob: -12.750130653381348
    5. '=="' → logprob: -12.875130653381348
    6. '=='' → logprob: -13.250130653381348
    7. '__('' → logprob: -13.375130653381348
    8. '__
' → logprob: -14.875130653381348
    9. '____' → logprob: -15.000130653381348
    10. '___' → logprob: -15.500130653381348

Token 1299: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.26602423191070557
    2. '__' → logprob: -1.6410242319107056
    3. ' ==' → logprob: -3.891024112701416
    4. '=="' → logprob: -4.641024112701416
    5. '=='' → logprob: -4.641024112701416
    6. '==
' → logprob: -10.016024589538574
    7. '===' → logprob: -11.266024589538574
    8. '=' → logprob: -11.641024589538574
    9. 'main' → logprob: -13.391024589538574
    10. '==='' → logprob: -13.516024589538574

Token 1300: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10021507740020752
    2. ''' → logprob: -2.350214958190918
    3. '__' → logprob: -11.975214958190918
    4. ' "__' → logprob: -13.350214958190918
    5. ' '__' → logprob: -15.975214958190918
    6. '"name' → logprob: -15.975214958190918
    7. '   ' → logprob: -17.225215911865234
    8. '"'' → logprob: -17.225215911865234
    9. '"user' → logprob: -17.225215911865234
    10. 'main' → logprob: -17.350215911865234

Token 1301: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00020115631923545152
    2. '__' → logprob: -8.875201225280762
    3. 'name' → logprob: -9.750201225280762
    4. '"' → logprob: -13.125201225280762
    5. ' main' → logprob: -15.125201225280762
    6. ''' → logprob: -15.125201225280762
    7. '_main' → logprob: -15.250201225280762
    8. 'built' → logprob: -16.250200271606445
    9. '-main' → logprob: -17.125200271606445
    10. '(main' → logprob: -18.125200271606445

Token 1302: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.47619783878326416
    2. '__":
' → logprob: -0.9761978387832642
    3. '__':
' → logprob: -6.476197719573975
    4. '__
' → logprob: -7.601197719573975
    5. '__["' → logprob: -10.851198196411133
    6. '__.' → logprob: -10.976198196411133
    7. '__
' → logprob: -11.226198196411133
    8. '__.__' → logprob: -11.976198196411133
    9. '==' → logprob: -12.226198196411133
    10. '=="' → logprob: -12.226198196411133

Token 1303: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.15176807343959808
    2. 'main' → logprob: -2.7767679691314697
    3. '__' → logprob: -3.5267679691314697
    4. '   ' → logprob: -3.6517679691314697
    5. ''' → logprob: -3.7767679691314697
    6. ' main' → logprob: -9.15176773071289
    7. '	main' → logprob: -9.52676773071289
    8. '    
' → logprob: -9.90176773071289
    9. '__":
' → logprob: -10.77676773071289
    10. '_main' → logprob: -11.15176773071289

Token 1304: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.5
    3. '	main' → logprob: -21.0
    4. '   ' → logprob: -23.25
    5. '_main' → logprob: -26.125
    6. '.main' → logprob: -26.25
    7. '(main' → logprob: -26.625
    8. 'import' → logprob: -28.25
    9. '```' → logprob: -29.5
    10. '
' → logprob: -29.75

Token 1305: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1303
Tokens correctement prédits (1ère position, stricte): 476
Tokens correctement prédits (1ère position, avec adaptation): 518
Tokens correctement prédits (top 10): 986
Précision stricte (1ère position): 36.53%
Précision adaptée (1ère position): 39.75%
Précision (top 10): 75.67%
================================================================================
