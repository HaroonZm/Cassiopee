================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def can_capture_all(n, balloons):
    # vehicle starts at position 0 with no balloons, time 0, distance 0
    pos = 0
    time = 0
    dist = 0
    carrying = []
    carried = 0
    
    for i in range(n):
        pi, ti = balloons[i]
        # before going to catch balloon i, if carrying 3 balloons, must return to house first to drop
        while len(carrying) == 3:
            # return to house
            d = abs(pos - 0)
            # speed with 3 balloons is 4 units time per distance
            need_time = 4 * d
            time += need_time
            dist += d
            pos = 0
            carrying = []
        
        # now move to balloon position
        d = abs(pi - pos)
        speed = len(carrying) + 1
        need_time = d * speed
        available_time = ti - time
        if need_time > available_time:
            return False, i+1
        
        time += need_time
        dist += d
        pos = pi
        
        # catch balloon (no time)
        carrying.append((pi, ti))
    
    # after catching last balloon(s), return to house to store them (can be 1-3 balloons)
    while len(carrying) > 0:
        d = abs(pos - 0)
        speed = len(carrying) + 1
        need_time = d * speed
        time += need_time
        dist += d
        pos = 0
        carrying = []
    
    return True, dist


while True:
    n = int(input())
    if n == 0:
        break
    balloons = []
    for _ in range(n):
        p, t = map(int, input().split())
        balloons.append((p,t))
    can_capture, val = can_capture_all(n, balloons)
    if can_capture:
        print("OK", val)
    else:
        print("NG", val)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' can' (ID: 665)
  → Token d'amorce (pas de prédiction)

Token 2: '_capture' (ID: 139174)
  → Token d'amorce (pas de prédiction)

Token 3: '_all' (ID: 13305)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11810234189033508
    2. '(' → logprob: -2.2431023120880127
    3. ' (' → logprob: -5.493102550506592
    4. ' ' → logprob: -8.368102073669434
    5. '```' → logprob: -8.368102073669434
    6. ''' → logprob: -9.243102073669434
    7. '_:' → logprob: -9.368102073669434
    8. ':' → logprob: -9.368102073669434
    9. 's' → logprob: -9.493102073669434
    10. '(space' → logprob: -9.743102073669434

Token 4: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.479333758354187
    2. '_' → logprob: -0.979333758354187
    3. ':' → logprob: -6.354333877563477
    4. '():' → logprob: -6.479333877563477
    5. '_:' → logprob: -7.229333877563477
    6. ' (' → logprob: -8.604333877563477
    7. '```' → logprob: -8.979333877563477
    8. '(space' → logprob: -9.229333877563477
    9. '(:' → logprob: -9.229333877563477
    10. '(_' → logprob: -9.354333877563477

Token 5: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20713333785533905
    2. ')' → logprob: -2.0821332931518555
    3. '):' → logprob: -2.8321332931518555
    4. 's' → logprob: -6.5821332931518555
    5. '_' → logprob: -6.8321332931518555
    6. ':' → logprob: -8.082133293151855
    7. 'e' → logprob: -9.082133293151855
    8. 'a' → logprob: -9.207133293151855
    9. 'u' → logprob: -9.957133293151855
    10. ',p' → logprob: -10.082133293151855

Token 6: ' balloons' (ID: 114791)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5664574503898621
    2. ' pieces' → logprob: -2.066457509994507
    3. ' positions' → logprob: -2.566457509994507
    4. ' k' → logprob: -3.066457509994507
    5. ' p' → logprob: -3.191457509994507
    6. ' r' → logprob: -3.941457509994507
    7. 'm' → logprob: -4.566457271575928
    8. ' q' → logprob: -4.566457271575928
    9. ' w' → logprob: -4.941457271575928
    10. ' player' → logprob: -5.191457271575928

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06579088419675827
    2. ',' → logprob: -2.940790891647339
    3. ')' → logprob: -4.56579065322876
    4. ':' → logprob: -8.065791130065918
    5. '[' → logprob: -10.440791130065918
    6. ' ):' → logprob: -10.815791130065918
    7. '```' → logprob: -10.815791130065918
    8. '):
' → logprob: -10.940791130065918
    9. ' ' → logprob: -12.065791130065918
    10. '   ' → logprob: -12.315791130065918

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004834617720916867
    2. '):' → logprob: -8.125483512878418
    3. '():' → logprob: -10.125483512878418
    4. '(' → logprob: -10.125483512878418
    5. '(:' → logprob: -10.625483512878418
    6. ':**' → logprob: -11.250483512878418
    7. '':' → logprob: -11.500483512878418
    8. '`:' → logprob: -11.875483512878418
    9. '```' → logprob: -12.000483512878418
    10. '_' → logprob: -12.250483512878418

Token 9: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5814621448516846
    2. ':' → logprob: -0.9564621448516846
    3. '```' → logprob: -4.0814619064331055
    4. '    
' → logprob: -5.2064619064331055
    5. '"' → logprob: -5.2064619064331055
    6. ' 
' → logprob: -5.4564619064331055
    7. ':
' → logprob: -5.5814619064331055
    8. ' ' → logprob: -5.8314619064331055
    9. '\n' → logprob: -6.2064619064331055
    10. '\' → logprob: -6.3314619064331055

Token 10: ' vehicle' (ID: 9540)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6221238970756531
    2. '   ' → logprob: -1.6221239566802979
    3. '#' → logprob: -2.997123956680298
    4. ' #' → logprob: -3.372123956680298
    5. 'space' → logprob: -4.122123718261719
    6. ' """' → logprob: -4.247123718261719
    7. ' if' → logprob: -4.247123718261719
    8. ' return' → logprob: -4.372123718261719
    9. ' for' → logprob: -4.372123718261719
    10. ' space' → logprob: -4.497123718261719

Token 11: ' starts' (ID: 13217)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28841641545295715
    2. ' ' → logprob: -2.0384163856506348
    3. ' =' → logprob: -2.2884163856506348
    4. 's' → logprob: -4.913416385650635
    5. ' _' → logprob: -5.163416385650635
    6. '=' → logprob: -6.038416385650635
    7. '.' → logprob: -7.413416385650635
    8. ')' → logprob: -7.413416385650635
    9. '_space' → logprob: -7.413416385650635
    10. ',' → logprob: -8.413416862487793

Token 12: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7690703272819519
    2. '_' → logprob: -1.0190703868865967
    3. ' with' → logprob: -2.8940703868865967
    4. ' at' → logprob: -3.1440703868865967
    5. '=' → logprob: -4.394070148468018
    6. ' _' → logprob: -4.644070148468018
    7. '   ' → logprob: -5.019070148468018
    8. '_at' → logprob: -5.144070148468018
    9. '```' → logprob: -5.144070148468018
    10. 'with' → logprob: -5.269070148468018

Token 13: ' position' (ID: 4010)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9819713830947876
    2. ' a' → logprob: -1.2319713830947876
    3. ' the' → logprob: -1.3569713830947876
    4. ' (' → logprob: -3.356971263885498
    5. '0' → logprob: -3.981971263885498
    6. ' position' → logprob: -5.106971263885498
    7. ''' → logprob: -5.731971263885498
    8. ' '' → logprob: -5.731971263885498
    9. 'the' → logprob: -5.981971263885498
    10. ' n' → logprob: -7.231971263885498

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08903314918279648
    2. '0' → logprob: -2.4640331268310547
    3. ' =' → logprob: -11.089033126831055
    4. '=' → logprob: -11.214033126831055
    5. ' pos' → logprob: -11.464033126831055
    6. ' vehicle' → logprob: -11.464033126831055
    7. ' position' → logprob: -11.964033126831055
    8. ' x' → logprob: -12.089033126831055
    9. '   ' → logprob: -12.214033126831055
    10. '    ' → logprob: -12.339033126831055

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014459635131061077
    2. ' ' → logprob: -4.264459609985352
    3. ' =' → logprob: -10.014459609985352
    4. '(' → logprob: -10.264459609985352
    5. 'n' → logprob: -10.389459609985352
    6. ' n' → logprob: -10.514459609985352
    7. '=' → logprob: -11.014459609985352
    8. ' (' → logprob: -11.014459609985352
    9. '`' → logprob: -11.139459609985352
    10. '   ' → logprob: -11.389459609985352

Token 16: ' with' (ID: 483)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21105162799358368
    2. '\' → logprob: -2.4610517024993896
    3. ':' → logprob: -3.2110517024993896
    4. '```' → logprob: -4.4610514640808105
    5. ' 
' → logprob: -4.5860514640808105
    6. '   ' → logprob: -4.5860514640808105
    7. '
' → logprob: -4.7110514640808105
    8. ' ' → logprob: -5.0860514640808105
    9. ' \' → logprob: -5.9610514640808105
    10. '     
' → logprob: -6.0860514640808105

Token 17: ' no' (ID: 860)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.225487470626831
    2. ' current' → logprob: -1.350487470626831
    3. ' ' → logprob: -2.225487470626831
    4. ' position' → logprob: -2.350487470626831
    5. '0' → logprob: -2.475487470626831
    6. ' velocity' → logprob: -2.725487470626831
    7. ' initial' → logprob: -3.975487470626831
    8. ' space' → logprob: -4.47548770904541
    9. ' an' → logprob: -4.47548770904541
    10. ' zero' → logprob: -4.85048770904541

Token 18: ' balloons' (ID: 114791)
  Prédit: ' velocity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' velocity' → logprob: -0.9401111602783203
    2. ' balloons' → logprob: -0.9401111602783203
    3. '_' → logprob: -3.4401111602783203
    4. ' energy' → logprob: -3.5651111602783203
    5. 'velocity' → logprob: -3.8151111602783203
    6. ' space' → logprob: -4.31511116027832
    7. ' ' → logprob: -4.94011116027832
    8. '_velocity' → logprob: -4.94011116027832
    9. ' balloon' → logprob: -5.06511116027832
    10. ' fuel' → logprob: -5.06511116027832

Token 19: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9675318598747253
    2. '```' → logprob: -1.4675319194793701
    3. '\n' → logprob: -2.21753191947937
    4. ',' → logprob: -2.59253191947937
    5. '   ' → logprob: -2.71753191947937
    6. '\' → logprob: -3.46753191947937
    7. '    
' → logprob: -4.217531681060791
    8. ' 
' → logprob: -4.342531681060791
    9. ' ' → logprob: -4.342531681060791
    10. '
' → logprob: -4.467531681060791

Token 20: ' time' (ID: 1058)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4735659956932068
    2. '    ' → logprob: -2.2235660552978516
    3. '     
' → logprob: -2.4735660552978516
    4. ' and' → logprob: -2.8485660552978516
    5. ' 
' → logprob: -3.2235660552978516
    6. ' so' → logprob: -4.473566055297852
    7. '   ' → logprob: -4.848566055297852
    8. '    
' → logprob: -5.098566055297852
    9. ' ,' → logprob: -5.223566055297852
    10. ' current' → logprob: -5.223566055297852

Token 21: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30142512917518616
    2. ' =' → logprob: -1.9264250993728638
    3. ' ' → logprob: -2.9264252185821533
    4. ' _' → logprob: -3.6764252185821533
    5. '=' → logprob: -4.926424980163574
    6. '_space' → logprob: -5.051424980163574
    7. '  ' → logprob: -5.676424980163574
    8. ' ,' → logprob: -5.926424980163574
    9. '_to' → logprob: -6.301424980163574
    10. ')' → logprob: -6.301424980163574

Token 22: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2402930110692978
    2. ' =' → logprob: -1.615293025970459
    3. '_elapsed' → logprob: -4.990293025970459
    4. '_' → logprob: -5.615293025970459
    5. '_pass' → logprob: -7.240293025970459
    6. '_remaining' → logprob: -7.365293025970459
    7. '_taken' → logprob: -7.490293025970459
    8. '_needed' → logprob: -7.990293025970459
    9. ' to' → logprob: -7.990293025970459
    10. ' ' → logprob: -8.2402925491333

Token 23: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2839183509349823
    2. '   ' → logprob: -1.7839183807373047
    3. '\n' → logprob: -3.5339183807373047
    4. ' ' → logprob: -4.158918380737305
    5. '\' → logprob: -4.408918380737305
    6. ' :' → logprob: -4.908918380737305
    7. ' 
' → logprob: -5.658918380737305
    8. '    
' → logprob: -6.408918380737305
    9. ',' → logprob: -6.533918380737305
    10. '   
' → logprob: -7.033918380737305

Token 24: ' distance' (ID: 9324)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7544941306114197
    2. '    ' → logprob: -1.1294941902160645
    3. ' ' → logprob: -3.0044941902160645
    4. ')' → logprob: -3.5044941902160645
    5. ' and' → logprob: -3.7544941902160645
    6. ',' → logprob: -4.3794941902160645
    7. ' )' → logprob: -4.5044941902160645
    8. '    
' → logprob: -4.7544941902160645
    9. ' ,' → logprob: -5.0044941902160645
    10. '     
' → logprob: -5.2544941902160645

Token 25: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04469459876418114
    2. '=' → logprob: -4.044694423675537
    3. ' ' → logprob: -4.419694423675537
    4. '_' → logprob: -5.169694423675537
    5. ',' → logprob: -5.419694423675537
    6. ')' → logprob: -6.544694423675537
    7. '_remaining' → logprob: -7.794694423675537
    8. ' ,' → logprob: -7.919694423675537
    9. ' )' → logprob: -8.169694900512695
    10. '   ' → logprob: -8.169694900512695

Token 26: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05484527349472046
    2. ' =' → logprob: -4.054845333099365
    3. '0' → logprob: -4.554845333099365
    4. 'covered' → logprob: -4.679845333099365
    5. ' traveled' → logprob: -5.054845333099365
    6. '_tr' → logprob: -5.179845333099365
    7. ' covered' → logprob: -6.804845333099365
    8. ' ' → logprob: -7.054845333099365
    9. ' travelled' → logprob: -7.929845333099365
    10. 'tr' → logprob: -8.054844856262207

Token 27: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05443689972162247
    2. '   ' → logprob: -3.8044369220733643
    3. ' :' → logprob: -4.554436683654785
    4. ',' → logprob: -5.054436683654785
    5. '):' → logprob: -5.929436683654785
    6. ':
' → logprob: -6.179436683654785
    7. ' ' → logprob: -6.304436683654785
    8. ')' → logprob: -6.929436683654785
    9. '
' → logprob: -6.929436683654785
    10. '```' → logprob: -7.054436683654785

Token 28: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10227129608392715
    2. '   ' → logprob: -2.977271318435669
    3. ',' → logprob: -3.727271318435669
    4. ' :' → logprob: -5.47727108001709
    5. '```' → logprob: -5.72727108001709
    6. ' ' → logprob: -6.10227108001709
    7. ':
' → logprob: -6.22727108001709
    8. '
' → logprob: -6.35227108001709
    9. ')' → logprob: -6.35227108001709
    10. '):' → logprob: -6.47727108001709

Token 29: ' pos' (ID: 1253)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49946022033691406
    2. '    ' → logprob: -2.374460220336914
    3. ' ' → logprob: -2.999460220336914
    4. ' 
' → logprob: -2.999460220336914
    5. '
' → logprob: -3.249460220336914
    6. ' if' → logprob: -3.624460220336914
    7. '```' → logprob: -3.999460220336914
    8. '<|end|>' → logprob: -4.249460220336914
    9. '    
' → logprob: -4.374460220336914
    10. '\' → logprob: -4.749460220336914

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7469022870063782
    2. 'ition' → logprob: -1.3719022274017334
    3. '=' → logprob: -1.6219022274017334
    4. ',' → logprob: -2.7469022274017334
    5. 'i' → logprob: -5.6219024658203125
    6. 'ITION' → logprob: -6.3719024658203125
    7. 'ession' → logprob: -6.6219024658203125
    8. '_' → logprob: -6.7469024658203125
    9. 'itions' → logprob: -7.1219024658203125
    10. 'itional' → logprob: -7.2469024658203125

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519364058971405
    2. '0' → logprob: -1.501936435699463
    3. ' ' → logprob: -13.751935958862305
    4. '```' → logprob: -13.814435958862305
    5. ' n' → logprob: -14.064435958862305
    6. '`' → logprob: -14.126935958862305
    7. 'n' → logprob: -14.251935958862305
    8. ' `' → logprob: -15.376935958862305
    9. ')' → logprob: -15.501935958862305
    10. '1' → logprob: -15.751935958862305

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '-' → logprob: -17.937524795532227
    4. '[' → logprob: -18.562524795532227
    5. '`' → logprob: -18.562524795532227
    6. '(' → logprob: -19.187524795532227
    7. '```' → logprob: -19.250024795532227
    8. ')' → logprob: -19.312524795532227
    9. '۰' → logprob: -19.500024795532227
    10. '1' → logprob: -19.875024795532227

Token 33: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.069538950920105
    2. '```' → logprob: -1.569538950920105
    3. ',' → logprob: -1.819538950920105
    4. '\n' → logprob: -2.0695390701293945
    5. '<|end|>' → logprob: -3.3195390701293945
    6. 'n' → logprob: -4.1945390701293945
    7. '\' → logprob: -4.3195390701293945
    8. '   ' → logprob: -4.3195390701293945
    9. ' ' → logprob: -4.5695390701293945
    10. 'newline' → logprob: -4.6945390701293945

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3165077567100525
    2. '<|end|>' → logprob: -2.5665078163146973
    3. '```' → logprob: -2.5665078163146973
    4. ' ' → logprob: -3.5665078163146973
    5. ',' → logprob: -3.6915078163146973
    6. '
' → logprob: -4.441507816314697
    7. '\n' → logprob: -4.691507816314697
    8. ')' → logprob: -5.066507816314697
    9. 'newline' → logprob: -5.066507816314697
    10. '<|end|>' → logprob: -5.441507816314697

Token 35: ' time' (ID: 1058)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6387128233909607
    2. 't' → logprob: -2.2637128829956055
    3. 'max' → logprob: -2.2637128829956055
    4. ' max' → logprob: -2.7637128829956055
    5. 'time' (adapté à ' time') → logprob: -2.8887128829956055
    6. '```' → logprob: -3.3887128829956055
    7. ' time' → logprob: -3.6387128829956055
    8. 'd' → logprob: -4.0137128829956055
    9. '_' → logprob: -5.0137128829956055
    10. '`' → logprob: -5.1387128829956055

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016657324507832527
    2. '_' → logprob: -4.89165735244751
    3. '=' → logprob: -5.01665735244751
    4. ' ' → logprob: -6.89165735244751
    5. ',' → logprob: -8.391656875610352
    6. ' +=' → logprob: -8.516656875610352
    7. ')' → logprob: -8.641656875610352
    8. '_space' → logprob: -8.766656875610352
    9. ' ,' → logprob: -9.266656875610352
    10. '  ' → logprob: -9.391656875610352

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -18.688825607299805
    4. '00' → logprob: -19.188825607299805
    5. '=' → logprob: -19.438825607299805
    6. ' ' → logprob: -19.688825607299805
    7. '۰' → logprob: -19.751325607299805
    8. '```' → logprob: -20.376325607299805
    9. '  ' → logprob: -20.626325607299805
    10. ')' → logprob: -21.001325607299805

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.625024795532227
    4. '=' → logprob: -18.687524795532227
    5. '۰' → logprob: -19.062524795532227
    6. '00' → logprob: -19.125024795532227
    7. ')' → logprob: -19.500024795532227
    8. '000' → logprob: -19.750024795532227
    9. '  ' → logprob: -19.750024795532227
    10. '-' → logprob: -19.875024795532227

Token 39: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37666013836860657
    2. '
' → logprob: -1.7516601085662842
    3. '<|end|>' → logprob: -2.626660108566284
    4. '    
' → logprob: -3.876660108566284
    5. '```' → logprob: -5.001660346984863
    6. ' ' → logprob: -5.126660346984863
    7. 'n' → logprob: -5.126660346984863
    8. '\n' → logprob: -5.251660346984863
    9. '<|end|>' → logprob: -5.251660346984863
    10. ')' → logprob: -6.126660346984863

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009821374900639057
    2. '
' → logprob: -6.00982141494751
    3. '```' → logprob: -6.00982141494751
    4. ' ' → logprob: -6.88482141494751
    5. '    
' → logprob: -7.13482141494751
    6. 'for' → logprob: -7.25982141494751
    7. '    ' → logprob: -7.88482141494751
    8. '<|end|>' → logprob: -7.88482141494751
    9. '  ' → logprob: -8.134820938110352
    10. ' for' → logprob: -8.384820938110352

Token 41: ' dist' (ID: 3601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46210426092147827
    2. ' for' → logprob: -1.337104320526123
    3. '   ' → logprob: -2.962104320526123
    4. 'max' → logprob: -4.337104320526123
    5. 'result' → logprob: -4.337104320526123
    6. '```' → logprob: -4.337104320526123
    7. 'd' → logprob: -5.587104320526123
    8. 'distance' → logprob: -5.712104320526123
    9. ' max' → logprob: -5.837104320526123
    10. '
' → logprob: -6.337104320526123

Token 42: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09500059485435486
    2. ' =' → logprob: -2.7200005054473877
    3. '_' → logprob: -3.9700005054473877
    4. 'ance' → logprob: -5.220000743865967
    5. '_=' → logprob: -9.095000267028809
    6. '   ' → logprob: -9.720000267028809
    7. 'a' → logprob: -9.845000267028809
    8. 'ances' → logprob: -9.970000267028809
    9. 'anced' → logprob: -10.220000267028809
    10. ' ' → logprob: -10.345000267028809

Token 43: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231258273124695
    2. ' ' → logprob: -0.8981258273124695
    3. ' ' → logprob: -13.898125648498535
    4. '   ' → logprob: -14.648125648498535
    5. ' n' → logprob: -15.523125648498535
    6. '  ' → logprob: -15.710625648498535
    7. 'n' → logprob: -15.835625648498535
    8. '1' → logprob: -16.27312660217285
    9. ')' → logprob: -16.71062660217285
    10. ',' → logprob: -16.96062660217285

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005542247672565281
    2. ' ' → logprob: -7.500554084777832
    3. 'n' → logprob: -14.125554084777832
    4. '-' → logprob: -16.12555503845215
    5. '   ' → logprob: -16.25055503845215
    6. ' n' → logprob: -16.93805503845215
    7. ')' → logprob: -17.00055503845215
    8. '1' → logprob: -17.31305503845215
    9. '00' → logprob: -17.31305503845215
    10. '=' → logprob: -17.43805503845215

Token 45: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19700883328914642
    2. '   ' → logprob: -2.5720088481903076
    3. '\n' → logprob: -3.1970088481903076
    4. '<|end|>' → logprob: -3.5720088481903076
    5. ' for' → logprob: -5.1970086097717285
    6. '  
' → logprob: -5.3220086097717285
    7. '<|end|>' → logprob: -5.5720086097717285
    8. '    
' → logprob: -5.8220086097717285
    9. 'for' → logprob: -5.9470086097717285
    10. '```' → logprob: -5.9470086097717285

Token 46: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.958223283290863
    2. '   ' → logprob: -1.0832233428955078
    3. '\n' → logprob: -2.083223342895508
    4. '```' → logprob: -2.583223342895508
    5. ' for' → logprob: -3.458223342895508
    6. 'for' → logprob: -3.833223342895508
    7. '    
' → logprob: -4.458223342895508
    8. '\' → logprob: -4.958223342895508
    9. '   
' → logprob: -6.708223342895508
    10. '' → logprob: -6.708223342895508

Token 47: ' carrying' (ID: 25328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0815022885799408
    2. ' for' → logprob: -2.5815021991729736
    3. '```' → logprob: -6.956502437591553
    4. '   ' → logprob: -7.206502437591553
    5. '
' → logprob: -7.581502437591553
    6. '\n' → logprob: -8.456501960754395
    7. ':' → logprob: -10.331501960754395
    8. 'f' → logprob: -10.456501960754395
    9. 'i' → logprob: -11.081501960754395
    10. 'd' → logprob: -11.081501960754395

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12328608334064484
    2. '_' → logprob: -2.248286008834839
    3. '=' → logprob: -4.623286247253418
    4. '_space' → logprob: -8.248286247253418
    5. ' ' → logprob: -9.373286247253418
    6. ' _' → logprob: -9.623286247253418
    7. '_count' → logprob: -10.248286247253418
    8. ')' → logprob: -11.123286247253418
    9. ',' → logprob: -11.248286247253418
    10. '_=' → logprob: -11.248286247253418

Token 49: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019307635724544525
    2. ' ' → logprob: -4.019307613372803
    3. 'set' → logprob: -7.644307613372803
    4. '[]' → logprob: -7.769307613372803
    5. ' set' → logprob: -8.769308090209961
    6. ' []' → logprob: -9.394308090209961
    7. '{}' → logprob: -11.394308090209961
    8. '   ' → logprob: -13.894308090209961
    9. '  ' → logprob: -13.894308090209961
    10. '[]}' → logprob: -14.394308090209961

Token 50: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0054831504821777
    2. ' for' → logprob: -1.2554831504821777
    3. '   ' → logprob: -1.5054831504821777
    4. '
' → logprob: -2.8804831504821777
    5. '\n' → logprob: -3.0054831504821777
    6. '\' → logprob: -4.755483150482178
    7. '    
' → logprob: -5.755483150482178
    8. '```' → logprob: -5.755483150482178
    9. '<|end|>' → logprob: -6.880483150482178
    10. 'newline' → logprob: -6.880483150482178

Token 51: ' carried' (ID: 18685)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.43154412508010864
    2. 'for' → logprob: -1.6815440654754639
    3. '
' → logprob: -2.931544065475464
    4. ' for' → logprob: -3.181544065475464
    5. '\' → logprob: -3.306544065475464
    6. '   ' → logprob: -4.306544303894043
    7. '```' → logprob: -4.931544303894043
    8. '' → logprob: -5.681544303894043
    9. '    
' → logprob: -6.181544303894043
    10. ':' → logprob: -6.181544303894043

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5245842337608337
    2. '_' → logprob: -1.3995842933654785
    3. '=' → logprob: -1.8995842933654785
    4. '_count' → logprob: -5.0245842933654785
    5. '_b' → logprob: -7.0245842933654785
    6. '_positions' → logprob: -7.3995842933654785
    7. ' ' → logprob: -7.6495842933654785
    8. '_space' → logprob: -7.7745842933654785
    9. '_=' → logprob: -7.7745842933654785
    10. '_ids' → logprob: -8.52458381652832

Token 53: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8918752074241638
    2. ' set' → logprob: -1.1418752670288086
    3. ' []' → logprob: -1.3918752670288086
    4. '0' → logprob: -4.641875267028809
    5. 'set' → logprob: -5.016875267028809
    6. '[]' → logprob: -5.266875267028809
    7. ' False' → logprob: -8.016875267028809
    8. '  ' → logprob: -8.266875267028809
    9. ' True' → logprob: -9.641875267028809
    10. ' {}' → logprob: -9.641875267028809

Token 54: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.14004045724868774
    2. 'set' → logprob: -2.640040397644043
    3. '0' → logprob: -2.890040397644043
    4. '{}' → logprob: -5.765040397644043
    5. 'False' → logprob: -8.765040397644043
    6. ' []' → logprob: -9.140040397644043
    7. '[]
' → logprob: -9.265040397644043
    8. ' set' → logprob: -9.515040397644043
    9. '[]}' → logprob: -9.515040397644043
    10. '[' → logprob: -10.140040397644043

Token 55: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6335538625717163
    2. '\n' → logprob: -1.0085538625717163
    3. '\' → logprob: -3.008553981781006
    4. '   ' → logprob: -4.008553981781006
    5. '```' → logprob: -4.883553981781006
    6. '' → logprob: -5.008553981781006
    7. 'for' → logprob: -5.133553981781006
    8. ':' → logprob: -5.633553981781006
    9. ' for' → logprob: -5.633553981781006
    10. '    
' → logprob: -6.133553981781006

Token 56: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30146631598472595
    2. ' for' → logprob: -1.4264663457870483
    3. '   ' → logprob: -3.926466226577759
    4. ' ' → logprob: -8.30146598815918
    5. ':' → logprob: -9.17646598815918
    6. '```' → logprob: -10.55146598815918
    7. '
' → logprob: -11.80146598815918
    8. ',' → logprob: -12.92646598815918
    9. '	for' → logprob: -13.92646598815918
    10. 'f' → logprob: -13.92646598815918

Token 57: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0014449955197051167
    2. 'f' → logprob: -6.8764448165893555
    3. 'i' → logprob: -8.626444816589355
    4. ' for' → logprob: -8.876444816589355
    5. 'while' → logprob: -9.876444816589355
    6. '   ' → logprob: -11.126444816589355
    7. 'fo' → logprob: -11.376444816589355
    8. 'n' → logprob: -13.251444816589355
    9. 'r' → logprob: -13.251444816589355
    10. '#' → logprob: -13.501444816589355

Token 58: ' i' (ID: 575)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5614159107208252
    2. ' ' → logprob: -1.4364159107208252
    3. ' i' → logprob: -1.8114159107208252
    4. ' balloon' → logprob: -3.686415910720825
    5. ' _' → logprob: -7.686415672302246
    6. '  ' → logprob: -7.686415672302246
    7. 'b' → logprob: -8.061415672302246
    8. ' ballon' → logprob: -8.186415672302246
    9. ' t' → logprob: -8.811415672302246
    10. 'i' → logprob: -8.936415672302246

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13567547500133514
    2. ' ' → logprob: -2.8856754302978516
    3. 'in' → logprob: -2.8856754302978516
    4. '  ' → logprob: -4.260675430297852
    5. 'n' → logprob: -7.885675430297852
    6. ' n' → logprob: -8.510675430297852
    7. ' ,' → logprob: -9.010675430297852
    8. '   ' → logprob: -9.010675430297852
    9. ',' → logprob: -9.135675430297852
    10. ' i' → logprob: -10.010675430297852

Token 60: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.006018148735165596
    2. 'range' → logprob: -5.131018161773682
    3. ' balloons' → logprob: -9.756017684936523
    4. ' ' → logprob: -11.256017684936523
    5. '(range' → logprob: -12.506017684936523
    6. '   ' → logprob: -12.506017684936523
    7. '	range' → logprob: -13.131017684936523
    8. ' xrange' → logprob: -13.381017684936523
    9. '```' → logprob: -14.131017684936523
    10. ' ran' → logprob: -14.256017684936523

Token 61: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09027063846588135
    2. '(len' → logprob: -2.965270519256592
    3. ' (' → logprob: -3.840270519256592
    4. '(n' → logprob: -4.340270519256592
    5. ' ' → logprob: -8.71527099609375
    6. ' len' → logprob: -9.96527099609375
    7. ' n' → logprob: -11.09027099609375
    8. '(length' → logprob: -12.21527099609375
    9. '(range' → logprob: -12.34027099609375
    10. ' )' → logprob: -12.71527099609375

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02134307660162449
    2. ')' → logprob: -3.8963429927825928
    3. ' ):' → logprob: -7.396343231201172
    4. '):
' → logprob: -9.271343231201172
    5. ',' → logprob: -10.271343231201172
    6. ' )' → logprob: -10.521343231201172
    7. ':' → logprob: -11.021343231201172
    8. '+' → logprob: -12.396343231201172
    9. '   ' → logprob: -12.646343231201172
    10. '),' → logprob: -13.771343231201172

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02552003785967827
    2. '    ' → logprob: -4.525519847869873
    3. ':' → logprob: -5.025519847869873
    4. '   ' → logprob: -5.900519847869873
    5. ' ' → logprob: -6.775519847869873
    6. '<|end|>' → logprob: -7.150519847869873
    7. '        
' → logprob: -7.275519847869873
    8. '     ' → logprob: -7.525519847869873
    9. '      ' → logprob: -8.025520324707031
    10. '        ' → logprob: -8.150520324707031

Token 64: ' pi' (ID: 6404)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6686183214187622
    2. '       ' → logprob: -1.5436183214187622
    3. '    ' → logprob: -2.2936182022094727
    4. ' 
' → logprob: -3.4186182022094727
    5. '        ' → logprob: -3.9186182022094727
    6. ' current' → logprob: -4.168618202209473
    7. '     
' → logprob: -4.168618202209473
    8. ' ' → logprob: -4.293618202209473
    9. ' next' → logprob: -4.543618202209473
    10. ' s' → logprob: -4.543618202209473

Token 65: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2540854215621948
    2. '=' → logprob: -2.2540855407714844
    3. ',' → logprob: -2.7540855407714844
    4. 'x' → logprob: -3.3790855407714844
    5. ' ' → logprob: -4.504085540771484
    6. 'c' → logprob: -5.879085540771484
    7. ' ,' → logprob: -6.504085540771484
    8. 't' → logprob: -6.754085540771484
    9. ')' → logprob: -7.004085540771484
    10. '[' → logprob: -7.129085540771484

Token 66: ' ti' (ID: 2919)
  Prédit: ' ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ti' → logprob: -0.5989312529563904
    2. 'ti' → logprob: -0.9739312529563904
    3. 'vi' → logprob: -3.223931312561035
    4. ' di' → logprob: -5.473931312561035
    5. ' ai' → logprob: -5.598931312561035
    6. ' vi' → logprob: -5.723931312561035
    7. 'ai' → logprob: -5.973931312561035
    8. '	ti' → logprob: -6.223931312561035
    9. 'di' → logprob: -6.473931312561035
    10. ' t' → logprob: -6.598931312561035

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029094183817505836
    2. '=' → logprob: -3.7790942192077637
    3. ',' → logprob: -5.154094219207764
    4. ' ,' → logprob: -10.279093742370605
    5. ' ' → logprob: -11.279093742370605
    6. ')' → logprob: -11.904093742370605
    7. '  ' → logprob: -14.904093742370605
    8. ' =
' → logprob: -15.279093742370605
    9. ' =)' → logprob: -15.404093742370605
    10. '    ' → logprob: -15.529093742370605

Token 68: ' balloons' (ID: 114791)
  Prédit: ' balloons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' balloons' → logprob: -0.043720267713069916
    2. 'ball' → logprob: -3.168720245361328
    3. 'b' → logprob: -7.418720245361328
    4. ' balloon' → logprob: -10.043720245361328
    5. ' ballots' → logprob: -10.668720245361328
    6. ' ball' → logprob: -10.793720245361328
    7. ' ballon' → logprob: -11.918720245361328
    8. '	b' → logprob: -12.293720245361328
    9. ' ' → logprob: -12.793720245361328
    10. ')' → logprob: -12.918720245361328

Token 69: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011009939044015482
    2. '[' → logprob: -9.125109672546387
    3. '[n' → logprob: -14.125109672546387
    4. '   ' → logprob: -15.625109672546387
    5. '\[' → logprob: -17.000110626220703
    6. '[ip' → logprob: -17.000110626220703
    7. ']' → logprob: -17.250110626220703
    8. '[p' → logprob: -17.625110626220703
    9. '[
' → logprob: -17.625110626220703
    10. '       ' → logprob: -18.250110626220703

Token 70: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0062506115064024925
    2. ']' → logprob: -5.381250381469727
    3. '])' → logprob: -6.881250381469727
    4. '[' → logprob: -7.631250381469727
    5. ' )' → logprob: -9.631250381469727
    6. ')]' → logprob: -10.756250381469727
    7. '`)' → logprob: -12.131250381469727
    8. '）' → logprob: -12.256250381469727
    9. ')])' → logprob: -12.506250381469727
    10. ')`' → logprob: -13.131250381469727

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.135542631149292
    2. '<|end|>' → logprob: -1.135542631149292
    3. ' 
' → logprob: -2.010542631149292
    4. '        
' → logprob: -2.510542631149292
    5. '  
' → logprob: -2.635542631149292
    6. '
' → logprob: -3.760542631149292
    7. ' ' → logprob: -4.260542869567871
    8. ',' → logprob: -5.010542869567871
    9. '<|end|>' → logprob: -5.385542869567871
    10. '       
' → logprob: -5.760542869567871

Token 72: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4447319507598877
    2. ' ' → logprob: -2.0697319507598877
    3. ' 
' → logprob: -2.1947319507598877
    4. ' if' → logprob: -3.1947319507598877
    5. '        
' → logprob: -3.6947319507598877
    6. 'if' → logprob: -3.8197319507598877
    7. '        ' → logprob: -4.069731712341309
    8. '    ' → logprob: -5.694731712341309
    9. '         
' → logprob: -6.694731712341309
    10. ' 
        
' → logprob: -6.694731712341309

Token 73: ' before' (ID: 2254)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04251021891832352
    2. 'if' → logprob: -3.7925102710723877
    3. ' while' → logprob: -4.667510032653809
    4. ' ' → logprob: -6.167510032653809
    5. '       ' → logprob: -6.167510032653809
    6. ' #' → logprob: -6.542510032653809
    7. '    ' → logprob: -7.042510032653809
    8. '        ' → logprob: -7.167510032653809
    9. ' time' → logprob: -7.167510032653809
    10. ' continue' → logprob: -7.667510032653809

Token 74: ' going' (ID: 2966)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5551050305366516
    2. '   ' → logprob: -1.3051049709320068
    3. ' the' → logprob: -2.430104970932007
    4. 'if' → logprob: -3.680104970932007
    5. 'pos' → logprob: -4.805105209350586
    6. ' moving' → logprob: -5.180105209350586
    7. '    ' → logprob: -5.305105209350586
    8. ' reaching' → logprob: -5.930105209350586
    9. ' pos' → logprob: -6.055105209350586
    10. 'the' → logprob: -6.055105209350586

Token 75: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2569214403629303
    2. 'to' → logprob: -1.506921410560608
    3. ' for' → logprob: -5.881921291351318
    4. ',' → logprob: -7.631921291351318
    5. 'for' → logprob: -7.631921291351318
    6. '_to' → logprob: -8.006921768188477
    7. ' =' → logprob: -8.631921768188477
    8. ' on' → logprob: -8.756921768188477
    9. ' if' → logprob: -9.631921768188477
    10. '   ' → logprob: -9.756921768188477

Token 76: ' catch' (ID: 3494)
  Prédit: ' pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pi' → logprob: -0.5459141731262207
    2. 'pi' → logprob: -1.0459141731262207
    3. ' pick' → logprob: -3.9209141731262207
    4. ' the' → logprob: -4.295914173126221
    5. 'pick' → logprob: -4.545914173126221
    6. 'pos' → logprob: -4.795914173126221
    7. ' capture' → logprob: -5.545914173126221
    8. 'the' → logprob: -5.670914173126221
    9. 'p' → logprob: -5.920914173126221
    10. ' p' → logprob: -6.920914173126221

Token 77: ' balloon' (ID: 63124)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6642612218856812
    2. 'pi' → logprob: -1.4142612218856812
    3. 'the' → logprob: -2.6642613410949707
    4. ' pi' → logprob: -2.6642613410949707
    5. ' if' → logprob: -3.0392613410949707
    6. ',' → logprob: -4.039261341094971
    7. '(pi' → logprob: -4.789261341094971
    8. 'if' → logprob: -4.789261341094971
    9. ' (' → logprob: -5.414261341094971
    10. ' next' → logprob: -5.539261341094971

Token 78: ' i' (ID: 575)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03636239469051361
    2. ' if' → logprob: -4.286362171173096
    3. '   ' → logprob: -4.536362171173096
    4. ' ,' → logprob: -5.286362171173096
    5. '       ' → logprob: -5.661362171173096
    6. 'if' → logprob: -6.411362171173096
    7. '    ' → logprob: -7.786362171173096
    8. ' ' → logprob: -9.036362648010254
    9. ':' → logprob: -9.286362648010254
    10. '=' → logprob: -9.661362648010254

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03211567550897598
    2. ' ,' → logprob: -4.782115459442139
    3. ' ' → logprob: -5.032115459442139
    4. '       ' → logprob: -5.282115459442139
    5. '<|end|>' → logprob: -5.907115459442139
    6. ' if' → logprob: -6.032115459442139
    7. '   ' → logprob: -6.032115459442139
    8. ':' → logprob: -6.407115459442139
    9. '    ' → logprob: -7.282115459442139
    10. ' 
' → logprob: -8.032115936279297

Token 80: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2172102928161621
    2. ' while' → logprob: -1.717210292816162
    3. 'if' → logprob: -5.467210292816162
    4. ' time' → logprob: -5.592210292816162
    5. ' #' → logprob: -5.717210292816162
    6. 'while' → logprob: -6.092210292816162
    7. '#' → logprob: -7.717210292816162
    8. '   ' → logprob: -7.967210292816162
    9. 'time' → logprob: -8.59221076965332
    10. ' you' → logprob: -8.59221076965332

Token 81: ' carrying' (ID: 25328)
  Prédit: ' carrying'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carrying' → logprob: -0.08435574173927307
    2. 'car' → logprob: -2.9593558311462402
    3. ' carried' → logprob: -4.95935583114624
    4. ' pos' → logprob: -5.20935583114624
    5. ' len' → logprob: -5.58435583114624
    6. ' time' → logprob: -5.58435583114624
    7. ' not' → logprob: -6.20935583114624
    8. ' dist' → logprob: -6.58435583114624
    9. ' ' → logprob: -6.83435583114624
    10. 'pos' → logprob: -6.95935583114624

Token 82: ' ' (ID: 220)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.34811943769454956
    2. ' ' → logprob: -2.4731194972991943
    3. ' any' → logprob: -2.7231194972991943
    4. ':' → logprob: -3.0981194972991943
    5. 'and' → logprob: -3.2231194972991943
    6. '>' → logprob: -4.098119258880615
    7. ' >' → logprob: -4.348119258880615
    8. ' a' → logprob: -4.473119258880615
    9. '<|end|>' → logprob: -5.973119258880615
    10. ',' → logprob: -5.973119258880615

Token 83: '3' (ID: 18)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.5968435406684875
    2. ' and' → logprob: -1.9718434810638428
    3. 'any' → logprob: -2.5968434810638428
    4. 'and' → logprob: -2.5968434810638428
    5. ' balloons' → logprob: -2.9718434810638428
    6. '>' → logprob: -3.3468434810638428
    7. 'ball' → logprob: -3.9718434810638428
    8. 'len' → logprob: -4.471843719482422
    9. ' ' → logprob: -4.596843719482422
    10. 'more' → logprob: -4.971843719482422

Token 84: ' balloons' (ID: 114791)
  Prédit: ' balloons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' balloons' → logprob: -0.7800465822219849
    2. ' and' → logprob: -1.4050465822219849
    3. ' or' → logprob: -2.1550464630126953
    4. 'and' → logprob: -2.9050464630126953
    5. ',' → logprob: -3.1550464630126953
    6. ' ' → logprob: -3.5300464630126953
    7. 'ball' → logprob: -3.9050464630126953
    8. '<|end|>' → logprob: -4.530046463012695
    9. ' ,' → logprob: -4.905046463012695
    10. 'or' → logprob: -6.030046463012695

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4351118803024292
    2. ' and' → logprob: -1.1851118803024292
    3. 'and' → logprob: -3.8101119995117188
    4. ':' → logprob: -4.435111999511719
    5. '   ' → logprob: -5.310111999511719
    6. ' ,' → logprob: -5.435111999511719
    7. ' or' → logprob: -6.810111999511719
    8. ' ' → logprob: -7.185111999511719
    9. ' if' → logprob: -7.310111999511719
    10. '    ' → logprob: -8.185111999511719

Token 86: ' must' (ID: 2804)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.870029628276825
    2. '        ' → logprob: -1.8700296878814697
    3. ' return' → logprob: -1.8700296878814697
    4. ' continue' → logprob: -2.4950296878814697
    5. '    ' → logprob: -2.6200296878814697
    6. ' if' → logprob: -2.8700296878814697
    7. ' ' → logprob: -3.8700296878814697
    8. '   ' → logprob: -4.995029449462891
    9. '           ' → logprob: -5.120029449462891
    10. 'continue' → logprob: -5.370029449462891

Token 87: ' return' (ID: 622)
  Prédit: ' drop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' drop' → logprob: -0.5043866634368896
    2. ' return' → logprob: -2.0043866634368896
    3. ' deliver' → logprob: -2.2543866634368896
    4. ' go' → logprob: -3.1293866634368896
    5. ' release' → logprob: -3.3793866634368896
    6. 'drop' → logprob: -3.6293866634368896
    7. 'deliver' → logprob: -4.004386901855469
    8. '   ' → logprob: -4.754386901855469
    9. 'return' → logprob: -5.254386901855469
    10. 'release' → logprob: -5.629386901855469

Token 88: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2342490702867508
    2. ' ' → logprob: -1.7342491149902344
    3. 'to' → logprob: -3.7342491149902344
    4. '    ' → logprob: -5.359249114990234
    5. '   ' → logprob: -6.484249114990234
    6. '  ' → logprob: -7.109249114990234
    7. '<|end|>' → logprob: -8.859249114990234
    8. ' '' → logprob: -9.109249114990234
    9. '0' → logprob: -9.234249114990234
    10. ' None' → logprob: -9.359249114990234

Token 89: ' house' (ID: 4276)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.19758455455303192
    2. '0' → logprob: -2.572584629058838
    3. 'base' → logprob: -3.072584629058838
    4. ' ' → logprob: -3.447584629058838
    5. ' the' → logprob: -5.072584629058838
    6. ' drop' → logprob: -6.072584629058838
    7. ' pick' → logprob: -6.197584629058838
    8. 'pos' → logprob: -6.447584629058838
    9. ' collect' → logprob: -6.447584629058838
    10. ' home' → logprob: -6.697584629058838

Token 90: ' first' (ID: 1577)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5033851861953735
    2. '       ' → logprob: -1.7533851861953735
    3. '   ' → logprob: -2.378385066986084
    4. ' ' → logprob: -3.378385066986084
    5. '    ' → logprob: -3.878385066986084
    6. ',' → logprob: -4.003385066986084
    7. '\' → logprob: -4.003385066986084
    8. '.' → logprob: -4.753385066986084
    9. '<|end|>' → logprob: -5.128385066986084
    10. '\n' → logprob: -5.253385066986084

Token 91: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19853779673576355
    2. ':' → logprob: -2.698537826538086
    3. '   ' → logprob: -3.073537826538086
    4. '\' → logprob: -3.823537826538086
    5. '\n' → logprob: -4.198537826538086
    6. '    ' → logprob: -4.573537826538086
    7. '        
' → logprob: -6.073537826538086
    8. '<|end|>' → logprob: -6.198537826538086
    9. ' ' → logprob: -6.323537826538086
    10. ',' → logprob: -6.323537826538086

Token 92: ' drop' (ID: 9440)
  Prédit: ' drop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' drop' → logprob: -1.352837324142456
    2. ' return' → logprob: -1.977837324142456
    3. ' reset' → logprob: -2.227837324142456
    4. '<|end|>' → logprob: -2.477837324142456
    5. ' deliver' → logprob: -2.602837324142456
    6. ' ' → logprob: -2.977837324142456
    7. ' unload' → logprob: -3.102837324142456
    8. ' deposit' → logprob: -3.852837324142456
    9. 'drop' → logprob: -3.977837324142456
    10. 'deliver' → logprob: -3.977837324142456

Token 93: '
' (ID: 198)
  Prédit: ' off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' off' → logprob: -0.398420512676239
    2. 'off' → logprob: -1.2734205722808838
    3. '   ' → logprob: -3.773420572280884
    4. ')' → logprob: -5.273420333862305
    5. ' ' → logprob: -5.273420333862305
    6. '       ' → logprob: -5.648420333862305
    7. '    ' → logprob: -5.648420333862305
    8. '_' → logprob: -6.148420333862305
    9. ' them' → logprob: -6.148420333862305
    10. '  ' → logprob: -7.273420333862305

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35717451572418213
    2. '   ' → logprob: -1.2321745157241821
    3. '    ' → logprob: -5.357174396514893
    4. '```' → logprob: -6.357174396514893
    5. ' ' → logprob: -7.607174396514893
    6. ' if' → logprob: -7.857174396514893
    7. '        ' → logprob: -8.35717487335205
    8. '  ' → logprob: -8.73217487335205
    9. ':' → logprob: -8.73217487335205
    10. '     ' → logprob: -9.10717487335205

Token 95: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18535493314266205
    2. '   ' → logprob: -2.3103549480438232
    3. '    ' → logprob: -4.060354709625244
    4. '\n' → logprob: -4.185354709625244
    5. ' if' → logprob: -4.685354709625244
    6. ' ' → logprob: -5.060354709625244
    7. '\' → logprob: -5.560354709625244
    8. ' 
' → logprob: -5.810354709625244
    9. '        ' → logprob: -6.310354709625244
    10. ',' → logprob: -6.435354709625244

Token 96: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0092121921479702
    2. ' carrying' → logprob: -5.509212017059326
    3. 'len' → logprob: -5.634212017059326
    4. ' carried' → logprob: -6.884212017059326
    5. '(len' → logprob: -8.134212493896484
    6. ' ' → logprob: -8.509212493896484
    7. 'car' → logprob: -11.884212493896484
    8. '	len' → logprob: -12.009212493896484
    9. ' carr' → logprob: -12.759212493896484
    10. '  ' → logprob: -12.759212493896484

Token 97: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.009420174174010754
    2. '(' → logprob: -4.884420394897461
    3. ' (' → logprob: -6.384420394897461
    4. '(car' → logprob: -9.009420394897461
    5. '(
' → logprob: -13.884420394897461
    6. ' ' → logprob: -15.259420394897461
    7. '(

' → logprob: -15.509420394897461
    8. '(cap' → logprob: -16.13442039489746
    9. '(space' → logprob: -16.25942039489746
    10. '('' → logprob: -16.25942039489746

Token 98: 'arry' (ID: 20052)
  Prédit: 'arry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arry' → logprob: -0.001072823186405003
    2. 'arring' → logprob: -7.501072883605957
    3. 'ar' → logprob: -8.376072883605957
    4. 'arri' → logprob: -9.126072883605957
    5. 'arr' → logprob: -9.251072883605957
    6. '	' → logprob: -11.126072883605957
    7. 'a' → logprob: -11.501072883605957
    8. ' carrying' → logprob: -11.501072883605957
    9. 'array' → logprob: -11.501072883605957
    10. 'ary' → logprob: -12.001072883605957

Token 99: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.029412899166345596
    2. '(' → logprob: -3.9044129848480225
    3. '(c' → logprob: -4.779412746429443
    4. '(g' → logprob: -9.404413223266602
    5. '-ing' → logprob: -9.779413223266602
    6. 'g' → logprob: -10.029413223266602
    7. '()' → logprob: -10.154413223266602
    8. 'i' → logprob: -10.154413223266602
    9. '_ing' → logprob: -10.779413223266602
    10. ''ing' → logprob: -10.904413223266602

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003869785461574793
    2. ' )' → logprob: -5.753870010375977
    3. ')==' → logprob: -7.878870010375977
    4. ')>=' → logprob: -8.378870010375977
    5. '==' → logprob: -10.128870010375977
    6. ' ==' → logprob: -10.253870010375977
    7. ' >=' → logprob: -12.628870010375977
    8. ')<' → logprob: -13.253870010375977
    9. '>=' → logprob: -13.378870010375977
    10. ' ' → logprob: -14.753870010375977

Token 101: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1919252574443817
    2. ' >=' → logprob: -2.191925287246704
    3. '==' → logprob: -2.941925287246704
    4. '>=' → logprob: -4.691925048828125
    5. ')' → logprob: -7.316925048828125
    6. ' ' → logprob: -8.816925048828125
    7. '>' → logprob: -10.191925048828125
    8. ')>=' → logprob: -10.316925048828125
    9. ')==' → logprob: -10.316925048828125
    10. '=' → logprob: -10.941925048828125

Token 102: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20141470432281494
    2. '3' → logprob: -1.701414704322815
    3. '4' → logprob: -13.826415061950684
    4. '  ' → logprob: -15.201415061950684
    5. ' ' → logprob: -16.451414108276367
    6. '<|end|>' → logprob: -17.326414108276367
    7. '```' → logprob: -17.826414108276367
    8. '   ' → logprob: -18.263914108276367
    9. '0' → logprob: -19.201414108276367
    10. ' 
' → logprob: -19.326414108276367

Token 103: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0076065086759626865
    2. ' ' → logprob: -4.882606506347656
    3. '  ' → logprob: -15.632606506347656
    4. '   ' → logprob: -15.882606506347656
    5. '```' → logprob: -17.007606506347656
    6. '4' → logprob: -17.320106506347656
    7. ')' → logprob: -18.257606506347656
    8. '    ' → logprob: -18.632606506347656
    9. ' ' → logprob: -19.195106506347656
    10. '0' → logprob: -19.445106506347656

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1474510282278061
    2. ' and' → logprob: -2.0224509239196777
    3. 'and' → logprob: -5.897450923919678
    4. ' :' → logprob: -6.522450923919678
    5. ':
' → logprob: -7.647450923919678
    6. '):' → logprob: -10.772451400756836
    7. '   ' → logprob: -11.022451400756836
    8. ' ' → logprob: -11.897451400756836
    9. ',' → logprob: -12.272451400756836
    10. ')' → logprob: -12.272451400756836

Token 105: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06271205097436905
    2. '
' → logprob: -3.5627119541168213
    3. '   ' → logprob: -3.8127119541168213
    4. ':' → logprob: -5.6877121925354
    5. '\n' → logprob: -5.6877121925354
    6. ':
' → logprob: -6.5627121925354
    7. ' and' → logprob: -7.9377121925354
    8. '```' → logprob: -7.9377121925354
    9. '        
' → logprob: -8.062711715698242
    10. '\' → logprob: -8.562711715698242

Token 106: ' #' (ID: 1069)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.3148355782032013
    2. ' dist' → logprob: -2.189835548400879
    3. ' if' → logprob: -2.314835548400879
    4. ' time' → logprob: -3.939835548400879
    5. 'pos' → logprob: -4.314835548400879
    6. ' #' → logprob: -5.189835548400879
    7. ' return' → logprob: -5.314835548400879
    8. '       ' → logprob: -5.439835548400879
    9. 'dist' → logprob: -6.439835548400879
    10. '   ' → logprob: -6.564835548400879

Token 107: ' return' (ID: 622)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -1.0752363204956055
    2. ' dist' → logprob: -1.3252363204956055
    3. 'pos' → logprob: -2.3252363204956055
    4. 'dist' → logprob: -2.8252363204956055
    5. ' time' → logprob: -2.9502363204956055
    6. ' if' → logprob: -2.9502363204956055
    7. '#' → logprob: -3.7002363204956055
    8. 'time' → logprob: -3.8252363204956055
    9. ' return' → logprob: -4.0752363204956055
    10. ' #' → logprob: -4.2002363204956055

Token 108: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6736781597137451
    2. '_pos' → logprob: -1.2986781597137451
    3. 'to' → logprob: -2.923678159713745
    4. '_to' → logprob: -3.048678159713745
    5. ' to' → logprob: -3.173678159713745
    6. ' ' → logprob: -3.923678159713745
    7. 'pos' → logprob: -4.048678398132324
    8. ' pos' → logprob: -4.173678398132324
    9. '_home' → logprob: -5.048678398132324
    10. 'ing' → logprob: -5.423678398132324

Token 109: ' house' (ID: 4276)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4184117019176483
    2. '0' → logprob: -1.1684117317199707
    3. ' pos' → logprob: -3.9184117317199707
    4. 'pos' → logprob: -4.543411731719971
    5. ' house' → logprob: -8.918411254882812
    6. 'house' → logprob: -9.293411254882812
    7. ' home' → logprob: -9.543411254882812
    8. ' position' → logprob: -9.918411254882812
    9. 'home' → logprob: -10.480911254882812
    10. '```' → logprob: -10.605911254882812

Token 110: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.353565514087677
    2. '
' → logprob: -1.7285654544830322
    3. '               ' → logprob: -3.1035654544830322
    4. ' if' → logprob: -4.103565692901611
    5. 'pos' → logprob: -4.228565692901611
    6. '=' → logprob: -4.478565692901611
    7. ':' → logprob: -5.228565692901611
    8. '            
' → logprob: -5.603565692901611
    9. '            ' → logprob: -5.853565692901611
    10. 'dist' → logprob: -5.853565692901611

Token 111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04759417474269867
    2. '
' → logprob: -4.29759407043457
    3. 'pos' → logprob: -4.29759407043457
    4. ' if' → logprob: -5.17259407043457
    5. ' pos' → logprob: -6.17259407043457
    6. ',' → logprob: -6.42259407043457
    7. '       ' → logprob: -6.54759407043457
    8. '               ' → logprob: -6.92259407043457
    9. '            
' → logprob: -6.92259407043457
    10. '=' → logprob: -7.04759407043457

Token 112: ' d' (ID: 272)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6654612421989441
    2. 'dist' → logprob: -1.0404613018035889
    3. ' pos' → logprob: -3.540461301803589
    4. '           ' → logprob: -3.540461301803589
    5. 'pos' → logprob: -3.665461301803589
    6. ' time' → logprob: -4.16546106338501
    7. ' if' → logprob: -4.29046106338501
    8. 'time' → logprob: -4.54046106338501
    9. '       ' → logprob: -5.91546106338501
    10. 'if' → logprob: -5.91546106338501

Token 113: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.0580856055021286
    2. ' =' → logprob: -3.1830856800079346
    3. 'istance' → logprob: -4.6830854415893555
    4. '   ' → logprob: -6.3080854415893555
    5. '=' → logprob: -6.8080854415893555
    6. 'is' → logprob: -7.3080854415893555
    7. 'i' → logprob: -7.6830854415893555
    8. ' ' → logprob: -8.058085441589355
    9. ' ist' → logprob: -8.183085441589355
    10. ' +=' → logprob: -8.683085441589355

Token 114: ' abs' (ID: 8443)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.058814652264118195
    2. ' pos' → logprob: -3.558814764022827
    3. 'abs' → logprob: -3.683814764022827
    4. 'dist' → logprob: -6.308814525604248
    5. ' abs' → logprob: -7.058814525604248
    6. '   ' → logprob: -7.683814525604248
    7. ' dist' → logprob: -8.558815002441406
    8. '	pos' → logprob: -9.683815002441406
    9. '0' → logprob: -10.808815002441406
    10. '  ' → logprob: -11.246315002441406

Token 115: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.001531885820440948
    2. 'pos' → logprob: -6.876532077789307
    3. '(' → logprob: -7.626532077789307
    4. ' pos' → logprob: -11.876531600952148
    5. '(dist' → logprob: -13.751531600952148
    6. '(position' → logprob: -14.001531600952148
    7. ' (' → logprob: -14.001531600952148
    8. '	pos' → logprob: -14.626531600952148
    9. ',pos' → logprob: -15.376531600952148
    10. '(p' → logprob: -15.626531600952148

Token 116: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2502531111240387
    2. ' -' → logprob: -2.000253200531006
    3. '-' → logprob: -2.500253200531006
    4. ' )' → logprob: -5.750253200531006
    5. '   ' → logprob: -7.875253200531006
    6. '0' → logprob: -8.625252723693848
    7. '<|end|>' → logprob: -8.875252723693848
    8. ' ' → logprob: -9.750252723693848
    9. '  ' → logprob: -10.875252723693848
    10. '),' → logprob: -11.500252723693848

Token 117: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000627610192168504
    2. ' ' → logprob: -7.375627517700195
    3. ')' → logprob: -13.875627517700195
    4. '   ' → logprob: -16.625627517700195
    5. '```' → logprob: -17.375627517700195
    6. '`' → logprob: -17.875627517700195
    7. '  ' → logprob: -17.875627517700195
    8. '<|end|>' → logprob: -18.125627517700195
    9. '[' → logprob: -18.625627517700195
    10. '۰' → logprob: -18.813127517700195

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002043748099822551
    2. ' ' → logprob: -8.500204086303711
    3. ')' → logprob: -14.375204086303711
    4. '   ' → logprob: -15.625204086303711
    5. '```' → logprob: -16.62520408630371
    6. '  ' → logprob: -17.75020408630371
    7. '           ' → logprob: -18.56270408630371
    8. '[' → logprob: -18.75020408630371
    9. '00' → logprob: -18.87520408630371
    10. '`' → logprob: -18.93770408630371

Token 119: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001347615267150104
    2. ')
' → logprob: -6.626347541809082
    3. ' )' → logprob: -11.876347541809082
    4. '           ' → logprob: -12.126347541809082
    5. ')
' → logprob: -13.001347541809082
    6. ')

' → logprob: -13.626347541809082
    7. '       ' → logprob: -13.876347541809082
    8. '))' → logprob: -14.251347541809082
    9. '   ' → logprob: -14.501347541809082
    10. ')*' → logprob: -14.751347541809082

Token 120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35654953122138977
    2. '
' → logprob: -1.4815495014190674
    3. ')' → logprob: -3.2315495014190674
    4. ')
' → logprob: -4.4815497398376465
    5. '       ' → logprob: -4.9815497398376465
    6. ' 
' → logprob: -5.4815497398376465
    7. '<|end|>' → logprob: -5.7315497398376465
    8. '\n' → logprob: -6.2315497398376465
    9. '            
' → logprob: -6.3565497398376465
    10. '   ' → logprob: -7.3565497398376465

Token 121: ' #' (ID: 1069)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.5464136004447937
    2. 'time' → logprob: -0.9214136004447937
    3. ' dist' → logprob: -4.796413421630859
    4. 'dist' → logprob: -5.046413421630859
    5. '
' → logprob: -5.796413421630859
    6. ' if' → logprob: -5.921413421630859
    7. '           ' → logprob: -7.296413421630859
    8. 'pos' → logprob: -7.671413421630859
    9. '   ' → logprob: -7.796413421630859
    10. ' pos' → logprob: -7.921413421630859

Token 122: ' speed' (ID: 7733)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.046766676008701324
    2. ' time' → logprob: -3.671766757965088
    3. 'dist' → logprob: -4.421766757965088
    4. 'if' → logprob: -5.921766757965088
    5. '           ' → logprob: -6.421766757965088
    6. ' if' → logprob: -6.671766757965088
    7. 'pos' → logprob: -6.796766757965088
    8. ' dist' → logprob: -6.921766757965088
    9. '   ' → logprob: -8.17176628112793
    10. ' pos' → logprob: -9.04676628112793

Token 123: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28298017382621765
    2. '=' → logprob: -1.40798020362854
    3. ' +=' → logprob: -7.157979965209961
    4. ' ' → logprob: -7.907979965209961
    5. ' is' → logprob: -9.157979965209961
    6. '+=' → logprob: -9.407979965209961
    7. '1' → logprob: -9.532979965209961
    8. 's' → logprob: -9.657979965209961
    9. '           ' → logprob: -9.907979965209961
    10. ')' → logprob: -9.907979965209961

Token 124: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.4931526184082031
    2. 'car' → logprob: -1.6181526184082031
    3. ' carrying' → logprob: -1.7431526184082031
    4. ' ' → logprob: -1.9931526184082031
    5. ' len' → logprob: -2.868152618408203
    6. 'len' → logprob: -3.243152618408203
    7. 'out' → logprob: -3.368152618408203
    8. ' carried' → logprob: -3.743152618408203
    9. ' balloons' → logprob: -3.993152618408203
    10. '1' → logprob: -4.368152618408203

Token 125: '3' (ID: 18)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6059613823890686
    2. '3' → logprob: -1.2309613227844238
    3. 'len' → logprob: -2.730961322784424
    4. 'd' → logprob: -3.730961322784424
    5. '1' → logprob: -4.105961322784424
    6. '0' → logprob: -4.355961322784424
    7. ' ' → logprob: -4.480961322784424
    8. 'ball' → logprob: -4.605961322784424
    9. ' len' → logprob: -6.105961322784424
    10. 'carry' → logprob: -6.105961322784424

Token 126: ' balloons' (ID: 114791)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2287130206823349
    2. '=' → logprob: -1.728713035583496
    3. ' /' → logprob: -4.978713035583496
    4. ' +' → logprob: -5.603713035583496
    5. '+' → logprob: -5.853713035583496
    6. ' +=' → logprob: -5.853713035583496
    7. 's' → logprob: -5.978713035583496
    8. ' ' → logprob: -6.603713035583496
    9. '/' → logprob: -6.603713035583496
    10. ')' → logprob: -6.978713035583496

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8473052978515625
    2. ' ' → logprob: -1.0973052978515625
    3. '2' → logprob: -2.2223052978515625
    4. '3' → logprob: -2.9723052978515625
    5. '0' → logprob: -3.0973052978515625
    6. '4' → logprob: -4.4723052978515625
    7. '5' → logprob: -4.4723052978515625
    8. '10' → logprob: -6.2223052978515625
    9. '6' → logprob: -6.3473052978515625
    10. 'd' → logprob: -6.4723052978515625

Token 129: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.979166567325592
    2. '0' → logprob: -1.3541665077209473
    3. '2' → logprob: -1.7291665077209473
    4. '3' → logprob: -2.2291665077209473
    5. '5' → logprob: -3.4791665077209473
    6. '4' → logprob: -3.9791665077209473
    7. '10' → logprob: -4.979166507720947
    8. '6' → logprob: -5.229166507720947
    9. 'd' → logprob: -5.604166507720947
    10. '7' → logprob: -5.979166507720947

Token 130: ' units' (ID: 13306)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5686540007591248
    2. ' /' → logprob: -0.9436540007591248
    3. ' -' → logprob: -4.4436540603637695
    4. ' ' → logprob: -5.0686540603637695
    5. '
' → logprob: -5.0686540603637695
    6. '0' → logprob: -5.1936540603637695
    7. ' 
' → logprob: -6.0686540603637695
    8. '4' → logprob: -6.4436540603637695
    9. '-' → logprob: -6.5686540603637695
    10. ' /
' → logprob: -7.0686540603637695

Token 131: ' time' (ID: 1058)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.27759066224098206
    2. ' /' → logprob: -1.5275906324386597
    3. '/s' → logprob: -4.652590751647949
    4. '/
' → logprob: -5.777590751647949
    5. ' /
' → logprob: -5.902590751647949
    6. '<|end|>' → logprob: -6.027590751647949
    7. '           ' → logprob: -7.152590751647949
    8. ' +' → logprob: -7.527590751647949
    9. '
' → logprob: -7.652590751647949
    10. '/time' → logprob: -7.652590751647949

Token 132: ' per' (ID: 777)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3102051317691803
    2. ' /' → logprob: -1.435205101966858
    3. '//' → logprob: -4.935204982757568
    4. ' //' → logprob: -5.310204982757568
    5. '/d' → logprob: -5.935204982757568
    6. 's' → logprob: -6.060204982757568
    7. '+' → logprob: -6.310204982757568
    8. ' ' → logprob: -6.560204982757568
    9. '_' → logprob: -6.685204982757568
    10. '*' → logprob: -6.935204982757568

Token 133: ' distance' (ID: 9324)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.6257487535476685
    2. ' unit' → logprob: -1.1257487535476685
    3. 'd' → logprob: -2.375748634338379
    4. 'distance' → logprob: -3.250748634338379
    5. ' d' → logprob: -5.500748634338379
    6. 'dist' → logprob: -5.875748634338379
    7. ' distance' → logprob: -7.000748634338379
    8. ' dist' → logprob: -8.375748634338379
    9. '-unit' → logprob: -8.375748634338379
    10. ' ' → logprob: -8.500748634338379

Token 134: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.2541784048080444
    2. ')' → logprob: -1.3791784048080444
    3. '*' → logprob: -1.5041784048080444
    4. '
' → logprob: -2.129178524017334
    5. ' 
' → logprob: -4.129178524017334
    6. '\' → logprob: -4.254178524017334
    7. 'time' → logprob: -4.504178524017334
    8. ' ' → logprob: -4.629178524017334
    9. '\n' → logprob: -5.004178524017334
    10. ',' → logprob: -5.004178524017334

Token 135: '           ' (ID: 352)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8109248280525208
    2. '
' → logprob: -1.935924768447876
    3. '           ' → logprob: -1.935924768447876
    4. ')' → logprob: -3.185924768447876
    5. '*' → logprob: -3.185924768447876
    6. ' 
' → logprob: -3.185924768447876
    7. '       ' → logprob: -3.685924768447876
    8. '   ' → logprob: -3.810924768447876
    9. '\' → logprob: -4.310925006866455
    10. 't' → logprob: -4.435925006866455

Token 136: ' need' (ID: 1309)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.08946947753429413
    2. ' time' → logprob: -2.4644694328308105
    3. '           ' → logprob: -8.214469909667969
    4. '   ' → logprob: -9.339469909667969
    5. 't' → logprob: -9.964469909667969
    6. 'dist' → logprob: -10.464469909667969
    7. ' if' → logprob: -11.714469909667969
    8. 'speed' → logprob: -11.839469909667969
    9. '	time' → logprob: -11.839469909667969
    10. 'cost' → logprob: -11.839469909667969

Token 137: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.018980998545885086
    2. 'ed' → logprob: -4.768980979919434
    3. ' =' → logprob: -5.268980979919434
    4. 'd' → logprob: -5.893980979919434
    5. '_' → logprob: -6.518980979919434
    6. '_t' → logprob: -7.518980979919434
    7. 'time' → logprob: -8.768980979919434
    8. '=' → logprob: -9.143980979919434
    9. '_d' → logprob: -10.518980979919434
    10. 'Time' → logprob: -11.018980979919434

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1799105554819107
    2. '=' → logprob: -1.8049105405807495
    3. ' ' → logprob: -8.804910659790039
    4. 's' → logprob: -12.304910659790039
    5. ' +=' → logprob: -12.804910659790039
    6. ' *=' → logprob: -13.429910659790039
    7. '<|end|>' → logprob: -13.679910659790039
    8. ')' → logprob: -14.179910659790039
    9. ',' → logprob: -14.429910659790039
    10. 'd' → logprob: -14.554910659790039

Token 139: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6908656358718872
    2. 'd' → logprob: -1.4408656358718872
    3. ' d' → logprob: -1.5658656358718872
    4. ' ' → logprob: -2.9408655166625977
    5. '12' → logprob: -9.440865516662598
    6. 'dist' → logprob: -9.940865516662598
    7. ' dist' → logprob: -9.940865516662598
    8. '   ' → logprob: -10.440865516662598
    9. '```' → logprob: -10.440865516662598
    10. '1' → logprob: -10.878365516662598

Token 140: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.16091366112232208
    2. 'd' → logprob: -1.9109137058258057
    3. ' ' → logprob: -8.035913467407227
    4. ' d' → logprob: -8.285913467407227
    5. 'dist' → logprob: -9.410913467407227
    6. '```' → logprob: -12.285913467407227
    7. '12' → logprob: -12.535913467407227
    8. '(' → logprob: -12.785913467407227
    9. '3' → logprob: -12.785913467407227
    10. '   ' → logprob: -12.973413467407227

Token 141: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023704739287495613
    2. '*' → logprob: -3.773704767227173
    3. '*d' → logprob: -7.773704528808594
    4. '<|end|>' → logprob: -10.523704528808594
    5. 'd' → logprob: -12.648704528808594
    6. ' ' → logprob: -12.773704528808594
    7. ' d' → logprob: -13.898704528808594
    8. ')' → logprob: -14.273704528808594
    9. ' *
' → logprob: -14.398704528808594
    10. ' ' → logprob: -14.648704528808594

Token 142: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10020699352025986
    2. ' d' → logprob: -2.3502070903778076
    3. '	d' → logprob: -15.725207328796387
    4. ' ' → logprob: -16.72520637512207
    5. '*d' → logprob: -17.22520637512207
    6. ')d' → logprob: -17.22520637512207
    7. '>d' → logprob: -17.47520637512207
    8. '<|end|>' → logprob: -17.47520637512207
    9. 'dist' → logprob: -18.10020637512207
    10. '(d' → logprob: -18.22520637512207

Token 143: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010203174315392971
    2. '           ' → logprob: -4.7602033615112305
    3. '\n' → logprob: -7.5102033615112305
    4. '
' → logprob: -8.63520336151123
    5. '       ' → logprob: -8.76020336151123
    6. ')
' → logprob: -8.88520336151123
    7. ' 
' → logprob: -8.88520336151123
    8. ')' → logprob: -9.13520336151123
    9. '            
' → logprob: -9.38520336151123
    10. '<|end|>' → logprob: -9.63520336151123

Token 144: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02544531784951687
    2. '\n' → logprob: -4.025445461273193
    3. '           ' → logprob: -5.275445461273193
    4. '<|end|>' → logprob: -7.650445461273193
    5. ' 
' → logprob: -7.900445461273193
    6. '       ' → logprob: -7.900445461273193
    7. '
' → logprob: -8.275444984436035
    8. '            
' → logprob: -9.150444984436035
    9. '    
' → logprob: -9.525444984436035
    10. ')' → logprob: -9.650444984436035

Token 145: ' time' (ID: 1058)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2508460283279419
    2. 'time' (adapté à ' time') → logprob: -1.625846028327942
    3. 'if' → logprob: -4.875845909118652
    4. ' if' → logprob: -5.000845909118652
    5. ' 
' → logprob: -6.000845909118652
    6. ' time' → logprob: -6.125845909118652
    7. '
' → logprob: -6.250845909118652
    8. '\n' → logprob: -6.625845909118652
    9. '       ' → logprob: -7.500845909118652
    10. '    
' → logprob: -7.500845909118652

Token 146: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.006009256467223167
    2. '+=' → logprob: -5.131009101867676
    3. '+' → logprob: -9.756009101867676
    4. ' +' → logprob: -10.756009101867676
    5. ' ' → logprob: -14.256009101867676
    6. '<|end|>' → logprob: -15.631009101867676
    7. ' -=' → logprob: -16.006010055541992
    8. '    ' → logprob: -16.381010055541992
    9. ']+=' → logprob: -16.506010055541992
    10. ' =' → logprob: -16.756010055541992

Token 147: ' need' (ID: 1309)
  Prédit: ' need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.4740790128707886
    2. 'need' → logprob: -0.9740790128707886
    3. ' ' → logprob: -13.849079132080078
    4. '_need' → logprob: -14.224079132080078
    5. '.need' → logprob: -15.974079132080078
    6. 'needs' → logprob: -16.974079132080078
    7. '  ' → logprob: -17.099079132080078
    8. 'require' → logprob: -17.849079132080078
    9. '    ' → logprob: -18.099079132080078
    10. ' needs' → logprob: -18.099079132080078

Token 148: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0016773181268945336
    2. 'd' → logprob: -6.751677513122559
    3. 'ed' → logprob: -7.626677513122559
    4. ' _' → logprob: -11.751677513122559
    5. 'eed' → logprob: -12.501677513122559
    6. '_' → logprob: -12.626677513122559
    7. 'e' → logprob: -13.126677513122559
    8. '_t' → logprob: -14.376677513122559
    9. '_d' → logprob: -14.376677513122559
    10. 'ded' → logprob: -15.251677513122559

Token 149: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2176307886838913
    2. '           ' → logprob: -1.7176307439804077
    3. 'pos' → logprob: -4.342630863189697
    4. '            
' → logprob: -7.342630863189697
    5. '    
' → logprob: -7.592630863189697
    6. '
' → logprob: -7.842630863189697
    7. ' pos' → logprob: -7.967630863189697
    8. '\n' → logprob: -8.092630386352539
    9. '  
' → logprob: -8.467630386352539
    10. '       ' → logprob: -8.467630386352539

Token 150: '           ' (ID: 352)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5525480508804321
    2. '           ' → logprob: -1.3025480508804321
    3. ' pos' → logprob: -1.9275480508804321
    4. '   ' → logprob: -5.427547931671143
    5. '       ' → logprob: -6.052547931671143
    6. '```' → logprob: -9.0525484085083
    7. '	pos' → logprob: -9.8025484085083
    8. '
' → logprob: -9.9275484085083
    9. '    
' → logprob: -10.3025484085083
    10. ',pos' → logprob: -10.8025484085083

Token 151: ' dist' (ID: 3601)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.09596960246562958
    2. ' pos' → logprob: -2.4709696769714355
    3. 'dist' (adapté à ' dist') → logprob: -5.3459696769714355
    4. '           ' → logprob: -6.4709696769714355
    5. ' dist' → logprob: -7.3459696769714355
    6. '   ' → logprob: -10.720969200134277
    7. '       ' → logprob: -11.345969200134277
    8. 'distance' → logprob: -12.845969200134277
    9. 'carry' → logprob: -12.970969200134277
    10. '```' → logprob: -13.345969200134277

Token 152: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.001009707571938634
    2. '+=' → logprob: -7.126009941101074
    3. ' =' → logprob: -9.001009941101074
    4. ' -=' → logprob: -10.001009941101074
    5. '=' → logprob: -10.751009941101074
    6. ' +' → logprob: -11.751009941101074
    7. ' ' → logprob: -12.126009941101074
    8. '+' → logprob: -13.251009941101074
    9. ' ' → logprob: -15.876009941101074
    10. '-=' → logprob: -17.501008987426758

Token 153: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06993865221738815
    2. ' d' → logprob: -2.6949386596679688
    3. '	d' → logprob: -14.319938659667969
    4. ' ' → logprob: -14.569938659667969
    5. 'abs' → logprob: -14.569938659667969
    6. ')d' → logprob: -15.944938659667969
    7. '>d' → logprob: -16.06993865966797
    8. '0' → logprob: -16.19493865966797
    9. ' abs' → logprob: -16.44493865966797
    10. '(d' → logprob: -17.06993865966797

Token 154: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007093269377946854
    2. '
' → logprob: -5.00709342956543
    3. '   ' → logprob: -9.38209342956543
    4. 'pos' → logprob: -9.38209342956543
    5. '
' → logprob: -9.88209342956543
    6. '       ' → logprob: -10.38209342956543
    7. '\n' → logprob: -10.63209342956543
    8. '    
' → logprob: -11.00709342956543
    9. ',' → logprob: -11.25709342956543
    10. '            
' → logprob: -11.50709342956543

Token 155: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03161708265542984
    2. 'pos' → logprob: -4.031617164611816
    3. ' pos' → logprob: -4.406617164611816
    4. '   ' → logprob: -7.156617164611816
    5. '       ' → logprob: -8.781617164611816
    6. '
' → logprob: -8.781617164611816
    7. '    
' → logprob: -10.906617164611816
    8. '            
' → logprob: -11.156617164611816
    9. ' 
' → logprob: -11.406617164611816
    10. '\n' → logprob: -11.656617164611816

Token 156: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.11766903847455978
    2. ' pos' → logprob: -2.242669105529785
    3. '           ' → logprob: -5.367669105529785
    4. '       ' → logprob: -9.617669105529785
    5. '   ' → logprob: -9.867669105529785
    6. '
' → logprob: -10.742669105529785
    7. '	pos' → logprob: -10.867669105529785
    8. '_pos' → logprob: -12.617669105529785
    9. '            
' → logprob: -13.742669105529785
    10. '    
' → logprob: -13.742669105529785

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889033854007721
    2. '=' → logprob: -2.578890323638916
    3. ' ' → logprob: -14.953890800476074
    4. '<|end|>' → logprob: -16.203889846801758
    5. ' +=' → logprob: -17.703889846801758
    6. ' ' → logprob: -17.703889846801758
    7. ')' → logprob: -17.703889846801758
    8. ' =)' → logprob: -17.953889846801758
    9. ' =
' → logprob: -18.953889846801758
    10. ',' → logprob: -19.328889846801758

Token 158: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324547804892063
    2. ' ' → logprob: -3.7732455730438232
    3. ' ' → logprob: -16.773244857788086
    4. '```' → logprob: -18.210744857788086
    5. '۰' → logprob: -18.335744857788086
    6. '   ' → logprob: -18.523244857788086
    7. '<|end|>' → logprob: -18.585744857788086
    8. '  ' → logprob: -18.773244857788086
    9. '`' → logprob: -20.210744857788086
    10. '=' → logprob: -20.460744857788086

Token 159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.0000057220459
    4. '```' → logprob: -20.0625057220459
    5. '۰' → logprob: -20.0625057220459
    6. '  ' → logprob: -20.4375057220459
    7. '=' → logprob: -21.0625057220459
    8. ')' → logprob: -21.0625057220459
    9. '00' → logprob: -21.3750057220459
    10. '`' → logprob: -21.6250057220459

Token 160: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006158796604722738
    2. '
' → logprob: -5.256158828735352
    3. '       ' → logprob: -7.256158828735352
    4. '   ' → logprob: -9.756158828735352
    5. '```' → logprob: -10.131158828735352
    6. '            
' → logprob: -10.506158828735352
    7. '<|end|>' → logprob: -10.631158828735352
    8. '    
' → logprob: -11.381158828735352
    9. ',' → logprob: -11.631158828735352
    10. 'carry' → logprob: -11.881158828735352

Token 161: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008062121458351612
    2. '       ' → logprob: -5.00806188583374
    3. '
' → logprob: -7.25806188583374
    4. '   ' → logprob: -8.633062362670898
    5. '            
' → logprob: -9.008062362670898
    6. '        
' → logprob: -9.133062362670898
    7. '    
' → logprob: -9.633062362670898
    8. '```' → logprob: -10.258062362670898
    9. 'carry' → logprob: -10.508062362670898
    10. '<|end|>' → logprob: -10.883062362670898

Token 162: ' carrying' (ID: 25328)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0009718484943732619
    2. '           ' → logprob: -7.750971794128418
    3. ' carrying' → logprob: -7.750971794128418
    4. 'carry' → logprob: -10.250971794128418
    5. '       ' → logprob: -10.375971794128418
    6. ' carried' → logprob: -11.125971794128418
    7. '   ' → logprob: -11.625971794128418
    8. '            
' → logprob: -11.750971794128418
    9. 'for' → logprob: -12.500971794128418
    10. 'while' → logprob: -12.875971794128418

Token 163: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5648366808891296
    2. '.clear' → logprob: -1.3148367404937744
    3. ' =' → logprob: -1.8148367404937744
    4. '.' → logprob: -9.189836502075195
    5. '=[]' → logprob: -10.314836502075195
    6. '.=' → logprob: -11.314836502075195
    7. '[:]' → logprob: -11.939836502075195
    8. '.remove' → logprob: -12.689836502075195
    9. '.Clear' → logprob: -12.939836502075195
    10. 'clear' → logprob: -13.314836502075195

Token 164: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -5.264322317088954e-05
    2. ' []' → logprob: -10.125052452087402
    3. '[]
' → logprob: -12.125052452087402
    4. '[]}' → logprob: -12.125052452087402
    5. '[]>' → logprob: -14.000052452087402
    6. '[' → logprob: -15.125052452087402
    7. '[]

' → logprob: -15.375052452087402
    8. '[])' → logprob: -15.500052452087402
    9. '[]"' → logprob: -16.00005340576172
    10. '[],' → logprob: -17.00005340576172

Token 165: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016061468049883842
    2. '<|end|>' → logprob: -4.391061305999756
    3. '
' → logprob: -6.141061305999756
    4. '        
' → logprob: -7.516061305999756
    5. '<|end|>' → logprob: -7.641061305999756
    6. '   ' → logprob: -9.641061782836914
    7. ' if' → logprob: -9.641061782836914
    8. ',' → logprob: -10.391061782836914
    9. '#' → logprob: -10.641061782836914
    10. '```' → logprob: -10.641061782836914

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010067472234368324
    2. '        
' → logprob: -6.135067462921143
    3. ' ' → logprob: -6.635067462921143
    4. ',' → logprob: -6.635067462921143
    5. ' ' → logprob: -6.885067462921143
    6. '        ' → logprob: -7.010067462921143
    7. ' 
' → logprob: -7.260067462921143
    8. '   ' → logprob: -7.260067462921143
    9. '#' → logprob: -8.0100679397583
    10. ')' → logprob: -8.7600679397583

Token 167: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14776554703712463
    2. '#' (adapté à ' #') → logprob: -2.647765636444092
    3. '       ' → logprob: -2.897765636444092
    4. 'if' → logprob: -5.147765636444092
    5. '   ' → logprob: -5.522765636444092
    6. 'distance' → logprob: -7.522765636444092
    7. 'dist' → logprob: -8.147765159606934
    8. ' d' → logprob: -8.522765159606934
    9. '        
' → logprob: -8.647765159606934
    10. ' #' → logprob: -8.897765159606934

Token 168: ' now' (ID: 1954)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2672182023525238
    2. '#' → logprob: -2.1422181129455566
    3. 'travel' → logprob: -2.7672181129455566
    4. 'distance' → logprob: -4.017218112945557
    5. ' d' → logprob: -5.017218112945557
    6. 'if' → logprob: -5.017218112945557
    7. ' travel' → logprob: -5.267218112945557
    8. 'dist' → logprob: -5.517218112945557
    9. 'move' → logprob: -5.517218112945557
    10. 'time' → logprob: -6.142218112945557

Token 169: ' move' (ID: 5275)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.379122257232666
    2. '       ' → logprob: -2.004122257232666
    3. 'd' → logprob: -2.129122257232666
    4. ' #' → logprob: -3.879122257232666
    5. ' going' → logprob: -4.879122257232666
    6. ' if' → logprob: -5.129122257232666
    7. '#' → logprob: -5.379122257232666
    8. ' distance' → logprob: -5.379122257232666
    9. 'distance' → logprob: -5.504122257232666
    10. ' go' → logprob: -5.629122257232666

Token 170: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3371802866458893
    2. 'to' → logprob: -2.2121803760528564
    3. ' towards' → logprob: -2.3371803760528564
    4. ' toward' → logprob: -3.2121803760528564
    5. 'tow' → logprob: -3.3371803760528564
    6. 'pos' → logprob: -5.587180137634277
    7. '       ' → logprob: -8.587180137634277
    8. '   ' → logprob: -8.962180137634277
    9. ' pos' → logprob: -9.337180137634277
    10. '_to' → logprob: -10.337180137634277

Token 171: ' balloon' (ID: 63124)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.10259462893009186
    2. ' pi' → logprob: -2.3525946140289307
    3. 'catch' → logprob: -7.22759485244751
    4. ' catch' → logprob: -7.72759485244751
    5. 'ball' → logprob: -7.85259485244751
    6. '   ' → logprob: -8.477594375610352
    7. 'the' → logprob: -9.352594375610352
    8. 'pos' → logprob: -9.352594375610352
    9. 'p' → logprob: -9.602594375610352
    10. 'capture' → logprob: -9.852594375610352

Token 172: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8911654353141785
    2. ' =' → logprob: -1.0161654949188232
    3. '_pos' → logprob: -3.0161654949188232
    4. 'i' → logprob: -3.1411654949188232
    5. 's' → logprob: -3.1411654949188232
    6. ' i' → logprob: -4.391165256500244
    7. '=' → logprob: -4.516165256500244
    8. '       ' → logprob: -4.641165256500244
    9. '_i' → logprob: -4.641165256500244
    10. ' position' → logprob: -4.891165256500244

Token 173: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6384544372558594
    2. 'd' → logprob: -1.2634544372558594
    3. ' d' → logprob: -1.7634544372558594
    4. ',' → logprob: -4.763454437255859
    5. '        
' → logprob: -5.513454437255859
    6. ' 
' → logprob: -6.763454437255859
    7. '   ' → logprob: -6.763454437255859
    8. '        ' → logprob: -7.388454437255859
    9. '
' → logprob: -8.26345443725586
    10. '  
' → logprob: -8.38845443725586

Token 174: '       ' (ID: 309)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.23320604860782623
    2. 'd' → logprob: -2.108206033706665
    3. '       ' → logprob: -2.483206033706665
    4. '   ' → logprob: -7.108206272125244
    5. ' 
' → logprob: -7.233206272125244
    6. '        
' → logprob: -8.608205795288086
    7. ',' → logprob: -8.733205795288086
    8. ' ' → logprob: -8.858205795288086
    9. ' p' → logprob: -8.983205795288086
    10. '        ' → logprob: -9.233205795288086

Token 175: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.18043678998947144
    2. ' d' → logprob: -1.8054368495941162
    3. '       ' → logprob: -7.555436611175537
    4. '   ' → logprob: -9.805437088012695
    5. 'distance' → logprob: -10.430437088012695
    6. 'dist' → logprob: -10.805437088012695
    7. ' if' → logprob: -11.055437088012695
    8. ' distance' → logprob: -11.680437088012695
    9. ' dist' → logprob: -11.930437088012695
    10. ' ' → logprob: -12.430437088012695

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006715967319905758
    2. '=' → logprob: -5.006715774536133
    3. ' ' → logprob: -14.506715774536133
    4. '   ' → logprob: -17.256715774536133
    5. ' ' → logprob: -18.131715774536133
    6. '	' → logprob: -18.756715774536133
    7. ',' → logprob: -19.131715774536133
    8. 's' → logprob: -19.381715774536133
    9. ' =
' → logprob: -19.381715774536133
    10. ')' → logprob: -19.381715774536133

Token 177: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.1605081409215927
    2. ' abs' → logprob: -1.910508155822754
    3. 'pi' → logprob: -8.285508155822754
    4. ' pi' → logprob: -10.410508155822754
    5. 'pos' → logprob: -14.035508155822754
    6. '(abs' → logprob: -14.910508155822754
    7. '   ' → logprob: -15.410508155822754
    8. ' ' → logprob: -15.535508155822754
    9. ' pos' → logprob: -17.410507202148438
    10. '.abs' → logprob: -17.660507202148438

Token 178: '(pi' (ID: 128494)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.06259538233280182
    2. '(pi' → logprob: -2.8125953674316406
    3. 'pos' → logprob: -8.56259536743164
    4. '(' → logprob: -8.56259536743164
    5. '(po' → logprob: -8.56259536743164
    6. '(p' → logprob: -10.18759536743164
    7. ' pos' → logprob: -11.93759536743164
    8. 'pi' → logprob: -13.18759536743164
    9. '(pc' → logprob: -14.06259536743164
    10. '(pp' → logprob: -14.18759536743164

Token 179: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.002815217012539506
    2. '-' → logprob: -5.877815246582031
    3. ' ' → logprob: -12.252815246582031
    4. '-pos' → logprob: -12.252815246582031
    5. ' pos' → logprob: -15.127815246582031
    6. 'pos' → logprob: -15.752815246582031
    7. '   ' → logprob: -16.25281524658203
    8. ' -
' → logprob: -16.25281524658203
    9. ' ' → logprob: -16.62781524658203
    10. '-position' → logprob: -16.87781524658203

Token 180: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.023248272016644478
    2. ' pos' → logprob: -3.7732481956481934
    3. '	pos' → logprob: -14.398248672485352
    4. '   ' → logprob: -14.523248672485352
    5. ')' → logprob: -14.648248672485352
    6. ' ' → logprob: -15.273248672485352
    7. '0' → logprob: -15.273248672485352
    8. 'p' → logprob: -15.648248672485352
    9. 'position' → logprob: -15.773248672485352
    10. '(pos' → logprob: -16.39824867248535

Token 181: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024832691997289658
    2. ')
' → logprob: -6.002483367919922
    3. ' )' → logprob: -12.127483367919922
    4. ')
' → logprob: -14.252483367919922
    5. '   ' → logprob: -14.502483367919922
    6. ')

' → logprob: -14.627483367919922
    7. '       ' → logprob: -15.752483367919922
    8. ' )
' → logprob: -16.127483367919922
    9. '),' → logprob: -17.502483367919922
    10. '))' → logprob: -18.002483367919922

Token 182: '       ' (ID: 309)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.9744683504104614
    2. 'time' → logprob: -1.4744683504104614
    3. 'need' → logprob: -1.8494683504104614
    4. ' need' → logprob: -2.474468231201172
    5. ' speed' → logprob: -2.599468231201172
    6. 'speed' → logprob: -3.474468231201172
    7. '   ' → logprob: -3.724468231201172
    8. ' if' → logprob: -4.724468231201172
    9. '4' → logprob: -5.599468231201172
    10. ' #' → logprob: -5.849468231201172

Token 183: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' (adapté à ' speed') → logprob: -0.7582422494888306
    2. 'time' → logprob: -1.0082422494888306
    3. 'need' → logprob: -2.508242130279541
    4. 'if' → logprob: -2.883242130279541
    5. '4' → logprob: -4.258242130279541
    6. '#' → logprob: -5.883242130279541
    7. '1' → logprob: -6.508242130279541
    8. 'spd' → logprob: -6.508242130279541
    9. 'move' → logprob: -6.758242130279541
    10. ' speed' → logprob: -6.883242130279541

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17982828617095947
    2. '=' → logprob: -1.8048282861709595
    3. ' ' → logprob: -10.929828643798828
    4. 's' → logprob: -11.054828643798828
    5. '_' → logprob: -11.054828643798828
    6. '_time' → logprob: -11.804828643798828
    7. '_factor' → logprob: -12.054828643798828
    8. '_speed' → logprob: -12.679828643798828
    9. ' =
' → logprob: -12.804828643798828
    10. '_space' → logprob: -13.554828643798828

Token 185: ' len' (ID: 4631)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9496110081672668
    2. '3' → logprob: -1.324610948562622
    3. '5' → logprob: -1.574610948562622
    4. '2' → logprob: -2.324610948562622
    5. '6' → logprob: -4.074611186981201
    6. ' ' → logprob: -4.699611186981201
    7. '7' → logprob: -5.449611186981201
    8. '{' → logprob: -5.699611186981201
    9. '4' → logprob: -5.824611186981201
    10. '{
' → logprob: -6.824611186981201

Token 186: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0006703823455609381
    2. '(' → logprob: -7.375670433044434
    3. '(car' → logprob: -10.750670433044434
    4. '(
' → logprob: -12.125670433044434
    5. ' (' → logprob: -12.875670433044434
    6. 'c' → logprob: -13.250670433044434
    7. ' ' → logprob: -13.375670433044434
    8. '(s' → logprob: -13.375670433044434
    9. 'car' → logprob: -13.375670433044434
    10. '((' → logprob: -13.500670433044434

Token 187: 'arry' (ID: 20052)
  Prédit: 'arry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arry' → logprob: -0.007592313922941685
    2. 'ar' → logprob: -5.50759220123291
    3. 'arring' → logprob: -6.25759220123291
    4. ')' → logprob: -8.38259220123291
    5. ' carrying' → logprob: -8.88259220123291
    6. 'arr' → logprob: -8.88259220123291
    7. '   ' → logprob: -9.00759220123291
    8. '(' → logprob: -9.00759220123291
    9. 'ary' → logprob: -9.25759220123291
    10. ' ' → logprob: -9.38259220123291

Token 188: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -5.512236498361744e-07
    2. 'ig' → logprob: -16.125
    3. 'i' → logprob: -16.625
    4. 'rying' → logprob: -16.75
    5. '_ing' → logprob: -16.875
    6. 'in' → logprob: -17.0
    7. 'ng' → logprob: -17.125
    8. '(' → logprob: -17.375
    9. '-ing' → logprob: -17.375
    10. ' ' → logprob: -17.875

Token 189: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19716115295886993
    2. ')+' → logprob: -2.5721611976623535
    3. ' +' → logprob: -2.6971611976623535
    4. '+' → logprob: -4.5721611976623535
    5. ' and' → logprob: -4.8221611976623535
    6. '   ' → logprob: -4.9471611976623535
    7. '>' → logprob: -6.8221611976623535
    8. ' if' → logprob: -6.8221611976623535
    9. ')
' → logprob: -7.4471611976623535
    10. '
' → logprob: -7.4471611976623535

Token 190: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4723323583602905
    2. ' +' → logprob: -1.3473323583602905
    3. ' and' → logprob: -3.59733247756958
    4. '   ' → logprob: -4.34733247756958
    5. '0' → logprob: -4.34733247756958
    6. '
' → logprob: -4.72233247756958
    7. '=' → logprob: -4.84733247756958
    8. ' if' → logprob: -5.22233247756958
    9. 'if' → logprob: -5.34733247756958
    10. '1' → logprob: -5.34733247756958

Token 191: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013166792632546276
    2. ' ' → logprob: -9.250131607055664
    3. '2' → logprob: -10.375131607055664
    4. '   ' → logprob: -12.750131607055664
    5. '4' → logprob: -14.250131607055664
    6. '3' → logprob: -14.875131607055664
    7. '  ' → logprob: -16.125131607055664
    8. '0' → logprob: -16.500131607055664
    9. '	' → logprob: -16.750131607055664
    10. ' ' → logprob: -16.875131607055664

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034964739461429417
    2. '2' → logprob: -8.125349998474121
    3. ' ' → logprob: -10.500349998474121
    4. '3' → logprob: -11.375349998474121
    5. '4' → logprob: -11.500349998474121
    6. '5' → logprob: -13.250349998474121
    7. '   ' → logprob: -13.750349998474121
    8. '0' → logprob: -14.625349998474121
    9. '  ' → logprob: -15.812849998474121
    10. 'speed' → logprob: -16.187849044799805

Token 193: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: '       ' (ID: 309)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.26429712772369385
    2. 'time' → logprob: -2.3892970085144043
    3. '       ' → logprob: -3.1392970085144043
    4. '   ' → logprob: -3.1392970085144043
    5. '
' → logprob: -3.8892970085144043
    6. ' t' → logprob: -4.389297008514404
    7. 't' → logprob: -5.889297008514404
    8. ' 
' → logprob: -6.014297008514404
    9. ' *' → logprob: -6.139297008514404
    10. '*' → logprob: -6.139297008514404

Token 195: ' need' (ID: 1309)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.49247679114341736
    2. 'need' (adapté à ' need') → logprob: -1.3674768209457397
    3. ' time' → logprob: -2.24247670173645
    4. ' need' → logprob: -3.61747670173645
    5. '   ' → logprob: -7.742476940155029
    6. 't' → logprob: -8.992476463317871
    7. 'needed' → logprob: -9.367476463317871
    8. 'if' → logprob: -9.367476463317871
    9. ' if' → logprob: -9.617476463317871
    10. 'move' → logprob: -10.242476463317871

Token 196: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -6.837811088189483e-05
    2. '_' → logprob: -10.375068664550781
    3. '_t' → logprob: -11.000068664550781
    4. ' _' → logprob: -11.125068664550781
    5. '_times' → logprob: -12.750068664550781
    6. '_tim' → logprob: -13.500068664550781
    7. 'time' → logprob: -14.750068664550781
    8. ' =' → logprob: -15.125068664550781
    9. '=_' → logprob: -15.750068664550781
    10. '_token' → logprob: -16.12506866455078

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033647309988737106
    2. '=' → logprob: -3.408647298812866
    3. ' ' → logprob: -14.158647537231445
    4. ' +=' → logprob: -14.533647537231445
    5. ' =
' → logprob: -15.533647537231445
    6. ' *=' → logprob: -16.158647537231445
    7. ')' → logprob: -16.658647537231445
    8. ',' → logprob: -17.158647537231445
    9. '<|end|>' → logprob: -17.533647537231445
    10. 's' → logprob: -18.158647537231445

Token 198: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.39025431871414185
    2. 'speed' → logprob: -1.265254259109497
    3. ' d' → logprob: -3.515254259109497
    4. ' speed' → logprob: -4.640254497528076
    5. '1' → logprob: -7.640254497528076
    6. '(speed' → logprob: -8.015254020690918
    7. ' ' → logprob: -8.640254020690918
    8. 'time' → logprob: -9.515254020690918
    9. '(' → logprob: -9.515254020690918
    10. '   ' → logprob: -9.515254020690918

Token 199: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0336637981235981
    2. '*' → logprob: -3.408663749694824
    3. ' /' → logprob: -11.283663749694824
    4. '/' → logprob: -13.658663749694824
    5. ' //' → logprob: -14.033663749694824
    6. ' ' → logprob: -14.158663749694824
    7. ' ' → logprob: -14.283663749694824
    8. '<|end|>' → logprob: -14.658663749694824
    9. ' *
' → logprob: -15.158663749694824
    10. '//' → logprob: -15.533663749694824

Token 200: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.005190232302993536
    2. ' speed' → logprob: -6.130190372467041
    3. '(' → logprob: -6.380190372467041
    4. '(speed' → logprob: -6.755190372467041
    5. '   ' → logprob: -10.130189895629883
    6. ' (' → logprob: -10.505189895629883
    7. '1' → logprob: -11.005189895629883
    8. '4' → logprob: -11.505189895629883
    9. 'spe' → logprob: -11.505189895629883
    10. '	speed' → logprob: -11.630189895629883

Token 201: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11235255748033524
    2. ' time' → logprob: -2.7373526096343994
    3. 'time' → logprob: -3.6123526096343994
    4. '   ' → logprob: -4.73735237121582
    5. ' 
' → logprob: -6.23735237121582
    6. '    
' → logprob: -6.61235237121582
    7. '\n' → logprob: -6.73735237121582
    8. ')
' → logprob: -8.48735237121582
    9. '       ' → logprob: -8.61235237121582
    10. '  
' → logprob: -8.73735237121582

Token 202: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03154847398400307
    2. ' time' → logprob: -4.156548500061035
    3. '   ' → logprob: -4.781548500061035
    4. 'time' → logprob: -5.156548500061035
    5. '    
' → logprob: -8.031548500061035
    6. ' 
' → logprob: -8.281548500061035
    7. '\n' → logprob: -8.406548500061035
    8. '	time' → logprob: -9.031548500061035
    9. ' if' → logprob: -9.531548500061035
    10. '  
' → logprob: -10.031548500061035

Token 203: ' available' (ID: 2839)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.15666821599006653
    2. ' time' → logprob: -2.031668186187744
    3. ' if' → logprob: -4.656668186187744
    4. 'if' → logprob: -5.531668186187744
    5. '   ' → logprob: -7.906668186187744
    6. '
' → logprob: -10.406668663024902
    7. '	time' → logprob: -11.156668663024902
    8. 'pos' → logprob: -12.406668663024902
    9. '```' → logprob: -12.781668663024902
    10. ' 
' → logprob: -12.906668663024902

Token 204: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.013576870784163475
    2. '_' → logprob: -4.888576984405518
    3. ' =' → logprob: -5.263576984405518
    4. '=' → logprob: -7.888576984405518
    5. '_t' → logprob: -8.26357650756836
    6. ' -=' → logprob: -9.88857650756836
    7. '_space' → logprob: -11.01357650756836
    8. ' _' → logprob: -11.13857650756836
    9. 'time' → logprob: -11.38857650756836
    10. 'Time' → logprob: -11.76357650756836

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04390669986605644
    2. '=' → logprob: -3.9189066886901855
    3. ' <=' → logprob: -3.9189066886901855
    4. ' +=' → logprob: -6.6689066886901855
    5. ' >=' → logprob: -6.9189066886901855
    6. ' -=' → logprob: -8.043907165527344
    7. ' ' → logprob: -8.293907165527344
    8. '<=' → logprob: -8.293907165527344
    9. '>=' → logprob: -10.543907165527344
    10. ' -' → logprob: -10.918907165527344

Token 206: ' ti' (ID: 2919)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.0015142656629905105
    2. ' ti' → logprob: -6.501514434814453
    3. 'pi' → logprob: -12.001514434814453
    4. '   ' → logprob: -12.626514434814453
    5. '	ti' → logprob: -13.376514434814453
    6. 'max' → logprob: -15.751514434814453
    7. 'tii' → logprob: -15.876514434814453
    8. '  ' → logprob: -16.001514434814453
    9. '(t' → logprob: -16.126514434814453
    10. 't' → logprob: -16.501514434814453

Token 207: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0009298062650486827
    2. '-' → logprob: -7.000929832458496
    3. ' ' → logprob: -11.250929832458496
    4. '<|end|>' → logprob: -13.625929832458496
    5. '   ' → logprob: -14.000929832458496
    6. ' ' → logprob: -14.625929832458496
    7. ' -
' → logprob: -14.750929832458496
    8. '>' → logprob: -15.250929832458496
    9. '[' → logprob: -15.375929832458496
    10. '  ' → logprob: -15.500929832458496

Token 208: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0028071331325918436
    2. ' time' → logprob: -5.877807140350342
    3. '   ' → logprob: -14.127806663513184
    4. '(time' → logprob: -14.627806663513184
    5. '	time' → logprob: -14.752806663513184
    6. '"time' → logprob: -14.877806663513184
    7. '=time' → logprob: -16.1278076171875
    8. ' ' → logprob: -16.3778076171875
    9. 't' → logprob: -16.6278076171875
    10. '  ' → logprob: -17.0028076171875

Token 209: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5473062992095947
    2. '       ' → logprob: -1.6723062992095947
    3. '<|end|>' → logprob: -1.6723062992095947
    4. ' if' → logprob: -3.4223062992095947
    5. '<|end|>' → logprob: -4.922306060791016
    6. ' 
' → logprob: -5.797306060791016
    7. '\n' → logprob: -7.172306060791016
    8. '   ' → logprob: -7.672306060791016
    9. '  
' → logprob: -7.672306060791016
    10. ')' → logprob: -8.172306060791016

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4122522473335266
    2. ' if' → logprob: -1.5372521877288818
    3. '<|end|>' → logprob: -2.787252187728882
    4. '
' → logprob: -3.037252187728882
    5. '        
' → logprob: -5.662252426147461
    6. '\n' → logprob: -6.037252426147461
    7. '<|end|>' → logprob: -6.287252426147461
    8. ' 
' → logprob: -6.412252426147461
    9. 'if' → logprob: -6.537252426147461
    10. '   ' → logprob: -7.412252426147461

Token 211: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.023485498502850533
    2. ' if' → logprob: -3.7734854221343994
    3. '       ' → logprob: -8.77348518371582
    4. '   ' → logprob: -9.89848518371582
    5. 'If' → logprob: -11.77348518371582
    6. '	if' → logprob: -11.77348518371582
    7. '<|end|>' → logprob: -12.27348518371582
    8. ' ' → logprob: -12.52348518371582
    9. '        
' → logprob: -13.14848518371582
    10. '
' → logprob: -13.64848518371582

Token 212: ' need' (ID: 1309)
  Prédit: ' need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.07801248133182526
    2. ' available' → logprob: -3.203012466430664
    3. 'need' → logprob: -3.453012466430664
    4. 'available' → logprob: -6.328012466430664
    5. ' d' → logprob: -7.328012466430664
    6. ' needed' → logprob: -8.953012466430664
    7. ' ' → logprob: -9.203012466430664
    8. 'd' → logprob: -10.828012466430664
    9. ' not' → logprob: -11.328012466430664
    10. 'needed' → logprob: -11.578012466430664

Token 213: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0012176171876490116
    2. 'ed' → logprob: -6.876217842102051
    3. '_available' → logprob: -9.50121784210205
    4. 'eed' → logprob: -9.75121784210205
    5. 'available' → logprob: -10.37621784210205
    6. 'eded' → logprob: -12.12621784210205
    7. ' _' → logprob: -12.37621784210205
    8. 't' → logprob: -13.00121784210205
    9. 'e' → logprob: -13.12621784210205
    10. 'd' → logprob: -14.00121784210205

Token 214: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.01033084373921156
    2. '>' → logprob: -4.760330677032471
    3. ' <=' → logprob: -6.385330677032471
    4. '<=' → logprob: -11.135331153869629
    5. ' ' → logprob: -11.260331153869629
    6. ' >
' → logprob: -15.010331153869629
    7. ' >=' → logprob: -15.135331153869629
    8. ' ' → logprob: -16.135330200195312
    9. ' >
' → logprob: -16.635330200195312
    10. ')' → logprob: -16.885330200195312

Token 215: ' available' (ID: 2839)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.31326621770858765
    2. ' available' → logprob: -1.3132662773132324
    3. ' ' → logprob: -12.813265800476074
    4. '   ' → logprob: -14.188265800476074
    5. '0' → logprob: -15.063265800476074
    6. '_available' → logprob: -16.06326675415039
    7. '.available' → logprob: -16.06326675415039
    8. ' ' → logprob: -16.18826675415039
    9. '  ' → logprob: -16.31326675415039
    10. ' disponible' → logprob: -16.81326675415039

Token 216: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -7.3458322731312364e-06
    2. 'time' → logprob: -12.875007629394531
    3. '_' → logprob: -13.000007629394531
    4. ' _' → logprob: -13.750007629394531
    5. '_t' → logprob: -13.750007629394531
    6. ' time' → logprob: -16.00000762939453
    7. 'Time' → logprob: -17.25000762939453
    8. ' ' → logprob: -17.25000762939453
    9. 'ime' → logprob: -17.87500762939453
    10. ')' → logprob: -17.87500762939453

Token 217: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3273419439792633
    2. ':' → logprob: -1.327341914176941
    3. ':return' → logprob: -4.7023420333862305
    4. '           ' → logprob: -5.7023420333862305
    5. '       ' → logprob: -6.7023420333862305
    6. '   ' → logprob: -9.07734203338623
    7. ' or' → logprob: -9.70234203338623
    8. 'return' → logprob: -9.95234203338623
    9. ' return' → logprob: -10.20234203338623
    10. '):
' → logprob: -10.32734203338623

Token 218: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6451796889305115
    2. '       ' → logprob: -1.3951797485351562
    3. ' return' → logprob: -1.5201797485351562
    4. 'return' → logprob: -4.770179748535156
    5. '   ' → logprob: -7.895179748535156
    6. '
' → logprob: -9.895179748535156
    7. '	return' → logprob: -11.145179748535156
    8. '        
' → logprob: -11.395179748535156
    9. '               ' → logprob: -11.520179748535156
    10. ' ' → logprob: -12.270179748535156

Token 219: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4807014763355255
    2. 'return' (adapté à ' return') → logprob: -0.9807014465332031
    3. '           ' → logprob: -5.480701446533203
    4. '       ' → logprob: -6.480701446533203
    5. '
' → logprob: -7.730701446533203
    6. '   ' → logprob: -8.105701446533203
    7. '	return' → logprob: -9.230701446533203
    8. '               ' → logprob: -10.105701446533203
    9. ' 
' → logprob: -12.230701446533203
    10. ':return' → logprob: -12.480701446533203

Token 220: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.02325037121772766
    2. 'False' → logprob: -3.7732503414154053
    3. '"' → logprob: -12.273250579833984
    4. ' "' → logprob: -16.398250579833984
    5. '(False' → logprob: -17.023250579833984
    6. ' None' → logprob: -17.148250579833984
    7. ' ' → logprob: -17.648250579833984
    8. ' True' → logprob: -17.648250579833984
    9. ' false' → logprob: -17.773250579833984
    10. ' 
' → logprob: -18.023250579833984

Token 221: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.108583465218544
    2. '       ' → logprob: -3.108583450317383
    3. '        
' → logprob: -3.108583450317383
    4. '    
' → logprob: -5.358583450317383
    5. ' 
' → logprob: -5.608583450317383
    6. '  
' → logprob: -5.858583450317383
    7. '\n' → logprob: -6.483583450317383
    8. '   ' → logprob: -8.483583450317383
    9. '            
' → logprob: -9.108583450317383
    10. '<|end|>' → logprob: -9.108583450317383

Token 222: ' i' (ID: 575)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -1.2895839214324951
    2. ' []' → logprob: -1.6645839214324951
    3. ' None' → logprob: -1.6645839214324951
    4. ' pos' → logprob: -2.289583921432495
    5. 'None' → logprob: -3.039583921432495
    6. '[]' → logprob: -3.039583921432495
    7. 'dist' → logprob: -3.539583921432495
    8. ' False' → logprob: -3.664583921432495
    9. 'pos' → logprob: -3.789583921432495
    10. 'False' → logprob: -4.164584159851074

Token 223: '+' (ID: 10)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26319870352745056
    2. '       ' → logprob: -2.1381986141204834
    3. '        
' → logprob: -2.2631986141204834
    4. '    
' → logprob: -5.0131988525390625
    5. ' 
' → logprob: -6.8881988525390625
    6. '  
' → logprob: -7.7631988525390625
    7. '   ' → logprob: -7.7631988525390625
    8. '            
' → logprob: -8.513198852539062
    9. '\n' → logprob: -8.513198852539062
    10. '<|end|>' → logprob: -9.013198852539062

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.702754474943504e-05
    2. ' ' → logprob: -10.50003719329834
    3. '0' → logprob: -12.12503719329834
    4. '<|end|>' → logprob: -12.62503719329834
    5. ')' → logprob: -15.25003719329834
    6. '   ' → logprob: -15.62503719329834
    7. '```' → logprob: -15.87503719329834
    8. 'def' → logprob: -16.500036239624023
    9. '<|end|>' → logprob: -17.000036239624023
    10. ',' → logprob: -17.125036239624023

Token 225: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47690460085868835
    2. '       ' → logprob: -1.2269046306610107
    3. '        
' → logprob: -2.4769046306610107
    4. '    
' → logprob: -7.101904392242432
    5. ' 
' → logprob: -8.10190486907959
    6. '\n' → logprob: -8.72690486907959
    7. ',' → logprob: -8.72690486907959
    8. '  
' → logprob: -8.85190486907959
    9. '            
' → logprob: -9.22690486907959
    10. '       
' → logprob: -9.35190486907959

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44772088527679443
    2. '
' → logprob: -1.4477208852767944
    3. '   ' → logprob: -2.697721004486084
    4. 'time' → logprob: -3.697721004486084
    5. 'pos' → logprob: -3.822721004486084
    6. ' time' → logprob: -5.447721004486084
    7. ' pos' → logprob: -5.697721004486084
    8. '        
' → logprob: -5.822721004486084
    9. '    
' → logprob: -7.322721004486084
    10. '  
' → logprob: -8.822720527648926

Token 227: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.01765628345310688
    2. 'pos' → logprob: -4.392656326293945
    3. ' time' → logprob: -5.642656326293945
    4. '   ' → logprob: -6.767656326293945
    5. ' pos' → logprob: -8.517656326293945
    6. '#' → logprob: -9.267656326293945
    7. '       ' → logprob: -9.267656326293945
    8. 'dist' → logprob: -10.892656326293945
    9. '        
' → logprob: -12.017656326293945
    10. '
' → logprob: -12.142656326293945

Token 228: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0022234106436371803
    2. '+=' → logprob: -6.127223491668701
    3. '+' → logprob: -10.502223014831543
    4. ' +' → logprob: -11.502223014831543
    5. '=' → logprob: -15.127223014831543
    6. ' =' → logprob: -15.252223014831543
    7. ' ' → logprob: -16.50222396850586
    8. ']+=' → logprob: -17.62722396850586
    9. ' -=' → logprob: -17.87722396850586
    10. '+='' → logprob: -18.00222396850586

Token 229: ' need' (ID: 1309)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.004078997299075127
    2. ' need' → logprob: -5.5040788650512695
    3. 'd' → logprob: -14.62907886505127
    4. 'needed' → logprob: -16.754079818725586
    5. 'int' → logprob: -17.254079818725586
    6. '
' → logprob: -17.504079818725586
    7. 'needs' → logprob: -18.129079818725586
    8. '_need' → logprob: -18.129079818725586
    9. ' d' → logprob: -18.504079818725586
    10. '.need' → logprob: -19.129079818725586

Token 230: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -9.088346359931165e-07
    2. 'ed' → logprob: -14.250000953674316
    3. 'eed' → logprob: -17.25
    4. 'time' → logprob: -17.25
    5. '_token' → logprob: -17.375
    6. ' _' → logprob: -18.25
    7. '_need' → logprob: -18.25
    8. '_' → logprob: -18.75
    9. '_t' → logprob: -18.875
    10. 'e' → logprob: -19.0

Token 231: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7651386857032776
    2. ' pos' → logprob: -1.2651386260986328
    3. '       ' → logprob: -1.6401386260986328
    4. '   ' → logprob: -3.640138626098633
    5. 'dist' → logprob: -3.765138626098633
    6. ' dist' → logprob: -5.140138626098633
    7. '
' → logprob: -6.015138626098633
    8. '	pos' → logprob: -8.515138626098633
    9. ',pos' → logprob: -8.640138626098633
    10. '```' → logprob: -9.015138626098633

Token 232: '       ' (ID: 309)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.5674665570259094
    2. '       ' → logprob: -1.4424664974212646
    3. ' dist' → logprob: -2.0674664974212646
    4. '   ' → logprob: -3.3174664974212646
    5. 'pos' → logprob: -3.6924664974212646
    6. 'dist' → logprob: -4.817466735839844
    7. '
' → logprob: -8.192466735839844
    8. '```' → logprob: -8.567466735839844
    9. '	pos' → logprob: -9.442466735839844
    10. '	dist' → logprob: -9.567466735839844

Token 233: ' dist' (ID: 3601)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.17178162932395935
    2. 'dist' (adapté à ' dist') → logprob: -1.9217816591262817
    3. ' pos' → logprob: -4.796781539916992
    4. ' dist' → logprob: -5.796781539916992
    5. '   ' → logprob: -9.171781539916992
    6. '       ' → logprob: -9.671781539916992
    7. 'distance' → logprob: -11.921781539916992
    8. '	pos' → logprob: -12.171781539916992
    9. '
' → logprob: -13.046781539916992
    10. 'd' → logprob: -13.296781539916992

Token 234: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0052386182360351086
    2. '+=' → logprob: -5.2552385330200195
    3. '+' → logprob: -13.50523853302002
    4. '   ' → logprob: -13.63023853302002
    5. '=' → logprob: -14.25523853302002
    6. ' +' → logprob: -14.25523853302002
    7. ' =' → logprob: -15.25523853302002
    8. ' ' → logprob: -15.38023853302002
    9. ' ' → logprob: -15.75523853302002
    10. '    ' → logprob: -15.88023853302002

Token 235: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011047935113310814
    2. ' d' → logprob: -4.511047840118408
    3. '	d' → logprob: -16.76104736328125
    4. ' ' → logprob: -18.13604736328125
    5. '
' → logprob: -18.76104736328125
    6. '   ' → logprob: -18.88604736328125
    7. '<|end|>' → logprob: -19.01104736328125
    8. '(d' → logprob: -19.38604736328125
    9. ')d' → logprob: -19.51104736328125
    10. '```' → logprob: -19.63604736328125

Token 236: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4294103980064392
    2. ' pos' → logprob: -1.554410457611084
    3. 'pos' → logprob: -2.054410457611084
    4. '   ' → logprob: -4.804410457611084
    5. '
' → logprob: -7.929410457611084
    6. '```' → logprob: -8.304409980773926
    7. '	pos' → logprob: -8.304409980773926
    8. '        
' → logprob: -8.929409980773926
    9. ',pos' → logprob: -9.179409980773926
    10. '_pos' → logprob: -9.679409980773926

Token 237: '       ' (ID: 309)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5746693015098572
    2. ' pos' → logprob: -1.074669361114502
    3. '       ' → logprob: -2.449669361114502
    4. '   ' → logprob: -4.699669361114502
    5. '	pos' → logprob: -8.949668884277344
    6. ' carrying' → logprob: -10.949668884277344
    7. ',pos' → logprob: -11.074668884277344
    8. '```' → logprob: -11.074668884277344
    9. '           ' → logprob: -11.449668884277344
    10. ' ' → logprob: -11.449668884277344

Token 238: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.004201155621558428
    2. ' pos' → logprob: -5.5042009353637695
    3. 'car' → logprob: -9.37920093536377
    4. '   ' → logprob: -11.00420093536377
    5. '       ' → logprob: -11.12920093536377
    6. ' carrying' → logprob: -12.87920093536377
    7. 'carry' → logprob: -12.87920093536377
    8. '	pos' → logprob: -14.12920093536377
    9. 'position' → logprob: -14.62920093536377
    10. '```' → logprob: -15.75420093536377

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395956993103
    2. '=' → logprob: -0.8259395956993103
    3. ' +=' → logprob: -17.200939178466797
    4. '.=' → logprob: -17.200939178466797
    5. '＝' → logprob: -17.200939178466797
    6. '=}' → logprob: -18.200939178466797
    7. '+=' → logprob: -18.950939178466797
    8. ' =)' → logprob: -19.325939178466797
    9. ' .=' → logprob: -19.575939178466797
    10. ')' → logprob: -19.700939178466797

Token 240: ' pi' (ID: 6404)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.02975083328783512
    2. ' pi' → logprob: -3.5297508239746094
    3. '(pi' → logprob: -15.90475082397461
    4. 'p' → logprob: -16.15475082397461
    5. '_pi' → logprob: -16.52975082397461
    6. '*pi' → logprob: -16.90475082397461
    7. 'ip' → logprob: -17.52975082397461
    8. '.pi' → logprob: -17.52975082397461
    9. 'py' → logprob: -17.52975082397461
    10. '   ' → logprob: -18.15475082397461

Token 241: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07576227933168411
    2. '
' → logprob: -3.4507622718811035
    3. '   ' → logprob: -3.5757622718811035
    4. '        
' → logprob: -5.0757622718811035
    5. 'carry' → logprob: -6.0757622718811035
    6. '```' → logprob: -6.2007622718811035
    7. '    
' → logprob: -6.4507622718811035
    8. 'car' → logprob: -8.075762748718262
    9. '  
' → logprob: -8.700762748718262
    10. 'if' → logprob: -8.825762748718262

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03203902021050453
    2. ' carrying' → logprob: -4.407039165496826
    3. '   ' → logprob: -5.157039165496826
    4. '        
' → logprob: -5.657039165496826
    5. 'car' → logprob: -5.782039165496826
    6. 'carry' → logprob: -5.782039165496826
    7. '
' → logprob: -6.032039165496826
    8. ' carry' → logprob: -8.032038688659668
    9. '    
' → logprob: -8.282038688659668
    10. '```' → logprob: -8.532038688659668

Token 243: ' #' (ID: 1069)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.000634639582131058
    2. '       ' → logprob: -7.750634670257568
    3. ' carrying' → logprob: -9.00063419342041
    4. 'carry' → logprob: -9.87563419342041
    5. '   ' → logprob: -10.50063419342041
    6. 'if' → logprob: -14.00063419342041
    7. '        
' → logprob: -14.87563419342041
    8. '
' → logprob: -15.50063419342041
    9. '```' → logprob: -16.125635147094727
    10. '      ' → logprob: -16.375635147094727

Token 244: ' catch' (ID: 3494)
  Prédit: ' carrying'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' carrying' → logprob: -0.4684940278530121
    2. 'car' → logprob: -1.2184940576553345
    3. ' if' → logprob: -3.218493938446045
    4. 'if' → logprob: -3.593493938446045
    5. 'carry' → logprob: -4.718493938446045
    6. ' carry' → logprob: -6.968493938446045
    7. '#' → logprob: -7.718493938446045
    8. ' carried' → logprob: -9.468494415283203
    9. ' #' → logprob: -9.593494415283203
    10. '   ' → logprob: -9.718494415283203

Token 245: ' balloon' (ID: 63124)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.8408625721931458
    2. ' balloons' → logprob: -1.340862512588501
    3. ' balloon' → logprob: -1.965862512588501
    4. ' carrying' → logprob: -2.215862512588501
    5. 'car' → logprob: -3.840862512588501
    6. ' a' → logprob: -4.71586275100708
    7. ' the' → logprob: -4.71586275100708
    8. '       ' → logprob: -4.84086275100708
    9. ' ballon' → logprob: -6.34086275100708
    10. '   ' → logprob: -6.59086275100708

Token 246: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.618804931640625
    2. ' carrying' → logprob: -0.868804931640625
    3. 'car' → logprob: -3.743804931640625
    4. '   ' → logprob: -5.368804931640625
    5. '
' → logprob: -5.743804931640625
    6. ' if' → logprob: -5.868804931640625
    7. '        
' → logprob: -6.118804931640625
    8. '()
' → logprob: -6.618804931640625
    9. 'carry' → logprob: -7.118804931640625
    10. ',' → logprob: -7.493804931640625

Token 247: 'no' (ID: 1750)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5488206744194031
    2. ' carrying' → logprob: -0.9238206744194031
    3. ')' → logprob: -4.798820495605469
    4. '       ' → logprob: -5.173820495605469
    5. 'carry' → logprob: -5.923820495605469
    6. '   ' → logprob: -6.048820495605469
    7. ')
' → logprob: -6.423820495605469
    8. ' carried' → logprob: -7.173820495605469
    9. 'len' → logprob: -7.548820495605469
    10. '),' → logprob: -8.298820495605469

Token 248: ' time' (ID: 1058)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.8809040784835815
    2. ' space' → logprob: -2.255904197692871
    3. 'append' → logprob: -2.630904197692871
    4. ' more' → logprob: -2.630904197692871
    5. ' append' → logprob: -2.880904197692871
    6. ' spaces' → logprob: -3.755904197692871
    7. ' carrying' → logprob: -3.755904197692871
    8. ' need' → logprob: -3.880904197692871
    9. ' adding' → logprob: -3.880904197692871
    10. ' change' → logprob: -4.130904197692871

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3583431839942932
    2. ' cost' → logprob: -2.3583431243896484
    3. ' added' → logprob: -2.4833431243896484
    4. ' needed' → logprob: -2.7333431243896484
    5. ' )' → logprob: -3.2333431243896484
    6. ' required' → logprob: -5.733343124389648
    7. ' penalty' → logprob: -5.733343124389648
    8. 'cost' → logprob: -5.983343124389648
    9. 'needed' → logprob: -6.358343124389648
    10. ' taken' → logprob: -6.358343124389648

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40615060925483704
    2. ' carrying' → logprob: -1.1561505794525146
    3. 'car' → logprob: -4.406150817871094
    4. '   ' → logprob: -5.406150817871094
    5. 'carry' → logprob: -7.281150817871094
    6. ' carry' → logprob: -7.406150817871094
    7. ' carried' → logprob: -8.531150817871094
    8. ' if' → logprob: -8.906150817871094
    9. '        
' → logprob: -8.906150817871094
    10. ' carriage' → logprob: -9.031150817871094

Token 251: ' carrying' (ID: 25328)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.03420814871788025
    2. ' carrying' → logprob: -3.409208059310913
    3. '   ' → logprob: -8.159208297729492
    4. 'carry' → logprob: -8.909208297729492
    5. 'if' → logprob: -9.909208297729492
    6. '       ' → logprob: -10.034208297729492
    7. ' if' → logprob: -11.159208297729492
    8. ' car' → logprob: -12.159208297729492
    9. ' carried' → logprob: -12.534208297729492
    10. '
' → logprob: -12.659208297729492

Token 252: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002477677771821618
    2. '.' → logprob: -6.002477645874023
    3. ' .' → logprob: -14.127477645874023
    4. '.app' → logprob: -14.377477645874023
    5. '.ap' → logprob: -14.752477645874023
    6. '.add' → logprob: -15.377477645874023
    7. '.push' → logprob: -17.377477645874023
    8. ').' → logprob: -17.627477645874023
    9. '.extend' → logprob: -17.627477645874023
    10. '.insert' → logprob: -17.877477645874023

Token 253: '((' (ID: 2054)
  Prédit: '(pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pi' → logprob: -0.14567124843597412
    2. '(' → logprob: -2.5206713676452637
    3. '(i' → logprob: -3.0206713676452637
    4. '(True' → logprob: -6.145671367645264
    5. '(None' → logprob: -6.395671367645264
    6. '(t' → logprob: -6.895671367645264
    7. '((' → logprob: -7.020671367645264
    8. '(p' → logprob: -8.270670890808105
    9. '('' → logprob: -8.770670890808105
    10. '(pos' → logprob: -10.020670890808105

Token 254: 'pi' (ID: 3455)
  Prédit: 'pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.00010211274639004841
    2. 'ti' → logprob: -10.000102043151855
    3. 'p' → logprob: -10.250102043151855
    4. ' pi' → logprob: -11.875102043151855
    5. 'pos' → logprob: -12.125102043151855
    6. ')' → logprob: -13.250102043151855
    7. 'i' → logprob: -13.625102043151855
    8. '   ' → logprob: -13.875102043151855
    9. '(pi' → logprob: -14.625102043151855
    10. 'pid' → logprob: -14.750102043151855

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.598092684522271e-05
    2. ' ,' → logprob: -10.625056266784668
    3. ')' → logprob: -11.125056266784668
    4. ',
' → logprob: -12.375056266784668
    5. ',t' → logprob: -12.500056266784668
    6. ',)' → logprob: -12.875056266784668
    7. '))' → logprob: -13.375056266784668
    8. '),' → logprob: -13.750056266784668
    9. ',

' → logprob: -14.250056266784668
    10. '‌,' → logprob: -14.375056266784668

Token 256: ' ti' (ID: 2919)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.0007183883571997285
    2. ' ti' → logprob: -7.250718593597412
    3. '	ti' → logprob: -11.875718116760254
    4. '   ' → logprob: -14.500718116760254
    5. 'tii' → logprob: -14.625718116760254
    6. 'pi' → logprob: -15.750718116760254
    7. ' ' → logprob: -16.12571907043457
    8. ')' → logprob: -16.62571907043457
    9. 'time' → logprob: -16.87571907043457
    10. '-ti' → logprob: -17.37571907043457

Token 257: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12701945006847382
    2. ')' → logprob: -2.1270194053649902
    3. '))
' → logprob: -9.502019882202148
    4. ')
' → logprob: -11.877019882202148
    5. ' ))' → logprob: -12.377019882202148
    6. ' )' → logprob: -13.252019882202148
    7. ')))' → logprob: -13.502019882202148
    8. '   ' → logprob: -14.502019882202148
    9. '),' → logprob: -14.627019882202148
    10. '))

' → logprob: -15.002019882202148

Token 258: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8118212223052979
    2. '<|end|>' → logprob: -0.8118212223052979
    3. '       ' → logprob: -2.686821222305298
    4. '
' → logprob: -4.561820983886719
    5. '    
' → logprob: -4.561820983886719
    6. ' if' → logprob: -5.186820983886719
    7. '        
' → logprob: -5.436820983886719
    8. '  
' → logprob: -6.061820983886719
    9. ')' → logprob: -6.061820983886719
    10. 'return' → logprob: -6.686820983886719

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6762612462043762
    2. 'if' → logprob: -1.9262611865997314
    3. '
' → logprob: -2.0512611865997314
    4. 'return' → logprob: -2.1762611865997314
    5. ' if' → logprob: -2.9262611865997314
    6. '```' → logprob: -3.3012611865997314
    7. '<|end|>' → logprob: -5.6762614250183105
    8. 'car' → logprob: -6.1762614250183105
    9. 'for' → logprob: -6.4262614250183105
    10. '    
' → logprob: -6.4262614250183105

Token 260: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1460738629102707
    2. 'return' → logprob: -2.396073818206787
    3. 'if' → logprob: -3.146073818206787
    4. 'while' → logprob: -7.021073818206787
    5. 'd' → logprob: -7.396073818206787
    6. '   ' → logprob: -8.771074295043945
    7. ' #' → logprob: -9.896074295043945
    8. ' if' → logprob: -10.021074295043945
    9. ' return' → logprob: -10.146074295043945
    10. 'dist' → logprob: -12.396074295043945

Token 261: ' after' (ID: 1934)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5711904764175415
    2. 'return' → logprob: -1.0711904764175415
    3. ' return' → logprob: -3.321190357208252
    4. 'if' → logprob: -3.446190357208252
    5. ' #' → logprob: -4.071190357208252
    6. ' if' → logprob: -5.071190357208252
    7. 'd' → logprob: -8.32119083404541
    8. ' after' → logprob: -8.69619083404541
    9. '   ' → logprob: -8.82119083404541
    10. 'after' → logprob: -8.82119083404541

Token 262: ' catching' (ID: 52863)
  Prédit: ' catching'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' catching' → logprob: -0.7199847102165222
    2. 'catch' → logprob: -1.094984769821167
    3. 'all' → logprob: -3.219984769821167
    4. ' finishing' → logprob: -3.719984769821167
    5. 'capt' → logprob: -3.719984769821167
    6. 'the' → logprob: -4.094984531402588
    7. '#' → logprob: -4.219984531402588
    8. 'for' → logprob: -4.344984531402588
    9. ' the' → logprob: -4.594984531402588
    10. 'ball' → logprob: -5.344984531402588

Token 263: ' last' (ID: 2174)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.12720704078674316
    2. ' all' → logprob: -2.127207040786743
    3. '#' → logprob: -8.627206802368164
    4. ' ' → logprob: -10.377206802368164
    5. '   ' → logprob: -10.502206802368164
    6. 'remaining' → logprob: -11.877206802368164
    7. ' remaining' → logprob: -12.252206802368164
    8. ' last' → logprob: -12.377206802368164
    9. 'if' → logprob: -12.502206802368164
    10. 'the' → logprob: -12.627206802368164

Token 264: ' balloon' (ID: 63124)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.1326809823513031
    2. ' balloon' → logprob: -2.132680892944336
    3. ' balloons' → logprob: -5.757680892944336
    4. 'b' → logprob: -7.257680892944336
    5. ' ballon' → logprob: -7.632680892944336
    6. '   ' → logprob: -8.757680892944336
    7. ',' → logprob: -8.757680892944336
    8. 'all' → logprob: -8.882680892944336
    9. ' ' → logprob: -9.007680892944336
    10. 's' → logprob: -9.132680892944336

Token 265: '(s' (ID: 1858)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38183966279029846
    2. ' if' → logprob: -1.881839632987976
    3. 'if' → logprob: -2.2568397521972656
    4. 'while' → logprob: -3.8818397521972656
    5. ',' → logprob: -4.131839752197266
    6. '#' → logprob: -4.256839752197266
    7. ' while' → logprob: -4.756839752197266
    8. ' #' → logprob: -7.756839752197266
    9. 'return' → logprob: -8.131839752197266
    10. ' ' → logprob: -9.256839752197266

Token 266: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.326375275850296
    2. '),' → logprob: -1.4513752460479736
    3. ')' → logprob: -3.3263752460479736
    4. '):
' → logprob: -5.951375484466553
    5. ' ,' → logprob: -5.951375484466553
    6. '):' → logprob: -6.951375484466553
    7. '   ' → logprob: -7.201375484466553
    8. ' ),' → logprob: -7.326375484466553
    9. ')
' → logprob: -8.326375007629395
    10. ' )' → logprob: -8.326375007629395

Token 267: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41462206840515137
    2. '#' → logprob: -1.4146220684051514
    3. 'while' → logprob: -2.5396220684051514
    4. ' if' → logprob: -4.2896223068237305
    5. ' while' → logprob: -6.5396223068237305
    6. ' #' → logprob: -7.0396223068237305
    7. 'd' → logprob: -7.2896223068237305
    8. 'return' → logprob: -7.5396223068237305
    9. '   ' → logprob: -8.53962230682373
    10. ' d' → logprob: -11.03962230682373

Token 268: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.366109162569046
    2. 'to' → logprob: -1.2411091327667236
    3. ' home' → logprob: -4.616109371185303
    4. ' ' → logprob: -5.616109371185303
    5. 'home' → logprob: -6.741109371185303
    6. '_to' → logprob: -6.866109371185303
    7. 'pos' → logprob: -6.866109371185303
    8. '0' → logprob: -7.741109371185303
    9. ' pos' → logprob: -9.241108894348145
    10. '  ' → logprob: -9.991108894348145

Token 269: ' house' (ID: 4276)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7132915258407593
    2. ' ' → logprob: -1.2132915258407593
    3. ' house' → logprob: -1.8382915258407593
    4. 'house' → logprob: -3.088291645050049
    5. ' home' → logprob: -5.088291645050049
    6. 'home' → logprob: -6.338291645050049
    7. ' the' → logprob: -10.46329116821289
    8. '  ' → logprob: -10.71329116821289
    9. ' position' → logprob: -11.02579116821289
    10. 'pos' → logprob: -11.77579116821289

Token 270: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39339688420295715
    2. ' if' → logprob: -1.6433968544006348
    3. 'if' → logprob: -2.1433968544006348
    4. 'd' → logprob: -4.268396854400635
    5. '
' → logprob: -8.143397331237793
    6. ' d' → logprob: -9.643397331237793
    7. 'while' → logprob: -9.643397331237793
    8. '    
' → logprob: -10.018397331237793
    9. ' while' → logprob: -10.393397331237793
    10. ' ' → logprob: -10.393397331237793

Token 271: ' store' (ID: 4897)
  Prédit: ' drop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' drop' → logprob: -0.13498474657535553
    2. 'drop' → logprob: -2.1349847316741943
    3. ' deliver' → logprob: -5.259984970092773
    4. ' return' → logprob: -6.759984970092773
    5. 'return' → logprob: -7.509984970092773
    6. 'deliver' → logprob: -7.884984970092773
    7. ' finish' → logprob: -8.134984970092773
    8. ' complete' → logprob: -8.259984970092773
    9. 'finish' → logprob: -9.759984970092773
    10. 'complete' → logprob: -9.884984970092773

Token 272: ' them' (ID: 1373)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9050721526145935
    2. ' d' → logprob: -1.0300722122192383
    3. ' if' → logprob: -1.7800722122192383
    4. '   ' → logprob: -3.0300722122192383
    5. 'if' → logprob: -4.030072212219238
    6. 'dist' → logprob: -6.905072212219238
    7. 'pos' → logprob: -7.530072212219238
    8. ' ' → logprob: -8.030072212219238
    9. ' dist' → logprob: -8.155072212219238
    10. '    
' → logprob: -8.155072212219238

Token 273: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3114682137966156
    2. 'd' → logprob: -2.0614681243896484
    3. ' if' → logprob: -2.3114681243896484
    4. 'if' → logprob: -3.4364681243896484
    5. '
' → logprob: -5.061468124389648
    6. ' d' → logprob: -7.061468124389648
    7. 'dist' → logprob: -7.436468124389648
    8. '```' → logprob: -7.561468124389648
    9. 'while' → logprob: -8.686468124389648
    10. '    
' → logprob: -8.811468124389648

Token 274: 'can' (ID: 6929)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39119723439216614
    2. 'd' → logprob: -1.8911972045898438
    3. ' d' → logprob: -2.7661972045898438
    4. 'if' → logprob: -3.1411972045898438
    5. ')
' → logprob: -3.3911972045898438
    6. '   ' → logprob: -4.141197204589844
    7. ')' → logprob: -4.641197204589844
    8. '
' → logprob: -6.016197204589844
    9. ' while' → logprob: -6.016197204589844
    10. ' )
' → logprob: -6.516197204589844

Token 275: ' be' (ID: 413)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8098281621932983
    2. ' return' → logprob: -1.4348281621932983
    3. ')' → logprob: -2.059828281402588
    4. '   ' → logprob: -3.684828281402588
    5. ' not' → logprob: -3.934828281402588
    6. 'carry' → logprob: -3.934828281402588
    7. ' only' → logprob: -4.059828281402588
    8. ' be' → logprob: -4.184828281402588
    9. 'not' → logprob: -4.434828281402588
    10. ' have' → logprob: -4.434828281402588

Token 276: ' ' (ID: 220)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.48320743441581726
    2. ' done' → logprob: -2.6082074642181396
    3. 'caught' → logprob: -2.6082074642181396
    4. 'True' → logprob: -2.8582074642181396
    5. 'False' → logprob: -3.1082074642181396
    6. ' True' → logprob: -3.6082074642181396
    7. 'ignored' → logprob: -3.9832074642181396
    8. ' False' → logprob: -4.3582072257995605
    9. 'car' → logprob: -4.4832072257995605
    10. '0' → logprob: -4.6082072257995605

Token 277: '1' (ID: 16)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'done' → logprob: -1.3137084245681763
    2. '0' → logprob: -1.6887084245681763
    3. 'True' → logprob: -2.0637083053588867
    4. 'False' → logprob: -2.3137083053588867
    5. ' done' → logprob: -2.5637083053588867
    6. ' True' → logprob: -2.9387083053588867
    7. 'car' → logprob: -3.0637083053588867
    8. 'caught' → logprob: -3.1887083053588867
    9. ' False' → logprob: -3.6887083053588867
    10. ' ' → logprob: -4.063708305358887

Token 278: '-' (ID: 12)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.32784977555274963
    2. ')' → logprob: -2.202849864959717
    3. '0' → logprob: -2.577849864959717
    4. ')
' → logprob: -2.952849864959717
    5. '3' → logprob: -4.452849864959717
    6. ' ' → logprob: -5.077849864959717
    7. ' if' → logprob: -5.327849864959717
    8. 'or' → logprob: -5.577849864959717
    9. ',' → logprob: -6.202849864959717
    10. ' time' → logprob: -6.577849864959717

Token 279: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -12.000008583068848
    3. 'len' → logprob: -14.125008583068848
    4. '```' → logprob: -14.375008583068848
    5. '2' → logprob: -14.875008583068848
    6. '5' → logprob: -16.00000762939453
    7. ')' → logprob: -16.25000762939453
    8. '4' → logprob: -16.75000762939453
    9. 'car' → logprob: -16.75000762939453
    10. '7' → logprob: -17.25000762939453

Token 280: ' balloons' (ID: 114791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7999265789985657
    2. ')
' → logprob: -0.9249265789985657
    3. 'ball' → logprob: -2.549926519393921
    4. ' balloons' → logprob: -3.424926519393921
    5. ')

' → logprob: -4.2999267578125
    6. 'b' → logprob: -4.2999267578125
    7. '):
' → logprob: -4.6749267578125
    8. '):

' → logprob: -6.2999267578125
    9. '```' → logprob: -7.6749267578125
    10. '#' → logprob: -7.7999267578125

Token 281: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18380220234394073
    2. ')
' → logprob: -1.8088022470474243
    3. '   ' → logprob: -5.558802127838135
    4. ')

' → logprob: -9.433802604675293
    5. ')
' → logprob: -9.683802604675293
    6. '):' → logprob: -11.433802604675293
    7. '):
' → logprob: -11.558802604675293
    8. 'if' → logprob: -12.433802604675293
    9. '       ' → logprob: -12.558802604675293
    10. ' )' → logprob: -12.933802604675293

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10245100408792496
    2. 'd' → logprob: -2.8524510860443115
    3. 'if' → logprob: -3.8524510860443115
    4. ' if' → logprob: -4.602450847625732
    5. '
' → logprob: -5.227450847625732
    6. '```' → logprob: -6.602450847625732
    7. 'dist' → logprob: -7.102450847625732
    8. 'while' → logprob: -7.727450847625732
    9. '``' → logprob: -8.97745132446289
    10. ' d' → logprob: -9.10245132446289

Token 283: ' while' (ID: 2049)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6261423826217651
    2. ' d' → logprob: -1.1261423826217651
    3. '   ' → logprob: -2.1261425018310547
    4. ' if' → logprob: -4.251142501831055
    5. ' while' → logprob: -6.126142501831055
    6. '
' → logprob: -6.626142501831055
    7. ' dist' → logprob: -7.001142501831055
    8. ' pos' → logprob: -7.251142501831055
    9. 'dist' → logprob: -7.376142501831055
    10. 'if' → logprob: -7.501142501831055

Token 284: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9092788100242615
    2. ' len' → logprob: -0.9092788100242615
    3. 'pos' → logprob: -2.0342788696289062
    4. ' pos' → logprob: -2.7842788696289062
    5. ' carrying' → logprob: -6.534278869628906
    6. 'car' → logprob: -8.784278869628906
    7. '(len' → logprob: -9.409278869628906
    8. '(pos' → logprob: -10.096778869628906
    9. 'carry' → logprob: -10.721778869628906
    10. ' carry' → logprob: -11.846778869628906

Token 285: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.843177233240567e-05
    2. '(' → logprob: -11.125018119812012
    3. '(car' → logprob: -12.750018119812012
    4. ' (' → logprob: -15.000018119812012
    5. 'c' → logprob: -15.625018119812012
    6. 'car' → logprob: -16.000019073486328
    7. '(
' → logprob: -16.625019073486328
    8. 'carry' → logprob: -17.875019073486328
    9. ')' → logprob: -18.250019073486328
    10. '```' → logprob: -18.875019073486328

Token 286: 'arry' (ID: 20052)
  Prédit: 'arry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arry' → logprob: -0.010720713064074516
    2. 'arring' → logprob: -4.635720729827881
    3. 'ar' → logprob: -8.385720252990723
    4. 'arr' → logprob: -8.635720252990723
    5. 'car' → logprob: -8.635720252990723
    6. '(c' → logprob: -8.760720252990723
    7. 'c' → logprob: -9.885720252990723
    8. ' carrying' → logprob: -10.135720252990723
    9. 'ary' → logprob: -10.635720252990723
    10. 'array' → logprob: -11.010720252990723

Token 287: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.00019650737522169948
    2. 'ging' → logprob: -9.50019645690918
    3. 'cing' → logprob: -10.00019645690918
    4. 'g' → logprob: -10.37519645690918
    5. 'car' → logprob: -11.37519645690918
    6. 'ying' → logprob: -11.75019645690918
    7. 'ring' → logprob: -12.12519645690918
    8. 'ering' → logprob: -12.50019645690918
    9. '(c' → logprob: -12.87519645690918
    10. 'ng' → logprob: -13.12519645690918

Token 288: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005752203520387411
    2. '>' → logprob: -5.880752086639404
    3. ')>' → logprob: -5.880752086639404
    4. ' >' → logprob: -9.255752563476562
    5. '):' → logprob: -10.505752563476562
    6. ' )' → logprob: -11.255752563476562
    7. '):
' → logprob: -12.380752563476562
    8. '   ' → logprob: -12.880752563476562
    9. ')!=' → logprob: -13.755752563476562
    10. ')<' → logprob: -13.880752563476562

Token 289: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06995055079460144
    2. ' >' → logprob: -2.694950580596924
    3. '!=' → logprob: -12.694950103759766
    4. '{' → logprob: -13.069950103759766
    5. '&gt' → logprob: -13.069950103759766
    6. ':' → logprob: -13.194950103759766
    7. ' !=' → logprob: -13.819950103759766
    8. ')>' → logprob: -13.819950103759766
    9. ' ' → logprob: -13.944950103759766
    10. '()>' → logprob: -14.444950103759766

Token 290: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '۰' → logprob: -19.25010871887207
    4. '   ' → logprob: -19.37510871887207
    5. '>' → logprob: -19.87510871887207
    6. '```' → logprob: -20.00010871887207
    7. '  ' → logprob: -20.87510871887207
    8. ' ' → logprob: -21.25010871887207
    9. '０' → logprob: -21.25010871887207
    10. ')' → logprob: -21.87510871887207

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -20.250001907348633
    4. '```' → logprob: -21.875001907348633
    5. '０' → logprob: -22.625001907348633
    6. '   ' → logprob: -22.625001907348633
    7. '>' → logprob: -22.625001907348633
    8. '٠' → logprob: -23.625001907348633
    9. '
' → logprob: -24.125001907348633
    10. '00' → logprob: -24.375001907348633

Token 292: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.57625812292099
    2. ':' → logprob: -0.82625812292099
    3. '   ' → logprob: -8.201257705688477
    4. '):
' → logprob: -10.826257705688477
    5. ':

' → logprob: -11.701257705688477
    6. '       ' → logprob: -12.076257705688477
    7. '{
' → logprob: -12.451257705688477
    8. '{' → logprob: -13.576257705688477
    9. ':
' → logprob: -13.951257705688477
    10. '=' → logprob: -14.076257705688477

Token 293: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10257828235626221
    2. '       ' → logprob: -2.3525781631469727
    3. '
' → logprob: -6.852578163146973
    4. '#' → logprob: -7.352578163146973
    5. ' #' → logprob: -8.227578163146973
    6. '           ' → logprob: -9.477578163146973
    7. 'd' → logprob: -9.477578163146973
    8. '```' → logprob: -9.602578163146973
    9. '	' → logprob: -10.227578163146973
    10. ' ' → logprob: -10.352578163146973

Token 294: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.35925284028053284
    2. '#' → logprob: -1.6092528104782104
    3. '   ' → logprob: -2.3592529296875
    4. '       ' → logprob: -5.3592529296875
    5. '           ' → logprob: -6.9842529296875
    6. ' d' → logprob: -6.9842529296875
    7. ' #' → logprob: -7.7342529296875
    8. ' ' → logprob: -8.7342529296875
    9. '```' → logprob: -9.9842529296875
    10. '  ' → logprob: -10.2342529296875

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003600544296205044
    2. '=' → logprob: -5.628600597381592
    3. ' ' → logprob: -15.003600120544434
    4. '	' → logprob: -15.878600120544434
    5. ' ' → logprob: -17.62860107421875
    6. '   ' → logprob: -18.87860107421875
    7. '        ' → logprob: -19.12860107421875
    8. 'd' → logprob: -19.25360107421875
    9. '    ' → logprob: -19.25360107421875
    10. 's' → logprob: -19.50360107421875

Token 296: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.057243213057518005
    2. ' abs' → logprob: -3.1822431087493896
    3. 'pos' → logprob: -4.307243347167969
    4. ' pos' → logprob: -7.307243347167969
    5. ' ' → logprob: -14.682243347167969
    6. '(abs' → logprob: -14.682243347167969
    7. '.abs' → logprob: -15.182243347167969
    8. '   ' → logprob: -16.05724334716797
    9. '```' → logprob: -16.18224334716797
    10. '0' → logprob: -16.18224334716797

Token 297: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.04859759286046028
    2. 'pos' → logprob: -3.048597574234009
    3. ' pos' → logprob: -12.17359733581543
    4. '(' → logprob: -12.29859733581543
    5. '0' → logprob: -15.17359733581543
    6. '[pos' → logprob: -16.42359733581543
    7. '	pos' → logprob: -17.17359733581543
    8. ',pos' → logprob: -17.42359733581543
    9. '_pos' → logprob: -18.17359733581543
    10. 'Pos' → logprob: -18.29859733581543

Token 298: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02332386001944542
    2. '-' → logprob: -3.7733237743377686
    3. ')' → logprob: -9.898324012756348
    4. ' ' → logprob: -10.898324012756348
    5. '   ' → logprob: -11.898324012756348
    6. '  ' → logprob: -14.023324012756348
    7. '(' → logprob: -14.148324012756348
    8. ' -
' → logprob: -15.773324012756348
    9. ' )' → logprob: -16.27332305908203
    10. '-)' → logprob: -16.27332305908203

Token 299: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00760698551312089
    2. ' ' → logprob: -4.8826069831848145
    3. '   ' → logprob: -14.632607460021973
    4. ')' → logprob: -15.882607460021973
    5. '  ' → logprob: -16.132606506347656
    6. ' ' → logprob: -17.007606506347656
    7. 'pos' → logprob: -17.132606506347656
    8. '```' → logprob: -17.195106506347656
    9. '[' → logprob: -17.757606506347656
    10. '`' → logprob: -17.820106506347656

Token 300: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.250066757202148
    4. ')' → logprob: -16.25006675720215
    5. '  ' → logprob: -17.87506675720215
    6. '```' → logprob: -17.87506675720215
    7. '`' → logprob: -18.25006675720215
    8. '۰' → logprob: -18.75006675720215
    9. '[' → logprob: -18.87506675720215
    10. '=' → logprob: -19.06256675720215

Token 301: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011057964526116848
    2. ')' → logprob: -4.5110578536987305
    3. ')
' → logprob: -12.26105785369873
    4. '       ' → logprob: -12.51105785369873
    5. ' )
' → logprob: -14.13605785369873
    6. ')

' → logprob: -14.13605785369873
    7. '   ' → logprob: -15.38605785369873
    8. ')`
' → logprob: -17.386058807373047
    9. '           ' → logprob: -17.511058807373047
    10. ')d' → logprob: -18.511058807373047

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010940054431557655
    2. '           ' → logprob: -5.385940074920654
    3. '#' → logprob: -5.760940074920654
    4. '```' → logprob: -6.885940074920654
    5. 'need' → logprob: -7.385940074920654
    6. '
' → logprob: -7.635940074920654
    7. ' #' → logprob: -8.385939598083496
    8. ' need' → logprob: -8.510939598083496
    9. '        
' → logprob: -8.635939598083496
    10. '   ' → logprob: -9.010939598083496

Token 303: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' (adapté à ' speed') → logprob: -0.03527514263987541
    2. 'need' → logprob: -4.035274982452393
    3. '#' → logprob: -4.410274982452393
    4. ' speed' → logprob: -5.785274982452393
    5. 'time' → logprob: -7.410274982452393
    6. '       ' → logprob: -7.535274982452393
    7. ' #' → logprob: -8.53527545928955
    8. '   ' → logprob: -8.66027545928955
    9. '           ' → logprob: -9.41027545928955
    10. ' need' → logprob: -10.03527545928955

Token 304: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326398253440857
    2. ' =' → logprob: -1.313264012336731
    3. 's' → logprob: -13.438263893127441
    4. ' ' → logprob: -14.813263893127441
    5. '=len' → logprob: -16.063264846801758
    6. ' *=' → logprob: -16.938264846801758
    7. ')' → logprob: -17.313264846801758
    8. '*' → logprob: -17.688264846801758
    9. '=

' → logprob: -17.688264846801758
    10. '   ' → logprob: -17.688264846801758

Token 305: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.06473027914762497
    2. ' len' → logprob: -3.314730167388916
    3. '4' → logprob: -4.189730167388916
    4. '(len' → logprob: -4.689730167388916
    5. ' ' → logprob: -7.564730167388916
    6. '5' → logprob: -7.814730167388916
    7. ' (' → logprob: -7.814730167388916
    8. '(' → logprob: -8.189730644226074
    9. '1' → logprob: -8.814730644226074
    10. '3' → logprob: -9.439730644226074

Token 306: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.125017166137695
    3. '(car' → logprob: -13.500017166137695
    4. 'c' → logprob: -13.875017166137695
    5. '(d' → logprob: -16.750017166137695
    6. '	c' → logprob: -17.125017166137695
    7. ' (' → logprob: -17.250017166137695
    8. 'car' → logprob: -17.625017166137695
    9. '(
' → logprob: -17.625017166137695
    10. 'carry' → logprob: -18.625017166137695

Token 307: 'arry' (ID: 20052)
  Prédit: 'arry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arry' → logprob: -0.020339123904705048
    2. 'car' → logprob: -4.395339012145996
    3. 'ar' → logprob: -6.145339012145996
    4. 'arr' → logprob: -6.145339012145996
    5. 'arring' → logprob: -6.145339012145996
    6. ' carrying' → logprob: -7.520339012145996
    7. 'c' → logprob: -8.770339012145996
    8. 'array' → logprob: -9.020339012145996
    9. 'ary' → logprob: -9.395339012145996
    10. ')' → logprob: -9.395339012145996

Token 308: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.056681424379348755
    2. 'g' → logprob: -2.9316813945770264
    3. 'car' → logprob: -7.0566816329956055
    4. 'ng' → logprob: -7.1816816329956055
    5. 'carry' → logprob: -9.681681632995605
    6. ' carrying' → logprob: -9.806681632995605
    7. 'ying' → logprob: -11.306681632995605
    8. 'rying' → logprob: -11.681681632995605
    9. '   ' → logprob: -11.931681632995605
    10. 'ging' → logprob: -12.306681632995605

Token 309: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01494219247251749
    2. ')+' → logprob: -4.889942169189453
    3. '+' → logprob: -5.264942169189453
    4. ' +' → logprob: -6.764942169189453
    5. ')
' → logprob: -7.389942169189453
    6. ')*' → logprob: -9.264942169189453
    7. ' )' → logprob: -9.264942169189453
    8. '   ' → logprob: -9.389942169189453
    9. '+)' → logprob: -10.514942169189453
    10. ')

' → logprob: -11.514942169189453

Token 310: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4975300431251526
    2. '+' → logprob: -0.9975300431251526
    3. '*' → logprob: -4.122529983520508
    4. ' *' → logprob: -4.997529983520508
    5. ')' → logprob: -9.997529983520508
    6. '3' → logprob: -10.997529983520508
    7. '```' → logprob: -11.122529983520508
    8. '   ' → logprob: -11.185029983520508
    9. '**' → logprob: -11.247529983520508
    10. '4' → logprob: -11.372529983520508

Token 311: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003907180391252041
    2. ' ' → logprob: -5.878907203674316
    3. '0' → logprob: -6.878907203674316
    4. '3' → logprob: -9.878907203674316
    5. '2' → logprob: -11.378907203674316
    6. '   ' → logprob: -12.128907203674316
    7. '4' → logprob: -13.253907203674316
    8. '```' → logprob: -14.253907203674316
    9. '  ' → logprob: -14.628907203674316
    10. ')' → logprob: -15.878907203674316

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009054962545633316
    2. '0' → logprob: -4.759055137634277
    3. ' ' → logprob: -7.759055137634277
    4. '2' → logprob: -12.384055137634277
    5. '3' → logprob: -13.009055137634277
    6. '   ' → logprob: -13.134055137634277
    7. '-' → logprob: -13.509055137634277
    8. '4' → logprob: -13.759055137634277
    9. '(' → logprob: -14.259055137634277
    10. '```' → logprob: -14.821555137634277

Token 313: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08554689586162567
    2. '
' → logprob: -2.8355469703674316
    3. '*' → logprob: -4.960546970367432
    4. '           ' → logprob: -4.960546970367432
    5. '```' → logprob: -5.960546970367432
    6. '        
' → logprob: -6.960546970367432
    7. 'need' → logprob: -6.960546970367432
    8. '   ' → logprob: -6.960546970367432
    9. ')' → logprob: -7.710546970367432
    10. 'time' → logprob: -7.835546970367432

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25581350922584534
    2. ' need' → logprob: -1.755813479423523
    3. 'need' → logprob: -4.0058135986328125
    4. '
' → logprob: -4.1308135986328125
    5. '   ' → logprob: -5.3808135986328125
    6. '```' → logprob: -5.5058135986328125
    7. ' time' → logprob: -6.2558135986328125
    8. '*' → logprob: -6.3808135986328125
    9. '           ' → logprob: -7.1308135986328125
    10. '        
' → logprob: -7.1308135986328125

Token 315: ' need' (ID: 1309)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' (adapté à ' need') → logprob: -0.01980937272310257
    2. 'time' → logprob: -4.519809246063232
    3. ' need' → logprob: -4.769809246063232
    4. ' time' → logprob: -9.01980972290039
    5. '   ' → logprob: -9.39480972290039
    6. '4' → logprob: -11.51980972290039
    7. 'if' → logprob: -12.14480972290039
    8. 'needed' → logprob: -12.26980972290039
    9. 'dist' → logprob: -12.76980972290039
    10. '
' → logprob: -12.76980972290039

Token 316: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -8.184812031686306e-05
    2. '_' → logprob: -9.500082015991211
    3. ' _' → logprob: -12.625082015991211
    4. '_t' → logprob: -13.250082015991211
    5. '_times' → logprob: -14.500082015991211
    6. '_d' → logprob: -14.875082015991211
    7. '_tim' → logprob: -15.000082015991211
    8. '=_' → logprob: -15.750082015991211
    9. '_line' → logprob: -16.62508201599121
    10. 'time' → logprob: -16.62508201599121

Token 317: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132624924182892
    2. '=' → logprob: -1.3132624626159668
    3. ' +=' → logprob: -14.313262939453125
    4. ' ' → logprob: -16.938262939453125
    5. ' =
' → logprob: -17.063262939453125
    6. '+=' → logprob: -17.063262939453125
    7. ' *=' → logprob: -17.188262939453125
    8. ')' → logprob: -18.313262939453125
    9. '   ' → logprob: -18.813262939453125
    10. '>' → logprob: -19.063262939453125

Token 318: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011763924732804298
    2. ' d' → logprob: -4.511764049530029
    3. '4' → logprob: -7.261764049530029
    4. ' ' → logprob: -12.261763572692871
    5. '   ' → logprob: -12.511763572692871
    6. 'speed' → logprob: -12.636763572692871
    7. '	d' → logprob: -14.636763572692871
    8. '  ' → logprob: -15.449263572692871
    9. '```' → logprob: -15.449263572692871
    10. '(d' → logprob: -15.636763572692871

Token 319: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759406089782715
    2. ' *' → logprob: -0.8259406089782715
    3. '**' → logprob: -15.07594108581543
    4. ' ' → logprob: -15.32594108581543
    5. '*=' → logprob: -15.32594108581543
    6. ' ' → logprob: -15.70094108581543
    7. ' *=' → logprob: -16.57594108581543
    8. ' **' → logprob: -17.07594108581543
    9. '*object' → logprob: -17.07594108581543
    10. '*(' → logprob: -17.20094108581543

Token 320: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.007611948065459728
    2. ' speed' → logprob: -4.8826117515563965
    3. '(speed' → logprob: -12.882612228393555
    4. '	speed' → logprob: -13.507612228393555
    5. ' ' → logprob: -14.757612228393555
    6. '4' → logprob: -14.882612228393555
    7. '   ' → logprob: -15.132612228393555
    8. 'peed' → logprob: -15.382612228393555
    9. '  ' → logprob: -15.757612228393555
    10. 'spe' → logprob: -16.132612228393555

Token 321: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36229580640792847
    2. '
' → logprob: -1.6122958660125732
    3. 'time' → logprob: -2.4872958660125732
    4. '   ' → logprob: -4.487295627593994
    5. ' time' → logprob: -4.987295627593994
    6. '           ' → logprob: -6.237295627593994
    7. '<|end|>' → logprob: -7.737295627593994
    8. '```' → logprob: -8.487296104431152
    9. ')
' → logprob: -8.612296104431152
    10. ')' → logprob: -9.487296104431152

Token 322: '       ' (ID: 309)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.1741853654384613
    2. '       ' → logprob: -2.299185276031494
    3. ' time' → logprob: -3.549185276031494
    4. '   ' → logprob: -3.924185276031494
    5. '
' → logprob: -4.549185276031494
    6. '           ' → logprob: -8.549185752868652
    7. '<|end|>' → logprob: -9.799185752868652
    8. '```' → logprob: -10.049185752868652
    9. '	time' → logprob: -10.424185752868652
    10. ')' → logprob: -10.924185752868652

Token 323: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.0028910634573549032
    2. 'if' → logprob: -5.8778910636901855
    3. ' time' → logprob: -10.002890586853027
    4. '   ' → logprob: -10.877890586853027
    5. '4' → logprob: -11.627890586853027
    6. ' if' → logprob: -12.127890586853027
    7. 'return' → logprob: -12.377890586853027
    8. 'ti' → logprob: -14.002890586853027
    9. '       ' → logprob: -14.877890586853027
    10. 't' → logprob: -15.127890586853027

Token 324: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03447503596544266
    2. '+=' → logprob: -3.409475088119507
    3. '+' → logprob: -7.159474849700928
    4. ' +' → logprob: -9.909475326538086
    5. '+='' → logprob: -14.534475326538086
    6. ']+=' → logprob: -14.784475326538086
    7. '+="' → logprob: -15.784475326538086
    8. '+=(' → logprob: -16.034475326538086
    9. ' ' → logprob: -16.284475326538086
    10. '<|end|>' → logprob: -16.409475326538086

Token 325: ' need' (ID: 1309)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.005234002135694027
    2. ' need' → logprob: -5.2552337646484375
    3. '4' → logprob: -15.630233764648438
    4. ' ' → logprob: -16.880233764648438
    5. 'needs' → logprob: -17.505233764648438
    6. '_need' → logprob: -18.005233764648438
    7. '```' → logprob: -18.630233764648438
    8. '   ' → logprob: -18.880233764648438
    9. '
' → logprob: -18.880233764648438
    10. '  ' → logprob: -19.255233764648438

Token 326: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.320199877838604e-07
    2. 'time' → logprob: -15.0
    3. 'Time' → logprob: -19.875
    4. '_need' → logprob: -20.25
    5. '_TIME' → logprob: -20.375
    6. ' time' → logprob: -20.75
    7. 'ed' → logprob: -21.125
    8. '_token' → logprob: -22.0
    9. '*time' → logprob: -22.0
    10. '"time' → logprob: -22.125

Token 327: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0347830057144165
    2. '
' → logprob: -1.2847830057144165
    3. '       ' → logprob: -1.4097830057144165
    4. '```' → logprob: -2.534782886505127
    5. '<|end|>' → logprob: -4.034782886505127
    6. '   ' → logprob: -4.159782886505127
    7. ' dist' → logprob: -5.659782886505127
    8. '        
' → logprob: -6.284782886505127
    9. '    
' → logprob: -6.534782886505127
    10. '\n' → logprob: -6.784782886505127

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7286876440048218
    2. 'dist' → logprob: -0.7286876440048218
    3. '```' → logprob: -4.603687763214111
    4. '   ' → logprob: -4.728687763214111
    5. ' dist' → logprob: -4.853687763214111
    6. '           ' → logprob: -5.103687763214111
    7. '
' → logprob: -7.603687763214111
    8. '        
' → logprob: -7.853687763214111
    9. '	dist' → logprob: -7.853687763214111
    10. '    
' → logprob: -8.228687286376953

Token 329: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.016041407361626625
    2. ' dist' → logprob: -4.141041278839111
    3. 'pos' → logprob: -13.26604175567627
    4. '```' → logprob: -13.26604175567627
    5. '	dist' → logprob: -13.51604175567627
    6. 'd' → logprob: -14.64104175567627
    7. '   ' → logprob: -14.89104175567627
    8. '       ' → logprob: -14.89104175567627
    9. '
' → logprob: -15.01604175567627
    10. '_dist' → logprob: -15.76604175567627

Token 330: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008620485663414001
    2. '+=' → logprob: -4.758620262145996
    3. '+' → logprob: -12.383620262145996
    4. ' +' → logprob: -13.633620262145996
    5. ' ' → logprob: -15.883620262145996
    6. ']+=' → logprob: -16.258621215820312
    7. ' ' → logprob: -16.383621215820312
    8. '+=(' → logprob: -16.383621215820312
    9. '+='' → logprob: -16.508621215820312
    10. '+="' → logprob: -16.758621215820312

Token 331: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006715370807796717
    2. ' d' → logprob: -5.006715297698975
    3. ' ' → logprob: -19.381715774536133
    4. '	d' → logprob: -19.756715774536133
    5. '<|end|>' → logprob: -19.756715774536133
    6. '0' → logprob: -20.631715774536133
    7. '```' → logprob: -21.631715774536133
    8. ')d' → logprob: -21.631715774536133
    9. '>d' → logprob: -21.631715774536133
    10. '   ' → logprob: -22.006715774536133

Token 332: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1917057037353516
    2. ' pos' → logprob: -1.3167057037353516
    3. '
' → logprob: -1.6917057037353516
    4. '       ' → logprob: -1.6917057037353516
    5. '   ' → logprob: -3.1917057037353516
    6. '           ' → logprob: -4.191705703735352
    7. '    
' → logprob: -6.066705703735352
    8. '        
' → logprob: -8.066705703735352
    9. '	pos' → logprob: -8.066705703735352
    10. '[pos' → logprob: -8.441705703735352

Token 333: '       ' (ID: 309)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3360106945037842
    2. ' pos' → logprob: -1.8360106945037842
    3. '       ' → logprob: -2.086010694503784
    4. '```' → logprob: -7.086010932922363
    5. '   ' → logprob: -7.461010932922363
    6. '           ' → logprob: -8.586010932922363
    7. '	pos' → logprob: -9.586010932922363
    8. '[pos' → logprob: -10.711010932922363
    9. '
' → logprob: -10.836010932922363
    10. '        
' → logprob: -11.586010932922363

Token 334: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.20141500234603882
    2. ' pos' → logprob: -1.7014150619506836
    3. '   ' → logprob: -14.951415061950684
    4. '```' → logprob: -15.076415061950684
    5. '	pos' → logprob: -15.201415061950684
    6. '0' → logprob: -15.201415061950684
    7. '.pos' → logprob: -16.701414108276367
    8. '       ' → logprob: -16.826414108276367
    9. '[pos' → logprob: -16.826414108276367
    10. 'car' → logprob: -16.826414108276367

Token 335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141343772411346
    2. '=' → logprob: -1.7014133930206299
    3. ' ' → logprob: -15.95141315460205
    4. ' -=' → logprob: -17.701414108276367
    5. '0' → logprob: -18.076414108276367
    6. ')' → logprob: -18.326414108276367
    7. ' =
' → logprob: -18.326414108276367
    8. ',' → logprob: -18.326414108276367
    9. ' +=' → logprob: -18.576414108276367
    10. ' ' → logprob: -18.951414108276367

Token 336: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01416350994259119
    2. ' ' → logprob: -4.264163494110107
    3. ' ' → logprob: -17.639163970947266
    4. '   ' → logprob: -18.014163970947266
    5. '```' → logprob: -18.201663970947266
    6. '۰' → logprob: -18.951663970947266
    7. '  ' → logprob: -19.076663970947266
    8. '=' → logprob: -19.639163970947266
    9. '`' → logprob: -20.139163970947266
    10. '<|end|>' → logprob: -20.201663970947266

Token 337: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.75001335144043
    4. '```' → logprob: -18.75001335144043
    5. '=' → logprob: -19.50001335144043
    6. '۰' → logprob: -19.56251335144043
    7. '`' → logprob: -20.00001335144043
    8. '00' → logprob: -20.18751335144043
    9. '  ' → logprob: -20.18751335144043
    10. ' ' → logprob: -20.81251335144043

Token 338: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01124823372811079
    2. '   ' → logprob: -4.5112481117248535
    3. 'return' → logprob: -9.261248588562012
    4. ' return' → logprob: -10.136248588562012
    5. '        
' → logprob: -10.511248588562012
    6. '           ' → logprob: -11.511248588562012
    7. '    
' → logprob: -11.886248588562012
    8. '```' → logprob: -11.886248588562012
    9. ',' → logprob: -12.386248588562012
    10. '      ' → logprob: -13.261248588562012

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008834764012135565
    2. '   ' → logprob: -7.12588357925415
    3. '           ' → logprob: -10.875883102416992
    4. ' carrying' → logprob: -11.000883102416992
    5. '        
' → logprob: -11.000883102416992
    6. 'return' → logprob: -12.250883102416992
    7. '```' → logprob: -12.250883102416992
    8. ' return' → logprob: -12.875883102416992
    9. '      ' → logprob: -13.250883102416992
    10. ' ' → logprob: -13.688383102416992

Token 340: ' carrying' (ID: 25328)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.036755457520484924
    2. '   ' → logprob: -3.6617555618286133
    3. '       ' → logprob: -4.661755561828613
    4. ' carrying' → logprob: -7.411755561828613
    5. 'carry' → logprob: -8.411755561828613
    6. 'return' → logprob: -9.911755561828613
    7. '           ' → logprob: -10.036755561828613
    8. 'c' → logprob: -10.786755561828613
    9. 'Car' → logprob: -13.036755561828613
    10. ' carried' → logprob: -13.786755561828613

Token 341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00597785459831357
    2. '=[]' → logprob: -5.630977630615234
    3. '.pop' → logprob: -6.755977630615234
    4. '.clear' → logprob: -6.755977630615234
    5. ' =' → logprob: -10.505977630615234
    6. '.remove' → logprob: -11.380977630615234
    7. '[:]' → logprob: -12.380977630615234
    8. '.' → logprob: -13.505977630615234
    9. '.=' → logprob: -14.130977630615234
    10. '=[]
' → logprob: -14.255977630615234

Token 342: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -8.77627644513268e-06
    2. ' []' → logprob: -12.375008583068848
    3. '[]
' → logprob: -13.125008583068848
    4. '[]}' → logprob: -14.125008583068848
    5. '[]>' → logprob: -14.125008583068848
    6. '=[]' → logprob: -14.375008583068848
    7. '[' → logprob: -15.625008583068848
    8. '[])' → logprob: -15.750008583068848
    9. '([]' → logprob: -16.250009536743164
    10. '[:]' → logprob: -16.875009536743164

Token 343: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02393696829676628
    2. 'return' → logprob: -3.7739369869232178
    3. '    
' → logprob: -8.398937225341797
    4. ' return' → logprob: -8.398937225341797
    5. '
' → logprob: -8.523937225341797
    6. '```' → logprob: -10.898937225341797
    7. '       ' → logprob: -11.648937225341797
    8. '	return' → logprob: -11.648937225341797
    9. '        
' → logprob: -13.023937225341797
    10. '  
' → logprob: -13.523937225341797

Token 344: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10144747048616409
    2. '   ' → logprob: -2.351447582244873
    3. ' return' → logprob: -6.726447582244873
    4. '```' → logprob: -10.351447105407715
    5. 'def' → logprob: -12.851447105407715
    6. '	return' → logprob: -13.101447105407715
    7. 'if' → logprob: -14.101447105407715
    8. 'True' → logprob: -14.101447105407715
    9. ':return' → logprob: -14.226447105407715
    10. '{return' → logprob: -14.226447105407715

Token 345: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0012342800619080663
    2. '   ' → logprob: -6.75123405456543
    3. ' return' → logprob: -9.75123405456543
    4. 'if' → logprob: -12.75123405456543
    5. '	return' → logprob: -13.37623405456543
    6. 'def' → logprob: -14.87623405456543
    7. '{return' → logprob: -15.37623405456543
    8. '```' → logprob: -15.75123405456543
    9. '    
' → logprob: -16.12623405456543
    10. 'True' → logprob: -16.37623405456543

Token 346: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.002497183158993721
    2. ' True' → logprob: -6.00249719619751
    3. '(True' → logprob: -10.752496719360352
    4. 'time' → logprob: -16.37749671936035
    5. 'Time' → logprob: -17.87749671936035
    6. 'False' → logprob: -18.75249671936035
    7. '   ' → logprob: -18.75249671936035
    8. ' time' → logprob: -19.25249671936035
    9. 'true' → logprob: -19.75249671936035
    10. '=True' → logprob: -20.25249671936035

Token 347: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003445216570980847
    2. '<|end|>' → logprob: -8.375344276428223
    3. ',true' → logprob: -10.125344276428223
    4. ',None' → logprob: -10.625344276428223
    5. ',
' → logprob: -10.750344276428223
    6. ' ,' → logprob: -11.500344276428223
    7. ',false' → logprob: -12.125344276428223
    8. ',,,' → logprob: -13.500344276428223
    9. ',nil' → logprob: -13.625344276428223
    10. ',int' → logprob: -13.750344276428223

Token 348: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6377430558204651
    2. 'time' → logprob: -0.7627430558204651
    3. ' dist' → logprob: -6.01274299621582
    4. ' time' → logprob: -6.26274299621582
    5. '(dist' → logprob: -8.38774299621582
    6. '(time' → logprob: -8.76274299621582
    7. '(' → logprob: -9.01274299621582
    8. ' (' → logprob: -9.38774299621582
    9. 'int' → logprob: -9.63774299621582
    10. '0' → logprob: -10.51274299621582

Token 349: '


' (ID: 2499)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5873972773551941
    2. '<|end|>' → logprob: -1.2123973369598389
    3. 'n' → logprob: -2.712397336959839
    4. '```' → logprob: -2.962397336959839
    5. ')' → logprob: -4.46239709854126
    6. '<|end|>' → logprob: -5.33739709854126
    7. '.' → logprob: -5.96239709854126
    8. 'def' → logprob: -6.08739709854126
    9. '[' → logprob: -6.33739709854126
    10. '
' → logprob: -6.46239709854126

Token 350: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.01996292732656002
    2. 'True' → logprob: -4.019962787628174
    3. ' len' → logprob: -6.394962787628174
    4. ' n' → logprob: -10.144963264465332
    5. ' input' → logprob: -10.394963264465332
    6. ' not' → logprob: -10.769963264465332
    7. ' pos' → logprob: -11.019963264465332
    8. ' ' → logprob: -11.394963264465332
    9. 'len' → logprob: -12.144963264465332
    10. '(True' → logprob: -12.269963264465332

Token 352: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021807955636177212
    2. '():' → logprob: -9.000218391418457
    3. ' :' → logprob: -9.750218391418457
    4. ':
' → logprob: -10.875218391418457
    5. ',' → logprob: -11.375218391418457
    6. '(' → logprob: -13.875218391418457
    7. ':**' → logprob: -14.000218391418457
    8. '):' → logprob: -14.250218391418457
    9. '{' → logprob: -14.375218391418457
    10. '.' → logprob: -14.500218391418457

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04446772113442421
    2. ' try' → logprob: -3.2944676876068115
    3. 'try' → logprob: -5.169467926025391
    4. ' line' → logprob: -7.294467926025391
    5. ' input' → logprob: -11.66946792602539
    6. 'line' → logprob: -12.16946792602539
    7. ' inp' → logprob: -12.41946792602539
    8. ' s' → logprob: -12.66946792602539
    9. 'n' → logprob: -12.79446792602539
    10. ' n' → logprob: -12.91946792602539

Token 354: ' n' (ID: 297)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -1.0323609113693237
    2. ' try' → logprob: -1.0323609113693237
    3. ' line' → logprob: -1.4073609113693237
    4. 'line' → logprob: -3.2823610305786133
    5. 'n' (adapté à ' n') → logprob: -5.907361030578613
    6. '   ' → logprob: -7.032361030578613
    7. ' n' → logprob: -7.282361030578613
    8. 's' → logprob: -7.782361030578613
    9. 't' → logprob: -8.157361030578613
    10. ' s' → logprob: -9.157361030578613

Token 355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38689061999320984
    2. '=' → logprob: -1.1368906497955322
    3. '=int' → logprob: -11.636890411376953
    4. ' ' → logprob: -12.011890411376953
    5. '=input' → logprob: -12.886890411376953
    6. ',' → logprob: -14.261890411376953
    7. ' =
' → logprob: -14.386890411376953
    8. 'input' → logprob: -15.511890411376953
    9. 'space' → logprob: -16.386890411376953
    10. '_' → logprob: -16.386890411376953

Token 356: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005250949412584305
    2. ' int' → logprob: -5.255250930786133
    3. 'input' → logprob: -11.005250930786133
    4. ' input' → logprob: -14.505250930786133
    5. ' ' → logprob: -19.005250930786133
    6. '=int' → logprob: -19.630250930786133
    7. '(int' → logprob: -19.755250930786133
    8. '[int' → logprob: -20.005250930786133
    9. '	int' → logprob: -20.505250930786133
    10. 'in' → logprob: -20.880250930786133

Token 357: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0003370118502061814
    2. '(' → logprob: -8.000336647033691
    3. 'input' → logprob: -14.000336647033691
    4. '()' → logprob: -14.125336647033691
    5. '=input' → logprob: -17.250337600708008
    6. '(
' → logprob: -17.500337600708008
    7. ' input' → logprob: -18.500337600708008
    8. ' (' → logprob: -18.750337600708008
    9. '(

' → logprob: -19.625337600708008
    10. '(raw' → logprob: -20.500337600708008

Token 358: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -9.424530435353518e-05
    2. '()' → logprob: -9.500094413757324
    3. '().' → logprob: -11.000094413757324
    4. '())
' → logprob: -13.250094413757324
    5. '(' → logprob: -15.000094413757324
    6. ' ())' → logprob: -15.000094413757324
    7. '())

' → logprob: -16.500093460083008
    8. '()>' → logprob: -16.625093460083008
    9. '()))' → logprob: -17.750093460083008
    10. '()
' → logprob: -17.750093460083008

Token 359: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0022008095402270555
    2. 'if' → logprob: -6.877200603485107
    3. '<|end|>' → logprob: -6.877200603485107
    4. '   ' → logprob: -9.127201080322266
    5. ' ' → logprob: -11.752201080322266
    6. '	if' → logprob: -11.877201080322266
    7. '<|end|>' → logprob: -12.377201080322266
    8. ' If' → logprob: -13.502201080322266
    9. '    ' → logprob: -13.502201080322266
    10. ')' → logprob: -14.127201080322266

Token 360: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25192990899086
    2. ' if' → logprob: -1.5019298791885376
    3. 'i' → logprob: -14.626930236816406
    4. '<|end|>' → logprob: -16.001930236816406
    5. '   ' → logprob: -16.251930236816406
    6. 'If' → logprob: -17.001930236816406
    7. '	if' → logprob: -17.126930236816406
    8. 'break' → logprob: -17.876930236816406
    9. ' i' → logprob: -17.876930236816406
    10. ';if' → logprob: -18.001930236816406

Token 361: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04859168455004692
    2. 'n' → logprob: -3.0485916137695312
    3. ' not' → logprob: -12.423591613769531
    4. '	n' → logprob: -16.29859161376953
    5. '0' → logprob: -16.92359161376953
    6. ' ' → logprob: -17.04859161376953
    7. ' ' → logprob: -17.79859161376953
    8. '_n' → logprob: -18.29859161376953
    9. 'not' → logprob: -18.42359161376953
    10. ' н' → logprob: -19.29859161376953

Token 362: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2519921064376831
    2. ' ==' → logprob: -1.501992106437683
    3. '=' → logprob: -9.751992225646973
    4. '<=' → logprob: -12.876992225646973
    5. ' =' → logprob: -14.501992225646973
    6. '===' → logprob: -15.001992225646973
    7. ')==' → logprob: -15.126992225646973
    8. '==
' → logprob: -15.251992225646973
    9. ' ' → logprob: -15.376992225646973
    10. ' <=' → logprob: -15.501992225646973

Token 363: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -19.250709533691406
    4. ' ' → logprob: -19.375709533691406
    5. '  ' → logprob: -19.750709533691406
    6. '=' → logprob: -20.750709533691406
    7. '-' → logprob: -20.875709533691406
    8. '	' → logprob: -21.375709533691406
    9. ' -' → logprob: -21.375709533691406
    10. '۰' → logprob: -21.750709533691406

Token 364: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.625
    3. ' ' → logprob: -16.625
    4. '```' → logprob: -23.375
    5. ' -' → logprob: -23.625
    6. '=' → logprob: -23.75
    7. '۰' → logprob: -24.125
    8. '00' → logprob: -24.375
    9. '   ' → logprob: -24.875
    10. ')' → logprob: -25.0

Token 365: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026338964700698853
    2. ':
' → logprob: -3.651339054107666
    3. '   ' → logprob: -10.401338577270508
    4. ' :' → logprob: -12.401338577270508
    5. '	break' → logprob: -13.901338577270508
    6. 'break' → logprob: -14.026338577270508
    7. ' break' → logprob: -14.651338577270508
    8. ' :
' → logprob: -14.776338577270508
    9. ':return' → logprob: -14.901338577270508
    10. '.' → logprob: -15.651338577270508

Token 366: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012891247868537903
    2. '       ' → logprob: -4.3878912925720215
    3. ' break' → logprob: -8.387890815734863
    4. '	break' → logprob: -9.387890815734863
    5. '   ' → logprob: -10.012890815734863
    6. 'break' → logprob: -11.512890815734863
    7. ' ' → logprob: -12.637890815734863
    8. '     ' → logprob: -12.887890815734863
    9. '    ' → logprob: -13.012890815734863
    10. '	' → logprob: -13.012890815734863

Token 367: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.25346219539642334
    2. ' break' → logprob: -1.5034621953964233
    3. '	break' → logprob: -7.128462314605713
    4. '   ' → logprob: -7.253462314605713
    5. '
' → logprob: -11.253461837768555
    6. '       ' → logprob: -12.128461837768555
    7. '    
' → logprob: -13.628461837768555
    8. '_break' → logprob: -13.753461837768555
    9. '```' → logprob: -14.878461837768555
    10. 'b' → logprob: -14.878461837768555

Token 368: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06353060901165009
    2. ' balloons' → logprob: -3.438530683517456
    3. 'ball' → logprob: -4.188530445098877
    4. '    
' → logprob: -4.813530445098877
    5. 'b' → logprob: -5.563530445098877
    6. 'n' → logprob: -6.938530445098877
    7. '	b' → logprob: -8.063530921936035
    8. 'balls' → logprob: -8.063530921936035
    9. '```' → logprob: -8.188530921936035
    10. 'bal' → logprob: -9.563530921936035

Token 369: '   ' (ID: 271)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.038820862770080566
    2. ' balloons' → logprob: -3.663820743560791
    3. 'b' → logprob: -5.288820743560791
    4. '   ' → logprob: -5.413820743560791
    5. 'balls' → logprob: -6.663820743560791
    6. '```' → logprob: -7.038820743560791
    7. '	b' → logprob: -8.66382122039795
    8. 'bal' → logprob: -8.78882122039795
    9. '    
' → logprob: -9.16382122039795
    10. '<|end|>' → logprob: -9.53882122039795

Token 370: ' balloons' (ID: 114791)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.00780582707375288
    2. '   ' → logprob: -5.257805824279785
    3. ' balloons' → logprob: -6.132805824279785
    4. 'b' → logprob: -9.132805824279785
    5. 'bal' → logprob: -9.382805824279785
    6. 'balls' → logprob: -9.507805824279785
    7. '```' → logprob: -9.507805824279785
    8. '	b' → logprob: -11.382805824279785
    9. '  ' → logprob: -11.632805824279785
    10. '    
' → logprob: -11.882805824279785

Token 371: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164687134325504
    2. '=' → logprob: -4.264164924621582
    3. ')' → logprob: -14.639164924621582
    4. '   ' → logprob: -15.389164924621582
    5. ',' → logprob: -15.764164924621582
    6. ' ' → logprob: -16.889163970947266
    7. '	' → logprob: -16.889163970947266
    8. '=[]' → logprob: -16.889163970947266
    9. '.append' → logprob: -17.264163970947266
    10. '[]' → logprob: -17.514163970947266

Token 372: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06308337301015854
    2. '[]' → logprob: -2.8130834102630615
    3. '[]
' → logprob: -7.563083171844482
    4. '[int' → logprob: -8.31308364868164
    5. '[array' → logprob: -8.81308364868164
    6. '[input' → logprob: -9.81308364868164
    7. '[list' → logprob: -10.93808364868164
    8. '[class' → logprob: -11.31308364868164
    9. '[str' → logprob: -11.43808364868164
    10. '[data' → logprob: -11.93808364868164

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05404892563819885
    2. ' for' → logprob: -3.429049015045166
    3. 'for' → logprob: -3.929049015045166
    4. '	for' → logprob: -7.804049015045166
    5. '<|end|>' → logprob: -9.929048538208008
    6. '    
' → logprob: -10.179048538208008
    7. '
' → logprob: -10.304048538208008
    8. '	
' → logprob: -13.429048538208008
    9. '[' → logprob: -13.804048538208008
    10. '<|end|>' → logprob: -14.554048538208008

Token 374: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00681364256888628
    2. ' for' → logprob: -5.0068135261535645
    3. '   ' → logprob: -9.256814002990723
    4. '	for' → logprob: -13.006814002990723
    5. '
' → logprob: -14.256814002990723
    6. '    
' → logprob: -17.131813049316406
    7. ' 
' → logprob: -20.256813049316406
    8. ' ' → logprob: -20.506813049316406
    9. '```' → logprob: -20.756813049316406
    10. '  ' → logprob: -21.381813049316406

Token 375: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002477677771821618
    2. ' _' → logprob: -6.002477645874023
    3. ' i' → logprob: -13.752477645874023
    4. '_i' → logprob: -13.877477645874023
    5. 'i' → logprob: -17.127477645874023
    6. '_=' → logprob: -18.752477645874023
    7. '_
' → logprob: -19.752477645874023
    8. ' ' → logprob: -20.252477645874023
    9. ' ' → logprob: -21.252477645874023
    10. '_
' → logprob: -21.752477645874023

Token 376: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020653069019317627
    2. 'in' → logprob: -3.895653009414673
    3. ' ' → logprob: -9.645652770996094
    4. 'range' → logprob: -10.645652770996094
    5. 'i' → logprob: -11.270652770996094
    6. '  ' → logprob: -12.645652770996094
    7. '_' → logprob: -13.145652770996094
    8. ' i' → logprob: -13.270652770996094
    9. ' _' → logprob: -13.645652770996094
    10. 'n' → logprob: -14.270652770996094

Token 377: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.704273118884885e-07
    2. ' range' → logprob: -14.250000953674316
    3. '(range' → logprob: -20.375
    4. '	range' → logprob: -21.375
    5. 'rang' → logprob: -21.375
    6. 'r' → logprob: -21.5
    7. 'ran' → logprob: -22.125
    8. 'in' → logprob: -23.125
    9. 'n' → logprob: -23.375
    10. 'input' → logprob: -23.5

Token 378: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005264613428153098
    2. '(' → logprob: -7.875526428222656
    3. 'n' → logprob: -8.875526428222656
    4. ' (' → logprob: -12.125526428222656
    5. ' n' → logprob: -14.625526428222656
    6. '(
' → logprob: -14.875526428222656
    7. '(int' → logprob: -15.750526428222656
    8. '(range' → logprob: -15.875526428222656
    9. 'range' → logprob: -17.125526428222656
    10. '	n' → logprob: -19.000526428222656

Token 379: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.523522138595581
    2. '):' → logprob: -0.898522138595581
    3. ':' → logprob: -8.52352237701416
    4. '   ' → logprob: -9.77352237701416
    5. '):
' → logprob: -10.02352237701416
    6. ':
' → logprob: -10.27352237701416
    7. '():
' → logprob: -10.39852237701416
    8. ')' → logprob: -11.14852237701416
    9. ',' → logprob: -11.64852237701416
    10. ' ):
' → logprob: -13.02352237701416

Token 380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3137205243110657
    2. '   ' → logprob: -1.313720464706421
    3. '	   ' → logprob: -9.063720703125
    4. '    ' → logprob: -9.938720703125
    5. 'b' → logprob: -10.563720703125
    6. 'tokens' → logprob: -10.688720703125
    7. ' balloons' → logprob: -10.688720703125
    8. ' ' → logprob: -10.813720703125
    9. '```' → logprob: -10.938720703125
    10. ',' → logprob: -11.063720703125

Token 381: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.35284414887428284
    2. 'p' (adapté à ' p') → logprob: -1.3528441190719604
    3. 'pi' → logprob: -3.85284423828125
    4. ' pi' → logprob: -4.10284423828125
    5. ' x' → logprob: -7.35284423828125
    6. 'x' → logprob: -7.97784423828125
    7. '   ' → logprob: -10.85284423828125
    8. ' pos' → logprob: -10.97784423828125
    9. ' position' → logprob: -11.22784423828125
    10. 'pos' → logprob: -11.60284423828125

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005361821502447128
    2. 'i' → logprob: -6.005362033843994
    3. ',t' → logprob: -6.630362033843994
    4. ' ,' → logprob: -6.755362033843994
    5. ',i' → logprob: -8.505361557006836
    6. ' t' → logprob: -9.255361557006836
    7. 't' → logprob: -9.880361557006836
    8. ' i' → logprob: -10.630361557006836
    9. ',time' → logprob: -11.755361557006836
    10. ',int' → logprob: -12.755361557006836

Token 383: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.011051944456994534
    2. ' t' → logprob: -4.511052131652832
    3. ' ' → logprob: -14.011052131652832
    4. 's' → logprob: -14.011052131652832
    5. 'T' → logprob: -14.136052131652832
    6. '   ' → logprob: -14.511052131652832
    7. 'ti' → logprob: -15.011052131652832
    8. '	t' → logprob: -15.511052131652832
    9. '  ' → logprob: -16.136051177978516
    10. 'c' → logprob: -16.511051177978516

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023248974233865738
    2. ' =' → logprob: -3.7732489109039307
    3. '=input' → logprob: -13.398248672485352
    4. 'ime' → logprob: -14.148248672485352
    5. ')' → logprob: -14.898248672485352
    6. '=int' → logprob: -15.023248672485352
    7. ')=' → logprob: -15.523248672485352
    8. ',' → logprob: -15.773248672485352
    9. 'i' → logprob: -16.14824867248535
    10. '_=' → logprob: -17.14824867248535

Token 385: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.014163628220558167
    2. ' map' → logprob: -4.264163494110107
    3. 'input' → logprob: -16.264163970947266
    4. 'list' → logprob: -17.639163970947266
    5. '	map' → logprob: -18.389163970947266
    6. '(map' → logprob: -18.639163970947266
    7. 'm' → logprob: -20.264163970947266
    8. '[' → logprob: -20.514163970947266
    9. '.map' → logprob: -21.014163970947266
    10. '_map' → logprob: -21.139163970947266

Token 386: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010473522706888616
    2. '(' → logprob: -9.375104904174805
    3. '(input' → logprob: -11.375104904174805
    4. 'int' → logprob: -12.125104904174805
    5. '(str' → logprob: -14.125104904174805
    6. '<int' → logprob: -14.125104904174805
    7. '=int' → logprob: -14.500104904174805
    8. '[int' → logprob: -14.750104904174805
    9. ' int' → logprob: -15.000104904174805
    10. '(
' → logprob: -16.000104904174805

Token 387: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.0266187191009521
    2. 'input' → logprob: -1.1516187191009521
    3. ',input' → logprob: -1.1516187191009521
    4. ',' → logprob: -5.151618957519531
    5. ' input' → logprob: -5.776618957519531
    6. '=input' → logprob: -8.151618957519531
    7. ')' → logprob: -8.651618957519531
    8. '(' → logprob: -9.151618957519531
    9. '   ' → logprob: -10.526618957519531
    10. '	input' → logprob: -11.151618957519531

Token 388: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009114635176956654
    2. ' input' → logprob: -7.000911235809326
    3. '=input' → logprob: -22.750911712646484
    4. '_input' → logprob: -22.875911712646484
    5. '(input' → logprob: -23.500911712646484
    6. ',input' → logprob: -24.000911712646484
    7. '	input' → logprob: -24.250911712646484
    8. 'Input' → logprob: -24.625911712646484
    9. '<input' → logprob: -24.875911712646484
    10. ' ' → logprob: -25.750911712646484

Token 389: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -15.125
    3. ' ().' → logprob: -18.375
    4. '(' → logprob: -19.75
    5. '.split' → logprob: -21.375
    6. '()
' → logprob: -21.375
    7. '   ' → logprob: -23.25
    8. 'split' → logprob: -23.375
    9. '("").' → logprob: -24.0
    10. '.' → logprob: -24.125

Token 390: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.639096970204264e-05
    2. 'strip' → logprob: -9.250096321105957
    3. 'rstrip' → logprob: -16.000097274780273
    4. ' split' → logprob: -16.125097274780273
    5. '(split' → logprob: -17.250097274780273
    6. 'spl' → logprob: -18.250097274780273
    7. '_split' → logprob: -20.250097274780273
    8. '.split' → logprob: -20.500097274780273
    9. 'plit' → logprob: -21.125097274780273
    10. '().' → logprob: -21.375097274780273

Token 391: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004278784617781639
    2. ')' → logprob: -5.504278659820557
    3. '()' → logprob: -8.879279136657715
    4. '())
' → logprob: -9.754279136657715
    5. '(' → logprob: -13.504279136657715
    6. '()))' → logprob: -14.379279136657715
    7. '())
' → logprob: -15.129279136657715
    8. ' ())' → logprob: -15.129279136657715
    9. '))' → logprob: -15.254279136657715
    10. '('' → logprob: -16.2542781829834

Token 392: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004742803052067757
    2. 'ball' → logprob: -6.254742622375488
    3. '       ' → logprob: -6.754742622375488
    4. '<|end|>' → logprob: -7.504742622375488
    5. ' balloons' → logprob: -7.629742622375488
    6. '
' → logprob: -8.879742622375488
    7. '	b' → logprob: -8.879742622375488
    8. '    
' → logprob: -9.504742622375488
    9. '(ball' → logprob: -9.879742622375488
    10. 'b' → logprob: -10.504742622375488

Token 393: ' balloons' (ID: 114791)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.004252200480550528
    2. '   ' → logprob: -5.8792524337768555
    3. ' balloons' → logprob: -6.6292524337768555
    4. ' ' → logprob: -10.879252433776855
    5. 'balls' → logprob: -10.879252433776855
    6. 'bal' → logprob: -10.879252433776855
    7. 'b' → logprob: -10.879252433776855
    8. '	b' → logprob: -11.379252433776855
    9. '       ' → logprob: -12.004252433776855
    10. '    
' → logprob: -12.004252433776855

Token 394: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.6776029699249193e-05
    2. '.' → logprob: -10.62502670288086
    3. ' .' → logprob: -13.75002670288086
    4. ').' → logprob: -15.00002670288086
    5. 'append' → logprob: -15.00002670288086
    6. '.Append' → logprob: -15.25002670288086
    7. '.app' → logprob: -15.37502670288086
    8. '.setdefault' → logprob: -16.75002670288086
    9. '.py' → logprob: -17.12502670288086
    10. '.extend' → logprob: -17.25002670288086

Token 395: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -4.5491004129871726e-05
    2. '(' → logprob: -10.000045776367188
    3. '(p' → logprob: -19.875045776367188
    4. '(
' → logprob: -20.625045776367188
    5. ' ((' → logprob: -21.125045776367188
    6. '((_' → logprob: -22.750045776367188
    7. '(('' → logprob: -22.750045776367188
    8. '([' → logprob: -23.250045776367188
    9. '[(' → logprob: -23.375045776367188
    10. '(((' → logprob: -23.375045776367188

Token 396: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.935296834039036e-06
    2. ' p' → logprob: -12.75000286102295
    3. '   ' → logprob: -20.750003814697266
    4. ')p' → logprob: -21.750003814697266
    5. '	p' → logprob: -22.250003814697266
    6. 'int' → logprob: -22.500003814697266
    7. '(p' → logprob: -23.125003814697266
    8. '_p' → logprob: -23.250003814697266
    9. '  ' → logprob: -23.375003814697266
    10. ' ' → logprob: -23.375003814697266

Token 397: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001507405104348436
    2. ',t' → logprob: -9.125150680541992
    3. ' ,' → logprob: -10.125150680541992
    4. ',p' → logprob: -13.375150680541992
    5. ',
' → logprob: -15.500150680541992
    6. 'p' → logprob: -18.875150680541992
    7. '‌,' → logprob: -19.500150680541992
    8. ' ' → logprob: -19.500150680541992
    9. ')' → logprob: -19.625150680541992
    10. ',tp' → logprob: -19.750150680541992

Token 398: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.652451464906335e-05
    2. '))
' → logprob: -11.250016212463379
    3. ')' → logprob: -12.625016212463379
    4. ' ))' → logprob: -16.125017166137695
    5. ')))' → logprob: -17.125017166137695
    6. '));' → logprob: -17.625017166137695
    7. '))

' → logprob: -17.875017166137695
    8. '()))' → logprob: -19.000017166137695
    9. ''))' → logprob: -19.375017166137695
    10. ')
' → logprob: -19.500017166137695

Token 399: '   ' (ID: 271)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.522630512714386
    2. 'result' → logprob: -1.0226304531097412
    3. '   ' → logprob: -3.272630453109741
    4. ' can' → logprob: -5.89763069152832
    5. 'res' → logprob: -6.02263069152832
    6. ' res' → logprob: -6.39763069152832
    7. ' success' → logprob: -7.14763069152832
    8. 'success' → logprob: -7.39763069152832
    9. 'can' → logprob: -7.89763069152832
    10. '```' → logprob: -7.89763069152832

Token 400: ' can' (ID: 665)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5179217457771301
    2. 'res' → logprob: -1.1429216861724854
    3. 'can' (adapté à ' can') → logprob: -2.8929216861724854
    4. 'ok' → logprob: -4.6429219245910645
    5. ' result' → logprob: -5.0179219245910645
    6. 'r' → logprob: -5.6429219245910645
    7. 'success' → logprob: -5.8929219245910645
    8. ' res' → logprob: -6.0179219245910645
    9. 'capture' → logprob: -6.5179219245910645
    10. ' can' → logprob: -7.2679219245910645

Token 401: '_capture' (ID: 139174)
  Prédit: '_capture'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capture' → logprob: -0.0001863750658230856
    2. 'capture' → logprob: -8.8751859664917
    3. '_can' → logprob: -11.1251859664917
    4. '_' → logprob: -11.2501859664917
    5. '_cap' → logprob: -11.8751859664917
    6. '_result' → logprob: -12.1251859664917
    7. 'capt' → logprob: -13.0001859664917
    8. '_c' → logprob: -13.5001859664917
    9. 'can' → logprob: -14.3751859664917
    10. '_CAPTURE' → logprob: -14.6251859664917

Token 402: ',' (ID: 11)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_all' → logprob: -8.537868779967539e-06
    2. 'all' → logprob: -11.750008583068848
    3. ' =' → logprob: -15.500008583068848
    4. '_al' → logprob: -15.750008583068848
    5. '_' → logprob: -16.50000762939453
    6. '=' → logprob: -16.50000762939453
    7. 'All' → logprob: -16.87500762939453
    8. '_result' → logprob: -17.37500762939453
    9. '_output' → logprob: -17.87500762939453
    10. '=_' → logprob: -18.12500762939453

Token 403: ' val' (ID: 1459)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.39732396602630615
    2. ' dist' → logprob: -1.1473239660263062
    3. 'distance' → logprob: -5.272324085235596
    4. ' distance' → logprob: -6.397324085235596
    5. 'res' → logprob: -7.022324085235596
    6. 'd' → logprob: -7.397324085235596
    7. 'result' → logprob: -7.397324085235596
    8. ' result' → logprob: -7.522324085235596
    9. ' res' → logprob: -7.647324085235596
    10. ' d' → logprob: -8.897323608398438

Token 404: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6804024577140808
    2. '=' → logprob: -1.1804025173187256
    3. 'ue' → logprob: -1.6804025173187256
    4. 'uer' → logprob: -10.180402755737305
    5. 'ues' → logprob: -10.305402755737305
    6. 'id' → logprob: -10.805402755737305
    7. '   ' → logprob: -11.555402755737305
    8. ',' → logprob: -11.805402755737305
    9. 'u' → logprob: -12.305402755737305
    10. '=True' → logprob: -12.430402755737305

Token 405: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.00861456897109747
    2. ' can' → logprob: -4.758614540100098
    3. '	can' → logprob: -17.008615493774414
    4. '_can' → logprob: -18.008615493774414
    5. '(can' → logprob: -18.508615493774414
    6. '   ' → logprob: -19.883615493774414
    7. ' ' → logprob: -20.133615493774414
    8. '.can' → logprob: -21.008615493774414
    9. 'Can' → logprob: -21.508615493774414
    10. 'c' → logprob: -22.008615493774414

Token 406: '_capture' (ID: 139174)
  Prédit: '_capture'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capture' → logprob: -0.0004324573092162609
    2. 'capture' → logprob: -7.75043249130249
    3. '_can' → logprob: -14.625432014465332
    4. 'can' → logprob: -14.875432014465332
    5. '_CAPTURE' → logprob: -15.125432014465332
    6. 'capt' → logprob: -15.125432014465332
    7. 'Capture' → logprob: -15.375432014465332
    8. '_c' → logprob: -17.00043296813965
    9. '_cap' → logprob: -17.62543296813965
    10. 'captures' → logprob: -17.62543296813965

Token 407: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -6.2729995988775045e-06
    2. 'all' → logprob: -12.000006675720215
    3. 'All' → logprob: -18.8750057220459
    4. '_ALL' → logprob: -20.0000057220459
    5. 'n' → logprob: -20.8750057220459
    6. 's' → logprob: -21.0000057220459
    7. 'al' → logprob: -21.3750057220459
    8. ' all' → logprob: -21.8750057220459
    9. '-all' → logprob: -22.0000057220459
    10. '```' → logprob: -22.1250057220459

Token 408: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.2524021157296374e-05
    2. '(len' → logprob: -10.000052452087402
    3. '(' → logprob: -12.500052452087402
    4. ' (' → logprob: -12.625052452087402
    5. '(N' → logprob: -18.62505340576172
    6. '(num' → logprob: -18.75005340576172
    7. '(
' → logprob: -18.75005340576172
    8. '(int' → logprob: -19.37505340576172
    9. '```' → logprob: -20.00005340576172
    10. '((' → logprob: -20.37505340576172

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ',b' → logprob: -13.37500286102295
    3. ' ,' → logprob: -14.12500286102295
    4. ',
' → logprob: -17.500001907348633
    5. '(ball' → logprob: -17.750001907348633
    6. '‌,' → logprob: -18.375001907348633
    7. '(' → logprob: -18.750001907348633
    8. '```' → logprob: -18.750001907348633
    9. '`,' → logprob: -19.000001907348633
    10. '(b' → logprob: -19.375001907348633

Token 410: ' balloons' (ID: 114791)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.001047339290380478
    2. ' balloons' → logprob: -6.876047134399414
    3. 'b' → logprob: -11.501047134399414
    4. 'bal' → logprob: -12.751047134399414
    5. 'balls' → logprob: -14.251047134399414
    6. '(ball' → logprob: -15.376047134399414
    7. '(b' → logprob: -16.126047134399414
    8. 'ban' → logprob: -16.376047134399414
    9. '```' → logprob: -16.626047134399414
    10. ')' → logprob: -16.626047134399414

Token 411: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001505578518845141
    2. ')
' → logprob: -6.501505374908447
    3. '   ' → logprob: -13.501505851745605
    4. ')
' → logprob: -14.251505851745605
    5. ')

' → logprob: -15.001505851745605
    6. '[' → logprob: -15.126505851745605
    7. ' )' → logprob: -15.251505851745605
    8. '<|end|>' → logprob: -15.876505851745605
    9. '),' → logprob: -16.87650489807129
    10. ')**' → logprob: -17.00150489807129

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07676674425601959
    2. 'print' → logprob: -3.2017667293548584
    3. ' print' → logprob: -4.4517669677734375
    4. '<|end|>' → logprob: -4.9517669677734375
    5. '
' → logprob: -5.0767669677734375
    6. ' if' → logprob: -5.2017669677734375
    7. '```' → logprob: -6.7017669677734375
    8. '    
' → logprob: -7.3267669677734375
    9. 'if' → logprob: -7.7017669677734375
    10. '	print' → logprob: -8.826766967773438

Token 413: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2051229178905487
    2. 'if' (adapté à ' if') → logprob: -1.705122947692871
    3. ' if' → logprob: -5.955122947692871
    4. ' print' → logprob: -7.330122947692871
    5. '   ' → logprob: -7.705122947692871
    6. '
' → logprob: -13.080122947692871
    7. '    
' → logprob: -13.955122947692871
    8. '```' → logprob: -14.955122947692871
    9. ' 
' → logprob: -15.080122947692871
    10. 'pr' → logprob: -15.330122947692871

Token 414: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.018168672919273376
    2. 'can' → logprob: -4.0181684494018555
    3. ' not' → logprob: -11.018168449401855
    4. '	can' → logprob: -13.768168449401855
    5. ' ' → logprob: -14.268168449401855
    6. ' ' → logprob: -14.393168449401855
    7. '(can' → logprob: -16.768169403076172
    8. 'not' → logprob: -17.518169403076172
    9. '  ' → logprob: -18.268169403076172
    10. '_can' → logprob: -18.268169403076172

Token 415: '_capture' (ID: 139174)
  Prédit: '_capture'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capture' → logprob: -0.00022725824965164065
    2. 'capture' → logprob: -8.500226974487305
    3. '_c' → logprob: -11.375226974487305
    4. 'capt' → logprob: -12.625226974487305
    5. '_CAPTURE' → logprob: -12.625226974487305
    6. 'Capture' → logprob: -13.125226974487305
    7. 'not' → logprob: -13.625226974487305
    8. ' capture' → logprob: -14.375226974487305
    9. '_cap' → logprob: -14.500226974487305
    10. 'apture' → logprob: -15.000226974487305

Token 416: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012518009170889854
    2. ':
' → logprob: -4.387517929077148
    3. '==' → logprob: -12.387517929077148
    4. '   ' → logprob: -13.137517929077148
    5. ' ==' → logprob: -14.137517929077148
    6. '=' → logprob: -14.887517929077148
    7. ':

' → logprob: -15.512517929077148
    8. ' and' → logprob: -15.512517929077148
    9. ':
' → logprob: -15.762517929077148
    10. '       ' → logprob: -16.13751792907715

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03818103298544884
    2. '   ' → logprob: -3.2881810665130615
    3. ' print' → logprob: -9.16318130493164
    4. 'print' → logprob: -11.16318130493164
    5. '
' → logprob: -11.41318130493164
    6. '    
' → logprob: -12.53818130493164
    7. '```' → logprob: -12.91318130493164
    8. '	print' → logprob: -14.03818130493164
    9. '	   ' → logprob: -14.28818130493164
    10. '        
' → logprob: -14.41318130493164

Token 418: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005403557792305946
    2. '   ' → logprob: -5.255403518676758
    3. ' print' → logprob: -9.005403518676758
    4. '       ' → logprob: -10.005403518676758
    5. '```' → logprob: -13.755403518676758
    6. '	print' → logprob: -14.630403518676758
    7. '``' → logprob: -15.880403518676758
    8. '
' → logprob: -16.880403518676758
    9. '    
' → logprob: -17.380403518676758
    10. 'printf' → logprob: -17.880403518676758

Token 419: '("' (ID: 568)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.001103779417462647
    2. '("' → logprob: -8.126103401184082
    3. '(f' → logprob: -8.126103401184082
    4. '(' → logprob: -8.251103401184082
    5. '(dist' → logprob: -8.626103401184082
    6. 'val' → logprob: -9.751103401184082
    7. ' val' → logprob: -11.751103401184082
    8. '('' → logprob: -13.626103401184082
    9. 'dist' → logprob: -13.751103401184082
    10. ' (' → logprob: -14.001103401184082

Token 420: 'OK' (ID: 5175)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.1831057369709015
    2. '"' → logprob: -3.058105707168579
    3. 'Distance' → logprob: -3.808105707168579
    4. 'Minimum' → logprob: -3.933105707168579
    5. 'Minimal' → logprob: -4.058105945587158
    6. 'minimum' → logprob: -4.808105945587158
    7. 'Total' → logprob: -4.933105945587158
    8. 'minimal' → logprob: -4.933105945587158
    9. 'YES' → logprob: -5.183105945587158
    10. 'Possible' → logprob: -5.308105945587158

Token 421: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0011672453256323934
    2. '")' → logprob: -7.751167297363281
    3. ' ",' → logprob: -7.876167297363281
    4. '"' → logprob: -8.126167297363281
    5. ',",' → logprob: -10.626167297363281
    6. ',' → logprob: -11.251167297363281
    7. ' {}".' → logprob: -11.876167297363281
    8. '",{' → logprob: -12.376167297363281
    9. '",(' → logprob: -13.001167297363281
    10. '","' → logprob: -13.251167297363281

Token 422: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5759396553039551
    2. ' val' → logprob: -0.8259396553039551
    3. 'dist' → logprob: -16.200939178466797
    4. '(val' → logprob: -16.450939178466797
    5. ' dist' → logprob: -16.825939178466797
    6. '	val' → logprob: -17.325939178466797
    7. ',val' → logprob: -17.950939178466797
    8. '[val' → logprob: -18.075939178466797
    9. 'int' → logprob: -18.325939178466797
    10. '"' → logprob: -19.325939178466797

Token 423: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018155092373490334
    2. ')
' → logprob: -4.018155097961426
    3. '   ' → logprob: -13.143155097961426
    4. ' )' → logprob: -13.393155097961426
    5. '")' → logprob: -13.643155097961426
    6. ')

' → logprob: -15.893155097961426
    7. ')
' → logprob: -16.01815414428711
    8. ' )
' → logprob: -16.76815414428711
    9. 'else' → logprob: -16.76815414428711
    10. '),' → logprob: -17.14315414428711

Token 424: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006491714157164097
    2. 'else' → logprob: -7.5006489753723145
    3. ' else' → logprob: -9.250649452209473
    4. '	else' → logprob: -16.000648498535156
    5. '```' → logprob: -16.750648498535156
    6. '<|end|>' → logprob: -16.875648498535156
    7. '       ' → logprob: -17.000648498535156
    8. ',' → logprob: -18.375648498535156
    9. ' ' → logprob: -18.500648498535156
    10. '  ' → logprob: -18.625648498535156

Token 425: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.12125951051712036
    2. ' else' → logprob: -2.3712594509124756
    3. '   ' → logprob: -3.8712594509124756
    4. '	else' → logprob: -14.371259689331055
    5. 'elif' → logprob: -16.121259689331055
    6. '    
' → logprob: -17.496259689331055
    7. ' ' → logprob: -17.871259689331055
    8. '  ' → logprob: -17.996259689331055
    9. ',' → logprob: -18.371259689331055
    10. '       ' → logprob: -18.496259689331055

Token 426: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1170262023806572
    2. ':
' → logprob: -2.2420260906219482
    3. '       ' → logprob: -6.242026329040527
    4. '   ' → logprob: -6.367026329040527
    5. ' :' → logprob: -8.367026329040527
    6. ' :
' → logprob: -8.867026329040527
    7. '    ' → logprob: -10.367026329040527
    8. '      ' → logprob: -10.492026329040527
    9. '<|end|>' → logprob: -10.742026329040527
    10. '  ' → logprob: -11.242026329040527

Token 427: '       ' (ID: 309)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.478950560092926
    2. 'print' → logprob: -1.1039505004882812
    3. '   ' → logprob: -3.2289505004882812
    4. '       ' → logprob: -4.728950500488281
    5. '    ' → logprob: -7.728950500488281
    6. ' f' → logprob: -9.353950500488281
    7. ' ' → logprob: -11.603950500488281
    8. '"' → logprob: -11.978950500488281
    9. 'f' → logprob: -12.103950500488281
    10. '        ' → logprob: -12.103950500488281

Token 428: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.375
    4. 'pr' → logprob: -18.625
    5. '       ' → logprob: -20.125
    6. 'printf' → logprob: -20.25
    7. '	print' → logprob: -20.75
    8. 'prin' → logprob: -20.875
    9. '    
' → logprob: -22.5
    10. '#print' → logprob: -22.75

Token 429: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0048903813585639
    2. '(' → logprob: -5.379890441894531
    3. '(f' → logprob: -8.379890441894531
    4. '(val' → logprob: -11.504890441894531
    5. '("",' → logprob: -11.754890441894531
    6. '("?' → logprob: -12.254890441894531
    7. '(":' → logprob: -12.504890441894531
    8. '(i' → logprob: -12.629890441894531
    9. '("-",' → logprob: -12.629890441894531
    10. '('' → logprob: -12.879890441894531

Token 430: 'NG' (ID: 19236)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5723477005958557
    2. 'FAIL' → logprob: -1.697347640991211
    3. 'BAL' → logprob: -2.197347640991211
    4. 'FAILED' → logprob: -3.197347640991211
    5. 'No' → logprob: -3.572347640991211
    6. 'NG' → logprob: -4.572347640991211
    7. 'NO' → logprob: -4.947347640991211
    8. 'm' → logprob: -5.072347640991211
    9. 'M' → logprob: -5.197347640991211
    10. 'T' → logprob: -5.822347640991211

Token 431: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.002093518851324916
    2. ',' → logprob: -6.502093315124512
    3. ',",' → logprob: -8.252093315124512
    4. ' ,' → logprob: -8.877093315124512
    5. ' ",' → logprob: -8.877093315124512
    6. ',val' → logprob: -10.127093315124512
    7. ',"' → logprob: -12.252093315124512
    8. '',' → logprob: -12.752093315124512
    9. '"' → logprob: -13.252093315124512
    10. '`,' → logprob: -14.002093315124512

Token 432: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.07888989895582199
    2. 'val' → logprob: -2.578889846801758
    3. ',val' → logprob: -16.328889846801758
    4. '(val' → logprob: -17.828889846801758
    5. '	val' → logprob: -18.203889846801758
    6. '_val' → logprob: -18.203889846801758
    7. '[val' → logprob: -18.578889846801758
    8. '.val' → logprob: -19.453889846801758
    9. 'v' → logprob: -20.328889846801758
    10. 'f' → logprob: -20.453889846801758

Token 433: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')`' → logprob: -15.500000953674316
    4. ')
' → logprob: -16.5
    5. '))' → logprob: -16.625
    6. '")' → logprob: -17.25
    7. ')")' → logprob: -17.25
    8. ')}' → logprob: -17.375
    9. '`)' → logprob: -18.0
    10. '')' → logprob: -18.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 431
Tokens correctement prédits (1ère position, stricte): 167
Tokens correctement prédits (1ère position, avec adaptation): 188
Tokens correctement prédits (top 10): 348
Précision stricte (1ère position): 38.75%
Précision adaptée (1ère position): 43.62%
Précision (top 10): 80.74%
================================================================================
