================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:00:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    matrix = []
    for _ in range(n):
        row = list(map(int, input().split()))
        matrix.append(row)

    # find the shortest in each row
    shortest_in_row = []
    for i in range(n):
        shortest = min(matrix[i])
        shortest_in_row.append(shortest)

    # find the tallest in each column
    tallest_in_col = []
    for j in range(n):
        tallest = matrix[0][j]
        for i in range(1, n):
            if matrix[i][j] > tallest:
                tallest = matrix[i][j]
        tallest_in_col.append(tallest)

    result = 0
    for i in range(n):
        for j in range(n):
            if matrix[i][j] == shortest_in_row[i] and matrix[i][j] == tallest_in_col[j]:
                result = matrix[i][j]

    print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5877122282981873
    2. '\' → logprob: -2.212712287902832
    3. ' ' → logprob: -2.462712287902832
    4. '```' → logprob: -2.837712287902832
    5. '    ' → logprob: -2.962712287902832
    6. '    
' → logprob: -3.212712287902832
    7. '\n' → logprob: -3.837712287902832
    8. ' 
' → logprob: -3.962712287902832
    9. '<|end|>' → logprob: -4.087712287902832
    10. '  
' → logprob: -5.087712287902832

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13922753930091858
    2. '    ' → logprob: -2.2642276287078857
    3. ' ' → logprob: -4.639227390289307
    4. '```' → logprob: -5.014227390289307
    5. '       ' → logprob: -5.639227390289307
    6. '    
' → logprob: -6.389227390289307
    7. '  ' → logprob: -6.764227390289307
    8. 'pass' → logprob: -7.764227390289307
    9. ' 
' → logprob: -8.139227867126465
    10. 'i' → logprob: -8.389227867126465

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8705378770828247
    2. '=' → logprob: -1.4955378770828247
    3. 'u' → logprob: -1.9955378770828247
    4. '   ' → logprob: -2.745537757873535
    5. 'o' → logprob: -3.245537757873535
    6. '+' → logprob: -3.745537757873535
    7. '_' → logprob: -4.245537757873535
    8. '>' → logprob: -4.245537757873535
    9. ' =' → logprob: -4.370537757873535
    10. '  ' → logprob: -4.620537757873535

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2752552926540375
    2. ' input' → logprob: -1.5252553224563599
    3. 'input' → logprob: -4.27525520324707
    4. 'int' → logprob: -4.77525520324707
    5. ' n' → logprob: -7.90025520324707
    6. ' ' → logprob: -9.02525520324707
    7. 'n' → logprob: -10.15025520324707
    8. ' eval' → logprob: -10.65025520324707
    9. '```' → logprob: -10.65025520324707
    10. ' randint' → logprob: -10.90025520324707

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0789412334561348
    2. '(input' → logprob: -2.5789413452148438
    3. '(n' → logprob: -10.703941345214844
    4. '()' → logprob: -11.953941345214844
    5. '(
' → logprob: -12.203941345214844
    6. '('' → logprob: -12.328941345214844
    7. '(user' → logprob: -13.203941345214844
    8. 'input' → logprob: -13.453941345214844
    9. '(range' → logprob: -13.703941345214844
    10. ' (' → logprob: -13.953941345214844

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7426730394363403
    2. ')' → logprob: -0.9926730394363403
    3. '()' → logprob: -2.367672920227051
    4. '())' → logprob: -2.992672920227051
    5. '))' → logprob: -5.492672920227051
    6. '('' → logprob: -6.867672920227051
    7. ' ' → logprob: -6.867672920227051
    8. '()))' → logprob: -6.992672920227051
    9. '```' → logprob: -7.242672920227051
    10. '(""))' → logprob: -8.36767292022705

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9635499119758606
    2. ' if' → logprob: -1.7135498523712158
    3. '<|end|>' → logprob: -1.9635498523712158
    4. ')' → logprob: -2.213549852371216
    5. ' ' → logprob: -2.213549852371216
    6. '    
' → logprob: -4.213550090789795
    7. '```' → logprob: -4.463550090789795
    8. ':' → logprob: -4.713550090789795
    9. '    ' → logprob: -4.713550090789795
    10. ' 
' → logprob: -4.713550090789795

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5625182390213013
    2. ' if' → logprob: -1.1875182390213013
    3. '<|end|>' → logprob: -3.4375181198120117
    4. ')' → logprob: -3.8125181198120117
    5. ' ' → logprob: -3.9375181198120117
    6. '```' → logprob: -4.187518119812012
    7. '    ' → logprob: -4.437518119812012
    8. 'if' (adapté à ' if') → logprob: -5.437518119812012
    9. '\n' → logprob: -5.937518119812012
    10. '  ' → logprob: -6.062518119812012

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.004079589620232582
    2. ' ' → logprob: -5.629079818725586
    3. 'n' → logprob: -8.129079818725586
    4. ' not' → logprob: -8.629079818725586
    5. '  ' → logprob: -13.004079818725586
    6. ' ' → logprob: -13.629079818725586
    7. ' (' → logprob: -14.129079818725586
    8. '(n' → logprob: -14.879079818725586
    9. 'not' → logprob: -15.379079818725586
    10. '	n' → logprob: -16.004079818725586

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6851745247840881
    2. ' >' → logprob: -1.0601744651794434
    3. ' <=' → logprob: -2.5601744651794434
    4. ' <' → logprob: -3.5601744651794434
    5. ' ' → logprob: -4.310174465179443
    6. '==' → logprob: -4.310174465179443
    7. '>' → logprob: -4.435174465179443
    8. ' >=' → logprob: -6.435174465179443
    9. '  ' → logprob: -7.560174465179443
    10. ')' → logprob: -7.560174465179443

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.126935675740242
    2. '0' → logprob: -2.1269357204437256
    3. ' ' → logprob: -13.001935958862305
    4. '1' → logprob: -13.626935958862305
    5. ' -' → logprob: -14.314435958862305
    6. '100' → logprob: -15.126935958862305
    7. '10' → logprob: -15.126935958862305
    8. '  ' → logprob: -15.189435958862305
    9. ')' → logprob: -15.501935958862305
    10. '=' → logprob: -15.626935958862305

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025094281882047653
    2. ' ' → logprob: -6.002509593963623
    3. '-' → logprob: -10.627509117126465
    4. ' -' → logprob: -12.752509117126465
    5. '1' → logprob: -13.002509117126465
    6. '42' → logprob: -13.252509117126465
    7. '   ' → logprob: -14.252509117126465
    8. '  ' → logprob: -15.127509117126465
    9. '```' → logprob: -15.127509117126465
    10. '    ' → logprob: -15.252509117126465

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.755678961984813e-05
    2. ':
' → logprob: -9.875077247619629
    3. ' :' → logprob: -11.625077247619629
    4. '   ' → logprob: -12.125077247619629
    5. ':return' → logprob: -12.500077247619629
    6. '       ' → logprob: -13.000077247619629
    7. ':\' → logprob: -13.125077247619629
    8. '):' → logprob: -13.375077247619629
    9. '    ' → logprob: -14.375077247619629
    10. ':**' → logprob: -15.250077247619629

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002498609945178032
    2. '   ' → logprob: -6.752498626708984
    3. ' break' → logprob: -6.877498626708984
    4. '\n' → logprob: -9.127498626708984
    5. '    ' → logprob: -9.877498626708984
    6. '	break' → logprob: -10.502498626708984
    7. ':' → logprob: -10.752498626708984
    8. '\' → logprob: -11.377498626708984
    9. '      ' → logprob: -11.377498626708984
    10. ' ' → logprob: -11.627498626708984

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.0031932818237692118
    2. '       ' → logprob: -6.628193378448486
    3. 'break' (adapté à ' break') → logprob: -7.503193378448486
    4. '\n' → logprob: -8.003192901611328
    5. ' 
' → logprob: -8.253192901611328
    6. ' \' → logprob: -8.753192901611328
    7. '    ' → logprob: -9.253192901611328
    8. '	break' → logprob: -9.503192901611328
    9. '_break' → logprob: -9.503192901611328
    10. '```' → logprob: -9.503192901611328

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2312391996383667
    2. '\n' → logprob: -1.2312391996383667
    3. '
' → logprob: -2.2312393188476562
    4. '    
' → logprob: -2.4812393188476562
    5. '<|end|>' → logprob: -2.4812393188476562
    6. ':' → logprob: -2.8562393188476562
    7. '```' → logprob: -3.6062393188476562
    8. '\' → logprob: -3.8562393188476562
    9. ')' → logprob: -5.106239318847656
    10. '#' → logprob: -5.356239318847656

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17229793965816498
    2. '    
' → logprob: -3.297297954559326
    3. '<|end|>' → logprob: -3.297297954559326
    4. '\n' → logprob: -3.547297954559326
    5. '
' → logprob: -3.797297954559326
    6. '```' → logprob: -4.297297954559326
    7. 'n' → logprob: -5.547297954559326
    8. '\' → logprob: -5.547297954559326
    9. '#' → logprob: -5.797297954559326
    10. ')' → logprob: -6.422297954559326

Token 20: ' matrix' (ID: 12248)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5292903780937195
    2. ' ' → logprob: -1.1542904376983643
    3. '    ' → logprob: -3.9042904376983643
    4. ':' → logprob: -4.279290199279785
    5. '\' → logprob: -4.529290199279785
    6. '\n' → logprob: -4.529290199279785
    7. ')' → logprob: -4.654290199279785
    8. '(' → logprob: -5.529290199279785
    9. '#' → logprob: -5.529290199279785
    10. '  ' → logprob: -5.654290199279785

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13969053328037262
    2. ' =' → logprob: -2.264690637588501
    3. '_' → logprob: -4.764690399169922
    4. ' ' → logprob: -4.764690399169922
    5. '=' → logprob: -5.014690399169922
    6. '[]' → logprob: -7.764690399169922
    7. ')' → logprob: -8.139690399169922
    8. '\[' → logprob: -8.139690399169922
    9. '[:]' → logprob: -8.389690399169922
    10. '<|end|>' → logprob: -8.514690399169922

Token 22: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.3800748586654663
    2. '[]' → logprob: -1.8800748586654663
    3. ' [' → logprob: -2.130074977874756
    4. '[' → logprob: -3.130074977874756
    5. ' [[' → logprob: -7.755074977874756
    6. ' [[]' → logprob: -8.630074501037598
    7. '[n' → logprob: -9.005074501037598
    8. '[][]' → logprob: -9.380074501037598
    9. ' [][]' → logprob: -9.505074501037598
    10. ' [
' → logprob: -10.130074501037598

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15247413516044617
    2. '<|end|>' → logprob: -2.5274741649627686
    3. '    
' → logprob: -3.9024741649627686
    4. '\' → logprob: -4.9024739265441895
    5. '    ' → logprob: -4.9024739265441895
    6. '[' → logprob: -5.2774739265441895
    7. ' ' → logprob: -5.4024739265441895
    8. ' for' → logprob: -5.6524739265441895
    9. ' 
' → logprob: -5.6524739265441895
    10. 'for' → logprob: -6.4024739265441895

Token 24: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6114645600318909
    2. 'for' (adapté à ' for') → logprob: -1.611464500427246
    3. ' for' → logprob: -1.611464500427246
    4. '[' → logprob: -3.611464500427246
    5. '    ' → logprob: -4.236464500427246
    6. ' ' → logprob: -4.861464500427246
    7. '    
' → logprob: -5.986464500427246
    8. '	for' → logprob: -6.736464500427246
    9. '       ' → logprob: -6.736464500427246
    10. '\' → logprob: -7.111464500427246

Token 25: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2954999804496765
    2. ' ' → logprob: -1.4205000400543213
    3. ' _' → logprob: -4.295499801635742
    4. '_' → logprob: -8.045499801635742
    5. ' ‌' → logprob: -9.045499801635742
    6. '  ' → logprob: -9.670499801635742
    7. 'i' → logprob: -9.670499801635742
    8. ' range' → logprob: -11.045499801635742
    9. ' ​' → logprob: -11.420499801635742
    10. ' ' → logprob: -11.545499801635742

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003993273247033358
    2. 'in' → logprob: -5.628993511199951
    3. ' ' → logprob: -7.878993511199951
    4. ' i' → logprob: -12.128993034362793
    5. '  ' → logprob: -12.503993034362793
    6. 'range' → logprob: -14.003993034362793
    7. '_' → logprob: -14.128993034362793
    8. '	in' → logprob: -14.253993034362793
    9. ' _' → logprob: -14.503993034362793
    10. 'n' → logprob: -15.128993034362793

Token 27: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804275393486023
    2. 'range' → logprob: -3.2880427837371826
    3. ' ' → logprob: -14.163043022155762
    4. '	range' → logprob: -14.663043022155762
    5. '(range' → logprob: -16.913042068481445
    6. 'rang' → logprob: -17.413042068481445
    7. ' xrange' → logprob: -17.413042068481445
    8. '_range' → logprob: -17.538042068481445
    9. '  ' → logprob: -18.538042068481445
    10. 'Range' → logprob: -19.163042068481445

Token 28: '(n' (ID: 2406)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03266064077615738
    2. '(n' → logprob: -3.532660722732544
    3. 'n' → logprob: -6.907660484313965
    4. '(' → logprob: -6.907660484313965
    5. ' (' → logprob: -7.032660484313965
    6. ' ' → logprob: -11.032660484313965
    7. ' range' → logprob: -12.657660484313965
    8. '	n' → logprob: -13.532660484313965
    9. '_n' → logprob: -14.032660484313965
    10. ')n' → logprob: -14.782660484313965

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000500966387335211
    2. ')' → logprob: -8.000500679016113
    3. ' ):' → logprob: -9.625500679016113
    4. ':' → logprob: -10.000500679016113
    5. '):
' → logprob: -10.125500679016113
    6. '   ' → logprob: -11.375500679016113
    7. '+' → logprob: -14.750500679016113
    8. ' )' → logprob: -15.250500679016113
    9. '():' → logprob: -15.250500679016113
    10. ',' → logprob: -15.625500679016113

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0865216925740242
    2. '    ' → logprob: -2.711521625518799
    3. ' ' → logprob: -4.586521625518799
    4. '   ' → logprob: -5.711521625518799
    5. '        ' → logprob: -6.836521625518799
    6. '<|end|>' → logprob: -7.461521625518799
    7. '[' → logprob: -8.211522102355957
    8. ' 
' → logprob: -8.461522102355957
    9. '     ' → logprob: -9.086522102355957
    10. ' ' → logprob: -9.461522102355957

Token 31: ' row' (ID: 5225)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.007621064782142639
    2. 'matrix' → logprob: -5.0076212882995605
    3. '   ' → logprob: -7.7576212882995605
    4. '	matrix' → logprob: -8.507620811462402
    5. ' line' → logprob: -9.007620811462402
    6. '    ' → logprob: -9.132620811462402
    7. ' row' → logprob: -11.132620811462402
    8. '       ' → logprob: -11.882620811462402
    9. ' matriz' → logprob: -12.632620811462402
    10. ' input' → logprob: -13.007620811462402

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021355098579078913
    2. '=' → logprob: -6.252135276794434
    3. '.append' → logprob: -8.877135276794434
    4. ' ' → logprob: -11.252135276794434
    5. ')' → logprob: -11.377135276794434
    6. ',' → logprob: -11.752135276794434
    7. '    ' → logprob: -11.877135276794434
    8. '[:]' → logprob: -12.377135276794434
    9. '   ' → logprob: -12.752135276794434
    10. ' +=' → logprob: -12.877135276794434

Token 33: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.10089424252510071
    2. 'list' → logprob: -2.3508942127227783
    3. ' [' → logprob: -7.475894451141357
    4. '[' → logprob: -9.4758939743042
    5. '[list' → logprob: -10.6008939743042
    6. ' []' → logprob: -11.8508939743042
    7. '[]' → logprob: -12.1008939743042
    8. ' input' → logprob: -13.1008939743042
    9. 'input' → logprob: -13.4758939743042
    10. '   ' → logprob: -14.4758939743042

Token 34: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.14621004462242126
    2. '(' → logprob: -2.146209955215454
    3. '(input' → logprob: -4.146210193634033
    4. '(int' → logprob: -6.021210193634033
    5. '()' → logprob: -7.771210193634033
    6. '(range' → logprob: -7.896210193634033
    7. 'map' → logprob: -11.396209716796875
    8. '(eval' → logprob: -11.396209716796875
    9. 'input' → logprob: -12.896209716796875
    10. ' map' → logprob: -12.896209716796875

Token 35: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009871537797152996
    2. '(' → logprob: -4.759871482849121
    3. '(lambda' → logprob: -7.134871482849121
    4. '(str' → logprob: -8.509871482849121
    5. '(input' → logprob: -9.009871482849121
    6. 'int' → logprob: -9.634871482849121
    7. '<int' → logprob: -11.009871482849121
    8. '(
' → logprob: -11.759871482849121
    9. '[int' → logprob: -11.759871482849121
    10. ')' → logprob: -12.009871482849121

Token 36: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02498023211956024
    2. ',input' → logprob: -4.024980068206787
    3. 'input' → logprob: -5.649980068206787
    4. '(' → logprob: -6.024980068206787
    5. ',' → logprob: -7.274980068206787
    6. ' input' → logprob: -9.399980545043945
    7. '=input' → logprob: -10.274980545043945
    8. '(
' → logprob: -10.774980545043945
    9. ')' → logprob: -11.024980545043945
    10. '   ' → logprob: -12.024980545043945

Token 37: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47410640120506287
    2. ' input' → logprob: -0.9741064310073853
    3. '(input' → logprob: -10.849106788635254
    4. ',input' → logprob: -12.349106788635254
    5. ')' → logprob: -12.974106788635254
    6. '=input' → logprob: -13.224106788635254
    7. '	input' → logprob: -14.099106788635254
    8. '<input' → logprob: -15.474106788635254
    9. '[input' → logprob: -15.724106788635254
    10. ' ' → logprob: -15.849106788635254

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.76628842484206e-05
    2. '()' → logprob: -9.625067710876465
    3. ' ().' → logprob: -14.250067710876465
    4. '()))' → logprob: -15.750067710876465
    5. '.split' → logprob: -15.875067710876465
    6. '(' → logprob: -15.875067710876465
    7. ')' → logprob: -16.12506675720215
    8. '()
' → logprob: -16.25006675720215
    9. '())' → logprob: -16.37506675720215
    10. '   ' → logprob: -16.62506675720215

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007305434555746615
    2. 'strip' → logprob: -7.250730514526367
    3. 'rstrip' → logprob: -10.875730514526367
    4. ' split' → logprob: -13.750730514526367
    5. '(split' → logprob: -14.750730514526367
    6. ')' → logprob: -16.250730514526367
    7. 'spl' → logprob: -16.625730514526367
    8. ' ' → logprob: -18.750730514526367
    9. 's' → logprob: -18.875730514526367
    10. 'plit' → logprob: -19.000730514526367

Token 40: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.01712452992796898
    2. '())' → logprob: -4.767124652862549
    3. '()' → logprob: -4.892124652862549
    4. '())))' → logprob: -7.267124652862549
    5. '))' → logprob: -9.01712417602539
    6. '()))
' → logprob: -9.39212417602539
    7. '(' → logprob: -10.01712417602539
    8. '()));' → logprob: -12.26712417602539
    9. '()))

' → logprob: -12.51712417602539
    10. ')))' → logprob: -13.01712417602539

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007078713737428188
    2. '   ' → logprob: -5.257078647613525
    3. ')' → logprob: -6.757078647613525
    4. '<|end|>' → logprob: -8.007079124450684
    5. 'matrix' → logprob: -8.757079124450684
    6. '        
' → logprob: -10.632079124450684
    7. '	' → logprob: -10.882079124450684
    8. '```' → logprob: -10.882079124450684
    9. '<|end|>' → logprob: -10.882079124450684
    10. ' matrix' → logprob: -11.257079124450684

Token 42: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' (adapté à ' matrix') → logprob: -0.09938758611679077
    2. '   ' → logprob: -3.0993876457214355
    3. ' matrix' → logprob: -3.5993876457214355
    4. '       ' → logprob: -3.8493876457214355
    5. '	matrix' → logprob: -7.0993876457214355
    6. '```' → logprob: -10.474387168884277
    7. ' ' → logprob: -11.099387168884277
    8. '_matrix' → logprob: -12.099387168884277
    9. '.matrix' → logprob: -12.724387168884277
    10. '<|end|>' → logprob: -12.849387168884277

Token 43: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019329203059896827
    2. '.' → logprob: -6.2519330978393555
    3. ' .' → logprob: -13.126933097839355
    4. '.extend' → logprob: -13.626933097839355
    5. 'append' → logprob: -14.751933097839355
    6. '.app' → logprob: -15.126933097839355
    7. '.setdefault' → logprob: -15.626933097839355
    8. '.Append' → logprob: -16.62693214416504
    9. '.ap' → logprob: -17.25193214416504
    10. '.add' → logprob: -17.37693214416504

Token 44: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0005536287208087742
    2. '(' → logprob: -7.500553607940674
    3. '(rows' → logprob: -15.375554084777832
    4. '(line' → logprob: -15.625554084777832
    5. '(
' → logprob: -15.875554084777832
    6. ' (' → logprob: -17.500553131103516
    7. '(column' → logprob: -17.625553131103516
    8. '(

' → logprob: -17.875553131103516
    9. '(r' → logprob: -18.375553131103516
    10. ',row' → logprob: -19.000553131103516

Token 45: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013202552509028465
    2. '   ' → logprob: -9.000131607055664
    3. ')
' → logprob: -11.875131607055664
    4. ' )' → logprob: -14.250131607055664
    5. '))' → logprob: -14.500131607055664
    6. ')return' → logprob: -16.375131607055664
    7. ')n' → logprob: -16.625131607055664
    8. '#' → logprob: -17.375131607055664
    9. ')#' → logprob: -17.625131607055664
    10. ')))' → logprob: -17.750131607055664

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12958784401416779
    2. '    
' → logprob: -3.5045878887176514
    3. 'm' → logprob: -4.004587650299072
    4. 'result' → logprob: -4.504587650299072
    5. '```' → logprob: -5.129587650299072
    6. 'd' → logprob: -5.254587650299072
    7. 's' → logprob: -5.254587650299072
    8. 'transpose' → logprob: -5.254587650299072
    9. 'n' → logprob: -5.379587650299072
    10. 'for' → logprob: -5.629587650299072

Token 47: ' #' (ID: 1069)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -1.038412094116211
    2. 'result' → logprob: -1.413412094116211
    3. 'di' → logprob: -2.413412094116211
    4. 'det' → logprob: -2.788412094116211
    5. '   ' → logprob: -2.913412094116211
    6. 'diag' → logprob: -3.288412094116211
    7. 'sum' → logprob: -3.413412094116211
    8. 'd' → logprob: -4.038412094116211
    9. 'max' → logprob: -4.413412094116211
    10. ' trace' → logprob: -4.913412094116211

Token 48: ' find' (ID: 1646)
  Prédit: ' diagonal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' diagonal' → logprob: -0.8902407288551331
    2. ' trace' → logprob: -2.5152406692504883
    3. ' result' → logprob: -2.7652406692504883
    4. ' max' → logprob: -2.8902406692504883
    5. ' main' → logprob: -3.5152406692504883
    6. ' diag' → logprob: -3.5152406692504883
    7. '   ' → logprob: -3.5152406692504883
    8. ' size' → logprob: -3.8902406692504883
    9. ' count' → logprob: -3.8902406692504883
    10. ' found' → logprob: -4.015240669250488

Token 49: ' the' (ID: 290)
  Prédit: ' diagonal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diagonal' → logprob: -1.1293102502822876
    2. ' max' → logprob: -1.3793102502822876
    3. ' min' → logprob: -2.379310131072998
    4. ' main' → logprob: -2.754310131072998
    5. ' the' → logprob: -2.879310131072998
    6. 'max' → logprob: -3.629310131072998
    7. ' size' → logprob: -3.879310131072998
    8. ' principal' → logprob: -4.004310131072998
    9. 'di' → logprob: -4.129310131072998
    10. ' determinant' → logprob: -4.254310131072998

Token 50: ' shortest' (ID: 70564)
  Prédit: ' diagonal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' diagonal' → logprob: -0.9072250723838806
    2. ' largest' → logprob: -2.6572251319885254
    3. ' determinant' → logprob: -2.6572251319885254
    4. ' smallest' → logprob: -3.0322251319885254
    5. ' maximum' → logprob: -3.0322251319885254
    6. ' main' → logprob: -3.1572251319885254
    7. ' minimum' → logprob: -3.1572251319885254
    8. ' size' → logprob: -3.6572251319885254
    9. ' next' → logprob: -3.6572251319885254
    10. 'largest' → logprob: -3.6572251319885254

Token 51: ' in' (ID: 306)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.746300995349884
    2. 'paths' → logprob: -1.2463009357452393
    3. 'distance' → logprob: -2.3713009357452393
    4. ' path' → logprob: -2.8713009357452393
    5. ' paths' → logprob: -3.6213009357452393
    6. '_paths' → logprob: -3.9963009357452393
    7. 'dist' → logprob: -4.246301174163818
    8. '_path' → logprob: -4.371301174163818
    9. ' distances' → logprob: -5.371301174163818
    10. ' cycle' → logprob: -5.496301174163818

Token 52: ' each' (ID: 2454)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0175701379776
    2. 'ternal' → logprob: -2.1425700187683105
    3. 'ner' → logprob: -2.5175700187683105
    4. 'matrix' → logprob: -2.5175700187683105
    5. 'each' → logprob: -2.8925700187683105
    6. 'side' → logprob: -2.8925700187683105
    7. 'row' → logprob: -3.3925700187683105
    8. '```' → logprob: -3.6425700187683105
    9. ' the' → logprob: -3.8925700187683105
    10. ' row' → logprob: -4.3925700187683105

Token 53: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.12499645352363586
    2. ' row' → logprob: -2.3749964237213135
    3. 'column' → logprob: -3.7499964237213135
    4. 'matrix' → logprob: -7.874996662139893
    5. ' column' → logprob: -7.999996662139893
    6. 'col' → logprob: -9.374996185302734
    7. '(row' → logprob: -10.374996185302734
    8. ' matrix' → logprob: -10.874996185302734
    9. '-row' → logprob: -10.999996185302734
    10. 'range' → logprob: -11.249996185302734

Token 54: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045703738927841187
    2. 'for' → logprob: -4.170703887939453
    3. 'min' → logprob: -4.545703887939453
    4. '```' → logprob: -5.045703887939453
    5. ' for' → logprob: -5.795703887939453
    6. ' shortest' → logprob: -6.295703887939453
    7. 's' → logprob: -6.295703887939453
    8. 'short' → logprob: -6.920703887939453
    9. '    
' → logprob: -7.670703887939453
    10. ' lengths' → logprob: -7.795703887939453

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019691206514835358
    2. '```' → logprob: -4.769690990447998
    3. 's' → logprob: -5.644690990447998
    4. 'for' → logprob: -6.144690990447998
    5. ' shortest' → logprob: -6.519690990447998
    6. 'min' → logprob: -7.519690990447998
    7. ' for' → logprob: -7.644690990447998
    8. '    
' → logprob: -7.769690990447998
    9. 'short' → logprob: -8.394691467285156
    10. '
' → logprob: -8.519691467285156

Token 56: ' shortest' (ID: 70564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10256418585777283
    2. 'for' → logprob: -3.8525640964508057
    3. 'min' → logprob: -3.8525640964508057
    4. 'short' → logprob: -4.102564334869385
    5. ' shortest' → logprob: -4.602564334869385
    6. '```' → logprob: -4.602564334869385
    7. 's' → logprob: -4.727564334869385
    8. ' for' → logprob: -5.477564334869385
    9. ' min' → logprob: -6.602564334869385
    10. 'minimum' → logprob: -7.102564334869385

Token 57: '_in' (ID: 2267)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6982551217079163
    2. '=' → logprob: -1.4482550621032715
    3. '_paths' → logprob: -1.9482550621032715
    4. '_dist' → logprob: -3.0732550621032715
    5. '_' → logprob: -3.8232550621032715
    6. '_in' → logprob: -4.4482550621032715
    7. '_lengths' → logprob: -4.4482550621032715
    8. 's' → logprob: -4.6982550621032715
    9. '_row' → logprob: -5.1982550621032715
    10. '_path' → logprob: -5.1982550621032715

Token 58: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.12107723951339722
    2. 'row' → logprob: -2.496077299118042
    3. 'each' → logprob: -3.871077299118042
    4. '_rows' → logprob: -5.246077060699463
    5. '_' → logprob: -6.621077060699463
    6. 'rows' → logprob: -6.746077060699463
    7. 'the' → logprob: -6.871077060699463
    8. ' row' → logprob: -7.871077060699463
    9. '=row' → logprob: -8.246077537536621
    10. ' =' → logprob: -8.371077537536621

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7145472764968872
    2. '=' → logprob: -0.8395472764968872
    3. 's' → logprob: -2.7145471572875977
    4. '_' → logprob: -4.714547157287598
    5. '[' → logprob: -6.839547157287598
    6. '=[]' → logprob: -7.339547157287598
    7. '[:]' → logprob: -8.214547157287598
    8. '   ' → logprob: -8.214547157287598
    9. '[]' → logprob: -8.339547157287598
    10. ')' → logprob: -8.714547157287598

Token 60: ' []
' (ID: 8911)
  Prédit: '[min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.3955897092819214
    2. '[' → logprob: -1.3955897092819214
    3. ' [' → logprob: -2.645589828491211
    4. '[list' → logprob: -5.270589828491211
    5. '[]' → logprob: -6.895589828491211
    6. '[max' → logprob: -7.270589828491211
    7. '[row' → logprob: -7.770589828491211
    8. '[m' → logprob: -8.270589828491211
    9. ' []' → logprob: -9.145589828491211
    10. '[i' → logprob: -9.520589828491211

Token 61: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5443941950798035
    2. ' for' → logprob: -1.2943942546844482
    3. '   ' → logprob: -2.0443942546844482
    4. '
' → logprob: -5.419394016265869
    5. '[' → logprob: -5.794394016265869
    6. '<|end|>' → logprob: -6.044394016265869
    7. ' ' → logprob: -6.544394016265869
    8. '    
' → logprob: -6.544394016265869
    9. '```' → logprob: -8.044394493103027
    10. '  
' → logprob: -8.419394493103027

Token 62: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.030636800453066826
    2. ' for' → logprob: -3.530636787414551
    3. '   ' → logprob: -7.030636787414551
    4. '	for' → logprob: -14.28063678741455
    5. ' ' → logprob: -14.90563678741455
    6. '    
' → logprob: -15.03063678741455
    7. '    ' → logprob: -16.280637741088867
    8. '  ' → logprob: -16.655637741088867
    9. ' 
' → logprob: -16.905637741088867
    10. '
' → logprob: -17.530637741088867

Token 63: ' i' (ID: 575)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.39685389399528503
    2. 'row' → logprob: -1.1468539237976074
    3. ' i' → logprob: -5.146853923797607
    4. 'i' → logprob: -5.896853923797607
    5. 'range' → logprob: -7.521853923797607
    6. ' range' → logprob: -7.646853923797607
    7. ' ' → logprob: -9.14685344696045
    8. 'r' → logprob: -9.39685344696045
    9. '   ' → logprob: -10.27185344696045
    10. ' r' → logprob: -10.52185344696045

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09105541557073593
    2. 'in' → logprob: -2.466055393218994
    3. ' ' → logprob: -6.216055393218994
    4. 'n' → logprob: -9.591055870056152
    5. '	in' → logprob: -11.216055870056152
    6. ',' → logprob: -11.591055870056152
    7. '  ' → logprob: -11.966055870056152
    8. ' i' → logprob: -12.466055870056152
    9. '   ' → logprob: -12.716055870056152
    10. '_' → logprob: -13.091055870056152

Token 65: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868805766105652
    2. ' range' → logprob: -1.13688063621521
    3. ' ' → logprob: -12.261880874633789
    4. '	range' → logprob: -13.261880874633789
    5. 'matrix' → logprob: -13.886880874633789
    6. '  ' → logprob: -14.761880874633789
    7. '   ' → logprob: -14.886880874633789
    8. '(range' → logprob: -14.886880874633789
    9. 'ange' → logprob: -15.261880874633789
    10. 'row' → logprob: -15.636880874633789

Token 66: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01818014681339264
    2. '(' → logprob: -4.0181803703308105
    3. ' (' → logprob: -10.643179893493652
    4. '(len' → logprob: -12.518179893493652
    5. ' n' → logprob: -13.518179893493652
    6. 'n' → logprob: -14.393179893493652
    7. '(
' → logprob: -15.268179893493652
    8. ' ' → logprob: -15.518179893493652
    9. '(s' → logprob: -16.39318084716797
    10. '   ' → logprob: -16.76818084716797

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000341541541274637
    2. '):
' → logprob: -8.500341415405273
    3. ')' → logprob: -9.250341415405273
    4. ':' → logprob: -10.625341415405273
    5. '   ' → logprob: -11.250341415405273
    6. ' ):' → logprob: -12.625341415405273
    7. '):
' → logprob: -15.375341415405273
    8. '+' → logprob: -15.500341415405273
    9. ']:' → logprob: -15.500341415405273
    10. ' ' → logprob: -15.750341415405273

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02324174903333187
    2. ':' → logprob: -4.2732415199279785
    3. '   ' → logprob: -4.8982415199279785
    4. '<|end|>' → logprob: -7.7732415199279785
    5. ' ' → logprob: -7.8982415199279785
    6. ' shortest' → logprob: -8.398241996765137
    7. '):' → logprob: -9.023241996765137
    8. '    ' → logprob: -9.523241996765137
    9. '[' → logprob: -9.773241996765137
    10. ' :' → logprob: -10.023241996765137

Token 69: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.3126230239868164
    2. '   ' → logprob: -1.8126230239868164
    3. 'short' → logprob: -2.3126230239868164
    4. ' short' → logprob: -5.812623023986816
    5. '       ' → logprob: -6.437623023986816
    6. 'min' → logprob: -7.687623023986816
    7. '    ' → logprob: -8.687623023986816
    8. ' row' → logprob: -8.687623023986816
    9. '	short' → logprob: -8.937623023986816
    10. 'Shortest' → logprob: -9.187623023986816

Token 70: ' =' (ID: 314)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.002540824469178915
    2. '_row' → logprob: -7.127540588378906
    3. '_' → logprob: -7.252540588378906
    4. ' =' → logprob: -7.877540588378906
    5. '_length' → logprob: -8.502540588378906
    6. ')' → logprob: -8.877540588378906
    7. '=' → logprob: -9.877540588378906
    8. '   ' → logprob: -10.002540588378906
    9. '(row' → logprob: -10.752540588378906
    10. '(_' → logprob: -11.127540588378906

Token 71: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.29421040415763855
    2. ' min' → logprob: -1.419210433959961
    3. 'matrix' → logprob: -4.669210433959961
    4. ' matrix' → logprob: -6.169210433959961
    5. 'float' → logprob: -7.044210433959961
    6. ' float' → logprob: -8.419210433959961
    7. 'max' → logprob: -8.544210433959961
    8. '   ' → logprob: -9.419210433959961
    9. ' ' → logprob: -10.044210433959961
    10. '100' → logprob: -10.294210433959961

Token 72: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -0.0024894531816244125
    2. '(' → logprob: -6.0024895668029785
    3. '(row' → logprob: -11.37748908996582
    4. 'matrix' → logprob: -14.37748908996582
    5. '(
' → logprob: -15.00248908996582
    6. '(mat' → logprob: -15.37748908996582
    7. '(m' → logprob: -15.37748908996582
    8. ' (' → logprob: -15.50248908996582
    9. '	matrix' → logprob: -16.00248908996582
    10. ' matrix' → logprob: -16.37748908996582

Token 73: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.682846287731081e-05
    2. '[' → logprob: -9.750066757202148
    3. ' [' → logprob: -12.500066757202148
    4. ')[' → logprob: -13.625066757202148
    5. ')' → logprob: -13.750066757202148
    6. '[I' → logprob: -14.250066757202148
    7. '[n' → logprob: -14.375066757202148
    8. '   ' → logprob: -15.375066757202148
    9. '[
' → logprob: -15.625066757202148
    10. '```' → logprob: -16.25006675720215

Token 74: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0004189946048427373
    2. ')' → logprob: -8.750418663024902
    3. '])
' → logprob: -9.000418663024902
    4. ']' → logprob: -10.250418663024902
    5. '   ' → logprob: -10.375418663024902
    6. ' ])' → logprob: -10.375418663024902
    7. ']))' → logprob: -11.125418663024902
    8. ')])' → logprob: -12.000418663024902
    9. '       ' → logprob: -12.375418663024902
    10. ''])' → logprob: -13.250418663024902

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07006247341632843
    2. '   ' → logprob: -2.9450623989105225
    3. '
' → logprob: -5.445062637329102
    4. ')' → logprob: -5.945062637329102
    5. '        
' → logprob: -5.945062637329102
    6. ' shortest' → logprob: -6.320062637329102
    7. 'short' → logprob: -6.820062637329102
    8. '<|end|>' → logprob: -7.320062637329102
    9. '    
' → logprob: -7.445062637329102
    10. ',' → logprob: -8.320062637329102

Token 76: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.18747669458389282
    2. '   ' → logprob: -2.187476634979248
    3. 'short' → logprob: -2.937476634979248
    4. '       ' → logprob: -5.562476634979248
    5. ' short' → logprob: -6.812476634979248
    6. ' for' → logprob: -8.562477111816406
    7. 'Shortest' → logprob: -9.437477111816406
    8. ' ' → logprob: -9.562477111816406
    9. '	short' → logprob: -9.812477111816406
    10. ' index' → logprob: -9.812477111816406

Token 77: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -9.93710636976175e-05
    2. '   ' → logprob: -10.125099182128906
    3. 'in' → logprob: -10.750099182128906
    4. '_' → logprob: -10.750099182128906
    5. ' _' → logprob: -12.625099182128906
    6. 'In' → logprob: -13.500099182128906
    7. '_i' → logprob: -13.625099182128906
    8. ')' → logprob: -13.750099182128906
    9. '```' → logprob: -13.750099182128906
    10. ' in' → logprob: -13.875099182128906

Token 78: '_row' (ID: 19157)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.34869953989982605
    2. '_row' → logprob: -1.2236995697021484
    3. ' row' → logprob: -8.848699569702148
    4. '[row' → logprob: -10.973699569702148
    5. 'short' → logprob: -11.098699569702148
    6. '_' → logprob: -11.223699569702148
    7. '	row' → logprob: -11.473699569702148
    8. '-row' → logprob: -12.098699569702148
    9. 'ow' → logprob: -12.223699569702148
    10. '(row' → logprob: -12.473699569702148

Token 79: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10025616735219955
    2. '.' → logprob: -2.3502562046051025
    3. ' .' → logprob: -10.475255966186523
    4. '.app' → logprob: -11.850255966186523
    5. '.extend' → logprob: -12.225255966186523
    6. '.ap' → logprob: -12.600255966186523
    7. '.add' → logprob: -13.850255966186523
    8. '.insert' → logprob: -14.225255966186523
    9. '.push' → logprob: -14.350255966186523
    10. '=' → logprob: -14.475255966186523

Token 80: '(short' (ID: 78511)
  Prédit: '(short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(short' → logprob: -0.008616226725280285
    2. '(' → logprob: -4.7586164474487305
    3. '((' → logprob: -14.50861644744873
    4. ' (' → logprob: -14.75861644744873
    5. 'short' → logprob: -14.75861644744873
    6. '(s' → logprob: -15.63361644744873
    7. '(
' → logprob: -16.008615493774414
    8. '()' → logprob: -18.133615493774414
    9. '('' → logprob: -18.133615493774414
    10. '(sh' → logprob: -18.133615493774414

Token 81: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -2.2200749754119897e-06
    2. '_est' → logprob: -13.875001907348633
    3. 'st' → logprob: -15.250001907348633
    4. '_' → logprob: -15.750001907348633
    5. ' est' → logprob: -16.000001907348633
    6. 'ест' → logprob: -16.000001907348633
    7. 'rest' → logprob: -16.125001907348633
    8. 'test' → logprob: -16.125001907348633
    9. 'e' → logprob: -16.250001907348633
    10. 'er' → logprob: -17.250001907348633

Token 82: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003119863977190107
    2. '   ' → logprob: -8.375311851501465
    3. ')
' → logprob: -9.750311851501465
    4. ' )' → logprob: -11.500311851501465
    5. '<|end|>' → logprob: -12.000311851501465
    6. '
' → logprob: -13.125311851501465
    7. '       ' → logprob: -14.000311851501465
    8. ' ' → logprob: -14.375311851501465
    9. ')

' → logprob: -14.875311851501465
    10. '))' → logprob: -14.875311851501465

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012978206388652325
    2. 'for' → logprob: -5.5129780769348145
    3. '
' → logprob: -6.0129780769348145
    4. 'min' → logprob: -6.6379780769348145
    5. '    
' → logprob: -6.6379780769348145
    6. ' for' → logprob: -6.8879780769348145
    7. '#' → logprob: -7.3879780769348145
    8. '<|end|>' → logprob: -7.8879780769348145
    9. 'minimum' → logprob: -8.012978553771973
    10. 'max' → logprob: -8.012978553771973

Token 84: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11121585220098495
    2. 'min' → logprob: -3.361215829849243
    3. 'for' → logprob: -3.486215829849243
    4. 's' → logprob: -4.736216068267822
    5. ' for' → logprob: -4.861216068267822
    6. '#' (adapté à ' #') → logprob: -5.361216068267822
    7. '```' → logprob: -5.861216068267822
    8. 'c' → logprob: -6.986216068267822
    9. 'counter' → logprob: -6.986216068267822
    10. 'minimum' → logprob: -6.986216068267822

Token 85: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.4528118073940277
    2. '#' → logprob: -1.45281183719635
    3. 'for' → logprob: -3.4528117179870605
    4. ' find' → logprob: -3.8278117179870605
    5. 'check' → logprob: -4.2028117179870605
    6. 'print' → logprob: -4.4528117179870605
    7. 'short' → logprob: -4.8278117179870605
    8. 'count' → logprob: -4.8278117179870605
    9. 'result' → logprob: -5.3278117179870605
    10. 'max' → logprob: -5.3278117179870605

Token 86: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.03543337062001228
    2. 'the' → logprob: -3.410433292388916
    3. ' shortest' → logprob: -6.910433292388916
    4. '#' → logprob: -8.410433769226074
    5. ' longest' → logprob: -9.160433769226074
    6. 'short' → logprob: -9.660433769226074
    7. ' ' → logprob: -10.035433769226074
    8. '(' → logprob: -10.160433769226074
    9. '   ' → logprob: -10.160433769226074
    10. 's' → logprob: -10.410433769226074

Token 87: ' tallest' (ID: 152167)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.3899223804473877
    2. 'minimum' → logprob: -2.2649223804473877
    3. ' shortest' → logprob: -2.7649223804473877
    4. 'min' → logprob: -3.0149223804473877
    5. 'index' → logprob: -3.8899223804473877
    6. 'long' → logprob: -4.014922142028809
    7. 'max' → logprob: -4.139922142028809
    8. 'small' → logprob: -4.389922142028809
    9. ' smallest' → logprob: -5.389922142028809
    10. ' index' → logprob: -5.514922142028809

Token 88: ' in' (ID: 306)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.47125595808029175
    2. ' in' → logprob: -1.2212560176849365
    3. 'in' → logprob: -2.9712560176849365
    4. 's' → logprob: -5.096255779266357
    5. '_of' → logprob: -5.346255779266357
    6. ' of' → logprob: -5.471255779266357
    7. ' ' → logprob: -6.096255779266357
    8. '_' → logprob: -6.471255779266357
    9. '   ' → logprob: -6.471255779266357
    10. 't' → logprob: -6.721255779266357

Token 89: ' each' (ID: 2454)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.13556024432182312
    2. ' each' → logprob: -2.8855602741241455
    3. ' short' → logprob: -3.5105602741241455
    4. 'short' → logprob: -4.010560035705566
    5. ' row' → logprob: -4.635560035705566
    6. ' the' → logprob: -5.260560035705566
    7. ' ' → logprob: -5.760560035705566
    8. 'each' → logprob: -6.135560035705566
    9. '<|end|>' → logprob: -7.135560035705566
    10. '_short' → logprob: -7.635560035705566

Token 90: ' column' (ID: 6000)
  Prédit: ' column'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' column' → logprob: -0.38239040970802307
    2. ' row' → logprob: -1.8823903799057007
    3. 'column' → logprob: -2.0073904991149902
    4. 'row' → logprob: -3.8823904991149902
    5. ' col' → logprob: -5.25739049911499
    6. 'col' → logprob: -5.50739049911499
    7. ' ' → logprob: -7.88239049911499
    8. '<|end|>' → logprob: -8.257390022277832
    9. '	column' → logprob: -8.944890022277832
    10. 'short' → logprob: -9.444890022277832

Token 91: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5433889031410217
    2. 't' → logprob: -1.293388843536377
    3. ' tallest' → logprob: -2.043388843536377
    4. ' tall' → logprob: -5.043388843536377
    5. ':' → logprob: -6.043388843536377
    6. '
' → logprob: -6.793388843536377
    7. '    
' → logprob: -7.168388843536377
    8. ',' → logprob: -7.418388843536377
    9. '```' → logprob: -7.543388843536377
    10. ':
' → logprob: -7.668388843536377

Token 92: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.24238061904907227
    2. '   ' → logprob: -2.2423806190490723
    3. ' tallest' → logprob: -2.2423806190490723
    4. ' tall' → logprob: -6.617380619049072
    5. '    
' → logprob: -8.367380142211914
    6. 'column' → logprob: -8.492380142211914
    7. 'col' → logprob: -9.117380142211914
    8. '
' → logprob: -9.242380142211914
    9. ' column' → logprob: -9.367380142211914
    10. ' for' → logprob: -9.367380142211914

Token 93: ' tallest' (ID: 152167)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05236098915338516
    2. ' tallest' → logprob: -3.427361011505127
    3. '   ' → logprob: -4.177361011505127
    4. ' tall' → logprob: -6.177361011505127
    5. 'max' → logprob: -8.427360534667969
    6. 'col' → logprob: -8.802360534667969
    7. 'column' → logprob: -8.927360534667969
    8. 'for' → logprob: -8.927360534667969
    9. ' for' → logprob: -9.552360534667969
    10. ' ' → logprob: -9.677360534667969

Token 94: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.004899634979665279
    2. ' =' → logprob: -5.504899501800537
    3. '=' → logprob: -7.379899501800537
    4. 'in' → logprob: -9.754899978637695
    5. 's' → logprob: -10.129899978637695
    6. '   ' → logprob: -10.379899978637695
    7. '_' → logprob: -10.754899978637695
    8. ' in' → logprob: -10.879899978637695
    9. 'In' → logprob: -11.254899978637695
    10. ' ' → logprob: -12.254899978637695

Token 95: '_col' (ID: 7255)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.0347871780395508
    2. '_col' → logprob: -1.2847871780395508
    3. '_column' → logprob: -1.2847871780395508
    4. '_' → logprob: -2.909787178039551
    5. 'column' → logprob: -3.909787178039551
    6. ' column' → logprob: -5.284787178039551
    7. 'col' → logprob: -6.034787178039551
    8. ' ' → logprob: -6.159787178039551
    9. ' row' → logprob: -6.784787178039551
    10. 'row' → logprob: -7.034787178039551

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04301963001489639
    2. '=' → logprob: -3.1680195331573486
    3. 's' → logprob: -11.79301929473877
    4. '=[]' → logprob: -12.16801929473877
    5. ' ' → logprob: -12.79301929473877
    6. '=[]
' → logprob: -13.79301929473877
    7. ' =
' → logprob: -13.79301929473877
    8. ']' → logprob: -14.04301929473877
    9. '   ' → logprob: -14.66801929473877
    10. ' =[' → logprob: -14.79301929473877

Token 97: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6316896677017212
    2. '[' → logprob: -1.1316896677017212
    3. '[]' → logprob: -2.5066895484924316
    4. '[]
' → logprob: -3.1316895484924316
    5. ' []' → logprob: -4.506689548492432
    6. ' []
' → logprob: -5.131689548492432
    7. '[max' → logprob: -6.631689548492432
    8. '[n' → logprob: -7.256689548492432
    9. '[min' → logprob: -8.13169002532959
    10. '[m' → logprob: -8.50669002532959

Token 98: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35757237672805786
    2. '   ' → logprob: -1.607572317123413
    3. 'for' → logprob: -2.357572317123413
    4. ' =' → logprob: -5.357572555541992
    5. '=' → logprob: -8.607572555541992
    6. '	for' → logprob: -8.982572555541992
    7. '    
' → logprob: -9.607572555541992
    8. '
' → logprob: -9.732572555541992
    9. '[' → logprob: -9.857572555541992
    10. ' ' → logprob: -9.857572555541992

Token 99: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019416073337197304
    2. ' for' → logprob: -6.251941680908203
    3. '   ' → logprob: -11.251941680908203
    4. '
' → logprob: -17.126941680908203
    5. 'range' → logprob: -19.126941680908203
    6. ' ' → logprob: -19.501941680908203
    7. 'f' → logprob: -19.626941680908203
    8. 'fo' → logprob: -19.876941680908203
    9. '	for' → logprob: -20.001941680908203
    10. '    
' → logprob: -20.251941680908203

Token 100: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.01570749469101429
    2. ' i' → logprob: -4.390707492828369
    3. ' col' → logprob: -6.265707492828369
    4. ' range' → logprob: -7.140707492828369
    5. 'j' → logprob: -7.765707492828369
    6. ' ' → logprob: -10.265707969665527
    7. ' c' → logprob: -11.390707969665527
    8. 'i' → logprob: -11.890707969665527
    9. ' _' → logprob: -11.890707969665527
    10. 'range' → logprob: -12.140707969665527

Token 101: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001017567701637745
    2. 'in' → logprob: -7.0010175704956055
    3. ' ' → logprob: -9.501017570495605
    4. '<|end|>' → logprob: -10.626017570495605
    5. 'range' → logprob: -13.001017570495605
    6. 'n' → logprob: -13.251017570495605
    7. ' range' → logprob: -14.001017570495605
    8. '	in' → logprob: -14.626017570495605
    9. '  ' → logprob: -15.001017570495605
    10. '<|end|>' → logprob: -15.126017570495605

Token 102: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132631778717041
    2. ' range' → logprob: -1.313263177871704
    3. ' ' → logprob: -14.313262939453125
    4. '(range' → logprob: -15.188262939453125
    5. '   ' → logprob: -15.438262939453125
    6. '	range' → logprob: -15.813262939453125
    7. '  ' → logprob: -16.938262939453125
    8. ')' → logprob: -17.188262939453125
    9. 'in' → logprob: -17.438262939453125
    10. ' in' → logprob: -17.813262939453125

Token 103: '(n' (ID: 2406)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.8273581862449646
    2. '(n' → logprob: -1.3273582458496094
    3. 'range' → logprob: -1.5773582458496094
    4. ' range' → logprob: -2.5773582458496094
    5. '(' → logprob: -4.202358245849609
    6. ' (' → logprob: -8.95235824584961
    7. 'n' → logprob: -10.70235824584961
    8. ')' → logprob: -11.95235824584961
    9. '(s' → logprob: -13.45235824584961
    10. '   ' → logprob: -13.57735824584961

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16069909930229187
    2. '):
' → logprob: -1.9106991291046143
    3. ')' → logprob: -7.785698890686035
    4. '   ' → logprob: -10.410698890686035
    5. ' ):' → logprob: -11.410698890686035
    6. ':' → logprob: -11.535698890686035
    7. '):

' → logprob: -12.660698890686035
    8. '):
' → logprob: -13.535698890686035
    9. ' ):
' → logprob: -13.535698890686035
    10. ':
' → logprob: -14.285698890686035

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33288678526878357
    2. '   ' → logprob: -1.332886815071106
    3. 't' → logprob: -4.082886695861816
    4. ' tallest' → logprob: -6.832886695861816
    5. 'col' → logprob: -7.582886695861816
    6. ' col' → logprob: -8.207886695861816
    7. 'max' → logprob: -8.832886695861816
    8. '    
' → logprob: -9.332886695861816
    9. ' tall' → logprob: -9.457886695861816
    10. ' max' → logprob: -9.957886695861816

Token 106: ' tallest' (ID: 152167)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.215077206492424
    2. 't' → logprob: -2.4650771617889404
    3. 'column' → logprob: -2.4650771617889404
    4. '   ' → logprob: -4.2150774002075195
    5. '       ' → logprob: -5.2150774002075195
    6. 'max' → logprob: -6.5900774002075195
    7. ' col' → logprob: -6.7150774002075195
    8. ' column' → logprob: -7.5900774002075195
    9. ' tallest' → logprob: -9.46507740020752
    10. ' tall' → logprob: -10.34007740020752

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895070850849152
    2. '=' → logprob: -2.4639506340026855
    3. ' ' → logprob: -11.838951110839844
    4. ')' → logprob: -14.088951110839844
    5. '   ' → logprob: -14.088951110839844
    6. 's' → logprob: -14.588951110839844
    7. ' =
' → logprob: -14.963951110839844
    8. '_' → logprob: -15.088951110839844
    9. ',' → logprob: -15.588951110839844
    10. '  ' → logprob: -15.588951110839844

Token 108: ' matrix' (ID: 12248)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3162476718425751
    2. ' max' → logprob: -1.3162477016448975
    3. '0' → logprob: -6.941247463226318
    4. 'matrix' → logprob: -6.941247463226318
    5. 'float' → logprob: -7.816247463226318
    6. ' matrix' → logprob: -8.066247940063477
    7. ' float' → logprob: -9.191247940063477
    8. '   ' → logprob: -9.191247940063477
    9. ' -' → logprob: -10.441247940063477
    10. '-' → logprob: -10.566247940063477

Token 109: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007009993423707783
    2. '0' → logprob: -7.375700950622559
    3. '   ' → logprob: -11.250700950622559
    4. '[
' → logprob: -11.375700950622559
    5. ')' → logprob: -11.875700950622559
    6. '`' → logprob: -12.250700950622559
    7. '[i' → logprob: -12.500700950622559
    8. ' ' → logprob: -12.625700950622559
    9. '
' → logprob: -12.750700950622559
    10. 'max' → logprob: -12.750700950622559

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '[' → logprob: -14.875019073486328
    4. 'i' → logprob: -17.250019073486328
    5. '   ' → logprob: -17.625019073486328
    6. '
' → logprob: -17.750019073486328
    7. '  ' → logprob: -18.625019073486328
    8. '1' → logprob: -18.937519073486328
    9. 'j' → logprob: -19.437519073486328
    10. 'max' → logprob: -19.437519073486328

Token 111: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5979258418083191
    2. '[j' → logprob: -0.8479258418083191
    3. '[' → logprob: -3.847925901412964
    4. '   ' → logprob: -9.472926139831543
    5. '[i' → logprob: -9.472926139831543
    6. ')[' → logprob: -9.472926139831543
    7. ' [' → logprob: -10.347926139831543
    8. ' ][' → logprob: -10.472926139831543
    9. ']' → logprob: -10.597926139831543
    10. '}[' → logprob: -10.972926139831543

Token 112: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.318681188422488e-05
    2. ' j' → logprob: -11.25001335144043
    3. '0' → logprob: -16.00001335144043
    4. '[j' → logprob: -18.25001335144043
    5. '   ' → logprob: -18.37501335144043
    6. '	j' → logprob: -18.75001335144043
    7. ' ' → logprob: -20.62501335144043
    8. '```' → logprob: -20.87501335144043
    9. '_j' → logprob: -21.00001335144043
    10. ':j' → logprob: -21.62501335144043

Token 113: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9686481952667236
    2. 'for' → logprob: -0.9686481952667236
    3. ']' → logprob: -1.9686481952667236
    4. ')
' → logprob: -3.0936481952667236
    5. '
' → logprob: -3.9686481952667236
    6. ']
' → logprob: -4.4686479568481445
    7. '<|end|>' → logprob: -4.4686479568481445
    8. '   ' → logprob: -4.8436479568481445
    9. ' for' → logprob: -6.4686479568481445
    10. '       ' → logprob: -6.7186479568481445

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1460607945919037
    2. ' for' → logprob: -2.3960607051849365
    3. '   ' → logprob: -3.5210607051849365
    4. 'for' → logprob: -4.646060943603516
    5. '<|end|>' → logprob: -5.271060943603516
    6. '
' → logprob: -8.521060943603516
    7. '	for' → logprob: -8.771060943603516
    8. '<|end|>' → logprob: -9.396060943603516
    9. ')' → logprob: -11.271060943603516
    10. '    
' → logprob: -11.271060943603516

Token 115: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7357034683227539
    2. 'for' (adapté à ' for') → logprob: -0.7357034683227539
    3. '       ' → logprob: -3.360703468322754
    4. '   ' → logprob: -4.985703468322754
    5. '	for' → logprob: -9.110703468322754
    6. ' ' → logprob: -13.235703468322754
    7. '<|end|>' → logprob: -13.235703468322754
    8. '
' → logprob: -13.485703468322754
    9. '	   ' → logprob: -14.485703468322754
    10. '    
' → logprob: -14.985703468322754

Token 116: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04859384149312973
    2. 'i' → logprob: -3.048593759536743
    3. ' ' → logprob: -12.548593521118164
    4. '	i' → logprob: -13.298593521118164
    5. '   ' → logprob: -13.798593521118164
    6. '  ' → logprob: -16.173593521118164
    7. '_i' → logprob: -16.798593521118164
    8. '    ' → logprob: -17.048593521118164
    9. '```' → logprob: -17.173593521118164
    10. ' ' → logprob: -17.423593521118164

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009674415923655033
    2. 'in' → logprob: -7.125967502593994
    3. '<|end|>' → logprob: -9.125967025756836
    4. ' ' → logprob: -9.875967025756836
    5. '1' → logprob: -14.000967025756836
    6. '<|end|>' → logprob: -15.000967025756836
    7. '   ' → logprob: -15.125967025756836
    8. 'range' → logprob: -15.250967025756836
    9. '    ' → logprob: -15.250967025756836
    10. '	in' → logprob: -15.500967025756836

Token 118: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.025467397645115852
    2. 'range' → logprob: -3.7754673957824707
    3. '1' → logprob: -6.150467395782471
    4. ' ' → logprob: -9.400467872619629
    5. '(range' → logprob: -13.025467872619629
    6. '	range' → logprob: -13.900467872619629
    7. ' xrange' → logprob: -14.400467872619629
    8. ' in' → logprob: -15.525467872619629
    9. '   ' → logprob: -16.150466918945312
    10. '_range' → logprob: -16.525466918945312

Token 119: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05271117389202118
    2. '(n' → logprob: -3.552711248397827
    3. 'range' → logprob: -4.552711009979248
    4. '(range' → logprob: -4.552711009979248
    5. ' range' → logprob: -6.427711009979248
    6. '1' → logprob: -12.677711486816406
    7. 'n' → logprob: -13.927711486816406
    8. ' (' → logprob: -14.302711486816406
    9. '   ' → logprob: -14.677711486816406
    10. '_range' → logprob: -15.677711486816406

Token 120: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5307104587554932
    2. '1' → logprob: -1.2807104587554932
    3. ' range' → logprob: -2.155710458755493
    4. 'n' → logprob: -4.030710220336914
    5. ' n' → logprob: -8.280710220336914
    6. ' ' → logprob: -9.530710220336914
    7. '   ' → logprob: -10.030710220336914
    8. '(range' → logprob: -11.655710220336914
    9. '	range' → logprob: -12.780710220336914
    10. ')' → logprob: -13.280710220336914

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7192468643188477
    2. ',n' → logprob: -1.0942468643188477
    3. 'n' → logprob: -2.0942468643188477
    4. ' n' → logprob: -3.3442468643188477
    5. '   ' → logprob: -5.594246864318848
    6. '<|end|>' → logprob: -5.969246864318848
    7. ';n' → logprob: -5.969246864318848
    8. ' ,' → logprob: -6.094246864318848
    9. '(n' → logprob: -6.094246864318848
    10. '       ' → logprob: -6.594246864318848

Token 122: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38687410950660706
    2. ' n' → logprob: -1.1368740797042847
    3. '	n' → logprob: -13.136874198913574
    4. '   ' → logprob: -14.636874198913574
    5. '
' → logprob: -14.886874198913574
    6. ' ' → logprob: -16.386873245239258
    7. ')n' → logprob: -16.386873245239258
    8. '    ' → logprob: -16.761873245239258
    9. ' 
' → logprob: -16.886873245239258
    10. ' ' → logprob: -17.011873245239258

Token 123: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06200902536511421
    2. '):' → logprob: -2.81200909614563
    3. '       ' → logprob: -10.56200885772705
    4. '   ' → logprob: -12.06200885772705
    5. '):
' → logprob: -12.18700885772705
    6. ')' → logprob: -13.43700885772705
    7. '):

' → logprob: -14.18700885772705
    8. ':' → logprob: -14.43700885772705
    9. ' ):
' → logprob: -14.43700885772705
    10. ':
' → logprob: -14.68700885772705

Token 124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013579712249338627
    2. '       ' → logprob: -7.0013580322265625
    3. ' if' → logprob: -7.8763580322265625
    4. '
' → logprob: -11.126358032226562
    5. '            
' → logprob: -11.751358032226562
    6. '               ' → logprob: -11.876358032226562
    7. '   ' → logprob: -11.876358032226562
    8. '<|end|>' → logprob: -11.876358032226562
    9. 'if' → logprob: -12.126358032226562
    10. ':
' → logprob: -12.626358032226562

Token 125: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023141935467720032
    2. '           ' → logprob: -4.273141860961914
    3. 'if' (adapté à ' if') → logprob: -5.023141860961914
    4. '               ' → logprob: -7.023141860961914
    5. '            ' → logprob: -7.648141860961914
    6. ' ' → logprob: -8.023141860961914
    7. '        ' → logprob: -8.148141860961914
    8. '       ' → logprob: -8.398141860961914
    9. '```' → logprob: -10.273141860961914
    10. '                ' → logprob: -10.898141860961914

Token 126: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.4741722047328949
    2. 'matrix' → logprob: -0.9741722345352173
    3. '	matrix' → logprob: -10.099172592163086
    4. '           ' → logprob: -10.224172592163086
    5. '   ' → logprob: -11.599172592163086
    6. '(matrix' → logprob: -12.474172592163086
    7. '               ' → logprob: -13.474172592163086
    8. ' ' → logprob: -14.224172592163086
    9. '       ' → logprob: -14.474172592163086
    10. 'm' → logprob: -14.974172592163086

Token 127: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. '[' → logprob: -12.750006675720215
    3. 'i' → logprob: -12.750006675720215
    4. '[I' → logprob: -15.875006675720215
    5. '   ' → logprob: -16.1250057220459
    6. '][' → logprob: -16.2500057220459
    7. '[
' → logprob: -16.7500057220459
    8. '<|end|>' → logprob: -16.8750057220459
    9. '```' → logprob: -17.0000057220459
    10. '[j' → logprob: -17.6250057220459

Token 128: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.035886023193597794
    2. '[j' → logprob: -3.41088604927063
    3. '[' → logprob: -6.535885810852051
    4. '[i' → logprob: -7.660885810852051
    5. ']' → logprob: -8.78588581085205
    6. ' ][' → logprob: -9.78588581085205
    7. ')[' → logprob: -10.41088581085205
    8. '>[' → logprob: -10.78588581085205
    9. '"][' → logprob: -11.91088581085205
    10. ' [' → logprob: -11.91088581085205

Token 129: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.9795445849886164e-05
    2. ' j' → logprob: -9.750060081481934
    3. '[j' → logprob: -14.250060081481934
    4. '	j' → logprob: -14.875060081481934
    5. '
' → logprob: -15.875060081481934
    6. '][' → logprob: -15.875060081481934
    7. '   ' → logprob: -16.250059127807617
    8. '```' → logprob: -17.000059127807617
    9. ' ' → logprob: -17.125059127807617
    10. ',j' → logprob: -17.375059127807617

Token 130: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.27289018034935
    2. ']' → logprob: -1.5228902101516724
    3. ']>' → logprob: -4.272890090942383
    4. ' >' → logprob: -5.022890090942383
    5. ' ]' → logprob: -8.647890090942383
    6. '           ' → logprob: -11.522890090942383
    7. ' ' → logprob: -11.647890090942383
    8. '">' → logprob: -12.272890090942383
    9. '[' → logprob: -12.772890090942383
    10. '   ' → logprob: -12.897890090942383

Token 131: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.011050889268517494
    2. ' >' → logprob: -4.511050701141357
    3. ' ' → logprob: -13.886051177978516
    4. '[' → logprob: -14.136051177978516
    5. '   ' → logprob: -15.136051177978516
    6. '           ' → logprob: -15.511051177978516
    7. '">' → logprob: -15.761051177978516
    8. '>

' → logprob: -16.011051177978516
    9. '>
' → logprob: -16.511051177978516
    10. '       ' → logprob: -17.136051177978516

Token 132: ' tallest' (ID: 152167)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0013357169227674603
    2. ' tallest' → logprob: -6.626335620880127
    3. '	t' → logprob: -12.251336097717285
    4. ' tall' → logprob: -12.751336097717285
    5. '   ' → logprob: -14.626336097717285
    6. ' ' → logprob: -14.876336097717285
    7. '(t' → logprob: -14.876336097717285
    8. 'Tall' → logprob: -15.376336097717285
    9. ' t' → logprob: -15.626336097717285
    10. '`t' → logprob: -15.751336097717285

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6940932869911194
    2. ':
' → logprob: -0.6940932869911194
    3. '):
' → logprob: -7.819093227386475
    4. '               ' → logprob: -7.944093227386475
    5. '           ' → logprob: -9.319093704223633
    6. ' :
' → logprob: -10.069093704223633
    7. ':t' → logprob: -11.194093704223633
    8. '):' → logprob: -11.694093704223633
    9. ':

' → logprob: -11.819093704223633
    10. ':
' → logprob: -12.069093704223633

Token 134: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06498656421899796
    2. ' tallest' → logprob: -3.43998646736145
    3. '           ' → logprob: -3.81498646736145
    4. 't' → logprob: -5.314986705780029
    5. ':
' → logprob: -6.814986705780029
    6. ':t' → logprob: -7.439986705780029
    7. ':' → logprob: -7.689986705780029
    8. ' tall' → logprob: -8.314986228942871
    9. '	t' → logprob: -8.439986228942871
    10. ',t' → logprob: -8.689986228942871

Token 135: ' tallest' (ID: 152167)
  Prédit: ' tallest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tallest' → logprob: -0.07159772515296936
    2. 't' → logprob: -2.6965978145599365
    3. ' matrix' → logprob: -7.196597576141357
    4. '               ' → logprob: -7.821597576141357
    5. 'matrix' → logprob: -8.196598052978516
    6. '   ' → logprob: -10.196598052978516
    7. '           ' → logprob: -10.321598052978516
    8. '	t' → logprob: -10.446598052978516
    9. ' tall' → logprob: -10.571598052978516
    10. ' t' → logprob: -10.696598052978516

Token 136: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692873179912567
    2. ' =' → logprob: -2.1269288063049316
    3. '=t' → logprob: -14.751928329467773
    4. '=

' → logprob: -15.501928329467773
    5. '=m' → logprob: -17.501928329467773
    6. '=
' → logprob: -18.126928329467773
    7. '＝' → logprob: -18.626928329467773
    8. '=cut' → logprob: -19.501928329467773
    9. '=int' → logprob: -19.626928329467773
    10. 't' → logprob: -19.751928329467773

Token 137: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.01417174469679594
    2. 'matrix' → logprob: -4.264171600341797
    3. '	matrix' → logprob: -12.014171600341797
    4. ' matriz' → logprob: -14.264171600341797
    5. ' ' → logprob: -14.639171600341797
    6. ' ' → logprob: -14.764171600341797
    7. '(matrix' → logprob: -15.014171600341797
    8. '.matrix' → logprob: -15.639171600341797
    9. ' m' → logprob: -16.889171600341797
    10. '_matrix' → logprob: -17.014171600341797

Token 138: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -11.875009536743164
    3. '[j' → logprob: -13.500009536743164
    4. 'i' → logprob: -14.750009536743164
    5. '```' → logprob: -15.625009536743164
    6. ' [' → logprob: -16.500009536743164
    7. '   ' → logprob: -16.750009536743164
    8. '[I' → logprob: -16.875009536743164
    9. '{i' → logprob: -17.250009536743164
    10. '[n' → logprob: -17.250009536743164

Token 139: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0033302835654467344
    2. '[i' → logprob: -6.003330230712891
    3. '[j' → logprob: -7.253330230712891
    4. ' ][' → logprob: -9.87833023071289
    5. ')[' → logprob: -10.62833023071289
    6. '   ' → logprob: -11.00333023071289
    7. '       ' → logprob: -11.12833023071289
    8. ']' → logprob: -11.50333023071289
    9. '           ' → logprob: -11.62833023071289
    10. 'i' → logprob: -12.25333023071289

Token 140: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.107425062713446e-06
    2. ' j' → logprob: -12.000006675720215
    3. '[j' → logprob: -14.250006675720215
    4. 'i' → logprob: -16.37500762939453
    5. '	j' → logprob: -17.00000762939453
    6. '   ' → logprob: -17.62500762939453
    7. '$j' → logprob: -18.00000762939453
    8. '
' → logprob: -18.37500762939453
    9. '```' → logprob: -18.50000762939453
    10. ' ' → logprob: -18.62500762939453

Token 141: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025592572055757046
    2. '       ' → logprob: -6.127559185028076
    3. '<|end|>' → logprob: -8.752559661865234
    4. '   ' → logprob: -9.377559661865234
    5. ')
' → logprob: -9.752559661865234
    6. ')return' → logprob: -11.252559661865234
    7. '}' → logprob: -11.752559661865234
    8. ']' → logprob: -11.752559661865234
    9. '```' → logprob: -11.752559661865234
    10. '<|end|>' → logprob: -11.752559661865234

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010828252416104078
    2. '   ' → logprob: -7.251082897186279
    3. 't' → logprob: -8.126082420349121
    4. '
' → logprob: -10.126082420349121
    5. '    
' → logprob: -12.126082420349121
    6. '	t' → logprob: -12.251082420349121
    7. ')t' → logprob: -12.251082420349121
    8. ',' → logprob: -12.751082420349121
    9. '        
' → logprob: -12.751082420349121
    10. '           ' → logprob: -12.876082420349121

Token 143: ' tallest' (ID: 152167)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07117117196321487
    2. '   ' → logprob: -2.696171283721924
    3. ' tall' → logprob: -7.196171283721924
    4. ' tallest' → logprob: -8.321170806884766
    5. '	t' → logprob: -9.071170806884766
    6. '
' → logprob: -10.696170806884766
    7. ')t' → logprob: -10.946170806884766
    8. '  ' → logprob: -11.196170806884766
    9. '       ' → logprob: -11.196170806884766
    10. '`t' → logprob: -11.321170806884766

Token 144: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.001362020499072969
    2. '.append' → logprob: -6.751361846923828
    3. 'in' → logprob: -9.626361846923828
    4. '_t' → logprob: -10.376361846923828
    5. '   ' → logprob: -10.626361846923828
    6. 't' → logprob: -11.001361846923828
    7. '=' → logprob: -11.501361846923828
    8. '_' → logprob: -11.751361846923828
    9. 'In' → logprob: -12.126361846923828
    10. '_to' → logprob: -13.001361846923828

Token 145: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.07895874977111816
    2. 'col' → logprob: -2.578958749771118
    3. '_' → logprob: -10.453958511352539
    4. 't' → logprob: -11.953958511352539
    5. '_c' → logprob: -12.078958511352539
    6. '[col' → logprob: -12.328958511352539
    7. '_co' → logprob: -12.703958511352539
    8. ' col' → logprob: -12.703958511352539
    9. '_column' → logprob: -12.828958511352539
    10. 'column' → logprob: -12.828958511352539

Token 146: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12695646286010742
    2. '.' → logprob: -2.1269564628601074
    3. '.app' → logprob: -11.001956939697266
    4. 'append' → logprob: -12.126956939697266
    5. '.ap' → logprob: -13.376956939697266
    6. ' .' → logprob: -13.876956939697266
    7. '.
' → logprob: -14.376956939697266
    8. '       ' → logprob: -14.751956939697266
    9. '.extend' → logprob: -14.751956939697266
    10. '_append' → logprob: -14.751956939697266

Token 147: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00020520923135336488
    2. '(' → logprob: -8.500205039978027
    3. 't' → logprob: -13.625205039978027
    4. '(short' → logprob: -14.875205039978027
    5. ' (' → logprob: -16.000205993652344
    6. '(T' → logprob: -19.000205993652344
    7. '(long' → logprob: -19.125205993652344
    8. '(
' → logprob: -19.500205993652344
    9. '	t' → logprob: -19.500205993652344
    10. ' tall' → logprob: -19.750205993652344

Token 148: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -8.895480277715251e-06
    2. 'aller' → logprob: -13.125008583068848
    3. 'allet' → logprob: -13.125008583068848
    4. 'a' → logprob: -13.250008583068848
    5. 'alle' → logprob: -14.250008583068848
    6. 'ax' → logprob: -14.750008583068848
    7. 'ost' → logprob: -14.875008583068848
    8. 'allist' → logprob: -14.875008583068848
    9. 'atrix' → logprob: -15.000008583068848
    10. 'al' → logprob: -15.500008583068848

Token 149: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.09831418842077255
    2. ')' → logprob: -2.4733142852783203
    3. '])' → logprob: -4.84831428527832
    4. '[' → logprob: -8.09831428527832
    5. '))' → logprob: -8.09831428527832
    6. ']' → logprob: -8.34831428527832
    7. ' tallest' → logprob: -8.84831428527832
    8. '_in' → logprob: -9.34831428527832
    9. 'st' → logprob: -9.72331428527832
    10. 'lest' → logprob: -10.09831428527832

Token 150: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.24310302757658e-05
    2. '   ' → logprob: -10.125072479248047
    3. ')
' → logprob: -10.750072479248047
    4. ')

' → logprob: -12.000072479248047
    5. ' )' → logprob: -12.625072479248047
    6. '#' → logprob: -15.000072479248047
    7. '
' → logprob: -15.000072479248047
    8. ')n' → logprob: -15.250072479248047
    9. ']' → logprob: -16.000072479248047
    10. ')#' → logprob: -16.750072479248047

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07332072407007217
    2. '    
' → logprob: -3.5733206272125244
    3. '
' → logprob: -3.8233206272125244
    4. 'found' → logprob: -4.3233208656311035
    5. 's' → logprob: -6.3233208656311035
    6. ' found' → logprob: -6.9483208656311035
    7. '  
' → logprob: -7.0733208656311035
    8. 'for' → logprob: -7.1983208656311035
    9. '#' → logprob: -7.4483208656311035
    10. 'result' → logprob: -8.073320388793945

Token 152: ' result' (ID: 1534)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -1.0650798082351685
    2. 's' → logprob: -1.5650798082351685
    3. '   ' → logprob: -1.9400798082351685
    4. '#' → logprob: -2.690079689025879
    5. 'l' → logprob: -2.815079689025879
    6. 'flag' → logprob: -3.440079689025879
    7. 'c' → logprob: -4.065079689025879
    8. 'count' → logprob: -4.190079689025879
    9. 'for' → logprob: -4.190079689025879
    10. 'result' (adapté à ' result') → logprob: -4.190079689025879

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08102276921272278
    2. '=' → logprob: -2.5810227394104004
    3. '_' → logprob: -6.3310227394104
    4. 's' → logprob: -8.581023216247559
    5. '_found' → logprob: -9.206023216247559
    6. ':' → logprob: -10.956023216247559
    7. ' ' → logprob: -11.331023216247559
    8. 'found' → logprob: -12.081023216247559
    9. '_points' → logprob: -12.581023216247559
    10. '   ' → logprob: -13.081023216247559

Token 154: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.031171627342700958
    2. ' []' → logprob: -3.7811715602874756
    3. '[]
' → logprob: -5.531171798706055
    4. 'None' → logprob: -6.406171798706055
    5. 'False' → logprob: -6.906171798706055
    6. '0' → logprob: -7.281171798706055
    7. ' None' → logprob: -8.531171798706055
    8. '"' → logprob: -9.031171798706055
    9. '[' → logprob: -9.281171798706055
    10. ' False' → logprob: -10.031171798706055

Token 155: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.023454874753952026
    2. '[]
' → logprob: -4.398454666137695
    3. 'False' → logprob: -5.273454666137695
    4. 'None' → logprob: -5.648454666137695
    5. '0' → logprob: -6.648454666137695
    6. 'set' → logprob: -8.398454666137695
    7. '[]

' → logprob: -8.648454666137695
    8. '"' → logprob: -8.773454666137695
    9. '""' → logprob: -8.898454666137695
    10. '[' → logprob: -9.023454666137695

Token 156: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4772172272205353
    2. '
' → logprob: -0.9772171974182129
    3. ' for' → logprob: -6.477217197418213
    4. '    
' → logprob: -7.227217197418213
    5. 'for' → logprob: -7.602217197418213
    6. '<|end|>' → logprob: -9.102217674255371
    7. '  
' → logprob: -9.227217674255371
    8. '   
' → logprob: -9.977217674255371
    9. ' 
' → logprob: -10.602217674255371
    10. '  ' → logprob: -10.727217674255371

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005680738016963005
    2. 'for' → logprob: -5.255680561065674
    3. ' for' → logprob: -8.005681037902832
    4. '
' → logprob: -9.255681037902832
    5. '    
' → logprob: -11.005681037902832
    6. '	for' → logprob: -14.380681037902832
    7. '   
' → logprob: -15.505681037902832
    8. '  
' → logprob: -15.755681037902832
    9. '       ' → logprob: -17.005680084228516
    10. 'found' → logprob: -17.130680084228516

Token 158: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06849123537540436
    2. ' for' → logprob: -2.818491220474243
    3. '   ' → logprob: -5.068491458892822
    4. 'found' → logprob: -8.693490982055664
    5. '
' → logprob: -10.693490982055664
    6. ' found' → logprob: -11.693490982055664
    7. '    
' → logprob: -12.318490982055664
    8. ' 
' → logprob: -13.318490982055664
    9. '	for' → logprob: -13.568490982055664
    10. 'count' → logprob: -14.443490982055664

Token 159: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22548939287662506
    2. 'i' → logprob: -1.6004893779754639
    3. ' ' → logprob: -9.975489616394043
    4. '	i' → logprob: -11.850489616394043
    5. '   ' → logprob: -11.975489616394043
    6. ' ' → logprob: -12.225489616394043
    7. '_' → logprob: -12.975489616394043
    8. ' row' → logprob: -13.725489616394043
    9. '_i' → logprob: -13.787989616394043
    10. 'row' → logprob: -13.850489616394043

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009914271533489227
    2. 'in' → logprob: -4.634914398193359
    3. ' ' → logprob: -8.88491439819336
    4. 'n' → logprob: -11.38491439819336
    5. '	in' → logprob: -12.38491439819336
    6. ',' → logprob: -13.25991439819336
    7. '<|end|>' → logprob: -15.00991439819336
    8. '   ' → logprob: -15.13491439819336
    9. '0' → logprob: -15.25991439819336
    10. 'range' → logprob: -15.38491439819336

Token 161: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031797364354133606
    2. ' range' → logprob: -5.753179550170898
    3. '(range' → logprob: -13.503179550170898
    4. ' ' → logprob: -15.128179550170898
    5. '   ' → logprob: -15.503179550170898
    6. '	range' → logprob: -16.8781795501709
    7. ')' → logprob: -17.1281795501709
    8. '  ' → logprob: -17.5031795501709
    9. '```' → logprob: -17.5031795501709
    10. '
' → logprob: -18.2531795501709

Token 162: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00036382899270392954
    2. 'n' → logprob: -8.125364303588867
    3. '(' → logprob: -9.625364303588867
    4. ' n' → logprob: -14.000364303588867
    5. ' (' → logprob: -14.250364303588867
    6. '(len' → logprob: -15.750364303588867
    7. '   ' → logprob: -16.250364303588867
    8. ')' → logprob: -17.250364303588867
    9. '(
' → logprob: -17.250364303588867
    10. ',n' → logprob: -19.125364303588867

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5765773057937622
    2. '):
' → logprob: -0.8265773057937622
    3. '   ' → logprob: -7.576577186584473
    4. '):
' → logprob: -9.451577186584473
    5. ':' → logprob: -10.701577186584473
    6. ')' → logprob: -11.826577186584473
    7. '       ' → logprob: -11.951577186584473
    8. ' ):' → logprob: -12.951577186584473
    9. 'n' → logprob: -13.326577186584473
    10. ' ' → logprob: -13.451577186584473

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04076986759901047
    2. '   ' → logprob: -3.2907698154449463
    3. ':' → logprob: -6.415770053863525
    4. ' for' → logprob: -7.165770053863525
    5. ' ' → logprob: -9.290769577026367
    6. '    ' → logprob: -9.665769577026367
    7. ':
' → logprob: -10.040769577026367
    8. '<|end|>' → logprob: -10.415769577026367
    9. '
' → logprob: -10.790769577026367
    10. 'for' → logprob: -11.165769577026367

Token 165: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4396960437297821
    2. '   ' → logprob: -1.3146960735321045
    3. 'for' (adapté à ' for') → logprob: -2.4396960735321045
    4. '	for' → logprob: -11.064696311950684
    5. ' ' → logprob: -12.314696311950684
    6. '       ' → logprob: -12.689696311950684
    7. '  ' → logprob: -15.064696311950684
    8. '    ' → logprob: -15.314696311950684
    9. '_for' → logprob: -15.689696311950684
    10. '   ' → logprob: -15.814696311950684

Token 166: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.061983708292245865
    2. ' j' → logprob: -2.811983823776245
    3. 'range' → logprob: -11.811984062194824
    4. 'n' → logprob: -12.311984062194824
    5. ' range' → logprob: -12.686984062194824
    6. '   ' → logprob: -14.311984062194824
    7. ' n' → logprob: -15.436984062194824
    8. ' ' → logprob: -15.811984062194824
    9. '	j' → logprob: -16.811983108520508
    10. '$j' → logprob: -17.561983108520508

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036076747346669436
    2. 'in' → logprob: -5.628607749938965
    3. ' ' → logprob: -12.628607749938965
    4. '   ' → logprob: -13.628607749938965
    5. '	in' → logprob: -13.753607749938965
    6. 'n' → logprob: -15.003607749938965
    7. ')' → logprob: -15.128607749938965
    8. '<|end|>' → logprob: -15.378607749938965
    9. '(' → logprob: -15.628607749938965
    10. '    ' → logprob: -15.753607749938965

Token 168: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25233134627342224
    2. ' range' → logprob: -1.5023313760757446
    3. '(range' → logprob: -8.502331733703613
    4. '(n' → logprob: -8.627331733703613
    5. '(' → logprob: -11.252331733703613
    6. 'n' → logprob: -12.252331733703613
    7. ' (' → logprob: -13.377331733703613
    8. ' n' → logprob: -15.377331733703613
    9. ' ' → logprob: -15.627331733703613
    10. '   ' → logprob: -15.752331733703613

Token 169: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008369654417037964
    2. 'range' → logprob: -5.008369445800781
    3. '(range' → logprob: -7.008369445800781
    4. ' range' → logprob: -7.383369445800781
    5. '(' → logprob: -9.008369445800781
    6. ' (' → logprob: -12.633369445800781
    7. 'n' → logprob: -14.383369445800781
    8. '   ' → logprob: -15.133369445800781
    9. '_range' → logprob: -15.633369445800781
    10. '[n' → logprob: -16.25836944580078

Token 170: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026648590341210365
    2. '):
' → logprob: -3.77664852142334
    3. ')' → logprob: -5.77664852142334
    4. ':' → logprob: -8.65164852142334
    5. '   ' → logprob: -9.90164852142334
    6. ' ):' → logprob: -10.65164852142334
    7. '):
' → logprob: -10.65164852142334
    8. '       ' → logprob: -11.40164852142334
    9. '):

' → logprob: -11.77664852142334
    10. ' ):
' → logprob: -13.90164852142334

Token 171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01645730622112751
    2. '       ' → logprob: -4.2664570808410645
    3. ' if' → logprob: -6.3914570808410645
    4. 'if' → logprob: -8.891457557678223
    5. ':' → logprob: -9.266457557678223
    6. '               ' → logprob: -9.891457557678223
    7. '            
' → logprob: -10.016457557678223
    8. '   ' → logprob: -10.141457557678223
    9. ' ' → logprob: -10.141457557678223
    10. ':
' → logprob: -10.266457557678223

Token 172: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8099220395088196
    2. ' if' → logprob: -0.9349220395088196
    3. '               ' → logprob: -2.059921979904175
    4. 'if' (adapté à ' if') → logprob: -3.434921979904175
    5. '       ' → logprob: -6.559922218322754
    6. ' ' → logprob: -7.309922218322754
    7. '   ' → logprob: -8.184922218322754
    8. '            ' → logprob: -8.809922218322754
    9. ' 
' → logprob: -9.559922218322754
    10. '            
' → logprob: -10.684922218322754

Token 173: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.10030394047498703
    2. 'matrix' → logprob: -2.350303888320923
    3. '	matrix' → logprob: -9.975303649902344
    4. '   ' → logprob: -10.850303649902344
    5. ' shortest' → logprob: -11.350303649902344
    6. '(matrix' → logprob: -11.975303649902344
    7. ' ' → logprob: -12.600303649902344
    8. 'short' → logprob: -12.850303649902344
    9. '    ' → logprob: -13.475303649902344
    10. '           ' → logprob: -13.600303649902344

Token 174: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0325924449716695e-05
    2. '[j' → logprob: -12.00001049041748
    3. ' [' → logprob: -13.12501049041748
    4. '[' → logprob: -13.50001049041748
    5. '[I' → logprob: -15.37501049041748
    6. '```' → logprob: -15.75001049041748
    7. '   ' → logprob: -15.87501049041748
    8. 'i' → logprob: -17.125009536743164
    9. '[
' → logprob: -17.375009536743164
    10. ')' → logprob: -17.500009536743164

Token 175: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2821432650089264
    2. '[j' → logprob: -1.407143235206604
    3. '[i' → logprob: -7.4071431159973145
    4. ' ][' → logprob: -8.907143592834473
    5. ']' → logprob: -9.032143592834473
    6. '[' → logprob: -9.907143592834473
    7. ')[' → logprob: -10.907143592834473
    8. ')][' → logprob: -11.157143592834473
    9. '   ' → logprob: -11.532143592834473
    10. ' [' → logprob: -11.657143592834473

Token 176: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.173704271830502e-06
    2. ' j' → logprob: -13.50000286102295
    3. '[j' → logprob: -14.12500286102295
    4. '][' → logprob: -14.75000286102295
    5. ']' → logprob: -14.87500286102295
    6. '   ' → logprob: -15.75000286102295
    7. '
' → logprob: -16.750003814697266
    8. '	j' → logprob: -17.125003814697266
    9. ' ' → logprob: -17.750003814697266
    10. '```' → logprob: -17.875003814697266

Token 177: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03367486596107483
    2. '==' → logprob: -3.408674955368042
    3. ' ' → logprob: -10.783675193786621
    4. ')' → logprob: -13.033675193786621
    5. ' ' → logprob: -13.033675193786621
    6. '=' → logprob: -13.783675193786621
    7. ']==' → logprob: -14.158675193786621
    8. ']' → logprob: -14.283675193786621
    9. ')==' → logprob: -14.658675193786621
    10. '```' → logprob: -15.283675193786621

Token 178: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4741223454475403
    2. ' ==' → logprob: -0.9741223454475403
    3. '=' → logprob: -10.849122047424316
    4. ' ' → logprob: -11.599122047424316
    5. ' ' → logprob: -12.849122047424316
    6. '>=' → logprob: -12.849122047424316
    7. '>' → logprob: -13.224122047424316
    8. '===' → logprob: -13.349122047424316
    9. '```' → logprob: -13.474122047424316
    10. ']==' → logprob: -13.724122047424316

Token 179: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -7.600714161526412e-05
    2. ' shortest' → logprob: -9.500076293945312
    3. ' short' → logprob: -14.625076293945312
    4. '(short' → logprob: -15.500076293945312
    5. '   ' → logprob: -16.250076293945312
    6. 'Shortest' → logprob: -16.375076293945312
    7. '	short' → logprob: -16.875076293945312
    8. '
' → logprob: -16.875076293945312
    9. '```' → logprob: -17.375076293945312
    10. 'shortcut' → logprob: -17.875076293945312

Token 180: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -3.547789674485102e-05
    2. 'in' → logprob: -10.375035285949707
    3. '_i' → logprob: -14.000035285949707
    4. 's' → logprob: -14.250035285949707
    5. '_' → logprob: -14.250035285949707
    6. '[i' → logprob: -14.875035285949707
    7. ' _' → logprob: -14.875035285949707
    8. ' in' → logprob: -15.375035285949707
    9. '
' → logprob: -16.125036239624023
    10. 'In' → logprob: -16.125036239624023

Token 181: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.00012833021173719317
    2. 'row' → logprob: -9.000128746032715
    3. '_in' → logprob: -13.250128746032715
    4. '[row' → logprob: -13.625128746032715
    5. '_' → logprob: -14.625128746032715
    6. ' row' → logprob: -15.125128746032715
    7. '_ROW' → logprob: -16.0001277923584
    8. '[i' → logprob: -16.0001277923584
    9. '_col' → logprob: -16.1251277923584
    10. 'in' → logprob: -16.1251277923584

Token 182: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16062752902507782
    2. '[j' → logprob: -1.9106274843215942
    3. '[' → logprob: -7.910627365112305
    4. ' [' → logprob: -10.910627365112305
    5. '[I' → logprob: -12.160627365112305
    6. '[
' → logprob: -12.785627365112305
    7. '   ' → logprob: -12.910627365112305
    8. '][' → logprob: -13.285627365112305
    9. '```' → logprob: -13.910627365112305
    10. '\[' → logprob: -14.410627365112305

Token 183: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.46962258219718933
    2. 'and' → logprob: -1.0946226119995117
    3. ']' → logprob: -3.3446226119995117
    4. ')' → logprob: -5.344622611999512
    5. ' ]' → logprob: -11.719622611999512
    6. '           ' → logprob: -11.844622611999512
    7. '               ' → logprob: -12.469622611999512
    8. ' )' → logprob: -12.469622611999512
    9. '       ' → logprob: -12.594622611999512
    10. '   ' → logprob: -12.594622611999512

Token 184: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011060204356908798
    2. 'and' → logprob: -4.5110602378845215
    3. ' ' → logprob: -12.261059761047363
    4. ' or' → logprob: -13.011059761047363
    5. '           ' → logprob: -13.136059761047363
    6. ' ' → logprob: -14.136059761047363
    7. '	and' → logprob: -14.261059761047363
    8. '   ' → logprob: -14.761059761047363
    9. '               ' → logprob: -15.011059761047363
    10. '            ' → logprob: -15.761059761047363

Token 185: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.6327752470970154
    2. ' matrix' → logprob: -0.7577752470970154
    3. '	matrix' → logprob: -9.88277530670166
    4. '   ' → logprob: -10.38277530670166
    5. '           ' → logprob: -10.38277530670166
    6. 't' → logprob: -10.50777530670166
    7. ' ' → logprob: -11.50777530670166
    8. '(matrix' → logprob: -12.13277530670166
    9. '  ' → logprob: -12.63277530670166
    10. ' tallest' → logprob: -12.75777530670166

Token 186: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005001319805160165
    2. '[j' → logprob: -7.625500202178955
    3. '[' → logprob: -11.625499725341797
    4. '```' → logprob: -13.500499725341797
    5. ' [' → logprob: -14.500499725341797
    6. 'i' → logprob: -15.000499725341797
    7. '[][' → logprob: -15.125499725341797
    8. '][' → logprob: -15.375499725341797
    9. '[
' → logprob: -15.875499725341797
    10. '   ' → logprob: -16.500499725341797

Token 187: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008700136095285416
    2. '[j' → logprob: -4.758700370788574
    3. ']' → logprob: -9.883700370788574
    4. ' ][' → logprob: -10.758700370788574
    5. '   ' → logprob: -12.258700370788574
    6. '       ' → logprob: -12.758700370788574
    7. '[' → logprob: -13.133700370788574
    8. ']][' → logprob: -14.633700370788574
    9. '```' → logprob: -14.883700370788574
    10. '           ' → logprob: -15.133700370788574

Token 188: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0683535037969705e-05
    2. ' j' → logprob: -11.50001049041748
    3. '[j' → logprob: -15.12501049041748
    4. '
' → logprob: -17.000011444091797
    5. '   ' → logprob: -17.000011444091797
    6. ' ' → logprob: -17.125011444091797
    7. ':j' → logprob: -17.375011444091797
    8. '	j' → logprob: -17.625011444091797
    9. '```' → logprob: -17.750011444091797
    10. '$j' → logprob: -18.000011444091797

Token 189: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5234782099723816
    2. '==' → logprob: -0.8984782099723816
    3. ']==' → logprob: -8.523478507995605
    4. ']' → logprob: -9.523478507995605
    5. ')' → logprob: -10.523478507995605
    6. ' ' → logprob: -10.648478507995605
    7. ' ' → logprob: -12.023478507995605
    8. '=' → logprob: -12.023478507995605
    9. ')==' → logprob: -12.273478507995605
    10. '==
' → logprob: -12.773478507995605

Token 190: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11288406699895859
    2. '==' → logprob: -2.237884044647217
    3. ' <=' → logprob: -10.112884521484375
    4. '<=' → logprob: -11.612884521484375
    5. ' >=' → logprob: -12.112884521484375
    6. ' ' → logprob: -12.987884521484375
    7. '>=' → logprob: -13.237884521484375
    8. ' ' → logprob: -14.237884521484375
    9. '==
' → logprob: -14.612884521484375
    10. '```' → logprob: -14.862884521484375

Token 191: ' tallest' (ID: 152167)
  Prédit: ' tallest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tallest' → logprob: -0.3869570195674896
    2. 't' → logprob: -1.136957049369812
    3. '	t' → logprob: -9.636957168579102
    4. '`t' → logprob: -12.386957168579102
    5. ' tall' → logprob: -12.636957168579102
    6. '_t' → logprob: -12.761957168579102
    7. '(t' → logprob: -12.886957168579102
    8. ' ' → logprob: -13.011957168579102
    9. ' ' → logprob: -13.261957168579102
    10. '[t' → logprob: -13.886957168579102

Token 192: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -9.729906196298543e-06
    2. 'in' → logprob: -11.875009536743164
    3. 'In' → logprob: -14.500009536743164
    4. ' _' → logprob: -14.500009536743164
    5. 't' → logprob: -14.750009536743164
    6. '_' → logprob: -15.125009536743164
    7. '   ' → logprob: -15.750009536743164
    8. ' in' → logprob: -15.875009536743164
    9. '[' → logprob: -16.000009536743164
    10. ' ' → logprob: -16.250009536743164

Token 193: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.005951910279691219
    2. 'col' → logprob: -5.130951881408691
    3. 't' → logprob: -11.130951881408691
    4. '[col' → logprob: -13.255951881408691
    5. '_row' → logprob: -13.505951881408691
    6. '_column' → logprob: -13.755951881408691
    7. ' col' → logprob: -13.880951881408691
    8. 'column' → logprob: -14.130951881408691
    9. '	col' → logprob: -14.755951881408691
    10. '_' → logprob: -15.130951881408691

Token 194: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.630610641877865e-06
    2. '   ' → logprob: -12.750006675720215
    3. '][' → logprob: -13.625006675720215
    4. ' [' → logprob: -13.875006675720215
    5. '[' → logprob: -14.875006675720215
    6. '       ' → logprob: -15.250006675720215
    7. '[
' → logprob: -15.750006675720215
    8. '```' → logprob: -15.750006675720215
    9. 'j' → logprob: -15.875006675720215
    10. '[i' → logprob: -16.2500057220459

Token 195: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10231627523899078
    2. '):' → logprob: -2.352316379547119
    3. ':
' → logprob: -6.477316379547119
    4. '):
' → logprob: -7.977316379547119
    5. ']:' → logprob: -8.727315902709961
    6. '           ' → logprob: -10.852315902709961
    7. '       ' → logprob: -11.477315902709961
    8. '               ' → logprob: -11.602315902709961
    9. '}:' → logprob: -11.727315902709961
    10. ')' → logprob: -12.227315902709961

Token 196: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0045876032672822475
    2. ':
' → logprob: -5.504587650299072
    3. ':' → logprob: -8.129587173461914
    4. '
' → logprob: -9.254587173461914
    5. '           ' → logprob: -10.379587173461914
    6. '\n' → logprob: -10.504587173461914
    7. '):
' → logprob: -11.004587173461914
    8. '                
' → logprob: -11.629587173461914
    9. '                   ' → logprob: -12.004587173461914
    10. '              ' → logprob: -12.504587173461914

Token 197: ' result' (ID: 1534)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47825801372528076
    2. 'result' (adapté à ' result') → logprob: -1.2282580137252808
    3. ' result' → logprob: -2.7282581329345703
    4. '
' → logprob: -3.9782581329345703
    5. '           ' → logprob: -6.22825813293457
    6. 'print' → logprob: -7.47825813293457
    7. '       ' → logprob: -8.22825813293457
    8. '   ' → logprob: -8.60325813293457
    9. '                   ' → logprob: -9.35325813293457
    10. ' print' → logprob: -9.72825813293457

Token 198: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04916190728545189
    2. '+=' → logprob: -3.049161911010742
    3. ' =' → logprob: -8.299161911010742
    4. '+' → logprob: -8.424161911010742
    5. '=' → logprob: -9.174161911010742
    6. ' +' → logprob: -13.424161911010742
    7. ']+=' → logprob: -15.049161911010742
    8. ' ' → logprob: -16.049161911010742
    9. ' ==' → logprob: -16.299161911010742
    10. '   ' → logprob: -16.799161911010742

Token 199: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.14272983372211456
    2. ' matrix' → logprob: -2.0177297592163086
    3. '	matrix' → logprob: -10.267729759216309
    4. '1' → logprob: -12.267729759216309
    5. '   ' → logprob: -12.642729759216309
    6. '(matrix' → logprob: -12.892729759216309
    7. 'max' → logprob: -13.142729759216309
    8. 'mat' → logprob: -13.142729759216309
    9. ' ' → logprob: -13.642729759216309
    10. 'm' → logprob: -13.642729759216309

Token 200: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.500000953674316
    3. '[I' → logprob: -16.875
    4. 'i' → logprob: -17.125
    5. '```' → logprob: -17.375
    6. '[j' → logprob: -17.625
    7. '[
' → logprob: -17.75
    8. ' [' → logprob: -19.125
    9. '<|end|>' → logprob: -19.125
    10. '   ' → logprob: -19.25

Token 201: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.039054419845342636
    2. '][' → logprob: -3.2890543937683105
    3. '[j' → logprob: -7.5390543937683105
    4. '[' → logprob: -8.289054870605469
    5. 'i' → logprob: -9.039054870605469
    6. ']' → logprob: -9.789054870605469
    7. '       ' → logprob: -11.164054870605469
    8. '```' → logprob: -11.539054870605469
    9. '           ' → logprob: -12.289054870605469
    10. '[I' → logprob: -12.664054870605469

Token 202: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002624086628202349
    2. 'i' → logprob: -8.500262260437012
    3. '[j' → logprob: -10.000262260437012
    4. '][' → logprob: -11.875262260437012
    5. '[i' → logprob: -12.500262260437012
    6. ' j' → logprob: -13.500262260437012
    7. ']' → logprob: -14.375262260437012
    8. '   ' → logprob: -16.000263214111328
    9. '	j' → logprob: -16.250263214111328
    10. ')' → logprob: -16.375263214111328

Token 203: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34103256464004517
    2. '               ' → logprob: -1.8410325050354004
    3. '
' → logprob: -2.4660325050354004
    4. '           ' → logprob: -4.2160325050354
    5. ')
' → logprob: -4.3410325050354
    6. '<|end|>' → logprob: -4.4660325050354
    7. '                   ' → logprob: -6.0910325050354
    8. ']' → logprob: -6.3410325050354
    9. '       ' → logprob: -7.7160325050354
    10. '<|end|>' → logprob: -8.091032981872559

Token 204: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7058988809585571
    2. '   ' → logprob: -0.7058988809585571
    3. 'print' → logprob: -4.955898761749268
    4. '    
' → logprob: -5.205898761749268
    5. '
' → logprob: -9.330899238586426
    6. '  
' → logprob: -10.705899238586426
    7. '```' → logprob: -11.705899238586426
    8. ' print' → logprob: -12.205899238586426
    9. '\n' → logprob: -12.705899238586426
    10. '            
' → logprob: -12.705899238586426

Token 205: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5762521624565125
    2. '   ' → logprob: -0.8262521624565125
    3. '
' → logprob: -8.451251983642578
    4. '    
' → logprob: -9.951251983642578
    5. ' print' → logprob: -9.951251983642578
    6. '```' → logprob: -12.701251983642578
    7. '	print' → logprob: -16.076251983642578
    8. '  
' → logprob: -16.201251983642578
    9. '
' → logprob: -16.451251983642578
    10. '#print' → logprob: -16.826251983642578

Token 206: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030357223004102707
    2. '(result' → logprob: -3.5303571224212646
    3. '()' → logprob: -8.155357360839844
    4. '('' → logprob: -8.280357360839844
    5. '("("' → logprob: -9.780357360839844
    6. '("' → logprob: -13.030357360839844
    7. '(
' → logprob: -13.280357360839844
    8. '((' → logprob: -13.405357360839844
    9. ' (' → logprob: -14.030357360839844
    10. 'result' → logprob: -14.405357360839844

Token 207: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.375
    3. ')`' → logprob: -17.0
    4. ')
' → logprob: -17.125
    5. '()' → logprob: -18.5
    6. '))' → logprob: -18.875
    7. '())' → logprob: -19.0
    8. '')' → logprob: -19.25
    9. '`)' → logprob: -19.5
    10. '   ' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 205
Tokens correctement prédits (1ère position, stricte): 110
Tokens correctement prédits (1ère position, avec adaptation): 115
Tokens correctement prédits (top 10): 188
Précision stricte (1ère position): 53.66%
Précision adaptée (1ère position): 56.10%
Précision (top 10): 91.71%
================================================================================
