================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

def dijkstra(n, graph, start):
    dist = [float('inf')] * n
    dist[start] = 0
    count = [0] * n
    count[start] = 1
    heap = [(0, start)]
    while heap:
        d, u = heapq.heappop(heap)
        if d > dist[u]:
            continue
        for v, w in graph[u]:
            nd = d + w
            if nd < dist[v]:
                dist[v] = nd
                count[v] = count[u]
                heapq.heappush(heap, (nd, v))
            elif nd == dist[v]:
                count[v] += count[u]
    return dist, count

def main():
    input = sys.stdin.readline
    while True:
        n, m, p = map(int, input().split())
        if n == 0 and m == 0 and p == 0:
            break
        graph = [[] for _ in range(n)]
        for _ in range(m):
            u,v,w = map(int, input().split())
            graph[u].append((v,w))
            graph[v].append((u,w))
        children = [int(input()) for _ in range(p)]

        dist_start, cnt_start = dijkstra(n, graph, 0)
        dist_end, cnt_end = dijkstra(n, graph, n-1)
        total_paths = cnt_start[n-1]
        res = []
        for c in children:
            # A node c is on a shortest path if dist_start[c] + dist_end[c] == dist_start[n-1]
            # Probability that node c is on chosen path = (number of shortest paths going through c) / total_paths
            # number of shortest paths through c = cnt_start[c] * cnt_end[c] if on shortest path
            if dist_start[c] + dist_end[c] == dist_start[n-1]:
                prob = cnt_start[c] * cnt_end[c] / total_paths
            else:
                prob = 0.0
            res.append(prob)
        print('\n'.join(map(str, res))+'\n')

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975533962249756
    2. '\n' → logprob: -0.8225533962249756
    3. '<|end|>' → logprob: -3.5725533962249756
    4. '\' → logprob: -4.322553634643555
    5. 'newline' → logprob: -5.072553634643555
    6. 'import' → logprob: -5.322553634643555
    7. '<|end|>' → logprob: -5.947553634643555
    8. '```' → logprob: -6.572553634643555
    9. '' → logprob: -6.822553634643555
    10. '
' → logprob: -6.947553634643555

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -1.259079363080673e-05
    2. 'os' → logprob: -11.375012397766113
    3. ' math' → logprob: -14.875012397766113
    4. '"os' → logprob: -15.250012397766113
    5. ' re' → logprob: -15.875012397766113
    6. ' json' → logprob: -16.00001335144043
    7. '_os' → logprob: -17.00001335144043
    8. '	os' → logprob: -17.00001335144043
    9. ' ' → logprob: -17.25001335144043
    10. ' argparse' → logprob: -17.25001335144043

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.8444881536415778e-05
    2. '.' → logprob: -10.750028610229492
    3. '#' → logprob: -13.875028610229492
    4. '_' → logprob: -14.000028610229492
    5. 'ify' → logprob: -14.500028610229492
    6. 'space' → logprob: -14.500028610229492
    7. 's' → logprob: -14.750028610229492
    8. '

' → logprob: -15.000028610229492
    9. ')' → logprob: -15.000028610229492
    10. 'queue' → logprob: -15.000028610229492

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.26779332756996155
    2. '\n' → logprob: -2.3927934169769287
    3. '
' → logprob: -2.6427934169769287
    4. '\' → logprob: -3.2677934169769287
    5. '.
' → logprob: -4.51779317855835
    6. '

' → logprob: -5.01779317855835
    7. 'import' → logprob: -5.64279317855835
    8. '<|end|>' → logprob: -6.01779317855835
    9. '```' → logprob: -6.14279317855835
    10. '.

' → logprob: -6.39279317855835

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7963531613349915
    2. '\' → logprob: -2.1713531017303467
    3. '
' → logprob: -2.2963531017303467
    4. '\n' → logprob: -2.4213531017303467
    5. 'def' → logprob: -2.5463531017303467
    6. 'import' → logprob: -3.0463531017303467
    7. '```' → logprob: -3.0463531017303467
    8. 'from' → logprob: -3.7963531017303467
    9. '' → logprob: -4.421353340148926
    10. 'class' → logprob: -4.671353340148926

Token 8: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001432024291716516
    2. ' a' → logprob: -7.251431941986084
    3. ' find' → logprob: -8.626432418823242
    4. ' space' → logprob: -9.251432418823242
    5. '_' → logprob: -9.626432418823242
    6. ' ' → logprob: -10.126432418823242
    7. ' process' → logprob: -10.251432418823242
    8. ' heap' → logprob: -10.251432418823242
    9. ' A' → logprob: -10.501432418823242
    10. ' merge' → logprob: -10.626432418823242

Token 9: 'ijkstra' (ID: 124290)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3682878315448761
    2. 'ijkstra' → logprob: -1.3682878017425537
    3. 'i' → logprob: -3.6182878017425537
    4. 'ij' → logprob: -4.243288040161133
    5. 'ijk' → logprob: -4.493288040161133
    6. 'ef' → logprob: -7.618288040161133
    7. '_e' → logprob: -8.368288040161133
    8. '_' → logprob: -8.743288040161133
    9. '_i' → logprob: -9.868288040161133
    10. 'efs' → logprob: -10.368288040161133

Token 10: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002613825025036931
    2. '_' → logprob: -6.2526140213012695
    3. 'def' → logprob: -9.00261402130127
    4. ' (' → logprob: -9.12761402130127
    5. '(
' → logprob: -9.50261402130127
    6. '<|end|>' → logprob: -10.25261402130127
    7. '<|end|>' → logprob: -10.37761402130127
    8. '(node' → logprob: -10.62761402130127
    9. '(defun' → logprob: -10.75261402130127
    10. '```' → logprob: -10.87761402130127

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000646433443762362
    2. ' ,' → logprob: -7.375646591186523
    3. ')' → logprob: -11.875646591186523
    4. '):' → logprob: -12.000646591186523
    5. ',
' → logprob: -13.250646591186523
    6. '‌,' → logprob: -14.000646591186523
    7. ',int' → logprob: -14.125646591186523
    8. ',

' → logprob: -14.250646591186523
    9. '_,' → logprob: -14.875646591186523
    10. ',node' → logprob: -15.000646591186523

Token 12: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.17100518941879272
    2. 'graph' → logprob: -2.2960052490234375
    3. ' start' → logprob: -3.2960052490234375
    4. ' edges' → logprob: -4.2960052490234375
    5. ' s' → logprob: -6.4210052490234375
    6. 'edges' → logprob: -6.7960052490234375
    7. 'start' → logprob: -7.0460052490234375
    8. ' source' → logprob: -7.5460052490234375
    9. ' adjacency' → logprob: -7.6710052490234375
    10. ' ' → logprob: -7.9210052490234375

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032368937972933054
    2. '):' → logprob: -5.753236770629883
    3. ' ,' → logprob: -10.503236770629883
    4. ')' → logprob: -10.628236770629883
    5. ',n' → logprob: -13.753236770629883
    6. ',
' → logprob: -14.253236770629883
    7. ':' → logprob: -14.378236770629883
    8. ',node' → logprob: -14.378236770629883
    9. '[' → logprob: -14.628236770629883
    10. ' ):' → logprob: -14.878236770629883

Token 14: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.5838077068328857
    2. 'start' → logprob: -0.8338077068328857
    3. ' source' → logprob: -6.083807945251465
    4. 'src' → logprob: -6.208807945251465
    5. 's' → logprob: -6.583807945251465
    6. 'source' → logprob: -6.833807945251465
    7. ' src' → logprob: -7.208807945251465
    8. ' s' → logprob: -8.333807945251465
    9. '   ' → logprob: -10.458807945251465
    10. ' ' → logprob: -10.458807945251465

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03396793082356453
    2. ',' → logprob: -3.408967971801758
    3. ')' → logprob: -8.158967971801758
    4. ' ):' → logprob: -11.408967971801758
    5. '):
' → logprob: -11.533967971801758
    6. ':' → logprob: -11.658967971801758
    7. '```' → logprob: -13.283967971801758
    8. '):
' → logprob: -13.533967971801758
    9. ' ,' → logprob: -13.908967971801758
    10. '),' → logprob: -15.408967971801758

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014108850620687008
    2. 'dist' → logprob: -4.389108657836914
    3. ' dist' → logprob: -7.139108657836914
    4. ' distances' → logprob: -8.014108657836914
    5. '	dist' → logprob: -8.889108657836914
    6. 'distance' → logprob: -9.264108657836914
    7. '    ' → logprob: -9.764108657836914
    8. '    
' → logprob: -9.764108657836914
    9. '```' → logprob: -10.139108657836914
    10. ' ' → logprob: -10.514108657836914

Token 17: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.02855931967496872
    2. '   ' → logprob: -4.02855920791626
    3. ' dist' → logprob: -4.65355920791626
    4. ' distances' → logprob: -7.52855920791626
    5. 'distance' → logprob: -8.528559684753418
    6. '```' → logprob: -10.278559684753418
    7. 'INF' → logprob: -11.403559684753418
    8. '	dist' → logprob: -11.653559684753418
    9. ' distance' → logprob: -11.778559684753418
    10. ' ' → logprob: -11.903559684753418

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06603597849607468
    2. '[' → logprob: -3.1910359859466553
    3. '=' → logprob: -3.8160359859466553
    4. '[]' → logprob: -8.441036224365234
    5. '=[]' → logprob: -9.441036224365234
    6. ',' → logprob: -9.566036224365234
    7. ' ' → logprob: -9.566036224365234
    8. '   ' → logprob: -9.816036224365234
    9. '[:]' → logprob: -9.816036224365234
    10. 's' → logprob: -9.941036224365234

Token 19: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.08072426170110703
    2. '[' → logprob: -2.5807242393493652
    3. '{' → logprob: -6.955724239349365
    4. '[int' → logprob: -8.330724716186523
    5. ' {' → logprob: -8.580724716186523
    6. '[n' → logprob: -8.705724716186523
    7. '[node' → logprob: -8.955724716186523
    8. '[start' → logprob: -9.955724716186523
    9. '[len' → logprob: -11.205724716186523
    10. '[src' → logprob: -11.330724716186523

Token 20: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0009302830439992249
    2. ' float' → logprob: -7.000930309295654
    3. '   ' → logprob: -11.625929832458496
    4. '10' → logprob: -11.750929832458496
    5. 'sys' → logprob: -14.250929832458496
    6. ' ' → logprob: -14.500929832458496
    7. '1' → logprob: -15.375929832458496
    8. 'int' → logprob: -15.875929832458496
    9. '(float' → logprob: -15.875929832458496
    10. '	float' → logprob: -16.375930786132812

Token 21: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0003384422743692994
    2. '(' → logprob: -8.250338554382324
    3. ''' → logprob: -10.750338554382324
    4. '(in' → logprob: -10.875338554382324
    5. '("' → logprob: -11.375338554382324
    6. ''in' → logprob: -11.500338554382324
    7. 'inf' → logprob: -11.750338554382324
    8. '('+' → logprob: -13.750338554382324
    9. ' ('' → logprob: -14.125338554382324
    10. '   ' → logprob: -14.125338554382324

Token 22: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.981667537620524e-06
    2. 'in' → logprob: -13.250001907348633
    3. 'info' → logprob: -15.625001907348633
    4. ' inf' → logprob: -17.750001907348633
    5. '_inf' → logprob: -17.875001907348633
    6. 'Inf' → logprob: -18.000001907348633
    7. '-inf' → logprob: -18.375001907348633
    8. ''in' → logprob: -18.375001907348633
    9. ''' → logprob: -18.750001907348633
    10. 'INF' → logprob: -18.875001907348633

Token 23: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.21441033482551575
    2. ')' → logprob: -1.9644103050231934
    3. '')' → logprob: -3.2144103050231934
    4. ')]' → logprob: -4.964410305023193
    5. ']' → logprob: -5.339410305023193
    6. '('' → logprob: -7.464410305023193
    7. ''),' → logprob: -9.089410781860352
    8. ''' → logprob: -10.089410781860352
    9. '()' → logprob: -11.214410781860352
    10. '),' → logprob: -11.589410781860352

Token 24: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08427191525697708
    2. ',' → logprob: -2.9592719078063965
    3. '(' → logprob: -4.5842719078063965
    4. ' ]' → logprob: -4.7092719078063965
    5. ' for' → logprob: -5.4592719078063965
    6. ')' → logprob: -6.3342719078063965
    7. '()]' → logprob: -6.3342719078063965
    8. ']*' → logprob: -7.0842719078063965
    9. '   ' → logprob: -8.084272384643555
    10. '']' → logprob: -9.084272384643555

Token 25: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10131832212209702
    2. ' n' → logprob: -2.351318359375
    3. '(n' → logprob: -6.851318359375
    4. ' (' → logprob: -10.351318359375
    5. '(' → logprob: -10.851318359375
    6. '	n' → logprob: -13.601318359375
    7. ')n' → logprob: -15.476318359375
    8. '_n' → logprob: -16.226318359375
    9. ' ' → logprob: -16.476318359375
    10. '   ' → logprob: -17.101318359375

Token 26: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2690560519695282
    2. ')' → logprob: -3.0190560817718506
    3. '[' → logprob: -3.3940560817718506
    4. '\' → logprob: -3.3940560817718506
    5. '\n' → logprob: -3.6440560817718506
    6. '<|end|>' → logprob: -3.7690560817718506
    7. 'dist' → logprob: -4.3940558433532715
    8. '   ' → logprob: -4.8940558433532715
    9. '```' → logprob: -4.8940558433532715
    10. 'newline' → logprob: -5.0190558433532715

Token 27: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22895342111587524
    2. '   ' → logprob: -2.4789533615112305
    3. '[' → logprob: -2.7289533615112305
    4. '[start' → logprob: -3.3539533615112305
    5. ' dist' → logprob: -4.8539533615112305
    6. '	dist' → logprob: -5.6039533615112305
    7. '<|end|>' → logprob: -6.2289533615112305
    8. '
' → logprob: -6.9789533615112305
    9. '    
' → logprob: -7.1039533615112305
    10. ' ' → logprob: -7.1039533615112305

Token 28: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.25394347310066223
    2. 'start' → logprob: -2.50394344329834
    3. ' ' → logprob: -2.62894344329834
    4. ' dist' → logprob: -3.00394344329834
    5. ' start' → logprob: -4.62894344329834
    6. ''' → logprob: -6.62894344329834
    7. ')' → logprob: -6.75394344329834
    8. '```' → logprob: -6.87894344329834
    9. '[start' → logprob: -7.00394344329834
    10. '  ' → logprob: -7.25394344329834

Token 29: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.008631941862404346
    2. '[' → logprob: -4.758631706237793
    3. '```' → logprob: -12.383631706237793
    4. '[end' → logprob: -12.758631706237793
    5. '[src' → logprob: -12.883631706237793
    6. '\[' → logprob: -14.133631706237793
    7. '[s' → logprob: -14.508631706237793
    8. ' [' → logprob: -14.508631706237793
    9. '[data' → logprob: -14.508631706237793
    10. 'start' → logprob: -14.758631706237793

Token 30: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001705175032839179
    2. ' ]' → logprob: -6.376705169677734
    3. ']=' → logprob: -13.376705169677734
    4. ')' → logprob: -15.001705169677734
    5. ')]' → logprob: -15.126705169677734
    6. '=' → logprob: -15.376705169677734
    7. '`]' → logprob: -15.501705169677734
    8. ' ' → logprob: -16.126705169677734
    9. '[' → logprob: -16.626705169677734
    10. '']' → logprob: -17.251705169677734

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023261435329914093
    2. '=' → logprob: -3.773261547088623
    3. ' =
' → logprob: -11.898261070251465
    4. ' ' → logprob: -12.523261070251465
    5. ' =)' → logprob: -13.023261070251465
    6. ']' → logprob: -14.398261070251465
    7. ' ==' → logprob: -14.773261070251465
    8. ' ='' → logprob: -15.023261070251465
    9. ' ]' → logprob: -15.023261070251465
    10. ' |=' → logprob: -15.148261070251465

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '۰' → logprob: -19.25009536743164
    4. '   ' → logprob: -21.00009536743164
    5. ' ' → logprob: -21.37509536743164
    6. '```' → logprob: -21.62509536743164
    7. '00' → logprob: -21.87509536743164
    8. '０' → logprob: -21.87509536743164
    9. '٠' → logprob: -22.00009536743164
    10. '  ' → logprob: -22.50009536743164

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '۰' → logprob: -19.875
    4. '０' → logprob: -22.0
    5. '00' → logprob: -22.25
    6. '```' → logprob: -22.875
    7. '٠' → logprob: -22.875
    8. '   ' → logprob: -23.375
    9. '०' → logprob: -24.0
    10. '০' → logprob: -24.125

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09509305655956268
    2. '\n' → logprob: -2.970093011856079
    3. '' → logprob: -4.470093250274658
    4. '\' → logprob: -4.845093250274658
    5. '    
' → logprob: -4.845093250274658
    6. ' 
' → logprob: -5.095093250274658
    7. '   ' → logprob: -6.220093250274658
    8. '  
' → logprob: -6.595093250274658
    9. 'newline' → logprob: -6.845093250274658
    10. '   
' → logprob: -7.970093250274658

Token 35: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03739149495959282
    2. '   ' → logprob: -4.162391662597656
    3. '\n' → logprob: -4.787391662597656
    4. '    
' → logprob: -4.912391662597656
    5. '' → logprob: -6.037391662597656
    6. '  
' → logprob: -7.037391662597656
    7. '```' → logprob: -7.412391662597656
    8. ' 
' → logprob: -7.662391662597656
    9. '\' → logprob: -7.787391662597656
    10. '
' → logprob: -8.287391662597656

Token 36: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3241564631462097
    2. 'heap' → logprob: -1.9491565227508545
    3. '
' → logprob: -2.3241565227508545
    4. ' heap' → logprob: -4.074156284332275
    5. '```' → logprob: -4.824156284332275
    6. 'queue' → logprob: -5.449156284332275
    7. 'priority' → logprob: -5.824156284332275
    8. '    
' → logprob: -6.824156284332275
    9. 'stack' → logprob: -7.324156284332275
    10. 'import' → logprob: -7.324156284332275

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6960648894309998
    2. ' =' → logprob: -1.6960649490356445
    3. '[' → logprob: -1.8210649490356445
    4. 's' → logprob: -2.4460649490356445
    5. ',' → logprob: -2.8210649490356445
    6. '_heap' → logprob: -5.6960649490356445
    7. '_' → logprob: -6.0710649490356445
    8. '   ' → logprob: -6.1960649490356445
    9. '_queue' → logprob: -6.8210649490356445
    10. ')' → logprob: -8.196064949035645

Token 38: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5412120223045349
    2. '[' → logprob: -1.0412120819091797
    3. ' ' → logprob: -3.2912120819091797
    4. '0' → logprob: -3.6662120819091797
    5. ' {' → logprob: -7.29121208190918
    6. '1' → logprob: -7.41621208190918
    7. ' {}' → logprob: -7.79121208190918
    8. '{' → logprob: -9.04121208190918
    9. '{}' → logprob: -9.04121208190918
    10. ' []' → logprob: -10.16621208190918

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. ']' → logprob: -15.250005722045898
    4. 'float' → logprob: -15.250005722045898
    5. ')' → logprob: -17.0000057220459
    6. '۰' → logprob: -17.5000057220459
    7. ']int' → logprob: -18.2500057220459
    8. 'int' → logprob: -19.0000057220459
    9. '1' → logprob: -19.3750057220459
    10. '-' → logprob: -19.8750057220459

Token 40: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02060214802622795
    2. ' ]' → logprob: -3.895602226257324
    3. ']*' → logprob: -9.895602226257324
    4. ')' → logprob: -12.770602226257324
    5. ' for' → logprob: -13.020602226257324
    6. ' ' → logprob: -13.895602226257324
    7. ']*(' → logprob: -14.020602226257324
    8. ']int' → logprob: -14.270602226257324
    9. '](' → logprob: -15.395602226257324
    10. ' )' → logprob: -15.520602226257324

Token 41: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.060365608893335e-05
    2. ' n' → logprob: -10.125041007995605
    3. '(n' → logprob: -15.250041007995605
    4. '(' → logprob: -15.625041007995605
    5. '	n' → logprob: -16.87504005432129
    6. '   ' → logprob: -17.00004005432129
    7. ' (' → logprob: -18.62504005432129
    8. ' ' → logprob: -19.00004005432129
    9. '_n' → logprob: -20.00004005432129
    10. '<|end|>' → logprob: -20.25004005432129

Token 43: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.061476584523916245
    2. '   ' → logprob: -3.561476469039917
    3. '<|end|>' → logprob: -4.186476707458496
    4. 'heap' → logprob: -5.436476707458496
    5. '```' → logprob: -5.811476707458496
    6. '\n' → logprob: -6.311476707458496
    7. '    
' → logprob: -6.561476707458496
    8. ' 
' → logprob: -7.436476707458496
    9. 'import' → logprob: -7.561476707458496
    10. '
' → logprob: -7.561476707458496

Token 44: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.46157047152519226
    2. '\' → logprob: -1.7115705013275146
    3. '
' → logprob: -2.5865705013275146
    4. '```' → logprob: -3.5865705013275146
    5. ' 
' → logprob: -3.9615705013275146
    6. '   ' → logprob: -4.0865702629089355
    7. '<|end|>' → logprob: -4.0865702629089355
    8. '' → logprob: -5.0865702629089355
    9. '`' → logprob: -5.4615702629089355
    10. '    
' → logprob: -5.5865702629089355

Token 45: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.562088131904602
    2. '   ' → logprob: -1.062088131904602
    3. 'heap' → logprob: -3.0620880126953125
    4. '```' → logprob: -4.0620880126953125
    5. '`' → logprob: -5.5620880126953125
    6. 'queue' → logprob: -5.9370880126953125
    7. 'import' → logprob: -6.3120880126953125
    8. 'priority' → logprob: -6.5620880126953125
    9. 'pq' → logprob: -7.1870880126953125
    10. '0' → logprob: -7.1870880126953125

Token 46: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.004702703095972538
    2. '[' → logprob: -5.379702568054199
    3. '[end' → logprob: -9.8797025680542
    4. '=' → logprob: -11.3797025680542
    5. '```' → logprob: -12.3797025680542
    6. ' =' → logprob: -12.5047025680542
    7. '<|end|>' → logprob: -12.6297025680542
    8. '=start' → logprob: -13.3797025680542
    9. '[user' → logprob: -13.7547025680542
    10. 'start' → logprob: -13.7547025680542

Token 47: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013691288768313825
    2. ' ]' → logprob: -9.625137329101562
    3. '=' → logprob: -10.250137329101562
    4. ']=' → logprob: -10.375137329101562
    5. ' =' → logprob: -12.625137329101562
    6. ')' → logprob: -14.625137329101562
    7. ']+=' → logprob: -15.000137329101562
    8. ' ' → logprob: -16.125137329101562
    9. '']' → logprob: -17.500137329101562
    10. '`]' → logprob: -17.750137329101562

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023285686969757
    2. '=' → logprob: -1.9102329015731812
    3. ' ' → logprob: -11.910232543945312
    4. '<|end|>' → logprob: -13.910232543945312
    5. ' +=' → logprob: -14.535232543945312
    6. '[' → logprob: -16.285232543945312
    7. ' =
' → logprob: -16.410232543945312
    8. ' =)' → logprob: -16.660232543945312
    9. '+=' → logprob: -16.785232543945312
    10. '  ' → logprob: -16.785232543945312

Token 49: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '0' → logprob: -15.750204086303711
    4. '<|end|>' → logprob: -17.50020408630371
    5. '```' → logprob: -19.75020408630371
    6. '  ' → logprob: -20.12520408630371
    7. '۱' → logprob: -20.25020408630371
    8. '   ' → logprob: -21.25020408630371
    9. '１' → logprob: -21.43770408630371
    10. '১' → logprob: -21.56270408630371

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '0' → logprob: -15.000004768371582
    4. '' → logprob: -17.937503814697266
    5. '۱' → logprob: -18.062503814697266
    6. '১' → logprob: -18.875003814697266
    7. '```' → logprob: -19.062503814697266
    8. '१' → logprob: -19.125003814697266
    9. '!' → logprob: -19.437503814697266
    10. '<|end|>' → logprob: -19.500003814697266

Token 51: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0033839840907603502
    2. '   ' → logprob: -6.628384113311768
    3. '\n' → logprob: -6.628384113311768
    4. '    
' → logprob: -8.50338363647461
    5. '```' → logprob: -9.00338363647461
    6. '' → logprob: -9.62838363647461
    7. '  
' → logprob: -9.62838363647461
    8. ' 
' → logprob: -9.75338363647461
    9. '\' → logprob: -10.25338363647461
    10. '
' → logprob: -10.37838363647461

Token 52: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021909819915890694
    2. '    
' → logprob: -5.396909713745117
    3. '   ' → logprob: -5.521909713745117
    4. '\n' → logprob: -5.646909713745117
    5. '' → logprob: -5.771909713745117
    6. ' 
' → logprob: -6.646909713745117
    7. '```' → logprob: -6.646909713745117
    8. '  
' → logprob: -6.771909713745117
    9. '   
' → logprob: -7.646909713745117
    10. '
' → logprob: -7.771909713745117

Token 53: ' heap' (ID: 37237)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -1.0662052631378174
    2. 'heap' (adapté à ' heap') → logprob: -1.6912052631378174
    3. '
' → logprob: -1.8162052631378174
    4. '   ' → logprob: -1.9412052631378174
    5. 'p' → logprob: -3.3162052631378174
    6. '```' → logprob: -3.5662052631378174
    7. 'priority' → logprob: -3.6912052631378174
    8. '    
' → logprob: -3.8162052631378174
    9. 'q' → logprob: -4.191205024719238
    10. ' heap' → logprob: -4.316205024719238

Token 54: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3540634214878082
    2. ' =' → logprob: -1.7290633916854858
    3. '=' → logprob: -2.2290635108947754
    4. '.' → logprob: -4.479063510894775
    5. ' ' → logprob: -7.104063510894775
    6. ')' → logprob: -7.479063510894775
    7. '=[]' → logprob: -8.979063034057617
    8. ' .' → logprob: -9.979063034057617
    9. '[' → logprob: -10.229063034057617
    10. ',' → logprob: -10.604063034057617

Token 55: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.13416823744773865
    2. ' [(' → logprob: -2.1341681480407715
    3. '[]' → logprob: -5.1341681480407715
    4. ' []' → logprob: -6.6341681480407715
    5. '[' → logprob: -12.13416862487793
    6. ' [' → logprob: -14.00916862487793
    7. '[((' → logprob: -14.25916862487793
    8. ' ' → logprob: -15.38416862487793
    9. '([(' → logprob: -15.50916862487793
    10. '[]
' → logprob: -16.88416862487793

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '(' → logprob: -16.000001907348633
    4. '   ' → logprob: -16.000001907348633
    5. ')' → logprob: -19.375001907348633
    6. '۰' → logprob: -19.500001907348633
    7. 'dist' → logprob: -19.625001907348633
    8. 'start' → logprob: -20.125001907348633
    9. '```' → logprob: -20.250001907348633
    10. '(dist' → logprob: -20.375001907348633

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.841743303695694e-05
    2. ',start' → logprob: -9.37509822845459
    3. ' ,' → logprob: -11.50009822845459
    4. '<|end|>' → logprob: -13.25009822845459
    5. ',
' → logprob: -15.12509822845459
    6. '‌,' → logprob: -15.37509822845459
    7. ',user' → logprob: -15.50009822845459
    8. ')' → logprob: -15.87509822845459
    9. ',end' → logprob: -16.125099182128906
    10. ',)' → logprob: -16.625099182128906

Token 58: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05488668009638786
    2. ' start' → logprob: -2.92988657951355
    3. '[start' → logprob: -13.929886817932129
    4. ' ' → logprob: -13.929886817932129
    5. ')' → logprob: -14.429886817932129
    6. 'star' → logprob: -14.554886817932129
    7. '=start' → logprob: -15.054886817932129
    8. '(start' → logprob: -15.179886817932129
    9. '```' → logprob: -15.429886817932129
    10. ':start' → logprob: -15.554886817932129

Token 59: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.029809731990098953
    2. ')' → logprob: -3.5298097133636475
    3. ')])' → logprob: -10.904809951782227
    4. '),' → logprob: -11.029809951782227
    5. ']' → logprob: -11.529809951782227
    6. '))' → logprob: -11.779809951782227
    7. ' )' → logprob: -12.404809951782227
    8. ')}' → logprob: -14.279809951782227
    9. ')
' → logprob: -14.529809951782227
    10. ',' → logprob: -14.779809951782227

Token 60: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17761185765266418
    2. ')' → logprob: -2.677611827850342
    3. '   ' → logprob: -2.802611827850342
    4. '```' → logprob: -4.802611827850342
    5. '\n' → logprob: -4.927611827850342
    6. '    
' → logprob: -5.302611827850342
    7. 'while' → logprob: -5.552611827850342
    8. '' → logprob: -6.302611827850342
    9. ',' → logprob: -6.427611827850342
    10. ' 
' → logprob: -7.052611827850342

Token 61: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.036590658128261566
    2. '\n' → logprob: -4.911590576171875
    3. ')' → logprob: -5.036590576171875
    4. '   ' → logprob: -5.286590576171875
    5. '    
' → logprob: -5.411590576171875
    6. '  
' → logprob: -6.036590576171875
    7. '' → logprob: -6.036590576171875
    8. '```' → logprob: -6.036590576171875
    9. 'while' (adapté à ' while') → logprob: -6.161590576171875
    10. ' 
' → logprob: -6.411590576171875

Token 62: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.00043496055877767503
    2. 'heap' → logprob: -8.000434875488281
    3. '(heap' → logprob: -9.625434875488281
    4. ' ' → logprob: -10.500434875488281
    5. '.heap' → logprob: -13.250434875488281
    6. ' len' → logprob: -13.250434875488281
    7. ' he' → logprob: -14.000434875488281
    8. '  ' → logprob: -14.625434875488281
    9. '_heap' → logprob: -14.875434875488281
    10. ' not' → logprob: -15.250434875488281

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001720742875477299
    2. ':**' → logprob: -9.500171661376953
    3. '):' → logprob: -10.375171661376953
    4. ',' → logprob: -11.125171661376953
    5. '[' → logprob: -11.250171661376953
    6. '.pop' → logprob: -11.750171661376953
    7. '.' → logprob: -11.875171661376953
    8. '>:' → logprob: -12.500171661376953
    9. ':]' → logprob: -12.875171661376953
    10. '>' → logprob: -13.125171661376953

Token 64: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15734463930130005
    2. '       ' → logprob: -2.1573445796966553
    3. '):' → logprob: -4.032344818115234
    4. ':' → logprob: -4.907344818115234
    5. '   ' → logprob: -6.907344818115234
    6. ' ,' → logprob: -7.282344818115234
    7. 'heap' → logprob: -7.532344818115234
    8. ')' → logprob: -7.657344818115234
    9. 'he' → logprob: -8.407344818115234
    10. ' heap' → logprob: -8.532344818115234

Token 65: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1099491119384766
    2. '       ' → logprob: -1.6099491119384766
    3. 'dist' → logprob: -2.7349491119384766
    4. '   ' → logprob: -2.7349491119384766
    5. 'heap' → logprob: -2.7349491119384766
    6. '_,' → logprob: -2.8599491119384766
    7. 'q' → logprob: -3.3599491119384766
    8. '```' → logprob: -3.4849491119384766
    9. ' ,' → logprob: -3.6099491119384766
    10. 'cost' → logprob: -3.7349491119384766

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027468299958854914
    2. 'ist' → logprob: -8.875274658203125
    3. ' ,' → logprob: -9.125274658203125
    4. ',e' → logprob: -12.375274658203125
    5. ',u' → logprob: -12.375274658203125
    6. 'e' → logprob: -13.000274658203125
    7. 'istance' → logprob: -13.125274658203125
    8. ',)' → logprob: -13.500274658203125
    9. ',_' → logprob: -13.750274658203125
    10. ',int' → logprob: -14.000274658203125

Token 67: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.38706180453300476
    2. ' u' → logprob: -1.1370618343353271
    3. ' node' → logprob: -9.262062072753906
    4. 'node' → logprob: -9.387062072753906
    5. 'v' → logprob: -12.512062072753906
    6. '```' → logprob: -12.637062072753906
    7. '   ' → logprob: -13.387062072753906
    8. ' v' → logprob: -13.637062072753906
    9. '	u' → logprob: -14.012062072753906
    10. ' ' → logprob: -14.137062072753906

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28700515627861023
    2. '=' → logprob: -1.4120051860809326
    3. ')' → logprob: -5.1620049476623535
    4. ')=' → logprob: -10.287005424499512
    5. '   ' → logprob: -10.537005424499512
    6. ']' → logprob: -10.787005424499512
    7. ',' → logprob: -11.287005424499512
    8. ' ' → logprob: -12.662005424499512
    9. '<|end|>' → logprob: -12.912005424499512
    10. ' =)' → logprob: -13.162005424499512

Token 69: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.11738381534814835
    2. 'heap' → logprob: -2.2423837184906006
    3. ' he' → logprob: -5.61738395690918
    4. 'he' → logprob: -7.61738395690918
    5. ' ' → logprob: -7.86738395690918
    6. '(heap' → logprob: -10.61738395690918
    7. '.heap' → logprob: -11.99238395690918
    8. '_heap' → logprob: -13.24238395690918
    9. 'h' → logprob: -13.61738395690918
    10. '<|end|>' → logprob: -13.61738395690918

Token 70: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03421713411808014
    2. '[' → logprob: -3.409217119216919
    3. '.pop' → logprob: -7.784217357635498
    4. 'pop' → logprob: -10.15921688079834
    5. '.' → logprob: -10.40921688079834
    6. '   ' → logprob: -10.78421688079834
    7. 'p' → logprob: -11.15921688079834
    8. ')' → logprob: -11.40921688079834
    9. '```' → logprob: -12.03421688079834
    10. '[q' → logprob: -12.53421688079834

Token 71: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00020687808864749968
    2. '.' → logprob: -8.62520694732666
    3. '.pop' → logprob: -11.12520694732666
    4. '.heap' → logprob: -12.25020694732666
    5. '.h' → logprob: -12.87520694732666
    6. ' .' → logprob: -13.75020694732666
    7. '.p' → logprob: -13.87520694732666
    8. 'he' → logprob: -14.00020694732666
    9. '.q' → logprob: -14.37520694732666
    10. ' he' → logprob: -15.12520694732666

Token 72: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.8828707804204896e-05
    2. 'ap' → logprob: -10.000048637390137
    3. 'pp' → logprob: -12.750048637390137
    4. 'a' → logprob: -16.250049591064453
    5. '```' → logprob: -16.375049591064453
    6. '[' → logprob: -16.625049591064453
    7. 'appe' → logprob: -17.250049591064453
    8. 'appen' → logprob: -17.500049591064453
    9. ' app' → logprob: -17.625049591064453
    10. 'ап' → logprob: -17.750049591064453

Token 73: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.08899355679750443
    2. 'ush' → logprob: -2.463993549346924
    3. 'uf' → logprob: -11.463994026184082
    4. '[' → logprob: -11.713994026184082
    5. 'pop' → logprob: -12.213994026184082
    6. 'p' → logprob: -12.463994026184082
    7. 'push' → logprob: -12.463994026184082
    8. 'u' → logprob: -12.588994026184082
    9. 'le' → logprob: -12.588994026184082
    10. 'q' → logprob: -13.213994026184082

Token 74: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.12697450816631317
    2. '(' → logprob: -2.126974582672119
    3. '(h' → logprob: -10.126974105834961
    4. '(
' → logprob: -13.126974105834961
    5. ' (' → logprob: -13.376974105834961
    6. '(

' → logprob: -14.001974105834961
    7. '(queue' → logprob: -14.376974105834961
    8. 'heap' → logprob: -15.376974105834961
    9. ')' → logprob: -16.12697410583496
    10. '('' → logprob: -16.12697410583496

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.700132997939363e-05
    2. ')
' → logprob: -11.125017166137695
    3. ' )' → logprob: -13.250017166137695
    4. ')

' → logprob: -16.000017166137695
    5. '       ' → logprob: -16.375017166137695
    6. '   ' → logprob: -16.625017166137695
    7. '<|end|>' → logprob: -17.125017166137695
    8. ')
' → logprob: -17.500017166137695
    9. ')`' → logprob: -17.500017166137695
    10. '))' → logprob: -18.375017166137695

Token 76: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3612210750579834
    2. '       ' → logprob: -1.6112210750579834
    3. '<|end|>' → logprob: -2.3612210750579834
    4. '        
' → logprob: -5.2362213134765625
    5. ' 
' → logprob: -6.6112213134765625
    6. '  
' → logprob: -7.6112213134765625
    7. '' → logprob: -7.7362213134765625
    8. '        ' → logprob: -7.8612213134765625
    9. '<|end|>' → logprob: -8.236221313476562
    10. ' ' → logprob: -8.361221313476562

Token 77: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0616830512881279
    2. ' dist' → logprob: -3.311682939529419
    3. 'd' → logprob: -3.936682939529419
    4. 'dist' → logprob: -5.561683177947998
    5. ' ' → logprob: -12.81168270111084
    6. '	dist' → logprob: -13.18668270111084
    7. ' ' → logprob: -13.56168270111084
    8. '	d' → logprob: -13.56168270111084
    9. '   ' → logprob: -14.31168270111084
    10. '(dist' → logprob: -14.68668270111084

Token 79: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.018193021416664124
    2. '>' → logprob: -4.018193244934082
    3. ' ' → logprob: -10.268193244934082
    4. ' !=' → logprob: -13.018193244934082
    5. ' ' → logprob: -13.268193244934082
    6. '">' → logprob: -13.643193244934082
    7. '[' → logprob: -14.893193244934082
    8. ' >
' → logprob: -15.018193244934082
    9. '  ' → logprob: -15.143193244934082
    10. ' >

' → logprob: -15.393193244934082

Token 80: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03364811837673187
    2. ' dist' → logprob: -3.4086480140686035
    3. '	dist' → logprob: -13.408648490905762
    4. '(dist' → logprob: -15.283648490905762
    5. ' ' → logprob: -15.408648490905762
    6. '_dist' → logprob: -16.283647537231445
    7. 'd' → logprob: -16.408647537231445
    8. '```' → logprob: -16.908647537231445
    9. 'Dist' → logprob: -17.158647537231445
    10. '.dist' → logprob: -17.533647537231445

Token 81: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -12.75000286102295
    3. 'u' → logprob: -16.625003814697266
    4. '```' → logprob: -19.125003814697266
    5. '	u' → logprob: -19.500003814697266
    6. '<u' → logprob: -20.125003814697266
    7. '\[' → logprob: -21.250003814697266
    8. ' u' → logprob: -21.500003814697266
    9. ' [' → logprob: -21.625003814697266
    10. '(u' → logprob: -21.625003814697266

Token 82: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001915191882289946
    2. ':' → logprob: -6.626914978027344
    3. ')' → logprob: -7.876914978027344
    4. '):
' → logprob: -8.751914978027344
    5. ']:' → logprob: -10.001914978027344
    6. ' ):' → logprob: -12.376914978027344
    7. '}:' → logprob: -14.251914978027344
    8. ':
' → logprob: -15.126914978027344
    9. ' ' → logprob: -15.626914978027344
    10. '):

' → logprob: -15.876914978027344

Token 83: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05245283991098404
    2. '           ' → logprob: -3.427452802658081
    3. ' continue' → logprob: -4.55245304107666
    4. ':' → logprob: -5.67745304107666
    5. 'continue' → logprob: -5.92745304107666
    6. '   ' → logprob: -6.92745304107666
    7. '	continue' → logprob: -8.05245304107666
    8. '               ' → logprob: -8.80245304107666
    9. ':
' → logprob: -9.17745304107666
    10. '\n' → logprob: -9.42745304107666

Token 84: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.01975584216415882
    2. 'continue' (adapté à ' continue') → logprob: -4.019755840301514
    3. '	continue' → logprob: -7.144755840301514
    4. '       ' → logprob: -7.394755840301514
    5. '_continue' → logprob: -9.269756317138672
    6. '           ' → logprob: -10.519756317138672
    7. '   ' → logprob: -10.894756317138672
    8. ' ' → logprob: -11.144756317138672
    9. '    ' → logprob: -11.519756317138672
    10. 'contin' → logprob: -11.644756317138672

Token 85: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6691115498542786
    2. '       ' → logprob: -0.7941115498542786
    3. '        
' → logprob: -3.794111490249634
    4. '<|end|>' → logprob: -5.044111728668213
    5. '  
' → logprob: -6.419111728668213
    6. ' 
' → logprob: -6.669111728668213
    7. '    
' → logprob: -6.919111728668213
    8. '' → logprob: -7.044111728668213
    9. '\n' → logprob: -7.544111728668213
    10. '
' → logprob: -7.669111728668213

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4301559329032898
    2. '
' → logprob: -1.5551559925079346
    3. '        
' → logprob: -2.0551559925079346
    4. '\n' → logprob: -5.9301557540893555
    5. '' → logprob: -6.3051557540893555
    6. '  
' → logprob: -6.6801557540893555
    7. '<|end|>' → logprob: -6.9301557540893555
    8. '    
' → logprob: -7.1801557540893555
    9. ' 
' → logprob: -7.4301557540893555
    10. '\' → logprob: -8.180155754089355

Token 87: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6497868895530701
    2. '       ' → logprob: -1.7747869491577148
    3. ' 
' → logprob: -1.8997869491577148
    4. '        
' → logprob: -2.774786949157715
    5. '    
' → logprob: -3.149786949157715
    6. '   ' → logprob: -3.649786949157715
    7. ' for' → logprob: -4.774786949157715
    8. '  
' → logprob: -5.024786949157715
    9. '\n' → logprob: -5.274786949157715
    10. '   
' → logprob: -6.024786949157715

Token 88: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.0654490515589714
    2. 'v' → logprob: -2.8154489994049072
    3. ' ' → logprob: -5.815449237823486
    4. ' ,' → logprob: -8.565448760986328
    5. ',' → logprob: -8.690448760986328
    6. ' (' → logprob: -9.815448760986328
    7. '(v' → logprob: -10.565448760986328
    8. ' u' → logprob: -11.190448760986328
    9. '	v' → logprob: -11.690448760986328
    10. ',v' → logprob: -11.690448760986328

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033318297937512398
    2. ' ,' → logprob: -5.878331661224365
    3. '<|end|>' → logprob: -7.628331661224365
    4. ',v' → logprob: -11.003332138061523
    5. ' in' → logprob: -11.628332138061523
    6. ')' → logprob: -12.128332138061523
    7. '<|end|>' → logprob: -12.503332138061523
    8. '‌,' → logprob: -13.378332138061523
    9. ',
' → logprob: -14.878332138061523
    10. ',value' → logprob: -15.003332138061523

Token 90: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4741531312465668
    2. ' w' → logprob: -0.9741531610488892
    3. 'weight' → logprob: -10.724153518676758
    4. ' ' → logprob: -11.224153518676758
    5. 'cost' → logprob: -11.349153518676758
    6. ' cost' → logprob: -11.724153518676758
    7. '   ' → logprob: -11.974153518676758
    8. ' weight' → logprob: -11.974153518676758
    9. ',' → logprob: -13.224153518676758
    10. 'wt' → logprob: -13.349153518676758

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010193035937845707
    2. 'in' → logprob: -4.63519287109375
    3. ',' → logprob: -8.63519287109375
    4. ' ' → logprob: -8.76019287109375
    5. ')' → logprob: -9.63519287109375
    6. ' i' → logprob: -11.88519287109375
    7. '<|end|>' → logprob: -11.88519287109375
    8. ' ,' → logprob: -12.38519287109375
    9. '  ' → logprob: -12.38519287109375
    10. ' )' → logprob: -12.76019287109375

Token 92: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.00510057620704174
    2. 'graph' → logprob: -5.380100727081299
    3. ' ' → logprob: -7.755100727081299
    4. '	graph' → logprob: -10.00510025024414
    5. '(graph' → logprob: -12.50510025024414
    6. 'raph' → logprob: -13.88010025024414
    7. '```' → logprob: -15.13010025024414
    8. '  ' → logprob: -15.13010025024414
    9. ' ' → logprob: -15.38010025024414
    10. ' grap' → logprob: -15.75510025024414

Token 93: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0002263046189909801
    2. '[' → logprob: -8.500226020812988
    3. '   ' → logprob: -12.000226020812988
    4. 'u' → logprob: -12.500226020812988
    5. '(u' → logprob: -12.500226020812988
    6. '[(' → logprob: -12.875226020812988
    7. ')' → logprob: -13.250226020812988
    8. '[[' → logprob: -14.000226020812988
    9. ' ' → logprob: -14.500226020812988
    10. '[
' → logprob: -14.500226020812988

Token 94: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007761957589536905
    2. ')' → logprob: -5.2577619552612305
    3. ']:' → logprob: -6.7577619552612305
    4. ' ):' → logprob: -7.1327619552612305
    5. ':' → logprob: -8.25776195526123
    6. ']):' → logprob: -9.38276195526123
    7. '):
' → logprob: -9.88276195526123
    8. '   ' → logprob: -10.00776195526123
    9. ')]' → logprob: -10.25776195526123
    10. ',' → logprob: -10.25776195526123

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1722659319639206
    2. ':' → logprob: -1.922265887260437
    3. '       ' → logprob: -5.547266006469727
    4. ',' → logprob: -5.797266006469727
    5. '<|end|>' → logprob: -6.172266006469727
    6. '               ' → logprob: -7.047266006469727
    7. '            ' → logprob: -7.672266006469727
    8. '        ' → logprob: -8.047266006469727
    9. '          ' → logprob: -8.297266006469727
    10. '):' → logprob: -8.422266006469727

Token 96: ' nd' (ID: 5914)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.054619889706373215
    2. ' ' → logprob: -3.929619789123535
    3. '
' → logprob: -4.554619789123535
    4. '               ' → logprob: -4.804619789123535
    5. '  
' → logprob: -5.304619789123535
    6. '           ' → logprob: -5.429619789123535
    7. '            
' → logprob: -6.554619789123535
    8. '                
' → logprob: -6.679619789123535
    9. ' if' → logprob: -7.679619789123535
    10. '   
' → logprob: -8.054619789123535

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2524906396865845
    2. '=' → logprob: -1.5024906396865845
    3. 'ist' → logprob: -8.752490997314453
    4. ' ' → logprob: -9.002490997314453
    5. 'istance' → logprob: -9.627490997314453
    6. ',' → logprob: -9.877490997314453
    7. ' +' → logprob: -10.252490997314453
    8. '+' → logprob: -10.877490997314453
    9. '  ' → logprob: -11.002490997314453
    10. '>' → logprob: -11.377490997314453

Token 98: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.16023793816566467
    2. 'd' → logprob: -1.9102379083633423
    3. ' dist' → logprob: -11.910238265991211
    4. 'dist' → logprob: -12.660238265991211
    5. ' ' → logprob: -12.910238265991211
    6. '	d' → logprob: -14.535238265991211
    7. ' ' → logprob: -14.660238265991211
    8. '    ' → logprob: -15.910238265991211
    9. '   ' → logprob: -15.910238265991211
    10. ')d' → logprob: -16.16023826599121

Token 99: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.01112339273095131
    2. '+' → logprob: -4.511123180389404
    3. '+w' → logprob: -9.636123657226562
    4. ' ' → logprob: -11.886123657226562
    5. '<|end|>' → logprob: -13.636123657226562
    6. ' ' → logprob: -14.136123657226562
    7. ' plus' → logprob: -15.511123657226562
    8. '+n' → logprob: -15.636123657226562
    9. '+d' → logprob: -15.886123657226562
    10. ' +
' → logprob: -16.011123657226562

Token 100: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3868865668773651
    2. ' w' → logprob: -1.1368865966796875
    3. ' ' → logprob: -11.136886596679688
    4. ' ' → logprob: -14.386886596679688
    5. '	w' → logprob: -16.386886596679688
    6. ' 
' → logprob: -16.636886596679688
    7. ''w' → logprob: -17.011886596679688
    8. 'v' → logprob: -17.386886596679688
    9. '  ' → logprob: -17.636886596679688
    10. '   ' → logprob: -17.886886596679688

Token 101: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006200734525918961
    2. '<|end|>' → logprob: -6.256200790405273
    3. '
' → logprob: -6.381200790405273
    4. '               ' → logprob: -6.881200790405273
    5. ')' → logprob: -7.631200790405273
    6. '       ' → logprob: -8.131200790405273
    7. ' if' → logprob: -8.756200790405273
    8. '            
' → logprob: -8.881200790405273
    9. '<|end|>' → logprob: -9.006200790405273
    10. '          ' → logprob: -9.631200790405273

Token 103: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.188354253768921
    2. ' ' → logprob: -1.313354253768921
    3. '
' → logprob: -2.063354253768921
    4. ' if' → logprob: -2.063354253768921
    5. ' 
' → logprob: -2.438354253768921
    6. '<|end|>' → logprob: -3.563354253768921
    7. 'if' (adapté à ' if') → logprob: -4.0633544921875
    8. '               ' → logprob: -4.1883544921875
    9. '            ' → logprob: -5.1883544921875
    10. '  
' → logprob: -5.3133544921875

Token 104: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.006517836824059486
    2. ' dist' → logprob: -5.3815178871154785
    3. 'nd' → logprob: -6.3815178871154785
    4. 'dist' → logprob: -8.75651741027832
    5. '(nd' → logprob: -10.25651741027832
    6. ' ' → logprob: -13.50651741027832
    7. '_nd' → logprob: -13.50651741027832
    8. '(dist' → logprob: -13.88151741027832
    9. 'd' → logprob: -14.06901741027832
    10. 'n' → logprob: -14.19401741027832

Token 105: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0001721934968372807
    2. '<' → logprob: -8.87517261505127
    3. ' ' → logprob: -10.50017261505127
    4. '<|end|>' → logprob: -13.50017261505127
    5. ' ' → logprob: -13.62517261505127
    6. '[' → logprob: -14.37517261505127
    7. ' <",' → logprob: -15.00017261505127
    8. ')' → logprob: -15.37517261505127
    9. '  ' → logprob: -15.62517261505127
    10. '<int' → logprob: -15.75017261505127

Token 106: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.06994621455669403
    2. 'dist' → logprob: -2.6949462890625
    3. '	dist' → logprob: -12.3199462890625
    4. ' ' → logprob: -12.9449462890625
    5. '(dist' → logprob: -13.6949462890625
    6. 'Dist' → logprob: -14.9449462890625
    7. ' ' → logprob: -15.0699462890625
    8. '_dist' → logprob: -15.0699462890625
    9. 'd' → logprob: -15.4449462890625
    10. '   ' → logprob: -15.5699462890625

Token 107: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -12.250005722045898
    3. '[u' → logprob: -14.000005722045898
    4. 'v' → logprob: -15.750005722045898
    5. '```' → logprob: -18.5000057220459
    6. '][' → logprob: -18.8750057220459
    7. ' [' → logprob: -19.0000057220459
    8. '[
' → logprob: -19.8750057220459
    9. '	v' → logprob: -20.1250057220459
    10. ']' → logprob: -20.3750057220459

Token 108: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.29627570509910583
    2. ':' → logprob: -1.5462757349014282
    3. ']:' → logprob: -3.2962756156921387
    4. '):
' → logprob: -5.171275615692139
    5. ']:
' → logprob: -8.921276092529297
    6. ':
' → logprob: -8.921276092529297
    7. ')' → logprob: -9.171276092529297
    8. '):
' → logprob: -9.296276092529297
    9. '}:' → logprob: -9.546276092529297
    10. ']' → logprob: -10.421276092529297

Token 109: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.44579821825027466
    2. ':' → logprob: -1.1957981586456299
    3. ':
' → logprob: -3.44579815864563
    4. '           ' → logprob: -4.320798397064209
    5. '
' → logprob: -6.070798397064209
    6. ')' → logprob: -6.445798397064209
    7. '):
' → logprob: -6.695798397064209
    8. '<|end|>' → logprob: -6.695798397064209
    9. '       ' → logprob: -7.445798397064209
    10. '                   ' → logprob: -7.445798397064209

Token 110: ' dist' (ID: 3601)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -1.0130388736724854
    2. ' dist' → logprob: -1.1380388736724854
    3. 'dist' (adapté à ' dist') → logprob: -2.0130388736724854
    4. '               ' → logprob: -2.6380388736724854
    5. ' 
' → logprob: -2.7630388736724854
    6. '                
' → logprob: -3.8880388736724854
    7. '                   ' → logprob: -5.013038635253906
    8. '                    
' → logprob: -5.263038635253906
    9. '                 
' → logprob: -5.263038635253906
    10. ' ' → logprob: -5.888038635253906

Token 111: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.006719520781189203
    2. '[' → logprob: -5.006719589233398
    3. 'v' → logprob: -13.131719589233398
    4. '[val' → logprob: -14.006719589233398
    5. '[u' → logprob: -14.631719589233398
    6. ' [' → logprob: -15.381719589233398
    7. ']' → logprob: -16.0067195892334
    8. '[value' → logprob: -16.2567195892334
    9. ' ' → logprob: -16.5067195892334
    10. '=' → logprob: -16.6317195892334

Token 112: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029331259429454803
    2. '[v' → logprob: -6.502933025360107
    3. ' =' → logprob: -7.502933025360107
    4. ' ]' → logprob: -7.877933025360107
    5. ']=' → logprob: -7.877933025360107
    6. '=' → logprob: -9.377933502197266
    7. ')' → logprob: -11.377933502197266
    8. '[' → logprob: -11.627933502197266
    9. '=v' → logprob: -11.627933502197266
    10. '[u' → logprob: -14.002933502197266

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03368546813726425
    2. '=' → logprob: -3.4086854457855225
    3. ' =
' → logprob: -10.408685684204102
    4. ',' → logprob: -12.408685684204102
    5. '=v' → logprob: -13.658685684204102
    6. '[' → logprob: -14.033685684204102
    7. ' ' → logprob: -14.283685684204102
    8. ']' → logprob: -14.408685684204102
    9. ')' → logprob: -14.408685684204102
    10. '=
' → logprob: -14.658685684204102

Token 114: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.00020950057660229504
    2. 'nd' → logprob: -8.50020980834961
    3. '(nd' → logprob: -13.00020980834961
    4. ' ' → logprob: -13.12520980834961
    5. ' ' → logprob: -14.50020980834961
    6. ' ndo' → logprob: -14.87520980834961
    7. '_nd' → logprob: -15.25020980834961
    8. ' nde' → logprob: -15.87520980834961
    9. ' 
' → logprob: -16.37520980834961
    10. ' n' → logprob: -16.50020980834961

Token 115: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.054077040404081345
    2. '<|end|>' → logprob: -3.1790771484375
    3. '                ' → logprob: -5.1790771484375
    4. '                
' → logprob: -6.3040771484375
    5. '
' → logprob: -6.8040771484375
    6. '<|end|>' → logprob: -7.4290771484375
    7. '           ' → logprob: -7.5540771484375
    8. '                   ' → logprob: -8.1790771484375
    9. ',' → logprob: -8.3040771484375
    10. '              ' → logprob: -8.8040771484375

Token 116: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02160128951072693
    2. '                ' → logprob: -4.77160120010376
    3. '                
' → logprob: -5.02160120010376
    4. ' 
' → logprob: -6.52160120010376
    5. '                   ' → logprob: -6.64660120010376
    6. '           ' → logprob: -6.64660120010376
    7. 'count' → logprob: -8.271601676940918
    8. '            
' → logprob: -8.646601676940918
    9. '                    
' → logprob: -8.771601676940918
    10. ',' → logprob: -8.771601676940918

Token 117: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0024626946542412043
    2. 'heap' → logprob: -6.502462863922119
    3. ' count' → logprob: -7.002462863922119
    4. '               ' → logprob: -10.127462387084961
    5. ' heap' → logprob: -11.752462387084961
    6. '           ' → logprob: -13.627462387084961
    7. '                   ' → logprob: -15.002462387084961
    8. '   ' → logprob: -15.127462387084961
    9. 'cnt' → logprob: -16.50246238708496
    10. '_count' → logprob: -16.50246238708496

Token 118: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.945094355614856e-05
    2. '[' → logprob: -9.625069618225098
    3. 'v' → logprob: -13.000069618225098
    4. '[val' → logprob: -15.000069618225098
    5. '[value' → logprob: -15.500069618225098
    6. '[u' → logprob: -15.875069618225098
    7. '=' → logprob: -16.25006866455078
    8. '```' → logprob: -16.37506866455078
    9. '	v' → logprob: -17.00006866455078
    10. '[user' → logprob: -17.37506866455078

Token 119: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.053094252943992615
    2. ' =' → logprob: -3.3030941486358643
    3. '=' → logprob: -4.428094387054443
    4. ' ]' → logprob: -6.428094387054443
    5. ']=' → logprob: -6.678094387054443
    6. ')' → logprob: -9.178093910217285
    7. '               ' → logprob: -12.428093910217285
    8. '    ' → logprob: -12.678093910217285
    9. '                ' → logprob: -12.928093910217285
    10. '[' → logprob: -12.928093910217285

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975442260503769
    2. '=' → logprob: -3.529754400253296
    3. ' ' → logprob: -13.154754638671875
    4. '<|end|>' → logprob: -13.904754638671875
    5. ')' → logprob: -15.029754638671875
    6. ',' → logprob: -15.654754638671875
    7. '=count' → logprob: -16.029754638671875
    8. ' =
' → logprob: -16.029754638671875
    9. 's' → logprob: -16.529754638671875
    10. '[' → logprob: -16.529754638671875

Token 121: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.012572990730404854
    2. ' count' → logprob: -4.387572765350342
    3. '	count' → logprob: -10.0125732421875
    4. '<count' → logprob: -12.5125732421875
    5. '(count' → logprob: -12.7625732421875
    6. '$count' → logprob: -13.0125732421875
    7. '_count' → logprob: -13.2625732421875
    8. '[count' → logprob: -13.2625732421875
    9. '=count' → logprob: -13.5125732421875
    10. ' ' → logprob: -13.7625732421875

Token 122: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0001882823125924915
    2. '[' → logprob: -8.625187873840332
    3. 'u' → logprob: -11.750187873840332
    4. '	u' → logprob: -15.125187873840332
    5. '```' → logprob: -15.250187873840332
    6. ' [' → logprob: -15.750187873840332
    7. ' u' → logprob: -16.25018882751465
    8. '<u' → logprob: -17.00018882751465
    9. '[user' → logprob: -17.37518882751465
    10. '   ' → logprob: -17.75018882751465

Token 123: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001097417771234177
    2. '                
' → logprob: -10.125109672546387
    3. '			' → logprob: -10.500109672546387
    4. '<|end|>' → logprob: -10.875109672546387
    5. 'heap' → logprob: -12.250109672546387
    6. '              ' → logprob: -12.750109672546387
    7. '           ' → logprob: -12.875109672546387
    8. ' heap' → logprob: -13.000109672546387
    9. '       ' → logprob: -13.375109672546387
    10. '		       ' → logprob: -13.500109672546387

Token 125: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.030761532485485077
    2. ' heap' → logprob: -3.530761480331421
    3. '               ' → logprob: -6.90576171875
    4. 'he' → logprob: -12.40576171875
    5. '           ' → logprob: -13.78076171875
    6. '                   ' → logprob: -13.78076171875
    7. '(heap' → logprob: -13.90576171875
    8. '.heap' → logprob: -14.15576171875
    9. ' he' → logprob: -15.65576171875
    10. '_heap' → logprob: -15.90576171875

Token 126: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.392824874026701e-05
    2. '.he' → logprob: -11.12503433227539
    3. '.push' → logprob: -11.50003433227539
    4. ' .' → logprob: -12.37503433227539
    5. 'p' → logprob: -13.25003433227539
    6. '.q' → logprob: -13.50003433227539
    7. 'push' → logprob: -14.12503433227539
    8. '_push' → logprob: -15.12503433227539
    9. '.append' → logprob: -15.75003433227539
    10. '.' → logprob: -16.00003433227539

Token 127: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -1.9623810658231378e-05
    2. '.heap' → logprob: -11.000020027160645
    3. '.push' → logprob: -13.250020027160645
    4. '.' → logprob: -14.625020027160645
    5. 'he' → logprob: -15.125020027160645
    6. ' he' → logprob: -16.000019073486328
    7. ' .' → logprob: -16.375019073486328
    8. '.py' → logprob: -17.000019073486328
    9. '.h' → logprob: -17.625019073486328
    10. '_he' → logprob: -17.750019073486328

Token 128: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.684157026233152e-05
    2. 'ap' → logprob: -9.500077247619629
    3. 'pp' → logprob: -13.625077247619629
    4. 'a' → logprob: -15.250077247619629
    5. ' app' → logprob: -15.750077247619629
    6. '```' → logprob: -16.250076293945312
    7. 'ап' → logprob: -16.500076293945312
    8. '	app' → logprob: -16.875076293945312
    9. 'appen' → logprob: -17.125076293945312
    10. '(app' → logprob: -17.750076293945312

Token 129: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.35706390615087e-05
    2. 'push' → logprob: -10.500033378601074
    3. 'p' → logprob: -13.000033378601074
    4. 'app' → logprob: -13.250033378601074
    5. 'op' → logprob: -13.750033378601074
    6. 'u' → logprob: -15.625033378601074
    7. 'ap' → logprob: -15.625033378601074
    8. 'e' → logprob: -15.875033378601074
    9. 'q' → logprob: -16.50003433227539
    10. '```' → logprob: -16.50003433227539

Token 130: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0110534792765975
    2. '(' → logprob: -4.511053562164307
    3. '((' → logprob: -12.511053085327148
    4. ' (' → logprob: -14.011053085327148
    5. '(graph' → logprob: -14.136053085327148
    6. '(
' → logprob: -15.136053085327148
    7. '(h' → logprob: -16.38605308532715
    8. '(

' → logprob: -16.76105308532715
    9. '```' → logprob: -17.51105308532715
    10. 'heap' → logprob: -17.76105308532715

Token 131: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0034356580581516027
    2. '(' → logprob: -5.7534356117248535
    3. ',' → logprob: -9.628436088562012
    4. ' (' → logprob: -9.753436088562012
    5. '(
' → logprob: -10.253436088562012
    6. ',(' → logprob: -10.503436088562012
    7. ')' → logprob: -10.628436088562012
    8. '(graph' → logprob: -10.878436088562012
    9. ')(' → logprob: -11.628436088562012
    10. '(queue' → logprob: -12.378436088562012

Token 132: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.29573795199394226
    2. '(' → logprob: -2.0457379817962646
    3. '(v' → logprob: -2.2957379817962646
    4. '(nd' → logprob: -3.7957379817962646
    5. '(n' → logprob: -5.6707377433776855
    6. '(d' → logprob: -9.545738220214844
    7. ')' → logprob: -11.670738220214844
    8. '(vc' → logprob: -11.795738220214844
    9. '((' → logprob: -12.045738220214844
    10. '(nt' → logprob: -12.170738220214844

Token 133: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.009814172983169556
    2. ' nd' → logprob: -4.634814262390137
    3. '(nd' → logprob: -10.009814262390137
    4. '_nd' → logprob: -12.134814262390137
    5. 'ndl' → logprob: -13.759814262390137
    6. ' ' → logprob: -13.884814262390137
    7. ')' → logprob: -13.884814262390137
    8. 'n' → logprob: -14.134814262390137
    9. 'nds' → logprob: -14.259814262390137
    10. '```' → logprob: -14.384814262390137

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5451681974809617e-05
    2. ' ,' → logprob: -11.625015258789062
    3. ',v' → logprob: -12.000015258789062
    4. ')' → logprob: -15.125015258789062
    5. ',
' → logprob: -17.625015258789062
    6. '),' → logprob: -17.625015258789062
    7. 'v' → logprob: -18.250015258789062
    8. ',u' → logprob: -18.875015258789062
    9. '‌,' → logprob: -19.000015258789062
    10. ',)' → logprob: -19.500015258789062

Token 135: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004078639671206474
    2. ' v' → logprob: -5.5040788650512695
    3. ')v' → logprob: -15.62907886505127
    4. '	v' → logprob: -16.379077911376953
    5. ')' → logprob: -18.129077911376953
    6. '```' → logprob: -18.754077911376953
    7. ' 
' → logprob: -19.004077911376953
    8. ' ' → logprob: -19.254077911376953
    9. ' ' → logprob: -19.379077911376953
    10. 'vq' → logprob: -19.504077911376953

Token 136: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00026073982007801533
    2. '))
' → logprob: -8.500260353088379
    3. ')' → logprob: -9.875260353088379
    4. ' ))' → logprob: -12.125260353088379
    5. '))

' → logprob: -15.750260353088379
    6. ')))' → logprob: -16.375261306762695
    7. '));' → logprob: -16.875261306762695
    8. '))
' → logprob: -17.250261306762695
    9. '           ' → logprob: -17.500261306762695
    10. '       ' → logprob: -17.625261306762695

Token 137: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06336705386638641
    2. 'elif' → logprob: -2.8133671283721924
    3. ' elif' → logprob: -7.063366889953613
    4. '	elif' → logprob: -8.688366889953613
    5. '		' → logprob: -9.188366889953613
    6. 'else' → logprob: -9.438366889953613
    7. '            
' → logprob: -9.688366889953613
    8. '               ' → logprob: -10.313366889953613
    9. '          ' → logprob: -10.563366889953613
    10. '<|end|>' → logprob: -11.063366889953613

Token 138: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.13461679220199585
    2. ' elif' → logprob: -2.1346168518066406
    3. '           ' → logprob: -4.884616851806641
    4. '       ' → logprob: -10.00961685180664
    5. '	elif' → logprob: -10.13461685180664
    6. 'else' → logprob: -12.00961685180664
    7. ' else' → logprob: -13.38461685180664
    8. '   ' → logprob: -13.63461685180664
    9. 'el' → logprob: -13.75961685180664
    10. 'elseif' → logprob: -14.50961685180664

Token 139: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.0006489329971373081
    2. 'nd' → logprob: -7.3756489753723145
    3. ' ' → logprob: -11.125648498535156
    4. '(nd' → logprob: -12.750648498535156
    5. ' ' → logprob: -13.375648498535156
    6. ' ndo' → logprob: -14.375648498535156
    7. '_nd' → logprob: -14.500648498535156
    8. ' nde' → logprob: -14.875648498535156
    9. ' n' → logprob: -15.500648498535156
    10. ' nh' → logprob: -15.938148498535156

Token 140: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023326773196458817
    2. '==' → logprob: -3.773326873779297
    3. ' <=' → logprob: -10.148326873779297
    4. '=' → logprob: -10.273326873779297
    5. ' =' → logprob: -12.023326873779297
    6. '<=' → logprob: -13.898326873779297
    7. ' ' → logprob: -14.523326873779297
    8. ' ' → logprob: -16.273326873779297
    9. ')==' → logprob: -17.023326873779297
    10. '==
' → logprob: -17.148326873779297

Token 141: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.009783834218978882
    2. 'dist' → logprob: -4.634783744812012
    3. '	dist' → logprob: -11.259783744812012
    4. ' ' → logprob: -11.634783744812012
    5. '(dist' → logprob: -13.134783744812012
    6. '_dist' → logprob: -13.509783744812012
    7. ' count' → logprob: -13.884783744812012
    8. ' ' → logprob: -14.759783744812012
    9. '.dist' → logprob: -15.259783744812012
    10. 'Dist' → logprob: -15.384783744812012

Token 142: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.630610641877865e-06
    2. '[' → logprob: -12.000006675720215
    3. 'v' → logprob: -14.625006675720215
    4. '[u' → logprob: -16.7500057220459
    5. '[
' → logprob: -18.1250057220459
    6. ' [' → logprob: -18.3750057220459
    7. '[value' → logprob: -19.0000057220459
    8. '[val' → logprob: -19.1250057220459
    9. '[V' → logprob: -19.2500057220459
    10. '[s' → logprob: -19.6250057220459

Token 143: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25345924496650696
    2. ':
' → logprob: -1.5034592151641846
    3. '):
' → logprob: -6.628459453582764
    4. ' and' → logprob: -9.753458976745605
    5. '):' → logprob: -10.003458976745605
    6. 'and' → logprob: -10.378458976745605
    7. '           ' → logprob: -11.128458976745605
    8. ')' → logprob: -11.503458976745605
    9. '       ' → logprob: -11.628458976745605
    10. ' :
' → logprob: -11.753458976745605

Token 144: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00931825116276741
    2. ' count' → logprob: -4.7593183517456055
    3. 'count' → logprob: -7.5093183517456055
    4. '              ' → logprob: -10.509318351745605
    5. ',count' → logprob: -10.759318351745605
    6. '[count' → logprob: -11.009318351745605
    7. '	count' → logprob: -11.134318351745605
    8. '           ' → logprob: -11.134318351745605
    9. '(count' → logprob: -11.634318351745605
    10. '```' → logprob: -11.759318351745605

Token 145: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.005898576695472002
    2. 'count' (adapté à ' count') → logprob: -5.255898475646973
    3. '               ' → logprob: -7.380898475646973
    4. '                ' → logprob: -11.005898475646973
    5. '                   ' → logprob: -12.005898475646973
    6. '	count' → logprob: -12.630898475646973
    7. ' ' → logprob: -12.755898475646973
    8. '           ' → logprob: -13.005898475646973
    9. '_count' → logprob: -13.005898475646973
    10. '[count' → logprob: -13.505898475646973

Token 146: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.875000953674316
    3. 'v' → logprob: -15.000000953674316
    4. '[val' → logprob: -17.750001907348633
    5. ' [' → logprob: -17.875001907348633
    6. '[u' → logprob: -18.375001907348633
    7. '	v' → logprob: -18.500001907348633
    8. '[value' → logprob: -18.875001907348633
    9. '[var' → logprob: -19.000001907348633
    10. '```' → logprob: -19.125001907348633

Token 147: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2543880045413971
    2. ']+=' → logprob: -2.0043880939483643
    3. ' +=' → logprob: -2.6293880939483643
    4. '+=' → logprob: -4.379387855529785
    5. ' ]' → logprob: -5.504387855529785
    6. '+' → logprob: -7.379387855529785
    7. ')' → logprob: -8.254387855529785
    8. '[' → logprob: -8.754387855529785
    9. ']+' → logprob: -10.254387855529785
    10. ' ' → logprob: -10.379387855529785

Token 148: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.030176104977726936
    2. '+=' → logprob: -3.5301761627197266
    3. '+' → logprob: -8.530176162719727
    4. '=' → logprob: -9.155176162719727
    5. ' =' → logprob: -9.280176162719727
    6. ' ' → logprob: -11.155176162719727
    7. ' +' → logprob: -11.405176162719727
    8. ']+=' → logprob: -13.030176162719727
    9. '[' → logprob: -13.655176162719727
    10. '```' → logprob: -16.780176162719727

Token 149: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.10020849853754044
    2. ' count' → logprob: -2.3502085208892822
    3. '	count' → logprob: -13.600208282470703
    4. ' ' → logprob: -15.850208282470703
    5. '$count' → logprob: -16.350208282470703
    6. '(count' → logprob: -16.725208282470703
    7. '_count' → logprob: -16.975208282470703
    8. 'c' → logprob: -17.475208282470703
    9. '<count' → logprob: -17.600208282470703
    10. '.count' → logprob: -17.725208282470703

Token 150: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.0802738870552275e-05
    2. '[' → logprob: -11.75001049041748
    3. 'u' → logprob: -13.00001049041748
    4. '[user' → logprob: -15.12501049041748
    5. '[v' → logprob: -15.25001049041748
    6. '```' → logprob: -17.000011444091797
    7. '(u' → logprob: -18.000011444091797
    8. ' [' → logprob: -18.750011444091797
    9. '[
' → logprob: -18.875011444091797
    10. '[o' → logprob: -19.375011444091797

Token 151: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001236060750670731
    2. ' dist' → logprob: -7.1262359619140625
    3. '(dist' → logprob: -7.7512359619140625
    4. '	dist' → logprob: -14.626235961914062
    5. ' (' → logprob: -15.126235961914062
    6. '   ' → logprob: -15.501235961914062
    7. 'count' → logprob: -15.501235961914062
    8. '_dist' → logprob: -16.626235961914062
    9. '(' → logprob: -17.001235961914062
    10. 'd' → logprob: -17.376235961914062

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015455135144293308
    2. ',count' → logprob: -8.875154495239258
    3. ' ,' → logprob: -11.250154495239258
    4. ',
' → logprob: -14.125154495239258
    5. '[count' → logprob: -14.875154495239258
    6. '<|end|>' → logprob: -15.750154495239258
    7. ',c' → logprob: -16.750154495239258
    8. '‌,' → logprob: -16.875154495239258
    9. ',user' → logprob: -17.375154495239258
    10. ',status' → logprob: -17.625154495239258

Token 156: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.20141352713108063
    2. ' count' → logprob: -1.7014135122299194
    3. '[count' → logprob: -15.57641315460205
    4. '	count' → logprob: -16.701414108276367
    5. ' ' → logprob: -17.451414108276367
    6. '(count' → logprob: -17.701414108276367
    7. 'counts' → logprob: -17.826414108276367
    8. ' counts' → logprob: -18.951414108276367
    9. '$count' → logprob: -19.076414108276367
    10. '<count' → logprob: -19.076414108276367

Token 157: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5143621563911438
    2. '
' → logprob: -1.514362096786499
    3. '<|end|>' → logprob: -2.014362096786499
    4. 'n' → logprob: -3.764362096786499
    5. '#' → logprob: -4.764362335205078
    6. '```' → logprob: -5.014362335205078
    7. '\n' → logprob: -5.514362335205078
    8. '(n' → logprob: -6.514362335205078
    9. '(' → logprob: -6.889362335205078
    10. 'graph' → logprob: -7.389362335205078

Token 159: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0993187353014946
    2. ' shortest' → logprob: -2.974318742752075
    3. ' bfs' → logprob: -4.099318504333496
    4. ' ' → logprob: -4.224318504333496
    5. ' solve' → logprob: -5.224318504333496
    6. ' bell' → logprob: -5.849318504333496
    7. ' flo' → logprob: -6.849318504333496
    8. ' find' → logprob: -6.849318504333496
    9. ' dfs' → logprob: -7.474318504333496
    10. 'main' → logprob: -7.724318504333496

Token 160: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.958325295476243e-05
    2. '(' → logprob: -10.000079154968262
    3. ' ():' → logprob: -11.125079154968262
    4. '():
' → logprob: -11.250079154968262
    5. '()' → logprob: -12.500079154968262
    6. '(:' → logprob: -14.000079154968262
    7. '(":' → logprob: -14.125079154968262
    8. ':' → logprob: -14.250079154968262
    9. '(n' → logprob: -16.250080108642578
    10. '():
' → logprob: -16.375080108642578

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3549835979938507
    2. ' n' → logprob: -1.7299835681915283
    3. 'n' → logprob: -2.4799835681915283
    4. '(' → logprob: -4.104983806610107
    5. '(n' → logprob: -4.229983806610107
    6. ' 
' → logprob: -6.479983806610107
    7. '()' → logprob: -6.479983806610107
    8. '    ' → logprob: -7.104983806610107
    9. '    
' → logprob: -7.229983806610107
    10. ' (' → logprob: -7.729983806610107

Token 162: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.026930155232548714
    2. 'n' → logprob: -3.651930093765259
    3. ' input' → logprob: -8.02692985534668
    4. ' import' → logprob: -8.90192985534668
    5. ' ' → logprob: -9.15192985534668
    6. ' t' → logprob: -10.65192985534668
    7. '   ' → logprob: -11.27692985534668
    8. 'input' (adapté à ' input') → logprob: -12.15192985534668
    9. ' 
' → logprob: -12.90192985534668
    10. 'import' → logprob: -13.02692985534668

Token 163: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003754829056560993
    2. '_data' → logprob: -6.628754615783691
    3. '(' → logprob: -6.753754615783691
    4. '_line' → logprob: -7.378754615783691
    5. ' =' → logprob: -8.378754615783691
    6. '().' → logprob: -9.128754615783691
    7. '_' → logprob: -9.503754615783691
    8. '=' → logprob: -9.503754615783691
    9. '_lines' → logprob: -10.128754615783691
    10. '()]' → logprob: -11.003754615783691

Token 164: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.07889385521411896
    2. 'sys' → logprob: -2.5788938999176025
    3. '	sys' → logprob: -12.703893661499023
    4. '=sys' → logprob: -14.328893661499023
    5. '(sys' → logprob: -15.453893661499023
    6. ' lambda' → logprob: -15.453893661499023
    7. 'lambda' → logprob: -17.078893661499023
    8. ' ' → logprob: -17.203893661499023
    9. 'input' → logprob: -18.703893661499023
    10. ' input' → logprob: -19.203893661499023

Token 165: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.47469279170036316
    2. '.' → logprob: -0.9746928215026855
    3. '.readline' → logprob: -7.5996928215026855
    4. '.stdout' → logprob: -9.974692344665527
    5. '.argv' → logprob: -10.349692344665527
    6. ' .' → logprob: -11.724692344665527
    7. '.input' → logprob: -11.849692344665527
    8. '.
' → logprob: -11.974692344665527
    9. '.std' → logprob: -12.099692344665527
    10. '.setdefault' → logprob: -13.224692344665527

Token 166: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0008074867073446512
    2. '.read' → logprob: -7.625807285308838
    3. '.' → logprob: -8.500807762145996
    4. 'read' → logprob: -9.125807762145996
    5. '.readlines' → logprob: -12.875807762145996
    6. ' readline' → logprob: -13.500807762145996
    7. '_read' → logprob: -14.125807762145996
    8. '.buffer' → logprob: -14.250807762145996
    9. ' .' → logprob: -14.375807762145996
    10. 'buffer' → logprob: -14.750807762145996

Token 167: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10247381031513214
    2. '(n' → logprob: -2.727473735809326
    3. '()' → logprob: -4.352473735809326
    4. 'n' → logprob: -5.227473735809326
    5. ' n' → logprob: -5.352473735809326
    6. '    
' → logprob: -5.727473735809326
    7. '
' → logprob: -5.852473735809326
    8. '  
' → logprob: -7.227473735809326
    9. '  ' → logprob: -7.727473735809326
    10. ' ' → logprob: -7.852473735809326

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059491053223609924
    2. 'n' → logprob: -2.9344911575317383
    3. ' n' → logprob: -5.934491157531738
    4. '
' → logprob: -7.059491157531738
    5. '    
' → logprob: -7.184491157531738
    6. '(n' → logprob: -8.809491157531738
    7. '	n' → logprob: -9.059491157531738
    8. '    ' → logprob: -10.809491157531738
    9. ' 
' → logprob: -11.809491157531738
    10. '  ' → logprob: -12.184491157531738

Token 169: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23626646399497986
    2. ' n' → logprob: -1.6112664937973022
    3. '   ' → logprob: -4.611266613006592
    4. 'N' → logprob: -7.736266613006592
    5. 'V' → logprob: -9.361266136169434
    6. ' N' → logprob: -9.486266136169434
    7. '    
' → logprob: -9.611266136169434
    8. 't' → logprob: -9.986266136169434
    9. ' V' → logprob: -10.361266136169434
    10. ' t' → logprob: -10.486266136169434

Token 170: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.00595261761918664
    2. 'True' → logprob: -5.130952835083008
    3. '(True' → logprob: -10.755952835083008
    4. ' Tru' → logprob: -13.255952835083008
    5. '1' → logprob: -15.005952835083008
    6. ' ' → logprob: -15.130952835083008
    7. '=True' → logprob: -15.255952835083008
    8. ' T' → logprob: -16.880952835083008
    9. ' (' → logprob: -18.130952835083008
    10. 'Tr' → logprob: -18.630952835083008

Token 171: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018598433583974838
    2. '():' → logprob: -4.018598556518555
    3. '(' → logprob: -8.643598556518555
    4. ':
' → logprob: -9.018598556518555
    5. ' :' → logprob: -10.018598556518555
    6. ',' → logprob: -10.643598556518555
    7. '():
' → logprob: -10.768598556518555
    8. '   ' → logprob: -10.768598556518555
    9. '):' → logprob: -11.268598556518555
    10. ':**' → logprob: -11.268598556518555

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18610398471355438
    2. '   ' → logprob: -1.9361039400100708
    3. '    ' → logprob: -3.8111040592193604
    4. ' ' → logprob: -6.811103820800781
    5. ' line' → logprob: -6.936103820800781
    6. '  ' → logprob: -7.686103820800781
    7. ' try' → logprob: -8.186103820800781
    8. '      ' → logprob: -8.561103820800781
    9. ' n' → logprob: -9.186103820800781
    10. '     ' → logprob: -9.186103820800781

Token 173: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5128968954086304
    2. ' n' → logprob: -1.0128968954086304
    3. 'n' (adapté à ' n') → logprob: -3.63789701461792
    4. 'line' → logprob: -4.63789701461792
    5. '   ' → logprob: -6.26289701461792
    6. ' try' → logprob: -9.137896537780762
    7. ' N' → logprob: -10.762896537780762
    8. ' l' → logprob: -10.762896537780762
    9. ' data' → logprob: -11.887896537780762
    10. '    ' → logprob: -12.137896537780762

Token 174: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16406799852848053
    2. '=' → logprob: -1.9140679836273193
    3. ',' → logprob: -5.789068222045898
    4. ' ==' → logprob: -7.914068222045898
    5. ' >' → logprob: -8.914068222045898
    6. ' ' → logprob: -9.414068222045898
    7. ' ,' → logprob: -9.664068222045898
    8. ' :=' → logprob: -10.414068222045898
    9. '>' → logprob: -10.664068222045898
    10. '   ' → logprob: -10.914068222045898

Token 175: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4743676483631134
    2. ' m' → logprob: -0.974367618560791
    3. 's' → logprob: -9.47436809539795
    4. 'k' → logprob: -9.84936809539795
    5. ' s' → logprob: -10.47436809539795
    6. 'w' → logprob: -10.59936809539795
    7. ' k' → logprob: -10.72436809539795
    8. ' w' → logprob: -10.84936809539795
    9. ' t' → logprob: -11.34936809539795
    10. 'q' → logprob: -11.47436809539795

Token 176: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126929372549057
    2. '=' → logprob: -2.12692928314209
    3. ')' → logprob: -14.50192928314209
    4. '=input' → logprob: -14.87692928314209
    5. ',' → logprob: -15.25192928314209
    6. '=line' → logprob: -16.626930236816406
    7. '<|end|>' → logprob: -17.001930236816406
    8. ' ' → logprob: -17.126930236816406
    9. '＝' → logprob: -17.376930236816406
    10. ')=' → logprob: -18.126930236816406

Token 177: ' p' (ID: 275)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4334334433078766
    2. 'q' → logprob: -1.6834334135055542
    3. 't' → logprob: -1.9334334135055542
    4. 'p' → logprob: -4.683433532714844
    5. 'k' → logprob: -5.058433532714844
    6. 'start' → logprob: -6.433433532714844
    7. ' s' → logprob: -6.808433532714844
    8. 'r' → logprob: -7.558433532714844
    9. 'c' → logprob: -7.683433532714844
    10. 'x' → logprob: -7.808433532714844

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868771195411682
    2. '=' → logprob: -1.1368770599365234
    3. ',' → logprob: -12.886877059936523
    4. ' ' → logprob: -13.136877059936523
    5. ')' → logprob: -13.636877059936523
    6. '=input' → logprob: -15.886877059936523
    7. '=line' → logprob: -17.011877059936523
    8. '[' → logprob: -17.261877059936523
    9. '  ' → logprob: -17.386877059936523
    10. ' ,' → logprob: -17.511877059936523

Token 179: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.12700864672660828
    2. 'map' → logprob: -2.1270086765289307
    3. ' input' → logprob: -10.627008438110352
    4. ' sys' → logprob: -10.627008438110352
    5. 'input' → logprob: -10.752008438110352
    6. ' list' → logprob: -12.252008438110352
    7. 'sys' → logprob: -13.627008438110352
    8. 'list' → logprob: -13.627008438110352
    9. '(map' → logprob: -13.752008438110352
    10. ' ' → logprob: -14.252008438110352

Token 180: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09060094505548477
    2. '(int' → logprob: -3.0906009674072266
    3. '(lambda' → logprob: -3.9656009674072266
    4. '(input' → logprob: -4.340600967407227
    5. '(str' → logprob: -4.715600967407227
    6. '(sys' → logprob: -9.840600967407227
    7. '(list' → logprob: -10.590600967407227
    8. '(eval' → logprob: -10.715600967407227
    9. '(
' → logprob: -10.965600967407227
    10. '(line' → logprob: -11.340600967407227

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2926330268383026
    2. '(input' → logprob: -2.292633056640625
    3. ',input' → logprob: -2.292633056640625
    4. '(sys' → logprob: -3.792633056640625
    5. '(' → logprob: -3.917633056640625
    6. 'input' → logprob: -5.292633056640625
    7. '(),' → logprob: -6.292633056640625
    8. 'sys' → logprob: -6.667633056640625
    9. ')' → logprob: -7.167633056640625
    10. ' ,' → logprob: -9.292633056640625

Token 182: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4741276502609253
    2. 'input' → logprob: -0.9741276502609253
    3. 'sys' → logprob: -10.724127769470215
    4. ' sys' → logprob: -10.849127769470215
    5. ')' → logprob: -12.099127769470215
    6. ' ' → logprob: -13.599127769470215
    7. '(input' → logprob: -14.724127769470215
    8. '=input' → logprob: -14.849127769470215
    9. '    ' → logprob: -15.099127769470215
    10. 'str' → logprob: -15.349127769470215

Token 183: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000433291686931625
    2. '()' → logprob: -7.750433444976807
    3. '())' → logprob: -13.625432968139648
    4. '(' → logprob: -15.000432968139648
    5. '()
' → logprob: -15.000432968139648
    6. ' ().' → logprob: -15.000432968139648
    7. '().'' → logprob: -15.875432968139648
    8. ')' → logprob: -16.12543296813965
    9. '()[' → logprob: -16.12543296813965
    10. '('' → logprob: -17.12543296813965

Token 184: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5761625170707703
    2. 'split' → logprob: -0.8261625170707703
    3. 'rstrip' → logprob: -8.451162338256836
    4. ' strip' → logprob: -12.576162338256836
    5. '().' → logprob: -12.701162338256836
    6. ' split' → logprob: -13.451162338256836
    7. 'read' → logprob: -13.826162338256836
    8. ')' → logprob: -15.576162338256836
    9. '(split' → logprob: -16.576162338256836
    10. '-strip' → logprob: -16.826162338256836

Token 185: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00035214703530073166
    2. '())' → logprob: -8.750351905822754
    3. '()' → logprob: -8.875351905822754
    4. ')
' → logprob: -10.250351905822754
    5. '))' → logprob: -11.875351905822754
    6. '(' → logprob: -11.875351905822754
    7. ' )' → logprob: -13.625351905822754
    8. ')`' → logprob: -14.250351905822754
    9. ',' → logprob: -14.750351905822754
    10. '),' → logprob: -14.750351905822754

Token 186: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06153039261698723
    2. ' ' → logprob: -3.561530351638794
    3. 'if' (adapté à ' if') → logprob: -3.811530351638794
    4. '       ' → logprob: -5.311530590057373
    5. '<|end|>' → logprob: -6.186530590057373
    6. '        ' → logprob: -6.936530590057373
    7. ' 
' → logprob: -7.311530590057373
    8. '        
' → logprob: -8.561530113220215
    9. '    ' → logprob: -9.311530113220215
    10. '\n' → logprob: -9.811530113220215

Token 188: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07892074435949326
    2. 'n' → logprob: -2.578920841217041
    3. ' not' → logprob: -10.453920364379883
    4. '(n' → logprob: -13.953920364379883
    5. ' (' → logprob: -14.078920364379883
    6. '	n' → logprob: -15.578920364379883
    7. 'not' → logprob: -16.328920364379883
    8. ' ' → logprob: -16.578920364379883
    9. '(' → logprob: -17.078920364379883
    10. ' ' → logprob: -17.328920364379883

Token 189: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4742264747619629
    2. '==' → logprob: -0.9742264747619629
    3. '=' → logprob: -9.099225997924805
    4. ' =' → logprob: -11.349225997924805
    5. ')==' → logprob: -11.974225997924805
    6. '<=' → logprob: -12.474225997924805
    7. ' <=' → logprob: -12.724225997924805
    8. ')' → logprob: -12.849225997924805
    9. ' ' → logprob: -12.974225997924805
    10. ',' → logprob: -13.724225997924805

Token 190: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08893957734107971
    2. ' ' → logprob: -2.463939666748047
    3. '۰' → logprob: -17.213939666748047
    4. ' ' → logprob: -17.463939666748047
    5. '  ' → logprob: -17.588939666748047
    6. '   ' → logprob: -18.338939666748047
    7. ' 
' → logprob: -18.963939666748047
    8. '０' → logprob: -19.151439666748047
    9. 'o' → logprob: -19.338939666748047
    10. 'p' → logprob: -19.338939666748047

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '۰' → logprob: -20.250009536743164
    4. '０' → logprob: -21.750009536743164
    5. '```' → logprob: -22.125009536743164
    6. 'o' → logprob: -22.125009536743164
    7. 'p' → logprob: -22.250009536743164
    8. 'q' → logprob: -22.625009536743164
    9. '​' → logprob: -22.750009536743164
    10. 's' → logprob: -22.812509536743164

Token 192: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1603270024061203
    2. 'and' → logprob: -1.9103269577026367
    3. ':' → logprob: -10.035326957702637
    4. '<|end|>' → logprob: -10.535326957702637
    5. ' or' → logprob: -11.285326957702637
    6. ' ' → logprob: -11.910326957702637
    7. ',' → logprob: -12.035326957702637
    8. '	and' → logprob: -12.535326957702637
    9. '   ' → logprob: -13.660326957702637
    10. ' a' → logprob: -14.410326957702637

Token 193: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3868764638900757
    2. 'm' → logprob: -1.1368764638900757
    3. ' ' → logprob: -12.886876106262207
    4. '	m' → logprob: -13.386876106262207
    5. '   ' → logprob: -14.261876106262207
    6. ' ' → logprob: -14.511876106262207
    7. '  ' → logprob: -16.511877059936523
    8. '
' → logprob: -16.886877059936523
    9. '    ' → logprob: -17.261877059936523
    10. ',m' → logprob: -18.324377059936523

Token 194: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014530257321894169
    2. '==' → logprob: -4.264530181884766
    3. ' ' → logprob: -8.389530181884766
    4. '<|end|>' → logprob: -9.264530181884766
    5. '0' → logprob: -10.764530181884766
    6. ' ' → logprob: -11.764530181884766
    7. ' and' → logprob: -11.889530181884766
    8. '<|end|>' → logprob: -12.139530181884766
    9. ' =' → logprob: -13.764530181884766
    10. ' ===' → logprob: -14.514530181884766

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02630053460597992
    2. ' ' → logprob: -3.6513004302978516
    3. '<|end|>' → logprob: -16.02630043029785
    4. ' ' → logprob: -17.27630043029785
    5. '  ' → logprob: -17.65130043029785
    6. '<|end|>' → logprob: -18.15130043029785
    7. 'and' → logprob: -18.40130043029785
    8. '۰' → logprob: -18.40130043029785
    9. '   ' → logprob: -18.65130043029785
    10. ' and' → logprob: -18.83880043029785

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017025562701746821
    2. ' ' → logprob: -6.376702785491943
    3. 'and' → logprob: -16.3767032623291
    4. '<|end|>' → logprob: -16.5017032623291
    5. '  ' → logprob: -16.6267032623291
    6. ' and' → logprob: -16.8767032623291
    7. 'p' → logprob: -17.1267032623291
    8. '   ' → logprob: -17.6267032623291
    9. ' p' → logprob: -18.0642032623291
    10. '۰' → logprob: -18.2517032623291

Token 197: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007607220206409693
    2. 'and' → logprob: -4.8826069831848145
    3. '0' → logprob: -14.632607460021973
    4. ' ' → logprob: -15.382607460021973
    5. '	and' → logprob: -15.382607460021973
    6. '<|end|>' → logprob: -16.007606506347656
    7. ' и' → logprob: -16.507606506347656
    8. ' ' → logprob: -17.257606506347656
    9. '<|end|>' → logprob: -17.632606506347656
    10. ',' → logprob: -18.007606506347656

Token 198: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2520769536495209
    2. ' p' → logprob: -1.5020769834518433
    3. '0' → logprob: -8.877077102661133
    4. ' ' → logprob: -11.752077102661133
    5. '   ' → logprob: -15.252077102661133
    6. '	p' → logprob: -16.252077102661133
    7. '  ' → logprob: -16.502077102661133
    8. ' ' → logprob: -18.252077102661133
    9. '    ' → logprob: -18.752077102661133
    10. 'n' → logprob: -19.252077102661133

Token 199: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4362497925758362
    2. ' ==' → logprob: -1.0612497329711914
    3. ':' → logprob: -5.686249732971191
    4. '=' → logprob: -6.186249732971191
    5. '<|end|>' → logprob: -7.061249732971191
    6. ')' → logprob: -7.811249732971191
    7. ')==' → logprob: -7.936249732971191
    8. '0' → logprob: -9.186249732971191
    9. '()==' → logprob: -9.686249732971191
    10. '<|end|>' → logprob: -9.936249732971191

Token 200: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012510117143392563
    2. ' ' → logprob: -4.387510299682617
    3. '  ' → logprob: -15.387510299682617
    4. '   ' → logprob: -15.387510299682617
    5. '۰' → logprob: -18.387510299682617
    6. '    ' → logprob: -18.512510299682617
    7. '<|end|>' → logprob: -19.137510299682617
    8. ' ' → logprob: -19.575010299682617
    9. '     ' → logprob: -19.637510299682617
    10. ' -' → logprob: -20.200010299682617

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.250024795532227
    4. '-' → logprob: -16.625024795532227
    5. '
' → logprob: -16.812524795532227
    6. '۰' → logprob: -17.500024795532227
    7. '  ' → logprob: -17.562524795532227
    8. '```' → logprob: -18.125024795532227
    9. ' ' → logprob: -18.812524795532227
    10. '1' → logprob: -19.312524795532227

Token 202: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016050441190600395
    2. ':
' → logprob: -4.141050338745117
    3. '       ' → logprob: -11.641050338745117
    4. '           ' → logprob: -12.891050338745117
    5. '   ' → logprob: -13.266050338745117
    6. ':return' → logprob: -13.516050338745117
    7. ' :' → logprob: -14.266050338745117
    8. ':
' → logprob: -14.516050338745117
    9. ' :
' → logprob: -15.516050338745117
    10. '):' → logprob: -16.141050338745117

Token 203: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050304900854825974
    2. '       ' → logprob: -3.050304889678955
    3. ':' → logprob: -7.050304889678955
    4. ':
' → logprob: -8.050305366516113
    5. '\n' → logprob: -9.050305366516113
    6. ' break' → logprob: -9.425305366516113
    7. '		' → logprob: -9.425305366516113
    8. '
' → logprob: -9.925305366516113
    9. '               ' → logprob: -10.050305366516113
    10. '   ' → logprob: -10.175305366516113

Token 204: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.10587767511606216
    2. 'break' (adapté à ' break') → logprob: -2.355877637863159
    3. '           ' → logprob: -5.730877876281738
    4. '       ' → logprob: -6.355877876281738
    5. '	break' → logprob: -8.105877876281738
    6. 'return' → logprob: -8.480877876281738
    7. ' return' → logprob: -8.980877876281738
    8. '
' → logprob: -11.230877876281738
    9. '               ' → logprob: -11.605877876281738
    10. '   ' → logprob: -11.605877876281738

Token 205: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019744619727134705
    2. '
' → logprob: -4.269744396209717
    3. '        
' → logprob: -5.394744396209717
    4. '<|end|>' → logprob: -7.394744396209717
    5. '   ' → logprob: -8.894744873046875
    6. '    
' → logprob: -9.394744873046875
    7. '  
' → logprob: -10.019744873046875
    8. 'graph' → logprob: -10.394744873046875
    9. '```' → logprob: -10.769744873046875
    10. ' 
' → logprob: -11.144744873046875

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4705100655555725
    2. '
' → logprob: -1.2205100059509277
    3. '        
' → logprob: -2.8455100059509277
    4. ' 
' → logprob: -5.220510005950928
    5. '    
' → logprob: -5.595510005950928
    6. '   ' → logprob: -5.845510005950928
    7. '<|end|>' → logprob: -5.970510005950928
    8. 'n' → logprob: -6.345510005950928
    9. '' → logprob: -6.720510005950928
    10. '  
' → logprob: -7.220510005950928

Token 207: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.10053154081106186
    2. ' graph' → logprob: -2.350531578063965
    3. '	graph' → logprob: -8.850531578063965
    4. '       ' → logprob: -9.100531578063965
    5. '   ' → logprob: -10.225531578063965
    6. '
' → logprob: -10.475531578063965
    7. '        
' → logprob: -12.975531578063965
    8. '_graph' → logprob: -13.975531578063965
    9. '(graph' → logprob: -14.600531578063965
    10. '```' → logprob: -14.725531578063965

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012510117143392563
    2. '=' → logprob: -4.387510299682617
    3. '[' → logprob: -15.637510299682617
    4. ' ' → logprob: -16.387510299682617
    5. '=[]' → logprob: -16.637510299682617
    6. '＝' → logprob: -16.887510299682617
    7. ' =[' → logprob: -16.887510299682617
    8. ' =
' → logprob: -17.512510299682617
    9. ')' → logprob: -17.512510299682617
    10. ']' → logprob: -18.012510299682617

Token 209: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12693241238594055
    2. ' [[]' → logprob: -2.126932382583618
    3. ' [' → logprob: -12.876932144165039
    4. '[[' → logprob: -14.376932144165039
    5. 'default' → logprob: -14.626932144165039
    6. '[]' → logprob: -15.126932144165039
    7. '[n' → logprob: -15.376932144165039
    8. '{' → logprob: -15.876932144165039
    9. '   ' → logprob: -16.12693214416504
    10. '[node' → logprob: -18.37693214416504

Token 210: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6932445764541626
    2. 'for' → logprob: -0.6932445764541626
    3. ',' → logprob: -9.818244934082031
    4. ')' → logprob: -11.068244934082031
    5. ']' → logprob: -11.068244934082031
    6. '	for' → logprob: -12.568244934082031
    7. '
' → logprob: -12.693244934082031
    8. 'n' → logprob: -13.568244934082031
    9. ' ' → logprob: -13.693244934082031
    10. '   ' → logprob: -14.193244934082031

Token 211: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8524671196937561
    2. ' range' → logprob: -1.2274670600891113
    3. 'range' → logprob: -1.8524670600891113
    4. ' in' → logprob: -2.3524670600891113
    5. 'in' → logprob: -3.9774670600891113
    6. '(range' → logprob: -5.352467060089111
    7. ' _' → logprob: -5.477467060089111
    8. '_range' → logprob: -7.602467060089111
    9. 'n' → logprob: -8.72746753692627
    10. ' ' → logprob: -9.97746753692627

Token 212: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4995068311691284
    2. ' in' → logprob: -0.9995068311691284
    3. 'range' → logprob: -3.749506950378418
    4. ' range' → logprob: -6.874506950378418
    5. 'n' → logprob: -7.624506950378418
    6. '(n' → logprob: -10.124506950378418
    7. 'ange' → logprob: -11.999506950378418
    8. '(range' → logprob: -12.874506950378418
    9. ' ' → logprob: -12.999506950378418
    10. 'i' → logprob: -13.499506950378418

Token 213: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0380457378923893
    2. ' range' → logprob: -3.288045644760132
    3. 'n' → logprob: -12.913045883178711
    4. '(range' → logprob: -13.288045883178711
    5. '	range' → logprob: -17.03804588317871
    6. 'r' → logprob: -18.03804588317871
    7. ' ' → logprob: -18.28804588317871
    8. '   ' → logprob: -18.41304588317871
    9. '(n' → logprob: -18.66304588317871
    10. ' n' → logprob: -19.28804588317871

Token 214: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.816093228830141e-06
    2. 'n' → logprob: -13.25000286102295
    3. '(' → logprob: -14.00000286102295
    4. ' (' → logprob: -16.000001907348633
    5. ' n' → logprob: -17.000001907348633
    6. ')n' → logprob: -18.750001907348633
    7. '(
' → logprob: -20.125001907348633
    8. '	n' → logprob: -20.375001907348633
    9. ',n' → logprob: -20.375001907348633
    10. '[n' → logprob: -21.500001907348633

Token 215: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.0683535037969705e-05
    2. ' )' → logprob: -12.12501049041748
    3. ')]
' → logprob: -12.37501049041748
    4. ')' → logprob: -14.00001049041748
    5. ']' → logprob: -15.75001049041748
    6. ')]
' → logprob: -17.250011444091797
    7. '       ' → logprob: -17.750011444091797
    8. ' ' → logprob: -17.750011444091797
    9. ' ]' → logprob: -17.750011444091797
    10. '')]' → logprob: -17.750011444091797

Token 216: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3945060968399048
    2. 'for' → logprob: -1.7695060968399048
    3. '	for' → logprob: -2.2695059776306152
    4. '   ' → logprob: -3.3945059776306152
    5. '       ' → logprob: -4.519505977630615
    6. '<|end|>' → logprob: -5.144505977630615
    7. ' ' → logprob: -7.519505977630615
    8. '    
' → logprob: -7.894505977630615
    9. '	
' → logprob: -8.769506454467773
    10. '        
' → logprob: -9.269506454467773

Token 217: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018186001107096672
    2. ' for' → logprob: -4.018186092376709
    3. '	for' → logprob: -10.39318561553955
    4. '   ' → logprob: -12.64318561553955
    5. '       ' → logprob: -13.14318561553955
    6. '
' → logprob: -15.51818561553955
    7. '```' → logprob: -17.643186569213867
    8. ' ' → logprob: -17.768186569213867
    9. '	' → logprob: -18.143186569213867
    10. '        
' → logprob: -18.518186569213867

Token 218: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01815006136894226
    2. ' _' → logprob: -4.0181498527526855
    3. '_i' → logprob: -16.518150329589844
    4. ' in' → logprob: -17.768150329589844
    5. ' ' → logprob: -18.518150329589844
    6. ' i' → logprob: -19.643150329589844
    7. '_=' → logprob: -19.768150329589844
    8. ' _
' → logprob: -20.018150329589844
    9. '_
' → logprob: -20.393150329589844
    10. '_range' → logprob: -20.393150329589844

Token 219: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5813021659851074
    2. 'in' → logprob: -0.8313021659851074
    3. 'range' → logprob: -5.331302165985107
    4. ' range' → logprob: -8.081302642822266
    5. ' ' → logprob: -8.956302642822266
    6. '(' → logprob: -9.956302642822266
    7. '  ' → logprob: -11.581302642822266
    8. '_' → logprob: -12.456302642822266
    9. '(range' → logprob: -13.206302642822266
    10. 'import' → logprob: -13.206302642822266

Token 220: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001502717612311244
    2. ' range' → logprob: -6.501502513885498
    3. '(range' → logprob: -15.501502990722656
    4. 'ange' → logprob: -16.501502990722656
    5. '	range' → logprob: -17.001502990722656
    6. 'm' → logprob: -17.626502990722656
    7. ')' → logprob: -18.251502990722656
    8. 'in' → logprob: -18.751502990722656
    9. ' ' → logprob: -18.876502990722656
    10. 'rang' → logprob: -19.251502990722656

Token 221: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.1994775377388578e-05
    2. 'm' → logprob: -12.000012397766113
    3. ' m' → logprob: -13.125012397766113
    4. ' (' → logprob: -13.125012397766113
    5. '(' → logprob: -13.250012397766113
    6. '	m' → logprob: -17.375011444091797
    7. '(M' → logprob: -17.875011444091797
    8. '   ' → logprob: -18.875011444091797
    9. '(p' → logprob: -19.000011444091797
    10. ',m' → logprob: -19.250011444091797

Token 222: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011204026639461517
    2. '):
' → logprob: -4.511204242706299
    3. ' ):' → logprob: -9.63620376586914
    4. ':' → logprob: -9.76120376586914
    5. ')' → logprob: -11.76120376586914
    6. '):
' → logprob: -11.76120376586914
    7. '       ' → logprob: -12.01120376586914
    8. '   ' → logprob: -12.51120376586914
    9. '():' → logprob: -13.01120376586914
    10. ',' → logprob: -13.38620376586914

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12074682861566544
    2. ' u' → logprob: -3.1207468509674072
    3. '   ' → logprob: -3.3707468509674072
    4. 'u' → logprob: -4.120746612548828
    5. ' v' → logprob: -5.495746612548828
    6. 'v' → logprob: -5.870746612548828
    7. ' line' → logprob: -6.120746612548828
    8. ',' → logprob: -6.495746612548828
    9. '	       ' → logprob: -6.495746612548828
    10. ' ,' → logprob: -6.620746612548828

Token 224: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.3322610557079315
    2. ' u' → logprob: -1.457261085510254
    3. 'a' → logprob: -3.082261085510254
    4. ' a' → logprob: -5.582261085510254
    5. 's' → logprob: -8.957261085510254
    6. 'x' → logprob: -10.207261085510254
    7. '   ' → logprob: -10.957261085510254
    8. ' s' → logprob: -11.207261085510254
    9. '	u' → logprob: -12.957261085510254
    10. ' x' → logprob: -13.332261085510254

Token 225: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003434942802414298
    2. ' ,' → logprob: -5.878435134887695
    3. ',v' → logprob: -7.378435134887695
    4. ',u' → logprob: -13.003435134887695
    5. ' v' → logprob: -14.253435134887695
    6. '<|end|>' → logprob: -14.628435134887695
    7. ',w' → logprob: -15.628435134887695
    8. 'v' → logprob: -15.628435134887695
    9. ',int' → logprob: -15.753435134887695
    10. '‌,' → logprob: -15.753435134887695

Token 226: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025467700324952602
    2. '=' → logprob: -6.377546787261963
    3. ',w' → logprob: -7.627546787261963
    4. ' ,' → logprob: -8.752546310424805
    5. ',v' → logprob: -9.502546310424805
    6. ',u' → logprob: -10.127546310424805
    7. ',input' → logprob: -10.877546310424805
    8. ',p' → logprob: -11.002546310424805
    9. ' =' → logprob: -11.127546310424805
    10. 'w' → logprob: -12.127546310424805

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931560039520264
    2. ' =' → logprob: -0.6931560039520264
    3. ',' → logprob: -11.943156242370605
    4. '=input' → logprob: -13.568156242370605
    5. ')' → logprob: -15.068156242370605
    6. ' ' → logprob: -15.068156242370605
    7. '=line' → logprob: -15.818156242370605
    8. ' ,' → logprob: -16.06815528869629
    9. '＝' → logprob: -16.69315528869629
    10. '    ' → logprob: -16.81815528869629

Token 228: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5759395956993103
    2. ' map' → logprob: -0.8259395956993103
    3. '	map' → logprob: -16.325939178466797
    4. 'm' → logprob: -17.075939178466797
    5. '   ' → logprob: -17.950939178466797
    6. ' ' → logprob: -18.575939178466797
    7. '    ' → logprob: -18.700939178466797
    8. '(map' → logprob: -19.200939178466797
    9. '  ' → logprob: -19.825939178466797
    10. '.map' → logprob: -20.200939178466797

Token 229: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.080963092041202e-06
    2. 'int' → logprob: -12.625004768371582
    3. '[int' → logprob: -14.375004768371582
    4. '=int' → logprob: -15.125004768371582
    5. ',int' → logprob: -15.250004768371582
    6. '(' → logprob: -15.250004768371582
    7. ' int' → logprob: -15.250004768371582
    8. '<int' → logprob: -15.625004768371582
    9. ' (' → logprob: -18.0000057220459
    10. '	int' → logprob: -18.1250057220459

Token 230: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.19098913669586182
    2. ',' → logprob: -1.9409891366958618
    3. '(input' → logprob: -3.5659890174865723
    4. 'input' → logprob: -6.440989017486572
    5. '(' → logprob: -8.31598949432373
    6. ')' → logprob: -8.94098949432373
    7. ' input' → logprob: -10.69098949432373
    8. '=input' → logprob: -11.31598949432373
    9. '[input' → logprob: -11.94098949432373
    10. ')(' → logprob: -12.56598949432373

Token 231: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931471824645996
    2. ' input' → logprob: -0.6931471824645996
    3. ' ' → logprob: -17.693147659301758
    4. '	input' → logprob: -17.818147659301758
    5. '_input' → logprob: -18.193147659301758
    6. 'sys' → logprob: -18.568147659301758
    7. '=input' → logprob: -18.943147659301758
    8. ',input' → logprob: -18.943147659301758
    9. '(input' → logprob: -19.068147659301758
    10. ' sys' → logprob: -19.443147659301758

Token 232: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4974866644479334e-05
    2. '()' → logprob: -11.125015258789062
    3. '(' → logprob: -16.875015258789062
    4. '())' → logprob: -17.000015258789062
    5. ' ().' → logprob: -17.125015258789062
    6. ')' → logprob: -17.500015258789062
    7. '().'' → logprob: -19.500015258789062
    8. '()
' → logprob: -19.625015258789062
    9. '().__' → logprob: -20.000015258789062
    10. '.split' → logprob: -20.375015258789062

Token 233: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.961759259458631e-06
    2. 'strip' → logprob: -12.250004768371582
    3. ' split' → logprob: -17.0000057220459
    4. '(split' → logprob: -17.2500057220459
    5. 'rstrip' → logprob: -17.3750057220459
    6. 'spl' → logprob: -18.0000057220459
    7. ')' → logprob: -20.2500057220459
    8. '.split' → logprob: -20.7500057220459
    9. '```' → logprob: -20.8750057220459
    10. 'plit' → logprob: -20.8750057220459

Token 234: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0077600618824362755
    2. '())' → logprob: -5.007760047912598
    3. ')
' → logprob: -7.007760047912598
    4. '()' → logprob: -9.382760047912598
    5. '())
' → logprob: -10.132760047912598
    6. ' )' → logprob: -12.132760047912598
    7. '(' → logprob: -12.382760047912598
    8. ')#' → logprob: -14.257760047912598
    9. '   ' → logprob: -14.507760047912598
    10. ')`' → logprob: -14.632760047912598

Token 235: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14955386519432068
    2. '<|end|>' → logprob: -2.2745537757873535
    3. '       ' → logprob: -3.8995537757873535
    4. '   ' → logprob: -5.2745537757873535
    5. '
' → logprob: -6.0245537757873535
    6. ')' → logprob: -6.2745537757873535
    7. '            
' → logprob: -7.0245537757873535
    8. '		' → logprob: -7.2745537757873535
    9. ' 
' → logprob: -7.3995537757873535
    10. '<|end|>' → logprob: -7.5245537757873535

Token 236: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.0741451308131218
    2. 'graph' (adapté à ' graph') → logprob: -3.3241450786590576
    3. ' u' → logprob: -3.5741450786590576
    4. 'u' → logprob: -5.699145317077637
    5. '           ' → logprob: -5.824145317077637
    6. '   ' → logprob: -7.699145317077637
    7. '	graph' → logprob: -7.699145317077637
    8. ' v' → logprob: -9.449145317077637
    9. ' if' → logprob: -10.074145317077637
    10. '       ' → logprob: -11.074145317077637

Token 237: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.750000953674316
    3. '[v' → logprob: -15.625000953674316
    4. 'u' → logprob: -18.000001907348633
    5. ' [' → logprob: -18.500001907348633
    6. '[user' → logprob: -18.625001907348633
    7. '[int' → logprob: -19.750001907348633
    8. ')[' → logprob: -20.375001907348633
    9. '
' → logprob: -20.375001907348633
    10. '[w' → logprob: -20.750001907348633

Token 238: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.13095775246620178
    2. '][' → logprob: -2.255957841873169
    3. '[u' → logprob: -4.13095760345459
    4. ']' → logprob: -6.50595760345459
    5. '[v' → logprob: -8.13095760345459
    6. '[' → logprob: -10.00595760345459
    7. '   ' → logprob: -10.88095760345459
    8. ').' → logprob: -11.13095760345459
    9. '-' → logprob: -11.50595760345459
    10. ' ].' → logprob: -11.50595760345459

Token 239: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -8.180258191714529e-06
    2. ' append' → logprob: -12.250008583068848
    3. 'appen' → logprob: -12.875008583068848
    4. '.append' → logprob: -14.375008583068848
    5. '```' → logprob: -16.62500762939453
    6. '_append' → logprob: -16.87500762939453
    7. '	append' → logprob: -17.62500762939453
    8. 'Append' → logprob: -18.50000762939453
    9. 'push' → logprob: -18.50000762939453
    10. 'appe' → logprob: -18.87500762939453

Token 240: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0791361927986145
    2. '(' → logprob: -2.8291361331939697
    3. '(v' → logprob: -4.079136371612549
    4. ' (' → logprob: -9.70413589477539
    5. '(u' → logprob: -10.95413589477539
    6. '<|end|>' → logprob: -11.07913589477539
    7. '(
' → logprob: -13.45413589477539
    8. ' ((' → logprob: -14.70413589477539
    9. '(V' → logprob: -14.70413589477539
    10. '(('' → logprob: -14.95413589477539

Token 241: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.639096970204264e-05
    2. ' v' → logprob: -9.250096321105957
    3. ')v' → logprob: -16.625097274780273
    4. ',v' → logprob: -17.250097274780273
    5. '	v' → logprob: -18.000097274780273
    6. '   ' → logprob: -18.250097274780273
    7. ' ' → logprob: -19.125097274780273
    8. '
' → logprob: -19.250097274780273
    9. '(v' → logprob: -19.625097274780273
    10. '    ' → logprob: -20.250097274780273

Token 242: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028115289751440287
    2. ',w' → logprob: -6.127811431884766
    3. ' ,' → logprob: -7.377811431884766
    4. 'w' → logprob: -14.252811431884766
    5. ',
' → logprob: -14.627811431884766
    6. '‌,' → logprob: -16.252811431884766
    7. '<|end|>' → logprob: -16.752811431884766
    8. '```' → logprob: -16.877811431884766
    9. '),' → logprob: -17.877811431884766
    10. ',W' → logprob: -18.002811431884766

Token 243: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741634726524353
    2. '))' → logprob: -0.9741634726524353
    3. ')
' → logprob: -10.724163055419922
    4. ' )' → logprob: -10.724163055419922
    5. '))
' → logprob: -10.849163055419922
    6. ')))' → logprob: -11.474163055419922
    7. ' ))' → logprob: -11.724163055419922
    8. ',' → logprob: -14.099163055419922
    9. '<|end|>' → logprob: -14.224163055419922
    10. ')}' → logprob: -14.349163055419922

Token 244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12036336213350296
    2. '<|end|>' → logprob: -2.370363473892212
    3. ' graph' → logprob: -5.370363235473633
    4. 'graph' → logprob: -5.495363235473633
    5. '	graph' → logprob: -5.745363235473633
    6. '        ' → logprob: -6.120363235473633
    7. ' ' → logprob: -7.120363235473633
    8. '       ' → logprob: -7.245363235473633
    9. '	       ' → logprob: -7.370363235473633
    10. '<|end|>' → logprob: -7.370363235473633

Token 245: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0210671778768301
    2. ' graph' → logprob: -3.8960671424865723
    3. '	graph' → logprob: -7.646067142486572
    4. '<|end|>' → logprob: -11.02106761932373
    5. '(graph' → logprob: -11.27106761932373
    6. '           ' → logprob: -11.64606761932373
    7. '   ' → logprob: -13.52106761932373
    8. '_graph' → logprob: -13.64606761932373
    9. '       ' → logprob: -14.02106761932373
    10. ' ' → logprob: -14.27106761932373

Token 246: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0032002893276512623
    2. '[u' → logprob: -5.753200054168701
    3. '[' → logprob: -10.75320053100586
    4. '[w' → logprob: -14.37820053100586
    5. 'v' → logprob: -14.87820053100586
    6. '[p' → logprob: -16.25320053100586
    7. ')[' → logprob: -17.12820053100586
    8. ' [' → logprob: -17.25320053100586
    9. '[s' → logprob: -17.37820053100586
    10. '[z' → logprob: -18.25320053100586

Token 247: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.4747348725795746
    2. ').' → logprob: -0.974734902381897
    3. ',' → logprob: -8.474735260009766
    4. ')' → logprob: -8.974735260009766
    5. '.' → logprob: -9.349735260009766
    6. ']' → logprob: -9.849735260009766
    7. '.append' → logprob: -9.849735260009766
    8. ')].' → logprob: -9.849735260009766
    9. ' ].' → logprob: -10.724735260009766
    10. '[' → logprob: -11.099735260009766

Token 248: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. ' append' → logprob: -15.500000953674316
    3. '.append' → logprob: -15.750000953674316
    4. 'appen' → logprob: -15.750000953674316
    5. '	append' → logprob: -17.75
    6. 'app' → logprob: -19.375
    7. 'Append' → logprob: -19.625
    8. '_append' → logprob: -20.5
    9. 'prepend' → logprob: -21.0
    10. '```' → logprob: -21.125

Token 249: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004841153509914875
    2. '(u' → logprob: -5.504841327667236
    3. ' (' → logprob: -7.504841327667236
    4. '(v' → logprob: -8.879840850830078
    5. ' ((' → logprob: -10.129840850830078
    6. '(' → logprob: -10.379840850830078
    7. '<|end|>' → logprob: -14.379840850830078
    8. '(
' → logprob: -14.879840850830078
    9. ',' → logprob: -14.879840850830078
    10. ' ' → logprob: -15.879840850830078

Token 250: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.006281652022153139
    2. '(u' → logprob: -5.131281852722168
    3. ' u' → logprob: -8.256281852722168
    4. ',u' → logprob: -9.756281852722168
    5. ' (' → logprob: -10.881281852722168
    6. ',' → logprob: -11.631281852722168
    7. '[u' → logprob: -12.756281852722168
    8. '	u' → logprob: -13.631281852722168
    9. '   ' → logprob: -14.256281852722168
    10. ' ' → logprob: -14.506281852722168

Token 251: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.006824655458331108
    2. ',' → logprob: -5.006824493408203
    3. ' ,' → logprob: -9.131824493408203
    4. ',
' → logprob: -14.631824493408203
    5. ',W' → logprob: -15.506824493408203
    6. ',v' → logprob: -16.006824493408203
    7. ',y' → logprob: -16.756824493408203
    8. ',int' → logprob: -17.381824493408203
    9. ' ' → logprob: -17.506824493408203
    10. 'w' → logprob: -17.506824493408203

Token 252: '))
' (ID: 2210)
  Prédit: ',w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.3680592179298401
    2. ',' → logprob: -1.2430591583251953
    3. '))' → logprob: -3.9930591583251953
    4. ' ,' → logprob: -6.993059158325195
    5. ' ))' → logprob: -10.993059158325195
    6. ')' → logprob: -11.493059158325195
    7. ',
' → logprob: -11.743059158325195
    8. ',v' → logprob: -12.493059158325195
    9. ',(' → logprob: -12.618059158325195
    10. ',W' → logprob: -12.868059158325195

Token 253: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6040944457054138
    2. '   ' → logprob: -0.9790944457054138
    3. ' dist' → logprob: -2.8540945053100586
    4. '
' → logprob: -5.604094505310059
    5. '       ' → logprob: -5.729094505310059
    6. '	dist' → logprob: -5.729094505310059
    7. '```' → logprob: -6.104094505310059
    8. ' distances' → logprob: -6.229094505310059
    9. '    
' → logprob: -6.229094505310059
    10. '        
' → logprob: -6.479094505310059

Token 254: ' children' (ID: 3953)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004327926319092512
    2. ' dist' → logprob: -6.754327774047852
    3. 'd' → logprob: -6.879327774047852
    4. 'start' → logprob: -7.254327774047852
    5. 'ds' → logprob: -8.004327774047852
    6. '   ' → logprob: -8.754327774047852
    7. 's' → logprob: -8.879327774047852
    8. 'from' → logprob: -9.004327774047852
    9. 'src' → logprob: -9.379327774047852
    10. 'distance' → logprob: -9.879327774047852

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3048001825809479
    2. ',' → logprob: -1.8048001527786255
    3. '=' → logprob: -3.179800271987915
    4. '_dist' → logprob: -3.179800271987915
    5. '_count' → logprob: -5.054800033569336
    6. '_paths' → logprob: -6.429800033569336
    7. 'dist' → logprob: -6.679800033569336
    8. '_counts' → logprob: -6.804800033569336
    9. ' ,' → logprob: -6.929800033569336
    10. '_distance' → logprob: -7.054800033569336

Token 256: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.7278863191604614
    2. 'list' → logprob: -1.6028863191604614
    3. '[' → logprob: -2.227886199951172
    4. ' [' → logprob: -2.852886199951172
    5. 'set' → logprob: -2.977886199951172
    6. '[list' → logprob: -2.977886199951172
    7. ' list' → logprob: -3.727886199951172
    8. 'p' → logprob: -5.102886199951172
    9. '[int' → logprob: -5.227886199951172
    10. ' set' → logprob: -5.852886199951172

Token 257: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1345419883728027
    2. 'False' → logprob: -1.2595419883728027
    3. 'int' → logprob: -1.3845419883728027
    4. '[]' → logprob: -2.3845419883728027
    5. '-' → logprob: -4.009541988372803
    6. 'tuple' → logprob: -5.009541988372803
    7. 'set' → logprob: -5.384541988372803
    8. ']' → logprob: -5.509541988372803
    9. '[int' → logprob: -5.509541988372803
    10. 'i' → logprob: -5.634541988372803

Token 258: '(input' (ID: 10054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6546657085418701
    2. '(input' → logprob: -1.0296657085418701
    3. '(' → logprob: -2.52966570854187
    4. '(i' → logprob: -3.15466570854187
    5. '(token' → logprob: -8.27966594696045
    6. ']' → logprob: -8.65466594696045
    7. '(
' → logprob: -8.90466594696045
    8. '(s' → logprob: -9.65466594696045
    9. ' (' → logprob: -10.27966594696045
    10. ' ' → logprob: -10.27966594696045

Token 259: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3799744248390198
    2. '().' → logprob: -1.379974365234375
    3. '()' → logprob: -2.754974365234375
    4. '()]' → logprob: -7.879974365234375
    5. '()
' → logprob: -8.879974365234375
    6. ')' → logprob: -9.004974365234375
    7. ' ())' → logprob: -9.379974365234375
    8. '.readline' → logprob: -9.629974365234375
    9. '())
' → logprob: -10.004974365234375
    10. '()),' → logprob: -10.629974365234375

Token 260: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018467707559466362
    2. '()]' → logprob: -7.001846790313721
    3. '().' → logprob: -7.626846790313721
    4. '())' → logprob: -8.626846313476562
    5. ')' → logprob: -9.126846313476562
    6. ' ()' → logprob: -9.626846313476562
    7. 'for' → logprob: -10.626846313476562
    8. '(' → logprob: -10.751846313476562
    9. ' for' → logprob: -10.876846313476562
    10. '()
' → logprob: -11.376846313476562

Token 261: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005242652725428343
    2. ' _' → logprob: -5.255242824554443
    3. ' range' → logprob: -12.380242347717285
    4. ' in' → logprob: -13.130242347717285
    5. '_range' → logprob: -13.505242347717285
    6. ' ' → logprob: -14.130242347717285
    7. '_in' → logprob: -15.880242347717285
    8. '_i' → logprob: -16.2552433013916
    9. 'range' → logprob: -16.3802433013916
    10. ' i' → logprob: -16.7552433013916

Token 262: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31766456365585327
    2. 'in' → logprob: -1.567664623260498
    3. 'range' → logprob: -2.817664623260498
    4. ' range' → logprob: -5.567664623260498
    5. ' ' → logprob: -10.44266414642334
    6. '_' → logprob: -11.19266414642334
    7. ' _' → logprob: -12.06766414642334
    8. 'i' → logprob: -12.06766414642334
    9. 'n' → logprob: -14.69266414642334
    10. '  ' → logprob: -14.94266414642334

Token 263: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008615988306701183
    2. ' range' → logprob: -4.758615970611572
    3. '	range' → logprob: -14.50861644744873
    4. '(range' → logprob: -14.88361644744873
    5. ' ' → logprob: -15.13361644744873
    6. 'rang' → logprob: -16.508615493774414
    7. '  ' → logprob: -17.133615493774414
    8. '   ' → logprob: -17.133615493774414
    9. 'r' → logprob: -17.508615493774414
    10. '
' → logprob: -18.508615493774414

Token 264: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.006772330496460199
    2. 'p' → logprob: -5.006772518157959
    3. ' (' → logprob: -10.7567720413208
    4. '(' → logprob: -10.8817720413208
    5. ' p' → logprob: -11.2567720413208
    6. '(n' → logprob: -13.8817720413208
    7. '   ' → logprob: -14.0067720413208
    8. '(
' → logprob: -14.1317720413208
    9. ' ' → logprob: -15.2567720413208
    10. '
' → logprob: -15.2567720413208

Token 265: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00022833107504993677
    2. ')' → logprob: -8.500227928161621
    3. ' )' → logprob: -11.375227928161621
    4. ']' → logprob: -11.750227928161621
    5. ')]
' → logprob: -12.875227928161621
    6. '()]' → logprob: -15.000227928161621
    7. ')])' → logprob: -15.000227928161621
    8. '())' → logprob: -15.250227928161621
    9. ' ' → logprob: -15.375227928161621
    10. '   ' → logprob: -15.500227928161621

Token 266: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3137466609477997
    2. '   ' → logprob: -1.813746690750122
    3. ' dist' → logprob: -2.813746690750122
    4. '
' → logprob: -4.063746452331543
    5. 'start' → logprob: -4.813746452331543
    6. '	dist' → logprob: -5.438746452331543
    7. 'distance' → logprob: -5.563746452331543
    8. '    
' → logprob: -5.688746452331543
    9. 'd' → logprob: -6.188746452331543
    10. ',' → logprob: -6.688746452331543

Token 267: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.009066895581781864
    2. 'start' → logprob: -5.009067058563232
    3. 'd' → logprob: -7.759067058563232
    4. 'parents' → logprob: -8.009066581726074
    5. ' dist' → logprob: -8.134066581726074
    6. 'parent' → logprob: -8.384066581726074
    7. 's' → logprob: -8.884066581726074
    8. '   ' → logprob: -9.259066581726074
    9. 'src' → logprob: -9.634066581726074
    10. 'dp' → logprob: -9.634066581726074

Token 268: '_start' (ID: 10949)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004038593906443566
    2. ',count' → logprob: -9.25040340423584
    3. ',start' → logprob: -9.37540340423584
    4. '_start' → logprob: -9.75040340423584
    5. '1' → logprob: -10.62540340423584
    6. 'start' → logprob: -10.75040340423584
    7. '_from' → logprob: -10.87540340423584
    8. 's' → logprob: -11.50040340423584
    9. ' ,' → logprob: -11.50040340423584
    10. '_children' → logprob: -11.50040340423584

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.847109812544659e-05
    2. ' ,' → logprob: -10.375048637390137
    3. ',count' → logprob: -11.625048637390137
    4. ',start' → logprob: -12.000048637390137
    5. '=' → logprob: -14.125048637390137
    6. ' =' → logprob: -14.750048637390137
    7. 'dist' → logprob: -15.625048637390137
    8. '_,' → logprob: -15.750048637390137
    9. 'count' → logprob: -16.25004768371582
    10. 's' → logprob: -16.87504768371582

Token 270: ' cnt' (ID: 27340)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.25234949588775635
    2. ' count' → logprob: -1.5023494958877563
    3. '_count' → logprob: -8.002349853515625
    4. '_' → logprob: -9.877349853515625
    5. ' _' → logprob: -11.127349853515625
    6. '=count' → logprob: -11.877349853515625
    7. '	count' → logprob: -12.502349853515625
    8. 'dist' → logprob: -13.877349853515625
    9. 'cnt' → logprob: -13.877349853515625
    10. ' dist' → logprob: -13.877349853515625

Token 271: '_start' (ID: 10949)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.535844624042511
    2. '=' → logprob: -0.910844624042511
    3. '=start' → logprob: -5.160844802856445
    4. '_start' → logprob: -5.785844802856445
    5. 'start' → logprob: -6.660844802856445
    6. ',' → logprob: -6.660844802856445
    7. 's' → logprob: -7.785844802856445
    8. '=count' → logprob: -8.410844802856445
    9. ',start' → logprob: -8.660844802856445
    10. 'ount' → logprob: -8.910844802856445

Token 272: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. ',' → logprob: -15.938261985778809
    4. '＝' → logprob: -18.813261032104492
    5. ' ' → logprob: -19.188261032104492
    6. ')' → logprob: -19.813261032104492
    7. '=d' → logprob: -20.938261032104492
    8. ')=' → logprob: -21.063261032104492
    9. '=}' → logprob: -21.063261032104492
    10. '=
' → logprob: -21.438261032104492

Token 273: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6931498050689697
    2. ' d' → logprob: -0.6931498050689697
    3. '   ' → logprob: -13.31814956665039
    4. '	d' → logprob: -15.31814956665039
    5. '(d' → logprob: -15.69314956665039
    6. ' ' → logprob: -15.69314956665039
    7. '       ' → logprob: -15.81814956665039
    8. '    ' → logprob: -16.44314956665039
    9. '_d' → logprob: -16.94314956665039
    10. '  ' → logprob: -16.94314956665039

Token 274: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.00019507692195475101
    2. 'ijk' → logprob: -8.875195503234863
    3. 'ijks' → logprob: -11.000195503234863
    4. 'ij' → logprob: -11.000195503234863
    5. '(' → logprob: -12.375195503234863
    6. 'jik' → logprob: -12.500195503234863
    7. 'j' → logprob: -13.375195503234863
    8. 'jk' → logprob: -13.375195503234863
    9. '(start' → logprob: -13.625195503234863
    10. 'ijst' → logprob: -13.625195503234863

Token 275: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.4894986785948277e-05
    2. '(' → logprob: -10.125044822692871
    3. '<|end|>' → logprob: -12.875044822692871
    4. ' (' → logprob: -13.750044822692871
    5. 'n' → logprob: -14.750044822692871
    6. '(
' → logprob: -15.375044822692871
    7. ')n' → logprob: -15.875044822692871
    8. '(len' → logprob: -16.375045776367188
    9. ' n' → logprob: -16.500045776367188
    10. '((' → logprob: -17.125045776367188

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004408751614391804
    2. '(n' → logprob: -5.879408836364746
    3. ',n' → logprob: -6.879408836364746
    4. '(' → logprob: -7.879408836364746
    5. ' ,' → logprob: -9.254408836364746
    6. ',(' → logprob: -9.754408836364746
    7. '(graph' → logprob: -11.379408836364746
    8. ')' → logprob: -11.629408836364746
    9. ',p' → logprob: -12.004408836364746
    10. ',start' → logprob: -12.629408836364746

Token 277: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.06244533509016037
    2. ' graph' → logprob: -3.0624454021453857
    3. '0' → logprob: -4.312445163726807
    4. '(graph' → logprob: -8.687445640563965
    5. '	graph' → logprob: -8.937445640563965
    6. ' ' → logprob: -10.187445640563965
    7. ')' → logprob: -11.437445640563965
    8. '_graph' → logprob: -12.062445640563965
    9. 'graphs' → logprob: -12.937445640563965
    10. '.graph' → logprob: -13.062445640563965

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.659005157416686e-05
    2. '0' → logprob: -10.000066757202148
    3. ' ,' → logprob: -11.375066757202148
    4. '(' → logprob: -11.625066757202148
    5. '1' → logprob: -14.500066757202148
    6. '2' → logprob: -17.12506675720215
    7. ',
' → logprob: -17.12506675720215
    8. '(),' → logprob: -17.37506675720215
    9. ' ' → logprob: -17.87506675720215
    10. '(n' → logprob: -18.25006675720215

Token 279: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.636475493200123e-05
    2. ' ' → logprob: -9.500076293945312
    3. 'children' → logprob: -14.000076293945312
    4. 's' → logprob: -15.875076293945312
    5. ')' → logprob: -16.062576293945312
    6. 'p' → logprob: -16.625076293945312
    7. '1' → logprob: -16.687576293945312
    8. '   ' → logprob: -16.937576293945312
    9. ' children' → logprob: -17.000076293945312
    10. '۰' → logprob: -17.750076293945312

Token 280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010020548506872728
    2. 'children' → logprob: -9.250100135803223
    3. ' ' → logprob: -12.875100135803223
    4. ' children' → logprob: -15.000100135803223
    5. '1' → logprob: -15.125100135803223
    6. 'child' → logprob: -15.625100135803223
    7. 'start' → logprob: -15.750100135803223
    8. 'p' → logprob: -16.31260108947754
    9. 's' → logprob: -16.37510108947754
    10. 'parents' → logprob: -16.43760108947754

Token 281: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005235529970377684
    2. ')
' → logprob: -5.25523567199707
    3. ')
' → logprob: -13.50523567199707
    4. ')

' → logprob: -15.88023567199707
    5. ' )' → logprob: -16.25523567199707
    6. '0' → logprob: -17.38023567199707
    7. '),' → logprob: -18.00523567199707
    8. '   ' → logprob: -18.25523567199707
    9. ')`' → logprob: -18.88023567199707
    10. ')`
' → logprob: -19.38023567199707

Token 282: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0757213905453682
    2. '       ' → logprob: -3.200721502304077
    3. ' dist' → logprob: -3.450721502304077
    4. '        
' → logprob: -8.825721740722656
    5. '	dist' → logprob: -9.075721740722656
    6. '   ' → logprob: -9.450721740722656
    7. '
' → logprob: -9.825721740722656
    8. '_dist' → logprob: -10.325721740722656
    9. '(dist' → logprob: -11.575721740722656
    10. '.dist' → logprob: -11.950721740722656

Token 283: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.00047214110963977873
    2. '       ' → logprob: -8.250472068786621
    3. ' dist' → logprob: -8.625472068786621
    4. 'for' → logprob: -11.125472068786621
    5. '   ' → logprob: -11.875472068786621
    6. '	dist' → logprob: -13.125472068786621
    7. '        
' → logprob: -13.500472068786621
    8. '```' → logprob: -14.562972068786621
    9. '           ' → logprob: -14.625472068786621
    10. 'd' → logprob: -14.750472068786621

Token 284: '_end' (ID: 13707)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.42951568961143494
    2. '_end' → logprob: -1.1795157194137573
    3. 'p' → logprob: -4.054515838623047
    4. '_goal' → logprob: -4.929515838623047
    5. '_children' → logprob: -5.054515838623047
    6. 'end' → logprob: -5.554515838623047
    7. ',' → logprob: -6.804515838623047
    8. '_par' → logprob: -6.804515838623047
    9. '_parent' → logprob: -7.179515838623047
    10. '_target' → logprob: -7.304515838623047

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.895480277715251e-06
    2. ' ,' → logprob: -11.750008583068848
    3. '=' → logprob: -14.875008583068848
    4. ',count' → logprob: -15.250008583068848
    5. ',p' → logprob: -16.625009536743164
    6. ',end' → logprob: -16.875009536743164
    7. ',start' → logprob: -17.000009536743164
    8. '_,' → logprob: -17.375009536743164
    9. ',_' → logprob: -17.375009536743164
    10. ',c' → logprob: -17.500009536743164

Token 286: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.2523634731769562
    2. 'cnt' → logprob: -1.5023634433746338
    3. '_cnt' → logprob: -8.252363204956055
    4. '(cnt' → logprob: -9.377363204956055
    5. '	cnt' → logprob: -10.502363204956055
    6. '[cnt' → logprob: -10.752363204956055
    7. 'count' → logprob: -10.877363204956055
    8. ' count' → logprob: -11.627363204956055
    9. '_' → logprob: -12.377363204956055
    10. ' ' → logprob: -12.627363204956055

Token 287: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.04865390434861183
    2. '_start' → logprob: -3.0486538410186768
    3. 'end' → logprob: -10.048653602600098
    4. '_finish' → logprob: -11.673653602600098
    5. '_' → logprob: -11.798653602600098
    6. 'start' → logprob: -12.548653602600098
    7. ' =' → logprob: -13.673653602600098
    8. '=' → logprob: -14.173653602600098
    9. '_stop' → logprob: -14.673653602600098
    10. '=end' → logprob: -14.923653602600098

Token 288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192928314208984
    2. ' =' → logprob: -1.5019292831420898
    3. ',' → logprob: -16.126930236816406
    4. ' ' → logprob: -16.376930236816406
    5. '＝' → logprob: -18.001930236816406
    6. '[' → logprob: -18.626930236816406
    7. '_' → logprob: -18.751930236816406
    8. ')' → logprob: -19.001930236816406
    9. ' ' → logprob: -19.501930236816406
    10. '_=' → logprob: -19.501930236816406

Token 289: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.054920539259910583
    2. 'd' → logprob: -2.9299204349517822
    3. '(d' → logprob: -10.804920196533203
    4. '(' → logprob: -11.304920196533203
    5. ')d' → logprob: -12.929920196533203
    6. ' ' → logprob: -14.304920196533203
    7. 's' → logprob: -14.929920196533203
    8. ')' → logprob: -15.054920196533203
    9. ' (' → logprob: -15.179920196533203
    10. ' д' → logprob: -15.492420196533203

Token 290: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0002610974188428372
    2. 'ijk' → logprob: -8.375261306762695
    3. 'ij' → logprob: -11.125261306762695
    4. 'jik' → logprob: -12.000261306762695
    5. 'ijks' → logprob: -13.000261306762695
    6. 'jk' → logprob: -13.125261306762695
    7. '```' → logprob: -13.625261306762695
    8. 'ijkl' → logprob: -13.750261306762695
    9. '   ' → logprob: -14.125261306762695
    10. 'i' → logprob: -15.125261306762695

Token 291: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.963691804325208e-05
    2. '(' → logprob: -10.500029563903809
    3. ' (' → logprob: -13.875029563903809
    4. 'n' → logprob: -15.000029563903809
    5. '<|end|>' → logprob: -15.250029563903809
    6. '(
' → logprob: -15.375029563903809
    7. ' n' → logprob: -16.250030517578125
    8. '<n' → logprob: -16.500030517578125
    9. '(len' → logprob: -17.375030517578125
    10. ',n' → logprob: -17.750030517578125

Token 292: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3156604766845703
    2. ',' → logprob: -1.3156604766845703
    3. '(' → logprob: -6.19066047668457
    4. ',n' → logprob: -8.56566047668457
    5. ' (' → logprob: -9.31566047668457
    6. ' ,' → logprob: -10.31566047668457
    7. 'n' → logprob: -10.56566047668457
    8. ')' → logprob: -12.56566047668457
    9. ',(' → logprob: -14.31566047668457
    10. '=' → logprob: -14.56566047668457

Token 293: ' graph' (ID: 7465)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0789341852068901
    2. ' n' → logprob: -2.5789341926574707
    3. 'graph' → logprob: -10.703933715820312
    4. '0' → logprob: -12.203933715820312
    5. ' graph' → logprob: -12.328933715820312
    6. '(n' → logprob: -12.703933715820312
    7. ')n' → logprob: -13.078933715820312
    8. ')' → logprob: -13.453933715820312
    9. 'p' → logprob: -13.953933715820312
    10. '	n' → logprob: -14.328933715820312

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06264319270849228
    2. '(n' → logprob: -2.81264328956604
    3. ',n' → logprob: -7.812643051147461
    4. '(' → logprob: -8.937643051147461
    5. ' ,' → logprob: -9.437643051147461
    6. ' (' → logprob: -10.312643051147461
    7. 'n' → logprob: -10.812643051147461
    8. ',
' → logprob: -13.687643051147461
    9. '=' → logprob: -13.937643051147461
    10. '1' → logprob: -14.187643051147461

Token 295: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019475567387416959
    2. ' n' → logprob: -6.251947402954102
    3. '1' → logprob: -11.001947402954102
    4. '0' → logprob: -13.376947402954102
    5. '(n' → logprob: -15.501947402954102
    6. ')n' → logprob: -15.501947402954102
    7. ' ' → logprob: -16.5019474029541
    8. '	n' → logprob: -16.7519474029541
    9. ')' → logprob: -17.0019474029541
    10. '
' → logprob: -17.2519474029541

Token 296: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0012243934907019138
    2. ' -' → logprob: -6.751224517822266
    3. '1' → logprob: -9.876224517822266
    4. '()-' → logprob: -13.501224517822266
    5. ')' → logprob: -14.251224517822266
    6. ' ' → logprob: -15.501224517822266
    7. ')-' → logprob: -16.626224517822266
    8. '-
' → logprob: -16.626224517822266
    9. '−' → logprob: -16.876224517822266
    10. '[' → logprob: -17.126224517822266

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. ')' → logprob: -17.250003814697266
    4. '```' → logprob: -17.375003814697266
    5. '   ' → logprob: -17.500003814697266
    6. '
' → logprob: -18.687503814697266
    7. '-' → logprob: -18.875003814697266
    8. '...' → logprob: -19.062503814697266
    9. '2' → logprob: -19.062503814697266
    10. '<|end|>' → logprob: -19.500003814697266

Token 298: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5332478142227046e-05
    2. ' )' → logprob: -11.125015258789062
    3. ')
' → logprob: -15.125015258789062
    4. ')`' → logprob: -16.500015258789062
    5. '))' → logprob: -17.000015258789062
    6. '())' → logprob: -17.125015258789062
    7. ')

' → logprob: -17.375015258789062
    8. '   ' → logprob: -17.500015258789062
    9. '()' → logprob: -17.625015258789062
    10. '),' → logprob: -18.750015258789062

Token 299: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.034347653388977
    2. '   ' → logprob: -1.409347653388977
    3. 'total' → logprob: -1.659347653388977
    4. '
' → logprob: -2.6593475341796875
    5. '<|end|>' → logprob: -2.9093475341796875
    6. 'result' → logprob: -3.5343475341796875
    7. '    
' → logprob: -3.6593475341796875
    8. '        
' → logprob: -4.1593475341796875
    9. 'count' → logprob: -5.0343475341796875
    10. ' total' → logprob: -5.2843475341796875

Token 300: ' total' (ID: 3609)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.136862874031067
    2. 'answer' → logprob: -1.261862874031067
    3. 'ans' → logprob: -1.761862874031067
    4. 'total' (adapté à ' total') → logprob: -1.886862874031067
    5. 'res' → logprob: -3.1368627548217773
    6. 'ways' → logprob: -4.136862754821777
    7. '        
' → logprob: -5.761862754821777
    8. '
' → logprob: -6.261862754821777
    9. 'answers' → logprob: -6.511862754821777
    10. '       ' → logprob: -6.636862754821777

Token 301: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -0.02632410079240799
    2. '_' → logprob: -4.276324272155762
    3. '_count' → logprob: -4.651324272155762
    4. ' =' → logprob: -7.026324272155762
    5. '_routes' → logprob: -7.151324272155762
    6. '_path' → logprob: -7.901324272155762
    7. '=' → logprob: -8.401324272155762
    8. '_children' → logprob: -9.776324272155762
    9. '_short' → logprob: -10.276324272155762
    10. '_counts' → logprob: -10.651324272155762

Token 302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014196664094925
    2. '=' → logprob: -1.701419711112976
    3. ',' → logprob: -12.201419830322266
    4. 's' → logprob: -15.326419830322266
    5. ' ' → logprob: -15.451419830322266
    6. '_' → logprob: -15.701419830322266
    7. '[' → logprob: -15.826419830322266
    8. ' =
' → logprob: -15.951419830322266
    9. '=[]' → logprob: -16.326419830322266
    10. ')' → logprob: -16.451419830322266

Token 303: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.38818299770355225
    2. '0' → logprob: -1.1381829977035522
    3. 'count' → logprob: -6.888183116912842
    4. ' cnt' → logprob: -8.513182640075684
    5. '(cnt' → logprob: -10.888182640075684
    6. '[cnt' → logprob: -11.013182640075684
    7. ' ' → logprob: -11.263182640075684
    8. 'sum' → logprob: -12.013182640075684
    9. '[' → logprob: -12.075682640075684
    10. 'cn' → logprob: -12.450682640075684

Token 304: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -8.184812031686306e-05
    2. '_end' → logprob: -9.750082015991211
    3. 'start' → logprob: -11.250082015991211
    4. '[start' → logprob: -11.750082015991211
    5. 'Start' → logprob: -13.750082015991211
    6. '_START' → logprob: -14.500082015991211
    7. '_count' → logprob: -14.875082015991211
    8. '_' → logprob: -15.125082015991211
    9. '_star' → logprob: -16.00008201599121
    10. '[_' → logprob: -16.75008201599121

Token 305: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11331342905759811
    2. '[p' → logprob: -2.2383134365081787
    3. '[n' → logprob: -8.238313674926758
    4. 'children' → logprob: -9.113313674926758
    5. '(children' → logprob: -10.613313674926758
    6. ' children' → logprob: -10.988313674926758
    7. ' [' → logprob: -10.988313674926758
    8. '[c' → logprob: -11.113313674926758
    9. '[start' → logprob: -11.488313674926758
    10. '[-' → logprob: -11.863313674926758

Token 306: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.537180211627856e-05
    2. '1' → logprob: -10.750045776367188
    3. ' -' → logprob: -11.000045776367188
    4. '[' → logprob: -12.750045776367188
    5. ']' → logprob: -13.500045776367188
    6. '[-' → logprob: -14.125045776367188
    7. ']-' → logprob: -14.250045776367188
    8. '()-' → logprob: -14.500045776367188
    9. '-
' → logprob: -15.250045776367188
    10. '−' → logprob: -16.000045776367188

Token 307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.129266067640856e-05
    2. '-' → logprob: -11.375020980834961
    3. ' ' → logprob: -11.875020980834961
    4. '   ' → logprob: -14.062520980834961
    5. ']' → logprob: -14.437520980834961
    6. ')' → logprob: -15.687520980834961
    7. '       ' → logprob: -15.812520980834961
    8. '           ' → logprob: -15.937520980834961
    9. '```' → logprob: -16.06252098083496
    10. '2' → logprob: -16.18752098083496

Token 308: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0028833334799855947
    2. ' ]' → logprob: -5.877883434295654
    3. '<|end|>' → logprob: -10.002882957458496
    4. ']
' → logprob: -11.002882957458496
    5. '[' → logprob: -12.627882957458496
    6. '*' → logprob: -13.127882957458496
    7. 'if' → logprob: -13.627882957458496
    8. ' ' → logprob: -13.752882957458496
    9. ']*' → logprob: -13.752882957458496
    10. '<|end|>' → logprob: -13.877882957458496

Token 309: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3101358115673065
    2. '
' → logprob: -1.560135841369629
    3. '        
' → logprob: -3.060135841369629
    4. 'total' → logprob: -5.810135841369629
    5. 'print' → logprob: -6.435135841369629
    6. '<|end|>' → logprob: -6.435135841369629
    7. '```' → logprob: -7.810135841369629
    8. ',' → logprob: -7.810135841369629
    9. '    
' → logprob: -8.060135841369629
    10. 'possible' → logprob: -8.560135841369629

Token 310: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2701539695262909
    2. 'answer' → logprob: -2.5201539993286133
    3. 'ans' → logprob: -3.1451539993286133
    4. 'res' (adapté à ' res') → logprob: -3.3951539993286133
    5. 'ways' → logprob: -3.5201539993286133
    6. 'max' → logprob: -3.7701539993286133
    7. 'total' → logprob: -4.145153999328613
    8. '       ' → logprob: -5.270153999328613
    9. 'best' → logprob: -5.645153999328613
    10. 'valid' → logprob: -7.520153999328613

Token 311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0336565300822258
    2. '=' → logprob: -3.408656597137451
    3. ',' → logprob: -12.908656120300293
    4. 'ult' → logprob: -13.158656120300293
    5. ' ' → logprob: -13.533656120300293
    6. 'ults' → logprob: -13.658656120300293
    7. 'u' → logprob: -14.408656120300293
    8. '_count' → logprob: -14.658656120300293
    9. '=[]' → logprob: -14.783656120300293
    10. 's' → logprob: -15.158656120300293

Token 312: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011202149325981736
    2. 'sum' → logprob: -7.501120090484619
    3. 'float' → logprob: -8.001120567321777
    4. '-' → logprob: -9.376120567321777
    5. ' ' → logprob: -9.376120567321777
    6. '[' → logprob: -11.001120567321777
    7. 'sys' → logprob: -11.376120567321777
    8. 'max' → logprob: -12.251120567321777
    9. '1' → logprob: -12.376120567321777
    10. ' sum' → logprob: -12.376120567321777

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4762018620967865
    2. ' for' → logprob: -1.7262018918991089
    3. 'for' → logprob: -1.8512018918991089
    4. '
' → logprob: -4.476202011108398
    5. '   ' → logprob: -4.601202011108398
    6. '	for' → logprob: -4.851202011108398
    7. '    
' → logprob: -5.601202011108398
    8. '<|end|>' → logprob: -5.726202011108398
    9. '        
' → logprob: -5.976202011108398
    10. '  
' → logprob: -6.351202011108398

Token 314: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.030756572261452675
    2. ' for' → logprob: -3.5307564735412598
    3. '       ' → logprob: -6.90575647354126
    4. '   ' → logprob: -13.530756950378418
    5. 'total' → logprob: -14.405756950378418
    6. '	for' → logprob: -14.530756950378418
    7. '
' → logprob: -14.530756950378418
    8. 'sum' → logprob: -14.655756950378418
    9. '```' → logprob: -16.0307559967041
    10. '        
' → logprob: -16.9057559967041

Token 315: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3338662385940552
    2. 'child' → logprob: -1.4588662385940552
    3. 'i' → logprob: -3.5838661193847656
    4. 'node' → logprob: -4.333866119384766
    5. 'u' → logprob: -5.583866119384766
    6. ' c' → logprob: -5.833866119384766
    7. 'x' → logprob: -6.458866119384766
    8. ' child' → logprob: -6.958866119384766
    9. 'v' → logprob: -7.583866119384766
    10. 'ch' → logprob: -8.708866119384766

Token 316: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602610945701599
    2. 'in' → logprob: -1.9102611541748047
    3. '	in' → logprob: -11.535261154174805
    4. ' ' → logprob: -11.785261154174805
    5. ' i' → logprob: -12.285261154174805
    6. 'i' → logprob: -12.285261154174805
    7. ',' → logprob: -12.785261154174805
    8. 'n' → logprob: -12.910261154174805
    9. 's' → logprob: -13.035261154174805
    10. '_in' → logprob: -14.035261154174805

Token 317: ' children' (ID: 3953)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.0031828247010707855
    2. ' children' → logprob: -5.753182888031006
    3. '(children' → logprob: -12.628182411193848
    4. '	children' → logprob: -14.128182411193848
    5. 'range' → logprob: -14.753182411193848
    6. '.children' → logprob: -15.503182411193848
    7. ' range' → logprob: -15.878182411193848
    8. '_children' → logprob: -16.503183364868164
    9. '   ' → logprob: -16.628183364868164
    10. 'c' → logprob: -16.878183364868164

Token 318: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013445195509120822
    2. ':
' → logprob: -6.626344680786133
    3. ' :' → logprob: -11.501344680786133
    4. ',' → logprob: -12.751344680786133
    5. '):' → logprob: -13.251344680786133
    6. ':
' → logprob: -14.001344680786133
    7. '   ' → logprob: -14.251344680786133
    8. '       ' → logprob: -14.376344680786133
    9. ' if' → logprob: -14.501344680786133
    10. '=' → logprob: -15.501344680786133

Token 319: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10366524755954742
    2. '<|end|>' → logprob: -2.978665351867676
    3. '           ' → logprob: -3.228665351867676
    4. ' if' → logprob: -5.853665351867676
    5. '   ' → logprob: -6.353665351867676
    6. '<|end|>' → logprob: -6.603665351867676
    7. '        
' → logprob: -7.478665351867676
    8. '```' → logprob: -8.228665351867676
    9. ' ' → logprob: -8.353665351867676
    10. ' 
' → logprob: -8.853665351867676

Token 320: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2510417401790619
    2. '           ' → logprob: -2.2510416507720947
    3. '       ' → logprob: -2.5010416507720947
    4. ' ' → logprob: -4.126041889190674
    5. ' res' → logprob: -5.251041889190674
    6. ' 
' → logprob: -5.751041889190674
    7. '    ' → logprob: -6.001041889190674
    8. '        ' → logprob: -6.376041889190674
    9. 'if' → logprob: -6.751041889190674
    10. '            ' → logprob: -6.876041889190674

Token 321: ' A' (ID: 355)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25853195786476135
    2. ' if' → logprob: -2.0085320472717285
    3. ' res' → logprob: -3.1335320472717285
    4. 'res' → logprob: -3.5085320472717285
    5. 'dist' → logprob: -4.5085320472717285
    6. '           ' → logprob: -5.8835320472717285
    7. 'd' → logprob: -6.2585320472717285
    8. ' dist' → logprob: -6.5085320472717285
    9. '       ' → logprob: -6.8835320472717285
    10. '   ' → logprob: -7.6335320472717285

Token 322: ' node' (ID: 4596)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3658097982406616
    2. ' =' → logprob: -2.240809917449951
    3. '=' → logprob: -2.740809917449951
    4. ')' → logprob: -3.240809917449951
    5. ' if' → logprob: -3.740809917449951
    6. '   ' → logprob: -3.865809917449951
    7. '       ' → logprob: -4.490809917449951
    8. 'if' → logprob: -4.865809917449951
    9. 'pp' → logprob: -4.990809917449951
    10. ' +=' → logprob: -5.740809917449951

Token 323: ' c' (ID: 274)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6714285016059875
    2. '=' → logprob: -1.7964284420013428
    3. ' if' → logprob: -1.7964284420013428
    4. ' in' → logprob: -2.7964284420013428
    5. ',' → logprob: -3.7964284420013428
    6. 'if' → logprob: -4.296428680419922
    7. ' ==' → logprob: -4.421428680419922
    8. ')' → logprob: -4.796428680419922
    9. 's' → logprob: -5.046428680419922
    10. ' ' → logprob: -5.046428680419922

Token 324: ' is' (ID: 382)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6642553210258484
    2. ' is' → logprob: -1.6642553806304932
    3. '           ' → logprob: -2.289255380630493
    4. ')' → logprob: -2.914255380630493
    5. ' in' → logprob: -3.664255380630493
    6. ' ==' → logprob: -3.914255380630493
    7. ' ' → logprob: -4.414255142211914
    8. 'if' → logprob: -4.414255142211914
    9. ' not' → logprob: -4.539255142211914
    10. '==' → logprob: -4.664255142211914

Token 325: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.18331186473369598
    2. ' on' → logprob: -1.9333118200302124
    3. 'valid' → logprob: -5.183311939239502
    4. '"' → logprob: -5.558311939239502
    5. 'res' → logprob: -5.808311939239502
    6. ' valid' → logprob: -6.558311939239502
    7. ' ' → logprob: -6.808311939239502
    8. ' "' → logprob: -6.933311939239502
    9. 'part' → logprob: -6.933311939239502
    10. 'a' → logprob: -7.183311939239502

Token 326: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5479035377502441
    2. ' a' → logprob: -1.6729035377502441
    3. ''' → logprob: -2.297903537750244
    4. ' ' → logprob: -2.922903537750244
    5. 'the' → logprob: -3.797903537750244
    6. ')' → logprob: -4.547903537750244
    7. ' c' → logprob: -4.922903537750244
    8. '   ' → logprob: -4.922903537750244
    9. ' '' → logprob: -5.297903537750244
    10. ' =' → logprob: -5.547903537750244

Token 327: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.13605698943138123
    2. 'short' → logprob: -2.136056900024414
    3. 'path' → logprob: -5.511056900024414
    4. '   ' → logprob: -6.761056900024414
    5. 'valid' → logprob: -7.886056900024414
    6. ')' → logprob: -7.886056900024414
    7. '"' → logprob: -8.011056900024414
    8. ' valid' → logprob: -8.136056900024414
    9. ''' → logprob: -8.136056900024414
    10. ' line' → logprob: -8.261056900024414

Token 328: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.2856115996837616
    2. 'path' → logprob: -1.410611629486084
    3. '_path' → logprob: -5.535611629486084
    4. '   ' → logprob: -7.785611629486084
    5. '-path' → logprob: -11.035611152648926
    6. 'spath' → logprob: -11.160611152648926
    7. ' ' → logprob: -11.285611152648926
    8. '_paths' → logprob: -11.535611152648926
    9. '           ' → logprob: -11.660611152648926
    10. '    ' → logprob: -12.160611152648926

Token 329: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0125007014721632
    2. '           ' → logprob: -4.762500762939453
    3. 'if' → logprob: -6.262500762939453
    4. ' and' → logprob: -7.012500762939453
    5. '   ' → logprob: -7.637500762939453
    6. ' ' → logprob: -9.137500762939453
    7. '            ' → logprob: -9.387500762939453
    8. 'and' → logprob: -9.762500762939453
    9. '    ' → logprob: -10.137500762939453
    10. '       ' → logprob: -10.262500762939453

Token 330: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.31444093585014343
    2. ' dist' → logprob: -1.3144409656524658
    3. '(dist' → logprob: -7.314440727233887
    4. '           ' → logprob: -7.939440727233887
    5. '   ' → logprob: -9.314440727233887
    6. '	dist' → logprob: -11.189440727233887
    7. '               ' → logprob: -11.314440727233887
    8. '       ' → logprob: -11.689440727233887
    9. '    ' → logprob: -11.939440727233887
    10. '_dist' → logprob: -12.439440727233887

Token 331: '_start' (ID: 10949)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.09007958322763443
    2. '_start' → logprob: -2.4650795459747314
    3. '[start' → logprob: -7.2150797843933105
    4. '[' → logprob: -8.715079307556152
    5. 'start' → logprob: -9.340079307556152
    6. ' [' → logprob: -9.965079307556152
    7. '   ' → logprob: -11.090079307556152
    8. 'c' → logprob: -11.590079307556152
    9. 'Start' → logprob: -11.715079307556152
    10. '[s' → logprob: -11.715079307556152

Token 332: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -4.8232690460281447e-05
    2. '[' → logprob: -10.625048637390137
    3. ' [' → logprob: -11.000048637390137
    4. '[u' → logprob: -12.750048637390137
    5. '[v' → logprob: -14.125048637390137
    6. 'c' → logprob: -14.375048637390137
    7. '+c' → logprob: -14.875048637390137
    8. ' +' → logprob: -15.000048637390137
    9. '[
' → logprob: -15.250048637390137
    10. ' ' → logprob: -15.375048637390137

Token 333: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05670879781246185
    2. '+' → logprob: -3.431708812713623
    3. ']+' → logprob: -3.806708812713623
    4. ' +' → logprob: -7.806708812713623
    5. ' ]' → logprob: -9.681708335876465
    6. ')' → logprob: -9.681708335876465
    7. '+]' → logprob: -10.931708335876465
    8. ']==' → logprob: -11.556708335876465
    9. '[' → logprob: -12.556708335876465
    10. ')+' → logprob: -12.806708335876465

Token 334: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5766805410385132
    2. '+' → logprob: -0.8266805410385132
    3. '==' → logprob: -8.451680183410645
    4. ' <=' → logprob: -8.701680183410645
    5. '<=' → logprob: -8.951680183410645
    6. ' ==' → logprob: -8.951680183410645
    7. '!=' → logprob: -10.326680183410645
    8. '+c' → logprob: -10.701680183410645
    9. ' !=' → logprob: -10.826680183410645
    10. ' ' → logprob: -12.451680183410645

Token 335: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6931931376457214
    2. 'dist' → logprob: -0.6931931376457214
    3. '(dist' → logprob: -10.443193435668945
    4. '"' → logprob: -11.443193435668945
    5. '	dist' → logprob: -13.818193435668945
    6. ' ' → logprob: -13.943193435668945
    7. '_dist' → logprob: -14.193193435668945
    8. '.dist' → logprob: -14.318193435668945
    9. ' "' → logprob: -14.693193435668945
    10. '   ' → logprob: -15.068193435668945

Token 336: '_end' (ID: 13707)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.34942254424095154
    2. '[c' → logprob: -1.224422574043274
    3. '[start' → logprob: -7.849422454833984
    4. '_end' → logprob: -7.849422454833984
    5. 'start' → logprob: -9.849422454833984
    6. '[' → logprob: -9.974422454833984
    7. '[_' → logprob: -10.474422454833984
    8. '_[' → logprob: -10.849422454833984
    9. '```' → logprob: -11.599422454833984
    10. 'c' → logprob: -11.724422454833984

Token 337: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.00017946491425391287
    2. ' ==' → logprob: -9.250179290771484
    3. '[' → logprob: -10.250179290771484
    4. '==' → logprob: -10.500179290771484
    5. ' [' → logprob: -11.000179290771484
    6. 'c' → logprob: -12.875179290771484
    7. '```' → logprob: -14.750179290771484
    8. '[u' → logprob: -15.625179290771484
    9. '[
' → logprob: -15.750179290771484
    10. '(c' → logprob: -16.500179290771484

Token 338: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05107535421848297
    2. '==' → logprob: -3.4260754585266113
    3. ']' → logprob: -4.551075458526611
    4. ']==' → logprob: -5.051075458526611
    5. ' <=' → logprob: -8.801074981689453
    6. ')' → logprob: -9.801074981689453
    7. ')==' → logprob: -10.176074981689453
    8. ' ]' → logprob: -10.301074981689453
    9. ' ' → logprob: -11.301074981689453
    10. '']==' → logprob: -11.676074981689453

Token 339: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11782943457365036
    2. '==' → logprob: -2.2428293228149414
    3. ' <=' → logprob: -5.367829322814941
    4. '<=' → logprob: -8.117829322814941
    5. ' ' → logprob: -10.867829322814941
    6. '=' → logprob: -12.867829322814941
    7. ')==' → logprob: -12.992829322814941
    8. ')' → logprob: -13.367829322814941
    9. ']==' → logprob: -13.492829322814941
    10. '<|end|>' → logprob: -13.492829322814941

Token 340: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5759435296058655
    2. ' dist' → logprob: -0.8259435296058655
    3. '	dist' → logprob: -13.200943946838379
    4. '   ' → logprob: -14.200943946838379
    5. '(dist' → logprob: -14.450943946838379
    6. '    ' → logprob: -14.450943946838379
    7. ' ' → logprob: -15.700943946838379
    8. '_dist' → logprob: -16.450942993164062
    9. '
' → logprob: -16.825942993164062
    10. '  ' → logprob: -16.950942993164062

Token 341: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -4.0126840758603066e-05
    2. '[start' → logprob: -10.875040054321289
    3. 'start' → logprob: -11.250040054321289
    4. '[n' → logprob: -12.625040054321289
    5. '_' → logprob: -13.125040054321289
    6. '[_' → logprob: -14.250040054321289
    7. ' _' → logprob: -14.250040054321289
    8. '_end' → logprob: -15.250040054321289
    9. '_[' → logprob: -15.500040054321289
    10. '[' → logprob: -15.875040054321289

Token 342: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.249780638725497e-05
    2. '[' → logprob: -11.000032424926758
    3. '[c' → logprob: -12.000032424926758
    4. ' [' → logprob: -12.625032424926758
    5. 'n' → logprob: -13.000032424926758
    6. '   ' → logprob: -13.500032424926758
    7. '[-' → logprob: -14.125032424926758
    8. '```' → logprob: -14.250032424926758
    9. ' ' → logprob: -14.875032424926758
    10. '(n' → logprob: -15.875032424926758

Token 343: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006394077208824456
    2. ' -' → logprob: -7.37563943862915
    3. '[-' → logprob: -12.250638961791992
    4. '1' → logprob: -12.750638961791992
    5. '[' → logprob: -13.625638961791992
    6. ']' → logprob: -13.625638961791992
    7. ']-' → logprob: -14.250638961791992
    8. '```' → logprob: -14.500638961791992
    9. '()-' → logprob: -15.250638961791992
    10. '   ' → logprob: -15.500638961791992

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000253591249929741
    2. '-' → logprob: -8.375253677368164
    3. ' ' → logprob: -11.000253677368164
    4. ' -' → logprob: -13.125253677368164
    5. '```' → logprob: -13.125253677368164
    6. ']' → logprob: -14.687753677368164
    7. '   ' → logprob: -14.750253677368164
    8. ')' → logprob: -15.000253677368164
    9. '
' → logprob: -15.187753677368164
    10. '[' → logprob: -15.750253677368164

Token 345: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.48263058066368103
    2. ')' → logprob: -1.1076306104660034
    3. ' and' → logprob: -3.357630491256714
    4. '):' → logprob: -5.607630729675293
    5. ' ]' → logprob: -5.732630729675293
    6. ')]' → logprob: -5.857630729675293
    7. ':' → logprob: -6.107630729675293
    8. ' )' → logprob: -6.357630729675293
    9. ']:' → logprob: -6.732630729675293
    10. '])' → logprob: -7.607630729675293

Token 346: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005907938349992037
    2. ' and' → logprob: -6.005908012390137
    3. ' if' → logprob: -6.630908012390137
    4. '       ' → logprob: -6.755908012390137
    5. '   ' → logprob: -8.380908012390137
    6. ',' → logprob: -8.630908012390137
    7. ' ' → logprob: -9.130908012390137
    8. '            ' → logprob: -9.130908012390137
    9. '               ' → logprob: -9.505908012390137
    10. '    ' → logprob: -10.005908012390137

Token 347: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2146819829940796
    2. '           ' → logprob: -1.7146819829940796
    3. 'if' → logprob: -4.714682102203369
    4. '       ' → logprob: -5.839682102203369
    5. '   ' → logprob: -7.464682102203369
    6. ' ' → logprob: -7.589682102203369
    7. '    ' → logprob: -9.589681625366211
    8. ' 
' → logprob: -10.464681625366211
    9. '        ' → logprob: -10.714681625366211
    10. '            ' → logprob: -10.964681625366211

Token 348: ' Probability' (ID: 194171)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02369566261768341
    2. '           ' → logprob: -4.148695468902588
    3. 'if' → logprob: -5.523695468902588
    4. '       ' → logprob: -5.898695468902588
    5. '   ' → logprob: -7.273695468902588
    6. '    ' → logprob: -9.273695945739746
    7. ' ' → logprob: -9.773695945739746
    8. '        ' → logprob: -11.023695945739746
    9. '            ' → logprob: -11.523695945739746
    10. ' ' → logprob: -12.523695945739746

Token 349: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020698022097349167
    2. '=' → logprob: -3.895698070526123
    3. '.append' → logprob: -9.270697593688965
    4. '           ' → logprob: -11.395697593688965
    5. '   ' → logprob: -11.395697593688965
    6. '_' → logprob: -11.895697593688965
    7. '    ' → logprob: -12.145697593688965
    8. ' ' → logprob: -12.395697593688965
    9. 'space' → logprob: -12.395697593688965
    10. '(' → logprob: -13.020697593688965

Token 350: ' node' (ID: 4596)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6333524584770203
    2. 'c' → logprob: -1.508352518081665
    3. ' the' → logprob: -1.758352518081665
    4. 'the' → logprob: -3.883352518081665
    5. 'count' → logprob: -4.258352279663086
    6. ' dist' → logprob: -4.508352279663086
    7. ' a' → logprob: -4.633352279663086
    8. 'dist' → logprob: -5.258352279663086
    9. ' count' → logprob: -5.758352279663086
    10. ' that' → logprob: -6.008352279663086

Token 351: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.15705931186676025
    2. 'c' → logprob: -2.0320591926574707
    3. ' is' → logprob: -4.782059192657471
    4. '=' → logprob: -6.282059192657471
    5. ' on' → logprob: -6.282059192657471
    6. ' =' → logprob: -7.407059192657471
    7. ' of' → logprob: -8.532059669494629
    8. ' appears' → logprob: -9.032059669494629
    9. 'count' → logprob: -9.157059669494629
    10. ' to' → logprob: -9.282059669494629

Token 352: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.21323923766613007
    2. ' in' → logprob: -2.9632391929626465
    3. ')' → logprob: -3.0882391929626465
    4. ' ' → logprob: -3.9632391929626465
    5. ' )' → logprob: -4.5882391929626465
    6. ' ,' → logprob: -4.7132391929626465
    7. '<|end|>' → logprob: -4.8382391929626465
    8. ' =' → logprob: -5.0882391929626465
    9. ' appears' → logprob: -5.0882391929626465
    10. ',' → logprob: -5.4632391929626465

Token 353: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.14387565851211548
    2. 'on' → logprob: -3.5188755989074707
    3. ' in' → logprob: -3.6438755989074707
    4. ' included' → logprob: -3.7688755989074707
    5. ' part' → logprob: -4.143875598907471
    6. ' ' → logprob: -4.268875598907471
    7. ' visited' → logprob: -4.768875598907471
    8. ' '' → logprob: -5.643875598907471
    9. 'included' → logprob: -5.893875598907471
    10. 'visited' → logprob: -6.018875598907471

Token 354: ' chosen' (ID: 16180)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.14986146986484528
    2. ' the' → logprob: -2.0248615741729736
    3. 'a' → logprob: -5.5248613357543945
    4. ' ' → logprob: -6.3998613357543945
    5. 'the' → logprob: -6.8998613357543945
    6. '  ' → logprob: -8.774861335754395
    7. ' shortest' → logprob: -8.774861335754395
    8. ' (' → logprob: -9.899861335754395
    9. '<|end|>' → logprob: -10.524861335754395
    10. ')' → logprob: -11.274861335754395

Token 355: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -1.1350942850112915
    2. '_path' → logprob: -1.5100942850112915
    3. ' shortest' → logprob: -1.5100942850112915
    4. 'path' → logprob: -1.8850942850112915
    5. ' ' → logprob: -3.135094165802002
    6. ' =' → logprob: -4.510094165802002
    7. '   ' → logprob: -5.260094165802002
    8. '_paths' → logprob: -5.385094165802002
    9. ' c' → logprob: -5.885094165802002
    10. ' /' → logprob: -6.510094165802002

Token 356: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040670059621334076
    2. '.append' → logprob: -3.915670156478882
    3. '=' → logprob: -4.790669918060303
    4. '           ' → logprob: -5.290669918060303
    5. '[c' → logprob: -5.790669918060303
    6. '   ' → logprob: -6.290669918060303
    7. '[' → logprob: -8.165670394897461
    8. '       ' → logprob: -8.290670394897461
    9. ' ' → logprob: -8.915670394897461
    10. '_c' → logprob: -9.665670394897461

Token 357: ' (' (ID: 350)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.61855149269104
    2. ' cnt' → logprob: -1.74355149269104
    3. ' (' → logprob: -2.36855149269104
    4. '(cnt' → logprob: -2.36855149269104
    5. 'cnt' → logprob: -3.74355149269104
    6. ''' → logprob: -4.118551254272461
    7. '(count' → logprob: -4.493551254272461
    8. 'f' → logprob: -4.493551254272461
    9. ' '' → logprob: -4.743551254272461
    10. ' count' → logprob: -4.743551254272461

Token 358: 'number' (ID: 8096)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.008097361773252487
    2. '(cnt' → logprob: -5.133097171783447
    3. ' cnt' → logprob: -6.383097171783447
    4. 'count' → logprob: -7.758097171783447
    5. ' (' → logprob: -10.633097648620605
    6. '   ' → logprob: -12.008097648620605
    7. '           ' → logprob: -12.758097648620605
    8. '[cnt' → logprob: -12.883097648620605
    9. '(count' → logprob: -13.008097648620605
    10. ')' → logprob: -13.008097648620605

Token 359: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.35401397943496704
    2. '_of' → logprob: -1.8540139198303223
    3. ' of' → logprob: -2.2290139198303223
    4. '[cnt' → logprob: -4.729013919830322
    5. '[c' → logprob: -5.104013919830322
    6. '(cnt' → logprob: -5.229013919830322
    7. ')' → logprob: -5.729013919830322
    8. 'cnt' → logprob: -5.979013919830322
    9. 'c' → logprob: -6.729013919830322
    10. '_c' → logprob: -6.854013919830322

Token 360: ' shortest' (ID: 70564)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paths' → logprob: -1.1091810464859009
    2. 'count' → logprob: -1.3591810464859009
    3. 'cnt' → logprob: -1.9841810464859009
    4. ' paths' → logprob: -2.1091809272766113
    5. ' cnt' → logprob: -3.4841809272766113
    6. ')' → logprob: -3.6091809272766113
    7. 'c' → logprob: -3.9841809272766113
    8. ' ways' → logprob: -4.234180927276611
    9. ' count' → logprob: -4.234180927276611
    10. '_paths' → logprob: -4.359180927276611

Token 361: ' paths' (ID: 23373)
  Prédit: '_paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -0.00933857075870037
    2. 'paths' → logprob: -5.63433837890625
    3. '_path' → logprob: -6.00933837890625
    4. ' paths' → logprob: -6.00933837890625
    5. '_' → logprob: -7.75933837890625
    6. ')' → logprob: -9.00933837890625
    7. ' _' → logprob: -9.50933837890625
    8. 'path' → logprob: -10.38433837890625
    9. ')_' → logprob: -10.50933837890625
    10. '_c' → logprob: -11.13433837890625

Token 362: ' going' (ID: 2966)
  Prédit: ' passing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passing' → logprob: -0.270561158657074
    2. ' that' → logprob: -2.3955612182617188
    3. ' through' → logprob: -3.1455612182617188
    4. 'through' → logprob: -3.2705612182617188
    5. 'passing' → logprob: -3.6455612182617188
    6. 'that' → logprob: -4.270561218261719
    7. '[c' → logprob: -4.645561218261719
    8. ')' → logprob: -4.770561218261719
    9. ' involving' → logprob: -6.645561218261719
    10. '[' → logprob: -6.770561218261719

Token 363: ' through' (ID: 1819)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.5775061249732971
    2. ' through' → logprob: -0.8275061249732971
    3. '   ' → logprob: -6.702506065368652
    4. ' ' → logprob: -9.327506065368652
    5. ')' → logprob: -9.577506065368652
    6. '           ' → logprob: -9.827506065368652
    7. '       ' → logprob: -10.452506065368652
    8. 'Through' → logprob: -10.952506065368652
    9. 'c' → logprob: -11.702506065368652
    10. '_th' → logprob: -11.827506065368652

Token 364: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.47484663128852844
    2. 'c' → logprob: -0.974846601486206
    3. '[c' → logprob: -7.974846839904785
    4. ')' → logprob: -9.099846839904785
    5. ''' → logprob: -9.224846839904785
    6. '"' → logprob: -9.724846839904785
    7. ' node' → logprob: -10.724846839904785
    8. ' ' → logprob: -10.974846839904785
    9. ' '' → logprob: -10.974846839904785
    10. ',' → logprob: -10.974846839904785

Token 365: ')' (ID: 8)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.026839056983590126
    2. ')' → logprob: -3.776839017868042
    3. '*' → logprob: -6.401839256286621
    4. ' )' → logprob: -6.526839256286621
    5. ' ' → logprob: -9.151839256286621
    6. '   ' → logprob: -9.276839256286621
    7. '           ' → logprob: -9.401839256286621
    8. '          ' → logprob: -9.901839256286621
    9. ' *)' → logprob: -11.026839256286621
    10. '[c' → logprob: -11.026839256286621

Token 366: ' /' (ID: 820)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0037364219315350056
    2. '*' → logprob: -6.25373649597168
    3. '           ' → logprob: -6.87873649597168
    4. ')' → logprob: -8.25373649597168
    5. ' ' → logprob: -9.12873649597168
    6. ' *
' → logprob: -9.75373649597168
    7. '   ' → logprob: -9.75373649597168
    8. '          ' → logprob: -9.75373649597168
    9. ',' → logprob: -9.87873649597168
    10. '    ' → logprob: -10.37873649597168

Token 367: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.04760156199336052
    2. 'total' → logprob: -3.1726014614105225
    3. ' count' → logprob: -5.797601699829102
    4. 'count' → logprob: -7.422601699829102
    5. ' cnt' → logprob: -8.047601699829102
    6. '(total' → logprob: -8.172601699829102
    7. ' ' → logprob: -8.797601699829102
    8. 'cnt' → logprob: -9.672601699829102
    9. ' (' → logprob: -9.797601699829102
    10. ' float' → logprob: -10.547601699829102

Token 368: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -0.002246365649625659
    2. '_' → logprob: -7.127246379852295
    3. '   ' → logprob: -8.627245903015137
    4. 'paths' → logprob: -8.752245903015137
    5. ')' → logprob: -8.877245903015137
    6. '_count' → logprob: -9.127245903015137
    7. ' ' → logprob: -9.127245903015137
    8. ' _' → logprob: -9.377245903015137
    9. '_counts' → logprob: -9.502245903015137
    10. '_path' → logprob: -9.627245903015137

Token 369: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023484334349632263
    2. '   ' → logprob: -5.648484230041504
    3. ' ' → logprob: -5.773484230041504
    4. '
' → logprob: -5.773484230041504
    5. '       ' → logprob: -5.898484230041504
    6. '            
' → logprob: -6.148484230041504
    7. ' =' → logprob: -6.398484230041504
    8. ' 
' → logprob: -6.648484230041504
    9. ',' → logprob: -7.273484230041504
    10. '    
' → logprob: -7.398484230041504

Token 370: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001998346531763673
    2. '       ' → logprob: -6.626998424530029
    3. '   ' → logprob: -8.126997947692871
    4. '            
' → logprob: -9.376997947692871
    5. '    ' → logprob: -10.126997947692871
    6. '            ' → logprob: -10.251997947692871
    7. '
' → logprob: -10.626997947692871
    8. ' ' → logprob: -10.751997947692871
    9. '          ' → logprob: -10.751997947692871
    10. ' 
' → logprob: -11.126997947692871

Token 371: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09705810248851776
    2. ' if' → logprob: -3.222058057785034
    3. '       ' → logprob: -3.722058057785034
    4. 'prob' → logprob: -4.972058296203613
    5. ' p' → logprob: -5.097058296203613
    6. '
' → logprob: -5.347058296203613
    7. ' res' → logprob: -5.847058296203613
    8. '   ' → logprob: -6.097058296203613
    9. ' probability' → logprob: -6.972058296203613
    10. ' prob' → logprob: -7.097058296203613

Token 372: ' number' (ID: 2086)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27205055952072144
    2. 'prob' → logprob: -2.022050619125366
    3. ' if' → logprob: -2.647050619125366
    4. 'if' → logprob: -4.522050380706787
    5. ' prob' → logprob: -4.647050380706787
    6. '
' → logprob: -5.522050380706787
    7. ' p' → logprob: -6.397050380706787
    8. 'path' → logprob: -6.522050380706787
    9. ' probability' → logprob: -7.022050380706787
    10. 'pro' → logprob: -7.022050380706787

Token 373: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6582176685333252
    2. ' =' → logprob: -1.4082176685333252
    3. 'of' → logprob: -2.783217668533325
    4. ' of' → logprob: -3.033217668533325
    5. '_of' → logprob: -3.408217668533325
    6. '_' → logprob: -3.533217668533325
    7. '=count' → logprob: -3.533217668533325
    8. ')' → logprob: -5.408217430114746
    9. 'o' → logprob: -5.658217430114746
    10. ' ' → logprob: -6.033217430114746

Token 374: ' shortest' (ID: 70564)
  Prédit: '_paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -0.2669556438922882
    2. 'paths' → logprob: -1.5169556140899658
    3. ' paths' → logprob: -4.516955852508545
    4. ' shortest' → logprob: -6.766955852508545
    5. '_short' → logprob: -7.016955852508545
    6. 'ways' → logprob: -7.516955852508545
    7. 'short' → logprob: -7.516955852508545
    8. '_path' → logprob: -8.266955375671387
    9. ' ways' → logprob: -8.391955375671387
    10. '_' → logprob: -9.516955375671387

Token 375: ' paths' (ID: 23373)
  Prédit: '_paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -0.003932948689907789
    2. 'paths' → logprob: -5.628932952880859
    3. 'through' → logprob: -8.62893295288086
    4. '_path' → logprob: -9.62893295288086
    5. '=' → logprob: -11.00393295288086
    6. '_th' → logprob: -11.00393295288086
    7. ' =' → logprob: -11.50393295288086
    8. '```' → logprob: -11.50393295288086
    9. ' paths' → logprob: -11.75393295288086
    10. '_on' → logprob: -12.25393295288086

Token 376: ' through' (ID: 1819)
  Prédit: '_th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_th' → logprob: -0.4118773341178894
    2. '_' → logprob: -1.1618773937225342
    3. 'going' → logprob: -4.911877155303955
    4. ' going' → logprob: -5.536877155303955
    5. '_v' → logprob: -5.786877155303955
    6. ' =' → logprob: -5.911877155303955
    7. 'through' → logprob: -6.286877155303955
    8. '=' → logprob: -7.036877155303955
    9. ' through' → logprob: -7.161877155303955
    10. '_that' → logprob: -7.286877155303955

Token 377: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4331585764884949
    2. ' c' → logprob: -1.0581586360931396
    3. ' =' → logprob: -5.8081583976745605
    4. '[c' → logprob: -7.3081583976745605
    5. ' node' → logprob: -9.058158874511719
    6. '=' → logprob: -9.183158874511719
    7. '_c' → logprob: -9.308158874511719
    8. 'node' → logprob: -9.308158874511719
    9. '	c' → logprob: -9.808158874511719
    10. ' ' → logprob: -10.058158874511719

Token 378: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016588034108281136
    2. '=' → logprob: -4.14158821105957
    3. ' through' → logprob: -9.01658821105957
    4. 'through' → logprob: -9.64158821105957
    5. ' =
' → logprob: -9.76658821105957
    6. '           ' → logprob: -10.01658821105957
    7. ' *' → logprob: -10.01658821105957
    8. ')' → logprob: -10.14158821105957
    9. ' is' → logprob: -10.76658821105957
    10. ' if' → logprob: -10.76658821105957

Token 379: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.5268590450286865
    2. 'cnt' → logprob: -0.9018590450286865
    3. 'count' → logprob: -6.151859283447266
    4. '           ' → logprob: -6.776859283447266
    5. '(cnt' → logprob: -8.151859283447266
    6. ' count' → logprob: -9.276859283447266
    7. '[cnt' → logprob: -10.526859283447266
    8. '               ' → logprob: -10.651859283447266
    9. '	cnt' → logprob: -11.526859283447266
    10. '   ' → logprob: -12.776859283447266

Token 380: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0049790008924901485
    2. '[c' → logprob: -5.379979133605957
    3. '[u' → logprob: -9.004979133605957
    4. 'start' → logprob: -9.254979133605957
    5. '[start' → logprob: -9.754979133605957
    6. 'c' → logprob: -10.004979133605957
    7. 'Start' → logprob: -12.004979133605957
    8. '_START' → logprob: -12.129979133605957
    9. '[_' → logprob: -12.754979133605957
    10. '[' → logprob: -12.879979133605957

Token 381: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -8.77627644513268e-06
    2. '[' → logprob: -12.750008583068848
    3. '[u' → logprob: -12.750008583068848
    4. 'c' → logprob: -13.500008583068848
    5. ' [' → logprob: -14.000008583068848
    6. '[
' → logprob: -15.375008583068848
    7. '```' → logprob: -16.000009536743164
    8. '[n' → logprob: -16.125009536743164
    9. '\[' → logprob: -16.125009536743164
    10. '[v' → logprob: -16.875009536743164

Token 382: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04894409328699112
    2. '*' → logprob: -3.0489439964294434
    3. ')' → logprob: -8.048944473266602
    4. ']' → logprob: -10.923944473266602
    5. ' ' → logprob: -12.423944473266602
    6. ',' → logprob: -12.798944473266602
    7. ')*' → logprob: -12.923944473266602
    8. '   ' → logprob: -13.423944473266602
    9. '```' → logprob: -13.548944473266602
    10. ' ' → logprob: -13.923944473266602

Token 383: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02330382727086544
    2. '*' → logprob: -3.773303747177124
    3. '   ' → logprob: -10.523303985595703
    4. ' ' → logprob: -11.898303985595703
    5. ' *
' → logprob: -12.023303985595703
    6. '```' → logprob: -12.273303985595703
    7. '           ' → logprob: -13.023303985595703
    8. ')' → logprob: -13.648303985595703
    9. ' ' → logprob: -13.773303985595703
    10. '**' → logprob: -13.773303985595703

Token 384: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.06462334096431732
    2. ' cnt' → logprob: -2.8146233558654785
    3. 'count' → logprob: -5.9396233558654785
    4. ' count' → logprob: -11.56462287902832
    5. '(cnt' → logprob: -11.93962287902832
    6. '[cnt' → logprob: -13.68962287902832
    7. '_cnt' → logprob: -13.81462287902832
    8. '	cnt' → logprob: -14.31462287902832
    9. '   ' → logprob: -15.93962287902832
    10. ' ' → logprob: -15.93962287902832

Token 385: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -2.2842308680992573e-05
    2. 'end' → logprob: -10.875022888183594
    3. '_count' → logprob: -13.500022888183594
    4. 'End' → logprob: -14.625022888183594
    5. '[end' → logprob: -14.750022888183594
    6. '```' → logprob: -15.000022888183594
    7. '_END' → logprob: -15.375022888183594
    8. '_cnt' → logprob: -15.500022888183594
    9. '_start' → logprob: -15.625022888183594
    10. '_' → logprob: -15.750022888183594

Token 386: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.0087516784551553e-05
    2. '[' → logprob: -11.87501049041748
    3. 'c' → logprob: -13.00001049041748
    4. ' [' → logprob: -14.87501049041748
    5. '[v' → logprob: -15.25001049041748
    6. '[
' → logprob: -16.250009536743164
    7. '[u' → logprob: -16.750009536743164
    8. '```' → logprob: -17.375009536743164
    9. '
' → logprob: -18.625009536743164
    10. '[n' → logprob: -19.125009536743164

Token 387: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5146545171737671
    2. ')' → logprob: -1.139654517173767
    3. '<|end|>' → logprob: -2.6396546363830566
    4. '<|end|>' → logprob: -5.639654636383057
    5. ' ]' → logprob: -6.139654636383057
    6. ' )' → logprob: -6.514654636383057
    7. '           ' → logprob: -6.514654636383057
    8. '
' → logprob: -6.764654636383057
    9. '']' → logprob: -8.764654159545898
    10. '   ' → logprob: -9.014654159545898

Token 388: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08311424404382706
    2. '
' → logprob: -3.0831141471862793
    3. '<|end|>' → logprob: -4.958114147186279
    4. ' /' → logprob: -5.208114147186279
    5. ' if' → logprob: -5.583114147186279
    6. '       ' → logprob: -5.583114147186279
    7. ' /
' → logprob: -6.208114147186279
    8. ',' → logprob: -6.458114147186279
    9. ' *' → logprob: -6.583114147186279
    10. '   ' → logprob: -6.583114147186279

Token 389: ' on' (ID: 402)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07377802580595016
    2. ' dist' → logprob: -2.698777914047241
    3. '(dist' → logprob: -5.57377815246582
    4. '   ' → logprob: -10.69877815246582
    5. ' (' → logprob: -11.94877815246582
    6. '_dist' → logprob: -13.07377815246582
    7. '	dist' → logprob: -13.32377815246582
    8. '```' → logprob: -13.94877815246582
    9. '(' → logprob: -14.19877815246582
    10. '           ' → logprob: -14.19877815246582

Token 390: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -1.1234047412872314
    2. ' a' → logprob: -1.2484047412872314
    3. ' the' → logprob: -1.6234047412872314
    4. 'the' → logprob: -2.3734047412872314
    5. 'a' → logprob: -2.8734047412872314
    6. 'c' → logprob: -4.248404502868652
    7. 'dist' → logprob: -4.373404502868652
    8. ' c' → logprob: -5.623404502868652
    9. 'short' → logprob: -6.373404502868652
    10. ' dist' → logprob: -6.373404502868652

Token 391: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.7592628598213196
    2. 'path' → logprob: -0.8842628598213196
    3. ' path' → logprob: -2.134262800216675
    4. '_paths' → logprob: -8.134263038635254
    5. '   ' → logprob: -9.634263038635254
    6. ' _' → logprob: -9.759263038635254
    7. '           ' → logprob: -10.009263038635254
    8. '_' → logprob: -10.384263038635254
    9. ')' → logprob: -10.509263038635254
    10. 'paths' → logprob: -10.509263038635254

Token 392: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3486863076686859
    2. '           ' → logprob: -1.3486863374710083
    3. '   ' → logprob: -4.598686218261719
    4. '       ' → logprob: -4.723686218261719
    5. '<|end|>' → logprob: -5.598686218261719
    6. ' ' → logprob: -6.098686218261719
    7. ' if' → logprob: -6.973686218261719
    8. '            
' → logprob: -6.973686218261719
    9. '               ' → logprob: -7.098686218261719
    10. ',' → logprob: -7.473686218261719

Token 393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013229995965957642
    2. '       ' → logprob: -5.138229846954346
    3. '   ' → logprob: -6.138229846954346
    4. '
' → logprob: -6.388229846954346
    5. '<|end|>' → logprob: -7.263229846954346
    6. ' if' → logprob: -7.638229846954346
    7. ' ' → logprob: -7.763229846954346
    8. '               ' → logprob: -7.888229846954346
    9. '            
' → logprob: -8.138230323791504
    10. ')' → logprob: -8.513230323791504

Token 394: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006843361537903547
    2. '       ' → logprob: -5.881843566894531
    3. '
' → logprob: -6.131843566894531
    4. ' if' → logprob: -6.756843566894531
    5. '   ' → logprob: -7.756843566894531
    6. ' 
' → logprob: -9.756843566894531
    7. '            
' → logprob: -9.881843566894531
    8. 'if' (adapté à ' if') → logprob: -10.506843566894531
    9. ' ' → logprob: -10.506843566894531
    10. '               ' → logprob: -10.631843566894531

Token 395: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.31359899044036865
    2. 'dist' → logprob: -1.3135989904403687
    3. '(dist' → logprob: -8.0635986328125
    4. '   ' → logprob: -12.1885986328125
    5. '	dist' → logprob: -12.1885986328125
    6. ' (' → logprob: -12.8135986328125
    7. '_dist' → logprob: -12.9385986328125
    8. '    ' → logprob: -13.1885986328125
    9. '           ' → logprob: -14.0635986328125
    10. ' ' → logprob: -14.1885986328125

Token 396: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.9504606825648807e-05
    2. '[start' → logprob: -11.375019073486328
    3. '[_' → logprob: -12.750019073486328
    4. ' _' → logprob: -13.250019073486328
    5. '[c' → logprob: -13.500019073486328
    6. '_' → logprob: -13.500019073486328
    7. '_START' → logprob: -15.250019073486328
    8. 'start' → logprob: -16.750019073486328
    9. '_st' → logprob: -17.250019073486328
    10. '_Start' → logprob: -17.250019073486328

Token 397: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -9.491498531133402e-06
    2. '[' → logprob: -12.250009536743164
    3. ' [' → logprob: -12.375009536743164
    4. 'c' → logprob: -15.125009536743164
    5. '[
' → logprob: -16.500009536743164
    6. '[C' → logprob: -17.750009536743164
    7. '```' → logprob: -18.625009536743164
    8. '[v' → logprob: -18.750009536743164
    9. ']' → logprob: -18.875009536743164
    10. '   ' → logprob: -19.000009536743164

Token 398: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022062011063098907
    2. ']+' → logprob: -4.022061824798584
    3. '+' → logprob: -6.397061824798584
    4. ' ]' → logprob: -6.647061824798584
    5. ' +' → logprob: -7.397061824798584
    6. ']==' → logprob: -8.897062301635742
    7. '[' → logprob: -9.022062301635742
    8. ')' → logprob: -11.147062301635742
    9. ']!=' → logprob: -11.147062301635742
    10. '+]' → logprob: -11.647062301635742

Token 399: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38710546493530273
    2. '+' → logprob: -1.1371054649353027
    3. '+c' → logprob: -8.762105941772461
    4. ' ' → logprob: -10.887105941772461
    5. '!=' → logprob: -11.262105941772461
    6. ' !=' → logprob: -11.387105941772461
    7. '[' → logprob: -11.512105941772461
    8. '<=' → logprob: -11.762105941772461
    9. '   ' → logprob: -13.012105941772461
    10. ' <=' → logprob: -13.262105941772461

Token 400: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12694554030895233
    2. ' dist' → logprob: -2.1269454956054688
    3. '(dist' → logprob: -12.126945495605469
    4. '	dist' → logprob: -12.501945495605469
    5. '_dist' → logprob: -12.626945495605469
    6. '<|end|>' → logprob: -13.001945495605469
    7. ' ' → logprob: -13.251945495605469
    8. '.dist' → logprob: -14.626945495605469
    9. '"' → logprob: -16.37694549560547
    10. 'd' → logprob: -16.50194549560547

Token 401: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0008228530059568584
    2. 'end' → logprob: -7.125823020935059
    3. '[c' → logprob: -11.250823020935059
    4. 'c' → logprob: -12.625823020935059
    5. '[end' → logprob: -14.000823020935059
    6. '_' → logprob: -15.125823020935059
    7. 'End' → logprob: -15.125823020935059
    8. '[_' → logprob: -16.000822067260742
    9. '_start' → logprob: -16.125822067260742
    10. '_c' → logprob: -16.125822067260742

Token 402: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -7.584239938296378e-06
    2. 'c' → logprob: -12.125007629394531
    3. '[' → logprob: -13.500007629394531
    4. ' [' → logprob: -14.500007629394531
    5. '[
' → logprob: -15.750007629394531
    6. '==' → logprob: -17.12500762939453
    7. '```' → logprob: -17.50000762939453
    8. ']' → logprob: -17.62500762939453
    9. '	c' → logprob: -18.37500762939453
    10. '(c' → logprob: -19.25000762939453

Token 403: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23904269933700562
    2. ']==' → logprob: -2.3640427589416504
    3. ' ==' → logprob: -2.4890427589416504
    4. '==' → logprob: -3.3640427589416504
    5. ' ]' → logprob: -6.98904275894165
    6. ')' → logprob: -11.489042282104492
    7. ')==' → logprob: -11.739042282104492
    8. '']==' → logprob: -11.739042282104492
    9. ' <=' → logprob: -11.989042282104492
    10. '=' → logprob: -11.989042282104492

Token 404: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2522766888141632
    2. '==' → logprob: -1.5022766590118408
    3. ' <=' → logprob: -8.252276420593262
    4. '<=' → logprob: -9.502276420593262
    5. '=' → logprob: -11.627276420593262
    6. ' ' → logprob: -14.002276420593262
    7. '>' → logprob: -14.502276420593262
    8. ' !=' → logprob: -14.752276420593262
    9. '[' → logprob: -15.127276420593262
    10. '==
' → logprob: -15.127276420593262

Token 405: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.2014143168926239
    2. 'dist' → logprob: -1.7014143466949463
    3. '	dist' → logprob: -14.451414108276367
    4. '(dist' → logprob: -15.076414108276367
    5. '_dist' → logprob: -17.326414108276367
    6. 'd' → logprob: -17.576414108276367
    7. '.dist' → logprob: -17.701414108276367
    8. '    ' → logprob: -17.826414108276367
    9. '   ' → logprob: -17.826414108276367
    10. ' ' → logprob: -17.951414108276367

Token 406: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -8.041768160182983e-05
    2. 'start' → logprob: -9.500080108642578
    3. '_[' → logprob: -13.250080108642578
    4. '[n' → logprob: -13.750080108642578
    5. '[start' → logprob: -14.125080108642578
    6. 'Start' → logprob: -14.375080108642578
    7. '[_' → logprob: -15.000080108642578
    8. '_' → logprob: -15.000080108642578
    9. '_START' → logprob: -15.125080108642578
    10. '   ' → logprob: -16.500080108642578

Token 407: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.17420256882906e-05
    2. 'n' → logprob: -9.625091552734375
    3. '[' → logprob: -11.375091552734375
    4. ' [' → logprob: -11.625091552734375
    5. '[c' → logprob: -13.375091552734375
    6. '[-' → logprob: -14.125091552734375
    7. '```' → logprob: -14.625091552734375
    8. '][' → logprob: -14.750091552734375
    9. '   ' → logprob: -14.875091552734375
    10. ']' → logprob: -15.000091552734375

Token 408: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.35835710167884827
    2. '[n' → logprob: -1.2333570718765259
    3. '[-' → logprob: -4.733356952667236
    4. ' -' → logprob: -7.358356952667236
    5. '[' → logprob: -8.483357429504395
    6. '[c' → logprob: -9.733357429504395
    7. ']-' → logprob: -9.858357429504395
    8. ']' → logprob: -10.358357429504395
    9. 'n' → logprob: -10.608357429504395
    10. '(n' → logprob: -10.733357429504395

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005237548612058163
    2. '-' → logprob: -5.255237579345703
    3. ' ' → logprob: -13.255237579345703
    4. ' -' → logprob: -14.380237579345703
    5. '```' → logprob: -14.380237579345703
    6. '   ' → logprob: -15.630237579345703
    7. ']' → logprob: -16.130237579345703
    8. '
' → logprob: -16.255237579345703
    9. '(' → logprob: -16.380237579345703
    10. '−' → logprob: -16.630237579345703

Token 410: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39695480465888977
    2. '):
' → logprob: -1.5219547748565674
    3. ':' → logprob: -2.3969547748565674
    4. '           ' → logprob: -4.7719550132751465
    5. ']:' → logprob: -5.7719550132751465
    6. ':
' → logprob: -5.8969550132751465
    7. '               ' → logprob: -6.2719550132751465
    8. ')' → logprob: -7.0219550132751465
    9. ']:
' → logprob: -7.7719550132751465
    10. '       ' → logprob: -8.146954536437988

Token 411: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06288323551416397
    2. '           ' → logprob: -2.812883138656616
    3. ')' → logprob: -8.937883377075195
    4. '       ' → logprob: -9.062883377075195
    5. '<|end|>' → logprob: -9.187883377075195
    6. '                               ' → logprob: -9.312883377075195
    7. '                
' → logprob: -9.437883377075195
    8. '            
' → logprob: -9.687883377075195
    9. '                   ' → logprob: -10.062883377075195
    10. '                       ' → logprob: -10.187883377075195

Token 412: ' prob' (ID: 4921)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.7534463405609131
    2. '           ' → logprob: -1.378446340560913
    3. '               ' → logprob: -1.503446340560913
    4. '                   ' → logprob: -3.128446340560913
    5. 'prob' (adapté à ' prob') → logprob: -6.253446578979492
    6. ' 
' → logprob: -6.378446578979492
    7. ' p' → logprob: -6.503446578979492
    8. '            
' → logprob: -7.003446578979492
    9. 'res' → logprob: -7.003446578979492
    10. ' probability' → logprob: -7.128446578979492

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282485723495483
    2. '=' → logprob: -2.2378249168395996
    3. ')' → logprob: -13.987824440002441
    4. ' ' → logprob: -14.987824440002441
    5. ',' → logprob: -15.612824440002441
    6. '   ' → logprob: -15.612824440002441
    7. '_' → logprob: -15.862824440002441
    8. '=c' → logprob: -16.362825393676758
    9. ' ' → logprob: -16.487825393676758
    10. '[' → logprob: -16.737825393676758

Token 414: ' cnt' (ID: 27340)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.29762038588523865
    2. ' cnt' → logprob: -1.922620415687561
    3. 'cnt' → logprob: -2.6726202964782715
    4. ' (' → logprob: -3.1726202964782715
    5. '[cnt' → logprob: -9.29762077331543
    6. '(count' → logprob: -9.29762077331543
    7. 'count' → logprob: -11.04762077331543
    8. '(c' → logprob: -11.54762077331543
    9. '	cnt' → logprob: -12.79762077331543
    10. '_cnt' → logprob: -12.92262077331543

Token 415: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -5.5577775128767826e-06
    2. 'start' → logprob: -12.375005722045898
    3. '_START' → logprob: -14.750005722045898
    4. '_count' → logprob: -15.125005722045898
    5. 'Start' → logprob: -15.625005722045898
    6. '```' → logprob: -16.0000057220459
    7. '[start' → logprob: -16.2500057220459
    8. '_Start' → logprob: -17.1250057220459
    9. 's' → logprob: -17.6250057220459
    10. 'c' → logprob: -17.8750057220459

Token 416: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.833878508885391e-05
    2. '[' → logprob: -10.375038146972656
    3. 'c' → logprob: -12.125038146972656
    4. ' [' → logprob: -13.750038146972656
    5. '[
' → logprob: -14.625038146972656
    6. '```' → logprob: -17.375038146972656
    7. ' c' → logprob: -17.875038146972656
    8. '[m' → logprob: -18.000038146972656
    9. '
' → logprob: -18.375038146972656
    10. '[s' → logprob: -18.500038146972656

Token 417: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5822439193725586
    2. '*' → logprob: -0.8322439193725586
    3. ']' → logprob: -5.082243919372559
    4. ']*' → logprob: -9.957243919372559
    5. ' ' → logprob: -11.207243919372559
    6. ')' → logprob: -12.457243919372559
    7. '   ' → logprob: -13.082243919372559
    8. ' ]' → logprob: -13.207243919372559
    9. '*c' → logprob: -13.207243919372559
    10. '*
' → logprob: -13.457243919372559

Token 418: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31327295303344727
    2. ' *' → logprob: -1.3132729530334473
    3. '*c' → logprob: -13.063272476196289
    4. '*
' → logprob: -13.188272476196289
    5. '
' → logprob: -13.313272476196289
    6. ' ' → logprob: -13.688272476196289
    7. '   ' → logprob: -13.688272476196289
    8. '```' → logprob: -13.813272476196289
    9. '**' → logprob: -14.438272476196289
    10. '*object' → logprob: -14.813272476196289

Token 419: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0052835652604699135
    2. ' cnt' → logprob: -5.255283355712891
    3. 'count' → logprob: -10.38028335571289
    4. '(cnt' → logprob: -11.38028335571289
    5. '_cnt' → logprob: -12.25528335571289
    6. '	cnt' → logprob: -13.50528335571289
    7. '[cnt' → logprob: -13.75528335571289
    8. 'Cnt' → logprob: -17.13028335571289
    9. '
' → logprob: -18.00528335571289
    10. ' ' → logprob: -18.13028335571289

Token 420: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.00033713103039190173
    2. 'end' → logprob: -8.000337600708008
    3. '[end' → logprob: -14.250337600708008
    4. '_count' → logprob: -15.000337600708008
    5. 'End' → logprob: -15.625337600708008
    6. '-end' → logprob: -16.375337600708008
    7. 'count' → logprob: -16.500337600708008
    8. '_END' → logprob: -16.625337600708008
    9. 'END' → logprob: -17.125337600708008
    10. '_cnt' → logprob: -17.500337600708008

Token 421: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -5.676981345459353e-06
    2. 'c' → logprob: -12.625005722045898
    3. '[' → logprob: -13.250005722045898
    4. ' [' → logprob: -14.625005722045898
    5. '[
' → logprob: -16.1250057220459
    6. '```' → logprob: -17.0000057220459
    7. '[u' → logprob: -17.8750057220459
    8. '[v' → logprob: -18.6250057220459
    9. '[C' → logprob: -18.6250057220459
    10. '[s' → logprob: -18.8750057220459

Token 422: ']' (ID: 60)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.07077498733997345
    2. '/' → logprob: -2.695775032043457
    3. ')' → logprob: -7.695775032043457
    4. ']' → logprob: -8.820775032043457
    5. '               ' → logprob: -8.945775032043457
    6. ' /
' → logprob: -10.445775032043457
    7. ')/' → logprob: -11.570775032043457
    8. '/
' → logprob: -11.570775032043457
    9. '                ' → logprob: -11.820775032043457
    10. '                   ' → logprob: -12.070775032043457

Token 423: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6942217946052551
    2. ' /' → logprob: -0.6942217946052551
    3. '               ' → logprob: -7.0692219734191895
    4. '/
' → logprob: -9.569221496582031
    5. '           ' → logprob: -10.069221496582031
    6. ' /
' → logprob: -10.569221496582031
    7. '                   ' → logprob: -10.819221496582031
    8. '              ' → logprob: -11.319221496582031
    9. '       ' → logprob: -11.444221496582031
    10. '
' → logprob: -11.444221496582031

Token 424: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0067154900170862675
    2. ' total' → logprob: -5.006715297698975
    3. 'cnt' → logprob: -16.006715774536133
    4. 'tot' → logprob: -18.006715774536133
    5. '   ' → logprob: -18.256715774536133
    6. '(total' → logprob: -18.381715774536133
    7. ' ' → logprob: -19.131715774536133
    8. ' cnt' → logprob: -19.131715774536133
    9. 'count' → logprob: -19.631715774536133
    10. 'float' → logprob: -19.756715774536133

Token 425: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -6.153795766294934e-06
    2. '_' → logprob: -12.875005722045898
    3. '_path' → logprob: -13.250005722045898
    4. 'paths' → logprob: -13.375005722045898
    5. '_tokens' → logprob: -17.6250057220459
    6. 'path' → logprob: -17.7500057220459
    7. '```' → logprob: -18.0000057220459
    8. '_
' → logprob: -18.1250057220459
    9. '_p' → logprob: -18.2500057220459
    10. '._' → logprob: -18.8750057220459

Token 426: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.052650336176157
    2. '               ' → logprob: -3.0526504516601562
    3. 'else' → logprob: -6.802650451660156
    4. '
' → logprob: -6.927650451660156
    5. ' else' → logprob: -7.177650451660156
    6. ')' → logprob: -7.927650451660156
    7. '            
' → logprob: -8.052650451660156
    8. '<|end|>' → logprob: -8.802650451660156
    9. '                
' → logprob: -9.302650451660156
    10. '       ' → logprob: -9.552650451660156

Token 427: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09736356139183044
    2. '           ' → logprob: -2.5973634719848633
    3. ')' → logprob: -4.097363471984863
    4. '<|end|>' → logprob: -7.347363471984863
    5. '\n' → logprob: -8.347363471984863
    6. '       ' → logprob: -8.597363471984863
    7. '                
' → logprob: -9.347363471984863
    8. '
' → logprob: -9.472363471984863
    9. ')\' → logprob: -9.597363471984863
    10. '            
' → logprob: -9.847363471984863

Token 428: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.74382084608078
    2. ' else' → logprob: -0.99382084608078
    3. '           ' → logprob: -1.8688209056854248
    4. '               ' → logprob: -9.493821144104004
    5. '       ' → logprob: -9.743821144104004
    6. '	else' → logprob: -10.368821144104004
    7. '<|end|>' → logprob: -10.368821144104004
    8. '		' → logprob: -11.618821144104004
    9. '\
' → logprob: -12.243821144104004
    10. '   ' → logprob: -12.368821144104004

Token 429: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021069398149847984
    2. ':' → logprob: -4.146069526672363
    3. ':
' → logprob: -5.896069526672363
    4. '           ' → logprob: -6.146069526672363
    5. '              ' → logprob: -10.521069526672363
    6. ' :
' → logprob: -10.771069526672363
    7. ' :' → logprob: -11.021069526672363
    8. '                ' → logprob: -11.396069526672363
    9. '            ' → logprob: -11.521069526672363
    10. ',' → logprob: -12.021069526672363

Token 430: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020956608932465315
    2. 'prob' → logprob: -6.627095699310303
    3. '0' → logprob: -7.752095699310303
    4. '           ' → logprob: -8.627095222473145
    5. ' prob' → logprob: -8.877095222473145
    6. '```' → logprob: -11.877095222473145
    7. '   ' → logprob: -12.502095222473145
    8. ' ' → logprob: -13.002095222473145
    9. '              ' → logprob: -13.502095222473145
    10. '
' → logprob: -14.002095222473145

Token 431: ' prob' (ID: 4921)
  Prédit: ' prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prob' → logprob: -0.5760778784751892
    2. 'prob' (adapté à ' prob') → logprob: -0.8260778784751892
    3. '               ' → logprob: -9.576077461242676
    4. '           ' → logprob: -9.826077461242676
    5. '0' → logprob: -12.451077461242676
    6. '            ' → logprob: -12.826077461242676
    7. '
' → logprob: -12.951077461242676
    8. '(prob' → logprob: -13.201077461242676
    9. 'pro' → logprob: -13.576077461242676
    10. '_prob' → logprob: -14.201077461242676

Token 432: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. ')' → logprob: -16.923587799072266
    4. '=
' → logprob: -17.298587799072266
    5. ' =
' → logprob: -17.923587799072266
    6. ' ' → logprob: -18.548587799072266
    7. '0' → logprob: -19.048587799072266
    8. ')=' → logprob: -19.048587799072266
    9. '＝' → logprob: -19.298587799072266
    10. '	' → logprob: -19.673587799072266

Token 433: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. ' ' → logprob: -18.376502990722656
    4. '   ' → logprob: -19.626502990722656
    5. '           ' → logprob: -20.251502990722656
    6. '00' → logprob: -21.001502990722656
    7. '۰' → logprob: -21.251502990722656
    8. '               ' → logprob: -21.814002990722656
    9. '  ' → logprob: -21.814002990722656
    10. '    ' → logprob: -22.001502990722656

Token 434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. 'float' → logprob: -19.875001907348633
    4. '00' → logprob: -20.125001907348633
    5. '.' → logprob: -20.375001907348633
    6. '   ' → logprob: -20.500001907348633
    7. '000' → logprob: -20.625001907348633
    8. '۰' → logprob: -20.625001907348633
    9. '
' → logprob: -21.500001907348633
    10. '```' → logprob: -21.875001907348633

Token 435: '.' (ID: 13)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28486207127571106
    2. '
' → logprob: -1.4098620414733887
    3. '
' → logprob: -6.784862041473389
    4. '            
' → logprob: -7.034862041473389
    5. '<|end|>' → logprob: -7.534862041473389
    6. ' 
' → logprob: -8.409862518310547
    7. '    
' → logprob: -8.534862518310547
    8. '       ' → logprob: -8.784862518310547
    9. '\n' → logprob: -9.159862518310547
    10. '        
' → logprob: -9.409862518310547

Token 436: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.0
    3. '           ' → logprob: -17.375
    4. '1' → logprob: -17.625
    5. '```' → logprob: -17.75
    6. 'prob' → logprob: -18.5
    7. '               ' → logprob: -18.875
    8. '00' → logprob: -19.125
    9. '       ' → logprob: -19.375
    10. '000' → logprob: -19.75

Token 437: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07972197234630585
    2. '
' → logprob: -2.5797219276428223
    3. '       ' → logprob: -7.454721927642822
    4. '
' → logprob: -8.45472240447998
    5. '            
' → logprob: -11.57972240447998
    6. ' 
' → logprob: -12.07972240447998
    7. '    
' → logprob: -12.32972240447998
    8. '   ' → logprob: -12.45472240447998
    9. '        
' → logprob: -12.82972240447998
    10. ',' → logprob: -12.82972240447998

Token 438: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001765978173352778
    2. '
' → logprob: -6.376766204833984
    3. '       ' → logprob: -10.001766204833984
    4. '
' → logprob: -11.876766204833984
    5. '   ' → logprob: -12.751766204833984
    6. '            
' → logprob: -13.001766204833984
    7. '		' → logprob: -13.376766204833984
    8. '<|end|>' → logprob: -13.876766204833984
    9. '```' → logprob: -14.251766204833984
    10. '               ' → logprob: -14.376766204833984

Token 439: ' res' (ID: 694)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09779834002256393
    2. '       ' → logprob: -2.5977983474731445
    3. '   ' → logprob: -4.9727983474731445
    4. ' res' → logprob: -4.9727983474731445
    5. '
' → logprob: -5.9727983474731445
    6. 'res' (adapté à ' res') → logprob: -6.0977983474731445
    7. '
' → logprob: -11.347798347473145
    8. ' ' → logprob: -11.472798347473145
    9. '```' → logprob: -11.722798347473145
    10. '               ' → logprob: -11.847798347473145

Token 440: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04861404746770859
    2. '.' → logprob: -3.048614025115967
    3. '.app' → logprob: -11.048614501953125
    4. '.ap' → logprob: -12.048614501953125
    5. ' .' → logprob: -12.923614501953125
    6. '.extend' → logprob: -13.798614501953125
    7. '.Append' → logprob: -14.673614501953125
    8. 'append' → logprob: -14.798614501953125
    9. '​.' → logprob: -15.548614501953125
    10. '.add' → logprob: -15.923614501953125

Token 441: '(prob' (ID: 180876)
  Prédit: '(prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prob' → logprob: -0.0016485184896737337
    2. '(' → logprob: -6.501648426055908
    3. '(f' → logprob: -9.376648902893066
    4. '(str' → logprob: -10.001648902893066
    5. '(round' → logprob: -11.376648902893066
    6. '(float' → logprob: -12.626648902893066
    7. 'prob' → logprob: -14.251648902893066
    8. '((' → logprob: -14.876648902893066
    9. '(format' → logprob: -15.751648902893066
    10. '(
' → logprob: -16.37664794921875

Token 442: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000818561646156013
    2. ')
' → logprob: -7.125818729400635
    3. '       ' → logprob: -11.625818252563477
    4. '
' → logprob: -13.750818252563477
    5. ' )' → logprob: -13.750818252563477
    6. '   ' → logprob: -14.250818252563477
    7. ')return' → logprob: -14.750818252563477
    8. ']' → logprob: -15.125818252563477
    9. '),' → logprob: -15.375818252563477
    10. ')
' → logprob: -15.750818252563477

Token 443: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009068199433386326
    2. '   ' → logprob: -4.884068012237549
    3. '       ' → logprob: -6.759068012237549
    4. '    
' → logprob: -8.884068489074707
    5. '        
' → logprob: -10.009068489074707
    6. '```' → logprob: -10.384068489074707
    7. 'print' → logprob: -10.634068489074707
    8. '
' → logprob: -10.759068489074707
    9. '\n' → logprob: -11.384068489074707
    10. 'for' → logprob: -11.509068489074707

Token 444: ' print' (ID: 2123)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5657878518104553
    2. 'print' (adapté à ' print') → logprob: -1.4407877922058105
    3. '       ' → logprob: -2.6907877922058105
    4. '   ' → logprob: -2.9407877922058105
    5. '\n' → logprob: -3.1907877922058105
    6. 'for' → logprob: -4.0657877922058105
    7. ' for' → logprob: -4.9407877922058105
    8. ' print' → logprob: -5.9407877922058105
    9. '    
' → logprob: -6.0657877922058105
    10. '        
' → logprob: -6.3157877922058105

Token 445: '('\' (ID: 24345)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.6949520707130432
    2. '('' → logprob: -0.9449520707130432
    3. '(' → logprob: -2.4449520111083984
    4. '("' → logprob: -3.6949520111083984
    5. '(sum' → logprob: -7.819952011108398
    6. '()' → logprob: -9.319952011108398
    7. '(max' → logprob: -9.694952011108398
    8. '(len' → logprob: -10.694952011108398
    9. '(*)' → logprob: -10.819952011108398
    10. '(
' → logprob: -11.694952011108398

Token 446: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011046138824895024
    2. ''' → logprob: -7.126104831695557
    3. 't' → logprob: -9.001104354858398
    4. 's' → logprob: -10.251104354858398
    5. 'space' → logprob: -10.376104354858398
    6. '.' → logprob: -10.626104354858398
    7. '0' → logprob: -11.001104354858398
    8. 'f' → logprob: -11.626104354858398
    9. 'r' → logprob: -11.751104354858398
    10. ' ' → logprob: -12.001104354858398

Token 447: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.00030674142180942
    2. '".' → logprob: -8.375307083129883
    3. '.' → logprob: -9.875307083129883
    4. '.join' → logprob: -11.000307083129883
    5. '''.' → logprob: -12.250307083129883
    6. ''' → logprob: -13.375307083129883
    7. '`.' → logprob: -13.625307083129883
    8. ''\' → logprob: -15.625307083129883
    9. '\n' → logprob: -15.750307083129883
    10. 'join' → logprob: -16.375307083129883

Token 448: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.8624639324116288e-06
    2. 'jo' → logprob: -14.000001907348633
    3. 'print' → logprob: -14.750001907348633
    4. 'j' → logprob: -15.375001907348633
    5. ' join' → logprob: -15.375001907348633
    6. '```' → logprob: -16.875001907348633
    7. 'format' → logprob: -18.625001907348633
    8. 'strip' → logprob: -19.000001907348633
    9. ')' → logprob: -19.250001907348633
    10. ').' → logprob: -20.250001907348633

Token 449: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.018526704981923103
    2. '(str' → logprob: -4.018526554107666
    3. '(f' → logprob: -8.393527030944824
    4. 'map' → logprob: -9.643527030944824
    5. '([' → logprob: -9.643527030944824
    6. '(' → logprob: -11.893527030944824
    7. '('' → logprob: -12.143527030944824
    8. '('{' → logprob: -12.893527030944824
    9. '(['' → logprob: -13.018527030944824
    10. '(format' → logprob: -13.268527030944824

Token 450: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0007640030235052109
    2. 'str' → logprob: -7.250763893127441
    3. '(' → logprob: -9.875763893127441
    4. '[str' → logprob: -13.750763893127441
    5. '```' → logprob: -14.125763893127441
    6. ')' → logprob: -15.250763893127441
    7. '(
' → logprob: -15.250763893127441
    8. '(float' → logprob: -15.875763893127441
    9. ' str' → logprob: -15.875763893127441
    10. ')(' → logprob: -17.250764846801758

Token 451: ',' (ID: 11)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.024861857295036316
    2. ',res' → logprob: -4.024861812591553
    3. ',' → logprob: -5.024861812591553
    4. ' (' → logprob: -9.399862289428711
    5. '(' → logprob: -10.774862289428711
    6. ',(' → logprob: -11.899862289428711
    7. ' ,' → logprob: -12.524862289428711
    8. 'res' → logprob: -14.274862289428711
    9. ')(' → logprob: -14.399862289428711
    10. '   ' → logprob: -15.024862289428711

Token 452: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00012356207298580557
    2. ' res' → logprob: -9.000123977661133
    3. '(res' → logprob: -16.625123977661133
    4. '	res' → logprob: -20.000123977661133
    5. '$res' → logprob: -20.750123977661133
    6. '   ' → logprob: -21.375123977661133
    7. ',res' → logprob: -21.750123977661133
    8. '[' → logprob: -21.875123977661133
    9. '       ' → logprob: -22.875123977661133
    10. '
' → logprob: -23.875123977661133

Token 453: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47409185767173767
    2. ')))' → logprob: -0.9740918874740601
    3. ')' → logprob: -11.599091529846191
    4. '))))' → logprob: -13.349091529846191
    5. '()))' → logprob: -13.474091529846191
    6. '))
' → logprob: -13.724091529846191
    7. ')))
' → logprob: -14.224091529846191
    8. '}))' → logprob: -15.474091529846191
    9. ' ))' → logprob: -15.599091529846191
    10. '())))' → logprob: -15.849091529846191

Token 454: '+'\' (ID: 150650)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019669353496283293
    2. '())' → logprob: -6.251966953277588
    3. '()' → logprob: -10.50196647644043
    4. ')
' → logprob: -12.62696647644043
    5. '))' → logprob: -13.62696647644043
    6. ')`' → logprob: -13.87696647644043
    7. '(' → logprob: -14.00196647644043
    8. ')}' → logprob: -14.12696647644043
    9. '   ' → logprob: -14.12696647644043
    10. ' )' → logprob: -14.37696647644043

Token 455: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.339278580620885e-06
    2. '\n' → logprob: -13.000001907348633
    3. ')' → logprob: -18.000001907348633
    4. ' n' → logprob: -18.625001907348633
    5. 'ndef' → logprob: -19.250001907348633
    6. 'newline' → logprob: -19.375001907348633
    7. ')n' → logprob: -20.000001907348633
    8. '(n' → logprob: -20.500001907348633
    9. '0' → logprob: -20.625001907348633
    10. '
' → logprob: -21.000001907348633

Token 456: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010247035970678553
    2. '))' → logprob: -9.625102043151855
    3. '')' → logprob: -10.375102043151855
    4. '")' → logprob: -13.000102043151855
    5. '())' → logprob: -14.000102043151855
    6. '`)' → logprob: -14.875102043151855
    7. ')")' → logprob: -14.875102043151855
    8. ')`' → logprob: -15.000102043151855
    9. ')))' → logprob: -15.625102043151855
    10. ')
' → logprob: -15.750102043151855

Token 457: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03803839161992073
    2. '<|end|>' → logprob: -3.538038492202759
    3. 'main' → logprob: -4.91303825378418
    4. '
' → logprob: -8.03803825378418
    5. ' if' → logprob: -8.03803825378418
    6. ')' → logprob: -9.66303825378418
    7. '```' → logprob: -10.03803825378418
    8. '<|end|>' → logprob: -10.66303825378418
    9. ' main' → logprob: -10.91303825378418
    10. '#' → logprob: -11.16303825378418

Token 458: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2262876182794571
    2. '__' → logprob: -1.601287603378296
    3. '_' → logprob: -7.101287841796875
    4. ' ' → logprob: -10.726287841796875
    5. '_name' → logprob: -11.226287841796875
    6. 'name' → logprob: -12.226287841796875
    7. ' ' → logprob: -12.726287841796875
    8. '___' → logprob: -12.726287841796875
    9. ' _' → logprob: -13.601287841796875
    10. 'Name' → logprob: -14.476287841796875

Token 459: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08319948613643646
    2. ' ==' → logprob: -2.7081995010375977
    3. '==' → logprob: -4.708199501037598
    4. '.__' → logprob: -6.458199501037598
    5. ' __' → logprob: -6.833199501037598
    6. '_' → logprob: -6.958199501037598
    7. '=="' → logprob: -9.208199501037598
    8. '.' → logprob: -9.708199501037598
    9. '[' → logprob: -9.833199501037598
    10. '=='' → logprob: -9.958199501037598

Token 460: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0035467357374727726
    2. '__.__' → logprob: -5.878546714782715
    3. '==' → logprob: -7.378546714782715
    4. '__.' → logprob: -10.128546714782715
    5. ' ==' → logprob: -11.003546714782715
    6. '.__' → logprob: -11.503546714782715
    7. '__["' → logprob: -11.753546714782715
    8. '__":
' → logprob: -11.878546714782715
    9. '__('' → logprob: -12.378546714782715
    10. '__':
' → logprob: -12.378546714782715

Token 461: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2016429305076599
    2. '==' → logprob: -1.9516429901123047
    3. '__' → logprob: -3.3266429901123047
    4. '=="' → logprob: -5.701642990112305
    5. '.__' → logprob: -7.576642990112305
    6. '=='' → logprob: -7.951642990112305
    7. '.' → logprob: -8.326642990112305
    8. '__.__' → logprob: -9.701642990112305
    9. '_' → logprob: -10.326642990112305
    10. '=' → logprob: -11.076642990112305

Token 462: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1603301465511322
    2. ''' → logprob: -1.9103301763534546
    3. '__' → logprob: -9.285329818725586
    4. ' "__' → logprob: -11.410329818725586
    5. ' '__' → logprob: -13.410329818725586
    6. '   ' → logprob: -16.160329818725586
    7. '"_' → logprob: -16.535329818725586
    8. ''"' → logprob: -16.785329818725586
    9. '"user' → logprob: -16.910329818725586
    10. ' ' → logprob: -17.035329818725586

Token 463: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.03521392197581e-05
    2. 'name' → logprob: -10.500030517578125
    3. '__' → logprob: -12.875030517578125
    4. '_main' → logprob: -16.000030517578125
    5. ' main' → logprob: -17.250030517578125
    6. 'ma' → logprob: -17.375030517578125
    7. 'm' → logprob: -17.375030517578125
    8. ''' → logprob: -19.875030517578125
    9. '__':
' → logprob: -20.250030517578125
    10. '	main' → logprob: -21.000030517578125

Token 464: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.12441819161176682
    2. '__' → logprob: -2.749418258666992
    3. ':' → logprob: -3.124418258666992
    4. '__:' → logprob: -5.124418258666992
    5. '':' → logprob: -6.499418258666992
    6. '():' → logprob: -7.374418258666992
    7. '_' → logprob: -8.124418258666992
    8. '():
' → logprob: -8.374418258666992
    9. '__":
' → logprob: -8.624418258666992
    10. '()' → logprob: -9.749418258666992

Token 465: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.38816821575164795
    2. ' main' → logprob: -1.263168215751648
    3. '   ' → logprob: -3.8881683349609375
    4. '	main' → logprob: -4.0131683349609375
    5. '_main' → logprob: -8.388168334960938
    6. '(main' → logprob: -10.138168334960938
    7. 'run' → logprob: -10.888168334960938
    8. ' ' → logprob: -11.013168334960938
    9. '    
' → logprob: -11.263168334960938
    10. '    ' → logprob: -11.388168334960938

Token 466: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.1472419600977446e-06
    2. ' main' → logprob: -13.750000953674316
    3. '   ' → logprob: -18.000001907348633
    4. '	main' → logprob: -18.250001907348633
    5. '.main' → logprob: -24.125001907348633
    6. 'm' → logprob: -24.125001907348633
    7. '(main' → logprob: -24.250001907348633
    8. '  ' → logprob: -24.375001907348633
    9. 'ma' → logprob: -24.875001907348633
    10. '_main' → logprob: -25.000001907348633

Token 467: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 465
Tokens correctement prédits (1ère position, stricte): 243
Tokens correctement prédits (1ère position, avec adaptation): 258
Tokens correctement prédits (top 10): 412
Précision stricte (1ère position): 52.26%
Précision adaptée (1ère position): 55.48%
Précision (top 10): 88.60%
================================================================================
